Search.setIndex({"docnames": ["_dynamo", "amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/cudagraph_trees", "compile/custom-backends", "compile/deep-dive", "compile/dynamic-shapes", "compile/fake-tensor", "compile/faq", "compile/fine_grained_apis", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/nn-module", "compile/performance-dashboard", "compile/technical-overview", "compile/torchfunc-and-torchcompile", "compile/transformations", "compile/troubleshooting", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["_dynamo.rst", "amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/cudagraph_trees.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/dynamic-shapes.rst", "compile/fake-tensor.rst", "compile/faq.rst", "compile/fine_grained_apis.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/technical-overview.rst", "compile/torchfunc-and-torchcompile.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["torch._dynamo", "Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deeper Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs to control fine-grained tracing", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Technical Overview", "torch.func interaction with torch.compile", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 82, 83, 84, 119, 150, 154, 195, 196, 206, 209, 221, 222, 223, 254, 259, 288, 289, 312, 320, 322, 334, 336, 339, 351, 443, 444, 445, 446, 447, 456, 484, 485, 490, 492, 493, 494, 495, 496, 497, 500, 501, 510, 512, 514, 520, 552, 562, 579, 580, 581, 583, 584, 585, 599, 600, 610, 613, 614, 676, 680, 682, 685, 689, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 732, 733, 740, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 798, 806, 807, 808, 809, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 850, 855, 857, 858, 870, 871, 872, 873, 874, 881, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 913, 916, 917, 920, 922, 925, 929, 930, 937, 939, 940, 943, 944, 946, 954, 955, 957, 962, 963, 964, 965, 966, 968, 969, 970, 973, 984, 986, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1015, 1018, 1019, 1020, 1026, 1027, 1029, 1030, 1031, 1035, 1036, 1037, 1043, 1044, 1045, 1050, 1052, 1053, 1057, 1060, 1061, 1062, 1066, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1113, 1115, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1132, 1134, 1135, 1136, 1142, 1146, 1152, 1154, 1164, 1176, 1186, 1187, 1189, 1190, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1203, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1264, 1266, 1269, 1278, 1279, 1283, 1286, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1302, 1303, 1313, 1316, 1317, 1318, 1319, 1321, 1329, 1333, 1337, 1338, 1339, 1340, 1341, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1374, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1406, 1408, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1427, 1428, 1431, 1433, 1436, 1437, 1449, 1452, 1454, 1457, 1460, 1466, 1467, 1468, 1469, 1472, 1473, 1474, 1475, 1485, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1520, 1522, 1524, 1531, 1537, 1539, 1544, 1545, 1546, 1556, 1558, 1560, 1570, 1576, 1577, 1585, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1643, 1645, 1646, 1648, 1649, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1685, 1686, 1688, 1690, 1692, 1694, 1695, 1696, 1700, 1704, 1706, 1713, 1717, 1722, 1726, 1728, 1735, 1742, 1744, 1745, 1746, 1748, 1749, 1750, 1752, 1755, 1757, 1758, 1776, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1801, 1802, 1803, 1806, 1807, 1809, 1810, 1816, 1818, 1822, 1824, 1828, 1830, 1838, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "modul": [0, 1, 2, 4, 6, 7, 9, 13, 16, 17, 19, 22, 26, 27, 28, 29, 31, 34, 38, 40, 42, 44, 45, 49, 51, 54, 57, 58, 62, 63, 65, 485, 676, 682, 685, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 734, 735, 736, 741, 742, 743, 752, 757, 758, 759, 760, 761, 784, 785, 786, 787, 788, 789, 793, 795, 796, 798, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 834, 835, 836, 850, 853, 854, 855, 856, 857, 858, 860, 909, 910, 917, 929, 949, 1008, 1118, 1127, 1128, 1130, 1164, 1187, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1204, 1205, 1206, 1260, 1283, 1293, 1329, 1333, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1374, 1376, 1384, 1385, 1386, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1422, 1423, 1431, 1432, 1437, 1449, 1454, 1460, 1464, 1511, 1512, 1585, 1592, 1601, 1602, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1641, 1642, 1643, 1645, 1677, 1738, 1782, 1849, 1856, 1857, 1863, 1868, 1870, 1872, 1874, 1876, 1877, 1880, 1884, 1885, 1886, 1889, 1892, 1894, 1895, 1897, 1899, 1900, 1903, 1905, 1906, 1909, 1910, 1912, 1915, 1916, 1917, 1921, 1924, 1925, 1926, 1927], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 82, 83, 84, 87, 88, 97, 150, 153, 154, 155, 170, 172, 175, 178, 179, 180, 190, 191, 195, 196, 206, 208, 209, 218, 223, 239, 253, 254, 266, 289, 296, 310, 312, 314, 318, 320, 322, 324, 327, 328, 329, 330, 331, 332, 334, 335, 337, 339, 340, 341, 342, 351, 392, 399, 401, 405, 446, 456, 469, 470, 479, 481, 484, 485, 490, 492, 493, 494, 495, 496, 497, 500, 501, 510, 512, 514, 517, 520, 521, 533, 539, 540, 541, 553, 556, 576, 577, 579, 580, 581, 583, 584, 585, 599, 600, 603, 610, 613, 614, 616, 620, 676, 677, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 797, 798, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 822, 823, 829, 834, 835, 836, 853, 854, 855, 857, 858, 861, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 913, 916, 917, 918, 919, 920, 922, 925, 927, 929, 930, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 974, 975, 977, 979, 982, 983, 984, 986, 990, 991, 994, 997, 998, 999, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1072, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1142, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1163, 1164, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1271, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1309, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1452, 1453, 1454, 1456, 1457, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1522, 1531, 1532, 1537, 1539, 1541, 1542, 1544, 1545, 1546, 1555, 1556, 1558, 1560, 1561, 1562, 1563, 1564, 1570, 1573, 1576, 1577, 1585, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1713, 1715, 1716, 1717, 1719, 1720, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1737, 1738, 1742, 1744, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1773, 1775, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1801, 1802, 1803, 1806, 1807, 1808, 1809, 1810, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1868, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "an": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 29, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 83, 88, 150, 154, 190, 221, 241, 253, 312, 314, 320, 322, 327, 334, 510, 512, 514, 533, 541, 556, 603, 610, 613, 676, 683, 684, 731, 737, 738, 739, 752, 756, 761, 775, 781, 783, 785, 788, 792, 811, 813, 819, 822, 850, 857, 858, 860, 874, 875, 876, 885, 887, 888, 889, 891, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 912, 913, 920, 936, 946, 949, 954, 955, 957, 963, 965, 966, 968, 975, 976, 977, 978, 979, 997, 998, 1005, 1006, 1008, 1020, 1022, 1032, 1036, 1037, 1047, 1060, 1062, 1064, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1102, 1105, 1113, 1115, 1118, 1119, 1122, 1123, 1124, 1126, 1128, 1130, 1131, 1134, 1142, 1150, 1151, 1152, 1186, 1187, 1189, 1192, 1193, 1196, 1199, 1200, 1202, 1204, 1205, 1206, 1207, 1218, 1219, 1224, 1225, 1230, 1232, 1234, 1237, 1238, 1242, 1245, 1247, 1250, 1251, 1258, 1260, 1261, 1278, 1280, 1283, 1289, 1306, 1311, 1320, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1381, 1385, 1386, 1389, 1390, 1391, 1393, 1403, 1404, 1405, 1406, 1408, 1409, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1438, 1440, 1449, 1452, 1454, 1455, 1456, 1460, 1465, 1467, 1468, 1469, 1472, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1495, 1496, 1497, 1498, 1499, 1500, 1505, 1511, 1512, 1514, 1515, 1516, 1520, 1531, 1538, 1539, 1541, 1542, 1544, 1545, 1546, 1570, 1574, 1589, 1591, 1592, 1595, 1601, 1605, 1606, 1607, 1608, 1611, 1612, 1613, 1620, 1637, 1644, 1646, 1648, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1706, 1711, 1712, 1713, 1732, 1734, 1738, 1746, 1749, 1758, 1764, 1784, 1787, 1788, 1792, 1795, 1803, 1807, 1821, 1822, 1838, 1839, 1840, 1842, 1847, 1848, 1849, 1850, 1855, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1868, 1869, 1870, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "earli": [0, 16, 21, 34, 38, 48, 69, 1360, 1361, 1362, 1366, 1857, 1907, 1908, 1925, 1926], "prototyp": [0, 34, 40, 676, 897, 899, 903, 904, 905, 1198, 1857, 1868, 1869, 1872, 1876, 1877, 1893, 1898, 1910, 1912, 1919, 1925, 1926], "subject": [0, 3, 4, 15, 22, 24, 29, 34, 40, 44, 45, 62, 69, 70, 861, 1570, 1601, 1862, 1875, 1876, 1882, 1887, 1900, 1901, 1905, 1906, 1907, 1908, 1912, 1919, 1924, 1925, 1926], "chang": [0, 1, 2, 3, 4, 8, 12, 15, 16, 18, 20, 21, 22, 23, 24, 28, 29, 34, 38, 40, 42, 44, 45, 46, 48, 56, 62, 63, 66, 67, 69, 70, 139, 221, 253, 320, 456, 493, 496, 514, 517, 552, 613, 676, 815, 873, 904, 905, 954, 955, 962, 963, 964, 973, 984, 986, 997, 998, 1005, 1006, 1008, 1050, 1098, 1118, 1136, 1142, 1163, 1186, 1189, 1199, 1200, 1219, 1230, 1232, 1233, 1234, 1237, 1250, 1290, 1361, 1364, 1382, 1391, 1421, 1452, 1473, 1485, 1520, 1544, 1545, 1546, 1570, 1592, 1593, 1601, 1603, 1604, 1610, 1613, 1614, 1643, 1647, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1682, 1685, 1686, 1688, 1690, 1692, 1706, 1746, 1750, 1787, 1798, 1801, 1802, 1803, 1827, 1844, 1845, 1856, 1857, 1859, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1893, 1896, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926], "allow_in_graph": [0, 18, 1857], "fn": [0, 2, 13, 18, 20, 21, 22, 27, 28, 48, 49, 50, 54, 59, 62, 70, 909, 910, 1120, 1126, 1130, 1189, 1190, 1201, 1206, 1421, 1849, 1859, 1861, 1862, 1866, 1874, 1882, 1892, 1912], "sourc": [0, 1, 2, 3, 4, 5, 6, 10, 17, 18, 19, 21, 28, 30, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 59, 62, 69, 70, 150, 196, 209, 311, 312, 320, 339, 350, 395, 400, 401, 414, 415, 451, 469, 485, 510, 512, 514, 517, 520, 543, 552, 553, 555, 582, 599, 602, 605, 606, 620, 676, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 869, 882, 883, 884, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 915, 916, 928, 930, 931, 935, 937, 939, 949, 950, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1062, 1066, 1113, 1115, 1131, 1137, 1138, 1141, 1160, 1161, 1162, 1164, 1165, 1170, 1175, 1176, 1177, 1187, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1260, 1261, 1281, 1290, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1485, 1486, 1490, 1492, 1493, 1494, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1517, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1539, 1541, 1542, 1543, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1563, 1565, 1566, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1582, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1696, 1713, 1738, 1743, 1746, 1747, 1748, 1749, 1750, 1752, 1755, 1756, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1782, 1788, 1795, 1803, 1808, 1811, 1812, 1813, 1814, 1815, 1823, 1842, 1856, 1859, 1860, 1861, 1866, 1868, 1869, 1870, 1871, 1872, 1874, 1876, 1877, 1880, 1889, 1891, 1892, 1896, 1900, 1901, 1903, 1905, 1906, 1907, 1911, 1912, 1913, 1918, 1921, 1923, 1924, 1925, 1926, 1927], "custom": [0, 1, 2, 4, 6, 16, 18, 19, 21, 25, 31, 32, 37, 40, 41, 42, 43, 44, 45, 50, 53, 54, 56, 62, 82, 83, 496, 789, 793, 810, 811, 812, 813, 834, 836, 855, 856, 857, 858, 895, 949, 964, 973, 1037, 1189, 1421, 1464, 1469, 1470, 1615, 1624, 1641, 1682, 1857, 1863, 1866, 1868, 1874, 1875, 1882, 1892, 1897, 1898, 1899, 1901, 1910, 1911, 1925], "which": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 37, 38, 41, 42, 44, 45, 46, 47, 48, 50, 55, 56, 57, 58, 59, 62, 66, 67, 69, 70, 88, 150, 288, 312, 314, 316, 318, 320, 334, 470, 484, 485, 496, 510, 512, 514, 533, 556, 600, 603, 613, 620, 680, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 756, 760, 777, 786, 787, 793, 795, 815, 819, 822, 834, 850, 853, 854, 855, 857, 872, 876, 881, 888, 889, 890, 891, 897, 898, 899, 900, 901, 902, 903, 909, 910, 913, 920, 933, 936, 939, 943, 949, 959, 960, 961, 962, 963, 968, 975, 976, 977, 978, 979, 990, 991, 992, 1019, 1021, 1026, 1027, 1038, 1040, 1045, 1049, 1050, 1051, 1052, 1053, 1062, 1078, 1083, 1086, 1090, 1093, 1096, 1101, 1102, 1103, 1104, 1105, 1110, 1113, 1118, 1119, 1122, 1123, 1124, 1125, 1126, 1130, 1131, 1134, 1151, 1163, 1174, 1180, 1186, 1187, 1189, 1190, 1192, 1198, 1199, 1200, 1204, 1221, 1224, 1225, 1234, 1238, 1240, 1241, 1244, 1245, 1249, 1251, 1252, 1254, 1257, 1258, 1260, 1266, 1282, 1289, 1294, 1311, 1317, 1320, 1321, 1327, 1328, 1329, 1331, 1332, 1333, 1335, 1336, 1339, 1340, 1341, 1344, 1350, 1351, 1353, 1354, 1357, 1358, 1365, 1372, 1373, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1393, 1407, 1411, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1426, 1427, 1449, 1452, 1454, 1456, 1460, 1469, 1470, 1502, 1519, 1520, 1522, 1532, 1539, 1557, 1558, 1576, 1577, 1585, 1592, 1601, 1608, 1610, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1643, 1645, 1648, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1696, 1708, 1722, 1726, 1728, 1729, 1733, 1735, 1742, 1746, 1755, 1757, 1775, 1780, 1783, 1784, 1786, 1787, 1795, 1798, 1822, 1827, 1828, 1831, 1832, 1833, 1834, 1838, 1839, 1841, 1842, 1849, 1856, 1859, 1861, 1862, 1864, 1868, 1869, 1870, 1871, 1872, 1874, 1876, 1877, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "function": [0, 1, 3, 4, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 29, 31, 32, 33, 34, 36, 37, 41, 42, 44, 45, 47, 48, 50, 54, 55, 57, 58, 62, 65, 67, 69, 83, 88, 119, 150, 195, 259, 288, 297, 320, 485, 490, 493, 514, 537, 552, 676, 685, 689, 690, 694, 695, 744, 753, 754, 756, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 793, 794, 796, 810, 811, 812, 813, 820, 822, 834, 837, 850, 853, 855, 857, 858, 859, 873, 874, 889, 890, 891, 892, 903, 904, 905, 909, 910, 913, 916, 918, 927, 929, 937, 939, 943, 946, 949, 954, 955, 962, 963, 964, 966, 968, 970, 973, 990, 991, 994, 999, 1000, 1005, 1006, 1008, 1009, 1010, 1011, 1013, 1018, 1019, 1026, 1027, 1029, 1030, 1031, 1035, 1045, 1050, 1052, 1053, 1060, 1062, 1066, 1078, 1079, 1081, 1101, 1105, 1108, 1109, 1110, 1113, 1115, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1134, 1135, 1142, 1146, 1147, 1148, 1150, 1152, 1160, 1161, 1162, 1164, 1176, 1186, 1187, 1188, 1189, 1190, 1192, 1194, 1195, 1199, 1200, 1201, 1202, 1204, 1206, 1208, 1209, 1210, 1212, 1217, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1261, 1264, 1266, 1275, 1278, 1279, 1283, 1286, 1289, 1291, 1293, 1294, 1295, 1313, 1316, 1317, 1333, 1337, 1343, 1344, 1346, 1347, 1348, 1355, 1359, 1363, 1366, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1387, 1389, 1390, 1391, 1392, 1407, 1410, 1411, 1413, 1420, 1421, 1426, 1427, 1429, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1466, 1468, 1469, 1470, 1472, 1474, 1476, 1477, 1478, 1593, 1597, 1598, 1601, 1608, 1609, 1613, 1624, 1634, 1635, 1636, 1638, 1641, 1642, 1643, 1646, 1648, 1649, 1653, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1671, 1673, 1674, 1675, 1676, 1678, 1681, 1682, 1684, 1687, 1688, 1689, 1694, 1695, 1696, 1700, 1706, 1713, 1717, 1722, 1735, 1744, 1745, 1746, 1749, 1752, 1758, 1766, 1770, 1771, 1776, 1779, 1781, 1782, 1783, 1784, 1786, 1792, 1799, 1803, 1809, 1810, 1818, 1822, 1824, 1828, 1838, 1839, 1840, 1842, 1846, 1847, 1848, 1849, 1850, 1855, 1856, 1857, 1858, 1863, 1866, 1868, 1871, 1872, 1874, 1876, 1880, 1883, 1885, 1886, 1887, 1889, 1892, 1893, 1896, 1898, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1919, 1921, 1923, 1924, 1925, 1926], "torchdynamo": [0, 9, 13, 15, 19, 20, 21, 25, 676, 949, 1654, 1857, 1868], "includ": [0, 1, 2, 3, 4, 5, 6, 8, 10, 13, 14, 16, 17, 20, 23, 24, 28, 31, 32, 37, 38, 40, 42, 54, 57, 58, 62, 70, 83, 320, 514, 579, 764, 765, 855, 857, 1090, 1092, 1150, 1187, 1189, 1190, 1218, 1297, 1298, 1334, 1335, 1336, 1342, 1344, 1358, 1367, 1375, 1408, 1417, 1418, 1419, 1421, 1427, 1465, 1466, 1467, 1468, 1471, 1487, 1488, 1489, 1504, 1517, 1537, 1601, 1635, 1636, 1638, 1771, 1831, 1832, 1833, 1834, 1856, 1859, 1861, 1862, 1869, 1870, 1872, 1874, 1882, 1884, 1885, 1889, 1892, 1893, 1898, 1900, 1906, 1907, 1912, 1914, 1921, 1924, 1927], "gener": [0, 2, 3, 4, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 27, 28, 31, 37, 38, 40, 46, 50, 51, 58, 62, 63, 64, 153, 154, 173, 257, 285, 376, 419, 452, 479, 604, 676, 905, 919, 994, 997, 1005, 1006, 1009, 1010, 1029, 1030, 1032, 1033, 1034, 1062, 1084, 1085, 1119, 1130, 1141, 1146, 1165, 1193, 1198, 1209, 1220, 1225, 1234, 1251, 1252, 1256, 1261, 1281, 1289, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1311, 1357, 1368, 1382, 1464, 1472, 1473, 1485, 1592, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1642, 1649, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1694, 1696, 1699, 1713, 1715, 1717, 1718, 1719, 1721, 1743, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1808, 1823, 1827, 1843, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1868, 1870, 1875, 1880, 1882, 1885, 1887, 1889, 1890, 1892, 1893, 1899, 1900, 1903, 1904, 1906, 1911, 1912, 1913, 1916, 1919, 1921, 1923, 1925, 1927], "graph": [0, 6, 9, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 40, 42, 46, 62, 82, 83, 139, 150, 221, 222, 676, 743, 788, 789, 811, 812, 813, 819, 822, 889, 895, 903, 949, 963, 998, 1003, 1008, 1119, 1189, 1192, 1193, 1198, 1200, 1204, 1601, 1656, 1658, 1663, 1664, 1857, 1862, 1868, 1870, 1878, 1881, 1886, 1887, 1890, 1893, 1894, 1900, 1904, 1908, 1909, 1910, 1912, 1913, 1914, 1916, 1921, 1926], "similar": [0, 8, 10, 15, 16, 17, 21, 23, 28, 37, 40, 46, 54, 62, 67, 69, 70, 490, 512, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 741, 742, 752, 760, 798, 873, 888, 930, 935, 948, 1108, 1109, 1189, 1355, 1356, 1368, 1381, 1384, 1385, 1386, 1421, 1469, 1502, 1634, 1648, 1649, 1677, 1700, 1728, 1735, 1784, 1818, 1824, 1840, 1861, 1862, 1874, 1875, 1877, 1882, 1884, 1885, 1887, 1888, 1890, 1896, 1900, 1904, 1905, 1907, 1912, 1913, 1916, 1917, 1922, 1928], "fx": [0, 9, 13, 14, 15, 16, 17, 20, 21, 25, 27, 28, 82, 743, 811, 812, 813, 814, 856, 1119, 1857, 1901, 1908, 1909], "wrap": [0, 1, 2, 13, 17, 21, 25, 28, 32, 37, 38, 40, 44, 50, 59, 62, 66, 67, 70, 259, 786, 787, 966, 1119, 1189, 1204, 1358, 1421, 1460, 1596, 1601, 1611, 1637, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1859, 1860, 1862, 1869, 1881, 1882, 1885, 1886, 1887, 1888, 1893, 1899, 1900, 1905, 1906, 1907, 1912, 1913, 1924, 1926, 1927], "my_custom_funct": [0, 70], "optim": [0, 1, 2, 3, 8, 9, 12, 13, 15, 17, 19, 21, 25, 28, 29, 31, 32, 38, 40, 41, 42, 46, 62, 70, 815, 904, 913, 949, 1062, 1128, 1189, 1193, 1198, 1200, 1204, 1205, 1244, 1261, 1339, 1340, 1341, 1357, 1364, 1384, 1385, 1386, 1421, 1424, 1425, 1426, 1427, 1453, 1460, 1468, 1570, 1592, 1601, 1608, 1613, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1696, 1857, 1859, 1861, 1870, 1876, 1880, 1884, 1885, 1886, 1887, 1889, 1890, 1893, 1895, 1900, 1906, 1907, 1916], "def": [0, 1, 2, 12, 13, 15, 17, 19, 20, 21, 22, 26, 27, 28, 37, 38, 40, 41, 42, 46, 48, 49, 50, 54, 55, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 397, 788, 789, 857, 858, 886, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 949, 1066, 1118, 1119, 1120, 1122, 1123, 1124, 1126, 1128, 1129, 1130, 1164, 1187, 1189, 1190, 1192, 1193, 1194, 1195, 1199, 1200, 1203, 1204, 1205, 1206, 1421, 1422, 1423, 1431, 1432, 1470, 1592, 1601, 1613, 1646, 1655, 1656, 1782, 1849, 1856, 1859, 1861, 1862, 1866, 1876, 1881, 1882, 1884, 1886, 1887, 1888, 1889, 1893, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1927], "x": [0, 1, 2, 4, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 29, 31, 37, 38, 40, 46, 48, 54, 62, 64, 65, 67, 68, 69, 70, 173, 253, 257, 285, 288, 310, 312, 314, 316, 320, 351, 376, 446, 481, 490, 496, 554, 556, 579, 603, 604, 613, 688, 754, 756, 766, 775, 776, 780, 781, 792, 795, 798, 816, 817, 857, 858, 874, 880, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 931, 932, 933, 936, 937, 949, 954, 957, 960, 961, 1005, 1006, 1045, 1052, 1056, 1057, 1062, 1066, 1076, 1077, 1078, 1079, 1081, 1082, 1087, 1088, 1090, 1092, 1096, 1097, 1099, 1102, 1103, 1104, 1112, 1118, 1120, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1142, 1159, 1163, 1164, 1176, 1194, 1195, 1199, 1200, 1203, 1204, 1205, 1206, 1210, 1220, 1233, 1234, 1238, 1241, 1245, 1249, 1251, 1254, 1255, 1256, 1257, 1258, 1261, 1266, 1267, 1268, 1276, 1279, 1282, 1283, 1290, 1315, 1316, 1320, 1321, 1327, 1328, 1337, 1338, 1339, 1340, 1341, 1343, 1355, 1357, 1363, 1369, 1370, 1371, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1407, 1410, 1411, 1412, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1436, 1438, 1439, 1440, 1441, 1448, 1450, 1451, 1452, 1453, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1469, 1470, 1473, 1494, 1518, 1520, 1524, 1525, 1531, 1535, 1539, 1550, 1555, 1560, 1564, 1566, 1571, 1572, 1573, 1577, 1578, 1580, 1581, 1582, 1589, 1592, 1609, 1611, 1613, 1634, 1635, 1636, 1637, 1638, 1643, 1646, 1647, 1648, 1655, 1658, 1661, 1682, 1696, 1697, 1708, 1710, 1724, 1727, 1728, 1730, 1731, 1733, 1734, 1738, 1742, 1752, 1780, 1784, 1798, 1801, 1802, 1803, 1809, 1810, 1816, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1840, 1841, 1843, 1844, 1845, 1847, 1848, 1849, 1852, 1856, 1859, 1860, 1861, 1862, 1863, 1874, 1875, 1876, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1899, 1900, 1904, 1907, 1912, 1916, 1917, 1919, 1921, 1922, 1924, 1925, 1926], "add": [0, 1, 2, 4, 8, 12, 13, 14, 15, 18, 27, 28, 32, 33, 37, 40, 42, 44, 54, 57, 62, 68, 69, 70, 82, 98, 289, 312, 510, 512, 682, 683, 684, 687, 743, 744, 753, 786, 789, 834, 855, 857, 858, 978, 1008, 1019, 1062, 1119, 1189, 1200, 1329, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402, 1421, 1423, 1427, 1428, 1432, 1435, 1522, 1563, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1799, 1856, 1858, 1859, 1860, 1861, 1862, 1866, 1870, 1872, 1875, 1877, 1881, 1883, 1884, 1887, 1888, 1891, 1892, 1893, 1900, 1901, 1902, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1925, 1926, 1927], "1": [0, 1, 2, 4, 12, 13, 14, 15, 17, 20, 21, 27, 28, 29, 31, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 57, 60, 62, 66, 67, 68, 69, 70, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 136, 151, 152, 173, 191, 205, 208, 225, 227, 228, 229, 241, 253, 257, 262, 285, 288, 310, 311, 312, 314, 316, 320, 351, 376, 400, 401, 443, 445, 446, 452, 469, 479, 481, 485, 490, 493, 496, 510, 512, 514, 533, 534, 538, 540, 550, 551, 552, 554, 556, 557, 558, 559, 560, 577, 579, 580, 581, 583, 584, 603, 604, 611, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 726, 727, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 747, 748, 749, 752, 753, 754, 756, 766, 768, 769, 770, 771, 774, 778, 779, 781, 792, 804, 805, 815, 816, 817, 818, 821, 823, 851, 857, 858, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 890, 893, 895, 896, 897, 898, 899, 900, 901, 902, 909, 910, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 950, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 974, 1005, 1006, 1021, 1025, 1032, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1062, 1065, 1066, 1067, 1068, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1159, 1160, 1163, 1164, 1166, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1193, 1199, 1200, 1204, 1205, 1208, 1209, 1210, 1212, 1213, 1214, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1234, 1235, 1236, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1306, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1463, 1464, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1487, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1522, 1524, 1526, 1527, 1528, 1529, 1530, 1538, 1540, 1544, 1545, 1546, 1552, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1564, 1568, 1569, 1570, 1571, 1572, 1574, 1576, 1577, 1578, 1580, 1585, 1586, 1587, 1588, 1589, 1592, 1601, 1608, 1609, 1613, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1699, 1700, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1755, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1775, 1776, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1857, 1858, 1860, 1861, 1862, 1863, 1866, 1869, 1870, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928], "return": [0, 1, 2, 3, 4, 6, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 59, 62, 63, 64, 66, 67, 68, 69, 70, 88, 119, 153, 155, 170, 172, 175, 178, 179, 180, 190, 191, 195, 196, 206, 208, 209, 216, 218, 219, 221, 232, 239, 241, 253, 259, 266, 288, 296, 310, 318, 322, 324, 325, 327, 328, 329, 330, 332, 336, 338, 340, 351, 376, 392, 433, 443, 444, 445, 446, 447, 456, 470, 471, 472, 473, 474, 476, 481, 485, 493, 494, 495, 510, 512, 521, 533, 539, 540, 552, 553, 554, 555, 556, 576, 577, 578, 579, 585, 599, 600, 603, 605, 609, 610, 613, 680, 688, 689, 691, 692, 693, 694, 695, 731, 762, 763, 766, 767, 771, 772, 773, 774, 777, 780, 787, 788, 789, 790, 810, 811, 812, 813, 832, 836, 837, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 918, 919, 920, 927, 928, 930, 933, 935, 937, 938, 939, 940, 941, 942, 943, 944, 946, 948, 949, 950, 954, 955, 957, 958, 959, 961, 962, 963, 965, 966, 968, 972, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1028, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1056, 1062, 1063, 1064, 1065, 1066, 1067, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1145, 1146, 1147, 1149, 1150, 1151, 1155, 1159, 1163, 1164, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1213, 1214, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1297, 1298, 1300, 1306, 1311, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1325, 1329, 1330, 1331, 1332, 1337, 1338, 1355, 1356, 1357, 1358, 1365, 1369, 1370, 1381, 1387, 1388, 1411, 1412, 1413, 1414, 1415, 1416, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1435, 1449, 1452, 1453, 1454, 1455, 1456, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1490, 1492, 1493, 1494, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1583, 1585, 1586, 1587, 1588, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1605, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1696, 1697, 1699, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1732, 1735, 1737, 1742, 1743, 1744, 1745, 1751, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1780, 1782, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1802, 1803, 1806, 1807, 1808, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1825, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1847, 1848, 1849, 1852, 1854, 1855, 1856, 1859, 1863, 1866, 1870, 1871, 1872, 1874, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "Will": [0, 11, 12, 23, 40, 62, 70, 1792, 1861, 1876, 1900], "captur": [0, 2, 12, 14, 15, 17, 21, 26, 28, 32, 70, 676, 963, 965, 997, 1003, 1008, 1192, 1663, 1664, 1859, 1863, 1868, 1887, 1888, 1891, 1900, 1904, 1907, 1926], "singl": [0, 3, 4, 6, 12, 15, 16, 17, 20, 21, 22, 25, 27, 28, 31, 38, 40, 42, 44, 45, 46, 48, 50, 56, 57, 62, 63, 65, 66, 67, 68, 69, 70, 253, 676, 691, 692, 762, 763, 764, 765, 768, 769, 770, 810, 890, 897, 898, 899, 900, 901, 902, 903, 918, 927, 931, 957, 961, 1005, 1008, 1118, 1120, 1121, 1124, 1126, 1130, 1146, 1147, 1151, 1174, 1188, 1189, 1204, 1205, 1208, 1266, 1290, 1302, 1303, 1327, 1328, 1331, 1332, 1335, 1336, 1338, 1349, 1350, 1351, 1353, 1354, 1357, 1358, 1369, 1370, 1376, 1389, 1390, 1393, 1415, 1416, 1421, 1429, 1433, 1434, 1449, 1460, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1517, 1544, 1545, 1546, 1588, 1594, 1596, 1599, 1600, 1601, 1605, 1606, 1607, 1643, 1644, 1663, 1664, 1666, 1671, 1677, 1682, 1703, 1729, 1795, 1801, 1802, 1839, 1840, 1842, 1844, 1845, 1849, 1857, 1859, 1861, 1862, 1869, 1870, 1874, 1876, 1877, 1882, 1884, 1885, 1887, 1888, 1890, 1893, 1895, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1913, 1914, 1916, 1919, 1922, 1923, 1926], "contain": [0, 1, 2, 3, 4, 6, 13, 16, 21, 24, 27, 28, 29, 31, 32, 37, 40, 41, 44, 45, 46, 48, 50, 51, 55, 58, 62, 69, 70, 83, 88, 150, 154, 191, 195, 208, 289, 310, 312, 314, 318, 320, 469, 481, 540, 599, 603, 682, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 756, 810, 833, 837, 873, 888, 889, 897, 898, 899, 900, 901, 902, 903, 913, 917, 918, 919, 927, 929, 933, 956, 957, 961, 964, 975, 976, 977, 978, 979, 1008, 1062, 1096, 1097, 1099, 1105, 1125, 1126, 1129, 1130, 1146, 1147, 1150, 1151, 1159, 1163, 1180, 1187, 1189, 1190, 1195, 1196, 1199, 1204, 1205, 1208, 1219, 1225, 1226, 1227, 1228, 1230, 1232, 1234, 1235, 1251, 1260, 1278, 1282, 1289, 1311, 1317, 1329, 1338, 1357, 1358, 1364, 1365, 1368, 1373, 1374, 1376, 1381, 1391, 1392, 1413, 1421, 1422, 1423, 1428, 1431, 1436, 1438, 1449, 1453, 1460, 1472, 1503, 1511, 1512, 1514, 1585, 1592, 1595, 1596, 1601, 1609, 1610, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1641, 1642, 1645, 1647, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1696, 1699, 1724, 1738, 1742, 1802, 1803, 1807, 1823, 1830, 1832, 1834, 1839, 1840, 1845, 1849, 1857, 1859, 1861, 1862, 1863, 1869, 1872, 1876, 1877, 1881, 1882, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1896, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1916, 1918, 1919, 1921, 1922, 1924, 1925, 1926, 1927], "disallow_in_graph": [0, 1857], "exclud": [0, 6, 10, 14, 38, 57, 70, 1151, 1365, 1512, 1560, 1658, 1831, 1832, 1833, 1834, 1891, 1904, 1913], "forc": [0, 1, 2, 12, 14, 31, 34, 62, 456, 876, 1001, 1192, 1203, 1207, 1757, 1856, 1859, 1862, 1881, 1885, 1921, 1924], "break": [0, 8, 12, 14, 15, 18, 19, 21, 23, 46, 65, 70, 676, 889, 949, 1189, 1234, 1421, 1735, 1755, 1857, 1863, 1868, 1886, 1903], "sub": [0, 27, 50, 62, 69, 558, 810, 857, 858, 1200, 1204, 1205, 1286, 1289, 1291, 1433, 1434, 1464, 1465, 1467, 1727, 1805, 1822, 1856, 1858, 1859, 1860, 1875, 1877, 1882, 1900, 1902, 1916, 1919], "give": [0, 1, 4, 5, 8, 10, 12, 15, 16, 18, 20, 22, 24, 28, 34, 37, 38, 42, 44, 56, 62, 70, 904, 905, 961, 1080, 1082, 1083, 1085, 1089, 1098, 1122, 1123, 1124, 1202, 1218, 1225, 1349, 1350, 1351, 1426, 1472, 1473, 1608, 1647, 1663, 1664, 1803, 1842, 1856, 1859, 1874, 1876, 1880, 1882, 1885, 1887, 1888, 1890, 1891, 1893, 1897, 1900, 1903, 1905, 1916, 1927], "two": [0, 1, 2, 4, 5, 6, 7, 9, 12, 13, 15, 16, 20, 28, 29, 31, 32, 34, 37, 38, 40, 41, 42, 44, 46, 48, 54, 55, 57, 58, 62, 66, 67, 70, 579, 580, 581, 583, 584, 603, 613, 676, 688, 690, 756, 789, 883, 886, 899, 904, 937, 939, 972, 1011, 1013, 1041, 1042, 1050, 1059, 1062, 1068, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1108, 1109, 1118, 1128, 1150, 1152, 1178, 1187, 1189, 1199, 1202, 1209, 1212, 1214, 1219, 1221, 1224, 1225, 1230, 1231, 1236, 1241, 1244, 1245, 1247, 1248, 1250, 1252, 1257, 1260, 1283, 1286, 1289, 1291, 1294, 1318, 1335, 1337, 1338, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1368, 1373, 1381, 1382, 1388, 1390, 1391, 1412, 1413, 1415, 1421, 1424, 1425, 1426, 1428, 1429, 1435, 1436, 1452, 1453, 1468, 1469, 1470, 1472, 1492, 1493, 1503, 1522, 1532, 1539, 1555, 1563, 1570, 1608, 1613, 1635, 1645, 1647, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1684, 1688, 1707, 1722, 1735, 1787, 1792, 1807, 1823, 1827, 1828, 1830, 1846, 1850, 1856, 1858, 1859, 1861, 1862, 1866, 1868, 1869, 1875, 1876, 1877, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1912, 1913, 1914, 1916, 1917, 1921, 1922, 1923, 1925, 1926], "each": [0, 1, 2, 3, 6, 10, 12, 14, 17, 18, 19, 20, 21, 23, 24, 27, 28, 31, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 55, 58, 59, 60, 62, 63, 65, 67, 68, 70, 83, 97, 119, 153, 154, 397, 401, 490, 510, 512, 514, 541, 603, 613, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 682, 689, 691, 692, 695, 731, 756, 788, 836, 837, 855, 857, 858, 861, 873, 882, 883, 884, 885, 887, 888, 889, 894, 903, 917, 920, 929, 933, 937, 938, 940, 943, 947, 949, 961, 974, 975, 979, 1008, 1011, 1013, 1019, 1021, 1025, 1028, 1034, 1039, 1040, 1041, 1042, 1045, 1046, 1057, 1060, 1062, 1079, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1103, 1104, 1106, 1111, 1115, 1120, 1121, 1125, 1129, 1130, 1131, 1142, 1148, 1150, 1151, 1152, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1189, 1204, 1205, 1210, 1242, 1260, 1261, 1276, 1278, 1286, 1288, 1289, 1290, 1291, 1294, 1296, 1302, 1303, 1311, 1317, 1319, 1329, 1334, 1337, 1338, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1373, 1374, 1376, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1401, 1402, 1406, 1408, 1412, 1413, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1438, 1449, 1452, 1453, 1455, 1460, 1463, 1469, 1470, 1472, 1490, 1492, 1493, 1498, 1499, 1500, 1503, 1504, 1506, 1507, 1508, 1511, 1512, 1513, 1517, 1520, 1530, 1532, 1555, 1556, 1558, 1560, 1563, 1570, 1583, 1592, 1597, 1598, 1601, 1634, 1635, 1637, 1647, 1648, 1649, 1655, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1699, 1703, 1704, 1707, 1714, 1722, 1727, 1728, 1733, 1737, 1742, 1755, 1766, 1772, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1806, 1807, 1822, 1824, 1825, 1828, 1839, 1840, 1843, 1849, 1850, 1856, 1861, 1862, 1868, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1925, 1926], "op": [0, 2, 5, 12, 13, 16, 17, 18, 19, 20, 21, 27, 28, 40, 70, 82, 150, 500, 520, 600, 753, 788, 789, 790, 819, 822, 850, 857, 858, 889, 895, 903, 939, 949, 969, 984, 986, 990, 991, 1005, 1006, 1031, 1035, 1037, 1119, 1139, 1190, 1202, 1204, 1205, 1266, 1437, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1694, 1753, 1830, 1857, 1858, 1862, 1866, 1868, 1869, 1870, 1872, 1875, 1876, 1884, 1885, 1886, 1887, 1895, 1904, 1906, 1907, 1908, 1909, 1910, 1918, 1920, 1922, 1926], "forbid_in_graph": [0, 1857], "assert": [0, 15, 27, 28, 37, 38, 46, 64, 66, 67, 68, 70, 620, 907, 909, 910, 1120, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1187, 1192, 1193, 1198, 1657, 1849, 1861, 1863, 1887, 1888, 1893, 1904, 1907, 1923], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 82, 88, 97, 150, 253, 318, 320, 334, 335, 338, 376, 401, 446, 469, 479, 484, 496, 510, 514, 540, 576, 585, 613, 676, 685, 686, 687, 693, 731, 752, 756, 757, 759, 760, 761, 775, 778, 779, 781, 782, 783, 788, 789, 790, 791, 792, 795, 810, 811, 812, 813, 815, 816, 817, 818, 821, 836, 850, 854, 855, 856, 857, 858, 861, 870, 871, 882, 883, 884, 886, 889, 895, 897, 898, 899, 900, 901, 902, 904, 905, 918, 927, 928, 930, 931, 933, 936, 942, 949, 951, 956, 957, 960, 961, 964, 965, 966, 968, 969, 971, 976, 988, 999, 1005, 1008, 1009, 1019, 1029, 1036, 1045, 1050, 1054, 1057, 1062, 1078, 1079, 1080, 1081, 1083, 1085, 1090, 1092, 1098, 1101, 1103, 1104, 1108, 1109, 1110, 1118, 1119, 1124, 1126, 1128, 1129, 1130, 1134, 1142, 1146, 1147, 1149, 1151, 1164, 1166, 1178, 1179, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1193, 1195, 1196, 1199, 1202, 1204, 1205, 1210, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1243, 1244, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1255, 1258, 1259, 1260, 1261, 1270, 1271, 1272, 1273, 1275, 1276, 1278, 1280, 1281, 1283, 1286, 1289, 1290, 1291, 1294, 1296, 1311, 1315, 1316, 1317, 1318, 1319, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1368, 1373, 1374, 1375, 1376, 1381, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1438, 1449, 1452, 1453, 1454, 1460, 1464, 1466, 1468, 1469, 1470, 1472, 1473, 1485, 1491, 1492, 1493, 1503, 1504, 1511, 1512, 1513, 1514, 1520, 1531, 1532, 1555, 1558, 1560, 1563, 1570, 1588, 1589, 1590, 1591, 1592, 1597, 1598, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1613, 1620, 1634, 1638, 1641, 1642, 1643, 1644, 1646, 1648, 1649, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1684, 1687, 1688, 1700, 1706, 1707, 1713, 1722, 1725, 1726, 1733, 1735, 1746, 1747, 1750, 1780, 1781, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1802, 1803, 1806, 1807, 1816, 1818, 1822, 1824, 1825, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1842, 1843, 1844, 1845, 1849, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928], "present": [0, 4, 10, 18, 23, 37, 40, 57, 62, 1187, 1278, 1329, 1391, 1431, 1634, 1657, 1803, 1856, 1871, 1874, 1875, 1876, 1881, 1882, 1885, 1887, 1890, 1893, 1900, 1904, 1913, 1916, 1919], "while": [0, 1, 3, 4, 6, 8, 9, 16, 17, 18, 20, 21, 28, 29, 31, 37, 38, 40, 41, 42, 46, 59, 62, 67, 69, 70, 691, 692, 731, 850, 880, 888, 966, 1037, 1119, 1151, 1189, 1192, 1204, 1205, 1261, 1317, 1329, 1345, 1382, 1384, 1385, 1386, 1391, 1421, 1427, 1439, 1452, 1460, 1464, 1539, 1601, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1648, 1742, 1863, 1868, 1869, 1876, 1877, 1881, 1882, 1885, 1888, 1889, 1890, 1893, 1895, 1897, 1900, 1903, 1905, 1907, 1910, 1912, 1914, 1916, 1917, 1920, 1921, 1922], "trace": [0, 1, 2, 13, 15, 16, 17, 19, 20, 21, 23, 26, 28, 32, 34, 37, 38, 40, 50, 72, 73, 74, 911, 912, 913, 949, 1062, 1192, 1200, 1201, 1205, 1261, 1302, 1303, 1304, 1659, 1857, 1860, 1861, 1862, 1864, 1882, 1885, 1886, 1898, 1902, 1904, 1921], "If": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 29, 31, 32, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 69, 70, 82, 83, 97, 150, 154, 195, 206, 209, 253, 314, 318, 320, 443, 444, 445, 446, 447, 456, 469, 479, 493, 496, 514, 517, 533, 541, 576, 577, 579, 580, 581, 583, 584, 599, 603, 613, 676, 682, 685, 686, 687, 689, 691, 692, 693, 695, 731, 752, 756, 760, 775, 777, 781, 790, 791, 813, 816, 817, 818, 821, 850, 854, 857, 861, 870, 871, 872, 873, 874, 875, 876, 885, 887, 888, 889, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 917, 918, 920, 927, 929, 930, 931, 933, 937, 939, 940, 941, 942, 943, 944, 951, 954, 955, 956, 960, 961, 962, 965, 966, 968, 970, 973, 975, 977, 979, 986, 997, 1003, 1008, 1009, 1029, 1032, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1105, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1142, 1146, 1147, 1149, 1150, 1151, 1152, 1163, 1166, 1180, 1186, 1189, 1192, 1193, 1194, 1196, 1198, 1200, 1201, 1204, 1205, 1208, 1209, 1210, 1214, 1218, 1219, 1224, 1225, 1227, 1228, 1230, 1231, 1232, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1249, 1251, 1252, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1271, 1275, 1276, 1278, 1280, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1306, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1374, 1375, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1406, 1408, 1412, 1413, 1414, 1415, 1416, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1435, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1452, 1453, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1476, 1477, 1478, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1520, 1522, 1524, 1531, 1532, 1537, 1539, 1541, 1542, 1544, 1545, 1546, 1555, 1556, 1557, 1560, 1563, 1564, 1570, 1576, 1577, 1588, 1589, 1601, 1602, 1605, 1606, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1646, 1647, 1648, 1652, 1653, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1695, 1700, 1704, 1706, 1707, 1711, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1727, 1728, 1733, 1735, 1738, 1742, 1744, 1746, 1749, 1750, 1755, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1780, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1801, 1802, 1803, 1806, 1807, 1821, 1822, 1824, 1825, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1839, 1840, 1842, 1843, 1844, 1845, 1849, 1854, 1855, 1856, 1859, 1862, 1864, 1866, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1927], "you": [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 40, 44, 45, 46, 48, 49, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 82, 83, 150, 253, 334, 446, 496, 676, 685, 730, 731, 744, 753, 777, 885, 886, 887, 888, 889, 894, 895, 897, 898, 899, 903, 931, 949, 963, 986, 997, 999, 1008, 1009, 1029, 1062, 1118, 1119, 1122, 1123, 1124, 1125, 1130, 1164, 1189, 1193, 1194, 1201, 1204, 1205, 1206, 1234, 1252, 1260, 1283, 1290, 1293, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1391, 1417, 1418, 1419, 1421, 1426, 1427, 1428, 1436, 1455, 1464, 1466, 1468, 1473, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1531, 1537, 1570, 1588, 1589, 1592, 1601, 1609, 1635, 1643, 1646, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1688, 1706, 1729, 1738, 1746, 1789, 1790, 1791, 1793, 1794, 1798, 1849, 1856, 1859, 1861, 1862, 1864, 1866, 1869, 1870, 1872, 1874, 1875, 1877, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1922, 1923, 1924, 1927], "want": [0, 1, 2, 8, 9, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 27, 31, 37, 40, 45, 46, 54, 62, 64, 65, 66, 67, 69, 70, 446, 493, 496, 777, 787, 834, 1001, 1118, 1119, 1201, 1204, 1205, 1290, 1369, 1370, 1473, 1515, 1516, 1531, 1589, 1601, 1602, 1643, 1646, 1663, 1664, 1677, 1738, 1856, 1866, 1869, 1881, 1882, 1884, 1885, 1887, 1888, 1890, 1893, 1900, 1903, 1904, 1907, 1916, 1921, 1922, 1925], "instead": [0, 1, 2, 4, 6, 9, 10, 12, 13, 15, 16, 17, 18, 21, 23, 27, 28, 31, 37, 38, 40, 42, 45, 46, 48, 54, 57, 58, 62, 65, 66, 67, 70, 221, 405, 456, 496, 510, 744, 753, 764, 765, 789, 813, 822, 876, 886, 897, 898, 899, 900, 903, 904, 933, 939, 1097, 1099, 1123, 1124, 1125, 1126, 1129, 1130, 1135, 1176, 1187, 1189, 1190, 1194, 1218, 1219, 1225, 1227, 1243, 1246, 1252, 1258, 1289, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1355, 1357, 1358, 1360, 1361, 1362, 1366, 1373, 1381, 1387, 1388, 1389, 1390, 1391, 1412, 1413, 1414, 1415, 1416, 1421, 1424, 1425, 1426, 1428, 1435, 1436, 1448, 1452, 1453, 1454, 1460, 1469, 1487, 1488, 1489, 1492, 1493, 1503, 1513, 1520, 1532, 1544, 1545, 1546, 1555, 1563, 1576, 1601, 1643, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1688, 1711, 1712, 1722, 1742, 1746, 1788, 1803, 1807, 1842, 1849, 1859, 1861, 1862, 1869, 1876, 1880, 1881, 1882, 1886, 1887, 1888, 1889, 1890, 1891, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1910, 1913, 1916, 1923, 1924, 1926, 1927], "us": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29, 31, 32, 33, 35, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 82, 83, 88, 97, 119, 150, 154, 191, 208, 318, 320, 334, 341, 342, 405, 433, 446, 456, 484, 485, 493, 496, 510, 514, 517, 540, 553, 579, 580, 581, 583, 584, 613, 676, 682, 685, 708, 709, 710, 711, 712, 713, 716, 725, 726, 727, 728, 729, 731, 744, 753, 756, 764, 765, 768, 769, 770, 775, 777, 781, 782, 783, 786, 789, 790, 791, 792, 795, 798, 803, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 827, 828, 829, 830, 833, 850, 854, 855, 857, 858, 861, 874, 875, 876, 885, 886, 887, 889, 890, 891, 892, 894, 895, 897, 898, 899, 900, 903, 904, 905, 909, 910, 913, 916, 917, 918, 919, 927, 929, 930, 937, 939, 941, 949, 954, 957, 959, 962, 963, 964, 965, 966, 968, 970, 971, 973, 976, 986, 987, 990, 991, 997, 1001, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1019, 1020, 1029, 1031, 1032, 1038, 1043, 1044, 1045, 1054, 1062, 1063, 1065, 1075, 1076, 1077, 1080, 1082, 1090, 1092, 1096, 1098, 1105, 1107, 1110, 1116, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1134, 1135, 1139, 1140, 1142, 1146, 1147, 1148, 1149, 1163, 1164, 1176, 1186, 1187, 1189, 1190, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1208, 1210, 1212, 1220, 1224, 1225, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1243, 1245, 1246, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1266, 1269, 1275, 1278, 1279, 1282, 1283, 1288, 1289, 1290, 1293, 1299, 1311, 1316, 1318, 1319, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1407, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1421, 1423, 1427, 1428, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1454, 1457, 1460, 1468, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1485, 1487, 1488, 1489, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1520, 1522, 1529, 1531, 1532, 1539, 1544, 1545, 1546, 1556, 1558, 1564, 1570, 1574, 1576, 1577, 1585, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1635, 1636, 1637, 1641, 1642, 1643, 1645, 1646, 1648, 1649, 1652, 1655, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1688, 1689, 1691, 1692, 1694, 1704, 1706, 1707, 1708, 1711, 1712, 1713, 1715, 1717, 1719, 1721, 1722, 1728, 1735, 1738, 1743, 1744, 1746, 1747, 1748, 1750, 1752, 1753, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1780, 1782, 1783, 1785, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1806, 1807, 1808, 1821, 1825, 1828, 1832, 1834, 1839, 1841, 1842, 1846, 1849, 1854, 1856, 1857, 1858, 1859, 1860, 1862, 1863, 1864, 1866, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1884, 1886, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927], "todo": [0, 12, 16, 23, 71, 76, 77, 78, 79, 80, 81, 82, 83, 822, 855, 857, 858, 1926], "voz": 0, "we": [0, 1, 2, 3, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 37, 38, 40, 42, 44, 45, 46, 47, 48, 57, 58, 60, 62, 63, 64, 65, 66, 67, 69, 70, 493, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 775, 781, 784, 785, 787, 789, 790, 834, 853, 855, 857, 858, 861, 889, 890, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 918, 927, 962, 1019, 1062, 1080, 1082, 1083, 1084, 1085, 1092, 1097, 1098, 1099, 1113, 1122, 1123, 1125, 1130, 1142, 1146, 1147, 1163, 1187, 1189, 1192, 1193, 1200, 1202, 1204, 1244, 1247, 1252, 1260, 1261, 1280, 1311, 1329, 1337, 1338, 1387, 1421, 1473, 1520, 1522, 1531, 1589, 1596, 1601, 1608, 1610, 1619, 1621, 1624, 1628, 1629, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1679, 1685, 1690, 1707, 1849, 1856, 1857, 1859, 1861, 1862, 1864, 1866, 1869, 1870, 1874, 1875, 1876, 1877, 1882, 1885, 1887, 1888, 1889, 1890, 1891, 1893, 1895, 1896, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1919, 1921, 1924, 1925, 1926], "now": [0, 1, 2, 12, 15, 16, 18, 20, 21, 26, 27, 28, 40, 45, 47, 54, 58, 59, 62, 67, 70, 221, 493, 896, 903, 977, 1005, 1026, 1027, 1113, 1136, 1186, 1187, 1193, 1204, 1238, 1418, 1437, 1473, 1592, 1613, 1624, 1666, 1747, 1798, 1803, 1859, 1869, 1875, 1876, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1893, 1894, 1900, 1904, 1907, 1913, 1914, 1916, 1924, 1927], "have": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 37, 40, 41, 42, 44, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 70, 88, 153, 154, 221, 222, 312, 314, 320, 334, 397, 401, 446, 456, 469, 484, 485, 500, 510, 512, 514, 517, 540, 613, 676, 685, 689, 691, 692, 693, 695, 811, 813, 837, 876, 885, 889, 897, 899, 909, 910, 918, 919, 927, 936, 937, 961, 968, 977, 978, 1008, 1019, 1053, 1061, 1068, 1082, 1092, 1097, 1099, 1113, 1118, 1119, 1130, 1131, 1132, 1146, 1147, 1150, 1151, 1163, 1164, 1186, 1188, 1189, 1192, 1193, 1196, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1210, 1211, 1220, 1224, 1225, 1241, 1248, 1249, 1252, 1254, 1260, 1269, 1271, 1276, 1283, 1286, 1288, 1289, 1290, 1291, 1293, 1294, 1311, 1316, 1317, 1319, 1321, 1329, 1333, 1337, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1364, 1365, 1369, 1370, 1375, 1380, 1384, 1385, 1386, 1413, 1421, 1424, 1425, 1426, 1427, 1428, 1468, 1470, 1502, 1511, 1512, 1515, 1516, 1520, 1537, 1555, 1557, 1560, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1605, 1606, 1608, 1610, 1613, 1637, 1641, 1646, 1648, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1704, 1730, 1731, 1745, 1758, 1781, 1784, 1788, 1789, 1790, 1791, 1793, 1794, 1801, 1802, 1803, 1806, 1807, 1818, 1822, 1828, 1830, 1842, 1844, 1845, 1847, 1849, 1851, 1856, 1859, 1860, 1861, 1862, 1864, 1866, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1927], "some": [0, 1, 2, 4, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 31, 36, 37, 38, 40, 42, 45, 46, 48, 50, 58, 59, 62, 65, 67, 68, 69, 70, 475, 493, 563, 685, 744, 949, 1015, 1019, 1022, 1062, 1083, 1085, 1093, 1094, 1095, 1110, 1119, 1130, 1164, 1186, 1187, 1189, 1190, 1199, 1202, 1204, 1234, 1252, 1258, 1283, 1290, 1293, 1329, 1333, 1337, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1381, 1384, 1385, 1386, 1387, 1388, 1391, 1412, 1413, 1421, 1424, 1425, 1426, 1428, 1435, 1436, 1452, 1453, 1469, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1532, 1537, 1555, 1558, 1563, 1570, 1592, 1601, 1602, 1603, 1604, 1608, 1641, 1676, 1682, 1688, 1706, 1726, 1750, 1757, 1771, 1807, 1849, 1856, 1859, 1860, 1861, 1862, 1863, 1866, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1881, 1882, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1921], "more": [0, 1, 2, 3, 4, 5, 9, 10, 13, 15, 16, 17, 18, 20, 21, 25, 28, 29, 31, 32, 33, 36, 37, 38, 40, 41, 46, 47, 48, 49, 53, 56, 57, 58, 59, 62, 65, 66, 67, 68, 70, 83, 150, 253, 254, 312, 320, 485, 490, 492, 495, 510, 512, 514, 541, 614, 676, 731, 767, 776, 780, 789, 850, 855, 856, 857, 869, 882, 883, 884, 886, 888, 889, 895, 897, 899, 903, 904, 905, 909, 910, 920, 928, 931, 933, 939, 940, 941, 942, 965, 966, 968, 970, 971, 987, 1006, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1026, 1027, 1028, 1032, 1040, 1045, 1051, 1060, 1062, 1066, 1078, 1079, 1081, 1083, 1102, 1103, 1104, 1105, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1137, 1138, 1142, 1151, 1152, 1164, 1170, 1174, 1176, 1177, 1189, 1202, 1205, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1258, 1261, 1264, 1267, 1269, 1279, 1280, 1302, 1303, 1306, 1317, 1329, 1333, 1338, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1364, 1365, 1366, 1382, 1391, 1417, 1418, 1419, 1421, 1427, 1433, 1434, 1435, 1436, 1448, 1460, 1468, 1485, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1509, 1511, 1512, 1520, 1523, 1524, 1525, 1526, 1531, 1535, 1539, 1540, 1550, 1557, 1564, 1565, 1566, 1568, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1588, 1589, 1590, 1591, 1592, 1601, 1602, 1608, 1610, 1611, 1646, 1647, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1694, 1705, 1706, 1732, 1738, 1742, 1752, 1782, 1783, 1807, 1828, 1830, 1842, 1849, 1850, 1856, 1857, 1858, 1859, 1861, 1862, 1868, 1869, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1880, 1882, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1896, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1913, 1914, 1916, 1919, 1920, 1921, 1922, 1923, 1924, 1927, 1928], "robust": [0, 4, 1261, 1874, 1893], "document": [0, 9, 10, 11, 13, 17, 21, 23, 27, 33, 37, 40, 62, 63, 70, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 869, 870, 871, 872, 934, 965, 966, 968, 1019, 1062, 1134, 1137, 1138, 1170, 1177, 1189, 1302, 1303, 1318, 1329, 1364, 1365, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1421, 1610, 1619, 1628, 1648, 1705, 1732, 1749, 1842, 1856, 1859, 1861, 1862, 1874, 1875, 1876, 1878, 1881, 1887, 1889, 1893, 1897, 1898, 1900, 1903, 1904, 1907, 1908, 1909, 1912, 1916, 1920, 1924], "would": [0, 3, 4, 6, 9, 10, 12, 13, 15, 16, 17, 20, 23, 27, 28, 29, 31, 37, 40, 46, 48, 50, 57, 58, 62, 64, 67, 70, 150, 443, 444, 445, 446, 447, 694, 756, 790, 850, 889, 893, 903, 939, 1063, 1065, 1083, 1123, 1124, 1187, 1189, 1190, 1194, 1196, 1204, 1205, 1302, 1303, 1334, 1335, 1336, 1337, 1338, 1373, 1387, 1391, 1414, 1415, 1416, 1421, 1431, 1436, 1520, 1531, 1592, 1601, 1602, 1634, 1646, 1677, 1715, 1719, 1721, 1732, 1742, 1821, 1822, 1827, 1859, 1861, 1862, 1875, 1876, 1877, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1898, 1900, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1916], "amiss": 0, "graph_break": [0, 12, 18, 1857], "mark_dynam": [0, 15, 1857], "t": [0, 1, 2, 3, 4, 5, 8, 9, 10, 15, 16, 18, 20, 21, 22, 28, 29, 37, 38, 40, 42, 46, 47, 50, 54, 56, 57, 63, 65, 67, 68, 69, 70, 150, 312, 314, 320, 456, 533, 567, 683, 684, 693, 756, 777, 781, 791, 819, 822, 873, 874, 875, 876, 885, 887, 889, 890, 893, 895, 898, 903, 940, 941, 942, 947, 961, 963, 966, 987, 1005, 1006, 1036, 1060, 1078, 1083, 1084, 1085, 1086, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1113, 1114, 1115, 1118, 1119, 1120, 1130, 1131, 1142, 1152, 1186, 1187, 1189, 1190, 1192, 1195, 1196, 1200, 1202, 1204, 1207, 1209, 1218, 1219, 1225, 1227, 1228, 1231, 1238, 1246, 1247, 1252, 1260, 1261, 1269, 1282, 1295, 1296, 1309, 1318, 1338, 1342, 1344, 1349, 1350, 1351, 1358, 1364, 1365, 1373, 1382, 1384, 1385, 1386, 1387, 1391, 1408, 1421, 1436, 1452, 1454, 1464, 1472, 1473, 1491, 1495, 1496, 1497, 1504, 1511, 1512, 1532, 1537, 1556, 1576, 1589, 1592, 1595, 1596, 1601, 1602, 1608, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1635, 1637, 1638, 1649, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1680, 1690, 1696, 1702, 1706, 1723, 1748, 1749, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1781, 1784, 1803, 1807, 1808, 1818, 1821, 1827, 1830, 1849, 1850, 1856, 1858, 1859, 1860, 1861, 1863, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1892, 1893, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1927], "index": [0, 4, 16, 28, 32, 37, 38, 42, 46, 55, 70, 191, 208, 280, 311, 312, 313, 314, 315, 316, 318, 320, 321, 469, 470, 509, 510, 511, 512, 513, 514, 515, 516, 691, 692, 813, 850, 873, 888, 933, 981, 984, 1041, 1042, 1082, 1122, 1123, 1124, 1128, 1130, 1131, 1160, 1161, 1162, 1163, 1187, 1205, 1210, 1218, 1236, 1254, 1268, 1276, 1278, 1282, 1286, 1289, 1290, 1291, 1294, 1311, 1317, 1320, 1321, 1329, 1344, 1357, 1364, 1365, 1422, 1423, 1428, 1431, 1432, 1470, 1472, 1511, 1512, 1557, 1619, 1621, 1628, 1629, 1634, 1647, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1691, 1692, 1707, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1776, 1786, 1787, 1789, 1790, 1791, 1793, 1794, 1803, 1817, 1838, 1841, 1842, 1849, 1857, 1858, 1859, 1860, 1862, 1869, 1874, 1875, 1876, 1877, 1882, 1885, 1886, 1888, 1891, 1897, 1902, 1914, 1916, 1919, 1920, 1921, 1922, 1923], "mark": [0, 17, 18, 42, 57, 69, 70, 822, 893, 894, 1302, 1303, 1601, 1658, 1859, 1861, 1882, 1886, 1887, 1893, 1904, 1906, 1913, 1922], "tensor": [0, 1, 3, 6, 8, 9, 12, 13, 14, 15, 17, 19, 20, 21, 22, 26, 27, 28, 31, 33, 34, 37, 38, 40, 41, 42, 44, 46, 47, 62, 65, 66, 67, 68, 69, 70, 88, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 716, 728, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 783, 784, 785, 786, 790, 794, 795, 796, 797, 798, 815, 816, 817, 818, 820, 821, 823, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 909, 910, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 975, 976, 977, 978, 979, 986, 994, 995, 1001, 1005, 1008, 1011, 1015, 1026, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1193, 1195, 1196, 1199, 1200, 1202, 1204, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1329, 1333, 1334, 1337, 1338, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1373, 1374, 1375, 1381, 1387, 1388, 1391, 1392, 1408, 1411, 1412, 1413, 1414, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1453, 1454, 1455, 1456, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1597, 1598, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1746, 1747, 1748, 1751, 1752, 1755, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1816, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1857, 1858, 1859, 1861, 1862, 1866, 1869, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1917, 1918, 1921, 1923, 1925, 1926, 1927], "dynam": [0, 1, 14, 17, 19, 22, 24, 25, 28, 31, 32, 37, 676, 725, 729, 756, 757, 758, 759, 760, 761, 790, 811, 822, 825, 840, 846, 847, 848, 849, 854, 855, 949, 964, 1196, 1202, 1204, 1260, 1608, 1857, 1861, 1862, 1863, 1880, 1885, 1893, 1896, 1900, 1903, 1904, 1908], "dim": [0, 15, 40, 45, 46, 67, 68, 70, 112, 114, 115, 116, 118, 134, 135, 136, 184, 204, 207, 210, 211, 212, 213, 214, 215, 229, 259, 263, 280, 311, 312, 313, 314, 315, 316, 320, 321, 353, 379, 391, 406, 408, 409, 410, 413, 427, 428, 429, 430, 434, 435, 451, 460, 468, 477, 488, 489, 491, 502, 503, 509, 510, 511, 512, 513, 514, 515, 516, 533, 534, 537, 538, 540, 543, 548, 549, 551, 556, 561, 569, 574, 579, 580, 581, 583, 584, 586, 601, 602, 605, 606, 607, 608, 611, 613, 689, 691, 692, 693, 695, 870, 871, 872, 899, 900, 902, 936, 943, 952, 960, 962, 977, 979, 1041, 1042, 1043, 1044, 1045, 1054, 1060, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1120, 1130, 1131, 1142, 1152, 1160, 1161, 1162, 1163, 1166, 1210, 1220, 1221, 1241, 1245, 1255, 1257, 1258, 1268, 1276, 1286, 1288, 1289, 1291, 1294, 1296, 1309, 1316, 1317, 1318, 1319, 1320, 1321, 1329, 1356, 1357, 1358, 1361, 1365, 1367, 1372, 1387, 1392, 1411, 1427, 1428, 1429, 1454, 1456, 1468, 1470, 1471, 1502, 1503, 1519, 1522, 1531, 1539, 1544, 1545, 1546, 1555, 1556, 1558, 1560, 1564, 1570, 1576, 1577, 1585, 1601, 1609, 1615, 1619, 1621, 1628, 1629, 1642, 1645, 1648, 1697, 1704, 1707, 1727, 1728, 1733, 1734, 1739, 1740, 1741, 1744, 1745, 1776, 1779, 1780, 1783, 1786, 1788, 1795, 1798, 1800, 1801, 1802, 1803, 1806, 1818, 1822, 1823, 1824, 1825, 1828, 1829, 1837, 1838, 1839, 1840, 1841, 1844, 1845, 1849, 1850, 1857, 1858, 1859, 1860, 1876, 1877, 1888, 1889, 1898, 1900, 1902, 1916, 1917, 1919, 1925], "note": [0, 2, 3, 4, 6, 9, 15, 17, 18, 20, 27, 28, 29, 31, 32, 34, 36, 37, 38, 40, 42, 44, 45, 46, 47, 48, 55, 57, 59, 62, 66, 68, 69, 70, 150, 221, 376, 496, 497, 510, 512, 514, 731, 737, 738, 739, 787, 789, 790, 791, 795, 837, 857, 861, 880, 889, 895, 897, 898, 899, 900, 901, 902, 903, 905, 939, 962, 1037, 1045, 1050, 1062, 1083, 1113, 1115, 1130, 1131, 1142, 1164, 1176, 1186, 1187, 1189, 1190, 1195, 1261, 1283, 1302, 1303, 1337, 1338, 1344, 1352, 1353, 1354, 1355, 1357, 1364, 1365, 1373, 1375, 1381, 1387, 1388, 1391, 1412, 1413, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1435, 1436, 1452, 1453, 1460, 1464, 1469, 1473, 1492, 1493, 1503, 1511, 1512, 1520, 1531, 1532, 1555, 1558, 1563, 1564, 1577, 1592, 1601, 1602, 1648, 1656, 1657, 1674, 1680, 1682, 1688, 1690, 1706, 1713, 1788, 1789, 1790, 1791, 1793, 1794, 1799, 1803, 1807, 1828, 1842, 1849, 1856, 1859, 1860, 1863, 1869, 1874, 1877, 1878, 1882, 1883, 1884, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1906, 1908, 1910, 1911, 1913, 1914, 1916, 1920, 1921, 1928], "state": [0, 1, 2, 3, 6, 10, 12, 14, 15, 16, 17, 23, 26, 37, 40, 42, 44, 46, 48, 50, 57, 60, 62, 70, 88, 744, 756, 832, 994, 995, 999, 1004, 1008, 1018, 1033, 1034, 1119, 1128, 1141, 1189, 1192, 1204, 1261, 1300, 1307, 1373, 1374, 1391, 1392, 1421, 1436, 1438, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1713, 1756, 1782, 1870, 1881, 1882, 1885, 1886, 1887, 1891, 1895, 1898, 1900, 1903, 1911, 1925], "The": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 27, 28, 29, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 66, 67, 68, 69, 72, 73, 74, 82, 83, 88, 150, 191, 196, 208, 209, 221, 254, 289, 310, 312, 314, 318, 320, 397, 399, 400, 401, 446, 456, 481, 484, 485, 490, 492, 495, 496, 510, 512, 514, 533, 540, 579, 599, 613, 614, 676, 680, 683, 684, 685, 686, 690, 691, 692, 693, 731, 744, 753, 756, 762, 763, 764, 765, 768, 769, 770, 775, 776, 778, 779, 781, 782, 783, 788, 789, 790, 791, 795, 798, 811, 813, 815, 816, 817, 818, 821, 823, 833, 834, 850, 855, 860, 873, 874, 876, 880, 881, 885, 886, 888, 889, 890, 891, 892, 897, 898, 900, 901, 902, 903, 904, 905, 909, 910, 912, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 934, 935, 941, 948, 951, 957, 961, 964, 965, 971, 978, 994, 1005, 1006, 1008, 1009, 1010, 1019, 1032, 1033, 1034, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1062, 1063, 1067, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1110, 1112, 1113, 1114, 1115, 1116, 1119, 1122, 1125, 1128, 1129, 1130, 1133, 1134, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1155, 1159, 1163, 1166, 1186, 1189, 1192, 1194, 1196, 1199, 1200, 1202, 1204, 1205, 1208, 1209, 1213, 1214, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1234, 1235, 1236, 1238, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1251, 1252, 1253, 1255, 1258, 1260, 1261, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1289, 1297, 1298, 1301, 1302, 1303, 1306, 1307, 1311, 1317, 1320, 1322, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1364, 1365, 1366, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1411, 1412, 1413, 1414, 1415, 1416, 1421, 1424, 1426, 1428, 1435, 1436, 1438, 1439, 1449, 1450, 1452, 1460, 1463, 1464, 1469, 1470, 1472, 1473, 1485, 1488, 1489, 1503, 1504, 1511, 1512, 1513, 1515, 1516, 1519, 1520, 1522, 1531, 1532, 1544, 1545, 1546, 1555, 1558, 1570, 1573, 1589, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1627, 1628, 1631, 1637, 1641, 1642, 1645, 1647, 1648, 1649, 1655, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1696, 1697, 1700, 1703, 1706, 1711, 1712, 1713, 1715, 1717, 1719, 1724, 1726, 1728, 1730, 1731, 1733, 1738, 1745, 1746, 1747, 1748, 1755, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1776, 1782, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1801, 1802, 1803, 1807, 1808, 1817, 1823, 1824, 1825, 1827, 1828, 1831, 1832, 1833, 1834, 1841, 1842, 1843, 1844, 1845, 1847, 1849, 1852, 1856, 1859, 1860, 1861, 1863, 1864, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1928], "behavior": [0, 2, 3, 8, 16, 18, 21, 28, 31, 36, 38, 40, 41, 42, 44, 46, 47, 50, 55, 58, 62, 66, 67, 69, 70, 253, 318, 469, 510, 540, 613, 683, 781, 789, 822, 874, 888, 931, 935, 948, 1057, 1062, 1065, 1107, 1114, 1115, 1119, 1189, 1199, 1202, 1204, 1234, 1241, 1245, 1258, 1259, 1260, 1275, 1283, 1290, 1358, 1361, 1382, 1391, 1421, 1436, 1460, 1473, 1485, 1520, 1588, 1589, 1592, 1593, 1601, 1602, 1647, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1700, 1706, 1722, 1729, 1771, 1807, 1828, 1842, 1856, 1859, 1863, 1864, 1866, 1868, 1875, 1877, 1883, 1885, 1887, 1888, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1908, 1909, 1912, 1917, 1920], "dimens": [0, 2, 15, 29, 37, 40, 45, 46, 62, 67, 68, 70, 218, 232, 253, 259, 312, 314, 316, 320, 431, 432, 470, 471, 472, 490, 510, 512, 514, 533, 539, 541, 542, 556, 579, 580, 581, 583, 584, 603, 613, 682, 688, 689, 691, 692, 693, 695, 731, 754, 775, 777, 781, 870, 871, 872, 873, 882, 883, 884, 888, 903, 928, 936, 939, 940, 941, 942, 943, 962, 977, 979, 1041, 1042, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1060, 1062, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1130, 1131, 1142, 1151, 1152, 1163, 1166, 1186, 1209, 1210, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1268, 1269, 1276, 1279, 1283, 1286, 1288, 1289, 1290, 1291, 1294, 1296, 1309, 1316, 1317, 1318, 1319, 1320, 1321, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1361, 1363, 1364, 1365, 1367, 1368, 1371, 1372, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1393, 1401, 1402, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1420, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1439, 1440, 1441, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1468, 1469, 1470, 1471, 1472, 1485, 1491, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1519, 1520, 1521, 1522, 1531, 1534, 1537, 1538, 1539, 1556, 1557, 1558, 1570, 1576, 1577, 1589, 1608, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1635, 1636, 1638, 1640, 1642, 1645, 1647, 1648, 1694, 1697, 1704, 1706, 1707, 1708, 1713, 1727, 1728, 1729, 1733, 1742, 1744, 1745, 1755, 1776, 1780, 1783, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1800, 1801, 1802, 1803, 1806, 1807, 1816, 1818, 1822, 1823, 1824, 1825, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1857, 1858, 1860, 1861, 1862, 1877, 1880, 1883, 1885, 1888, 1889, 1890, 1896, 1905, 1907, 1916, 1917, 1919, 1921, 1922], "govern": [0, 8, 9, 1857, 1907], "few": [0, 2, 8, 9, 15, 17, 20, 21, 22, 28, 38, 42, 48, 1062, 1119, 1365, 1601, 1856, 1862, 1882, 1885, 1887, 1889, 1891, 1896, 1899, 1900, 1903, 1905, 1907, 1910, 1920, 1922, 1924], "factor": [0, 1, 4, 17, 38, 46, 70, 685, 686, 687, 795, 815, 917, 940, 941, 942, 1231, 1232, 1233, 1236, 1238, 1278, 1279, 1280, 1359, 1382, 1409, 1433, 1434, 1561, 1562, 1570, 1674, 1675, 1676, 1678, 1679, 1681, 1683, 1684, 1685, 1686, 1687, 1690, 1691, 1692, 1706, 1764, 1785, 1807, 1880, 1881, 1907], "config": [0, 14, 15, 17, 19, 20, 21, 23, 28, 38, 62, 70, 788, 789, 790, 791, 855, 857, 949, 1886, 1899, 1910], "dynamic_shap": [0, 14, 15, 24, 1654], "true": [0, 1, 2, 3, 4, 6, 14, 15, 17, 19, 20, 21, 22, 23, 27, 28, 31, 37, 38, 40, 41, 42, 44, 45, 46, 48, 59, 62, 67, 68, 69, 70, 150, 196, 209, 259, 318, 320, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 350, 395, 399, 401, 446, 456, 458, 469, 475, 485, 492, 493, 501, 513, 514, 552, 563, 576, 577, 586, 590, 599, 605, 613, 676, 683, 688, 689, 690, 691, 692, 693, 695, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 742, 745, 750, 752, 756, 757, 760, 761, 764, 765, 775, 781, 782, 793, 810, 822, 855, 869, 871, 872, 876, 885, 888, 889, 890, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 909, 910, 916, 918, 921, 924, 926, 927, 933, 934, 940, 941, 942, 948, 949, 954, 965, 1003, 1057, 1066, 1067, 1068, 1084, 1085, 1091, 1092, 1115, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1129, 1130, 1131, 1133, 1145, 1146, 1147, 1150, 1151, 1162, 1164, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1193, 1194, 1195, 1198, 1204, 1205, 1206, 1208, 1210, 1213, 1218, 1219, 1230, 1231, 1232, 1235, 1236, 1237, 1238, 1241, 1243, 1245, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1258, 1260, 1261, 1270, 1271, 1272, 1273, 1276, 1277, 1278, 1280, 1282, 1286, 1288, 1289, 1290, 1291, 1294, 1311, 1316, 1319, 1322, 1325, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1369, 1370, 1373, 1374, 1375, 1376, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1430, 1435, 1436, 1437, 1438, 1452, 1453, 1460, 1464, 1466, 1467, 1468, 1469, 1470, 1473, 1474, 1485, 1487, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1520, 1522, 1524, 1530, 1531, 1532, 1544, 1545, 1546, 1555, 1563, 1570, 1589, 1590, 1592, 1601, 1602, 1604, 1605, 1608, 1609, 1612, 1613, 1614, 1626, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1696, 1704, 1706, 1707, 1711, 1712, 1713, 1730, 1731, 1738, 1741, 1742, 1750, 1751, 1752, 1755, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1780, 1782, 1784, 1801, 1802, 1803, 1806, 1807, 1821, 1825, 1830, 1839, 1840, 1842, 1843, 1844, 1845, 1849, 1852, 1856, 1858, 1860, 1861, 1862, 1869, 1871, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1927], "fals": [0, 1, 2, 4, 6, 12, 15, 17, 18, 19, 21, 23, 27, 28, 31, 37, 38, 40, 41, 42, 44, 45, 46, 48, 62, 65, 70, 112, 113, 114, 115, 116, 118, 134, 135, 136, 150, 181, 182, 183, 196, 209, 259, 300, 317, 318, 320, 327, 331, 334, 335, 337, 341, 342, 343, 350, 353, 391, 395, 406, 408, 409, 410, 413, 419, 427, 428, 429, 430, 443, 444, 445, 446, 447, 451, 456, 458, 468, 469, 477, 492, 493, 501, 514, 538, 551, 552, 561, 576, 590, 599, 605, 606, 611, 613, 676, 689, 690, 691, 692, 693, 695, 708, 709, 710, 711, 712, 713, 730, 731, 741, 742, 747, 748, 749, 751, 754, 756, 764, 765, 772, 774, 775, 776, 778, 779, 781, 793, 810, 815, 816, 817, 818, 820, 821, 822, 834, 835, 853, 854, 859, 861, 870, 871, 872, 876, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 913, 916, 918, 921, 924, 926, 927, 933, 934, 940, 941, 942, 948, 949, 954, 965, 1003, 1008, 1020, 1062, 1063, 1064, 1065, 1067, 1068, 1075, 1079, 1080, 1081, 1082, 1087, 1088, 1093, 1094, 1095, 1097, 1098, 1099, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1127, 1129, 1131, 1133, 1145, 1146, 1147, 1150, 1151, 1164, 1174, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1194, 1195, 1196, 1204, 1205, 1206, 1208, 1210, 1213, 1218, 1219, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1241, 1243, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1258, 1259, 1260, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1280, 1282, 1286, 1288, 1289, 1291, 1294, 1302, 1303, 1311, 1316, 1317, 1318, 1319, 1322, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1430, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1448, 1450, 1452, 1453, 1460, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1473, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1515, 1516, 1517, 1520, 1522, 1524, 1525, 1526, 1531, 1532, 1535, 1541, 1542, 1544, 1545, 1546, 1550, 1555, 1559, 1563, 1565, 1566, 1568, 1569, 1570, 1571, 1573, 1583, 1586, 1587, 1589, 1601, 1603, 1605, 1608, 1610, 1613, 1614, 1626, 1635, 1636, 1637, 1638, 1640, 1643, 1646, 1647, 1648, 1652, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1704, 1706, 1707, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1730, 1731, 1738, 1742, 1750, 1751, 1752, 1755, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1780, 1789, 1790, 1791, 1792, 1793, 1794, 1801, 1802, 1803, 1806, 1807, 1821, 1825, 1830, 1839, 1842, 1843, 1844, 1845, 1852, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1862, 1868, 1869, 1870, 1871, 1874, 1876, 1877, 1881, 1882, 1885, 1886, 1887, 1889, 1893, 1896, 1897, 1900, 1901, 1904, 1905, 1906, 1908, 1911, 1912, 1916, 1917, 1918, 1920, 1921, 1923, 1924, 1926, 1927], "must": [0, 1, 4, 6, 7, 10, 12, 13, 15, 18, 21, 27, 28, 31, 37, 40, 42, 44, 46, 47, 48, 55, 58, 59, 62, 65, 67, 69, 70, 88, 97, 139, 153, 154, 196, 259, 312, 314, 320, 397, 399, 401, 510, 540, 541, 562, 579, 580, 581, 583, 584, 613, 682, 683, 684, 685, 686, 687, 693, 744, 753, 768, 769, 770, 789, 811, 813, 855, 856, 874, 880, 885, 886, 887, 888, 890, 896, 898, 900, 901, 902, 904, 905, 917, 919, 921, 922, 923, 924, 925, 926, 929, 933, 936, 951, 961, 964, 965, 975, 976, 977, 979, 1005, 1006, 1008, 1050, 1052, 1053, 1054, 1056, 1059, 1060, 1062, 1083, 1084, 1085, 1090, 1092, 1093, 1094, 1095, 1096, 1103, 1104, 1113, 1115, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1142, 1151, 1152, 1155, 1166, 1186, 1189, 1199, 1204, 1211, 1214, 1243, 1244, 1245, 1246, 1252, 1254, 1255, 1258, 1261, 1279, 1281, 1282, 1283, 1289, 1296, 1311, 1317, 1320, 1321, 1325, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1364, 1365, 1368, 1375, 1376, 1382, 1414, 1421, 1424, 1427, 1452, 1458, 1473, 1493, 1502, 1504, 1512, 1531, 1544, 1545, 1546, 1564, 1601, 1624, 1634, 1635, 1641, 1643, 1648, 1656, 1686, 1688, 1695, 1696, 1699, 1700, 1703, 1711, 1712, 1733, 1742, 1745, 1754, 1770, 1781, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1808, 1818, 1822, 1823, 1827, 1832, 1834, 1838, 1842, 1846, 1847, 1849, 1850, 1852, 1859, 1860, 1861, 1862, 1869, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1891, 1895, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1923, 1927], "work": [0, 1, 2, 3, 4, 6, 8, 9, 10, 13, 15, 17, 18, 20, 21, 22, 23, 24, 28, 29, 31, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 57, 58, 59, 60, 62, 63, 67, 70, 119, 150, 351, 443, 444, 445, 446, 447, 484, 583, 584, 817, 857, 858, 889, 903, 963, 965, 966, 968, 997, 1008, 1009, 1029, 1063, 1065, 1082, 1102, 1103, 1104, 1119, 1189, 1193, 1200, 1201, 1224, 1225, 1252, 1253, 1261, 1358, 1418, 1421, 1437, 1454, 1558, 1576, 1601, 1658, 1688, 1715, 1719, 1721, 1747, 1753, 1818, 1821, 1856, 1859, 1862, 1863, 1874, 1875, 1876, 1877, 1880, 1882, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1895, 1898, 1899, 1900, 1904, 1905, 1907, 1910, 1912, 1913, 1922, 1924, 1927], "rais": [0, 1, 2, 6, 8, 16, 21, 26, 27, 28, 31, 40, 44, 46, 48, 50, 57, 62, 67, 69, 70, 88, 312, 314, 320, 693, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 930, 939, 967, 1032, 1105, 1110, 1187, 1189, 1194, 1196, 1204, 1206, 1218, 1220, 1228, 1229, 1232, 1236, 1237, 1242, 1249, 1250, 1254, 1255, 1260, 1281, 1306, 1421, 1570, 1613, 1614, 1619, 1621, 1624, 1634, 1657, 1658, 1744, 1842, 1856, 1863, 1869, 1874, 1882, 1885, 1887, 1889, 1896, 1900, 1904, 1905, 1911, 1912, 1923, 1927], "except": [0, 4, 6, 8, 10, 13, 16, 27, 31, 40, 41, 45, 46, 48, 49, 50, 54, 58, 62, 69, 70, 579, 583, 584, 613, 680, 689, 691, 692, 695, 756, 881, 904, 905, 936, 943, 947, 967, 977, 979, 1007, 1020, 1054, 1060, 1062, 1108, 1109, 1128, 1130, 1152, 1196, 1204, 1206, 1210, 1244, 1260, 1276, 1286, 1288, 1289, 1291, 1294, 1316, 1319, 1321, 1373, 1391, 1436, 1473, 1557, 1601, 1609, 1634, 1641, 1642, 1646, 1648, 1704, 1728, 1744, 1781, 1799, 1801, 1802, 1806, 1828, 1844, 1845, 1849, 1850, 1857, 1859, 1861, 1862, 1863, 1864, 1869, 1874, 1877, 1885, 1887, 1893, 1896, 1899, 1904, 1905, 1912, 1914, 1916, 1918, 1919, 1923], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 21, 23, 27, 28, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 62, 65, 67, 68, 69, 70, 82, 84, 97, 150, 191, 208, 259, 312, 320, 446, 485, 494, 495, 510, 512, 514, 540, 556, 576, 613, 682, 685, 731, 764, 765, 775, 781, 787, 789, 820, 836, 854, 861, 873, 876, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 917, 920, 929, 937, 940, 948, 949, 954, 955, 959, 965, 967, 977, 979, 1001, 1007, 1008, 1020, 1045, 1062, 1101, 1105, 1110, 1115, 1119, 1120, 1125, 1128, 1129, 1130, 1142, 1164, 1178, 1179, 1181, 1182, 1185, 1189, 1190, 1192, 1200, 1201, 1202, 1204, 1205, 1209, 1210, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1269, 1275, 1278, 1283, 1289, 1290, 1293, 1311, 1316, 1317, 1318, 1329, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1364, 1365, 1368, 1371, 1373, 1374, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1408, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1448, 1449, 1452, 1453, 1454, 1455, 1457, 1460, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1485, 1487, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1512, 1518, 1520, 1531, 1532, 1555, 1558, 1560, 1563, 1564, 1570, 1578, 1589, 1590, 1591, 1592, 1597, 1598, 1601, 1602, 1603, 1604, 1608, 1609, 1610, 1611, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1637, 1642, 1646, 1647, 1648, 1649, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1694, 1696, 1703, 1706, 1707, 1729, 1735, 1742, 1747, 1750, 1757, 1775, 1781, 1784, 1786, 1787, 1788, 1798, 1803, 1807, 1816, 1821, 1823, 1828, 1832, 1834, 1839, 1842, 1849, 1852, 1856, 1857, 1859, 1861, 1868, 1870, 1872, 1874, 1875, 1876, 1880, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1911, 1912, 1913, 1914, 1917, 1919, 1920, 1921, 1922, 1923], "conjunct": [0, 4, 37, 40, 44, 62, 820, 1485, 1520, 1601, 1910, 1912], "mark_dyam": 0, "eventu": [0, 2, 8, 15, 16, 57, 62, 1856, 1905], "support": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 40, 42, 44, 45, 46, 47, 49, 50, 57, 58, 62, 65, 66, 67, 69, 70, 82, 83, 310, 320, 456, 579, 613, 681, 682, 683, 685, 689, 691, 692, 695, 725, 734, 735, 736, 768, 769, 770, 775, 781, 782, 783, 788, 789, 790, 791, 797, 813, 829, 855, 857, 858, 888, 890, 895, 904, 905, 917, 918, 922, 925, 927, 929, 941, 942, 949, 956, 962, 964, 1005, 1006, 1008, 1025, 1057, 1059, 1062, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1107, 1108, 1109, 1110, 1112, 1113, 1114, 1125, 1129, 1146, 1147, 1159, 1186, 1193, 1200, 1204, 1208, 1209, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1279, 1283, 1287, 1292, 1293, 1310, 1349, 1350, 1351, 1352, 1353, 1354, 1361, 1364, 1365, 1368, 1388, 1408, 1426, 1427, 1460, 1470, 1472, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1512, 1514, 1520, 1531, 1537, 1570, 1588, 1589, 1591, 1601, 1648, 1653, 1655, 1663, 1664, 1666, 1694, 1706, 1725, 1726, 1747, 1750, 1751, 1781, 1784, 1787, 1804, 1807, 1830, 1832, 1834, 1846, 1847, 1848, 1855, 1856, 1857, 1859, 1861, 1863, 1864, 1866, 1870, 1872, 1874, 1878, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1893, 1895, 1896, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927], "2": [0, 1, 2, 4, 12, 13, 14, 15, 16, 17, 20, 21, 22, 27, 29, 31, 34, 35, 36, 37, 38, 40, 41, 44, 46, 47, 48, 50, 55, 57, 62, 66, 67, 68, 69, 70, 173, 191, 208, 225, 233, 253, 259, 312, 314, 316, 320, 334, 376, 400, 401, 443, 444, 445, 446, 447, 479, 485, 490, 493, 496, 510, 512, 514, 540, 554, 556, 576, 577, 579, 580, 581, 583, 584, 585, 603, 613, 676, 677, 679, 680, 681, 682, 685, 686, 687, 688, 689, 691, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 741, 742, 751, 754, 756, 758, 789, 792, 816, 861, 870, 871, 872, 873, 874, 875, 876, 880, 882, 883, 884, 886, 895, 897, 898, 899, 900, 901, 902, 909, 910, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 939, 940, 941, 942, 943, 947, 948, 951, 954, 955, 956, 957, 960, 961, 962, 1036, 1041, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1072, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1163, 1164, 1166, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1192, 1193, 1198, 1200, 1202, 1204, 1208, 1209, 1210, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1306, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1325, 1328, 1333, 1334, 1335, 1336, 1337, 1338, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1382, 1389, 1390, 1391, 1392, 1393, 1407, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1423, 1424, 1426, 1427, 1429, 1430, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1485, 1487, 1492, 1493, 1504, 1511, 1512, 1518, 1520, 1522, 1524, 1531, 1537, 1544, 1545, 1546, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1570, 1586, 1592, 1601, 1605, 1608, 1609, 1613, 1625, 1626, 1627, 1628, 1630, 1631, 1634, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1655, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1685, 1689, 1690, 1691, 1695, 1696, 1697, 1699, 1700, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1738, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1752, 1755, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1776, 1780, 1781, 1782, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1816, 1817, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1857, 1858, 1860, 1861, 1862, 1863, 1869, 1870, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1886, 1887, 1890, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1926], "fulli": [0, 15, 21, 29, 31, 37, 40, 44, 45, 66, 70, 676, 1025, 1189, 1417, 1418, 1419, 1421, 1858, 1862, 1868, 1887, 1904, 1907], "constrain": [0, 46, 1457, 1862, 1893], "doe": [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 20, 21, 26, 28, 31, 40, 44, 46, 48, 50, 54, 56, 57, 59, 62, 65, 66, 67, 69, 70, 150, 253, 334, 433, 456, 579, 613, 676, 691, 692, 744, 753, 756, 786, 790, 857, 876, 916, 929, 999, 1003, 1053, 1062, 1066, 1115, 1118, 1130, 1163, 1188, 1190, 1193, 1199, 1204, 1214, 1219, 1231, 1232, 1236, 1237, 1244, 1250, 1252, 1258, 1261, 1278, 1282, 1283, 1289, 1293, 1297, 1313, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1361, 1364, 1365, 1368, 1373, 1374, 1384, 1385, 1386, 1391, 1392, 1394, 1395, 1396, 1403, 1404, 1405, 1415, 1416, 1422, 1428, 1431, 1436, 1438, 1460, 1472, 1503, 1555, 1601, 1602, 1610, 1613, 1617, 1643, 1646, 1648, 1653, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1691, 1695, 1700, 1742, 1745, 1746, 1750, 1752, 1776, 1781, 1807, 1827, 1830, 1842, 1849, 1855, 1856, 1857, 1859, 1861, 1862, 1864, 1870, 1874, 1875, 1876, 1877, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1895, 1896, 1897, 1900, 1904, 1905, 1907, 1912, 1914, 1916, 1919, 1923], "allow": [0, 1, 2, 3, 4, 6, 8, 9, 10, 14, 15, 16, 17, 20, 21, 23, 27, 28, 29, 31, 32, 37, 38, 40, 41, 46, 48, 49, 57, 58, 62, 63, 65, 66, 67, 68, 70, 150, 510, 676, 731, 789, 793, 795, 820, 889, 891, 903, 904, 934, 948, 1005, 1008, 1032, 1062, 1123, 1189, 1194, 1206, 1244, 1266, 1306, 1320, 1334, 1335, 1336, 1357, 1358, 1375, 1414, 1415, 1416, 1421, 1424, 1427, 1449, 1464, 1601, 1606, 1647, 1655, 1659, 1675, 1784, 1842, 1856, 1861, 1862, 1869, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1916, 1919, 1920, 1921, 1923], "than": [0, 1, 4, 5, 6, 7, 9, 10, 12, 13, 16, 17, 20, 23, 28, 29, 31, 37, 38, 40, 41, 42, 46, 47, 48, 50, 54, 57, 58, 59, 62, 67, 70, 150, 253, 496, 541, 613, 676, 689, 695, 775, 781, 889, 898, 899, 913, 920, 931, 938, 939, 943, 944, 977, 1015, 1019, 1032, 1050, 1051, 1102, 1103, 1104, 1106, 1110, 1115, 1126, 1133, 1145, 1149, 1163, 1174, 1186, 1187, 1190, 1200, 1209, 1210, 1213, 1218, 1219, 1225, 1229, 1234, 1242, 1243, 1245, 1246, 1249, 1254, 1264, 1277, 1280, 1286, 1289, 1291, 1294, 1306, 1311, 1321, 1337, 1338, 1349, 1350, 1351, 1358, 1364, 1365, 1382, 1413, 1427, 1435, 1452, 1458, 1468, 1469, 1470, 1485, 1495, 1496, 1497, 1511, 1512, 1520, 1531, 1557, 1570, 1588, 1589, 1592, 1601, 1608, 1609, 1610, 1611, 1637, 1642, 1648, 1663, 1664, 1688, 1690, 1704, 1705, 1726, 1727, 1755, 1788, 1789, 1790, 1791, 1793, 1794, 1824, 1832, 1834, 1842, 1856, 1858, 1859, 1861, 1862, 1864, 1876, 1877, 1878, 1880, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1893, 1895, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1907, 1908, 1912, 1916, 1917, 1919, 1921, 1922, 1923], "valu": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 17, 21, 27, 28, 29, 31, 34, 37, 38, 41, 42, 44, 46, 48, 49, 51, 54, 55, 57, 58, 62, 64, 67, 69, 70, 88, 101, 102, 103, 104, 119, 150, 154, 221, 234, 235, 236, 237, 253, 258, 259, 271, 272, 298, 310, 312, 314, 315, 316, 317, 318, 320, 322, 325, 351, 398, 399, 417, 418, 420, 421, 469, 479, 481, 510, 512, 514, 533, 540, 556, 579, 580, 581, 583, 584, 595, 596, 676, 677, 680, 683, 684, 687, 691, 692, 693, 731, 752, 760, 766, 767, 775, 780, 781, 783, 789, 791, 792, 795, 798, 815, 816, 817, 818, 821, 822, 823, 850, 855, 861, 870, 871, 872, 876, 881, 885, 887, 889, 891, 892, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 918, 919, 920, 927, 933, 937, 942, 944, 956, 957, 960, 966, 996, 1005, 1006, 1019, 1032, 1041, 1042, 1045, 1053, 1054, 1067, 1076, 1077, 1079, 1081, 1083, 1084, 1085, 1090, 1092, 1093, 1094, 1095, 1096, 1105, 1110, 1116, 1118, 1119, 1120, 1121, 1125, 1126, 1128, 1129, 1131, 1133, 1137, 1138, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1159, 1174, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1189, 1190, 1192, 1195, 1196, 1204, 1207, 1209, 1210, 1213, 1217, 1218, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1231, 1232, 1233, 1234, 1238, 1241, 1243, 1245, 1246, 1248, 1252, 1253, 1258, 1259, 1260, 1261, 1264, 1269, 1275, 1277, 1278, 1281, 1286, 1288, 1289, 1291, 1294, 1306, 1309, 1311, 1315, 1316, 1317, 1318, 1321, 1322, 1325, 1329, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1363, 1364, 1365, 1366, 1368, 1375, 1376, 1377, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1406, 1407, 1408, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1449, 1452, 1454, 1455, 1456, 1457, 1458, 1460, 1463, 1464, 1466, 1468, 1469, 1470, 1472, 1473, 1492, 1493, 1495, 1496, 1497, 1502, 1503, 1512, 1513, 1517, 1520, 1522, 1531, 1532, 1533, 1544, 1545, 1546, 1555, 1556, 1557, 1558, 1560, 1563, 1570, 1583, 1584, 1589, 1591, 1592, 1594, 1596, 1599, 1600, 1601, 1606, 1608, 1609, 1610, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1634, 1637, 1638, 1641, 1643, 1647, 1648, 1652, 1653, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1682, 1688, 1696, 1700, 1703, 1707, 1709, 1710, 1722, 1724, 1726, 1727, 1728, 1733, 1734, 1735, 1742, 1745, 1755, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1776, 1780, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1807, 1808, 1818, 1822, 1825, 1828, 1831, 1832, 1833, 1834, 1836, 1839, 1840, 1841, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1863, 1869, 1871, 1872, 1874, 1877, 1880, 1881, 1882, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1893, 1897, 1898, 1900, 1902, 1903, 1904, 1906, 1907, 1910, 1911, 1912, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926], "both": [0, 2, 3, 4, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 28, 31, 37, 38, 40, 41, 42, 45, 46, 50, 55, 56, 57, 58, 62, 69, 70, 97, 338, 725, 764, 765, 768, 769, 770, 789, 847, 888, 892, 898, 899, 900, 901, 902, 917, 961, 986, 1057, 1078, 1108, 1109, 1110, 1118, 1132, 1134, 1142, 1149, 1166, 1179, 1180, 1186, 1189, 1202, 1210, 1211, 1259, 1275, 1283, 1289, 1302, 1303, 1334, 1335, 1339, 1340, 1341, 1346, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1376, 1382, 1384, 1385, 1386, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1414, 1415, 1416, 1421, 1427, 1460, 1472, 1473, 1476, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1544, 1545, 1546, 1570, 1601, 1613, 1643, 1663, 1664, 1688, 1711, 1712, 1781, 1782, 1784, 1803, 1807, 1827, 1828, 1859, 1861, 1862, 1869, 1875, 1876, 1878, 1881, 1882, 1883, 1887, 1888, 1890, 1893, 1896, 1897, 1898, 1900, 1904, 1905, 1907, 1910, 1912, 1914, 1916, 1917, 1923, 1925, 1926], "eager": [0, 2, 9, 12, 15, 17, 18, 20, 24, 28, 1037, 1187, 1190, 1200, 1754, 1862, 1885, 1906, 1908, 1910], "compil": [0, 12, 13, 14, 15, 16, 18, 20, 23, 24, 25, 31, 32, 62, 63, 70, 676, 964, 989, 993, 1005, 1006, 1119, 1187, 1189, 1190, 1193, 1194, 1200, 1201, 1202, 1204, 1205, 1206, 1421, 1858, 1859, 1861, 1862, 1863, 1864, 1868, 1881, 1884, 1886, 1892, 1899, 1900, 1924], "mode": [0, 5, 9, 14, 15, 16, 17, 18, 19, 20, 22, 28, 37, 38, 40, 42, 46, 57, 59, 67, 68, 70, 221, 222, 742, 743, 768, 769, 770, 775, 781, 782, 783, 811, 813, 819, 822, 855, 856, 885, 887, 890, 891, 892, 897, 898, 899, 900, 904, 916, 949, 963, 996, 1036, 1037, 1066, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1119, 1122, 1123, 1124, 1125, 1128, 1129, 1137, 1164, 1172, 1173, 1187, 1189, 1190, 1193, 1204, 1206, 1247, 1260, 1290, 1302, 1303, 1339, 1340, 1341, 1349, 1350, 1351, 1365, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1437, 1460, 1473, 1474, 1495, 1496, 1497, 1512, 1520, 1531, 1558, 1589, 1590, 1591, 1602, 1609, 1613, 1646, 1682, 1690, 1706, 1749, 1751, 1752, 1842, 1857, 1860, 1870, 1875, 1880, 1885, 1886, 1888, 1889, 1893, 1902, 1906, 1908, 1909, 1910, 1912, 1924, 1927], "export": [0, 15, 22, 27, 32, 34, 40, 47, 60, 87, 912, 965, 1192, 1194, 1200, 1206, 1635, 1636, 1654, 1655, 1656, 1658, 1659, 1857, 1859, 1861, 1862, 1887, 1901, 1902, 1906, 1907, 1912], "error": [0, 1, 2, 6, 9, 12, 16, 20, 26, 31, 33, 34, 37, 38, 40, 41, 43, 46, 55, 57, 58, 62, 65, 67, 69, 70, 82, 83, 190, 221, 312, 314, 320, 322, 327, 541, 552, 610, 613, 676, 815, 861, 874, 876, 895, 897, 898, 899, 900, 901, 902, 903, 973, 1008, 1019, 1032, 1036, 1060, 1118, 1122, 1123, 1125, 1130, 1152, 1189, 1194, 1203, 1218, 1219, 1228, 1230, 1232, 1235, 1236, 1237, 1247, 1250, 1260, 1278, 1306, 1311, 1337, 1338, 1371, 1382, 1388, 1412, 1421, 1450, 1452, 1518, 1529, 1551, 1570, 1573, 1574, 1601, 1603, 1604, 1605, 1643, 1648, 1658, 1659, 1702, 1742, 1749, 1798, 1803, 1842, 1849, 1850, 1856, 1857, 1859, 1861, 1862, 1868, 1869, 1874, 1875, 1876, 1877, 1881, 1882, 1885, 1887, 1888, 1890, 1891, 1897, 1900, 1904, 1910, 1912, 1917, 1922, 1923, 1925, 1926], "3": [0, 1, 2, 4, 5, 7, 10, 12, 14, 17, 20, 21, 24, 26, 27, 28, 29, 34, 35, 37, 38, 40, 42, 44, 46, 47, 48, 50, 55, 57, 62, 64, 66, 67, 68, 69, 70, 191, 208, 253, 259, 288, 312, 314, 316, 320, 400, 401, 443, 444, 445, 446, 447, 469, 485, 490, 493, 496, 510, 512, 514, 533, 540, 554, 556, 577, 579, 580, 581, 583, 584, 603, 613, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 742, 744, 753, 756, 757, 758, 759, 761, 768, 769, 770, 781, 789, 820, 857, 858, 861, 871, 872, 874, 875, 876, 883, 884, 897, 898, 899, 900, 901, 902, 917, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 935, 936, 937, 939, 940, 941, 942, 943, 947, 948, 951, 954, 955, 960, 961, 962, 1005, 1006, 1008, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1075, 1078, 1083, 1086, 1090, 1096, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1120, 1125, 1126, 1128, 1130, 1131, 1132, 1133, 1142, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1163, 1164, 1166, 1174, 1176, 1178, 1180, 1189, 1193, 1195, 1198, 1200, 1204, 1205, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1220, 1221, 1222, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1266, 1269, 1271, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1295, 1296, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1319, 1320, 1321, 1322, 1334, 1335, 1336, 1337, 1338, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1357, 1364, 1365, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1378, 1379, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1426, 1428, 1433, 1434, 1436, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1455, 1456, 1460, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1487, 1492, 1493, 1496, 1497, 1499, 1500, 1503, 1511, 1512, 1515, 1516, 1518, 1520, 1524, 1525, 1531, 1539, 1555, 1557, 1558, 1561, 1562, 1568, 1569, 1576, 1577, 1589, 1601, 1609, 1623, 1625, 1627, 1628, 1629, 1630, 1634, 1636, 1637, 1638, 1639, 1642, 1647, 1648, 1649, 1651, 1652, 1653, 1655, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1685, 1688, 1689, 1691, 1695, 1697, 1699, 1703, 1704, 1706, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1719, 1721, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734, 1735, 1738, 1742, 1746, 1747, 1748, 1755, 1758, 1760, 1762, 1764, 1765, 1766, 1770, 1771, 1772, 1780, 1782, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1806, 1807, 1809, 1810, 1816, 1817, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1849, 1850, 1851, 1852, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1869, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1890, 1893, 1894, 1898, 1899, 1900, 1903, 1904, 1907, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924], "partial": [0, 20, 23, 46, 48, 57, 62, 65, 70, 837, 1008, 1052, 1129, 1142, 1235, 1236, 1237, 1279, 1417, 1418, 1419, 1547, 1548, 1549, 1601, 1620, 1787, 1862, 1863, 1876, 1882, 1887, 1890, 1900, 1914, 1923], "least": [0, 2, 6, 7, 9, 17, 28, 38, 42, 46, 56, 57, 62, 259, 401, 693, 920, 1050, 1052, 1053, 1062, 1103, 1104, 1142, 1150, 1151, 1186, 1211, 1234, 1261, 1283, 1315, 1329, 1601, 1635, 1856, 1862, 1876, 1880, 1882, 1883, 1885, 1889, 1905, 1908, 1914, 1916, 1917, 1918, 1923], "full": [0, 4, 8, 9, 14, 17, 19, 21, 22, 28, 32, 37, 38, 40, 44, 46, 57, 60, 62, 63, 67, 70, 510, 896, 918, 927, 949, 1090, 1091, 1092, 1096, 1097, 1099, 1117, 1129, 1130, 1146, 1147, 1193, 1226, 1227, 1234, 1235, 1236, 1247, 1252, 1253, 1261, 1278, 1338, 1344, 1375, 1435, 1464, 1495, 1496, 1497, 1504, 1517, 1563, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1755, 1807, 1808, 1849, 1856, 1858, 1859, 1860, 1861, 1862, 1864, 1876, 1881, 1885, 1886, 1887, 1890, 1893, 1896, 1897, 1902, 1904, 1907, 1910, 1913, 1920, 1923], "unbound": 0, "rang": [0, 1, 2, 4, 13, 15, 21, 28, 37, 40, 41, 44, 46, 57, 58, 60, 66, 70, 88, 300, 479, 680, 757, 759, 761, 791, 815, 816, 817, 818, 819, 821, 822, 823, 881, 919, 944, 1023, 1024, 1032, 1062, 1112, 1128, 1149, 1150, 1151, 1255, 1266, 1281, 1290, 1306, 1318, 1329, 1357, 1367, 1369, 1370, 1374, 1380, 1392, 1411, 1423, 1428, 1432, 1438, 1454, 1455, 1456, 1460, 1515, 1516, 1520, 1576, 1601, 1606, 1678, 1679, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1707, 1786, 1841, 1859, 1860, 1862, 1882, 1884, 1885, 1889, 1893, 1895, 1896, 1900, 1902, 1903, 1906, 1907, 1910, 1911, 1917, 1919, 1921, 1922, 1923, 1924], "shape": [0, 2, 9, 14, 17, 19, 22, 27, 28, 29, 38, 40, 46, 62, 64, 66, 68, 70, 97, 171, 191, 208, 218, 399, 401, 443, 445, 447, 469, 494, 495, 510, 512, 514, 540, 562, 613, 676, 681, 683, 684, 693, 731, 741, 742, 752, 754, 756, 760, 762, 763, 764, 765, 768, 769, 770, 777, 792, 874, 880, 894, 898, 900, 901, 902, 913, 919, 920, 922, 925, 930, 932, 936, 937, 949, 956, 978, 1052, 1053, 1054, 1056, 1057, 1062, 1063, 1065, 1067, 1082, 1083, 1084, 1085, 1093, 1094, 1095, 1101, 1107, 1108, 1109, 1110, 1116, 1123, 1124, 1128, 1129, 1130, 1131, 1133, 1145, 1150, 1151, 1155, 1163, 1166, 1180, 1186, 1202, 1204, 1205, 1208, 1213, 1214, 1218, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1277, 1278, 1282, 1290, 1295, 1296, 1310, 1311, 1322, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1511, 1512, 1516, 1520, 1522, 1531, 1532, 1537, 1544, 1545, 1546, 1556, 1557, 1560, 1561, 1562, 1564, 1570, 1589, 1592, 1601, 1603, 1604, 1608, 1610, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1649, 1652, 1657, 1659, 1694, 1703, 1707, 1711, 1712, 1715, 1717, 1718, 1719, 1726, 1728, 1729, 1733, 1742, 1745, 1770, 1784, 1785, 1787, 1790, 1792, 1798, 1803, 1804, 1807, 1817, 1824, 1828, 1838, 1839, 1840, 1849, 1852, 1854, 1857, 1858, 1859, 1860, 1862, 1875, 1876, 1877, 1882, 1883, 1885, 1887, 1888, 1889, 1901, 1902, 1906, 1909, 1912, 1916, 1917, 1921, 1922, 1923, 1924], "pass": [0, 1, 2, 4, 6, 7, 8, 13, 16, 17, 19, 21, 22, 24, 28, 31, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 69, 70, 150, 253, 446, 510, 512, 514, 540, 556, 789, 790, 819, 822, 855, 857, 876, 885, 886, 887, 888, 889, 895, 903, 933, 949, 963, 997, 1008, 1052, 1083, 1084, 1085, 1093, 1094, 1095, 1101, 1115, 1118, 1119, 1123, 1124, 1125, 1128, 1129, 1151, 1187, 1189, 1190, 1193, 1198, 1200, 1204, 1205, 1233, 1249, 1251, 1260, 1306, 1329, 1330, 1331, 1332, 1340, 1358, 1364, 1365, 1369, 1370, 1421, 1426, 1427, 1449, 1465, 1466, 1467, 1468, 1473, 1485, 1515, 1516, 1520, 1531, 1532, 1558, 1570, 1592, 1595, 1596, 1597, 1598, 1601, 1611, 1613, 1615, 1620, 1634, 1637, 1641, 1643, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1738, 1742, 1746, 1807, 1856, 1859, 1863, 1866, 1870, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1890, 1892, 1893, 1896, 1900, 1901, 1903, 1904, 1905, 1912, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1926, 1927], "through": [0, 1, 6, 8, 10, 12, 13, 15, 16, 17, 18, 21, 25, 27, 28, 32, 37, 40, 42, 46, 50, 62, 67, 69, 70, 493, 788, 836, 850, 857, 858, 895, 904, 905, 970, 1008, 1089, 1122, 1130, 1187, 1190, 1192, 1204, 1205, 1207, 1224, 1225, 1246, 1252, 1269, 1428, 1465, 1466, 1467, 1468, 1522, 1592, 1601, 1613, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1706, 1849, 1856, 1857, 1861, 1862, 1866, 1868, 1872, 1874, 1875, 1876, 1882, 1885, 1887, 1889, 1890, 1892, 1893, 1899, 1900, 1904, 1905, 1907, 1910, 1912, 1913, 1914, 1916, 1920, 1924, 1926, 1928], "4": [0, 2, 4, 12, 14, 15, 17, 21, 28, 29, 34, 35, 37, 38, 40, 42, 44, 46, 47, 48, 55, 57, 67, 70, 191, 208, 241, 253, 288, 310, 312, 314, 316, 320, 400, 401, 443, 444, 469, 481, 485, 490, 493, 496, 510, 514, 533, 540, 552, 554, 556, 580, 581, 603, 613, 679, 680, 681, 682, 685, 687, 688, 689, 691, 692, 693, 695, 735, 737, 738, 739, 742, 744, 753, 756, 769, 770, 820, 861, 870, 871, 872, 876, 877, 878, 879, 880, 881, 883, 884, 895, 897, 900, 901, 902, 917, 920, 923, 927, 928, 929, 933, 935, 938, 939, 942, 943, 944, 947, 951, 956, 957, 958, 959, 962, 1042, 1045, 1052, 1054, 1056, 1057, 1060, 1061, 1062, 1065, 1067, 1077, 1078, 1080, 1082, 1090, 1096, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1110, 1112, 1113, 1115, 1118, 1120, 1128, 1129, 1130, 1131, 1132, 1133, 1142, 1145, 1149, 1150, 1151, 1152, 1154, 1155, 1159, 1163, 1166, 1178, 1180, 1186, 1195, 1200, 1202, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1220, 1221, 1227, 1229, 1231, 1232, 1233, 1236, 1238, 1241, 1243, 1245, 1247, 1249, 1251, 1254, 1255, 1256, 1258, 1259, 1262, 1264, 1265, 1270, 1272, 1273, 1275, 1277, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1309, 1310, 1311, 1319, 1320, 1321, 1322, 1329, 1334, 1345, 1346, 1347, 1350, 1351, 1353, 1354, 1362, 1364, 1365, 1366, 1368, 1372, 1373, 1391, 1392, 1417, 1418, 1424, 1426, 1428, 1433, 1434, 1436, 1442, 1443, 1444, 1445, 1446, 1460, 1472, 1473, 1474, 1475, 1476, 1477, 1485, 1487, 1496, 1499, 1511, 1512, 1520, 1531, 1555, 1558, 1561, 1562, 1588, 1589, 1590, 1591, 1592, 1601, 1608, 1613, 1624, 1636, 1637, 1639, 1641, 1647, 1648, 1649, 1651, 1653, 1655, 1660, 1673, 1678, 1679, 1685, 1689, 1690, 1691, 1695, 1699, 1700, 1703, 1704, 1706, 1707, 1709, 1713, 1715, 1717, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1733, 1734, 1735, 1737, 1738, 1742, 1755, 1762, 1764, 1765, 1770, 1771, 1773, 1775, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1803, 1806, 1809, 1810, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1840, 1841, 1842, 1843, 1846, 1847, 1848, 1849, 1850, 1851, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1869, 1874, 1876, 1877, 1880, 1882, 1883, 1885, 1886, 1887, 1893, 1895, 1898, 1899, 1900, 1904, 1905, 1907, 1909, 1912, 1916, 1917, 1919, 1920, 1921, 1922, 1923], "attempt": [0, 1, 2, 9, 15, 16, 17, 28, 31, 40, 57, 58, 67, 943, 957, 1193, 1199, 1278, 1570, 1603, 1604, 1663, 1664, 1842, 1859, 1862, 1875, 1876, 1881, 1885, 1887, 1899, 1903, 1904, 1912], "explicitli": [0, 1, 9, 15, 31, 40, 45, 50, 62, 999, 1050, 1052, 1062, 1151, 1229, 1242, 1246, 1254, 1296, 1531, 1589, 1688, 1803, 1859, 1861, 1862, 1863, 1868, 1885, 1887, 1890, 1892, 1898, 1900, 1904, 1905, 1911, 1912, 1916], "As": [0, 1, 2, 9, 13, 18, 21, 26, 28, 38, 40, 42, 46, 62, 65, 66, 70, 253, 931, 1062, 1193, 1220, 1224, 1225, 1235, 1236, 1247, 1252, 1360, 1361, 1362, 1366, 1387, 1421, 1452, 1588, 1647, 1653, 1855, 1859, 1861, 1862, 1869, 1877, 1882, 1885, 1887, 1889, 1893, 1896, 1899, 1900, 1904, 1905, 1911, 1912, 1913, 1914, 1916, 1924], "all": [0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 26, 27, 28, 29, 31, 32, 34, 37, 38, 40, 41, 42, 44, 46, 48, 50, 54, 55, 56, 57, 58, 59, 60, 62, 65, 67, 68, 69, 70, 75, 88, 150, 259, 312, 314, 320, 334, 484, 510, 512, 514, 542, 556, 603, 606, 613, 676, 682, 683, 688, 690, 694, 695, 731, 756, 787, 789, 790, 810, 836, 850, 854, 857, 870, 873, 885, 886, 887, 889, 890, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 913, 914, 915, 919, 928, 930, 935, 936, 940, 943, 944, 948, 960, 965, 966, 968, 969, 977, 978, 987, 995, 999, 1005, 1009, 1010, 1018, 1019, 1026, 1027, 1029, 1030, 1034, 1036, 1038, 1079, 1080, 1081, 1082, 1085, 1088, 1089, 1092, 1095, 1097, 1099, 1115, 1118, 1119, 1125, 1126, 1128, 1129, 1131, 1151, 1154, 1185, 1186, 1189, 1196, 1199, 1200, 1203, 1204, 1224, 1251, 1260, 1276, 1278, 1286, 1288, 1291, 1299, 1308, 1316, 1317, 1318, 1319, 1329, 1336, 1338, 1342, 1344, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1364, 1365, 1368, 1373, 1374, 1375, 1376, 1381, 1387, 1388, 1391, 1392, 1408, 1412, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1460, 1464, 1466, 1468, 1469, 1472, 1477, 1478, 1485, 1491, 1493, 1511, 1512, 1517, 1522, 1541, 1542, 1570, 1576, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1605, 1608, 1613, 1620, 1624, 1634, 1638, 1646, 1647, 1648, 1649, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1685, 1686, 1689, 1690, 1691, 1692, 1704, 1782, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1800, 1801, 1802, 1803, 1806, 1822, 1824, 1831, 1832, 1833, 1834, 1837, 1840, 1844, 1845, 1847, 1851, 1856, 1859, 1860, 1861, 1862, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1927], "call": [0, 1, 2, 3, 4, 9, 13, 15, 16, 17, 18, 19, 21, 23, 27, 28, 29, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 57, 59, 62, 63, 64, 66, 67, 68, 69, 70, 75, 150, 289, 322, 334, 456, 484, 485, 552, 576, 610, 613, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 777, 786, 793, 820, 853, 857, 858, 889, 893, 894, 895, 896, 897, 899, 900, 903, 909, 910, 932, 949, 963, 966, 968, 997, 999, 1009, 1010, 1019, 1026, 1027, 1029, 1030, 1060, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1118, 1119, 1130, 1134, 1152, 1164, 1174, 1189, 1192, 1194, 1199, 1200, 1201, 1208, 1244, 1252, 1256, 1258, 1260, 1261, 1290, 1333, 1339, 1340, 1341, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1368, 1406, 1417, 1418, 1419, 1421, 1428, 1429, 1449, 1460, 1472, 1498, 1499, 1500, 1506, 1507, 1508, 1513, 1531, 1570, 1589, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1610, 1613, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1636, 1642, 1643, 1645, 1646, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1719, 1746, 1753, 1754, 1782, 1801, 1802, 1803, 1823, 1842, 1844, 1845, 1849, 1850, 1856, 1859, 1863, 1866, 1872, 1874, 1876, 1877, 1878, 1881, 1882, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1927, 1928], "made": [0, 10, 12, 15, 21, 28, 42, 44, 45, 58, 70, 895, 905, 1189, 1421, 1466, 1468, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1723, 1861, 1869, 1882, 1899, 1904, 1921, 1923, 1927], "befor": [0, 1, 2, 4, 7, 8, 12, 13, 15, 16, 18, 21, 23, 25, 28, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 49, 54, 56, 57, 58, 59, 62, 70, 97, 150, 743, 756, 784, 785, 786, 889, 893, 895, 947, 965, 1043, 1044, 1045, 1054, 1062, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1103, 1104, 1107, 1115, 1118, 1189, 1200, 1202, 1241, 1245, 1258, 1288, 1316, 1319, 1358, 1364, 1365, 1368, 1373, 1421, 1422, 1423, 1460, 1464, 1472, 1520, 1539, 1576, 1577, 1592, 1595, 1596, 1597, 1598, 1601, 1609, 1642, 1645, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1690, 1704, 1707, 1733, 1742, 1753, 1754, 1783, 1786, 1789, 1790, 1791, 1793, 1794, 1803, 1806, 1828, 1839, 1859, 1861, 1862, 1874, 1881, 1882, 1885, 1886, 1887, 1890, 1892, 1893, 1896, 1898, 1899, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1916, 1917, 1921, 1923], "mark_stat": [0, 1857], "none": [0, 1, 2, 3, 4, 6, 13, 19, 21, 28, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 54, 55, 57, 59, 62, 66, 67, 68, 69, 70, 112, 114, 115, 116, 118, 134, 135, 138, 150, 153, 154, 156, 173, 185, 186, 187, 188, 204, 205, 207, 209, 212, 213, 214, 215, 229, 234, 235, 236, 237, 257, 285, 289, 300, 334, 350, 353, 376, 406, 408, 409, 410, 413, 419, 425, 426, 427, 428, 429, 430, 443, 444, 445, 446, 447, 451, 452, 468, 477, 479, 485, 491, 500, 510, 517, 533, 534, 548, 549, 551, 552, 561, 576, 577, 579, 584, 586, 599, 604, 605, 606, 611, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 651, 653, 655, 656, 658, 660, 662, 664, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 746, 747, 748, 749, 750, 751, 762, 763, 764, 765, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 789, 790, 791, 793, 795, 810, 813, 815, 816, 817, 818, 821, 822, 834, 835, 836, 853, 854, 855, 856, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 890, 891, 892, 895, 896, 898, 900, 901, 902, 903, 904, 905, 909, 910, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 933, 936, 938, 939, 940, 941, 942, 944, 945, 947, 949, 951, 952, 953, 955, 956, 958, 959, 960, 961, 962, 963, 965, 966, 968, 969, 970, 974, 975, 977, 978, 979, 982, 983, 984, 990, 991, 997, 1007, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1032, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1054, 1055, 1057, 1058, 1059, 1061, 1063, 1064, 1065, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1116, 1117, 1118, 1119, 1120, 1124, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1166, 1167, 1183, 1184, 1186, 1188, 1189, 1193, 1196, 1198, 1199, 1200, 1202, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1364, 1365, 1367, 1369, 1370, 1371, 1374, 1375, 1376, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1435, 1437, 1438, 1452, 1453, 1454, 1455, 1456, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1480, 1481, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1511, 1512, 1515, 1516, 1517, 1518, 1520, 1521, 1528, 1530, 1531, 1532, 1533, 1534, 1537, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1560, 1563, 1570, 1574, 1575, 1576, 1577, 1585, 1586, 1587, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1612, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1634, 1636, 1637, 1638, 1639, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1694, 1695, 1696, 1699, 1700, 1701, 1703, 1704, 1706, 1707, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1733, 1735, 1736, 1737, 1742, 1755, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1780, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1818, 1819, 1820, 1821, 1823, 1825, 1828, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1839, 1840, 1843, 1844, 1845, 1846, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1862, 1863, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1880, 1882, 1885, 1887, 1888, 1893, 1895, 1898, 1900, 1904, 1905, 1906, 1907, 1909, 1911, 1912, 1917, 1918, 1919, 1921, 1923, 1925, 1926, 1927], "static": [0, 2, 4, 9, 12, 14, 15, 21, 31, 41, 46, 48, 62, 790, 811, 813, 822, 828, 853, 855, 857, 885, 886, 887, 888, 1202, 1464, 1601, 1782, 1859, 1860, 1861, 1862, 1885, 1892, 1901, 1905, 1908, 1912, 1918], "prevent": [0, 1, 8, 9, 12, 16, 18, 21, 37, 38, 40, 41, 48, 62, 70, 731, 895, 965, 1043, 1044, 1186, 1288, 1316, 1319, 1359, 1427, 1452, 1539, 1576, 1577, 1592, 1601, 1704, 1783, 1786, 1806, 1832, 1834, 1842, 1874, 1881, 1882, 1885, 1886, 1889, 1893, 1904, 1906, 1914, 1916, 1917], "u": [0, 8, 9, 15, 17, 21, 28, 63, 68, 70, 756, 897, 940, 941, 942, 1225, 1227, 1231, 1235, 1236, 1252, 1278, 1280, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1373, 1374, 1391, 1392, 1406, 1408, 1436, 1438, 1439, 1460, 1471, 1613, 1696, 1807, 1808, 1858, 1859, 1860, 1869, 1876, 1880, 1882, 1885, 1886, 1887, 1888, 1893, 1904, 1906, 1916, 1920, 1921], "from": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 57, 59, 60, 62, 63, 65, 67, 68, 69, 88, 153, 154, 173, 196, 221, 222, 257, 285, 312, 314, 318, 320, 376, 401, 446, 452, 469, 471, 472, 479, 484, 485, 490, 510, 512, 514, 540, 542, 556, 576, 603, 604, 606, 613, 676, 708, 709, 710, 711, 712, 713, 716, 724, 725, 728, 731, 734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 768, 769, 770, 777, 784, 785, 788, 789, 790, 793, 796, 811, 812, 813, 820, 822, 836, 850, 854, 856, 857, 858, 860, 861, 875, 876, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 909, 910, 918, 919, 927, 928, 933, 934, 946, 964, 965, 968, 977, 978, 979, 997, 1001, 1019, 1046, 1062, 1082, 1084, 1085, 1090, 1091, 1092, 1096, 1097, 1098, 1099, 1102, 1103, 1104, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1146, 1147, 1151, 1166, 1186, 1187, 1189, 1190, 1192, 1194, 1195, 1196, 1199, 1200, 1212, 1228, 1232, 1241, 1244, 1245, 1258, 1259, 1260, 1261, 1275, 1279, 1280, 1293, 1298, 1302, 1303, 1304, 1306, 1311, 1320, 1321, 1329, 1333, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1373, 1374, 1375, 1376, 1382, 1384, 1385, 1386, 1387, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1421, 1422, 1423, 1427, 1431, 1432, 1436, 1438, 1439, 1460, 1465, 1466, 1470, 1472, 1473, 1485, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1517, 1520, 1522, 1531, 1544, 1545, 1546, 1558, 1588, 1592, 1601, 1605, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1628, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1645, 1649, 1655, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1696, 1699, 1707, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1728, 1729, 1732, 1734, 1735, 1742, 1755, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1804, 1808, 1818, 1821, 1830, 1832, 1834, 1839, 1840, 1842, 1843, 1852, 1857, 1859, 1860, 1861, 1862, 1864, 1866, 1868, 1869, 1870, 1871, 1872, 1874, 1876, 1877, 1878, 1880, 1882, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1903, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 82, 83, 150, 154, 253, 322, 334, 456, 485, 510, 512, 541, 610, 613, 676, 683, 725, 737, 738, 739, 744, 753, 754, 756, 764, 765, 768, 769, 770, 781, 787, 788, 789, 790, 793, 795, 810, 816, 819, 820, 822, 833, 837, 850, 854, 855, 857, 858, 859, 875, 876, 885, 886, 887, 889, 890, 891, 892, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 912, 916, 919, 936, 942, 949, 954, 963, 965, 975, 977, 979, 986, 987, 1005, 1007, 1011, 1013, 1015, 1019, 1020, 1045, 1062, 1063, 1066, 1067, 1080, 1082, 1083, 1084, 1085, 1098, 1101, 1118, 1119, 1120, 1121, 1123, 1124, 1125, 1128, 1129, 1130, 1133, 1134, 1142, 1145, 1150, 1151, 1164, 1180, 1186, 1187, 1189, 1190, 1192, 1193, 1195, 1199, 1200, 1202, 1204, 1205, 1210, 1213, 1220, 1228, 1231, 1235, 1236, 1241, 1244, 1247, 1248, 1252, 1258, 1260, 1277, 1278, 1280, 1290, 1299, 1318, 1320, 1321, 1322, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1363, 1364, 1365, 1366, 1369, 1370, 1373, 1378, 1379, 1380, 1382, 1388, 1390, 1391, 1394, 1395, 1396, 1407, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1426, 1427, 1428, 1430, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1448, 1449, 1452, 1457, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1473, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1515, 1516, 1531, 1544, 1545, 1546, 1564, 1570, 1589, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1613, 1634, 1635, 1641, 1646, 1648, 1652, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1685, 1686, 1688, 1692, 1694, 1703, 1707, 1715, 1719, 1729, 1735, 1738, 1750, 1752, 1753, 1755, 1780, 1782, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1801, 1802, 1803, 1807, 1821, 1825, 1828, 1830, 1838, 1841, 1844, 1845, 1849, 1854, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1878, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "improv": [0, 1, 2, 4, 10, 23, 28, 31, 35, 38, 40, 62, 70, 756, 800, 801, 802, 897, 899, 903, 957, 1142, 1359, 1373, 1391, 1436, 1467, 1570, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1690, 1857, 1859, 1881, 1886, 1887, 1888, 1896, 1897, 1901, 1907, 1908, 1912], "time": [0, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 21, 23, 24, 25, 27, 28, 31, 37, 38, 40, 41, 42, 44, 46, 47, 48, 54, 57, 58, 59, 67, 69, 70, 88, 289, 312, 485, 490, 613, 676, 681, 682, 683, 684, 685, 686, 687, 690, 741, 742, 752, 756, 760, 764, 765, 795, 797, 820, 837, 873, 903, 909, 910, 914, 917, 929, 937, 939, 954, 961, 965, 966, 968, 1008, 1021, 1040, 1043, 1054, 1083, 1084, 1085, 1091, 1102, 1103, 1104, 1112, 1115, 1124, 1125, 1126, 1129, 1130, 1178, 1186, 1189, 1196, 1201, 1204, 1205, 1209, 1214, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1233, 1234, 1235, 1238, 1240, 1244, 1247, 1249, 1251, 1252, 1260, 1261, 1283, 1293, 1310, 1311, 1313, 1323, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1365, 1368, 1369, 1370, 1373, 1384, 1385, 1386, 1391, 1393, 1407, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1433, 1434, 1436, 1457, 1460, 1472, 1473, 1474, 1475, 1485, 1488, 1489, 1515, 1516, 1560, 1561, 1562, 1578, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1608, 1609, 1611, 1613, 1647, 1663, 1664, 1684, 1694, 1695, 1706, 1728, 1734, 1784, 1798, 1803, 1804, 1823, 1849, 1857, 1861, 1862, 1863, 1868, 1870, 1874, 1880, 1882, 1884, 1886, 1887, 1889, 1890, 1892, 1893, 1895, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1921, 1926], "perform": [0, 1, 2, 3, 4, 5, 6, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 29, 31, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 48, 57, 58, 62, 66, 69, 70, 119, 206, 209, 456, 576, 599, 613, 682, 683, 684, 685, 686, 687, 756, 777, 800, 801, 802, 843, 854, 857, 890, 895, 897, 899, 900, 903, 904, 917, 929, 949, 954, 955, 964, 970, 1019, 1043, 1044, 1057, 1082, 1105, 1107, 1118, 1119, 1122, 1153, 1164, 1189, 1198, 1199, 1204, 1232, 1234, 1237, 1241, 1244, 1245, 1249, 1250, 1258, 1259, 1261, 1266, 1275, 1288, 1293, 1302, 1303, 1313, 1316, 1319, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1361, 1364, 1365, 1373, 1391, 1421, 1427, 1429, 1436, 1449, 1464, 1467, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1539, 1556, 1570, 1576, 1577, 1592, 1601, 1603, 1604, 1609, 1613, 1634, 1641, 1643, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1696, 1704, 1732, 1746, 1750, 1778, 1783, 1784, 1785, 1786, 1806, 1808, 1842, 1857, 1859, 1862, 1872, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1890, 1891, 1894, 1896, 1897, 1900, 1903, 1904, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1927], "ha": [0, 1, 2, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 28, 29, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 54, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 88, 150, 196, 209, 254, 259, 334, 443, 444, 445, 446, 447, 471, 472, 493, 495, 540, 576, 577, 599, 600, 614, 676, 685, 689, 691, 692, 693, 695, 731, 756, 775, 777, 781, 783, 787, 793, 834, 836, 843, 854, 860, 870, 871, 873, 885, 888, 889, 891, 893, 899, 904, 905, 919, 937, 940, 941, 954, 955, 956, 962, 965, 966, 968, 973, 1001, 1004, 1005, 1050, 1052, 1066, 1098, 1110, 1118, 1119, 1122, 1123, 1126, 1130, 1142, 1151, 1152, 1163, 1186, 1189, 1193, 1196, 1199, 1200, 1201, 1204, 1209, 1210, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1242, 1243, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1255, 1256, 1260, 1269, 1276, 1278, 1283, 1286, 1288, 1289, 1290, 1291, 1293, 1294, 1316, 1317, 1318, 1319, 1337, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1365, 1368, 1369, 1370, 1373, 1376, 1381, 1384, 1385, 1386, 1391, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1436, 1452, 1454, 1460, 1468, 1472, 1473, 1485, 1495, 1496, 1497, 1503, 1512, 1515, 1516, 1520, 1531, 1555, 1557, 1558, 1560, 1564, 1570, 1576, 1589, 1591, 1592, 1595, 1596, 1601, 1608, 1610, 1612, 1615, 1619, 1621, 1624, 1634, 1635, 1642, 1643, 1647, 1649, 1655, 1658, 1660, 1663, 1664, 1680, 1681, 1682, 1684, 1688, 1690, 1694, 1704, 1706, 1707, 1708, 1709, 1726, 1728, 1738, 1750, 1772, 1785, 1786, 1787, 1798, 1800, 1801, 1802, 1803, 1806, 1807, 1824, 1830, 1844, 1845, 1849, 1859, 1861, 1862, 1868, 1869, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1921, 1922, 1923, 1924], "lower": [0, 1, 2, 9, 17, 28, 38, 40, 46, 62, 789, 791, 855, 928, 933, 940, 941, 942, 944, 1076, 1077, 1149, 1150, 1218, 1225, 1227, 1235, 1236, 1243, 1246, 1251, 1289, 1311, 1318, 1329, 1439, 1495, 1496, 1497, 1568, 1569, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1688, 1690, 1705, 1707, 1727, 1742, 1750, 1787, 1830, 1831, 1832, 1858, 1859, 1860, 1862, 1878, 1880, 1882, 1893, 1902, 1907, 1917, 1923], "preced": [0, 44, 48, 62, 676, 1596, 1688, 1827, 1863, 1884, 1903, 1907], "backend": [0, 2, 14, 17, 18, 19, 21, 22, 24, 25, 31, 56, 60, 62, 737, 738, 739, 788, 789, 829, 851, 852, 855, 857, 858, 897, 903, 949, 988, 1019, 1062, 1119, 1202, 1232, 1234, 1252, 1302, 1303, 1304, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1520, 1558, 1570, 1601, 1658, 1659, 1750, 1857, 1858, 1860, 1861, 1866, 1870, 1873, 1884, 1885, 1896, 1897, 1900, 1908, 1910, 1916], "inductor": [0, 12, 13, 15, 19, 20, 22, 24, 28, 676, 949, 1868], "nopython": [0, 17, 20, 21, 28], "guard_export_fn": 0, "guard_fail_fn": 0, "disabl": [0, 1, 3, 6, 14, 16, 17, 19, 24, 28, 41, 46, 62, 70, 806, 807, 916, 949, 1008, 1062, 1066, 1118, 1164, 1189, 1191, 1204, 1205, 1421, 1427, 1460, 1468, 1570, 1601, 1602, 1643, 1646, 1751, 1752, 1755, 1782, 1857, 1861, 1868, 1881, 1884, 1885, 1886, 1887, 1891, 1896, 1897, 1900, 1905, 1911, 1916, 1923], "main": [0, 4, 8, 13, 17, 21, 27, 37, 38, 40, 41, 46, 48, 49, 50, 55, 57, 58, 59, 60, 70, 259, 493, 1049, 1050, 1051, 1052, 1053, 1251, 1522, 1787, 1831, 1832, 1833, 1834, 1856, 1859, 1872, 1874, 1876, 1877, 1881, 1882, 1885, 1886, 1887, 1888, 1893, 1899, 1912, 1913, 1921, 1922], "entrypoint": [0, 42, 45, 48, 50, 55, 58, 1874], "do": [0, 1, 2, 5, 8, 9, 10, 12, 15, 16, 18, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 37, 38, 40, 44, 45, 47, 48, 50, 57, 58, 59, 62, 63, 64, 67, 68, 69, 70, 492, 510, 512, 514, 754, 819, 822, 859, 888, 890, 895, 904, 935, 948, 1008, 1041, 1042, 1043, 1044, 1113, 1115, 1124, 1131, 1151, 1164, 1176, 1186, 1192, 1200, 1204, 1234, 1252, 1261, 1268, 1278, 1280, 1289, 1311, 1321, 1333, 1343, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1378, 1379, 1380, 1407, 1439, 1440, 1441, 1448, 1463, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1522, 1524, 1539, 1592, 1601, 1649, 1657, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1694, 1700, 1842, 1856, 1857, 1859, 1860, 1862, 1864, 1866, 1874, 1875, 1876, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1906, 1907, 1908, 1912, 1914, 1917, 1918, 1919, 1920, 1921, 1923], "extract": [0, 13, 18, 25, 26, 34, 70, 832, 1364, 1368, 1472, 1511, 1588, 1906, 1912, 1926], "paramet": [0, 1, 2, 3, 4, 6, 14, 17, 19, 22, 26, 27, 29, 31, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 51, 55, 57, 59, 62, 64, 66, 69, 70, 88, 150, 155, 170, 172, 175, 178, 179, 180, 195, 196, 206, 209, 239, 253, 254, 259, 266, 296, 312, 314, 316, 318, 320, 324, 330, 392, 399, 401, 443, 444, 445, 446, 447, 456, 469, 490, 493, 494, 495, 496, 497, 510, 512, 514, 517, 521, 533, 540, 541, 542, 556, 562, 579, 580, 581, 583, 584, 599, 600, 603, 613, 614, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 751, 752, 754, 755, 756, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 787, 789, 791, 793, 795, 796, 797, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 834, 835, 836, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 912, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 947, 948, 949, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 973, 974, 975, 976, 977, 978, 979, 982, 983, 984, 986, 990, 991, 992, 994, 997, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1163, 1164, 1166, 1168, 1169, 1171, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1195, 1196, 1199, 1200, 1201, 1202, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1301, 1302, 1303, 1306, 1307, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1456, 1457, 1458, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1517, 1519, 1520, 1522, 1524, 1531, 1532, 1539, 1544, 1545, 1546, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1570, 1576, 1577, 1585, 1589, 1590, 1591, 1592, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1778, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1811, 1812, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1862, 1864, 1866, 1870, 1871, 1874, 1876, 1877, 1878, 1880, 1881, 1882, 1885, 1886, 1887, 1891, 1892, 1893, 1895, 1897, 1898, 1900, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1916, 1917, 1918, 1921, 1923, 1925, 1926, 1927], "One": [0, 4, 9, 13, 15, 16, 31, 40, 42, 62, 65, 67, 70, 579, 928, 1119, 1130, 1180, 1473, 1557, 1608, 1611, 1677, 1682, 1690, 1717, 1718, 1838, 1849, 1859, 1861, 1862, 1876, 1877, 1883, 1884, 1885, 1887, 1892, 1905, 1914, 1921], "thing": [0, 2, 4, 8, 9, 12, 16, 17, 21, 26, 28, 40, 67, 70, 1119, 1198, 1290, 1337, 1522, 1781, 1861, 1882, 1885, 1887, 1888, 1889, 1890, 1895, 1900, 1904, 1907, 1908, 1914], "either": [0, 2, 9, 10, 15, 17, 18, 19, 20, 22, 31, 34, 37, 38, 40, 44, 45, 46, 48, 50, 55, 57, 58, 59, 62, 67, 69, 70, 154, 221, 312, 320, 510, 512, 613, 676, 728, 734, 735, 736, 741, 742, 752, 760, 775, 781, 787, 854, 886, 888, 895, 904, 905, 936, 949, 976, 1062, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1115, 1119, 1142, 1166, 1182, 1189, 1204, 1244, 1259, 1260, 1275, 1290, 1327, 1328, 1331, 1332, 1335, 1336, 1337, 1338, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1365, 1375, 1381, 1388, 1390, 1412, 1413, 1415, 1416, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1438, 1452, 1453, 1468, 1469, 1471, 1473, 1474, 1475, 1492, 1493, 1503, 1531, 1532, 1555, 1563, 1589, 1596, 1601, 1626, 1648, 1663, 1664, 1666, 1688, 1703, 1705, 1747, 1803, 1807, 1852, 1856, 1859, 1861, 1862, 1864, 1868, 1876, 1880, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1895, 1897, 1900, 1903, 1904, 1905, 1907, 1913, 1914, 1916, 1917, 1920, 1923, 1928], "callabl": [0, 4, 6, 13, 18, 19, 21, 27, 37, 38, 40, 44, 46, 48, 50, 55, 57, 59, 62, 69, 70, 72, 73, 74, 119, 397, 837, 949, 1005, 1006, 1008, 1119, 1120, 1121, 1126, 1129, 1130, 1189, 1192, 1200, 1204, 1260, 1261, 1421, 1464, 1466, 1468, 1470, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1671, 1673, 1674, 1675, 1676, 1677, 1684, 1687, 1849, 1856, 1859, 1861, 1862, 1863, 1872, 1885, 1893, 1900, 1904, 1905, 1906, 1912, 1923, 1925, 1926, 1927], "take": [0, 1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 27, 31, 37, 38, 40, 42, 44, 46, 48, 56, 57, 58, 59, 62, 64, 65, 67, 68, 69, 70, 756, 789, 794, 810, 816, 822, 858, 897, 898, 899, 900, 901, 902, 904, 905, 942, 962, 999, 1050, 1052, 1053, 1078, 1080, 1083, 1086, 1090, 1091, 1093, 1096, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1221, 1243, 1246, 1329, 1338, 1365, 1369, 1370, 1373, 1391, 1415, 1416, 1417, 1418, 1419, 1421, 1429, 1436, 1464, 1474, 1475, 1515, 1516, 1533, 1557, 1570, 1601, 1646, 1674, 1678, 1703, 1830, 1849, 1856, 1859, 1860, 1862, 1869, 1870, 1874, 1875, 1876, 1877, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1893, 1897, 1899, 1900, 1902, 1904, 1906, 1907, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1925], "graphmodul": [0, 13, 16, 21, 27, 28, 72, 73, 74, 75, 855, 856, 857, 858, 1926], "example_input": [0, 13, 16, 21, 813, 814, 857, 858, 1200, 1204, 1907, 1926], "python": [0, 1, 2, 4, 5, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 28, 31, 32, 34, 37, 40, 44, 46, 47, 48, 50, 51, 54, 55, 57, 58, 62, 70, 351, 585, 620, 676, 777, 876, 897, 898, 899, 900, 901, 902, 904, 905, 935, 936, 948, 949, 999, 1005, 1006, 1008, 1057, 1062, 1080, 1082, 1110, 1115, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1165, 1187, 1189, 1190, 1192, 1193, 1194, 1199, 1200, 1204, 1260, 1422, 1423, 1431, 1432, 1570, 1601, 1700, 1722, 1726, 1746, 1747, 1782, 1849, 1856, 1866, 1868, 1873, 1874, 1876, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1895, 1898, 1899, 1904, 1907, 1911, 1912, 1913, 1914, 1919, 1922, 1923], "run": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 27, 28, 31, 32, 34, 37, 38, 40, 41, 44, 46, 48, 49, 50, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 150, 788, 794, 813, 815, 816, 817, 818, 821, 853, 857, 858, 859, 889, 903, 904, 905, 1007, 1008, 1119, 1124, 1130, 1164, 1189, 1190, 1192, 1193, 1196, 1198, 1200, 1202, 1204, 1205, 1234, 1260, 1261, 1289, 1339, 1340, 1341, 1358, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1449, 1460, 1570, 1592, 1601, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1750, 1754, 1786, 1832, 1834, 1842, 1849, 1857, 1859, 1862, 1870, 1872, 1874, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1921, 1924, 1925, 1926], "faster": [0, 1, 3, 9, 17, 20, 23, 25, 29, 37, 38, 40, 62, 898, 904, 905, 1118, 1218, 1219, 1224, 1225, 1229, 1234, 1242, 1244, 1246, 1249, 1252, 1254, 1258, 1261, 1437, 1454, 1560, 1576, 1601, 1605, 1606, 1608, 1663, 1664, 1675, 1789, 1790, 1791, 1793, 1794, 1870, 1882, 1885, 1890, 1903, 1907, 1916, 1921], "also": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 31, 32, 34, 37, 38, 40, 44, 45, 46, 47, 54, 57, 62, 66, 67, 68, 69, 70, 154, 218, 221, 222, 253, 322, 510, 512, 514, 539, 610, 737, 738, 739, 756, 796, 810, 857, 876, 885, 886, 895, 918, 927, 941, 949, 962, 1005, 1008, 1019, 1043, 1044, 1062, 1066, 1082, 1113, 1119, 1125, 1129, 1130, 1131, 1134, 1136, 1146, 1147, 1151, 1164, 1189, 1192, 1193, 1195, 1198, 1202, 1204, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1290, 1296, 1309, 1317, 1329, 1337, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1365, 1368, 1373, 1387, 1391, 1421, 1428, 1436, 1450, 1452, 1460, 1469, 1470, 1472, 1498, 1499, 1500, 1520, 1557, 1573, 1592, 1601, 1611, 1613, 1623, 1625, 1627, 1628, 1629, 1630, 1646, 1678, 1684, 1688, 1691, 1694, 1719, 1726, 1738, 1748, 1763, 1764, 1781, 1784, 1798, 1807, 1816, 1818, 1821, 1827, 1828, 1839, 1840, 1849, 1852, 1856, 1857, 1859, 1861, 1862, 1866, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1912, 1913, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1927], "provid": [0, 1, 2, 4, 8, 9, 10, 12, 13, 15, 17, 18, 21, 22, 25, 27, 28, 29, 31, 32, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 55, 57, 58, 59, 60, 62, 66, 69, 70, 150, 599, 676, 685, 731, 734, 735, 736, 741, 742, 744, 752, 753, 756, 760, 784, 785, 795, 796, 810, 820, 837, 854, 889, 898, 900, 901, 902, 928, 933, 936, 941, 942, 961, 973, 1019, 1062, 1082, 1118, 1130, 1142, 1150, 1151, 1186, 1189, 1195, 1196, 1200, 1202, 1204, 1219, 1236, 1261, 1293, 1352, 1353, 1354, 1357, 1373, 1374, 1382, 1387, 1391, 1392, 1417, 1418, 1419, 1421, 1427, 1428, 1431, 1436, 1438, 1449, 1464, 1465, 1466, 1467, 1468, 1492, 1493, 1570, 1601, 1615, 1635, 1643, 1658, 1659, 1688, 1691, 1696, 1732, 1742, 1789, 1790, 1791, 1792, 1793, 1794, 1832, 1834, 1849, 1856, 1859, 1861, 1862, 1866, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1885, 1886, 1887, 1888, 1890, 1893, 1894, 1896, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1928], "addit": [0, 1, 2, 4, 6, 8, 10, 12, 15, 17, 18, 23, 24, 28, 31, 32, 37, 40, 41, 42, 46, 51, 57, 58, 62, 69, 70, 334, 510, 603, 745, 747, 748, 749, 750, 754, 756, 777, 791, 810, 855, 1019, 1186, 1189, 1193, 1198, 1203, 1329, 1340, 1341, 1342, 1352, 1353, 1354, 1365, 1372, 1373, 1375, 1382, 1385, 1386, 1400, 1401, 1402, 1406, 1407, 1408, 1409, 1411, 1417, 1418, 1419, 1421, 1427, 1429, 1454, 1456, 1460, 1464, 1468, 1470, 1491, 1498, 1499, 1500, 1537, 1601, 1666, 1839, 1840, 1847, 1859, 1861, 1862, 1868, 1872, 1875, 1876, 1877, 1882, 1884, 1885, 1887, 1888, 1892, 1895, 1896, 1899, 1900, 1901, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1920, 1923], "context": [0, 1, 3, 6, 15, 16, 21, 37, 44, 48, 57, 58, 62, 70, 150, 788, 885, 886, 887, 889, 890, 903, 904, 916, 969, 984, 986, 997, 1003, 1008, 1015, 1035, 1037, 1066, 1120, 1124, 1129, 1164, 1189, 1302, 1421, 1570, 1592, 1601, 1602, 1611, 1613, 1646, 1655, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1752, 1782, 1857, 1862, 1863, 1874, 1881, 1882, 1885, 1887, 1891, 1892, 1895, 1900, 1904, 1906, 1911, 1912, 1914, 1916, 1919, 1924], "like": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 37, 38, 40, 45, 46, 55, 57, 58, 62, 63, 64, 65, 66, 67, 68, 70, 335, 585, 613, 756, 789, 837, 856, 874, 895, 904, 905, 918, 927, 1005, 1006, 1015, 1057, 1062, 1063, 1083, 1105, 1108, 1109, 1115, 1119, 1122, 1123, 1124, 1130, 1146, 1147, 1187, 1189, 1190, 1196, 1199, 1204, 1208, 1235, 1236, 1247, 1260, 1329, 1337, 1365, 1368, 1384, 1385, 1386, 1421, 1422, 1423, 1431, 1432, 1449, 1472, 1514, 1532, 1588, 1592, 1601, 1602, 1603, 1604, 1609, 1634, 1652, 1677, 1700, 1715, 1719, 1738, 1747, 1750, 1807, 1818, 1849, 1854, 1856, 1857, 1859, 1861, 1862, 1869, 1874, 1875, 1876, 1881, 1882, 1885, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1910, 1912, 1913, 1916, 1918, 1919, 1923, 1924, 1926, 1927], "jit": [0, 1, 13, 15, 20, 25, 26, 29, 31, 1005, 1006, 1037, 1139, 1187, 1188, 1189, 1203, 1657, 1658, 1753, 1754, 1857, 1861, 1864, 1870, 1876, 1884, 1892, 1898, 1900, 1907, 1912, 1921], "fuser": [0, 789, 1202, 1859], "fuser2": 0, "set": [0, 1, 2, 3, 4, 6, 9, 10, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 28, 30, 31, 36, 37, 38, 40, 41, 42, 44, 46, 48, 50, 55, 57, 58, 59, 60, 62, 65, 66, 69, 70, 88, 150, 154, 253, 329, 443, 444, 445, 446, 447, 456, 493, 517, 576, 577, 676, 731, 737, 739, 756, 775, 781, 788, 789, 790, 793, 811, 812, 813, 816, 817, 818, 821, 822, 837, 850, 854, 855, 857, 858, 861, 874, 886, 888, 889, 896, 897, 898, 899, 900, 901, 902, 903, 916, 928, 933, 944, 948, 949, 955, 973, 988, 997, 1009, 1010, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1063, 1065, 1118, 1127, 1136, 1151, 1169, 1170, 1189, 1193, 1196, 1198, 1200, 1202, 1204, 1205, 1224, 1225, 1228, 1234, 1241, 1243, 1245, 1246, 1258, 1259, 1260, 1261, 1275, 1278, 1281, 1301, 1305, 1306, 1307, 1329, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1373, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1406, 1408, 1412, 1413, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1431, 1435, 1436, 1452, 1453, 1460, 1469, 1470, 1485, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1513, 1520, 1524, 1531, 1532, 1541, 1542, 1555, 1557, 1563, 1570, 1589, 1601, 1603, 1604, 1609, 1614, 1643, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1706, 1713, 1715, 1719, 1721, 1722, 1730, 1731, 1742, 1743, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1772, 1787, 1801, 1802, 1821, 1831, 1832, 1833, 1834, 1842, 1844, 1845, 1856, 1858, 1859, 1861, 1862, 1863, 1866, 1868, 1870, 1871, 1872, 1874, 1877, 1880, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1921, 1923, 1925, 1926, 1927], "backend_ctx_ctor": 0, "attribut": [0, 1, 2, 21, 27, 29, 37, 38, 40, 41, 47, 70, 150, 289, 492, 493, 723, 734, 735, 736, 737, 738, 739, 741, 742, 752, 760, 787, 798, 811, 812, 813, 834, 835, 836, 854, 855, 885, 889, 891, 895, 1113, 1188, 1189, 1190, 1192, 1193, 1199, 1200, 1261, 1358, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1421, 1464, 1601, 1602, 1612, 1613, 1614, 1635, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1857, 1860, 1863, 1877, 1881, 1882, 1885, 1887, 1888, 1893, 1898, 1900, 1904, 1907, 1912, 1922, 1923, 1927, 1928], "see": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 15, 18, 19, 20, 21, 26, 27, 28, 31, 32, 33, 36, 37, 40, 41, 46, 49, 57, 58, 60, 62, 67, 68, 69, 70, 89, 93, 95, 97, 99, 101, 103, 105, 107, 109, 112, 113, 114, 115, 116, 117, 118, 120, 122, 124, 126, 128, 129, 132, 134, 135, 136, 137, 138, 140, 142, 144, 145, 148, 150, 151, 153, 154, 155, 156, 157, 159, 161, 163, 165, 167, 169, 170, 171, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 192, 193, 197, 199, 200, 202, 204, 205, 207, 210, 211, 212, 214, 217, 218, 220, 224, 225, 226, 227, 228, 229, 230, 233, 234, 236, 238, 239, 240, 242, 244, 245, 247, 249, 251, 254, 255, 260, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 277, 279, 280, 281, 283, 286, 287, 290, 292, 294, 296, 297, 298, 299, 300, 301, 302, 304, 306, 308, 312, 320, 321, 322, 323, 324, 326, 327, 333, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 356, 358, 360, 362, 364, 366, 368, 369, 371, 373, 377, 378, 379, 380, 381, 383, 385, 387, 389, 391, 392, 393, 395, 396, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 422, 423, 425, 427, 428, 429, 430, 431, 432, 436, 438, 440, 448, 450, 451, 453, 455, 457, 458, 459, 460, 462, 463, 465, 466, 468, 475, 477, 478, 480, 482, 485, 486, 488, 490, 491, 492, 494, 495, 496, 498, 499, 502, 503, 504, 507, 512, 514, 515, 516, 518, 521, 522, 524, 526, 527, 529, 531, 534, 535, 536, 538, 539, 543, 544, 546, 548, 550, 551, 552, 557, 559, 561, 563, 564, 565, 566, 568, 569, 570, 572, 574, 575, 586, 587, 588, 590, 591, 593, 595, 597, 601, 602, 605, 606, 607, 610, 611, 612, 614, 615, 616, 617, 676, 689, 691, 692, 695, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 744, 752, 753, 756, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 775, 776, 777, 778, 779, 780, 781, 789, 836, 855, 856, 857, 858, 861, 870, 871, 872, 875, 886, 888, 889, 890, 891, 892, 894, 895, 899, 903, 904, 909, 910, 913, 918, 920, 927, 929, 932, 946, 949, 959, 963, 964, 965, 966, 968, 970, 971, 973, 987, 988, 997, 998, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1026, 1027, 1028, 1057, 1060, 1062, 1063, 1065, 1066, 1075, 1080, 1098, 1101, 1116, 1121, 1122, 1123, 1125, 1134, 1142, 1146, 1147, 1151, 1152, 1160, 1161, 1162, 1164, 1189, 1193, 1200, 1204, 1205, 1207, 1208, 1210, 1220, 1228, 1231, 1234, 1236, 1243, 1245, 1246, 1254, 1258, 1259, 1261, 1267, 1269, 1275, 1276, 1278, 1286, 1288, 1289, 1290, 1291, 1293, 1294, 1302, 1303, 1309, 1316, 1318, 1319, 1329, 1337, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1364, 1365, 1367, 1373, 1375, 1381, 1382, 1387, 1388, 1391, 1412, 1413, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1433, 1434, 1435, 1436, 1439, 1448, 1450, 1452, 1453, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1590, 1591, 1601, 1602, 1608, 1609, 1610, 1613, 1619, 1628, 1637, 1642, 1645, 1646, 1647, 1648, 1652, 1694, 1704, 1705, 1715, 1717, 1719, 1721, 1722, 1726, 1729, 1732, 1738, 1747, 1750, 1752, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1782, 1783, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1801, 1802, 1803, 1806, 1816, 1818, 1821, 1827, 1828, 1832, 1834, 1842, 1844, 1845, 1850, 1852, 1854, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1867, 1868, 1869, 1871, 1874, 1875, 1876, 1877, 1878, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1916, 1917, 1919, 1920, 1922, 1923, 1924, 1927, 1928], "aotautogradmemoryefficientfusionwithcontext": 0, "usag": [0, 1, 2, 5, 8, 10, 15, 16, 17, 18, 28, 32, 37, 40, 44, 46, 47, 48, 51, 54, 55, 57, 59, 62, 70, 744, 753, 788, 789, 790, 806, 807, 808, 809, 811, 812, 813, 850, 854, 886, 1011, 1031, 1035, 1062, 1113, 1118, 1122, 1123, 1124, 1202, 1261, 1601, 1656, 1859, 1862, 1872, 1876, 1881, 1882, 1887, 1889, 1900, 1906, 1914, 1921, 1922, 1924, 1925, 1926], "Or": [0, 8, 21, 48, 70, 944, 1891, 1894, 1900, 1916], "string": [0, 3, 4, 13, 17, 21, 28, 30, 31, 37, 40, 48, 54, 55, 57, 70, 599, 810, 850, 988, 1005, 1006, 1062, 1119, 1189, 1196, 1199, 1260, 1349, 1350, 1351, 1421, 1422, 1431, 1464, 1466, 1468, 1495, 1496, 1497, 1624, 1706, 1738, 1746, 1748, 1856, 1860, 1861, 1862, 1863, 1876, 1882, 1887, 1892, 1893, 1900, 1904, 1906, 1912, 1918, 1919, 1921, 1926, 1927], "name": [0, 2, 3, 4, 13, 14, 17, 21, 24, 27, 28, 31, 38, 40, 45, 46, 48, 50, 51, 54, 55, 57, 59, 62, 70, 676, 693, 743, 744, 753, 788, 810, 811, 812, 813, 820, 836, 850, 854, 913, 964, 991, 1118, 1128, 1187, 1189, 1190, 1196, 1199, 1204, 1205, 1219, 1224, 1225, 1231, 1232, 1234, 1235, 1236, 1237, 1247, 1248, 1250, 1252, 1253, 1260, 1421, 1471, 1594, 1599, 1600, 1601, 1608, 1609, 1610, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1642, 1643, 1645, 1657, 1658, 1738, 1748, 1843, 1856, 1857, 1859, 1860, 1862, 1863, 1866, 1868, 1871, 1872, 1874, 1880, 1882, 1885, 1886, 1887, 1890, 1892, 1893, 1900, 1902, 1904, 1905, 1906, 1912, 1913, 1918, 1921, 1923, 1924, 1925, 1926, 1927, 1928], "list_backend": [0, 13, 19, 20, 22, 949, 1857], "whole": [0, 16, 21, 23, 24, 37, 40, 42, 1130, 1189, 1421, 1449, 1460, 1601, 1849, 1882, 1886, 1895, 1896, 1904], "program": [0, 2, 4, 5, 9, 12, 15, 16, 17, 20, 22, 23, 25, 28, 34, 37, 40, 49, 58, 60, 62, 70, 613, 954, 955, 1011, 1013, 1119, 1750, 1859, 1861, 1863, 1882, 1885, 1889, 1892, 1894, 1895, 1898, 1899, 1921], "turn": [0, 16, 19, 20, 21, 31, 37, 67, 70, 676, 869, 949, 1177, 1204, 1465, 1467, 1789, 1790, 1791, 1792, 1793, 1794, 1869, 1882, 1885, 1896, 1897, 1900, 1906, 1907, 1913, 1916], "decor": [0, 1, 2, 13, 18, 25, 46, 50, 54, 58, 70, 895, 1066, 1164, 1194, 1200, 1206, 1646, 1782, 1859, 1861, 1862, 1866, 1881, 1882, 1887, 1905, 1912, 1927], "exampl": [0, 1, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 31, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 68, 69, 87, 88, 191, 208, 241, 253, 259, 288, 310, 312, 314, 316, 320, 334, 351, 400, 401, 443, 444, 445, 446, 447, 469, 479, 481, 485, 490, 493, 496, 510, 512, 514, 533, 540, 554, 556, 576, 577, 579, 580, 581, 582, 583, 584, 585, 603, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 741, 742, 744, 752, 753, 754, 756, 757, 758, 759, 760, 761, 768, 769, 770, 781, 788, 789, 790, 792, 793, 806, 807, 808, 809, 810, 811, 812, 813, 820, 834, 850, 855, 856, 857, 858, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 907, 909, 910, 917, 919, 920, 921, 922, 923, 924, 925, 926, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 947, 948, 949, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 1005, 1006, 1011, 1013, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1126, 1128, 1130, 1131, 1132, 1133, 1136, 1142, 1145, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1159, 1163, 1164, 1166, 1174, 1176, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1487, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1511, 1512, 1515, 1516, 1520, 1522, 1555, 1557, 1558, 1561, 1562, 1570, 1589, 1592, 1601, 1608, 1609, 1611, 1613, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1695, 1697, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1744, 1745, 1746, 1747, 1748, 1751, 1752, 1755, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1780, 1782, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1801, 1802, 1804, 1806, 1807, 1809, 1810, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1866, 1868, 1869, 1871, 1872, 1875, 1876, 1877, 1880, 1882, 1883, 1884, 1885, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927], "toy_exampl": [0, 13, 14, 17, 21, 28], "b": [0, 1, 2, 4, 13, 14, 17, 20, 21, 27, 28, 29, 37, 40, 42, 46, 55, 70, 259, 334, 397, 613, 681, 682, 744, 753, 777, 820, 876, 893, 895, 896, 907, 909, 910, 917, 928, 929, 931, 935, 937, 939, 942, 947, 956, 962, 1005, 1006, 1054, 1057, 1061, 1062, 1107, 1108, 1109, 1110, 1115, 1119, 1132, 1154, 1166, 1186, 1192, 1199, 1200, 1208, 1209, 1211, 1220, 1221, 1229, 1233, 1234, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1254, 1255, 1258, 1261, 1270, 1272, 1273, 1279, 1287, 1292, 1294, 1310, 1338, 1342, 1364, 1365, 1372, 1408, 1491, 1493, 1512, 1519, 1537, 1608, 1635, 1636, 1637, 1638, 1639, 1640, 1648, 1655, 1674, 1676, 1707, 1713, 1726, 1729, 1745, 1757, 1776, 1784, 1789, 1790, 1791, 1793, 1794, 1798, 1803, 1804, 1806, 1813, 1814, 1823, 1830, 1831, 1833, 1846, 1851, 1858, 1859, 1860, 1861, 1862, 1875, 1876, 1877, 1880, 1881, 1883, 1885, 1889, 1890, 1891, 1896, 1898, 1906, 1907, 1913, 1914, 1916, 1917, 1920, 1921, 1926], "optimize_assert": [0, 1857], "hook": [0, 2, 16, 17, 18, 21, 25, 41, 44, 62, 485, 744, 753, 895, 909, 910, 1008, 1189, 1358, 1421, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1642, 1645, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1857, 1878, 1886, 1887, 1892, 1904, 1907], "export_constraint": 0, "same": [0, 1, 2, 4, 8, 12, 13, 15, 16, 17, 21, 23, 27, 28, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 46, 48, 54, 55, 57, 58, 59, 60, 62, 65, 67, 69, 70, 139, 153, 195, 221, 254, 310, 312, 314, 318, 320, 338, 443, 444, 445, 446, 447, 469, 481, 494, 495, 497, 510, 512, 514, 517, 540, 576, 613, 614, 682, 685, 689, 691, 692, 693, 695, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 754, 757, 758, 759, 760, 761, 775, 781, 784, 785, 789, 790, 792, 796, 798, 810, 815, 818, 820, 821, 855, 857, 874, 875, 876, 888, 891, 894, 897, 898, 899, 900, 901, 902, 904, 905, 917, 919, 920, 929, 931, 933, 936, 941, 943, 951, 962, 963, 965, 976, 978, 997, 1008, 1045, 1050, 1052, 1053, 1059, 1062, 1064, 1065, 1068, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1110, 1114, 1115, 1117, 1118, 1119, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1131, 1134, 1142, 1150, 1151, 1159, 1163, 1180, 1186, 1189, 1199, 1200, 1204, 1205, 1209, 1210, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1256, 1276, 1280, 1282, 1283, 1286, 1288, 1289, 1290, 1291, 1294, 1316, 1319, 1320, 1321, 1327, 1328, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1368, 1371, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1393, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1429, 1430, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1472, 1473, 1476, 1477, 1478, 1485, 1491, 1492, 1493, 1495, 1496, 1497, 1503, 1512, 1520, 1522, 1531, 1532, 1570, 1589, 1601, 1608, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1634, 1638, 1643, 1648, 1649, 1653, 1655, 1659, 1673, 1694, 1699, 1700, 1703, 1704, 1716, 1718, 1720, 1724, 1726, 1728, 1729, 1733, 1742, 1745, 1758, 1781, 1789, 1790, 1791, 1793, 1794, 1800, 1801, 1802, 1806, 1807, 1817, 1828, 1839, 1840, 1841, 1842, 1844, 1845, 1846, 1849, 1855, 1856, 1859, 1861, 1862, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1895, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1907, 1910, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1927], "f": [0, 2, 11, 13, 15, 21, 26, 27, 38, 40, 46, 48, 49, 54, 55, 63, 64, 67, 68, 69, 70, 173, 257, 285, 334, 376, 891, 892, 1080, 1082, 1089, 1098, 1119, 1120, 1122, 1123, 1124, 1125, 1129, 1130, 1142, 1189, 1196, 1199, 1200, 1260, 1387, 1389, 1390, 1392, 1421, 1470, 1487, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1511, 1512, 1515, 1516, 1522, 1555, 1557, 1558, 1570, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1738, 1849, 1859, 1861, 1862, 1875, 1876, 1882, 1885, 1887, 1889, 1890, 1891, 1893, 1899, 1900, 1904, 1905, 1916, 1921, 1923, 1927], "arg": [0, 1, 2, 4, 5, 6, 13, 14, 16, 21, 27, 28, 31, 37, 38, 40, 44, 45, 46, 48, 49, 55, 56, 58, 59, 60, 62, 69, 70, 87, 576, 599, 676, 728, 743, 745, 747, 748, 749, 750, 756, 758, 759, 820, 857, 886, 888, 893, 894, 1008, 1118, 1122, 1123, 1124, 1130, 1189, 1192, 1278, 1337, 1338, 1355, 1357, 1373, 1381, 1383, 1388, 1391, 1410, 1412, 1413, 1421, 1424, 1425, 1426, 1428, 1435, 1436, 1449, 1451, 1452, 1453, 1455, 1459, 1460, 1461, 1462, 1469, 1492, 1493, 1503, 1532, 1555, 1563, 1592, 1601, 1615, 1620, 1634, 1641, 1643, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1808, 1840, 1846, 1849, 1856, 1860, 1862, 1863, 1874, 1876, 1882, 1885, 1886, 1887, 1888, 1895, 1900, 1901, 1904, 1905, 1912, 1913, 1914, 1918, 1926, 1927], "aten_graph": 0, "pre_autograd": 0, "decomposition_t": 0, "tracing_mod": 0, "symbol": [0, 15, 16, 26, 31, 36, 83, 620, 813, 1203, 1257, 1391, 1436, 1830, 1846, 1857, 1862, 1901], "constraint": [0, 12, 15, 40, 45, 790, 791, 898, 997, 1008, 1124, 1601, 1609, 1634, 1677, 1857, 1862, 1877, 1888, 1890, 1893, 1916], "assume_static_by_default": [0, 15], "kwarg": [0, 1, 2, 6, 13, 14, 27, 28, 31, 37, 40, 41, 44, 57, 62, 70, 576, 599, 743, 756, 758, 759, 817, 818, 820, 823, 886, 966, 968, 1005, 1006, 1118, 1129, 1130, 1189, 1192, 1194, 1252, 1278, 1373, 1383, 1391, 1410, 1421, 1436, 1451, 1455, 1459, 1461, 1462, 1592, 1597, 1601, 1615, 1620, 1624, 1634, 1641, 1643, 1646, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1738, 1840, 1849, 1856, 1862, 1863, 1887, 1888, 1893, 1901, 1903, 1912, 1918, 1926, 1927], "input": [0, 2, 3, 4, 6, 10, 12, 15, 16, 26, 27, 28, 29, 32, 35, 37, 38, 40, 41, 44, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 70, 82, 88, 150, 259, 279, 300, 400, 481, 514, 605, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 716, 724, 725, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 798, 810, 813, 815, 833, 834, 835, 836, 853, 854, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 913, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 932, 933, 935, 937, 938, 940, 941, 942, 943, 944, 945, 946, 948, 951, 954, 955, 956, 957, 958, 959, 960, 961, 962, 978, 1005, 1006, 1008, 1041, 1042, 1043, 1044, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1062, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1130, 1131, 1132, 1133, 1134, 1135, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1171, 1174, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1192, 1193, 1195, 1196, 1200, 1202, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1277, 1279, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1588, 1589, 1590, 1591, 1592, 1594, 1595, 1596, 1597, 1599, 1600, 1601, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1627, 1628, 1629, 1630, 1634, 1635, 1636, 1638, 1643, 1646, 1647, 1648, 1650, 1651, 1653, 1655, 1658, 1659, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1681, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1716, 1718, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1739, 1740, 1741, 1744, 1745, 1747, 1758, 1759, 1760, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1816, 1817, 1818, 1819, 1820, 1822, 1824, 1825, 1826, 1827, 1830, 1831, 1833, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1852, 1853, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1869, 1870, 1876, 1877, 1878, 1880, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1916, 1917, 1919, 1920, 1923, 1925, 1926, 1927], "format": [0, 2, 28, 35, 38, 40, 42, 50, 59, 70, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 239, 266, 296, 324, 330, 392, 496, 497, 521, 576, 579, 580, 581, 582, 583, 584, 676, 731, 756, 788, 789, 946, 1008, 1062, 1063, 1064, 1117, 1186, 1189, 1202, 1231, 1344, 1365, 1373, 1391, 1421, 1436, 1601, 1635, 1637, 1653, 1655, 1656, 1658, 1716, 1718, 1720, 1738, 1781, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1855, 1856, 1859, 1862, 1863, 1868, 1885, 1887, 1893, 1898, 1900, 1901, 1902, 1906, 1907, 1912, 1913, 1916, 1919, 1921, 1923], "execut": [0, 1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 17, 18, 21, 23, 25, 27, 28, 31, 32, 37, 40, 42, 44, 48, 49, 51, 58, 62, 67, 69, 70, 485, 909, 910, 968, 979, 1040, 1119, 1189, 1190, 1192, 1204, 1205, 1260, 1302, 1303, 1358, 1421, 1427, 1465, 1466, 1467, 1468, 1595, 1597, 1601, 1753, 1857, 1859, 1861, 1863, 1870, 1881, 1883, 1884, 1889, 1892, 1893, 1895, 1897, 1899, 1900, 1906, 1907, 1912, 1913, 1916], "outsid": [0, 1, 6, 10, 23, 26, 37, 50, 62, 67, 680, 791, 881, 1118, 1120, 1124, 1129, 1190, 1520, 1601, 1679, 1680, 1685, 1686, 1692, 1861, 1862, 1880, 1882, 1885, 1888, 1889, 1923], "pytorch": [0, 1, 2, 3, 4, 5, 6, 13, 15, 16, 17, 19, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 42, 43, 44, 45, 46, 47, 48, 50, 57, 58, 62, 63, 66, 68, 70, 82, 83, 85, 86, 150, 510, 579, 676, 694, 726, 727, 728, 729, 741, 742, 752, 756, 757, 758, 759, 760, 761, 788, 789, 806, 807, 808, 809, 876, 889, 934, 939, 940, 949, 950, 962, 987, 988, 999, 1004, 1062, 1107, 1113, 1119, 1120, 1124, 1129, 1130, 1135, 1175, 1176, 1199, 1219, 1230, 1232, 1233, 1234, 1237, 1250, 1259, 1275, 1278, 1279, 1290, 1337, 1338, 1344, 1373, 1387, 1417, 1418, 1419, 1464, 1493, 1570, 1601, 1634, 1642, 1643, 1648, 1655, 1659, 1706, 1738, 1746, 1747, 1757, 1803, 1807, 1830, 1842, 1849, 1856, 1858, 1861, 1862, 1866, 1868, 1869, 1871, 1872, 1876, 1877, 1878, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1903, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1916, 1917, 1919, 1920, 1921, 1927, 1928], "A": [0, 2, 3, 4, 6, 8, 9, 10, 12, 13, 16, 17, 19, 20, 21, 22, 26, 27, 28, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 48, 54, 57, 58, 59, 62, 63, 68, 69, 75, 88, 556, 576, 579, 580, 581, 590, 620, 676, 688, 693, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 741, 742, 752, 757, 758, 759, 760, 761, 786, 788, 810, 854, 855, 857, 858, 915, 918, 927, 928, 930, 935, 940, 941, 948, 949, 957, 961, 965, 966, 968, 976, 978, 979, 1047, 1062, 1067, 1075, 1076, 1077, 1089, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1133, 1142, 1145, 1146, 1147, 1151, 1179, 1180, 1181, 1182, 1185, 1187, 1189, 1192, 1196, 1199, 1201, 1204, 1205, 1209, 1213, 1218, 1219, 1220, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1261, 1269, 1277, 1278, 1279, 1280, 1284, 1322, 1338, 1342, 1344, 1357, 1364, 1365, 1374, 1375, 1383, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1411, 1420, 1421, 1427, 1449, 1454, 1456, 1464, 1469, 1470, 1485, 1491, 1503, 1511, 1522, 1532, 1539, 1550, 1570, 1576, 1577, 1592, 1601, 1602, 1603, 1604, 1608, 1610, 1613, 1635, 1636, 1639, 1655, 1656, 1657, 1658, 1663, 1665, 1666, 1671, 1675, 1677, 1681, 1682, 1684, 1687, 1688, 1690, 1696, 1706, 1708, 1709, 1710, 1711, 1712, 1723, 1729, 1735, 1738, 1771, 1780, 1782, 1783, 1786, 1798, 1802, 1803, 1807, 1808, 1825, 1830, 1831, 1832, 1833, 1834, 1838, 1839, 1840, 1841, 1842, 1845, 1849, 1852, 1856, 1858, 1859, 1860, 1861, 1862, 1866, 1869, 1870, 1875, 1876, 1880, 1881, 1884, 1885, 1887, 1888, 1889, 1895, 1896, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1926, 1927, 1928], "variabl": [0, 3, 4, 6, 15, 17, 20, 28, 31, 34, 36, 38, 46, 48, 50, 55, 60, 62, 67, 70, 446, 676, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 724, 725, 726, 727, 728, 730, 734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 795, 893, 957, 961, 1031, 1063, 1130, 1202, 1204, 1261, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1364, 1365, 1373, 1374, 1391, 1392, 1393, 1406, 1408, 1421, 1424, 1429, 1436, 1438, 1601, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1652, 1659, 1661, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1715, 1717, 1719, 1842, 1849, 1854, 1856, 1857, 1868, 1869, 1876, 1877, 1882, 1884, 1886, 1889, 1890, 1896, 1897, 1899, 1900, 1903, 1907, 1912, 1918, 1921], "length": [0, 15, 17, 28, 37, 38, 40, 42, 46, 259, 312, 314, 320, 350, 431, 432, 579, 580, 581, 731, 756, 810, 889, 903, 948, 979, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1115, 1130, 1163, 1186, 1204, 1208, 1320, 1321, 1339, 1344, 1349, 1358, 1365, 1368, 1373, 1389, 1391, 1427, 1436, 1464, 1472, 1495, 1496, 1497, 1504, 1512, 1531, 1570, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1713, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1787, 1789, 1790, 1791, 1793, 1794, 1803, 1828, 1849, 1858, 1860, 1862, 1869, 1876, 1877, 1883, 1889, 1916, 1923], "argument": [0, 1, 2, 4, 5, 6, 9, 10, 12, 16, 27, 31, 34, 37, 40, 41, 42, 44, 46, 48, 55, 58, 60, 62, 66, 67, 69, 70, 88, 150, 196, 209, 312, 320, 443, 444, 445, 446, 447, 485, 510, 514, 556, 576, 577, 579, 580, 581, 583, 584, 599, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 789, 790, 795, 815, 816, 817, 820, 821, 822, 837, 853, 854, 857, 859, 861, 876, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 893, 894, 895, 898, 900, 901, 902, 903, 904, 909, 910, 916, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 929, 933, 936, 938, 939, 940, 941, 942, 944, 946, 947, 951, 955, 956, 958, 959, 961, 962, 984, 986, 990, 991, 997, 1005, 1006, 1008, 1031, 1035, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1057, 1059, 1060, 1061, 1063, 1064, 1065, 1067, 1072, 1075, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1134, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1163, 1166, 1183, 1184, 1186, 1189, 1192, 1200, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1325, 1339, 1340, 1341, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1365, 1368, 1371, 1373, 1380, 1383, 1384, 1385, 1386, 1387, 1391, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1417, 1418, 1419, 1421, 1422, 1427, 1428, 1429, 1436, 1460, 1468, 1472, 1474, 1475, 1518, 1520, 1556, 1592, 1595, 1596, 1597, 1598, 1601, 1612, 1613, 1615, 1619, 1620, 1624, 1628, 1634, 1643, 1647, 1649, 1652, 1653, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1682, 1694, 1695, 1699, 1700, 1703, 1704, 1706, 1707, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1735, 1737, 1742, 1746, 1752, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1780, 1782, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1839, 1842, 1844, 1845, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1860, 1861, 1862, 1864, 1866, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1897, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1916, 1917, 1918, 1919, 1921, 1923, 1927, 1928], "list": [0, 1, 2, 4, 6, 7, 8, 10, 13, 15, 16, 19, 20, 21, 22, 27, 28, 31, 32, 34, 37, 38, 40, 41, 42, 44, 46, 48, 57, 59, 62, 67, 69, 70, 83, 184, 240, 301, 443, 445, 447, 574, 579, 580, 581, 585, 615, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 788, 789, 794, 810, 811, 812, 813, 834, 850, 857, 875, 882, 883, 884, 931, 932, 935, 939, 943, 948, 949, 989, 995, 1047, 1060, 1062, 1063, 1102, 1116, 1128, 1142, 1152, 1189, 1193, 1195, 1200, 1202, 1204, 1205, 1288, 1290, 1319, 1358, 1364, 1393, 1421, 1423, 1432, 1449, 1460, 1471, 1511, 1585, 1601, 1602, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1648, 1652, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1682, 1684, 1686, 1687, 1688, 1690, 1691, 1709, 1711, 1712, 1715, 1719, 1734, 1771, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1801, 1802, 1806, 1821, 1822, 1823, 1839, 1840, 1842, 1844, 1845, 1850, 1854, 1856, 1859, 1860, 1863, 1864, 1868, 1870, 1872, 1875, 1876, 1877, 1887, 1891, 1893, 1896, 1897, 1898, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927], "bool": [0, 1, 2, 3, 4, 6, 15, 19, 27, 31, 37, 38, 40, 41, 42, 44, 45, 46, 48, 51, 57, 59, 62, 69, 70, 150, 196, 209, 244, 259, 318, 320, 327, 328, 329, 330, 332, 333, 338, 340, 443, 444, 445, 446, 447, 456, 469, 493, 514, 577, 599, 676, 689, 690, 691, 692, 693, 695, 731, 754, 775, 776, 781, 790, 810, 861, 870, 871, 872, 876, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 916, 918, 921, 923, 924, 926, 927, 933, 934, 940, 941, 942, 948, 949, 965, 972, 1002, 1008, 1020, 1063, 1064, 1065, 1068, 1075, 1080, 1098, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1123, 1124, 1125, 1129, 1131, 1146, 1147, 1150, 1151, 1164, 1174, 1178, 1180, 1186, 1189, 1193, 1195, 1196, 1204, 1205, 1208, 1210, 1218, 1219, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1241, 1243, 1245, 1246, 1249, 1250, 1251, 1252, 1258, 1259, 1260, 1261, 1270, 1271, 1272, 1273, 1275, 1276, 1278, 1280, 1286, 1288, 1289, 1291, 1294, 1302, 1303, 1311, 1316, 1317, 1318, 1319, 1320, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1412, 1413, 1414, 1415, 1416, 1421, 1424, 1425, 1426, 1427, 1428, 1430, 1435, 1438, 1439, 1440, 1441, 1448, 1452, 1453, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1473, 1485, 1492, 1493, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1517, 1520, 1522, 1524, 1531, 1532, 1555, 1563, 1570, 1589, 1601, 1602, 1605, 1606, 1608, 1610, 1612, 1613, 1614, 1635, 1636, 1637, 1638, 1640, 1643, 1648, 1652, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1696, 1702, 1704, 1706, 1707, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1742, 1747, 1751, 1752, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1780, 1789, 1790, 1791, 1792, 1793, 1794, 1801, 1802, 1803, 1806, 1807, 1815, 1821, 1825, 1830, 1839, 1840, 1842, 1843, 1844, 1845, 1854, 1855, 1856, 1858, 1859, 1860, 1861, 1862, 1871, 1872, 1874, 1875, 1876, 1877, 1891, 1898, 1900, 1902, 1904, 1905, 1906, 1911, 1912, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927], "aten": [0, 2, 3, 4, 13, 18, 22, 28, 31, 34, 82, 1005, 1119, 1311, 1657, 1658, 1782, 1857, 1859, 1860, 1866, 1884, 1899, 1902, 1906, 1907], "oper": [0, 1, 3, 5, 6, 8, 9, 12, 14, 15, 17, 18, 20, 21, 25, 26, 27, 28, 29, 32, 34, 37, 42, 46, 47, 54, 55, 57, 58, 63, 68, 69, 70, 82, 83, 84, 85, 86, 253, 312, 320, 334, 351, 401, 443, 444, 445, 446, 447, 490, 493, 510, 512, 514, 585, 682, 685, 737, 738, 739, 743, 744, 753, 754, 764, 765, 775, 781, 788, 789, 791, 792, 795, 819, 822, 855, 857, 858, 861, 885, 887, 893, 895, 917, 918, 920, 922, 925, 927, 929, 931, 936, 939, 942, 946, 955, 966, 968, 996, 1005, 1036, 1041, 1042, 1043, 1044, 1057, 1062, 1063, 1064, 1065, 1075, 1080, 1098, 1110, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1130, 1137, 1140, 1146, 1147, 1164, 1189, 1199, 1200, 1204, 1205, 1208, 1218, 1231, 1241, 1244, 1245, 1258, 1259, 1268, 1275, 1283, 1288, 1293, 1302, 1303, 1316, 1319, 1333, 1338, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1378, 1379, 1380, 1381, 1383, 1388, 1407, 1412, 1417, 1418, 1419, 1421, 1434, 1439, 1440, 1441, 1448, 1463, 1464, 1466, 1468, 1472, 1488, 1489, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1505, 1506, 1507, 1508, 1512, 1513, 1515, 1516, 1520, 1524, 1531, 1537, 1539, 1545, 1546, 1556, 1558, 1562, 1570, 1576, 1577, 1588, 1589, 1590, 1591, 1601, 1603, 1604, 1637, 1643, 1648, 1652, 1653, 1674, 1680, 1690, 1694, 1703, 1704, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1726, 1732, 1749, 1750, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1783, 1784, 1785, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1806, 1821, 1842, 1849, 1852, 1854, 1855, 1857, 1858, 1859, 1863, 1866, 1881, 1883, 1884, 1885, 1886, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1901, 1903, 1906, 1908, 1910, 1911, 1912, 1913, 1917, 1919, 1920, 1923], "default": [0, 1, 3, 4, 6, 10, 13, 15, 16, 17, 19, 22, 23, 24, 27, 28, 29, 31, 34, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 60, 62, 65, 66, 67, 68, 70, 150, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 239, 266, 289, 296, 324, 330, 392, 443, 444, 445, 446, 447, 456, 493, 496, 497, 517, 521, 576, 577, 579, 676, 690, 693, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 731, 751, 754, 756, 764, 765, 766, 768, 769, 770, 775, 781, 789, 794, 799, 804, 805, 810, 813, 815, 816, 817, 818, 821, 824, 825, 826, 827, 828, 829, 830, 831, 837, 838, 839, 840, 841, 842, 844, 845, 850, 851, 852, 854, 861, 875, 876, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 918, 927, 933, 937, 940, 941, 942, 946, 949, 961, 962, 965, 968, 970, 974, 977, 978, 979, 982, 983, 990, 991, 994, 1005, 1007, 1008, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1032, 1033, 1036, 1038, 1039, 1040, 1043, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1057, 1062, 1063, 1064, 1065, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1134, 1136, 1142, 1146, 1147, 1150, 1151, 1178, 1180, 1186, 1189, 1190, 1193, 1200, 1204, 1205, 1208, 1209, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1275, 1278, 1280, 1286, 1288, 1289, 1290, 1294, 1315, 1316, 1318, 1319, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1435, 1436, 1438, 1439, 1440, 1441, 1448, 1452, 1453, 1457, 1458, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1517, 1519, 1520, 1522, 1524, 1531, 1532, 1539, 1544, 1545, 1546, 1555, 1556, 1558, 1563, 1570, 1576, 1577, 1585, 1589, 1601, 1602, 1603, 1604, 1605, 1606, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1652, 1653, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1696, 1704, 1706, 1707, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1728, 1734, 1735, 1738, 1742, 1746, 1747, 1748, 1749, 1750, 1755, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1801, 1802, 1803, 1806, 1807, 1808, 1821, 1822, 1828, 1830, 1832, 1834, 1839, 1840, 1842, 1843, 1844, 1845, 1849, 1854, 1855, 1856, 1857, 1859, 1862, 1866, 1868, 1870, 1871, 1874, 1877, 1880, 1881, 1884, 1886, 1887, 1888, 1889, 1891, 1893, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1911, 1912, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1928], "tranform": 0, "autograd": [0, 1, 5, 6, 8, 9, 17, 18, 23, 28, 40, 44, 46, 62, 63, 66, 139, 334, 443, 444, 445, 446, 447, 493, 685, 861, 875, 876, 890, 916, 918, 927, 946, 1008, 1063, 1064, 1065, 1075, 1080, 1098, 1115, 1116, 1117, 1118, 1119, 1128, 1130, 1146, 1147, 1164, 1189, 1208, 1228, 1259, 1275, 1283, 1293, 1375, 1421, 1427, 1468, 1522, 1537, 1601, 1652, 1653, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1849, 1854, 1855, 1857, 1860, 1864, 1869, 1877, 1880, 1885, 1886, 1889, 1890, 1892, 1893, 1906, 1922, 1923, 1924, 1927], "appli": [0, 1, 2, 4, 6, 9, 12, 14, 18, 27, 38, 42, 44, 45, 46, 48, 50, 57, 62, 66, 67, 68, 70, 82, 83, 119, 320, 397, 470, 510, 514, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 731, 734, 735, 736, 737, 738, 739, 754, 756, 762, 763, 764, 765, 766, 767, 768, 769, 770, 776, 777, 778, 779, 780, 806, 807, 808, 809, 836, 854, 893, 895, 896, 904, 916, 922, 925, 956, 1050, 1052, 1057, 1066, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1110, 1118, 1119, 1126, 1129, 1130, 1189, 1193, 1238, 1261, 1278, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1363, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1439, 1440, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1515, 1516, 1517, 1518, 1521, 1523, 1524, 1525, 1526, 1530, 1531, 1532, 1534, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1550, 1555, 1563, 1564, 1565, 1566, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1592, 1597, 1598, 1601, 1608, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1634, 1635, 1642, 1643, 1645, 1646, 1648, 1661, 1673, 1677, 1690, 1703, 1708, 1709, 1710, 1711, 1712, 1752, 1783, 1784, 1786, 1803, 1839, 1840, 1841, 1849, 1859, 1862, 1869, 1874, 1876, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1893, 1896, 1900, 1903, 1904, 1905, 1907, 1910, 1913, 1916, 1917], "further": [0, 1, 2, 5, 10, 15, 28, 31, 38, 40, 62, 69, 1134, 1193, 1228, 1329, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1601, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1694, 1858, 1862, 1869, 1893, 1895, 1904, 1906, 1914, 1921, 1926], "flag": [0, 2, 3, 17, 18, 19, 27, 28, 31, 40, 41, 47, 58, 60, 62, 65, 67, 70, 731, 869, 897, 899, 916, 918, 927, 940, 941, 949, 993, 1113, 1118, 1120, 1121, 1123, 1124, 1125, 1129, 1130, 1146, 1147, 1164, 1170, 1177, 1280, 1427, 1531, 1532, 1601, 1610, 1613, 1643, 1663, 1664, 1750, 1752, 1757, 1782, 1830, 1842, 1849, 1857, 1859, 1862, 1874, 1882, 1885, 1887, 1896, 1897, 1900, 1904, 1907, 1921, 1922], "onli": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 23, 26, 27, 28, 31, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 55, 57, 58, 62, 66, 67, 69, 70, 82, 83, 119, 253, 310, 320, 322, 334, 351, 443, 444, 445, 446, 447, 456, 479, 484, 510, 512, 514, 553, 579, 580, 581, 583, 584, 610, 613, 691, 692, 731, 734, 735, 736, 737, 739, 768, 769, 770, 775, 781, 782, 783, 787, 789, 797, 810, 813, 816, 817, 820, 824, 838, 845, 854, 874, 890, 893, 894, 895, 896, 897, 899, 904, 918, 919, 927, 964, 965, 966, 968, 975, 977, 979, 1005, 1006, 1008, 1029, 1059, 1063, 1065, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1108, 1109, 1113, 1114, 1119, 1130, 1142, 1146, 1147, 1151, 1159, 1170, 1178, 1187, 1189, 1192, 1193, 1200, 1204, 1205, 1208, 1219, 1224, 1225, 1227, 1228, 1229, 1230, 1232, 1234, 1235, 1236, 1237, 1247, 1249, 1250, 1252, 1253, 1260, 1261, 1278, 1283, 1329, 1352, 1353, 1354, 1357, 1358, 1364, 1365, 1368, 1391, 1421, 1424, 1426, 1427, 1429, 1437, 1460, 1472, 1473, 1503, 1512, 1514, 1520, 1531, 1558, 1588, 1589, 1592, 1595, 1596, 1597, 1598, 1601, 1603, 1604, 1614, 1634, 1635, 1636, 1648, 1655, 1659, 1663, 1664, 1666, 1677, 1680, 1684, 1687, 1688, 1690, 1694, 1706, 1715, 1719, 1721, 1723, 1746, 1750, 1751, 1753, 1757, 1784, 1788, 1798, 1803, 1807, 1821, 1832, 1834, 1839, 1840, 1842, 1846, 1847, 1848, 1849, 1856, 1860, 1861, 1862, 1866, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924], "valid": [0, 2, 15, 21, 23, 28, 40, 46, 55, 57, 70, 84, 743, 744, 753, 787, 940, 1005, 1062, 1187, 1189, 1190, 1210, 1224, 1225, 1234, 1235, 1236, 1247, 1252, 1283, 1349, 1350, 1351, 1495, 1496, 1497, 1520, 1592, 1619, 1624, 1628, 1657, 1658, 1678, 1679, 1684, 1685, 1686, 1687, 1689, 1690, 1691, 1692, 1706, 1859, 1860, 1861, 1862, 1876, 1877, 1882, 1885, 1887, 1891, 1900, 1903, 1906, 1912, 1913], "dict": [0, 1, 4, 6, 19, 23, 27, 37, 38, 40, 41, 42, 44, 45, 46, 48, 51, 55, 59, 62, 64, 66, 70, 676, 788, 789, 790, 811, 812, 813, 832, 850, 906, 949, 1005, 1006, 1019, 1028, 1118, 1128, 1130, 1187, 1188, 1189, 1190, 1195, 1200, 1204, 1205, 1260, 1261, 1358, 1368, 1421, 1422, 1431, 1472, 1592, 1601, 1624, 1643, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1849, 1856, 1859, 1860, 1862, 1863, 1871, 1872, 1887, 1893, 1898, 1900, 1902, 1903, 1912, 1913, 1921, 1925, 1926, 1927], "dictionari": [0, 4, 19, 23, 31, 37, 38, 46, 66, 70, 676, 788, 789, 790, 793, 811, 812, 813, 834, 835, 836, 850, 854, 860, 949, 1019, 1118, 1128, 1189, 1190, 1196, 1200, 1204, 1205, 1260, 1261, 1364, 1365, 1421, 1422, 1431, 1511, 1624, 1861, 1863, 1887, 1893, 1900, 1903, 1912, 1921, 1925, 1927], "map": [0, 4, 16, 21, 27, 31, 40, 46, 48, 54, 55, 57, 58, 62, 67, 68, 70, 680, 731, 788, 789, 793, 795, 810, 811, 813, 835, 836, 850, 851, 852, 853, 854, 860, 881, 930, 1119, 1130, 1142, 1151, 1196, 1199, 1260, 1261, 1352, 1353, 1354, 1360, 1361, 1362, 1366, 1368, 1417, 1418, 1419, 1422, 1431, 1506, 1507, 1508, 1513, 1608, 1624, 1707, 1709, 1839, 1840, 1849, 1863, 1876, 1878, 1882, 1886, 1887, 1888, 1894, 1899, 1904, 1907, 1910, 1912, 1913, 1914, 1918, 1923, 1927], "decomposit": [0, 15, 16, 27, 46, 70, 940, 1134, 1218, 1219, 1224, 1225, 1226, 1227, 1228, 1230, 1235, 1236, 1237, 1238, 1243, 1247, 1248, 1252, 1253, 1278, 1280, 1608, 1694, 1696, 1700, 1706, 1807, 1808, 1857, 1896], "requir": [0, 1, 2, 6, 9, 10, 12, 13, 14, 16, 17, 19, 20, 23, 31, 32, 37, 38, 40, 41, 42, 44, 46, 48, 56, 57, 62, 65, 67, 69, 70, 119, 150, 221, 334, 456, 493, 510, 512, 514, 556, 789, 791, 819, 822, 876, 885, 889, 894, 897, 898, 899, 900, 901, 902, 903, 949, 962, 963, 1018, 1062, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1103, 1104, 1130, 1131, 1202, 1228, 1259, 1261, 1275, 1357, 1364, 1365, 1464, 1465, 1466, 1467, 1468, 1470, 1512, 1570, 1592, 1601, 1602, 1611, 1613, 1615, 1655, 1666, 1676, 1694, 1791, 1803, 1842, 1849, 1856, 1859, 1862, 1864, 1869, 1870, 1874, 1876, 1877, 1881, 1882, 1884, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1895, 1898, 1900, 1904, 1905, 1907, 1908, 1912, 1913, 1914, 1916, 1921, 1923, 1924, 1926, 1927], "specifi": [0, 2, 3, 4, 6, 9, 13, 15, 19, 27, 31, 37, 38, 40, 44, 45, 46, 48, 50, 55, 56, 57, 58, 62, 70, 97, 150, 195, 258, 318, 330, 469, 479, 490, 494, 496, 497, 510, 512, 514, 533, 541, 542, 556, 576, 579, 580, 581, 583, 584, 599, 676, 731, 737, 738, 739, 764, 765, 789, 790, 791, 795, 810, 819, 822, 836, 850, 854, 855, 857, 874, 876, 888, 889, 903, 920, 943, 949, 960, 961, 962, 965, 966, 975, 976, 977, 979, 994, 997, 1008, 1033, 1043, 1044, 1045, 1049, 1050, 1052, 1062, 1065, 1076, 1079, 1081, 1082, 1084, 1085, 1087, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1120, 1121, 1124, 1130, 1131, 1142, 1150, 1151, 1189, 1193, 1204, 1205, 1231, 1241, 1243, 1245, 1246, 1255, 1258, 1260, 1261, 1271, 1288, 1290, 1296, 1315, 1316, 1319, 1335, 1336, 1337, 1338, 1344, 1353, 1355, 1357, 1358, 1364, 1365, 1368, 1375, 1381, 1382, 1387, 1388, 1391, 1412, 1413, 1418, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1452, 1453, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1488, 1489, 1492, 1493, 1503, 1504, 1511, 1512, 1517, 1520, 1532, 1539, 1555, 1556, 1563, 1570, 1576, 1577, 1601, 1606, 1608, 1609, 1612, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1645, 1648, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1671, 1673, 1674, 1675, 1676, 1677, 1682, 1687, 1688, 1696, 1704, 1713, 1729, 1734, 1735, 1738, 1755, 1783, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1801, 1802, 1806, 1822, 1824, 1828, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1849, 1856, 1859, 1861, 1862, 1866, 1868, 1869, 1871, 1872, 1875, 1876, 1882, 1885, 1887, 1891, 1893, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1911, 1912, 1916, 1917, 1918, 1919, 1921, 1923], "str": [0, 1, 2, 3, 4, 17, 19, 21, 27, 28, 31, 37, 38, 40, 42, 44, 45, 46, 48, 51, 55, 57, 59, 62, 70, 320, 510, 514, 599, 775, 781, 788, 789, 790, 811, 812, 813, 850, 897, 899, 907, 911, 912, 937, 949, 964, 975, 976, 977, 979, 988, 989, 991, 992, 993, 1005, 1006, 1007, 1019, 1020, 1022, 1024, 1036, 1057, 1062, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1118, 1119, 1123, 1128, 1130, 1138, 1187, 1188, 1189, 1190, 1192, 1193, 1195, 1198, 1234, 1247, 1252, 1253, 1260, 1261, 1290, 1302, 1303, 1318, 1337, 1338, 1344, 1349, 1350, 1351, 1355, 1357, 1365, 1371, 1375, 1381, 1382, 1387, 1388, 1397, 1398, 1399, 1412, 1413, 1421, 1422, 1424, 1425, 1426, 1428, 1431, 1435, 1438, 1449, 1452, 1453, 1464, 1466, 1468, 1469, 1470, 1471, 1473, 1492, 1493, 1503, 1504, 1512, 1517, 1520, 1531, 1532, 1555, 1563, 1589, 1601, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1642, 1643, 1645, 1655, 1658, 1666, 1682, 1688, 1690, 1707, 1738, 1742, 1749, 1750, 1784, 1803, 1849, 1856, 1858, 1859, 1860, 1861, 1862, 1863, 1870, 1871, 1872, 1874, 1876, 1880, 1882, 1900, 1902, 1904, 1905, 1906, 1911, 1912, 1918, 1921, 1923, 1925, 1926, 1927], "result": [0, 2, 4, 5, 6, 8, 9, 10, 13, 16, 21, 22, 24, 27, 28, 31, 34, 37, 38, 40, 42, 46, 48, 50, 55, 58, 62, 67, 68, 69, 70, 153, 221, 222, 253, 254, 314, 334, 397, 493, 495, 552, 579, 580, 581, 583, 584, 614, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 756, 789, 873, 875, 891, 892, 897, 898, 899, 900, 901, 902, 904, 905, 917, 920, 931, 935, 940, 946, 948, 957, 959, 975, 977, 979, 1005, 1006, 1019, 1041, 1042, 1043, 1044, 1045, 1057, 1062, 1080, 1083, 1089, 1098, 1105, 1107, 1110, 1114, 1115, 1118, 1119, 1120, 1123, 1124, 1129, 1130, 1134, 1150, 1151, 1153, 1166, 1180, 1189, 1192, 1193, 1200, 1204, 1205, 1207, 1209, 1210, 1214, 1228, 1230, 1232, 1233, 1241, 1245, 1247, 1249, 1250, 1251, 1258, 1268, 1269, 1276, 1286, 1288, 1289, 1290, 1291, 1293, 1294, 1316, 1319, 1358, 1360, 1361, 1362, 1366, 1368, 1373, 1387, 1391, 1421, 1427, 1436, 1465, 1466, 1467, 1468, 1472, 1502, 1520, 1531, 1585, 1588, 1589, 1601, 1608, 1610, 1643, 1646, 1647, 1648, 1649, 1658, 1688, 1694, 1696, 1703, 1704, 1707, 1713, 1726, 1732, 1747, 1775, 1785, 1787, 1788, 1799, 1801, 1802, 1803, 1806, 1807, 1808, 1817, 1821, 1822, 1827, 1828, 1830, 1831, 1833, 1844, 1845, 1849, 1859, 1860, 1861, 1862, 1869, 1870, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1900, 1901, 1903, 1905, 1906, 1908, 1909, 1912, 1913, 1916, 1919, 1921, 1922, 1923, 1926, 1927], "need": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 21, 23, 28, 31, 32, 37, 38, 40, 41, 42, 44, 45, 46, 49, 50, 55, 57, 58, 60, 62, 64, 65, 67, 70, 150, 253, 469, 492, 496, 579, 676, 730, 731, 815, 816, 817, 820, 821, 822, 837, 854, 885, 889, 893, 894, 903, 930, 931, 939, 999, 1008, 1015, 1050, 1052, 1062, 1083, 1085, 1105, 1118, 1189, 1282, 1311, 1357, 1364, 1417, 1418, 1419, 1421, 1427, 1464, 1466, 1468, 1495, 1496, 1497, 1588, 1601, 1613, 1615, 1619, 1621, 1649, 1677, 1723, 1728, 1742, 1800, 1828, 1857, 1859, 1861, 1862, 1869, 1870, 1874, 1876, 1877, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1910, 1912, 1913, 1914, 1916, 1918, 1919, 1923, 1924, 1926, 1927], "effect": [0, 1, 4, 8, 12, 31, 37, 38, 40, 46, 59, 67, 70, 196, 209, 599, 731, 775, 781, 997, 1045, 1130, 1189, 1231, 1232, 1233, 1234, 1290, 1329, 1344, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1366, 1421, 1427, 1473, 1531, 1558, 1589, 1595, 1601, 1602, 1620, 1674, 1682, 1782, 1787, 1807, 1828, 1849, 1856, 1859, 1870, 1880, 1881, 1882, 1885, 1887, 1907, 1910, 1918, 1919, 1921], "By": [0, 2, 3, 4, 6, 14, 17, 23, 26, 28, 31, 37, 40, 49, 54, 70, 443, 444, 445, 446, 447, 876, 961, 968, 1011, 1013, 1045, 1057, 1080, 1082, 1083, 1084, 1085, 1093, 1094, 1095, 1120, 1121, 1123, 1124, 1130, 1142, 1150, 1151, 1193, 1241, 1252, 1260, 1289, 1294, 1315, 1337, 1338, 1339, 1340, 1341, 1355, 1357, 1375, 1381, 1384, 1385, 1386, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1460, 1469, 1492, 1493, 1503, 1532, 1555, 1563, 1645, 1696, 1707, 1728, 1782, 1828, 1849, 1856, 1861, 1866, 1869, 1882, 1885, 1887, 1889, 1893, 1896, 1898, 1900, 1903, 1911, 1912, 1916, 1923], "arbitrari": [0, 2, 4, 17, 23, 28, 40, 44, 253, 886, 1045, 1252, 1260, 1358, 1364, 1388, 1412, 1472, 1492, 1493, 1511, 1532, 1558, 1634, 1807, 1828, 1862, 1868, 1882, 1888, 1892, 1893, 1903, 1905, 1907, 1916, 1924, 1927], "keyword": [0, 1, 2, 6, 37, 40, 41, 44, 62, 67, 70, 88, 312, 320, 443, 444, 445, 446, 447, 577, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 857, 861, 876, 877, 878, 879, 880, 881, 917, 918, 919, 921, 922, 923, 924, 925, 926, 927, 929, 933, 936, 938, 940, 941, 942, 944, 946, 947, 951, 955, 956, 958, 959, 961, 962, 975, 977, 979, 1005, 1006, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1054, 1057, 1059, 1061, 1063, 1064, 1065, 1067, 1072, 1075, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1115, 1116, 1117, 1118, 1131, 1132, 1133, 1134, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1163, 1166, 1183, 1184, 1189, 1192, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1325, 1358, 1380, 1383, 1421, 1595, 1596, 1601, 1613, 1615, 1620, 1624, 1643, 1647, 1649, 1652, 1653, 1655, 1694, 1695, 1699, 1700, 1703, 1704, 1706, 1707, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1735, 1737, 1742, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1780, 1782, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1799, 1800, 1801, 1802, 1804, 1806, 1807, 1818, 1819, 1820, 1821, 1825, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1842, 1844, 1845, 1846, 1851, 1852, 1854, 1855, 1856, 1862, 1863, 1876, 1877, 1887, 1896, 1900, 1903, 1912, 1916, 1917, 1921, 1924, 1927], "tupl": [0, 4, 6, 21, 27, 31, 37, 42, 48, 54, 55, 57, 62, 70, 318, 443, 445, 447, 494, 517, 533, 556, 579, 580, 581, 691, 692, 693, 731, 762, 763, 764, 765, 768, 769, 770, 775, 781, 782, 783, 789, 813, 814, 850, 857, 858, 874, 875, 882, 883, 884, 885, 886, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 932, 960, 975, 976, 979, 990, 1008, 1014, 1041, 1042, 1060, 1063, 1065, 1079, 1081, 1082, 1084, 1085, 1087, 1088, 1089, 1091, 1092, 1094, 1095, 1097, 1099, 1102, 1112, 1116, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1134, 1150, 1152, 1189, 1195, 1200, 1204, 1205, 1210, 1219, 1224, 1225, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1241, 1245, 1247, 1248, 1250, 1252, 1255, 1258, 1276, 1278, 1280, 1286, 1288, 1290, 1291, 1294, 1296, 1316, 1319, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1368, 1369, 1370, 1389, 1390, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1427, 1431, 1442, 1443, 1444, 1445, 1446, 1447, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1483, 1484, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1531, 1544, 1545, 1546, 1556, 1558, 1589, 1590, 1591, 1596, 1597, 1598, 1601, 1613, 1624, 1637, 1643, 1647, 1648, 1652, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1696, 1697, 1706, 1715, 1717, 1719, 1729, 1733, 1734, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1801, 1802, 1806, 1807, 1808, 1821, 1822, 1823, 1824, 1825, 1830, 1837, 1838, 1839, 1840, 1844, 1845, 1849, 1850, 1852, 1854, 1859, 1860, 1863, 1874, 1877, 1882, 1885, 1887, 1888, 1893, 1898, 1900, 1903, 1904, 1907, 1912, 1916, 1921, 1923, 1926, 1927], "guard": [0, 17, 23, 25, 28, 48, 676, 1857, 1868, 1895, 1902, 1904, 1924, 1927], "repres": [0, 2, 9, 15, 16, 21, 29, 37, 38, 46, 47, 48, 50, 51, 57, 59, 62, 70, 82, 756, 788, 789, 792, 885, 957, 961, 963, 995, 998, 1062, 1083, 1085, 1090, 1092, 1093, 1094, 1095, 1119, 1142, 1149, 1178, 1179, 1182, 1185, 1188, 1204, 1205, 1236, 1278, 1329, 1344, 1421, 1427, 1468, 1470, 1472, 1601, 1607, 1610, 1615, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1634, 1644, 1656, 1658, 1682, 1688, 1694, 1696, 1707, 1789, 1790, 1791, 1793, 1794, 1803, 1807, 1839, 1840, 1847, 1848, 1859, 1861, 1862, 1869, 1872, 1877, 1882, 1887, 1888, 1890, 1892, 1893, 1896, 1900, 1901, 1905, 1907, 1908, 1910, 1912, 1916, 1919, 1928], "option": [0, 1, 2, 4, 6, 14, 17, 18, 19, 20, 21, 22, 24, 27, 28, 31, 37, 40, 44, 45, 46, 48, 51, 55, 56, 57, 59, 60, 62, 70, 83, 88, 150, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 239, 266, 296, 324, 330, 392, 443, 444, 445, 446, 447, 485, 496, 497, 510, 517, 521, 533, 556, 576, 577, 579, 580, 581, 583, 584, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 731, 754, 775, 776, 781, 788, 790, 795, 814, 850, 855, 858, 861, 872, 874, 875, 876, 877, 878, 879, 880, 881, 888, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 933, 936, 938, 939, 940, 941, 942, 944, 946, 947, 948, 949, 955, 956, 958, 959, 960, 961, 962, 963, 965, 966, 968, 970, 974, 975, 977, 978, 979, 982, 983, 990, 991, 994, 997, 1005, 1006, 1007, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1032, 1033, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1059, 1061, 1062, 1063, 1064, 1065, 1067, 1072, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1124, 1131, 1132, 1133, 1134, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1155, 1163, 1166, 1178, 1180, 1183, 1184, 1186, 1187, 1189, 1190, 1193, 1195, 1202, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1302, 1303, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1325, 1327, 1328, 1329, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1368, 1369, 1370, 1371, 1375, 1378, 1379, 1380, 1381, 1382, 1387, 1388, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1407, 1412, 1413, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1435, 1439, 1440, 1441, 1448, 1452, 1453, 1460, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1485, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1511, 1512, 1515, 1516, 1517, 1520, 1522, 1531, 1532, 1539, 1544, 1545, 1546, 1555, 1556, 1563, 1570, 1576, 1577, 1589, 1597, 1598, 1601, 1602, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1642, 1643, 1645, 1647, 1648, 1649, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1671, 1673, 1674, 1675, 1676, 1677, 1681, 1694, 1695, 1696, 1699, 1703, 1704, 1706, 1707, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1735, 1737, 1742, 1755, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1818, 1819, 1820, 1821, 1822, 1825, 1827, 1830, 1831, 1832, 1833, 1834, 1836, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1851, 1852, 1854, 1855, 1856, 1859, 1860, 1862, 1864, 1866, 1868, 1870, 1871, 1872, 1877, 1880, 1885, 1887, 1888, 1889, 1892, 1893, 1897, 1900, 1904, 1906, 1907, 1912, 1916, 1917, 1919, 1921, 1923, 1926], "accumul": [0, 1, 2, 3, 15, 17, 28, 62, 150, 289, 312, 317, 318, 320, 469, 682, 889, 903, 1258, 1601, 1661, 1662, 1842, 1859, 1860, 1872, 1882, 1885, 1886, 1889, 1896, 1903, 1908, 1912, 1913, 1916], "dure": [0, 1, 2, 6, 12, 13, 17, 20, 21, 24, 27, 28, 31, 34, 38, 40, 42, 48, 49, 51, 57, 62, 69, 70, 83, 334, 500, 501, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 823, 885, 886, 895, 1007, 1008, 1020, 1021, 1040, 1199, 1201, 1202, 1204, 1260, 1333, 1339, 1340, 1341, 1358, 1359, 1364, 1365, 1384, 1385, 1386, 1439, 1460, 1466, 1468, 1505, 1511, 1512, 1592, 1601, 1603, 1604, 1641, 1655, 1658, 1691, 1788, 1832, 1834, 1861, 1869, 1870, 1872, 1875, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1890, 1892, 1893, 1896, 1897, 1900, 1904, 1906, 1907, 1910, 1912, 1914, 1923], "abov": [0, 1, 2, 4, 13, 14, 15, 17, 18, 20, 21, 22, 28, 32, 40, 46, 50, 57, 59, 62, 63, 68, 70, 82, 613, 676, 788, 789, 876, 918, 927, 942, 1019, 1045, 1049, 1050, 1051, 1052, 1053, 1062, 1134, 1146, 1147, 1189, 1190, 1209, 1220, 1224, 1225, 1243, 1245, 1246, 1249, 1252, 1255, 1258, 1261, 1337, 1368, 1421, 1449, 1457, 1472, 1570, 1592, 1649, 1682, 1706, 1717, 1718, 1750, 1755, 1768, 1787, 1828, 1831, 1832, 1833, 1834, 1856, 1859, 1861, 1862, 1869, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1893, 1897, 1898, 1900, 1904, 1907, 1912, 1913, 1914, 1916, 1917, 1923], "assertionerror": [0, 28, 70, 730, 1658, 1923], "without": [0, 1, 2, 4, 6, 8, 9, 10, 12, 15, 16, 17, 20, 28, 31, 34, 37, 38, 40, 41, 42, 44, 46, 50, 57, 62, 63, 68, 69, 70, 253, 613, 946, 966, 968, 1003, 1083, 1084, 1085, 1093, 1094, 1095, 1186, 1187, 1189, 1190, 1235, 1236, 1251, 1258, 1311, 1339, 1340, 1341, 1361, 1365, 1384, 1385, 1386, 1418, 1421, 1429, 1460, 1468, 1512, 1592, 1601, 1625, 1641, 1682, 1713, 1729, 1746, 1747, 1837, 1856, 1861, 1862, 1869, 1870, 1872, 1874, 1876, 1881, 1882, 1883, 1885, 1886, 1887, 1890, 1891, 1893, 1895, 1897, 1898, 1900, 1904, 1905, 1907, 1911, 1912, 1916, 1921, 1926, 1928], "dynamo": [0, 13, 15, 16, 18, 19, 20, 21, 23, 24, 28, 70, 676, 949, 1868, 1901], "output": [0, 1, 2, 5, 6, 8, 12, 13, 14, 15, 16, 17, 20, 21, 26, 27, 28, 34, 37, 38, 40, 44, 45, 46, 48, 54, 55, 66, 67, 68, 70, 139, 312, 320, 443, 444, 445, 447, 510, 514, 562, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 716, 724, 725, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 788, 789, 790, 792, 795, 798, 810, 813, 854, 857, 858, 859, 861, 870, 871, 874, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 917, 919, 920, 921, 922, 923, 924, 925, 926, 929, 933, 936, 937, 938, 939, 940, 941, 942, 944, 947, 955, 956, 958, 959, 962, 975, 977, 978, 979, 1005, 1006, 1008, 1018, 1019, 1041, 1042, 1043, 1044, 1046, 1049, 1050, 1052, 1054, 1057, 1059, 1061, 1062, 1063, 1064, 1065, 1067, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1106, 1107, 1108, 1109, 1110, 1112, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1142, 1145, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1163, 1166, 1183, 1184, 1186, 1189, 1193, 1200, 1204, 1205, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1511, 1512, 1514, 1515, 1516, 1517, 1520, 1522, 1531, 1532, 1537, 1539, 1544, 1545, 1546, 1555, 1556, 1560, 1561, 1562, 1563, 1570, 1585, 1589, 1590, 1591, 1595, 1597, 1598, 1601, 1609, 1610, 1611, 1614, 1635, 1637, 1638, 1642, 1645, 1647, 1648, 1649, 1652, 1653, 1655, 1658, 1659, 1677, 1681, 1694, 1695, 1703, 1704, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1727, 1728, 1730, 1731, 1735, 1737, 1742, 1750, 1755, 1758, 1760, 1772, 1773, 1775, 1780, 1784, 1785, 1787, 1788, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1818, 1819, 1820, 1825, 1828, 1830, 1831, 1833, 1836, 1838, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1849, 1851, 1852, 1854, 1855, 1856, 1859, 1860, 1862, 1868, 1870, 1875, 1876, 1877, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1893, 1896, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1913, 1916, 1917, 1919, 1920, 1921, 1923, 1925, 1926], "consist": [0, 13, 17, 28, 37, 40, 42, 45, 46, 57, 58, 70, 904, 940, 941, 1189, 1218, 1224, 1225, 1227, 1229, 1230, 1231, 1232, 1256, 1258, 1421, 1468, 1610, 1613, 1659, 1706, 1807, 1859, 1862, 1869, 1876, 1877, 1888, 1893, 1897, 1900, 1903, 1906, 1916], "type": [0, 2, 3, 4, 6, 13, 14, 15, 19, 20, 21, 27, 31, 32, 33, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 55, 57, 58, 59, 62, 67, 69, 70, 88, 150, 191, 196, 208, 325, 328, 332, 340, 443, 444, 445, 446, 447, 479, 555, 600, 676, 681, 682, 683, 684, 685, 686, 730, 731, 734, 735, 736, 745, 747, 748, 749, 750, 752, 760, 762, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 780, 788, 789, 790, 793, 811, 812, 813, 815, 816, 817, 818, 819, 821, 823, 836, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 875, 885, 886, 887, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 917, 918, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 934, 935, 936, 937, 939, 948, 949, 972, 974, 981, 982, 983, 985, 988, 989, 990, 991, 992, 993, 994, 995, 996, 1000, 1002, 1005, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1025, 1037, 1039, 1040, 1043, 1044, 1057, 1062, 1063, 1064, 1065, 1075, 1076, 1077, 1080, 1098, 1105, 1107, 1108, 1109, 1110, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1123, 1126, 1127, 1128, 1130, 1132, 1136, 1137, 1138, 1141, 1146, 1147, 1149, 1150, 1151, 1165, 1168, 1171, 1174, 1185, 1186, 1187, 1189, 1190, 1192, 1195, 1198, 1200, 1202, 1204, 1205, 1207, 1208, 1211, 1220, 1224, 1241, 1245, 1252, 1258, 1259, 1260, 1261, 1275, 1278, 1281, 1288, 1290, 1297, 1298, 1300, 1310, 1316, 1319, 1329, 1333, 1349, 1350, 1351, 1358, 1365, 1411, 1421, 1422, 1423, 1427, 1431, 1432, 1449, 1454, 1455, 1456, 1464, 1465, 1466, 1467, 1468, 1480, 1481, 1485, 1486, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1517, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1538, 1539, 1541, 1542, 1543, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1563, 1565, 1566, 1568, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1583, 1586, 1587, 1588, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1645, 1647, 1648, 1652, 1653, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1696, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1726, 1728, 1731, 1732, 1742, 1743, 1746, 1747, 1748, 1750, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1783, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1803, 1804, 1806, 1807, 1808, 1821, 1830, 1832, 1834, 1839, 1840, 1842, 1843, 1849, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1863, 1870, 1871, 1872, 1875, 1877, 1880, 1881, 1882, 1884, 1885, 1890, 1891, 1892, 1893, 1896, 1899, 1901, 1902, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1927], "headerdoc": 0, "wa": [0, 1, 2, 4, 8, 16, 18, 21, 22, 27, 34, 38, 40, 45, 55, 56, 57, 58, 62, 69, 70, 334, 484, 493, 676, 781, 788, 850, 939, 950, 965, 966, 989, 993, 1008, 1021, 1040, 1082, 1130, 1186, 1195, 1204, 1219, 1230, 1232, 1236, 1260, 1278, 1311, 1391, 1417, 1418, 1419, 1450, 1473, 1485, 1520, 1573, 1589, 1601, 1602, 1637, 1682, 1688, 1801, 1802, 1839, 1840, 1844, 1845, 1849, 1856, 1859, 1861, 1862, 1863, 1866, 1868, 1869, 1872, 1874, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1892, 1894, 1900, 1903, 1905, 1907, 1911, 1912, 1923], "author": [0, 14, 17, 20, 23, 24, 28, 38, 57, 58, 62, 1130, 1673, 1713, 1849, 1881], "chatgpt": 0, "slight": [0, 1746, 1916, 1919], "modif": [0, 17, 20, 32, 62, 70, 221, 776, 893, 1114, 1115, 1189, 1421, 1601, 1882, 1887, 1893, 1904, 1907], "don": [0, 1, 2, 5, 8, 10, 15, 16, 17, 18, 21, 22, 29, 40, 56, 63, 65, 67, 70, 150, 781, 791, 889, 890, 903, 1036, 1118, 1204, 1282, 1384, 1385, 1386, 1473, 1589, 1592, 1601, 1649, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1749, 1856, 1859, 1863, 1874, 1875, 1876, 1882, 1885, 1887, 1889, 1893, 1895, 1899, 1900, 1903, 1904, 1905, 1907, 1912, 1913, 1916, 1927], "ani": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 21, 23, 26, 27, 28, 29, 31, 34, 37, 38, 40, 41, 42, 44, 46, 48, 50, 51, 55, 56, 57, 58, 60, 62, 67, 69, 70, 150, 253, 496, 541, 613, 693, 754, 777, 788, 789, 790, 796, 806, 807, 808, 809, 811, 812, 813, 814, 819, 820, 822, 850, 861, 885, 886, 887, 889, 895, 897, 903, 904, 905, 931, 935, 936, 954, 965, 1001, 1008, 1019, 1078, 1079, 1081, 1082, 1083, 1085, 1089, 1093, 1094, 1095, 1110, 1118, 1119, 1126, 1127, 1128, 1130, 1151, 1188, 1189, 1193, 1195, 1199, 1200, 1202, 1204, 1210, 1218, 1220, 1224, 1225, 1229, 1234, 1235, 1236, 1241, 1242, 1245, 1249, 1252, 1258, 1260, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1337, 1338, 1342, 1343, 1349, 1350, 1351, 1358, 1359, 1363, 1367, 1368, 1371, 1372, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1387, 1388, 1407, 1408, 1410, 1411, 1412, 1420, 1421, 1429, 1431, 1432, 1435, 1439, 1440, 1441, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1470, 1471, 1472, 1491, 1495, 1496, 1497, 1537, 1556, 1557, 1570, 1592, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1635, 1636, 1638, 1641, 1643, 1648, 1655, 1658, 1677, 1682, 1722, 1738, 1753, 1755, 1807, 1849, 1856, 1859, 1860, 1861, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1916, 1918, 1921, 1923, 1925, 1926, 1927], "just": [0, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 21, 25, 27, 31, 38, 40, 45, 46, 48, 55, 70, 585, 683, 693, 786, 819, 822, 885, 887, 913, 954, 955, 1204, 1205, 1243, 1246, 1251, 1252, 1278, 1360, 1361, 1362, 1366, 1601, 1613, 1614, 1678, 1746, 1831, 1832, 1833, 1834, 1856, 1859, 1874, 1881, 1882, 1887, 1888, 1890, 1892, 1893, 1894, 1898, 1904, 1905, 1912, 1913, 1919, 1920, 1922, 1926], "prior": [0, 10, 12, 17, 38, 40, 42, 48, 896, 1261, 1466, 1468, 1570, 1624, 1883, 1885, 1887, 1903, 1907], "recurs": [0, 2, 14, 18, 21, 46, 62, 70, 1054, 1189, 1200, 1202, 1421, 1680, 1861, 1887, 1893, 1904, 1912], "manag": [0, 1, 2, 3, 6, 8, 15, 16, 17, 21, 40, 44, 46, 48, 55, 57, 58, 59, 62, 70, 88, 484, 890, 916, 963, 964, 966, 969, 970, 971, 973, 984, 986, 987, 988, 997, 998, 1008, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1026, 1027, 1028, 1035, 1037, 1066, 1120, 1124, 1129, 1164, 1302, 1570, 1601, 1610, 1611, 1613, 1646, 1752, 1782, 1857, 1862, 1863, 1882, 1889, 1892, 1900, 1905, 1906, 1911, 1912, 1913, 1916, 1919, 1924], "complet": [0, 8, 18, 21, 24, 26, 31, 37, 40, 42, 48, 49, 55, 57, 59, 67, 69, 484, 676, 857, 965, 966, 968, 1038, 1118, 1119, 1192, 1200, 1202, 1207, 1219, 1247, 1302, 1303, 1308, 1485, 1601, 1610, 1643, 1706, 1857, 1861, 1862, 1863, 1868, 1874, 1881, 1882, 1885, 1888, 1891, 1897, 1904, 1905, 1912, 1913], "skip": [0, 1, 15, 18, 21, 57, 855, 1062, 1115, 1218, 1219, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1776, 1859, 1881, 1882, 1885, 1886, 1887, 1893, 1903, 1906], "frame": [0, 9, 14, 15, 17, 18, 25, 28, 70, 1186, 1803, 1889, 1921], "well": [0, 2, 4, 8, 10, 13, 16, 18, 22, 23, 31, 38, 40, 57, 62, 67, 68, 70, 613, 787, 818, 821, 857, 1005, 1123, 1124, 1189, 1193, 1199, 1204, 1224, 1225, 1226, 1228, 1234, 1247, 1252, 1298, 1339, 1340, 1341, 1357, 1391, 1421, 1460, 1541, 1542, 1601, 1658, 1706, 1859, 1862, 1869, 1875, 1877, 1881, 1882, 1885, 1887, 1888, 1890, 1893, 1895, 1897, 1900, 1904, 1907, 1910, 1912, 1914, 1916, 1920, 1921, 1924], "invok": [0, 1, 3, 9, 12, 16, 18, 21, 26, 32, 34, 37, 40, 55, 57, 58, 69, 70, 897, 899, 1005, 1006, 1189, 1192, 1198, 1358, 1421, 1594, 1596, 1599, 1600, 1682, 1688, 1859, 1862, 1863, 1870, 1881, 1884, 1885, 1886, 1887, 1888, 1892, 1893, 1904, 1912, 1913], "associ": [0, 2, 9, 10, 16, 17, 21, 28, 40, 42, 51, 891, 971, 1022, 1024, 1150, 1151, 1189, 1238, 1249, 1251, 1260, 1344, 1421, 1431, 1504, 1601, 1609, 1655, 1764, 1766, 1859, 1862, 1868, 1875, 1876, 1882, 1890, 1893, 1896, 1904, 1905, 1906, 1912, 1913, 1919, 1922], "code": [0, 2, 4, 5, 9, 10, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 37, 38, 40, 46, 48, 58, 59, 67, 68, 69, 119, 676, 1005, 1006, 1019, 1119, 1164, 1189, 1193, 1194, 1199, 1200, 1201, 1204, 1205, 1206, 1219, 1230, 1232, 1260, 1437, 1449, 1601, 1754, 1856, 1857, 1861, 1862, 1868, 1876, 1882, 1883, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1898, 1899, 1900, 1903, 1911, 1912, 1913, 1914, 1919, 1920, 1924, 1927], "still": [0, 1, 2, 3, 8, 9, 16, 20, 21, 22, 23, 28, 37, 40, 45, 46, 48, 57, 69, 70, 790, 795, 894, 899, 1193, 1198, 1206, 1388, 1412, 1601, 1602, 1603, 1604, 1690, 1738, 1858, 1859, 1862, 1874, 1875, 1876, 1877, 1881, 1882, 1885, 1886, 1887, 1889, 1891, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1916], "process": [0, 1, 2, 4, 15, 17, 21, 28, 29, 31, 38, 40, 41, 42, 46, 48, 49, 50, 51, 57, 58, 59, 60, 62, 70, 965, 1001, 1007, 1032, 1189, 1199, 1261, 1298, 1306, 1337, 1338, 1355, 1357, 1364, 1365, 1381, 1388, 1412, 1413, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1460, 1464, 1466, 1468, 1469, 1492, 1493, 1503, 1532, 1555, 1563, 1601, 1685, 1691, 1757, 1771, 1856, 1857, 1859, 1872, 1874, 1875, 1876, 1882, 1884, 1885, 1886, 1887, 1892, 1893, 1895, 1897, 1899, 1900, 1904, 1905, 1906, 1907, 1910, 1912, 1914, 1916, 1918, 1925], "reset": [0, 2, 756, 816, 821, 889, 963, 1011, 1013, 1026, 1027, 1028, 1189, 1373, 1421, 1437, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1696, 1713, 1808, 1857, 1872, 1900, 1911], "clear": [0, 2, 3, 9, 10, 59, 70, 1189, 1421, 1422, 1431, 1658, 1856, 1882, 1885, 1893, 1898, 1902, 1903], "cach": [0, 1, 3, 4, 12, 17, 28, 46, 70, 484, 987, 988, 1005, 1008, 1013, 1015, 1017, 1019, 1027, 1032, 1297, 1298, 1299, 1602, 1613, 1874, 1889], "restor": [0, 3, 6, 14, 44, 70, 88, 1107, 1259, 1275, 1733, 1755, 1893, 1898], "initi": [0, 2, 4, 5, 9, 12, 21, 27, 33, 34, 37, 38, 42, 44, 48, 50, 57, 58, 60, 62, 88, 493, 576, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 741, 742, 752, 756, 760, 857, 858, 875, 965, 973, 994, 999, 1000, 1003, 1004, 1029, 1136, 1165, 1187, 1189, 1201, 1202, 1260, 1261, 1278, 1339, 1340, 1341, 1342, 1344, 1352, 1353, 1354, 1358, 1364, 1365, 1373, 1374, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1421, 1429, 1436, 1438, 1460, 1470, 1511, 1592, 1601, 1603, 1604, 1608, 1610, 1613, 1641, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1746, 1747, 1748, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1857, 1860, 1861, 1862, 1872, 1877, 1880, 1882, 1885, 1886, 1887, 1892, 1899, 1900, 1903, 1904, 1905, 1911, 1912, 1913], "class": [0, 1, 2, 3, 4, 13, 14, 15, 21, 23, 27, 28, 32, 37, 38, 40, 41, 42, 44, 45, 46, 48, 49, 51, 54, 55, 57, 59, 62, 67, 69, 88, 553, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 890, 893, 894, 895, 896, 916, 963, 964, 965, 966, 968, 969, 984, 986, 997, 1037, 1066, 1128, 1164, 1187, 1188, 1189, 1192, 1194, 1195, 1199, 1200, 1203, 1204, 1205, 1206, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1493, 1503, 1511, 1555, 1557, 1592, 1601, 1602, 1603, 1604, 1610, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1634, 1641, 1646, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1713, 1752, 1782, 1857, 1860, 1863, 1866, 1869, 1872, 1874, 1876, 1881, 1882, 1885, 1887, 1888, 1889, 1893, 1895, 1898, 1901, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928], "optimizedmodul": [0, 1857], "mod": [0, 13, 28, 70, 717, 718, 728, 734, 735, 736, 741, 742, 752, 760, 806, 807, 808, 809, 832, 833, 860, 1118, 1192, 1193, 1198, 1205, 1643, 1861, 1862, 1904, 1925], "dynamo_ctx": 0, "origin": [0, 2, 13, 14, 16, 17, 18, 21, 27, 28, 29, 34, 37, 38, 40, 42, 50, 62, 65, 69, 70, 206, 209, 221, 484, 541, 599, 603, 613, 676, 756, 793, 834, 835, 850, 853, 854, 934, 939, 966, 1082, 1083, 1085, 1089, 1093, 1094, 1095, 1101, 1118, 1128, 1163, 1186, 1196, 1200, 1201, 1204, 1205, 1282, 1296, 1329, 1333, 1345, 1357, 1358, 1373, 1450, 1460, 1503, 1573, 1608, 1609, 1610, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1634, 1637, 1640, 1642, 1643, 1645, 1658, 1688, 1697, 1733, 1744, 1780, 1795, 1828, 1839, 1840, 1859, 1862, 1868, 1874, 1876, 1882, 1885, 1887, 1889, 1892, 1895, 1896, 1898, 1900, 1904, 1905, 1907, 1908, 1918, 1925, 1926, 1927], "nn": [0, 1, 4, 6, 13, 16, 21, 26, 27, 28, 32, 37, 38, 40, 41, 44, 45, 58, 62, 63, 70, 297, 537, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 788, 789, 810, 850, 855, 856, 857, 858, 860, 1005, 1008, 1062, 1118, 1127, 1128, 1187, 1189, 1190, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1204, 1205, 1206, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1592, 1601, 1602, 1603, 1604, 1610, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1634, 1646, 1677, 1779, 1803, 1842, 1856, 1857, 1859, 1860, 1864, 1876, 1877, 1881, 1886, 1889, 1893, 1895, 1896, 1897, 1900, 1903, 1904, 1905, 1907, 1909, 1912, 1921, 1923, 1926], "object": [0, 1, 2, 4, 6, 7, 9, 13, 14, 16, 21, 23, 27, 31, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 57, 59, 62, 69, 70, 75, 88, 206, 209, 599, 789, 790, 850, 857, 876, 886, 887, 888, 913, 915, 986, 997, 1037, 1062, 1101, 1113, 1115, 1120, 1121, 1123, 1124, 1125, 1129, 1175, 1176, 1189, 1195, 1196, 1199, 1200, 1204, 1205, 1220, 1241, 1245, 1258, 1260, 1261, 1281, 1358, 1360, 1361, 1362, 1366, 1384, 1385, 1386, 1421, 1431, 1460, 1601, 1611, 1626, 1635, 1636, 1639, 1640, 1641, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1738, 1811, 1812, 1815, 1856, 1861, 1862, 1863, 1866, 1870, 1871, 1874, 1878, 1882, 1884, 1885, 1887, 1888, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1900, 1903, 1907, 1909, 1910, 1911, 1912, 1914, 1918, 1919, 1921, 1923, 1927, 1928], "later": [0, 1, 2, 4, 8, 21, 23, 36, 38, 40, 62, 69, 70, 741, 742, 752, 760, 912, 997, 1260, 1391, 1414, 1415, 1416, 1436, 1450, 1544, 1545, 1546, 1573, 1601, 1807, 1859, 1882, 1884, 1885, 1886, 1893, 1898, 1913, 1914], "patch": [0, 8, 18, 64, 1368, 1472], "its": [0, 1, 2, 5, 6, 8, 9, 10, 12, 14, 15, 16, 17, 20, 21, 23, 31, 32, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 57, 58, 59, 62, 69, 70, 82, 83, 150, 456, 485, 501, 510, 512, 514, 579, 580, 581, 613, 676, 819, 822, 870, 871, 872, 874, 875, 876, 889, 892, 904, 909, 910, 916, 941, 942, 951, 957, 961, 969, 997, 999, 1008, 1045, 1049, 1052, 1062, 1065, 1110, 1115, 1119, 1120, 1121, 1124, 1129, 1150, 1151, 1155, 1169, 1189, 1199, 1224, 1225, 1229, 1234, 1241, 1243, 1246, 1247, 1252, 1258, 1283, 1309, 1337, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1384, 1385, 1386, 1421, 1422, 1431, 1452, 1460, 1520, 1531, 1558, 1564, 1592, 1597, 1598, 1602, 1603, 1604, 1609, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1635, 1641, 1645, 1649, 1658, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1697, 1722, 1726, 1730, 1731, 1747, 1748, 1752, 1772, 1808, 1827, 1828, 1830, 1838, 1847, 1859, 1861, 1862, 1866, 1870, 1872, 1874, 1881, 1882, 1883, 1885, 1886, 1887, 1889, 1890, 1893, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1912, 1913, 1914, 1916, 1919, 1920, 1922, 1925, 1926], "forward": [0, 1, 6, 8, 9, 12, 13, 17, 21, 23, 27, 28, 31, 38, 40, 41, 44, 46, 62, 63, 64, 66, 68, 70, 150, 221, 222, 676, 731, 744, 753, 756, 796, 811, 812, 813, 816, 820, 857, 858, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 903, 904, 916, 1008, 1054, 1066, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1119, 1121, 1122, 1123, 1125, 1128, 1164, 1189, 1192, 1193, 1194, 1195, 1199, 1200, 1204, 1205, 1206, 1333, 1337, 1340, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1373, 1391, 1406, 1417, 1418, 1419, 1421, 1422, 1423, 1427, 1428, 1431, 1432, 1436, 1449, 1464, 1465, 1466, 1467, 1468, 1506, 1507, 1508, 1513, 1558, 1592, 1595, 1596, 1597, 1598, 1601, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1642, 1645, 1646, 1713, 1752, 1781, 1842, 1857, 1858, 1859, 1861, 1862, 1868, 1870, 1874, 1876, 1880, 1881, 1882, 1884, 1885, 1886, 1888, 1889, 1890, 1892, 1893, 1896, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1912, 1924, 1925, 1926], "method": [0, 1, 4, 8, 10, 13, 14, 20, 21, 28, 31, 32, 34, 37, 40, 41, 42, 44, 46, 47, 48, 49, 55, 57, 62, 69, 70, 221, 222, 322, 484, 485, 494, 495, 496, 517, 610, 789, 793, 795, 811, 812, 813, 834, 837, 850, 870, 871, 872, 889, 893, 894, 895, 896, 909, 910, 999, 1113, 1142, 1187, 1189, 1190, 1192, 1193, 1194, 1199, 1200, 1204, 1205, 1206, 1234, 1252, 1253, 1260, 1261, 1318, 1321, 1329, 1337, 1364, 1421, 1422, 1423, 1431, 1432, 1449, 1520, 1592, 1601, 1609, 1610, 1613, 1615, 1617, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1637, 1642, 1655, 1656, 1661, 1662, 1663, 1665, 1675, 1707, 1788, 1803, 1807, 1856, 1857, 1859, 1862, 1863, 1870, 1872, 1874, 1875, 1876, 1880, 1881, 1882, 1885, 1887, 1888, 1889, 1890, 1893, 1895, 1898, 1901, 1903, 1904, 1907, 1909, 1912, 1914, 1918, 1919, 1921, 1922, 1924, 1927], "self": [0, 1, 2, 10, 13, 21, 27, 28, 34, 37, 38, 40, 42, 45, 48, 49, 54, 59, 62, 67, 70, 97, 139, 150, 153, 154, 155, 170, 172, 175, 178, 179, 180, 190, 191, 195, 196, 208, 216, 218, 232, 239, 253, 254, 257, 258, 266, 285, 289, 296, 310, 312, 314, 316, 318, 320, 322, 324, 325, 327, 328, 329, 330, 332, 340, 376, 392, 397, 399, 400, 401, 452, 469, 479, 481, 494, 495, 496, 497, 510, 512, 514, 517, 521, 533, 539, 540, 541, 542, 554, 556, 576, 577, 579, 580, 581, 583, 584, 600, 603, 604, 610, 613, 614, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 857, 858, 914, 1118, 1119, 1128, 1159, 1187, 1188, 1189, 1192, 1193, 1194, 1195, 1199, 1200, 1204, 1205, 1206, 1329, 1333, 1366, 1420, 1421, 1422, 1423, 1427, 1431, 1432, 1448, 1450, 1460, 1466, 1468, 1550, 1573, 1592, 1610, 1611, 1613, 1619, 1621, 1634, 1643, 1656, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1703, 1724, 1858, 1859, 1860, 1861, 1862, 1866, 1872, 1875, 1876, 1880, 1882, 1883, 1884, 1887, 1889, 1893, 1898, 1900, 1904, 1905, 1907, 1912, 1918], "register_backend": [0, 13, 40, 1857, 1912], "compiler_fn": [0, 21], "tag": [0, 2, 4, 8, 40, 1260, 1856, 1857, 1892, 1904, 1921], "given": [0, 1, 2, 3, 4, 8, 10, 16, 17, 19, 21, 27, 28, 31, 37, 38, 40, 41, 42, 44, 45, 46, 48, 55, 57, 59, 62, 68, 69, 70, 75, 150, 219, 312, 314, 316, 320, 325, 376, 397, 401, 470, 471, 472, 473, 474, 476, 510, 512, 514, 580, 581, 600, 603, 676, 689, 691, 692, 694, 695, 731, 756, 775, 781, 788, 789, 790, 791, 795, 796, 798, 816, 820, 833, 836, 850, 854, 861, 872, 885, 887, 889, 891, 893, 895, 897, 898, 899, 900, 901, 902, 905, 919, 920, 923, 931, 935, 936, 942, 943, 948, 949, 955, 957, 960, 961, 962, 965, 966, 968, 969, 970, 974, 982, 983, 986, 990, 991, 1007, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1037, 1038, 1039, 1040, 1047, 1049, 1054, 1062, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1102, 1118, 1128, 1129, 1155, 1186, 1189, 1196, 1204, 1205, 1210, 1214, 1224, 1226, 1227, 1236, 1238, 1244, 1252, 1261, 1268, 1270, 1271, 1272, 1273, 1276, 1286, 1288, 1290, 1291, 1294, 1319, 1329, 1337, 1338, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1364, 1365, 1369, 1370, 1373, 1381, 1391, 1413, 1417, 1418, 1419, 1421, 1423, 1425, 1426, 1428, 1430, 1432, 1436, 1449, 1455, 1469, 1470, 1473, 1474, 1475, 1485, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1511, 1512, 1515, 1516, 1520, 1531, 1555, 1570, 1585, 1589, 1590, 1591, 1595, 1596, 1597, 1609, 1634, 1641, 1642, 1645, 1648, 1649, 1658, 1684, 1687, 1689, 1691, 1694, 1699, 1704, 1707, 1708, 1709, 1722, 1728, 1733, 1744, 1745, 1776, 1780, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1803, 1806, 1808, 1817, 1818, 1823, 1825, 1827, 1837, 1842, 1856, 1857, 1859, 1862, 1866, 1868, 1869, 1871, 1874, 1877, 1878, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1890, 1892, 1893, 1897, 1898, 1900, 1903, 1906, 1907, 1912, 1913, 1916, 1917, 1918, 1921, 1923, 1926, 1927], "registri": [0, 37, 1857, 1900], "shorthand": [0, 456, 1208], "project": [0, 8, 27, 42, 1290, 1391, 1427, 1613, 1696, 1856, 1891], "import": [0, 2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 17, 20, 21, 22, 26, 27, 28, 31, 33, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 51, 54, 55, 59, 62, 65, 66, 67, 68, 69, 70, 221, 676, 730, 737, 738, 739, 768, 769, 770, 788, 856, 857, 858, 907, 909, 928, 935, 961, 1113, 1115, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1128, 1164, 1186, 1187, 1190, 1192, 1194, 1195, 1196, 1198, 1199, 1200, 1204, 1205, 1206, 1240, 1241, 1244, 1245, 1258, 1290, 1387, 1421, 1601, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1636, 1637, 1638, 1639, 1640, 1641, 1648, 1655, 1676, 1677, 1700, 1859, 1861, 1862, 1863, 1872, 1874, 1877, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1907, 1910, 1912, 1913, 1914, 1916, 1919, 1921, 1922, 1923, 1926, 1927], "might": [0, 2, 4, 5, 10, 12, 15, 16, 17, 18, 20, 21, 27, 28, 31, 32, 34, 40, 42, 44, 46, 57, 67, 69, 70, 150, 484, 540, 889, 962, 1204, 1205, 1520, 1601, 1602, 1856, 1859, 1872, 1877, 1882, 1884, 1885, 1886, 1887, 1890, 1892, 1897, 1900, 1904, 1905, 1907, 1912, 1913, 1914, 1916, 1920, 1922, 1923], "easier": [0, 3, 8, 17, 28, 37, 70, 1859, 1861, 1877, 1882, 1883, 1887, 1888], "directli": [0, 1, 2, 4, 8, 10, 15, 16, 17, 20, 27, 28, 31, 32, 37, 38, 40, 42, 46, 47, 48, 56, 62, 66, 70, 553, 728, 743, 886, 895, 1045, 1113, 1119, 1126, 1128, 1134, 1219, 1427, 1454, 1473, 1531, 1576, 1635, 1828, 1859, 1861, 1862, 1872, 1882, 1885, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1898, 1904, 1906, 1907, 1912, 1916, 1921, 1923], "compiledfn": 0, "fake": [0, 70, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 789, 795, 796, 806, 808, 834, 857, 858, 1076, 1077, 1857, 1904, 1907, 1910], "__name__": [0, 37, 38, 40, 49, 50, 58, 1886, 1887, 1895, 1899, 1904, 1913], "sequenc": [0, 2, 12, 15, 17, 25, 27, 28, 37, 42, 44, 45, 46, 150, 562, 731, 756, 810, 876, 889, 903, 933, 935, 936, 939, 947, 968, 975, 976, 979, 1047, 1061, 1063, 1130, 1150, 1151, 1154, 1204, 1244, 1290, 1329, 1339, 1344, 1349, 1358, 1365, 1373, 1391, 1427, 1436, 1449, 1464, 1465, 1466, 1467, 1468, 1512, 1570, 1610, 1613, 1620, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1649, 1652, 1655, 1659, 1674, 1713, 1715, 1719, 1742, 1800, 1803, 1849, 1851, 1854, 1859, 1860, 1861, 1877, 1885, 1889, 1900, 1904, 1905, 1912, 1922, 1923], "categor": [0, 8, 27, 50, 1522, 1857, 1863, 1908, 1912], "exclude_tag": 0, "debug": [0, 2, 3, 5, 9, 15, 17, 18, 19, 23, 37, 54, 676, 823, 824, 828, 839, 904, 905, 949, 963, 996, 1036, 1137, 1218, 1595, 1596, 1597, 1598, 1749, 1757, 1857, 1861, 1868, 1882, 1884, 1885, 1886, 1891, 1892, 1893, 1897, 1899, 1900, 1901, 1904, 1925], "experiment": [0, 2, 3, 15, 16, 19, 22, 28, 38, 40, 44, 45, 62, 70, 897, 899, 903, 949, 1036, 1119, 1219, 1230, 1232, 1233, 1237, 1250, 1601, 1655, 1677, 1857, 1859, 1861, 1875, 1876, 1886, 1897, 1899, 1900, 1904, 1905, 1906], "conveni": [1, 4, 8, 12, 15, 21, 25, 31, 54, 57, 58, 68, 1130, 1246, 1592, 1849, 1856, 1861, 1866, 1881, 1882, 1885, 1887, 1892, 1893, 1904, 1911], "where": [1, 2, 3, 4, 5, 8, 9, 10, 15, 16, 17, 18, 20, 21, 28, 29, 31, 32, 37, 38, 40, 44, 45, 46, 48, 50, 57, 58, 59, 60, 62, 64, 65, 67, 70, 153, 223, 253, 399, 401, 484, 676, 689, 691, 692, 695, 731, 754, 756, 777, 816, 817, 829, 873, 892, 897, 899, 912, 918, 927, 933, 940, 941, 942, 957, 961, 966, 968, 977, 979, 1041, 1042, 1045, 1049, 1067, 1078, 1079, 1081, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1094, 1095, 1097, 1099, 1123, 1124, 1125, 1129, 1130, 1133, 1145, 1146, 1147, 1148, 1178, 1179, 1181, 1182, 1185, 1186, 1187, 1190, 1202, 1208, 1209, 1210, 1213, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1260, 1261, 1266, 1269, 1276, 1277, 1278, 1279, 1283, 1286, 1288, 1289, 1290, 1291, 1294, 1311, 1316, 1317, 1319, 1322, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1491, 1493, 1503, 1504, 1511, 1516, 1518, 1519, 1537, 1538, 1555, 1557, 1558, 1561, 1562, 1564, 1570, 1573, 1601, 1603, 1604, 1608, 1635, 1636, 1637, 1638, 1647, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1694, 1704, 1706, 1707, 1727, 1728, 1764, 1770, 1771, 1776, 1780, 1784, 1785, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1801, 1802, 1803, 1806, 1807, 1821, 1830, 1831, 1832, 1833, 1834, 1839, 1840, 1844, 1845, 1846, 1847, 1848, 1849, 1858, 1859, 1860, 1862, 1863, 1868, 1869, 1871, 1874, 1877, 1880, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1890, 1893, 1896, 1897, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1912, 1914, 1916, 1917, 1919, 1921, 1926, 1927], "float": [1, 2, 4, 15, 20, 27, 29, 37, 38, 40, 44, 46, 48, 51, 59, 62, 70, 153, 154, 219, 312, 314, 316, 320, 332, 399, 473, 479, 510, 681, 683, 688, 690, 694, 728, 731, 734, 735, 736, 740, 741, 742, 744, 751, 752, 757, 758, 759, 760, 761, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 781, 788, 789, 790, 795, 813, 815, 826, 834, 835, 848, 853, 854, 857, 858, 861, 876, 904, 905, 918, 919, 927, 934, 937, 941, 951, 956, 957, 961, 962, 1032, 1045, 1056, 1057, 1067, 1080, 1098, 1107, 1108, 1109, 1110, 1112, 1133, 1136, 1145, 1146, 1147, 1150, 1151, 1171, 1178, 1179, 1181, 1182, 1183, 1184, 1187, 1189, 1204, 1205, 1208, 1212, 1214, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1266, 1275, 1277, 1279, 1306, 1310, 1311, 1315, 1317, 1318, 1319, 1322, 1325, 1329, 1333, 1339, 1340, 1341, 1343, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1375, 1376, 1377, 1380, 1381, 1382, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1407, 1409, 1413, 1421, 1426, 1427, 1429, 1430, 1435, 1439, 1442, 1443, 1444, 1445, 1446, 1452, 1458, 1460, 1463, 1464, 1466, 1468, 1469, 1470, 1473, 1474, 1475, 1502, 1503, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1517, 1522, 1531, 1556, 1563, 1570, 1589, 1601, 1605, 1606, 1609, 1618, 1619, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1637, 1638, 1642, 1648, 1649, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1685, 1686, 1688, 1690, 1692, 1694, 1700, 1703, 1707, 1708, 1709, 1710, 1722, 1726, 1727, 1747, 1748, 1751, 1755, 1764, 1765, 1767, 1768, 1770, 1804, 1807, 1811, 1828, 1830, 1842, 1858, 1859, 1860, 1861, 1862, 1863, 1869, 1872, 1874, 1875, 1877, 1878, 1880, 1881, 1885, 1887, 1889, 1893, 1896, 1900, 1902, 1904, 1906, 1907, 1908, 1912, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1928], "datatyp": [1, 70, 876, 1186, 1189, 1421, 1603, 1604, 1750, 1896, 1900], "other": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 17, 18, 20, 21, 22, 27, 28, 31, 32, 34, 37, 38, 41, 44, 46, 47, 48, 50, 54, 55, 57, 58, 62, 63, 65, 67, 68, 69, 70, 97, 98, 113, 129, 130, 133, 145, 146, 149, 150, 159, 160, 165, 166, 196, 197, 198, 207, 233, 238, 242, 243, 244, 254, 273, 274, 281, 282, 283, 284, 290, 291, 292, 293, 294, 295, 302, 303, 306, 307, 308, 309, 312, 314, 320, 323, 343, 351, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 377, 378, 393, 394, 407, 411, 436, 437, 448, 449, 453, 454, 485, 495, 517, 557, 558, 559, 560, 576, 579, 612, 613, 614, 617, 618, 681, 690, 734, 735, 736, 737, 738, 739, 756, 810, 822, 857, 861, 867, 874, 875, 880, 886, 889, 890, 903, 904, 905, 909, 910, 916, 921, 922, 924, 925, 926, 928, 933, 956, 962, 963, 966, 968, 970, 977, 987, 1008, 1050, 1056, 1057, 1058, 1059, 1066, 1067, 1068, 1082, 1089, 1107, 1108, 1109, 1110, 1113, 1119, 1120, 1121, 1122, 1125, 1129, 1131, 1132, 1133, 1143, 1144, 1145, 1154, 1155, 1157, 1158, 1163, 1164, 1166, 1178, 1187, 1189, 1193, 1200, 1209, 1211, 1212, 1213, 1215, 1216, 1221, 1239, 1241, 1244, 1245, 1258, 1266, 1267, 1268, 1270, 1272, 1273, 1276, 1277, 1283, 1286, 1287, 1291, 1292, 1296, 1299, 1310, 1312, 1322, 1325, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1358, 1368, 1373, 1375, 1387, 1421, 1422, 1431, 1449, 1464, 1468, 1472, 1495, 1496, 1497, 1522, 1531, 1570, 1589, 1592, 1601, 1605, 1606, 1624, 1646, 1650, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1685, 1686, 1692, 1694, 1722, 1726, 1742, 1747, 1750, 1752, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1804, 1805, 1821, 1827, 1831, 1833, 1846, 1847, 1852, 1853, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1870, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1898, 1900, 1903, 1907, 1908, 1912, 1913, 1914, 1917, 1921, 1922, 1923, 1927], "point": [1, 2, 8, 9, 10, 13, 14, 17, 20, 21, 23, 27, 29, 37, 38, 41, 44, 48, 54, 57, 58, 62, 70, 88, 153, 154, 320, 332, 338, 479, 694, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 757, 758, 759, 760, 761, 771, 773, 775, 776, 777, 781, 791, 795, 815, 816, 817, 818, 821, 826, 848, 857, 858, 861, 876, 898, 900, 901, 902, 904, 905, 918, 919, 927, 956, 957, 961, 1011, 1013, 1022, 1026, 1027, 1108, 1109, 1110, 1136, 1142, 1146, 1147, 1151, 1171, 1186, 1189, 1204, 1205, 1212, 1214, 1235, 1236, 1259, 1261, 1266, 1275, 1318, 1325, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1414, 1415, 1416, 1421, 1472, 1473, 1485, 1511, 1520, 1531, 1570, 1589, 1601, 1648, 1660, 1691, 1707, 1708, 1709, 1713, 1722, 1735, 1747, 1748, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1842, 1857, 1859, 1861, 1862, 1863, 1866, 1872, 1878, 1880, 1881, 1882, 1886, 1890, 1893, 1896, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1916, 1919, 1921, 1922, 1923, 1924, 1925, 1928], "lower_precision_fp": 1, "half": [1, 2, 11, 38, 46, 613, 951, 1076, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1189, 1251, 1257, 1349, 1350, 1351, 1352, 1353, 1354, 1369, 1370, 1372, 1421, 1515, 1516, 1519, 1657, 1682, 1735, 1803, 1875, 1893, 1896, 1918, 1919, 1922, 1924], "linear": [1, 3, 10, 28, 38, 40, 41, 44, 46, 62, 64, 66, 68, 70, 429, 470, 471, 472, 473, 474, 477, 707, 716, 724, 725, 761, 788, 789, 790, 792, 810, 850, 854, 855, 857, 858, 899, 942, 968, 1062, 1118, 1120, 1128, 1130, 1142, 1189, 1193, 1200, 1214, 1220, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1249, 1251, 1279, 1318, 1337, 1343, 1363, 1371, 1372, 1380, 1406, 1421, 1423, 1436, 1438, 1440, 1448, 1450, 1457, 1460, 1471, 1473, 1509, 1518, 1519, 1531, 1565, 1573, 1578, 1589, 1592, 1601, 1608, 1609, 1613, 1623, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1641, 1642, 1645, 1685, 1688, 1696, 1707, 1842, 1849, 1857, 1860, 1861, 1867, 1870, 1877, 1880, 1885, 1886, 1887, 1889, 1893, 1898, 1900, 1902, 1903, 1905, 1907, 1908, 1909, 1910, 1912], "layer": [1, 9, 17, 38, 40, 42, 44, 45, 62, 65, 730, 731, 756, 837, 854, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1360, 1361, 1362, 1366, 1373, 1374, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1406, 1408, 1414, 1415, 1416, 1427, 1428, 1436, 1438, 1449, 1460, 1464, 1465, 1466, 1467, 1468, 1534, 1601, 1608, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1857, 1880, 1885, 1887, 1889, 1892, 1893, 1898, 1900, 1903, 1905, 1907, 1908, 1910, 1926], "convolut": [1, 2, 3, 19, 734, 735, 736, 737, 738, 739, 768, 769, 770, 949, 1198, 1349, 1350, 1351, 1352, 1353, 1354, 1360, 1361, 1362, 1366, 1397, 1398, 1399, 1400, 1401, 1402, 1433, 1434, 1439, 1469, 1470, 1472, 1495, 1496, 1497, 1498, 1499, 1500, 1519, 1520, 1750, 1857, 1858, 1860, 1870, 1880, 1884, 1885, 1890, 1893, 1902, 1906, 1907, 1910], "much": [1, 5, 8, 10, 15, 17, 21, 22, 32, 37, 38, 150, 889, 898, 903, 1019, 1224, 1225, 1252, 1261, 1365, 1601, 1624, 1688, 1859, 1882, 1885, 1890, 1893, 1898, 1904, 1905, 1912, 1913, 1916], "reduct": [1, 3, 28, 40, 62, 320, 510, 514, 1234, 1266, 1318, 1337, 1338, 1344, 1355, 1357, 1365, 1375, 1381, 1382, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1470, 1492, 1493, 1501, 1503, 1504, 1512, 1517, 1528, 1529, 1532, 1533, 1543, 1551, 1552, 1553, 1554, 1555, 1563, 1574, 1575, 1586, 1587, 1601, 1707, 1784, 1860, 1875, 1886, 1890, 1904, 1907], "often": [1, 3, 5, 8, 9, 16, 17, 22, 28, 31, 37, 40, 46, 58, 65, 70, 150, 889, 903, 1204, 1235, 1236, 1245, 1294, 1364, 1384, 1385, 1386, 1485, 1493, 1511, 1520, 1592, 1608, 1655, 1690, 1862, 1882, 1885, 1889, 1892, 1893, 1896, 1897, 1904, 1912, 1921], "tri": [1, 3, 4, 8, 16, 17, 37, 46, 50, 70, 576, 1189, 1421, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1861, 1862, 1874, 1889, 1900, 1904], "match": [1, 2, 4, 17, 21, 27, 40, 42, 44, 46, 57, 70, 150, 312, 314, 320, 471, 472, 496, 497, 576, 579, 689, 695, 775, 789, 790, 791, 850, 874, 889, 903, 904, 905, 962, 965, 977, 978, 979, 1008, 1054, 1062, 1118, 1130, 1166, 1189, 1202, 1204, 1221, 1260, 1282, 1356, 1365, 1421, 1427, 1473, 1492, 1493, 1531, 1557, 1564, 1570, 1589, 1601, 1613, 1643, 1649, 1708, 1742, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1823, 1849, 1859, 1862, 1869, 1875, 1877, 1882, 1883, 1885, 1887, 1893, 1898, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1912, 1919, 1923, 1925], "appropri": [1, 8, 9, 10, 17, 21, 23, 40, 41, 46, 62, 69, 70, 890, 1008, 1204, 1862, 1863, 1866, 1876, 1890, 1905, 1907, 1910, 1912, 1913, 1914, 1918, 1927], "ordinarili": [1, 1881], "train": [1, 2, 12, 13, 17, 20, 22, 24, 25, 28, 32, 37, 38, 40, 41, 43, 44, 48, 55, 56, 57, 58, 62, 65, 66, 70, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 795, 797, 834, 835, 851, 852, 853, 855, 857, 858, 859, 1007, 1008, 1011, 1013, 1020, 1128, 1164, 1189, 1194, 1200, 1203, 1204, 1329, 1333, 1339, 1340, 1341, 1357, 1358, 1359, 1364, 1365, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1427, 1428, 1439, 1460, 1468, 1486, 1490, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1568, 1569, 1601, 1609, 1611, 1613, 1642, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1856, 1858, 1859, 1860, 1870, 1872, 1880, 1882, 1885, 1886, 1889, 1894, 1896, 1898, 1900, 1903, 1904, 1905, 1906, 1910, 1912, 1914, 1921], "gradscal": [1, 1881, 1885], "togeth": [1, 4, 10, 13, 16, 17, 23, 37, 40, 45, 46, 63, 68, 70, 756, 1005, 1062, 1118, 1120, 1124, 1128, 1129, 1134, 1228, 1373, 1391, 1436, 1531, 1601, 1605, 1828, 1870, 1881, 1887, 1888, 1889, 1892, 1893, 1907, 1912, 1913, 1914, 1921], "shown": [1, 13, 18, 38, 49, 58, 1005, 1015, 1393, 1613, 1658, 1688, 1755, 1859, 1862, 1881, 1885, 1887, 1889, 1893, 1905, 1907, 1916], "recip": [1, 4, 16, 44, 1421, 1601, 1615, 1881, 1893], "howev": [1, 3, 4, 5, 6, 8, 10, 12, 15, 16, 17, 18, 31, 32, 37, 38, 40, 44, 46, 48, 54, 62, 63, 64, 66, 67, 69, 70, 479, 541, 890, 897, 965, 987, 1008, 1050, 1052, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1118, 1119, 1123, 1124, 1126, 1129, 1130, 1189, 1192, 1193, 1199, 1201, 1228, 1243, 1244, 1246, 1260, 1261, 1278, 1337, 1340, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1365, 1421, 1495, 1496, 1497, 1520, 1592, 1601, 1634, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1849, 1857, 1862, 1877, 1881, 1882, 1885, 1887, 1891, 1893, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1912, 1914, 1916], "modular": [1, 1881], "mai": [1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, 16, 17, 21, 26, 28, 31, 36, 37, 38, 40, 44, 46, 47, 48, 50, 54, 56, 57, 62, 63, 67, 69, 70, 196, 221, 253, 312, 320, 456, 512, 514, 552, 599, 613, 676, 685, 811, 812, 813, 857, 888, 895, 897, 899, 903, 904, 913, 920, 931, 943, 954, 955, 957, 959, 962, 963, 965, 966, 974, 987, 997, 998, 999, 1005, 1006, 1008, 1019, 1021, 1025, 1039, 1040, 1062, 1101, 1105, 1110, 1113, 1115, 1122, 1123, 1125, 1151, 1186, 1189, 1192, 1193, 1198, 1199, 1201, 1202, 1204, 1210, 1219, 1220, 1224, 1225, 1226, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1244, 1246, 1247, 1250, 1251, 1252, 1258, 1260, 1261, 1266, 1283, 1293, 1306, 1329, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1387, 1391, 1417, 1418, 1419, 1421, 1428, 1436, 1466, 1468, 1473, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1512, 1520, 1522, 1531, 1537, 1558, 1570, 1588, 1589, 1590, 1591, 1592, 1601, 1608, 1610, 1611, 1613, 1648, 1677, 1682, 1706, 1726, 1729, 1747, 1750, 1757, 1775, 1787, 1803, 1807, 1830, 1842, 1856, 1857, 1859, 1861, 1862, 1866, 1868, 1869, 1870, 1872, 1876, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1893, 1896, 1897, 1898, 1899, 1900, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1916, 1918, 1924, 1927], "separ": [1, 2, 4, 10, 12, 28, 31, 37, 40, 44, 57, 58, 62, 63, 65, 68, 69, 70, 731, 756, 886, 1062, 1079, 1081, 1087, 1088, 1091, 1092, 1097, 1099, 1118, 1199, 1234, 1249, 1376, 1384, 1385, 1386, 1427, 1429, 1539, 1649, 1856, 1860, 1862, 1868, 1881, 1882, 1884, 1885, 1888, 1898, 1903, 1904, 1913, 1916, 1917, 1921], "desir": [1, 2, 4, 28, 37, 40, 46, 62, 70, 88, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 239, 253, 266, 296, 324, 392, 443, 444, 445, 446, 447, 494, 496, 497, 517, 521, 540, 541, 542, 556, 576, 579, 599, 600, 613, 789, 861, 875, 918, 927, 946, 1009, 1010, 1033, 1034, 1043, 1044, 1063, 1064, 1065, 1075, 1080, 1098, 1115, 1116, 1117, 1146, 1147, 1189, 1208, 1259, 1275, 1281, 1288, 1301, 1307, 1316, 1318, 1319, 1337, 1338, 1421, 1471, 1493, 1539, 1576, 1577, 1592, 1634, 1648, 1652, 1653, 1697, 1704, 1707, 1708, 1709, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1783, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1821, 1832, 1834, 1854, 1855, 1875, 1876, 1877, 1881, 1882, 1885, 1888, 1891, 1893, 1898, 1905, 1911, 1912, 1917, 1918, 1919], "section": [1, 2, 8, 13, 21, 26, 28, 37, 46, 48, 49, 66, 70, 119, 1019, 1062, 1142, 1358, 1373, 1391, 1419, 1436, 1503, 1637, 1822, 1857, 1859, 1860, 1861, 1862, 1863, 1874, 1876, 1877, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1891, 1893, 1895, 1913, 1921], "infer": [1, 2, 3, 4, 6, 12, 15, 17, 20, 22, 24, 29, 32, 46, 57, 576, 613, 857, 858, 861, 875, 876, 979, 1115, 1116, 1151, 1164, 1173, 1187, 1190, 1198, 1203, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1427, 1473, 1531, 1557, 1592, 1646, 1677, 1688, 1722, 1729, 1747, 1748, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1838, 1857, 1859, 1861, 1862, 1866, 1875, 1877, 1893, 1900, 1901, 1906, 1907, 1908, 1910, 1916], "For": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 27, 28, 29, 31, 32, 34, 37, 38, 40, 41, 42, 46, 48, 54, 55, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 196, 221, 253, 288, 312, 314, 320, 334, 351, 469, 479, 490, 496, 510, 512, 514, 579, 585, 599, 613, 682, 683, 684, 685, 686, 689, 695, 730, 734, 735, 736, 737, 738, 739, 756, 788, 789, 790, 810, 854, 855, 888, 904, 917, 921, 923, 924, 926, 929, 938, 942, 949, 997, 1011, 1013, 1019, 1043, 1044, 1045, 1062, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1106, 1128, 1130, 1131, 1142, 1151, 1166, 1189, 1199, 1200, 1202, 1204, 1205, 1220, 1224, 1225, 1228, 1231, 1232, 1233, 1234, 1236, 1245, 1246, 1248, 1252, 1261, 1268, 1276, 1283, 1289, 1293, 1329, 1333, 1337, 1338, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1364, 1365, 1367, 1368, 1373, 1375, 1382, 1387, 1391, 1393, 1421, 1424, 1425, 1426, 1427, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1447, 1452, 1457, 1471, 1472, 1476, 1477, 1478, 1493, 1495, 1496, 1497, 1520, 1556, 1558, 1570, 1578, 1592, 1597, 1598, 1601, 1611, 1634, 1635, 1636, 1638, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1690, 1735, 1744, 1782, 1792, 1798, 1807, 1822, 1824, 1828, 1836, 1847, 1848, 1849, 1856, 1857, 1859, 1862, 1864, 1866, 1868, 1869, 1870, 1872, 1875, 1876, 1877, 1878, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1893, 1895, 1896, 1897, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1927], "api": [1, 3, 4, 6, 9, 10, 12, 22, 25, 38, 40, 41, 45, 48, 49, 50, 54, 55, 56, 57, 58, 62, 63, 66, 69, 796, 820, 857, 890, 891, 892, 900, 916, 938, 963, 997, 998, 999, 1005, 1006, 1008, 1035, 1066, 1106, 1119, 1122, 1123, 1125, 1130, 1199, 1200, 1202, 1306, 1601, 1643, 1646, 1655, 1657, 1735, 1746, 1752, 1836, 1849, 1856, 1866, 1868, 1869, 1870, 1874, 1875, 1877, 1882, 1886, 1898, 1900, 1908, 1912, 1913, 1916, 1919, 1921, 1924, 1927], "equival": [1, 4, 6, 13, 21, 37, 38, 44, 45, 46, 50, 57, 58, 66, 67, 70, 82, 155, 170, 172, 175, 178, 179, 180, 239, 254, 266, 296, 318, 324, 392, 446, 456, 495, 497, 521, 600, 606, 613, 614, 616, 688, 740, 744, 751, 753, 755, 781, 782, 783, 872, 886, 930, 932, 935, 937, 940, 947, 948, 1050, 1054, 1057, 1060, 1061, 1062, 1064, 1079, 1081, 1084, 1087, 1088, 1091, 1092, 1094, 1097, 1099, 1117, 1119, 1122, 1124, 1130, 1152, 1154, 1166, 1188, 1189, 1199, 1204, 1205, 1208, 1220, 1241, 1245, 1253, 1258, 1290, 1295, 1309, 1316, 1329, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1364, 1365, 1376, 1382, 1384, 1385, 1386, 1387, 1391, 1393, 1421, 1452, 1460, 1472, 1474, 1539, 1560, 1570, 1589, 1590, 1591, 1601, 1653, 1677, 1713, 1716, 1720, 1744, 1750, 1758, 1780, 1786, 1799, 1809, 1810, 1816, 1821, 1840, 1849, 1850, 1851, 1855, 1859, 1861, 1862, 1882, 1900, 1904, 1908, 1916, 1917, 1919, 1922, 1923, 1927, 1928], "device_typ": [1, 40, 1881, 1911], "dtype": [1, 2, 14, 16, 28, 29, 34, 35, 37, 40, 42, 45, 62, 70, 153, 154, 191, 208, 212, 213, 214, 215, 241, 310, 312, 314, 316, 318, 320, 408, 427, 430, 443, 444, 445, 446, 447, 451, 456, 468, 479, 481, 510, 512, 561, 576, 577, 599, 613, 683, 685, 688, 689, 693, 695, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 760, 761, 768, 769, 770, 790, 791, 795, 815, 816, 817, 818, 819, 820, 821, 822, 823, 837, 854, 855, 857, 858, 861, 875, 876, 893, 895, 897, 899, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 934, 941, 951, 954, 955, 961, 962, 978, 1043, 1044, 1063, 1064, 1065, 1075, 1079, 1080, 1081, 1087, 1088, 1098, 1105, 1110, 1112, 1114, 1115, 1116, 1117, 1136, 1146, 1147, 1159, 1189, 1193, 1202, 1208, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1270, 1271, 1272, 1273, 1275, 1278, 1279, 1283, 1287, 1288, 1289, 1292, 1293, 1311, 1315, 1316, 1317, 1319, 1329, 1338, 1339, 1340, 1341, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1364, 1365, 1368, 1373, 1374, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1421, 1427, 1428, 1429, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1446, 1460, 1464, 1466, 1468, 1472, 1473, 1474, 1475, 1487, 1503, 1504, 1537, 1539, 1570, 1576, 1577, 1592, 1603, 1604, 1610, 1613, 1614, 1634, 1648, 1652, 1653, 1657, 1659, 1694, 1700, 1704, 1705, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1732, 1735, 1747, 1748, 1750, 1751, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1779, 1783, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1807, 1818, 1821, 1832, 1834, 1839, 1842, 1847, 1848, 1852, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1869, 1876, 1877, 1885, 1887, 1893, 1896, 1900, 1902, 1907, 1908, 1909, 1916, 1917, 1918, 1921, 1922, 1923, 1928], "enabl": [1, 2, 3, 6, 9, 13, 15, 16, 17, 18, 19, 21, 22, 28, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 48, 58, 62, 500, 501, 676, 756, 808, 809, 890, 895, 916, 949, 963, 1008, 1062, 1066, 1164, 1172, 1173, 1191, 1197, 1302, 1303, 1373, 1391, 1436, 1437, 1467, 1570, 1601, 1610, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1646, 1676, 1751, 1752, 1755, 1782, 1842, 1862, 1868, 1869, 1870, 1873, 1877, 1881, 1882, 1883, 1884, 1885, 1892, 1894, 1896, 1897, 1900, 1905, 1906, 1911, 1912, 1913, 1916, 1924, 1926, 1927], "cache_en": [1, 1008], "instanc": [1, 4, 12, 21, 27, 37, 40, 41, 42, 44, 46, 47, 48, 54, 57, 58, 59, 62, 67, 70, 139, 613, 676, 730, 744, 753, 789, 792, 820, 822, 837, 854, 963, 1062, 1113, 1187, 1189, 1200, 1204, 1261, 1364, 1365, 1368, 1384, 1385, 1386, 1393, 1421, 1431, 1465, 1467, 1468, 1472, 1530, 1601, 1609, 1620, 1634, 1642, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1792, 1822, 1859, 1861, 1863, 1868, 1870, 1874, 1876, 1881, 1882, 1885, 1886, 1887, 1889, 1893, 1897, 1904, 1907, 1912, 1913, 1914, 1916, 1918, 1923, 1927], "serv": [1, 8, 9, 13, 17, 32, 40, 1858, 1869, 1901, 1903, 1912, 1913], "region": [1, 4, 6, 16, 17, 46, 54, 764, 765, 1334, 1335, 1336, 1369, 1370, 1380, 1382, 1414, 1415, 1416, 1488, 1489, 1515, 1516, 1545, 1546, 1859, 1874, 1881, 1885], "your": [1, 2, 3, 5, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 31, 32, 33, 37, 40, 44, 45, 46, 49, 50, 54, 56, 57, 58, 59, 60, 62, 66, 67, 69, 70, 889, 895, 897, 898, 903, 949, 1164, 1189, 1193, 1194, 1198, 1201, 1204, 1205, 1206, 1421, 1428, 1601, 1610, 1613, 1646, 1677, 1751, 1839, 1859, 1861, 1862, 1866, 1868, 1874, 1875, 1876, 1878, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1903, 1905, 1908, 1911, 1913, 1916, 1921, 1922, 1924, 1927], "script": [1, 5, 13, 20, 24, 28, 34, 37, 40, 43, 48, 50, 56, 58, 59, 1190, 1192, 1193, 1194, 1195, 1198, 1199, 1201, 1203, 1204, 1206, 1856, 1857, 1861, 1862, 1870, 1884, 1892, 1894, 1898, 1904, 1907, 1912], "In": [1, 3, 4, 5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 24, 27, 28, 32, 34, 37, 40, 42, 44, 46, 50, 57, 58, 59, 62, 64, 65, 66, 67, 69, 70, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 121, 123, 125, 127, 130, 131, 133, 141, 143, 146, 147, 149, 152, 154, 158, 160, 162, 164, 166, 168, 177, 186, 194, 198, 201, 203, 213, 215, 221, 231, 235, 237, 243, 246, 248, 250, 252, 256, 261, 268, 270, 272, 276, 278, 282, 284, 291, 293, 295, 303, 305, 307, 309, 355, 357, 359, 361, 363, 365, 367, 370, 372, 374, 375, 382, 384, 386, 388, 390, 394, 418, 421, 424, 426, 437, 439, 441, 449, 454, 464, 467, 483, 487, 489, 505, 508, 519, 523, 525, 528, 530, 532, 545, 547, 549, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 608, 618, 676, 756, 796, 820, 850, 895, 933, 954, 955, 962, 1008, 1019, 1031, 1032, 1036, 1037, 1062, 1083, 1085, 1093, 1094, 1095, 1110, 1120, 1124, 1127, 1129, 1187, 1189, 1198, 1201, 1202, 1204, 1220, 1229, 1234, 1235, 1236, 1244, 1247, 1252, 1257, 1261, 1266, 1269, 1278, 1283, 1289, 1290, 1316, 1334, 1335, 1336, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1360, 1361, 1362, 1366, 1368, 1373, 1382, 1391, 1406, 1414, 1415, 1416, 1421, 1427, 1464, 1466, 1468, 1472, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1510, 1520, 1527, 1536, 1564, 1567, 1569, 1570, 1584, 1601, 1608, 1613, 1614, 1646, 1677, 1688, 1690, 1726, 1742, 1744, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1807, 1808, 1830, 1842, 1846, 1847, 1856, 1857, 1858, 1859, 1861, 1862, 1868, 1869, 1874, 1875, 1876, 1877, 1880, 1881, 1884, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916, 1921, 1923], "chosen": [1, 17, 28, 67, 1050, 1210, 1570, 1755, 1780, 1825, 1877, 1881, 1885, 1887, 1900, 1907], "maintain": [1, 8, 9, 15, 16, 21, 22, 37, 38, 40, 46, 62, 66, 70, 1333, 1361, 1366, 1513, 1601, 1634, 1648, 1857, 1877, 1881, 1882, 1885, 1887, 1893, 1907], "accuraci": [1, 17, 19, 38, 949, 1252, 1570, 1857, 1872, 1881, 1893, 1921, 1925], "detail": [1, 2, 3, 4, 8, 9, 21, 22, 24, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 46, 48, 58, 62, 68, 70, 150, 322, 492, 610, 731, 734, 735, 736, 737, 738, 739, 756, 762, 763, 764, 767, 768, 769, 770, 775, 776, 778, 779, 780, 781, 789, 855, 856, 857, 858, 869, 886, 888, 889, 890, 891, 892, 895, 904, 932, 959, 964, 968, 970, 971, 973, 987, 988, 997, 1008, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1026, 1027, 1028, 1045, 1062, 1101, 1123, 1134, 1137, 1138, 1142, 1170, 1177, 1189, 1193, 1204, 1228, 1246, 1253, 1261, 1267, 1269, 1289, 1329, 1333, 1343, 1352, 1353, 1354, 1358, 1364, 1365, 1366, 1367, 1369, 1370, 1373, 1391, 1421, 1427, 1433, 1434, 1436, 1448, 1469, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1521, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1568, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1592, 1601, 1602, 1637, 1647, 1658, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1677, 1682, 1694, 1706, 1738, 1749, 1775, 1783, 1828, 1842, 1856, 1859, 1860, 1861, 1862, 1869, 1871, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1896, 1897, 1898, 1900, 1904, 1905, 1907, 1909, 1911, 1912, 1913, 1914, 1916, 1920, 1921, 1923, 1924, 1927], "enter": [1, 40, 890, 1164], "should": [1, 2, 4, 5, 6, 10, 13, 16, 17, 18, 20, 21, 23, 27, 28, 31, 32, 34, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 62, 66, 67, 69, 70, 119, 150, 154, 312, 320, 397, 401, 443, 444, 445, 446, 447, 485, 493, 510, 512, 514, 579, 580, 581, 583, 584, 682, 685, 686, 731, 756, 768, 769, 770, 789, 792, 796, 813, 820, 834, 835, 850, 851, 852, 855, 861, 885, 886, 887, 888, 889, 893, 894, 895, 896, 897, 898, 899, 903, 909, 910, 917, 918, 919, 920, 927, 940, 961, 965, 968, 978, 979, 997, 999, 1008, 1053, 1063, 1064, 1065, 1075, 1080, 1083, 1084, 1085, 1093, 1094, 1095, 1098, 1113, 1115, 1116, 1117, 1119, 1120, 1124, 1128, 1129, 1130, 1146, 1147, 1150, 1151, 1186, 1187, 1189, 1190, 1194, 1198, 1200, 1201, 1204, 1205, 1206, 1208, 1233, 1258, 1259, 1260, 1266, 1275, 1278, 1279, 1280, 1329, 1337, 1338, 1342, 1355, 1357, 1358, 1360, 1361, 1362, 1365, 1366, 1387, 1413, 1421, 1427, 1428, 1429, 1448, 1469, 1473, 1485, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1512, 1520, 1570, 1592, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1634, 1635, 1636, 1639, 1641, 1652, 1653, 1656, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1706, 1708, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1729, 1745, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1821, 1830, 1849, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1866, 1868, 1869, 1871, 1872, 1874, 1876, 1877, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1893, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1916, 1920, 1921, 1923, 1924, 1927], "model": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 28, 38, 40, 41, 42, 44, 45, 46, 56, 58, 60, 62, 63, 64, 65, 66, 67, 68, 70, 82, 83, 87, 788, 789, 790, 793, 794, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 832, 833, 834, 835, 850, 853, 854, 855, 856, 857, 858, 859, 949, 1009, 1029, 1118, 1119, 1120, 1128, 1130, 1164, 1189, 1193, 1194, 1198, 1200, 1204, 1206, 1260, 1329, 1358, 1375, 1386, 1387, 1421, 1427, 1449, 1460, 1464, 1466, 1467, 1468, 1519, 1601, 1602, 1607, 1609, 1611, 1624, 1643, 1644, 1655, 1656, 1658, 1659, 1666, 1671, 1676, 1677, 1682, 1688, 1690, 1803, 1849, 1857, 1859, 1861, 1862, 1863, 1870, 1871, 1877, 1882, 1884, 1885, 1886, 1887, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1906, 1908, 1912, 1913, 1915, 1916, 1917, 1921, 1925, 1926], "": [1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 20, 21, 22, 23, 26, 27, 28, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 50, 53, 54, 55, 57, 58, 62, 64, 66, 67, 69, 70, 461, 479, 490, 493, 510, 540, 554, 577, 620, 676, 685, 690, 691, 692, 731, 756, 789, 790, 791, 811, 812, 813, 816, 819, 822, 850, 857, 858, 871, 873, 874, 875, 876, 892, 893, 894, 898, 899, 901, 905, 933, 935, 948, 954, 955, 956, 961, 963, 965, 969, 984, 988, 997, 999, 1004, 1005, 1008, 1009, 1010, 1029, 1030, 1031, 1037, 1054, 1057, 1059, 1060, 1062, 1076, 1077, 1079, 1080, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1128, 1130, 1134, 1142, 1150, 1151, 1152, 1176, 1178, 1186, 1187, 1189, 1193, 1199, 1200, 1204, 1219, 1220, 1230, 1231, 1232, 1234, 1237, 1241, 1243, 1245, 1246, 1250, 1251, 1252, 1253, 1258, 1260, 1261, 1276, 1283, 1288, 1290, 1293, 1295, 1296, 1302, 1303, 1306, 1315, 1316, 1319, 1321, 1327, 1328, 1329, 1337, 1338, 1339, 1340, 1341, 1344, 1358, 1364, 1375, 1421, 1422, 1427, 1431, 1437, 1449, 1452, 1454, 1460, 1464, 1466, 1468, 1474, 1475, 1492, 1493, 1504, 1517, 1520, 1531, 1532, 1537, 1570, 1576, 1589, 1592, 1597, 1598, 1601, 1602, 1613, 1624, 1637, 1641, 1648, 1649, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1694, 1696, 1700, 1707, 1722, 1725, 1726, 1729, 1730, 1731, 1733, 1735, 1742, 1749, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1801, 1802, 1803, 1806, 1807, 1808, 1809, 1810, 1818, 1822, 1824, 1830, 1844, 1845, 1846, 1849, 1850, 1856, 1858, 1859, 1860, 1861, 1862, 1863, 1866, 1868, 1869, 1871, 1872, 1874, 1875, 1876, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1927], "e": [1, 2, 3, 4, 6, 8, 12, 15, 16, 18, 21, 28, 29, 31, 32, 37, 38, 40, 41, 44, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 60, 62, 65, 67, 69, 70, 88, 150, 257, 334, 376, 576, 613, 731, 744, 753, 756, 789, 790, 811, 813, 850, 854, 855, 857, 858, 876, 885, 889, 894, 904, 905, 928, 930, 933, 994, 1008, 1033, 1062, 1072, 1113, 1119, 1124, 1128, 1139, 1164, 1168, 1169, 1171, 1174, 1186, 1189, 1195, 1196, 1204, 1224, 1225, 1240, 1252, 1260, 1261, 1262, 1264, 1266, 1283, 1294, 1337, 1338, 1339, 1340, 1341, 1344, 1349, 1350, 1351, 1357, 1358, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1373, 1376, 1381, 1384, 1385, 1386, 1387, 1388, 1391, 1393, 1394, 1395, 1396, 1412, 1421, 1422, 1427, 1428, 1430, 1431, 1435, 1436, 1452, 1460, 1464, 1468, 1469, 1470, 1472, 1495, 1496, 1497, 1504, 1506, 1507, 1508, 1511, 1512, 1513, 1520, 1531, 1563, 1570, 1589, 1591, 1592, 1597, 1601, 1602, 1603, 1604, 1609, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1634, 1635, 1641, 1645, 1648, 1655, 1656, 1663, 1664, 1699, 1710, 1728, 1735, 1742, 1746, 1753, 1758, 1803, 1807, 1856, 1859, 1861, 1862, 1863, 1866, 1869, 1870, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1896, 1898, 1900, 1903, 1904, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1923, 1927, 1928], "network": [1, 2, 8, 9, 15, 32, 44, 46, 57, 837, 1008, 1189, 1204, 1205, 1333, 1339, 1340, 1341, 1344, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1366, 1375, 1387, 1391, 1421, 1428, 1433, 1434, 1439, 1448, 1450, 1460, 1464, 1466, 1468, 1485, 1519, 1520, 1573, 1592, 1609, 1611, 1637, 1642, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1682, 1688, 1859, 1861, 1862, 1880, 1881, 1896, 1897, 1900, 1903, 1907, 1912, 1913, 1914], "loss": [1, 2, 38, 40, 41, 44, 46, 62, 1120, 1186, 1224, 1225, 1234, 1252, 1329, 1337, 1338, 1344, 1355, 1357, 1364, 1375, 1381, 1382, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1470, 1492, 1493, 1503, 1504, 1517, 1532, 1555, 1563, 1601, 1635, 1666, 1671, 1677, 1681, 1690, 1750, 1856, 1857, 1872, 1876, 1882, 1885, 1886, 1889, 1890, 1893, 1903, 1907, 1908, 1912, 1913, 1921], "comput": [1, 4, 6, 8, 9, 12, 15, 16, 17, 20, 27, 29, 31, 33, 37, 38, 40, 42, 46, 48, 50, 62, 63, 64, 66, 150, 289, 485, 492, 677, 679, 693, 694, 756, 764, 765, 796, 798, 815, 816, 817, 818, 820, 821, 885, 889, 890, 891, 893, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 916, 921, 922, 923, 924, 925, 926, 937, 939, 940, 941, 948, 955, 957, 962, 1005, 1008, 1045, 1054, 1056, 1059, 1062, 1066, 1067, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1105, 1107, 1108, 1109, 1111, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1132, 1133, 1134, 1142, 1145, 1148, 1149, 1150, 1151, 1164, 1166, 1189, 1192, 1200, 1208, 1209, 1211, 1213, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1261, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1287, 1288, 1289, 1292, 1316, 1318, 1322, 1329, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1352, 1353, 1354, 1356, 1357, 1359, 1364, 1365, 1373, 1376, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1427, 1428, 1430, 1435, 1436, 1454, 1456, 1460, 1469, 1470, 1473, 1487, 1488, 1489, 1502, 1503, 1511, 1512, 1519, 1520, 1522, 1531, 1539, 1544, 1545, 1546, 1547, 1548, 1549, 1560, 1563, 1570, 1576, 1577, 1592, 1595, 1597, 1598, 1601, 1602, 1605, 1608, 1611, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1627, 1628, 1635, 1641, 1645, 1646, 1648, 1661, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1694, 1700, 1706, 1707, 1711, 1712, 1726, 1727, 1750, 1752, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1781, 1783, 1784, 1785, 1786, 1803, 1807, 1808, 1823, 1828, 1846, 1849, 1857, 1859, 1862, 1869, 1872, 1875, 1876, 1878, 1881, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1900, 1903, 1907, 1910, 1912, 1916, 1917, 1922, 1925], "backward": [1, 2, 6, 10, 12, 13, 17, 23, 27, 28, 40, 41, 42, 44, 46, 62, 66, 67, 70, 289, 334, 485, 493, 500, 501, 510, 512, 514, 577, 676, 682, 685, 756, 811, 812, 813, 886, 891, 892, 893, 894, 895, 896, 898, 900, 903, 904, 909, 910, 916, 917, 929, 1008, 1066, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1118, 1119, 1189, 1261, 1269, 1283, 1293, 1337, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1364, 1373, 1374, 1375, 1388, 1391, 1392, 1408, 1412, 1413, 1421, 1427, 1428, 1435, 1436, 1465, 1466, 1467, 1468, 1469, 1470, 1492, 1493, 1503, 1504, 1520, 1531, 1555, 1558, 1593, 1597, 1598, 1601, 1613, 1646, 1655, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1681, 1694, 1706, 1781, 1784, 1788, 1807, 1842, 1856, 1857, 1860, 1862, 1868, 1876, 1877, 1880, 1881, 1886, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1903, 1904, 1906, 1907, 1912, 1916, 1917, 1922], "under": [1, 2, 4, 5, 6, 10, 15, 16, 17, 21, 28, 37, 40, 57, 62, 63, 65, 67, 69, 84, 904, 912, 934, 1164, 1189, 1344, 1421, 1485, 1511, 1512, 1608, 1610, 1613, 1658, 1727, 1858, 1874, 1881, 1882, 1885, 1886, 1888, 1890, 1895, 1900, 1904, 1905, 1907, 1910, 1911, 1914, 1917, 1921, 1924, 1926], "recommend": [1, 2, 6, 17, 37, 38, 40, 42, 46, 48, 57, 58, 62, 66, 69, 70, 88, 446, 889, 954, 955, 962, 1083, 1084, 1085, 1093, 1094, 1095, 1176, 1192, 1234, 1261, 1306, 1329, 1358, 1532, 1601, 1713, 1839, 1856, 1859, 1871, 1874, 1876, 1880, 1881, 1882, 1884, 1885, 1887, 1888, 1893, 1895, 1896, 1898, 1900, 1904, 1907], "correspond": [1, 2, 8, 18, 24, 28, 34, 37, 38, 40, 44, 45, 46, 57, 62, 70, 82, 471, 472, 510, 512, 514, 540, 541, 676, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 789, 793, 832, 834, 853, 854, 855, 860, 876, 885, 887, 888, 889, 894, 897, 899, 904, 941, 956, 1008, 1028, 1057, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1142, 1151, 1178, 1189, 1205, 1219, 1224, 1225, 1230, 1233, 1252, 1259, 1261, 1275, 1290, 1311, 1358, 1364, 1391, 1421, 1427, 1467, 1511, 1520, 1557, 1597, 1601, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1642, 1648, 1677, 1682, 1699, 1700, 1710, 1733, 1742, 1758, 1801, 1802, 1807, 1838, 1841, 1844, 1845, 1856, 1859, 1860, 1862, 1866, 1872, 1875, 1876, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1892, 1893, 1897, 1900, 1904, 1906, 1907, 1912, 1913, 1916, 1917, 1918, 1921, 1923, 1925, 1926], "devic": [1, 2, 3, 6, 9, 12, 14, 16, 20, 24, 28, 31, 34, 37, 38, 40, 41, 42, 45, 58, 59, 62, 66, 69, 70, 88, 196, 206, 209, 288, 312, 320, 334, 443, 444, 445, 446, 447, 512, 514, 576, 682, 685, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 745, 746, 747, 748, 749, 750, 751, 861, 873, 875, 876, 897, 899, 917, 918, 920, 927, 929, 964, 965, 966, 968, 969, 970, 971, 972, 974, 975, 976, 977, 978, 979, 981, 982, 983, 986, 990, 991, 992, 994, 995, 1003, 1005, 1006, 1007, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1034, 1038, 1039, 1040, 1063, 1064, 1065, 1075, 1080, 1098, 1116, 1117, 1146, 1147, 1189, 1193, 1196, 1199, 1202, 1208, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1235, 1236, 1237, 1243, 1246, 1247, 1249, 1250, 1252, 1253, 1259, 1260, 1275, 1278, 1283, 1289, 1293, 1306, 1308, 1329, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1364, 1365, 1374, 1376, 1384, 1385, 1386, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1421, 1427, 1429, 1437, 1438, 1460, 1464, 1466, 1468, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1512, 1531, 1537, 1570, 1585, 1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606, 1634, 1641, 1647, 1649, 1652, 1653, 1666, 1706, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1746, 1750, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1821, 1823, 1832, 1834, 1842, 1854, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1870, 1875, 1877, 1881, 1886, 1888, 1889, 1891, 1893, 1894, 1897, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1912, 1916, 1918, 1922, 1923], "creat": [1, 2, 4, 6, 7, 8, 10, 12, 13, 15, 16, 17, 21, 25, 27, 28, 31, 37, 38, 40, 42, 44, 46, 48, 49, 55, 57, 58, 59, 60, 62, 69, 70, 88, 150, 222, 253, 334, 576, 577, 579, 580, 581, 583, 584, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 790, 810, 811, 812, 813, 815, 820, 850, 874, 875, 876, 889, 891, 903, 928, 930, 946, 947, 956, 964, 973, 1005, 1006, 1015, 1050, 1065, 1114, 1115, 1116, 1186, 1189, 1192, 1201, 1207, 1212, 1218, 1219, 1225, 1227, 1246, 1259, 1275, 1290, 1311, 1337, 1355, 1364, 1365, 1368, 1382, 1388, 1412, 1413, 1421, 1424, 1425, 1426, 1449, 1452, 1453, 1460, 1469, 1470, 1472, 1601, 1613, 1634, 1641, 1646, 1657, 1658, 1677, 1745, 1776, 1787, 1792, 1821, 1828, 1857, 1862, 1863, 1866, 1870, 1874, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1893, 1894, 1895, 1898, 1900, 1903, 1904, 1906, 1907, 1912, 1913, 1914, 1916, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928], "net": [1, 7, 32, 48, 65, 70, 1189, 1204, 1205, 1358, 1421, 1601, 1624, 1681, 1861, 1862, 1881, 1882, 1885, 1893, 1921], "sgd": [1, 37, 38, 44, 1364, 1592, 1601, 1682, 1688, 1690, 1881, 1885, 1886, 1893, 1903, 1912, 1913], "target": [1, 13, 14, 15, 21, 27, 28, 31, 44, 62, 66, 68, 69, 70, 496, 731, 762, 763, 788, 793, 855, 857, 858, 934, 1120, 1189, 1198, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1337, 1338, 1344, 1355, 1357, 1369, 1370, 1375, 1381, 1382, 1387, 1388, 1412, 1413, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1452, 1453, 1464, 1473, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1493, 1501, 1503, 1504, 1515, 1516, 1517, 1528, 1529, 1532, 1533, 1543, 1551, 1552, 1553, 1554, 1555, 1563, 1570, 1574, 1575, 1601, 1676, 1842, 1860, 1862, 1881, 1882, 1885, 1895, 1900, 1903, 1904, 1907, 1908, 1912, 1921, 1925], "data": [1, 2, 3, 4, 8, 15, 16, 17, 20, 21, 26, 29, 34, 35, 38, 40, 42, 44, 46, 47, 48, 51, 54, 57, 59, 62, 66, 70, 139, 150, 195, 196, 325, 328, 332, 335, 340, 443, 446, 479, 490, 494, 496, 613, 734, 735, 736, 756, 768, 769, 770, 777, 788, 789, 790, 794, 815, 816, 817, 818, 819, 821, 823, 861, 875, 876, 886, 889, 918, 927, 933, 966, 1043, 1044, 1063, 1064, 1065, 1075, 1076, 1077, 1080, 1082, 1083, 1085, 1093, 1094, 1095, 1098, 1101, 1102, 1103, 1104, 1113, 1115, 1116, 1117, 1119, 1128, 1146, 1147, 1149, 1168, 1171, 1196, 1200, 1204, 1208, 1259, 1260, 1261, 1275, 1280, 1288, 1290, 1302, 1303, 1316, 1318, 1319, 1342, 1344, 1349, 1350, 1351, 1358, 1373, 1376, 1384, 1385, 1386, 1391, 1393, 1408, 1428, 1436, 1437, 1473, 1485, 1490, 1491, 1495, 1496, 1497, 1530, 1537, 1539, 1576, 1577, 1601, 1602, 1603, 1604, 1634, 1635, 1636, 1637, 1639, 1648, 1652, 1653, 1657, 1658, 1682, 1688, 1696, 1704, 1707, 1708, 1709, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1729, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1783, 1786, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1807, 1821, 1830, 1832, 1834, 1841, 1842, 1854, 1855, 1857, 1859, 1860, 1863, 1869, 1870, 1872, 1874, 1877, 1881, 1882, 1883, 1885, 1887, 1888, 1892, 1895, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1910, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926], "zero_grad": [1, 2, 44, 1189, 1421, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1681, 1881, 1885, 1889, 1893, 1895, 1903], "loss_fn": [1, 44, 1676, 1881, 1885, 1886, 1895, 1903], "exit": [1, 2, 3, 5, 21, 34, 40, 48, 57, 62, 69, 70, 890, 1601, 1862, 1874, 1882, 1895, 1900, 1914], "step": [1, 2, 3, 5, 10, 17, 21, 28, 31, 37, 38, 40, 41, 42, 44, 46, 58, 62, 66, 70, 534, 603, 682, 764, 765, 853, 861, 890, 891, 892, 920, 944, 1148, 1236, 1259, 1261, 1275, 1278, 1290, 1369, 1370, 1391, 1488, 1489, 1515, 1516, 1601, 1634, 1655, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1713, 1722, 1776, 1858, 1859, 1860, 1876, 1881, 1882, 1885, 1886, 1887, 1889, 1893, 1895, 1897, 1899, 1900, 1904, 1906, 1907, 1912, 1913, 1916, 1921], "along": [1, 31, 34, 37, 40, 46, 50, 57, 312, 314, 316, 320, 490, 510, 512, 514, 682, 693, 815, 871, 872, 943, 960, 962, 977, 979, 1045, 1053, 1054, 1061, 1062, 1078, 1083, 1086, 1090, 1093, 1096, 1102, 1130, 1131, 1154, 1163, 1166, 1210, 1221, 1257, 1309, 1316, 1320, 1321, 1330, 1331, 1332, 1338, 1356, 1369, 1370, 1411, 1414, 1415, 1416, 1454, 1456, 1485, 1493, 1502, 1515, 1516, 1519, 1522, 1539, 1544, 1545, 1546, 1556, 1576, 1577, 1619, 1621, 1628, 1629, 1638, 1647, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1688, 1707, 1727, 1728, 1733, 1744, 1780, 1783, 1786, 1787, 1795, 1800, 1818, 1822, 1825, 1828, 1837, 1846, 1849, 1851, 1856, 1861, 1866, 1877, 1883, 1887, 1889, 1892, 1893, 1904, 1907, 1917], "complex": [1, 2, 4, 8, 9, 18, 20, 37, 38, 40, 70, 310, 328, 481, 681, 688, 904, 905, 942, 954, 955, 1057, 1083, 1105, 1110, 1142, 1159, 1168, 1179, 1181, 1182, 1185, 1186, 1189, 1209, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1238, 1241, 1243, 1245, 1246, 1247, 1248, 1252, 1253, 1257, 1258, 1259, 1261, 1269, 1275, 1287, 1292, 1310, 1349, 1350, 1351, 1388, 1421, 1495, 1496, 1497, 1608, 1648, 1700, 1713, 1726, 1747, 1758, 1803, 1804, 1807, 1842, 1846, 1847, 1848, 1856, 1857, 1860, 1862, 1863, 1871, 1895, 1902, 1918, 1919, 1922, 1923, 1924], "scenario": [1, 17, 18, 37, 40, 57, 1656, 1657, 1885, 1890, 1900, 1906, 1912], "g": [1, 2, 3, 4, 6, 8, 13, 15, 16, 26, 28, 29, 31, 32, 37, 38, 40, 44, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 60, 62, 65, 67, 69, 70, 576, 613, 744, 753, 756, 789, 790, 811, 813, 850, 855, 857, 858, 885, 894, 904, 905, 930, 1008, 1062, 1113, 1119, 1123, 1124, 1139, 1142, 1164, 1186, 1189, 1195, 1196, 1204, 1260, 1344, 1345, 1358, 1360, 1361, 1362, 1366, 1368, 1373, 1381, 1387, 1391, 1392, 1421, 1422, 1431, 1436, 1452, 1504, 1506, 1507, 1508, 1513, 1520, 1601, 1602, 1603, 1604, 1645, 1648, 1655, 1656, 1661, 1662, 1663, 1664, 1667, 1673, 1674, 1675, 1676, 1728, 1735, 1746, 1753, 1771, 1803, 1856, 1859, 1861, 1862, 1863, 1866, 1869, 1874, 1881, 1882, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1896, 1897, 1900, 1903, 1904, 1906, 1907, 1912, 1916, 1919, 1920, 1921, 1927], "penalti": [1, 23, 777, 1019, 1660, 1661, 1662, 1663, 1665, 1667, 1673, 1674, 1676, 1908], "multipl": [1, 2, 3, 4, 6, 12, 16, 17, 19, 27, 37, 38, 40, 41, 42, 46, 47, 50, 57, 58, 59, 62, 67, 69, 70, 191, 208, 314, 510, 682, 684, 685, 691, 692, 756, 837, 870, 871, 874, 903, 937, 939, 949, 957, 961, 977, 978, 979, 1005, 1060, 1062, 1065, 1115, 1123, 1124, 1125, 1126, 1129, 1130, 1134, 1138, 1152, 1153, 1202, 1205, 1210, 1211, 1226, 1227, 1228, 1244, 1249, 1254, 1255, 1283, 1286, 1291, 1293, 1337, 1338, 1352, 1353, 1354, 1355, 1357, 1365, 1368, 1373, 1381, 1387, 1388, 1409, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1472, 1492, 1493, 1503, 1512, 1532, 1555, 1563, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1675, 1683, 1684, 1685, 1686, 1687, 1692, 1694, 1750, 1778, 1784, 1785, 1789, 1790, 1791, 1793, 1794, 1822, 1823, 1830, 1838, 1842, 1849, 1850, 1856, 1857, 1861, 1862, 1874, 1875, 1876, 1877, 1882, 1884, 1886, 1888, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1926], "autocastmodel": 1, "produc": [1, 8, 13, 15, 17, 20, 21, 23, 28, 31, 37, 40, 42, 47, 49, 51, 54, 59, 67, 68, 69, 70, 88, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 920, 940, 1001, 1093, 1094, 1095, 1113, 1123, 1124, 1130, 1142, 1200, 1204, 1205, 1208, 1224, 1225, 1228, 1235, 1236, 1247, 1252, 1286, 1289, 1290, 1291, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402, 1427, 1504, 1512, 1520, 1531, 1589, 1590, 1591, 1648, 1677, 1706, 1713, 1722, 1807, 1842, 1849, 1859, 1861, 1862, 1874, 1875, 1881, 1882, 1883, 1885, 1887, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1916, 1920], "after": [1, 2, 8, 10, 12, 14, 17, 18, 19, 21, 23, 27, 28, 31, 37, 38, 40, 41, 42, 44, 45, 57, 59, 62, 69, 70, 259, 756, 786, 853, 855, 857, 858, 889, 890, 893, 949, 963, 965, 1001, 1008, 1061, 1119, 1174, 1189, 1193, 1244, 1283, 1325, 1358, 1373, 1406, 1421, 1424, 1464, 1466, 1468, 1485, 1520, 1592, 1595, 1601, 1613, 1615, 1619, 1621, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1688, 1690, 1746, 1803, 1828, 1851, 1856, 1861, 1862, 1872, 1874, 1880, 1881, 1882, 1885, 1886, 1887, 1889, 1890, 1892, 1893, 1895, 1896, 1900, 1903, 1904, 1906, 1907, 1912, 1913, 1914, 1915, 1917, 1919, 1921], "them": [1, 2, 4, 6, 8, 9, 10, 15, 16, 17, 20, 21, 23, 24, 27, 28, 29, 31, 32, 37, 40, 42, 48, 49, 54, 57, 59, 62, 66, 67, 69, 70, 150, 221, 253, 730, 889, 895, 899, 931, 1008, 1047, 1050, 1062, 1210, 1219, 1230, 1244, 1256, 1260, 1288, 1319, 1345, 1364, 1421, 1454, 1456, 1576, 1620, 1635, 1638, 1678, 1786, 1788, 1806, 1856, 1861, 1862, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1897, 1899, 1903, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1917, 1921, 1922, 1925], "differ": [1, 2, 4, 6, 9, 16, 17, 18, 20, 21, 23, 24, 25, 28, 31, 34, 37, 40, 42, 44, 45, 46, 48, 49, 50, 54, 55, 57, 58, 60, 62, 63, 66, 67, 68, 70, 196, 484, 490, 613, 676, 682, 685, 691, 692, 731, 756, 789, 792, 793, 818, 820, 821, 857, 858, 861, 875, 876, 904, 905, 917, 929, 930, 961, 1045, 1050, 1052, 1054, 1062, 1102, 1103, 1104, 1108, 1109, 1115, 1118, 1123, 1124, 1130, 1142, 1163, 1189, 1199, 1204, 1218, 1224, 1225, 1235, 1236, 1244, 1247, 1252, 1256, 1283, 1293, 1329, 1338, 1339, 1340, 1341, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1373, 1374, 1382, 1384, 1385, 1386, 1387, 1391, 1392, 1408, 1421, 1424, 1427, 1442, 1443, 1445, 1446, 1447, 1449, 1452, 1460, 1466, 1468, 1470, 1473, 1476, 1477, 1478, 1485, 1493, 1511, 1520, 1531, 1533, 1544, 1545, 1546, 1570, 1592, 1601, 1603, 1604, 1608, 1643, 1648, 1655, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1682, 1690, 1696, 1706, 1728, 1801, 1802, 1807, 1828, 1839, 1840, 1842, 1844, 1845, 1849, 1856, 1859, 1861, 1862, 1864, 1868, 1869, 1874, 1875, 1877, 1881, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1893, 1895, 1896, 1897, 1899, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1914, 1916, 1919, 1921, 1922, 1923, 1926], "caus": [1, 2, 3, 4, 6, 16, 18, 31, 34, 37, 40, 44, 50, 56, 57, 58, 67, 70, 552, 613, 873, 876, 889, 1115, 1200, 1204, 1224, 1225, 1252, 1306, 1531, 1532, 1589, 1592, 1601, 1647, 1659, 1746, 1757, 1803, 1842, 1859, 1862, 1874, 1883, 1885, 1887, 1889, 1895, 1897, 1899, 1900, 1904, 1907, 1908, 1914, 1916, 1919], "mismatch": [1, 40, 70, 876, 1190, 1658, 1659, 1861, 1881, 1886, 1887, 1889, 1900, 1923], "so": [1, 2, 3, 4, 8, 10, 12, 15, 16, 17, 18, 20, 21, 22, 23, 26, 27, 28, 31, 33, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 57, 58, 60, 62, 65, 66, 67, 69, 70, 334, 456, 493, 676, 855, 890, 895, 897, 898, 903, 946, 964, 987, 1050, 1052, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1113, 1115, 1118, 1122, 1123, 1125, 1126, 1176, 1186, 1189, 1192, 1193, 1198, 1200, 1202, 1244, 1246, 1256, 1261, 1266, 1278, 1299, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1365, 1368, 1375, 1421, 1437, 1454, 1456, 1472, 1485, 1495, 1496, 1497, 1520, 1576, 1577, 1592, 1601, 1647, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1772, 1786, 1798, 1803, 1807, 1827, 1839, 1843, 1859, 1861, 1862, 1868, 1870, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1907, 1911, 1912, 1916, 1917, 1919, 1921, 1922, 1924], "cast": [1, 7, 38, 55, 62, 334, 599, 600, 934, 1043, 1044, 1189, 1241, 1245, 1258, 1288, 1316, 1319, 1421, 1539, 1576, 1577, 1648, 1704, 1783, 1786, 1792, 1806, 1811, 1812, 1859, 1881, 1896, 1900, 1917, 1918, 1919], "back": [1, 2, 3, 12, 18, 20, 21, 31, 37, 38, 40, 42, 46, 57, 62, 67, 70, 731, 833, 904, 946, 1082, 1119, 1190, 1202, 1254, 1260, 1467, 1605, 1606, 1788, 1856, 1859, 1862, 1882, 1887, 1888, 1895, 1896, 1897, 1900, 1903, 1904, 1907, 1912, 1916, 1927], "alreadi": [1, 2, 12, 16, 29, 37, 38, 40, 41, 57, 58, 62, 69, 70, 195, 206, 209, 461, 484, 520, 576, 599, 600, 788, 836, 850, 854, 875, 973, 999, 1189, 1198, 1260, 1421, 1596, 1601, 1634, 1677, 1837, 1839, 1856, 1859, 1869, 1871, 1875, 1876, 1881, 1882, 1885, 1887, 1890, 1895, 1900, 1903, 1904, 1907, 1913, 1914, 1918, 1920], "incur": [1, 6, 38, 40, 62, 939, 1895, 1912], "overhead": [1, 2, 4, 5, 9, 12, 16, 17, 19, 20, 21, 38, 40, 62, 777, 949, 1019, 1200, 1601, 1884, 1885, 1886, 1891, 1892, 1905, 1906, 1913, 1916, 1922], "here": [1, 2, 8, 9, 10, 12, 15, 16, 17, 18, 20, 21, 22, 24, 26, 28, 32, 34, 37, 38, 40, 41, 46, 56, 58, 64, 65, 66, 67, 69, 70, 576, 789, 790, 959, 971, 1062, 1079, 1081, 1082, 1087, 1088, 1089, 1091, 1092, 1097, 1099, 1118, 1128, 1187, 1200, 1339, 1340, 1341, 1352, 1353, 1354, 1384, 1385, 1386, 1429, 1460, 1520, 1522, 1610, 1674, 1677, 1688, 1775, 1856, 1859, 1861, 1862, 1864, 1875, 1876, 1877, 1881, 1882, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1899, 1900, 1903, 1904, 1905, 1907, 1910, 1916, 1920, 1921, 1923], "assum": [1, 14, 15, 23, 29, 37, 40, 45, 46, 48, 50, 57, 58, 62, 65, 68, 70, 813, 1045, 1080, 1083, 1085, 1093, 1094, 1095, 1098, 1180, 1186, 1187, 1190, 1204, 1224, 1225, 1227, 1234, 1243, 1246, 1249, 1251, 1261, 1344, 1413, 1473, 1504, 1570, 1601, 1610, 1613, 1638, 1678, 1679, 1684, 1685, 1686, 1689, 1691, 1692, 1696, 1808, 1828, 1830, 1856, 1859, 1861, 1862, 1875, 1882, 1885, 1887, 1888, 1890, 1892, 1896, 1900, 1903, 1904, 1905, 1912, 1913, 1914, 1916], "a_float32": 1, "rand": [1, 2, 34, 46, 70, 334, 689, 695, 897, 898, 899, 900, 901, 902, 961, 1005, 1006, 1079, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1097, 1099, 1120, 1195, 1200, 1204, 1205, 1206, 1262, 1263, 1265, 1337, 1387, 1464, 1465, 1466, 1467, 1468, 1492, 1511, 1512, 1570, 1601, 1613, 1646, 1699, 1710, 1711, 1712, 1716, 1858, 1859, 1860, 1861, 1862, 1864, 1875, 1876, 1900, 1902, 1905, 1907, 1912, 1913, 1917, 1920, 1921, 1924], "8": [1, 2, 14, 21, 28, 31, 36, 37, 38, 40, 46, 48, 312, 314, 316, 320, 400, 401, 469, 510, 514, 556, 603, 613, 681, 682, 693, 694, 741, 742, 757, 759, 761, 769, 770, 816, 817, 818, 821, 900, 920, 928, 939, 942, 943, 947, 1005, 1006, 1041, 1045, 1060, 1065, 1078, 1094, 1095, 1101, 1102, 1105, 1112, 1142, 1151, 1152, 1212, 1241, 1244, 1245, 1246, 1254, 1256, 1259, 1260, 1320, 1321, 1326, 1327, 1328, 1330, 1331, 1332, 1345, 1356, 1391, 1417, 1418, 1424, 1426, 1428, 1435, 1436, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1460, 1464, 1465, 1466, 1467, 1468, 1472, 1496, 1499, 1502, 1558, 1563, 1568, 1569, 1570, 1648, 1649, 1655, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1682, 1690, 1695, 1699, 1703, 1723, 1733, 1734, 1735, 1742, 1755, 1762, 1765, 1770, 1776, 1780, 1787, 1789, 1790, 1795, 1803, 1807, 1817, 1822, 1823, 1824, 1826, 1828, 1837, 1842, 1843, 1850, 1859, 1863, 1869, 1885, 1887, 1898, 1900, 1902, 1904, 1905, 1906, 1907, 1910, 1912, 1916, 1917, 1919, 1920, 1922], "b_float32": 1, "c_float32": 1, "d_float32": 1, "mm": [1, 941, 942, 1193, 1244, 1283, 1431, 1432, 1706, 1807, 1842, 1858, 1860, 1861, 1875, 1881, 1884, 1887, 1896, 1902, 1916], "No": [1, 10, 12, 60, 69, 896, 1601, 1646, 1861, 1885, 1900, 1910, 1920, 1923], "manual": [1, 12, 15, 24, 37, 40, 55, 57, 58, 60, 62, 70, 793, 834, 874, 903, 1151, 1193, 1337, 1338, 1357, 1425, 1426, 1428, 1449, 1468, 1492, 1493, 1503, 1555, 1613, 1634, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1859, 1862, 1874, 1881, 1885, 1887, 1888, 1889, 1890, 1893, 1899, 1900, 1907, 1908, 1921], "e_float16": 1, "handl": [1, 2, 6, 10, 12, 16, 17, 18, 20, 21, 23, 29, 31, 37, 38, 40, 41, 42, 44, 48, 49, 50, 57, 58, 62, 69, 70, 485, 836, 886, 896, 909, 910, 956, 965, 980, 1007, 1020, 1062, 1108, 1109, 1130, 1189, 1219, 1358, 1421, 1470, 1520, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1726, 1772, 1808, 1849, 1856, 1872, 1874, 1876, 1885, 1887, 1888, 1889, 1890, 1895, 1900, 1904, 1907, 1912, 1914, 1923, 1924], "f_float16": 1, "g_float32": 1, "epoch": [1, 37, 50, 60, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1872, 1881, 1903, 1921], "eval": [1, 70, 810, 856, 857, 1128, 1189, 1193, 1198, 1204, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1427, 1460, 1468, 1609, 1862, 1870, 1893, 1900, 1907, 1926, 1927], "testmodel": 1, "__init__": [1, 2, 13, 15, 27, 28, 37, 38, 40, 46, 62, 70, 857, 858, 1128, 1187, 1190, 1192, 1195, 1200, 1204, 1205, 1206, 1421, 1422, 1423, 1431, 1432, 1592, 1859, 1861, 1862, 1872, 1882, 1887, 1889, 1893, 1898, 1900, 1904, 1907, 1921], "input_s": [1, 730, 756, 757, 761, 1373, 1374, 1391, 1392, 1436, 1437, 1438, 1860], "num_class": [1, 20, 1557, 1860], "super": [1, 10, 13, 18, 27, 28, 37, 38, 40, 42, 70, 857, 858, 1128, 1187, 1192, 1195, 1200, 1204, 1205, 1206, 1421, 1422, 1423, 1431, 1432, 1433, 1434, 1592, 1688, 1859, 1861, 1862, 1863, 1882, 1887, 1893, 1898, 1900, 1904, 1907], "fc1": [1, 38, 1592, 1905], "suggest": [1, 10, 28, 38, 63, 82, 83, 1355, 1856, 1864, 1881, 1882, 1889, 1916], "issu": [1, 3, 4, 6, 10, 11, 12, 17, 18, 19, 22, 26, 29, 31, 36, 37, 40, 47, 62, 63, 65, 67, 70, 897, 903, 949, 1113, 1124, 1126, 1130, 1234, 1278, 1290, 1387, 1391, 1417, 1418, 1419, 1436, 1473, 1531, 1532, 1746, 1849, 1856, 1857, 1862, 1864, 1869, 1874, 1875, 1876, 1877, 1881, 1882, 1885, 1887, 1895, 1896, 1897, 1899, 1900, 1904, 1907, 1908, 1912, 1916, 1917, 1919], "http": [1, 3, 4, 5, 8, 10, 19, 20, 26, 27, 31, 32, 38, 39, 40, 45, 46, 57, 58, 62, 150, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 788, 789, 889, 949, 1062, 1119, 1261, 1290, 1344, 1391, 1417, 1418, 1419, 1439, 1440, 1464, 1467, 1470, 1645, 1696, 1713, 1746, 1771, 1842, 1856, 1863, 1871, 1882, 1883, 1890, 1891, 1893, 1897, 1899, 1900, 1904, 1906, 1919, 1921, 1928], "github": [1, 8, 10, 17, 26, 27, 28, 31, 39, 40, 53, 62, 63, 67, 150, 788, 789, 889, 903, 1119, 1290, 1417, 1418, 1419, 1464, 1682, 1746, 1856, 1864, 1869, 1887, 1890, 1897, 1900, 1906, 1907, 1916, 1917, 1919], "com": [1, 8, 26, 27, 31, 39, 40, 56, 58, 62, 150, 788, 789, 889, 1119, 1290, 1417, 1418, 1419, 1464, 1746, 1842, 1856, 1871, 1890, 1891, 1897, 1899, 1900, 1906, 1919], "75956": 1, "_c": [1, 37, 38, 40, 69, 897, 903, 1188, 1200, 1657, 1860, 1862, 1872, 1885, 1892, 1896, 1899, 1900], "_jit_set_autocast_mod": 1, "randn": [1, 2, 12, 13, 17, 20, 21, 22, 26, 28, 29, 40, 46, 64, 66, 67, 68, 70, 288, 310, 481, 540, 576, 580, 581, 582, 583, 584, 585, 613, 679, 680, 681, 682, 683, 684, 685, 686, 691, 692, 695, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 752, 754, 756, 757, 758, 759, 760, 761, 768, 769, 770, 857, 858, 870, 871, 872, 874, 877, 878, 879, 880, 881, 917, 929, 936, 938, 939, 940, 941, 942, 944, 956, 957, 958, 959, 960, 962, 1041, 1042, 1043, 1044, 1049, 1050, 1051, 1052, 1056, 1062, 1076, 1077, 1106, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1159, 1163, 1166, 1200, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1242, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1264, 1268, 1269, 1276, 1278, 1279, 1280, 1282, 1283, 1286, 1288, 1289, 1291, 1293, 1294, 1295, 1296, 1309, 1310, 1313, 1323, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1447, 1448, 1450, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1469, 1471, 1472, 1476, 1477, 1478, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1515, 1516, 1522, 1555, 1561, 1562, 1651, 1655, 1697, 1702, 1703, 1704, 1706, 1707, 1720, 1724, 1725, 1737, 1773, 1775, 1780, 1785, 1788, 1796, 1797, 1806, 1807, 1816, 1819, 1820, 1823, 1827, 1830, 1831, 1833, 1836, 1838, 1842, 1847, 1848, 1849, 1852, 1858, 1860, 1861, 1862, 1864, 1875, 1876, 1877, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1891, 1893, 1897, 1898, 1900, 1902, 1904, 1907, 1912, 1916, 1917, 1919, 1921, 1924, 1926], "freez": [1, 1189, 1198, 1364, 1365, 1421, 1882], "_": [1, 2, 4, 13, 21, 28, 37, 38, 40, 41, 44, 50, 68, 70, 677, 679, 680, 694, 861, 877, 878, 879, 880, 881, 890, 896, 919, 938, 955, 956, 958, 959, 961, 1106, 1111, 1125, 1129, 1155, 1209, 1217, 1268, 1276, 1339, 1340, 1341, 1384, 1385, 1386, 1460, 1601, 1609, 1642, 1674, 1676, 1696, 1719, 1722, 1725, 1737, 1752, 1758, 1760, 1766, 1773, 1775, 1796, 1807, 1819, 1820, 1882, 1885, 1888, 1889, 1893, 1899, 1903, 1904, 1906, 1917], "bug": [1, 17, 28, 31, 34, 40, 70, 1122, 1123, 1125, 1278, 1881, 1895, 1916], "what": [1, 2, 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 18, 21, 22, 26, 28, 40, 45, 46, 50, 54, 55, 62, 64, 66, 67, 70, 888, 1123, 1204, 1205, 1278, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1415, 1416, 1449, 1472, 1544, 1545, 1546, 1570, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1707, 1856, 1857, 1859, 1861, 1862, 1875, 1887, 1888, 1890, 1893, 1900, 1903, 1906, 1907, 1912, 1913, 1916], "observ": [1, 12, 17, 28, 38, 48, 57, 752, 785, 786, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 804, 805, 807, 809, 811, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 855, 857, 858, 860, 957, 961, 1202, 1290, 1337, 1338, 1339, 1340, 1341, 1355, 1357, 1381, 1384, 1385, 1386, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1460, 1469, 1492, 1493, 1503, 1532, 1555, 1563, 1881, 1882, 1885, 1886, 1892, 1908, 1926], "pleas": [1, 2, 5, 6, 7, 8, 9, 10, 13, 16, 22, 24, 26, 28, 29, 32, 38, 40, 46, 49, 52, 53, 57, 58, 62, 63, 64, 65, 66, 67, 68, 70, 253, 254, 495, 510, 614, 685, 726, 727, 728, 729, 730, 731, 737, 738, 739, 741, 742, 752, 757, 758, 759, 760, 761, 857, 858, 888, 890, 891, 892, 897, 899, 900, 903, 931, 1045, 1118, 1122, 1123, 1124, 1125, 1126, 1130, 1189, 1252, 1283, 1293, 1344, 1352, 1387, 1421, 1520, 1532, 1537, 1558, 1570, 1588, 1601, 1642, 1643, 1684, 1746, 1849, 1864, 1869, 1875, 1876, 1877, 1878, 1881, 1882, 1887, 1888, 1891, 1896, 1897, 1899, 1900, 1903, 1904, 1907, 1910, 1912, 1913, 1916, 1917, 1919, 1920, 1921, 1923], "file": [1, 2, 4, 7, 8, 10, 13, 15, 17, 18, 24, 29, 31, 34, 37, 42, 48, 50, 55, 57, 59, 65, 67, 70, 897, 903, 911, 912, 964, 1001, 1122, 1123, 1125, 1126, 1164, 1196, 1199, 1260, 1658, 1738, 1782, 1856, 1859, 1862, 1863, 1864, 1871, 1875, 1876, 1877, 1882, 1885, 1887, 1892, 1897, 1898, 1899, 1900, 1906, 1910, 1913, 1916, 1918, 1921], "subregion": 1, "nest": [1, 2, 6, 31, 42, 62, 70, 585, 789, 811, 813, 890, 899, 1023, 1024, 1120, 1130, 1189, 1192, 1204, 1421, 1427, 1467, 1655, 1659, 1849, 1857, 1888, 1900, 1906, 1912], "local": [1, 14, 17, 21, 28, 40, 42, 44, 45, 48, 55, 57, 58, 59, 60, 62, 70, 916, 1005, 1066, 1119, 1164, 1189, 1261, 1360, 1361, 1362, 1366, 1368, 1409, 1421, 1472, 1514, 1538, 1588, 1601, 1602, 1646, 1752, 1782, 1856, 1857, 1861, 1874, 1881, 1885, 1886, 1889, 1900, 1904, 1905, 1909, 1912, 1913, 1914, 1921], "particular": [1, 4, 8, 12, 16, 17, 18, 28, 37, 42, 48, 54, 57, 58, 62, 70, 556, 676, 857, 858, 1036, 1130, 1189, 1283, 1358, 1421, 1655, 1849, 1859, 1861, 1869, 1877, 1885, 1887, 1889, 1892, 1893, 1896, 1900, 1903, 1916, 1918, 1924, 1927], "explicit": [1, 9, 40, 62, 66, 70, 997, 1142, 1176, 1532, 1746, 1823, 1856, 1857, 1858, 1862, 1863, 1875, 1881, 1885, 1887, 1904, 1919, 1920], "control": [1, 2, 3, 12, 13, 15, 20, 21, 31, 37, 38, 40, 41, 42, 46, 48, 53, 56, 57, 751, 795, 854, 857, 872, 876, 890, 918, 927, 1049, 1050, 1051, 1052, 1053, 1146, 1147, 1200, 1201, 1202, 1204, 1219, 1225, 1227, 1230, 1232, 1235, 1237, 1241, 1247, 1250, 1252, 1258, 1278, 1329, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1407, 1415, 1416, 1472, 1570, 1601, 1694, 1750, 1751, 1765, 1780, 1782, 1787, 1803, 1807, 1825, 1831, 1832, 1833, 1834, 1857, 1859, 1868, 1882, 1884, 1885, 1886, 1893, 1895, 1896, 1898, 1900, 1903, 1907, 1914, 1916], "surround": [1, 70, 786, 1861, 1881, 1885], "ensur": [1, 2, 5, 7, 8, 10, 12, 16, 17, 28, 37, 40, 41, 42, 44, 48, 57, 58, 60, 62, 69, 70, 479, 484, 731, 815, 893, 895, 1119, 1189, 1333, 1414, 1421, 1424, 1425, 1464, 1520, 1544, 1545, 1546, 1570, 1601, 1754, 1856, 1859, 1861, 1869, 1871, 1874, 1881, 1882, 1885, 1887, 1888, 1890, 1895, 1897, 1904, 1907, 1908, 1912, 1913], "necessari": [1, 2, 4, 10, 17, 28, 31, 37, 42, 48, 57, 58, 62, 69, 88, 191, 208, 556, 585, 896, 1119, 1163, 1200, 1427, 1635, 1636, 1859, 1862, 1876, 1880, 1882, 1883, 1885, 1886, 1891, 1893, 1896, 1899, 1904, 1907, 1912, 1913, 1914, 1919], "becaus": [1, 2, 4, 5, 6, 8, 9, 12, 15, 16, 17, 18, 20, 21, 26, 28, 31, 37, 38, 40, 44, 46, 50, 62, 66, 67, 69, 70, 493, 899, 904, 905, 1083, 1084, 1085, 1093, 1094, 1095, 1120, 1124, 1129, 1130, 1186, 1190, 1193, 1196, 1235, 1236, 1260, 1278, 1339, 1340, 1341, 1358, 1460, 1592, 1601, 1602, 1680, 1722, 1803, 1849, 1857, 1859, 1862, 1864, 1874, 1875, 1876, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1900, 1904, 1907, 1908, 1912, 1914, 1916, 1921, 1923, 1926, 1927], "f_float32": 1, "re": [1, 2, 5, 6, 8, 12, 15, 16, 17, 20, 22, 27, 28, 31, 37, 40, 44, 47, 54, 57, 62, 63, 64, 65, 66, 67, 69, 70, 929, 1113, 1189, 1193, 1421, 1576, 1602, 1637, 1733, 1786, 1859, 1862, 1869, 1874, 1881, 1882, 1885, 1887, 1888, 1890, 1895, 1907, 1913, 1914, 1917, 1927], "again": [1, 12, 15, 16, 21, 34, 37, 40, 44, 48, 65, 1311, 1882, 1888, 1893], "regardless": [1, 17, 37, 56, 62, 955, 1193, 1198, 1839, 1881, 1885, 1898, 1912, 1923], "g_float16": 1, "thread": [1, 2, 4, 14, 37, 40, 42, 48, 59, 62, 69, 916, 965, 1066, 1139, 1140, 1164, 1358, 1646, 1752, 1753, 1754, 1857, 1859, 1872, 1881, 1885, 1892, 1895, 1912, 1914, 1924], "new": [1, 2, 6, 9, 12, 14, 15, 17, 21, 27, 28, 31, 34, 37, 39, 40, 42, 46, 48, 57, 58, 62, 63, 66, 67, 68, 69, 70, 221, 253, 310, 446, 481, 485, 493, 496, 540, 576, 579, 613, 676, 680, 756, 787, 810, 815, 850, 875, 877, 878, 879, 880, 881, 891, 909, 910, 932, 933, 938, 947, 956, 958, 959, 966, 968, 1046, 1050, 1072, 1076, 1077, 1103, 1104, 1106, 1119, 1128, 1130, 1159, 1163, 1164, 1178, 1179, 1182, 1185, 1189, 1195, 1200, 1202, 1262, 1263, 1264, 1265, 1282, 1320, 1323, 1339, 1340, 1341, 1373, 1384, 1385, 1386, 1421, 1422, 1427, 1431, 1460, 1471, 1473, 1531, 1594, 1597, 1598, 1599, 1600, 1601, 1609, 1613, 1615, 1619, 1620, 1621, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1638, 1642, 1646, 1663, 1664, 1690, 1714, 1724, 1725, 1729, 1730, 1731, 1737, 1738, 1742, 1747, 1748, 1758, 1760, 1771, 1773, 1775, 1796, 1797, 1800, 1817, 1819, 1820, 1836, 1838, 1841, 1847, 1848, 1849, 1856, 1859, 1861, 1862, 1866, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1882, 1885, 1887, 1888, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1910, 1914, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1926], "affect": [1, 2, 3, 8, 10, 23, 34, 36, 47, 62, 221, 222, 781, 916, 966, 968, 1066, 1113, 1136, 1164, 1189, 1302, 1303, 1391, 1421, 1436, 1473, 1589, 1602, 1646, 1746, 1749, 1750, 1752, 1881, 1882, 1885, 1890, 1893, 1896, 1897, 1918], "dataparallel": [1, 40, 1585, 1601, 1637, 1857, 1882, 1889, 1895, 1912], "parallel": [1, 17, 30, 31, 37, 38, 40, 41, 42, 44, 57, 58, 62, 1139, 1140, 1192, 1358, 1427, 1460, 1520, 1601, 1753, 1754, 1857, 1862, 1881, 1882, 1884, 1895, 1899, 1912, 1914], "distributeddataparallel": [1, 37, 38, 40, 41, 44, 58, 62, 1358, 1460, 1895, 1905, 1912], "one": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 24, 25, 27, 28, 29, 31, 32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 54, 57, 59, 60, 62, 66, 67, 68, 69, 70, 72, 74, 82, 83, 150, 221, 253, 351, 401, 484, 510, 517, 541, 556, 693, 744, 753, 789, 850, 851, 852, 876, 882, 888, 889, 890, 891, 893, 899, 920, 931, 933, 943, 947, 966, 968, 973, 975, 979, 1006, 1029, 1040, 1051, 1062, 1066, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1098, 1101, 1105, 1108, 1109, 1110, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1142, 1151, 1152, 1164, 1168, 1171, 1174, 1193, 1198, 1202, 1208, 1209, 1219, 1220, 1230, 1231, 1232, 1233, 1234, 1236, 1241, 1245, 1247, 1249, 1252, 1258, 1259, 1275, 1283, 1287, 1292, 1311, 1317, 1329, 1334, 1337, 1338, 1339, 1340, 1341, 1344, 1349, 1352, 1353, 1354, 1365, 1369, 1370, 1375, 1384, 1385, 1386, 1388, 1389, 1390, 1400, 1401, 1402, 1412, 1421, 1425, 1427, 1460, 1468, 1473, 1485, 1495, 1498, 1499, 1500, 1515, 1516, 1517, 1522, 1557, 1570, 1588, 1592, 1601, 1602, 1607, 1609, 1610, 1614, 1624, 1635, 1644, 1645, 1646, 1647, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1684, 1686, 1687, 1688, 1708, 1709, 1726, 1742, 1750, 1752, 1755, 1758, 1798, 1807, 1822, 1827, 1828, 1830, 1838, 1841, 1842, 1849, 1857, 1859, 1862, 1866, 1868, 1870, 1872, 1874, 1875, 1876, 1877, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1890, 1892, 1893, 1895, 1897, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1912, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923], "gpu": [1, 2, 3, 4, 5, 8, 12, 16, 17, 19, 20, 22, 24, 25, 28, 31, 33, 35, 37, 38, 42, 48, 58, 59, 62, 69, 196, 209, 288, 331, 599, 756, 949, 970, 971, 974, 975, 976, 977, 978, 979, 985, 986, 987, 994, 1000, 1001, 1007, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1025, 1026, 1027, 1028, 1029, 1030, 1033, 1039, 1040, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1110, 1189, 1198, 1235, 1260, 1289, 1297, 1298, 1299, 1302, 1303, 1329, 1358, 1373, 1391, 1421, 1436, 1437, 1460, 1585, 1601, 1634, 1807, 1857, 1859, 1870, 1885, 1891, 1893, 1894, 1896, 1897, 1899, 1907, 1912, 1916, 1918, 1922, 1924], "per": [1, 15, 31, 37, 38, 40, 41, 42, 44, 45, 47, 48, 50, 56, 58, 59, 62, 63, 68, 470, 471, 472, 730, 731, 797, 804, 815, 818, 821, 829, 841, 849, 888, 897, 899, 969, 1045, 1076, 1120, 1130, 1261, 1337, 1338, 1339, 1340, 1341, 1355, 1357, 1358, 1365, 1376, 1381, 1384, 1385, 1386, 1387, 1388, 1393, 1412, 1413, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1452, 1453, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1492, 1493, 1503, 1532, 1555, 1563, 1601, 1645, 1649, 1666, 1682, 1688, 1696, 1708, 1755, 1757, 1808, 1824, 1828, 1849, 1872, 1876, 1878, 1884, 1885, 1886, 1888, 1892, 1905, 1907, 1908, 1910, 1913, 1916, 1921], "whether": [1, 2, 3, 8, 17, 19, 21, 28, 31, 37, 38, 40, 41, 42, 45, 46, 48, 56, 57, 62, 70, 318, 320, 469, 514, 613, 676, 689, 691, 692, 695, 870, 871, 876, 885, 893, 896, 897, 899, 904, 905, 916, 918, 927, 940, 941, 942, 948, 949, 950, 1004, 1020, 1118, 1130, 1146, 1147, 1164, 1186, 1189, 1196, 1197, 1205, 1210, 1218, 1219, 1225, 1227, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1243, 1245, 1246, 1249, 1250, 1251, 1252, 1260, 1276, 1278, 1286, 1288, 1289, 1291, 1294, 1311, 1316, 1317, 1318, 1319, 1344, 1355, 1381, 1387, 1421, 1430, 1435, 1470, 1482, 1483, 1484, 1504, 1532, 1563, 1601, 1608, 1610, 1613, 1626, 1640, 1643, 1648, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1682, 1694, 1704, 1707, 1751, 1752, 1801, 1802, 1803, 1806, 1807, 1825, 1830, 1839, 1840, 1842, 1844, 1845, 1849, 1856, 1862, 1868, 1869, 1871, 1877, 1881, 1885, 1887, 1891, 1900, 1905, 1907, 1912, 1916, 1918, 1920, 1921, 1926], "torch_dtyp": 1, "weight": [1, 17, 37, 40, 46, 62, 68, 70, 156, 300, 360, 361, 493, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 745, 747, 748, 749, 750, 752, 756, 757, 759, 760, 761, 768, 769, 770, 777, 788, 789, 790, 804, 805, 829, 831, 837, 841, 845, 846, 847, 848, 849, 854, 855, 857, 858, 920, 961, 1118, 1120, 1128, 1130, 1150, 1151, 1189, 1193, 1198, 1200, 1205, 1214, 1311, 1337, 1338, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1364, 1365, 1373, 1374, 1376, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1421, 1425, 1426, 1427, 1428, 1429, 1436, 1438, 1450, 1464, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1511, 1512, 1521, 1530, 1534, 1537, 1552, 1554, 1555, 1564, 1573, 1592, 1601, 1608, 1609, 1611, 1613, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1641, 1642, 1643, 1645, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1676, 1710, 1849, 1856, 1857, 1858, 1860, 1861, 1862, 1870, 1871, 1876, 1877, 1880, 1887, 1889, 1893, 1898, 1907, 1908, 1909, 1910, 1916, 1921, 1925, 1926], "insid": [1, 2, 8, 16, 18, 21, 28, 37, 57, 62, 67, 69, 70, 893, 894, 895, 896, 971, 1008, 1120, 1124, 1129, 1200, 1601, 1859, 1861, 1862, 1870, 1881, 1885, 1887, 1888, 1892, 1900, 1925], "custom_fwd": [1, 1881], "fwd": 1, "cast_input": [1, 1881], "helper": [1, 4, 6, 27, 40, 66, 70, 1460, 1856, 1857, 1861, 1885, 1886, 1900, 1904, 1912, 1927], "subclass": [1, 2, 14, 21, 31, 37, 42, 46, 50, 67, 70, 139, 533, 885, 886, 887, 1187, 1190, 1199, 1421, 1602, 1615, 1620, 1641, 1859, 1862, 1863, 1869, 1881, 1893, 1900, 1901, 1912, 1927], "page": [1, 7, 8, 10, 24, 37, 41, 58, 60, 1261, 1464, 1466, 1468, 1885, 1886, 1893, 1902, 1912], "incom": [1, 40, 59, 777, 815, 816, 817, 818, 821, 1342, 1408, 1491, 1537, 1874, 1882], "non": [1, 2, 4, 6, 12, 15, 16, 17, 18, 19, 20, 27, 31, 36, 38, 40, 41, 42, 45, 46, 48, 50, 57, 59, 60, 62, 69, 88, 150, 334, 501, 510, 514, 541, 694, 730, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 761, 768, 769, 770, 834, 861, 873, 885, 887, 889, 894, 896, 904, 905, 920, 933, 936, 949, 954, 955, 960, 1019, 1108, 1109, 1115, 1119, 1124, 1130, 1166, 1189, 1192, 1201, 1204, 1205, 1224, 1225, 1232, 1236, 1237, 1250, 1252, 1261, 1271, 1278, 1283, 1288, 1311, 1316, 1317, 1321, 1334, 1335, 1336, 1350, 1351, 1353, 1354, 1357, 1367, 1373, 1390, 1391, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1426, 1428, 1436, 1438, 1452, 1503, 1522, 1550, 1555, 1597, 1598, 1601, 1647, 1677, 1699, 1742, 1743, 1758, 1770, 1784, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1823, 1839, 1849, 1856, 1857, 1859, 1861, 1862, 1864, 1874, 1877, 1880, 1883, 1887, 1888, 1889, 1893, 1897, 1900, 1905, 1906, 1911, 1912, 1914, 1916, 1917, 1919, 1920, 1921, 1923, 1927], "intern": [1, 4, 9, 10, 17, 21, 22, 28, 31, 37, 38, 40, 42, 46, 48, 54, 62, 67, 70, 963, 997, 1018, 1119, 1189, 1225, 1227, 1243, 1246, 1269, 1339, 1340, 1341, 1375, 1460, 1495, 1496, 1497, 1520, 1610, 1657, 1750, 1792, 1842, 1863, 1881, 1882, 1884, 1885, 1890, 1896, 1897, 1913, 1914, 1918, 1920], "current": [1, 2, 3, 4, 6, 7, 8, 10, 15, 16, 17, 21, 23, 24, 28, 29, 31, 37, 40, 42, 44, 45, 46, 48, 50, 57, 58, 62, 63, 69, 70, 88, 150, 209, 221, 484, 494, 495, 496, 737, 739, 777, 789, 791, 813, 855, 857, 858, 861, 875, 886, 889, 890, 897, 898, 899, 904, 918, 927, 963, 964, 965, 966, 968, 973, 974, 977, 978, 980, 981, 982, 983, 986, 987, 988, 990, 991, 994, 996, 997, 1000, 1002, 1003, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1029, 1031, 1033, 1035, 1038, 1039, 1040, 1063, 1065, 1075, 1080, 1098, 1114, 1116, 1136, 1137, 1138, 1146, 1147, 1172, 1173, 1189, 1193, 1204, 1208, 1259, 1261, 1275, 1290, 1297, 1299, 1361, 1364, 1368, 1421, 1460, 1472, 1514, 1520, 1531, 1570, 1588, 1589, 1591, 1601, 1614, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1652, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1706, 1715, 1717, 1719, 1721, 1722, 1746, 1750, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1782, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1832, 1834, 1839, 1854, 1857, 1859, 1861, 1862, 1863, 1864, 1866, 1869, 1872, 1874, 1877, 1881, 1882, 1885, 1886, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1907, 1910, 1912, 1913, 1916, 1918, 1919, 1921, 1922, 1925, 1927], "custom_bwd": [1, 1881], "bwd": 1, "small": [1, 4, 8, 10, 12, 16, 18, 19, 28, 37, 38, 40, 46, 57, 861, 904, 905, 949, 976, 1019, 1251, 1252, 1264, 1266, 1329, 1356, 1430, 1435, 1449, 1473, 1502, 1556, 1563, 1601, 1679, 1685, 1694, 1807, 1859, 1861, 1862, 1885, 1887, 1889, 1893, 1896, 1898, 1900, 1904, 1907, 1908, 1917, 1923], "magnitud": [1, 956, 1645, 1758, 1880, 1881, 1885], "represent": [1, 4, 15, 17, 28, 31, 37, 40, 42, 55, 70, 479, 754, 822, 966, 1078, 1079, 1081, 1105, 1134, 1189, 1228, 1231, 1233, 1236, 1315, 1421, 1427, 1655, 1694, 1857, 1859, 1862, 1877, 1887, 1896, 1900, 1904, 1907, 1916, 1923, 1928], "These": [1, 2, 3, 4, 9, 12, 15, 17, 21, 23, 28, 31, 32, 37, 40, 41, 46, 63, 65, 68, 70, 790, 876, 961, 1062, 1126, 1186, 1189, 1231, 1296, 1329, 1421, 1592, 1609, 1857, 1859, 1860, 1861, 1862, 1872, 1875, 1876, 1878, 1881, 1882, 1885, 1886, 1887, 1893, 1896, 1898, 1900, 1904, 1910, 1912, 1913, 1919, 1924, 1927], "flush": [1, 2, 42, 1019, 1199, 1738, 1751, 1896, 1921], "zero": [1, 2, 3, 16, 20, 38, 40, 41, 44, 46, 59, 62, 67, 70, 150, 259, 314, 510, 512, 540, 541, 580, 581, 583, 584, 619, 675, 687, 694, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 760, 764, 765, 768, 769, 770, 771, 773, 776, 777, 791, 795, 815, 816, 817, 818, 821, 826, 873, 882, 883, 884, 889, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 919, 920, 940, 941, 942, 947, 956, 960, 1008, 1019, 1023, 1024, 1053, 1057, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1101, 1110, 1115, 1118, 1126, 1148, 1149, 1152, 1174, 1186, 1189, 1200, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1261, 1269, 1270, 1271, 1272, 1273, 1278, 1279, 1311, 1315, 1319, 1333, 1334, 1335, 1336, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1373, 1374, 1376, 1389, 1390, 1391, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1427, 1430, 1433, 1434, 1435, 1436, 1438, 1458, 1472, 1473, 1476, 1477, 1478, 1487, 1488, 1489, 1498, 1499, 1500, 1502, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1520, 1541, 1542, 1556, 1557, 1558, 1618, 1619, 1620, 1621, 1636, 1643, 1647, 1651, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1694, 1706, 1708, 1709, 1710, 1726, 1735, 1745, 1772, 1776, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1807, 1821, 1822, 1824, 1830, 1855, 1859, 1860, 1862, 1864, 1872, 1874, 1875, 1876, 1877, 1880, 1882, 1885, 1887, 1893, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1910, 1916, 1917, 1919, 1921, 1922, 1923, 1924], "underflow": [1, 1387, 1881], "updat": [1, 10, 12, 27, 29, 37, 38, 42, 44, 48, 57, 62, 65, 66, 70, 221, 510, 512, 756, 795, 796, 820, 1118, 1127, 1189, 1339, 1340, 1341, 1358, 1364, 1365, 1373, 1384, 1385, 1386, 1421, 1422, 1431, 1460, 1511, 1512, 1609, 1613, 1643, 1660, 1666, 1671, 1673, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1856, 1859, 1870, 1881, 1882, 1885, 1886, 1887, 1893, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1912, 1913, 1914, 1921], "lost": [1, 48, 58, 60, 1358, 1417, 1418, 1419], "To": [1, 2, 3, 4, 5, 6, 7, 10, 12, 13, 15, 16, 17, 19, 21, 22, 26, 27, 28, 31, 32, 37, 38, 40, 41, 44, 45, 46, 48, 49, 55, 56, 58, 59, 62, 67, 70, 82, 83, 334, 496, 553, 730, 890, 903, 946, 949, 964, 1009, 1029, 1050, 1052, 1062, 1090, 1092, 1096, 1107, 1189, 1190, 1192, 1193, 1199, 1200, 1234, 1256, 1261, 1289, 1329, 1338, 1361, 1387, 1417, 1418, 1419, 1421, 1474, 1475, 1493, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1645, 1688, 1696, 1707, 1746, 1754, 1808, 1856, 1859, 1861, 1862, 1866, 1874, 1875, 1876, 1878, 1881, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1922], "multipli": [1, 17, 40, 312, 320, 421, 510, 681, 682, 683, 684, 685, 686, 687, 756, 775, 781, 782, 783, 917, 929, 1032, 1045, 1062, 1142, 1153, 1212, 1224, 1225, 1229, 1242, 1244, 1246, 1252, 1254, 1283, 1293, 1306, 1310, 1313, 1337, 1349, 1350, 1351, 1354, 1373, 1391, 1473, 1474, 1475, 1531, 1589, 1590, 1591, 1613, 1679, 1685, 1687, 1694, 1778, 1781, 1784, 1785, 1799, 1803, 1804, 1807, 1828, 1860, 1875, 1885, 1890, 1893, 1896, 1902, 1916, 1917], "flow": [1, 12, 13, 15, 20, 21, 946, 1201, 1204, 1485, 1520, 1601, 1859, 1880, 1882, 1885, 1887, 1898, 1900, 1914], "word": [1, 2, 9, 40, 57, 58, 65, 69, 70, 933, 1329, 1349, 1350, 1351, 1364, 1365, 1464, 1511, 1512, 1531, 1589, 1601, 1608, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1861, 1882, 1889, 1904, 1913], "larger": [1, 10, 21, 24, 27, 40, 46, 70, 253, 496, 905, 920, 1019, 1119, 1243, 1246, 1329, 1358, 1364, 1365, 1413, 1470, 1473, 1511, 1512, 1882, 1885, 1889, 1890, 1892, 1896, 1898, 1916, 1921], "thei": [1, 2, 4, 6, 8, 10, 12, 15, 16, 17, 18, 20, 23, 26, 28, 29, 33, 34, 37, 40, 42, 46, 47, 57, 62, 65, 66, 69, 70, 320, 334, 335, 682, 685, 686, 693, 796, 811, 812, 813, 820, 837, 850, 855, 886, 895, 905, 917, 1008, 1066, 1113, 1118, 1128, 1164, 1178, 1179, 1186, 1189, 1196, 1201, 1210, 1224, 1225, 1231, 1252, 1260, 1282, 1286, 1289, 1291, 1294, 1311, 1334, 1335, 1336, 1352, 1353, 1354, 1368, 1406, 1414, 1415, 1416, 1421, 1427, 1437, 1449, 1472, 1520, 1522, 1592, 1601, 1602, 1605, 1608, 1610, 1611, 1634, 1637, 1646, 1684, 1687, 1746, 1752, 1803, 1807, 1842, 1843, 1856, 1859, 1861, 1862, 1864, 1866, 1868, 1869, 1870, 1872, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1885, 1886, 1887, 1888, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1912, 1916, 1921, 1923, 1924, 1925, 1927], "grad": [1, 2, 6, 23, 26, 40, 46, 63, 66, 67, 70, 150, 334, 456, 485, 492, 493, 500, 501, 577, 876, 885, 889, 890, 896, 897, 899, 904, 905, 909, 910, 1008, 1066, 1118, 1119, 1121, 1125, 1129, 1130, 1164, 1172, 1189, 1261, 1421, 1601, 1646, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1752, 1784, 1842, 1849, 1857, 1859, 1860, 1875, 1876, 1877, 1881, 1886, 1887, 1888, 1890, 1893, 1895, 1902, 1912, 1913, 1916, 1922], "unscal": 1, "interfer": [1, 17, 1872, 1885, 1900], "learn": [1, 8, 9, 13, 15, 21, 32, 46, 56, 70, 1342, 1355, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1381, 1406, 1408, 1429, 1450, 1469, 1470, 1573, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1857, 1866, 1878, 1880, 1891, 1893, 1894, 1900, 1904, 1907, 1912, 1914], "rate": [1, 9, 24, 38, 46, 1360, 1361, 1362, 1366, 1467, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1699, 1857, 1892, 1921], "fp16": [1, 3, 725, 1601, 1907, 1908], "everi": [1, 2, 3, 9, 10, 15, 16, 17, 21, 24, 27, 28, 37, 38, 40, 42, 44, 46, 48, 62, 67, 70, 479, 485, 606, 676, 777, 815, 893, 909, 910, 1045, 1062, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1119, 1142, 1151, 1189, 1220, 1234, 1244, 1247, 1278, 1333, 1359, 1360, 1361, 1362, 1366, 1414, 1421, 1454, 1456, 1460, 1506, 1507, 1508, 1513, 1544, 1545, 1546, 1560, 1577, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1609, 1642, 1645, 1646, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1746, 1807, 1840, 1862, 1868, 1872, 1881, 1882, 1885, 1886, 1887, 1888, 1890, 1894, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1918, 1919, 1921, 1923], "most": [1, 2, 4, 5, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 32, 37, 40, 42, 44, 46, 47, 48, 49, 56, 57, 59, 60, 67, 68, 69, 70, 496, 789, 893, 894, 895, 900, 904, 913, 949, 1031, 1045, 1062, 1119, 1164, 1174, 1187, 1190, 1294, 1329, 1468, 1520, 1570, 1601, 1613, 1671, 1782, 1828, 1856, 1859, 1861, 1862, 1864, 1869, 1874, 1876, 1877, 1882, 1885, 1887, 1895, 1896, 1897, 1903, 1906, 1907, 1913, 1914, 1916, 1919, 1921, 1923], "bf16": [1, 3], "pretrain": [1, 20, 858, 1364, 1365, 1856, 1882, 1900], "cannot": [1, 4, 9, 10, 12, 20, 37, 38, 40, 46, 47, 50, 57, 62, 63, 67, 68, 69, 70, 85, 86, 222, 253, 520, 541, 876, 1083, 1085, 1093, 1094, 1095, 1101, 1118, 1186, 1194, 1311, 1344, 1364, 1473, 1504, 1570, 1601, 1657, 1808, 1856, 1859, 1860, 1861, 1862, 1863, 1864, 1872, 1876, 1877, 1882, 1886, 1887, 1898, 1899, 1900, 1907, 1912, 1914, 1916, 1918, 1919, 1927], "numer": [1, 17, 28, 37, 46, 63, 68, 683, 789, 904, 905, 933, 1193, 1204, 1205, 1220, 1224, 1225, 1229, 1234, 1242, 1243, 1246, 1249, 1252, 1254, 1276, 1278, 1338, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1454, 1457, 1460, 1511, 1532, 1539, 1570, 1576, 1578, 1609, 1642, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1710, 1742, 1807, 1857, 1862, 1863, 1867, 1870, 1885, 1887, 1888, 1900, 1907, 1917, 1922, 1928], "max": [1, 16, 19, 22, 37, 40, 48, 50, 56, 57, 59, 62, 70, 116, 185, 186, 187, 188, 299, 691, 692, 693, 754, 766, 767, 776, 778, 779, 798, 815, 816, 817, 818, 821, 870, 920, 937, 944, 945, 949, 1041, 1076, 1077, 1149, 1200, 1220, 1234, 1241, 1243, 1245, 1246, 1258, 1330, 1331, 1332, 1343, 1344, 1355, 1356, 1365, 1369, 1370, 1375, 1380, 1381, 1389, 1390, 1407, 1409, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1429, 1440, 1441, 1448, 1469, 1470, 1472, 1482, 1483, 1484, 1494, 1502, 1512, 1515, 1516, 1531, 1535, 1544, 1545, 1546, 1556, 1560, 1564, 1566, 1571, 1589, 1605, 1637, 1663, 1664, 1665, 1675, 1680, 1681, 1690, 1711, 1712, 1784, 1813, 1814, 1842, 1858, 1859, 1860, 1869, 1872, 1877, 1883, 1885, 1889, 1902, 1907, 1910, 1928], "65504": 1, "overflow": [1, 1043, 1044, 1288, 1316, 1319, 1539, 1576, 1577, 1704, 1735, 1783, 1786, 1806, 1832, 1834, 1885, 1896, 1917], "case": [1, 2, 4, 5, 9, 10, 15, 16, 17, 18, 21, 23, 27, 28, 29, 31, 32, 37, 38, 40, 42, 44, 45, 46, 48, 49, 50, 57, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 150, 154, 196, 351, 493, 496, 676, 756, 780, 787, 790, 816, 817, 819, 822, 854, 861, 889, 897, 899, 903, 918, 920, 956, 962, 987, 1009, 1010, 1029, 1030, 1031, 1062, 1083, 1085, 1093, 1094, 1095, 1110, 1120, 1124, 1129, 1148, 1174, 1187, 1190, 1198, 1201, 1202, 1204, 1218, 1220, 1224, 1225, 1229, 1234, 1235, 1236, 1238, 1244, 1247, 1252, 1254, 1258, 1260, 1261, 1266, 1269, 1278, 1289, 1311, 1329, 1334, 1335, 1336, 1337, 1338, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1360, 1361, 1362, 1363, 1365, 1366, 1368, 1377, 1378, 1379, 1380, 1381, 1382, 1388, 1389, 1390, 1407, 1412, 1414, 1415, 1416, 1427, 1428, 1429, 1439, 1452, 1458, 1463, 1468, 1470, 1472, 1485, 1503, 1512, 1520, 1524, 1525, 1555, 1557, 1564, 1601, 1603, 1604, 1608, 1610, 1613, 1614, 1647, 1648, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1688, 1726, 1729, 1742, 1744, 1758, 1761, 1807, 1808, 1838, 1842, 1852, 1856, 1862, 1867, 1874, 1875, 1876, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1893, 1895, 1896, 1898, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1927, 1928], "decreas": [1, 46, 1019, 1234, 1360, 1361, 1362, 1366, 1434, 1635, 1636, 1675, 1682, 1690, 1868, 1870, 1897, 1916, 1919], "bring": [1, 24, 63, 70, 1083, 1485, 1520, 1905], "number": [1, 2, 3, 4, 5, 6, 8, 12, 15, 16, 17, 20, 24, 28, 31, 37, 38, 40, 44, 45, 46, 48, 55, 56, 57, 60, 62, 63, 65, 68, 70, 88, 154, 173, 218, 232, 253, 312, 351, 376, 397, 401, 433, 444, 469, 471, 472, 479, 490, 494, 496, 510, 512, 514, 539, 541, 542, 554, 579, 580, 581, 583, 584, 585, 604, 613, 681, 682, 683, 684, 685, 686, 687, 694, 754, 756, 764, 765, 768, 769, 770, 777, 815, 861, 873, 886, 904, 917, 919, 920, 929, 931, 935, 943, 944, 948, 956, 960, 961, 968, 970, 976, 985, 994, 995, 1006, 1008, 1009, 1010, 1019, 1029, 1030, 1033, 1034, 1054, 1057, 1059, 1062, 1063, 1067, 1075, 1105, 1107, 1110, 1115, 1117, 1131, 1133, 1139, 1140, 1141, 1145, 1149, 1150, 1151, 1163, 1165, 1186, 1187, 1189, 1202, 1209, 1212, 1213, 1220, 1234, 1243, 1252, 1256, 1261, 1266, 1277, 1281, 1289, 1300, 1301, 1305, 1307, 1310, 1311, 1315, 1319, 1322, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1342, 1343, 1344, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1387, 1388, 1391, 1392, 1397, 1398, 1399, 1400, 1401, 1402, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1435, 1436, 1438, 1439, 1440, 1441, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1487, 1488, 1489, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1511, 1512, 1515, 1516, 1521, 1531, 1532, 1534, 1537, 1544, 1545, 1546, 1555, 1557, 1563, 1564, 1570, 1592, 1601, 1609, 1613, 1618, 1619, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1634, 1635, 1636, 1638, 1642, 1647, 1648, 1649, 1651, 1652, 1658, 1666, 1679, 1680, 1681, 1682, 1685, 1686, 1688, 1689, 1690, 1696, 1699, 1703, 1713, 1715, 1716, 1717, 1719, 1720, 1721, 1726, 1728, 1729, 1732, 1733, 1734, 1735, 1743, 1747, 1751, 1753, 1754, 1755, 1756, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1781, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1800, 1801, 1802, 1803, 1804, 1808, 1822, 1823, 1824, 1832, 1834, 1839, 1840, 1843, 1844, 1845, 1846, 1847, 1848, 1854, 1857, 1860, 1861, 1862, 1863, 1864, 1869, 1872, 1874, 1877, 1880, 1883, 1885, 1887, 1890, 1893, 1896, 1898, 1900, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1928], "expect": [1, 2, 4, 6, 8, 10, 13, 16, 17, 23, 28, 37, 38, 40, 42, 44, 48, 55, 57, 59, 62, 67, 68, 70, 676, 693, 756, 850, 897, 898, 899, 900, 901, 902, 1008, 1083, 1085, 1102, 1103, 1104, 1123, 1124, 1163, 1186, 1189, 1204, 1205, 1233, 1254, 1255, 1289, 1340, 1341, 1357, 1373, 1374, 1375, 1376, 1385, 1386, 1387, 1391, 1392, 1393, 1403, 1404, 1405, 1421, 1427, 1428, 1436, 1438, 1454, 1460, 1464, 1466, 1468, 1473, 1511, 1517, 1531, 1555, 1563, 1564, 1576, 1589, 1590, 1591, 1592, 1601, 1635, 1691, 1747, 1816, 1847, 1856, 1857, 1864, 1882, 1885, 1886, 1889, 1890, 1893, 1900, 1903, 1904, 1907, 1908, 1909, 1916, 1921, 1923], "alwai": [1, 6, 8, 12, 15, 16, 31, 33, 37, 38, 40, 55, 59, 62, 66, 70, 339, 446, 456, 790, 876, 894, 897, 903, 918, 927, 937, 943, 1008, 1019, 1049, 1057, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1093, 1094, 1095, 1096, 1098, 1101, 1105, 1146, 1147, 1189, 1199, 1204, 1219, 1224, 1225, 1226, 1227, 1229, 1230, 1242, 1245, 1246, 1247, 1248, 1252, 1254, 1317, 1337, 1339, 1340, 1341, 1358, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1457, 1460, 1592, 1601, 1634, 1730, 1731, 1757, 1803, 1807, 1839, 1842, 1862, 1863, 1874, 1877, 1882, 1883, 1884, 1885, 1886, 1887, 1890, 1892, 1893, 1904, 1905, 1911, 1912, 1914, 1916, 1919, 1922, 1923], "our": [1, 4, 8, 9, 12, 15, 16, 17, 20, 21, 22, 27, 28, 40, 53, 56, 57, 58, 60, 66, 67, 68, 70, 893, 1082, 1119, 1337, 1882, 1887, 1890, 1895, 1900, 1903, 1907, 1913, 1916], "NOT": [1, 37, 40, 48, 57, 58, 59, 70, 923, 1271, 1361, 1601, 1602, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1646, 1655, 1657, 1663, 1664, 1677, 1882, 1914, 1916], "make": [1, 2, 3, 4, 5, 6, 9, 15, 16, 17, 18, 20, 22, 23, 25, 27, 28, 31, 32, 37, 38, 40, 42, 43, 45, 46, 48, 49, 54, 57, 58, 59, 60, 66, 67, 70, 139, 222, 493, 775, 781, 857, 858, 889, 940, 941, 942, 965, 966, 968, 1050, 1066, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1102, 1103, 1104, 1164, 1189, 1193, 1198, 1199, 1218, 1219, 1231, 1232, 1233, 1261, 1337, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1382, 1421, 1431, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1520, 1522, 1531, 1570, 1589, 1601, 1608, 1624, 1641, 1646, 1684, 1747, 1780, 1789, 1790, 1791, 1793, 1794, 1825, 1842, 1856, 1859, 1861, 1862, 1866, 1872, 1874, 1875, 1877, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1895, 1897, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1919, 1921, 1925, 1927], "guarante": [1, 2, 6, 10, 15, 37, 40, 42, 44, 46, 57, 59, 67, 69, 70, 872, 1189, 1198, 1358, 1421, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1780, 1842, 1882, 1884, 1885, 1896, 1897, 1904, 1906, 1908, 1912, 1914], "encount": [1, 6, 13, 17, 21, 23, 28, 40, 67, 69, 70, 1601, 1859, 1862, 1864, 1884, 1896, 1904, 1907], "nan": [1, 2, 46, 425, 426, 680, 682, 685, 686, 687, 690, 693, 694, 877, 881, 917, 933, 1108, 1109, 1110, 1149, 1178, 1179, 1181, 1182, 1228, 1235, 1248, 1251, 1264, 1269, 1287, 1288, 1292, 1315, 1316, 1317, 1318, 1319, 1520, 1605, 1700, 1737, 1742, 1796, 1830, 1860, 1869, 1881, 1882, 1888, 1896, 1917, 1923], "verifi": [1, 20, 26, 40, 70, 904, 1045, 1658, 1659, 1677, 1828, 1856, 1859, 1871, 1887, 1890, 1900, 1905], "compat": [1, 2, 31, 37, 42, 46, 48, 62, 66, 67, 70, 494, 495, 599, 613, 676, 811, 812, 813, 886, 930, 954, 955, 1189, 1194, 1206, 1219, 1230, 1243, 1246, 1421, 1427, 1465, 1466, 1467, 1468, 1531, 1655, 1657, 1729, 1856, 1857, 1861, 1862, 1868, 1874, 1875, 1881, 1887, 1898, 1904, 1906, 1907, 1910, 1912, 1918], "init_scal": 1, "65536": 1, "0": [1, 2, 4, 12, 13, 14, 15, 17, 20, 21, 22, 27, 29, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 62, 65, 66, 67, 68, 69, 70, 88, 154, 156, 173, 184, 191, 208, 224, 225, 226, 227, 228, 253, 259, 262, 288, 297, 299, 310, 312, 314, 316, 320, 351, 400, 401, 425, 426, 443, 446, 447, 452, 479, 481, 485, 493, 504, 505, 510, 512, 514, 517, 534, 539, 540, 543, 552, 554, 556, 574, 576, 577, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 601, 603, 604, 613, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 747, 748, 749, 751, 752, 753, 754, 756, 764, 765, 766, 768, 769, 770, 771, 774, 776, 778, 779, 781, 790, 792, 795, 798, 813, 816, 817, 818, 821, 850, 852, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 894, 897, 898, 899, 901, 904, 905, 907, 909, 910, 913, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 947, 952, 953, 956, 957, 958, 959, 960, 961, 962, 968, 977, 979, 1005, 1006, 1032, 1036, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1060, 1062, 1064, 1065, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1120, 1121, 1122, 1123, 1124, 1128, 1129, 1130, 1131, 1132, 1142, 1146, 1148, 1149, 1150, 1151, 1152, 1155, 1159, 1163, 1166, 1174, 1185, 1186, 1187, 1189, 1193, 1195, 1196, 1200, 1208, 1209, 1210, 1211, 1212, 1214, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1235, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1278, 1282, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1306, 1309, 1310, 1311, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1323, 1325, 1327, 1328, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1452, 1454, 1455, 1456, 1458, 1460, 1463, 1464, 1466, 1468, 1469, 1470, 1472, 1473, 1476, 1477, 1478, 1485, 1486, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1520, 1523, 1524, 1525, 1528, 1529, 1530, 1531, 1535, 1536, 1538, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1555, 1556, 1557, 1558, 1559, 1560, 1563, 1564, 1566, 1570, 1571, 1574, 1576, 1579, 1585, 1586, 1587, 1588, 1589, 1592, 1601, 1605, 1608, 1609, 1613, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1637, 1638, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1653, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1697, 1699, 1700, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1744, 1745, 1746, 1749, 1751, 1755, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1780, 1782, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1809, 1810, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1827, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1869, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928], "growth_factor": 1, "backoff_factor": 1, "5": [1, 2, 11, 14, 17, 27, 28, 29, 31, 34, 35, 37, 38, 40, 46, 55, 66, 67, 68, 69, 70, 154, 191, 208, 259, 288, 297, 312, 314, 316, 320, 400, 401, 443, 469, 496, 510, 512, 514, 533, 540, 554, 556, 580, 581, 582, 583, 584, 603, 681, 682, 686, 693, 730, 735, 736, 737, 738, 739, 741, 742, 756, 758, 769, 770, 857, 858, 861, 876, 882, 883, 884, 897, 900, 902, 917, 920, 927, 928, 929, 933, 935, 939, 942, 943, 944, 947, 956, 960, 1041, 1043, 1045, 1052, 1054, 1056, 1057, 1060, 1061, 1062, 1065, 1078, 1080, 1082, 1083, 1089, 1090, 1093, 1098, 1101, 1102, 1105, 1108, 1110, 1111, 1112, 1120, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1132, 1142, 1148, 1150, 1152, 1154, 1155, 1166, 1174, 1178, 1195, 1199, 1200, 1209, 1210, 1211, 1214, 1217, 1218, 1235, 1238, 1241, 1244, 1245, 1246, 1247, 1252, 1253, 1256, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1271, 1275, 1282, 1283, 1289, 1290, 1294, 1318, 1320, 1321, 1323, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1338, 1339, 1340, 1341, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1375, 1376, 1377, 1382, 1384, 1385, 1386, 1387, 1388, 1391, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1409, 1412, 1417, 1418, 1421, 1428, 1431, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1449, 1452, 1458, 1460, 1464, 1466, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1486, 1487, 1495, 1496, 1498, 1499, 1503, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1515, 1516, 1518, 1520, 1523, 1531, 1555, 1557, 1563, 1579, 1589, 1590, 1591, 1601, 1613, 1623, 1626, 1628, 1629, 1631, 1636, 1637, 1639, 1641, 1647, 1648, 1649, 1651, 1652, 1655, 1658, 1673, 1675, 1677, 1679, 1685, 1689, 1695, 1697, 1699, 1700, 1702, 1703, 1706, 1707, 1710, 1711, 1712, 1713, 1717, 1722, 1723, 1726, 1727, 1733, 1734, 1735, 1742, 1755, 1762, 1764, 1765, 1766, 1767, 1770, 1771, 1780, 1785, 1787, 1788, 1789, 1790, 1792, 1795, 1803, 1806, 1807, 1808, 1809, 1810, 1817, 1819, 1821, 1822, 1823, 1825, 1826, 1828, 1837, 1838, 1842, 1843, 1849, 1850, 1851, 1854, 1857, 1859, 1860, 1861, 1862, 1863, 1869, 1876, 1877, 1880, 1881, 1882, 1883, 1885, 1887, 1889, 1890, 1893, 1894, 1898, 1899, 1900, 1903, 1905, 1907, 1912, 1916, 1917, 1919, 1921, 1922, 1923], "growth_interv": 1, "2000": [1, 40, 44, 1080, 1082, 1089, 1098, 1111, 1266, 1473, 1682, 1710, 1760, 1761, 1821], "get_backoff_factor": 1, "backoff": [1, 1912], "get_growth_factor": 1, "growth": [1, 9], "get_growth_interv": 1, "int": [1, 3, 4, 15, 21, 27, 34, 37, 38, 40, 42, 44, 45, 46, 48, 51, 54, 55, 57, 58, 60, 62, 70, 88, 216, 218, 232, 241, 253, 312, 314, 316, 320, 435, 442, 443, 445, 447, 455, 470, 474, 490, 494, 496, 510, 512, 514, 517, 533, 539, 541, 542, 554, 556, 562, 579, 580, 581, 583, 584, 603, 613, 676, 689, 691, 692, 693, 695, 751, 752, 771, 773, 775, 776, 781, 782, 783, 815, 870, 871, 872, 874, 888, 895, 908, 918, 920, 927, 934, 936, 943, 948, 960, 961, 962, 964, 966, 968, 970, 971, 974, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 990, 991, 992, 994, 996, 1000, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1031, 1032, 1033, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1050, 1051, 1052, 1053, 1054, 1060, 1063, 1065, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1101, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1130, 1131, 1137, 1139, 1140, 1142, 1146, 1147, 1149, 1150, 1151, 1152, 1163, 1165, 1186, 1187, 1189, 1190, 1192, 1195, 1200, 1208, 1210, 1220, 1221, 1241, 1242, 1245, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1268, 1275, 1276, 1281, 1286, 1288, 1289, 1291, 1294, 1296, 1297, 1298, 1301, 1311, 1316, 1317, 1318, 1319, 1320, 1321, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1364, 1365, 1367, 1368, 1369, 1370, 1372, 1374, 1376, 1384, 1385, 1386, 1389, 1390, 1392, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1406, 1408, 1409, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1423, 1426, 1428, 1429, 1432, 1433, 1434, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1456, 1457, 1460, 1464, 1466, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1502, 1503, 1504, 1511, 1512, 1519, 1522, 1531, 1539, 1555, 1556, 1557, 1561, 1562, 1576, 1577, 1585, 1589, 1590, 1591, 1601, 1609, 1618, 1619, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1635, 1637, 1642, 1645, 1648, 1649, 1651, 1652, 1655, 1657, 1658, 1659, 1666, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1696, 1697, 1704, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1718, 1719, 1721, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1738, 1743, 1744, 1745, 1749, 1753, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1776, 1780, 1783, 1786, 1787, 1788, 1795, 1798, 1800, 1801, 1802, 1803, 1806, 1808, 1812, 1818, 1822, 1823, 1825, 1827, 1828, 1831, 1832, 1833, 1834, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1849, 1850, 1854, 1858, 1859, 1860, 1861, 1862, 1863, 1872, 1874, 1875, 1877, 1880, 1885, 1888, 1900, 1902, 1905, 1906, 1907, 1911, 1912, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1928], "interv": [1, 46, 59, 861, 957, 1112, 1302, 1303, 1691, 1715, 1716, 1764, 1872, 1885, 1906], "get_scal": [1, 1881], "sync": [1, 12, 16, 40, 44, 62, 69, 70, 1601, 1885, 1886, 1905], "is_en": [1, 1782, 1789, 1790, 1791, 1792, 1793, 1794], "indic": [1, 2, 3, 4, 18, 21, 28, 37, 38, 40, 41, 45, 46, 57, 83, 191, 208, 221, 312, 314, 316, 317, 318, 320, 469, 510, 512, 514, 540, 568, 569, 579, 610, 691, 692, 731, 741, 742, 870, 871, 872, 873, 874, 894, 904, 905, 933, 940, 941, 963, 965, 966, 968, 1002, 1041, 1042, 1065, 1120, 1121, 1123, 1124, 1125, 1129, 1130, 1131, 1142, 1163, 1187, 1189, 1194, 1202, 1205, 1206, 1210, 1219, 1230, 1232, 1243, 1246, 1260, 1268, 1276, 1278, 1280, 1286, 1289, 1291, 1294, 1311, 1317, 1321, 1329, 1330, 1331, 1332, 1357, 1364, 1365, 1369, 1370, 1415, 1416, 1417, 1418, 1419, 1424, 1426, 1427, 1482, 1483, 1484, 1503, 1511, 1512, 1515, 1516, 1532, 1547, 1548, 1549, 1557, 1570, 1585, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1647, 1648, 1686, 1688, 1707, 1742, 1780, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1817, 1818, 1822, 1825, 1831, 1832, 1833, 1834, 1839, 1840, 1842, 1849, 1852, 1858, 1859, 1860, 1862, 1866, 1875, 1876, 1887, 1900, 1902, 1912, 1916, 1920, 1921, 1923], "load_state_dict": [1, 38, 42, 44, 62, 1189, 1260, 1421, 1592, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1856, 1857, 1893, 1898, 1907], "state_dict": [1, 38, 42, 44, 62, 832, 833, 1189, 1421, 1592, 1627, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1856, 1871, 1886, 1893, 1895, 1898, 1900, 1907, 1925], "load": [1, 2, 19, 20, 28, 29, 31, 32, 38, 42, 44, 62, 833, 858, 912, 949, 964, 1193, 1199, 1204, 1365, 1592, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1738, 1857, 1859, 1870, 1871, 1876, 1882, 1885, 1892, 1893, 1897, 1899, 1900, 1921], "scaler": [1, 1881, 1885], "unmodifi": [1, 25, 40], "iter": [1, 2, 3, 4, 8, 17, 21, 27, 28, 38, 40, 41, 42, 44, 46, 58, 60, 62, 70, 975, 976, 977, 978, 979, 1008, 1011, 1013, 1034, 1189, 1261, 1421, 1422, 1423, 1431, 1432, 1601, 1602, 1605, 1606, 1607, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1642, 1644, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1685, 1696, 1766, 1808, 1860, 1862, 1863, 1874, 1876, 1881, 1882, 1883, 1885, 1886, 1887, 1890, 1893, 1903, 1906, 1911, 1921, 1927], "set_backoff_factor": 1, "new_factor": 1, "new_scal": 1, "set_growth_factor": 1, "set_growth_interv": 1, "new_interv": 1, "It": [1, 2, 4, 5, 6, 8, 9, 12, 13, 15, 16, 17, 20, 21, 25, 27, 28, 33, 34, 37, 38, 40, 41, 42, 45, 46, 48, 50, 54, 55, 56, 57, 58, 59, 62, 64, 66, 67, 68, 69, 70, 88, 150, 196, 471, 472, 510, 512, 514, 540, 553, 885, 886, 887, 888, 889, 893, 916, 954, 955, 979, 984, 990, 991, 1009, 1010, 1029, 1030, 1038, 1085, 1114, 1119, 1122, 1130, 1131, 1150, 1186, 1189, 1190, 1195, 1199, 1221, 1225, 1229, 1232, 1234, 1236, 1237, 1242, 1246, 1247, 1249, 1250, 1252, 1254, 1257, 1258, 1260, 1261, 1269, 1329, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1358, 1368, 1415, 1416, 1417, 1418, 1419, 1421, 1428, 1449, 1452, 1472, 1474, 1522, 1532, 1576, 1594, 1595, 1596, 1599, 1600, 1601, 1609, 1610, 1613, 1634, 1637, 1638, 1646, 1655, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1694, 1713, 1726, 1742, 1752, 1758, 1765, 1786, 1838, 1849, 1856, 1861, 1862, 1872, 1874, 1876, 1882, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1907, 1912, 1913, 1914, 1917, 1918, 1920, 1924], "five": [1, 1862, 1898], "entri": [1, 4, 13, 15, 21, 40, 41, 44, 46, 55, 57, 58, 314, 731, 854, 855, 913, 1005, 1006, 1052, 1103, 1104, 1163, 1189, 1209, 1364, 1365, 1421, 1427, 1511, 1512, 1597, 1598, 1619, 1620, 1628, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1786, 1859, 1862, 1863, 1869, 1877, 1882, 1886, 1887, 1890, 1893, 1910, 1916, 1921, 1925], "_growth_track": 1, "recent": [1, 2, 8, 9, 24, 28, 60, 69, 1164, 1174, 1782, 1861, 1862, 1877, 1887, 1896, 1897, 1916, 1923], "consecut": [1, 40, 606, 1636, 1678, 1828, 1839, 1840, 1876, 1900], "unskip": 1, "empti": [1, 4, 15, 16, 40, 42, 48, 55, 62, 67, 70, 320, 510, 512, 533, 541, 813, 919, 920, 930, 936, 1062, 1064, 1187, 1190, 1214, 1234, 1235, 1240, 1247, 1270, 1271, 1272, 1273, 1280, 1338, 1357, 1365, 1428, 1493, 1512, 1558, 1641, 1653, 1657, 1792, 1807, 1821, 1855, 1858, 1859, 1860, 1861, 1862, 1864, 1870, 1875, 1876, 1877, 1880, 1883, 1885, 1887, 1900, 1902, 1904, 1916, 1917, 1924], "wish": [1, 1125, 1798, 1881, 1885, 1887, 1888], "checkpoint": [1, 12, 44, 58, 60, 62, 912, 1260, 1601, 1856, 1857, 1871, 1889, 1905, 1914], "carri": [1, 66, 335, 793, 834, 835, 853, 854, 1883, 1907], "out": [1, 2, 3, 4, 8, 9, 10, 15, 16, 17, 19, 20, 21, 22, 27, 29, 32, 34, 37, 40, 42, 45, 46, 54, 55, 58, 63, 66, 70, 311, 313, 315, 317, 398, 400, 446, 493, 509, 511, 513, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 752, 756, 760, 768, 769, 770, 775, 777, 781, 793, 832, 834, 835, 853, 854, 861, 862, 863, 864, 865, 866, 867, 868, 873, 877, 878, 879, 880, 881, 890, 891, 892, 895, 904, 917, 919, 920, 921, 922, 923, 924, 925, 926, 929, 933, 936, 938, 939, 940, 941, 942, 944, 945, 947, 949, 951, 952, 953, 955, 956, 958, 959, 962, 967, 975, 977, 979, 1006, 1007, 1019, 1020, 1032, 1036, 1041, 1042, 1043, 1044, 1046, 1049, 1054, 1055, 1057, 1058, 1059, 1061, 1062, 1063, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1119, 1120, 1122, 1123, 1125, 1130, 1131, 1132, 1133, 1134, 1135, 1143, 1144, 1145, 1148, 1149, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1183, 1184, 1189, 1200, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1330, 1331, 1332, 1334, 1335, 1336, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1364, 1366, 1369, 1370, 1373, 1374, 1389, 1390, 1391, 1406, 1408, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1433, 1434, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1464, 1465, 1466, 1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1506, 1507, 1508, 1513, 1516, 1520, 1531, 1537, 1556, 1558, 1589, 1601, 1618, 1619, 1620, 1621, 1647, 1648, 1649, 1650, 1652, 1653, 1677, 1694, 1695, 1699, 1700, 1701, 1703, 1706, 1707, 1713, 1714, 1715, 1717, 1719, 1721, 1722, 1725, 1726, 1727, 1731, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1758, 1759, 1760, 1772, 1773, 1774, 1775, 1780, 1784, 1785, 1796, 1797, 1799, 1800, 1801, 1802, 1804, 1805, 1807, 1818, 1819, 1820, 1823, 1825, 1827, 1830, 1831, 1833, 1835, 1836, 1842, 1844, 1845, 1846, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1862, 1869, 1872, 1874, 1876, 1877, 1882, 1883, 1885, 1886, 1887, 1888, 1893, 1895, 1900, 1903, 1904, 1907, 1908, 1910, 1912, 1913, 1914, 1917, 1919, 1921, 1922, 1926, 1927], "follow": [1, 2, 3, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 42, 44, 45, 46, 48, 54, 55, 56, 57, 58, 62, 64, 66, 67, 70, 82, 83, 485, 613, 676, 756, 775, 781, 788, 789, 790, 796, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 850, 857, 858, 885, 886, 887, 891, 909, 910, 933, 938, 1005, 1019, 1062, 1080, 1082, 1106, 1115, 1128, 1142, 1189, 1190, 1198, 1202, 1209, 1220, 1231, 1241, 1244, 1245, 1258, 1261, 1280, 1283, 1329, 1338, 1344, 1357, 1365, 1368, 1373, 1391, 1421, 1436, 1452, 1468, 1472, 1539, 1570, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1608, 1648, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1685, 1688, 1696, 1707, 1735, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1782, 1783, 1784, 1785, 1792, 1803, 1828, 1836, 1842, 1856, 1859, 1860, 1861, 1862, 1863, 1864, 1868, 1869, 1870, 1871, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1922, 1923, 1927, 1928], "unscale_": [1, 1881], "unless": [1, 2, 5, 8, 15, 38, 40, 59, 62, 63, 70, 150, 496, 836, 854, 893, 920, 1118, 1189, 1232, 1237, 1250, 1260, 1289, 1375, 1421, 1468, 1596, 1624, 1643, 1671, 1677, 1742, 1842, 1862, 1868, 1882, 1885, 1897, 1900, 1904, 1908], "earlier": [1, 2, 7, 18, 1807, 1882, 1885, 1889, 1892, 1898, 1900, 1906], "part": [1, 2, 4, 5, 6, 7, 8, 10, 13, 16, 17, 18, 27, 28, 31, 32, 34, 37, 38, 40, 42, 46, 57, 58, 62, 66, 67, 70, 82, 83, 837, 903, 951, 1062, 1179, 1181, 1182, 1185, 1189, 1199, 1201, 1204, 1205, 1219, 1225, 1227, 1236, 1243, 1246, 1421, 1460, 1570, 1601, 1611, 1680, 1707, 1788, 1828, 1831, 1832, 1833, 1834, 1856, 1857, 1859, 1861, 1862, 1870, 1871, 1881, 1882, 1885, 1887, 1889, 1890, 1893, 1898, 1900, 1904, 1905, 1907, 1912, 1913, 1914, 1916, 1921, 1923], "check": [1, 5, 14, 15, 16, 17, 18, 21, 22, 27, 28, 29, 31, 37, 40, 41, 46, 48, 57, 62, 221, 339, 496, 690, 857, 893, 895, 896, 904, 905, 965, 966, 968, 972, 1001, 1019, 1176, 1186, 1189, 1204, 1205, 1218, 1219, 1224, 1225, 1227, 1230, 1232, 1237, 1243, 1246, 1250, 1252, 1253, 1278, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1421, 1592, 1601, 1610, 1613, 1626, 1636, 1658, 1659, 1782, 1789, 1790, 1791, 1792, 1793, 1794, 1856, 1857, 1861, 1862, 1863, 1875, 1876, 1881, 1885, 1887, 1888, 1889, 1892, 1893, 1894, 1897, 1900, 1903, 1904, 1905, 1906, 1912, 1916, 1921, 1923, 1927], "inf": [1, 28, 46, 62, 680, 682, 685, 686, 687, 881, 917, 933, 1178, 1179, 1181, 1183, 1184, 1220, 1235, 1241, 1245, 1248, 1258, 1269, 1315, 1411, 1454, 1464, 1570, 1605, 1619, 1628, 1648, 1735, 1742, 1881, 1882, 1888, 1896, 1917, 1923], "found": [1, 8, 13, 16, 20, 24, 27, 32, 34, 57, 70, 83, 933, 962, 1041, 1042, 1189, 1193, 1210, 1286, 1289, 1291, 1294, 1317, 1333, 1343, 1366, 1421, 1448, 1742, 1856, 1859, 1862, 1877, 1881, 1887, 1890, 1893, 1895, 1900, 1904, 1906, 1907, 1912, 1921, 1927], "otherwis": [1, 2, 4, 6, 8, 10, 29, 31, 37, 40, 41, 47, 50, 62, 63, 67, 70, 88, 209, 320, 327, 331, 335, 337, 341, 342, 492, 501, 556, 576, 577, 579, 599, 613, 676, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 731, 756, 764, 765, 780, 790, 813, 816, 817, 857, 858, 861, 888, 891, 899, 904, 917, 933, 1003, 1062, 1068, 1101, 1113, 1180, 1186, 1189, 1192, 1195, 1201, 1210, 1234, 1249, 1258, 1260, 1261, 1276, 1281, 1286, 1288, 1289, 1291, 1293, 1294, 1316, 1319, 1335, 1336, 1355, 1357, 1360, 1361, 1362, 1366, 1373, 1377, 1378, 1379, 1380, 1382, 1391, 1407, 1421, 1425, 1426, 1427, 1428, 1429, 1431, 1436, 1437, 1439, 1452, 1458, 1460, 1463, 1464, 1466, 1468, 1469, 1470, 1488, 1489, 1522, 1524, 1525, 1529, 1564, 1574, 1601, 1608, 1613, 1634, 1638, 1646, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1671, 1673, 1674, 1675, 1676, 1694, 1696, 1704, 1706, 1713, 1722, 1729, 1742, 1750, 1758, 1801, 1802, 1803, 1806, 1838, 1839, 1840, 1844, 1845, 1852, 1856, 1859, 1861, 1862, 1869, 1870, 1875, 1881, 1887, 1888, 1895, 1900, 1908, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1920, 1921, 1923, 1927], "avoid": [1, 6, 9, 10, 15, 16, 17, 18, 21, 37, 40, 46, 55, 58, 62, 70, 88, 191, 208, 446, 777, 861, 889, 930, 1019, 1189, 1234, 1260, 1356, 1387, 1388, 1412, 1421, 1430, 1435, 1472, 1502, 1532, 1556, 1563, 1601, 1609, 1677, 1728, 1757, 1803, 1821, 1839, 1857, 1872, 1876, 1882, 1884, 1885, 1889, 1890, 1893, 1905, 1912, 1913, 1920, 1921, 1922], "corrupt": [1, 40, 57, 1358, 1885, 1895], "param": [1, 2, 44, 46, 49, 57, 62, 64, 66, 70, 760, 791, 1118, 1128, 1189, 1207, 1421, 1427, 1431, 1432, 1600, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1690, 1731, 1860, 1870, 1880, 1881, 1885, 1886, 1903, 1927], "closur": [1, 18, 44, 1666, 1671, 1677], "divid": [1, 6, 38, 40, 44, 237, 579, 580, 581, 979, 1057, 1060, 1080, 1098, 1107, 1151, 1152, 1199, 1337, 1338, 1344, 1345, 1355, 1381, 1382, 1388, 1412, 1413, 1424, 1425, 1426, 1435, 1452, 1453, 1469, 1470, 1492, 1493, 1503, 1504, 1532, 1555, 1563, 1601, 1807, 1850, 1860, 1902], "modifi": [1, 2, 14, 15, 16, 17, 23, 25, 28, 34, 37, 38, 40, 41, 42, 44, 62, 70, 259, 485, 787, 834, 835, 836, 893, 895, 896, 909, 910, 954, 955, 1142, 1186, 1189, 1192, 1193, 1208, 1364, 1421, 1464, 1466, 1468, 1511, 1512, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1605, 1606, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1671, 1673, 1674, 1675, 1676, 1677, 1680, 1688, 1770, 1859, 1862, 1875, 1881, 1885, 1887, 1888, 1893, 1898, 1904, 1905, 1907, 1912, 1917, 1920, 1922, 1926], "inspect": [1, 2, 17, 20, 40, 62, 70, 912, 1189, 1200, 1881, 1887, 1892, 1904, 1908, 1919, 1927], "between": [1, 2, 3, 4, 8, 12, 17, 18, 19, 21, 28, 33, 34, 38, 40, 46, 47, 57, 58, 59, 62, 69, 70, 196, 510, 579, 580, 581, 583, 584, 603, 613, 685, 686, 687, 691, 692, 756, 768, 769, 770, 798, 853, 861, 880, 889, 891, 898, 900, 901, 902, 904, 905, 937, 949, 961, 965, 972, 974, 1021, 1025, 1039, 1040, 1045, 1062, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1113, 1142, 1149, 1186, 1189, 1200, 1224, 1225, 1247, 1252, 1318, 1337, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1360, 1361, 1362, 1366, 1368, 1373, 1382, 1388, 1397, 1398, 1399, 1400, 1401, 1402, 1412, 1414, 1415, 1416, 1421, 1424, 1425, 1426, 1430, 1449, 1452, 1453, 1454, 1469, 1470, 1472, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1519, 1544, 1545, 1546, 1560, 1576, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1655, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1681, 1682, 1688, 1690, 1699, 1707, 1711, 1712, 1717, 1718, 1722, 1747, 1800, 1801, 1802, 1803, 1807, 1827, 1828, 1844, 1845, 1859, 1861, 1862, 1863, 1869, 1874, 1877, 1881, 1882, 1884, 1885, 1886, 1890, 1891, 1893, 1895, 1897, 1898, 1900, 1903, 1905, 1907, 1908, 1912, 1914, 1916, 1918, 1921, 1925], "simpl": [1, 16, 20, 21, 32, 34, 38, 50, 57, 66, 68, 70, 961, 1019, 1120, 1128, 1129, 1130, 1189, 1193, 1200, 1339, 1340, 1341, 1364, 1394, 1395, 1396, 1421, 1460, 1511, 1656, 1763, 1849, 1856, 1859, 1863, 1877, 1884, 1885, 1886, 1887, 1889, 1890, 1892, 1900, 1904, 1912, 1916], "clip": [1, 62, 957, 1605, 1606, 1860, 1888, 1900, 1902], "util": [1, 8, 15, 17, 22, 28, 33, 58, 62, 63, 69, 70, 728, 731, 734, 735, 736, 741, 742, 752, 756, 760, 786, 794, 979, 1113, 1189, 1373, 1391, 1421, 1436, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1610, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1634, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1682, 1688, 1811, 1812, 1813, 1814, 1815, 1857, 1862, 1872, 1881, 1883, 1884, 1885, 1887, 1889, 1890, 1892, 1893, 1900, 1903, 1904, 1905], "clip_grad_norm_": [1, 62, 1881], "max_norm": [1, 62, 741, 742, 1364, 1365, 1511, 1512, 1605, 1860, 1881], "own": [1, 8, 10, 16, 20, 40, 41, 44, 46, 49, 57, 59, 62, 70, 676, 997, 1096, 1115, 1151, 1189, 1260, 1349, 1350, 1351, 1352, 1353, 1354, 1421, 1610, 1613, 1862, 1878, 1881, 1885, 1904, 1907, 1908, 1912, 1914, 1916], "onc": [1, 2, 8, 10, 12, 14, 17, 21, 24, 32, 37, 38, 40, 41, 42, 44, 46, 47, 49, 50, 57, 62, 65, 67, 69, 70, 82, 893, 894, 895, 897, 899, 1062, 1189, 1193, 1260, 1358, 1421, 1601, 1611, 1613, 1686, 1690, 1706, 1753, 1757, 1859, 1862, 1870, 1872, 1874, 1881, 1882, 1884, 1885, 1887, 1890, 1892, 1893, 1903, 1904, 1921], "assign": [1, 2, 8, 10, 11, 37, 40, 48, 57, 58, 67, 70, 676, 834, 835, 836, 1187, 1190, 1329, 1357, 1421, 1428, 1431, 1432, 1602, 1613, 1859, 1863, 1881, 1887, 1888, 1889, 1900, 1907, 1913, 1914, 1920, 1921], "been": [1, 2, 6, 10, 12, 13, 17, 23, 28, 29, 37, 38, 40, 41, 44, 45, 46, 48, 50, 57, 60, 62, 65, 66, 70, 676, 756, 893, 966, 968, 973, 1001, 1004, 1061, 1066, 1119, 1192, 1193, 1198, 1203, 1260, 1373, 1380, 1391, 1436, 1485, 1520, 1601, 1610, 1615, 1619, 1621, 1641, 1642, 1655, 1660, 1680, 1681, 1682, 1688, 1690, 1706, 1803, 1851, 1868, 1872, 1874, 1875, 1876, 1881, 1882, 1884, 1885, 1890, 1891, 1893, 1895, 1897, 1899, 1900, 1903, 1904, 1912, 1914, 1916, 1921], "twice": [1, 16, 69, 613, 898, 1126, 1881, 1882, 1889, 1890], "trigger": [1, 8, 10, 12, 14, 17, 23, 24, 28, 40, 57, 62, 69, 221, 1036, 1755, 1881, 1885, 1886, 1892, 1898, 1912], "runtimeerror": [1, 2, 31, 40, 44, 67, 70, 88, 579, 693, 893, 930, 1110, 1164, 1174, 1189, 1218, 1219, 1220, 1228, 1229, 1230, 1232, 1236, 1242, 1249, 1254, 1255, 1281, 1311, 1421, 1657, 1744, 1782, 1842, 1859, 1861, 1862, 1875, 1877, 1881, 1883, 1889, 1897, 1899, 1900, 1907, 1911, 1916, 1919], "spars": [1, 2, 15, 29, 190, 191, 208, 218, 221, 322, 327, 341, 342, 433, 539, 540, 541, 542, 577, 579, 580, 581, 582, 583, 584, 610, 685, 741, 742, 904, 905, 1036, 1131, 1153, 1174, 1261, 1283, 1293, 1321, 1364, 1365, 1454, 1511, 1512, 1537, 1677, 1696, 1744, 1778, 1782, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1808, 1827, 1842, 1857, 1860, 1864, 1869, 1880, 1896, 1897, 1902, 1909, 1919, 1920, 1923], "place": [1, 4, 8, 15, 16, 21, 24, 26, 27, 29, 37, 38, 40, 42, 47, 48, 62, 65, 66, 70, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 121, 123, 125, 127, 130, 131, 133, 141, 143, 146, 147, 149, 152, 158, 160, 162, 164, 166, 168, 177, 186, 194, 198, 201, 203, 213, 215, 221, 222, 231, 235, 237, 243, 246, 248, 250, 252, 253, 256, 259, 261, 268, 270, 272, 276, 278, 282, 284, 291, 293, 295, 303, 305, 307, 309, 311, 313, 315, 317, 355, 357, 359, 361, 363, 365, 367, 370, 372, 374, 375, 382, 384, 386, 388, 390, 394, 398, 400, 418, 421, 424, 426, 437, 439, 441, 449, 454, 464, 467, 483, 485, 487, 489, 493, 496, 505, 508, 509, 511, 513, 519, 523, 525, 528, 530, 532, 545, 547, 549, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 599, 608, 618, 754, 789, 793, 810, 834, 835, 853, 854, 893, 895, 909, 910, 931, 975, 976, 978, 979, 999, 1062, 1113, 1118, 1119, 1127, 1189, 1233, 1251, 1311, 1333, 1343, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1378, 1379, 1380, 1407, 1421, 1438, 1439, 1440, 1441, 1448, 1463, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1524, 1527, 1536, 1567, 1569, 1584, 1588, 1592, 1597, 1598, 1601, 1605, 1606, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1643, 1677, 1733, 1735, 1739, 1740, 1741, 1787, 1823, 1857, 1859, 1861, 1862, 1869, 1876, 1881, 1885, 1887, 1892, 1903, 1904, 1905, 1912, 1913, 1918, 1920, 1922], "replac": [1, 2, 13, 15, 20, 27, 31, 37, 38, 40, 42, 56, 58, 62, 64, 65, 66, 67, 68, 70, 82, 119, 419, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 743, 810, 835, 854, 940, 1008, 1062, 1118, 1119, 1194, 1196, 1206, 1278, 1279, 1311, 1315, 1452, 1463, 1592, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1643, 1645, 1706, 1803, 1807, 1830, 1859, 1860, 1862, 1870, 1885, 1888, 1890, 1892, 1895, 1899, 1900, 1902, 1904, 1907, 1923], "were": [1, 2, 3, 4, 12, 16, 17, 23, 27, 28, 34, 40, 48, 57, 60, 62, 67, 69, 70, 150, 320, 334, 469, 850, 885, 887, 889, 903, 1008, 1119, 1130, 1196, 1260, 1485, 1601, 1605, 1610, 1620, 1637, 1673, 1742, 1746, 1817, 1824, 1849, 1861, 1869, 1881, 1885, 1887, 1898, 1900, 1904], "reduc": [1, 3, 4, 12, 15, 17, 19, 23, 28, 31, 38, 40, 41, 42, 44, 62, 320, 510, 513, 514, 682, 689, 691, 692, 693, 695, 815, 816, 817, 818, 821, 823, 870, 871, 949, 976, 987, 1019, 1162, 1241, 1245, 1247, 1252, 1258, 1276, 1286, 1288, 1289, 1291, 1294, 1316, 1317, 1318, 1319, 1337, 1338, 1339, 1340, 1341, 1355, 1357, 1365, 1381, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1460, 1469, 1492, 1493, 1501, 1503, 1512, 1528, 1531, 1532, 1533, 1543, 1551, 1552, 1553, 1554, 1555, 1556, 1563, 1574, 1575, 1586, 1589, 1601, 1609, 1646, 1666, 1690, 1704, 1706, 1707, 1741, 1784, 1788, 1801, 1802, 1806, 1807, 1828, 1842, 1844, 1845, 1858, 1860, 1874, 1875, 1882, 1884, 1886, 1887, 1893, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1916, 1927], "occur": [1, 15, 17, 20, 23, 28, 29, 37, 40, 50, 51, 57, 62, 67, 82, 196, 314, 1022, 1062, 1186, 1192, 1202, 1232, 1344, 1460, 1504, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1861, 1872, 1876, 1881, 1882, 1885, 1889, 1896, 1900, 1906, 1912, 1914, 1920, 1923, 1927], "increas": [1, 2, 4, 8, 12, 17, 38, 40, 46, 54, 62, 676, 850, 894, 933, 987, 1019, 1062, 1150, 1151, 1329, 1338, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1433, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1561, 1562, 1570, 1675, 1681, 1682, 1686, 1688, 1690, 1742, 1750, 1828, 1843, 1860, 1868, 1884, 1885, 1891, 1908, 1916], "fill": [1, 16, 21, 40, 154, 173, 257, 258, 259, 285, 316, 320, 376, 399, 443, 444, 445, 447, 452, 479, 604, 619, 920, 1050, 1063, 1065, 1116, 1117, 1219, 1230, 1232, 1365, 1464, 1512, 1558, 1652, 1653, 1715, 1716, 1717, 1718, 1719, 1720, 1807, 1854, 1855, 1858, 1860, 1866, 1876, 1877, 1880, 1885, 1887, 1898, 1902, 1916, 1923], "floattensor": [1, 40, 320, 485, 682, 683, 684, 685, 686, 731, 904, 905, 917, 1136, 1364, 1365, 1424, 1464, 1748, 1919, 1922], "end": [1, 8, 9, 10, 12, 16, 28, 37, 38, 40, 46, 50, 54, 65, 70, 360, 361, 534, 756, 780, 793, 816, 817, 861, 918, 956, 963, 1023, 1052, 1062, 1101, 1115, 1142, 1148, 1149, 1186, 1189, 1209, 1214, 1244, 1254, 1256, 1259, 1261, 1275, 1320, 1321, 1336, 1337, 1338, 1355, 1357, 1363, 1367, 1373, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1388, 1391, 1392, 1407, 1412, 1415, 1416, 1421, 1423, 1428, 1429, 1432, 1436, 1439, 1449, 1452, 1458, 1463, 1470, 1503, 1512, 1524, 1525, 1601, 1608, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1680, 1685, 1722, 1755, 1758, 1761, 1776, 1828, 1839, 1840, 1852, 1858, 1859, 1860, 1861, 1862, 1874, 1881, 1882, 1885, 1886, 1887, 1889, 1890, 1896, 1899, 1900, 1903, 1906, 1907, 1910, 1912, 1917], "reason": [1, 4, 9, 10, 13, 15, 16, 17, 21, 28, 37, 40, 42, 62, 67, 676, 837, 1083, 1085, 1189, 1204, 1205, 1224, 1225, 1252, 1289, 1337, 1361, 1421, 1522, 1570, 1597, 1598, 1613, 1738, 1859, 1861, 1862, 1868, 1882, 1886, 1888, 1896, 1898, 1900, 1912, 1919, 1927], "synchron": [1, 4, 5, 17, 33, 34, 38, 42, 44, 48, 57, 62, 69, 873, 965, 966, 968, 976, 996, 1036, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1236, 1237, 1243, 1246, 1249, 1250, 1252, 1253, 1261, 1460, 1601, 1647, 1649, 1728, 1857, 1884, 1885, 1886, 1891, 1895, 1905, 1912], "fall": [1, 3, 8, 31, 37, 791, 904, 1151, 1202, 1260, 1382, 1452, 1529, 1574, 1605, 1606, 1856, 1900, 1907], "below": [1, 2, 6, 10, 13, 15, 17, 18, 20, 21, 22, 23, 28, 31, 37, 38, 40, 46, 48, 49, 54, 57, 58, 59, 60, 70, 676, 730, 744, 753, 791, 810, 1005, 1049, 1050, 1051, 1052, 1053, 1062, 1090, 1092, 1096, 1134, 1142, 1189, 1205, 1245, 1246, 1251, 1258, 1290, 1352, 1353, 1354, 1373, 1375, 1382, 1391, 1393, 1417, 1418, 1419, 1421, 1436, 1452, 1473, 1503, 1529, 1574, 1601, 1613, 1647, 1677, 1747, 1787, 1818, 1828, 1831, 1832, 1833, 1834, 1859, 1861, 1862, 1864, 1868, 1869, 1874, 1875, 1881, 1882, 1885, 1886, 1887, 1890, 1891, 1893, 1895, 1897, 1898, 1900, 1903, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1917, 1920, 1923], "someth": [1, 4, 8, 13, 15, 17, 20, 21, 27, 28, 64, 70, 897, 899, 1062, 1189, 1204, 1421, 1864, 1872, 1874, 1875, 1882, 1891, 1899, 1900, 1912, 1927], "wrong": [1, 20, 40, 70, 893, 1187, 1190, 1886, 1895, 1899, 1900, 1903], "incompat": [1, 10, 31, 67, 930, 1186, 1883, 1904], "due": [1, 4, 5, 6, 8, 17, 21, 23, 28, 38, 40, 46, 56, 62, 67, 70, 484, 876, 897, 898, 903, 957, 1201, 1224, 1225, 1252, 1278, 1361, 1375, 1464, 1473, 1531, 1570, 1641, 1655, 1677, 1808, 1859, 1877, 1885, 1886, 1890, 1891, 1897, 1900, 1907, 1908, 1912, 1914], "float64": [1, 29, 239, 444, 447, 576, 876, 951, 1105, 1114, 1136, 1171, 1189, 1218, 1224, 1225, 1227, 1229, 1245, 1421, 1570, 1663, 1664, 1700, 1708, 1747, 1748, 1751, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1847, 1852, 1893, 1896, 1916, 1918, 1919, 1922, 1923, 1928], "variant": [1, 6, 23, 27, 38, 854, 1219, 1230, 1243, 1246, 1318, 1321, 1663, 1664, 1665, 1677, 1830, 1857, 1858, 1892, 1910, 1922], "suppli": [1, 6, 8, 17, 28, 31, 32, 40, 997, 1427, 1659, 1862, 1885, 1916], "won": [1, 9, 16, 17, 21, 28, 38, 42, 57, 65, 456, 1189, 1200, 1421, 1556, 1595, 1596, 1856, 1882, 1887, 1912, 1924], "go": [1, 2, 8, 13, 15, 16, 17, 21, 22, 32, 37, 40, 54, 59, 66, 70, 496, 497, 556, 894, 909, 1261, 1334, 1335, 1336, 1414, 1415, 1416, 1861, 1862, 1869, 1874, 1875, 1876, 1882, 1884, 1885, 1887, 1888, 1892, 1893, 1895, 1899, 1900, 1904, 1919, 1921], "addmm": [1, 27, 106, 1799, 1858, 1860, 1875, 1896, 1902, 1916], "c": [1, 2, 4, 9, 10, 15, 16, 17, 20, 21, 25, 27, 28, 31, 37, 40, 46, 55, 65, 70, 259, 334, 496, 517, 613, 681, 817, 873, 876, 895, 928, 939, 942, 957, 999, 1005, 1039, 1054, 1057, 1062, 1108, 1109, 1110, 1119, 1120, 1124, 1129, 1132, 1142, 1189, 1199, 1211, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1234, 1235, 1238, 1240, 1244, 1245, 1247, 1249, 1251, 1252, 1310, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1357, 1360, 1361, 1362, 1366, 1368, 1369, 1370, 1376, 1384, 1385, 1386, 1389, 1390, 1392, 1393, 1403, 1404, 1405, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1428, 1433, 1434, 1442, 1443, 1444, 1445, 1446, 1447, 1455, 1460, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1493, 1503, 1504, 1516, 1520, 1555, 1561, 1562, 1570, 1608, 1636, 1638, 1639, 1640, 1647, 1648, 1694, 1710, 1726, 1764, 1784, 1798, 1803, 1823, 1840, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1875, 1876, 1884, 1885, 1886, 1888, 1890, 1892, 1899, 1901, 1904, 1913, 1914, 1916, 1917, 1920, 1921, 1927], "addmm_": [1, 1860, 1875, 1916], "d": [1, 2, 16, 17, 20, 28, 29, 37, 38, 40, 45, 46, 63, 70, 312, 320, 334, 469, 510, 512, 514, 540, 579, 613, 682, 686, 861, 876, 895, 917, 918, 920, 927, 928, 929, 933, 939, 1049, 1051, 1061, 1062, 1075, 1079, 1080, 1081, 1082, 1087, 1088, 1091, 1092, 1097, 1098, 1099, 1102, 1103, 1104, 1130, 1131, 1146, 1147, 1154, 1163, 1186, 1190, 1194, 1231, 1232, 1282, 1293, 1313, 1328, 1336, 1337, 1341, 1351, 1355, 1356, 1360, 1361, 1362, 1364, 1366, 1368, 1373, 1375, 1386, 1391, 1393, 1405, 1416, 1430, 1436, 1460, 1469, 1470, 1472, 1485, 1520, 1531, 1537, 1564, 1588, 1589, 1609, 1642, 1647, 1648, 1675, 1695, 1713, 1722, 1734, 1742, 1747, 1798, 1803, 1816, 1817, 1823, 1826, 1831, 1832, 1833, 1834, 1843, 1849, 1851, 1856, 1860, 1869, 1875, 1876, 1877, 1880, 1882, 1885, 1887, 1888, 1890, 1891, 1898, 1900, 1912, 1913, 1916, 1917, 1921, 1922], "best": [1, 2, 8, 17, 19, 25, 32, 34, 37, 40, 46, 58, 62, 65, 857, 858, 913, 936, 949, 1204, 1205, 1234, 1427, 1677, 1690, 1857, 1859, 1861, 1874, 1880, 1881, 1882, 1887, 1889, 1904, 1912, 1916], "stabil": [1, 17, 28, 1220, 1276, 1338, 1339, 1340, 1341, 1375, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1457, 1460, 1517, 1578, 1609, 1642, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1710, 1888], "respect": [1, 2, 6, 9, 16, 40, 41, 44, 46, 55, 57, 62, 68, 69, 70, 196, 209, 485, 576, 599, 685, 686, 687, 756, 791, 815, 837, 881, 887, 889, 903, 905, 909, 910, 944, 961, 1050, 1052, 1053, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1142, 1189, 1220, 1224, 1225, 1234, 1244, 1247, 1249, 1252, 1261, 1293, 1315, 1337, 1344, 1352, 1353, 1354, 1358, 1373, 1375, 1391, 1421, 1422, 1436, 1466, 1468, 1469, 1470, 1471, 1473, 1511, 1520, 1597, 1598, 1615, 1619, 1621, 1643, 1676, 1690, 1781, 1784, 1807, 1823, 1876, 1881, 1882, 1885, 1887, 1890, 1893, 1894, 1905, 1910, 1916, 1917, 1918, 1923], "describ": [1, 6, 8, 9, 10, 18, 23, 37, 38, 42, 44, 45, 48, 49, 55, 57, 62, 70, 510, 788, 789, 790, 811, 812, 813, 837, 855, 934, 988, 1005, 1022, 1062, 1142, 1209, 1249, 1329, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1360, 1361, 1362, 1363, 1366, 1368, 1369, 1370, 1376, 1379, 1382, 1384, 1385, 1386, 1388, 1393, 1412, 1414, 1415, 1416, 1427, 1428, 1435, 1439, 1452, 1460, 1468, 1469, 1470, 1472, 1503, 1515, 1516, 1525, 1558, 1688, 1828, 1857, 1859, 1861, 1862, 1880, 1881, 1882, 1885, 1886, 1889, 1890, 1892, 1893, 1898, 1900, 1904, 1906, 1907, 1910, 1913, 1914, 1923], "expos": [1, 2, 9, 22, 40, 44, 62, 69, 70, 791, 1115, 1882, 1885, 1892, 1904, 1907, 1927], "namespac": [1, 18, 70, 1036, 1859, 1863, 1866, 1887, 1893, 1900, 1905, 1910, 1927], "defin": [1, 2, 3, 4, 6, 10, 12, 13, 16, 21, 24, 31, 32, 37, 38, 40, 41, 42, 45, 46, 48, 49, 55, 57, 58, 62, 67, 70, 433, 443, 445, 447, 514, 562, 788, 793, 795, 834, 855, 856, 857, 858, 885, 886, 887, 888, 1019, 1045, 1062, 1063, 1082, 1110, 1116, 1132, 1134, 1148, 1150, 1151, 1178, 1189, 1211, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1234, 1235, 1238, 1240, 1241, 1245, 1246, 1247, 1249, 1251, 1252, 1258, 1294, 1358, 1363, 1377, 1378, 1379, 1380, 1387, 1389, 1390, 1421, 1427, 1439, 1454, 1456, 1461, 1463, 1485, 1520, 1570, 1576, 1592, 1601, 1619, 1621, 1628, 1629, 1649, 1652, 1657, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1682, 1685, 1688, 1706, 1715, 1717, 1719, 1726, 1755, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1784, 1786, 1828, 1831, 1832, 1833, 1834, 1852, 1854, 1856, 1859, 1862, 1864, 1866, 1874, 1875, 1877, 1882, 1885, 1886, 1890, 1891, 1893, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1910, 1912, 1916, 1917, 1922, 1923, 1924, 1927], "unlist": 1, "downstream": [1, 4, 17, 18, 21, 28, 1872], "stabl": [1, 2, 3, 40, 46, 57, 58, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 872, 1062, 1224, 1225, 1229, 1234, 1242, 1246, 1249, 1252, 1254, 1261, 1338, 1780, 1857, 1860, 1880, 1883, 1897, 1912], "believ": [1, 9, 26], "unstabl": [1, 46, 1224, 1225, 1252, 1269, 1278, 1539, 1807, 1917], "__matmul__": 1, "addbmm": [1, 100, 917, 1860, 1896, 1902], "addmv": [1, 108, 1860, 1875, 1902], "addr": [1, 40, 110, 1860, 1902], "baddbmm": [1, 152, 1860, 1896, 1902], "bmm": [1, 1842, 1858, 1860, 1875, 1877, 1896, 1897, 1902, 1916], "chain_matmul": [1, 1860, 1902], "multi_dot": [1, 939], "conv1d": [1, 704, 708, 711, 721, 737, 1352, 1360, 1397, 1842, 1860, 1902, 1907, 1909], "conv2d": [1, 705, 709, 712, 714, 722, 738, 788, 810, 1189, 1198, 1200, 1204, 1205, 1353, 1361, 1398, 1421, 1422, 1428, 1449, 1472, 1628, 1842, 1859, 1860, 1870, 1900, 1902, 1907, 1909, 1910, 1921, 1926], "conv3d": [1, 706, 710, 713, 715, 723, 739, 1354, 1362, 1399, 1842, 1860, 1902, 1907, 1909], "conv_transpose1d": [1, 1860, 1902, 1909], "conv_transpose2d": [1, 1860, 1902, 1909], "conv_transpose3d": [1, 1860, 1902, 1909], "grucel": [1, 1896, 1907, 1909, 1910], "lstmcell": [1, 1896, 1907, 1909, 1910], "matmul": [1, 3, 12, 19, 29, 929, 949, 1129, 1293, 1472, 1696, 1706, 1750, 1807, 1860, 1875, 1877, 1885, 1896, 1902, 1909, 1916], "mv": [1, 29, 1200, 1842, 1860, 1875, 1902, 1916], "prelu": [1, 1422, 1860, 1902, 1909], "rnncell": [1, 1907, 1909, 1910], "__pow__": 1, "__rdiv__": 1, "__rpow__": 1, "__rtruediv__": 1, "aco": [1, 94, 623, 624, 862, 1858, 1860, 1875, 1902, 1923], "asin": [1, 141, 625, 626, 864, 1858, 1860, 1875, 1902, 1916], "cosh": [1, 203, 633, 634, 680, 1858, 1860, 1875, 1902], "cosine_embedding_loss": [1, 1860, 1902], "cdist": [1, 1885, 1902], "cosine_similar": [1, 1470, 1860, 1902], "cross_entropi": [1, 1860], "cumprod": [1, 213, 1860, 1875, 1902], "cumsum": [1, 215, 1045, 1842, 1860, 1875, 1902], "dist": [1, 38, 40, 41, 44, 46, 58, 62, 940, 941, 1218, 1224, 1225, 1226, 1228, 1229, 1230, 1234, 1235, 1246, 1247, 1250, 1252, 1253, 1276, 1279, 1430, 1460, 1601, 1608, 1807, 1860, 1886, 1902, 1912, 1914], "erfinv": [1, 250, 1860, 1875, 1902, 1916, 1917], "exp": [1, 2, 46, 252, 639, 640, 766, 899, 900, 902, 1105, 1248, 1268, 1276, 1338, 1343, 1357, 1363, 1387, 1410, 1411, 1425, 1435, 1448, 1451, 1453, 1454, 1456, 1457, 1461, 1494, 1540, 1563, 1571, 1572, 1576, 1578, 1581, 1608, 1703, 1764, 1765, 1786, 1803, 1858, 1860, 1875, 1882, 1900, 1902, 1917], "expm1": [1, 256, 641, 642, 1858, 1860, 1875, 1902, 1916, 1917], "group_norm": [1, 1860, 1902, 1909], "hinge_embedding_loss": [1, 1860, 1902], "kl_div": [1, 1860, 1902], "l1_loss": [1, 1860, 1902], "layer_norm": [1, 1393, 1860, 1902, 1909], "log": [1, 14, 17, 18, 21, 24, 28, 31, 37, 38, 46, 48, 50, 51, 54, 55, 59, 375, 376, 649, 656, 676, 1072, 1264, 1266, 1268, 1269, 1276, 1303, 1329, 1337, 1338, 1357, 1375, 1387, 1410, 1411, 1425, 1428, 1435, 1453, 1454, 1457, 1517, 1522, 1532, 1539, 1540, 1555, 1563, 1576, 1578, 1601, 1857, 1858, 1860, 1868, 1872, 1875, 1882, 1885, 1887, 1900, 1902, 1906, 1917, 1921, 1924, 1925, 1926], "log_softmax": [1, 1344, 1387, 1504, 1555, 1576, 1860, 1876, 1902, 1917], "log10": [1, 370, 650, 651, 1858, 1860, 1875, 1902], "log1p": [1, 372, 652, 653, 1858, 1860, 1875, 1902, 1916, 1917], "log2": [1, 374, 654, 655, 1858, 1860, 1875, 1902, 1917], "margin_ranking_loss": [1, 1860, 1902], "mse_loss": [1, 66, 1118, 1860, 1902], "multilabel_margin_loss": [1, 1860, 1902], "multi_margin_loss": [1, 1860, 1902], "nll_loss": [1, 1860, 1902], "norm": [1, 46, 62, 64, 70, 698, 699, 700, 701, 702, 703, 937, 1056, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1220, 1224, 1233, 1234, 1241, 1246, 1258, 1364, 1365, 1412, 1430, 1465, 1466, 1467, 1468, 1469, 1511, 1512, 1556, 1560, 1605, 1609, 1618, 1619, 1624, 1627, 1628, 1642, 1645, 1665, 1727, 1860, 1864, 1881, 1882, 1890, 1893, 1896, 1902], "normal": [1, 2, 38, 44, 57, 62, 70, 82, 335, 350, 376, 452, 552, 961, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1150, 1186, 1189, 1194, 1224, 1266, 1333, 1339, 1340, 1341, 1360, 1361, 1362, 1366, 1376, 1384, 1385, 1386, 1393, 1403, 1404, 1405, 1409, 1448, 1460, 1464, 1465, 1466, 1467, 1468, 1490, 1520, 1521, 1530, 1534, 1538, 1564, 1605, 1606, 1609, 1624, 1632, 1633, 1642, 1645, 1674, 1690, 1710, 1719, 1720, 1727, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1803, 1842, 1856, 1857, 1858, 1859, 1860, 1864, 1875, 1877, 1880, 1882, 1885, 1888, 1900, 1902, 1904, 1909, 1912, 1917, 1921, 1923, 1924, 1928], "pdist": [1, 1430, 1860, 1902], "poisson_nll_loss": [1, 1860, 1902], "pow": [1, 2, 467, 493, 897, 898, 901, 1105, 1858, 1860, 1862, 1875, 1881, 1882, 1902, 1916, 1922], "prod": [1, 54, 320, 514, 1079, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1097, 1099, 1254, 1255, 1364, 1368, 1472, 1842, 1858, 1860, 1875, 1902, 1916], "reciproc": [1, 483, 659, 660, 1737, 1858, 1860, 1875, 1902], "rsqrt": [1, 508, 1858, 1860, 1875, 1902], "sinh": [1, 532, 667, 668, 878, 1858, 1860, 1875, 1902, 1916], "smooth_l1_loss": [1, 1860, 1902], "soft_margin_loss": [1, 1860, 1902], "softmax": [1, 46, 792, 1329, 1357, 1387, 1411, 1455, 1503, 1522, 1532, 1539, 1570, 1577, 1783, 1860, 1875, 1876, 1877, 1885, 1902, 1909, 1916, 1917], "softmin": [1, 1860], "softplu": [1, 46, 1420, 1550, 1860, 1902], "sum": [1, 2, 12, 13, 14, 17, 21, 26, 28, 37, 40, 41, 44, 46, 48, 62, 67, 68, 70, 493, 514, 562, 742, 889, 897, 898, 899, 900, 901, 902, 903, 909, 910, 914, 961, 977, 978, 979, 1044, 1045, 1062, 1122, 1123, 1124, 1129, 1166, 1220, 1241, 1245, 1258, 1266, 1267, 1268, 1276, 1311, 1319, 1337, 1338, 1344, 1354, 1355, 1357, 1358, 1365, 1368, 1375, 1381, 1382, 1387, 1388, 1389, 1390, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1454, 1456, 1469, 1470, 1472, 1492, 1493, 1503, 1504, 1512, 1517, 1522, 1532, 1541, 1542, 1555, 1563, 1576, 1577, 1601, 1624, 1629, 1630, 1648, 1682, 1728, 1766, 1784, 1786, 1826, 1828, 1842, 1857, 1858, 1860, 1862, 1866, 1872, 1875, 1881, 1882, 1885, 1886, 1887, 1888, 1893, 1896, 1900, 1902, 1912, 1913, 1916, 1917, 1922], "renorm": [1, 489, 1364, 1365, 1511, 1512, 1860, 1902], "tan": [1, 571, 671, 672, 879, 1858, 1860, 1875, 1902, 1916, 1921], "triplet_margin_loss": [1, 1860, 1902], "addcdiv": [1, 102, 1860, 1902], "addcmul": [1, 104, 1860, 1902], "atan2": [1, 146, 867, 1858, 1860, 1875, 1902], "bilinear": [1, 775, 781, 782, 1062, 1473, 1474, 1520, 1531, 1589, 1590, 1842, 1860, 1902], "cross": [1, 8, 9, 21, 42, 46, 48, 1337, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1492, 1493, 1503, 1860, 1885, 1899, 1902], "dot": [1, 3, 31, 67, 68, 613, 898, 900, 901, 902, 1041, 1042, 1043, 1044, 1120, 1130, 1166, 1209, 1256, 1257, 1283, 1337, 1338, 1357, 1368, 1381, 1388, 1412, 1427, 1428, 1470, 1570, 1803, 1846, 1847, 1848, 1849, 1860, 1875, 1890, 1902, 1904], "grid_sampl": [1, 1485, 1842, 1860, 1902], "index_put": [1, 1842, 1860, 1902], "scatter_add": [1, 1858, 1860, 1902], "tensordot": [1, 1166, 1254, 1255, 1864, 1885, 1902], "binari": [1, 3, 31, 32, 38, 46, 48, 50, 55, 57, 70, 154, 731, 919, 1282, 1337, 1338, 1427, 1492, 1493, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1656, 1658, 1857, 1863, 1875, 1876, 1892, 1900, 1904, 1921], "nativ": [1, 3, 29, 38, 45, 62, 70, 988, 1119, 1199, 1605, 1606, 1750, 1859, 1862, 1874, 1885, 1887, 1903, 1904, 1912], "intervent": [1, 9, 1912], "mixtur": [1, 46, 1357, 1503], "bceloss": [1, 1338, 1492], "aren": [1, 9, 67, 70, 1119, 1875, 1882, 1913, 1927], "mean": [1, 3, 4, 6, 8, 9, 15, 16, 17, 21, 23, 24, 32, 34, 37, 38, 40, 42, 44, 46, 57, 59, 62, 63, 65, 68, 69, 70, 253, 320, 334, 376, 452, 492, 514, 754, 756, 777, 790, 792, 857, 858, 917, 930, 961, 1118, 1120, 1199, 1289, 1306, 1311, 1316, 1320, 1321, 1327, 1328, 1329, 1331, 1332, 1333, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1355, 1357, 1359, 1363, 1365, 1366, 1367, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1407, 1408, 1410, 1411, 1412, 1413, 1420, 1424, 1425, 1426, 1428, 1429, 1435, 1436, 1439, 1440, 1441, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1469, 1470, 1471, 1491, 1492, 1493, 1501, 1503, 1504, 1512, 1513, 1517, 1528, 1529, 1532, 1533, 1537, 1543, 1551, 1552, 1553, 1554, 1555, 1563, 1574, 1575, 1586, 1587, 1601, 1649, 1677, 1710, 1719, 1720, 1764, 1784, 1801, 1802, 1808, 1842, 1844, 1845, 1856, 1858, 1859, 1860, 1861, 1872, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1885, 1886, 1887, 1889, 1890, 1893, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1916], "doesn": [1, 2, 3, 8, 9, 15, 16, 28, 29, 37, 40, 42, 65, 67, 69, 70, 819, 822, 876, 893, 903, 966, 987, 1119, 1130, 1196, 1202, 1228, 1252, 1260, 1269, 1349, 1350, 1351, 1358, 1387, 1454, 1495, 1496, 1497, 1532, 1576, 1601, 1602, 1624, 1666, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1781, 1784, 1849, 1858, 1859, 1862, 1863, 1875, 1877, 1882, 1883, 1885, 1887, 1888, 1892, 1895, 1899, 1903, 1905, 1913, 1916], "help": [1, 2, 5, 8, 9, 16, 18, 20, 21, 28, 29, 31, 37, 38, 40, 54, 57, 62, 67, 70, 904, 905, 913, 987, 1019, 1119, 1120, 1130, 1189, 1190, 1208, 1290, 1302, 1303, 1360, 1361, 1362, 1366, 1421, 1608, 1757, 1849, 1856, 1862, 1869, 1875, 1876, 1881, 1882, 1883, 1885, 1886, 1888, 1891, 1893, 1896, 1900, 1901, 1904, 1912, 1913, 1916, 1924], "revers": [1, 46, 68, 70, 510, 730, 789, 897, 899, 1080, 1082, 1102, 1122, 1124, 1129, 1256, 1391, 1434, 1562, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1830, 1843, 1860, 1861, 1862, 1882, 1886, 1888, 1902, 1922], "therefor": [1, 4, 6, 18, 21, 37, 38, 40, 46, 47, 55, 62, 65, 446, 540, 903, 918, 927, 1008, 1096, 1113, 1115, 1118, 1146, 1147, 1201, 1204, 1234, 1247, 1364, 1365, 1472, 1511, 1512, 1520, 1643, 1682, 1862, 1881, 1882, 1885, 1887, 1889, 1892, 1900, 1914], "mani": [1, 4, 8, 13, 15, 16, 17, 20, 21, 23, 27, 28, 29, 31, 37, 38, 40, 46, 57, 62, 66, 67, 70, 88, 401, 676, 885, 887, 897, 899, 1062, 1201, 1344, 1677, 1776, 1824, 1831, 1832, 1833, 1834, 1859, 1861, 1875, 1880, 1882, 1883, 1884, 1885, 1887, 1888, 1892, 1893, 1896, 1900, 1903, 1907, 1914, 1916, 1919, 1921, 1922, 1924], "sigmoid": [1, 46, 70, 523, 663, 664, 756, 791, 1337, 1338, 1364, 1373, 1374, 1391, 1392, 1450, 1492, 1519, 1573, 1858, 1860, 1875, 1876, 1880, 1901, 1902, 1909, 1917], "right": [1, 3, 8, 10, 16, 17, 22, 25, 40, 42, 46, 62, 70, 816, 861, 918, 925, 927, 928, 933, 938, 1056, 1062, 1103, 1106, 1107, 1111, 1142, 1146, 1147, 1151, 1155, 1186, 1208, 1233, 1238, 1249, 1251, 1252, 1260, 1266, 1267, 1311, 1329, 1334, 1335, 1336, 1337, 1338, 1349, 1350, 1351, 1368, 1375, 1388, 1389, 1390, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1424, 1425, 1426, 1430, 1431, 1437, 1469, 1472, 1473, 1474, 1475, 1520, 1540, 1558, 1606, 1613, 1666, 1680, 1681, 1722, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1803, 1823, 1828, 1830, 1843, 1856, 1860, 1862, 1874, 1875, 1876, 1882, 1887, 1890, 1900, 1903, 1910, 1914, 1917], "entropi": [1, 46, 1337, 1357, 1425, 1492, 1493, 1503, 1917], "combin": [1, 4, 13, 21, 37, 38, 40, 57, 68, 69, 613, 685, 708, 709, 710, 711, 712, 713, 714, 715, 789, 850, 886, 1019, 1091, 1092, 1097, 1099, 1151, 1283, 1293, 1338, 1368, 1382, 1427, 1472, 1514, 1537, 1620, 1859, 1860, 1861, 1881, 1885, 1888, 1900, 1902, 1903, 1905, 1907, 1910, 1912], "bcewithlogitsloss": [1, 1493], "bcewithlogit": 1, "safe": [1, 12, 17, 18, 21, 28, 40, 57, 69, 70, 1009, 1010, 1029, 1030, 1601, 1663, 1664, 1859, 1862, 1881, 1882, 1885, 1888, 1892, 1912], "_convolut": [1, 1902], "avg_pool3d": [1, 1860, 1902, 1909], "grid_sampler_2d": [1, 1858, 1860, 1902], "_grid_sampler_2d_cpu_fallback": [1, 1902], "grid_sampler_3d": [1, 1860, 1902], "polar": [1, 46, 1248, 1860, 1902], "quantil": [1, 1289, 1318, 1860, 1902, 1917], "nanquantil": [1, 1860, 1902], "stft": [1, 918, 927, 1146, 1147, 1186, 1208, 1860, 1902], "view_as_complex": [1, 29, 1860, 1902], "choleski": [1, 3, 46, 941, 942, 1219, 1225, 1261, 1860, 1902], "cholesky_invers": [1, 3, 1860, 1902], "cholesky_solv": [1, 3, 1860, 1902], "invers": [1, 46, 679, 680, 878, 881, 936, 941, 942, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1186, 1229, 1230, 1242, 1246, 1249, 1254, 1255, 1352, 1353, 1354, 1364, 1365, 1368, 1417, 1418, 1419, 1472, 1511, 1512, 1547, 1548, 1549, 1610, 1613, 1637, 1682, 1688, 1838, 1857, 1860, 1862, 1896, 1902, 1917], "lu_solv": [1, 3, 1236, 1860, 1902], "orgqr": [1, 1860, 1902], "ormqr": [1, 1134, 1228, 1860, 1902], "pinvers": [1, 1234, 1860, 1902], "max_pool3d": [1, 1860, 1902, 1909], "max_unpool2d": [1, 1515, 1545, 1860, 1902], "max_unpool3d": [1, 1516, 1546, 1860, 1902], "adaptive_avg_pool3d": [1, 1860, 1887, 1902, 1909], "reflection_pad1d": [1, 1860, 1902], "reflection_pad2d": [1, 1858, 1860, 1902], "replication_pad1d": [1, 1860, 1902], "replication_pad2d": [1, 1858, 1860, 1902], "replication_pad3d": [1, 1858, 1860, 1902], "ctc_loss": [1, 1344, 1860, 1902], "fft_fft": [1, 1860, 1902], "fft_ifft": [1, 1860, 1902], "fft_fft2": [1, 1860, 1902], "fft_ifft2": [1, 1860, 1902], "fft_fftn": [1, 1860, 1902], "fft_ifftn": [1, 1860, 1902], "fft_rfft": [1, 1860, 1902], "fft_irfft": [1, 1860, 1902], "fft_rfft2": [1, 1860, 1902], "fft_irfft2": [1, 1860, 1902], "fft_rfftn": [1, 1860, 1902], "fft_irfftn": [1, 1860, 1902], "fft_hfft": [1, 1860, 1902], "fft_ihfft": [1, 1860, 1902], "linalg_matrix_norm": [1, 1860, 1902], "linalg_cond": [1, 1860, 1902], "linalg_matrix_rank": [1, 1860, 1902], "linalg_solv": [1, 1860, 1902], "linalg_choleski": [1, 1860, 1902], "linalg_svdv": [1, 1860, 1902], "linalg_eigv": [1, 1860, 1902], "linalg_eigvalsh": [1, 1860, 1902], "linalg_inv": [1, 1860, 1902], "linalg_householder_product": [1, 1860, 1902], "linalg_tensorinv": [1, 1860, 1902], "linalg_tensorsolv": [1, 1860, 1902], "fake_quantize_per_tensor_affin": [1, 1860, 1902], "eig": [1, 1225, 1226, 1252, 1896], "geqrf": [1, 1228, 1694, 1860, 1902], "lstsq": [1, 1134, 1220, 1246], "_lu_with_info": [1, 1902], "qr": [1, 3, 1134, 1224, 1225, 1228, 1234, 1252, 1608, 1694, 1860, 1902], "solv": [1, 8, 17, 22, 29, 942, 1134, 1142, 1220, 1229, 1231, 1232, 1235, 1236, 1238, 1242, 1250, 1251, 1255, 1261, 1279, 1830, 1882, 1890, 1896, 1899], "svd": [1, 3, 29, 1224, 1225, 1234, 1246, 1253, 1269, 1613, 1696, 1808, 1858, 1860, 1896, 1902, 1916], "symeig": 1, "triangular_solv": [1, 1860, 1902], "fractional_max_pool2d": [1, 1860, 1902], "fractional_max_pool3d": [1, 1860, 1902], "adaptive_max_pool3d": [1, 1860, 1902], "multilabel_margin_loss_forward": [1, 1902], "linalg_qr": [1, 1860, 1902], "linalg_cholesky_ex": [1, 1860, 1902], "linalg_svd": [1, 1860, 1902], "linalg_eig": [1, 1860, 1902], "linalg_eigh": [1, 1860, 1902], "linalg_lstsq": [1, 1860, 1902], "linalg_inv_ex": [1, 1860, 1902], "cat": [1, 15, 40, 46, 70, 540, 743, 744, 753, 789, 792, 952, 953, 1290, 1440, 1788, 1858, 1859, 1860, 1875, 1900, 1902, 1904, 1907, 1909, 1916, 1925], "stack": [1, 9, 14, 16, 17, 18, 21, 22, 28, 34, 37, 38, 40, 46, 50, 66, 67, 70, 756, 913, 947, 1023, 1024, 1061, 1128, 1130, 1154, 1290, 1344, 1373, 1391, 1392, 1436, 1465, 1467, 1638, 1849, 1851, 1857, 1860, 1877, 1885, 1886, 1889, 1901, 1902, 1904, 1906, 1909, 1916], "index_copi": [1, 1842, 1860, 1902], "implement": [2, 3, 6, 9, 12, 15, 21, 23, 33, 37, 38, 40, 41, 42, 44, 45, 46, 49, 54, 55, 58, 62, 67, 70, 150, 510, 512, 514, 683, 734, 735, 736, 737, 738, 739, 756, 775, 777, 781, 789, 796, 815, 816, 817, 820, 821, 822, 874, 876, 889, 898, 904, 905, 959, 1062, 1105, 1110, 1115, 1122, 1123, 1125, 1126, 1189, 1196, 1198, 1199, 1202, 1244, 1247, 1260, 1261, 1289, 1329, 1344, 1358, 1373, 1389, 1390, 1421, 1427, 1433, 1440, 1457, 1466, 1468, 1520, 1558, 1570, 1578, 1601, 1605, 1606, 1608, 1609, 1613, 1624, 1637, 1641, 1642, 1645, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1680, 1682, 1688, 1706, 1713, 1726, 1735, 1738, 1775, 1784, 1807, 1808, 1823, 1839, 1842, 1861, 1862, 1863, 1866, 1869, 1874, 1877, 1878, 1880, 1881, 1882, 1884, 1885, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1903, 1904, 1905, 1907, 1910, 1912, 1913, 1916, 1917, 1920, 1922, 1924, 1927], "scalar": [2, 16, 27, 40, 46, 97, 150, 154, 259, 312, 444, 585, 683, 684, 734, 735, 736, 737, 738, 739, 875, 876, 889, 897, 898, 901, 903, 922, 925, 933, 957, 961, 1057, 1062, 1077, 1110, 1116, 1142, 1149, 1166, 1180, 1213, 1214, 1283, 1290, 1318, 1329, 1337, 1338, 1344, 1355, 1357, 1358, 1375, 1381, 1382, 1387, 1388, 1393, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1470, 1522, 1564, 1647, 1652, 1653, 1657, 1690, 1703, 1705, 1707, 1725, 1726, 1742, 1790, 1791, 1792, 1793, 1794, 1821, 1839, 1840, 1852, 1854, 1855, 1858, 1860, 1861, 1862, 1872, 1877, 1880, 1882, 1887, 1890, 1900, 1912, 1916, 1919, 1921, 1923, 1924], "minim": [2, 8, 9, 17, 28, 815, 871, 1291, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1674, 1675, 1676, 1677, 1690, 1856, 1872, 1881, 1885, 1893, 1895, 1898, 1900, 1905, 1907, 1924], "exist": [2, 8, 9, 10, 12, 13, 16, 18, 29, 31, 37, 40, 41, 42, 46, 48, 50, 55, 57, 58, 62, 66, 70, 82, 83, 253, 496, 788, 850, 874, 897, 898, 899, 900, 901, 902, 903, 904, 1003, 1189, 1193, 1204, 1224, 1229, 1235, 1236, 1261, 1318, 1421, 1422, 1431, 1782, 1856, 1858, 1859, 1866, 1869, 1874, 1875, 1877, 1878, 1882, 1883, 1885, 1887, 1888, 1891, 1892, 1893, 1894, 1896, 1900, 1904, 1905, 1906, 1907, 1912, 1914, 1916, 1920, 1922, 1924], "declar": [2, 10, 31, 37, 58, 1861, 1862, 1863, 1887, 1900, 1904, 1905, 1924], "requires_grad": [2, 6, 14, 16, 46, 68, 334, 443, 444, 445, 446, 447, 485, 493, 861, 876, 893, 895, 896, 904, 905, 907, 909, 910, 918, 927, 1008, 1063, 1064, 1065, 1066, 1075, 1080, 1098, 1115, 1116, 1117, 1120, 1130, 1146, 1147, 1164, 1189, 1208, 1259, 1275, 1337, 1338, 1357, 1364, 1365, 1375, 1387, 1388, 1412, 1413, 1421, 1427, 1428, 1435, 1468, 1469, 1492, 1493, 1503, 1555, 1601, 1602, 1603, 1604, 1641, 1646, 1652, 1653, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1752, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1842, 1849, 1854, 1855, 1858, 1860, 1864, 1875, 1876, 1877, 1885, 1887, 1888, 1893, 1898, 1900, 1902, 1912, 1913, 1922, 1923, 1924], "doubl": [2, 4, 48, 479, 485, 613, 745, 747, 748, 749, 750, 752, 762, 763, 777, 893, 895, 900, 904, 905, 934, 941, 951, 962, 1008, 1077, 1105, 1142, 1189, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1269, 1270, 1271, 1272, 1273, 1279, 1365, 1421, 1480, 1483, 1512, 1592, 1657, 1694, 1700, 1789, 1790, 1791, 1793, 1794, 1807, 1821, 1830, 1852, 1862, 1875, 1885, 1887, 1888, 1896, 1900, 1904, 1918, 1919, 1922, 1924], "bfloat16": [2, 38, 62, 1171, 1189, 1240, 1257, 1421, 1657, 1663, 1664, 1750, 1875, 1885, 1918, 1919, 1922, 1923, 1924, 1928], "cfloat": [2, 29, 40, 310, 481, 613, 941, 962, 1159, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1279, 1694, 1724, 1807, 1830, 1848, 1919, 1922, 1924], "cdoubl": [2, 29, 941, 962, 1189, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1279, 1421, 1694, 1807, 1830, 1919, 1922, 1924], "beta": [2, 3, 29, 63, 69, 99, 100, 105, 106, 107, 108, 109, 110, 151, 152, 320, 514, 550, 682, 685, 686, 687, 917, 963, 997, 998, 1005, 1006, 1008, 1146, 1208, 1283, 1293, 1339, 1340, 1341, 1376, 1382, 1384, 1385, 1386, 1393, 1409, 1452, 1457, 1460, 1537, 1538, 1570, 1574, 1578, 1663, 1664, 1665, 1667, 1673, 1677, 1710, 1768, 1770, 1781, 1785, 1799, 1857, 1858, 1860, 1870, 1885, 1900, 1907, 1912, 1916, 1919, 1924], "even": [2, 9, 12, 15, 16, 18, 20, 21, 37, 38, 40, 45, 48, 62, 69, 70, 540, 576, 811, 812, 813, 889, 961, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1093, 1094, 1095, 1098, 1129, 1174, 1201, 1218, 1220, 1224, 1225, 1226, 1227, 1241, 1245, 1247, 1248, 1252, 1253, 1258, 1283, 1289, 1358, 1460, 1495, 1496, 1497, 1558, 1601, 1608, 1646, 1648, 1688, 1735, 1746, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1807, 1847, 1859, 1862, 1863, 1872, 1877, 1881, 1882, 1885, 1887, 1889, 1891, 1893, 1895, 1896, 1897, 1898, 1903, 1904, 1905, 1914, 1919], "though": [2, 16, 40, 70, 150, 790, 886, 889, 899, 1078, 1079, 1081, 1187, 1190, 1283, 1648, 1859, 1863, 1876, 1877, 1882, 1888, 1895, 1896, 1903, 1907], "signatur": [2, 20, 21, 37, 50, 62, 70, 397, 485, 552, 909, 910, 964, 1189, 1421, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1613, 1634, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1803, 1885, 1887, 1888, 1900, 1904, 1905, 1912, 1916, 1927], "veri": [2, 5, 8, 9, 16, 17, 18, 20, 21, 22, 27, 28, 34, 37, 38, 40, 66, 68, 70, 959, 1120, 1128, 1130, 1251, 1384, 1385, 1386, 1601, 1602, 1608, 1666, 1688, 1694, 1771, 1775, 1830, 1849, 1861, 1874, 1882, 1887, 1889, 1890, 1891, 1893, 1895, 1896, 1899, 1903, 1904, 1911, 1912, 1913, 1916], "unlik": [2, 4, 8, 15, 18, 46, 62, 68, 490, 1059, 1098, 1101, 1105, 1164, 1224, 1225, 1244, 1247, 1252, 1256, 1286, 1289, 1291, 1393, 1603, 1604, 1725, 1747, 1846, 1861, 1862, 1874, 1877, 1885, 1895, 1897, 1919, 1924], "coverag": [2, 8, 20, 63, 70, 1122, 1123, 1857, 1859, 1864, 1876, 1907, 1916, 1927], "plan": [2, 3, 8, 10, 15, 27, 28, 40, 42, 45, 890, 1601, 1706, 1877, 1882, 1887, 1904, 1916], "consid": [2, 6, 9, 15, 27, 38, 40, 48, 57, 62, 67, 69, 70, 690, 775, 781, 790, 897, 899, 900, 904, 942, 961, 1049, 1050, 1051, 1052, 1053, 1083, 1118, 1178, 1182, 1185, 1189, 1229, 1231, 1232, 1233, 1234, 1242, 1243, 1246, 1251, 1254, 1357, 1368, 1421, 1424, 1472, 1485, 1520, 1531, 1589, 1602, 1608, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1643, 1676, 1744, 1764, 1798, 1831, 1832, 1833, 1834, 1856, 1859, 1862, 1866, 1869, 1881, 1882, 1883, 1887, 1889, 1890, 1893, 1896, 1904, 1906, 1908, 1913, 1914, 1916, 1919, 1922, 1923, 1927], "ad": [2, 4, 10, 13, 16, 17, 20, 23, 27, 31, 37, 38, 40, 44, 46, 54, 62, 65, 67, 68, 69, 70, 221, 222, 312, 318, 469, 512, 676, 682, 683, 684, 685, 686, 687, 731, 890, 891, 892, 897, 898, 899, 900, 904, 916, 917, 1062, 1066, 1122, 1123, 1125, 1164, 1189, 1202, 1266, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1427, 1428, 1430, 1435, 1449, 1460, 1464, 1472, 1498, 1499, 1500, 1517, 1544, 1545, 1546, 1570, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1613, 1620, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1646, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1710, 1711, 1712, 1752, 1781, 1785, 1799, 1856, 1857, 1858, 1859, 1861, 1866, 1872, 1876, 1881, 1888, 1890, 1892, 1893, 1904, 1907, 1910, 1916, 1921, 1924], "tutori": [2, 4, 10, 16, 20, 22, 32, 40, 41, 44, 70, 890, 891, 892, 895, 1857, 1859, 1866, 1869, 1878, 1887, 1892, 1893, 1898, 1900, 1907], "how": [2, 4, 6, 8, 9, 10, 15, 18, 20, 21, 22, 26, 32, 33, 37, 40, 42, 45, 49, 57, 58, 59, 62, 63, 64, 66, 67, 70, 485, 781, 788, 789, 792, 837, 855, 857, 858, 890, 891, 892, 895, 909, 910, 1045, 1066, 1119, 1128, 1142, 1164, 1189, 1199, 1260, 1368, 1421, 1472, 1473, 1558, 1589, 1601, 1634, 1646, 1726, 1750, 1752, 1765, 1776, 1857, 1859, 1861, 1862, 1866, 1869, 1871, 1874, 1875, 1876, 1878, 1881, 1884, 1886, 1888, 1889, 1890, 1893, 1895, 1897, 1898, 1900, 1905, 1907, 1910, 1912, 1913, 1914, 1921], "major": [2, 7, 8, 9, 10, 15, 17, 20, 990, 1807, 1857, 1862, 1903], "build": [2, 9, 10, 12, 20, 28, 31, 32, 40, 46, 70, 1189, 1198, 1421, 1467, 1485, 1520, 1857, 1859, 1869, 1878, 1882, 1900, 1905, 1907, 1913, 1921, 1922], "basic": [2, 4, 8, 10, 17, 21, 42, 57, 70, 1122, 1123, 1124, 1195, 1261, 1601, 1682, 1857, 1863, 1878, 1883, 1885, 1886, 1890, 1904, 1913, 1920, 1921], "jacobian": [2, 46, 63, 64, 66, 67, 889, 891, 897, 900, 902, 903, 904, 905, 1123, 1124, 1125, 1129, 1130, 1849, 1882, 1887, 1890], "hessian": [2, 63, 66, 67, 898, 901, 1123, 1124, 1880, 1888], "etc": [2, 4, 6, 12, 14, 18, 21, 26, 29, 37, 38, 40, 46, 48, 57, 58, 62, 855, 856, 857, 1186, 1189, 1357, 1421, 1601, 1655, 1728, 1856, 1861, 1862, 1869, 1887, 1888, 1889, 1893, 1895, 1900, 1903, 1904, 1907, 1912, 1916, 1918, 1921, 1924], "user": [2, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 28, 29, 32, 37, 38, 40, 41, 42, 45, 46, 47, 48, 50, 54, 57, 58, 60, 62, 63, 66, 67, 69, 70, 150, 334, 728, 734, 735, 736, 741, 742, 752, 760, 790, 793, 795, 834, 850, 857, 858, 889, 895, 903, 966, 999, 1113, 1118, 1119, 1189, 1260, 1421, 1464, 1466, 1467, 1468, 1570, 1596, 1601, 1610, 1624, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1856, 1857, 1859, 1861, 1862, 1866, 1869, 1874, 1876, 1877, 1881, 1882, 1883, 1885, 1887, 1890, 1891, 1892, 1893, 1895, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1912, 1913, 1916, 1920, 1921, 1923, 1927], "lambda": [2, 37, 42, 46, 65, 68, 69, 70, 257, 485, 909, 910, 937, 1120, 1125, 1129, 1130, 1224, 1225, 1226, 1227, 1260, 1377, 1458, 1470, 1560, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1676, 1682, 1684, 1687, 1849, 1863, 1882, 1887, 1888, 1903, 1904, 1912, 1923, 1927], "three": [2, 3, 7, 10, 24, 40, 44, 45, 62, 64, 67, 70, 884, 1060, 1062, 1142, 1151, 1232, 1235, 1236, 1237, 1252, 1280, 1336, 1351, 1354, 1393, 1416, 1570, 1608, 1648, 1682, 1750, 1862, 1882, 1885, 1886, 1887, 1900, 1904, 1905, 1907, 1912, 1914, 1916, 1921], "anoth": [2, 6, 8, 12, 13, 17, 21, 23, 27, 37, 38, 40, 42, 46, 47, 48, 59, 62, 70, 484, 963, 965, 966, 968, 1113, 1198, 1224, 1225, 1228, 1252, 1364, 1365, 1422, 1431, 1592, 1609, 1746, 1859, 1861, 1862, 1868, 1881, 1882, 1884, 1885, 1887, 1893, 1895, 1899, 1904, 1905, 1913, 1914, 1916, 1922, 1924], "constant": [2, 16, 20, 21, 37, 70, 740, 771, 817, 818, 1045, 1102, 1103, 1104, 1186, 1189, 1193, 1204, 1236, 1261, 1346, 1347, 1348, 1365, 1368, 1375, 1430, 1452, 1472, 1517, 1520, 1558, 1609, 1658, 1674, 1679, 1682, 1828, 1860, 1862, 1881, 1887, 1893, 1897, 1900, 1903, 1916], "boolean": [2, 31, 46, 57, 70, 399, 401, 885, 921, 923, 924, 926, 965, 966, 968, 1067, 1133, 1145, 1178, 1179, 1180, 1181, 1182, 1185, 1213, 1261, 1277, 1282, 1322, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1460, 1570, 1610, 1613, 1706, 1801, 1802, 1825, 1844, 1845, 1861, 1863, 1887, 1918, 1919, 1921, 1922, 1923, 1924], "inform": [2, 3, 4, 5, 8, 9, 10, 15, 16, 21, 28, 33, 34, 36, 37, 38, 40, 41, 44, 48, 49, 50, 53, 57, 58, 62, 64, 70, 191, 208, 254, 312, 320, 485, 495, 512, 514, 614, 676, 731, 899, 904, 905, 909, 910, 920, 1066, 1097, 1099, 1119, 1164, 1186, 1189, 1205, 1218, 1225, 1234, 1349, 1350, 1351, 1352, 1353, 1354, 1382, 1391, 1417, 1418, 1419, 1421, 1427, 1436, 1448, 1464, 1466, 1468, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1512, 1531, 1570, 1589, 1590, 1591, 1601, 1634, 1646, 1658, 1705, 1732, 1752, 1757, 1782, 1842, 1859, 1862, 1868, 1869, 1877, 1878, 1882, 1884, 1885, 1886, 1887, 1892, 1893, 1896, 1900, 1901, 1904, 1906, 1907, 1919, 1921, 1922, 1923, 1926, 1928], "relat": [2, 7, 8, 10, 37, 40, 48, 61, 62, 67, 676, 1142, 1228, 1368, 1452, 1472, 1601, 1696, 1877, 1882, 1904, 1912, 1916, 1917, 1923, 1927], "mechan": [2, 9, 12, 40, 51, 55, 57, 70, 875, 1066, 1164, 1189, 1421, 1570, 1646, 1752, 1821, 1857, 1874, 1877, 1886, 1887, 1892, 1893, 1910, 1912, 1913], "confus": [2, 9, 18, 21, 1189, 1421, 1882, 1885, 1904, 1916], "receiv": [2, 8, 10, 15, 21, 28, 37, 40, 44, 46, 67, 69, 1019, 1189, 1421, 1597, 1598, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1691, 1862, 1872, 1874, 1881, 1882, 1895, 1905, 1912, 1913, 1914, 1916], "memori": [2, 3, 4, 6, 12, 16, 17, 20, 22, 24, 27, 29, 38, 42, 44, 46, 47, 62, 66, 70, 150, 155, 170, 172, 175, 178, 179, 180, 195, 206, 209, 239, 253, 266, 296, 324, 330, 336, 338, 339, 392, 443, 444, 445, 446, 447, 456, 461, 484, 496, 497, 520, 521, 576, 599, 613, 730, 759, 874, 876, 889, 895, 904, 905, 931, 946, 963, 964, 967, 970, 971, 973, 987, 988, 997, 998, 1001, 1005, 1007, 1008, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1026, 1027, 1028, 1032, 1062, 1063, 1064, 1065, 1113, 1114, 1115, 1117, 1118, 1119, 1124, 1126, 1130, 1189, 1206, 1234, 1297, 1298, 1299, 1306, 1365, 1391, 1392, 1421, 1464, 1465, 1466, 1468, 1570, 1588, 1601, 1608, 1634, 1646, 1653, 1655, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1715, 1716, 1718, 1719, 1720, 1721, 1821, 1842, 1849, 1855, 1857, 1859, 1870, 1874, 1876, 1877, 1882, 1887, 1895, 1900, 1905, 1906, 1907, 1912, 1916, 1918, 1919, 1920, 1922, 1923], "overlap": [2, 15, 17, 27, 37, 38, 40, 44, 62, 70, 874, 904, 905, 1065, 1119, 1186, 1368, 1472, 1601, 1803, 1842, 1885, 1886, 1919], "dens": [2, 15, 44, 218, 541, 542, 579, 580, 581, 582, 583, 584, 918, 927, 1146, 1147, 1208, 1261, 1677, 1778, 1781, 1784, 1785, 1788, 1789, 1790, 1791, 1793, 1794, 1799, 1808, 1842, 1877, 1897, 1916, 1919], "stride": [2, 14, 15, 16, 28, 29, 138, 221, 253, 338, 443, 444, 445, 446, 447, 496, 517, 540, 577, 579, 580, 581, 583, 584, 613, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 764, 765, 768, 769, 770, 778, 779, 861, 874, 918, 927, 1063, 1065, 1075, 1080, 1098, 1116, 1117, 1146, 1147, 1153, 1189, 1198, 1202, 1208, 1259, 1275, 1293, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1389, 1390, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1433, 1472, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1514, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1588, 1601, 1652, 1711, 1712, 1715, 1717, 1718, 1719, 1721, 1722, 1729, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1827, 1832, 1834, 1847, 1854, 1858, 1860, 1863, 1875, 1900, 1902, 1912, 1916, 1918, 1919, 1921, 1922, 1923], "thu": [2, 29, 37, 40, 46, 58, 62, 70, 781, 818, 821, 850, 1062, 1083, 1252, 1283, 1361, 1473, 1589, 1601, 1663, 1664, 1674, 1792, 1859, 1862, 1869, 1870, 1882, 1884, 1889, 1890, 1892, 1893, 1900, 1907, 1912, 1916, 1920, 1922, 1923], "rowmajor": [2, 1601], "contigu": [2, 29, 38, 42, 330, 496, 517, 613, 1367, 1424, 1560, 1601, 1723, 1729, 1807, 1860, 1876, 1877, 1902, 1909, 1916, 1918, 1920], "create_graph": [2, 150, 889, 897, 898, 899, 900, 901, 902, 903, 1860, 1881], "preserv": [2, 12, 16, 37, 46, 62, 70, 496, 775, 781, 850, 872, 875, 1103, 1104, 1119, 1193, 1199, 1422, 1431, 1473, 1531, 1589, 1659, 1738, 1742, 1780, 1821, 1859, 1870, 1875, 1877, 1880, 1885, 1888, 1897, 1900, 1912, 1916, 1919], "preexist": [2, 15, 16], "let": [2, 8, 9, 12, 13, 16, 20, 21, 27, 28, 37, 38, 45, 46, 58, 67, 70, 484, 493, 944, 1142, 1189, 1208, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1234, 1235, 1238, 1240, 1247, 1249, 1251, 1252, 1421, 1601, 1608, 1821, 1866, 1875, 1876, 1882, 1885, 1886, 1887, 1888, 1893, 1895, 1896, 1897, 1898, 1899, 1904, 1913, 1914, 1916, 1921], "first": [2, 5, 6, 8, 10, 12, 13, 14, 15, 16, 17, 21, 27, 28, 31, 34, 37, 38, 40, 41, 42, 44, 45, 46, 48, 50, 54, 57, 58, 62, 68, 70, 216, 253, 289, 585, 606, 682, 685, 687, 690, 756, 789, 790, 810, 850, 853, 855, 870, 871, 880, 885, 886, 887, 888, 903, 904, 917, 921, 922, 924, 925, 926, 929, 931, 933, 947, 962, 965, 976, 1050, 1052, 1053, 1054, 1059, 1062, 1067, 1080, 1082, 1101, 1115, 1120, 1121, 1123, 1124, 1125, 1129, 1130, 1133, 1142, 1145, 1153, 1154, 1155, 1166, 1178, 1187, 1196, 1201, 1202, 1208, 1213, 1218, 1221, 1228, 1244, 1247, 1254, 1255, 1257, 1260, 1261, 1277, 1283, 1286, 1289, 1290, 1291, 1293, 1309, 1311, 1317, 1322, 1325, 1329, 1335, 1336, 1342, 1350, 1351, 1353, 1354, 1364, 1365, 1367, 1372, 1373, 1387, 1390, 1391, 1406, 1413, 1415, 1416, 1436, 1449, 1502, 1588, 1592, 1601, 1610, 1611, 1613, 1624, 1634, 1640, 1663, 1664, 1665, 1666, 1667, 1673, 1676, 1677, 1681, 1685, 1688, 1690, 1696, 1706, 1707, 1733, 1734, 1742, 1770, 1784, 1787, 1792, 1822, 1823, 1827, 1832, 1834, 1840, 1843, 1846, 1849, 1851, 1856, 1859, 1861, 1862, 1869, 1871, 1874, 1875, 1877, 1881, 1882, 1885, 1887, 1889, 1890, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1921, 1925, 1927], "accord": [2, 10, 28, 48, 793, 857, 858, 876, 919, 931, 1060, 1152, 1249, 1282, 1311, 1329, 1365, 1592, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1682, 1688, 1707, 1771, 1795, 1822, 1850, 1862, 1872, 1876, 1877, 1880, 1893, 1897, 1899, 1904, 1914, 1923], "retain": [2, 10, 40, 689, 691, 692, 695, 870, 871, 876, 1193, 1210, 1241, 1245, 1258, 1276, 1286, 1288, 1289, 1291, 1294, 1316, 1317, 1318, 1319, 1648, 1704, 1707, 1738, 1801, 1802, 1806, 1831, 1832, 1833, 1834, 1844, 1845, 1874, 1895], "over": [2, 10, 12, 15, 16, 17, 21, 22, 28, 37, 38, 40, 41, 45, 46, 48, 55, 58, 62, 63, 64, 65, 66, 67, 68, 70, 479, 676, 693, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 888, 913, 936, 974, 1019, 1021, 1025, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1118, 1122, 1124, 1128, 1130, 1142, 1150, 1189, 1204, 1221, 1241, 1245, 1257, 1258, 1260, 1268, 1288, 1290, 1319, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1365, 1368, 1369, 1370, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1393, 1409, 1412, 1413, 1414, 1415, 1416, 1421, 1424, 1425, 1426, 1428, 1435, 1449, 1452, 1453, 1455, 1460, 1469, 1472, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1504, 1515, 1516, 1532, 1538, 1541, 1542, 1544, 1545, 1546, 1555, 1556, 1563, 1570, 1596, 1605, 1645, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1711, 1712, 1727, 1786, 1788, 1801, 1802, 1803, 1806, 1823, 1838, 1844, 1845, 1849, 1862, 1872, 1874, 1875, 1876, 1881, 1883, 1884, 1886, 1887, 1888, 1890, 1893, 1895, 1896, 1903, 1912, 1913, 1916, 1924], "fact": [2, 4, 9, 12, 16, 62, 492, 918, 927, 955, 1142, 1146, 1147, 1224, 1225, 1252, 1859, 1887, 1890, 1900, 1913, 1916], "phase": [2, 17, 28, 38, 789, 1224, 1225, 1688, 1807, 1860, 1899], "recreat": [2, 27, 1882], "altern": [2, 10, 17, 37, 40, 70, 676, 810, 1122, 1123, 1151, 1196, 1260, 1449, 1466, 1468, 1539, 1601, 1653, 1677, 1749, 1842, 1855, 1856, 1863, 1882, 1891, 1893, 1896, 1897, 1899], "never": [2, 6, 8, 12, 15, 38, 40, 57, 58, 221, 222, 792, 875, 937, 1186, 1235, 1236, 1247, 1260, 1601, 1634, 1882, 1885, 1887, 1904, 1905, 1912, 1923], "long": [2, 8, 10, 17, 28, 37, 57, 69, 730, 745, 747, 748, 749, 750, 752, 759, 777, 1119, 1165, 1289, 1294, 1317, 1344, 1357, 1365, 1391, 1392, 1428, 1504, 1657, 1705, 1818, 1822, 1832, 1834, 1839, 1857, 1862, 1869, 1874, 1875, 1876, 1882, 1883, 1885, 1887, 1889, 1895, 1897, 1900, 1904, 1906, 1911, 1918, 1919, 1921, 1922], "hard": [2, 8, 9, 17, 18, 20, 40, 45, 58, 1062, 1261, 1377, 1522, 1523, 1859, 1860, 1861, 1882, 1900, 1904], "matter": [2, 5, 40, 62, 893, 1050, 1062, 1196, 1199, 1204, 1601, 1877, 1882, 1904], "discourag": [2, 1031, 1035, 1882, 1912], "aggress": [2, 17, 1186, 1882, 1912], "buffer": [2, 5, 17, 37, 38, 40, 62, 66, 876, 976, 1008, 1115, 1118, 1128, 1189, 1196, 1199, 1210, 1260, 1339, 1340, 1341, 1358, 1394, 1395, 1396, 1421, 1460, 1594, 1601, 1603, 1610, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1641, 1643, 1656, 1674, 1676, 1738, 1780, 1825, 1861, 1878, 1882, 1886, 1887, 1893, 1898, 1900, 1905], "free": [2, 8, 15, 40, 42, 46, 48, 57, 58, 62, 70, 1014, 1032, 1192, 1204, 1261, 1870, 1880, 1882, 1885, 1887, 1889, 1895, 1899, 1900], "reus": [2, 12, 15, 17, 28, 40, 45, 70, 484, 1858, 1882, 1885, 1912], "effici": [2, 3, 4, 9, 29, 37, 46, 62, 63, 68, 150, 756, 889, 894, 903, 939, 1126, 1134, 1206, 1244, 1261, 1280, 1329, 1360, 1361, 1362, 1365, 1366, 1373, 1427, 1433, 1434, 1468, 1570, 1870, 1877, 1882, 1886, 1887, 1890, 1894, 1896, 1903, 1905, 1907, 1912, 1913, 1916, 1919, 1920, 1924], "occas": [2, 8, 1882], "actual": [2, 9, 15, 16, 17, 20, 21, 22, 26, 42, 48, 50, 62, 67, 70, 786, 954, 1080, 1098, 1200, 1204, 1352, 1353, 1354, 1520, 1601, 1625, 1655, 1677, 1682, 1856, 1861, 1862, 1875, 1882, 1885, 1886, 1887, 1890, 1895, 1899, 1907, 1912, 1918, 1923], "signific": [2, 4, 20, 23, 42, 1690, 1882, 1885, 1916], "amount": [2, 3, 4, 5, 8, 15, 28, 37, 40, 42, 48, 57, 70, 905, 987, 1013, 1015, 1019, 1186, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1368, 1409, 1424, 1472, 1503, 1618, 1619, 1621, 1622, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1876, 1882, 1884, 1885, 1888, 1889, 1891, 1912, 1916], "heavi": [2, 16, 40, 1882, 1899], "pressur": [2, 1882], "keep": [2, 4, 8, 15, 16, 21, 37, 38, 42, 44, 48, 57, 62, 966, 1260, 1339, 1340, 1341, 1345, 1364, 1384, 1385, 1386, 1430, 1460, 1520, 1531, 1601, 1620, 1659, 1727, 1856, 1857, 1859, 1874, 1876, 1877, 1882, 1885, 1886, 1888, 1889, 1890, 1895, 1901, 1903, 1907, 1912, 1913, 1914], "track": [2, 15, 16, 17, 21, 24, 26, 48, 334, 971, 1011, 1013, 1026, 1027, 1028, 1118, 1119, 1164, 1290, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1601, 1620, 1872, 1874, 1876, 1877, 1882, 1885, 1887, 1888, 1889, 1892, 1893, 1901, 1903, 1905, 1906, 1913, 1914, 1916], "save": [2, 6, 8, 12, 17, 29, 32, 38, 40, 42, 44, 62, 493, 833, 885, 886, 895, 1126, 1188, 1189, 1194, 1196, 1204, 1206, 1260, 1421, 1601, 1655, 1656, 1678, 1684, 1687, 1691, 1859, 1860, 1871, 1876, 1887, 1888, 1893, 1895, 1897, 1900, 1902, 1903, 1904, 1906, 1916, 1921, 1925], "afterward": [2, 1421, 1592, 1601], "start": [2, 4, 5, 9, 10, 15, 17, 22, 24, 37, 38, 40, 42, 48, 54, 56, 57, 58, 59, 62, 66, 69, 70, 401, 431, 432, 493, 534, 694, 861, 1011, 1013, 1024, 1026, 1027, 1084, 1085, 1101, 1115, 1187, 1201, 1214, 1259, 1275, 1320, 1321, 1329, 1334, 1335, 1336, 1365, 1367, 1414, 1415, 1416, 1422, 1424, 1512, 1558, 1601, 1615, 1619, 1621, 1634, 1660, 1682, 1688, 1722, 1753, 1776, 1789, 1790, 1791, 1793, 1794, 1856, 1857, 1858, 1860, 1861, 1866, 1869, 1874, 1876, 1882, 1883, 1885, 1886, 1889, 1893, 1894, 1895, 1899, 1900, 1903, 1906, 1912, 1913, 1914, 1916], "sure": [2, 8, 10, 17, 20, 28, 37, 40, 42, 47, 49, 58, 60, 65, 70, 857, 858, 889, 1066, 1113, 1164, 1193, 1204, 1205, 1261, 1601, 1646, 1684, 1825, 1862, 1875, 1882, 1886, 1889, 1890, 1899, 1900, 1906, 1907, 1912, 1913, 1914, 1916, 1921], "longer": [2, 12, 28, 40, 59, 66, 67, 683, 886, 904, 905, 1186, 1193, 1601, 1648, 1872, 1882, 1885, 1912, 1914], "find": [2, 8, 15, 16, 17, 18, 21, 22, 27, 28, 31, 40, 57, 67, 70, 82, 1062, 1142, 1210, 1261, 1352, 1353, 1354, 1391, 1658, 1696, 1707, 1742, 1808, 1856, 1870, 1874, 1876, 1882, 1884, 1885, 1886, 1887, 1889, 1890, 1895, 1897, 1900, 1902, 1907, 1912, 1916, 1919, 1921, 1923, 1925, 1927], "quick": [2, 8, 65, 1869, 1893], "guid": [2, 9, 10, 21, 22, 26, 37, 82, 83, 1200, 1857, 1885, 1888, 1904, 1907], "var": [2, 15, 21, 28, 50, 55, 57, 60, 1339, 1340, 1341, 1375, 1376, 1384, 1385, 1386, 1393, 1460, 1517, 1710, 1845, 1858, 1860, 1862, 1875, 1902], "detach": [2, 6, 27, 222, 446, 456, 946, 1118, 1189, 1344, 1421, 1504, 1522, 1784, 1821, 1859, 1860, 1875, 1877, 1889, 1900, 1902, 1909, 1916, 1920, 1922], "register_hook": [2, 1875, 1882], "factori": [2, 3, 16, 29, 46, 48, 51, 55, 67, 820, 1062, 1646, 1658, 1746, 1857, 1860, 1876, 1885, 1902, 1919], "ones": [2, 17, 19, 27, 28, 37, 40, 44, 46, 62, 67, 68, 69, 70, 150, 253, 312, 401, 443, 444, 446, 512, 790, 855, 889, 898, 900, 901, 902, 903, 904, 919, 931, 949, 1045, 1053, 1075, 1118, 1125, 1126, 1129, 1164, 1186, 1189, 1200, 1209, 1235, 1251, 1260, 1338, 1364, 1368, 1375, 1376, 1393, 1421, 1425, 1426, 1428, 1430, 1472, 1511, 1570, 1588, 1592, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1638, 1640, 1643, 1653, 1657, 1710, 1727, 1745, 1776, 1824, 1828, 1852, 1860, 1862, 1864, 1875, 1876, 1882, 1883, 1885, 1887, 1894, 1896, 1897, 1900, 1902, 1903, 1904, 1907, 1912, 1914, 1917, 1919, 1922], "autograd_tensor": 2, "base": [2, 4, 8, 10, 14, 15, 17, 19, 20, 21, 31, 32, 37, 40, 41, 42, 44, 45, 46, 48, 50, 55, 57, 58, 59, 62, 67, 70, 75, 787, 792, 796, 798, 816, 817, 818, 820, 821, 857, 858, 895, 916, 949, 961, 1023, 1024, 1060, 1062, 1105, 1142, 1152, 1191, 1202, 1214, 1252, 1263, 1265, 1267, 1275, 1358, 1421, 1424, 1425, 1426, 1430, 1464, 1466, 1468, 1537, 1570, 1601, 1605, 1606, 1608, 1615, 1619, 1621, 1660, 1661, 1662, 1663, 1664, 1665, 1674, 1675, 1676, 1677, 1703, 1713, 1738, 1752, 1807, 1808, 1822, 1832, 1834, 1850, 1857, 1860, 1862, 1884, 1885, 1886, 1887, 1893, 1901, 1905, 1906, 1907, 1912, 1913, 1916, 1917, 1920, 1921, 1923, 1925, 1926], "Then": [2, 12, 18, 40, 58, 70, 1368, 1472, 1610, 1658, 1882, 1883, 1886, 1887, 1888, 1896, 1897, 1900, 1903, 1904, 1912, 1913, 1925], "ctx": [2, 55, 885, 886, 887, 893, 894, 895, 896, 1881, 1887, 1888, 1900], "gradcheck": [2, 905, 1857, 1887], "extend": [2, 37, 40, 42, 46, 49, 59, 70, 857, 886, 888, 895, 1423, 1432, 1857, 1866, 1877, 1882, 1892, 1894, 1895, 1900, 1902, 1904, 1910, 1916, 1927], "staticmethod": [2, 886, 888, 893, 894, 895, 896, 1862, 1881, 1887, 1900, 1912], "save_for_backward": [2, 886, 894, 896, 1881, 1882, 1887, 1888, 1900], "grad_output": [2, 885, 893, 903, 905, 909, 910, 1189, 1421, 1597, 1598, 1858, 1860, 1882, 1885, 1887, 1888, 1893], "saved_tensor": [2, 894, 895, 896, 1881, 1882, 1887, 1888], "avail": [2, 3, 6, 9, 10, 17, 20, 22, 28, 31, 32, 37, 40, 48, 57, 58, 82, 83, 985, 987, 988, 999, 1002, 1009, 1010, 1029, 1030, 1032, 1062, 1195, 1252, 1253, 1278, 1464, 1473, 1531, 1570, 1589, 1696, 1750, 1803, 1808, 1842, 1856, 1857, 1859, 1861, 1862, 1866, 1869, 1874, 1882, 1885, 1887, 1891, 1893, 1894, 1897, 1899, 1903, 1904, 1906, 1907, 1908, 1912, 1926, 1927], "cost": [2, 4, 5, 9, 10, 23, 28, 38, 62, 939, 1244, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1746, 1885, 1897, 1908, 1913, 1919], "cpu": [2, 5, 6, 12, 16, 20, 24, 25, 28, 31, 33, 37, 40, 42, 62, 88, 119, 196, 288, 325, 334, 443, 444, 445, 446, 447, 456, 576, 585, 861, 876, 914, 918, 927, 959, 965, 975, 976, 977, 979, 1063, 1065, 1075, 1080, 1098, 1110, 1115, 1116, 1139, 1140, 1146, 1147, 1189, 1196, 1198, 1199, 1208, 1218, 1220, 1224, 1225, 1226, 1227, 1229, 1231, 1234, 1236, 1237, 1243, 1246, 1249, 1252, 1253, 1259, 1260, 1275, 1278, 1289, 1358, 1364, 1421, 1464, 1585, 1601, 1605, 1606, 1634, 1635, 1649, 1652, 1706, 1715, 1717, 1719, 1721, 1722, 1746, 1751, 1753, 1754, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1775, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1821, 1822, 1823, 1832, 1834, 1839, 1842, 1854, 1857, 1859, 1860, 1862, 1866, 1870, 1874, 1875, 1877, 1885, 1888, 1891, 1893, 1895, 1896, 1897, 1899, 1900, 1902, 1905, 1906, 1908, 1911, 1912, 1916, 1918, 1919, 1922, 1923, 1924], "There": [2, 6, 7, 8, 10, 12, 15, 16, 17, 21, 22, 27, 28, 31, 36, 40, 42, 57, 63, 67, 68, 70, 676, 730, 789, 886, 1119, 1358, 1391, 1436, 1570, 1601, 1641, 1646, 1856, 1859, 1861, 1862, 1868, 1869, 1876, 1882, 1885, 1887, 1888, 1889, 1892, 1895, 1899, 1900, 1904, 1907, 1908, 1912, 1914, 1922, 1924], "moment": [2, 21, 24, 768, 769, 770, 957, 1663, 1664, 1665, 1667, 1673, 1677, 1870, 1874, 1877, 1906, 1912], "nvprof": [2, 5, 911, 1885], "regist": [2, 16, 19, 20, 23, 32, 38, 40, 44, 45, 46, 57, 59, 62, 70, 82, 83, 485, 676, 788, 789, 850, 909, 910, 949, 1008, 1189, 1260, 1421, 1422, 1423, 1431, 1432, 1449, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1608, 1609, 1610, 1611, 1613, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1866, 1872, 1874, 1886, 1887, 1892, 1893, 1900, 1904, 1912], "activ": [2, 6, 8, 10, 12, 16, 28, 59, 62, 68, 788, 790, 792, 799, 803, 837, 838, 847, 857, 858, 964, 973, 988, 1001, 1019, 1118, 1120, 1130, 1261, 1333, 1360, 1361, 1362, 1366, 1376, 1393, 1420, 1422, 1439, 1450, 1464, 1466, 1468, 1513, 1550, 1573, 1601, 1611, 1612, 1613, 1643, 1648, 1849, 1857, 1858, 1870, 1874, 1885, 1887, 1888, 1893, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1912, 1916, 1925, 1926], "emit_nvtx": [2, 5], "vtune": [2, 5], "emit_itt": [2, 5], "use_cuda": [2, 1906], "record_shap": [2, 1906], "with_flop": [2, 1906], "profile_memori": [2, 1906], "with_stack": [2, 1906], "with_modul": [2, 1906], "use_kineto": 2, "use_cpu": 2, "experimental_config": [2, 1906], "hold": [2, 15, 21, 40, 55, 57, 59, 60, 62, 66, 69, 70, 533, 1261, 1368, 1422, 1423, 1431, 1432, 1472, 1592, 1601, 1603, 1604, 1610, 1620, 1634, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1789, 1790, 1791, 1792, 1793, 1794, 1883, 1885, 1887, 1889, 1892, 1895, 1903, 1906, 1912, 1913, 1914, 1916, 1918, 1919, 1921, 1922], "summari": [2, 4, 28, 58, 1020, 1755, 1857, 1872, 1921, 1926], "hood": [2, 16, 21, 69, 1874, 1882, 1885, 1886, 1895, 1904, 1914], "record": [2, 6, 12, 15, 17, 28, 44, 49, 50, 51, 55, 58, 69, 70, 443, 444, 445, 446, 447, 493, 815, 816, 817, 818, 821, 823, 861, 918, 927, 965, 966, 968, 1063, 1064, 1065, 1075, 1080, 1098, 1115, 1116, 1117, 1146, 1147, 1189, 1204, 1208, 1259, 1275, 1302, 1303, 1358, 1421, 1652, 1653, 1655, 1658, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1854, 1855, 1859, 1861, 1877, 1881, 1882, 1885, 1887, 1900, 1901, 1906, 1912, 1921, 1922, 1923, 1924, 1925, 1926], "event": [2, 43, 46, 48, 56, 59, 69, 913, 914, 915, 966, 968, 1019, 1022, 1204, 1205, 1266, 1302, 1303, 1570, 1857, 1872, 1874, 1885, 1906, 1921], "being": [2, 4, 6, 10, 12, 15, 16, 17, 20, 21, 26, 28, 37, 40, 42, 44, 46, 48, 50, 57, 58, 59, 62, 66, 67, 69, 70, 97, 401, 756, 789, 795, 888, 897, 903, 947, 966, 974, 1021, 1025, 1039, 1040, 1075, 1108, 1109, 1119, 1128, 1129, 1178, 1189, 1193, 1278, 1287, 1292, 1337, 1338, 1355, 1357, 1364, 1365, 1369, 1370, 1375, 1381, 1388, 1412, 1413, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1452, 1453, 1469, 1485, 1492, 1493, 1503, 1515, 1516, 1520, 1532, 1555, 1563, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1706, 1707, 1801, 1802, 1803, 1844, 1845, 1859, 1862, 1869, 1872, 1875, 1876, 1877, 1881, 1882, 1885, 1887, 1888, 1889, 1890, 1893, 1895, 1896, 1900, 1904, 1907, 1910, 1912, 1913, 1916, 1923, 1925, 1927], "those": [2, 3, 5, 12, 14, 16, 17, 20, 21, 24, 28, 31, 37, 38, 40, 42, 44, 46, 62, 67, 69, 70, 820, 904, 977, 987, 1050, 1052, 1130, 1204, 1246, 1252, 1260, 1299, 1329, 1337, 1338, 1355, 1357, 1365, 1381, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1473, 1492, 1493, 1503, 1512, 1532, 1555, 1563, 1658, 1677, 1750, 1807, 1828, 1849, 1861, 1875, 1876, 1881, 1882, 1885, 1887, 1888, 1891, 1893, 1897, 1898, 1900, 1903, 1910, 1912, 1914], "report": [2, 4, 5, 17, 24, 28, 34, 40, 50, 58, 69, 70, 1019, 1122, 1123, 1125, 1881, 1885, 1905, 1916], "runtim": [2, 4, 6, 17, 23, 31, 40, 70, 823, 874, 913, 1060, 1062, 1152, 1189, 1204, 1421, 1603, 1604, 1659, 1702, 1842, 1850, 1862, 1875, 1876, 1882, 1885, 1887, 1895, 1900], "propag": [2, 15, 16, 21, 27, 42, 43, 46, 48, 57, 70, 510, 682, 685, 686, 687, 691, 692, 693, 694, 762, 763, 764, 765, 775, 778, 779, 781, 782, 783, 834, 836, 917, 1108, 1109, 1316, 1788, 1857, 1874, 1875, 1881, 1885, 1887, 1890, 1892, 1912, 1925, 1926], "async": [2, 40, 41, 69, 599, 1601, 1863, 1885, 1892, 1918], "task": [2, 4, 8, 38, 63, 68, 1192, 1207, 1384, 1385, 1386, 1862, 1884, 1892, 1893, 1899], "cuda": [2, 4, 5, 6, 16, 17, 19, 20, 22, 24, 28, 31, 36, 37, 38, 40, 42, 44, 62, 88, 150, 288, 312, 320, 334, 339, 512, 514, 520, 576, 861, 873, 875, 889, 903, 918, 920, 927, 949, 963, 964, 965, 966, 968, 969, 984, 986, 997, 1063, 1064, 1065, 1075, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1116, 1146, 1147, 1189, 1208, 1210, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1243, 1246, 1249, 1250, 1252, 1253, 1259, 1260, 1275, 1278, 1294, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1364, 1391, 1421, 1436, 1460, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1512, 1520, 1531, 1558, 1570, 1589, 1590, 1591, 1592, 1601, 1603, 1604, 1605, 1606, 1647, 1649, 1652, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1706, 1715, 1717, 1719, 1721, 1722, 1746, 1750, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1785, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1821, 1823, 1832, 1834, 1839, 1842, 1854, 1857, 1860, 1866, 1875, 1877, 1887, 1888, 1893, 1896, 1900, 1902, 1903, 1905, 1906, 1911, 1912, 1918, 1919, 1922, 1923, 1924], "cudaev": 2, "approxim": [2, 4, 38, 44, 57, 70, 1126, 1142, 1252, 1261, 1329, 1371, 1435, 1450, 1457, 1518, 1563, 1573, 1609, 1660, 1677, 1696, 1808, 1828, 1858, 1860, 1862, 1885, 1886, 1887, 1890, 1900, 1928], "4u": 2, "about": [2, 9, 10, 13, 15, 17, 18, 21, 22, 23, 28, 33, 37, 40, 41, 44, 48, 50, 54, 56, 58, 63, 67, 70, 254, 495, 614, 904, 905, 970, 971, 987, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1026, 1027, 1028, 1119, 1218, 1225, 1365, 1634, 1677, 1688, 1749, 1856, 1859, 1861, 1862, 1866, 1869, 1884, 1885, 1886, 1887, 1889, 1892, 1895, 1896, 1898, 1904, 1906, 1907, 1910, 1913, 1914, 1916, 1920, 1922], "collect": [2, 4, 8, 17, 21, 24, 27, 28, 37, 41, 42, 44, 48, 57, 62, 69, 70, 795, 796, 820, 857, 858, 937, 1001, 1063, 1151, 1290, 1601, 1624, 1652, 1715, 1719, 1854, 1857, 1860, 1861, 1862, 1872, 1885, 1886, 1888, 1903, 1906, 1907, 1910, 1914, 1916, 1921, 1923], "group": [2, 4, 10, 13, 17, 28, 37, 38, 41, 42, 44, 48, 54, 57, 58, 59, 60, 62, 65, 70, 606, 676, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 876, 913, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1376, 1397, 1398, 1399, 1400, 1401, 1402, 1460, 1495, 1496, 1497, 1498, 1499, 1500, 1521, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1840, 1856, 1857, 1858, 1860, 1862, 1874, 1880, 1885, 1886, 1900, 1903, 1904, 1906, 1912, 1921], "prof": [2, 17, 28, 54, 1906], "key_averag": [2, 1906], "group_by_input_shap": [2, 913, 1906], "skew": [2, 4, 5, 1240, 1608], "neglig": [2, 1201, 1750], "bottom": [2, 1520, 1869], "But": [2, 8, 16, 18, 21, 62, 69, 484, 1204, 1234, 1601, 1882, 1887, 1889, 1890, 1904, 1905, 1916, 1920, 1927], "total": [2, 4, 5, 8, 37, 38, 40, 54, 56, 57, 58, 62, 873, 914, 979, 1014, 1019, 1032, 1115, 1150, 1151, 1298, 1344, 1368, 1381, 1388, 1412, 1427, 1472, 1557, 1601, 1605, 1647, 1649, 1651, 1682, 1688, 1728, 1755, 1803, 1856, 1861, 1872, 1885, 1891, 1903], "artifici": [2, 1916], "estim": [2, 4, 37, 46, 957, 961, 1142, 1186, 1339, 1340, 1341, 1371, 1375, 1376, 1384, 1385, 1386, 1393, 1460, 1518, 1609, 1674, 1771, 1906], "flop": [2, 1906], "hardwar": [2, 9, 17, 28, 855, 857, 858, 1224, 1225, 1252, 1842, 1885, 1897, 1908], "matrix": [2, 3, 17, 19, 38, 40, 46, 191, 208, 682, 685, 686, 687, 756, 917, 919, 928, 929, 937, 939, 940, 941, 942, 949, 957, 961, 1045, 1049, 1050, 1052, 1062, 1130, 1134, 1138, 1153, 1209, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1256, 1258, 1261, 1269, 1278, 1280, 1283, 1293, 1311, 1313, 1364, 1365, 1373, 1391, 1472, 1511, 1512, 1608, 1613, 1642, 1648, 1694, 1695, 1696, 1706, 1750, 1778, 1781, 1784, 1785, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1807, 1808, 1823, 1826, 1828, 1830, 1831, 1832, 1833, 1834, 1843, 1849, 1857, 1862, 1875, 1876, 1877, 1880, 1884, 1885, 1887, 1890, 1893, 1896, 1906, 1916, 1921, 1922], "2d": [2, 42, 45, 46, 583, 584, 696, 699, 702, 731, 735, 738, 762, 764, 769, 775, 779, 781, 782, 783, 942, 957, 961, 1050, 1062, 1244, 1245, 1327, 1331, 1335, 1338, 1339, 1340, 1350, 1353, 1357, 1361, 1365, 1369, 1384, 1385, 1390, 1415, 1424, 1426, 1427, 1428, 1473, 1474, 1475, 1480, 1483, 1485, 1488, 1493, 1496, 1499, 1507, 1512, 1515, 1542, 1545, 1555, 1558, 1609, 1642, 1712, 1787, 1792, 1830, 1870, 1880, 1887, 1906, 1907, 1916], "alloc": [2, 5, 12, 15, 16, 29, 34, 38, 42, 46, 48, 57, 253, 330, 443, 444, 445, 446, 447, 484, 964, 966, 968, 970, 971, 973, 986, 987, 988, 1011, 1013, 1015, 1017, 1018, 1019, 1020, 1027, 1028, 1032, 1063, 1065, 1297, 1298, 1299, 1306, 1656, 1715, 1719, 1721, 1746, 1821, 1874, 1877, 1882, 1886, 1891, 1906, 1919], "dealloc": [2, 70, 1115, 1874, 1885, 1889, 1891, 1906], "line": [2, 5, 17, 20, 21, 22, 24, 25, 28, 34, 40, 70, 913, 1062, 1119, 1164, 1189, 1199, 1421, 1485, 1520, 1755, 1782, 1859, 1862, 1863, 1877, 1883, 1887, 1890, 1891, 1897, 1899, 1900, 1906, 1916], "hierarchi": [2, 15, 70, 836, 1193, 1663, 1664, 1863, 1887, 1906, 1907], "callstack": [2, 40, 1906], "torchscript": [2, 4, 9, 20, 44, 70, 613, 1187, 1190, 1192, 1193, 1194, 1195, 1200, 1204, 1206, 1658, 1857, 1863, 1898, 1900, 1906, 1912], "kineto": [2, 1906], "_experimentalconfig": [2, 1906], "librari": [2, 3, 4, 5, 9, 10, 17, 20, 22, 29, 31, 32, 37, 40, 47, 55, 59, 63, 66, 67, 68, 70, 676, 959, 966, 989, 993, 1005, 1113, 1201, 1232, 1278, 1775, 1872, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1895, 1896, 1899, 1900, 1904, 1906, 1907, 1912, 1927], "100": [2, 13, 21, 37, 40, 44, 46, 70, 299, 734, 735, 738, 739, 1149, 1189, 1200, 1206, 1244, 1259, 1266, 1275, 1290, 1310, 1329, 1337, 1338, 1339, 1340, 1341, 1350, 1351, 1353, 1354, 1356, 1357, 1384, 1385, 1386, 1421, 1428, 1430, 1460, 1469, 1502, 1503, 1555, 1666, 1678, 1679, 1684, 1685, 1686, 1687, 1689, 1691, 1692, 1708, 1764, 1860, 1862, 1874, 1884, 1885, 1900, 1903, 1908, 1914, 1916, 1921], "realli": [2, 8, 16, 18, 70, 1862, 1882, 1904], "y": [2, 12, 13, 15, 20, 21, 27, 28, 29, 31, 37, 46, 54, 62, 67, 68, 70, 613, 616, 777, 880, 882, 883, 884, 891, 892, 895, 897, 898, 899, 900, 901, 902, 931, 937, 954, 961, 1005, 1006, 1045, 1056, 1062, 1066, 1118, 1120, 1123, 1124, 1125, 1129, 1130, 1164, 1195, 1200, 1204, 1257, 1266, 1267, 1290, 1337, 1338, 1339, 1340, 1341, 1342, 1355, 1357, 1376, 1381, 1382, 1384, 1385, 1386, 1388, 1393, 1408, 1412, 1413, 1424, 1425, 1426, 1428, 1430, 1452, 1453, 1460, 1463, 1469, 1470, 1491, 1520, 1537, 1560, 1592, 1613, 1646, 1655, 1710, 1728, 1730, 1731, 1752, 1784, 1798, 1824, 1828, 1829, 1849, 1852, 1859, 1860, 1861, 1862, 1875, 1876, 1880, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1894, 1900, 1904, 1907, 1912, 1914, 1917, 1921, 1924, 1925, 1926], "column": [2, 4, 38, 45, 191, 259, 580, 583, 947, 957, 961, 1045, 1075, 1103, 1104, 1154, 1224, 1225, 1228, 1244, 1247, 1252, 1256, 1261, 1311, 1430, 1472, 1511, 1512, 1608, 1696, 1706, 1787, 1789, 1790, 1791, 1793, 1794, 1807, 1828, 1832, 1834, 1843, 1880, 1890, 1916], "remov": [2, 4, 17, 18, 20, 23, 27, 37, 38, 40, 42, 46, 58, 60, 62, 70, 485, 510, 542, 553, 693, 793, 811, 812, 813, 855, 909, 910, 939, 940, 1008, 1119, 1135, 1186, 1189, 1193, 1278, 1279, 1283, 1421, 1422, 1431, 1522, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1609, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1629, 1630, 1632, 1633, 1643, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1706, 1722, 1744, 1798, 1807, 1830, 1837, 1856, 1857, 1870, 1882, 1893, 1898, 1900, 1902, 1904, 1914, 1918, 1923], "breviti": [2, 70, 1900], "print": [2, 4, 13, 17, 21, 28, 34, 37, 40, 48, 49, 54, 55, 58, 62, 67, 69, 716, 724, 725, 730, 741, 742, 752, 760, 907, 909, 910, 1118, 1119, 1128, 1189, 1193, 1195, 1196, 1200, 1278, 1342, 1345, 1383, 1408, 1421, 1433, 1434, 1502, 1558, 1561, 1562, 1613, 1623, 1624, 1625, 1626, 1629, 1639, 1643, 1655, 1658, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1755, 1856, 1859, 1860, 1882, 1884, 1885, 1887, 1893, 1894, 1900, 1902, 1904, 1906, 1912, 1921, 1922, 1925, 1926], "tabl": [2, 4, 16, 24, 28, 40, 70, 1364, 1511, 1860, 1862, 1887, 1903, 1904, 1906, 1907, 1912, 1916, 1923], "sort_bi": [2, 1906], "self_cpu_time_tot": [2, 1906], "avg": [2, 40, 1661], "mul": [2, 13, 15, 27, 34, 70, 418, 743, 744, 753, 1166, 1312, 1858, 1859, 1860, 1862, 1875, 1877, 1887, 1900, 1902, 1909, 1913, 1916, 1919, 1925], "32": [2, 3, 14, 21, 38, 40, 742, 1115, 1186, 1198, 1278, 1335, 1360, 1361, 1362, 1366, 1367, 1369, 1370, 1390, 1409, 1415, 1426, 1464, 1465, 1466, 1467, 1468, 1485, 1515, 1516, 1522, 1570, 1876, 1877, 1893, 1897, 1900, 1910, 1916, 1919, 1921, 1922], "048m": 2, "200": [2, 28, 44, 1189, 1266, 1421, 1708, 1862, 1916], "27": [2, 613, 1256, 1681, 1703, 1843, 1900], "041m": 2, "powbackward0": 2, "9": [2, 8, 14, 37, 38, 40, 47, 70, 87, 312, 314, 316, 320, 400, 401, 469, 510, 556, 577, 579, 693, 741, 742, 850, 933, 939, 943, 947, 961, 1045, 1060, 1063, 1084, 1085, 1094, 1095, 1105, 1108, 1109, 1112, 1113, 1142, 1152, 1218, 1220, 1241, 1243, 1245, 1256, 1258, 1320, 1321, 1327, 1328, 1331, 1332, 1345, 1364, 1365, 1417, 1418, 1433, 1434, 1443, 1446, 1511, 1512, 1558, 1561, 1562, 1648, 1649, 1661, 1663, 1664, 1665, 1666, 1667, 1673, 1676, 1677, 1678, 1682, 1688, 1690, 1691, 1695, 1699, 1735, 1742, 1751, 1755, 1765, 1770, 1780, 1787, 1795, 1821, 1822, 1826, 1828, 1837, 1843, 1850, 1859, 1863, 1869, 1889, 1893, 1898, 1899, 1900, 1902, 1903, 1904, 1912, 1916, 1917, 1919, 1923], "727m": 2, "55": [2, 1375, 1900], "483m": 2, "accumulategrad": [2, 1882], "148m": 2, "graphroot": 2, "691": 2, "816u": 2, "emit": [2, 31, 49, 54, 70, 676, 1204, 1757, 1862, 1868, 1901, 1911, 1916], "nvtx": [2, 5, 1857], "off": [2, 8, 9, 16, 21, 24, 31, 40, 48, 62, 70, 916, 918, 927, 1023, 1119, 1146, 1147, 1186, 1204, 1252, 1334, 1335, 1336, 1338, 1414, 1415, 1416, 1520, 1558, 1752, 1884, 1885, 1886, 1889, 1892, 1896, 1906, 1907, 1908, 1912, 1913], "o": [2, 28, 38, 40, 41, 46, 58, 59, 60, 70, 1189, 1260, 1302, 1303, 1304, 1392, 1421, 1427, 1601, 1738, 1856, 1863, 1874, 1882, 1885, 1886, 1889, 1899, 1904, 1905, 1912], "trace_nam": 2, "regular": [2, 4, 5, 21, 40, 48, 58, 62, 65, 70, 1005, 1006, 1118, 1236, 1237, 1344, 1359, 1360, 1361, 1362, 1366, 1406, 1420, 1421, 1422, 1423, 1431, 1432, 1513, 1550, 1592, 1603, 1604, 1643, 1664, 1862, 1876, 1877, 1887, 1888, 1892, 1893, 1900, 1904, 1907, 1910, 1912, 1916, 1917, 1924, 1926], "command": [2, 5, 24, 40, 48, 55, 58, 70, 1885, 1891, 1899, 1905, 1906, 1913], "unfortun": [2, 10, 14, 16, 37, 1601, 1882], "wai": [2, 4, 6, 8, 9, 10, 12, 13, 15, 16, 17, 21, 27, 28, 31, 37, 38, 40, 42, 44, 46, 50, 54, 62, 64, 65, 69, 70, 150, 576, 676, 792, 815, 818, 821, 857, 858, 886, 889, 898, 900, 901, 902, 903, 904, 1083, 1085, 1119, 1142, 1189, 1218, 1219, 1234, 1249, 1337, 1365, 1384, 1385, 1386, 1391, 1403, 1404, 1405, 1421, 1449, 1466, 1468, 1512, 1564, 1601, 1611, 1641, 1677, 1681, 1688, 1859, 1861, 1862, 1866, 1868, 1869, 1872, 1874, 1875, 1876, 1882, 1884, 1887, 1888, 1889, 1890, 1893, 1895, 1896, 1899, 1900, 1901, 1903, 1904, 1907, 1912, 1913, 1916, 1920, 1922, 1926], "disk": [2, 37, 1738, 1882, 1893, 1904, 1921], "annot": [2, 18, 20, 21, 26, 50, 55, 70, 911, 1187, 1200, 1859, 1861, 1863, 1900, 1912], "wait": [2, 17, 22, 34, 40, 48, 55, 57, 69, 820, 965, 966, 968, 1038, 1192, 1302, 1303, 1308, 1690, 1860, 1862, 1874, 1884, 1885, 1886, 1902, 1906, 1912], "nvidia": [2, 24, 28, 31, 40, 974, 987, 1015, 1021, 1025, 1039, 1040, 1842, 1857, 1885, 1889, 1891, 1897, 1899, 1907, 1924], "visual": [2, 17, 28, 70, 1290, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1414, 1415, 1416, 1472, 1893, 1899, 1906, 1921], "nvvp": 2, "timelin": [2, 5, 1302, 1303, 1906], "load_nvprof": 2, "repl": [2, 20], "append": [2, 21, 27, 40, 69, 70, 229, 253, 603, 757, 759, 761, 1008, 1052, 1054, 1283, 1374, 1392, 1423, 1432, 1438, 1449, 1601, 1860, 1861, 1862, 1882, 1884, 1895, 1899, 1900, 1902, 1921], "size": [2, 3, 4, 8, 12, 14, 15, 16, 17, 28, 34, 37, 38, 40, 42, 46, 48, 57, 62, 65, 70, 138, 208, 221, 241, 253, 254, 312, 314, 320, 338, 443, 444, 445, 447, 485, 490, 495, 496, 497, 510, 512, 514, 517, 540, 541, 542, 562, 577, 579, 580, 581, 583, 584, 602, 603, 613, 614, 686, 687, 689, 691, 692, 693, 695, 716, 724, 725, 731, 737, 738, 739, 741, 742, 752, 760, 762, 763, 764, 765, 775, 781, 782, 783, 792, 854, 861, 873, 874, 876, 888, 897, 898, 899, 900, 901, 902, 913, 917, 918, 920, 927, 929, 930, 931, 932, 933, 940, 941, 942, 943, 961, 962, 964, 970, 976, 977, 979, 1019, 1043, 1044, 1050, 1053, 1060, 1062, 1063, 1064, 1065, 1068, 1079, 1080, 1081, 1083, 1084, 1085, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1115, 1116, 1117, 1124, 1125, 1130, 1131, 1146, 1147, 1151, 1152, 1163, 1166, 1186, 1189, 1210, 1219, 1228, 1233, 1241, 1245, 1249, 1252, 1254, 1255, 1256, 1258, 1259, 1261, 1269, 1275, 1276, 1278, 1279, 1283, 1286, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1311, 1313, 1316, 1319, 1321, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1364, 1365, 1367, 1368, 1369, 1370, 1373, 1375, 1376, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1433, 1434, 1436, 1442, 1443, 1444, 1445, 1446, 1447, 1452, 1460, 1464, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1493, 1498, 1499, 1500, 1503, 1504, 1511, 1512, 1515, 1516, 1520, 1531, 1538, 1544, 1545, 1546, 1555, 1556, 1558, 1561, 1562, 1564, 1570, 1589, 1590, 1591, 1592, 1601, 1624, 1634, 1635, 1636, 1637, 1638, 1640, 1642, 1645, 1647, 1649, 1652, 1653, 1666, 1675, 1694, 1695, 1696, 1697, 1699, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1728, 1733, 1742, 1745, 1764, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1800, 1801, 1802, 1803, 1806, 1807, 1808, 1821, 1822, 1823, 1828, 1830, 1838, 1839, 1840, 1841, 1844, 1845, 1847, 1848, 1849, 1850, 1854, 1855, 1857, 1858, 1859, 1860, 1862, 1870, 1872, 1875, 1876, 1881, 1882, 1883, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1897, 1898, 1900, 1902, 1905, 1906, 1907, 1909, 1916, 1918, 1919, 1921, 1922], "arg0": [2, 40], "arg1": [2, 40, 55, 56, 58], "order": [2, 4, 6, 12, 13, 15, 17, 25, 28, 40, 41, 42, 44, 46, 58, 62, 63, 68, 69, 70, 150, 191, 208, 312, 314, 316, 320, 330, 401, 485, 676, 788, 789, 798, 850, 872, 889, 890, 903, 909, 910, 928, 939, 966, 1008, 1019, 1050, 1053, 1054, 1062, 1080, 1082, 1083, 1089, 1101, 1102, 1103, 1104, 1120, 1130, 1142, 1189, 1208, 1219, 1225, 1227, 1234, 1241, 1244, 1245, 1252, 1253, 1256, 1258, 1261, 1290, 1296, 1309, 1311, 1329, 1338, 1344, 1358, 1421, 1422, 1431, 1448, 1449, 1485, 1493, 1520, 1544, 1545, 1546, 1570, 1592, 1601, 1610, 1620, 1634, 1635, 1636, 1637, 1648, 1666, 1688, 1694, 1697, 1707, 1742, 1745, 1770, 1780, 1807, 1825, 1832, 1834, 1839, 1842, 1843, 1849, 1856, 1857, 1859, 1860, 1862, 1863, 1874, 1875, 1876, 1877, 1880, 1883, 1885, 1886, 1887, 1888, 1890, 1893, 1896, 1900, 1903, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1916, 1917, 1919, 1923, 1926], "side": [2, 12, 21, 31, 40, 57, 59, 67, 70, 764, 765, 768, 769, 770, 997, 1056, 1078, 1079, 1081, 1084, 1085, 1090, 1092, 1093, 1094, 1095, 1098, 1186, 1187, 1233, 1238, 1249, 1251, 1334, 1335, 1336, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1442, 1443, 1445, 1446, 1447, 1472, 1476, 1477, 1478, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1544, 1545, 1546, 1558, 1682, 1711, 1712, 1742, 1803, 1830, 1856, 1859, 1860, 1862, 1881, 1882, 1885, 1887, 1890, 1912], "creation": [2, 3, 15, 21, 37, 40, 42, 70, 741, 742, 752, 760, 820, 965, 1119, 1601, 1602, 1615, 1859, 1863, 1872, 1874, 1882, 1885, 1912, 1914, 1916, 1922], "warmup": [2, 4, 12, 17, 1008, 1885, 1906], "correl": [2, 46, 58, 957, 1349, 1350, 1351, 1352, 1353, 1354, 1360, 1361, 1362, 1366], "view": [2, 8, 9, 15, 16, 24, 27, 28, 29, 34, 37, 38, 42, 44, 48, 62, 70, 222, 253, 433, 494, 495, 496, 603, 614, 688, 693, 756, 874, 882, 883, 884, 892, 931, 943, 954, 955, 1052, 1053, 1060, 1101, 1102, 1103, 1104, 1119, 1152, 1164, 1189, 1244, 1255, 1303, 1365, 1373, 1391, 1421, 1436, 1472, 1473, 1474, 1475, 1512, 1557, 1597, 1598, 1601, 1605, 1697, 1729, 1733, 1734, 1738, 1744, 1745, 1776, 1795, 1806, 1817, 1822, 1826, 1838, 1847, 1848, 1850, 1857, 1858, 1859, 1860, 1874, 1876, 1877, 1883, 1887, 1902, 1909, 1914, 1916, 1918, 1919, 1922], "difficult": [2, 8, 10, 16, 17, 23, 28, 67, 1130, 1849], "eas": [2, 15, 27, 70, 1884, 1887, 1891], "seq": [2, 601, 756, 936, 948, 1290, 1373, 1391, 1427, 1436, 1464, 1466, 1468, 1637, 1837], "n": [2, 4, 21, 40, 42, 45, 46, 48, 50, 55, 58, 70, 229, 259, 405, 463, 464, 682, 685, 686, 687, 731, 754, 756, 777, 873, 913, 917, 918, 920, 927, 929, 933, 939, 940, 941, 961, 1043, 1044, 1054, 1075, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1102, 1122, 1125, 1130, 1142, 1146, 1147, 1151, 1186, 1189, 1200, 1204, 1205, 1208, 1209, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1261, 1269, 1278, 1283, 1285, 1290, 1293, 1313, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1381, 1382, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1393, 1403, 1404, 1405, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1430, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1452, 1454, 1455, 1456, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1485, 1491, 1503, 1504, 1512, 1516, 1520, 1555, 1558, 1560, 1570, 1601, 1608, 1619, 1628, 1647, 1694, 1695, 1696, 1701, 1706, 1707, 1713, 1719, 1721, 1734, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1785, 1801, 1802, 1803, 1807, 1808, 1822, 1823, 1828, 1832, 1834, 1843, 1844, 1845, 1846, 1849, 1858, 1860, 1862, 1866, 1875, 1876, 1880, 1882, 1885, 1887, 1889, 1890, 1904, 1906, 1907, 1908, 1916, 1917, 1921, 1922, 1923], "counter": [2, 40, 1001, 1019, 1164, 1358, 1872, 1874, 1882], "increment": [2, 12, 40, 57, 1115, 1151, 1193, 1358, 1859, 1861, 1882, 1912], "stash": [2, 6, 1885, 1887, 1905], "tell": [2, 8, 70, 493, 1190, 1196, 1260, 1659, 1859, 1869, 1882, 1887, 1888, 1904], "top": [2, 4, 8, 9, 14, 24, 37, 42, 45, 46, 50, 62, 66, 70, 743, 913, 1337, 1338, 1357, 1381, 1388, 1412, 1428, 1470, 1473, 1520, 1615, 1619, 1621, 1771, 1825, 1863, 1869, 1874, 1887, 1903], "m": [2, 5, 9, 20, 38, 40, 45, 46, 54, 58, 70, 682, 685, 686, 687, 716, 724, 725, 734, 735, 736, 737, 738, 739, 741, 742, 752, 754, 760, 810, 856, 857, 858, 917, 929, 933, 937, 942, 1075, 1128, 1151, 1187, 1189, 1194, 1195, 1199, 1200, 1206, 1209, 1220, 1228, 1234, 1235, 1236, 1237, 1241, 1242, 1243, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1261, 1278, 1279, 1283, 1293, 1311, 1313, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1389, 1390, 1407, 1408, 1410, 1411, 1414, 1415, 1416, 1420, 1421, 1428, 1429, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1558, 1560, 1601, 1608, 1613, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1641, 1642, 1645, 1694, 1695, 1696, 1706, 1713, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1785, 1803, 1807, 1808, 1823, 1830, 1859, 1860, 1861, 1862, 1885, 1887, 1889, 1890, 1893, 1898, 1907, 1916, 1926], "compar": [2, 4, 6, 12, 18, 24, 31, 37, 62, 70, 690, 861, 872, 903, 1019, 1066, 1067, 1090, 1091, 1092, 1096, 1097, 1098, 1099, 1108, 1109, 1133, 1145, 1164, 1178, 1213, 1277, 1287, 1292, 1322, 1427, 1601, 1646, 1752, 1862, 1872, 1885, 1887, 1890, 1896, 1899, 1907, 1908, 1912, 1916, 1921, 1923, 1925, 1926], "down": [2, 8, 28, 31, 37, 46, 48, 55, 56, 58, 62, 70, 775, 1019, 1057, 1104, 1110, 1198, 1234, 1531, 1707, 1735, 1892, 1895, 1900, 1912, 1914, 1921], "irrelev": [2, 4, 1863], "simpli": [2, 4, 15, 17, 23, 31, 37, 46, 50, 58, 69, 70, 859, 1119, 1176, 1187, 1333, 1359, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1859, 1861, 1882, 1888, 1890, 1893, 1894, 1906, 1916], "hand": [2, 5, 16, 21, 40, 62, 67, 70, 1056, 1062, 1187, 1233, 1238, 1249, 1251, 1333, 1431, 1449, 1830, 1842, 1859, 1861, 1862, 1882, 1890, 1893, 1898, 1904, 1916], "underwai": [2, 1003, 1885], "up": [2, 7, 8, 9, 10, 12, 14, 16, 20, 21, 22, 23, 28, 31, 37, 38, 40, 44, 46, 48, 50, 54, 56, 57, 59, 60, 65, 70, 775, 781, 886, 1005, 1006, 1008, 1045, 1062, 1091, 1092, 1097, 1099, 1104, 1119, 1180, 1193, 1198, 1201, 1202, 1247, 1329, 1344, 1368, 1427, 1466, 1468, 1472, 1473, 1485, 1511, 1520, 1531, 1589, 1601, 1677, 1713, 1735, 1839, 1840, 1856, 1859, 1861, 1866, 1869, 1872, 1874, 1875, 1876, 1882, 1883, 1884, 1885, 1889, 1890, 1891, 1893, 1896, 1900, 1904, 1906, 1907, 1912, 1913, 1923], "nonzero": [2, 15, 16, 62, 1186, 1270, 1272, 1273, 1278, 1852, 1858, 1860, 1902], "themselv": [2, 10, 46, 57, 62, 789, 837, 1825, 1885, 1904, 1927], "did": [2, 8, 9, 20, 21, 40, 57, 1318, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1861, 1862, 1890, 1898, 1904], "relationship": [2, 10, 16, 21, 54, 70, 946, 1142, 1470, 1882, 1885, 1898, 1904], "conceptu": [2, 4, 1882, 1888, 1914], "itt": [2, 1906], "intel": [2, 5, 24, 1857, 1899], "r": [2, 21, 28, 46, 68, 150, 885, 887, 889, 903, 904, 937, 948, 957, 1062, 1120, 1122, 1125, 1130, 1131, 1134, 1142, 1200, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1234, 1235, 1238, 1240, 1247, 1249, 1251, 1252, 1261, 1364, 1365, 1374, 1433, 1434, 1452, 1511, 1512, 1561, 1562, 1608, 1675, 1706, 1849, 1859, 1860, 1861, 1882, 1884, 1887, 1890, 1899, 1919, 1921], "instrument": [2, 4, 38, 1303, 1857, 1892, 1926], "technologi": [2, 1857], "applic": [2, 3, 10, 17, 46, 57, 795, 806, 807, 808, 809, 895, 987, 1124, 1299, 1357, 1358, 1466, 1468, 1503, 1601, 1842, 1857, 1869, 1877, 1882, 1884, 1885, 1886, 1887, 1891, 1892, 1893, 1897, 1900, 1903, 1907, 1912, 1913, 1914, 1916, 1922], "across": [2, 9, 12, 15, 17, 21, 28, 31, 37, 38, 40, 42, 44, 48, 58, 62, 67, 70, 613, 731, 815, 870, 914, 979, 1018, 1019, 1062, 1076, 1130, 1199, 1204, 1290, 1338, 1358, 1368, 1409, 1427, 1429, 1460, 1472, 1490, 1493, 1522, 1538, 1585, 1601, 1620, 1624, 1648, 1738, 1849, 1857, 1859, 1872, 1875, 1877, 1882, 1886, 1889, 1892, 1893, 1895, 1896, 1897, 1903, 1905, 1908, 1912, 1913, 1918, 1921, 1926], "tool": [2, 5, 9, 10, 17, 20, 22, 28, 34, 40, 58, 70, 857, 912, 1303, 1782, 1856, 1857, 1859, 1861, 1884, 1885, 1899, 1900, 1904, 1906, 1926], "With": [2, 17, 18, 21, 24, 28, 34, 37, 40, 46, 62, 69, 735, 736, 737, 738, 739, 781, 1019, 1083, 1084, 1085, 1093, 1094, 1095, 1205, 1339, 1340, 1341, 1350, 1351, 1353, 1354, 1367, 1384, 1385, 1386, 1460, 1471, 1473, 1496, 1499, 1531, 1556, 1589, 1674, 1717, 1863, 1882, 1885, 1887, 1912, 1916, 1921], "abl": [2, 3, 8, 9, 13, 15, 16, 17, 18, 23, 28, 34, 40, 42, 57, 67, 1119, 1187, 1199, 1464, 1601, 1859, 1866, 1875, 1882, 1887, 1888, 1898, 1900, 1904, 1907, 1912, 1916, 1923], "labl": 2, "gui": 2, "detect_anomali": 2, "check_nan": 2, "engin": [2, 9, 10, 17, 29, 32, 334, 737, 738, 739, 893, 903, 1130, 1713, 1849, 1857, 1882, 1885, 1886, 1887, 1912, 1913], "traceback": [2, 28, 34, 50, 58, 69, 70, 1164, 1174, 1782, 1861, 1862, 1863, 1874, 1877, 1887, 1897, 1916, 1923], "fail": [2, 8, 13, 14, 15, 17, 18, 21, 22, 28, 40, 46, 48, 49, 50, 55, 56, 57, 58, 60, 69, 70, 73, 904, 905, 966, 1019, 1190, 1196, 1199, 1218, 1247, 1252, 1260, 1261, 1278, 1657, 1862, 1864, 1874, 1882, 1885, 1887, 1895, 1896, 1899, 1900, 1904, 1912], "test": [2, 4, 16, 17, 19, 28, 31, 34, 40, 45, 55, 57, 58, 70, 689, 695, 949, 1079, 1081, 1082, 1087, 1088, 1093, 1094, 1095, 1097, 1099, 1175, 1176, 1180, 1181, 1183, 1184, 1658, 1772, 1857, 1859, 1863, 1872, 1874, 1882, 1890, 1897, 1900, 1903, 1921, 1926, 1927], "slow": [2, 16, 904, 1198, 1202, 1218, 1219, 1605, 1606, 1641, 1839, 1890, 1895, 1921], "myfunc": [2, 1888], "inp": [2, 37, 40, 70, 890, 891, 892, 1472, 1601, 1858, 1927], "clone": [2, 32, 37, 62, 253, 446, 893, 896, 907, 909, 910, 931, 1193, 1364, 1588, 1821, 1830, 1858, 1860, 1874, 1877, 1898, 1902, 1906, 1916, 1918, 1919, 1923], "run_fn": [2, 6, 853, 859], "10": [2, 12, 13, 14, 17, 20, 21, 22, 28, 36, 37, 38, 40, 41, 46, 47, 57, 59, 312, 320, 334, 469, 510, 556, 577, 579, 580, 581, 681, 682, 693, 730, 741, 742, 756, 757, 758, 759, 761, 917, 929, 939, 941, 942, 943, 947, 961, 1041, 1042, 1043, 1044, 1045, 1060, 1062, 1079, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1097, 1099, 1105, 1113, 1132, 1142, 1152, 1178, 1194, 1199, 1200, 1206, 1211, 1214, 1241, 1243, 1244, 1259, 1261, 1263, 1268, 1270, 1271, 1272, 1273, 1275, 1283, 1294, 1311, 1327, 1328, 1329, 1331, 1332, 1338, 1341, 1344, 1345, 1348, 1351, 1354, 1364, 1365, 1373, 1374, 1375, 1376, 1386, 1391, 1392, 1393, 1418, 1422, 1423, 1428, 1431, 1432, 1436, 1438, 1460, 1464, 1465, 1466, 1467, 1468, 1472, 1478, 1497, 1500, 1504, 1511, 1512, 1522, 1592, 1601, 1624, 1632, 1646, 1649, 1658, 1662, 1682, 1688, 1690, 1708, 1709, 1717, 1742, 1755, 1761, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1771, 1780, 1795, 1807, 1808, 1818, 1822, 1823, 1826, 1828, 1842, 1850, 1856, 1859, 1860, 1861, 1862, 1863, 1869, 1882, 1885, 1886, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1916, 1917, 1919, 1921, 1922, 1923, 1928], "last": [2, 6, 7, 13, 28, 29, 37, 38, 41, 44, 45, 46, 57, 69, 70, 314, 613, 688, 756, 873, 918, 927, 933, 943, 1005, 1045, 1050, 1054, 1079, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1097, 1099, 1101, 1146, 1147, 1151, 1164, 1166, 1174, 1186, 1210, 1244, 1247, 1252, 1289, 1294, 1329, 1342, 1357, 1365, 1367, 1373, 1391, 1393, 1408, 1428, 1431, 1435, 1436, 1449, 1465, 1466, 1472, 1491, 1512, 1521, 1534, 1557, 1558, 1601, 1602, 1647, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1733, 1742, 1780, 1782, 1789, 1790, 1791, 1793, 1794, 1795, 1803, 1807, 1823, 1825, 1828, 1847, 1848, 1861, 1862, 1872, 1875, 1877, 1882, 1885, 1887, 1890, 1897, 1900, 1904, 1905, 1916, 1922, 1923], "stdin": [2, 1164, 1782, 1877, 1887, 1897, 1916], "instal": [2, 4, 13, 15, 21, 23, 31, 32, 40, 70, 1856, 1893, 1894, 1900, 1904, 1912, 1921], "_tensor": [2, 154], "py": [2, 5, 13, 14, 15, 16, 17, 20, 21, 24, 27, 28, 31, 34, 40, 44, 46, 49, 56, 58, 62, 70, 856, 1601, 1856, 1859, 1862, 1868, 1886, 1890, 1892, 1900, 1904, 1907, 1913], "93": [2, 613], "retain_graph": [2, 150, 889, 903, 909, 910, 1130, 1849, 1860, 1881, 1882, 1912], "90": [2, 1046, 1692, 1734], "allow_unreach": 2, "76": 2, "_forward_cl": 2, "tmp": [2, 4, 31, 40, 55, 57, 1856, 1885, 1906], "53": [2, 479], "44": [2, 14, 320, 443, 1065, 1336, 1416, 1641], "set_detect_anomali": 2, "behaviour": [2, 689, 690, 695, 962, 1520, 1558, 1688, 1757, 1856, 1896], "interpos": 2, "grad_fn": [2, 150, 334, 876, 889, 897, 898, 899, 900, 901, 902, 907, 909, 910, 1118, 1609, 1784, 1882, 1893, 1898], "node": [2, 15, 16, 17, 24, 27, 28, 40, 44, 48, 50, 56, 57, 62, 70, 82, 85, 86, 815, 816, 817, 820, 821, 822, 1008, 1128, 1203, 1344, 1358, 1601, 1658, 1870, 1885, 1900, 1901, 1904, 1905, 1912, 1913, 1914, 1924, 1926], "grad_mod": [2, 1860], "intermediari": [2, 31, 46, 895, 1882, 1890], "access": [2, 10, 12, 15, 16, 17, 20, 23, 34, 37, 40, 42, 62, 69, 553, 730, 895, 972, 1189, 1192, 1204, 1251, 1329, 1421, 1592, 1603, 1604, 1609, 1613, 1635, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1857, 1859, 1860, 1862, 1863, 1866, 1870, 1873, 1874, 1876, 1877, 1882, 1885, 1889, 1890, 1892, 1893, 1912, 1916, 1919, 1920, 1922, 1928], "isinst": [2, 27, 28, 37, 46, 70, 907, 909, 910, 1176, 1187, 1860, 1862, 1882, 1887, 1893, 1904, 1916], "dir": [2, 1005, 1658, 1856, 1862, 1904], "__call__": [2, 1189, 1421], "__class__": 2, "__delattr__": 2, "__dir__": 2, "__doc__": 2, "__eq__": 2, "__format__": [2, 1863], "__ge__": 2, "__getattribute__": 2, "__gt__": 2, "__hash__": [2, 1863], "__init_subclass__": 2, "__le__": 2, "__lt__": [2, 1862], "__ne__": 2, "__new__": [2, 1861, 1863], "__reduce__": [2, 1904], "__reduce_ex__": 2, "__repr__": [2, 4, 1887], "__setattr__": 2, "__sizeof__": 2, "__str__": [2, 70, 1860, 1862], "__subclasshook__": 2, "_raw_saved_result": 2, "_register_hook_dict": 2, "_saved_result": [2, 1882], "metadata": [2, 4, 16, 27, 42, 50, 51, 1260, 1738, 1877, 1882, 1887, 1888, 1898, 1904, 1906, 1912, 1913, 1921], "next_funct": 2, "register_prehook": [2, 1882], "allclos": [2, 67, 68, 70, 904, 905, 1005, 1084, 1085, 1091, 1092, 1119, 1120, 1122, 1123, 1124, 1125, 1129, 1130, 1236, 1238, 1249, 1251, 1254, 1255, 1280, 1613, 1640, 1706, 1849, 1860, 1888, 1902], "pack": [2, 44, 734, 735, 736, 737, 738, 739, 741, 742, 756, 777, 1204, 1205, 1280, 1358, 1373, 1391, 1436, 1634, 1635, 1636, 1637, 1860, 1870, 1877, 1882, 1889, 1899, 1907], "unpack": [2, 756, 892, 1204, 1236, 1280, 1358, 1637, 1639, 1646, 1659, 1862, 1863, 1882, 1887, 1889], "common": [2, 4, 9, 15, 21, 23, 26, 27, 28, 37, 48, 57, 67, 681, 789, 861, 922, 925, 930, 956, 1057, 1062, 1107, 1108, 1109, 1110, 1132, 1211, 1260, 1310, 1339, 1340, 1341, 1344, 1460, 1502, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1726, 1738, 1804, 1857, 1862, 1867, 1876, 1882, 1885, 1887, 1888, 1889, 1893, 1895, 1898, 1900, 1904, 1916, 1917, 1920, 1923], "trade": [2, 6, 9, 62, 1252, 1338, 1884, 1889, 1908], "leav": [2, 9, 21, 48, 58, 150, 889, 1194, 1206, 1611, 1614, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1798, 1859, 1861, 1862, 1882, 1904, 1908], "especi": [2, 10, 12, 16, 17, 19, 20, 21, 29, 37, 40, 70, 253, 931, 949, 1588, 1861, 1882, 1887, 1888, 1896, 1898, 1907, 1912, 1916], "notic": [2, 23, 40, 685, 1082, 1096, 1283, 1293, 1337, 1473, 1537, 1679, 1680, 1685, 1686, 1692, 1857, 1859, 1882, 1916], "fit": [2, 10, 28, 49, 66, 67, 496, 913, 1186, 1666, 1728, 1905, 1923], "evalu": [2, 5, 9, 10, 15, 16, 18, 25, 44, 45, 46, 65, 70, 689, 695, 794, 859, 904, 1019, 1125, 1126, 1189, 1329, 1333, 1339, 1340, 1341, 1359, 1376, 1384, 1385, 1386, 1393, 1421, 1435, 1439, 1460, 1563, 1585, 1611, 1666, 1682, 1713, 1862, 1863, 1887, 1893, 1916, 1924], "saved_tensors_hook": [2, 895, 1882], "pack_hook": [2, 1882], "unpack_hook": [2, 1882], "pair": [2, 17, 40, 42, 45, 46, 57, 59, 613, 731, 861, 937, 961, 1096, 1202, 1252, 1290, 1413, 1422, 1427, 1431, 1560, 1675, 1722, 1861, 1862, 1868, 1875, 1882, 1885, 1905, 1912, 1913, 1914, 1921, 1923, 1926], "retriev": [2, 21, 37, 38, 40, 44, 48, 57, 70, 533, 885, 886, 1364, 1368, 1472, 1511, 1601, 1635, 1658, 1782, 1877, 1882, 1892, 1900, 1904, 1905, 1912, 1913, 1914], "everytim": 2, "store": [2, 4, 6, 16, 20, 21, 31, 34, 38, 42, 48, 58, 62, 70, 325, 331, 397, 682, 818, 821, 886, 929, 975, 977, 979, 1134, 1189, 1196, 1199, 1219, 1230, 1231, 1232, 1261, 1266, 1278, 1340, 1364, 1421, 1449, 1601, 1608, 1610, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1634, 1787, 1856, 1857, 1859, 1876, 1877, 1878, 1886, 1887, 1888, 1889, 1892, 1904, 1907, 1912, 1913, 1914, 1916, 1918, 1921, 1922, 1926], "content": [2, 4, 8, 23, 28, 42, 50, 70, 895, 1196, 1199, 1219, 1230, 1232, 1237, 1250, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1798, 1827, 1856, 1862, 1871, 1874, 1882, 1912, 1920, 1921, 1922], "equal": [2, 27, 38, 40, 46, 57, 58, 59, 70, 259, 496, 541, 613, 676, 690, 691, 692, 735, 736, 737, 738, 739, 756, 764, 765, 816, 817, 818, 821, 857, 872, 918, 927, 938, 939, 951, 961, 977, 979, 1032, 1051, 1067, 1106, 1120, 1121, 1133, 1146, 1147, 1149, 1150, 1151, 1174, 1178, 1213, 1234, 1247, 1251, 1254, 1255, 1278, 1279, 1290, 1306, 1322, 1326, 1327, 1328, 1330, 1331, 1332, 1337, 1338, 1344, 1350, 1351, 1353, 1354, 1358, 1365, 1368, 1369, 1370, 1373, 1375, 1391, 1426, 1427, 1435, 1436, 1472, 1488, 1489, 1493, 1496, 1499, 1511, 1512, 1515, 1516, 1522, 1601, 1635, 1638, 1694, 1707, 1764, 1765, 1770, 1795, 1803, 1822, 1838, 1852, 1860, 1863, 1869, 1875, 1876, 1877, 1882, 1883, 1890, 1896, 1902, 1903, 1905, 1917, 1921, 1923], "term": [2, 9, 10, 15, 46, 57, 70, 554, 730, 759, 788, 939, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1093, 1094, 1095, 1098, 1110, 1220, 1329, 1337, 1375, 1382, 1391, 1392, 1426, 1435, 1452, 1517, 1529, 1563, 1574, 1601, 1608, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1726, 1771, 1857, 1862, 1881, 1882, 1887, 1888, 1889, 1890, 1900, 1904, 1907, 1913, 1916], "mulbackward0": [2, 898, 901, 902], "inplac": [2, 27, 65, 67, 70, 751, 754, 772, 774, 776, 787, 793, 810, 834, 835, 836, 853, 854, 859, 893, 1119, 1189, 1333, 1343, 1359, 1360, 1361, 1362, 1363, 1366, 1378, 1379, 1380, 1407, 1420, 1421, 1439, 1440, 1441, 1448, 1450, 1463, 1486, 1494, 1505, 1506, 1507, 1508, 1509, 1513, 1524, 1525, 1526, 1535, 1550, 1565, 1566, 1568, 1571, 1573, 1583, 1595, 1842, 1858, 1860, 1869, 1882, 1887, 1900, 1926], "lead": [2, 6, 8, 12, 18, 36, 40, 47, 62, 68, 70, 893, 897, 899, 903, 905, 1113, 1130, 1219, 1391, 1436, 1452, 1798, 1849, 1862, 1876, 1877, 1882, 1884, 1886, 1887, 1888, 1896, 1899, 1903, 1904, 1907, 1916, 1921, 1922], "undefin": [2, 40, 47, 50, 62, 318, 469, 613, 874, 896, 904, 905, 933, 1065, 1114, 1115, 1337, 1657, 1700, 1882, 1885, 1887, 1888], "inner": [2, 4, 62, 63, 68, 811, 813, 897, 1045, 1120, 1124, 1129, 1828, 1860, 1902, 1912, 1926], "save_on_cpu": 2, "pin_memori": [2, 37, 443, 444, 445, 446, 447, 1063, 1065, 1715, 1719, 1721, 1821, 1858, 1859, 1860, 1877, 1885, 1902, 1918], "within": [2, 6, 10, 15, 17, 20, 27, 28, 37, 38, 40, 44, 45, 46, 57, 58, 59, 62, 69, 70, 88, 874, 904, 905, 969, 1045, 1189, 1193, 1281, 1334, 1335, 1336, 1344, 1360, 1361, 1362, 1366, 1368, 1414, 1415, 1416, 1421, 1427, 1460, 1472, 1520, 1544, 1545, 1546, 1601, 1611, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1627, 1628, 1629, 1630, 1631, 1711, 1712, 1742, 1764, 1841, 1859, 1861, 1862, 1872, 1877, 1880, 1884, 1885, 1887, 1891, 1892, 1893, 1896, 1900, 1903, 1904, 1907, 1910, 1911, 1912, 1913, 1921], "move": [2, 6, 8, 9, 10, 18, 21, 28, 31, 40, 42, 62, 70, 520, 585, 817, 1082, 1189, 1196, 1255, 1260, 1296, 1339, 1340, 1341, 1394, 1395, 1396, 1421, 1460, 1558, 1603, 1604, 1674, 1861, 1870, 1871, 1874, 1876, 1885, 1888, 1889, 1893, 1894, 1895, 1903, 1904, 1905, 1912, 1918, 1923], "copi": [2, 8, 16, 20, 27, 29, 37, 38, 40, 42, 48, 55, 62, 66, 67, 70, 190, 196, 206, 209, 314, 401, 446, 456, 461, 469, 490, 496, 576, 577, 578, 579, 599, 613, 788, 810, 834, 835, 875, 876, 891, 938, 946, 975, 976, 1101, 1102, 1103, 1104, 1106, 1119, 1189, 1200, 1261, 1321, 1358, 1368, 1421, 1431, 1472, 1601, 1634, 1723, 1729, 1735, 1821, 1830, 1836, 1859, 1860, 1874, 1877, 1882, 1883, 1885, 1887, 1895, 1902, 1904, 1905, 1906, 1907, 1912, 1916, 1918, 1919, 1920, 1922, 1926], "pin": [2, 209, 336, 443, 444, 445, 446, 447, 461, 576, 599, 1063, 1065, 1189, 1421, 1634, 1715, 1719, 1721, 1821, 1857, 1877, 1918], "asynchron": [2, 4, 5, 69, 196, 209, 576, 599, 988, 1189, 1192, 1207, 1421, 1857, 1863, 1884, 1886, 1912, 1918, 1921], "prod_1": 2, "prod_2": 2, "del": [2, 1863, 1874, 1887, 1889], "illustr": [2, 12, 21, 1862, 1881, 1887, 1916], "aliv": [2, 37, 48, 57, 966, 1882, 1885, 1889, 1895, 1912, 1913, 1914], "live": [2, 12, 16, 44, 1005, 1008, 1189, 1421, 1859, 1885, 1889, 1912, 1914], "releas": [2, 8, 28, 36, 40, 57, 59, 66, 70, 510, 683, 939, 940, 962, 963, 964, 970, 987, 997, 998, 1001, 1005, 1006, 1008, 1019, 1135, 1189, 1219, 1230, 1232, 1233, 1234, 1237, 1250, 1278, 1279, 1299, 1361, 1391, 1421, 1436, 1544, 1545, 1546, 1648, 1706, 1722, 1738, 1803, 1807, 1830, 1856, 1857, 1861, 1872, 1874, 1882, 1884, 1885, 1891, 1896, 1897, 1898, 1899, 1900, 1907, 1912, 1922, 1923], "delet": [2, 27, 40, 70, 890, 963, 971, 1856, 1870, 1874, 1882, 1902, 1911, 1912, 1914], "disable_saved_tensors_hook": 2, "error_messag": 2, "featur": [2, 6, 9, 10, 18, 20, 22, 29, 32, 34, 40, 42, 44, 58, 63, 69, 676, 685, 756, 764, 765, 897, 899, 903, 1036, 1200, 1283, 1293, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1339, 1354, 1359, 1360, 1361, 1362, 1366, 1369, 1370, 1373, 1374, 1384, 1391, 1392, 1427, 1436, 1438, 1455, 1464, 1466, 1468, 1469, 1470, 1471, 1488, 1489, 1506, 1507, 1508, 1513, 1515, 1516, 1537, 1601, 1696, 1842, 1857, 1859, 1861, 1862, 1863, 1866, 1868, 1876, 1877, 1882, 1887, 1889, 1890, 1897, 1900, 1901, 1906, 1907, 1912, 1916, 1921], "messag": [2, 3, 28, 34, 40, 50, 59, 67, 70, 83, 620, 676, 1022, 1024, 1218, 1219, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1856, 1859, 1860, 1862, 1863, 1868, 1889, 1900, 1905, 1906, 1912, 1914, 1923], "get": [2, 9, 12, 15, 16, 21, 22, 25, 26, 28, 31, 37, 40, 41, 42, 57, 58, 59, 60, 62, 67, 69, 70, 88, 150, 334, 682, 730, 784, 785, 857, 858, 889, 892, 933, 990, 991, 992, 1009, 1049, 1119, 1122, 1123, 1124, 1136, 1164, 1204, 1256, 1364, 1365, 1389, 1390, 1417, 1418, 1419, 1431, 1448, 1601, 1602, 1609, 1635, 1642, 1727, 1742, 1856, 1857, 1859, 1862, 1872, 1874, 1875, 1882, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1902, 1904, 1907, 1912, 1914, 1916, 1920, 1921, 1922, 1927], "register_multi_grad_hook": [2, 1882], "multi": [2, 5, 45, 48, 57, 756, 966, 1009, 1029, 1062, 1082, 1151, 1189, 1338, 1358, 1373, 1391, 1421, 1424, 1425, 1426, 1427, 1436, 1464, 1466, 1473, 1493, 1601, 1857, 1859, 1862, 1882, 1884, 1885, 1893, 1897, 1903, 1912, 1916, 1919, 1922, 1924], "ignor": [2, 6, 8, 12, 23, 27, 40, 44, 49, 55, 62, 70, 150, 496, 540, 682, 685, 686, 687, 731, 790, 791, 854, 857, 858, 870, 889, 903, 904, 905, 917, 939, 961, 1009, 1010, 1029, 1030, 1083, 1085, 1093, 1094, 1095, 1134, 1149, 1189, 1200, 1206, 1209, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1280, 1316, 1317, 1318, 1334, 1335, 1336, 1337, 1338, 1355, 1357, 1365, 1373, 1375, 1381, 1387, 1388, 1391, 1412, 1413, 1414, 1415, 1416, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1452, 1453, 1464, 1469, 1492, 1493, 1503, 1512, 1532, 1555, 1563, 1601, 1648, 1659, 1682, 1690, 1694, 1755, 1785, 1786, 1803, 1807, 1830, 1859, 1862, 1863, 1869, 1876, 1882, 1885, 1887, 1900, 1916, 1923], "rel": [2, 9, 10, 21, 31, 38, 40, 46, 62, 70, 485, 690, 872, 904, 905, 909, 910, 961, 1178, 1243, 1246, 1469, 1470, 1485, 1520, 1659, 1663, 1664, 1690, 1869, 1872, 1884, 1885, 1892, 1900, 1904, 1923], "allow_mutation_on_saved_tensor": 2, "mutat": [2, 16, 17, 26, 70, 793, 834, 835, 853, 854, 1119, 1193, 1904, 1922], "version": [2, 3, 6, 9, 18, 28, 31, 36, 38, 40, 42, 46, 58, 62, 65, 66, 70, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 121, 123, 125, 127, 130, 131, 133, 141, 143, 146, 147, 149, 152, 158, 160, 162, 164, 166, 168, 177, 186, 194, 198, 201, 203, 213, 215, 231, 235, 237, 243, 246, 248, 250, 252, 256, 261, 268, 270, 272, 276, 278, 282, 284, 291, 293, 295, 303, 305, 307, 309, 311, 313, 315, 317, 355, 357, 359, 361, 363, 365, 367, 370, 372, 374, 375, 382, 384, 386, 388, 390, 394, 398, 400, 418, 421, 424, 426, 437, 439, 441, 449, 454, 464, 467, 483, 487, 489, 505, 508, 509, 511, 513, 519, 523, 525, 528, 530, 532, 545, 547, 549, 552, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 608, 618, 731, 732, 733, 745, 746, 747, 748, 749, 750, 771, 772, 773, 774, 776, 780, 781, 800, 801, 802, 835, 843, 851, 852, 854, 1008, 1118, 1146, 1164, 1186, 1189, 1192, 1193, 1196, 1199, 1218, 1231, 1232, 1236, 1237, 1250, 1283, 1320, 1338, 1391, 1421, 1422, 1436, 1473, 1485, 1510, 1520, 1527, 1536, 1567, 1569, 1584, 1585, 1589, 1593, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1642, 1643, 1674, 1676, 1677, 1739, 1740, 1741, 1798, 1801, 1802, 1803, 1807, 1827, 1842, 1844, 1845, 1856, 1875, 1876, 1882, 1883, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1901, 1903, 1904, 1906, 1910, 1916, 1923, 1924], "_allowmutationonsavedcontext": 2, "purpos": [2, 13, 20, 21, 28, 38, 40, 70, 469, 496, 756, 904, 1198, 1283, 1344, 1373, 1427, 1595, 1596, 1597, 1598, 1755, 1872, 1877, 1882, 1904, 1913], "upon": [2, 3, 37, 41, 48, 50, 70, 1601, 1610, 1613, 1874, 1882, 1885, 1900, 1907, 1914], "sin_": [2, 1860, 1875], "8415": [2, 1916], "sinbackward0": 2, "variou": [3, 6, 16, 31, 37, 40, 70, 1261, 1866, 1869, 1874, 1877, 1887, 1893, 1895, 1903, 1907, 1909, 1916, 1927], "get_cpu_cap": 3, "capabl": [3, 9, 31, 32, 40, 990, 1713, 1866, 1885, 1891, 1892, 1894, 1924], "possibl": [3, 10, 12, 13, 15, 16, 17, 18, 21, 22, 23, 28, 31, 32, 34, 40, 42, 46, 66, 67, 70, 494, 495, 576, 613, 854, 875, 876, 943, 972, 1110, 1122, 1189, 1202, 1229, 1242, 1245, 1246, 1249, 1254, 1260, 1338, 1344, 1421, 1427, 1511, 1512, 1531, 1564, 1589, 1613, 1614, 1726, 1729, 1744, 1795, 1803, 1821, 1859, 1861, 1862, 1874, 1875, 1880, 1882, 1884, 1885, 1886, 1887, 1890, 1895, 1896, 1897, 1899, 1904, 1907, 1912, 1914, 1919, 1923], "vsx": 3, "z": [3, 4, 11, 12, 15, 27, 28, 46, 62, 67, 613, 816, 873, 895, 940, 941, 951, 1062, 1066, 1290, 1374, 1520, 1613, 1646, 1647, 1655, 1700, 1730, 1731, 1859, 1860, 1861, 1876, 1882, 1884, 1885, 1890, 1891, 1900, 1904, 1910, 1912, 1914], "vector": [3, 20, 29, 38, 46, 62, 63, 67, 253, 312, 314, 320, 685, 686, 687, 880, 889, 891, 897, 898, 899, 900, 901, 902, 903, 930, 931, 937, 948, 957, 961, 962, 1043, 1044, 1049, 1051, 1125, 1129, 1130, 1134, 1221, 1228, 1236, 1244, 1245, 1249, 1252, 1256, 1257, 1258, 1278, 1283, 1290, 1311, 1313, 1339, 1340, 1341, 1344, 1358, 1364, 1365, 1368, 1376, 1384, 1385, 1386, 1430, 1460, 1469, 1472, 1511, 1512, 1520, 1522, 1556, 1560, 1588, 1605, 1607, 1609, 1613, 1644, 1648, 1695, 1696, 1787, 1807, 1843, 1846, 1849, 1882, 1890, 1907, 1916, 1921], "NO": 3, "avx": 3, "avx2": [3, 1907], "avx512": 3, "is_built": [3, 1894], "built": [3, 4, 8, 9, 13, 14, 21, 28, 31, 38, 40, 45, 50, 65, 70, 950, 988, 1198, 1470, 1682, 1857, 1877, 1882, 1884, 1885, 1887, 1891, 1893, 1894, 1895, 1909, 1927], "necessarili": [3, 38, 40, 46, 48, 57, 469, 904, 1225, 1247, 1258, 1289, 1357, 1428, 1885, 1887], "machin": [3, 40, 48, 57, 62, 63, 68, 1193, 1198, 1234, 1457, 1891, 1892, 1893, 1894, 1897, 1900, 1901, 1904, 1911, 1912, 1913], "driver": [3, 28, 1134, 1234, 1252, 1253, 1298, 1860, 1885, 1896, 1912], "allow_tf32": [3, 1750, 1860, 1885, 1896], "tensorfloat": 3, "core": [3, 4, 8, 9, 15, 19, 21, 22, 24, 66, 949, 1019, 1657, 1862, 1866, 1884, 1885, 1886, 1896, 1904, 1924], "amper": [3, 22], "newer": [3, 20, 31, 1025, 1642, 1884, 1885, 1898, 1901, 1903, 1904, 1908], "tf32": 3, "allow_fp16_reduced_precision_reduct": [3, 1885, 1896], "precis": [3, 4, 9, 24, 29, 31, 38, 46, 62, 682, 685, 904, 905, 917, 929, 1008, 1105, 1138, 1234, 1252, 1258, 1283, 1293, 1334, 1335, 1336, 1338, 1349, 1350, 1351, 1352, 1353, 1354, 1374, 1392, 1408, 1414, 1415, 1416, 1473, 1531, 1570, 1601, 1735, 1750, 1755, 1857, 1862, 1872, 1878, 1882, 1893, 1904, 1907, 1908, 1910, 1917, 1919, 1921, 1922, 1928], "gemm": [3, 17, 1884, 1900], "allow_bf16_reduced_precision_reduct": [3, 1885, 1896], "cufft_plan_cach": [3, 1885], "cufft": 3, "queri": [3, 15, 16, 21, 40, 57, 70, 731, 965, 966, 968, 974, 1021, 1025, 1039, 1040, 1189, 1421, 1427, 1570, 1612, 1860, 1885, 1904], "specif": [3, 4, 8, 9, 10, 15, 16, 18, 20, 21, 24, 27, 28, 31, 40, 42, 44, 46, 48, 55, 57, 59, 62, 67, 70, 88, 510, 850, 857, 913, 968, 1053, 1082, 1151, 1186, 1193, 1198, 1202, 1204, 1205, 1289, 1368, 1393, 1570, 1595, 1596, 1615, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1745, 1784, 1856, 1859, 1861, 1862, 1864, 1866, 1868, 1872, 1876, 1878, 1882, 1885, 1891, 1895, 1897, 1900, 1903, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1921, 1922], "via": [3, 8, 13, 15, 16, 17, 21, 23, 26, 31, 32, 37, 40, 42, 46, 55, 62, 66, 70, 514, 613, 904, 905, 936, 963, 999, 1019, 1066, 1122, 1261, 1339, 1340, 1341, 1358, 1376, 1384, 1385, 1386, 1393, 1460, 1608, 1642, 1645, 1688, 1859, 1861, 1862, 1872, 1874, 1877, 1880, 1882, 1885, 1887, 1888, 1889, 1891, 1893, 1895, 1896, 1900, 1904, 1907, 1912, 1913, 1916, 1919, 1920, 1927], "readonli": 3, "show": [3, 5, 8, 19, 22, 24, 28, 30, 34, 37, 38, 40, 42, 47, 62, 70, 897, 903, 949, 1113, 1189, 1290, 1421, 1592, 1658, 1856, 1857, 1862, 1875, 1884, 1885, 1886, 1890, 1891, 1893, 1900, 1903, 1904, 1912, 1914], "max_siz": [3, 56, 58, 1885], "capac": [3, 1032, 1885], "preferred_linalg_librari": 3, "algebra": [3, 10, 1062, 1246, 1857, 1867], "cusolv": [3, 1252, 1253, 1807], "magma": [3, 941, 1234, 1278, 1706, 1807, 1899, 1916], "decid": [3, 5, 8, 16, 17, 18, 40, 57, 66, 1624, 1869, 1900, 1916], "heurist": [3, 17, 28, 31, 37, 57, 58, 70, 1062], "overrid": [3, 27, 31, 38, 40, 41, 46, 50, 58, 62, 67, 70, 788, 789, 850, 886, 888, 1005, 1337, 1338, 1355, 1357, 1381, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1492, 1493, 1503, 1532, 1555, 1563, 1615, 1677, 1738, 1755, 1857, 1862, 1866, 1903, 1904, 1907, 1912, 1921, 1926], "wherev": [3, 10, 21, 1875], "pick": [3, 14, 15, 19, 40, 56, 58, 510, 949, 1882, 1912], "prefer": [3, 10, 37, 42, 48, 62, 858, 874, 899, 1187, 1229, 1242, 1246, 1254, 1261, 1428, 1570, 1742, 1803, 1821, 1859, 1882, 1885, 1904, 1916], "achiev": [3, 28, 37, 38, 40, 46, 58, 62, 1062, 1126, 1189, 1338, 1344, 1421, 1427, 1428, 1493, 1522, 1601, 1885, 1892, 1904, 1912, 1914], "better": [3, 4, 8, 9, 10, 13, 14, 17, 19, 21, 24, 28, 31, 37, 40, 48, 66, 949, 1031, 1118, 1122, 1123, 1164, 1176, 1204, 1357, 1454, 1576, 1601, 1688, 1713, 1862, 1881, 1882, 1884, 1885, 1890, 1899, 1900, 1903, 1906, 1908, 1916, 1921, 1926], "select": [3, 6, 21, 24, 32, 35, 37, 40, 46, 48, 312, 314, 316, 320, 756, 939, 969, 970, 974, 981, 982, 983, 984, 986, 1007, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1031, 1032, 1035, 1037, 1039, 1040, 1082, 1261, 1290, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1373, 1391, 1436, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1629, 1630, 1745, 1818, 1852, 1858, 1859, 1860, 1862, 1874, 1875, 1876, 1877, 1882, 1884, 1885, 1890, 1897, 1902, 1907, 1916, 1920, 1923], "incorrect": [3, 5, 6, 62, 70, 253, 510, 552, 895, 904, 931, 1204, 1247, 1260, 1427, 1465, 1466, 1467, 1468, 1588, 1648, 1803, 1859, 1862, 1885, 1896, 1900], "linalg": [3, 405, 939, 940, 941, 942, 962, 1048, 1134, 1167, 1269, 1278, 1279, 1280, 1284, 1285, 1608, 1609, 1613, 1648, 1693, 1698, 1700, 1706, 1777, 1807, 1808, 1830, 1846, 1857], "inv": [3, 46, 941, 1167, 1220, 1224, 1230, 1246, 1250, 1254], "inv_ex": 3, "cholesky_ex": [3, 1218], "lu_factor": [3, 1237, 1238, 1278, 1279, 1280], "lu": [3, 11, 1230, 1236, 1237, 1238, 1279, 1280, 1860], "eigh": [3, 1218, 1224, 1227, 1246, 1252, 1896], "eighval": 3, "svdval": [3, 1220, 1234, 1243, 1252, 1807, 1896], "_linalgbackend": 3, "sdpbackend": 3, "enum": [3, 21, 40, 792, 1900, 1907, 1912], "scale": [3, 8, 17, 37, 46, 48, 56, 58, 97, 471, 473, 613, 681, 685, 686, 687, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 766, 768, 769, 770, 771, 773, 776, 777, 791, 795, 798, 815, 816, 817, 818, 821, 917, 1076, 1077, 1080, 1098, 1129, 1130, 1275, 1333, 1359, 1364, 1365, 1366, 1382, 1393, 1448, 1473, 1474, 1475, 1511, 1512, 1513, 1529, 1531, 1570, 1571, 1576, 1661, 1682, 1708, 1709, 1710, 1711, 1712, 1785, 1786, 1804, 1849, 1857, 1860, 1876, 1880, 1885, 1889, 1893, 1907, 1908, 1910, 1917], "product": [3, 22, 32, 40, 46, 57, 150, 682, 685, 686, 687, 756, 889, 891, 898, 900, 901, 902, 903, 917, 929, 935, 939, 957, 962, 974, 1021, 1025, 1039, 1040, 1043, 1059, 1062, 1125, 1129, 1130, 1166, 1209, 1221, 1228, 1254, 1255, 1257, 1283, 1290, 1293, 1313, 1373, 1374, 1391, 1392, 1519, 1570, 1608, 1694, 1695, 1704, 1823, 1838, 1846, 1849, 1857, 1859, 1875, 1882, 1890, 1892, 1896, 1904, 1916], "attent": [3, 8, 45, 731, 1338, 1427, 1464, 1466, 1468, 1493, 1570, 1857, 1899, 1920], "stai": [3, 8, 44, 139, 1358, 1885, 1895, 1907, 1912, 1916], "align": [3, 10, 19, 38, 756, 775, 781, 816, 822, 949, 1062, 1142, 1244, 1336, 1344, 1357, 1373, 1387, 1391, 1415, 1416, 1436, 1473, 1503, 1504, 1531, 1532, 1589, 1608, 1648, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1680, 1828, 1857, 1875, 1882, 1890, 1900, 1910, 1917], "src": [3, 4, 40, 70, 196, 228, 312, 320, 469, 509, 510, 511, 512, 513, 514, 516, 534, 1053, 1119, 1311, 1464, 1467, 1468, 1657, 1739, 1740, 1741, 1745, 1776, 1817, 1842, 1858, 1860, 1904], "transform": [3, 4, 20, 21, 22, 37, 42, 45, 62, 67, 777, 793, 834, 835, 853, 854, 940, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1118, 1119, 1120, 1124, 1129, 1186, 1198, 1342, 1376, 1384, 1385, 1386, 1393, 1408, 1449, 1465, 1466, 1467, 1468, 1485, 1491, 1520, 1537, 1556, 1592, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1771, 1803, 1857, 1888, 1905, 1907, 1921, 1926], "sdp_utils_cpp": 3, "h": [3, 5, 11, 15, 24, 31, 46, 485, 737, 738, 739, 756, 1218, 1225, 1228, 1238, 1252, 1327, 1328, 1335, 1336, 1338, 1340, 1341, 1345, 1350, 1351, 1353, 1361, 1362, 1364, 1366, 1373, 1374, 1385, 1386, 1391, 1392, 1393, 1404, 1405, 1415, 1416, 1433, 1434, 1436, 1438, 1455, 1471, 1474, 1475, 1485, 1493, 1520, 1555, 1561, 1562, 1608, 1609, 1642, 1657, 1807, 1860, 1875, 1876, 1882, 1885, 1886, 1889, 1890, 1900, 1920, 1921, 1922], "flash_sdp_en": 3, "flash": 3, "enable_mem_efficient_sdp": [3, 1570], "mem_efficient_sdp_en": 3, "enable_flash_sdp": [3, 1570], "math_sdp_en": 3, "math": [3, 28, 37, 70, 1072, 1238, 1240, 1532, 1570, 1696, 1713, 1808, 1857, 1859, 1861, 1862, 1896, 1916, 1917, 1923], "enable_math_sdp": [3, 1570], "sdp_kernel": [3, 1570], "enable_flash": 3, "enable_math": [3, 1570], "enable_mem_effici": 3, "temporarili": [3, 48, 1746, 1882, 1900, 1906], "previou": [3, 17, 34, 40, 57, 62, 70, 552, 756, 997, 1107, 1142, 1199, 1259, 1275, 1373, 1391, 1436, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1658, 1713, 1803, 1870, 1882, 1885, 1887, 1893, 1899, 1907, 1914], "is_avail": [3, 33, 40, 1857, 1885, 1891, 1894, 1906], "determinist": [3, 4, 6, 36, 40, 46, 70, 88, 510, 869, 1137, 1170, 1192, 1204, 1205, 1286, 1289, 1291, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1391, 1436, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1743, 1749, 1842, 1860, 1882, 1897, 1903, 1911], "algorithm": [3, 4, 8, 29, 35, 38, 41, 44, 46, 48, 62, 88, 756, 775, 781, 939, 1186, 1229, 1236, 1242, 1246, 1252, 1261, 1278, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1371, 1373, 1391, 1436, 1472, 1473, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1520, 1531, 1570, 1589, 1601, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1677, 1696, 1735, 1750, 1807, 1808, 1842, 1857, 1882, 1885, 1896, 1912, 1916], "are_deterministic_algorithms_en": 3, "use_deterministic_algorithm": [3, 869, 1170, 1749, 1897], "benchmark": [3, 12, 17, 22, 24, 1857, 1860, 1885, 1891], "fastest": [3, 873, 1601, 1647, 1663, 1664, 1890, 1897, 1903], "benchmark_limit": 3, "maximum": [3, 15, 46, 57, 58, 691, 693, 767, 791, 816, 817, 818, 821, 822, 870, 976, 1011, 1013, 1019, 1026, 1027, 1041, 1042, 1108, 1124, 1149, 1150, 1151, 1261, 1286, 1306, 1380, 1511, 1512, 1606, 1680, 1688, 1713, 1727, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1858, 1860, 1868, 1880, 1881, 1885, 1902, 1910, 1923], "try": [3, 4, 5, 8, 9, 13, 15, 16, 17, 19, 20, 28, 40, 42, 49, 50, 54, 57, 62, 66, 67, 82, 83, 949, 1032, 1115, 1124, 1130, 1194, 1195, 1204, 1306, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1465, 1467, 1473, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1849, 1856, 1859, 1862, 1863, 1882, 1885, 1887, 1889, 1890, 1895, 1900, 1903, 1904, 1907, 1908, 1912, 1916], "dispatch": [3, 17, 18, 40, 62, 70, 1194, 1302, 1303, 1862, 1866, 1885, 1887, 1900, 1927], "v8": 3, "verbos": [3, 17, 28, 31, 40, 70, 676, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1856, 1868, 1876, 1900, 1901, 1921], "On": [3, 12, 15, 16, 31, 36, 37, 40, 41, 46, 58, 62, 67, 70, 682, 685, 917, 929, 1236, 1283, 1293, 1349, 1350, 1351, 1352, 1353, 1354, 1374, 1389, 1390, 1391, 1392, 1408, 1431, 1436, 1449, 1601, 1663, 1664, 1673, 1676, 1857, 1859, 1869, 1882, 1884, 1885, 1896, 1904, 1912, 1913, 1914, 1916], "demand": [3, 37, 999, 1861, 1892, 1912], "onemkl": 3, "dump": [3, 17, 21, 28, 70, 963, 1886, 1899], "durat": [3, 17, 28, 40, 54, 57, 1302, 1303, 1872, 1906], "kernel": [3, 4, 5, 12, 16, 17, 18, 20, 28, 29, 31, 34, 40, 62, 69, 735, 736, 737, 738, 739, 768, 769, 770, 966, 968, 969, 1005, 1006, 1038, 1040, 1308, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1369, 1370, 1389, 1390, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1472, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1570, 1611, 1859, 1866, 1870, 1877, 1885, 1887, 1888, 1894, 1896, 1900, 1903, 1906, 1908, 1916], "environ": [3, 4, 8, 13, 17, 28, 31, 32, 34, 36, 38, 46, 48, 50, 55, 60, 70, 676, 1198, 1204, 1391, 1436, 1842, 1856, 1859, 1868, 1882, 1884, 1886, 1891, 1896, 1897, 1899, 1905, 1912], "mkl_verbos": 3, "methodologi": 3, "larg": [3, 4, 8, 9, 12, 17, 28, 37, 40, 70, 88, 676, 854, 959, 961, 1019, 1234, 1252, 1329, 1368, 1472, 1514, 1601, 1688, 1775, 1787, 1857, 1874, 1876, 1877, 1884, 1885, 1889, 1893, 1896, 1898, 1900, 1904, 1905, 1908, 1912, 1916, 1919, 1922], "moreov": [3, 62, 510, 1601, 1676], "investig": [3, 8, 40, 67], "enough": [3, 9, 18, 38, 70, 1200, 1311, 1470, 1789, 1790, 1791, 1792, 1793, 1794, 1842, 1861, 1874, 1877, 1887, 1890, 1903, 1904, 1919, 1927], "scope": [3, 8, 16, 27, 59, 70, 1115, 1460, 1624, 1859, 1861, 1862, 1885, 1889, 1900, 1904, 1914], "second": [3, 6, 12, 21, 31, 34, 40, 44, 48, 50, 57, 59, 68, 70, 682, 685, 687, 690, 756, 790, 870, 871, 872, 880, 888, 904, 905, 917, 921, 922, 924, 925, 926, 929, 962, 974, 1021, 1025, 1039, 1040, 1050, 1052, 1053, 1059, 1067, 1108, 1109, 1120, 1123, 1124, 1125, 1129, 1130, 1132, 1133, 1142, 1145, 1153, 1154, 1155, 1166, 1178, 1211, 1213, 1221, 1257, 1260, 1266, 1267, 1277, 1283, 1287, 1289, 1290, 1292, 1293, 1317, 1322, 1325, 1329, 1335, 1336, 1342, 1350, 1351, 1353, 1354, 1364, 1365, 1372, 1373, 1387, 1390, 1391, 1409, 1413, 1415, 1416, 1436, 1449, 1502, 1504, 1538, 1592, 1624, 1663, 1664, 1667, 1673, 1677, 1688, 1734, 1784, 1792, 1827, 1832, 1834, 1843, 1846, 1849, 1861, 1862, 1882, 1885, 1887, 1888, 1889, 1890, 1893, 1897, 1900, 1906, 1912, 1917, 1921], "verbose_on": 3, "level": [3, 4, 8, 9, 10, 15, 17, 18, 21, 25, 27, 28, 32, 34, 37, 40, 48, 49, 50, 54, 62, 66, 70, 496, 676, 743, 890, 891, 892, 900, 1119, 1134, 1358, 1601, 1857, 1858, 1859, 1862, 1863, 1868, 1872, 1874, 1877, 1880, 1882, 1884, 1887, 1890, 1904, 1906, 1907, 1908, 1912, 1916, 1921, 1925, 1926, 1927], "verbose_off": 3, "dnn": [3, 1884], "onednn": [3, 851, 852, 855, 1191, 1197, 1907], "former": [3, 62, 1391, 1421, 1882], "dnnl_verbos": 3, "verbose_on_cr": 3, "get_opt_einsum": 3, "packag": [3, 8, 9, 13, 33, 38, 46, 66, 69, 1520, 1601, 1856, 1857, 1873, 1887, 1893, 1903, 1910, 1912, 1921, 1924], "els": [3, 8, 12, 13, 15, 27, 37, 40, 42, 46, 48, 49, 57, 70, 599, 756, 920, 1200, 1206, 1387, 1460, 1557, 1570, 1601, 1655, 1663, 1664, 1673, 1674, 1675, 1676, 1730, 1731, 1764, 1770, 1859, 1861, 1863, 1864, 1869, 1874, 1877, 1885, 1887, 1888, 1893, 1894, 1900, 1903, 1904, 1918], "einsum": [3, 1860, 1902], "readthedoc": [3, 1062], "io": [3, 8, 37, 42, 1062, 1196, 1199, 1260, 1391, 1392, 1468, 1570, 1656, 1738, 1899, 1907], "en": [3, 38, 1062, 1891, 1921, 1928], "path_find": [3, 1062], "html": [3, 4, 5, 8, 19, 32, 58, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 949, 1062, 1470, 1842, 1883, 1891, 1893, 1897, 1904, 1921], "calcul": [3, 37, 40, 54, 756, 764, 765, 795, 798, 815, 816, 820, 937, 961, 1050, 1054, 1062, 1066, 1180, 1186, 1244, 1266, 1267, 1269, 1334, 1335, 1336, 1339, 1340, 1341, 1344, 1352, 1353, 1354, 1368, 1373, 1375, 1376, 1384, 1385, 1386, 1393, 1460, 1472, 1473, 1487, 1488, 1489, 1517, 1520, 1531, 1560, 1609, 1620, 1642, 1646, 1648, 1682, 1728, 1752, 1801, 1802, 1832, 1834, 1844, 1845, 1882, 1883, 1886, 1890, 1896, 1899, 1907, 1926], "path": [3, 4, 5, 9, 12, 17, 21, 31, 40, 42, 55, 57, 59, 60, 62, 70, 730, 911, 912, 963, 964, 1062, 1189, 1421, 1437, 1468, 1658, 1856, 1860, 1861, 1882, 1885, 1887, 1891, 1898, 1904, 1906, 1916, 1925], "contract": [3, 13, 21, 1062, 1823, 1857, 1876, 1904], "left": [3, 37, 70, 458, 496, 810, 816, 861, 918, 922, 927, 928, 933, 938, 1062, 1082, 1089, 1103, 1106, 1107, 1111, 1142, 1146, 1147, 1151, 1186, 1187, 1194, 1208, 1229, 1238, 1242, 1246, 1249, 1250, 1251, 1252, 1254, 1266, 1267, 1311, 1329, 1334, 1335, 1336, 1337, 1338, 1349, 1350, 1351, 1368, 1375, 1388, 1389, 1390, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1424, 1425, 1426, 1430, 1431, 1469, 1472, 1473, 1474, 1475, 1520, 1540, 1558, 1606, 1680, 1681, 1694, 1722, 1735, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1803, 1823, 1828, 1843, 1859, 1860, 1862, 1882, 1887, 1893, 1910, 1917], "strategi": [3, 4, 8, 17, 37, 38, 40, 44, 50, 62, 897, 899, 1062, 1122, 1202, 1329, 1601, 1688, 1861, 1888, 1890, 1908], "auto": [3, 16, 40, 63, 82, 83, 1062, 1337, 1338, 1862, 1900, 1921], "greedi": [3, 44, 1062], "doc": [3, 4, 5, 10, 18, 19, 23, 32, 57, 58, 82, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 836, 949, 1130, 1207, 1465, 1466, 1467, 1468, 1842, 1849, 1863, 1874, 1883, 1886, 1887, 1893, 1897, 1900, 1904, 1921], "timer": [4, 43, 1857], "stmt": [4, 1884], "setup": [4, 13, 31, 38, 57, 58, 816, 817, 818, 821, 1130, 1601, 1849, 1884, 1885, 1894, 1912, 1913], "global_setup": 4, "perf_count": 4, "global": [4, 6, 9, 14, 16, 17, 18, 26, 27, 28, 37, 40, 42, 44, 45, 46, 48, 58, 62, 67, 69, 70, 850, 857, 861, 869, 918, 927, 1014, 1021, 1063, 1065, 1075, 1080, 1098, 1116, 1119, 1146, 1147, 1170, 1177, 1189, 1192, 1204, 1208, 1259, 1275, 1421, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1620, 1624, 1652, 1715, 1717, 1719, 1722, 1746, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1854, 1859, 1862, 1863, 1878, 1881, 1887, 1892, 1893, 1895, 1897, 1907, 1912, 1913, 1914, 1916, 1919, 1921], "label": [4, 7, 8, 37, 44, 1062, 1329, 1338, 1344, 1355, 1357, 1381, 1413, 1424, 1425, 1504, 1635, 1681, 1886, 1895, 1897, 1921], "sub_label": 4, "descript": [4, 8, 18, 28, 30, 31, 37, 50, 57, 70, 730, 1160, 1161, 1162, 1234, 1261, 1485, 1706, 1861, 1862, 1885, 1887, 1890, 1892, 1893, 1900, 1928], "env": [4, 17, 28, 40, 46, 50, 55, 57, 58, 60, 70, 1019, 1655, 1886, 1896, 1912], "num_thread": 4, "languag": [4, 31, 50, 1200, 1329, 1464, 1519, 1889], "measur": [4, 46, 54, 965, 1011, 1013, 1220, 1337, 1338, 1355, 1381, 1388, 1412, 1413, 1469, 1470, 1492, 1493, 1551, 1690, 1857, 1885, 1892, 1893, 1903, 1916], "statement": [4, 13, 21, 46, 67, 70, 1190, 1204, 1863, 1882, 1887, 1895, 1898, 1900, 1904, 1910, 1912], "org": [4, 5, 8, 10, 11, 19, 32, 38, 45, 46, 58, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 949, 1261, 1391, 1439, 1440, 1467, 1470, 1645, 1696, 1771, 1856, 1863, 1882, 1883, 1893, 1897, 1899, 1900, 1904, 1921, 1928], "timeit": [4, 1884], "sever": [4, 19, 32, 37, 40, 45, 46, 62, 70, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 949, 1008, 1066, 1164, 1189, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1349, 1350, 1351, 1352, 1353, 1354, 1369, 1370, 1389, 1390, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1538, 1541, 1542, 1544, 1545, 1546, 1601, 1610, 1611, 1613, 1614, 1646, 1657, 1711, 1712, 1752, 1838, 1859, 1881, 1882, 1884, 1885, 1892, 1893, 1900, 1903, 1907, 1912], "kei": [4, 18, 20, 21, 24, 27, 37, 42, 48, 55, 57, 58, 62, 70, 599, 676, 731, 850, 855, 913, 1028, 1118, 1128, 1189, 1204, 1205, 1260, 1421, 1422, 1427, 1431, 1464, 1465, 1466, 1467, 1468, 1570, 1627, 1643, 1857, 1860, 1861, 1862, 1866, 1885, 1887, 1892, 1893, 1898, 1900, 1902, 1903, 1906, 1907, 1910, 1912, 1913, 1918, 1921, 1923, 1925], "awar": [4, 8, 24, 484, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 834, 835, 851, 858, 859, 1468, 1570, 1601, 1811, 1812, 1813, 1814, 1815, 1876, 1882, 1885, 1904, 1910, 1913, 1916], "element": [4, 16, 20, 37, 40, 46, 67, 68, 70, 97, 119, 150, 154, 196, 216, 241, 253, 257, 285, 312, 314, 316, 318, 320, 351, 397, 399, 401, 433, 452, 469, 471, 472, 494, 496, 510, 512, 514, 517, 541, 542, 554, 556, 605, 606, 613, 677, 679, 680, 683, 684, 689, 690, 694, 695, 731, 754, 756, 766, 767, 768, 769, 770, 776, 780, 789, 870, 872, 873, 874, 877, 878, 879, 880, 881, 889, 897, 898, 900, 901, 902, 904, 905, 919, 928, 931, 938, 944, 948, 955, 957, 958, 959, 1005, 1041, 1042, 1043, 1044, 1045, 1046, 1049, 1051, 1052, 1053, 1057, 1059, 1062, 1065, 1067, 1068, 1072, 1092, 1096, 1097, 1099, 1101, 1106, 1108, 1109, 1111, 1115, 1120, 1121, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1142, 1145, 1148, 1149, 1150, 1151, 1166, 1174, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1208, 1210, 1211, 1213, 1230, 1232, 1236, 1247, 1251, 1262, 1263, 1265, 1268, 1270, 1271, 1272, 1273, 1277, 1278, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1309, 1311, 1316, 1317, 1319, 1320, 1321, 1322, 1323, 1333, 1334, 1337, 1338, 1339, 1340, 1341, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1365, 1366, 1368, 1373, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1387, 1388, 1391, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1407, 1410, 1412, 1413, 1414, 1415, 1416, 1420, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1469, 1470, 1472, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1505, 1509, 1512, 1513, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1532, 1533, 1535, 1540, 1544, 1545, 1546, 1550, 1551, 1555, 1556, 1558, 1561, 1562, 1563, 1564, 1565, 1566, 1570, 1571, 1572, 1573, 1574, 1576, 1578, 1580, 1581, 1582, 1583, 1588, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1627, 1628, 1634, 1635, 1637, 1638, 1647, 1648, 1649, 1651, 1659, 1699, 1700, 1703, 1704, 1711, 1712, 1714, 1725, 1728, 1729, 1733, 1735, 1737, 1755, 1758, 1760, 1772, 1773, 1775, 1776, 1780, 1786, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1797, 1801, 1802, 1806, 1817, 1819, 1820, 1824, 1825, 1826, 1828, 1830, 1831, 1832, 1833, 1834, 1836, 1838, 1839, 1840, 1844, 1845, 1846, 1849, 1852, 1860, 1862, 1869, 1877, 1880, 1883, 1884, 1887, 1890, 1896, 1898, 1900, 1903, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1927], "lazili": [4, 33, 42, 965, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1592, 1859], "threadpool": 4, "comparison": [4, 25, 38, 40, 70, 1189, 1204, 1205, 1421, 1659, 1863, 1887, 1923, 1926], "appl": 4, "focu": [4, 17, 21, 1690], "replic": [4, 37, 45, 62, 1142, 1199, 1349, 1350, 1351, 1358, 1368, 1397, 1398, 1399, 1445, 1446, 1447, 1472, 1558, 1585, 1905], "particularli": [4, 15, 37, 38, 59, 1357, 1358, 1428, 1859, 1885], "variat": [4, 28, 46, 1862, 1887, 1903, 1908], "confound": 4, "quantifi": [4, 1470], "nois": [4, 28, 1860, 1897], "median": [4, 46, 173, 1317, 1842, 1860, 1875, 1902], "deviat": [4, 46, 376, 1333, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1460, 1649, 1765, 1770, 1801, 1802, 1880], "merg": [4, 7, 8, 10, 37, 40, 42, 58, 1422, 1427, 1431], "repeat": [4, 46, 67, 491, 961, 1062, 1252, 1278, 1417, 1418, 1419, 1492, 1493, 1696, 1728, 1787, 1807, 1808, 1824, 1858, 1860, 1862, 1902, 1906, 1909, 1916], "autorang": 4, "exact": [4, 16, 17, 19, 24, 28, 31, 37, 48, 59, 338, 737, 738, 739, 791, 870, 871, 872, 904, 905, 949, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1289, 1353, 1391, 1468, 1531, 1570, 1601, 1691, 1781, 1880, 1886, 1895, 1916, 1927], "discuss": [4, 6, 9, 10, 11, 17, 18, 25, 46, 70, 1382, 1869, 1882, 1887, 1893, 1897, 1912, 1914, 1916], "docstr": [4, 31, 70, 857, 858, 1189, 1421, 1856, 1885], "adapt": [4, 15, 762, 763, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1359, 1479, 1480, 1481, 1482, 1483, 1484, 1655, 1661, 1662, 1673, 1675, 1682, 1885], "field": [4, 8, 21, 27, 28, 40, 44, 48, 50, 54, 55, 70, 822, 889, 1187, 1189, 1329, 1337, 1338, 1355, 1357, 1381, 1387, 1388, 1412, 1413, 1421, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1485, 1492, 1493, 1503, 1520, 1532, 1555, 1563, 1634, 1671, 1677, 1872, 1882, 1886, 1895, 1900, 1912, 1913, 1921], "displai": [4, 17, 28, 34, 1007, 1020, 1531, 1589, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1856, 1863, 1868, 1871, 1900, 1921, 1923], "instruct": [4, 5, 16, 17, 21, 28, 29, 31, 59, 69, 1859, 1862, 1896, 1900, 1923], "count": [4, 21, 37, 46, 54, 70, 920, 960, 1001, 1115, 1150, 1151, 1187, 1226, 1227, 1634, 1839, 1840, 1860, 1872, 1885, 1902, 1906, 1912, 1914, 1916], "wall": 4, "callgrind": 4, "analog": [4, 15, 21, 70, 690, 1045, 1083, 1085, 1164, 1238, 1391, 1676, 1807, 1824, 1877, 1893], "constructor": [4, 31, 37, 38, 44, 62, 70, 820, 857, 858, 1329, 1426, 1431, 1432, 1449, 1474, 1475, 1601, 1641, 1782, 1857, 1859, 1862, 1863, 1885, 1886, 1893, 1912, 1916, 1918, 1919, 1922, 1928], "snippet": [4, 21, 58, 1856, 1893, 1898], "loop": [4, 12, 16, 21, 22, 27, 38, 59, 63, 67, 68, 70, 858, 859, 903, 1008, 1011, 1013, 1124, 1130, 1204, 1601, 1611, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1849, 1859, 1860, 1862, 1872, 1884, 1885, 1889, 1890, 1893, 1896, 1900, 1903, 1906, 1907, 1921], "default_tim": 4, "summar": [4, 5, 21, 28, 58, 1755, 1862, 1877, 1916], "relu": [4, 13, 20, 27, 28, 38, 67, 68, 70, 696, 697, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 761, 788, 789, 810, 850, 856, 1005, 1120, 1130, 1200, 1421, 1436, 1438, 1449, 1457, 1464, 1466, 1468, 1567, 1568, 1592, 1658, 1849, 1858, 1859, 1860, 1870, 1876, 1877, 1880, 1882, 1893, 1898, 1900, 1902, 1907, 1909, 1910], "readabl": [4, 28, 30, 37, 55, 70, 1007, 1020, 1821, 1900, 1903, 1927], "supplement": 4, "disambigu": [4, 28, 55, 70, 1266], "ident": [4, 16, 28, 31, 37, 40, 46, 62, 70, 784, 810, 904, 905, 1050, 1226, 1227, 1228, 1229, 1242, 1254, 1257, 1261, 1278, 1316, 1317, 1333, 1359, 1560, 1608, 1610, 1846, 1852, 1863, 1880, 1896, 1897, 1904, 1909, 1916], "easi": [4, 13, 21, 25, 28, 37, 42, 57, 1859, 1882, 1889, 1892, 1893, 1895, 1904, 1907, 1912, 1913, 1916], "differenti": [4, 46, 63, 68, 150, 351, 585, 798, 885, 887, 889, 891, 892, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 946, 1008, 1123, 1124, 1125, 1129, 1203, 1235, 1236, 1247, 1278, 1343, 1344, 1364, 1522, 1556, 1601, 1613, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1842, 1857, 1869, 1887, 1889, 1890, 1900, 1903, 1912, 1922, 1924], "distinguish": [4, 1907, 1916], "princip": [4, 1235, 1696], "signal": [4, 18, 29, 42, 48, 57, 59, 734, 735, 736, 762, 763, 778, 779, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1186, 1251, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1349, 1350, 1351, 1369, 1370, 1389, 1390, 1409, 1414, 1415, 1416, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1495, 1498, 1515, 1516, 1538, 1541, 1542, 1544, 1545, 1546, 1803, 1857, 1874, 1895, 1906, 1912], "form": [4, 8, 10, 14, 27, 29, 37, 40, 46, 56, 57, 58, 62, 67, 70, 756, 775, 781, 940, 1050, 1090, 1092, 1189, 1228, 1231, 1236, 1247, 1252, 1327, 1328, 1331, 1332, 1344, 1369, 1370, 1373, 1391, 1421, 1436, 1472, 1473, 1504, 1515, 1516, 1519, 1531, 1558, 1589, 1613, 1676, 1694, 1823, 1856, 1859, 1863, 1877, 1882, 1887, 1893, 1900, 1904, 1907, 1921], "treat": [4, 18, 23, 27, 46, 56, 65, 70, 320, 469, 789, 904, 905, 1005, 1118, 1241, 1244, 1246, 1258, 1260, 1270, 1271, 1272, 1273, 1290, 1319, 1365, 1375, 1393, 1425, 1426, 1427, 1428, 1431, 1449, 1454, 1512, 1601, 1643, 1647, 1682, 1735, 1803, 1817, 1824, 1861, 1862, 1875, 1882, 1912, 1916, 1919, 1926], "distinct": [4, 1118, 1224, 1225, 1269, 1862, 1887, 1898, 1912, 1913], "workload": [4, 9, 37, 40, 62, 1008, 1885, 1892, 1896, 1912], "good": [4, 8, 9, 16, 19, 21, 24, 31, 62, 70, 88, 949, 1122, 1429, 1771, 1856, 1866, 1874, 1887, 1892, 1893, 1900, 1904, 1905, 1907], "intrins": [4, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 788, 789, 1908, 1909], "contrast": [4, 46, 48, 756, 1373, 1676, 1858, 1880, 1882, 1888, 1916], "blocked_autorang": 4, "callback": [4, 38, 57, 59, 69, 70, 1601, 1872, 1892, 1906, 1912], "min_run_tim": 4, "minimum": [4, 31, 38, 48, 57, 58, 692, 693, 767, 791, 816, 817, 818, 821, 822, 871, 920, 1042, 1109, 1149, 1150, 1151, 1291, 1344, 1380, 1470, 1680, 1681, 1688, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1858, 1860, 1880, 1882, 1890, 1902, 1910, 1919], "At": [4, 6, 7, 8, 14, 17, 21, 28, 32, 37, 1096, 1340, 1349, 1350, 1351, 1352, 1353, 1354, 1389, 1390, 1870, 1877, 1884, 1890, 1907, 1912, 1917], "high": [4, 5, 8, 9, 10, 11, 12, 17, 21, 22, 28, 32, 38, 40, 46, 48, 54, 56, 58, 70, 119, 1344, 1467, 1717, 1718, 1750, 1858, 1860, 1872, 1874, 1890, 1891, 1893, 1894, 1903, 1907, 1908, 1912, 1916, 1921, 1922, 1923, 1926], "pseudo": [4, 88], "total_tim": 4, "block_siz": 4, "choic": [4, 9, 10, 15, 17, 28, 40, 1204, 1252, 1422, 1431, 1713, 1884, 1900, 1910, 1916], "block": [4, 8, 9, 37, 40, 44, 45, 57, 59, 69, 70, 579, 580, 581, 928, 965, 1019, 1209, 1261, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1397, 1398, 1399, 1400, 1401, 1402, 1424, 1472, 1514, 1588, 1601, 1789, 1790, 1791, 1859, 1861, 1862, 1872, 1874, 1878, 1882, 1885, 1886, 1890, 1900, 1907, 1912, 1916], "qualiti": [4, 8, 38], "balanc": [4, 19, 88, 949], "compet": 4, "statist": [4, 17, 28, 38, 40, 46, 795, 796, 816, 817, 818, 820, 821, 974, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1039, 1040, 1266, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1872, 1882, 1889, 1903, 1905, 1907, 1910], "amort": 4, "invoc": [4, 6, 12, 21, 70, 837, 1192, 1204, 1859, 1862, 1885, 1887, 1892, 1900, 1912, 1914], "less": [4, 7, 8, 17, 31, 37, 38, 40, 46, 48, 59, 363, 676, 897, 899, 904, 905, 961, 1015, 1032, 1062, 1106, 1110, 1115, 1118, 1213, 1225, 1261, 1277, 1278, 1329, 1382, 1435, 1452, 1458, 1637, 1726, 1832, 1834, 1856, 1860, 1862, 1877, 1885, 1887, 1895, 1896, 1902, 1905, 1907], "bias": [4, 38, 730, 756, 790, 1339, 1340, 1341, 1373, 1374, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1436, 1438, 1460], "trivial": [4, 16, 48, 50, 731, 939, 1608, 1900, 1914], "low": [4, 8, 34, 38, 46, 62, 496, 900, 1134, 1344, 1696, 1713, 1717, 1718, 1735, 1808, 1858, 1860, 1872, 1874, 1885, 1906, 1923, 1927], "digit": [4, 1755, 1856, 1871, 1892, 1896], "microsecond": [4, 1885], "bia": [4, 10, 40, 45, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 745, 747, 748, 749, 750, 752, 756, 757, 760, 761, 768, 769, 770, 777, 788, 1128, 1189, 1198, 1329, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1373, 1374, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1421, 1427, 1436, 1437, 1438, 1490, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1521, 1530, 1534, 1537, 1592, 1601, 1608, 1609, 1623, 1625, 1627, 1642, 1645, 1710, 1858, 1860, 1870, 1887, 1893, 1898, 1907, 1909, 1921], "period": [4, 10, 44, 57, 918, 927, 974, 1007, 1020, 1021, 1025, 1039, 1040, 1082, 1146, 1147, 1208, 1692, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1860, 1872, 1895], "until": [4, 8, 17, 37, 38, 40, 44, 48, 57, 62, 69, 70, 484, 965, 966, 968, 999, 1115, 1209, 1261, 1302, 1303, 1520, 1592, 1601, 1679, 1685, 1824, 1874, 1880, 1885, 1889, 1900, 1906, 1912, 1914], "overal": [4, 10, 37, 40, 57, 904, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1467, 1882, 1884, 1885, 1895, 1908], "repetit": [4, 1728, 1824], "collect_callgrind": 4, "collect_baselin": 4, "retain_out_fil": 4, "callgrindstat": [4, 1857], "modulo": [4, 46, 1110, 1726], "determin": [4, 6, 9, 15, 16, 17, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 46, 48, 55, 57, 62, 67, 70, 819, 822, 897, 899, 904, 905, 918, 927, 934, 939, 1009, 1064, 1083, 1093, 1117, 1118, 1146, 1147, 1150, 1151, 1202, 1222, 1234, 1245, 1248, 1269, 1283, 1365, 1369, 1370, 1391, 1427, 1430, 1436, 1512, 1515, 1516, 1531, 1564, 1589, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1643, 1653, 1688, 1716, 1718, 1720, 1747, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1855, 1862, 1863, 1876, 1885, 1886, 1887, 1893, 1900, 1904, 1907, 1912, 1914, 1918, 1919, 1921, 1923], "itself": [4, 6, 8, 9, 13, 16, 21, 28, 40, 41, 62, 68, 70, 689, 695, 875, 961, 1123, 1124, 1189, 1200, 1204, 1421, 1454, 1576, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1859, 1874, 1893, 1897, 1900, 1904, 1912, 1916, 1920], "jitter": 4, "interpret": [4, 21, 37, 40, 44, 46, 48, 57, 59, 75, 775, 781, 876, 903, 1018, 1083, 1084, 1085, 1090, 1092, 1093, 1094, 1095, 1115, 1139, 1151, 1189, 1194, 1200, 1204, 1241, 1261, 1361, 1520, 1531, 1532, 1589, 1747, 1753, 1856, 1861, 1862, 1874, 1884, 1885, 1900, 1916, 1918, 1920], "ideal": [4, 17, 56, 58, 1204, 1677, 1876], "analysi": [4, 13, 16, 25, 38, 46, 70, 1208, 1696, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1863, 1893, 1901, 1926], "valgrind": 4, "degrad": [4, 31, 1884, 1886, 1887, 1916], "amelior": 4, "suffici": [4, 17, 28, 31, 38, 46, 49, 57, 62, 1663, 1664, 1856, 1916, 1919], "obtain": [4, 37, 40, 46, 50, 69, 70, 493, 914, 1134, 1306, 1344, 1428, 1504, 1601, 1696, 1713, 1808, 1862, 1874, 1875, 1884, 1897, 1900, 1903, 1906, 1907], "callgrind_control": 4, "callgrind_annot": 4, "boundari": [4, 17, 70, 775, 781, 933, 1142, 1346, 1347, 1348, 1442, 1443, 1444, 1445, 1446, 1447, 1473, 1476, 1477, 1478, 1531, 1589, 1682, 1688, 1742, 1860, 1886, 1904, 1905, 1912], "caller": [4, 48, 57, 70, 850, 1189, 1421, 1468, 1597, 1598, 1882, 1885, 1912, 1914], "structur": [4, 6, 10, 15, 18, 23, 37, 38, 40, 47, 48, 50, 58, 62, 70, 888, 1113, 1125, 1130, 1204, 1421, 1620, 1624, 1659, 1696, 1808, 1849, 1861, 1863, 1869, 1872, 1877, 1885, 1886, 1887, 1888, 1895, 1898, 1899, 1900, 1901, 1903, 1904, 1912, 1916, 1921, 1922, 1923, 1924, 1926], "restrict": [4, 9, 15, 37, 46, 62, 67, 68, 1260, 1283, 1357, 1861, 1862, 1863, 1876, 1877, 1882, 1885, 1890, 1905, 1907], "builtin": [4, 17, 28, 40, 70, 1201, 1260, 1722, 1859, 1861, 1863, 1912, 1914], "surpris": [4, 9, 16, 62, 1856, 1890, 1896], "serial": [4, 32, 37, 40, 42, 44, 57, 1189, 1198, 1199, 1260, 1421, 1592, 1655, 1656, 1738, 1856, 1857, 1860, 1871, 1876, 1882, 1885, 1892, 1893, 1895, 1904, 1907, 1913], "subsequ": [4, 8, 12, 17, 21, 31, 32, 40, 70, 966, 1189, 1200, 1204, 1349, 1350, 1351, 1352, 1353, 1354, 1421, 1449, 1597, 1598, 1885, 1897, 1900, 1912, 1916], "deseri": [4, 42, 1260, 1592, 1856, 1871], "globalsbridg": 4, "care": [4, 8, 12, 16, 17, 18, 28, 31, 40, 46, 62, 69, 70, 1083, 1085, 1421, 1874, 1884, 1885, 1886, 1887, 1889, 1893, 1895, 1898, 1900, 1912, 1916], "reli": [4, 10, 16, 17, 18, 31, 37, 38, 48, 50, 62, 70, 150, 889, 904, 1062, 1358, 1677, 1882, 1884, 1886, 1887, 1897, 1898, 1916, 1920], "pickl": [4, 37, 38, 40, 1189, 1260, 1421, 1738, 1856, 1871, 1874, 1898, 1904], "transfer": [4, 37, 40, 1870, 1874, 1885, 1891, 1893, 1904, 1912], "properli": [4, 8, 37, 38, 42, 44, 48, 57, 62, 69, 1083, 1084, 1085, 1093, 1094, 1095, 1290, 1422, 1423, 1431, 1432, 1601, 1856, 1869, 1887, 1890, 1893, 1895, 1898, 1912, 1913, 1919], "profil": [4, 5, 17, 19, 54, 70, 949, 1202, 1595, 1596, 1597, 1598, 1755, 1857, 1902, 1912], "drive": [4, 10, 21, 40, 1882], "facil": [4, 1260, 1874], "analyz": [4, 5, 28, 34, 70, 1886, 1887, 1896], "manipul": [4, 27, 62, 69, 1193, 1857, 1881, 1889, 1893, 1905, 1910], "1000000": [4, 1660], "mirror": [4, 139], "semant": [4, 10, 33, 40, 57, 58, 62, 70, 150, 790, 870, 871, 872, 889, 903, 931, 968, 1019, 1119, 1130, 1193, 1199, 1258, 1338, 1493, 1564, 1677, 1840, 1849, 1857, 1861, 1862, 1866, 1869, 1877, 1888, 1893, 1900, 1916], "number_per_run": 4, "raw_tim": 4, "task_spec": 4, "serializ": [4, 38, 1859], "consum": [4, 21, 37, 42, 47, 59, 69, 433, 1062, 1874, 1885, 1895, 1900, 1901, 1921], "extrapol": 4, "sinc": [4, 8, 12, 17, 21, 23, 27, 28, 37, 38, 40, 45, 46, 50, 59, 62, 70, 314, 530, 743, 781, 789, 804, 805, 939, 1011, 1013, 1015, 1062, 1102, 1103, 1104, 1118, 1186, 1189, 1194, 1199, 1202, 1278, 1337, 1364, 1417, 1418, 1419, 1421, 1473, 1485, 1520, 1522, 1589, 1592, 1595, 1624, 1643, 1648, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1688, 1803, 1859, 1860, 1861, 1862, 1868, 1870, 1872, 1877, 1881, 1882, 1885, 1887, 1888, 1889, 1890, 1892, 1893, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1922, 1923], "properti": [4, 14, 15, 16, 37, 40, 41, 42, 46, 49, 54, 57, 62, 70, 788, 876, 908, 914, 992, 1078, 1079, 1081, 1083, 1084, 1085, 1093, 1094, 1095, 1189, 1333, 1454, 1576, 1592, 1602, 1603, 1604, 1634, 1655, 1857, 1862, 1866, 1872, 1882, 1885, 1890, 1903, 1906, 1912, 1916, 1918, 1919, 1922, 1924, 1927, 1928], "significant_figur": 4, "figur": [4, 8, 9, 17, 42, 70, 1884, 1886, 1900, 1905, 1914, 1921, 1926], "intend": [4, 57, 62, 70, 886, 895, 970, 1208, 1485, 1595, 1596, 1597, 1598, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1677, 1862, 1877, 1880, 1882, 1893, 1904], "interquartil": 4, "mitig": 4, "tail": [4, 37, 55], "645": 4, "trim_sigfig": 4, "human": [4, 30, 55, 1007, 1020, 1880, 1900, 1927], "raw": [4, 70, 1115, 1247, 1885, 1904], "built_with_debug_symbol": 4, "baseline_inclusive_stat": 4, "baseline_exclusive_stat": 4, "stmt_inclusive_stat": 4, "stmt_exclusive_stat": 4, "stmt_callgrind_out": 4, "done": [4, 13, 15, 16, 21, 24, 27, 32, 37, 40, 42, 45, 46, 48, 55, 62, 69, 70, 493, 676, 756, 904, 1079, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1097, 1099, 1204, 1278, 1339, 1340, 1341, 1358, 1361, 1373, 1384, 1385, 1386, 1403, 1404, 1405, 1406, 1431, 1460, 1466, 1468, 1601, 1798, 1862, 1866, 1870, 1874, 1882, 1884, 1885, 1886, 1888, 1889, 1893, 1896, 1900, 1903, 1905, 1907, 1908, 1912, 1914], "functioncount": [4, 1857], "stat": [4, 17, 28, 65, 822, 832, 833, 1019, 1026, 1027, 1028, 1460, 1601, 1872, 1885, 1925], "as_standard": 4, "strip": [4, 1522, 1601, 1859, 1902], "prefix": [4, 40, 42, 57, 62, 744, 753, 1189, 1421, 1601, 1856, 1868, 1882, 1900, 1904, 1925], "stumbl": 4, "filepath": 4, "dif": 4, "compon": [4, 8, 10, 13, 18, 21, 28, 32, 34, 40, 46, 70, 676, 904, 1082, 1083, 1085, 1093, 1094, 1095, 1228, 1464, 1465, 1466, 1467, 1468, 1592, 1696, 1803, 1847, 1848, 1863, 1868, 1882, 1886, 1892, 1893, 1905, 1916], "locat": [4, 10, 12, 16, 17, 31, 40, 46, 54, 150, 154, 253, 510, 931, 933, 977, 1041, 1042, 1210, 1260, 1286, 1291, 1294, 1311, 1358, 1368, 1455, 1472, 1485, 1520, 1585, 1588, 1601, 1613, 1707, 1742, 1764, 1785, 1788, 1842, 1856, 1859, 1871, 1885, 1900, 1904, 1906, 1912, 1914, 1916, 1921, 1925], "resembl": [4, 32], "23234231": 4, "first_build_dir": 4, "foo": [4, 12, 19, 31, 40, 54, 55, 69, 70, 820, 850, 855, 949, 1118, 1119, 1128, 1187, 1192, 1196, 1199, 1200, 1203, 1204, 1643, 1856, 1859, 1861, 1862, 1866, 1887, 1893, 1900, 1904, 1923], "9823794": 4, "bar": [4, 8, 21, 54, 70, 850, 855, 961, 1118, 1192, 1199, 1801, 1802, 1844, 1845, 1856, 1859, 1861, 1871, 1893, 1900, 1904, 1923], "53453": 4, "function_that_actually_chang": 4, "second_build_dir": 4, "cancel": [4, 1186], "site": [4, 8], "denois": 4, "explan": [4, 10, 17, 18, 24, 28, 50, 858, 1189, 1421, 1857, 1886, 1887, 1893], "delta": [4, 46, 756, 1373, 1382, 1391, 1452, 1529, 1661, 1801, 1802, 1828, 1844, 1845, 1860, 1880], "inclus": [4, 46, 88, 510, 1149, 1151, 1259, 1275, 1281, 1717, 1718, 1800, 1911, 1923], "diff": [4, 8, 1859, 1860, 1902], "unit": [4, 12, 29, 31, 46, 48, 58, 62, 70, 756, 757, 1080, 1098, 1333, 1343, 1363, 1366, 1371, 1372, 1373, 1374, 1439, 1440, 1450, 1485, 1509, 1513, 1518, 1519, 1565, 1573, 1617, 1618, 1622, 1625, 1627, 1630, 1830, 1882, 1884, 1890, 1904], "next": [4, 14, 17, 20, 21, 26, 37, 40, 46, 57, 62, 70, 556, 756, 1193, 1325, 1374, 1392, 1438, 1601, 1636, 1874, 1881, 1882, 1884, 1888, 1893, 1895, 1905, 1906, 1912, 1913, 1916, 1919, 1921], "logic": [4, 6, 21, 31, 37, 45, 60, 62, 70, 921, 923, 924, 926, 1079, 1081, 1084, 1085, 1087, 1088, 1091, 1092, 1094, 1095, 1097, 1099, 1119, 1193, 1270, 1271, 1272, 1273, 1283, 1427, 1601, 1705, 1732, 1815, 1862, 1863, 1885, 1886, 1887, 1888, 1890, 1907], "question": [4, 11, 16, 22, 37, 70, 1857, 1882], "why": [4, 8, 16, 37, 62, 67, 70, 1062, 1193, 1570, 1857, 1869, 1888], "involv": [4, 6, 8, 10, 15, 16, 22, 29, 37, 40, 62, 65, 67, 70, 1601, 1862, 1875, 1877, 1882, 1885, 1886, 1889, 1893, 1900, 1912, 1913, 1914, 1916], "look": [4, 5, 8, 9, 10, 12, 13, 15, 17, 18, 21, 24, 27, 28, 32, 40, 46, 56, 57, 64, 67, 70, 858, 897, 899, 1189, 1283, 1329, 1421, 1511, 1626, 1677, 1789, 1790, 1791, 1793, 1794, 1859, 1861, 1875, 1881, 1882, 1885, 1888, 1892, 1893, 1895, 1899, 1900, 1904, 1907, 1912, 1913, 1926], "autom": [4, 9, 17, 28, 70, 1859, 1907], "easili": [4, 8, 9, 20, 27, 28, 29, 38, 40, 1119, 1428, 1520, 1558, 1677, 1735, 1888, 1890, 1893, 1898, 1903, 1911, 1914, 1921], "exclus": [4, 37, 40, 46, 48, 57, 70, 731, 1151, 1601, 1717, 1718, 1721, 1882, 1923], "basi": [4, 10, 11, 46, 1261, 1682, 1885, 1892, 1907, 1912], "thought": [4, 54, 70, 1080, 1082, 1098], "path_and_function_nam": 4, "children": [4, 50, 62, 70, 787, 1189, 1421, 1874, 1893, 1904, 1914], "identifi": [4, 8, 10, 15, 21, 40, 48, 51, 54, 57, 58, 59, 70, 813, 1151, 1260, 1460, 1863, 1874, 1883, 1892, 1893, 1904, 1912, 1913, 1914, 1921], "hot": [4, 21, 46, 1522, 1557, 1890], "spot": 4, "_data": 4, "truncate_row": 4, "_linewidth": 4, "subtract": [4, 312, 560, 861, 1115, 1522, 1789, 1790, 1791, 1793, 1794, 1804, 1860, 1877, 1902, 1916], "cpython": [4, 25, 70], "known": [4, 8, 10, 15, 18, 28, 36, 40, 44, 51, 63, 66, 68, 1125, 1126, 1204, 1205, 1260, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1391, 1436, 1450, 1452, 1472, 1531, 1573, 1592, 1763, 1764, 1821, 1857, 1860, 1864, 1872, 1874, 1877, 1880, 1882, 1884, 1897, 1900, 1903, 1914, 1917], "quit": [4, 8, 70, 1862, 1887, 1889, 1904, 1912], "noisi": 4, "higher": [4, 8, 9, 15, 38, 40, 62, 63, 68, 150, 889, 890, 903, 968, 1008, 1019, 1054, 1120, 1126, 1130, 1149, 1166, 1318, 1357, 1413, 1428, 1570, 1707, 1808, 1849, 1857, 1885, 1887, 1888, 1890, 1892, 1907, 1908, 1912, 1919], "filter": [4, 28, 540, 768, 769, 770, 1186, 1208, 1349, 1350, 1351, 1352, 1353, 1354, 1495, 1496, 1497, 1498, 1499, 1500, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1803, 1862, 1904], "rather": [4, 9, 10, 12, 13, 16, 20, 21, 31, 40, 48, 50, 59, 70, 775, 781, 913, 939, 1187, 1190, 1321, 1485, 1520, 1531, 1589, 1609, 1755, 1859, 1862, 1876, 1877, 1883, 1885, 1887, 1888, 1900, 1904, 1907, 1912, 1916, 1921], "unicod": [4, 1863], "lookup": [4, 21, 42, 46, 1364, 1511, 1859, 1863, 1884, 1913], "agnost": [4, 57, 1520, 1876], "reliabl": [4, 22], "warrant": 4, "filter_fn": 4, "map_fn": 4, "coalesc": [4, 17, 21, 322, 327, 540, 610, 976, 1788, 1838, 1860, 1886, 1902, 1916], "finit": [5, 46, 904, 905, 1178, 1179, 1224, 1225, 1235, 1236, 1252, 1278, 1311, 1315, 1337, 1807, 1887, 1890, 1923], "natur": [5, 8, 9, 29, 40, 46, 62, 904, 905, 1217, 1222, 1248, 1262, 1264, 1269, 1329, 1468, 1570, 1890, 1916, 1917], "against": [5, 24, 31, 40, 48, 57, 790, 861, 904, 905, 1090, 1091, 1092, 1096, 1097, 1099, 1131, 1180, 1189, 1204, 1205, 1421, 1427, 1658, 1856, 1862, 1904, 1926], "cprofil": 5, "correct": [5, 7, 8, 27, 38, 40, 41, 42, 46, 57, 205, 206, 209, 221, 551, 576, 599, 600, 611, 893, 905, 961, 1083, 1085, 1093, 1094, 1095, 1163, 1187, 1190, 1204, 1205, 1224, 1358, 1375, 1387, 1592, 1601, 1634, 1754, 1801, 1802, 1844, 1845, 1858, 1859, 1860, 1861, 1875, 1876, 1885, 1887, 1890, 1918], "launch": [5, 12, 20, 31, 37, 43, 48, 49, 50, 55, 56, 57, 60, 69, 966, 1601, 1857, 1882, 1884, 1885, 1886, 1912], "spent": [5, 17, 28, 40, 914, 1688, 1884, 1893], "appear": [5, 26, 38, 40, 46, 70, 850, 1008, 1062, 1103, 1104, 1130, 1260, 1294, 1296, 1597, 1602, 1728, 1757, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1849, 1859, 1862, 1875, 1876, 1887, 1888, 1893, 1900, 1904], "extrem": [5, 16, 21, 1601, 1882, 1900], "expens": [5, 15, 17, 24, 28, 37, 46, 62, 1608, 1885, 1890, 1892, 1906, 1912, 1922], "bound": [5, 15, 16, 28, 32, 38, 62, 479, 791, 933, 944, 1076, 1077, 1189, 1334, 1335, 1336, 1414, 1415, 1416, 1421, 1439, 1520, 1690, 1721, 1742, 1862, 1863, 1880, 1882, 1904, 1907, 1917], "greater": [5, 40, 57, 291, 613, 676, 938, 939, 944, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1133, 1145, 1243, 1306, 1337, 1469, 1520, 1531, 1557, 1570, 1589, 1609, 1642, 1842, 1860, 1882, 1885, 1897, 1902, 1917], "spend": [5, 8, 1261], "sens": [5, 18, 46, 57, 70, 1624, 1839, 1840, 1862, 1882], "respons": [5, 8, 10, 16, 40, 42, 44, 46, 48, 54, 59, 62, 69, 966, 1409, 1538, 1601, 1882, 1885, 1887, 1888, 1893, 1912], "Of": [5, 1647, 1856, 1886, 1887], "cours": [5, 17, 21, 70, 1856, 1886, 1887, 1912], "realiti": 5, "complic": [5, 16, 38, 70, 789, 1866, 1876, 1883, 1904, 1912, 1914], "depend": [5, 6, 12, 13, 15, 16, 17, 20, 21, 23, 26, 27, 31, 37, 40, 44, 46, 48, 57, 58, 59, 62, 70, 314, 781, 874, 974, 1021, 1025, 1039, 1040, 1083, 1085, 1093, 1094, 1095, 1120, 1124, 1129, 1200, 1204, 1224, 1225, 1252, 1278, 1283, 1337, 1338, 1355, 1357, 1365, 1368, 1381, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1472, 1473, 1485, 1492, 1493, 1503, 1512, 1520, 1532, 1555, 1563, 1570, 1589, 1592, 1601, 1613, 1614, 1620, 1655, 1682, 1694, 1696, 1713, 1729, 1789, 1790, 1791, 1793, 1794, 1807, 1830, 1852, 1856, 1859, 1861, 1862, 1869, 1874, 1882, 1884, 1885, 1887, 1888, 1890, 1893, 1900, 1906, 1907, 1912, 1916, 1922, 1923], "could": [5, 6, 8, 9, 13, 17, 18, 23, 28, 37, 40, 46, 48, 57, 62, 67, 69, 70, 579, 580, 581, 583, 584, 1001, 1083, 1085, 1093, 1094, 1095, 1186, 1219, 1260, 1278, 1302, 1303, 1681, 1784, 1839, 1861, 1862, 1869, 1874, 1882, 1885, 1886, 1899, 1900, 1904, 1907, 1908, 1912, 1913, 1914, 1916, 1920, 1921], "account": [5, 12, 55, 70, 1601, 1880, 1884, 1916], "heavili": [5, 1666, 1884, 1887, 1904], "similarli": [5, 8, 12, 16, 20, 69, 70, 756, 786, 790, 854, 940, 1082, 1189, 1244, 1421, 1597, 1598, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1831, 1832, 1833, 1834, 1861, 1882, 1887, 1889, 1890, 1896, 1916], "platform": [5, 9, 10, 31, 40, 49, 50, 54, 1235, 1236, 1247, 1706, 1807, 1870, 1891, 1896, 1897, 1907], "startup": 5, "slower": [5, 16, 31, 40, 872, 898, 1102, 1103, 1104, 1218, 1225, 1539, 1608, 1887, 1897, 1903, 1917], "rerun": [6, 40, 1885], "segment": [6, 17, 23, 1019, 1115, 1452, 1904], "persist": [6, 12, 16, 35, 42, 62, 756, 811, 812, 813, 1189, 1373, 1391, 1421, 1436, 1885, 1893, 1898, 1899], "rng": [6, 37, 994, 1033, 1743, 1885, 1897, 1911], "advanc": [6, 17, 32, 37, 38, 48, 1464, 1466, 1468, 1647, 1656, 1866, 1869, 1876, 1885, 1891, 1895, 1920, 1921], "juggl": 6, "dropout": [6, 45, 70, 730, 731, 756, 1189, 1333, 1360, 1361, 1362, 1366, 1373, 1391, 1421, 1427, 1436, 1437, 1464, 1466, 1468, 1486, 1506, 1507, 1508, 1513, 1570, 1857, 1860, 1870, 1876, 1877, 1882, 1885, 1902, 1909], "moder": 6, "hit": [6, 9, 12, 17, 28, 31, 1601, 1856, 1885], "preserve_rng_st": 6, "checkpoint_sequenti": [6, 1857], "omit": [6, 31, 40, 58, 1096, 1097, 1099, 1375, 1435, 1899, 1900, 1912, 1923], "_infer_device_typ": 6, "remain": [6, 9, 46, 57, 70, 1296, 1364, 1365, 1511, 1512, 1592, 1601, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1707, 1729, 1872, 1874, 1881, 1889, 1893], "consequ": [6, 67, 1252, 1391, 1807, 1862, 1882, 1885, 1897], "random": [6, 17, 28, 46, 48, 57, 58, 63, 70, 88, 154, 756, 888, 919, 994, 995, 1000, 1009, 1010, 1029, 1030, 1033, 1034, 1123, 1130, 1141, 1165, 1261, 1281, 1300, 1301, 1305, 1307, 1333, 1344, 1366, 1373, 1391, 1439, 1513, 1563, 1568, 1592, 1609, 1615, 1621, 1622, 1629, 1630, 1649, 1696, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1743, 1756, 1808, 1849, 1856, 1857, 1860, 1868, 1880, 1888, 1890, 1896, 1900, 1902, 1921], "gradient": [6, 17, 29, 37, 38, 40, 44, 46, 62, 63, 66, 150, 221, 222, 289, 334, 485, 492, 510, 691, 692, 876, 885, 887, 889, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 920, 946, 1066, 1118, 1119, 1120, 1121, 1125, 1130, 1131, 1164, 1189, 1224, 1225, 1228, 1235, 1236, 1252, 1261, 1278, 1280, 1286, 1289, 1291, 1337, 1344, 1352, 1353, 1354, 1357, 1358, 1364, 1365, 1375, 1389, 1390, 1421, 1428, 1452, 1503, 1504, 1511, 1512, 1522, 1531, 1539, 1541, 1542, 1555, 1589, 1590, 1591, 1597, 1598, 1601, 1602, 1605, 1606, 1608, 1613, 1646, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1694, 1752, 1788, 1807, 1849, 1857, 1859, 1860, 1869, 1876, 1877, 1880, 1885, 1886, 1887, 1889, 1890, 1893, 1896, 1902, 1903, 1912, 1913, 1916], "among": [6, 16, 37, 38, 40, 44, 46, 57, 975, 976, 979, 1151, 1358, 1649, 1862], "detect": [6, 15, 17, 28, 31, 33, 34, 37, 40, 41, 48, 50, 62, 897, 898, 899, 900, 901, 902, 1119, 1193, 1465, 1467, 1601, 1842, 1857, 1874, 1877, 1885, 1890, 1896, 1900, 1904, 1912], "priorit": [6, 1122, 1123, 1125, 1663, 1664, 1916], "defaultdevicetyp": 6, "anticip": 6, "belong": [6, 21, 27, 40, 42, 44, 46, 54, 70, 933, 968, 1678, 1856, 1885, 1903, 1927], "use_reentr": 6, "context_fn": 6, "noop_context_fn": 6, "techniqu": [6, 21, 28, 70, 1359, 1615, 1828, 1878, 1893, 1903, 1905, 1907], "intermedi": [6, 15, 16, 31, 47, 67, 70, 930, 1113, 1119, 1126, 1278, 1365, 1464, 1466, 1468, 1512, 1859, 1862, 1885, 1887, 1888, 1889, 1896, 1926], "entir": [6, 8, 13, 14, 15, 16, 17, 21, 22, 28, 31, 37, 40, 48, 58, 70, 693, 904, 905, 1119, 1142, 1360, 1361, 1362, 1366, 1384, 1385, 1386, 1393, 1506, 1507, 1508, 1513, 1601, 1619, 1621, 1645, 1862, 1877, 1882, 1885, 1887, 1888, 1889, 1892, 1893, 1900, 1904, 1907, 1912, 1914, 1916], "recomput": [6, 15, 895, 1473, 1531, 1645, 1903], "refer": [6, 13, 21, 22, 23, 28, 31, 37, 38, 40, 41, 42, 44, 46, 49, 52, 53, 57, 58, 62, 63, 69, 253, 730, 731, 752, 760, 788, 789, 790, 815, 816, 817, 820, 821, 822, 855, 869, 874, 889, 931, 1001, 1006, 1065, 1115, 1137, 1138, 1170, 1177, 1189, 1192, 1200, 1207, 1220, 1241, 1245, 1258, 1261, 1344, 1375, 1421, 1470, 1485, 1493, 1502, 1520, 1588, 1601, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1696, 1713, 1749, 1771, 1808, 1842, 1856, 1857, 1860, 1874, 1875, 1877, 1878, 1881, 1882, 1885, 1886, 1887, 1888, 1889, 1890, 1893, 1895, 1897, 1903, 1908, 1909, 1912, 1913, 1916, 1919, 1920, 1921, 1924], "potenti": [6, 9, 15, 17, 21, 40, 57, 59, 191, 208, 1198, 1234, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1601, 1842, 1861, 1869, 1874, 1882, 1885, 1904, 1916, 1920], "silent": [6, 20, 1009, 1010, 1029, 1030, 1163, 1204, 1421, 1605, 1606, 1885, 1896, 1900], "consider": [6, 8, 880, 1186, 1365, 1601, 1862, 1884], "limit": [6, 9, 10, 15, 16, 17, 20, 21, 24, 28, 37, 45, 62, 63, 68, 1032, 1119, 1202, 1306, 1344, 1364, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1570, 1601, 1624, 1755, 1857, 1862, 1866, 1874, 1876, 1877, 1882, 1885, 1886, 1893, 1896, 1897, 1898, 1904, 1907, 1910, 1912, 1913, 1923], "reentrant": [6, 1601], "stop": [6, 18, 46, 48, 57, 58, 59, 861, 1001, 1187, 1261, 1344, 1634, 1690, 1722, 1859, 1862, 1912], "soon": [6, 21, 28, 57, 62, 789, 1882, 1907, 1912, 1914], "set_checkpoint_early_stop": 6, "entireti": 6, "no_grad": [6, 857, 1066, 1120, 1124, 1129, 1164, 1189, 1364, 1421, 1427, 1468, 1602, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1880, 1882, 1893, 1924], "condit": [6, 15, 16, 35, 37, 67, 70, 613, 616, 620, 690, 756, 898, 904, 905, 1186, 1204, 1218, 1220, 1228, 1234, 1235, 1236, 1247, 1252, 1373, 1391, 1436, 1468, 1636, 1641, 1830, 1852, 1858, 1859, 1860, 1861, 1863, 1877, 1882, 1887, 1896, 1905, 1921], "unmet": 6, "particip": [6, 10, 15, 37, 40, 41, 44, 57, 58, 1601, 1913], "wherea": [6, 16, 1244, 1302, 1303, 1316, 1677, 1807, 1862, 1923], "know": [6, 8, 9, 12, 15, 16, 17, 21, 31, 41, 47, 70, 484, 893, 898, 1113, 1119, 1199, 1601, 1859, 1862, 1869, 1881, 1882, 1885, 1890, 1900, 1904, 1912, 1913, 1914, 1916], "lstm": [6, 759, 1392, 1860, 1885, 1900, 1902, 1907, 1909, 1910, 1921], "hidden": [6, 756, 1128, 1373, 1374, 1391, 1392, 1436, 1438, 1602, 1885, 1921], "correctli": [6, 20, 37, 40, 57, 62, 484, 1119, 1189, 1204, 1421, 1539, 1859, 1861, 1862, 1872, 1876, 1881, 1882, 1886, 1887, 1888, 1895, 1897, 1907, 1912], "entrant": 6, "futur": [6, 9, 10, 15, 17, 38, 40, 42, 48, 57, 58, 67, 70, 289, 320, 510, 514, 553, 676, 683, 789, 811, 812, 813, 822, 857, 895, 939, 940, 954, 955, 962, 963, 965, 966, 968, 997, 998, 1005, 1006, 1008, 1135, 1189, 1192, 1198, 1199, 1202, 1207, 1219, 1230, 1232, 1233, 1234, 1237, 1250, 1278, 1279, 1290, 1361, 1421, 1522, 1544, 1545, 1546, 1593, 1601, 1605, 1642, 1643, 1648, 1666, 1706, 1722, 1803, 1807, 1830, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1868, 1869, 1870, 1872, 1876, 1877, 1884, 1885, 1887, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1909, 1912, 1916, 1918, 1922, 1923, 1924, 1926], "sequenti": [6, 17, 28, 37, 44, 62, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 1130, 1189, 1198, 1367, 1421, 1460, 1471, 1610, 1624, 1691, 1849, 1859, 1874, 1877, 1885, 1893, 1900, 1903, 1905, 1907, 1926], "func": [6, 40, 45, 65, 67, 70, 858, 888, 890, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 1164, 1192, 1204, 1205, 1520, 1643, 1849, 1857, 1862, 1881, 1912, 1914, 1927], "compris": [6, 58], "chunk": [6, 37, 40, 42, 62, 936, 979, 1124, 1358, 1601, 1795, 1859, 1860, 1875, 1902, 1903, 1905, 1912, 1920], "input_var": [6, 1358], "person": [7, 8, 10], "land": [7, 10, 11, 24], "six": [7, 1351], "commit": [7, 8, 10, 24, 31, 63, 1856, 1857, 1896, 1897], "repositori": [7, 10, 66, 70, 1856, 1887, 1895], "submit": [7, 10, 24, 965, 966, 968, 1885, 1897], "month": [7, 10], "qualifi": [7, 40, 45, 54, 70, 676, 1189, 1421, 1868, 1904], "pr": [7, 8, 15, 1696, 1808, 1926], "interest": [7, 8, 10, 14, 16, 18, 20, 22, 1882, 1888, 1890, 1893], "merge_rul": 7, "vote": [7, 10], "decis": [7, 15, 42, 48, 57, 59, 70, 1204, 1869, 1881], "criteria": [7, 10, 1261], "approv": [7, 10], "Not": [7, 21, 58, 1319, 1859, 1861, 1862, 1863, 1887, 1902, 1907, 1912], "busi": [7, 10], "dai": [7, 8, 16, 24], "contributor": [7, 8, 9, 10], "seen": [7, 19, 21, 34, 46, 70, 221, 936, 949, 1290, 1352, 1353, 1354, 1452, 1544, 1545, 1546, 1690, 1859, 1869, 1882, 1885, 1900, 1916], "thumb": [7, 40], "acceler": [8, 12, 17, 38, 1339, 1340, 1341, 1460, 1660, 1891], "deep": [8, 10, 15, 17, 25, 28, 70, 1339, 1340, 1341, 1363, 1460, 1676, 1857, 1880, 1893, 1907], "neural": [8, 9, 15, 32, 70, 1333, 1344, 1359, 1366, 1375, 1387, 1420, 1421, 1428, 1433, 1434, 1448, 1450, 1464, 1466, 1468, 1550, 1573, 1611, 1674, 1682, 1688, 1859, 1861, 1862, 1880, 1885, 1896, 1900], "tape": [8, 12], "system": [8, 9, 15, 31, 32, 33, 37, 58, 67, 70, 942, 1142, 1196, 1220, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1249, 1250, 1251, 1255, 1260, 1279, 1306, 1464, 1466, 1468, 1601, 1611, 1613, 1751, 1830, 1863, 1868, 1872, 1882, 1884, 1885, 1892, 1893, 1899, 1904, 1912], "organ": [8, 17, 21, 1886, 1892, 1904], "technic": [8, 10, 15, 22, 57, 70, 1189, 1421, 1597, 1598, 1857, 1882, 1889, 1904], "md": [8, 70, 788, 1904], "healthi": [8, 48, 57], "team": [8, 40, 63, 1898, 1905], "commun": [8, 9, 10, 17, 20, 22, 41, 42, 44, 48, 57, 59, 62, 1601, 1882, 1886, 1912, 1913], "ve": [8, 16, 17, 21, 22, 65, 66, 67, 70, 1193, 1869, 1874, 1882, 1888, 1913, 1921], "come": [8, 9, 10, 21, 23, 37, 45, 46, 47, 54, 57, 63, 67, 1062, 1113, 1119, 1260, 1360, 1361, 1362, 1366, 1387, 1657, 1866, 1870, 1886, 1888, 1892, 1904, 1912, 1914, 1916], "peopl": [8, 20, 1882, 1907], "scratch": [8, 28, 1882], "itch": 8, "acquaint": 8, "tip": [8, 17, 1885], "tracker": [8, 1261], "confirm": [8, 17, 23, 1856, 1859, 1887, 1900, 1912, 1914], "tend": [8, 899, 1842], "bootcamp": 8, "1hr": 8, "although": [8, 9, 27, 45, 46, 67, 70, 1352, 1353, 1354, 1421, 1429, 1601, 1857, 1862, 1881, 1887, 1896, 1905, 1907], "join": [8, 38, 40, 44, 57, 58, 69, 70, 1601, 1856, 1857, 1863, 1874, 1882, 1886, 1895, 1902, 1922], "dev": [8, 11, 25, 28, 49, 54], "happi": 8, "research": [8, 9, 10, 1601, 1856, 1882, 1890, 1898], "partner": 8, "speed": [8, 9, 21, 22, 31, 44, 974, 1062, 1118, 1180, 1193, 1198, 1252, 1329, 1427, 1807, 1882, 1884, 1885, 1886, 1887, 1889, 1891, 1896, 1907, 1912], "reach": [8, 9, 10, 14, 37, 38, 40, 41, 48, 57, 63, 1261, 1601, 1679, 1682, 1685, 1686, 1882, 1895, 1905, 1907, 1908, 1912], "design": [8, 10, 15, 17, 20, 25, 28, 37, 46, 54, 57, 63, 66, 67, 68, 904, 905, 1189, 1208, 1421, 1655, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1818, 1856, 1857, 1858, 1872, 1885, 1887, 1891, 1893, 1904], "comment": [8, 70, 1746, 1862, 1863, 1887, 1919, 1921], "crack": 8, "usual": [8, 16, 31, 37, 38, 42, 57, 58, 70, 84, 479, 827, 828, 829, 830, 837, 889, 897, 899, 903, 1130, 1360, 1361, 1362, 1366, 1381, 1384, 1385, 1386, 1387, 1592, 1601, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1849, 1859, 1862, 1877, 1881, 1882, 1884, 1885, 1889, 1892, 1903, 1908, 1910, 1912, 1921, 1927], "idea": [8, 17, 28, 63, 1062, 1329, 1601, 1885, 1892, 1900, 1913], "rfc": [8, 1882, 1907, 1913], "big": [8, 16, 1663, 1664, 1667, 1673, 1674, 1789, 1790, 1791, 1792, 1793, 1794, 1903, 1907], "post": [8, 9, 16, 25, 28, 41, 42, 44, 62, 852, 853, 857, 1189, 1421, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1857, 1866, 1882, 1886, 1889, 1899], "standard": [8, 31, 34, 38, 46, 50, 51, 55, 67, 70, 84, 351, 376, 585, 1082, 1333, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1387, 1393, 1460, 1466, 1468, 1649, 1696, 1719, 1765, 1770, 1801, 1802, 1861, 1863, 1877, 1880, 1884, 1885, 1895, 1896, 1900, 1901, 1904, 1917], "lot": [8, 15, 16, 20, 21, 22, 31, 37, 1874, 1882, 1885, 1890, 1895, 1904, 1905, 1911, 1913, 1921], "boil": 8, "mostli": [8, 46, 1187, 1601, 1885, 1916, 1927], "evid": 8, "peer": [8, 40, 44, 57, 62, 972, 1601, 1885, 1912], "paper": [8, 10, 38, 46, 756, 1329, 1333, 1339, 1340, 1341, 1343, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1363, 1366, 1369, 1370, 1373, 1376, 1379, 1384, 1385, 1386, 1393, 1427, 1433, 1434, 1439, 1448, 1452, 1460, 1464, 1466, 1468, 1469, 1470, 1515, 1516, 1525, 1663, 1664, 1675, 1682, 1688, 1890, 1905], "framework": [8, 9, 10, 46, 54, 63, 69, 756, 970, 1298, 1373, 1601, 1608, 1676, 1755, 1857, 1894, 1905, 1907, 1913, 1914], "bit": [8, 20, 21, 70, 88, 329, 456, 757, 759, 761, 815, 816, 817, 818, 821, 823, 854, 922, 925, 954, 955, 1115, 1169, 1730, 1731, 1743, 1772, 1885, 1893, 1896, 1899, 1907, 1910, 1911, 1916, 1919, 1922, 1928], "accept": [8, 10, 28, 37, 40, 42, 45, 63, 64, 66, 68, 150, 510, 798, 885, 886, 887, 888, 889, 894, 903, 939, 1005, 1008, 1114, 1130, 1151, 1189, 1193, 1357, 1421, 1428, 1449, 1620, 1634, 1635, 1641, 1659, 1747, 1784, 1798, 1849, 1862, 1876, 1885, 1887, 1888, 1900, 1903, 1912, 1919, 1921], "overwhelm": [8, 17, 28, 1912], "newli": [8, 21, 62, 70, 1076, 1077, 1364, 1365, 1708, 1709, 1866], "publish": [8, 10, 49, 54, 57, 1261, 1857], "ground": [8, 10, 1357, 1503, 1921], "becom": [8, 9, 10, 17, 21, 28, 37, 40, 46, 70, 289, 756, 872, 1142, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1373, 1391, 1406, 1426, 1436, 1449, 1503, 1520, 1592, 1680, 1780, 1828, 1869, 1870, 1882, 1886, 1900, 1904, 1906, 1912], "refactor": [8, 18, 70, 1899, 1907], "coordin": [8, 17, 28, 40, 42, 46, 48, 579, 582, 880, 1142, 1151, 1290, 1700, 1792, 1832, 1834, 1882, 1916, 1921], "pace": 8, "branch": [8, 15, 24, 70, 1856, 1861, 1862, 1885], "fast": [8, 9, 16, 20, 37, 40, 904, 1363, 1384, 1385, 1386, 1452, 1468, 1570, 1688, 1694, 1713, 1735, 1750, 1857, 1884, 1885, 1887, 1891, 1903, 1912, 1916, 1919, 1920], "definit": [8, 9, 21, 37, 40, 41, 46, 53, 70, 940, 941, 942, 961, 1005, 1110, 1209, 1218, 1219, 1261, 1387, 1532, 1577, 1648, 1726, 1828, 1856, 1859, 1861, 1863, 1881, 1882, 1887, 1890, 1904, 1907, 1921, 1923], "fundament": [8, 16, 67, 1861, 1893, 1912, 1916], "cut": [8, 17], "guidanc": [8, 10, 15, 32, 64, 1905], "stage": [8, 28, 34, 38, 44, 54, 62, 69, 1857, 1869, 1877, 1905, 1914], "piec": [8, 21, 1868, 1877, 1913], "advic": 8, "readi": [8, 12, 22, 31, 69, 857, 858, 918, 927, 1146, 1147, 1601, 1859, 1886, 1912, 1913], "draft": 8, "convert": [8, 21, 27, 28, 37, 40, 45, 46, 47, 62, 66, 70, 82, 150, 576, 580, 581, 582, 583, 584, 731, 784, 785, 786, 788, 789, 790, 811, 812, 813, 834, 835, 850, 853, 854, 855, 875, 876, 935, 948, 1046, 1082, 1113, 1189, 1258, 1421, 1431, 1432, 1460, 1467, 1592, 1603, 1604, 1607, 1644, 1655, 1657, 1658, 1677, 1708, 1709, 1714, 1789, 1790, 1791, 1792, 1793, 1794, 1859, 1860, 1861, 1862, 1877, 1887, 1891, 1900, 1901, 1907, 1910, 1916, 1921, 1923, 1926], "press": [8, 70], "button": [8, 24], "prepend": [8, 31, 37, 40, 44, 70, 229, 1054, 1189, 1283, 1421, 1824, 1860, 1883], "titl": [8, 1902, 1906], "wip": 8, "progress": [8, 40, 44, 48, 58, 60, 965, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1843, 1856, 1871], "ci": [8, 24, 1857], "folk": 8, "who": [8, 9, 10, 21, 22, 29, 57, 1904], "regularli": 8, "queue": [8, 48, 59, 1874, 1921], "everyth": [8, 15, 17, 21, 28, 37, 46, 66, 1859, 1874, 1904], "happen": [8, 10, 12, 21, 22, 40, 42, 44, 46, 48, 50, 57, 62, 67, 70, 84, 603, 787, 810, 1119, 1460, 1601, 1608, 1679, 1685, 1686, 1692, 1807, 1857, 1872, 1874, 1882, 1885, 1886, 1887, 1888, 1889, 1894, 1895, 1899, 1900, 1907, 1912, 1920], "subsystem": [8, 29, 63, 68, 1857, 1887], "feel": [8, 1877, 1900, 1916], "ll": [8, 13, 16, 67, 70, 756, 816, 817, 857, 858, 940, 1008, 1218, 1373, 1374, 1391, 1392, 1869, 1882, 1885, 1887, 1888, 1895, 1900, 1907, 1913], "round": [8, 37, 40, 505, 661, 662, 795, 798, 816, 861, 957, 959, 1019, 1057, 1083, 1084, 1085, 1089, 1093, 1094, 1095, 1110, 1234, 1247, 1473, 1531, 1706, 1707, 1726, 1775, 1858, 1860, 1862, 1875, 1885, 1902, 1907, 1910, 1916, 1917], "trip": [8, 70, 1083, 1084, 1085, 1089, 1093, 1094, 1095], "noth": [8, 31, 48, 70, 676, 999, 1613, 1663, 1664, 1691, 1859, 1861, 1914], "accompani": [8, 83], "solut": [8, 9, 67, 1233, 1234, 1238, 1246, 1249, 1251, 1255, 1337, 1601, 1830, 1859, 1860, 1880, 1881, 1889, 1895], "think": [8, 10, 16, 17, 18, 70, 1677, 1859, 1861, 1882, 1903, 1904, 1914], "confid": [8, 18, 1921], "ahead": [8, 15, 17, 1857, 1907], "search": [8, 13, 16, 24, 28, 29, 38, 815, 933, 1379, 1525, 1601, 1658, 1713, 1742, 1859, 1875, 1876, 1900, 1904, 1916], "repo": [8, 1682, 1856, 1899], "unabl": [8, 26, 28, 67, 82, 1900, 1903], "reproduc": [8, 17, 28, 37, 67, 312, 320, 512, 514, 920, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1417, 1418, 1419, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1512, 1520, 1531, 1558, 1570, 1589, 1590, 1591, 1592, 1842, 1856, 1857, 1903, 1904], "problemat": [8, 37, 70, 1859, 1896, 1908], "insight": [8, 34], "individu": [8, 10, 12, 20, 24, 31, 37, 38, 40, 42, 44, 62, 70, 83, 241, 676, 788, 834, 835, 940, 1028, 1080, 1098, 1189, 1344, 1421, 1460, 1601, 1655, 1862, 1875, 1881, 1882, 1885, 1887, 1892, 1896, 1897, 1900, 1910, 1912, 1923], "intent": [8, 23, 55, 57, 67, 1747, 1869, 1904], "lock": [8, 37, 40, 44, 46, 1882, 1885, 1895, 1904, 1913], "strike": 8, "convers": [8, 16, 27, 456, 576, 579, 789, 934, 1174, 1634, 1857, 1863, 1891, 1900, 1907, 1908, 1916], "medium": [8, 62, 1750], "prioriti": [8, 10, 11, 40, 676, 850, 968, 1861], "entranc": [8, 1885], "great": [8, 12, 15, 1882, 1890], "deal": [8, 9, 15, 16, 21, 37, 48, 59, 1823, 1874, 1889, 1912], "welcom": [8, 1877, 1903, 1916], "aim": [8, 1888, 1916], "rare": [8, 15, 18, 1881, 1900, 1927], "typo": 8, "send": [8, 16, 20, 37, 40, 48, 59, 1001, 1592, 1601, 1874, 1886, 1895, 1899, 1902, 1906, 1912, 1913, 1914, 1924, 1926], "forum": [8, 10, 1889, 1895], "share": [8, 11, 12, 18, 31, 37, 41, 44, 46, 47, 57, 58, 62, 67, 221, 310, 339, 456, 481, 517, 520, 613, 855, 875, 876, 893, 904, 905, 963, 965, 997, 1001, 1113, 1114, 1115, 1159, 1236, 1320, 1321, 1358, 1601, 1611, 1649, 1724, 1738, 1798, 1821, 1827, 1841, 1860, 1881, 1882, 1884, 1895, 1898, 1899, 1900, 1912, 1916, 1918, 1920, 1925], "resolv": [8, 9, 10, 15, 42, 46, 70, 82, 83, 1189, 1352, 1353, 1354, 1368, 1418, 1421, 1861, 1862, 1863, 1899, 1904, 1918, 1927], "challeng": [8, 17, 40, 1913], "feedback": [8, 28, 34, 38, 62, 63, 1601, 1857], "direct": [8, 10, 21, 27, 29, 40, 756, 788, 1103, 1104, 1189, 1373, 1391, 1421, 1436, 1645, 1675, 1696, 1713, 1734, 1882, 1885, 1887, 1893, 1912], "yourself": [8, 17, 65, 963, 1887, 1893, 1895, 1927], "problem": [8, 15, 17, 22, 28, 37, 40, 57, 67, 1062, 1204, 1234, 1246, 1261, 1357, 1428, 1485, 1746, 1874, 1882, 1885, 1889, 1890, 1895, 1899, 1905, 1907, 1908, 1914, 1919], "area": [8, 10, 1531, 1893, 1907, 1917], "appreci": 8, "strive": 8, "respond": [8, 40], "quickli": [8, 9, 20, 38, 57], "ey": [8, 46, 191, 208, 941, 1130, 1209, 1218, 1229, 1240, 1243, 1246, 1247, 1254, 1255, 1608, 1706, 1785, 1849, 1860, 1864, 1887, 1902], "everyon": [8, 48, 57], "touch": [8, 55, 70], "versu": [8, 1425], "write": [8, 9, 10, 15, 17, 20, 22, 28, 34, 37, 40, 42, 45, 48, 50, 54, 55, 56, 57, 62, 67, 68, 82, 83, 253, 510, 693, 931, 1114, 1130, 1166, 1199, 1219, 1230, 1231, 1232, 1236, 1237, 1250, 1588, 1656, 1738, 1830, 1842, 1849, 1857, 1861, 1872, 1876, 1885, 1888, 1889, 1890, 1903, 1904, 1916, 1921], "blog": [8, 9, 1866, 1886, 1907], "around": [8, 10, 12, 21, 26, 28, 29, 40, 46, 66, 67, 69, 70, 150, 620, 889, 903, 963, 965, 966, 968, 1037, 1108, 1109, 1119, 1189, 1601, 1735, 1859, 1874, 1882, 1885, 1900, 1912], "internet": 8, "grow": [8, 9, 20, 70, 1916], "market": [8, 10], "benefit": [8, 9, 28, 40, 70, 843, 1690, 1874, 1885, 1907, 1916], "opinion": [8, 9, 1916], "isn": [8, 16, 37, 70, 456, 1186, 1882, 1885, 1887, 1912, 1923], "aspect": [8, 40, 70, 1887, 1893], "seem": [8, 1900], "unusu": [8, 16], "claim": [8, 1688, 1890], "wast": [8, 1885], "someon": [8, 10, 1187, 1876], "too": [8, 10, 15, 16, 22, 28, 31, 38, 42, 57, 62, 67, 70, 1019, 1118, 1234, 1252, 1317, 1344, 1357, 1421, 1504, 1602, 1643, 1862, 1884, 1889, 1890, 1895, 1896, 1897, 1899, 1901, 1904, 1905, 1914, 1916], "advisori": 8, "fashion": [8, 37, 40, 59, 512, 1266, 1624, 1859], "rough": [8, 10], "consensu": [8, 10], "corpor": [8, 28], "wrote": [8, 9], "implicitli": [8, 40, 50, 62, 70, 1045, 1134, 1142, 1204, 1205, 1260, 1334, 1335, 1336, 1414, 1415, 1416, 1747, 1828, 1859, 1861, 1862, 1882, 1891], "lifetim": [8, 16, 1885, 1912], "immedi": [8, 9, 10, 15, 16, 57, 58, 62, 69, 1189, 1192, 1421, 1862, 1893, 1898, 1903, 1912, 1914], "sai": [8, 12, 15, 21, 27, 70, 493, 1122, 1123, 1124, 1189, 1421, 1859, 1881, 1882, 1889, 1904, 1913, 1914, 1916], "bugfix": 8, "motiv": [8, 9, 17, 28, 70, 731, 1893, 1913], "ye": [8, 1900, 1903, 1916], "knuth": 8, "bewar": 8, "mere": 8, "proven": [8, 1359, 1601], "ok": [8, 19, 50, 55, 66, 949, 1194, 1914], "sometim": [8, 15, 16, 70, 900, 1019, 1204, 1368, 1472, 1498, 1499, 1500, 1613, 1857, 1862, 1874, 1882, 1885, 1888, 1889, 1893, 1895, 1904, 1919, 1922, 1927], "obvious": [8, 16, 20], "broken": [8, 15, 37, 1019, 1900, 1904], "contrari": [8, 1884], "accident": 8, "put": [8, 10, 16, 18, 26, 37, 40, 48, 66, 69, 70, 318, 1082, 1260, 1376, 1682, 1856, 1860, 1874, 1885, 1895, 1902, 1904, 1913, 1914], "difficulti": [8, 1880], "nonlinearli": 8, "sign": [8, 46, 340, 525, 880, 956, 1050, 1098, 1110, 1115, 1222, 1247, 1248, 1269, 1413, 1675, 1726, 1758, 1772, 1858, 1860, 1875, 1902, 1910, 1916, 1919, 1922, 1923], "split": [8, 37, 40, 70, 613, 768, 769, 770, 855, 857, 858, 936, 943, 1019, 1060, 1152, 1358, 1372, 1373, 1391, 1427, 1436, 1495, 1496, 1497, 1498, 1499, 1500, 1519, 1822, 1850, 1859, 1860, 1875, 1885, 1902, 1904, 1905, 1907, 1912, 1916, 1920], "shippabl": 8, "subtl": [8, 16, 17, 28, 1384, 1385, 1386, 1887], "nuanc": [8, 21, 22], "extra": [8, 16, 21, 31, 37, 38, 40, 44, 46, 62, 70, 1062, 1119, 1130, 1189, 1196, 1199, 1234, 1260, 1421, 1428, 1608, 1803, 1849, 1861, 1876, 1882, 1884, 1886, 1887, 1889, 1892, 1904, 1906, 1916, 1923, 1924], "understand": [8, 9, 10, 13, 14, 15, 16, 17, 20, 21, 22, 28, 40, 42, 48, 49, 1119, 1246, 1866, 1880, 1882, 1885, 1891, 1898, 1906, 1921], "hack": 8, "answer": [8, 11, 16, 70, 820, 1338, 1626], "regress": [8, 12, 23, 1337, 1897], "scrutini": 8, "undertak": 8, "rest": [8, 18, 21, 37, 38, 58, 70, 789, 810, 1115, 1254, 1255, 1822, 1876, 1893, 1897, 1904, 1905, 1907, 1912], "chanc": [8, 16, 42, 46], "unrel": [8, 1128, 1881, 1887, 1904], "aid": [8, 28, 70, 1882], "troubleshoot": [8, 40, 1857], "mayb": [8, 16, 1126], "bracnh": 8, "rebas": 8, "latest": [8, 40, 44, 46, 1620, 1856, 1891, 1900], "statu": [8, 10, 48, 1278, 1857, 1863, 1874, 1907], "hud": 8, "risk": [8, 9, 62, 1610, 1613], "anyth": [8, 15, 47, 50, 69, 819, 822, 1200, 1677, 1859, 1866, 1877, 1893, 1904], "configur": [8, 15, 17, 19, 24, 28, 30, 37, 38, 40, 48, 49, 54, 57, 58, 59, 62, 784, 785, 788, 789, 793, 810, 811, 812, 813, 819, 822, 834, 835, 836, 839, 841, 844, 854, 855, 856, 857, 858, 949, 1019, 1601, 1634, 1751, 1842, 1857, 1868, 1872, 1885, 1886, 1897, 1899, 1904, 1910, 1912, 1921, 1923], "riski": 8, "had": [8, 15, 20, 23, 70, 1204, 1592, 1824, 1882, 1888], "beforehand": [8, 17, 69], "hei": 8, "my": [8, 37, 1358, 1892, 1900, 1907], "member": [8, 10, 37, 40, 48, 57, 58, 70, 1189, 1375, 1421, 1517, 1859, 1861, 1862, 1872, 1889, 1906, 1912, 1923, 1924], "sphinx": 8, "folder": [8, 10, 20, 28, 31, 37, 70, 1658, 1856, 1921], "tree": [8, 19, 50, 66, 949, 1421, 1464, 1658, 1857, 1900, 1904, 1906, 1914], "master": [8, 19, 40, 60, 788, 949, 1119, 1464, 1856, 1912], "doxygen": 8, "special": [8, 14, 15, 16, 21, 23, 29, 50, 59, 67, 70, 737, 738, 739, 819, 822, 904, 1055, 1069, 1070, 1071, 1073, 1074, 1083, 1085, 1156, 1157, 1158, 1202, 1260, 1274, 1314, 1358, 1468, 1602, 1603, 1604, 1647, 1677, 1701, 1759, 1770, 1774, 1853, 1857, 1863, 1868, 1876, 1885, 1887, 1890, 1892, 1900, 1904, 1907, 1920, 1921], "server": [8, 37, 40, 58, 1193, 1885, 1904, 1907, 1912], "cppdoc": [8, 32], "cpp": [8, 15, 31, 40, 1311, 1886], "accomplish": [8, 17, 42, 1893], "holist": 8, "concept": [8, 18, 67, 70, 1866, 1888, 1893, 1919], "galleri": 8, "restructur": [8, 1904], "text": [8, 20, 37, 46, 71, 76, 77, 78, 79, 80, 81, 153, 154, 173, 604, 613, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 694, 741, 742, 752, 754, 756, 760, 764, 765, 766, 768, 769, 770, 776, 780, 816, 817, 861, 877, 878, 879, 880, 881, 917, 918, 919, 922, 925, 927, 929, 938, 944, 955, 956, 958, 959, 961, 1057, 1076, 1077, 1106, 1107, 1111, 1112, 1133, 1145, 1146, 1147, 1148, 1155, 1178, 1186, 1209, 1212, 1213, 1214, 1217, 1218, 1225, 1228, 1234, 1238, 1243, 1246, 1252, 1259, 1268, 1275, 1276, 1277, 1278, 1310, 1311, 1322, 1323, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1487, 1488, 1489, 1491, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1506, 1507, 1508, 1513, 1516, 1518, 1519, 1520, 1524, 1525, 1535, 1540, 1544, 1545, 1546, 1550, 1555, 1558, 1563, 1564, 1566, 1570, 1571, 1572, 1573, 1576, 1577, 1578, 1580, 1581, 1582, 1606, 1608, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1682, 1699, 1700, 1703, 1706, 1719, 1722, 1725, 1737, 1758, 1760, 1761, 1773, 1775, 1785, 1786, 1796, 1803, 1804, 1807, 1819, 1820, 1852, 1877, 1880, 1890, 1900, 1904, 1910, 1917, 1921, 1923], "rst": 8, "rebuild": [8, 38], "circleci": 8, "shard": [8, 17, 37, 42, 44, 45, 62, 1601], "worker": [8, 31, 37, 38, 40, 41, 44, 48, 49, 50, 51, 57, 59, 60, 62, 1601, 1862, 1897, 1905, 1906, 1912, 1913, 1914], "40": [8, 14, 1142, 1261, 1342, 1384, 1608, 1609, 1632, 1633, 1642, 1645, 1818], "minut": [8, 11, 40, 1921], "netlifi": 8, "noplot": 8, "render": [8, 40, 1921], "notebook": 8, "rebuilt": [8, 38, 44], "deploi": [8, 48, 57, 1857, 1892, 1898, 1904], "action": [8, 40, 46, 48, 51, 70, 1885, 1904, 1906, 1914], "develop": [9, 10, 11, 22, 28, 31, 38, 40, 70, 1858, 1861, 1862, 1869, 1882, 1887, 1892, 1893, 1897, 1904, 1907, 1908, 1912, 1916], "meant": [9, 41, 57, 59, 1634, 1881, 1912], "rule": [9, 10, 16, 31, 40, 46, 70, 150, 856, 888, 889, 933, 934, 1045, 1238, 1249, 1339, 1340, 1341, 1384, 1385, 1386, 1460, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1742, 1828, 1857, 1859, 1861, 1875, 1877, 1882, 1883, 1887, 1890, 1919, 1923], "concern": [9, 37, 1874, 1885, 1900], "disagr": 9, "contribut": [9, 10, 42, 913, 1150, 1151, 1357, 1364, 1365, 1428, 1503, 1511, 1512, 1555, 1601, 1857, 1877, 1887, 1888, 1905], "maintainership": [9, 10], "escal": [9, 10], "hacker": 9, "poster": 9, "amaz": 9, "ml": [9, 20], "obsess": 9, "soumith": [9, 11], "goe": [9, 18, 21, 70, 1115, 1333, 1663, 1664, 1889], "depth": [9, 10, 775, 781, 1023, 1024, 1202, 1336, 1351, 1354, 1416, 1473, 1531, 1589, 1869, 1886, 1893, 1906], "primari": [9, 10, 16, 40, 70, 1198, 1863, 1869, 1916], "goal": [9, 20, 54, 66, 70, 1290, 1869, 1882, 1886, 1890, 1901, 1914], "secondari": 9, "abil": [9, 1738, 1869, 1892, 1904], "flexibl": [9, 21, 38, 62, 66, 1245, 1601, 1869, 1885, 1887, 1893], "abstract": [9, 12, 21, 37, 38, 41, 42, 46, 48, 57, 59, 906, 907, 908, 909, 910, 1615, 1862, 1886, 1907, 1912], "critic": [9, 17, 18, 21, 57, 676, 1609, 1642, 1872, 1884, 1885], "concret": [9, 15, 16, 21, 46, 60, 66, 70, 781, 796, 820, 837, 1473, 1558, 1589, 1859, 1862, 1885, 1887, 1895], "manner": [9, 48, 510, 897, 899, 1876, 1878, 1883], "jump": [9, 556, 1919], "regim": 9, "ei": 9, "tradeoff": [9, 17, 23, 38, 1907, 1913], "temptat": 9, "impos": [9, 59, 68, 1746, 1874, 1881, 1919], "strict": [9, 897, 898, 899, 900, 901, 902, 1118, 1125, 1189, 1204, 1205, 1421, 1643, 1904, 1921, 1923], "upfront": [9, 15], "simplifi": [9, 15, 38, 69, 1196, 1411, 1609, 1677, 1869, 1882, 1890, 1893, 1903, 1913], "worth": [9, 10, 21, 37, 38, 60, 1119, 1856, 1920], "friction": 9, "compel": 9, "narrow": [9, 17, 28, 1258, 1321, 1677, 1765, 1860, 1862, 1875, 1902, 1909, 1920], "subproblem": 9, "fragment": [9, 28, 987, 1019, 1866, 1885], "ecosystem": [9, 20, 1892, 1894], "incomprehens": 9, "seamlessli": [9, 1877], "softwar": [9, 1224, 1225, 1252, 1842, 1885, 1891], "experi": [9, 10, 18, 22, 25, 28, 29, 38, 68, 71, 76, 77, 78, 79, 80, 81, 1130, 1450, 1573, 1601, 1849, 1869, 1887, 1921], "rich": [9, 1862], "denomin": [9, 683, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1710], "subset": [9, 37, 40, 44, 58, 1200, 1677, 1858, 1859, 1861, 1862, 1887, 1900, 1910], "borrow": 9, "zen": 9, "implicit": [9, 764, 765, 768, 769, 770, 1134, 1142, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1414, 1415, 1416, 1472, 1487, 1488, 1489, 1495, 1496, 1497, 1544, 1545, 1546, 1694, 1858, 1860, 1862, 1863, 1900, 1904, 1920], "concis": [9, 50, 1912], "interchang": [9, 46, 1674, 1827, 1861, 1891, 1901], "everydai": 9, "english": 9, "movement": [9, 1920], "worri": [9, 1912], "placement": [9, 17, 45, 48, 855, 1592, 1907, 1912], "favor": [9, 21, 40, 781, 782, 783, 940, 1031, 1035, 1189, 1243, 1246, 1278, 1279, 1380, 1421, 1474, 1475, 1589, 1590, 1591, 1593, 1706, 1807, 1830], "practition": 9, "debugg": [9, 17, 28, 1194, 1890], "plug": 9, "ir": [9, 15, 16, 17, 22, 28, 70, 756, 1192, 1193, 1373, 1374, 1658, 1857, 1859, 1862, 1900, 1901], "classic": [9, 1882], "sort": [9, 15, 21, 44, 48, 70, 586, 605, 872, 873, 894, 1062, 1149, 1309, 1329, 1635, 1636, 1647, 1707, 1742, 1825, 1839, 1858, 1860, 1862, 1887, 1889, 1902, 1916], "distribut": [9, 22, 29, 37, 38, 41, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 62, 69, 173, 257, 285, 376, 452, 479, 604, 691, 692, 815, 919, 1036, 1311, 1329, 1333, 1357, 1358, 1359, 1360, 1361, 1362, 1366, 1371, 1375, 1387, 1435, 1439, 1460, 1503, 1505, 1506, 1507, 1508, 1513, 1517, 1518, 1522, 1532, 1563, 1601, 1649, 1699, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1857, 1862, 1876, 1877, 1880, 1881, 1885, 1905, 1906, 1908, 1914, 1917, 1921, 1924], "tldr": 9, "resourc": [9, 17, 24, 31, 37, 48, 53, 57, 70, 1862, 1874, 1916], "characterist": [9, 1808, 1888, 1893], "uniformli": [9, 46, 1717, 1718, 1923], "leak": [9, 889, 895, 1862, 1874, 1882], "smart": [9, 1887, 1904, 1912], "anywai": [9, 1882], "obviou": [9, 16, 1889, 1914], "extens": [9, 16, 17, 28, 31, 34, 40, 42, 45, 46, 1260, 1261, 1738, 1758, 1857, 1869, 1877, 1881, 1898, 1904, 1916], "unavoid": 9, "latenc": [9, 17, 24, 54, 1884, 1885], "caveat": [9, 13, 23, 28, 62, 1592, 1641, 1869, 1874, 1885, 1893, 1898], "valuabl": 9, "certainli": [9, 1869], "heterogen": [9, 1861], "cluster": [9, 40, 42, 56, 57, 58, 1329, 1921], "focus": [9, 28, 1861, 1862, 1887], "beaten": 9, "space": [9, 10, 37, 46, 768, 769, 770, 1045, 1080, 1082, 1084, 1085, 1091, 1098, 1142, 1151, 1204, 1205, 1259, 1275, 1329, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1387, 1397, 1398, 1399, 1400, 1401, 1402, 1415, 1416, 1472, 1495, 1496, 1497, 1498, 1499, 1500, 1532, 1828, 1860, 1878, 1882, 1890, 1893, 1898], "innov": 9, "ultim": [9, 10, 31, 50, 59, 1886], "evidenc": 9, "began": 9, "bind": [9, 31, 70, 999, 1862, 1863, 1904], "monolith": 9, "deepli": 9, "integr": [9, 13, 37, 45, 51, 66, 154, 919, 921, 922, 923, 924, 925, 926, 961, 1045, 1150, 1189, 1212, 1256, 1257, 1320, 1421, 1713, 1725, 1828, 1877, 1887, 1892, 1893, 1903, 1905, 1907, 1917, 1919, 1923], "numpi": [9, 37, 67, 446, 490, 689, 690, 695, 873, 875, 876, 893, 1057, 1059, 1060, 1062, 1080, 1101, 1102, 1103, 1104, 1108, 1109, 1114, 1130, 1152, 1219, 1220, 1230, 1241, 1243, 1244, 1245, 1246, 1247, 1252, 1253, 1256, 1258, 1290, 1295, 1700, 1725, 1728, 1735, 1747, 1755, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1809, 1810, 1818, 1821, 1822, 1824, 1846, 1849, 1850, 1869, 1883, 1887, 1888, 1896, 1897, 1899, 1904, 1919, 1920, 1921, 1922, 1923, 1928], "scipi": [9, 937, 1235, 1236, 1560, 1700, 1904, 1915, 1917, 1921], "scikit": [9, 1531], "favorit": 9, "cython": 9, "numba": 9, "reinvent": 9, "wheel": [9, 1899], "year": [9, 1916], "rewrot": 9, "frontend": [9, 17, 32, 66, 70, 1901], "familiar": [9, 17, 27, 32, 70, 1018, 1859, 1882, 1888, 1904, 1907, 1913, 1914], "perhap": [9, 21, 1888], "importantli": [9, 21], "huge": [9, 1808, 1872], "scientif": [9, 1755], "pareto": [9, 1857], "close": [9, 32, 40, 57, 70, 933, 1001, 1178, 1224, 1225, 1251, 1252, 1278, 1338, 1452, 1470, 1493, 1742, 1807, 1830, 1872, 1882, 1887, 1896, 1900, 1904, 1907, 1912, 1921, 1923], "curv": [9, 1921], "torch_funct": [9, 1887], "torch_dispatch": 9, "torch": [9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 23, 25, 27, 28, 29, 32, 34, 35, 38, 41, 44, 48, 49, 50, 51, 54, 55, 57, 59, 60, 62, 65, 72, 73, 74, 75, 82, 87, 88, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 890, 916, 963, 964, 965, 966, 968, 969, 984, 986, 997, 1066, 1164, 1187, 1188, 1189, 1203, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1592, 1601, 1602, 1603, 1604, 1610, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1634, 1646, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1713, 1752, 1782, 1859, 1860, 1861, 1875, 1876, 1881, 1882, 1883, 1884, 1886, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1899, 1905, 1907, 1908, 1909, 1912, 1913, 1914, 1920], "tracer": [9, 21, 74, 1204, 1900, 1901, 1921, 1926], "functorch": [9, 13, 26, 63, 68], "anchor": [9, 27, 70, 1469, 1470, 1586, 1587, 1860], "hackabl": 9, "todai": [9, 15, 18, 26, 63, 68, 1907], "open": [9, 10, 17, 31, 37, 46, 57, 63, 685, 911, 1112, 1196, 1260, 1283, 1293, 1537, 1859, 1869, 1874, 1877, 1891, 1899, 1900, 1904, 1907, 1912, 1916, 1917], "evolv": [9, 1886], "ai": [9, 1900, 1917], "adopt": [10, 40, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761], "hierarch": [10, 1921], "pull": [10, 11, 16, 32, 70, 150, 889, 1904], "request": [10, 11, 15, 29, 40, 42, 59, 685, 857, 875, 876, 1019, 1261, 1283, 1293, 1537, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1856, 1877, 1881, 1882, 1884, 1885, 1900, 1904, 1912, 1913, 1914, 1916, 1917], "overseen": 10, "catch": [10, 18, 50, 1859, 1882, 1888, 1890], "maker": 10, "strong": 10, "toward": [10, 1057, 1150, 1151, 1261, 1325, 1601, 1685, 1726, 1734, 1735, 1905], "philosophi": [10, 66, 1857], "beyond": [10, 38, 1306, 1357, 1663, 1664, 1673, 1733, 1889, 1893], "encourag": [10, 48, 1877, 1907, 1916, 1923], "propos": [10, 1660, 1680, 1681, 1869, 1890, 1903, 1913], "review": [10, 11, 21, 38, 1904], "willing": 10, "invest": 10, "anyon": 10, "ownership": [10, 70], "codebas": 10, "strictli": [10, 37, 150, 191, 208, 889, 933, 1151, 1189, 1193, 1421, 1882, 1917], "compani": 10, "bui": 10, "addition": [10, 37, 38, 40, 46, 62, 150, 510, 613, 889, 1119, 1123, 1124, 1193, 1252, 1329, 1384, 1385, 1386, 1784, 1889, 1924], "membership": [10, 48, 56, 57, 1863], "That": [10, 26, 48, 55, 58, 64, 70, 1186, 1259, 1275, 1842, 1870, 1887, 1888, 1889, 1898, 1904, 1912], "seat": 10, "reserv": [10, 54, 1019, 1863, 1885, 1893], "emploi": [10, 1676, 1893, 1904, 1905], "directori": [10, 17, 18, 28, 31, 40, 42, 55, 1658, 1856, 1871, 1892, 1904, 1906, 1921], "procedur": [10, 28, 46, 855, 1204, 1205, 1261, 1782, 1912], "disput": 10, "public": [10, 11, 1119, 1887, 1927], "relev": [10, 18, 20, 21, 41, 48, 57, 69, 676, 1252, 1863, 1881, 1882, 1904, 1907], "resolut": [10, 1433, 1434, 1485, 1520, 1561, 1562, 1828, 1863, 1904, 1928], "conclus": 10, "publicli": [10, 1927], "vision": [10, 20, 1198, 1357, 1503, 1856, 1857], "roadmap": [10, 11], "parti": [10, 57, 1856, 1857, 1859, 1885, 1888, 1893, 1904], "triag": [10, 11], "meet": [10, 11, 56, 1218, 1885], "Their": [10, 16, 1054], "articul": 10, "cohes": 10, "negoti": [10, 1912], "contenti": 10, "broad": [10, 1893], "stakehold": 10, "power": [10, 22, 56, 1025, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1105, 1212, 1242, 1256, 1389, 1390, 1541, 1542, 1609, 1642, 1660, 1689, 1703, 1727, 1843, 1863, 1885, 1916], "veto": 10, "admin": 10, "amongst": 10, "commonli": [10, 15, 20, 46, 62, 1290, 1862, 1864, 1881, 1882, 1903, 1907, 1919], "merit": 10, "demonstr": [10, 20, 58, 70, 1344, 1859, 1893, 1898, 1905, 1912], "expertis": 10, "continu": [10, 13, 14, 18, 21, 37, 40, 46, 60, 62, 70, 401, 604, 815, 898, 1142, 1224, 1225, 1252, 1343, 1344, 1601, 1863, 1869, 1882, 1898, 1906, 1924], "light": [10, 1921], "mainten": [10, 57, 58], "emeritu": [10, 11], "inact": [10, 1019, 1885], "contact": 10, "item": [10, 12, 15, 16, 21, 37, 42, 579, 580, 581, 585, 788, 789, 790, 810, 811, 812, 813, 1357, 1422, 1431, 1613, 1755, 1856, 1858, 1859, 1860, 1861, 1862, 1875, 1885, 1900, 1902, 1904, 1912, 1921, 1922], "nomine": 10, "breadth": 10, "testimoni": 10, "posit": [10, 37, 46, 70, 88, 401, 469, 541, 731, 853, 857, 859, 904, 918, 920, 927, 940, 941, 942, 1078, 1079, 1080, 1081, 1082, 1090, 1092, 1096, 1098, 1115, 1125, 1126, 1129, 1146, 1147, 1181, 1184, 1189, 1192, 1218, 1219, 1230, 1232, 1243, 1246, 1247, 1261, 1281, 1296, 1315, 1320, 1321, 1338, 1349, 1350, 1351, 1356, 1357, 1358, 1365, 1375, 1382, 1421, 1427, 1457, 1464, 1469, 1470, 1485, 1493, 1512, 1517, 1520, 1586, 1587, 1595, 1596, 1597, 1733, 1735, 1785, 1787, 1831, 1832, 1833, 1834, 1841, 1856, 1860, 1875, 1876, 1887, 1888, 1890, 1900, 1902, 1905, 1911, 1916, 1917, 1923, 1927, 1928], "neg": [10, 15, 29, 31, 37, 40, 46, 59, 70, 88, 439, 441, 456, 657, 658, 694, 751, 776, 920, 956, 959, 968, 984, 990, 991, 1019, 1031, 1078, 1079, 1080, 1081, 1082, 1083, 1097, 1098, 1099, 1105, 1115, 1179, 1181, 1183, 1242, 1269, 1281, 1302, 1303, 1311, 1315, 1320, 1321, 1329, 1338, 1366, 1375, 1407, 1414, 1415, 1416, 1424, 1428, 1430, 1435, 1452, 1469, 1470, 1513, 1517, 1520, 1522, 1531, 1535, 1544, 1545, 1546, 1555, 1563, 1586, 1587, 1589, 1699, 1700, 1731, 1735, 1770, 1772, 1775, 1786, 1823, 1831, 1832, 1833, 1834, 1841, 1858, 1859, 1860, 1875, 1877, 1880, 1882, 1888, 1900, 1901, 1902, 1911, 1916, 1917], "interact": [10, 12, 17, 32, 37, 45, 70, 858, 966, 999, 1164, 1857, 1863, 1886, 1904, 1921], "final": [10, 12, 14, 15, 28, 40, 42, 44, 46, 48, 57, 66, 67, 682, 685, 686, 756, 917, 935, 948, 1062, 1101, 1119, 1142, 1260, 1278, 1283, 1373, 1375, 1391, 1436, 1449, 1592, 1785, 1828, 1859, 1861, 1862, 1863, 1875, 1887, 1890, 1893, 1896, 1898, 1900, 1904, 1913, 1914], "declin": 10, "conflict": [10, 38, 58, 1904], "lack": [10, 29, 1224, 1225, 1252], "unfit": 10, "conduct": [10, 1601, 1696, 1808, 1912], "filial": 10, "romant": 10, "strength": 10, "candid": [10, 913, 1860, 1904], "letter": [10, 1062], "befit": 10, "candidaci": 10, "behind": [10, 16, 1857, 1898, 1913], "75": [10, 1150, 1409, 1520, 1538, 1660, 1707, 1860, 1917], "choos": [10, 32, 70, 888, 913, 988, 1234, 1247, 1252, 1337, 1880, 1881, 1884, 1904, 1908, 1921], "unforeseen": 10, "circumst": [10, 57, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1885], "perman": [10, 70, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1882, 1914], "unavail": [10, 1861], "rank": [10, 15, 28, 37, 38, 40, 41, 42, 44, 45, 46, 48, 55, 57, 58, 60, 62, 1234, 1235, 1236, 1243, 1278, 1413, 1460, 1601, 1613, 1696, 1808, 1860, 1886, 1895, 1900, 1905, 1912, 1913], "elect": 10, "invit": [10, 1856], "convinc": 10, "approach": [10, 17, 26, 38, 40, 70, 937, 1130, 1782, 1849, 1859, 1874, 1877, 1885, 1887, 1890, 1907, 1912], "interview": 10, "talk": [10, 59, 1892], "gather": [10, 40, 57, 62, 510, 1818, 1842, 1858, 1860, 1887, 1889, 1892, 1902, 1904], "read": [10, 12, 17, 20, 21, 25, 28, 34, 37, 40, 42, 47, 48, 50, 57, 58, 62, 66, 70, 446, 1021, 1045, 1113, 1114, 1115, 1196, 1260, 1690, 1857, 1875, 1876, 1882, 1883, 1885, 1886, 1888, 1892, 1896, 1904, 1907, 1912], "attend": [10, 731, 1427, 1464], "confer": [10, 1375], "pipelin": [10, 17, 70, 1857, 1912], "world": [10, 15, 18, 22, 25, 40, 44, 48, 55, 57, 58, 62, 1460, 1601, 1882, 1904, 1907], "cover": [10, 14, 21, 63, 70, 1036, 1062, 1414, 1544, 1545, 1546, 1862, 1864, 1876, 1882, 1887, 1890, 1892, 1893, 1912], "push": [10, 21, 49, 1024, 1130, 1254, 1849, 1906], "codeown": 10, "notifi": [10, 41, 58, 1914], "expert": 10, "strongli": [10, 40, 48, 58, 1360, 1361, 1362, 1366, 1803, 1856], "failur": [10, 17, 21, 28, 40, 46, 48, 49, 50, 54, 55, 56, 57, 60, 676, 904, 905, 1119, 1204, 1205, 1306, 1862, 1868, 1874, 1901, 1905, 1912, 1914, 1923], "revert": [10, 46, 62, 1457, 1578, 1914], "substanti": [10, 12, 38, 1885], "syntact": [10, 50, 70], "establish": [10, 40, 57, 1882], "seri": [10, 12, 23, 70, 1344, 1384, 1897, 1900, 1927], "lf": 10, "llc": 10, "guidelin": [10, 1624, 1904, 1907, 1908], "trademark": 10, "www": [10, 1344, 1470, 1921], "lfproject": 10, "acknowledg": [10, 40, 1857, 1914, 1916], "copyright": [10, 28], "holder": 10, "independ": [10, 37, 40, 57, 62, 69, 153, 154, 775, 781, 897, 898, 899, 900, 901, 902, 968, 1142, 1151, 1247, 1359, 1360, 1361, 1362, 1366, 1506, 1507, 1508, 1513, 1531, 1589, 1645, 1706, 1857, 1859, 1881, 1882, 1885, 1898, 1904], "authorship": 10, "claus": [10, 1889], "bsd": 10, "licens": 10, "opensourc": 10, "outbound": 10, "inbound": 10, "q": [10, 16, 38, 46, 429, 477, 754, 1134, 1209, 1225, 1228, 1247, 1289, 1318, 1387, 1427, 1570, 1608, 1694, 1696, 1706, 1707, 1808, 1859, 1860, 1890, 1897, 1900, 1916, 1917], "partli": [10, 1862], "domain": [10, 46, 50, 680, 822, 881, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1090, 1092, 1093, 1094, 1095, 1142, 1877, 1900, 1907], "absolut": [10, 29, 31, 70, 92, 677, 690, 904, 905, 1110, 1178, 1217, 1222, 1243, 1246, 1248, 1269, 1382, 1388, 1452, 1529, 1533, 1574, 1618, 1619, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1648, 1659, 1700, 1726, 1758, 1860, 1893, 1900, 1902, 1917, 1922, 1923], "health": 10, "success": [10, 28, 42, 46, 48, 54, 70, 1219, 1230, 1232, 1278, 1620, 1789, 1790, 1791, 1793, 1794, 1885, 1893, 1900, 1901, 1916], "am": 10, "grant": 10, "purchas": 10, "board": 10, "driven": [10, 1900], "clearli": [10, 1869, 1904], "sponsorship": 10, "foundat": [10, 1901], "ptf": 10, "minor": [10, 990, 1219, 1235], "committ": 10, "facebook": 10, "infrastructur": [10, 15, 49, 1904], "employe": 10, "expand": [10, 46, 254, 490, 874, 896, 904, 905, 932, 1241, 1242, 1290, 1427, 1471, 1564, 1838, 1856, 1858, 1860, 1868, 1875, 1876, 1883, 1888, 1900, 1902, 1904, 1905, 1920], "deliv": [10, 1906], "offici": [10, 40, 1329, 1907], "showcas": [10, 1417, 1885, 1895], "whenev": [10, 16, 21, 876, 1608, 1609, 1872, 1874, 1910, 1913, 1914, 1927], "fix": [11, 12, 17, 28, 34, 37, 40, 45, 46, 48, 57, 62, 64, 67, 70, 82, 83, 261, 791, 797, 1119, 1202, 1234, 1364, 1365, 1439, 1511, 1512, 1531, 1601, 1859, 1860, 1872, 1880, 1881, 1885, 1886, 1889, 1895, 1899, 1900, 1902, 1903], "plu": [11, 31, 42, 897, 1115, 1235, 1916], "quarterli": 11, "chintala": 11, "edward": 11, "yang": [11, 1261], "ezyang": [11, 1920], "greg": 11, "chanan": 11, "gchanan": 11, "dmytro": 11, "dzhulgakov": 11, "nikita": 11, "shulga": 11, "malfet": 11, "joel": [11, 1696, 1808], "schlosser": 11, "jbschlosser": 11, "alban": 11, "desmaison": 11, "alband": 11, "sam": 11, "gross": 11, "colesburi": 11, "adam": [11, 41, 44, 46, 62, 1664, 1665, 1667, 1673, 1677, 1903], "paszk": 11, "apaszk": 11, "ilqar": 11, "ramazanli": 11, "iramazanli": 11, "vincent": 11, "quennevil": 11, "belair": 11, "vincentqb": 11, "jeffrei": 11, "wan": 11, "soulitz": 11, "elia": 11, "ellison": 11, "eellison": 11, "michael": [11, 28], "suo": 11, "yanan": 11, "cao": 11, "gmagogsfm": 11, "jame": 11, "reed": 11, "jamesr66a": 11, "jason": [11, 14], "ansel": [11, 14], "jansel": 11, "jiong": 11, "gong": 11, "jgong5": 11, "zach": 11, "devito": 11, "zdevito": 11, "fritz": 11, "obermey": 11, "fritzo": 11, "neeraj": 11, "pradhan": 11, "neerajprad": 11, "alican": 11, "bozkurt": 11, "alicanb": 11, "vishwak": 11, "srinivasan": 11, "vishwakftw": 11, "shen": 11, "li": [11, 1318, 1707, 1885], "mrshenli": 11, "pritam": 11, "damania": 11, "pritamdamania87": 11, "yanli": 11, "zhao": 11, "zhaojuanmao": 11, "rohan": 11, "varma": 11, "wanchao": 11, "liang": 11, "wanchaol": 11, "junji": 11, "wang": [11, 46], "fduwjj": 11, "howard": 11, "huang": 11, "tristan": 11, "rice": 11, "d4l3k": 11, "alisson": 11, "azzolini": 11, "aazzolini": 11, "ke": 11, "wen": 11, "kwen2501": 11, "kiuk": 11, "chung": 11, "kiukchung": 11, "pieter": 11, "noordhui": 11, "pietern": 11, "mingzh": 11, "mingzhe09088": 11, "omkar": 11, "salpekar": 11, "osalpekar": 11, "simon": 11, "ssnl": 11, "vitali": 11, "fedyunin": 11, "vitalyfedyunin": 11, "mike": 11, "ruberri": 11, "mruberri": 11, "mario": 11, "lezcano": 11, "ivan": 11, "yashchuk": 11, "ivanyashchuk": 11, "pearu": 11, "peterson": 11, "vedeneev": 11, "nikitav": 11, "christian": 11, "puhrsch": 11, "cpuhrsch": 11, "andrew": [11, 1261], "amjam": 11, "driss": 11, "guessou": 11, "drisspg": 11, "mikayla": 11, "gawarecki": 11, "mikaylagawarecki": 11, "natalia": 11, "gimelshein": 11, "ngimel": 11, "georg": 11, "qi": 11, "peter": 11, "bell": 11, "peterbell10": 11, "mingfei": 11, "ma": 11, "mingfeima": 11, "xiaob": 11, "zhang": 11, "xiaobingsup": 11, "xiaoqiang": 11, "zheng": 11, "xq": 11, "ilia": 11, "cherniavskii": 11, "cher": 11, "bai": 11, "bddppq": 11, "yinghai": 11, "jianhui": 11, "piotr": 11, "bialecki": 11, "ptrblck": 11, "sarofeen": 11, "csarofeen": 11, "tulloch": 11, "ajtulloch": 11, "alex": 11, "jann": 11, "jjsjann123": 11, "peng": 11, "sun": 11, "sunway513": 11, "jithun": 11, "nair": 11, "jithunnair": 11, "jeff": 11, "daili": 11, "jeffdaili": 11, "eli": 11, "uriega": 11, "seemether": 11, "mikei": 11, "dagits": 11, "zain": 11, "rizvi": 11, "zainrizvi": 11, "nirav": 11, "mehta": 11, "mehtanirav": 11, "andrei": 11, "talman": 11, "atalman": 11, "zhuoji": 11, "zhou": 11, "zhouzhuoji": 11, "karl": 11, "ostmo": 11, "kostmo": 11, "adnan": 11, "aziz": 11, "adnanaziz": 11, "ck": 11, "luk": 11, "ckluk": 11, "taylor": [11, 1142], "robi": 11, "robieta": 11, "xu": [11, 62], "xuzhao9": 11, "geeta": 11, "chauhan": 11, "chauhang": 11, "victor": 11, "bittorf": 11, "bitfort": 11, "gisl": 11, "dankel": 11, "gdankel": 11, "feng": 11, "yf225": 11, "brian": 11, "hirsh": 11, "bdhirsh": 11, "sebastian": 11, "messmer": 11, "smessmer": 11, "bowen": 11, "bao": [11, 24], "bowenbao": 11, "aaron": 11, "bockov": 11, "abock": 11, "gari": 11, "miguel": 11, "garymm": 11, "lara": 11, "haidar": 11, "hdr": 11, "fang": 11, "houseroad": 11, "negin": 11, "raoof": 11, "neginraoof": 11, "spandan": 11, "tiwari": 11, "spandantiwari": 11, "david": [11, 1329], "reiss": 11, "dreiss": 11, "raziel": 11, "guevara": 11, "linbin": 11, "yu": 11, "linbinyu": 11, "kobzarev": 11, "ivankobzarev": 11, "tao": 11, "xta0": 11, "vasilii": 11, "kuznetsov": 11, "vkuzo": 11, "jerri": 11, "jerryzh168": [11, 789], "zafar": 11, "takhirov": 11, "supriya": 11, "rao": 11, "supriyar": 11, "raghuraman": 11, "krishnamoorthi": 11, "raghuramank100": 11, "guoliang": 11, "hua": 11, "nbcsm": 11, "teng": 11, "gao": 11, "gaoteng": 11, "git": [11, 17, 28, 1906], "johnson": 11, "peterjc123": [11, 1899], "kulin": 11, "seth": 11, "kulinseth": 11, "ramin": 11, "azarmehr": 11, "razarmehr": 11, "alfredo": 11, "mendoza": 11, "avmgithub": 11, "svetlana": 11, "karslioglu": 11, "svekar": 11, "jack": 11, "jackcaog": 11, "daniel": [11, 46], "sohn": 11, "jysohn23": 11, "cain": 11, "zcain117": 11, "hirsch": 11, "gregori": 11, "ail": 11, "ailzhang": 11, "libenzi": 11, "dlibenzi": 11, "suhan": 11, "asuhan": 11, "manoj": 11, "mycpuorg": 11, "vamshi": 11, "dantu": 11, "vdantu": 11, "dhanasekar": 11, "karuppasami": 11, "dhanainm": 11, "francisco": 11, "massa": 11, "fmassa": 11, "vasili": 11, "vrynioti": 11, "datumbox": 11, "nicola": 11, "hug": 11, "nicolashug": 11, "yosua": 11, "maranatha": 11, "yosuamichael": 11, "joao": 11, "gome": 11, "jdsgome": 11, "philip": 11, "meier": 11, "pmeier": 11, "fomin": 11, "vfdev": 11, "nayef": 11, "ahm": 11, "nayef211": 11, "parmeet": 11, "singh": 11, "bhatia": 11, "guanheng": 11, "zhangguanheng66": 11, "moto": 11, "hira": 11, "mthrok": 11, "hwang": 11, "hwangjeff": 11, "carolin": 11, "chen": 11, "carolineechen": 11, "xiaohui": 11, "zhaoheng": 11, "ni": 11, "nateanl": 11, "qb": 11, "ivchenko": 11, "divchenko": 11, "colin": 11, "colin2328": 11, "wenlei": 11, "xie": 11, "wenleix": 11, "debut": 12, "encapsul": [12, 69, 70, 1912], "henc": [12, 38, 44, 48, 56, 57, 60, 62, 69, 919, 1115, 1417, 1418, 1419, 1473, 1792, 1877, 1882, 1885, 1886, 1912, 1914], "speedup": [12, 20, 21, 22, 24, 37, 38, 1427, 1468], "address": [12, 37, 40, 57, 60, 67, 216, 904, 905, 971, 1869, 1874, 1885, 1912, 1913], "host": [12, 16, 37, 40, 48, 50, 56, 57, 58, 59, 196, 209, 576, 599, 873, 1189, 1421, 1601, 1613, 1647, 1885, 1905, 1912, 1913, 1918], "essenti": [12, 37, 40, 45, 48, 70, 1278, 1876, 1885, 1899, 1916], "wrapper": [12, 38, 40, 45, 46, 62, 69, 70, 620, 753, 786, 820, 963, 965, 966, 968, 1035, 1037, 1108, 1109, 1128, 1189, 1358, 1859, 1861, 1862, 1872, 1874, 1885, 1886, 1900, 1905], "coupl": [12, 26, 27, 66, 1859, 1892, 1913], "tricki": [12, 49, 63, 68, 1882, 1893, 1914], "cachingalloc": 12, "pool": [12, 69, 762, 763, 764, 765, 778, 779, 963, 997, 998, 1008, 1019, 1297, 1298, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1369, 1370, 1389, 1390, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1488, 1489, 1515, 1516, 1541, 1542, 1544, 1545, 1546, 1711, 1712, 1857, 1884, 1885, 1887, 1893, 1895, 1909, 1912], "freed": [12, 62, 150, 889, 903, 971, 1019, 1874, 1885, 1891, 1912], "exactli": [12, 21, 31, 38, 40, 46, 59, 904, 905, 943, 975, 979, 1062, 1108, 1109, 1186, 1189, 1230, 1365, 1368, 1421, 1449, 1452, 1512, 1522, 1601, 1648, 1659, 1869, 1875, 1882, 1885, 1886, 1887, 1890, 1891, 1900, 1904, 1905], "replai": [12, 17, 28, 963, 997, 1655, 1885], "advantag": [12, 40, 57, 58, 1338, 1382, 1886, 1889, 1912, 1916], "overwrit": [12, 34, 37, 40, 70, 1422, 1431, 1862, 1882], "burn": 12, "forth": [12, 1682, 1843, 1856, 1906], "cudagraph_tre": 12, "reclaim": [12, 1885], "ab": [12, 13, 14, 17, 21, 28, 45, 46, 90, 91, 621, 622, 678, 937, 1062, 1220, 1241, 1242, 1244, 1245, 1258, 1261, 1391, 1440, 1467, 1470, 1472, 1560, 1645, 1648, 1690, 1696, 1700, 1857, 1858, 1860, 1862, 1875, 1876, 1877, 1885, 1893, 1902, 1916, 1922], "_dynamo": [12, 13, 14, 15, 17, 19, 20, 21, 23, 25, 28, 949, 1857, 1886], "rand_lik": [12, 1860, 1864, 1885, 1902, 1924], "warm": [12, 17, 38, 44, 1008, 1680, 1681, 1885, 1906], "cubla": [12, 29, 980, 1842, 1897], "triton": [12, 17, 19, 20, 25, 28, 949, 1888], "arang": [12, 20, 29, 37, 40, 47, 510, 603, 687, 688, 689, 693, 695, 882, 883, 884, 931, 943, 947, 1045, 1060, 1078, 1082, 1090, 1096, 1098, 1102, 1103, 1104, 1105, 1112, 1113, 1152, 1209, 1210, 1214, 1217, 1241, 1244, 1245, 1258, 1321, 1442, 1443, 1444, 1445, 1446, 1473, 1474, 1475, 1557, 1648, 1649, 1695, 1703, 1707, 1722, 1729, 1734, 1755, 1787, 1795, 1806, 1822, 1823, 1825, 1826, 1828, 1850, 1858, 1860, 1869, 1877, 1898, 1902, 1917, 1921, 1922], "invari": [12, 27, 46, 1634, 1782, 1789, 1790, 1791, 1792, 1793, 1794, 1914, 1916], "overwritten": [12, 741, 742, 752, 760, 793, 837, 857, 1882, 1923], "pattern": [12, 15, 16, 27, 40, 42, 788, 789, 790, 792, 850, 857, 1005, 1358, 1637, 1785, 1859, 1862, 1882, 1885, 1887, 1889, 1891, 1898, 1908, 1909], "di": [12, 21, 1874], "yet": [12, 16, 17, 21, 22, 23, 26, 28, 41, 48, 62, 67, 69, 70, 82, 83, 965, 1036, 1192, 1194, 1206, 1294, 1601, 1615, 1619, 1621, 1857, 1861, 1862, 1868, 1876, 1877, 1885, 1900, 1902, 1907, 1912, 1914, 1916, 1917, 1919], "privat": [12, 57, 1885, 1887, 1904], "reflect": [12, 66, 456, 517, 552, 1114, 1115, 1118, 1186, 1349, 1350, 1351, 1397, 1398, 1399, 1442, 1443, 1444, 1520, 1558, 1643, 1691, 1803, 1859, 1860, 1889, 1920], "fallback": [12, 17, 28, 31, 40, 57, 65, 1202, 1252, 1881, 1885], "my_model": [12, 17, 28, 42, 1601, 1859, 1900], "y1": [12, 1655, 1784], "y2": [12, 1655, 1784], "naiv": [12, 15, 17, 37, 1905], "pend": [12, 1912, 1921], "storag": [12, 16, 42, 62, 221, 310, 338, 341, 342, 433, 456, 481, 496, 517, 520, 554, 555, 580, 581, 583, 584, 874, 891, 893, 986, 1053, 1159, 1163, 1175, 1189, 1196, 1260, 1282, 1320, 1321, 1358, 1421, 1724, 1738, 1745, 1776, 1781, 1784, 1798, 1821, 1827, 1856, 1857, 1860, 1871, 1874, 1882, 1885, 1895, 1898, 1904, 1912, 1916, 1919, 1920, 1922], "footgun": [12, 16], "uniqu": [12, 40, 48, 54, 57, 58, 59, 510, 514, 1180, 1224, 1225, 1229, 1235, 1236, 1238, 1247, 1249, 1251, 1252, 1289, 1296, 1784, 1807, 1840, 1856, 1859, 1871, 1887, 1904, 1906, 1912, 1913, 1914, 1916, 1921], "straightforward": [13, 21, 70, 1869, 1877, 1893, 1903, 1916], "gm": [13, 16, 21, 27, 28, 70], "my_custom_backend": 13, "f_opt": 13, "my_compil": [13, 14, 21], "besid": [13, 38, 40, 1885, 1886, 1921], "plugin": [13, 1906, 1921], "entry_point": [13, 58], "torch_dynamo_backend": 13, "your_modul": 13, "submodul": [13, 27, 32, 62, 70, 787, 793, 810, 834, 835, 836, 854, 857, 858, 1128, 1189, 1193, 1199, 1200, 1358, 1421, 1422, 1423, 1449, 1599, 1859, 1861, 1862, 1870, 1893, 1898, 1904, 1907, 1912, 1926], "registr": [13, 44, 45, 69, 82, 1005, 1594, 1599, 1600, 1601, 1610, 1613, 1866, 1904], "minifi": [13, 17], "typic": [13, 15, 16, 28, 31, 37, 38, 40, 46, 47, 48, 50, 57, 58, 59, 62, 70, 83, 961, 963, 1105, 1113, 1189, 1209, 1212, 1355, 1381, 1421, 1592, 1601, 1663, 1664, 1789, 1790, 1791, 1793, 1794, 1856, 1857, 1859, 1862, 1868, 1882, 1884, 1885, 1896, 1897, 1898, 1900, 1903, 1905, 1907, 1912, 1920, 1928], "canon": [13, 16, 48, 50, 1859], "opset": [13, 1858, 1900, 1901, 1902], "significantli": [13, 40, 898, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1750, 1916], "smaller": [13, 37, 70, 496, 541, 961, 1601, 1690, 1705, 1795, 1885, 1898, 1904, 1928], "aot_autograd": 13, "fw_compil": 13, "bw_compil": 13, "box": [13, 15, 18, 20, 29, 40, 45, 58, 70, 1130, 1849, 1876, 1882, 1886], "make_boxed_func": 13, "my_backend": [13, 788], "model_opt": 13, "pretti": [13, 16, 21, 1189, 1658, 1755, 1859], "bytecod": [13, 14, 17, 21, 25, 26, 28, 37, 676, 1868, 1904], "print_tabular": [13, 21, 70], "co": [13, 19, 20, 22, 68, 201, 631, 632, 679, 927, 949, 1005, 1120, 1123, 1124, 1129, 1146, 1147, 1240, 1355, 1356, 1359, 1680, 1681, 1688, 1700, 1762, 1763, 1766, 1767, 1768, 1769, 1771, 1789, 1790, 1791, 1793, 1794, 1858, 1860, 1875, 1902, 1903, 1916, 1921, 1923], "sin": [13, 19, 20, 22, 26, 31, 67, 68, 528, 665, 666, 877, 949, 1005, 1120, 1122, 1123, 1124, 1126, 1129, 1147, 1240, 1290, 1700, 1763, 1769, 1858, 1860, 1875, 1882, 1902, 1916, 1917, 1921], "opcod": [13, 14, 21, 70, 1904], "placehold": [13, 14, 27, 70, 71, 76, 77, 78, 79, 80, 81, 830, 1383, 1885], "call_funct": [13, 14, 17, 21, 27, 28, 70, 82, 83], "0x7f1a894649a8": 13, "mockmodul": 13, "optimized_mod": 13, "abs_1": [13, 14], "0x7f8d259298a0": 13, "truediv": [13, 14, 70], "call_method": [13, 14, 21, 70], "sum_1": [13, 14, 70], "lt": [13, 14, 362, 394, 1215, 1858, 1859, 1860, 1875, 1902], "mul_1": 13, "nondeterminist": [13, 70, 312, 314, 320, 512, 514, 920, 1210, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1417, 1418, 1419, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1512, 1520, 1531, 1558, 1570, 1589, 1590, 1591, 1749, 1842], "offer": [13, 17, 40, 62, 65, 1601, 1842, 1858, 1885, 1891, 1904, 1916], "superior": 13, "real": [13, 15, 16, 20, 21, 22, 37, 46, 70, 682, 683, 684, 685, 686, 688, 694, 904, 917, 942, 951, 957, 1008, 1078, 1079, 1081, 1083, 1084, 1085, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1179, 1181, 1182, 1185, 1186, 1209, 1218, 1219, 1220, 1224, 1225, 1226, 1227, 1228, 1231, 1232, 1233, 1238, 1241, 1243, 1245, 1246, 1247, 1248, 1252, 1253, 1257, 1258, 1259, 1269, 1275, 1388, 1430, 1433, 1434, 1470, 1608, 1803, 1807, 1846, 1847, 1848, 1856, 1857, 1858, 1860, 1862, 1882, 1885, 1902, 1904, 1907, 1912, 1914, 1920, 1922, 1923, 1927], "optimize_for_infer": [13, 1193], "optimize_for_inference_compil": 13, "And": [13, 18, 20, 21, 66, 793, 820, 1041, 1042, 1118, 1189, 1210, 1286, 1291, 1344, 1421, 1882, 1887, 1888, 1899, 1900, 1907, 1926], "code_to_acceler": 13, "trt_compil": 13, "tensorrt": [13, 17, 20, 1907], "inductor_compil": 13, "tensor_match": 14, "function_match": 14, "recaptur": 14, "recompil": [14, 15, 21, 22, 23, 31, 70, 676, 1202, 1868, 1891], "dispatch_kei": [14, 1866], "ndim": [14, 1254, 1255, 1875, 1877, 1916, 1922], "log_level": [14, 17, 28, 1886], "info": [14, 15, 16, 17, 28, 40, 48, 51, 55, 676, 888, 965, 966, 968, 1219, 1230, 1232, 1233, 1237, 1250, 1278, 1302, 1303, 1657, 1857, 1860, 1868, 1886, 1887, 1888, 1900, 1904], "output_cod": [14, 28, 676, 1868], "spammi": [14, 1868], "printout": [14, 70, 1007, 1020], "__compiled_fn_0": 14, "eval_with_kei": 14, "0x7f9ca082f8a0": 14, "load_fast": [14, 21], "load_glob": 14, "load_method": 14, "6": [14, 17, 24, 28, 31, 34, 37, 38, 40, 46, 55, 70, 312, 314, 316, 320, 400, 401, 469, 485, 496, 510, 514, 556, 603, 681, 682, 687, 693, 737, 738, 739, 741, 742, 754, 757, 759, 761, 897, 898, 900, 901, 902, 920, 928, 933, 939, 942, 943, 947, 961, 974, 1021, 1025, 1039, 1040, 1041, 1045, 1046, 1057, 1060, 1061, 1078, 1086, 1091, 1092, 1096, 1097, 1099, 1101, 1102, 1105, 1112, 1142, 1152, 1154, 1155, 1178, 1199, 1210, 1214, 1225, 1241, 1245, 1246, 1247, 1254, 1255, 1259, 1261, 1290, 1294, 1319, 1320, 1321, 1334, 1345, 1348, 1353, 1356, 1364, 1365, 1374, 1375, 1376, 1378, 1379, 1417, 1418, 1422, 1430, 1438, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1464, 1465, 1467, 1472, 1478, 1487, 1517, 1524, 1525, 1557, 1559, 1566, 1592, 1636, 1637, 1639, 1641, 1647, 1648, 1649, 1661, 1675, 1695, 1696, 1699, 1706, 1707, 1713, 1714, 1717, 1723, 1733, 1734, 1738, 1742, 1755, 1776, 1780, 1784, 1787, 1789, 1790, 1795, 1806, 1808, 1809, 1810, 1817, 1822, 1823, 1824, 1825, 1826, 1828, 1831, 1833, 1837, 1842, 1850, 1851, 1857, 1858, 1859, 1862, 1863, 1869, 1877, 1880, 1882, 1887, 1888, 1893, 1898, 1900, 1912, 1913, 1916, 1917, 1919, 1922, 1923, 1927], "load_const": [14, 21], "12": [14, 24, 37, 38, 40, 62, 320, 514, 613, 682, 737, 738, 739, 741, 742, 939, 943, 1060, 1078, 1152, 1193, 1208, 1247, 1329, 1345, 1353, 1368, 1369, 1370, 1418, 1433, 1434, 1455, 1464, 1472, 1515, 1516, 1556, 1561, 1562, 1609, 1642, 1695, 1706, 1755, 1770, 1780, 1822, 1838, 1850, 1856, 1859, 1860, 1863, 1869, 1885, 1894, 1898, 1900, 1902, 1916, 1923], "binary_add": 14, "14": [14, 40, 320, 514, 942, 1005, 1006, 1045, 1060, 1152, 1241, 1247, 1315, 1345, 1418, 1706, 1713, 1780, 1822, 1823, 1828, 1850, 1859, 1863, 1900, 1902, 1916, 1920, 1921], "binary_true_divid": 14, "16": [14, 17, 28, 36, 40, 320, 613, 734, 735, 736, 737, 738, 739, 768, 1060, 1078, 1105, 1142, 1152, 1189, 1200, 1212, 1218, 1224, 1225, 1229, 1245, 1321, 1333, 1335, 1336, 1344, 1345, 1348, 1349, 1350, 1351, 1353, 1354, 1359, 1360, 1361, 1362, 1366, 1369, 1370, 1389, 1390, 1391, 1409, 1414, 1415, 1416, 1418, 1419, 1421, 1428, 1436, 1447, 1464, 1478, 1495, 1497, 1498, 1500, 1504, 1515, 1516, 1651, 1703, 1780, 1842, 1846, 1850, 1859, 1863, 1880, 1885, 1893, 1896, 1898, 1900, 1902, 1905, 1912, 1916, 1917, 1919, 1921, 1922], "store_fast": 14, "11": [14, 28, 31, 40, 320, 510, 939, 943, 1008, 1060, 1152, 1209, 1245, 1259, 1275, 1329, 1345, 1370, 1418, 1516, 1648, 1649, 1658, 1780, 1822, 1850, 1859, 1863, 1869, 1876, 1885, 1899, 1900, 1902, 1916, 1917], "18": [14, 40, 320, 443, 681, 1063, 1142, 1186, 1261, 1418, 1859, 1900, 1902, 1916], "20": [14, 16, 21, 40, 44, 46, 320, 681, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 742, 752, 756, 757, 758, 759, 760, 761, 768, 1142, 1187, 1190, 1200, 1211, 1245, 1310, 1333, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1344, 1348, 1349, 1350, 1351, 1353, 1354, 1359, 1360, 1361, 1362, 1366, 1369, 1370, 1373, 1374, 1376, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1408, 1414, 1415, 1416, 1418, 1419, 1421, 1436, 1438, 1449, 1457, 1460, 1463, 1464, 1465, 1466, 1478, 1495, 1497, 1498, 1500, 1504, 1515, 1516, 1522, 1578, 1608, 1609, 1633, 1642, 1645, 1666, 1681, 1709, 1818, 1859, 1860, 1877, 1886, 1887, 1896, 1903, 1912, 1916], "22": [14, 40, 46, 320, 613, 1261, 1592, 1638, 1640, 1859, 1897, 1916], "24": [14, 38, 40, 46, 922, 1247, 1409, 1485, 1641, 1706, 1823, 1859, 1880, 1884, 1917], "26": [14, 28, 1244, 1681], "compare_op": 14, "28": [14, 613, 742, 1045, 1828, 1900], "pop_jump_if_fals": 14, "38": [14, 1315], "30": [14, 22, 37, 40, 46, 48, 57, 443, 613, 716, 724, 725, 752, 760, 1142, 1211, 1342, 1344, 1348, 1408, 1472, 1478, 1495, 1504, 1592, 1684, 1686, 1692, 1709, 1818, 1887, 1900, 1903, 1912], "34": [14, 21, 28, 40], "binary_multipli": [14, 21], "36": [14, 21, 40, 320, 1105, 1142], "13": [14, 28, 40, 871, 943, 1060, 1063, 1107, 1142, 1152, 1193, 1278, 1345, 1369, 1370, 1418, 1455, 1515, 1516, 1780, 1822, 1850, 1859, 1863, 1902, 1916], "42": [14, 37, 820, 927, 1310, 1762, 1885, 1893], "return_valu": [14, 48, 49, 55], "unpack_sequ": 14, "__resume_at_30_1": 14, "__resume_at_38_2": 14, "offset": [14, 21, 44, 48, 225, 226, 227, 228, 338, 517, 554, 742, 874, 1050, 1051, 1052, 1053, 1115, 1223, 1365, 1512, 1601, 1708, 1709, 1787, 1832, 1834, 1860, 1862], "__resume_at_": 14, "jump_absolut": 14, "resume_at": 14, "remaind": [14, 37, 487, 1110, 1142, 1858, 1860, 1902], "restart": [14, 38, 48, 56, 58, 60, 1680, 1681, 1874, 1921], "symbolic_shap": 15, "assumpt": [15, 17, 23, 28, 42, 54, 58, 904, 1344, 1375, 1882, 1886, 1890, 1912, 1913, 1916], "situat": [15, 16, 17, 20, 37, 46, 59, 70, 957, 1613, 1874, 1887, 1888, 1895, 1896, 1904, 1907, 1914, 1927], "insuffici": [15, 28, 1009], "batch": [15, 16, 17, 19, 28, 38, 40, 46, 58, 60, 63, 64, 67, 68, 70, 579, 580, 581, 583, 584, 682, 698, 699, 700, 701, 702, 703, 731, 756, 775, 781, 903, 904, 905, 917, 929, 930, 937, 940, 941, 942, 949, 962, 1050, 1052, 1062, 1123, 1124, 1130, 1186, 1218, 1219, 1220, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1261, 1269, 1278, 1279, 1283, 1337, 1338, 1339, 1340, 1341, 1344, 1349, 1350, 1355, 1357, 1358, 1360, 1361, 1362, 1364, 1365, 1366, 1368, 1373, 1374, 1375, 1376, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1412, 1413, 1424, 1425, 1426, 1427, 1428, 1430, 1433, 1434, 1435, 1436, 1438, 1452, 1453, 1460, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1485, 1490, 1492, 1493, 1503, 1504, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1517, 1530, 1531, 1532, 1555, 1563, 1570, 1588, 1589, 1592, 1601, 1608, 1634, 1635, 1637, 1638, 1640, 1681, 1682, 1688, 1694, 1696, 1706, 1710, 1789, 1790, 1791, 1793, 1794, 1798, 1803, 1807, 1808, 1827, 1830, 1831, 1833, 1846, 1849, 1857, 1875, 1876, 1877, 1881, 1885, 1888, 1889, 1893, 1895, 1905, 1907, 1912, 1916, 1921, 1922], "vari": [15, 16, 17, 28, 815, 1452, 1634, 1764, 1872, 1896, 1903, 1907, 1908, 1916], "servic": [15, 49, 1886], "window": [15, 31, 37, 40, 70, 350, 552, 918, 927, 1146, 1147, 1186, 1208, 1334, 1335, 1336, 1369, 1370, 1389, 1390, 1414, 1415, 1416, 1417, 1418, 1419, 1487, 1515, 1516, 1544, 1545, 1546, 1711, 1712, 1803, 1857, 1860, 1872, 1885], "pad": [15, 19, 37, 38, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 731, 734, 735, 736, 737, 738, 739, 764, 765, 768, 769, 770, 775, 778, 779, 781, 949, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1186, 1334, 1335, 1336, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1364, 1365, 1368, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1425, 1427, 1442, 1443, 1444, 1445, 1446, 1447, 1467, 1468, 1472, 1476, 1477, 1478, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1511, 1512, 1514, 1520, 1531, 1544, 1545, 1546, 1547, 1548, 1549, 1588, 1589, 1635, 1637, 1638, 1640, 1711, 1712, 1803, 1857, 1858, 1860, 1877, 1889, 1900, 1902, 1907, 1921], "exhibit": [15, 28, 1658, 1900], "imag": [15, 17, 18, 28, 31, 37, 737, 738, 739, 857, 858, 951, 1327, 1331, 1332, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1368, 1369, 1370, 1385, 1393, 1428, 1433, 1434, 1455, 1472, 1474, 1475, 1485, 1496, 1497, 1499, 1500, 1514, 1515, 1520, 1531, 1588, 1589, 1731, 1857, 1858, 1860, 1877, 1890, 1902, 1905, 1920, 1921], "recognit": 15, "jag": 15, "chose": [15, 48, 1881], "whose": [15, 28, 40, 46, 62, 70, 540, 855, 891, 939, 956, 1050, 1062, 1067, 1115, 1133, 1142, 1145, 1151, 1189, 1205, 1213, 1259, 1275, 1277, 1322, 1421, 1601, 1649, 1700, 1758, 1824, 1862, 1882, 1887, 1890, 1904, 1916, 1921, 1923], "dimension": [15, 46, 510, 512, 876, 882, 883, 884, 928, 935, 947, 1050, 1052, 1053, 1062, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1096, 1097, 1099, 1101, 1103, 1104, 1115, 1142, 1151, 1152, 1153, 1221, 1226, 1227, 1228, 1229, 1254, 1259, 1275, 1283, 1290, 1329, 1346, 1347, 1348, 1357, 1358, 1364, 1365, 1393, 1411, 1428, 1442, 1443, 1444, 1445, 1446, 1447, 1454, 1456, 1460, 1476, 1477, 1478, 1503, 1555, 1558, 1590, 1591, 1608, 1647, 1713, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1818, 1821, 1822, 1828, 1862, 1877, 1880, 1883, 1890, 1896, 1916, 1918, 1919, 1922, 1924], "induct": 15, "pt2": [15, 16, 18], "integ": [15, 37, 40, 46, 57, 288, 443, 445, 447, 541, 556, 562, 681, 682, 683, 684, 685, 686, 762, 763, 781, 783, 861, 888, 917, 918, 927, 938, 956, 966, 968, 984, 990, 991, 1019, 1057, 1060, 1062, 1063, 1105, 1106, 1107, 1108, 1109, 1110, 1115, 1116, 1120, 1121, 1122, 1123, 1124, 1132, 1146, 1147, 1150, 1151, 1152, 1199, 1202, 1211, 1212, 1219, 1230, 1232, 1242, 1261, 1310, 1329, 1344, 1349, 1350, 1351, 1393, 1479, 1480, 1481, 1482, 1483, 1484, 1591, 1634, 1649, 1652, 1684, 1687, 1691, 1696, 1708, 1709, 1715, 1717, 1718, 1719, 1721, 1726, 1735, 1747, 1795, 1804, 1808, 1822, 1823, 1836, 1850, 1854, 1861, 1862, 1863, 1875, 1888, 1890, 1905, 1908, 1910, 1916, 1917, 1919, 1922, 1923, 1928], "opt": [15, 40, 44, 1200, 1678, 1679, 1685, 1689, 1691, 1859, 1890], "yolo": 15, "automat": [15, 16, 17, 20, 28, 31, 38, 40, 45, 57, 58, 70, 150, 585, 885, 887, 999, 1008, 1151, 1198, 1204, 1290, 1467, 1570, 1602, 1725, 1755, 1856, 1857, 1861, 1862, 1870, 1871, 1875, 1876, 1882, 1883, 1885, 1887, 1893, 1895, 1900, 1904, 1905, 1907, 1908, 1912, 1921, 1922, 1924], "torch_log": [15, 676, 1868], "torchinductor": [15, 20, 25, 676, 1868], "written": [15, 20, 27, 28, 40, 50, 67, 912, 1021, 1358, 1656, 1676, 1859, 1861, 1869, 1870, 1882, 1886, 1887, 1888, 1893, 1898, 1900, 1904, 1906, 1918, 1921], "hint": [15, 21, 963, 997, 1190, 1427, 1465, 1466, 1467, 1468, 1859, 1861, 1862, 1885], "consult": [15, 1904], "greatli": [15, 31, 70, 1885], "formula": [15, 46, 88, 764, 765, 885, 887, 918, 927, 1146, 1147, 1214, 1280, 1281, 1435, 1488, 1489, 1577, 1676, 1709, 1887, 1890, 1906, 1911], "flatten": [15, 38, 62, 70, 870, 871, 1051, 1151, 1245, 1258, 1472, 1648, 1655, 1659, 1707, 1723, 1728, 1733, 1838, 1839, 1840, 1860, 1875, 1876, 1880, 1900, 1902, 1909, 1920], "awai": [15, 38, 70, 1520, 1857, 1876, 1882, 1888], "bailout": [15, 1902], "express": [15, 17, 28, 29, 42, 63, 67, 68, 70, 318, 1187, 1190, 1803, 1863, 1870, 1877, 1882, 1887, 1927], "meta": [15, 16, 18, 20, 27, 62, 66, 70, 335, 1866, 1912, 1921, 1923], "workflow": [15, 16, 23, 24, 32, 1856, 1887, 1907, 1908, 1924], "shapeenv": [15, 16], "attach": [15, 65, 69, 70, 139, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 789, 834, 836, 860, 1592, 1856, 1859, 1861, 1875, 1882, 1887, 1907, 1913, 1925], "faketensormod": [15, 16], "knob": [15, 1885], "faithfulli": 15, "sympi": 15, "induc": [15, 896, 1520, 1558, 1880], "simplif": [15, 42], "s0": [15, 28], "occurr": [15, 62, 401, 1187, 1289, 1634, 1839, 1840], "reusabl": 15, "c10": [15, 57, 1892], "symfloat": [15, 1811, 1812, 1924], "symbool": [15, 1815, 1924], "plumb": 15, "symnodeimpl": 15, "csrc": [15, 1899], "python_symnod": 15, "init": [15, 40, 48, 50, 62, 1189, 1421, 1429, 1448, 1641, 1857, 1864, 1882, 1887, 1892, 1893], "_subclass": [15, 16], "fake_tensor": [15, 16], "_meta_registr": 15, "decomp": [15, 16], "primtorch": [15, 16, 20], "ref": [15, 21, 28, 1856], "visibl": [15, 18, 31, 40, 42, 54, 987, 1032, 1422, 1423, 1431, 1432], "simul": [15, 46, 795, 797, 1907, 1910], "counterpart": [15, 853, 860, 1258, 1601, 1862, 1870, 1924, 1925], "symnod": 15, "eras": [15, 70], "mix": [15, 25, 31, 38, 46, 62, 1008, 1601, 1857, 1882, 1884, 1907, 1916], "xla": [15, 1857], "far": [15, 58, 1198, 1520], "vice": [15, 70, 456, 599, 1114, 1115, 1413, 1882, 1910, 1918], "versa": [15, 70, 456, 599, 1114, 1115, 1413, 1882, 1910, 1918], "fairli": [15, 1905], "apparatu": 15, "traceabl": [15, 20, 70, 620, 813, 1859, 1907], "make_fx": [15, 28, 1119], "aka": [15, 40, 913, 1382, 1882, 1919], "aris": [15, 46, 70, 1882], "emerg": [15, 1899], "illeg": [15, 62, 1885], "enhanc": [15, 40, 62, 1601], "precomput": 15, "empty_strid": [15, 1858, 1860, 1864, 1902], "eagerli": [15, 994, 1000, 1885], "needlessli": [15, 1885], "nontrivi": [15, 40, 1885], "lazi": [15, 954, 1201, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1592, 1857], "constrain_rang": 15, "wherebi": 15, "trash": 16, "bad": [16, 70, 1874, 1900, 1904, 1907], "accur": [16, 22, 50, 965, 1142, 1264, 1363, 1713, 1828, 1885, 1913], "suppos": [16, 18, 40, 70, 1186, 1691, 1869, 1916], "val": [16, 21, 1005, 1195, 1860, 1862, 1880], "stuff": [16, 70], "probabl": [16, 17, 18, 23, 37, 154, 756, 919, 1150, 1266, 1311, 1329, 1333, 1337, 1344, 1357, 1359, 1360, 1361, 1362, 1366, 1373, 1375, 1391, 1427, 1428, 1436, 1492, 1503, 1504, 1505, 1506, 1507, 1508, 1513, 1522, 1532, 1555, 1570, 1706, 1874, 1887, 1899, 1900, 1917, 1921], "wouldn": [16, 1914], "alias": [16, 62, 891, 1119, 1130, 1531, 1849, 1861, 1862, 1866, 1887], "almost": [16, 1235, 1236, 1899], "subclass_zoo": 16, "subgraph": [16, 19, 28, 949, 1658, 1882, 1886, 1900, 1904, 1926], "possibli": [16, 37, 57, 62, 1189, 1204, 1231, 1236, 1421, 1601, 1859, 1866, 1897, 1904], "bunch": 16, "from_real_tensor": 16, "memo": [16, 1189, 1421], "fakeifi": 16, "alia": [16, 42, 46, 51, 91, 92, 111, 187, 188, 352, 405, 434, 435, 442, 537, 678, 862, 863, 864, 865, 866, 867, 868, 885, 945, 952, 953, 1048, 1055, 1058, 1069, 1070, 1071, 1073, 1074, 1100, 1135, 1143, 1144, 1156, 1157, 1158, 1167, 1187, 1189, 1215, 1216, 1223, 1239, 1243, 1246, 1274, 1284, 1285, 1295, 1312, 1314, 1324, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1421, 1531, 1604, 1634, 1650, 1693, 1698, 1701, 1736, 1759, 1774, 1777, 1779, 1805, 1809, 1810, 1829, 1835, 1853, 1858, 1862, 1887, 1902, 1917, 1918, 1922], "faketensor": 16, "__torch_dispatch__": 16, "dispatch_devic": 16, "lie": [16, 1454, 1456, 1576, 1786, 1917, 1921], "prone": [16, 1874, 1895], "ly": 16, "whatev": [16, 17, 59, 70, 446, 1601, 1746, 1830, 1862, 1888], "derefer": 16, "pointer": [16, 34, 139, 980, 1437, 1885, 1886, 1892, 1912, 1914], "segfault": [16, 1874, 1896], "backtrac": 16, "unexpect": [16, 17, 21, 40, 47, 70, 962, 1113, 1115, 1118, 1189, 1421, 1643, 1659, 1798, 1859, 1882, 1887, 1896], "reinterpret": [16, 46, 496], "magic": [16, 1860, 1863, 1924], "in_kernel_invocation_manag": 16, "underli": [16, 21, 40, 42, 44, 46, 48, 62, 67, 70, 97, 310, 325, 376, 399, 401, 471, 472, 473, 474, 481, 496, 517, 520, 553, 554, 555, 609, 744, 753, 874, 965, 1159, 1163, 1189, 1260, 1320, 1563, 1724, 1827, 1841, 1859, 1862, 1877, 1885, 1889, 1891, 1905, 1912, 1918, 1920], "unwrap": 16, "promot": [16, 62, 681, 922, 925, 934, 1005, 1057, 1105, 1107, 1108, 1109, 1110, 1310, 1360, 1361, 1362, 1366, 1502, 1705, 1725, 1726, 1732, 1747, 1804, 1858, 1862, 1919, 1923], "test_fake_tensor": 16, "fake_mod": 16, "fake_x": 16, "fake_i": 16, "fake_z": 16, "pre": [16, 23, 28, 32, 40, 44, 62, 70, 903, 910, 1189, 1421, 1596, 1598, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1656, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1679, 1685, 1856, 1859, 1862, 1870, 1882, 1884, 1893, 1900, 1905, 1922], "aotautograd": [16, 17, 18, 20, 28, 66, 676, 1868, 1886, 1901], "_guard": 16, "detect_fake_mod": 16, "fake_arg": 16, "lifecycl": [16, 21], "proxy_tensor": [16, 28, 1119], "maybe_disable_fake_tensor_mod": 16, "nich": 16, "faketensorprop": 16, "fake_tensor_prop": 16, "real_input": [16, 1885], "popul": [16, 27, 40, 46, 55, 62, 69, 70, 334, 492, 500, 501, 1289, 1317, 1885], "propagate_dont_convert_input": 16, "fake_input": 16, "real_tensor": 16, "t_": [16, 1290, 1370, 1516, 1680, 1681, 1860, 1916], "opportun": [16, 17, 1219, 1859, 1913], "conserv": [16, 1866, 1869, 1885], "annoi": 16, "practic": [16, 17, 37, 40, 46, 62, 1857, 1859, 1869, 1874, 1876, 1882, 1887, 1890, 1893, 1898, 1904, 1912], "feed": [16, 70, 1859, 1889, 1893, 1925], "somehow": 16, "fakecopymod": 16, "gave": 16, "fakeif": 16, "face": [16, 1887, 1904, 1921], "invalid": [16, 21, 50, 55, 1189, 1311, 1421, 1881, 1882, 1900, 1904, 1905], "old": [16, 21, 40, 47, 70, 850, 1113, 1361, 1653, 1690, 1738, 1855, 1857, 1859, 1882, 1885, 1887, 1899, 1907, 1921], "tension": 16, "seriou": [16, 1874, 1885], "analys": 16, "occasion": [16, 1885, 1916], "mistak": [16, 1862, 1889], "redispatch": 16, "lift": [16, 68, 1130, 1849, 1876, 1902], "recogn": [16, 37, 1862, 1912, 1916], "notimpl": [16, 1862, 1863, 1887], "hopefulli": 16, "desugar": [16, 1862], "plain": [16, 31, 1338, 1422, 1431, 1608, 1791, 1887, 1916], "infinit": [16, 37, 1181, 1261, 1337, 1344, 1504, 1700, 1887, 1896, 1912], "fastpath": [16, 1427], "certain": [16, 17, 21, 28, 37, 38, 40, 54, 55, 67, 69, 70, 682, 685, 731, 917, 929, 987, 1050, 1164, 1186, 1189, 1196, 1260, 1283, 1293, 1349, 1350, 1351, 1352, 1353, 1354, 1374, 1392, 1408, 1421, 1427, 1472, 1521, 1532, 1534, 1647, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1862, 1869, 1876, 1882, 1883, 1885, 1887, 1892, 1893, 1896, 1900, 1905, 1906, 1912, 1913, 1916], "custom_op": [16, 1900], "impl_abstract": 16, "hardcod": 16, "nor": [16, 37, 40, 48, 62, 791, 895, 1224, 1225, 1252, 1427, 1468, 1601, 1648, 1705, 1807, 1887, 1900], "sensit": [16, 38, 1382, 1452, 1900, 1904, 1913], "carefulli": [16, 18, 66, 69, 1888, 1904], "leaf": [16, 54, 150, 222, 334, 446, 500, 501, 787, 834, 836, 875, 889, 1128, 1658, 1821, 1877, 1881, 1882, 1900, 1926], "ness": [16, 58], "bulk": [16, 37], "metaconvert": 16, "pointwis": [16, 19, 20, 46, 949, 1123, 1124, 1266, 1267, 1387, 1875, 1883], "impli": [16, 38, 57, 1874, 1882, 1900, 1905, 1910, 1912], "ti": [16, 1118, 1643, 1735], "die": 16, "unback": 16, "symint": [16, 1811, 1812, 1813, 1814, 1815, 1858, 1924], "memoiz": [16, 46], "colab": [16, 1866, 1904], "saroufim": 17, "evalfram": 17, "min": [17, 37, 40, 50, 57, 70, 116, 185, 186, 187, 188, 299, 691, 692, 693, 754, 766, 767, 776, 798, 815, 816, 817, 818, 821, 871, 944, 945, 1005, 1042, 1076, 1077, 1149, 1220, 1234, 1235, 1241, 1245, 1247, 1252, 1258, 1278, 1311, 1343, 1380, 1407, 1409, 1429, 1441, 1448, 1494, 1531, 1535, 1564, 1566, 1571, 1589, 1675, 1680, 1681, 1690, 1694, 1696, 1706, 1807, 1831, 1832, 1833, 1834, 1858, 1860, 1872, 1875, 1900, 1902, 1907, 1910, 1912, 1928], "partit": [17, 27, 44, 45, 1329, 1828, 1900, 1902, 1905, 1913, 1914], "usercod": 17, "ddp": [17, 40, 41, 42, 44, 62, 1460, 1601, 1857, 1885, 1886, 1912], "unrol": [17, 1861, 1862, 1900], "fsdp": [17, 42, 45, 62, 1857], "delai": [17, 1601, 1914], "outlin": [17, 41, 1905, 1913], "bucket": [17, 28, 38, 44, 1329, 1601, 1860, 1886, 1902], "broadcast": [17, 40, 44, 46, 62, 67, 97, 196, 397, 399, 400, 401, 510, 512, 514, 562, 681, 682, 683, 684, 685, 686, 687, 693, 731, 880, 917, 922, 925, 929, 930, 931, 932, 956, 976, 1005, 1056, 1057, 1062, 1067, 1107, 1108, 1109, 1110, 1131, 1133, 1145, 1155, 1213, 1214, 1221, 1234, 1238, 1243, 1244, 1246, 1249, 1257, 1277, 1282, 1283, 1293, 1310, 1313, 1322, 1325, 1338, 1356, 1375, 1427, 1493, 1502, 1564, 1601, 1659, 1695, 1703, 1726, 1728, 1804, 1823, 1828, 1852, 1857, 1858, 1862, 1875, 1876, 1877, 1886, 1900, 1902, 1917], "fraction": [17, 37, 46, 1032, 1105, 1111, 1306, 1352, 1353, 1354, 1369, 1370, 1427, 1468, 1515, 1516, 1618, 1619, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1707, 1880], "rob": 17, "fusion": [17, 19, 20, 27, 28, 70, 788, 810, 856, 857, 949, 1191, 1197, 1202, 1203, 1204, 1205, 1870, 1893, 1907], "diminish": 17, "vast": 17, "250k": 17, "aitempl": 17, "fuse": [17, 19, 20, 27, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 788, 789, 798, 800, 801, 802, 810, 843, 855, 856, 949, 1202, 1203, 1570, 1663, 1664, 1870, 1875, 1900, 1903, 1907, 1908, 1909, 1910], "mobil": [17, 1870, 1907], "ran": [17, 23, 28, 34, 62], "fine": [17, 31, 40, 42, 44, 47, 854, 857, 1113, 1204, 1570, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1856, 1857, 1874, 1882, 1885, 1887, 1900, 1904, 1905, 1907], "succeed": [17, 48, 57, 72, 74, 1278], "aot_eag": [17, 28], "warn": [17, 18, 21, 22, 28, 31, 34, 38, 40, 44, 62, 676, 897, 903, 939, 974, 1021, 1025, 1036, 1039, 1040, 1130, 1170, 1204, 1246, 1290, 1427, 1465, 1466, 1467, 1468, 1610, 1613, 1749, 1757, 1842, 1849, 1856, 1868, 1872, 1883, 1887, 1902, 1904, 1911], "torchdynamo_debug_funct": [17, 28], "desired_function_nam": 17, "replay_record_en": [17, 28], "hundr": [17, 28, 1881, 1892], "thousand": [17, 28], "highli": [17, 57, 1329, 1601, 1856, 1894, 1900, 1916, 1923], "tini": [17, 1922, 1923, 1928], "torchdynamo_repro_aft": [17, 28], "aot": [17, 18, 28, 676, 1868], "your_model": 17, "quickest": 17, "repro": [17, 28, 1658], "torchdynamo_repro_dir": 17, "nvfuser": [17, 20, 28, 1859], "leverag": [17, 19, 949, 1912], "compile_tim": [17, 28], "torch_compile_debug": [17, 20], "_inductor": [17, 19, 22, 28, 949], "diagram": [17, 28, 48, 57, 1189, 1421, 1907, 1914], "cache_size_limit": [17, 21, 28], "troubl": [17, 18, 28], "compileprofil": [17, 28], "profiler_model": [17, 28], "upcom": [17, 28, 40, 62, 1881], "tune": [17, 28, 38, 40, 44, 1019, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1882, 1885, 1894, 1907], "traffic": 17, "frozen_toy_exampl": 17, "vertic": [17, 1850, 1851, 1903, 1905, 1921], "cosin": [17, 679, 680, 958, 959, 1355, 1356, 1502, 1680, 1681, 1688, 1766, 1903], "horizont": [17, 947, 1152, 1154, 1903, 1905], "simplest": [17, 21, 22, 37, 42, 48, 70, 854, 1334, 1335, 1336, 1349, 1350, 1351, 1414, 1415, 1416, 1611, 1886, 1887, 1893, 1907, 1914, 1916], "schedul": [17, 42, 48, 50, 56, 62, 69, 676, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1868, 1886, 1892, 1906], "physic": [17, 58, 1080, 1098, 1863, 1884, 1916], "principl": [17, 1885], "stream": [17, 37, 40, 48, 55, 62, 69, 150, 484, 889, 903, 963, 964, 965, 966, 969, 970, 971, 979, 982, 983, 997, 1003, 1035, 1038, 1302, 1303, 1308, 1656, 1728, 1857, 1860, 1862, 1912], "multiprocessor": 17, "tile": [17, 490, 1860, 1902], "some_fun": [17, 28], "insurmount": [17, 28], "invis": [17, 28, 1885], "introduc": [17, 22, 23, 28, 34, 46, 67, 756, 1261, 1373, 1391, 1436, 1531, 1733, 1856, 1862, 1883, 1886, 1894, 1900, 1904, 1905, 1906, 1912, 1922], "maxim": [17, 28, 870, 1286, 1417, 1418, 1419, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1674, 1675, 1676, 1677, 1916], "explain": [17, 28, 32, 40, 1677, 1856, 1862, 1881, 1885, 1888], "aggreg": [17, 28, 38, 40, 42, 50, 62, 1365, 1512, 1601, 1624, 1872, 1905], "woo": [17, 28], "out_guard": [17, 28], "ops_per_graph": [17, 28], "builtinvari": [17, 28], "constantvari": [17, 21, 28], "t2": [17, 28, 47, 683, 684, 876, 1113, 1142, 1601, 1912, 1913], "generic_jump": [17, 28], "17": [17, 28, 31, 40, 681, 1186, 1241, 1418, 1780, 1859, 1900, 1902, 1916], "throw": [17, 20, 28, 40, 41, 45, 62, 69, 70, 190, 322, 327, 541, 610, 1174, 1189, 1229, 1278, 1421, 1601, 1603, 1604, 1637, 1648, 1702, 1842, 1877, 1882, 1897, 1912, 1922], "fullgraph": [17, 19, 28, 949], "went": [17, 40, 70], "torchdynamo_dynamic_shap": 17, "cv": 17, "nlp": [17, 38, 1384, 1385, 1386, 1393], "client": [17, 40, 44, 57, 1019, 1904], "app": 17, "unnecessarili": 17, "cold": [17, 24], "metric": [17, 24, 43, 1011, 1013, 1019, 1690, 1872, 1893, 1906, 1921], "visibli": 17, "torchdynamo_repro_level": [17, 28], "bisect": [17, 28], "codegen": [17, 28, 70], "dramat": [17, 28], "impact": [17, 23, 28, 38, 40, 1019, 1750, 1870, 1872, 1882, 1907, 1920], "fallback_random": [17, 19, 28, 949], "alpha": [17, 46, 97, 98, 99, 100, 105, 106, 107, 108, 109, 110, 151, 152, 311, 312, 550, 557, 558, 559, 560, 681, 682, 685, 686, 687, 740, 766, 771, 917, 1005, 1006, 1146, 1160, 1333, 1343, 1363, 1409, 1448, 1486, 1494, 1509, 1510, 1520, 1538, 1571, 1660, 1674, 1767, 1768, 1781, 1785, 1799, 1804, 1805, 1858, 1860, 1882, 1887, 1900, 1903], "root": [17, 40, 42, 50, 57, 58, 62, 70, 789, 1127, 1226, 1227, 1674, 1737, 1796, 1870, 1882, 1904, 1912, 1913, 1916], "allevi": [17, 1905], "cudagraph": [17, 19, 20, 24, 949, 997, 1857, 1885], "amen": 18, "portion": [18, 28, 62, 1111, 1358, 1452, 1560, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1908], "usecas": 18, "excel": [18, 70], "unblock": 18, "friendli": 18, "disallow": [18, 70, 1904, 1912, 1919], "nnthi": 18, "suitabl": [18, 37, 46, 933, 1208, 1677, 1742, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1896, 1906, 1908, 1921], "fbgemm": [18, 738, 739, 752, 760, 829, 851, 852, 855, 857, 858, 1907, 1908], "black": 18, "nnnote": 18, "screen": 18, "deploy": [18, 48, 57, 1857], "tl": [18, 20], "dr": 18, "intercept": [18, 62, 70], "a_fn": 18, "b_fn": 18, "aa_fn": 18, "ab_fn": 18, "green": [18, 1861, 1862], "color": [18, 1386, 1861, 1862, 1921], "white": 18, "offend": [18, 1856], "syntax": [18, 1189, 1859, 1862, 1904], "style": [18, 42, 45, 47, 70, 873, 1057, 1113, 1647, 1859, 1861, 1862, 1900, 1904, 1921], "miss": [18, 21, 55, 62, 685, 1118, 1189, 1283, 1293, 1355, 1384, 1385, 1386, 1421, 1537, 1643, 1899, 1900, 1901, 1916], "incorrectli": [18, 34, 62, 966, 1107], "cautiou": 18, "switch": [18, 29, 37, 65, 69, 70, 1231, 1232, 1233, 1361, 1520, 1558, 1605, 1738, 1842, 1874, 1882, 1885, 1893, 1903], "safeti": [18, 48, 70, 1859, 1862, 1876], "bypass": [18, 1062, 1866, 1877, 1885], "sound": [18, 70, 1449, 1866, 1921], "inlin": [18, 31, 69, 1005, 1189, 1193, 1204, 1884], "begin": [18, 28, 34, 37, 38, 40, 41, 49, 57, 62, 70, 493, 756, 780, 816, 817, 861, 918, 956, 963, 1011, 1013, 1082, 1142, 1148, 1209, 1244, 1256, 1336, 1337, 1338, 1355, 1357, 1363, 1373, 1374, 1377, 1378, 1379, 1380, 1381, 1382, 1388, 1391, 1392, 1407, 1412, 1415, 1416, 1428, 1429, 1436, 1439, 1452, 1458, 1463, 1470, 1503, 1524, 1525, 1601, 1608, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1680, 1682, 1688, 1755, 1758, 1761, 1803, 1828, 1839, 1852, 1862, 1881, 1882, 1885, 1887, 1890, 1892, 1897, 1900, 1903, 1910, 1917], "deprec": [18, 40, 48, 57, 58, 62, 66, 405, 510, 553, 599, 781, 782, 783, 789, 822, 903, 904, 939, 940, 1012, 1016, 1135, 1189, 1243, 1246, 1278, 1279, 1337, 1338, 1355, 1357, 1380, 1381, 1387, 1388, 1412, 1413, 1421, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1474, 1475, 1492, 1493, 1503, 1532, 1555, 1563, 1589, 1590, 1591, 1593, 1601, 1642, 1643, 1648, 1706, 1722, 1803, 1807, 1830, 1857, 1859, 1864, 1874, 1883, 1906, 1910, 1918, 1922, 1923], "finer": [18, 45], "wishlist": 18, "cc": [18, 31, 40, 1885], "skipfiles_inline_module_allowlist": 18, "breadcrumb": 18, "forgot": 18, "autotun": [19, 22, 949], "list_mode_opt": [19, 22, 949], "notabl": [19, 949, 1862], "epilogue_fus": [19, 949], "templat": [19, 949, 1005, 1006, 1903], "max_autotun": [19, 949], "shape_pad": [19, 949], "graph_diagram": [19, 949], "pictur": [19, 949], "list_opt": [19, 22, 949], "checkout": [20, 1900], "new_fn": 20, "input_tensor": [20, 40], "10000": [20, 34, 38, 690, 1688, 1735, 1889, 1893, 1916, 1921], "Its": [20, 40, 70, 961, 977, 1189, 1236, 1254, 1255, 1280, 1421, 1648, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1670, 1673, 1674, 1675, 1676, 1677, 1846, 1862, 1886], "famou": 20, "suboptim": [20, 38], "crucial": [20, 21, 22, 32, 1866], "bottleneck": [20, 38, 1857, 1893], "bandwidth": [20, 38, 40, 56, 58, 1907, 1912], "crunch": 20, "elimin": [20, 27, 40, 70, 606, 1839, 1840, 1897], "trig": 20, "size_hint": 20, "16384": [20, 1885], "filenam": [20, 31, 37, 70, 1188, 1196, 1199, 1856, 1860, 1871, 1882, 1904, 1918, 1921], "__file__": [20, 1856, 1899, 1904], "fp32": [20, 62, 777, 790, 813, 1047, 1601, 1885, 1896, 1907, 1908, 1910], "i32": 20, "instance_descriptor": 20, "divisible_by_16": 20, "equal_to_1": 20, "in_ptr0": 20, "out_ptr0": 20, "xnumel": 20, "xblock": 20, "constexpr": 20, "xoffset": 20, "program_id": 20, "xindex": 20, "reshap": [20, 32, 40, 46, 495, 496, 510, 540, 613, 688, 947, 1045, 1060, 1061, 1101, 1152, 1209, 1241, 1245, 1254, 1255, 1258, 1321, 1368, 1442, 1443, 1444, 1445, 1446, 1472, 1609, 1642, 1648, 1787, 1788, 1795, 1822, 1823, 1828, 1850, 1851, 1858, 1860, 1869, 1876, 1877, 1900, 1902, 1909, 1920, 1921], "xmask": 20, "x0": [20, 46], "tmp0": 20, "tmp1": 20, "tmp2": 20, "int32": [20, 191, 208, 312, 320, 324, 445, 613, 933, 1064, 1076, 1077, 1112, 1114, 1115, 1219, 1230, 1231, 1232, 1250, 1278, 1344, 1705, 1742, 1907, 1916, 1918, 1919, 1922, 1928], "temporari": [20, 31, 70, 819, 822, 1602, 1882, 1889], "held": [20, 69, 963, 987, 1015, 1299, 1881], "resnet50": [20, 1856, 1921], "hub": [20, 1857, 1871], "v0": 20, "resnet18": [20, 65, 70, 1856, 1859, 1861, 1871, 1904], "opt_model": 20, "64": [20, 65, 66, 68, 1123, 1124, 1128, 1326, 1327, 1328, 1330, 1331, 1332, 1338, 1449, 1570, 1743, 1877, 1899, 1900, 1907, 1911, 1916, 1919, 1921, 1922], "inspir": [20, 62, 1666, 1887], "frequent": [20, 22, 29, 42, 1329, 1857, 1896, 1898], "timm": [20, 22, 24], "download": [20, 1871, 1899, 1921], "huggingfac": [20, 22, 24], "berttoken": 20, "bertmodel": 20, "past": [20, 24, 40, 70, 974, 1021, 1025, 1039, 1040, 1601, 1889], "bert": [20, 1467], "uncas": 20, "token": [20, 57, 963, 997, 998, 1856, 1863], "from_pretrain": [20, 1364, 1365], "me": 20, "encoded_input": 20, "return_tensor": 20, "pt": [20, 29, 38, 1194, 1196, 1199, 1206, 1260, 1738, 1859, 1893, 1898, 1904], "trigonometri": 20, "skim": 20, "create_model": 20, "resnext101_32x8d": 20, "7": [20, 24, 31, 37, 38, 40, 46, 70, 259, 312, 314, 316, 320, 400, 401, 469, 510, 556, 603, 613, 681, 693, 741, 742, 900, 902, 925, 928, 933, 939, 943, 947, 1045, 1057, 1059, 1060, 1063, 1078, 1101, 1102, 1105, 1108, 1112, 1142, 1152, 1166, 1210, 1214, 1224, 1229, 1231, 1232, 1235, 1236, 1240, 1241, 1245, 1252, 1319, 1320, 1321, 1327, 1328, 1331, 1332, 1334, 1345, 1364, 1409, 1417, 1418, 1442, 1443, 1444, 1445, 1446, 1472, 1487, 1558, 1626, 1631, 1641, 1648, 1666, 1713, 1717, 1723, 1733, 1734, 1735, 1742, 1755, 1758, 1760, 1771, 1772, 1780, 1787, 1789, 1790, 1795, 1807, 1809, 1810, 1817, 1822, 1823, 1826, 1828, 1837, 1846, 1850, 1859, 1863, 1869, 1876, 1877, 1883, 1885, 1887, 1896, 1898, 1900, 1902, 1907, 1916, 1919, 1920, 1921, 1922, 1923], "highest": [20, 676, 1329, 1717, 1718, 1750, 1908, 1923], "aot_ts_nvfus": 20, "nvprims_nvfus": 20, "onnxrt": 20, "ipex": 20, "tvm": 20, "apach": 20, "symbolic_trac": [20, 70], "smoother": [20, 1856, 1869], "transit": [20, 21, 1189, 1290, 1421, 1803, 1857, 1859], "ux": [21, 63, 68], "perspect": [21, 1886, 1896, 1913], "fn_foo": 21, "grab": 21, "dig": 21, "hole": 21, "perf": [21, 31, 1907], "neutral": 21, "referenc": [21, 70, 966, 1189, 1421, 1830, 1861, 1882, 1900, 1912], "previous": [21, 23, 57, 62, 63, 66, 67, 68, 70, 221, 694, 788, 789, 1130, 1196, 1801, 1802, 1844, 1845, 1849, 1859, 1883, 1885, 1893, 1904, 1905, 1911, 1912, 1917], "translat": [21, 40, 85, 86, 1142, 1882, 1914], "check_fn": 21, "thrown": [21, 40, 45, 62, 69, 613, 874, 876, 1019, 1060, 1152, 1189, 1219, 1228, 1230, 1232, 1235, 1236, 1247, 1421, 1605, 1850, 1904], "_pyinterpreterstate_setevalframefunc": 21, "convert_fram": [21, 28], "convert_frame_assert": 21, "gloss": 21, "proxi": [21, 40, 42, 1907], "one_graph": 21, "_convert_frame_assert": 21, "frametyp": 21, "cache_s": [21, 46], "f_code": 21, "unsupport": [21, 23, 67, 82, 1859, 1863, 1876, 1901, 1912, 1916], "drop": [21, 37, 66, 68, 70, 1008, 1194, 1247, 1252, 1333, 1643, 1803, 1859, 1876, 1895], "needless": 21, "evict": 21, "alongsid": [21, 31, 1189, 1421], "transform_code_object": 21, "output_instruct": 21, "rememb": [21, 1889, 1895], "guardedcod": 21, "symbolic_loc": 21, "f_local": 21, "travers": [21, 62, 832, 1601, 1886, 1887, 1913, 1925, 1926], "ordereddict": [21, 1189, 1421, 1422, 1431, 1449, 1592, 1624, 1860, 1893, 1898, 1923], "k": [21, 28, 37, 40, 42, 46, 58, 70, 285, 353, 503, 510, 512, 514, 586, 613, 756, 942, 1049, 1062, 1118, 1131, 1151, 1210, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1233, 1234, 1235, 1238, 1240, 1247, 1249, 1251, 1252, 1261, 1279, 1283, 1334, 1336, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1369, 1370, 1373, 1374, 1391, 1392, 1406, 1408, 1409, 1414, 1416, 1427, 1428, 1436, 1438, 1503, 1515, 1516, 1538, 1555, 1570, 1608, 1694, 1696, 1706, 1734, 1784, 1785, 1786, 1787, 1789, 1790, 1791, 1793, 1794, 1803, 1825, 1830, 1858, 1860, 1861, 1880, 1885, 1887, 1899, 1916, 1917, 1919], "variablebuild": 21, "localsourc": 21, "_wrap": 21, "construct": [21, 31, 32, 37, 40, 42, 44, 45, 46, 57, 62, 64, 66, 67, 70, 150, 446, 788, 789, 820, 874, 875, 889, 903, 951, 1049, 1065, 1130, 1151, 1189, 1200, 1204, 1205, 1212, 1219, 1259, 1260, 1275, 1290, 1364, 1365, 1421, 1511, 1592, 1601, 1603, 1604, 1634, 1641, 1655, 1696, 1700, 1747, 1782, 1789, 1790, 1791, 1792, 1793, 1794, 1808, 1821, 1824, 1849, 1857, 1859, 1872, 1885, 1886, 1893, 1895, 1898, 1904, 1907, 1912, 1914, 1919, 1921, 1922, 1923], "variabletrack": 21, "make_guard": 21, "outputgraph": [21, 70], "mention": [21, 28, 40, 62, 1856, 1861, 1862, 1876, 1882, 1885, 1893, 1900, 1916, 1920], "recal": [21, 1338, 1887, 1921], "heart": [21, 37], "pump": 21, "cool": 21, "get_instruct": 21, "124": 21, "opnam": 21, "argval": 21, "starts_lin": 21, "is_jump_target": 21, "littl": [21, 40, 1887, 1914], "hasattr": [21, 70, 1860, 1887, 1907], "inst": 21, "unimpl": 21, "getattr": [21, 70, 1860, 1887], "inde": [21, 23, 47, 1859, 1869, 1904, 1914], "onto": [21, 27, 40, 62, 70, 1024, 1196, 1199, 1260, 1613, 1856, 1874, 1885, 1888, 1889, 1893, 1906], "dozen": 21, "symbolic_convert": [21, 28], "spoken": 21, "quiet": 21, "closer": [21, 1142, 1470, 1707, 1887, 1893], "mind": [21, 22, 1234, 1252, 1364, 1882, 1888, 1890], "replace_guard": 21, "add_guard": 21, "visit": [21, 60, 1900], "act": [21, 42, 46, 48, 55, 67, 854, 1338, 1422, 1423, 1432, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1627, 1628, 1629, 1630, 1631, 1842, 1885, 1893, 1897, 1903], "behalf": 21, "python_typ": 21, "as_proxi": 21, "as_python_proxi": 21, "bookkeep": 21, "came": 21, "somewher": [21, 1876, 1892], "flesh": 21, "notimplementederror": [21, 46, 1904], "relianc": 21, "fulfil": [21, 1882, 1888, 1904], "build_tupl": 21, "gist": [21, 66, 789, 1890], "notion": [21, 37, 904, 1339, 1340, 1341, 1384, 1385, 1386, 1460], "popn": 21, "tuplevari": 21, "pydoc": 21, "tensorvari": 21, "instructiontranslatorbas": 21, "pop": [21, 67, 1023, 1422, 1431, 1902, 1905, 1906], "dataclass": [21, 27, 42], "ctor": 21, "guardsourc": 21, "create_fn": 21, "kind": [21, 40, 51, 70, 676, 1208, 1602, 1658, 1705, 1770, 1856, 1866, 1887, 1895, 1900, 1904, 1907, 1917, 1919], "guard_sourc": 21, "elif": [21, 27, 70, 1195, 1387, 1655, 1861, 1862, 1891], "istyp": 21, "guardbuild": 21, "equals_match": 21, "rangevari": 21, "appar": 21, "checkfunctionmanag": 21, "compile_check_fn": 21, "cacheentri": 21, "create_cache_entri": 21, "pyobject": 21, "guarded_cod": 21, "malloc": [21, 62], "sizeof": [21, 1918], "debug_null_check": 21, "pyobject_getattrstr": 21, "null_check": 21, "pycodeobject": 21, "compos": [21, 23, 46, 66, 70, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 940, 942, 1120, 1122, 1123, 1124, 1130, 1189, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1369, 1370, 1389, 1390, 1409, 1414, 1415, 1416, 1421, 1469, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1538, 1541, 1542, 1544, 1545, 1546, 1711, 1712, 1849, 1857, 1858, 1859, 1862, 1875, 1887, 1888, 1893, 1900, 1904, 1921], "sort_kei": 21, "guard_nn_modul": 21, "is_nn_modul": 21, "local_build": 21, "global_build": 21, "___guarded_cod": 21, "___check_type_id": 21, "94367738391392": 21, "___check_tensor": 21, "id": [21, 24, 28, 34, 37, 40, 44, 48, 56, 57, 58, 62, 70, 770, 820, 963, 998, 1460, 1546, 1585, 1601, 1658, 1862, 1892, 1900, 1902, 1904, 1911, 1912, 1913, 1918], "deeper": [21, 25, 1857, 1893, 1904], "dive": [21, 25, 1857, 1886, 1890, 1904], "_eval_fram": 21, "anew": 21, "massiv": 21, "role": [21, 42, 48, 49, 57, 58], "weak": 21, "moduleinvalid": 21, "2x": [22, 1921], "compress": [22, 24, 38, 62, 208, 583, 584, 1084, 1085, 1094, 1095, 1601, 1789, 1790, 1791, 1793, 1794, 1827, 1857], "varieti": [22, 1885, 1913], "announc": [22, 57], "compiled_fn": 22, "set_float32_matmul_precis": [22, 1138], "simpler": [22, 68, 1130, 1849, 1859, 1882, 1887, 1890, 1893], "bench_al": 22, "IF": 22, "odd": [22, 46, 1083, 1084, 1085, 1093, 1094, 1095, 1495, 1496, 1497], "quirk": 22, "ask": [22, 40, 66, 67, 1856, 1857, 1888, 1890], "overview": [22, 32, 40, 54, 1601, 1857, 1869, 1874, 1882, 1890, 1893, 1905, 1907, 1912], "nnmodul": 22, "constabl": 23, "edg": [23, 775, 781, 1142, 1150, 1151, 1531, 1589, 1867, 1888, 1913], "orchestr": 23, "_forward_pre_hook": 23, "forward_hook": [23, 1893], "_backward_pre_hook": 23, "_backward_hook": 23, "categori": [23, 46, 50, 1311, 1862, 1864, 1900, 1903, 1906, 1908, 1919], "_state_dict_hook": 23, "load_": 23, "alter": [23, 1881, 1887], "backward_hook": [23, 1893], "avoiabl": 23, "fire": [23, 1189, 1421, 1886, 1892], "presenc": [23, 67, 70, 1198, 1316, 1904, 1916], "conv": [23, 70, 698, 699, 700, 701, 702, 703, 704, 705, 706, 788, 789, 792, 810, 850, 856, 1189, 1198, 1204, 1205, 1349, 1350, 1351, 1352, 1353, 1354, 1421, 1422, 1428, 1870, 1880, 1885, 1896, 1900, 1907, 1908, 1909, 1910], "opaqu": [23, 40, 47, 963, 997, 998, 1113], "skip_nnmodule_hook_guard": 23, "react": [23, 48], "pre_backward": 23, "accordingli": [23, 46, 70, 1198, 1391, 1613, 1877, 1912], "warn_onc": 23, "bin": [24, 48, 55, 57, 299, 300, 815, 920, 1149, 1150, 1151, 1860, 1862, 1902, 1921], "hui": 24, "nightli": 24, "gcp": [24, 40], "a100": [24, 28], "night": 24, "40gb": [24, 28], "2ghz": 24, "xeon": [24, 1857, 1884], "suit": [24, 40, 1859, 1861, 1862, 1900, 1908, 1912], "torchbench": 24, "amp": [24, 28, 1008, 1857, 1881], "trend": 24, "droplist": 24, "geometr": [24, 285, 775, 781, 1520, 1531, 1589, 1843, 1857, 1902, 1924], "peak": [24, 42, 44, 62, 1011, 1013, 1019, 1026, 1027, 1028, 1601, 1682, 1688, 1905], "footprint": [24, 38, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1885], "ratio": [24, 46, 48, 613, 1369, 1370, 1515, 1516, 1860], "click": [24, 1924], "with_cudagraph": 24, "kick": [24, 1886, 1912, 1913], "ui": [24, 1890, 1921], "Be": [24, 1900], "wise": [24, 38, 40, 46, 683, 684, 694, 754, 766, 767, 776, 780, 880, 955, 1062, 1067, 1108, 1109, 1132, 1133, 1145, 1154, 1211, 1213, 1270, 1271, 1272, 1273, 1277, 1287, 1290, 1292, 1322, 1343, 1354, 1361, 1363, 1377, 1378, 1379, 1380, 1382, 1407, 1410, 1420, 1429, 1439, 1440, 1441, 1448, 1450, 1451, 1452, 1457, 1459, 1461, 1462, 1494, 1509, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1533, 1535, 1540, 1550, 1551, 1564, 1565, 1566, 1571, 1572, 1573, 1574, 1578, 1580, 1581, 1582, 1787, 1851, 1884, 1887, 1916, 1917, 1920], "pep": [25, 1859, 1861, 1900], "523": 25, "rewrit": [25, 42, 67, 82, 83, 1870, 1882, 1890, 1900], "customiz": [25, 1863, 1925], "usabl": [25, 28, 69, 1862, 1900], "openmp": [25, 1857, 1884, 1899], "dashboard": [25, 1857], "video": [25, 1433, 1434, 1876, 1921], "topic": [25, 29, 1892, 1893], "vmap": [26, 63, 65, 66, 70, 897, 899, 903, 904, 905, 1120, 1123, 1124, 1126, 1128], "jacrev": [26, 64, 66, 67, 899, 1122, 1123, 1888], "100320": 26, "escap": 26, "hatch": 26, "introspect": [26, 70], "jax": [26, 63, 66, 67, 68, 1882, 1888], "promis": 26, "pure": [26, 31, 32, 67, 1192, 1859], "relax": [26, 46, 1204, 1205, 1613, 1907], "pitfal": [26, 1857], "functional_cal": [26, 64, 66, 1128], "sit": 27, "replace_add_with_mul": 27, "insert": [27, 37, 40, 46, 62, 69, 70, 743, 788, 789, 857, 858, 1422, 1423, 1431, 1601, 1742, 1745, 1755, 1776, 1800, 1841, 1859, 1870, 1885, 1902, 1907], "insert_relu_after_add": 27, "inserting_aft": [27, 70], "new_relu_nod": 27, "replace_all_uses_with": [27, 70], "roughli": [27, 37, 1387, 1886], "axi": [27, 510, 512, 514, 818, 821, 953, 1061, 1076, 1102, 1131, 1154, 1708, 1728, 1733, 1734, 1851, 1858, 1860, 1888, 1900, 1905, 1907], "eg": [27, 933, 1735, 1742], "dead": [27, 70], "frequenc": [27, 58, 920, 961, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1186, 1329, 1364, 1365, 1511, 1512, 1682, 1803], "replaceaddwithmul": 27, "transformed_graph_modul": 27, "graph_modul": [27, 855], "replaceaddwithmulsub": 27, "mul_r": 27, "removedetachpass": 27, "detach_copi": [27, 1860, 1902], "len": [27, 37, 40, 42, 70, 218, 541, 691, 692, 1081, 1085, 1088, 1092, 1095, 1099, 1129, 1193, 1255, 1276, 1288, 1316, 1319, 1358, 1558, 1619, 1621, 1637, 1681, 1688, 1792, 1795, 1801, 1802, 1806, 1843, 1844, 1845, 1859, 1860, 1862, 1887, 1902, 1916, 1921], "args_map": 27, "schema": [27, 34, 40, 42, 1858, 1859, 1860, 1862, 1866, 1900], "enumer": [27, 37, 46, 70, 1189, 1421, 1423, 1432, 1681, 1860, 1861, 1881, 1885, 1899, 1921], "_schema": 27, "kwarg_onli": 27, "scalartotensorpass": 27, "breakpoint": [27, 70, 1862], "try_coerc": 27, "tensortyp": [27, 1862], "wildcard": [27, 1876, 1904], "subgraph_rewrit": [27, 70], "replace_pattern": 27, "replaced_pattern": 27, "replace_pattern_with_filt": 27, "traced_modul": [27, 70, 1898], "replacedpattern": 27, "nodes_map": [27, 70], "passmanag": 27, "blob": [27, 788, 1119, 1890, 1892, 1921], "infra": [27, 28, 50, 1901], "pass_manag": 27, "__": [27, 1863], "pm": 27, "replace_add_with_div": 27, "replace_div_with_mul": 27, "run_checks_after_each_pass": 27, "suppress_check_failur": 27, "graph_module_out": 27, "set_check": 27, "check_div_target": 27, "div": [27, 38, 235, 1058, 1107, 1110, 1329, 1433, 1434, 1726, 1835, 1858, 1860, 1866, 1875, 1902, 1916, 1919], "valueerror": [27, 69, 1187, 1613, 1614, 1634, 1637, 1887, 1905, 1923], "add_check": 27, "subgraphmatch": 27, "matcher_util": 27, "match_output": 27, "match_placehold": 27, "remove_overlapping_match": 27, "ignore_liter": 27, "liter": [27, 1657, 1860, 1863, 1876, 1904], "largemodel": 27, "_weight": [27, 741, 742, 1364, 1365], "_bia": 27, "large_model_graph": 27, "patternmodel": 27, "_weight_1": 27, "_bias_1": 27, "pattern_graph": 27, "subgraph_match": 27, "match_result": 27, "internalmatch": 27, "default_factori": 27, "placeholder_nod": 27, "returning_nod": 27, "largest": [27, 62, 586, 920, 1106, 1220, 1241, 1243, 1245, 1246, 1261, 1557, 1609, 1825, 1858, 1860, 1861, 1862, 1928], "capabilitybasedpartition": 27, "l34": 27, "operator_support": 27, "operatorsupportbas": 27, "allows_single_node_partit": 27, "non_compute_op": 27, "ex": [27, 49, 1601, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1872], "_oper": 27, "getitem": 27, "allowed_single_node_partition_op": 27, "ll28c1": 27, "l28c1": 27, "is_node_support": 27, "chain": [27, 37, 38, 46, 69, 70, 150, 889, 939, 1244, 1365, 1449, 1678, 1691, 1862, 1882, 1885, 1887, 1890, 1893, 1903], "operatorsuppportbas": 27, "l150": 27, "any_chain": 27, "l164": 27, "addmuloperatorsupport": 27, "capability_partition": 27, "op_support": 27, "partition_list": 27, "propose_partit": 27, "call_modul": [27, 70], "fused_graph_modul": 27, "fuse_partit": 27, "lazo": 28, "meantim": [28, 1337, 1338, 1355, 1357, 1381, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1492, 1493, 1503, 1532, 1555, 1563], "smallest": [28, 50, 938, 1210, 1220, 1241, 1245, 1261, 1705, 1825, 1923, 1928], "suspect": [28, 34, 1677, 1885], "taken": [28, 40, 46, 62, 69, 70, 861, 1083, 1085, 1108, 1109, 1344, 1357, 1365, 1428, 1504, 1512, 1755, 1787, 1880, 1882, 1884, 1885, 1887, 1889, 1892, 1898, 1900, 1904, 1906], "proce": [28, 1881, 1885, 1912], "sampl": [28, 37, 42, 46, 63, 68, 70, 88, 153, 154, 376, 452, 479, 604, 775, 919, 961, 974, 1008, 1021, 1025, 1039, 1040, 1080, 1098, 1120, 1130, 1142, 1186, 1205, 1278, 1311, 1333, 1337, 1338, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1375, 1381, 1384, 1385, 1386, 1387, 1388, 1406, 1408, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1439, 1452, 1453, 1460, 1469, 1485, 1492, 1493, 1503, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1517, 1520, 1522, 1530, 1531, 1532, 1555, 1563, 1601, 1609, 1649, 1681, 1696, 1699, 1713, 1715, 1717, 1719, 1721, 1785, 1801, 1802, 1803, 1844, 1845, 1849, 1857, 1872, 1880, 1881, 1885, 1892, 1893, 1904, 1907, 1908, 1921], "test_assertion_error": 28, "compiled_test_assertion_error": 28, "mlazo": 28, "837": 28, "build_map": 28, "fortun": [28, 1889], "isol": [28, 70, 1592, 1874, 1905], "test_backend_error": 28, "_foobar": [28, 1902], "dummi": [28, 37, 44, 1882, 1887, 1927], "compiled_test_backend_error": 28, "246": [28, 613], "185": [28, 613], "decomp_fn": 28, "810": 28, "repro_aft": 28, "nearli": [28, 150, 889, 903, 1696, 1895, 1912], "minifier_launch": 28, "base_dir": 28, "successfulli": [28, 40, 48, 54, 72, 73, 74, 1195, 1751, 1874, 1893, 1898, 1912], "runnabl": [28, 70, 1881, 1900, 1921], "rand_strid": 28, "0a0": 28, "gitfddfc44": 28, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 28, "nvcc": [28, 31, 993], "2005": [28, 679, 1845], "2022": 28, "thu_feb_10_18": 28, "23": [28, 40, 510, 1261, 1766, 1859, 1916], "41_pst_2022": 28, "v11": 28, "112": [28, 613], "cuda_11": 28, "r11": 28, "30978841_0": 28, "sxm4": 28, "float32": [28, 37, 38, 266, 576, 613, 815, 816, 817, 818, 821, 822, 876, 951, 1076, 1077, 1114, 1136, 1138, 1171, 1325, 1338, 1473, 1474, 1475, 1487, 1663, 1664, 1700, 1705, 1713, 1717, 1732, 1747, 1748, 1750, 1792, 1847, 1877, 1881, 1885, 1896, 1900, 1909, 1917, 1918, 1919, 1922, 1923, 1928], "compile_fx": 28, "compile_fx_inn": 28, "walk": [28, 32, 70, 1866, 1887, 1904, 1913, 1914, 1920], "toi": [28, 54], "toy_compil": 28, "debug_util": 28, "run_fwd_maybe_bwd": 28, "opt_mod": 28, "sh": [28, 764, 765, 769, 770, 1488, 1489, 1496, 1497, 1499, 1500, 1545, 1546], "st": [28, 1489, 1497, 1500, 1546], "dt": [28, 1497, 1500, 1917], "requires_grad_": [28, 334, 446, 1189, 1344, 1421, 1504, 1784, 1821, 1860, 1875, 1882, 1922], "rg": 28, "autocast": [28, 1008, 1427, 1857, 1885], "test_model": 28, "layernorm": [28, 1376, 1384, 1385, 1386, 1464, 1468, 1534, 1877, 1909], "overridden": [28, 31, 70, 885, 886, 887, 1005, 1421, 1782, 1862, 1882, 1887, 1896, 1905, 1927], "debug_dir_root": 28, "torch_compile_debug_dir": 28, "timestamp": [28, 50, 51, 54, 58, 1872, 1906, 1921], "cd": [28, 1899, 1904, 1906], "l": [28, 46, 731, 756, 918, 927, 933, 940, 941, 1062, 1146, 1147, 1189, 1208, 1218, 1219, 1224, 1225, 1226, 1227, 1231, 1235, 1236, 1278, 1280, 1334, 1337, 1338, 1339, 1349, 1357, 1360, 1361, 1368, 1373, 1381, 1382, 1384, 1387, 1388, 1391, 1403, 1412, 1414, 1421, 1423, 1427, 1428, 1436, 1452, 1469, 1470, 1472, 1570, 1619, 1628, 1636, 1638, 1666, 1742, 1803, 1860, 1862, 1882, 1921], "run_2023_03_01_08_20_52_143510": 28, "pid_180167": 28, "subfold": [28, 31], "artifact": [28, 676, 1868, 1892, 1904], "model__0_forward_1": 28, "aot_model___0_debug": 28, "fx_graph_read": 28, "fx_graph_runn": 28, "fx_graph_transform": 28, "ir_post_fus": 28, "txt": [28, 1196, 1199, 1904], "ir_pre_fus": 28, "fx_graph": 28, "buf1": 28, "schedulernod": 28, "computedbuff": 28, "memorydep": 28, "unmet_depend": 28, "buf0": 28, "c0": [28, 730, 758, 1391], "met_depend": 28, "primals_2": 28, "buf1_loop_bodi": 28, "var_rang": 28, "z0": 28, "index0": 28, "index1": 28, "bodi": [28, 70, 1200, 1859, 1861, 1862, 1863], "get_index": 28, "get_index_1": 28, "load_1": 28, "get_index_2": 28, "compiled_fun": 28, "hinder": 28, "sublist": [28, 1062], "succe": [28, 40, 45, 57, 67, 1885, 1887, 1899], "compiled_toi": 28, "outweigh": [28, 1677], "readm": [28, 52, 53, 788, 1877], "verify_instal": 28, "log_fil": 28, "bj": 29, "j": [29, 40, 46, 312, 314, 320, 510, 512, 514, 688, 891, 897, 899, 951, 1062, 1078, 1079, 1086, 1092, 1096, 1097, 1131, 1186, 1189, 1224, 1225, 1236, 1252, 1261, 1268, 1276, 1278, 1283, 1360, 1361, 1362, 1366, 1421, 1424, 1506, 1507, 1508, 1513, 1700, 1707, 1786, 1803, 1807, 1846, 1861, 1880, 1882, 1887, 1890, 1898, 1921], "imaginari": [29, 310, 904, 951, 957, 1083, 1085, 1093, 1094, 1095, 1159, 1179, 1181, 1182, 1185, 1803, 1847, 1848, 1863, 1882, 1890, 1923], "satisfi": [29, 35, 38, 46, 613, 690, 756, 790, 898, 904, 905, 933, 1078, 1079, 1081, 1083, 1085, 1093, 1094, 1095, 1110, 1202, 1228, 1254, 1255, 1329, 1344, 1368, 1373, 1391, 1436, 1624, 1641, 1726, 1742, 1782, 1803, 1862, 1882, 1885, 1890, 1903, 1905, 1916, 1919], "equat": [29, 942, 1062, 1134, 1146, 1232, 1233, 1234, 1235, 1236, 1238, 1249, 1251, 1337, 1768, 1830, 1860, 1882, 1890, 1903, 1917], "mathemat": [29, 45, 70, 897, 898, 899, 900, 901, 902, 1110, 1142, 1337, 1339, 1340, 1341, 1384, 1385, 1386, 1387, 1460, 1539, 1577, 1601, 1648, 1726, 1784, 1785, 1862, 1882, 1896, 1917, 1924], "tradition": 29, "torchaudio": [29, 1857], "mimick": 29, "assembli": 29, "lapack": [29, 941, 1134, 1219, 1230, 1231, 1232, 1234, 1237, 1250, 1706, 1807], "spectral": [29, 1208, 1224, 1252, 1609, 1632, 1642, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1896], "fft": [29, 1857, 1885], "4621": 29, "0303j": 29, "2438": [29, 1234, 1511], "5874j": 29, "7706": 29, "1421j": 29, "2110": 29, "1918j": 29, "complex128": [29, 175, 951, 1105, 1114, 1168, 1189, 1218, 1219, 1224, 1225, 1226, 1227, 1228, 1229, 1349, 1350, 1351, 1421, 1495, 1496, 1497, 1657, 1700, 1747, 1918, 1919, 1922, 1923], "complex64": [29, 178, 951, 1079, 1081, 1082, 1087, 1088, 1114, 1168, 1220, 1243, 1246, 1349, 1350, 1351, 1495, 1496, 1497, 1657, 1700, 1747, 1918, 1919, 1922, 1923], "apart": [29, 1862, 1882], "linspac": [29, 920, 944, 1083, 1093, 1290, 1860, 1864, 1902], "logspac": [29, 1860, 1864, 1902], "view_as_r": [29, 1803, 1860, 1902, 1920], "6125": 29, "1681": 29, "3773": 29, "3487": 29, "0861": 29, "7981": 29, "1681j": 29, "3487j": 29, "7981j": 29, "mul_": [29, 1860, 1875, 1877, 1916], "2250": [29, 1245, 1648], "7546": [29, 942], "1722": 29, "x1": [29, 937, 1236, 1356, 1413, 1469, 1470, 1502, 1559, 1860], "3j": [29, 40, 694, 954, 955, 1730, 1731, 1747], "4j": [29, 40, 1758], "0000": [29, 46, 510, 861, 897, 899, 920, 940, 944, 957, 1043, 1049, 1050, 1051, 1076, 1077, 1080, 1082, 1083, 1089, 1090, 1093, 1098, 1110, 1111, 1112, 1142, 1148, 1151, 1155, 1214, 1217, 1218, 1219, 1231, 1232, 1235, 1240, 1241, 1245, 1247, 1259, 1275, 1316, 1364, 1365, 1473, 1474, 1476, 1477, 1511, 1512, 1648, 1700, 1706, 1711, 1712, 1713, 1722, 1726, 1727, 1751, 1758, 1760, 1761, 1763, 1766, 1767, 1768, 1769, 1785, 1830, 1831, 1833, 1852, 1869, 1877, 1885, 1916, 1917, 1922], "6569": [29, 1155], "5708": [29, 1046], "7854": 29, "complex_tensor": 29, "conjug": [29, 329, 456, 688, 904, 942, 954, 955, 1169, 1218, 1219, 1225, 1228, 1231, 1238, 1252, 1257, 1261, 1608, 1694, 1730, 1803, 1807, 1846, 1890, 1903, 1922], "wirting": [29, 904, 1890], "deriv": [29, 40, 62, 150, 734, 735, 736, 737, 738, 739, 777, 796, 820, 889, 903, 904, 905, 1125, 1129, 1142, 1186, 1246, 1278, 1592, 1857, 1861, 1887, 1888, 1890, 1912, 1916, 1917], "steepest": [29, 1882], "descent": [29, 46, 1660, 1676, 1680, 1681, 1882, 1893], "quantiz": [29, 70, 219, 325, 337, 470, 471, 472, 473, 474, 476, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 913, 1047, 1076, 1077, 1708, 1709, 1710, 1711, 1712, 1857, 1902, 1919, 1922, 1923, 1925, 1926], "parallel_info": [30, 1857, 1884], "cppextens": [31, 1857], "setuptool": 31, "bare": 31, "buildextens": [31, 1857], "ext_modul": 31, "extra_compile_arg": [31, 1899], "cmdclass": 31, "build_ext": 31, "cudaextens": [31, 1857], "cuda_extens": 31, "extension_kernel": 31, "cu": 31, "cxx": 31, "o2": 31, "arch": 31, "card": [31, 1899], "ptx": 31, "road": 31, "newest": [31, 66], "torch_cuda_arch_list": 31, "build_my_extens": 31, "older": [31, 1885, 1898, 1904], "modestli": [31, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677], "pars": [31, 40, 60, 911, 1862, 1904, 1912], "workaround": [31, 37, 70, 1193, 1856, 1897, 1900, 1907], "sigmoidalphablendforwardcuda": 31, "69460": 31, "facebookresearch": 31, "pytorch3d": 31, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 31, "relocat": 31, "link": [31, 32, 46, 70, 82, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1414, 1415, 1416, 1472, 1522, 1876, 1892, 1893, 1916], "rdc": 31, "dc": 31, "anymor": [31, 40, 62, 221], "dlto": 31, "dlink": 31, "protent": 31, "lib": [31, 1899], "nvshmem": 31, "ninja": [31, 1899], "dlink_librari": 31, "dlink_lib": 31, "std": [31, 48, 55, 88, 376, 452, 1076, 1077, 1108, 1109, 1110, 1649, 1700, 1726, 1765, 1770, 1802, 1840, 1858, 1860, 1875, 1880, 1885, 1892, 1899, 1902], "use_ninja": 31, "distutil": 31, "max_job": 31, "extra_cflag": 31, "extra_cuda_cflag": 31, "extra_ldflag": 31, "extra_include_path": 31, "build_directori": 31, "with_cuda": [31, 1899], "is_python_modul": 31, "is_standalon": 31, "keep_intermedi": 31, "torch_extens": 31, "torch_extensions_dir": 31, "o3": 31, "cuh": 31, "Such": [31, 37, 38, 69, 1843, 1916], "lib64": 31, "cudart": [31, 1899], "cuda_hom": 31, "safest": 31, "pybind11": [31, 32, 1861], "union": [31, 37, 42, 45, 48, 51, 55, 58, 62, 70, 1200, 1260, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1369, 1370, 1389, 1390, 1414, 1415, 1416, 1421, 1464, 1466, 1468, 1471, 1613, 1655, 1657, 1738, 1860, 1861, 1862, 1900, 1904, 1918, 1923, 1926], "linker": 31, "workspac": 31, "header": [31, 55, 1899, 1923], "standalon": [31, 56, 57, 58, 813, 1200, 1204, 1859], "torch_lib_path": 31, "load_inlin": [31, 1857], "cpp_sourc": 31, "cuda_sourc": 31, "with_pytorch_error_handl": 31, "behav": [31, 32, 40, 69, 70, 312, 320, 490, 512, 514, 837, 1129, 1204, 1417, 1418, 1419, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1861, 1862, 1869, 1882, 1888, 1893, 1897, 1904, 1912, 1916], "concaten": [31, 37, 40, 45, 899, 936, 947, 977, 1061, 1154, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1365, 1391, 1504, 1512, 1605, 1613, 1800, 1851, 1860, 1863, 1900, 1902, 1916], "furthermor": [31, 55, 66, 1224, 1225, 1252, 1278, 1359, 1875, 1876, 1882, 1897, 1910, 1912], "cuda_runtim": 31, "se": 31, "macro": [31, 1891], "pybind": 31, "_safe_foo": 31, "redirect": [31, 48, 55, 1924], "obscur": 31, "sin_add": 31, "inline_extens": 31, "include_path": [31, 1857], "get_compiler_abi_compatibility_and_vers": [31, 1857], "abi": [31, 32], "shell": 31, "torchvers": 31, "verify_ninja_avail": [31, 1857], "is_ninja_avail": [31, 1857], "embed": [32, 70, 731, 742, 891, 1053, 1329, 1355, 1365, 1381, 1393, 1427, 1470, 1512, 1570, 1677, 1745, 1860, 1884, 1902, 1907, 1909, 1912, 1916, 1921], "preprocess": [32, 493, 1189], "augment": [32, 1863, 1923], "interfac": [32, 38, 42, 47, 49, 54, 57, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 790, 1115, 1592, 1749, 1803, 1842, 1858, 1862, 1872, 1873, 1887, 1892, 1903, 1910, 1916, 1921], "opencv": [32, 1520, 1531], "struct": [32, 1129, 1130, 1849, 1870, 1892], "classat_1_1_tensor": 32, "tensor_index": 32, "cpp_autograd": 32, "undesir": [32, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1887], "cpp_frontend": 32, "library_root": 32, "libtorch": 32, "linux": [32, 40, 1856], "gcc": 32, "cxx11": 32, "race": [34, 1882], "enable_cuda_sanit": 34, "torch_cuda_sanit": 34, "concurr": [34, 40, 44, 1884, 1885, 1912, 1913], "uniniti": [34, 443, 496, 1063, 1064, 1592, 1603, 1604, 1641, 1877, 1902], "commandlin": 34, "example_error": 34, "csan": 34, "139719969079296": 34, "94646435460352": 34, "_sanit": 34, "364": 34, "_handle_kernel_launch": 34, "stack_trac": [34, 70], "stacksummari": 34, "420": 34, "_handle_memory_alloc": 34, "faulti": [34, 40], "current_stream": [34, 965, 1857, 1885], "wait_stream": [34, 40, 966, 968, 1885], "default_stream": [34, 40, 1857], "cudnn": [35, 36, 756, 1198, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1373, 1391, 1436, 1437, 1495, 1496, 1497, 1498, 1499, 1500, 1504, 1570, 1750, 1857, 1860, 1885, 1896, 1897], "float16": [35, 38, 42, 62, 296, 682, 685, 756, 819, 822, 830, 846, 847, 854, 917, 929, 1114, 1171, 1189, 1283, 1293, 1349, 1350, 1351, 1352, 1353, 1354, 1373, 1374, 1391, 1392, 1408, 1421, 1436, 1570, 1663, 1664, 1735, 1881, 1893, 1907, 1909, 1918, 1919, 1922, 1923, 1928], "v100": [35, 756, 1373, 1391, 1436, 1885], "packedsequ": [35, 756, 1373, 1391, 1436, 1635, 1636, 1637, 1639], "rnn": [36, 730, 756, 757, 758, 759, 761, 854, 1373, 1374, 1391, 1392, 1438, 1602, 1611, 1634, 1864, 1889, 1893, 1909, 1921], "enforc": [36, 38, 69, 791, 886, 1189, 1391, 1421, 1436, 1862, 1893, 1920], "cuda_launch_block": [36, 1391, 1436, 1885], "colon": [36, 1391, 1436, 1912], "cublas_workspace_config": [36, 1391, 1436, 1842, 1885, 1897], "4096": [36, 1391, 1436, 1842, 1885, 1900], "dataload": [37, 493, 1601, 1681, 1682, 1688, 1885, 1889, 1899, 1903, 1921], "batch_siz": [37, 46, 66, 68, 888, 1120, 1128, 1130, 1427, 1634, 1636, 1637, 1639, 1849, 1860, 1888, 1889, 1897, 1900, 1921], "shuffl": [37, 1857, 1921], "batch_sampl": 37, "num_work": [37, 48, 1897, 1899], "drop_last": 37, "timeout": [37, 40, 57, 1874, 1912], "worker_init_fn": [37, 1889, 1897], "prefetch_factor": 37, "persistent_work": 37, "__getitem__": [37, 1842], "__len__": [37, 70, 1860], "protocol": [37, 42, 47, 57, 59, 876, 1113, 1115, 1656, 1738, 1887, 1899, 1900, 1912, 1927], "idx": [37, 70, 894, 1189, 1329, 1364, 1421, 1609, 1860, 1876], "th": [37, 154, 312, 314, 320, 756, 897, 899, 919, 939, 1049, 1054, 1163, 1186, 1210, 1228, 1236, 1242, 1278, 1311, 1360, 1361, 1362, 1366, 1373, 1381, 1391, 1436, 1506, 1507, 1508, 1513, 1707, 1803, 1887, 1899, 1917, 1919], "iterabledataset": [37, 1892], "__iter__": [37, 1863], "improb": 37, "fetch": [37, 69, 70, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1657, 1912], "databas": 37, "remot": [37, 40, 44, 48, 1601, 1905, 1912, 1913], "replica": [37, 38, 40, 44, 55, 1358, 1601, 1886], "duplic": [37, 314, 318, 469, 540, 918, 927, 948, 1146, 1147, 1189, 1421, 1839, 1840, 1916], "yield": [37, 38, 62, 70, 1050, 1052, 1189, 1235, 1236, 1421, 1852, 1862, 1863, 1869, 1905, 1907, 1917], "stochast": [37, 46, 1369, 1370, 1515, 1516, 1660, 1662, 1663, 1665, 1676, 1680, 1681, 1893, 1903], "decent": 37, "randomli": [37, 741, 742, 752, 760, 905, 1333, 1359, 1360, 1361, 1362, 1366, 1439, 1505, 1506, 1507, 1508, 1513, 1621, 1877, 1892, 1893], "permut": [37, 1062, 1235, 1236, 1255, 1278, 1280, 1721, 1857, 1858, 1860, 1876, 1902, 1909, 1920, 1922], "mini": [37, 775, 781, 1339, 1340, 1341, 1364, 1365, 1376, 1381, 1384, 1385, 1386, 1393, 1413, 1424, 1426, 1460, 1469, 1511, 1512, 1531, 1589, 1905], "neither": [37, 40, 791, 892, 895, 1045, 1105, 1427, 1468, 1648, 1828, 1887, 1896, 1912], "collat": 37, "minibatch": [37, 764, 765, 768, 769, 770, 1278, 1329, 1337, 1338, 1355, 1357, 1381, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1473, 1487, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1503, 1532, 1544, 1545, 1546, 1555, 1563, 1905], "loader": [37, 1903], "dataset_it": 37, "cheaper": [37, 69], "arrai": [37, 48, 446, 756, 816, 817, 875, 876, 920, 938, 957, 961, 1062, 1106, 1114, 1115, 1123, 1124, 1260, 1290, 1368, 1373, 1374, 1391, 1392, 1514, 1728, 1735, 1755, 1789, 1790, 1791, 1793, 1794, 1821, 1828, 1836, 1843, 1859, 1863, 1885, 1893, 1916, 1918, 1922, 1923], "untouch": 37, "slightli": [37, 40, 46, 62, 1648, 1696, 1808, 1856, 1885, 1890, 1896, 1904], "default_col": 37, "channel": [37, 65, 470, 471, 472, 775, 781, 804, 818, 821, 829, 841, 849, 1076, 1339, 1340, 1341, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1366, 1368, 1376, 1384, 1385, 1386, 1393, 1397, 1398, 1399, 1400, 1401, 1402, 1409, 1429, 1455, 1460, 1472, 1473, 1474, 1475, 1490, 1506, 1507, 1508, 1513, 1530, 1531, 1538, 1564, 1589, 1619, 1620, 1621, 1628, 1629, 1645, 1708, 1876, 1878, 1880, 1882, 1907, 1908, 1910, 1921], "class_index": 37, "namedtupl": [37, 70, 892, 1041, 1042, 1134, 1189, 1200, 1210, 1230, 1280, 1286, 1289, 1291, 1294, 1317, 1329, 1421, 1696, 1706, 1780, 1807, 1825, 1830, 1859, 1861, 1862, 1907], "gil": [37, 40, 44, 1882, 1885, 1912], "descriptor": [37, 1469, 1470, 1863, 1900], "parent": [37, 50, 55, 59, 62, 676, 784, 785, 813, 1421, 1874, 1899, 1904, 1914, 1921], "refcount": [37, 1874, 1895], "panda": 37, "pyarrow": 37, "13246": 37, "get_worker_info": [37, 1912], "seed": [37, 88, 1000, 1009, 1010, 1030, 1165, 1281, 1301, 1696, 1713, 1808, 1857, 1860, 1889, 1897, 1911], "shut": [37, 1912], "garbag": [37, 1914], "subtleti": [37, 1358, 1887, 1889], "multiprocess": [37, 40, 41, 43, 48, 50, 58, 59, 1358, 1601, 1857, 1876, 1886, 1913], "unix": [37, 55, 964, 1874], "fork": [37, 55, 1207, 1601, 1862, 1884, 1885, 1889, 1892, 1895, 1899, 1911, 1912, 1914], "child": [37, 48, 50, 62, 787, 1189, 1421, 1620, 1874, 1893, 1899, 1914], "maco": [37, 40, 1874, 1894], "spawn": [37, 38, 41, 48, 49, 55, 59, 1192, 1601, 1857, 1881, 1886, 1895, 1899, 1913], "__main__": [37, 38, 40, 49, 50, 58, 1883, 1886, 1895, 1899, 1913], "base_se": 37, "worker_id": [37, 59, 1897], "therebi": [37, 46, 1903, 1907], "mandatorili": 37, "faq": [37, 1358, 1637, 1857], "initial_se": [37, 88, 1857, 1897, 1911], "simplecustombatch": 37, "transposed_data": 37, "zip": [37, 42, 1856, 1860, 1861, 1871, 1885, 1892, 1916], "tgt": [37, 1464, 1465, 1466], "collate_wrapp": 37, "tensordataset": 37, "batch_ndx": 37, "is_pin": [37, 1634, 1860, 1875, 1902, 1918], "multiprocessing_context": 37, "pin_memory_devic": 37, "reshuffl": 37, "draw": [37, 154, 919, 1025, 1311, 1713, 1921], "mutual": [37, 40, 48, 731, 1923], "subprocess": [37, 40, 55, 57, 59, 1889, 1895], "incomplet": [37, 897, 1864, 1917], "divis": [37, 579, 613, 683, 768, 769, 770, 943, 1057, 1107, 1110, 1199, 1232, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1376, 1388, 1412, 1430, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1556, 1726, 1795, 1822, 1862, 1881, 1885], "basecontext": 37, "randomsampl": 37, "prefetch": [37, 62], "unpickl": [37, 40, 1260, 1904], "proper": [37, 48, 69, 70, 1053, 1745, 1861, 1882, 1885, 1887, 1899], "guess": 37, "trust": [37, 40, 1260, 1856, 1904], "inaccur": [37, 38], "kwd": 37, "__getitems__": 37, "myiterabledataset": 37, "worker_info": 37, "iter_start": 37, "iter_end": 37, "per_work": 37, "ceil": [37, 177, 629, 630, 764, 765, 1334, 1335, 1336, 1389, 1390, 1414, 1415, 1416, 1487, 1488, 1489, 1544, 1545, 1546, 1711, 1712, 1735, 1858, 1860, 1875, 1885, 1902, 1916], "mult": 37, "overall_start": 37, "overall_end": 37, "stackdataset": 37, "assembl": 37, "imagedataset": 37, "textdataset": 37, "tuple_stack": 37, "dict_stack": 37, "concatdataset": 37, "chaindataset": 37, "fly": [37, 1005, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1882], "_util": 37, "collate_fn_map": 37, "default_collate_fn_map": 37, "collate_tensor_fn": 37, "custom_col": 37, "collate_map": 37, "outer": [37, 687, 897, 1062, 1120, 1124, 1129, 1135, 1860, 1862, 1902], "unchang": [37, 496, 510, 512, 731, 810, 1101, 1189, 1421, 1464, 1727, 1798, 1881, 1896, 1907], "byte": [37, 40, 46, 57, 241, 433, 554, 876, 970, 1011, 1013, 1015, 1017, 1115, 1188, 1260, 1297, 1298, 1657, 1666, 1738, 1861, 1862, 1863, 1875, 1904, 1916, 1918], "v_i": [37, 1228], "v_1": 37, "v_2": 37, "v1_i": 37, "v2_i": 37, "v1_1": 37, "v1_2": 37, "v2_1": 37, "v2_2": 37, "elem": [37, 1860], "customtyp": 37, "collate_customtype_fn": 37, "custotyp": 37, "default_convert": 37, "np": [37, 937, 1057, 1062, 1102, 1103, 1104, 1560, 1700, 1888, 1897, 1900, 1921, 1922, 1923], "workerinfo": [37, 1912], "random_split": 37, "floor": [37, 270, 643, 644, 764, 765, 1057, 1107, 1199, 1334, 1335, 1336, 1389, 1390, 1414, 1415, 1416, 1487, 1488, 1489, 1544, 1545, 1546, 1711, 1712, 1726, 1735, 1803, 1858, 1860, 1862, 1875, 1898, 1902, 1916], "frac": [37, 46, 278, 376, 645, 646, 683, 756, 768, 769, 770, 861, 918, 927, 957, 961, 1057, 1107, 1142, 1146, 1147, 1208, 1220, 1224, 1225, 1228, 1240, 1252, 1259, 1275, 1329, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1368, 1373, 1374, 1375, 1376, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1406, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1424, 1425, 1426, 1428, 1436, 1438, 1439, 1451, 1453, 1454, 1456, 1457, 1459, 1460, 1461, 1472, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1540, 1556, 1558, 1560, 1570, 1572, 1576, 1578, 1580, 1581, 1661, 1662, 1665, 1667, 1673, 1680, 1681, 1710, 1722, 1725, 1737, 1758, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1786, 1801, 1802, 1803, 1807, 1828, 1844, 1845, 1860, 1875, 1880, 1882, 1890, 1902, 1917], "robin": [37, 40], "generator1": 37, "manual_se": [37, 67, 88, 1857, 1860, 1875, 1893, 1897, 1900, 1902, 1911], "generator2": 37, "data_sourc": 37, "accedingsequencelengthsampl": 37, "argsort": [37, 1818, 1860, 1888, 1902], "tolist": [37, 351, 1862, 1902, 1918], "accedingsequencelengthbatchsampl": 37, "sequentialsampl": 37, "num_sampl": [37, 419, 1311, 1860], "drawn": [37, 173, 257, 285, 1311, 1649, 1713, 1717, 1718, 1880, 1923, 1924], "subsetrandomsampl": 37, "weightedrandomsampl": 37, "row": [37, 38, 45, 46, 208, 312, 314, 320, 581, 584, 689, 695, 873, 897, 899, 937, 957, 961, 1045, 1075, 1103, 1104, 1124, 1130, 1151, 1210, 1236, 1244, 1247, 1252, 1276, 1278, 1286, 1288, 1289, 1291, 1294, 1311, 1317, 1318, 1319, 1511, 1512, 1560, 1608, 1647, 1704, 1707, 1727, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1806, 1825, 1828, 1832, 1834, 1843, 1849, 1851, 1860, 1890, 1916, 1921], "05": [37, 44, 70, 113, 343, 690, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 904, 905, 941, 1076, 1178, 1204, 1205, 1275, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1464, 1466, 1468, 1490, 1521, 1530, 1534, 1601, 1679, 1685, 1686, 1692, 1764, 1765, 1770, 1859, 1860, 1903, 1913, 1923], "batchsampl": 37, "distributedsampl": [37, 1601], "num_replica": 37, "world_siz": [37, 38, 40, 41, 44, 48, 57, 58, 60, 62, 1601, 1886, 1905, 1912, 1913], "evenli": [37, 579, 580, 581, 691, 692, 1060, 1152, 1259, 1275, 1850], "set_epoch": 37, "is_distribut": [37, 1860, 1902], "start_epoch": 37, "n_epoch": 37, "vanilla": [38, 1869], "allreduc": [38, 40, 1601, 1885, 1886, 1902], "register_comm_hook": [38, 44, 62, 1601], "mainli": [38, 46, 823, 1344, 1504, 1925], "gradbucket": [38, 1601], "decompos": [38, 70, 1112, 1119, 1233, 1858, 1882, 1900], "get_per_parameter_tensor": 38, "_distributed_c10d": [38, 40], "1d": [38, 45, 46, 62, 698, 701, 734, 737, 768, 778, 948, 957, 961, 1045, 1059, 1150, 1151, 1166, 1186, 1244, 1245, 1290, 1318, 1326, 1330, 1334, 1344, 1349, 1352, 1357, 1360, 1361, 1365, 1389, 1413, 1414, 1426, 1428, 1473, 1479, 1482, 1485, 1487, 1495, 1498, 1506, 1512, 1541, 1544, 1707, 1708, 1711, 1803, 1828, 1846], "is_last": 38, "set_buff": 38, "stateless": [38, 67, 1878, 1893], "ddp_comm_hook": [38, 44], "default_hook": 38, "allreduce_hook": 38, "process_group": [38, 41, 42, 44, 62, 1460, 1601], "unaffect": [38, 496, 497, 1375], "ddp_model": [38, 40, 1601, 1886], "fp16_compress_hook": 38, "decompress": [38, 1856, 1871], "bf16_compress_hook": 38, "nccl": [38, 41, 42, 58, 62, 1601, 1891], "brain": [38, 1919, 1922], "fp16_compress_wrapp": 38, "powersgdst": 38, "matrix_approximation_rank": 38, "start_powersgd_it": 38, "powersgd_hook": 38, "bf16_compress_wrapp": 38, "wikipedia": [38, 1557, 1882, 1890, 1928], "wiki": [38, 1928], "bfloat16_float": 38, "point_format": 38, "vogel": 38, "et": [38, 46, 62, 1344, 1433, 1434, 1469, 1470, 1676, 1771, 1808, 1880], "al": [38, 46, 62, 1344, 1433, 1434, 1469, 1470, 1676, 1771, 1808, 1880], "neurip": [38, 46], "2019": [38, 46, 1019], "hyperparamet": [38, 62, 70, 1921], "1000": [38, 1077, 1082, 1108, 1109, 1329, 1364, 1470, 1708, 1735, 1755, 1821, 1882, 1898, 1900, 1921], "min_compression_r": 38, "use_error_feedback": 38, "warm_start": 38, "orthogonalization_epsilon": 38, "random_se": 38, "compression_stats_logging_frequ": 38, "batch_tensors_with_same_shap": 38, "stronger": 38, "threshold": [38, 70, 1243, 1246, 1382, 1452, 1457, 1578, 1584, 1690, 1755, 1860, 1881, 1885, 1902, 1921], "exponenti": [38, 257, 1072, 1240, 1266, 1267, 1268, 1276, 1343, 1363, 1509, 1857, 1862, 1902, 1903, 1917, 1924], "grid": [38, 1082, 1290, 1485, 1520, 1858, 1860, 1885, 1921], "satisfactori": 38, "appendix": [38, 1857], "defer": [38, 62, 1885, 1905], "hybrid": [38, 62, 218, 539, 579, 580, 581, 583, 584, 1153], "scheme": [38, 57, 476, 798, 815, 816, 817, 818, 821, 823, 1893], "trajectori": 38, "irrecover": 38, "num_row": 38, "num_col": 38, "1e": [38, 70, 113, 343, 690, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 751, 904, 905, 940, 941, 1178, 1204, 1205, 1255, 1339, 1340, 1341, 1356, 1375, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1407, 1430, 1435, 1460, 1464, 1466, 1468, 1469, 1490, 1502, 1517, 1521, 1522, 1530, 1534, 1556, 1559, 1563, 1586, 1609, 1642, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1677, 1690, 1698, 1751, 1859, 1860, 1887, 1893, 1900, 1903, 1917, 1923], "orthogon": [38, 1225, 1228, 1247, 1252, 1261, 1694, 1706, 1880, 1882, 1893, 1916], "epsilon": [38, 70, 815, 816, 817, 818, 821, 861, 1243, 1246, 1339, 1340, 1341, 1356, 1376, 1384, 1385, 1386, 1393, 1430, 1460, 1502, 1556, 1609, 1642, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1710, 1860, 1917], "bucket_cap_mb": [38, 1601, 1886], "memor": 38, "compens": 38, "apex": 38, "uncompress": [38, 1916], "p": [38, 42, 46, 62, 70, 154, 233, 285, 423, 424, 451, 488, 489, 604, 682, 685, 917, 919, 929, 937, 1056, 1209, 1220, 1226, 1227, 1235, 1236, 1278, 1280, 1283, 1293, 1314, 1333, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1387, 1389, 1390, 1426, 1430, 1432, 1469, 1470, 1486, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1541, 1542, 1552, 1556, 1559, 1560, 1586, 1605, 1611, 1613, 1619, 1628, 1648, 1676, 1727, 1784, 1858, 1860, 1861, 1881, 1882, 1885, 1889, 1890, 1895, 1906, 1916, 1917], "pq": 38, "mq": [38, 1907, 1926], "tp": [38, 45], "comm": [38, 40, 1886], "handler": [38, 40, 50, 51, 1620, 1872, 1892, 1904, 1927], "batched_powersgd_hook": 38, "destroi": [38, 57, 1358, 1882, 1912], "squar": [38, 46, 547, 735, 736, 737, 738, 775, 781, 790, 961, 1049, 1051, 1186, 1220, 1222, 1224, 1225, 1226, 1229, 1230, 1234, 1236, 1238, 1240, 1242, 1246, 1248, 1249, 1251, 1252, 1256, 1269, 1278, 1327, 1331, 1335, 1336, 1350, 1351, 1353, 1354, 1369, 1370, 1382, 1390, 1412, 1415, 1416, 1419, 1452, 1464, 1487, 1496, 1499, 1515, 1516, 1520, 1529, 1531, 1551, 1574, 1589, 1608, 1661, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1737, 1796, 1830, 1843, 1860, 1902, 1916], "truncat": [38, 1107, 1836, 1877, 1880, 1889, 1896], "debugging_hook": 38, "noop_hook": 38, "noop": [38, 1601], "headroom": 38, "desynchron": [38, 40], "trainer": [38, 48, 50, 55, 58, 59, 1601, 1912], "__setstate__": 38, "__getstate__": 38, "reload": [38, 44, 1856], "sy": [38, 49, 58, 60, 1856, 1885, 1904], "tempfil": 38, "simplemodel": 38, "fc2": [38, 1592, 1905], "master_addr": [38, 40, 48, 58, 60, 1886, 1905, 1912, 1913], "localhost": [38, 40, 57, 58, 1886, 1905, 1912, 1913], "master_port": [38, 40, 48, 58, 60, 1886, 1905, 1912, 1913], "12355": 38, "init_process_group": [38, 40, 41, 44, 48, 58, 60, 1601, 1885, 1886, 1912], "cleanup": 38, "destroy_process_group": 38, "run_demo": 38, "demo_fn": 38, "mp": [38, 40, 41, 59, 1601, 1857, 1886, 1895, 1907, 1913, 1918, 1919, 1926], "nproc": [38, 40, 55, 56, 58, 1874, 1886, 1913], "demo_seri": 38, "gettempdir": 38, "device_id": [38, 40, 41, 44, 58, 62, 1260, 1358, 1460, 1585, 1601, 1886], "powersgd_st": 38, "lr": [38, 41, 44, 62, 1592, 1601, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1885, 1886, 1893, 1903, 1913, 1921], "001": [38, 904, 905, 1198, 1659, 1663, 1664, 1673, 1677, 1689, 1886, 1900], "comm_hook": 38, "comm_hook_st": 38, "hook_stat": 38, "barrier": [38, 48, 57, 1902], "map_loc": [38, 1193, 1196, 1260, 1601, 1856, 1871, 1904], "n_gpu": 38, "device_count": [38, 40, 1857], "got": [38, 40, 887, 1887, 1923], "thank": [38, 46, 1887, 1905], "thij": 38, "par": 38, "home": [39, 1885], "brief": [40, 1601, 1874, 1912], "introduct": [40, 46, 997, 1601, 1857, 1859, 1863, 1875, 1883, 1893, 1900, 1912, 1916, 1921], "mpi": [40, 1601], "gloo": [40, 58, 1601, 1886, 1891, 1912], "recv": [40, 1601, 1902, 1913], "all_reduc": [40, 59, 1601], "all_gath": 40, "scatter": [40, 44, 62, 510, 512, 514, 1358, 1842, 1860, 1889, 1902, 1912], "reduce_scatt": [40, 1902], "all_to_al": 40, "v1": [40, 62, 1257, 1695, 1856, 1886, 1912], "init_method": [40, 1601, 1912], "adher": [40, 1862], "some_fil": 40, "machine_nam": 40, "share_folder_nam": 40, "tcpstore": [40, 57], "infiniband": [40, 1601, 1912], "interconnect": 40, "gpudirect": 40, "ethernet": 40, "ip": [40, 57], "ib": 40, "nccl_socket_ifnam": 40, "eth0": 40, "gloo_socket_ifnam": 40, "comma": [40, 1062, 1862, 1868], "eth1": 40, "eth2": 40, "eth3": 40, "imper": 40, "nccl_debug": 40, "nccl_debug_subsi": 40, "coll": 40, "hang": [40, 41, 44, 1601, 1886], "topologi": [40, 42, 45, 48], "effort": [40, 1912], "socket": [40, 1874, 1912], "nccl_socket_nthread": 40, "nccl_nsocks_perthread": 40, "cloud": [40, 1916, 1921], "aw": [40, 49, 961], "primit": [40, 44, 57, 1260, 1858, 1859, 1861, 1863, 1884, 1894, 1900, 1912], "connect": [40, 48, 57, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402, 1449, 1874, 1912], "redund": [40, 62, 1078, 1079, 1081, 1083, 1097, 1099, 1803], "averag": [40, 44, 731, 762, 763, 764, 765, 817, 818, 913, 915, 961, 1025, 1039, 1189, 1326, 1327, 1328, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1355, 1357, 1365, 1375, 1381, 1387, 1388, 1389, 1390, 1394, 1395, 1396, 1412, 1413, 1421, 1424, 1425, 1426, 1427, 1428, 1435, 1452, 1453, 1460, 1469, 1479, 1480, 1481, 1487, 1488, 1489, 1492, 1493, 1503, 1517, 1532, 1541, 1542, 1555, 1563, 1601, 1660, 1661, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1828, 1857, 1886, 1906], "thrash": 40, "recurr": [40, 756, 757, 1204, 1344, 1358, 1373, 1374, 1391, 1436, 1611, 1637, 1674, 1857, 1885], "use_distribut": 40, "datetim": [40, 1872], "timedelta": [40, 57, 1872], "1800": 40, "group_nam": [40, 54], "pg_option": 40, "url": [40, 57, 912, 1856, 1871, 1912], "discov": [40, 1912], "encod": [40, 48, 54, 57, 70, 1236, 1260, 1302, 1303, 1337, 1338, 1464, 1465, 1466, 1467, 1468, 1601, 1789, 1790, 1791, 1793, 1794, 1859, 1862, 1863, 1887, 1898, 1904, 1913, 1916], "ucc": 40, "lowercas": 40, "deadlock": [40, 1601], "job": [40, 48, 50, 51, 53, 54, 56, 57, 58, 59, 1601, 1682, 1688, 1892, 1906, 1921], "exchang": [40, 57, 966, 1050, 1885, 1900], "nccl_blocking_wait": 40, "nccl_async_error_handl": [40, 1885], "abort": [40, 1885], "crash": [40, 50, 57, 1874, 1882, 1912, 1914, 1921], "caught": [40, 1601, 1874], "watch": 40, "dog": 40, "processgroupopt": 40, "processgroupnccl": [40, 1886], "is_high_priority_stream": 40, "backend_nam": 40, "custom_backend": 40, "is_initi": [40, 1857], "is_mpi_avail": 40, "is_nccl_avail": 40, "is_gloo_avail": 40, "is_torchelastic_launch": 40, "elast": [40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 1857], "torchelast": [40, 43, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60], "torchelastic_run_id": [40, 58], "rendezv": [40, 43, 48, 54, 56, 60, 1886, 1912], "null": [40, 49, 51, 54], "discoveri": [40, 57, 1885, 1904], "reachabl": 40, "multicast": 40, "23456": 40, "clean": [40, 48, 70, 1001, 1856, 1874, 1904], "fcntl": 40, "nf": 40, "brand": 40, "unsuccess": 40, "mnt": 40, "sharedfil": 40, "port": [40, 48, 56, 57, 58, 1891], "backend_str": 40, "uppercas": 40, "classmethod": [40, 57, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 790, 811, 812, 813, 820, 850, 965, 1364, 1365, 1460, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1657, 1862, 1863, 1887, 1907, 1912, 1918, 1927], "extended_api": 40, "instanti": [40, 44, 56, 57, 58, 70, 837, 1066, 1164, 1365, 1512, 1610, 1634, 1641, 1646, 1856, 1859, 1861, 1862, 1885, 1887, 1893, 1918], "3rd": [40, 46, 57, 613, 1690, 1883], "processgroup": [40, 42, 44, 62, 1601], "four": [40, 1234, 1350, 1887, 1890, 1912, 1914], "c10d": [40, 48, 56, 58, 60, 1601, 1886, 1902], "distributedbackendopt": 40, "get_backend": [40, 57], "get_rank": [40, 1460], "get_world_s": 40, "filestor": [40, 57], "hashstor": 40, "host_nam": 40, "hostnam": [40, 48, 57, 1906], "listen": 40, "is_mast": 40, "300": [40, 48, 1266, 1338, 1638, 1640, 1903], "wait_for_work": 40, "server_stor": 40, "127": [40, 790, 1876, 1907, 1921], "1234": [40, 57, 1166], "client_stor": 40, "first_kei": 40, "first_valu": 40, "hashmap": 40, "file_nam": [40, 1856, 1871, 1904], "store1": 40, "store2": 40, "prefixstor": 40, "quantiti": [40, 63, 68, 1224, 1225, 1252, 1387, 1618, 1619, 1621, 1622, 1624, 1627, 1628, 1629, 1630, 1690, 1888, 1890], "compare_set": 40, "arg2": 40, "expected_valu": 40, "desired_valu": 40, "second_valu": 40, "overload": [40, 70, 613, 1861, 1862, 1866], "bad_kei": 40, "num_kei": 40, "destruct": [40, 1872, 1912, 1914], "delete_kei": 40, "set_timeout": 40, "grain": [40, 854, 857, 1570, 1857, 1882, 1900], "plai": 40, "new_group": [40, 62, 1460], "use_local_synchron": 40, "enqueu": [40, 69, 966, 968, 969, 1885, 1913], "get_group_rank": 40, "global_rank": [40, 48], "get_global_rank": 40, "group_rank": [40, 48, 58], "get_process_group_rank": 40, "dst": [40, 1856, 1904], "destin": [40, 42, 51, 54, 62, 209, 414, 415, 599, 977, 978, 1131, 1189, 1295, 1296, 1421, 1655, 1656, 1860, 1912, 1913, 1918], "unspecifi": [40, 479, 816, 817, 818, 821, 904, 905, 1454, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1786, 1869, 1916, 1921], "sender": [40, 1914], "isend": 40, "irecv": 40, "is_complet": 40, "finish": [40, 42, 48, 54, 55, 57, 59, 69, 1119, 1885, 1886, 1899, 1906, 1912, 1914], "batch_isend_irecv": 40, "p2p_op_list": 40, "p2pop": 40, "op_list": 40, "send_tensor": 40, "recv_tensor": 40, "send_op": 40, "recv_op": 40, "req": 40, "pg": [40, 1601], "set_devic": [40, 42, 62, 1601, 1746, 1857, 1912, 1919], "p2p": [40, 57], "async_op": 40, "get_futur": [40, 1601], "regard": [40, 1352, 1353, 1354, 1364, 1365, 1511, 1512, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1859, 1914, 1916], "add_": [40, 65, 67, 221, 1119, 1860, 1875, 1883, 1916], "101": [40, 1329], "overwrot": 40, "sent": [40, 42, 1001, 1862, 1874, 1895, 1912, 1913, 1914], "broadcast_object_list": 40, "object_list": 40, "picklabl": [40, 1189, 1421, 1904], "current_devic": [40, 42, 974, 982, 983, 990, 991, 1007, 1011, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1025, 1026, 1027, 1028, 1038, 1039, 1040, 1857, 1919], "insecur": [40, 1260], "malici": [40, 1260, 1904], "ineffici": [40, 1885, 1907], "redoptyp": 40, "bitwis": [40, 921, 923, 924, 926, 1863, 1896, 1908, 1924], "reduceop": 40, "int64": [40, 191, 208, 312, 320, 392, 861, 920, 933, 1063, 1076, 1077, 1114, 1503, 1634, 1717, 1721, 1722, 1742, 1789, 1790, 1791, 1793, 1794, 1885, 1916, 1918, 1919, 1922, 1928], "1j": [40, 694, 954, 955, 1185, 1730, 1731, 1846, 1882, 1890, 1898], "2j": [40, 694, 954, 955, 1730, 1731, 1758, 1846, 1882], "tensor_list": [40, 1877], "all_gather_into_tensor": 40, "output_tensor": 40, "accommod": [40, 1417, 1418, 1419], "ii": [40, 957, 1062, 1391, 1392], "tensor_in": 40, "tensor_out": 40, "tensor_out2": 40, "all_gather_object": 40, "obj": [40, 70, 876, 986, 1175, 1176, 1195, 1200, 1738, 1860, 1899, 1904], "pickabl": 40, "responsibl": 40, "gather_object": 40, "gather_list": 40, "object_gather_list": 40, "scatter_list": 40, "tensor_s": 40, "t_one": 40, "t_five": 40, "scatter_object_list": 40, "scatter_object_output_list": 40, "scatter_object_input_list": 40, "output_list": 40, "input_list": 40, "reduce_scatter_tensor": 40, "all_to_all_singl": 40, "output_split_s": 40, "input_split_s": 40, "15": [40, 70, 613, 1060, 1132, 1142, 1152, 1211, 1225, 1345, 1418, 1419, 1638, 1640, 1698, 1771, 1780, 1826, 1850, 1859, 1860, 1863, 1900, 1916], "uneven": [40, 41, 44, 1601], "21": [40, 46, 681, 939, 1045, 1247, 1706, 1828, 1859, 1916], "31": [40, 925, 1336, 1416, 1592, 1766, 1900], "33": [40, 734, 735, 736, 737, 738, 739, 768, 1189, 1349, 1350, 1351, 1353, 1354, 1419, 1421, 1495, 1497, 1498, 1500, 1859, 1900], "35": [40, 1247, 1340, 1341, 1385, 1386, 1460, 1706], "input_split": 40, "output_split": 40, "5j": 40, "6j": 40, "7j": 40, "8j": 40, "9j": 40, "10j": 40, "11j": 40, "12j": 40, "13j": 40, "14j": 40, "15j": 40, "16j": 40, "output_tensor_list": 40, "input_tensor_list": 40, "monitored_barri": [40, 1902], "wait_all_rank": 40, "band": 40, "bor": 40, "bxor": 40, "premul_sum": 40, "_make_nccl_premul_sum": 40, "all_reduce_multigpu": 40, "__members__": 40, "reduce_op": 40, "revisit": 40, "broadcast_multigpu": 40, "reduce_multigpu": 40, "all_gather_multigpu": 40, "reduce_scatter_multigpu": 40, "distributed_test": 40, "dev_idx": 40, "src_tensor": 40, "resid": [40, 62, 69, 196, 288, 336, 1260, 1601, 1885, 1905, 1912], "dst_tensor": 40, "cpp_extens": [40, 1857, 1887], "cpp_c10d_extens": 40, "torchrun": [40, 43, 49, 56, 60], "benefici": [40, 1893], "nproc_per_nod": [40, 49], "num_gpus_you_hav": 40, "your_training_script": [40, 56, 58], "arg3": 40, "192": [40, 613, 1900], "168": 40, "nnode": [40, 56, 58], "local_process_rank": 40, "local_rank": [40, 48, 50, 55, 58, 60, 1460], "argpars": [40, 58, 1885], "parser": [40, 58, 1885], "argumentpars": [40, 58, 1885], "add_argu": [40, 58, 1885], "parse_arg": [40, 49, 58, 60, 1885, 1900], "output_devic": [40, 44, 58, 1358, 1460, 1585, 1601], "adjust": [40, 42, 44, 46, 62, 1857, 1884, 1908], "launcher": [40, 58], "filesystem": [40, 42, 964, 1856, 1904], "12042": 40, "imagenet": [40, 1880], "inconsist": [40, 62, 861, 1722, 1887], "group_gloo": 40, "29501": 40, "monitoredbarri": 40, "transport": [40, 1912], "598": 40, "2401": 40, "db00": 40, "eef0": 40, "1100": 40, "3560": 40, "1c05": 40, "25d": 40, "8594": 40, "torch_cpp_log_level": 40, "twolinlayernet": 40, "i0607": 40, "739390": 40, "515217": 40, "logger": [40, 1654, 1925, 1926], "173": 40, "broadcast_buff": [40, 1601], "bucket_cap_byt": 40, "26214400": 40, "find_unused_paramet": [40, 1601, 1886], "gradient_as_bucket_view": [40, 1601], "is_multi_device_modul": 40, "num_parameter_tensor": 40, "total_parameter_size_byt": 40, "440": 40, "bucket_s": 40, "cuda_visible_devic": [40, 1031, 1601, 1885], "module_nam": [40, 70, 813, 850, 1904], "nccl_ib_timeout": 40, "nccl_nthread": 40, "58": 40, "085681": 40, "544067": 40, "344": 40, "unused_parameter_s": 40, "40838608": 40, "5983335": 40, "4326421": 40, "comp": [40, 46], "4207652": 40, "085693": 40, "544066": 40, "42850427": 40, "3885553": 40, "2357981": 40, "2234674": 40, "unus": [40, 44, 70, 903, 1001, 1015, 1194, 1200, 1383, 1601, 1659, 1859, 1861, 1862, 1885, 1886, 1891, 1904], "wasn": [40, 1260, 1859], "va": 40, "lue": 40, "indirectli": 40, "outstand": [40, 1912], "stuck": [40, 48, 59], "uninform": 40, "reveal": [40, 1886], "default_pg": 40, "longtensor": [40, 134, 135, 136, 314, 316, 318, 450, 469, 510, 512, 514, 870, 871, 1131, 1163, 1210, 1311, 1364, 1365, 1424, 1511, 1512, 1557, 1647, 1742, 1780, 1792, 1817, 1825, 1852, 1919, 1922], "set_debug_level": 40, "set_debug_level_from_env": 40, "get_debug_level": 40, "torch_show_cpp_stacktrac": 40, "distbackenderror": 40, "facilit": [41, 46, 67, 966, 1050, 1747, 1856, 1859, 1862, 1897], "joinabl": [41, 44, 1601, 1857], "joinhook": [41, 1857], "throw_on_early_termin": [41, 1601], "shadow": [41, 44, 1601, 1925, 1926], "notify_join_context": 41, "zeroredundancyoptim": [41, 44, 1601, 1857], "01": [41, 44, 59, 751, 776, 817, 818, 1063, 1105, 1407, 1535, 1536, 1592, 1658, 1660, 1662, 1664, 1674, 1675, 1682, 1688, 1708, 1762, 1764, 1765, 1770, 1771, 1858, 1860, 1880, 1892, 1900, 1903], "vacuou": 41, "inherit": [41, 1626, 1859, 1861, 1877, 1887, 1893, 1895], "join_hook": [41, 44, 1601], "join_devic": 41, "join_process_group": 41, "repeatedli": [41, 1885, 1916], "main_hook": 41, "post_hook": 41, "is_last_join": 41, "dcp": 42, "reshard": [42, 45, 62], "storage_read": 42, "coordinator_rank": 42, "no_dist": 42, "planner": 42, "spmd": 42, "fullfil": 42, "shardedtensor": [42, 62], "po": [42, 1900], "storageread": [42, 1857], "rank0": [42, 62], "mymodul": [42, 62, 70, 1193, 1194, 1195, 1199, 1200, 1206, 1422, 1423, 1431, 1432, 1859, 1861, 1862, 1889, 1898, 1912], "adagrad": [42, 1364, 1869, 1903, 1912], "model_state_dict": 42, "fs_storage_load": 42, "filesystemload": 42, "save_state_dict": [42, 1857], "storage_writ": 42, "storagewrit": [42, 1857], "fs_storage_writ": 42, "filesystemwrit": [42, 1857], "told": [42, 1861], "read_metadata": 42, "set_up_storage_read": 42, "prepare_local_plan": 42, "prepare_global_plan": 42, "read_data": 42, "central": [42, 1142, 1890, 1892], "loadplan": [42, 1857], "storage_data": 42, "loadplann": [42, 1857], "load_byt": 42, "bytesio": [42, 1196, 1199, 1260, 1738, 1900, 1907], "resolve_tensor": 42, "storagelay": 42, "is_coordin": 42, "set_up_storage_writ": 42, "write_data": 42, "recover": 42, "writeresult": 42, "saveplan": [42, 1857], "saveplann": [42, 1857], "resolve_data": 42, "writeitem": [42, 1857], "tensor_data": 42, "set_up_plann": 42, "create_local_plan": 42, "create_global_plan": 42, "commit_tensor": 42, "defaultloadplann": [42, 1857], "requit": 42, "intrincaci": 42, "renameplann": 42, "original_state_dict": 42, "foo_": [42, 1119], "v": [42, 54, 66, 70, 485, 540, 891, 898, 900, 901, 902, 933, 1118, 1128, 1130, 1186, 1202, 1224, 1228, 1252, 1256, 1261, 1427, 1469, 1470, 1511, 1556, 1570, 1640, 1645, 1674, 1676, 1696, 1729, 1788, 1792, 1807, 1808, 1849, 1857, 1859, 1860, 1861, 1862, 1872, 1882, 1890, 1899, 1904, 1916, 1921], "read_item": 42, "dest_index": 42, "fqn": [42, 45, 1926], "metamodelmateri": 42, "defaultsaveplann": [42, 1857], "empty_lik": [42, 1860, 1864, 1875, 1877, 1902, 1916], "global_plan": 42, "finish_plan": 42, "central_plan": 42, "readitem": [42, 1857], "planner_data": 42, "loaditemtyp": 42, "metadataindex": 42, "dest_offset": 42, "storage_index": 42, "storage_offset": [42, 138, 517, 613, 874, 1858, 1860, 1902], "tandem": 42, "fp16planner": 42, "write_item": 42, "writeitemtyp": 42, "byte_io": 42, "itertool": [42, 46, 935, 948], "islic": 42, "ddploadbalancingplann": 42, "all_plan": 42, "saveextradataplann": 42, "merged_data": 42, "new_plan": 42, "idempot": [42, 1912, 1914], "hi": [42, 1391, 1392, 1859, 1861, 1890], "late": [42, 57], "tensorwritedata": 42, "nonetyp": [42, 1860, 1862], "filesystemread": [42, 1857], "single_file_per_rank": 42, "sync_fil": 42, "thread_count": 42, "per_thread_copy_ahead": 42, "10000000": 42, "atom": [42, 57, 70, 1863], "distributedtensor": [42, 45], "flatten_state_dict": 42, "flatten_sharded_tensor": 42, "dedup_replicated_tensor": 42, "lookup_object": 42, "transform_object": 42, "lookup_tensor": 42, "transform_tensor": 42, "fault": [43, 48, 56, 57, 1115], "toler": [43, 48, 56, 57, 70, 690, 904, 905, 1178, 1204, 1205, 1243, 1246, 1261, 1659, 1666, 1859, 1923], "quickstart": 43, "agent": [43, 49, 50, 51, 54, 56, 58, 59, 1912], "expir": 43, "kubernet": 43, "distributedoptim": [44, 1601, 1857, 1912, 1913], "rref": [44, 1601, 1857, 1862, 1905, 1913], "optimizer_class": 44, "params_rref": 44, "get_gradi": [44, 1902, 1912, 1913], "multithread": [44, 916, 1885], "dist_autograd": [44, 1601, 1912, 1913], "rpc": [44, 69, 1601, 1857, 1862, 1905, 1913, 1914], "context_id": [44, 1601, 1912, 1913], "rref1": [44, 1912, 1913], "worker1": [44, 69, 1601, 1912, 1913], "rref2": [44, 1912, 1913], "to_her": [44, 1601, 1902, 1912, 1913, 1914], "dist_optim": [44, 1601, 1913], "postlocalsgdoptim": [44, 1857], "afer": 44, "modelaverag": 44, "localsgd": 44, "model_averag": 44, "post_localsgd_hook": 44, "postlocalsgdst": 44, "subgroup": 44, "start_localsgd_it": 44, "warmup_step": 44, "local_optim": 44, "periodicmodelaverag": 44, "intra": [44, 1884, 1886, 1905], "unnecessari": [44, 1641, 1862, 1882, 1885, 1887, 1898, 1904, 1920], "parameters_as_bucket_view": 44, "overlap_with_ddp": 44, "consumpt": [44, 66, 1646, 1916, 1921], "intact": [44, 1912], "ddp_zero_hook": 44, "disjointli": 44, "trail": [44, 1636, 1638, 1877, 1880, 1883, 1887], "wari": 44, "static_graph": [44, 1601, 1886], "third": [44, 46, 1061, 1062, 1278, 1329, 1336, 1351, 1354, 1416, 1688, 1857, 1859, 1885, 1888, 1893, 1904, 1906], "add_param_group": [44, 1613, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677], "param_group": [44, 62, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1673, 1674, 1675, 1676, 1677, 1684, 1687], "frozen": [44, 1193, 1198, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1863, 1899], "trainabl": [44, 1008, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1673, 1674, 1675, 1676, 1677, 1887], "consolidate_state_dict": 44, "consolid": [44, 62, 1905], "pertain": 44, "dtensor": 45, "rowwis": 45, "colwis": 45, "pairwis": [45, 46, 1381, 1430, 1469], "parallelize_modul": [45, 1857], "device_mesh": 45, "parallelize_plan": 45, "tp_mesh_dim": 45, "sub_modul": 45, "parallelstyl": 45, "devicemesh": 45, "mesh": [45, 1921], "prepar": [45, 70, 793, 835, 837, 853, 855, 857, 858, 859, 1128, 1198, 1863, 1900, 1925, 1926], "pairwiseparallel": [45, 1857], "granular": [45, 62, 1202, 1881], "rowwiseparallel": [45, 1857], "_prepare_input": 45, "make_input_shard_1d_last_dim": [45, 1857], "_prepare_output": 45, "make_output_tensor": [45, 1857], "colwiseparallel": [45, 1857], "make_input_replicate_1d": [45, 1857], "make_sharded_output_tensor": 45, "megatron": 45, "lm": 45, "arxiv": [45, 46, 1391, 1439, 1440, 1467, 1645, 1696, 1808, 1882], "1909": [45, 874], "08053": 45, "multihead": [45, 1427, 1466], "mlp": [45, 1592, 1907], "sequenceparallel": [45, 1857], "pdf": [45, 1344, 1439, 1771, 1882], "2205": 45, "05198": 45, "expectedli": 45, "make_input_reshard_repl": [45, 1857], "make_input_shard_1d": [45, 1857], "make_output_replicate_1d": [45, 1857], "make_output_reshard_tensor": [45, 1857], "make_output_shard_1d": [45, 1857], "multiheadattent": [45, 1464, 1466, 1468, 1907], "multihead_attent": 45, "swap": [45, 70, 613, 784, 785, 786, 789, 793, 860, 1278, 1469, 1470, 1586, 1587, 1827, 1860, 1863, 1885, 1907, 1916, 1918, 1925], "multihead_attention_tp": 45, "tensorparallelmultiheadattent": [45, 1857], "embed_dim": [45, 731, 1427], "num_head": [45, 731, 1427, 1860], "add_bias_kv": [45, 731, 1427], "add_zero_attn": [45, 731, 1427, 1860], "kdim": [45, 731, 1427], "vdim": [45, 731, 1427], "batch_first": [45, 730, 731, 756, 1373, 1391, 1427, 1436, 1437, 1464, 1466, 1468, 1635, 1637, 1638, 1640, 1860, 1889], "tp_size": 45, "self_attent": 45, "head": [45, 731, 1329, 1427, 1464, 1466, 1468], "fullyshardeddataparallel": [45, 1857], "enable_2d_with_fsdp": [45, 1857], "parameteriz": 46, "tensorflow": [46, 1674, 1882, 1921], "backpropag": [46, 905, 1675, 1706, 1889], "surrog": 46, "likelihood": [46, 1329, 1375, 1428, 1435, 1517, 1555, 1563], "reinforc": [46, 1450, 1573], "polici": [46, 48, 50, 62, 1682, 1688], "reparameter": [46, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631, 1632, 1633, 1645], "trick": [46, 900, 1338, 1522, 1882, 1890, 1892], "autoencod": 46, "whilst": [46, 1885], "densiti": [46, 300, 1150, 1151, 1771, 1860, 1917], "log_prob": [46, 1329, 1344, 1504, 1860], "theta": [46, 1485, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1860], "pi": [46, 173, 376, 694, 927, 1146, 1147, 1240, 1371, 1435, 1518, 1563, 1680, 1681, 1700, 1762, 1763, 1766, 1767, 1768, 1769, 1803, 1861, 1862, 1904, 1917], "reward": 46, "ascent": 46, "prob": [46, 1860], "policy_network": 46, "next_stat": 46, "rsampl": 46, "parameter": [46, 376, 452, 1195, 1878, 1916], "has_rsampl": 46, "batch_shap": 46, "event_shap": 46, "validate_arg": 46, "arg_constraint": 46, "cdf": 46, "cumul": [46, 1041, 1042, 1043, 1044, 1045, 1268, 1339, 1340, 1341, 1371, 1394, 1395, 1396, 1460, 1518], "mass": 46, "enumerate_support": 46, "discret": [46, 61, 479, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1097, 1099, 1522, 1771, 1921, 1924], "cardin": [46, 1290], "univari": 46, "singleton": [46, 253, 1393, 1841, 1883], "cartesian": [46, 935, 1290, 1700], "_instanc": 46, "icdf": 46, "perplex": 46, "sample_shap": 46, "sample_n": 46, "set_default_validate_arg": 46, "mimic": [46, 1688], "stddev": 46, "varianc": [46, 961, 1339, 1340, 1341, 1366, 1375, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1513, 1517, 1673, 1674, 1710, 1719, 1720, 1844, 1845, 1880, 1893], "exp_famili": 46, "famili": 46, "p_": [46, 939, 1280, 1676], "langl": 46, "rangl": 46, "denot": [46, 70, 961, 1209, 1228, 1234, 1247, 1257, 1349, 1350, 1387, 1610, 1613, 1676, 1789, 1790, 1791, 1793, 1794, 1846, 1890, 1910, 1913, 1916], "carrier": 46, "analyt": [46, 904, 905, 1511, 1916], "bregman": 46, "courtesi": 46, "frank": 46, "nielsen": 46, "richard": 46, "nock": 46, "logit": [46, 390, 1338, 1357, 1493, 1503, 1522, 1860, 1902, 1917], "70": [46, 1247, 1706, 1877], "lower_bound": 46, "upper_bound": 46, "has_enumerate_support": 46, "param_shap": 46, "concentration1": 46, "concentration0": 46, "concentr": 46, "1046": 46, "1st": [46, 1883], "2nd": [46, 613, 1429, 1455, 1558, 1883], "greaterthan": 46, "total_count": 46, "71": 46, "trial": 46, "integergreaterthan": 46, "ldot": [46, 1220, 1228, 1259, 1275, 1290, 1393, 1414, 1415, 1416, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "unnorm": [46, 1357, 1493, 1503, 1522], "likewis": [46, 1827], "25": [46, 493, 582, 583, 584, 937, 1150, 1256, 1261, 1367, 1424, 1426, 1429, 1592, 1601, 1638, 1640, 1666, 1688, 1707, 1843, 1859, 1917], "independentconstraint": 46, "simplex": 46, "loc": [46, 1260], "lorentz": 46, "3214": 46, "width": [46, 775, 781, 854, 1149, 1150, 1151, 1335, 1336, 1350, 1351, 1353, 1354, 1390, 1415, 1416, 1428, 1455, 1473, 1531, 1589, 1876], "df": 46, "chi": 46, "continuous_bernoulli": 46, "lim": [46, 1186], "499": 46, "501": 46, "2538": [46, 1220], "pervas": 46, "loaiza": 46, "ganem": 46, "cunningham": 46, "jp": 46, "1907": 46, "06845": 46, "8954": 46, "greaterthaneq": 46, "df1": 46, "df2": 46, "fisher": 46, "snedecor": 46, "2453": 46, "degre": [46, 961, 1039, 1046, 1189, 1226, 1227, 1421, 1430, 1469, 1601, 1714, 1734, 1801, 1802, 1844, 1845, 1860, 1890, 1902, 1916], "freedom": [46, 961, 1801, 1802, 1844, 1845, 1890], "0124": 46, "half_cauchi": 46, "half_norm": 46, "base_distribut": 46, "reinterpreted_batch_ndim": 46, "diagon": [46, 67, 224, 259, 591, 592, 593, 594, 928, 957, 961, 1049, 1050, 1051, 1053, 1062, 1075, 1123, 1124, 1134, 1218, 1230, 1232, 1235, 1247, 1251, 1560, 1570, 1787, 1826, 1830, 1831, 1832, 1833, 1834, 1860, 1887, 1902, 1920], "multivari": [46, 1917], "multivariate_norm": 46, "mvn": 46, "scale_tril": 46, "diag": [46, 68, 1122, 1123, 1124, 1224, 1225, 1252, 1696, 1787, 1807, 1808, 1860, 1902], "diagn": 46, "1729": [46, 1893], "lkj_choleski": 46, "lkj": 46, "matric": [46, 259, 682, 685, 917, 929, 930, 939, 940, 941, 942, 1050, 1134, 1209, 1218, 1219, 1220, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1261, 1269, 1278, 1280, 1293, 1372, 1430, 1485, 1519, 1608, 1613, 1694, 1696, 1706, 1755, 1781, 1784, 1785, 1807, 1808, 1830, 1831, 1833, 1860, 1875, 1890, 1896, 1916, 1922], "eta": [46, 1660, 1662, 1675], "proport": [46, 1389, 1390, 1427, 1468], "det": [46, 1226, 1227, 1248, 1269, 1860, 1902], "lkjcorr": 46, "onion": 46, "3x3": [46, 1045, 1828], "3516": 46, "9361": 46, "1899": [46, 1291], "4748": 46, "8593": 46, "vine": 46, "2009": [46, 1696, 1808], "lewandowski": 46, "dorota": 46, "kurowicka": 46, "harri": [46, 1771], "joe": 46, "journal": [46, 1713], "1016": 46, "jmva": 46, "04": [46, 1105, 1266, 1764, 1771], "008": 46, "corrcholeski": 46, "log_norm": [46, 1902], "lowrank_multivariate_norm": 46, "cov_factor": 46, "cov_diag": 46, "covari": [46, 930, 957, 961, 1339, 1340, 1341, 1460, 1696], "covariance_matrix": 46, "2102": 46, "5429": [46, 1830], "woodburi": 46, "lemma": 46, "capacit": 46, "precision_matrix": 46, "mixture_same_famili": 46, "mixture_distribut": 46, "component_distribut": 46, "rightmost": [46, 930, 1150, 1151, 1862], "gaussian": [46, 1371, 1375, 1450, 1517, 1518, 1573, 1770, 1917], "gmm": 46, "bivari": 46, "innermost": [46, 70, 1142, 1151, 1742], "1338": 46, "mathbf": [46, 1209, 1609, 1642, 1645, 1675], "sigma": [46, 173, 376, 756, 1338, 1372, 1373, 1374, 1391, 1392, 1450, 1451, 1519, 1573, 1609, 1642, 1765, 1801, 1802, 1844, 1845, 1860], "triangular": [46, 940, 941, 942, 1218, 1219, 1225, 1227, 1235, 1236, 1243, 1246, 1247, 1249, 1251, 1560, 1682, 1706, 1830, 1831, 1832, 1833, 1834], "positivedefinit": 46, "lowercholeski": 46, "negative_binomi": 46, "halfopeninterv": 46, "mu": [46, 376, 1674, 1676], "one_hot_categor": 46, "onehot": 46, "5623": 46, "nonneg": [46, 1470, 1696, 1808, 1917], "pmf": 46, "mathrm": [46, 919, 1226, 1227, 1228, 1229, 1240, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1430, 1435, 1460, 1608, 1663, 1664, 1665, 1675, 1710, 1882, 1917], "relaxed_bernoulli": 46, "temperatur": [46, 1522, 1857], "parametr": [46, 1118, 1610, 1617, 1642, 1643, 1878, 1887], "reparametriz": 46, "99": [46, 1200, 1674, 1859], "2951": [46, 1288], "3442": 46, "8918": 46, "9021": 46, "maddison": 46, "2017": [46, 1464, 1466, 1468, 1788, 1899], "reparametr": [46, 1522, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1625], "jang": 46, "relaxed_categor": 46, "1294": [46, 940], "2324": [46, 1189, 1421], "3859": 46, "2523": 46, "student": 46, "transformed_distribut": 46, "composit": [46, 67, 1122, 1236, 1608, 1859, 1862, 1888, 1893, 1900], "basedistribut": 46, "dx": [46, 1045, 1337, 1828, 1860, 1887, 1888, 1917], "dy": 46, "logist": [46, 1450, 1453, 1573, 1917], "sigmoidtransform": 46, "affinetransform": 46, "invert": [46, 70, 942, 1180, 1220, 1229, 1230, 1236, 1242, 1249, 1251, 1254, 1255, 1269, 1417, 1418, 1419, 1830, 1860, 1896, 1912], "3418": 46, "upper": [46, 181, 182, 183, 590, 791, 928, 933, 940, 941, 942, 944, 1076, 1077, 1149, 1150, 1218, 1219, 1225, 1227, 1235, 1236, 1247, 1251, 1439, 1560, 1568, 1569, 1682, 1688, 1706, 1721, 1742, 1830, 1833, 1834, 1860, 1880, 1902, 1917, 1923], "von_mis": 46, "circular": [46, 1349, 1350, 1351, 1397, 1398, 1399, 1558], "von": 46, "mise": 46, "unconstrain": [46, 1613], "angl": [46, 751, 880, 1046, 1269, 1407, 1700, 1714, 1758, 1857, 1860, 1902, 1916], "9777": 46, "radian": [46, 694, 880, 1046, 1714, 1860, 1902], "nichola": 46, "1979": 46, "152": [46, 613], "157": 46, "4784": [46, 1293], "symmetr": [46, 798, 816, 918, 927, 940, 941, 942, 1083, 1084, 1085, 1090, 1092, 1096, 1097, 1099, 1146, 1147, 1208, 1218, 1219, 1224, 1225, 1227, 1231, 1232, 1233, 1240, 1243, 1246, 1252, 1261, 1608, 1613, 1688, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1907, 1910], "x_ij": 46, "wu": [46, 1261], "chu": 46, "2018": [46, 1261, 1704], "sawyer": 46, "2007": 46, "anderson": 46, "w": [46, 68, 150, 756, 885, 887, 889, 895, 903, 918, 927, 961, 1120, 1131, 1146, 1147, 1186, 1228, 1327, 1328, 1335, 1336, 1338, 1340, 1341, 1345, 1350, 1351, 1357, 1361, 1362, 1364, 1365, 1366, 1373, 1385, 1386, 1393, 1404, 1405, 1415, 1416, 1426, 1427, 1428, 1433, 1434, 1455, 1471, 1472, 1474, 1475, 1485, 1493, 1511, 1512, 1520, 1555, 1561, 1562, 1609, 1642, 1645, 1860, 1875, 1876, 1880, 1882, 1887, 1890, 1903, 1904, 1921], "2003": 46, "ed": [46, 67, 1360, 1361, 1882, 1904, 1927], "odel": 46, "feiveson": 46, "1966": 46, "samplecovari": 46, "jasa": 46, "61": 46, "313": 46, "199": 46, "203": [46, 613], "ku": 46, "bloomfield": 46, "2010": [46, 1880], "ox": 46, "max_try_correct": 46, "bartlett": [46, 918], "singular": [46, 1220, 1234, 1235, 1241, 1243, 1245, 1246, 1252, 1253, 1261, 1269, 1278, 1609, 1613, 1696, 1807, 1808, 1896], "kl_diverg": 46, "kullback": [46, 1387, 1532], "leibler": [46, 1387, 1532], "register_kl": 46, "type_p": 46, "type_q": 46, "kl_normal_norm": 46, "ambigu": [46, 70, 1174, 1352, 1353, 1354, 1368, 1417, 1418, 1419, 1473, 1862], "runtimewarn": 46, "basep": 46, "derivedq": 46, "kl_version1": 46, "derivedp": 46, "baseq": 46, "kl_version2": 46, "tie": 46, "abstransform": 46, "event_dim": 46, "affin": [46, 470, 471, 472, 473, 474, 745, 747, 748, 749, 798, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1485, 1885, 1893], "cattransform": 46, "tseq": 46, "functor": [46, 1005, 1006], "submatrix": 46, "t0": [46, 1142, 1660, 1861], "exptransform": 46, "identity_transform": 46, "composetransform": 46, "corrcholeskytransform": 46, "uncontrain": 46, "euclidean": [46, 937, 1556], "x_i": [46, 67, 944, 1041, 1042, 1043, 1044, 1257, 1264, 1411, 1430, 1454, 1456, 1469, 1540, 1576, 1703, 1786, 1801, 1802, 1828, 1844, 1845, 1846, 1917], "stickbreakingtransform": 46, "r_i": 46, "tanh": [46, 573, 756, 761, 791, 881, 1371, 1373, 1374, 1391, 1392, 1420, 1436, 1438, 1462, 1518, 1550, 1582, 1858, 1860, 1875, 1876, 1880, 1902, 1909, 1916], "unsign": [46, 1910, 1919, 1922, 1923], "z_i": 46, "s_i": 46, "y_i": [46, 944, 1041, 1042, 1043, 1044, 1257, 1264, 1469, 1828, 1846, 1890], "sqrt": [46, 70, 376, 545, 669, 670, 756, 957, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1155, 1208, 1290, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1371, 1373, 1374, 1376, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1406, 1408, 1436, 1438, 1460, 1518, 1570, 1613, 1661, 1662, 1663, 1664, 1667, 1673, 1674, 1710, 1737, 1770, 1801, 1802, 1858, 1860, 1875, 1880, 1881, 1882, 1902, 1916, 1917, 1923], "cumulativedistributiontransform": 46, "copula": 46, "base_dist": 46, "independenttransform": 46, "base_transform": 46, "log_abs_det_jacobian": 46, "lowercholeskytransform": 46, "positivedefinitetransform": 46, "powertransform": 46, "expon": [46, 267, 268, 279, 466, 467, 1105, 1112, 1212, 1242, 1329, 1409, 1556, 1703, 1713, 1858, 1860, 1919, 1922], "reshapetransform": 46, "in_shap": 46, "out_shap": 46, "softplustransform": 46, "tanhtransform": 46, "softmaxtransform": 46, "biject": 46, "hmc": 46, "stacktransform": 46, "stick": 46, "primarili": [46, 69, 811, 812, 813, 819, 1321, 1872, 1907], "_call": 46, "_invers": 46, "codomain": [46, 1882], "iff": [46, 1427], "weaker": [46, 1885], "pseudoinvers": [46, 1229, 1246, 1254], "monoton": [46, 1420, 1550, 1742], "forward_shap": 46, "inverse_shap": 46, "corr_choleski": 46, "greater_than": 46, "greater_than_eq": 46, "integer_interv": 46, "less_than": 46, "lower_choleski": 46, "lower_triangular": 46, "nonnegative_integ": 46, "one_hot": [46, 1860, 1902], "positive_integ": 46, "positive_semidefinit": 46, "positive_definit": 46, "real_vector": 46, "unit_interv": 46, "is_discret": 46, "_cat": 46, "dependent_properti": 46, "_dependentproperti": 46, "_greaterthan": 46, "_greaterthaneq": 46, "_independentconstraint": 46, "_integerinterv": 46, "_interv": 46, "half_open_interv": 46, "_halfopeninterv": 46, "_lessthan": 46, "_multinomi": 46, "_stack": [46, 1902], "constraintregistri": 46, "biject_to": 46, "transform_to": 46, "overparameter": 46, "rotat": [46, 1734, 1807], "hamiltonian": 46, "mont": 46, "carlo": 46, "potential_energi": 46, "cheap": [46, 1329], "svi": 46, "fewer": [46, 67, 689, 691, 692, 695, 943, 1209, 1210, 1276, 1286, 1288, 1289, 1291, 1294, 1316, 1319, 1375, 1502, 1704, 1788, 1801, 1802, 1806, 1824, 1844, 1845, 1868, 1883, 1898, 1923], "my_constraint": 46, "my_transform": 46, "myconstraintclass": 46, "my_factori": 46, "mytransform": 46, "param1": [46, 1893], "param2": [46, 1893], "constraint_registri": 46, "my_registri": 46, "construct_transform": 46, "myconstraint": 46, "from_dlpack": [47, 876, 1857], "ext_tensor": [47, 1113], "extern": [47, 966, 1113, 1204, 1872, 1884, 1885, 1896, 1900], "immut": [47, 1113, 1862], "__dlpack__": [47, 1113], "capsul": [47, 876, 1113], "ndarrai": [47, 456, 875, 1113, 1114, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1900, 1921, 1923], "pycapsul": [47, 1113], "to_dlpack": [47, 1113, 1857], "dltensor": [47, 1113], "t3": [47, 1113, 1913], "legaci": [47, 58, 1522, 1906, 1919], "idiomat": 47, "plane": [48, 57, 734, 735, 736, 737, 738, 739, 762, 763, 764, 765, 768, 769, 770, 778, 779, 1050, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1369, 1370, 1389, 1390, 1393, 1409, 1414, 1415, 1416, 1479, 1480, 1481, 1482, 1483, 1484, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1538, 1541, 1542, 1544, 1545, 1546, 1645, 1711, 1712, 1734], "monitor": [48, 58, 59, 965, 1690, 1857, 1885, 1891], "unhealthi": 48, "tear": 48, "decentr": 48, "elasticag": 48, "quad": [48, 1337, 1338, 1357, 1388, 1412, 1428, 1470], "group_result": 48, "is_fail": [48, 49], "exit_cod": 48, "get_worker_group": 48, "workergroup": [48, 58], "mutabl": [48, 1204, 1859, 1904, 1921], "implementor": 48, "defens": 48, "retri": [48, 50, 59, 62, 1019, 1912, 1914], "max_restart": [48, 49, 58], "runresult": 48, "workerspec": [48, 49, 58, 59], "local_world_s": [48, 49, 58], "rdzv_handler": [48, 49, 57], "monitor_interv": [48, 49], "local_addr": [48, 57], "tee": [48, 55], "blueprint": 48, "spec": [48, 49, 59, 84, 789, 790, 815, 816, 817, 820, 821, 822, 1909], "homogen": [48, 58], "rendezvoushandl": [48, 49, 57, 58], "rdzv": [48, 56, 58], "consol": [48, 51, 54, 55, 58, 1921], "get_entrypoint_nam": 48, "__qualname__": 48, "workerst": 48, "unknown": [48, 1603, 1604, 1914], "unrecover": 48, "interrupt": [48, 1874], "termin": [48, 57, 59, 70, 1666, 1874, 1912], "uncaught": [48, 50], "unhandl": 48, "recov": [48, 891, 1083, 1248, 1280, 1601, 1634, 1803, 1881, 1889, 1890, 1908], "is_run": 48, "role_rank": [48, 58], "role_world_s": [48, 58], "pid": [48, 50, 58, 59, 1460, 1889, 1906], "local_elastic_ag": 48, "localelasticag": [48, 49, 59], "start_method": [48, 49, 55, 59, 1874], "exit_barrier_timeout": 48, "log_dir": [48, 55, 1872, 1921], "inter": [48, 50, 1139, 1753, 1884, 1886, 1905, 1912], "advis": [48, 540, 613, 861, 1895], "pipe": [48, 59, 1857, 1912], "torchelastic_enable_file_tim": 48, "torchelastic_timer_fil": 48, "shared_queu": 48, "get_context": [48, 59, 1895], "nproc_per_process": 48, "foobar": [48, 50, 54, 55], "other_param": [48, 59], "usr": [48, 55, 57, 1885], "simpleelasticag": 48, "scaffold": 48, "_assign_worker_rank": 48, "group_world_s": 48, "_exit_barri": 48, "_initialize_work": 48, "worker_group": 48, "fresh": [48, 1053, 1745, 1776, 1856], "start_work": 48, "_stop_work": 48, "optimist": 48, "deleg": 48, "_monitor_work": 48, "_rendezv": 48, "_restart_work": 48, "_shutdown": 48, "death_sig": 48, "sigterm": 48, "_start_work": 48, "gracefulli": [48, 58, 67, 1219, 1888], "meaning": [48, 50, 51, 1019, 1885], "meaningless": 48, "intention": [48, 1059, 1846, 1891, 1912], "ship": [49, 1119, 1884, 1912], "programmat": [49, 70, 1893], "my_launch": 49, "argv": [49, 60], "trainer_entrypoint_fn": 49, "fn_arg": 49, "run_result": 49, "myrendezvoushandl": 49, "elastic_ag": 49, "metrichandl": [49, 54], "mymetrichandl": 49, "metric_data": [49, 54], "metricdata": 49, "sink": [49, 54, 1872], "eventhandl": 49, "cloudwatch": 49, "nulleventhandl": 49, "myeventhandl": 49, "start_process": [50, 55, 1874], "torchelastic_error_fil": 50, "error_handl": 50, "sugar": [50, 1861], "get_error_handl": 50, "childfailederror": 50, "get_first_failur": 50, "dump_error_fil": 50, "error_fil": [50, 55], "exitcod": [50, 58], "nanni": 50, "diagnost": [50, 71, 76, 77, 78, 79, 80, 81, 82, 83, 1655, 1857, 1859], "torchelastic_ag": 50, "trainer_0": 50, "trainer_1": 50, "json": [50, 55, 59, 1892, 1906], "trainer_n": 50, "errorhandl": 50, "record_except": 50, "processfailur": 50, "test_ev": 51, "eventsourc": 51, "get_logging_handl": 51, "millisecond": [51, 54, 965, 1872], "eventmetadatavalu": 51, "telemetri": 54, "timeseri": 54, "metric_group": 54, "metric_nam": 54, "sensibl": 54, "my_modul": [54, 62, 70, 1859, 1904], "nullmetricshandl": 54, "consolemetricshandl": 54, "my_method": 54, "put_metr": 54, "calculate_lat": 54, "succinctli": 54, "baz": [54, 70, 850, 1904, 1923], "leaf_modul": 54, "classnam": [54, 1862], "threw": 54, "my_app": 54, "consolemetrichandl": 54, "stdout": [54, 55, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1900], "stdoutmetrichandl": 54, "1574213883": 54, "4182858": 54, "my_metr": 54, "1574213940": 54, "5237644": 54, "nullmetrichandl": 54, "class_nam": [54, 70], "def_nam": 54, "metric_valu": 54, "metric_group_nam": 54, "popen": 55, "stderr": [55, 1856, 1871], "err": 55, "echo": 55, "hello": [55, 67, 1861, 1900, 1904], "pcontext": 55, "multiprocesscontext": 55, "subprocesscontext": 55, "keyset": 55, "bitmask": 55, "mask": [55, 398, 399, 400, 401, 402, 540, 731, 904, 905, 1282, 1333, 1344, 1366, 1427, 1464, 1465, 1466, 1467, 1468, 1513, 1570, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1677, 1857, 1860, 1875, 1876, 1916], "bar0": 55, "bar1": 55, "file1": 55, "file2": 55, "caution": 55, "short": [55, 70, 730, 759, 1062, 1186, 1344, 1391, 1392, 1504, 1657, 1755, 1803, 1861, 1875, 1882, 1883, 1893, 1912, 1918, 1919, 1922], "ing": 55, "cmd": [55, 58], "forkserv": [55, 1601, 1874, 1895], "tee_stdout": 55, "tee_stderr": 55, "processcontext": [55, 1874], "superset": [55, 58], "runprocsresult": 55, "num_nod": [56, 58], "trainers_per_nod": 56, "num_allowed_failur": 56, "job_id": [56, 57, 58], "endpoint": [56, 57, 58], "host_node_addr": [56, 58], "min_siz": [56, 58], "num_allowed_failures_or_membership_chang": 56, "node1": [56, 58], "29400": [56, 58], "sidecar": [56, 57], "agre": [57, 1247, 1914], "resum": [57, 1682, 1688, 1690, 1912, 1914, 1921], "retryabl": 57, "lose": [57, 60, 62, 191, 208, 1876], "train_loop": [57, 858], "arriv": [57, 58, 1912, 1914], "dynamicrendezvoushandl": 57, "rendezvousbackend": 57, "c10drendezvousbackend": 57, "etcdrendezvousbackend": 57, "supersed": 57, "etcdrendezvoushandl": 57, "my_run_id": 57, "from_backend": 57, "run_id": [57, 58], "min_nod": 57, "max_nod": 57, "rendezvousparamet": 57, "admit": [57, 58, 1885], "get_as_bool": 57, "get_as_int": 57, "rendezvoushandlerregistri": 57, "create_handl": 57, "creator": [57, 1882, 1912, 1914], "get_run_id": 57, "is_clos": 57, "set_clos": 57, "next_rendezv": 57, "rendezvousclosederror": 57, "rendezvousconnectionerror": 57, "rendezvousstateerror": 57, "rendezvoustimeouterror": 57, "num_nodes_wait": 57, "shutdown": [57, 1912, 1913], "rendezvouserror": 57, "dynamic_rendezv": 57, "join_timeout": 57, "600": 57, "last_call_timeout": 57, "close_timeout": 57, "rendezvoustimeout": 57, "get_stat": [57, 88], "fenc": 57, "set_stat": [57, 88], "condition": [57, 1752], "last_cal": 57, "heartbeat": 57, "keep_al": 57, "c10d_rendezvous_backend": 57, "create_backend": 57, "store_typ": 57, "tcp": [57, 58, 1912], "read_timeout": 57, "60": [57, 59, 1375, 1692, 1818, 1823, 1872, 1912], "is_host": 57, "cname": 57, "fqdn": [57, 58], "etcd_rendezvous_backend": 57, "ssl_cert": 57, "ssl": 57, "certif": 57, "ssl_cert_kei": 57, "ca_cert": 57, "rool": 57, "key_prefix": 57, "ttl": 57, "hour": 57, "etcd_rendezv": 57, "rdzv_impl": 57, "etcdrendezv": 57, "etcd_address": 57, "min_work": 57, "max_work": 57, "noqa": 57, "w605": 57, "2379": [57, 1286], "etcd_prefix": 57, "etcdstor": 57, "etcd_stor": 57, "etcd_client": 57, "etcd_store_prefix": 57, "piggyback": 57, "num": [57, 741, 742, 756, 1311, 1373, 1376, 1391, 1427, 1436, 1464], "lookuperror": 57, "override_timeout": 57, "etcdserv": 57, "cumbersom": [57, 1862], "etcd_serv": 57, "data_dir": 57, "v3": [57, 58], "substitut": [57, 70, 1201, 1882, 1919], "torchelastic_etcd_binary_path": 57, "get_client": 57, "etcd_binary_path": 57, "migrat": [58, 63, 1290, 1910], "train_script": 58, "aforment": 58, "suffic": [58, 70], "compliant": [58, 60], "num_train": 58, "wors": [58, 1842], "port_k": 58, "etcd": 58, "v2": [58, 1257, 1695, 1856], "revis": 58, "localworkergroup": 58, "rdzv_id": 58, "rdzv_backend": [58, 60], "rdzv_endpoint": [58, 60], "max_nnod": 58, "torchelastic_restart_count": 58, "torchelastic_max_restart": 58, "python_exec": 58, "gang": 58, "departur": 58, "surviv": 58, "kill": [58, 59, 1874, 1889], "load_checkpoint": [58, 60], "checkpoint_path": [58, 60], "dataset": [58, 60, 794, 1329, 1338, 1387, 1857, 1889, 1892, 1899, 1903, 1907, 1908, 1921], "train_step": 58, "should_checkpoint": 58, "save_checkpoint": [58, 60], "acquir": [59, 70, 1893, 1914, 1916], "deadlin": 59, "message_queu": 59, "localtimerserv": 59, "max_interv": 59, "trainer_func": 59, "localtimercli": 59, "expiri": 59, "timer_cli": 59, "countdown": 59, "timefram": [59, 1912], "elig": [59, 1914], "reap": 59, "timerserv": 59, "mp_queue": 59, "daemon": [59, 1874], "filetimerserv": 59, "file_path": 59, "log_ev": [59, 1872], "filetimercli": 59, "fifo": 59, "watchdog": 59, "filetimerrequest": 59, "sigkil": 59, "named_pip": 59, "mkfifo": 59, "timercli": 59, "timerrequest": 59, "scope_id": 59, "expiration_tim": 59, "acquisit": 59, "request_queu": 59, "entiti": [59, 70], "clear_tim": 59, "get_expired_tim": 59, "register_tim": 59, "timer_request": 59, "use_env": 60, "expositori": 60, "worst": [60, 1887], "total_num_epoch": 60, "sharding_strategi": 62, "cpu_offload": 62, "auto_wrap_polici": 62, "backward_prefetch": 62, "backwardprefetch": [62, 1857], "backward_pr": [62, 1189, 1421], "mixed_precis": [62, 1601], "ignored_modul": 62, "param_init_fn": 62, "sync_module_st": 62, "forward_prefetch": 62, "limit_all_gath": 62, "use_orig_param": 62, "ignored_st": 62, "deepspe": 62, "shorten": 62, "sharded_modul": 62, "0001": [62, 70, 1043, 1233, 1409, 1538, 1660, 1690, 1860, 1903], "stale": 62, "dev_id": 62, "no_sync": [62, 1601], "offload": 62, "ping": 62, "77724": 62, "summon_full_param": 62, "shardingstrategi": [62, 1857], "shard_grad_op": 62, "unshard": 62, "full_shard": 62, "with_grad": 62, "reacquir": 62, "hybrid_shard": 62, "cpuoffload": [62, 1857], "_fsdppolici": 62, "modulewrappolici": 62, "nonwrapped_numel": 62, "subtre": 62, "size_based_auto_wrap_polici": 62, "exce": [62, 1266, 1885], "100m": 62, "numel": [62, 433, 442, 947, 961, 1093, 1174, 1860, 1875, 1882, 1902, 1916], "custom_auto_wrap_polici": 62, "min_num_param": 62, "1e8": 62, "my_auto_wrap_polici": 62, "functool": [62, 65, 837, 1887, 1923], "1e5": 62, "mixedprecis": [62, 1857], "is_meta": [62, 1902], "reset_paramet": 62, "torchdistx": 62, "deferred_init": 62, "materialize_modul": 62, "my_init_fn": 62, "fsdp_model": 62, "fullstatedictconfig": 62, "flight": 62, "named_paramet": [62, 64, 66, 1118, 1189, 1193, 1421, 1893, 1898], "flatparamet": 62, "ignored_paramet": 62, "norm_typ": [62, 741, 742, 1364, 1365, 1389, 1390, 1511, 1512, 1541, 1542, 1605, 1860], "infin": [62, 959, 1179, 1181, 1183, 1184, 1315, 1337, 1414, 1415, 1416, 1544, 1545, 1546, 1605, 1665, 1775, 1786, 1916, 1917], "no_shard": 62, "flatten_sharded_optim_state_dict": 62, "sharded_optim_state_dict": 62, "shard_full_optim_state_dict": 62, "unflatten": [62, 1860, 1875, 1876, 1902, 1920], "fsdp_modul": 62, "root_onli": 62, "full_optim_state_dict": 62, "optim_input": 62, "rank0_onli": 62, "convent": [62, 70, 334, 938, 1062, 1080, 1082, 1106, 1128, 1339, 1340, 1341, 1384, 1385, 1386, 1460, 1735, 1738, 1836, 1856, 1871, 1877, 1882, 1890, 1893, 1898], "load_optim_state_dict_pre_hook": 62, "optim_state_dict": 62, "namedoptim": 62, "optim_state_dict_to_load": 62, "named_buff": [62, 1189, 1421, 1893, 1898], "state_dict_typ": 62, "oom": [62, 1889], "unflattend": 62, "statedicttyp": 62, "fulloptimstatedictconfig": 62, "set_state_dict_typ": 62, "full_state_dict": 62, "save_a_checkpoint": 62, "load_a_checkpoint": 62, "optim_state_dict_post_hook": 62, "is_named_optim": 62, "load_directli": 62, "original_osd": 62, "keyedoptim": 62, "torchrec": [62, 1857], "gossipgrad": [62, 1601], "latter": [62, 683, 787, 1189, 1391, 1421, 1428, 1888, 1893, 1895, 1897], "rekey_optim_state_dict": 62, "optim_state_key_typ": 62, "loadabl": [62, 1856], "wrapped_model": 62, "wrapped_optim": 62, "full_osd": 62, "nonwrapped_model": 62, "nonwrapped_optim": 62, "rekeyed_osd": 62, "optimstatekeytyp": 62, "param_id": 62, "osd": 62, "param_nam": 62, "sharded_osd": 62, "scatter_full_optim_state_dict": 62, "new_model": 62, "new_optim": 62, "remap": [62, 88, 1193, 1196, 1260, 1281, 1856, 1871, 1911], "state_dict_config": 62, "optim_state_dict_config": 62, "descend": [62, 70, 136, 538, 872, 1189, 1252, 1253, 1421, 1780, 1807, 1860], "transpar": [62, 1886, 1905, 1912, 1914], "sharded_state_dict": 62, "shardedstatedictconfig": 62, "offload_to_cpu": 62, "optimstatedictconfig": 62, "param_state_dict": 62, "statedictconfig": 62, "statedictset": 62, "writeback": 62, "summon": 62, "discard": [62, 1186, 1246, 1611, 1856, 1861, 1872], "redundantli": [62, 1881], "materi": [62, 896, 954, 1603, 1604, 1677, 1730, 1731, 1887], "throughput": [62, 1859, 1884], "contend": 62, "backward_post": 62, "reorder": [62, 1082, 1244], "volum": [62, 1151], "_hybrid_shard_zero2": 62, "param_dtyp": 62, "reduce_dtyp": 62, "buffer_dtyp": 62, "keep_low_precision_grad": 62, "cast_forward_input": 62, "cast_root_forward_input": 62, "permit": [62, 1916], "thereaft": 62, "upcast": 62, "batchnorm": [62, 696, 697, 1127, 1189, 1198, 1421, 1460, 1601, 1870, 1882, 1893, 1903, 1905, 1907, 1909, 1910], "offload_param": 62, "love": 63, "hear": 63, "arbitrarili": [63, 68, 510, 1192, 1485, 1862, 1882, 1888], "stock": [63, 68], "ensembl": [63, 66, 68, 1128], "maml": [63, 68], "vjp": [63, 66, 67, 885, 886, 1124, 1130, 1849, 1887, 1888], "whirlwind": 63, "tour": 63, "running_mean": [65, 1127, 1189, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1460, 1490, 1530, 1858, 1860, 1893, 1898], "running_var": [65, 1127, 1189, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1460, 1490, 1530, 1858, 1860, 1898], "groupnorm": [65, 1521], "anywher": [65, 1881], "batchnorm2d": [65, 709, 712, 714, 719, 810, 1198, 1358, 1395, 1490, 1870, 1882, 1893, 1907, 1909], "track_running_stat": [65, 747, 748, 749, 1127, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1898], "resnet": [65, 1856, 1859, 1861, 1893, 1904, 1921, 1925], "regnet": 65, "norm_lay": 65, "num_group": [65, 745, 1376, 1521, 1860], "fragil": 65, "replace_all_batch_norm_modules_": 65, "upstream": [66, 1899], "kept": [66, 70, 693, 775, 781, 1339, 1340, 1341, 1384, 1385, 1386, 1460, 1531, 1589, 1862, 1874, 1910], "jvp": [66, 67, 886, 890, 891, 892, 896, 1126, 1887], "jacfwd": [66, 67, 899, 1122, 1888], "make_functional_with_buff": 66, "hurri": 66, "emul": [66, 795, 1863, 1887], "fmodel": 66, "compute_loss": [66, 68, 1118, 1120], "predict": [66, 1329, 1338, 1375, 1503, 1903, 1921], "argnum": [66, 1120, 1121, 1122, 1123, 1124], "stack_module_st": 66, "num_model": [66, 1128], "in_featur": [66, 716, 724, 725, 728, 729, 752, 760, 1128, 1189, 1329, 1406, 1408, 1421, 1592, 1608, 1609, 1641, 1642, 1645, 1893], "out_featur": [66, 716, 724, 725, 728, 729, 752, 760, 1128, 1189, 1342, 1406, 1408, 1421, 1592, 1608, 1609, 1641, 1642, 1645, 1893], "base_model": 66, "deepcopi": [66, 1907, 1926], "clearer": [66, 1245, 1677, 1887, 1901], "call_single_model": 66, "stori": [66, 1890], "grad_x": [67, 1888], "has_aux": [67, 1120, 1121, 1123, 1124, 1125, 1129], "mental": [67, 1119], "absenc": 67, "unbind": [67, 1130, 1849, 1857, 1860, 1875, 1902, 1920], "lst": 67, "in_dim": [67, 68, 888, 1120, 1130, 1849, 1888], "batchedtensor": 67, "batched_tensor_input": 67, "new_": [67, 1885, 1922], "new_zero": [67, 1860, 1902], "new_empti": [67, 1860, 1902], "diag_emb": [67, 1052, 1224, 1225, 1252, 1807, 1860, 1902], "vec": [67, 107, 108, 422, 686, 1313, 1644, 1858, 1860, 1916], "copy_": [67, 221, 1119, 1473, 1859, 1860, 1875, 1885, 1918], "arithmet": [67, 922, 925, 939, 1244, 1732, 1863, 1872, 1875, 1876, 1896, 1907, 1919], "extra_arg": 67, "theoret": 67, "custom_dot": 67, "lax": 67, "cond": [67, 1896], "while_loop": 67, "is_nonzero": [67, 1860, 1902, 1916], "rag": 67, "unclear": [67, 613], "add_nois": 67, "prng": 67, "cos_x": [68, 1120], "neg_sin_x": [68, 1120], "hide": [68, 1130, 1849, 1888], "feature_s": [68, 1120, 1130, 1849], "feature_vec": [68, 1120, 1130, 1849], "mseloss": [68, 1120, 1382, 1452, 1551, 1885, 1886], "grad_weight_per_exampl": [68, 1120], "cotang": [68, 1129], "vjp_fn": [68, 1129], "out_tang": 68, "hessian0": 68, "hessian1": 68, "hess": [68, 1122], "rpc_async": [69, 1862, 1902, 1912, 1914], "add_done_callback": 69, "fut": [69, 1192, 1601, 1884, 1912], "set_result": [69, 1601, 1912], "haven": [69, 1893], "set_except": 69, "baseexcept": 69, "slow_set_futur": 69, "sleep": 69, "cb1": 69, "cb2": 69, "dedic": [69, 1885], "didn": [69, 1887, 1899, 1903], "cb_fut": 69, "chain_cb_fut": 69, "cb": [69, 1912], "collect_al": [69, 1857], "fut0": 69, "fut1": [69, 1912], "fut_list": 69, "wait_al": [69, 1857], "toolkit": 70, "clamp": [70, 186, 187, 795, 798, 945, 1195, 1337, 1375, 1520, 1531, 1589, 1858, 1860, 1870, 1875, 1900, 1902, 1907, 1909, 1910, 1917, 1923], "get_attr": 70, "theses": 70, "callsit": 70, "constitut": 70, "tracer_class": 70, "treatment": 70, "topk": [70, 1858, 1860, 1875, 1902], "linear_weight": 70, "add_1": [70, 1119], "linear_1": 70, "relu_1": 70, "topk_1": 70, "pose": [70, 1913], "explor": [70, 1856, 1882, 1893, 1904], "edit": [70, 1904, 1920], "lint": 70, "new_nod": 70, "tediou": 70, "unwieldi": 70, "machineri": [70, 1887], "imagin": [70, 1912], "requisit": 70, "relu_decomposit": 70, "decomposition_rul": 70, "constitu": [70, 1877], "new_graph": 70, "graphappendingtrac": 70, "proxy_arg": 70, "output_proxi": 70, "node_copi": 70, "ari": [70, 1900], "unari": [70, 1123, 1124, 1464, 1466, 1468, 1863, 1875], "organiz": 70, "shapeprop": 70, "named_modul": [70, 1189, 1421, 1893], "args_it": 70, "load_arg": 70, "map_arg": 70, "fetch_attr": 70, "target_atom": 70, "attr_itr": 70, "nonexist": [70, 1861, 1862], "self_obj": 70, "encompass": 70, "prove": [70, 1874], "disprov": 70, "led": 70, "auxiliari": [70, 1120, 1121, 1123, 1124, 1125, 1129, 1856, 1892], "unord": [70, 1422, 1431], "nondetermin": [70, 905, 1897], "dedupl": 70, "torchvis": [70, 1856, 1857, 1859, 1861, 1900, 1904, 1907, 1921, 1925], "transformed_resnet18": 70, "input_imag": 70, "224": [70, 857, 858, 1859, 1861, 1900], "margin": [70, 1355, 1381, 1413, 1424, 1426, 1469, 1470, 1501, 1528, 1543, 1552, 1586, 1587, 1860, 1921], "commut": 70, "toolbox": 70, "tradit": 70, "luckili": 70, "my_pass": 70, "my_module_transform": 70, "input_valu": 70, "prompt": [70, 1856, 1899], "set_trac": [70, 1194, 1200, 1206, 1859], "examin": [70, 1893, 1900, 1906], "undergon": 70, "subclassm": 70, "untrac": 70, "pre_trac": 70, "post_trac": 70, "sake": 70, "tabular": [70, 676, 1868], "transform_graph": 70, "session": 70, "luck": 70, "input_nod": 70, "stepwis": 70, "onlin": [70, 1662], "realpython": 70, "pycharm": 70, "vscode": 70, "graphic": [70, 1899], "parlanc": 70, "func_to_trac": 70, "dyn": 70, "155": 70, "__bool__": [70, 1860, 1862], "to_bool": 70, "85": [70, 1424, 1688], "traceerror": [70, 1907], "architectur": [70, 989, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1357, 1464, 1503, 1751, 1885, 1896, 1907], "hyper": [70, 1452, 1861, 1921], "do_activ": 70, "512": [70, 1464, 1465, 1466, 1467, 1468, 1885], "without_activ": 70, "with_activ": 70, "traced_without_activ": 70, "traced_with_activ": 70, "concrete_arg": 70, "truli": [70, 1900], "__torch_function__": [70, 1927], "161": 70, "len_1": 70, "sqrt_1": 70, "mycustomtrac": 70, "traced_graph": 70, "myspecialsubmodul": 70, "submod": 70, "neg_1": 70, "is_leaf_modul": [70, 1926], "sparse_coo_tensor": [70, 540, 577, 1788, 1860, 1864, 1902, 1916], "ones_lik": [70, 1123, 1124, 1129, 1860, 1877, 1885, 1888, 1893, 1902], "zeros_lik": [70, 894, 896, 1860, 1864, 1877, 1885, 1902, 1916], "viabl": [70, 1885], "torch_randn": 70, "gotcha": 70, "bake": [70, 1193, 1198, 1663, 1664, 1903], "dropoutrepro": 70, "assert_clos": [70, 1079, 1081, 1082, 1087, 1088, 1093, 1094, 1095, 1097, 1099, 1857, 1859, 1923], "greatest": [70, 1132, 1315, 1900, 1923], "6207983493804932": 70, "dropoutrepro2": 70, "pytre": [70, 1888], "overspeci": 70, "ph": 70, "shouldn": [70, 963, 1904, 1916, 1920], "fn_or_nam": 70, "callfunct": 70, "fn_to_be_trac": 70, "reassign": [70, 1885], "regener": 70, "unset": [70, 1896], "add_submodul": 70, "subpath": 70, "get_submodul": [70, 1189, 1421], "delete_all_unused_submodul": 70, "delete_submodul": 70, "print_read": 70, "print_output": 70, "date": [70, 1904], "pythoncod": 70, "fxmodul": 70, "pathlik": [70, 1260, 1738, 1904], "owning_modul": 70, "tracer_cl": 70, "tracer_extra": 70, "the_funct": 70, "type_expr": 70, "create_nod": 70, "method_nam": 70, "0th": [70, 1130, 1849], "inserting_befor": 70, "influenc": [70, 1654, 1900, 1916], "eliminate_dead_cod": 70, "topolog": [70, 1900], "attr_1": 70, "is_impur": 70, "erase_nod": 70, "to_eras": 70, "qualified_nam": 70, "graph_copi": 70, "val_map": 70, "return_output_nod": 70, "slice": [70, 603, 691, 692, 1339, 1340, 1341, 1454, 1456, 1460, 1576, 1577, 1727, 1744, 1745, 1776, 1786, 1837, 1858, 1859, 1863, 1877, 1900, 1902, 1916, 1917, 1920, 1922], "memory_format": [70, 155, 170, 172, 175, 178, 179, 180, 189, 195, 206, 209, 239, 266, 296, 324, 330, 392, 496, 497, 521, 576, 946, 1063, 1064, 1117, 1189, 1421, 1601, 1653, 1716, 1718, 1720, 1855, 1857, 1858, 1860, 1923], "layout": [70, 150, 191, 208, 341, 342, 433, 443, 444, 445, 446, 447, 456, 540, 577, 578, 579, 580, 581, 583, 584, 613, 685, 861, 889, 891, 918, 927, 978, 1063, 1064, 1065, 1075, 1080, 1098, 1116, 1117, 1146, 1147, 1208, 1259, 1275, 1283, 1293, 1321, 1537, 1652, 1653, 1677, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1827, 1832, 1834, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1864, 1877, 1885, 1902, 1904, 1916, 1921, 1922, 1923], "companion": 70, "__exit__": [70, 1862, 1863, 1904], "arg_transform": 70, "value_remap": 70, "_node_list": 70, "doubli": 70, "on_generate_cod": 70, "make_transform": 70, "transformcodefunc": 70, "insert_pdb": 70, "current_tran": 70, "default_valu": 70, "_not_": 70, "tabul": 70, "process_input": 70, "process_output": 70, "python_cod": 70, "root_modul": [70, 789, 1909], "set_codegen": 70, "return_typ": [70, 693, 1041, 1042, 1151, 1210, 1248, 1286, 1289, 1291, 1294, 1317, 1780, 1825, 1830], "all_input_nod": 70, "format_nod": 70, "placeholder_nam": 70, "maybe_return_typenam": 70, "autogener": [70, 1888], "impur": 70, "normalized_argu": 70, "arg_typ": 70, "kwarg_typ": 70, "normalize_to_only_use_kwarg": 70, "vararg": 70, "argskwargspair": 70, "bx": 70, "ax": [70, 1220, 1234, 1238, 1249, 1250, 1251, 1279, 1290, 1429, 1439, 1830, 1900], "prev": [70, 1675], "replace_with": 70, "delete_user_cb": 70, "propagate_meta": 70, "replace_input_with": 70, "old_input": 70, "new_input": 70, "create_proxi": 70, "record_stack_trac": 70, "update_arg": 70, "update_kwarg": 70, "autowrap_modul": 70, "autowrap_funct": 70, "create_arg": 70, "create_args_for_root": 70, "root_fn": 70, "is_modul": 70, "proxy_factory_fn": 70, "attr": [70, 150, 889, 1290, 1735], "attr_val": 70, "parameter_proxy_cach": 70, "module_qualified_nam": [70, 1926], "path_of_modul": 70, "some_hyperparamet": 70, "indexed_item": 70, "proxied_valu": 70, "garbage_collect_valu": 70, "run_nod": 70, "negsigmswapinterpret": 70, "call_self": 70, "args_tail": 70, "boxed_run": 70, "args_list": 70, "promptli": [70, 1261], "fetch_args_kwargs_from_env": 70, "map_nodes_to_valu": 70, "initial_env": 70, "enable_io_process": 70, "negsigmswapxform": 70, "w1": 70, "w2": 70, "m1": [70, 1847, 1848], "m2": [70, 1641, 1847, 1848, 1907], "despit": [70, 1204, 1205, 1890], "stack_1": 70, "stack_2": 70, "sum_2": 70, "max_1": 70, "max_2": 70, "add_2": 70, "onnx": [82, 85, 86, 87, 1635, 1636, 1654, 1655, 1656, 1657, 1658, 1659, 1857, 1876, 1907], "dynamo_export": [82, 1655, 1656, 1900], "opset_vers": [87, 1654, 1900, 1902], "g_cpu": 88, "g_cuda": 88, "bytetensor": [88, 994, 995, 1033, 1034, 1141, 1300, 1307, 1756, 1911, 1919, 1922], "2147483647": 88, "0x8000_0000_0000_0000": [88, 1281, 1911], "0xffff_ffff_ffff_ffff": [88, 1281, 1911], "random_devic": 88, "1516516984916": 88, "new_stat": [88, 1033, 1034, 1307, 1756, 1911], "void": [88, 964, 1006, 1885, 1892], "g_cpu_oth": 88, "abs_": [92, 1860, 1875, 1922], "acosh": [96, 122, 863, 1858, 1860, 1875, 1902], "batch1": [99, 100, 151, 152, 682, 917, 1860], "batch2": [99, 100, 151, 152, 169, 682, 917, 1860], "tensor1": [101, 102, 103, 104, 683, 684, 1283, 1732, 1860], "tensor2": [101, 102, 103, 104, 313, 403, 683, 684, 1283, 1732, 1860], "mat1": [105, 106, 550, 685, 1153, 1209, 1293, 1781, 1784, 1785, 1799, 1858, 1860], "mat2": [105, 106, 412, 550, 685, 929, 1153, 1209, 1293, 1781, 1784, 1785, 1799, 1858, 1860], "mat": [107, 108, 536, 686, 1313, 1713, 1778, 1781, 1799, 1860, 1921], "vec1": [109, 110, 687, 1860], "vec2": [109, 110, 287, 459, 687, 1135, 1695, 1860], "keepdim": [112, 114, 115, 116, 118, 134, 135, 353, 391, 406, 408, 409, 410, 413, 427, 428, 429, 430, 451, 468, 477, 551, 561, 611, 689, 691, 692, 693, 695, 870, 871, 1210, 1241, 1245, 1258, 1276, 1286, 1288, 1289, 1291, 1294, 1316, 1317, 1318, 1319, 1430, 1559, 1648, 1704, 1707, 1801, 1802, 1806, 1844, 1845, 1858, 1860, 1875, 1917], "rtol": [113, 343, 690, 904, 905, 1178, 1243, 1246, 1659, 1859, 1860, 1923], "atol": [113, 343, 690, 904, 905, 1178, 1243, 1246, 1255, 1659, 1859, 1860, 1887, 1923], "08": [113, 343, 690, 927, 1178, 1235, 1356, 1435, 1563, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1690, 1762, 1860], "equal_nan": [113, 343, 690, 1178, 1860, 1923], "arcco": [121, 1860, 1902, 1923], "acosh_": [123, 1860, 1875], "arccosh": [123, 1860, 1902], "arcsin": [125, 877, 1860, 1902, 1916], "arcsinh": [127, 1860, 1902], "atan2_": [130, 1860, 1875], "arctan2": [130, 1860, 1902], "arctan": [131, 1860, 1902], "arctanh": [133, 1860, 1902], "cl": [139, 1887, 1907, 1912, 1927], "asinh": [143, 865, 1858, 1860, 1875, 1902, 1916], "atan": [147, 627, 628, 866, 1858, 1860, 1875, 1902, 1916], "atanh": [149, 868, 1858, 1860, 1875, 1902, 1916], "wrt": [150, 904, 905], "60521": [150, 889], "issuecom": [150, 889], "867061780": [150, 889], "texttt": [153, 154, 690, 1178, 1329, 1923], "bernoulli": [154, 756, 1333, 1359, 1360, 1361, 1362, 1366, 1373, 1391, 1505, 1506, 1507, 1508, 1513, 1857, 1860, 1875, 1902, 1924], "preserve_format": [155, 170, 172, 175, 178, 179, 180, 189, 206, 209, 239, 266, 296, 324, 392, 521, 576, 946, 1064, 1117, 1653, 1716, 1718, 1720, 1855, 1919], "minlength": [156, 920, 1860], "bitwise_and": [158, 1858, 1860, 1902], "bitwise_left_shift": [160, 1860, 1902], "bitwise_not": [162, 1858, 1860, 1875, 1902], "bitwise_or": [164, 1858, 1860, 1902], "bitwise_right_shift": [166, 1860, 1902], "bitwise_xor": [168, 1858, 1860, 1902], "uint8": [172, 241, 613, 689, 695, 1114, 1705, 1708, 1709, 1732, 1907, 1918, 1919, 1921, 1922, 1928], "cauchi": [173, 1857, 1882, 1890, 1902, 1924], "dfrac": [173, 376, 604, 1356, 1502, 1609, 1642, 1645], "complex32": [179, 1349, 1350, 1351, 1495, 1496, 1497, 1657, 1922, 1923], "int8": [180, 446, 725, 921, 922, 923, 924, 925, 926, 1114, 1270, 1271, 1272, 1273, 1907, 1910, 1918, 1919, 1922, 1928], "input2": [183, 457, 458, 514, 756, 942, 1342, 1355, 1356, 1413, 1430, 1491, 1501, 1502, 1543, 1860, 1881, 1900], "clamp_": [188, 1860, 1875], "uncoalesc": [190, 327, 1792], "coo": [190, 322, 327, 341, 610, 1153, 1781, 1784, 1789, 1790, 1791, 1792, 1793, 1794, 1857, 1869, 1919, 1923], "inttensor": [191, 208, 1163, 1278, 1279, 1364, 1919, 1922], "csr": [191, 208, 342, 579, 584, 1365, 1781, 1784, 1785, 1791, 1794, 1869, 1923], "sparse_csr": [191, 208, 579, 584, 1784, 1785, 1787, 1791, 1794, 1916], "nnz": [191, 540, 579, 580, 581, 583, 584, 904, 1321, 1782, 1784, 1785, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1916], "mkl": [191, 208, 1857, 1884, 1899, 1902, 1916], "routin": [191, 208, 872, 941, 1261, 1780, 1807, 1916], "downcast": [191, 208], "to_sparse_csr": [191, 208, 580, 581, 1784, 1785, 1860, 1902, 1916], "conj_phys": [194, 954, 1858, 1860, 1902, 1916], "contiguous_format": [195, 330, 496, 497, 1063, 1601, 1919], "non_block": [196, 209, 576, 599, 1189, 1421, 1634, 1858, 1860, 1885, 1918], "copysign": [198, 1860, 1902], "fweight": [205, 961, 1860], "aweight": [205, 961, 1860], "sparse_dim": [218, 541, 542, 1781, 1784, 1788, 1792, 1860, 1902, 1916], "resize_": [221, 497, 1119, 1210, 1859, 1860, 1861, 1875, 1909, 1918], "resize_as_": [221, 1860, 1875, 1916], "set_": [221, 496, 1860], "transpose_": [221, 1860, 1916], "zero_": [221, 1234, 1511, 1860, 1875, 1876, 1893, 1916], "dim1": [225, 227, 228, 565, 588, 589, 1050, 1052, 1053, 1223, 1810, 1827, 1860], "dim2": [225, 227, 228, 1050, 1052, 1053, 1223, 1860], "digamma": [231, 1858, 1860, 1875, 1902, 1917], "rounding_mod": [234, 235, 236, 237, 1057, 1058, 1107, 1110, 1726, 1835, 1860], "split_size_or_sect": [240, 301, 615, 1795], "eq": [243, 1858, 1860, 1875, 1902], "erf": [246, 635, 636, 1858, 1860, 1875, 1902, 1916, 1917], "erfc": [248, 637, 638, 1858, 1860, 1875, 1902, 1917], "front": [253, 1261, 1424, 1876, 1888], "lambd": [257, 297, 1377, 1458, 1523, 1579, 1660, 1860], "fill_valu": [259, 444, 1116, 1117, 1344, 1858, 1860, 1885], "tall": [259, 1247, 1252, 1887], "start_dim": [262, 1101, 1367, 1860], "end_dim": [262, 1101, 1367, 1860], "float_pow": [268, 1860, 1902], "floor_divid": [272, 1057, 1860, 1902, 1916], "divisor": [275, 276, 486, 487, 764, 765, 1057, 1107, 1110, 1132, 1335, 1336, 1368, 1472, 1488, 1489, 1726, 1835], "fmod": [276, 1726, 1858, 1860, 1902], "mantissa": [279, 479, 1112, 1212, 1860, 1885, 1896], "gcd": [282, 1858, 1860, 1902], "ge": [284, 1144, 1282, 1378, 1379, 1524, 1525, 1858, 1860, 1875, 1902], "ordin": [288, 1789, 1790, 1791, 1793, 1794, 1919], "greater_equ": [293, 1860, 1902], "gt": [295, 1143, 1858, 1860, 1875, 1890, 1902], "hypot": [303, 1858, 1860, 1902], "i0": [305, 1208, 1770, 1860, 1902, 1917], "igamma": [307, 1858, 1860, 1902], "igammac": [309, 1858, 1860, 1902], "3100": [310, 481, 1159, 1724], "3553j": [310, 481, 1159, 1724], "5445": [310, 481, 1159, 1724], "7896j": [310, 481, 1159, 1724], "6492": [310, 481, 1159, 1724], "0633j": [310, 481, 1159, 1724], "0638": [310, 481, 1159, 1724], "8119j": [310, 481, 1159, 1724], "3553": [310, 1159], "7896": [310, 1159], "0633": [310, 1159, 1235, 1877], "8119": [310, 1159], "index_add_": [311, 894, 1160, 1161, 1860, 1897], "index_copy_": [313, 1860], "index_fill_": [315, 1860, 1875], "index_put_": [317, 1860], "include_self": [320, 513, 514, 1162, 1741, 1858, 1860], "identit": 320, "amax": [320, 514, 692, 693, 1784, 1858, 1860, 1902], "amin": [320, 514, 691, 693, 1784, 1858, 1860, 1902], "fill_": [320, 1189, 1214, 1421, 1727, 1860, 1875, 1893, 1918], "72": [320, 613, 1142], "uint8_t": [325, 1657], "retain_grad": [334, 1860, 1882, 1902], "n_fft": [350, 552, 1186, 1803, 1860], "hop_length": [350, 552, 1186, 1803, 1860], "win_length": [350, 552, 1186, 1803, 1860], "center": [350, 552, 775, 781, 1082, 1186, 1485, 1520, 1531, 1589, 1674, 1696, 1764, 1803, 1860, 1882, 1902, 1921], "onesid": [350, 552, 1186, 1803, 1858, 1860], "return_complex": [350, 552, 1186, 1803, 1860], "element_s": [352, 433, 1860, 1875, 1902, 1918], "lcm": [355, 1860, 1902], "ldexp": [357, 1112, 1860, 1902], "le": [359, 1216, 1378, 1379, 1524, 1525, 1858, 1860, 1875, 1902, 1923], "lerp": [361, 1860, 1902], "less_equ": [365, 1860, 1902], "lgamma": [367, 647, 648, 1858, 1860, 1902], "ln": [376, 1217, 1917], "logical_and": [382, 1858, 1860, 1902], "logical_not": [384, 1858, 1860, 1875, 1877, 1902], "logical_or": [386, 1858, 1860, 1902], "logical_xor": [388, 1860, 1902], "pivot": [395, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1278, 1279, 1280, 1706, 1860], "get_info": [395, 1278], "lu_data": [396, 1279, 1280, 1860], "lu_pivot": [396, 1279, 1280, 1860], "masked_fill_": [398, 1860, 1875, 1876], "booltensor": [399, 401, 731, 1282, 1464, 1852, 1919, 1922], "masked_scatter_": [400, 1860], "mvlgamma": [424, 1860, 1902], "posinf": [425, 426, 1315, 1860], "neginf": [425, 426, 1315, 1860], "nan_to_num": [426, 1860, 1902], "interpol": [429, 477, 781, 782, 783, 815, 1214, 1318, 1473, 1474, 1475, 1485, 1520, 1589, 1590, 1591, 1707, 1842, 1860, 1909], "ne": [437, 1609, 1642, 1650, 1858, 1860, 1875, 1902], "8182e": 443, "5765e": 443, "41": [443, 1065, 1247, 1592, 1641, 1706], "0545e": 443, "0949e": 443, "4842e": [443, 1065], "0000e": [443, 1065, 1105, 1266, 1275, 1315, 1641, 1762, 1764, 1765, 1770, 1771], "00": [443, 1065, 1105, 1266, 1275, 1315, 1641, 1658, 1762, 1764, 1765, 1770, 1771, 1859, 1900], "141592": [444, 1116], "1416": [444, 1046, 1116, 1821], "from_numpi": [446, 875, 876, 1821], "array_lik": [446, 875, 1789, 1790, 1791, 1792, 1793, 1794, 1821, 1877], "nextaft": [449, 1858, 1860, 1902], "fro": [451, 1220, 1241, 1245, 1258, 1619, 1628, 1648, 1860], "not_equ": [454, 1860, 1902], "resolve_conj": [456, 954, 1860, 1902], "resolve_neg": [456, 1860, 1902], "input3": [458, 1860], "transpos": [458, 589, 590, 613, 688, 737, 738, 739, 942, 1062, 1129, 1218, 1219, 1225, 1228, 1231, 1238, 1249, 1252, 1352, 1353, 1354, 1472, 1498, 1499, 1500, 1570, 1608, 1637, 1694, 1807, 1809, 1810, 1816, 1830, 1858, 1860, 1875, 1877, 1882, 1896, 1900, 1902, 1909, 1916, 1920, 1922], "polygamma": [464, 1860, 1902, 1917], "q_per_channel_axi": [471, 472, 1860, 1902], "zero_point": [472, 474, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 766, 768, 769, 770, 771, 773, 776, 777, 795, 798, 815, 816, 817, 818, 821, 848, 1076, 1077, 1708, 1709, 1710, 1711, 1712, 1860, 1907, 1908], "qtensor": [476, 1860], "uniform": [479, 604, 919, 1357, 1439, 1503, 1715, 1716, 1764, 1857, 1858, 1880, 1902, 1924], "queu": [484, 969, 1885], "life": [484, 966], "cycl": [484, 889, 966, 1682, 1688, 1882, 1906], "unexpectedli": [484, 1922], "maxnorm": [488, 489, 1727, 1860], "repeat_interleav": [490, 1842, 1860, 1902, 1909], "output_s": [491, 737, 738, 739, 762, 763, 1326, 1327, 1328, 1330, 1331, 1332, 1353, 1368, 1369, 1370, 1417, 1418, 1419, 1472, 1479, 1480, 1481, 1482, 1483, 1484, 1514, 1515, 1516, 1547, 1548, 1549, 1728, 1858, 1860, 1877], "is_leaf": [492, 1860, 1875, 1877, 1902], "saved_weight": 493, "loaded_weight": 493, "5503": 493, "4926": [493, 1893], "1158": 493, "8303": 493, "1007": 493, "9853": 493, "2316": 493, "6606": 493, "resiz": [496, 497, 520, 541, 542, 1114, 1115, 1119, 1473, 1520, 1531, 1858, 1860, 1875, 1902, 1918], "shift": [502, 922, 925, 1082, 1089, 1333, 1339, 1340, 1341, 1366, 1460, 1513, 1733, 1860, 1863], "decim": [504, 505, 1735, 1860, 1896, 1928], "scatter_": [509, 512, 1739, 1860], "scatter_add_": [510, 511, 1740, 1842, 1860], "scatter_reduce_": [510, 513, 1741, 1860], "4600": 510, "2300": 510, "scatter_reduc": [514, 1842, 1858, 1860, 1902], "sgn": [519, 1111, 1760, 1860, 1875, 1877, 1902, 1916], "int16": [521, 1114, 1271, 1918, 1919, 1922, 1928], "dense_dim": [539, 541, 542, 579, 580, 581, 583, 584, 1792, 1860, 1902, 1916], "nse": [540, 1916], "randint": [540, 920, 961, 1105, 1294, 1344, 1470, 1503, 1504, 1788, 1860, 1864, 1876, 1902, 1921, 1924], "6550": 540, "2397": 540, "1611": 540, "0779": [540, 1225, 1703, 1852], "2326": 540, "0558": 540, "4711": 540, "9678": 540, "5138": 540, "0411": 540, "9417": 540, "5158": 540, "0793": 540, "0036": [540, 1286], "2569": 540, "1055": 540, "sparse_coo": [540, 579, 1321, 1784, 1787, 1788, 1792, 1916, 1919], "split_siz": [543, 1795, 1860], "squeez": [549, 689, 691, 692, 693, 695, 1210, 1276, 1286, 1288, 1289, 1291, 1294, 1316, 1319, 1502, 1704, 1788, 1801, 1802, 1806, 1844, 1845, 1858, 1860, 1875, 1900, 1902, 1909, 1920], "pad_mod": [552, 1803, 1860], "typedstorag": [553, 1857, 1918], "untypedstorag": [553, 609, 1857, 1918], "untyped_storag": 553, "compute_uv": [563, 1252, 1253, 1807, 1860], "axis0": [564, 1809, 1860], "axis1": [564, 1809, 1860], "dim0": [565, 588, 589, 1810, 1827, 1860], "indices_or_sect": [574, 1060, 1152, 1822, 1850], "rep": 575, "5044": 576, "0005": [576, 1686, 1692], "3310": 576, "0584": [576, 1807], "cuda0": [576, 1885, 1891, 1922], "masked_grad": [577, 1860], "sparse_mask": [577, 1860, 1902], "mkldnn": [578, 1198, 1857, 1902], "sparsedim": 579, "blocksiz": [579, 580, 581, 1789, 1790, 1791, 1860, 1916], "sparse_csc": [579, 583, 1787, 1791, 1793, 1916], "sparse_bsr": [579, 581, 1790, 1791, 1916], "sparse_bsc": [579, 580, 1789, 1791, 1916], "bsr": [579, 581, 1790, 1791, 1923], "bsc": [579, 580, 1789, 1791, 1923], "csc": [579, 583, 1791, 1793, 1923], "minu": [579, 580, 581, 583, 584, 1917], "crow_indic": [579, 581, 584, 1782, 1784, 1785, 1787, 1790, 1791, 1794, 1860, 1902, 1916, 1923], "col_indic": [579, 581, 584, 1784, 1785, 1787, 1790, 1791, 1794, 1860, 1902, 1916, 1923], "sparsecsr": [579, 1827, 1916], "row_indic": [580, 583, 1789, 1793, 1860, 1902, 1916, 1923], "ccol_indic": [580, 583, 1789, 1793, 1860, 1902, 1916, 1923], "_nnz": [582, 583, 584, 1902], "012766935862600803": 585, "5415473580360413": 585, "08909505605697632": 585, "7729271650314331": 585, "unitriangular": [590, 1251, 1830, 1860], "tril": [592, 1570, 1860, 1902], "triu": [594, 1613, 1830, 1860, 1900, 1902], "trunc": [598, 673, 674, 683, 1057, 1100, 1107, 1110, 1735, 1858, 1860, 1875, 1902, 1916], "sizedim": 603, "return_invers": [605, 606, 1839, 1840, 1860], "return_count": [605, 606, 1839, 1840, 1860], "unsqueez": [608, 1082, 1209, 1249, 1364, 1440, 1613, 1824, 1858, 1860, 1887, 1902, 1909, 1916, 1920, 1921], "subspac": [613, 1252, 1427, 1696, 1807, 1808], "span": [613, 1023, 1024, 1357, 1807, 1906, 1912], "foral": 613, "proportion": [613, 781, 1473, 1589], "met": [613, 1228, 1235, 1236, 1247, 1261, 1468], "9482": [613, 1166], "0310": 613, "4999": 613, "5316": 613, "1520": 613, "7472": 613, "5617": 613, "8649": 613, "4724": [613, 1893], "0334": 613, "2976": 613, "8499": 613, "2109": 613, "9913": 613, "9607": 613, "6123": 613, "1064483442": 613, "1124191867": 613, "1069546515": 613, "1089989247": 613, "1105482831": 613, "1061112040": 613, "1057999968": 613, "1084397505": 613, "1071760287": 613, "1123489973": 613, "1097310419": 613, "1084649136": 613, "1101533110": 613, "1073668768": 613, "1082790149": 613, "1088634448": 613, "1000000000": 613, "0047": 613, "0310j": 613, "5316j": 613, "7472j": 613, "8649j": 613, "0334j": 613, "8499j": 613, "9913j": 613, "6123j": 613, "202": 613, "154": [613, 1899], "59": [613, 1832, 1834], "182": 613, "243": [613, 1186, 1807], "253": 613, "188": 613, "252": [613, 1899], "191": 613, "63": [613, 1899, 1907], "240": 613, "227": 613, "165": 613, "190": 613, "128": [613, 716, 724, 725, 752, 760, 790, 815, 816, 1342, 1356, 1383, 1408, 1430, 1469, 1470, 1502, 1570, 1876, 1877, 1907, 1909, 1910, 1912, 1919, 1922], "146": 613, "106": 613, "205": 613, "206": 613, "189": 613, "95": [613, 1684, 1687, 1688], "147": 613, "89": [613, 1714], "43": 613, "87": 613, "235": 613, "226": 613, "254": [613, 1899], "111": [613, 1658, 1900], "117": 613, "177": 613, "xlogi": [618, 1860, 1902, 1917], "aot_graph": [676, 1868], "aot_joint_graph": [676, 1868], "ddp_graph": [676, 1868], "graph_cod": [676, 1868], "toggl": [676, 1885], "supress": 676, "silenc": 676, "lowest": [676, 939, 1315, 1618, 1619, 1627, 1628, 1717, 1718, 1887, 1923], "notset": 676, "joint": [676, 1868], "ddpoptim": [676, 1868], "unregist": [676, 1868, 1872, 1900], "3348": 679, "5889": 679, "1584": 679, "2294": [679, 1288], "2004": 679, "3690": 679, "7298": [679, 1725], "hyperbol": [680, 878, 881, 959, 1461, 1775, 1820], "uniform_": [680, 881, 919, 1857, 1860, 1875, 1880, 1887, 1917, 1924], "3192": 680, "9915": 680, "9674": 680, "7151": 680, "7791": 680, "3120": [680, 956], "2979": 680, "1341": 680, "_i": [681, 682, 683, 684, 685, 917, 919, 922, 925, 929, 944, 1057, 1107, 1212, 1214, 1310, 1469, 1699, 1703, 1722, 1758, 1804, 1852, 1917], "0202": 681, "0985": 681, "3506": [681, 1278], "6056": 681, "19": [681, 742, 942, 1418, 1859, 1900, 1916], "3944": 681, "9732": 681, "3497": 681, "6245": [681, 1220], "4022": [681, 1044, 1807], "3743": 681, "7724": 681, "5811": 681, "8017": 681, "7695": 681, "3930": 681, "3672": [681, 962, 1221], "1450": [681, 1788], "6971": 681, "0736": [681, 1893], "0994": 681, "3216": 681, "7845": 681, "1610": 681, "1868": 681, "4090": 681, "9902": [681, 962, 1221], "3667": [681, 956], "3925": 681, "6147": 681, "sum_": [682, 1186, 1240, 1257, 1334, 1335, 1336, 1349, 1350, 1351, 1357, 1389, 1390, 1409, 1424, 1428, 1430, 1801, 1802, 1803, 1823, 1828, 1844, 1845, 1846, 1917], "mathbin": [682, 685, 686, 917, 929, 1785], "doubletensor": [682, 683, 684, 685, 686, 917, 1748, 1919, 1922], "tensorfloat32": [682, 685, 917, 929, 1283, 1293, 1349, 1350, 1351, 1352, 1353, 1354, 1408, 1495, 1496, 1497, 1498, 1499, 1500, 1537, 1750, 1885, 1896], "rocm": [682, 685, 917, 929, 1283, 1293, 1349, 1350, 1351, 1352, 1353, 1354, 1374, 1392, 1408, 1857], "6311": 682, "0503": 682, "9768": [682, 1893], "0362": 682, "1653": 682, "8185": 682, "4255": [682, 1310], "6760": 682, "9453": 682, "5743": 682, "8202": 682, "3691": 682, "0943": 682, "1109": [682, 1375, 1771], "4730": [682, 1823], "histor": [683, 1019, 1361, 1884, 1893, 1898], "t1": [683, 684, 876, 1142, 1601, 1861, 1912, 1913], "2312": [683, 1788], "6496": 683, "1312": 683, "0428": 683, "4292": 683, "1030": 683, "5369": 683, "9829": 683, "0430": 683, "8635": 684, "6391": 684, "6174": 684, "7617": 684, "5879": 684, "7388": 684, "8353": 684, "6249": 684, "6511": 684, "8716": 685, "4671": 685, "3746": 685, "7573": 685, "9555": 685, "8681": 685, "3768": 686, "5565": 686, "otim": [687, 1209, 1372, 1519], "conj": [688, 955, 1078, 1079, 1081, 1083, 1090, 1092, 1096, 1097, 1099, 1218, 1219, 1225, 1227, 1246, 1730, 1731, 1858, 1860, 1890, 1902, 1922], "mh": [688, 940, 1225, 1807, 1860, 1902, 1920, 1922], "lvert": [690, 1178, 1469, 1556, 1923], "rvert": [690, 1178, 1923], "leq": [690, 918, 919, 956, 1080, 1082, 1178, 1209, 1213, 1228, 1234, 1344, 1363, 1424, 1426, 1428, 1504, 1555, 1558, 1761, 1803, 1880, 1917], "elementwis": [690, 956, 978, 1005, 1006, 1105, 1107, 1325, 1384, 1385, 1386, 1458, 1579, 1843, 1862, 1877, 1890, 1917], "07": [690, 815, 816, 817, 818, 821, 940, 941, 1065, 1226, 1229, 1234, 1246, 1247, 1253, 1276, 1279, 1608, 1659, 1666, 1765, 1770, 1807, 1900], "09": [690, 1666, 1678, 1923], "8177": 691, "4878": 691, "2491": 691, "9130": 691, "7158": 691, "1775": 691, "0992": 691, "4817": 691, "0053": 691, "0164": 691, "3738": 691, "0507": [691, 1900], "9700": 691, "1106": 691, "0318": 691, "0816": [691, 1278], "6451": 692, "4866": 692, "2987": 692, "3312": 692, "5744": 692, "2980": [692, 1877], "8397": 692, "2713": 692, "9128": 692, "9214": 692, "7268": 692, "2995": 692, "9023": [692, 1219], "4853": 692, "9075": 692, "6165": 692, "180": [694, 1046, 1714], "14159": [694, 1821], "135": 694, "45": [694, 1340, 1341, 1385, 1386, 1460, 1641, 1900], "ao": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 1907, 1908, 1909], "batch_norm": [696, 697, 1198, 1860, 1902], "3d": [697, 700, 703, 731, 736, 739, 763, 765, 770, 775, 1290, 1328, 1332, 1336, 1339, 1341, 1351, 1354, 1361, 1362, 1368, 1370, 1384, 1386, 1416, 1427, 1473, 1481, 1484, 1485, 1489, 1497, 1500, 1508, 1514, 1516, 1531, 1546, 1558, 1589, 1877, 1896, 1907, 1916, 1921], "bn": [698, 699, 700, 701, 702, 703, 810, 856, 1062, 1198, 1898, 1903, 1907, 1908], "qat": [708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 728, 729, 788, 789, 842, 1907, 1908, 1909], "in_channel": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 1198, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402], "out_channel": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 1198, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402], "kernel_s": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 764, 765, 778, 779, 1189, 1198, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1369, 1370, 1389, 1390, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1472, 1487, 1488, 1489, 1498, 1499, 1500, 1514, 1515, 1516, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1588, 1711, 1712, 1858, 1860, 1921], "dilat": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 778, 779, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1397, 1398, 1399, 1400, 1401, 1402, 1414, 1415, 1416, 1472, 1495, 1496, 1497, 1498, 1499, 1500, 1514, 1544, 1545, 1546, 1588, 1711, 1712, 1858, 1860, 1900], "padding_mod": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402, 1520, 1858, 1860], "ep": [708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 791, 815, 816, 817, 818, 821, 822, 904, 905, 1198, 1274, 1325, 1339, 1340, 1341, 1356, 1375, 1376, 1384, 1385, 1386, 1393, 1394, 1395, 1396, 1403, 1404, 1405, 1430, 1435, 1460, 1464, 1466, 1468, 1469, 1490, 1502, 1517, 1521, 1522, 1530, 1534, 1556, 1559, 1563, 1586, 1609, 1642, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1677, 1690, 1710, 1858, 1860, 1887, 1890, 1917, 1928], "momentum": [708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 747, 748, 749, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1460, 1490, 1530, 1667, 1674, 1676, 1682, 1688, 1690, 1858, 1860, 1893, 1903], "freeze_bn": [708, 709, 710, 711, 712, 713], "qconfig": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 784, 785, 787, 790, 791, 792, 793, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 857, 858, 1926], "batchnorm1d": [708, 711, 1394, 1460, 1490, 1898, 1909], "fakequant": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 798, 858], "weight_fake_qu": [708, 709, 710, 711, 712, 713, 714, 715, 726, 727], "quant": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 786, 788, 789, 834, 857, 858, 1076, 1077, 1907, 1908], "batchnorm3d": [710, 713, 715, 720, 1396, 1460, 1490, 1909], "num_featur": [719, 720, 732, 733, 747, 748, 749, 1189, 1339, 1340, 1341, 1384, 1385, 1386, 1394, 1395, 1396, 1403, 1404, 1405, 1421, 1460, 1522, 1893], "qint8": [724, 725, 752, 757, 760, 761, 768, 769, 770, 777, 788, 790, 795, 816, 837, 854, 855, 857, 858, 1657, 1708, 1709, 1907, 1909, 1910, 1918, 1922, 1923], "highlight": [726, 727, 1862], "from_float": [728, 734, 735, 736, 741, 742, 752, 760, 793, 813, 819, 822, 834, 1907], "qparams_dict": [728, 734, 735, 736, 760], "hidden_s": [730, 756, 757, 761, 1373, 1374, 1391, 1392, 1436, 1437, 1438, 1860], "num_lay": [730, 756, 1373, 1391, 1436, 1437, 1465, 1467, 1860, 1893], "bidirect": [730, 756, 1373, 1391, 1436, 1437, 1860], "_lstmlayer": 730, "nnqa": 730, "h0": [730, 756, 758, 1373, 1391, 1436], "hn": [730, 756, 758, 1373, 1374, 1391, 1436], "cn": [730, 758, 1189, 1391], "weight_ih": [730, 1374, 1392, 1438], "weight_hh": [730, 1374, 1392, 1438], "dequant": [731, 784, 786, 788, 789, 795, 797, 857, 1860, 1902, 1908, 1910, 1923, 1925], "mha": [731, 1427], "conver": 731, "key_padding_mask": [731, 1427, 1860], "need_weight": [731, 1427, 1860], "attn_mask": [731, 1427, 1570, 1860], "average_attn_weight": [731, 1427, 1860], "is_caus": [731, 1427, 1467, 1468, 1570, 1860], "attn_output_weight": [731, 1427], "unmask": [731, 1464], "causal": [731, 1427, 1465, 1466, 1467, 1468, 1570], "attn_weight": [731, 1427, 1570], "attn_output": [731, 1427], "quint8": [734, 735, 736, 737, 738, 739, 741, 742, 752, 768, 769, 770, 777, 788, 790, 795, 815, 816, 817, 818, 821, 823, 855, 857, 1657, 1708, 1709, 1710, 1711, 1712, 1907, 1909, 1910, 1918, 1922, 1923], "learnabl": [734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 1339, 1340, 1341, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1364, 1365, 1373, 1374, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1408, 1429, 1436, 1438, 1460, 1512, 1564, 1893], "q_input": [734, 735, 736, 737, 738, 739, 768, 769, 770], "quantize_per_tensor": [734, 735, 736, 737, 738, 739, 752, 753, 754, 768, 769, 770, 1710, 1711, 1712, 1860, 1902, 1907], "unequ": [735, 736, 737, 738, 739, 1350, 1351, 1353, 1354], "50": [735, 737, 738, 739, 768, 820, 1244, 1294, 1335, 1336, 1344, 1349, 1350, 1351, 1353, 1354, 1369, 1370, 1389, 1390, 1414, 1415, 1416, 1471, 1497, 1498, 1500, 1504, 1515, 1516, 1675, 1818, 1877], "56": 736, "output_pad": [737, 738, 739, 1352, 1353, 1354, 1400, 1401, 1402, 1498, 1499, 1500, 1858, 1860], "qnnpack": [737, 738, 752, 760, 851, 852, 855, 857, 858, 1907, 1909], "convtranspose2d": [737, 1401, 1499, 1842, 1909], "nnq": [737, 738, 739, 784, 785, 786, 860, 1907], "downsampl": [737, 738, 739, 1353, 1473, 1485, 1520, 1531], "upsampl": [737, 738, 739, 775, 782, 783, 815, 1353, 1474, 1475, 1485, 1520, 1531, 1590, 1591], "cubic": [739, 1370, 1516, 1520], "num_embed": [741, 742, 1364, 1365, 1512], "embedding_dim": [741, 742, 1364, 1365, 1393, 1511, 1512], "padding_idx": [741, 1364, 1365, 1511, 1512, 1858, 1860], "scale_grad_by_freq": [741, 742, 1364, 1365, 1511, 1512, 1858, 1860], "_embed": [741, 742], "_dim": [741, 742, 1364], "include_last_offset": [742, 1365, 1512, 1860], "embedding_bag": [742, 1860, 1902], "floatfunct": [743, 1907], "activation_post_process": [743, 795, 1907], "add_relu": [743, 744, 753, 1870, 1902, 1925], "add_scalar": [743, 744, 753, 1902, 1921, 1925], "mul_scalar": [743, 744, 753, 1902, 1925], "collector": 744, "f_add": 744, "num_channel": [745, 1376, 1876], "normalized_shap": [750, 1393, 1534, 1858, 1860, 1877], "elementwise_affin": [750, 1393], "negative_slop": [751, 776, 1407, 1535, 1536, 1858, 1860, 1880], "slope": [751, 776, 1407, 1452, 1880], "bias_": [752, 760], "_featur": [752, 760, 777, 1329, 1342, 1406, 1408, 1491, 1537], "from_refer": [752, 760], "ref_qlinear": [752, 760], "output_scal": [752, 755, 1710, 1860], "output_zero_point": [752, 755, 1710, 1860], "q_add": 753, "qint32": [753, 754, 1657, 1708, 1709, 1907, 1910, 1918, 1922, 1923], "x_0": [754, 1828], "gate": [756, 757, 1372, 1373, 1374, 1391, 1450, 1519, 1573], "r_t": [756, 1373, 1673], "w_": [756, 1327, 1328, 1331, 1332, 1335, 1336, 1338, 1346, 1347, 1348, 1350, 1351, 1353, 1354, 1357, 1369, 1370, 1373, 1374, 1390, 1391, 1392, 1415, 1416, 1418, 1419, 1428, 1433, 1434, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1447, 1473, 1474, 1475, 1476, 1477, 1478, 1516, 1520], "x_t": [756, 890, 892, 1339, 1340, 1341, 1373, 1384, 1385, 1386, 1391, 1436, 1460, 1661], "b_": [756, 1373, 1374, 1391, 1392, 1409, 1436, 1438, 1823, 1916], "hr": [756, 1373, 1374, 1391, 1890], "h_": [756, 1327, 1328, 1331, 1332, 1335, 1336, 1342, 1347, 1348, 1350, 1351, 1353, 1354, 1369, 1370, 1373, 1374, 1390, 1391, 1408, 1415, 1416, 1417, 1418, 1419, 1433, 1434, 1436, 1438, 1443, 1444, 1446, 1447, 1473, 1474, 1475, 1477, 1478, 1491, 1516, 1520], "z_t": [756, 1373], "iz": [756, 1373, 1374], "hz": [756, 974, 1373, 1374, 1921], "n_t": [756, 1373], "h_t": [756, 1373, 1391, 1436], "hadamard": [756, 1373, 1374, 1391, 1392], "multilay": [756, 1373, 1391], "_t": [756, 1373, 1391, 1674, 1676, 1887, 1903], "b_ih": [756, 1373, 1374, 1391, 1392, 1436, 1438, 1860], "b_hh": [756, 1373, 1374, 1391, 1392, 1436, 1438, 1860], "h_0": [756, 1373, 1391, 1392, 1436], "seq_len": [756, 1373, 1391, 1427, 1436], "pack_padded_sequ": [756, 1373, 1391, 1436, 1634, 1636, 1637, 1889], "num_direct": [756, 1373, 1391, 1436], "h_n": [756, 1373, 1391, 1436], "input1": [756, 1342, 1355, 1356, 1413, 1430, 1491, 1501, 1502, 1543, 1860, 1881, 1900], "_size": [756, 1326, 1327, 1328, 1330, 1331, 1332, 1334, 1335, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1369, 1370, 1373, 1374, 1389, 1390, 1391, 1392, 1414, 1415, 1416, 1417, 1418, 1419, 1436, 1438, 1472, 1516], "_layer": [756, 1373, 1391, 1436], "_direct": 756, "output1": [756, 1329, 1881, 1900], "output2": [756, 1329], "weight_ih_l": [756, 1373, 1391, 1436], "w_ir": [756, 1373], "w_iz": [756, 1373], "w_in": [756, 1373], "weight_hh_l": [756, 1373, 1391, 1436], "w_hr": [756, 1373], "w_hz": [756, 1373], "w_hn": [756, 1373], "bias_ih_l": [756, 1373, 1391, 1436], "b_ir": [756, 1373], "b_iz": [756, 1373], "b_in": [756, 1373], "bias_hh_l": [756, 1373, 1391, 1436], "b_hr": [756, 1373], "b_hz": [756, 1373], "b_hn": [756, 1373], "mathcal": [756, 1342, 1349, 1350, 1351, 1352, 1353, 1354, 1364, 1365, 1373, 1374, 1391, 1392, 1406, 1408, 1436, 1438, 1439, 1460, 1719, 1880, 1890], "subtli": [756, 1373, 1676], "gru": [757, 1374, 1860, 1885, 1902, 1907, 1909], "cell": [757, 759, 761, 1373, 1374, 1391, 1392, 1436, 1438], "hx": [757, 759, 761, 1374, 1392, 1438, 1860], "cx": [759, 1392, 1860], "nonlinear": [761, 1337, 1355, 1381, 1436, 1438, 1448, 1857, 1880, 1916], "elman": [761, 1436, 1438], "adaptiveavgpool2d": [762, 1480, 1842, 1909], "adaptiveavgpool3d": [763, 1481, 1842, 1909], "ceil_mod": [764, 765, 778, 779, 1334, 1335, 1336, 1389, 1390, 1414, 1415, 1416, 1487, 1488, 1489, 1541, 1542, 1544, 1545, 1546, 1711, 1712, 1858, 1860], "count_include_pad": [764, 765, 1334, 1335, 1336, 1487, 1488, 1489, 1858, 1860], "divisor_overrid": [764, 765, 1335, 1336, 1488, 1489, 1858, 1860], "kh": [764, 765, 769, 770, 1335, 1336, 1369, 1370, 1415, 1416, 1488, 1489, 1496, 1497, 1499, 1500, 1515, 1516, 1545, 1546], "kw": [764, 765, 769, 770, 1335, 1336, 1369, 1370, 1415, 1416, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1515, 1516, 1544, 1545, 1546], "sw": [764, 765, 768, 769, 770, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1544, 1545, 1546], "avgpool2d": [764, 1488, 1909], "_channel": [764, 765, 768, 769, 770, 1349, 1350, 1351, 1352, 1353, 1354, 1376, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1544, 1545, 1546, 1912], "ih": [764, 765, 769, 770, 1436, 1438, 1488, 1489, 1496, 1497, 1499, 1500, 1545, 1546], "iw": [764, 765, 768, 769, 770, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500, 1544, 1545, 1546], "padh": [764, 765, 769, 770, 1488, 1489, 1496, 1497, 1499, 1500], "padw": [764, 765, 768, 769, 770, 1487, 1488, 1489, 1495, 1496, 1497, 1498, 1499, 1500], "kd": [765, 770, 1336, 1416], "sd": [765, 770], "padd": [765, 770], "formul": [766, 1343, 1363, 1377, 1411, 1457, 1458, 1539, 1556, 1570, 1890, 1916], "min_": [767, 1224, 1225, 1234, 1252, 1807], "max_": [767, 1414, 1415, 1416, 1609, 1642], "convolv": [768, 769, 770, 1349, 1350, 1351, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1401, 1402, 1495, 1496, 1497, 1498, 1499, 1500], "dw": [768, 769, 770, 1495, 1496, 1497, 1498, 1499, 1500], "qf": [768, 769, 770], "dtype_input": [768, 769, 770], "dtype_filt": [768, 769, 770], "q_filter": [768, 769, 770], "dh": [769, 770, 1496, 1497, 1499, 1500], "dd": 770, "min_val": [774, 1380, 1526, 1527, 1858, 1860], "max_val": [774, 1380, 1526, 1527, 1858, 1860], "scale_factor": [775, 781, 782, 783, 1473, 1474, 1475, 1531, 1570, 1589, 1590, 1591, 1858, 1860], "nearest": [775, 781, 783, 1318, 1473, 1475, 1520, 1531, 1589, 1591, 1707, 1735, 1885], "align_corn": [775, 781, 782, 1473, 1474, 1485, 1520, 1531, 1589, 1590, 1858, 1860], "height": [775, 781, 1335, 1336, 1350, 1351, 1353, 1354, 1390, 1415, 1416, 1428, 1455, 1473, 1531, 1589, 1876], "spatial": [775, 781, 782, 783, 937, 1082, 1340, 1368, 1393, 1433, 1434, 1455, 1472, 1473, 1474, 1475, 1485, 1520, 1531, 1560, 1561, 1562, 1589, 1590, 1591], "pixel": [775, 781, 783, 1350, 1357, 1360, 1361, 1362, 1366, 1428, 1433, 1434, 1473, 1485, 1520, 1531, 1589, 1591], "corner": [775, 781, 928, 1473, 1485, 1520, 1531, 1589], "leakyrelu": [776, 1422, 1535, 1893, 1909], "_slope": [776, 1407, 1535, 1880], "xa": [777, 1238, 1249, 1250, 1251, 1408, 1537], "return_indic": [778, 779, 1330, 1331, 1332, 1369, 1370, 1414, 1415, 1416, 1417, 1418, 1419, 1482, 1483, 1484, 1515, 1516, 1544, 1545, 1546, 1860], "maxpool1d": [778, 1417, 1544, 1547, 1909], "maxpool2d": [779, 1418, 1422, 1545, 1548, 1900, 1909], "linearli": [781, 1126, 1247, 1473, 1589, 1685, 1706, 1889, 1903, 1910], "neighbour": [783, 1409, 1531, 1591], "stub": [784, 785, 1904], "calibr": [784, 785, 793, 834, 835, 853, 855, 857, 1881, 1907, 1908, 1910, 1926], "quantstub": [786, 1907], "dequantstub": [786, 1907], "quantwrapp": 787, "backend_config": [788, 789, 790, 791, 792, 813, 814, 855, 856, 857, 858, 1926], "acycl": [788, 1882], "backendpatternconfig": [788, 857], "dtypeconfig": [788, 789, 791, 857], "observationtyp": [788, 789, 857, 1909], "weighted_int8_dtype_config": [788, 857], "input_dtyp": [788, 790, 857, 1909], "output_dtyp": [788, 790, 857, 1858, 1909], "weight_dtyp": [788, 790, 857, 1909], "bias_dtyp": [788, 790, 1909], "fuse_conv2d_relu": 788, "is_qat": [788, 789], "convrelu2d": [788, 1909], "linear_config": 788, "set_observation_typ": [788, 789, 857], "output_use_different_observer_as_input": [788, 789, 792, 857, 1909], "add_dtype_config": [788, 789, 857], "set_root_modul": [788, 789], "set_qat_modul": [788, 789], "set_reference_quantized_modul": [788, 789], "conv_relu_config": 788, "set_fused_modul": [788, 789], "set_fuser_method": [788, 789], "fused_conv_relu_config": 788, "set_backend_pattern_config": [788, 857], "from_dict": [788, 789, 790, 811, 812, 813, 850], "backend_config_dict": [788, 1907], "set_nam": 788, "to_dict": [788, 789, 790, 811, 812, 813, 850], "backendconfig": [789, 814, 855, 857, 1910], "dtype_config": [789, 1909], "backend_pattern_config_dict": 789, "observation_typ": [789, 1909], "qat_modul": [789, 1909], "reference_quantized_modul": 789, "fused_modul": [789, 1909], "fuser_method": [789, 810, 1909], "pattern_complex_format": 789, "set_dtype_config": 789, "fuse_linear_relu": 789, "linearrelu": [789, 1909], "8bea7180a8ba3c279f2c9b050f2a69a6": 789, "understood": [789, 936], "output_share_observer_with_input": [789, 792, 1909], "renam": [789, 1860, 1875, 1876, 1902], "quantdequantstub": 789, "set_pattern": 789, "is_dynam": [790, 822, 1909], "quant1": 790, "dequant1": 790, "fp32_linear": 790, "quant2": 790, "dequant2": 790, "bracket": [790, 1913], "dtype_config1": 790, "dtype_config2": 790, "dtypewithconstraint": [790, 1909], "quant_min_lower_bound": [790, 791, 1909], "quant_max_upper_bound": [790, 791, 1909], "255": [790, 798, 1076, 1077, 1115, 1520, 1531, 1589, 1907, 1909, 1921], "input_dtype_with_constraint": 790, "scale_min_lower_bound": [790, 791, 1909], "scale_max_upper_bound": [790, 791, 1909], "dtype_config_dict": 790, "bias_typ": [790, 857], "scale_exact_match": [791, 1909], "zero_point_exact_match": [791, 1909], "quant_min": [791, 795, 798, 815, 816, 817, 818, 821, 822, 1076, 1077, 1860, 1907], "quant_max": [791, 795, 798, 815, 816, 817, 818, 821, 822, 1076, 1077, 1860, 1907], "fixedqparamsobserv": 791, "fixedqparamsfakequant": 791, "input_output_not_observ": [792, 1909], "maxpool": [792, 1369, 1370, 1515, 1516, 1900], "remove_qconfig": 793, "is_refer": 793, "convert_custom_config_dict": [793, 811, 1907], "from_observ": [793, 811, 1907], "observed_to_quantized_custom_module_class": [793, 811, 1907], "observedcustommodul": [793, 811, 813, 834, 1907], "quantizedcustommodul": [793, 811], "calib_data": 794, "fake_quant": [795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 858, 1076, 1077, 1926], "movingaverageminmaxobserv": [795, 798, 818], "observer_kwarg": [795, 798], "x_out": [795, 798], "fake_quant_en": 795, "observer_en": 795, "calculate_qparam": [796, 815, 816, 820], "qscheme": [798, 815, 816, 817, 818, 821, 822, 823, 1860, 1902, 1907, 1910, 1923], "fake_qu": [799, 803, 804, 805, 1907], "default_fake_qu": 800, "default_per_channel_weight_fake_qu": 801, "default_weight_fake_qu": 802, "histogram": [803, 815, 827, 1149, 1151, 1860, 1902, 1921], "memoryless": [804, 805], "averaging_const": [804, 805, 817, 818, 1860], "modules_to_fus": 810, "fuser_func": 810, "fuse_known_modul": 810, "fuse_custom_config_dict": [810, 812], "convmodul": 810, "bnmodul": 810, "convbnmodul": 810, "additional_fuser_method_map": 810, "fuse_conv_bn": [810, 1909], "conv1": [810, 1200, 1421, 1449, 1859, 1907, 1921], "bn1": 810, "relu1": [810, 1449, 1592], "fused_m": 810, "custom_config": [811, 812, 813, 814], "convert_fx": [811, 1907, 1926], "convert_custom_config": [811, 855, 1907], "set_observed_to_quantized_map": 811, "set_preserved_attribut": [811, 812, 813], "attr1": [811, 812, 813, 1900], "attr2": [811, 812, 813, 1900], "floatcustommodul": [811, 813], "weight_onli": [811, 855, 1907], "preserved_attribut": [811, 812, 813], "observed_class": [811, 813], "quantized_class": 811, "quant_typ": [811, 813], "quanttyp": [811, 813], "fuse_fx": [812, 1907], "fuse_custom_config": [812, 856], "convertcustomconfig": [812, 855], "prepare_fx": [813, 836, 855, 858, 1907, 1926], "prepare_qat_fx": [813, 855, 1907], "prepare_custom_config": [813, 814, 857, 858, 1907], "set_standalone_module_nam": 813, "module1": [813, 850, 1885], "qconfig_map": [813, 814, 850, 851, 852, 855, 857, 858, 1907], "child_prepare_custom_config": 813, "set_standalone_module_class": 813, "mystandalonemodul": 813, "set_float_to_observed_map": 813, "set_non_traceable_module_nam": 813, "module2": [813, 850, 1885], "module3": [813, 1885], "set_non_traceable_module_class": 813, "nontraceablemodule1": 813, "nontraceablemodule2": 813, "set_input_quantized_index": 813, "set_output_quantized_index": 813, "prepare_custom_config_dict": [813, 834, 836, 1907], "standalone_module_nam": 813, "standalone_module_class": 813, "module_class": 813, "float_to_observed_custom_module_class": [813, 834, 1907], "non_traceable_module_nam": 813, "non_traceable_module_class": 813, "input_quantized_idx": 813, "output_quantized_idx": 813, "float_class": 813, "qconfigmap": [814, 851, 852, 855, 857, 1907, 1910], "preparecustomconfig": [814, 857], "2048": [815, 1464, 1466, 1468, 1885], "upsample_r": 815, "per_tensor_affin": [815, 816, 817, 1709, 1710, 1711, 1712, 1907, 1910], "reduce_rang": [815, 816, 817, 818, 821, 823, 1860, 1907, 1908], "factory_kwarg": [815, 816, 821], "1920928955078125e": [815, 816, 817, 818, 821], "finfo": [815, 816, 817, 818, 821, 1243, 1246, 1325, 1857, 1923], "minmaxobserv": [815, 817, 821, 837, 857, 858, 1910], "x_": [816, 817, 961, 1072, 1262, 1263, 1265, 1268, 1276, 1338, 1357, 1411, 1428, 1454, 1456, 1576, 1784, 1786, 1828, 1882, 1910, 1917], "q_": [816, 1910], "x_orig": 816, "reset_min_max_v": [816, 821], "ch_axi": [818, 821, 1860], "per_channel_affin": [818, 821, 1708, 1907, 1910], "custom_op_nam": [819, 822], "with_arg": [820, 837, 857, 858], "_callable_arg": 820, "_with_arg": 820, "foo_build": 820, "foo_instance1": 820, "foo_instance2": 820, "with_callable_arg": 820, "_with_callable_arg": 820, "cur_tim": 820, "get_time_func": 820, "dan": 820, "creation_tim": 820, "compute_dtyp": 822, "ptq": [827, 1907, 1908, 1910], "obs_dict": 833, "get_observer_state_dict": 833, "allow_list": [834, 1925], "observer_non_leaf_module_list": 834, "preemptiv": [834, 835, 1601], "custommodul": [834, 1907], "propagate_qconfig_": 836, "qconfig_dict": [836, 850], "my_qconfig": 837, "default_observ": 837, "default_qat_config": 843, "set_glob": [850, 855, 857, 1907], "set_object_typ": [850, 855, 857], "set_module_name_regex": 850, "regex": 850, "set_module_nam": [850, 855, 857], "set_module_name_object_type_ord": 850, "global_qconfig": 850, "qconfig1": 850, "qconfig2": 850, "qconfig3": 850, "object_typ": 850, "module_name_regex": 850, "module_name_object_type_ord": 850, "conv0": 850, "x86": [851, 852, 1751, 1907, 1909], "run_arg": [853, 859], "qconfig_spec": 854, "quantize_fx": [855, 856, 857, 858, 1907, 1926], "_remove_qconfig": 855, "qconfig_from_prepar": 855, "prepared_model": [855, 857, 858], "xnnpack": [855, 1870, 1907], "get_default_backend_config": [855, 857, 858], "quantized_model": 855, "fusion_pattern": 856, "fusecustomconfig": 856, "_equalization_config": 857, "get_default_qconfig_map": [857, 1907], "float_model": [857, 858, 1925], "data_load": [857, 858, 1682, 1688, 1895], "get_default_qconfig": [857, 858, 1907], "linear_pattern_config": 857, "suer": 857, "sample_inference_data": 857, "get_default_qat_qconfig_map": [858, 1907], "load_weight": 858, "train_data": 858, "get_default_qat_qconfig": [858, 1907], "custom_module_class_map": 860, "lceil": [861, 938], "rceil": [861, 938], "gap": [861, 1722, 1857, 1907], "adjac": [861, 928, 1360, 1361, 1362, 1366, 1722, 1916], "set_default_tensor_typ": [861, 918, 927, 1063, 1065, 1075, 1080, 1098, 1116, 1136, 1146, 1147, 1208, 1259, 1275, 1652, 1715, 1717, 1719, 1721, 1722, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1789, 1790, 1791, 1792, 1793, 1794, 1832, 1834, 1854], "get_default_dtyp": [861, 1259, 1275, 1657, 1722, 1918, 1919, 1928], "5000": [861, 876, 882, 883, 884, 920, 944, 1080, 1082, 1083, 1090, 1093, 1098, 1108, 1110, 1111, 1112, 1142, 1148, 1151, 1214, 1240, 1259, 1316, 1318, 1346, 1347, 1365, 1473, 1707, 1711, 1712, 1713, 1722, 1726, 1917, 1922], "3398": 870, "2663": [870, 1885], "2686": 870, "2450": 870, "7401": 870, "8805": 870, "3402": 870, "1936": 870, "4907": [870, 1276], "3948": [870, 956], "0691": 870, "3132": 870, "6092": 870, "5419": 870, "2993": [870, 1806], "3195": 870, "1139": 871, "2254": 871, "1381": [871, 1806], "3687": 871, "0100": [871, 1242, 1708], "1975": [871, 1877], "0102": 871, "4732": 871, "9240": 871, "1207": [871, 1310], "7506": 871, "0213": 871, "7809": 871, "2960": 871, "9384": 871, "1438": 871, "ascend": [872, 1082, 1225, 1227, 1256, 1309, 1742, 1780, 1839], "0785": 872, "5267": 872, "8521": 872, "4065": 872, "1598": 872, "0788": 872, "0745": 872, "2700": 872, "2208": 872, "0722": 872, "7064": 872, "2564": 872, "0669": 872, "2318": 872, "8229": 872, "9280": 872, "lexicograph": [873, 1647, 1862, 1916], "9039": 874, "6291": 874, "0795": [874, 1707, 1893], "1586": 874, "1939": 874, "4900": 874, "7503": 874, "9355": 874, "histori": [875, 876, 1128, 1666, 1821, 1869, 1877, 1887, 1889, 1913], "dlpack": [876, 1113, 1857], "frombuff": 876, "data_ptr": [876, 1875, 1918, 1920], "addbackward0": [876, 1893, 1898], "__array_interface__": 876, "5962": 877, "4985": 877, "4396": 877, "4525": [877, 1877], "6387": 877, "4552": 877, "sine": [878, 1763, 1773, 1775], "1606": 878, "4267": 878, "0899": 878, "0250": 878, "1599": 878, "1534": 878, "9435": 878, "8990": [878, 1057], "arctang": [879, 880], "2341": 879, "2539": 879, "6256": 879, "6448": 879, "2299": 879, "2487": 879, "5591": [879, 901], "5727": 879, "quadrant": 880, "9041": [880, 937], "0196": [880, 937], "3108": [880, 937], "4423": [880, 937], "9833": 880, "0811": 880, "9743": 880, "4151": 880, "tangent": [881, 891, 892, 1125, 1126, 1461, 1819, 1820], "9385": 881, "2968": 881, "8591": 881, "1871": 881, "7253": 881, "3060": 881, "2899": 881, "1893": 881, "needs_input_grad": [885, 1887], "setup_context": [886, 1888], "save_for_forward": [886, 1888], "grad_input": [887, 894, 896, 909, 1189, 1421, 1597, 1887, 1893], "underneath": 888, "generate_vmap_rul": [888, 1888], "out_dim": [888, 1130, 1849, 1860, 1876, 1888], "grad_tensor": [889, 903, 1860, 1885], "grad_vari": 889, "forward_ad": 890, "dual": [890, 891, 892, 1646, 1888], "make_du": [890, 892], "your_fn": 890, "unpack_du": [890, 891], "grad_aft": 890, "dual_level": [891, 892], "primal": [892, 1121, 1125, 1126, 1129], "x_npy": 893, "once_differenti": [893, 894, 895, 896, 1887], "g1": [894, 896, 1885, 1914], "g2": [894, 896, 1885, 1914], "oppos": [895, 1888], "weren": 895, "grad_out": [895, 1858, 1860, 1890], "gx": 895, "gy": 895, "gz": 895, "simplefunc": 896, "outer_jacobian_strategi": 897, "disconnect": [897, 898, 899, 900, 901, 902], "said": [897, 898, 899, 900, 901, 902, 1869, 1896], "cliff": [897, 899, 903], "_debug_only_display_vmap_fallback_warn": [897, 903], "pow_reduc": [897, 898, 901], "2265": 897, "8221": 897, "9456": [897, 919], "2550": 897, "viewbackward": [897, 899], "pow_adder_reduc": [897, 898, 901], "func_output": [898, 900, 901, 902], "1448": 898, "0239": 898, "6456": 898, "4988": 898, "4310": 898, "sumbackward0": [898, 901], "3030": 898, "vhp": 898, "batched_grad": 899, "exp_reduc": [899, 900, 902], "4917": 899, "4352": 899, "4369": 899, "3799": 899, "exp_add": 899, "8052": 899, "3963": 899, "3090": 900, "6742": 900, "9114": 900, "2106": 900, "sumbackward1": [900, 902], "squeezebackward1": 900, "adder": [900, 902], "2399": 900, "5005": 900, "0689": 901, "2431": 901, "0989": 901, "4456": 901, "8053": [901, 1737], "7817": 902, "2458": 902, "7830": 902, "7782": 902, "4458": 902, "3962": 902, "3042": [902, 1246], "6354": 902, "1288": [902, 1766], "0652": 902, "5483": 902, "5035": 902, "2046": [902, 956], "1292": 902, "1432": 902, "3059": 902, "3225": 902, "6652": 902, "7753": 902, "0152": 902, "4225": 902, "3340": 902, "only_input": 903, "allow_unus": [903, 1860], "is_grads_batch": 903, "materialize_grad": 903, "require_grad": [903, 1862, 1882], "06": [904, 905, 1229, 1234, 1235, 1246, 1247, 1252, 1375, 1430, 1469, 1472, 1517, 1586, 1661, 1675, 1807, 1860, 1923], "raise_except": [904, 905], "check_sparse_nnz": 904, "nondet_tol": [904, 905], "check_undefined_grad": [904, 905], "check_grad_dtyp": [904, 905], "check_batched_grad": [904, 905], "check_batched_forward_grad": 904, "check_forward_ad": 904, "check_backward_ad": 904, "fast_mod": [904, 905, 1890], "differenc": [904, 1887], "perturb": [904, 905, 1890], "sparsetensor": [904, 1792], "gradgradcheck": [904, 1887], "gen_non_contig_grad_output": 905, "check_fwd_over_rev": 905, "check_rev_over_rev": 905, "noncontigu": [905, 1005, 1923], "inaccuraci": 905, "clonebackward0": 907, "gi": [909, 910, 1893], "removablehandl": [909, 910, 1189, 1421, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1904], "eventlist": [912, 913], "chrome": [912, 1906], "group_by_stack_n": [913, 1906], "roof": 913, "functioneventavg": [913, 915], "window_length": [918, 927, 1146, 1147, 1208, 1860], "2n": [918, 1761], "trim": [918, 927, 1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1146, 1147, 1186], "_length": [918, 927, 1146, 1147, 1186, 1344, 1803], "sim": [919, 1435, 1563, 1699, 1719], "pseudorandom": [919, 1311, 1649, 1696, 1699, 1715, 1717, 1719, 1721, 1808], "1737": 919, "0950": [919, 1785], "3609": 919, "7148": 919, "0289": [919, 1831], "2676": 919, "8937": 919, "7202": 919, "2500": [920, 1080, 1082, 1083, 1093, 1098, 1259, 1473, 1713], "7500": [920, 1083, 1093, 1112, 1142, 1244, 1259, 1473, 1713, 1769], "AND": [921, 1270, 1862, 1882], "OR": [924, 1272, 1862], "xor": [926, 1273, 1862], "blackman": [927, 1771], "arrang": 928, "broadcast_tensor": [930, 1860, 1902], "out_int32": [933, 1742, 1860], "formal": [933, 1742, 1869, 1876], "tensor_a": [935, 948], "tensor_b": 935, "6580": 936, "0969": 936, "4614": 936, "1034": [936, 1062], "5790": 936, "1497": 936, "x2": [937, 1236, 1413, 1469, 1470, 1502, 1559, 1860], "compute_mod": 937, "use_mm_for_euclid_dist_if_necessari": 937, "distanc": [937, 1186, 1224, 1225, 1252, 1381, 1430, 1469, 1470, 1560, 1682, 1803, 1807, 1857], "infti": [937, 1186, 1240, 1337, 1389, 1390, 1452, 1560, 1673, 1917], "use_mm_for_euclid_dist": 937, "donot_use_mm_for_euclid_dist": 937, "minkowski": [937, 1560], "ham": [937, 1146, 1560, 1767], "closest": [937, 1560], "xn": [937, 1560], "4821": [937, 940], "059": 937, "0590": 937, "1763": [937, 1725], "4713": [937, 1725], "6986": [937, 1725], "3702": [937, 1725], "1193": [937, 1278], "0959": 937, "7138": 937, "8322": 937, "2830": [937, 1833], "3791": 937, "6341": 938, "4208": 938, "0900": 938, "5826": 938, "clr": [939, 1682], "3375": 939, "9790": 939, "1119": 939, "6577": 939, "5609": [939, 1511], "5095": 939, "2614": 939, "4038": 939, "3378": [939, 1833], "4982": 939, "2457": [939, 1291], "2561": 939, "4684": 939, "7163": 939, "9647": 939, "8917": [939, 1269], "3213": [939, 1265], "2284": [939, 1042], "8615": 939, "2816": 939, "tu": 940, "mt": [940, 941, 1218, 1225, 1227, 1231, 1232, 1233, 1238, 1247, 1706, 1807, 1860, 1869, 1902, 1920, 1922], "4112": 940, "7486": 940, "4551": 940, "3544": 940, "6724": 940, "5528": 940, "0592": [940, 1893], "9371": 940, "5487": 940, "7023": 940, "03": [940, 941, 1266, 1764, 1765, 1770], "3842e": [940, 1234], "dpotri": 941, "spotri": 941, "uu": 941, "9935": 941, "6353": 941, "5806": 941, "8769": 941, "7183": [941, 1240, 1893], "6618": 941, "9314": 941, "2251": [941, 962, 1221, 1263], "0889": 941, "4439": 941, "2122": 941, "1412": 941, "5894e": 941, "semidefinit": 942, "7747": 942, "9549": 942, "3086": 942, "4114": 942, "8733": 942, "6355": 942, "9891": 942, "1974": 942, "4706": 942, "4115": 942, "6225": 942, "1625": 942, "6097": 942, "8398": 942, "2387": [942, 957], "3771": [942, 1235], "4173": 942, "1626": [942, 962, 1221], "tensor_split": [943, 1060, 1152, 1850, 1860, 1902, 1920], "min_valu": [944, 1380], "max_valu": [944, 1380, 1860], "_valu": [944, 1329, 1606, 1792, 1887, 1902, 1916], "7120": 944, "1734": [944, 1163], "0478": [944, 1852], "0922": 944, "3333": [944, 1142, 1151, 1473, 1474, 1821], "hstack": [947, 1860, 1902, 1916], "with_replac": [948, 1860], "combinations_with_replac": 948, "_glibcxx_use_cxx11_abi": 950, "flip": [954, 1103, 1104, 1256, 1858, 1860, 1902, 1903], "writeabl": [954, 955], "is_conj": [954, 1730, 1860, 1902], "geq": [956, 1133, 1220, 1228, 1357, 1407, 1428, 1429, 1439, 1503, 1555, 1608, 1880, 1917], "signbit": [956, 1858, 1860, 1902, 1916], "2557": 956, "0026": 956, "5387": 956, "4740": 956, "9244": 956, "7079": 956, "2778": 956, "0249": [956, 1264], "5719": 956, "0059": 956, "2600": 956, "4475": 956, "9567": [956, 1224, 1806], "5757": 956, "1751": 956, "0742": 956, "2998": 956, "1054": 956, "2373": 956, "3190": [956, 1885], "1128": [956, 1246, 1391], "pearson": 957, "coeffici": [957, 1146, 1661, 1663, 1664, 1665, 1667, 1673, 1677, 1766, 1767, 1768, 1830], "r_": [957, 1823], "ij": [957, 1062, 1268, 1276, 1290, 1424, 1784], "c_": [957, 1349, 1350, 1351, 1352, 1353, 1354, 1391, 1433, 1434], "jj": 957, "hermitian": [957, 1078, 1079, 1081, 1083, 1084, 1085, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1218, 1219, 1224, 1225, 1227, 1231, 1232, 1233, 1243, 1246, 1252, 1860], "cov": [957, 1860, 1902], "2678": [957, 1364], "0908": 957, "3766": 957, "2780": 957, "5812": 957, "1535": [957, 1364], "2350": 957, "3582": 957, "4309": 958, "2706": 958, "8562": 958, "9796": [958, 1234], "1395": 958, "2957": 958, "6553": 958, "5574": 958, "1632": 959, "1835": 959, "6979": 959, "7325": [959, 1052], "0133": 959, "7860": 959, "2536": 959, "2805": 959, "sleef": [959, 1775], "unbias": [961, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1460, 1801, 1802, 1844, 1845, 1858, 1860], "_w": 961, "y_": [961, 1072, 1262, 1263, 1265, 1338, 1357, 1387, 1784, 1828, 1882, 1917], "w_i": [961, 1228], "mu_x": 961, "mu_i": [961, 1667], "whichev": [961, 1130, 1520, 1707, 1849, 1885], "w_ix_": 961, "bessel": [961, 1208, 1770, 1801, 1802, 1844, 1845, 1917], "corrcoef": [961, 1860, 1902], "6667": [961, 1151, 1473, 1474, 1727, 1761, 1898], "fw": 961, "4282": 961, "0255": [961, 1049], "4144": [961, 1885], "4169": 961, "3956": [962, 1221], "1455": [962, 1221, 1899], "6895": [962, 1221], "5849": [962, 1221], "3599": [962, 1221], "7180": [962, 1221], "0521": [962, 1221], "1339": [962, 1221], "0225": [962, 1221, 1234], "0257": [962, 1221], "4725": [962, 1221], "1479": [962, 1221], "7005": [962, 1221], "9757": [962, 1221], "3904": [962, 1221], "3726": [962, 1221], "1836": [962, 1221], "9688": [962, 1221], "7153": [962, 1221, 1917], "2159": [962, 1221], "0844": [962, 1221], "5281": [962, 1221], "6120": [962, 1221], "4490": [962, 1221], "5687": [962, 1221], "9792": [962, 1043, 1221], "8304": [962, 1221], "3037": [962, 1221, 1893], "5650": [962, 1221], "2329": [962, 1221], "9883": [962, 1221], "0551": [962, 1221], "capture_begin": [963, 1885], "make_graphed_cal": [963, 1885], "graph_pool_handl": [963, 997], "other_graph_inst": [963, 997], "capture_end": [963, 1885], "debug_dump": 963, "debug_path": 963, "enable_debug_mod": 963, "path_to_so_fil": 964, "alloc_fn_nam": 964, "free_fn_nam": 964, "ctype": 964, "change_current_alloc": [964, 1885], "ssize_t": [964, 1885], "cudastream_t": [964, 966, 1885], "ptr": [964, 1885], "size_t": 964, "oss": 964, "enable_tim": [965, 1885], "interprocess": 965, "marker": 965, "elapsed_tim": [965, 1885], "end_ev": [965, 1885], "elaps": [965, 1872], "from_ipc_handl": 965, "reconstruct": [965, 1278, 1337, 1338, 1890, 1898, 1904], "ipc": [965, 1001], "ipc_handl": 965, "proceed": [965, 1375, 1913, 1914], "cudaeventsynchron": 965, "cudastreamwaitev": [965, 966, 968], "stream_ptr": 966, "record_ev": [966, 968], "cudastreamsynchron": [966, 968], "wait_ev": [966, 968], "interoper": 970, "caching_allocator_delet": 970, "mem_ptr": 971, "caching_allocator_alloc": 971, "peer_devic": 972, "_cudaalloc": 973, "clock": 974, "sm": 974, "hertz": 974, "smi": [974, 987, 1015, 1021, 1025, 1039, 1040, 1885, 1889, 1891], "buffer_s": 976, "10485760": 976, "chunk_siz": [979, 1124, 1130, 1849], "cublashandle_t": 980, "unoccupi": [987, 1299], "pytorch_cuda_alloc_conf": [988, 1885], "cudamallocasync": [988, 1019, 1885], "_cudadeviceproperti": 992, "gencod": 993, "cuda_graph": 997, "ordinari": [999, 1601, 1881], "code_str": [1005, 1006], "temp": 1005, "typenam": [1005, 1006], "my_kernel": [1005, 1006], "jitted_fn": [1005, 1006], "create_jit_fn": [1005, 1006], "util_fn": 1005, "gelu": [1005, 1450, 1464, 1466, 1468, 1573, 1858, 1860, 1877, 1902], "my_gelu": 1005, "my_lib": [1005, 1866, 1899], "impl": [1005, 1866], "num_output": 1006, "sample_arg": 1008, "num_warmup_it": 1008, "allow_unused_input": 1008, "datadistributedparallel": 1008, "manual_seed_al": 1009, "occupi": [1011, 1015, 1026, 1297, 1409, 1538, 1885, 1891, 1928], "reset_peak_memory_stat": [1011, 1013, 1026, 1027], "max_memory_reserv": [1012, 1885, 1891], "cudamemgetinfo": 1014, "memory_reserv": [1016, 1885, 1891], "snapshot": [1018, 1862, 1885, 1891], "large_pool": 1019, "small_pool": 1019, "allocated_byt": 1019, "cudamalloc": [1019, 1885], "reserved_byt": 1019, "active_byt": 1019, "inactive_split": 1019, "inactive_split_byt": 1019, "octob": 1019, "1mb": 1019, "num_alloc_retri": 1019, "num_oom": 1019, "assist": [1019, 1886], "max_split_s": 1019, "oversize_alloc": 1019, "oversize_seg": 1019, "requested_byt": 1019, "abbrevi": 1020, "percent": [1021, 1040], "msg": [1022, 1024, 1906, 1923], "instantan": [1022, 1906], "ascii": [1022, 1024, 1260, 1862, 1906], "sensor": [1025, 1039], "mw": 1025, "milliwatt": 1025, "fermi": 1025, "max_memory_alloc": [1026, 1885, 1891], "max_memory_cach": 1027, "memory_stat": [1028, 1885, 1891], "seed_al": 1029, "environment": 1031, "total_memori": [1032, 1306], "debug_mod": [1036, 1749], "streamcontext": [1037, 1857], "centigrad": 1039, "x_1": [1041, 1042, 1043, 1044, 1256, 1342, 1355, 1356, 1491, 1502, 1828], "x_2": [1041, 1042, 1043, 1044, 1256, 1342, 1355, 1356, 1491, 1502], "x_3": [1041, 1042, 1043, 1044, 1256], "3449": 1041, "5447": 1041, "0685": 1041, "5104": [1041, 1885], "1706": 1041, "2259": 1041, "4696": 1041, "3284": 1041, "9946": 1041, "8209": [1041, 1044], "6628": 1042, "0975": 1042, "2680": [1042, 1884], "3298": [1042, 1049], "4220": 1042, "3885": 1042, "1762": 1042, "9165": 1042, "6684": [1042, 1166], "6001": 1043, "2069": 1043, "1919": 1043, "6727": [1043, 1056], "0062": 1043, "4126": 1043, "2129": 1043, "4206": 1043, "1968": [1043, 1917], "1241": 1043, "0238": 1043, "0233": [1043, 1714], "0157": 1043, "0158": [1043, 1807], "0065": 1043, "0014": [1043, 1917], "0006": 1043, "8286": 1044, "4890": 1044, "5155": 1044, "8443": 1044, "1865": 1044, "1752": [1044, 1052], "0595": 1044, "1850": 1044, "1571": [1044, 1893, 1898], "4243": 1044, "3175": 1044, "8020": [1044, 1704], "0423": 1044, "2289": 1044, "0537": 1044, "0058": 1044, "9780": 1044, "trapezoid": [1045, 1829, 1860, 1902], "360": 1046, "2832": 1046, "diagflat": [1049, 1860, 1902], "5950": 1049, "0872": 1049, "4264": 1049, "1064": [1049, 1893], "8795": 1049, "2429": 1049, "1374": 1049, "1029": 1049, "6482": 1049, "6300": 1049, "5410": 1050, "2934": 1050, "1788": [1050, 1917], "5684": 1050, "0845": [1050, 1775, 1893], "3986": 1050, "2956": [1051, 1221], "9068": 1051, "1695": 1051, "2094": [1051, 1885], "3018": 1051, "1516": 1051, "9342": 1051, "0854": 1052, "1431": 1052, "8536": 1052, "0905": 1052, "0360": [1052, 1310], "6927": 1052, "3735": 1052, "4945": 1052, "2631": [1052, 1309, 1885], "3755": 1052, "5977": 1052, "8172": 1052, "1065": [1052, 1893], "0401": 1052, "2235": [1052, 1806], "7938": 1052, "3081": 1052, "6166": 1052, "2335": 1052, "0500": 1052, "7336": 1052, "3836": 1052, "1015": 1052, "emb": [1053, 1745, 1776], "5393": 1056, "8675": 1056, "5916": 1056, "6321": 1056, "0967": 1056, "0511": 1056, "6295": 1056, "8360": 1056, "6973": 1056, "6537": 1056, "dividend": [1057, 1107, 1110, 1726, 1835], "true_divid": [1057, 1860, 1902], "3810": [1057, 1150], "2774": 1057, "2972": 1057, "3719": 1057, "4637": 1057, "7620": 1057, "5548": 1057, "5944": 1057, "7438": 1057, "9274": 1057, "3711": 1057, "9353": 1057, "4605": 1057, "2917": 1057, "1815": [1057, 1269], "0111": [1057, 1764], "9805": 1057, "5923": 1057, "1062": 1057, "4581": [1057, 1228], "7759": 1057, "2344": 1057, "1830": 1057, "0313": 1057, "1908": 1057, "4757": 1057, "8032": 1057, "2930": 1057, "8113": 1057, "2308": 1057, "4620": [1057, 1852], "6051": 1057, "5676": 1057, "2639": 1057, "2260": 1057, "4509": [1057, 1242], "2086": 1057, "1322": 1057, "9764": 1057, "9564": 1057, "3484": 1057, "2278": 1057, "1068": [1057, 1163], "4678": 1057, "3938": [1057, 1816], "depthwis": [1060, 1061, 1349, 1350, 1351], "atleast_3d": [1061, 1860, 1902], "operand": [1062, 1862, 1863, 1887, 1916, 1919], "notat": [1062, 1387, 1755, 1863, 1893, 1922], "einstein": 1062, "summat": [1062, 1186, 1268, 1276, 1916], "subscript": [1062, 1863], "jk": 1062, "ik": [1062, 1261, 1784], "za": 1062, "alphabet": [1062, 1504, 1912], "arrow": [1062, 1914], "ki": 1062, "ellipsi": [1062, 1862, 1863, 1876], "fourth": 1062, "whitespac": [1062, 1863], "opt_einsum": [1062, 1857], "_the_": 1062, "disclaim": 1062, "52": 1062, "op1": [1062, 1862], "sublist1": 1062, "op2": [1062, 1862], "sublist2": 1062, "subslist_out": 1062, "2104": 1062, "7952": 1062, "2433": 1062, "4545": 1062, "1156": 1062, "2897": [1062, 1893], "3918": 1062, "4963": 1062, "3744": 1062, "9381": 1062, "2685": 1062, "6070": 1062, "7208": 1062, "8058": 1062, "4419": 1062, "0936": 1062, "1713": 1062, "4291": 1062, "5802": 1062, "7350": [1062, 1917], "5704": 1062, "4290": 1062, "9323": 1062, "4480": 1062, "bij": 1062, "bjk": 1062, "bik": 1062, "0564": 1062, "5904": 1062, "2023": 1062, "1271": 1062, "6706": [1062, 1707], "8097": 1062, "8025": 1062, "1183": 1062, "2239": [1062, 1248], "3107": 1062, "5756": 1062, "2354": 1062, "4558": 1062, "3460": 1062, "5087": 1062, "8530": [1062, 1346, 1476], "8153": 1062, "8787": 1062, "3839": [1062, 1848], "2112": [1062, 1831], "3728": 1062, "1131": [1062, 1704], "0921": 1062, "8305": 1062, "ji": 1062, "anm": 1062, "bm": 1062, "ba": 1062, "3430": [1062, 1269], "2405": 1062, "4494": 1062, "3311": 1062, "5201": 1062, "0356": 1062, "4064e": 1063, "8000e": 1063, "3493e": 1063, "5751e": 1063, "1428e": 1063, "5955e": 1063, "9683e": 1065, "1239e": 1065, "0705e": 1065, "set_grad_en": [1066, 1860, 1902, 1924], "parenthesi": [1066, 1164, 1646], "doubler": [1066, 1646], "elsewher": [1067, 1075, 1133, 1145, 1179, 1181, 1182, 1185, 1213, 1277, 1322, 1785, 1856], "_max": [1076, 1077, 1907], "_min": [1076, 1077, 1907], "nearbi": [1076, 1077], "_int": [1076, 1077], "_point": [1076, 1077], "2525": 1076, "0466": 1076, "3491": [1076, 1242], "2168": [1076, 1823], "5906": [1076, 1917], "6258": 1076, "6444": 1076, "0542": 1076, "0475": [1076, 1917], "0486": 1076, "3405": 1076, "6134": [1076, 1291], "6323": 1076, "0552": 1077, "9730": 1077, "3973": 1077, "0780": 1077, "4000": [1077, 1080, 1089, 1098, 1473, 1710, 1761], "6000": [1077, 1464, 1466, 1468, 1473, 1710, 1758, 1761], "fourier": [1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1186, 1771, 1803, 1857], "rfft": [1078, 1083, 1093, 1097, 1098, 1099], "compact": [1078, 1079, 1081, 1231, 1233, 1236, 1887, 1900, 1907], "chalf": [1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1093, 1094, 1095, 1860, 1902, 1922], "sm53": [1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099], "ortho": [1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1261], "orthonorm": [1078, 1079, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1252, 1608, 1807], "ifft": [1078, 1082, 1083, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095], "fftn": [1079, 1082, 1088, 1091, 1099], "rfft2": [1079, 1094], "ifft2": [1079, 1091], "two_fft": [1079, 1081, 1091, 1097, 1099], "check_strid": [1079, 1081, 1082, 1087, 1088, 1093, 1094, 1095, 1097, 1099, 1923], "nyquist": [1080, 1082, 1090, 1092, 1096, 1097, 1098, 1099], "i_1": [1081, 1099, 1209], "i_n": [1081, 1099, 1130, 1209, 1823, 1849], "rfftn": [1081, 1085, 1091, 1095, 1097], "ifftn": [1081, 1087, 1092], "rearrang": [1082, 1089, 1345, 1433, 1434, 1561, 1562, 1876], "fftfreq": [1082, 1089, 1098], "9000": [1082, 1821], "8000": [1082, 1316, 1473, 1707, 1761], "uncent": 1082, "ifftshift": 1082, "x_center": 1082, "x_uncent": 1082, "fft_uncent": 1082, "fft_center": 1082, "x_centered_2": 1082, "ihfft": [1083, 1091, 1092], "irfft": [1083, 1095, 1096], "symmetri": [1083, 1085, 1803], "opposit": [1083, 1085, 1807, 1827], "transformed_dim_s": [1083, 1093], "0000j": [1083, 1090, 1093, 1218, 1219, 1224, 1225, 1227, 1700, 1758], "1250": [1083, 1309], "1720j": 1083, "0406j": 1083, "2809": 1083, "6250": [1083, 1093, 1112, 1473], "9691": 1083, "hfftn": [1084, 1092], "last_dim_s": [1084, 1085, 1094, 1095, 1858], "ihfft2": 1084, "roundtrip": [1084, 1085, 1093, 1094, 1095], "ihfftn": [1085, 1091], "irfftn": [1085, 1094, 1099], "fft2": [1087, 1097], "two_ifft": [1087, 1088, 1092], "fftshift": 1089, "hfft": 1090, "6882j": 1090, "1625j": 1090, "hfft2": 1091, "8602j": 1093, "2031j": 1093, "1562": 1093, "3511": 1093, "7812": 1093, "2114": 1093, "irfft2": 1097, "wider": [1105, 1859, 1862, 1903, 1916], "49": [1105, 1244, 1884], "2500e": 1105, "1000e": 1105, "7656e": 1105, "lfloor": [1106, 1111, 1329, 1334, 1335, 1336, 1349, 1350, 1351, 1368, 1389, 1390, 1414, 1415, 1416, 1472, 1473, 1474, 1475, 1489, 1558, 1722, 1803], "rfloor": [1106, 1111, 1329, 1334, 1335, 1336, 1349, 1350, 1351, 1368, 1389, 1390, 1414, 1415, 1416, 1472, 1473, 1474, 1475, 1489, 1558, 1722, 1803], "8166": 1106, "5308": 1106, "2530": 1106, "2091": 1106, "7000": [1108, 1365, 1760], "3000": [1109, 1364, 1760, 1885], "entrywis": [1110, 1726], "modulu": [1110, 1248, 1726], "operatornam": [1111, 1224, 1225, 1226, 1227, 1244, 1252, 1337, 1338, 1344, 1381, 1382, 1388, 1412, 1452, 1470, 1760], "8750": [1112, 1473], "char": [1115, 1657, 1875, 1918], "parameter_and_buffer_dict": 1118, "tie_weight": [1118, 1643], "submodule_nam": [1118, 1643], "parameter_nam": [1118, 1643], "ty": [1118, 1643], "foo_ti": [1118, 1643], "new_a": [1118, 1643], "mutlipl": 1118, "grad_weight": [1118, 1887], "detached_param": 1118, "parameters_and_buffer_dict": 1118, "reparamater": [1118, 1643], "paramat": 1118, "intermediate_upd": 1119, "mutations_and_view": 1119, "intermeid": 1119, "inpt": 1119, "out1": [1119, 1860], "out2": [1119, 1860], "f_trace": 1119, "f_no_mutations_trac": 1119, "f_no_mutations_and_views_trac": 1119, "a_1": [1119, 1209], "view_1": 1119, "view_copi": [1119, 1860, 1902, 1924], "view_copy_1": 1119, "as_strid": [1119, 1858, 1860, 1902, 1920], "writ": 1119, "native_funct": [1119, 1858], "yaml": [1119, 1858], "aux": [1120, 1121, 1123, 1124, 1125, 1129], "my_loss_func": 1120, "y_pred": [1120, 1885], "loss_per_sampl": 1120, "y_true": 1120, "autodiff": [1123, 1124, 1125, 1247], "jacobian_f": [1123, 1124], "f_x": [1123, 1124], "jacboian": [1123, 1124], "expectedx": [1123, 1124], "expectedi": [1123, 1124], "_preallocate_and_copi": 1124, "stand": [1125, 1129, 1861, 1904, 1914], "jvp_out": 1125, "jvp_fn": 1126, "requr": 1126, "optimiz": [1128, 1859], "l1": [1128, 1381, 1382, 1452, 1529, 1574, 1618, 1627, 1893, 1898], "l2": [1128, 1382, 1412, 1452, 1660, 1661, 1662, 1663, 1665, 1667, 1673, 1674, 1676, 1881], "vjpfunc": 1129, "unsuccessfulli": [1130, 1849], "rummag": [1130, 1849], "batched_dot": [1130, 1849], "imposs": [1130, 1849, 1881], "jacobian_row": [1130, 1849], "get_vjp": [1130, 1849], "n1": [1130, 1728, 1849], "n0": [1130, 1849], "batched_pow": [1130, 1849], "autobatch": [1130, 1849], "sparse_grad": [1131, 1858, 1860], "tau": [1134, 1228, 1522, 1662, 1676, 1693, 1694, 1764, 1860], "elementari": [1134, 1882, 1890], "reflector": [1134, 1608, 1694], "household": [1134, 1228, 1608, 1694], "householder_product": [1134, 1608, 1693], "gel": [1134, 1234], "set_default_dtyp": 1136, "set_deterministic_debug_mod": [1137, 1842], "edge_ord": [1142, 1860], "mathbb": [1142, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1234, 1235, 1238, 1240, 1247, 1249, 1251, 1252, 1357, 1428, 1608], "rightarrow": 1142, "interior": 1142, "theorem": 1142, "h_l": 1142, "h_r": 1142, "neighbor": [1142, 1186, 1473, 1475, 1803], "xi_1": 1142, "xi_2": 1142, "approx": [1142, 1808, 1890], "outermost": 1142, "80": [1142, 1244, 1686, 1755, 1885, 1903], "halv": 1142, "coord": 1142, "54": [1146, 1383, 1767], "46": [1146, 1766], "hann_window": [1146, 1803, 1860, 1864, 1902], "hann": [1147, 1767], "hist": [1150, 1151, 1860], "bin_edg": [1150, 1151, 1860], "9524": 1150, "leftmost": [1151, 1877], "leg": 1155, "triangl": [1155, 1921], "hypotenus": 1155, "4031": 1155, "gammainc": [1157, 1917], "gammaincc": [1158, 1917], "index_reduce_": [1162, 1860], "realloc": 1163, "1427": 1163, "0231": 1163, "5414": 1163, "0009": 1163, "4664": [1163, 1823], "2647": 1163, "1228": 1163, "6571": 1163, "7230": 1163, "6004": 1163, "inferencemod": [1164, 1882], "bump": 1164, "_version": [1164, 1902], "multidimension": [1166, 1258, 1384], "8173": 1166, "0874": 1166, "1784": 1166, "3279": 1166, "7894": 1166, "4682": 1166, "7159": 1166, "1506": 1166, "4034": 1166, "3657": 1166, "0387": 1166, "9892": 1166, "1774": 1166, "3261": 1166, "3917": 1166, "4537": [1166, 1592], "7493": 1166, "1724": 1166, "2291": 1166, "5749": 1166, "2267": 1166, "7920": 1166, "3607": 1166, "3701": 1166, "3666": 1166, "5850": [1166, 1219], "7242": 1166, "9837": 1166, "1560": 1166, "2907": 1166, "6785": 1166, "5671": [1166, 1220], "5452": 1166, "6912": 1166, "5509": 1166, "1782": 1166, "9843": 1166, "7366": 1166, "5672": [1166, 1649], "5115": 1166, "4864": 1166, "2476": 1166, "4337": 1166, "6347": 1166, "1748": 1166, "3567": [1166, 1219], "6558": 1166, "2469": [1166, 1893], "5787": [1166, 1269], "typecheck": [1176, 1902], "mypi": [1176, 1861, 1862], "warn_alwai": 1177, "set_warn_alwai": 1177, "nonfinit": 1178, "test_el": [1180, 1860], "assume_uniqu": [1180, 1860], "0j": [1185, 1846], "nola": 1186, "envelop": 1186, "hop": [1186, 1803], "shorter": [1186, 1900, 1912], "griffin": 1186, "ieee": [1186, 1375, 1771, 1896], "tran": 1186, "assp": 1186, "vol": [1186, 1375, 1771], "pp": [1186, 1375, 1771], "236": 1186, "apr": 1186, "1984": 1186, "slide": [1186, 1334, 1335, 1336, 1368, 1414, 1415, 1416, 1472, 1514, 1544, 1545, 1546, 1588, 1711, 1712, 1803], "fft_size": 1186, "scriptmodul": [1187, 1188, 1193, 1196, 1198, 1199, 1200, 1204, 1205, 1659, 1859, 1861, 1870, 1900], "implic": [1187, 1204, 1912, 1916], "attributemodul": 1187, "names_ag": 1187, "9223372036854775807": [1187, 1634, 1872], "get_debug_st": 1188, "graphexecutorst": 1188, "_extra_fil": [1188, 1189, 1196, 1199, 1892], "save_to_buff": 1188, "add_modul": [1189, 1421], "init_weight": [1189, 1421, 1893], "buf": [1189, 1421], "20l": [1189, 1421], "1l": [1189, 1421], "5l": [1189, 1421], "code_with_const": 1189, "constmap": 1189, "extra_repr": [1189, 1421, 1887], "get_buff": [1189, 1421], "attributeerror": [1189, 1421, 1887, 1907], "get_extra_st": [1189, 1421], "set_extra_st": [1189, 1421], "get_paramet": [1189, 1421], "net_b": [1189, 1421], "net_c": [1189, 1421], "inlined_graph": 1189, "ipu": [1189, 1421], "missing_kei": [1189, 1421], "unexpected_kei": [1189, 1421], "remove_dupl": [1189, 1421], "named_children": [1189, 1421, 1893], "conv4": [1189, 1421], "conv5": [1189, 1421], "register_backward_hook": [1189, 1421, 1597], "register_full_backward_hook": [1189, 1421, 1893], "register_buff": [1189, 1421, 1594, 1859, 1861, 1887, 1893], "register_forward_hook": [1189, 1421, 1595, 1893], "with_kwarg": [1189, 1421], "register_module_forward_hook": [1189, 1421, 1893], "register_forward_pre_hook": [1189, 1358, 1421, 1596, 1893], "forward_pr": [1189, 1421], "register_module_forward_pre_hook": [1189, 1421, 1893], "register_module_full_backward_hook": [1189, 1421, 1593, 1882, 1893], "register_full_backward_pre_hook": [1189, 1421, 1893], "register_module_full_backward_pre_hook": [1189, 1421, 1893], "register_load_state_dict_post_hook": [1189, 1421], "incompatible_kei": [1189, 1421], "register_modul": [1189, 1421, 1599], "register_paramet": [1189, 1421, 1600, 1887, 1893], "register_state_dict_pre_hook": [1189, 1421], "keep_var": [1189, 1421], "finetun": [1189, 1421], "gan": [1189, 1421, 1609, 1642], "share_memori": [1189, 1421, 1895], "share_memory_": [1189, 1421, 1874, 1918], "shallow": [1189, 1358, 1421, 1469, 1470], "channels_last": [1189, 1421, 1601, 1919], "4d": [1189, 1340, 1368, 1385, 1421, 1473, 1514, 1531, 1558, 1589, 1710], "1913": [1189, 1421], "3420": [1189, 1421], "5113": [1189, 1421, 1823], "2325": [1189, 1221, 1421], "gpu1": [1189, 1421], "1914": [1189, 1421], "5112": [1189, 1421, 1885], "3741": [1189, 1421], "2382": [1189, 1310, 1421], "5593": [1189, 1421], "4443": [1189, 1421], "6122": [1189, 1421], "1150": [1189, 1421], "to_empti": [1189, 1421], "dst_type": [1189, 1421], "xpu": [1189, 1421, 1906], "set_to_non": [1189, 1421, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677, 1885], "the_typ": 1190, "the_valu": 1190, "script_bar": 1192, "addmod": 1192, "preserved_attr": 1193, "optimize_numer": 1193, "run_frozen_optim": 1193, "scripted_modul": [1193, 1200, 1898], "frozen_modul": 1193, "modified_tensor": 1193, "mymodule2": 1193, "dump_alias_db": 1193, "pdb": [1194, 1200, 1206, 1859, 1861], "training_method": 1194, "target_typ": 1195, "refin": [1195, 1876], "testcod": [1195, 1861], "key1": 1195, "val1": 1195, "key2": 1195, "val2": 1195, "_restore_shap": 1196, "scriptfunct": [1196, 1200, 1201, 1204, 1900], "readlin": [1196, 1260, 1904], "seek": [1196, 1260, 1904, 1907], "retrac": 1196, "rb": [1196, 1260], "extra_fil": [1196, 1199], "other_method": 1198, "lesser": [1198, 1882, 1884], "extent": [1198, 1884, 1916], "frozen_mod": 1198, "offlin": 1199, "_frames_up": 1200, "_rcb": 1200, "scriptdict": 1200, "scriptlist": 1200, "test_sum": 1200, "scripted_fn": [1200, 1859], "conv2": [1200, 1421, 1449, 1859, 1907], "some_entry_point": 1200, "python_only_fn": 1200, "testnnmodul": 1200, "pdt_model": 1200, "scripted_model": [1200, 1904], "un": [1202, 1344, 1907], "unfus": 1202, "nb": 1202, "check_trac": [1204, 1205], "check_input": [1204, 1205, 1859], "check_toler": [1204, 1205], "_force_outplac": [1204, 1205], "_module_class": [1204, 1205], "_compilation_unit": [1204, 1205], "compilationunit": [1204, 1205], "example_kwarg_input": 1204, "_store_input": [1204, 1205], "trace_modul": [1204, 1859, 1862], "untrack": 1204, "checker": [1204, 1205, 1862, 1900], "diverg": [1204, 1205, 1387, 1532, 1857, 1862], "traced_foo": [1204, 1859], "example_weight": [1204, 1205], "example_forward_input": [1204, 1205], "example_inputs_is_kwarg": 1205, "method2": 1205, "example_method2_input": 1205, "weighted_kernel_sum": 1205, "use_memory_effici": 1206, "memory_effici": 1206, "scriptabl": 1206, "kaiser": [1208, 1464, 1466, 1468], "i_0": [1208, 1209, 1770, 1823, 1917], "zeroth": [1208, 1770, 1917], "out_i": 1208, "kroneck": 1209, "a_0": 1209, "a_n": 1209, "b_0": 1209, "b_1": 1209, "b_n": 1209, "k_0": [1209, 1823], "k_1": 1209, "k_n": 1209, "j_0": 1209, "j_1": 1209, "j_n": 1209, "k_t": 1209, "i_t": [1209, 1391, 1675], "b_t": 1209, "j_t": 1209, "bmatrix": 1209, "a_": [1209, 1280, 1409, 1823], "cdot": [1209, 1234, 1246, 1337, 1338, 1356, 1357, 1379, 1387, 1424, 1425, 1426, 1427, 1428, 1464, 1502, 1525, 1700, 1803, 1917, 1923], "vdot": [1209, 1256, 1257, 1860, 1902], "ddot": [1209, 1256], "kth": 1210, "full_lik": [1214, 1860, 1864, 1902], "logarithm": [1217, 1222, 1248, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1275, 1344, 1504, 1539, 1783, 1917], "gamma": [1217, 1339, 1340, 1341, 1376, 1384, 1385, 1386, 1393, 1460, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1676, 1678, 1682, 1683, 1686, 1691, 1692, 1710, 1857, 1860, 1900, 1902, 1903, 1917], "5724": [1217, 1917], "1208": [1217, 1917], "mathrlap": [1218, 1224, 1225, 1226, 1227, 1235, 1238, 1247, 1249, 1251, 1252, 1608], "qquad": [1218, 1220, 1224, 1225, 1226, 1227, 1228, 1235, 1238, 1247, 1249, 1251, 1252, 1608], "eigenvalu": [1218, 1224, 1225, 1226, 1227, 1240, 1243, 1246, 1251, 1252, 1261, 1696, 1860], "resp": [1218, 1225, 1227, 1251, 1252, 1269], "5266": 1218, "9586": 1218, "0626j": 1218, "4160": 1218, "5895": 1218, "2322": 1218, "2976j": 1218, "4928": [1218, 1823], "4692e": 1218, "8747e": 1218, "check_error": [1219, 1230, 1232, 1237, 1250, 1860], "performantli": 1219, "3792": 1219, "9831j": 1219, "8757": 1219, "5425": 1219, "6374j": 1219, "kappa": 1220, "_p": [1220, 1430], "frobeniu": [1220, 1234, 1241, 1245, 1648], "nuc": [1220, 1241, 1245, 1258, 1619, 1628, 1648], "nuclear": [1220, 1241, 1245, 1648], "sigma_1": [1220, 1234, 1243, 1246], "sigma_n": 1220, "kappa_2": 1220, "kappa_": 1220, "4142": [1220, 1245, 1648, 1700], "1623": [1220, 1241], "2426": [1220, 1245, 1648], "7071": [1220, 1763], "5917": 1220, "9941": 1221, "5132": 1221, "5681": 1221, "4653": 1221, "4507": 1221, "4119": 1221, "6163": 1221, "1073": 1221, "3957": 1221, "9666": [1221, 1511], "0840": 1221, "3357": 1221, "2139": 1221, "slogdet": [1222, 1269, 1860, 1902], "0934": 1222, "1990": [1222, 1269], "4099": [1222, 1269], "7386": [1222, 1269], "diagonaliz": [1224, 1226], "eigenvector": [1224, 1225, 1261, 1860], "neq": [1224, 1225, 1228, 1252, 1322, 1424, 1426, 1661, 1662, 1663, 1665, 1667, 1673, 1674, 1676, 1680, 1807], "phi": [1224, 1225, 1252, 1371, 1518, 1807], "shall": [1224, 1225, 1252, 1610, 1614], "lambda_i": [1224, 1225, 1240], "lambda_j": [1224, 1225], "eigval": [1224, 1860], "9828": [1224, 1831, 1893], "3889j": 1224, "4617": 1224, "3010j": 1224, "1662": 1224, "7435j": 1224, "6139": 1224, "0562j": 1224, "1226": [1224, 1226], "5738j": [1224, 1226], "7537": [1224, 1226], "1286j": [1224, 1226], "9218": 1224, "1882": 1224, "2220j": 1224, "0270": 1224, "3867j": 1224, "7119e": 1224, "2841e": 1224, "uplo": [1225, 1227, 1860], "unitari": [1225, 1228, 1247, 1252, 1608, 1694], "eigvalsh": [1225, 1243], "9228": [1225, 1227], "2029": [1225, 1227], "0862j": [1225, 1227], "3464": [1225, 1227], "3277": [1225, 1227], "9415": [1225, 1227], "0846": 1225, "9964": 1225, "9170": 1225, "3898j": 1225, "0331j": 1225, "1062e": 1225, "5423e": 1225, "polynomi": [1226, 1227, 1689], "_n": [1226, 1227, 1229, 1608, 1887], "4576e": [1226, 1253], "5797": 1227, "4629": 1227, "1605": 1227, "3780": 1227, "1113": [1227, 1893], "7381": 1227, "h_1h_2": 1228, "h_k": 1228, "h_i": [1228, 1455], "_m": [1228, 1608], "tau_i": 1228, "8034": 1228, "4184j": 1228, "2588": 1228, "0174j": 1228, "6853": 1228, "7953j": 1228, "0790": 1228, "5620j": 1228, "6989j": 1228, "5360": 1228, "1193j": 1228, "3877": 1228, "6691j": 1228, "3512": 1228, "3024j": 1228, "4766": 1228, "5783j": 1228, "0361": [1228, 1893], "6587j": 1228, "6396": [1228, 1893], "1612j": 1228, "3693": 1228, "4481j": 1228, "aa": 1229, "pinv": [1229, 1234, 1698], "moor": [1229, 1246], "penros": [1229, 1246], "ainv": [1229, 1230, 1250, 1254], "1921e": 1229, "9073e": [1229, 1472], "5107e": 1229, "ldl": [1231, 1233], "indefinit": 1231, "ld": [1231, 1232, 1233, 1860], "sytrf": [1231, 1232], "ldl_solv": 1231, "ldl_factor_ex": [1231, 1233], "2079": [1231, 1232, 1917], "2414": [1231, 1232], "9428": [1231, 1232], "4554": [1231, 1232], "3264": [1231, 1232], "3823": [1231, 1232], "5884": [1231, 1232], "9595": [1231, 1232, 1763], "2695": [1231, 1232], "8513": [1231, 1232], "1633": [1231, 1232], "ldl_factor": 1232, "rcond": [1234, 1246, 1698, 1860], "_f": 1234, "gelsi": 1234, "gelsd": 1234, "gelss": 1234, "tridiagon": 1234, "sigma_i": [1234, 1252, 1807], "residu": [1234, 1261, 1860, 1893], "singular_valu": [1234, 1860], "lh": 1234, "rh": [1234, 1279], "0838": [1234, 1893], "2275": [1234, 1309], "3844": 1234, "5499": 1234, "1175": 1234, "9102": 1234, "0870": 1234, "6772": 1234, "7758": 1234, "5109": 1234, "4382": 1234, "3769": 1234, "1818": 1234, "3450": 1234, "0806": [1234, 1893], "3967": 1234, "3994": 1234, "1521": 1234, "1473": 1234, "9194": 1234, "0458": 1234, "6705": [1234, 1293], "1802": 1234, "4086": 1234, "5152e": 1234, "5007": 1235, "9755": 1235, "0489": 1235, "9644": [1235, 1288], "9605e": 1235, "0376e": 1235, "lu_factor_ex": [1236, 1278], "lu_unpack": [1236, 1278, 1860, 1902], "b1": 1236, "b2": [1236, 1885, 1891], "a_factor": 1236, "getrf": [1237, 1250], "adjoint": [1238, 1860, 1902, 1920, 1922], "_exp": 1240, "3891": 1240, "8660": 1240, "ord": [1241, 1245, 1258, 1648, 1860, 1862, 1902], "la": [1241, 1245, 1258, 1893], "2829": 1241, "2627": 1241, "0756": 1242, "4980": 1242, "6617": 1242, "4994": 1242, "9980": 1242, "2731": 1242, "8001": 1242, "2640": 1242, "4571": 1242, "5511": 1242, "0163": [1242, 1288], "5292": 1242, "4899": 1242, "0822": 1242, "2773": [1242, 1877], "varepsilon": [1243, 1246], "tol": [1243, 1261, 1860], "fewest": 1244, "nd": [1244, 1896], "bc": [1244, 1903], "75000": 1244, "148": 1244, "vector_norm": [1245, 1648], "matrix_norm": [1245, 1258, 1609, 1648], "7460": [1245, 1648], "3485": 1245, "8570e": 1245, "8480": 1245, "2361": [1245, 1648, 1649], "7417": [1245, 1648], "computation": [1246, 1890], "5495": [1246, 1309], "0979": 1246, "4092": 1246, "4132": [1246, 1769], "1143": 1246, "3662": 1246, "6374": 1246, "9294": 1246, "3269": [1246, 1893], "5745": [1246, 1801, 1802, 1844, 1845], "0382": [1246, 1310], "5922": 1246, "6759": 1246, "0600": 1246, "1933": 1246, "2090": 1246, "0903": 1246, "0817": 1246, "4752": [1246, 1806], "7124": 1246, "1631": 1246, "2272": 1246, "1356": 1246, "3933": 1246, "5023": 1246, "0308": 1246, "1725": 1246, "5216": 1246, "apinv": 1246, "5633e": 1246, "0830e": 1246, "wide": [1247, 1252, 1608, 1765, 1884, 1887, 1893, 1903], "51": [1247, 1419, 1706], "167": [1247, 1706], "68": [1247, 1706, 1859, 1861], "8571": [1247, 1706], "3943": [1247, 1706], "3314": [1247, 1706], "4286": [1247, 1706], "9029": [1247, 1706], "0343": [1247, 1706], "2857": [1247, 1706], "1714": [1247, 1706, 1893], "9429": [1247, 1706], "175": [1247, 1706], "q2": 1247, "r2": [1247, 1460], "6099e": 1247, "2158e": 1247, "logabsdet": [1248, 1860], "0032": 1248, "1219": [1248, 1725], "6690": 1248, "1161": 1248, "4053": 1248, "6218": [1248, 1820], "9273": 1248, "0082": 1248, "7576": 1248, "logdet": [1248, 1860, 1902], "linalg_slogdet": [1248, 1860, 1902], "2776": 1248, "solve_triangular": [1249, 1830], "expand_a": [1249, 1860, 1887, 1902, 1920], "rectangular": [1251, 1252, 1280, 1880], "triu_": [1251, 1860], "tril_": [1251, 1860], "full_matric": [1252, 1253, 1613, 1807, 1858, 1860], "vh": [1252, 1613, 1807, 1858, 1860], "gesvdj": [1252, 1253, 1807], "jacobi": 1252, "gesvda": [1252, 1253], "gesvd": [1252, 1253, 1807], "u_k": 1252, "v_k": 1252, "sigma_j": [1252, 1807], "eigendecomposit": 1252, "0486e": 1252, "0957e": 1252, "5139": 1253, "1087": 1253, "1066": 1253, "ind": [1254, 1255, 1860, 1888], "tensorsolv": 1254, "atensorinv": 1254, "movedim": [1255, 1295, 1860, 1888, 1902, 1920], "tensorinv": 1255, "vandermond": [1256, 1843], "pmatrix": 1256, "x_n": [1256, 1337, 1338, 1381, 1382, 1388, 1412, 1452, 1828, 1882], "125": [1256, 1439, 1843, 1860], "overlin": [1257, 1846], "3223": 1257, "2815": 1257, "1944": [1257, 1893], "4345": 1258, "pickle_modul": [1260, 1738], "weights_onli": [1260, 1856, 1871], "pickle_load_arg": 1260, "register_packag": 1260, "binaryio": [1260, 1738, 1904], "untrust": [1260, 1856, 1871, 1904], "unsaf": [1260, 1610, 1613, 1860, 1885, 1904], "tamper": [1260, 1904], "ram": [1260, 1885], "surg": 1260, "decod": [1260, 1464, 1465, 1466, 1601, 1904], "utf": [1260, 1900, 1904], "unicodedecodeerror": 1260, "codec": 1260, "0x": 1260, "latin1": 1260, "byte_arrai": 1260, "niter": [1261, 1696, 1808], "ortho_iparam": 1261, "ortho_fparam": 1261, "ortho_bparam": 1261, "knyazev": 1261, "knyazev2001": 1261, "stathopoulosetal2002": 1261, "converg": [1261, 1452, 1608, 1663, 1664, 1688, 1881, 1893, 1896], "precondition": 1261, "eigenpair": 1261, "criterion": [1261, 1337, 1338, 1355, 1357, 1382, 1388, 1412, 1413, 1424, 1425, 1426, 1452, 1453, 1469, 1470, 1503, 1681, 1713, 1889], "fep": 1261, "eigenproblem": 1261, "iparam": 1261, "fparam": 1261, "bparam": 1261, "ivar": 1261, "fvar": 1261, "bvar": 1261, "tvar": 1261, "istep": 1261, "converged_count": 1261, "rerr": 1261, "force_stop": 1261, "2001": 1261, "precondit": 1261, "eigensolv": 1261, "siam": 1261, "sci": 1261, "517": 1261, "541": 1261, "epub": 1261, "doi": [1261, 1375, 1771], "1137": 1261, "s1064827500366124": 1261, "andrea": 1261, "stathopoulo": 1261, "kesheng": 1261, "2002": [1261, 1771], "2165": 1261, "2182": 1261, "s1064827500370883": 1261, "duerschetal2018": 1261, "jed": 1261, "duersch": 1261, "meiyu": 1261, "shao": 1261, "chao": 1261, "ming": 1261, "gu": 1261, "c655": 1261, "c676": 1261, "17m1129830": 1261, "log_": [1262, 1263, 1264, 1265, 1860, 1875], "7767": 1262, "3234": 1262, "2156": 1262, "2411": 1262, "5739": 1262, "5637": 1262, "4640": 1262, "1952": 1262, "4226": 1262, "5204": [1262, 1715], "5224": 1263, "9354": 1263, "7257": 1263, "1301": 1263, "2820": 1263, "0290": 1263, "1392": 1263, "8857": 1263, "6476": 1263, "0090": [1264, 1323, 1702, 1917], "9923": 1264, "5372": 1264, "2492": 1264, "8653": 1264, "7055": 1264, "7705": 1264, "2225": 1264, "8419": 1265, "8003": [1265, 1897], "9971": 1265, "5287": 1265, "0490": 1265, "2483": 1265, "0042": 1265, "9196": 1265, "3504": [1265, 1823], "logsumexp": [1266, 1860, 1875, 1902, 1917], "3069": 1266, "6867": 1266, "8731": 1266, "30000": 1266, "1269e": 1266, "log_2": 1267, "logaddexp": [1267, 1860, 1902], "limits_": 1268, "42296738": 1268, "04462666": 1268, "86278635": 1268, "94622083": 1268, "05277811": 1268, "39202815": 1268, "83525007": 1268, "84492621": 1268, "06084887": 1268, "06844475": 1268, "2611": [1269, 1820], "9254": 1269, "6213": [1269, 1893], "6843": 1269, "3242": 1269, "9665": 1269, "4539": 1269, "0887": [1269, 1917], "1336": 1269, "4025": 1269, "7089": [1269, 1364], "9032": 1269, "3031": 1269, "2589": 1275, "1135": 1275, "5481": [1275, 1288, 1893], "9566": 1275, "sum_j": [1276, 1411, 1454, 1456, 1576, 1786, 1917], "0593": [1276, 1893], "5696": 1276, "6859e": 1276, "compute_pivot": 1278, "transposit": [1278, 1827, 1916], "perm": 1278, "a_lu": 1278, "5558": 1278, "1684": 1278, "1551": 1278, "1940": 1278, "6189": 1278, "5497": 1278, "4526": 1278, "2526": 1278, "3285": 1278, "7988": 1278, "7175": 1278, "9701": 1278, "2634": 1278, "9255": 1278, "3459": 1278, "00000e": 1279, "8312": 1279, "unpack_data": [1280, 1860], "unpack_pivot": [1280, 1860], "l_": [1280, 1326, 1330, 1334, 1338, 1349, 1350, 1351, 1352, 1389, 1414], "u_": [1280, 1661, 1665], "3552": [1282, 1512], "3825": 1282, "8297": 1282, "3477": 1282, "2035": [1282, 1801, 1802, 1844, 1845], "2252": [1282, 1917], "5002": 1282, "6248": [1282, 1291], "1307": 1282, "0608": [1282, 1780], "1244": 1282, "0139": 1282, "6763": 1286, "7445": 1286, "2369": 1286, "argmax": [1286, 1329, 1414, 1544, 1545, 1546, 1818, 1858, 1860, 1902], "max_indic": 1286, "2360": 1286, "2942": 1286, "1222": [1286, 1893], "8475": 1286, "1949": 1286, "1127": 1286, "6702": 1286, "5717": 1286, "9207": 1286, "1297": 1286, "8768": 1286, "6172": 1286, "6060": 1286, "2432": 1286, "3288": 1288, "3367": 1288, "nanmean": [1288, 1860, 1902], "3841": 1288, "6320": 1288, "4254": 1288, "7384": 1288, "0131": 1288, "6549": [1288, 1763], "4279": 1288, "3350": 1288, "7694": 1288, "5600": [1288, 1473], "0842": 1288, "9580": 1288, "3623": 1288, "2343": [1288, 1877], "5085": 1288, "4599": 1288, "1807": 1288, "5219": 1289, "5212": 1289, "2202": 1289, "2505": 1289, "3982": 1289, "9948": 1289, "3518": 1289, "3131": 1289, "3180": [1289, 1916], "6993": 1289, "0436": 1289, "0438": 1289, "2270": 1289, "2751": 1289, "7303": 1289, "2192": 1289, "3321": 1289, "2488": 1289, "0778": 1289, "9510": 1289, "7048": 1289, "4742": [1289, 1836, 1917], "7125": [1289, 1788], "plot": [1290, 1884, 1906, 1921], "t_0": [1290, 1681], "s_0": 1290, "s_": [1290, 1327, 1328, 1367, 1471], "g_0": 1290, "g_": [1290, 1665, 1675, 1676], "g_i": 1290, "t_i": 1290, "0d": [1290, 1413], "xy": 1290, "50276": 1290, "cartesian_prod": [1290, 1860, 1902], "grid_x": 1290, "grid_i": 1290, "dstack": [1290, 1860, 1902, 1916], "matplotlib": [1290, 1921], "pyplot": [1290, 1921], "plt": 1290, "plot_surfac": 1290, "6750": 1291, "0857": [1291, 1833], "7197": [1291, 1852], "argmin": [1291, 1858, 1860, 1902], "min_indic": [1291, 1860], "1334": 1291, "2803": 1291, "4644": [1291, 1801, 1802, 1844, 1845], "2635": [1291, 1893], "3651": 1291, "0384": 1291, "0128": 1291, "7015": 1291, "1153": 1291, "9849": 1291, "1458": [1291, 1917], "5788": 1291, "deduc": [1293, 1916], "4851": 1293, "5037": 1293, "3633": 1293, "0760": 1293, "3362": [1295, 1296], "8437": [1295, 1296], "9627": [1295, 1296], "1727": [1295, 1296], "5173": [1295, 1296], "1398": [1295, 1296], "mpsalloc": [1297, 1298], "metal": [1298, 1306, 1870, 1894], "mpsgraph": 1298, "wait_until_complet": [1302, 1303], "signpost": [1302, 1303, 1304], "xcode": 1303, "recommendedmaxworkingsets": 1306, "unlimit": [1306, 1885], "1321": 1309, "4370": 1309, "1289": 1309, "0527": 1309, "3077": [1309, 1797], "0881": 1309, "1259": 1309, "0284": 1309, "2015": [1310, 1880, 1893], "6087": 1310, "1494": 1310, "5491": 1310, "260": 1310, "8663": 1310, "3137": 1310, "0700": 1310, "8378": 1310, "5146": 1310, "1216": 1310, "5244": 1310, "5767": 1310, "1363": 1310, "5877": 1310, "5083": 1310, "1614": 1310, "1645": 1310, "7021": 1310, "0085": 1310, "0367": 1310, "1567": 1310, "4312": 1310, "1019": 1310, "4394": 1310, "8753": 1310, "_sampl": 1311, "thtensorrandom": 1311, "320": [1311, 1447], "0404": 1313, "6361": 1313, "multigammaln": [1314, 1917], "4028e": 1315, "1400e": 1315, "isnan": [1316, 1858, 1860, 1902, 1916], "midpoint": [1318, 1707], "weakli": [1320, 1321, 1917], "to_spars": [1321, 1784, 1860, 1897, 1902, 1916], "2262": [1323, 1702], "0682": [1323, 1702], "2866": [1323, 1702], "3940": [1323, 1702], "5x7": [1327, 1331], "7x7": [1327, 1331], "10x7": [1327, 1331], "cube": [1328, 1332, 1713], "d_": [1328, 1332, 1336, 1348, 1351, 1354, 1416, 1419, 1444, 1447, 1473, 1478, 1520, 1831, 1832, 1833, 1834], "5x7x9": [1328, 1332], "7x7x7": [1328, 1332], "7x9x8": [1328, 1332], "n_class": 1329, "cutoff": [1329, 1880], "div_valu": 1329, "head_bia": 1329, "edouard": 1329, "grave": [1329, 1344], "armand": 1329, "joulin": 1329, "moustapha": 1329, "ciss\u00e9": 1329, "grangier": 1329, "herv\u00e9": 1329, "j\u00e9gou": 1329, "imbalanc": 1329, "zipf": 1329, "law": 1329, "102": 1329, "1001": 1329, "1002": 1329, "_class": 1329, "maxunpool1d": [1330, 1414, 1547, 1842], "maxunpool2d": [1331, 1369, 1415, 1548, 1842], "maxunpool3d": [1332, 1370, 1416, 1549, 1842], "selu": [1333, 1366, 1513, 1860, 1880, 1900, 1902], "n_i": [1334, 1335, 1336, 1349, 1350, 1351, 1414, 1415, 1416, 1469, 1470], "c_j": [1334, 1335, 1336, 1414, 1415, 1416], "size_averag": [1337, 1338, 1355, 1357, 1381, 1387, 1388, 1412, 1413, 1424, 1425, 1426, 1428, 1435, 1452, 1453, 1469, 1492, 1493, 1501, 1503, 1528, 1532, 1533, 1543, 1551, 1552, 1553, 1554, 1555, 1563, 1574, 1575, 1586, 1860], "unreduc": [1337, 1338, 1357, 1382, 1388, 1412, 1428, 1452, 1470], "ell": [1337, 1338, 1357, 1381, 1382, 1388, 1412, 1428, 1452, 1470], "l_1": [1337, 1338, 1357, 1381, 1382, 1388, 1412, 1428, 1452, 1470], "l_n": [1337, 1338, 1357, 1381, 1382, 1388, 1412, 1428, 1452, 1470], "w_n": [1337, 1338, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], "y_n": [1337, 1338, 1357, 1381, 1382, 1388, 1412, 1428, 1452, 1828, 1882], "lim_": [1337, 1882], "secondli": 1337, "straight": [1337, 1522], "rescal": [1337, 1338, 1357, 1425, 1426, 1428, 1454, 1456, 1492, 1493, 1503, 1555, 1613, 1642], "nbatch": [1337, 1338], "pos_weight": [1338, 1493, 1860], "classif": [1338, 1344, 1357, 1424, 1426, 1428, 1453, 1504, 1857, 1880, 1908], "ell_c": 1338, "l_c": 1338, "p_c": 1338, "pai": [1338, 1493, 1899, 1920], "spacial": [1338, 1493], "random_": [1338, 1357, 1428, 1493, 1860, 1875, 1924], "hat": [1339, 1340, 1341, 1384, 1385, 1386, 1460], "terminologi": [1339, 1340, 1341, 1460], "tempor": [1339, 1341, 1344, 1460, 1473, 1504, 1531, 1589], "5d": [1341, 1386, 1473, 1520, 1531, 1558, 1589], "volumetr": [1341, 1460, 1473, 1520, 1531, 1589, 1590, 1591], "spatio": [1341, 1460], "in1_featur": 1342, "in2_featur": 1342, "in1": [1342, 1491], "in2": [1342, 1491], "blank": [1344, 1504, 1860, 1863], "zero_infin": [1344, 1504, 1860], "connectionist": [1344, 1504], "unseg": 1344, "longest": [1344, 1635, 1637, 1638, 1889], "input_length": [1344, 1504, 1860, 1889], "target_length": [1344, 1504, 1860], "s_n": 1344, "target_n": 1344, "unbatch": [1344, 1357, 1368, 1373, 1384, 1391, 1427, 1436, 1464, 1514], "s_min": 1344, "toronto": 1344, "edu": [1344, 1713], "icml_2006": 1344, "256": [1344, 1703, 1885, 1900], "background": [1344, 1352, 1520, 1558, 1895, 1912], "channel_shuffl": [1345, 1860, 1902], "_left": [1346, 1347, 1348, 1442, 1443, 1444, 1445, 1446, 1447, 1476, 1477, 1478, 1558], "_right": [1346, 1347, 1348, 1442, 1443, 1444, 1445, 1446, 1447, 1476, 1477, 1478, 1558], "0491": [1346, 1476], "7152": [1346, 1476], "0749": [1346, 1476], "3287": [1346, 1476], "8966": [1346, 1476], "1466": [1346, 1476], "2771": [1346, 1476], "6616": [1346, 1476], "4523": [1346, 1476], "1255": [1346, 1476], "6372": [1346, 1476, 1807], "1182": [1346, 1476], "8652": [1346, 1476], "_top": [1347, 1348, 1443, 1444, 1446, 1447, 1477, 1478, 1558], "_bottom": [1347, 1348, 1443, 1444, 1446, 1447, 1477, 1478, 1558], "6585": 1347, "4320": [1347, 1816], "8701": 1347, "4649": 1347, "_front": [1348, 1444, 1447, 1478, 1558], "_back": [1348, 1444, 1447, 1478, 1558], "_j": [1349, 1350], "star": [1349, 1350, 1351, 1862], "\u00e0": [1349, 1350, 1351, 1352, 1353, 1354, 1368, 1472], "trou": [1349, 1350, 1351, 1352, 1353, 1354, 1368, 1472], "harder": [1349, 1350, 1351, 1352, 1353, 1354, 1368, 1415, 1416, 1472], "nice": [1349, 1350, 1351, 1352, 1353, 1354, 1368, 1414, 1415, 1416, 1472, 1876, 1882, 1904], "prod_": [1350, 1351, 1353, 1354, 1367, 1471, 1667], "out_j": 1351, "deconvolut": [1352, 1353, 1354, 1498, 1499, 1500], "_pad": [1352, 1353, 1354], "dissimilar": [1355, 1381], "semi": [1355, 1381, 1880], "supervis": [1355, 1381], "vert": [1356, 1430, 1502], "_2": [1356, 1502, 1609, 1642], "ast_1": [1356, 1372], "ast_2": [1356, 1372], "ignore_index": [1357, 1428, 1503, 1555, 1860], "label_smooth": [1357, 1503, 1860], "unbalanc": [1357, 1428], "d_1": [1357, 1428, 1503, 1555], "d_2": [1357, 1428, 1503, 1555], "d_k": [1357, 1428, 1503, 1555], "_index": [1357, 1428], "logsoftmax": [1357, 1428, 1454, 1539], "nllloss": [1357, 1454, 1555, 1576, 1842], "blend": 1357, "smooth": [1357, 1382, 1452, 1457, 1503, 1674], "w_c": 1357, "truth": [1357, 1503, 1869, 1921], "rethink": [1357, 1503], "incept": [1357, 1503], "spectral_norm": [1358, 1632], "neuron": 1359, "detector": 1359, "dropout1d": [1361, 1860], "_freez": 1364, "sparseadam": [1364, 1903], "0251": 1364, "6902": [1364, 1704], "7172": 1364, "6431": 1364, "0748": 1364, "6969": 1364, "4970": 1364, "3448": 1364, "9685": 1364, "3677": 1364, "7265": 1364, "1685": 1364, "4362": 1364, "4004": [1364, 1788], "9400": 1364, "9124": 1364, "3616": 1364, "1151": 1364, "0309": 1364, "9315": 1364, "1655": [1364, 1885], "9897": 1364, "0635": 1364, "7895": 1364, "0364": 1364, "6778": 1364, "5803": 1364, "bag": [1365, 1512], "per_sample_weight": [1365, 1512, 1860], "embedding_sum": 1365, "8861": 1365, "4350": 1365, "0523": 1365, "1306": 1365, "5798": 1365, "0044": 1365, "7082": [1365, 1512], "2145": [1365, 1512], "6251": [1365, 1512], "6500": 1365, "satur": [1366, 1513], "alphadropout": [1366, 1486], "160": [1367, 1903], "unfold": [1368, 1860, 1902, 1920], "prod_d": [1368, 1472], "neighborhood": [1368, 1472], "col2im": [1368, 1858, 1860, 1902], "fold_param": [1368, 1472], "input_on": [1368, 1472], "output_ratio": [1369, 1370, 1515, 1516, 1860], "_random_sampl": [1369, 1370, 1515, 1516, 1860], "ben": [1369, 1370, 1515, 1516], "graham": [1369, 1370, 1515, 1516], "oh": [1369, 1370, 1515, 1516], "ow": [1369, 1370, 1515, 1516], "_ratio": [1369, 1370, 1516], "13x12": [1369, 1515], "kt": [1370, 1489, 1497, 1500, 1516, 1546], "ot": [1370, 1516], "13x12x11": [1370, 1516], "044715": [1371, 1518], "pack_sequ": [1373, 1391, 1436, 1637, 1639], "bias_ih": [1374, 1392, 1438], "bias_hh": [1374, 1392, 1438], "const": [1375, 1892], "homoscedast": [1375, 1517], "heteroscedast": [1375, 1517], "nix": 1375, "weigend": 1375, "1994": 1375, "icnn": 1375, "94": 1375, "orlando": 1375, "fl": 1375, "usa": [1375, 1921], "374138": 1375, "instancenorm": [1376, 1909], "shrinkag": [1377, 1458, 1523, 1579], "mobilenetv3": [1379, 1525], "_val": 1380, "l1loss": [1382, 1452, 1533], "outlier": [1382, 1452, 1907, 1908], "huber": [1382, 1452], "smoothl1loss": [1382, 1574], "insensit": 1383, "unused_argument1": 1383, "unused_argument2": 1383, "ingredi": [1384, 1385, 1386], "styliz": [1384, 1385, 1386], "rgb": [1385, 1386, 1921], "log_target": [1387, 1532, 1860], "pred": [1387, 1601, 1858, 1894, 1903, 1912], "kl": [1387, 1532, 1857], "summaris": 1387, "loss_pointwis": 1387, "batchmean": [1387, 1532], "kl_loss": 1387, "mae": 1388, "f_t": [1391, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "hf": [1391, 1392], "g_t": [1391, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "ig": [1391, 1392], "hg": [1391, 1392], "o_t": 1391, "ho": [1391, 1392], "c_t": 1391, "odot": 1391, "forget": [1391, 1861, 1862], "proj_siz": [1391, 1437], "1402": 1391, "c_0": [1391, 1392], "proj": 1391, "c_n": 1391, "w_ii": 1391, "w_if": 1391, "w_ig": 1391, "w_io": 1391, "w_hi": 1391, "w_hf": 1391, "w_hg": 1391, "w_ho": 1391, "b_ii": 1391, "b_if": 1391, "b_ig": 1391, "b_io": 1391, "b_hi": 1391, "b_hf": 1391, "b_hg": 1391, "b_ho": 1391, "weight_hr_l": 1391, "_revers": 1391, "h_1": 1392, "c_1": 1392, "time_step": 1392, "_shape": 1393, "sentence_length": 1393, "lazymodulemixin": [1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406], "cls_to_becom": [1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1604], "convtranspose1d": [1400, 1498, 1842, 1909], "convtranspose3d": [1402, 1500, 1842, 1909], "instancenorm1d": [1403, 1530, 1909], "instancenorm2d": [1404, 1530, 1909], "instancenorm3d": [1405, 1530, 1909], "uninitializedparamet": [1406, 1592, 1857], "lrn": 1409, "signal_2d": 1409, "signal_4d": 1409, "output_2d": 1409, "output_4d": 1409, "x_j": [1411, 1454, 1456, 1576, 1786, 1890, 1917], "80827": [1417, 1418, 1419], "unpool": [1417, 1418, 1419], "maxpool3d": [1419, 1546, 1549, 1842, 1909], "unpooled_output": 1419, "t_destin": 1421, "lrelu": [1422, 1893], "hing": [1424, 1426], "sum_i": [1425, 1426, 1453], "nelement": [1425, 1453], "jointli": 1427, "concat": [1427, 1860, 1902], "head_1": 1427, "head_h": 1427, "head_i": 1427, "qw_i": 1427, "kw_i": 1427, "vw_i": 1427, "scaled_dot_product_attent": [1427, 1860, 1902], "inference_mod": [1427, 1468], "nestedtensor": [1427, 1468, 1877], "multihead_attn": 1427, "e_q": 1427, "e_k": 1427, "e_v": 1427, "_head": [1427, 1464], "merge_mask": 1427, "mask_typ": 1427, "merged_mask": 1427, "nll": 1428, "crossentropyloss": [1428, 1503], "num_paramet": 1429, "nchannel": 1429, "decai": [1429, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1676, 1679, 1683, 1685, 1686, 1689, 1690, 1692, 1764, 1903], "legitim": [1429, 1520, 1888], "vert_p": 1430, "fromkei": 1431, "popitem": [1431, 1902], "setdefault": [1431, 1902], "upscale_factor": [1433, 1561, 1860], "upscal": 1433, "shi": [1433, 1434], "2016": [1433, 1434, 1470], "_factor": [1433, 1434, 1473, 1474, 1475], "pixel_shuffl": [1433, 1860, 1902, 1909], "downscale_factor": [1434, 1562, 1860], "pixelshuffl": [1434, 1561, 1562, 1909], "downscal": 1434, "pixel_unshuffl": [1434, 1860, 1902, 1909], "log_input": [1435, 1563, 1860], "poisson": [1435, 1563, 1764, 1857, 1860, 1902], "stirl": [1435, 1563], "hh": [1436, 1438], "flatten_paramet": 1437, "3333333333333333": [1439, 1679, 1685, 1860], "leaki": [1439, 1568, 1880], "rectifi": [1439, 1440, 1565, 1880], "liner": 1439, "empir": 1439, "1505": 1439, "00853": 1439, "crelu": 1440, "1603": 1440, "05201": 1440, "480": 1447, "6732632423543772848170429916717": [1448, 1571], "0507009873554804934193349852946": [1448, 1571], "kaiming_norm": 1448, "kaiming_normal_": [1448, 1857, 1864, 1880], "initialis": 1448, "calculate_gain": [1448, 1857, 1864, 1880], "modulelist": [1449, 1893], "cascad": 1449, "relu2": [1449, 1592], "swish": [1450, 1573], "coin": [1450, 1573], "explod": 1452, "cnn": [1452, 1907], "ross": 1452, "girshick": 1452, "quadrat": [1452, 1889], "huberloss": [1452, 1529], "w_j": 1455, "soft": [1458, 1522, 1579], "softshrinkag": 1458, "convert_sync_batchnorm": 1460, "r1": 1460, "sync_bn_network": 1460, "ddp_sync_bn_network": 1460, "sync_bn_modul": 1460, "d_model": [1464, 1465, 1466, 1467, 1468], "nhead": [1464, 1465, 1466, 1467, 1468], "num_encoder_lay": 1464, "num_decoder_lay": 1464, "dim_feedforward": [1464, 1466, 1468], "custom_encod": 1464, "custom_decod": 1464, "layer_norm_ep": [1464, 1466, 1468], "norm_first": [1464, 1466, 1468], "ashish": [1464, 1466, 1468], "vaswani": [1464, 1466, 1468], "noam": [1464, 1466, 1468], "shazeer": [1464, 1466, 1468], "niki": [1464, 1466, 1468], "parmar": [1464, 1466, 1468], "jakob": [1464, 1466, 1468], "uszkoreit": [1464, 1466, 1468], "llion": [1464, 1466, 1468], "jone": [1464, 1466, 1468], "aidan": [1464, 1466, 1468], "gomez": [1464, 1466, 1468], "lukasz": [1464, 1466, 1468], "illia": [1464, 1466, 1468], "polosukhin": [1464, 1466, 1468], "6010": [1464, 1466, 1468], "feedforward": [1464, 1466, 1468, 1880], "transformer_model": 1464, "word_language_model": 1464, "src_mask": [1464, 1468], "tgt_mask": [1464, 1465, 1466], "memory_mask": [1464, 1465, 1466], "src_key_padding_mask": [1464, 1467, 1468], "tgt_key_padding_mask": [1464, 1465, 1466], "memory_key_padding_mask": [1464, 1465, 1466], "_mask": [1464, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631], "_key_padding_mask": 1464, "generate_square_subsequent_mask": 1464, "sz": 1464, "decoder_lay": [1465, 1466], "transformerdecoderlay": 1465, "transformer_decod": 1465, "tgt_is_caus": [1465, 1466], "memory_is_caus": [1465, 1466], "attn": [1466, 1468], "encoder_lay": [1467, 1468], "enable_nested_tensor": 1467, "mask_check": 1467, "1810": 1467, "04805": 1467, "transformerencoderlay": 1467, "transformer_encod": 1467, "flashattent": [1468, 1570], "triplet": [1469, 1470], "x3": 1469, "balnta": [1469, 1470], "riba": [1469, 1470], "a_i": [1469, 1470, 1766], "p_i": [1469, 1470], "rm": [1469, 1470], "bf": [1469, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "rvert_p": [1469, 1556], "tripletmarginwithdistanceloss": [1469, 1587], "triplet_loss": [1469, 1470], "distance_funct": [1470, 1587], "l_i": 1470, "tripletmarginloss": [1470, 1586], "l_p": [1470, 1556], "pairwisedist": [1470, 1559], "penal": [1470, 1893], "distant": 1470, "anchor_id": 1470, "positive_id": 1470, "negative_id": 1470, "l_infin": 1470, "bmva": 1470, "bmvc": 1470, "paper119": 1470, "unflattened_s": 1471, "namedtensor": 1471, "namedshap": 1471, "u_1": 1471, "u_n": 1471, "u_i": 1471, "im2col": [1472, 1860, 1902], "fold": [1472, 1808, 1860, 1870, 1900, 1910, 1916], "2x3": 1472, "3x4": 1472, "inp_unf": 1472, "out_unf": 1472, "recompute_scale_factor": [1473, 1531], "bicub": [1473, 1520, 1531, 1589, 1842], "trilinear": [1473, 1520, 1531, 1589, 1842], "input_3x3": 1473, "4375": 1473, "8125": 1473, "9375": 1473, "2400": [1473, 1823], "1200": [1473, 1735, 1885], "8800": 1473, "4400": [1473, 1823], "7200": 1473, "0400": 1473, "2800": [1473, 1758], "3600": 1473, "5200": 1473, "6400": 1473, "1678": 1477, "4418": 1477, "9466": [1477, 1917], "9604": 1477, "4219": 1477, "5241": 1477, "9162": 1477, "5436": [1477, 1823], "6446": 1477, "adaptiveavgpool1d": [1479, 1909], "tripl": [1481, 1484], "adaptivemaxpool1d": 1482, "adaptivemaxpool2d": [1483, 1842], "adaptivemaxpool3d": 1484, "ill": [1485, 1896], "avgpool1d": [1487, 1909], "avgpool3d": [1489, 1842, 1909], "iT": [1489, 1497, 1500], "padt": [1489, 1497, 1500], "score": [1493, 1570, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628, 1857], "out_padw": [1498, 1499, 1500], "out_padh": [1499, 1500], "out_padt": 1500, "cosineembeddingloss": 1501, "ctcloss": [1504, 1842], "charact": [1504, 1755, 1859, 1862, 1876, 1912], "elu": [1510, 1860, 1900, 1902, 1909], "embedding_matrix": [1511, 1512], "8490": 1511, "9625": 1511, "6753": 1511, "7761": 1511, "6108": 1511, "6246": 1511, "9751": 1511, "3618": 1511, "4161": [1511, 1916], "2419": 1511, "7383": 1511, "0237": 1511, "7794": 1511, "0528": 1511, "3385": 1511, "8612": 1511, "1867": 1511, "5384": 1511, "8720": 1511, "6262": 1511, "7471": 1511, "embeddingbag": [1512, 1842, 1907, 1909, 1922], "3397": 1512, "5545": 1512, "5893": 1512, "4386": 1512, "5882": 1512, "featurealphadropout": 1513, "gaussiannllloss": 1517, "border": 1520, "affine_grid": [1520, 1860], "extrema": 1520, "pil": [1520, 1531], "overshoot": [1520, 1531, 1589], "gumbel": [1522, 1857], "y_hard": 1522, "y_soft": 1522, "hardtanh": [1527, 1858, 1860, 1870, 1902, 1909], "hingeembeddingloss": 1528, "use_input_stat": [1530, 1860], "antialia": 1531, "anti": 1531, "pillow": [1531, 1921], "buggi": 1531, "inter_nearest": 1531, "kldivloss": 1532, "batchsiz": [1532, 1789, 1790, 1791, 1793, 1794, 1916], "leaky_relu": [1536, 1858, 1860, 1880, 1902, 1909], "localresponsenorm": 1538, "_stacklevel": [1539, 1576, 1577, 1860], "lppool1d": 1541, "lppool2d": 1542, "marginrankingloss": 1543, "max_unpool1d": [1544, 1860], "multimarginloss": 1552, "multilabelmarginloss": 1553, "multilabelsoftmarginloss": 1554, "n_0": 1556, "n_": 1556, "n_k": 1556, "everywher": [1557, 1803, 1903], "constantpad2d": 1558, "reflectionpad2d": [1558, 1842], "replicationpad2d": [1558, 1842], "t4d": 1558, "p1d": 1558, "p2d": 1558, "p3d": 1558, "pixelunshuffl": [1562, 1909], "poissonnllloss": 1563, "rrelu": [1569, 1860, 1902], "dropout_p": [1570, 1860], "masked_fil": [1570, 1860, 1875, 1877, 1902], "ev": 1570, "legend": 1570, "softmarginloss": 1575, "module_kwarg": 1585, "upsample_trilinear": 1590, "fo": 1590, "spatia": 1591, "mixin": [1592, 1857], "dry": 1592, "lazymlp": 1592, "lazylinear": 1592, "lazy_mlp": 1592, "8832e": 1592, "5636e": 1592, "1598e": 1592, "5637e": 1592, "8788e": 1592, "0042e": 1592, "0019": 1592, "lazymodul": 1592, "full_mlp": 1592, "3837": [1592, 1704], "0907": 1592, "6708": 1592, "5223": 1592, "9028": 1592, "2851": 1592, "6813": 1592, "5766": 1592, "8678": 1592, "1320": 1592, "2938": 1592, "0679": [1592, 1833], "2793": [1592, 1649], "1088": 1592, "1795": 1592, "2301": 1592, "2807": 1592, "2479": 1592, "1091": 1592, "has_uninitialized_param": 1592, "initialize_paramet": 1592, "register_backward_pre_hook": 1598, "check_reduct": 1601, "delay_all_reduce_named_param": 1601, "param_to_hook_all_reduc": 1601, "optimizer_param": 1601, "loss_func": [1601, 1912], "consume_prefix_in_state_dict_if_pres": 1601, "nccl2": 1601, "dictat": [1601, 1862], "megabyt": 1601, "mb": [1601, 1885], "detach_": [1601, 1860, 1875, 1909, 1916], "ddp_logging_data": 1601, "can_set_static_graph": 1601, "model_ddp": 1601, "_get_ddp_logging_data": 1601, "divide_by_initial_world_s": 1601, "syncbatchnorm": 1601, "exhaust": 1601, "deplet": 1601, "pariti": 1601, "discrep": [1601, 1713, 1890], "another_input": 1601, "predivid": 1601, "encode_and_decod": 1601, "encoded_tensor": 1601, "decoded_tensor": 1601, "error_if_nonfinit": 1605, "foreach": [1605, 1606, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676, 1903], "clip_valu": 1606, "orthogonal_map": 1608, "use_trivi": 1608, "qq": 1608, "matrix_exp": [1608, 1860, 1902], "caylei": 1608, "thin": [1608, 1706], "manifold": 1608, "register_parametr": [1608, 1609, 1610, 1611, 1642, 1878], "orth_linear": 1608, "parametrizedlinear": [1608, 1609], "moduledict": [1608, 1609, 1861, 1893], "parametrizationlist": [1608, 1609, 1613], "_orthogon": 1608, "9332e": 1608, "n_power_iter": [1609, 1642], "sn": [1609, 1642], "discrimin": [1609, 1642], "adversari": [1609, 1642], "lipschitz": 1609, "reimplement": [1609, 1642], "_spectralnorm": 1609, "convtranspos": [1609, 1642], "snm": 1609, "0081": 1609, "amaxbackward0": 1609, "original0": [1610, 1613], "original1": [1610, 1613], "tensor_nam": [1610, 1612, 1613, 1614], "right_invers": [1610, 1613], "out_rnn": 1611, "rnn_cell": 1611, "simplic": [1613, 1913], "inbuilt": 1613, "unparametr": 1613, "rankon": 1613, "surject": 1613, "s0_sqrt": 1613, "linear_rank_on": 1613, "matrix_rank": 1613, "leave_parametr": 1614, "unparametris": 1614, "prune": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1916], "skeleton": 1615, "compute_mask": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622], "importance_scor": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1627, 1628], "apply_mask": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622], "pruned_tensor": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622], "default_mask": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622], "_orig": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631], "undon": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1631], "unprun": [1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630], "indexerror": [1619, 1621], "basepruningmethod": [1620, 1626], "add_pruning_method": 1620, "pruning_typ": [1620, 1624], "unstructur": [1620, 1624], "ravel": [1620, 1860, 1902], "nonmask": 1620, "bias_mask": [1623, 1625], "pruning_method": 1624, "typeerror": [1624, 1887, 1905, 1923, 1927], "parameters_to_prun": 1624, "l1unstructur": 1624, "parameters_to_vector": 1624, "forward_pre_hook": [1626, 1893], "random_unstructur": [1626, 1631], "odict_kei": 1627, "weight_orig": 1627, "weight_mask": [1627, 1630], "columns_prun": 1629, "t_modul": [1632, 1633, 1642, 1645], "weight_norm": 1633, "sorted_indic": [1634, 1636, 1637, 1639], "unsorted_indic": [1634, 1636, 1637, 1639], "abc": [1634, 1862], "axbc": 1634, "throughout": [1634, 1890, 1893, 1907], "conform": [1634, 1893], "is_cuda": [1634, 1875, 1902, 1918], "enforce_sort": [1635, 1636, 1637], "unsort": [1635, 1636, 1742], "shortest": 1635, "uncondition": [1635, 1856, 1887, 1927], "pad_sequ": [1636, 1640, 1860, 1902], "padding_valu": [1637, 1638, 1860], "total_length": [1637, 1889], "seq_unpack": 1637, "lens_unpack": 1637, "packed_sequ": 1639, "unpacked_sequ": 1639, "padded_sequ": 1640, "unpad": 1640, "unstack": 1640, "as_tensor": [1640, 1821, 1860, 1877, 1887, 1902, 1921, 1922, 1923], "unpadded_sequ": 1640, "module_cl": [1641, 1912], "5846e": 1641, "29": [1641, 1771, 1900], "8307e": 1641, "5250e": 1641, "1210e": 1641, "4677e": 1641, "5915e": 1641, "4013e": 1641, "weight_u": 1642, "parameters_and_buff": 1643, "decoupl": [1645, 1664], "weight_g": [1645, 1860], "weight_v": 1645, "1602": 1645, "07868": 1645, "as_tupl": [1647, 1852], "complexfloat": [1648, 1657], "0425": 1649, "7969": 1649, "2925": 1649, "7229": 1649, "2134": 1649, "0505": 1649, "1408": 1649, "0563": 1649, "0566": 1649, "0732": [1649, 1823], "0687": 1649, "1177": 1649, "2303": 1649, "1552": 1649, "6148": 1649, "6535": 1649, "8318": 1649, "3987": 1649, "9544": [1649, 1714], "6048": 1649, "7909": 1649, "120": [1651, 1921], "op_level_debug": 1654, "model_proto": [1655, 1656], "input_adapt": 1655, "output_adapt": 1655, "diagnostic_context": 1655, "adapt_torch_inputs_to_onnx": 1655, "model_arg": [1655, 1900], "model_kwarg": [1655, 1900], "xdoctest": 1655, "torch_doctest_onnx": 1655, "func_with_nested_input_structur": 1655, "x_dict": 1655, "y_tupl": 1655, "y3": 1655, "export_output": [1655, 1656], "adapt_torch_outputs_to_onnx": 1655, "model_output": 1655, "func_returning_tupl": 1655, "pt_output": 1655, "diagnosticcontext": 1655, "modelproto": [1655, 1656], "protobuf": [1655, 1656, 1900], "exportoutput": [1656, 1900], "bufferediobas": 1656, "protobufexportoutputseri": 1656, "serializetostr": 1656, "exported_model": 1656, "from_valu": 1657, "onnx_typ": 1657, "tensorprotodatatyp": 1657, "torch_c_value_with_type_float": 1657, "from_dtyp": 1657, "jit_type_bas": 1657, "safer": [1657, 1869], "onnxexportererror": [1657, 1900], "symbolicvalueerror": 1657, "onnx_compat": 1657, "scalar_nam": 1657, "complexhalf": 1657, "complexdoubl": 1657, "torch_nam": 1657, "int8_t": 1657, "int64_t": 1657, "int16_t": 1657, "verif": [1658, 1659, 1900], "input_arg": [1658, 1900], "params_dict": 1658, "export_opt": [1658, 1900], "_excluded_node_kind": 1658, "frozenset": [1658, 1862], "scalarimplicit": [1658, 1902], "prim": [1658, 1859, 1900, 1902], "listconstruct": [1658, 1859], "all_mismatch_leaf_graph_info": 1658, "essential_node_count": 1658, "essential_node_kind": 1658, "export_repro": 1658, "repro_dir": 1658, "test_": 1658, "test_data_set_0": 1658, "input_0": [1658, 1900], "pb": [1658, 1900], "input_1": [1658, 1900], "output_0": 1658, "output_1": 1658, "find_mismatch": [1658, 1900], "verificationopt": [1658, 1900], "find_partit": 1658, "has_mismatch": 1658, "pretty_print_mismatch": 1658, "pretty_print_tre": 1658, "graph_info": [1658, 1900], "__2": [1658, 1900], "__1": [1658, 1900], "__3": [1658, 1900], "110": [1658, 1900], "verify_export": 1658, "onnx_graph": 1658, "onnx_out": 1658, "pt_out": 1658, "ignore_non": 1659, "check_shap": 1659, "check_dtyp": [1659, 1923], "onnxbackend": 1659, "onnx_runtime_cpu": 1659, "remained_onnx_input_idx": 1659, "acceptable_error_percentag": 1659, "percentag": [1659, 1688, 1764], "weight_decai": [1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1676, 1893], "1e6": 1660, "impair": [1660, 1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "register_step_post_hook": [1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677], "removeablehandl": [1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677], "register_step_pre_hook": [1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677], "new_arg": [1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677], "new_kwarg": [1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1673, 1674, 1675, 1676, 1677], "altogeth": [1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1672, 1673, 1674, 1675, 1676, 1677], "rho": 1661, "110mm": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "4pt": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "textbf": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "theta_0": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "v_0": [1661, 1663, 1664, 1667, 1673, 1674], "leftarrow": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "u_0": [1661, 1665], "hspace": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "5mm": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "nabla_": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "theta_": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "10mm": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "v_t": [1661, 1663, 1664, 1667, 1673, 1674], "v_": [1661, 1663, 1664, 1667, 1673, 1674, 1676], "2_t": [1661, 1662, 1663, 1664, 1667, 1673, 1674], "21mm": 1661, "u_t": [1661, 1665], "theta_t": [1661, 1662, 1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "lr_decai": 1662, "initial_accumulator_valu": 1662, "12mm": [1662, 1673], "_sum_0": 1662, "tild": [1662, 1674], "_sum_t": 1662, "_sum_": 1662, "subgradi": 1662, "999": [1663, 1664, 1665, 1667, 1673, 1677, 1898, 1903], "amsgrad": [1663, 1664], "beta_1": [1663, 1664, 1665, 1667, 1673], "beta_2": [1663, 1664, 1665, 1667, 1673], "13mm": [1663, 1664, 1665, 1667, 1673, 1674, 1675, 1676], "textit": [1663, 1664, 1676], "m_0": [1663, 1664, 1665, 1667, 1673], "widehat": [1663, 1664, 1667, 1673], "m_t": [1663, 1664, 1665, 1667, 1673], "m_": [1663, 1664, 1665, 1667, 1673], "ungraph": [1663, 1664], "002": [1665, 1667], "t_1": 1665, "2e": [1665, 1667], "max_it": 1666, "max_ev": 1666, "tolerance_grad": 1666, "tolerance_chang": 1666, "history_s": 1666, "line_search_fn": 1666, "bfg": 1666, "minfunc": 1666, "intens": [1666, 1896], "param_byt": 1666, "strong_wolf": 1666, "reevalu": [1666, 1671, 1677, 1903], "momentum_decai": 1667, "004": 1667, "gamma_t": 1667, "psi": [1667, 1917], "mu_t": 1667, "96": 1667, "mu_": 1667, "11mm": 1667, "incorpor": [1667, 1907], "nesterov": [1667, 1676], "4e": 1667, "weightdecai": 1673, "18mm": 1673, "rho_": 1673, "6mm": 1673, "rho_t": 1673, "t_2": 1673, "l_t": 1673, "adamw": [1673, 1903], "_0": [1674, 1888, 1904], "av": 1674, "8mm": 1674, "3mm": 1674, "lectur": 1674, "hinton": 1674, "step_siz": [1675, 1692], "resili": [1675, 1896], "eta_": [1675, 1680, 1681], "etaplu": 1675, "etaminu": 1675, "gamma_": [1675, 1917], "0_": 1675, "eta_0": 1675, "i_": [1675, 1823], "15mm": [1675, 1676], "eta_t": [1675, 1680, 1681], "dampen": 1676, "sutskev": 1676, "veloc": 1676, "conflat": 1677, "is_spars": [1677, 1875, 1902, 1916, 1918], "maskedtensor": [1677, 1916], "gain": [1677, 1880], "rig": 1677, "insist": 1677, "lr_schedul": [1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1903], "chainabl": [1678, 1688], "081": 1678, "729": [1678, 1691], "6561": [1678, 1847], "59049": 1678, "scheduler1": [1678, 1691, 1903], "constantlr": [1678, 1691], "total_it": [1678, 1679, 1685, 1689, 1691], "scheduler2": [1678, 1691, 1903], "exponentiallr": [1678, 1691, 1903], "get_last_lr": [1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692], "print_lr": [1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692], "is_verbos": [1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692], "__dict__": [1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692], "last_epoch": [1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692], "mileston": [1679, 1685, 1686, 1691, 1903], "simultan": [1679, 1680, 1685, 1686, 1692, 1882, 1912], "025": [1679, 1685], "t_max": [1680, 1903], "eta_min": [1680, 1681], "anneal": [1680, 1681, 1688, 1903], "cur": [1680, 1681], "sgdr": [1680, 1681], "2k": 1680, "sole": 1680, "t_mult": 1681, "interleav": 1681, "base_lr": [1682, 1688], "max_lr": [1682, 1688], "step_size_up": 1682, "step_size_down": 1682, "scale_fn": 1682, "scale_mod": 1682, "cycle_momentum": [1682, 1688], "base_momentum": [1682, 1688], "max_momentum": [1682, 1688], "cyclic": 1682, "amplitud": [1682, 1688], "triangular2": 1682, "exp_rang": 1682, "bckenstler": 1682, "train_batch": [1682, 1688], "get_lr": 1682, "lr_lambda": [1684, 1687], "lambda1": 1684, "lambda2": 1684, "start_factor": 1685, "end_factor": 1685, "03125": 1685, "0375": 1685, "04375": 1685, "005": [1686, 1692], "lmbda": 1687, "total_step": 1688, "steps_per_epoch": 1688, "pct_start": 1688, "anneal_strategi": [1688, 1903], "div_factor": 1688, "final_div_factor": 1688, "three_phas": 1688, "1cycl": 1688, "fastai": 1688, "unpublish": 1688, "initial_lr": 1688, "min_lr": [1688, 1690], "1e4": 1688, "annihil": 1688, "00075": 1689, "00050": 1689, "00025": 1689, "patienc": 1690, "threshold_mod": 1690, "cooldown": 1690, "stagnat": 1690, "new_lr": 1690, "hasn": [1690, 1872, 1904], "optimum": 1690, "dynamic_threshold": 1690, "val_loss": 1690, "81": 1691, "mn": 1694, "pca": [1696, 1916], "overestim": [1696, 1808], "nathan": [1696, 1808], "halko": [1696, 1808], "gunnar": [1696, 1808], "martinsson": [1696, 1808], "tropp": [1696, 1808], "probabilist": [1696, 1808], "0909": [1696, 1808], "4061": [1696, 1808], "na": [1696, 1808], "cmath": [1700, 1860], "4142j": 1700, "4331": 1703, "2475": [1703, 1806], "6834": 1703, "2791": 1703, "1875": 1703, "5561": 1703, "4670": 1703, "5428": 1704, "5854": 1704, "5261": [1704, 1807], "1857": 1704, "2498": 1704, "1646": [1704, 1885], "0705": 1704, "0629": 1704, "2962": 1704, "0821": [1704, 1764], "1831": 1704, "type1": [1705, 1860], "type2": [1705, 1860], "2117": 1707, "9765": 1707, "1707": 1707, "4884": 1707, "5661": 1707, "5795": 1707, "5280": 1707, "9206": 1707, "quantization_schem": [1708, 1709, 1710, 1711, 1712], "int_repr": [1708, 1709, 1860, 1902], "nchw": [1710, 1921], "qx": [1710, 1711, 1712], "00001": 1710, "max_pool1d": [1711, 1860, 1902, 1909], "max_pool2d": [1712, 1860, 1902, 1909], "quasirandom": 1713, "scrambl": 1713, "sobol": 1713, "quasi": 1713, "21201": 1713, "web": 1713, "unsw": 1713, "au": [1713, 1904], "fkuo": 1713, "art": 1713, "owen": 1713, "niederreit": 1713, "xing": 1713, "466": 1713, "489": 1713, "decemb": 1713, "1998": 1713, "zh": 1713, "vychisl": 1713, "phy": 1713, "784": 1713, "802": 1713, "1967": 1713, "soboleng": 1713, "draw_base2": 1713, "base2": 1713, "fast_forward": 1713, "142": 1714, "283": 1714, "570": 1714, "359": 1714, "9894": 1714, "2503": 1715, "3525": 1715, "5673": 1715, "8237": 1715, "5781": 1715, "6879": 1715, "3816": 1715, "7249": 1715, "0998": 1715, "1436": 1719, "9966": 1719, "3426": 1719, "6366": 1719, "5954": 1719, "8929": 1719, "0923": 1719, "1719": 1719, "4709": 1719, "1996": 1719, "4595": 1725, "4314": 1725, "flat": [1728, 1771, 1860, 1877, 1900], "n2": 1728, "n3": 1728, "negat": [1731, 1815, 1862], "is_neg": [1731, 1860, 1902], "equidist": 1735, "inexact": 1735, "1234567": 1735, "1230": 1735, "vstack": [1736, 1860, 1902, 1916], "0370": 1737, "2970": 1737, "5420": 1737, "9105": 1737, "8351": 1737, "pickle_protocol": [1738, 1904], "default_protocol": 1738, "_use_new_zipfile_seri": 1738, "zipfil": [1738, 1904], "sorted_sequ": [1742, 1860], "sorter": [1742, 1860], "sorted_sequence_1d": 1742, "select_copi": [1744, 1860, 1902], "92701": [1746, 1919], "complaint": 1747, "bfloat16_3x": 1750, "denorm": [1751, 1896], "sse3": 1751, "323": 1751, "88131e": 1751, "324": 1751, "is_train": [1752, 1924], "interop": 1753, "intraop": 1754, "edgeitem": 1755, "linewidth": 1755, "sci_mod": 1755, "shamelessli": 1755, "repr": [1755, 1862], "sane": 1755, "_tensor_str": 1755, "_formatt": 1755, "12345": 1755, "1235": 1755, "excess": 1757, "24j": 1758, "8000j": 1758, "9600j": 1758, "4472": [1758, 1893], "8944j": 1758, "expit": [1759, 1917], "sym": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771], "2222": [1761, 1821], "4444": 1761, "8889": 1761, "4901e": 1762, "4000e": 1762, "0077e": 1762, "4923e": 1762, "waveform": [1763, 1764, 1765], "1564": 1763, "4540": 1763, "8910": 1763, "9877": 1763, "1423": [1763, 1785], "4154": 1763, "8413": [1763, 1917], "0302": 1764, "2231": 1764, "6065": 1764, "5400e": 1764, "3546e": 1764, "4788e": 1764, "8316e": 1764, "02": [1764, 1765, 1770], "3534e": 1764, "0065e": [1765, 1770], "1875e": [1765, 1770], "3937e": [1765, 1770], "2465e": [1765, 1770], "8250e": [1765, 1770], "9858e": [1765, 1770], "1365e": [1765, 1770], "8659e": [1765, 1770], "4658e": [1765, 1770], "3941e": [1765, 1770], "5400": 1766, "3376": 1766, "4200": 1766, "9136": 1766, "wit": [1766, 1859], "0955": [1766, 1767, 1769], "3455": [1766, 1767, 1769], "6545": [1766, 1767, 1769], "9045": [1766, 1767, 1769], "0800": [1767, 1768], "1876": [1767, 1768], "4601": [1767, 1768], "7700": [1767, 1768], "9723": [1767, 1768], "1679": 1768, "3979": 1768, "6821": 1768, "9121": 1768, "1170": 1769, "9698": 1769, "36358": 1771, "z_n": [1771, 1882], "48917": 1771, "2z_n": 1771, "13659": 1771, "3z_n": 1771, "01064": 1771, "4z_n": 1771, "\u03c0": 1771, "sidelob": 1771, "transact": 1771, "acoust": 1771, "speech": 1771, "84": 1771, "91": 1771, "feb": 1771, "1981": 1771, "tassp": 1771, "1163506": 1771, "heinzel": 1771, "spectrum": [1771, 1896], "dft": 1771, "comprehens": [1771, 1862, 1863, 1876, 1885, 1891, 1907], "februari": 1771, "holomet": 1771, "fnal": 1771, "gov": 1771, "gh_fft": 1771, "nutal": 1771, "general_ham": 1771, "6280e": 1771, "2698e": 1771, "1052e": 1771, "9826e": 1771, "5461": [1773, 1893], "1347": 1773, "7266": 1773, "2746": 1773, "5194": 1773, "1343": 1773, "4032": 1773, "2711": 1773, "5380": 1775, "8632": 1775, "1265": 1775, "9399": 1775, "5644": 1775, "9744": 1775, "1268": 1775, "2162": 1780, "6719": 1780, "3332": 1780, "5793": [1780, 1893], "0061": 1780, "6058": 1780, "9497": 1780, "5071": 1780, "3343": 1780, "9553": 1780, "0960": 1780, "derivati": [1781, 1784], "sparsr": 1782, "run_my_model": 1782, "prev_checks_en": 1782, "check_invari": [1782, 1789, 1790, 1791, 1792, 1793, 1794, 1916], "sparse_csr_tensor": [1782, 1860, 1902, 1916], "z_": [1784, 1882, 1917], "bigoplus_": 1784, "kj": 1784, "bigoplu": 1784, "sparseaddmmbackward0": 1784, "sparsemmreduceimplbackward0": 1784, "sparsiti": [1785, 1857, 1869, 1880], "spy": 1785, "2847": 1785, "7805": 1785, "1900": [1785, 1897], "to_dens": [1785, 1787, 1860, 1902, 1916], "3903": 1785, "x_k": 1786, "6438": 1788, "6467": 1788, "3411": 1788, "0918": 1788, "5348": 1788, "0634": 1788, "0494": 1788, "0646": 1788, "1844": 1788, "1276": 1788, "1874": 1788, "6334": 1788, "9682": 1788, "5340": 1788, "7483": 1788, "4512": 1788, "4073": 1788, "8901": 1788, "3183": 1788, "7539": 1788, "6596": 1788, "ncolblock": [1789, 1916], "array_list": [1789, 1790, 1791, 1793, 1794], "nrow": [1789, 1790, 1791, 1793, 1794, 1916], "ncol": [1789, 1790, 1791, 1793, 1794, 1916], "denses": [1789, 1790, 1791, 1793, 1794, 1916], "check_sparse_tensor_invari": [1789, 1790, 1791, 1792, 1793, 1794, 1916], "nrowblock": [1790, 1916], "compressed_indic": [1791, 1860, 1916], "plain_indic": [1791, 1860, 1916], "compressed_dim_s": [1791, 1916], "rdinat": 1792, "_indic": [1792, 1902, 1916], "0755": [1796, 1797], "0226": [1796, 1797], "0831": [1796, 1797], "4806": [1796, 1797], "0112": 1796, "2883": 1796, "6933": 1796, "0457": 1797, "0069": 1797, "2310": 1797, "2959": [1801, 1802, 1844, 1845], "8101": [1801, 1802, 1844, 1845], "5027": [1801, 1802, 1844, 1845], "3270": [1801, 1802, 1844, 1845], "5905": [1801, 1802, 1844, 1845], "6538": [1801, 1802, 1844, 1845, 1893], "3330": [1801, 1802, 1844, 1845], "5596": [1801, 1802, 1844, 1845], "6548": [1801, 1802, 1844, 1845], "1264": [1801, 1802, 1844, 1845], "5080": [1801, 1802, 1807, 1844, 1845, 1893], "6420": [1801, 1802, 1844, 1845], "1992": [1801, 1802, 1844, 1845], "0311": [1801, 1917], "7477": 1801, "2204": 1801, "9087": 1801, "2620": 1802, "0028": [1802, 1827], "0957": 1802, "6038": 1802, "0645": [1802, 1845], "4485": [1802, 1845], "8707": [1802, 1845], "0665": [1802, 1845], "librosa": 1803, "omega": 1803, "win": [1803, 1882], "_fft": [1803, 1860], "dimnsion": 1803, "1133": 1806, "2958": 1806, "5475": 1806, "0569": 1806, "0737": 1806, "3429": 1806, "9138": 1806, "9337": 1806, "6864": [1806, 1831], "1132": 1806, "7892": 1806, "1003": 1806, "5688": 1806, "3637": 1806, "9906": 1806, "5197": 1806, "4598": 1806, "3708": 1806, "6217": 1806, "435": 1806, "1335": 1806, "3135": 1806, "gesdd": 1807, "conquer": 1807, "gesvdjbatch": 1807, "fortran": 1807, "\u00b9": 1807, "2364": 1807, "7752": 1807, "7201": 1807, "7394": 1807, "0504": 1807, "3371": 1807, "5296": 1807, "3550": 1807, "5569": 1807, "2445": 1807, "1414": 1807, "4027": 1807, "0287": 1807, "5434": 1807, "1946": 1807, "8833": 1807, "3679": 1807, "4296": 1807, "2890": 1807, "6604": 1807, "2717": 1807, "2618": 1807, "4234": 1807, "2481": 1807, "4733": 1807, "3289": [1807, 1898], "0315": 1807, "7806": 1807, "0199": 1807, "8766": 1807, "4809": 1807, "4054": 1807, "7600": 1807, "8611": 1807, "2594": 1807, "4373": 1807, "6531e": 1807, "a_big": 1807, "6503e": 1807, "swapax": [1810, 1860, 1902, 1920], "1995": 1816, "4608": 1816, "7702": 1816, "4875": 1816, "9158": 1816, "5872": 1816, "6929": 1816, "6932": 1816, "take_along_axi": [1818, 1888], "max_idx": 1818, "sorted_idx": 1818, "2027": 1819, "7687": 1819, "4412": 1819, "3856": 1819, "5930": 1819, "9859": 1819, "4722": 1819, "3366": 1819, "8986": 1820, "7279": 1820, "1745": 1820, "7156": 1820, "8257": 1820, "2553": 1820, "11111": 1821, "222222": 1821, "3333333": 1821, "1111": 1821, "array_split": 1822, "i_d": 1823, "k_": 1823, "4532": 1823, "4874": 1823, "5018": 1823, "4796": [1823, 1897], "5162": 1823, "5306": 1823, "2922": 1823, "7556": 1823, "2741": 1823, "3161": 1823, "0704": 1823, "0187": 1823, "4079": 1823, "3126": 1823, "8744": 1823, "8223": 1823, "9445": 1823, "4117": 1823, "7780": 1823, "7193": 1823, "4867": 1823, "3204": 1823, "5513": 1823, "4737": [1823, 1848], "2850": 1823, "2573": 1823, "5997": 1823, "sparsebsr": 1827, "sparsecsc": 1827, "sparsebsc": 1827, "9893": 1827, "5809": 1827, "1669": 1827, "7299": 1827, "4942": [1827, 1893], "y_0": 1828, "y_1": 1828, "x_diff": 1828, "y_diff": 1828, "riemann": [1828, 1882, 1890, 1917], "badli": 1830, "cloned_coeffici": 1830, "1527": 1830, "0753": 1830, "7986": 1830, "0210": 1830, "3513": 1830, "5492": 1830, "7403": 1830, "0243": 1830, "7841": 1830, "9046": 1830, "5405": 1830, "9320": 1830, "9270": 1830, "2826": 1830, "lbrace": [1831, 1832, 1833, 1834], "rbrace": [1831, 1832, 1833, 1834], "0813": 1831, "8619": 1831, "7105": 1831, "0935": 1831, "1380": 1831, "3409": [1831, 1897], "2219": 1831, "5653": 1831, "2521": 1831, "2345": 1831, "2544": 1831, "3461": 1831, "4785": 1831, "4477": 1831, "6049": 1831, "6368": 1831, "8775": 1831, "7145": 1831, "1502": 1831, "2716": 1831, "1243": 1831, "5413": 1831, "3615": 1831, "0614": 1831, "7344": 1831, "3164": 1831, "7648": 1831, "4024": 1831, "0978": 1831, "col": [1832, 1834, 1860], "2309": 1833, "5207": 1833, "0049": 1833, "2072": 1833, "0680": 1833, "6602": 1833, "3480": 1833, "5211": 1833, "4573": 1833, "5876": 1833, "0794": [1833, 1917], "8373": 1833, "6654": 1833, "2604": 1833, "5235": 1833, "2447": 1833, "9556": 1833, "2919": 1833, "1768": 1833, "4333": 1833, "3146": [1833, 1893], "6576": 1833, "0432": 1833, "9348": [1833, 1917], "4410": 1833, "9888": 1833, "3337": 1833, "6556": 1833, "4798": 1833, "5466": 1836, "8008": 1836, "9079": 1836, "unique_consecut": [1839, 1860, 1902], "inverse_indic": [1839, 1840], "warn_onli": 1842, "alon": [1842, 1861, 1904], "put_": [1842, 1860], "index_add": [1842, 1860, 1902], "index_select": [1842, 1858, 1860, 1902, 1916], "fractionalmaxpool2d": 1842, "fractionalmaxpool3d": 1842, "reflectionpad1d": 1842, "reflectionpad3d": 1842, "replicationpad1d": 1842, "replicationpad3d": 1842, "histc": [1842, 1860, 1902], "bincount": [1842, 1860, 1902], "kthvalu": [1842, 1860, 1875, 1902], "cublasapi_reproduc": [1842, 1897], "avg_pool3d_backward_cuda": 1842, "alexandr": 1843, "theophil": 1843, "0631": 1844, "5590": 1844, "4893": 1844, "8258": 1844, "5926": 1845, "0056": 1845, "3646": 1845, "vecdot": 1846, "mi": [1847, 1848], "6116": 1847, "5772": [1847, 1917], "4606": 1847, "9120": 1847, "0786": 1847, "7497": 1847, "6623": 1847, "5772j": 1847, "9120j": 1847, "7497j": 1847, "6623j": 1847, "3839j": 1848, "2098": 1848, "6699j": 1848, "3470": 1848, "9451j": 1848, "5174": 1848, "3136j": 1848, "6699": 1848, "9451": 1848, "3136": 1848, "atleast_2d": [1851, 1860, 1902], "3139": 1852, "3898": 1852, "1657": 1852, "0383": 1852, "8785": 1852, "1089": 1852, "hubconf": 1856, "entrypoint_nam": 1856, "_resnet18": 1856, "underscor": [1856, 1876, 1912, 1922], "load_state_dict_from_url": [1856, 1871], "2gb": 1856, "relative_path_to_checkpoint": 1856, "pth": [1856, 1871, 1898], "dirnam": 1856, "5c106cde": [1856, 1871], "force_reload": 1856, "skip_valid": 1856, "trust_repo": 1856, "repo_own": 1856, "repo_nam": 1856, "torchhub": 1856, "owner": [1856, 1887, 1902, 1912, 1913], "github_token": 1856, "repo_or_dir": 1856, "mute": 1856, "resnet50_weight": 1856, "imagenet1k_v1": 1856, "download_url_to_fil": 1856, "hash_prefix": 1856, "temporary_fil": 1856, "sha256": [1856, 1871], "s3": [1856, 1871, 1899], "amazonaw": [1856, 1871, 1899], "model_dir": [1856, 1871], "check_hash": [1856, 1871], "hub_dir": [1856, 1871], "get_dir": [1856, 1871], "ext": [1856, 1871], "eight": [1856, 1871], "hash": [1856, 1860, 1862, 1871, 1902], "succinct": 1856, "set_dir": 1856, "path_to_hub_dir": 1856, "torch_hom": 1856, "xdg_cache_hom": [1856, 1885], "reiniti": 1856, "path_importer_cach": 1856, "subpackag": [1856, 1904], "classifi": [1857, 1862, 1900, 1903, 1907, 1921], "pypi": 1857, "conda": [1857, 1899], "hip": 1857, "_log": [1857, 1862], "javadoc": 1857, "uninitializedbuff": 1857, "anomali": 1857, "can_device_access_p": 1857, "current_blas_handl": 1857, "device_of": 1857, "get_arch_list": 1857, "get_device_cap": 1857, "get_device_nam": 1857, "get_device_properti": 1857, "get_gencode_flag": 1857, "get_sync_debug_mod": 1857, "ipc_collect": 1857, "memory_usag": 1857, "set_stream": 1857, "set_sync_debug_mod": 1857, "power_draw": 1857, "clock_rat": 1857, "outofmemoryerror": 1857, "jiter": 1857, "sanit": 1857, "get_rng_stat": [1857, 1911], "set_rng_stat": [1857, 1911], "empty_cach": [1857, 1885, 1891], "set_per_process_memory_fract": 1857, "current_allocated_memori": 1857, "driver_allocated_memori": 1857, "pathwis": 1857, "exponentialfamili": 1857, "binomi": [1857, 1860, 1902], "chi2": 1857, "continuousbernoulli": 1857, "dirichlet": 1857, "fishersnedecor": 1857, "halfcauchi": 1857, "halfnorm": 1857, "kumaraswami": 1857, "lkjcholeski": 1857, "laplac": 1857, "lognorm": 1857, "lowrankmultivariatenorm": 1857, "mixturesamefamili": 1857, "multinomi": [1857, 1860, 1902], "multivariatenorm": 1857, "negativebinomi": 1857, "onehotcategor": 1857, "relaxedbernoulli": 1857, "logitrelaxedbernoulli": 1857, "relaxedonehotcategor": 1857, "studentt": 1857, "transformeddistribut": 1857, "vonmis": 1857, "weibul": 1857, "wishart": 1857, "solver": [1857, 1896], "misc": 1857, "normal_": [1857, 1860, 1875, 1880, 1885, 1924], "constant_": [1857, 1880], "ones_": [1857, 1880], "zeros_": [1857, 1880], "eye_": [1857, 1864, 1880], "dirac_": [1857, 1864, 1880], "xavier_uniform_": [1857, 1880], "xavier_normal_": [1857, 1880, 1893], "kaiming_uniform_": [1857, 1880], "trunc_normal_": [1857, 1880], "orthogonal_": [1857, 1864, 1880, 1893], "sparse_": [1857, 1880], "alexnet": 1857, "preview": 1857, "swa": 1857, "ema": 1857, "powersgd": 1857, "remotemodul": 1857, "fork_rng": [1857, 1911], "doublestorag": [1857, 1918], "floatstorag": [1857, 1918], "halfstorag": [1857, 1918], "longstorag": [1857, 1918], "intstorag": [1857, 1918], "shortstorag": [1857, 1918], "charstorag": [1857, 1918], "bytestorag": [1857, 1918], "boolstorag": [1857, 1918], "bfloat16storag": [1857, 1918], "complexdoublestorag": [1857, 1918], "complexfloatstorag": [1857, 1918], "quint8storag": [1857, 1918], "qint8storag": [1857, 1918], "qint32storag": [1857, 1918], "quint4x2storag": [1857, 1918], "quint2x4storag": [1857, 1918], "make_tensor": [1857, 1923], "assert_allclos": [1857, 1923], "sampler": 1857, "mobile_optim": 1857, "optimize_for_mobil": [1857, 1870], "model_zoo": 1857, "load_url": [1857, 1871], "tensorboard": [1857, 1872, 1906], "summarywrit": [1857, 1872, 1921], "iinfo": 1857, "unifi": [1857, 1876], "__config__": [1857, 1884], "set_log": [1857, 1868], "torchdata": 1857, "torchserv": 1857, "torchtext": 1857, "_out": [1858, 1880, 1890], "_adaptive_avg_pool2d": [1858, 1902], "_adaptive_avg_pool2d_backward": 1858, "_log_softmax": [1858, 1902], "half_to_float": 1858, "_native_batch_norm_legit": [1858, 1902], "no_stat": 1858, "_softmax": [1858, 1902, 1917], "_to_copi": [1858, 1902], "scalartyp": 1858, "memoryformat": 1858, "start_step": 1858, "avg_pool2d": [1858, 1860, 1902, 1909], "avg_pool2d_backward": 1858, "constant_pad_nd": [1858, 1860, 1902], "convolution_backward": 1858, "bias_siz": 1858, "output_mask": 1858, "embedding_dense_backward": 1858, "num_weight": 1858, "interpolation_mod": [1858, 1860], "isinf": [1858, 1860, 1902, 1916], "max_pool2d_with_indic": [1858, 1860, 1902], "max_pool2d_with_indices_backward": 1858, "max_pool3d_with_indic": [1858, 1860, 1902], "native_batch_norm": [1858, 1860, 1902], "native_dropout": [1858, 1860, 1902], "native_group_norm": [1858, 1860, 1902], "hxw": [1858, 1860], "native_group_norm_backward": 1858, "rstd": 1858, "native_layer_norm": [1858, 1860, 1902], "native_layer_norm_backward": 1858, "tensor_scalar": 1858, "tensor_tensor": 1858, "scalar_tensor": [1858, 1860, 1902], "slice_scatt": [1858, 1860, 1902], "dim_intlist": 1858, "upsample_bilinear2d": [1858, 1860, 1902], "upsample_nearest2d": [1858, 1860, 1902], "convert_element_typ": [1858, 1902], "broadcast_in_dim": [1858, 1902], "bessel_i0": [1858, 1902], "bessel_i1": [1858, 1902], "bessel_j0": [1858, 1902, 1917], "bessel_j1": [1858, 1902, 1917], "cbrt": [1858, 1902], "erf_inv": [1858, 1902], "erfcx": [1858, 1902, 1917], "exp2": [1858, 1860, 1902, 1917, 1921], "isfinit": [1858, 1860, 1896, 1902], "ndtri": [1858, 1902, 1917], "spherical_bessel_j0": [1858, 1902, 1917], "fmax": [1858, 1860, 1902], "fmin": [1858, 1860, 1902], "shift_left": [1858, 1902], "shift_right_arithmet": [1858, 1902], "zeta": [1858, 1885, 1902, 1917], "broadcast_dimens": 1858, "collapse_view": [1858, 1902], "start_indic": 1858, "limit_indic": 1858, "slice_in_dim": [1858, 1902], "start_index": 1858, "limit_index": 1858, "split_dim": [1858, 1902], "outer_length": 1858, "view_of": [1858, 1902], "as_strided_scatt": [1858, 1860, 1902], "collaps": [1858, 1875, 1902], "rev": [1858, 1902], "device_put": [1858, 1902], "maximum_valu": [1858, 1902], "minimum_valu": [1858, 1902], "copy_strid": [1858, 1902], "copy_to": [1858, 1902], "xor_sum": [1858, 1902], "empty_permut": [1858, 1860, 1902], "physical_layout": [1858, 1860], "iota": [1858, 1902], "fft_r2c": [1858, 1902], "fft_c2c": [1858, 1902], "fft_c2r": [1858, 1902], "disadvantag": 1859, "gentl": 1859, "beam": 1859, "traced_bar": 1859, "myscriptmodul": 1859, "103": [1859, 1861], "939": [1859, 1861], "116": [1859, 1861], "779": [1859, 1861], "123": [1859, 1861], "my_script_modul": [1859, 1861], "ins": 1859, "pytorch_jit": 1859, "traced_fn": 1859, "disable_jit_exampl": 1859, "printer": 1859, "rv": 1859, "rv0": 1859, "rv1": 1859, "ssa": 1859, "block0": 1859, "block1": 1859, "loop_in_traced_fn": 1859, "input_tupl": 1859, "fill_row_zero": 1859, "tracerwarn": 1859, "disjoint": 1859, "nr": 1859, "09115803241729736": 1859, "6782537698745728": 1859, "cpu_model": 1859, "gpu_model": 1859, "sample_input_cpu": 1859, "sample_input_gpu": 1859, "traced_cpu": 1859, "traced_gpu": 1859, "use_gpu": 1859, "__constants__": [1859, 1861], "my_module_inst": 1859, "redeclar": 1859, "nn_module_inst": 1859, "my_scripted_model": 1859, "526": [1859, 1861, 1900], "script_method": 1859, "implicitly_compiled_method": 1859, "another_forward": 1859, "unused_method": 1859, "some_fn": 1859, "ever": [1859, 1918], "some_fn2": 1859, "some_fn3": 1859, "some_fn4": 1859, "my_dict": [1859, 1861], "my_int": [1859, 1861], "my_const": 1859, "make_dict": 1859, "nnc": 1859, "__and__": 1860, "__iand__": 1860, "__ilshift__": 1860, "__ior__": 1860, "__irshift__": 1860, "__ixor__": 1860, "__lshift__": 1860, "__or__": 1860, "__rshift__": 1860, "__xor__": 1860, "absolute_": 1860, "acos_": [1860, 1875], "addbmm_": 1860, "addcdiv_": 1860, "addcmul_": 1860, "addmv_": [1860, 1875], "addr_": 1860, "align_a": [1860, 1875, 1876, 1902], "align_to": [1860, 1875, 1876, 1902], "ellipsis_idx": 1860, "aminmax": [1860, 1902], "arccos_": 1860, "arccosh_": 1860, "arcsin_": [1860, 1916], "arcsinh_": 1860, "arctan2_": 1860, "arctan_": 1860, "arctanh_": 1860, "argwher": [1860, 1902], "as_strided_": 1860, "asin_": [1860, 1875, 1916], "asinh_": [1860, 1875], "atan_": [1860, 1875], "atanh_": [1860, 1875], "baddbmm_": 1860, "bernoulli_": [1860, 1875, 1924], "bitwise_and_": 1860, "bitwise_left_shift_": 1860, "bitwise_not_": [1860, 1875], "bitwise_or_": 1860, "bitwise_right_shift_": 1860, "bitwise_xor_": 1860, "broadcast_to": [1860, 1902], "cauchy_": [1860, 1875, 1924], "ceil_": [1860, 1875], "clamp_max": [1860, 1902], "clamp_max_": 1860, "clamp_min": [1860, 1902], "clamp_min_": 1860, "clip_": 1860, "conj_physical_": 1860, "copysign_": 1860, "cos_": [1860, 1875, 1882], "cosh_": [1860, 1875], "count_nonzero": [1860, 1902], "cummax": [1860, 1902], "cummin": [1860, 1902], "cumprod_": 1860, "cumsum_": 1860, "deg2rad": [1860, 1875, 1902, 1916], "deg2rad_": [1860, 1875, 1916], "outdim": 1860, "diagonal_scatt": [1860, 1902], "digamma_": [1860, 1875], "div_": [1860, 1875, 1916], "divide_": 1860, "dsplit": [1860, 1902], "eq_": 1860, "erf_": [1860, 1875], "erfc_": [1860, 1875], "erfinv_": [1860, 1875], "exp2_": 1860, "exp_": [1860, 1875], "expm1_": [1860, 1875], "exponential_": [1860, 1875, 1924], "fill_diagonal_": 1860, "fix_": 1860, "fliplr": [1860, 1902], "flipud": [1860, 1902], "float_power_": 1860, "floor_": [1860, 1875], "floor_divide_": [1860, 1916], "fmod_": 1860, "frac_": [1860, 1875], "frexp": [1860, 1902], "gcd_": 1860, "ge_": 1860, "geometric_": [1860, 1924], "ger": [1860, 1902], "get_devic": [1860, 1875, 1902, 1916, 1918, 1919], "greater_": 1860, "greater_equal_": 1860, "gt_": 1860, "hardshrink": [1860, 1902], "heavisid": [1860, 1902], "heaviside_": 1860, "hsplit": [1860, 1902, 1920], "hypot_": 1860, "i0_": 1860, "igamma_": 1860, "igammac_": 1860, "index_fil": [1860, 1875, 1902], "index_reduc": [1860, 1902], "is_coalesc": [1860, 1902, 1916], "is_complex": [1860, 1902, 1916, 1919], "is_contigu": [1860, 1875, 1902, 1920], "is_floating_point": [1860, 1875, 1902, 1916, 1919], "is_infer": [1860, 1902], "is_same_s": [1860, 1902, 1916], "is_set_to": [1860, 1902], "is_sign": [1860, 1875, 1902, 1916], "isclos": [1860, 1902], "isneginf": [1860, 1902, 1916], "isposinf": [1860, 1902, 1916], "isreal": [1860, 1902], "istft": [1860, 1902], "kron": [1860, 1902], "lcm_": 1860, "ldexp_": 1860, "le_": 1860, "lerp_": 1860, "less_": 1860, "less_equal_": 1860, "lgamma_": 1860, "log10_": [1860, 1875], "log1p_": [1860, 1875, 1916], "log2_": [1860, 1875], "log_normal_": [1860, 1875, 1924], "logaddexp2": [1860, 1902], "logcumsumexp": [1860, 1902], "logical_and_": 1860, "logical_not_": [1860, 1875], "logical_or_": 1860, "logical_xor_": 1860, "logit_": 1860, "lt_": 1860, "masked_scatt": [1860, 1902], "masked_select": [1860, 1875, 1902], "matrix_pow": [1860, 1902], "moveaxi": [1860, 1902], "msort": [1860, 1902], "multiply_": 1860, "mvlgamma_": 1860, "nan_to_num_": 1860, "nanmedian": [1860, 1875, 1902], "nansum": [1860, 1902], "narrow_copi": [1860, 1902, 1916], "ne_": 1860, "neg_": [1860, 1875, 1916], "negative_": [1860, 1916], "new_empty_strid": [1860, 1902], "new_ful": [1860, 1885, 1902], "new_on": [1860, 1902], "nextafter_": 1860, "nonzero_stat": [1860, 1902], "not_equal_": 1860, "output_nr": [1860, 1902], "polygamma_": 1860, "pow_": [1860, 1875], "q_per_channel_scal": [1860, 1902], "q_per_channel_zero_point": [1860, 1902], "q_scale": [1860, 1902], "q_zero_point": [1860, 1902], "rad2deg": [1860, 1875, 1902, 1916], "rad2deg_": [1860, 1875, 1916], "reciprocal_": [1860, 1875], "record_stream": [1860, 1885, 1902], "refine_nam": [1860, 1875, 1876, 1902], "relu_": [1860, 1909], "remainder_": 1860, "rename_": [1860, 1875, 1876], "renorm_": 1860, "reshape_a": [1860, 1877, 1902, 1920], "resize_a": [1860, 1902], "the_templ": 1860, "resize_as_sparse_": 1860, "retains_grad": [1860, 1902], "roll": [1860, 1902], "rot90": [1860, 1902], "round_": [1860, 1875], "rsqrt_": [1860, 1875], "select_scatt": [1860, 1902], "sgn_": [1860, 1875], "sigmoid_": [1860, 1875, 1909], "sign_": [1860, 1875], "sinc_": 1860, "sinh_": [1860, 1875], "smm": [1860, 1902, 1916], "sparse_resize_": 1860, "sparse_resize_and_clear_": 1860, "split_with_s": [1860, 1902, 1920], "sqrt_": [1860, 1875], "square_": 1860, "squeeze_": [1860, 1909], "sspaddmm": [1860, 1902, 1916], "sub_": [1860, 1875, 1916], "subtract_": 1860, "sum_to_s": [1860, 1902], "swapaxes_": 1860, "swapdim": [1860, 1902, 1920], "swapdims_": 1860, "take_along_dim": [1860, 1902], "tan_": [1860, 1875], "tanh_": [1860, 1875, 1909], "tensor_indices_or_sect": 1860, "to_mkldnn": [1860, 1902], "to_padded_tensor": [1860, 1877, 1902], "to_sparse_bsc": [1860, 1902], "to_sparse_bsr": [1860, 1902, 1916], "to_sparse_csc": [1860, 1902, 1916], "true_divide_": 1860, "trunc_": [1860, 1875], "type_a": [1860, 1875, 1902], "out0": [1860, 1898], "unsafe_chunk": [1860, 1902], "unsafe_split": [1860, 1902], "unsafe_split_with_s": [1860, 1902], "unsqueeze_": [1860, 1909], "view_a": [1860, 1902, 1920], "vsplit": [1860, 1902, 1920], "xlogy_": 1860, "adaptive_avg_pool2d": [1860, 1887, 1902, 1909], "adaptive_max_pool1d_with_indic": [1860, 1887], "adaptive_max_pool2d_with_indic": 1860, "adaptive_max_pool3d_with_indic": 1860, "alpha_dropout": [1860, 1902], "assert_int_or_pair": 1860, "arg_nam": 1860, "binary_cross_entropi": [1860, 1902], "binary_cross_entropy_with_logit": [1860, 1902], "celu": [1860, 1902], "dropout2d": 1860, "dropout3d": 1860, "feature_alpha_dropout": [1860, 1902], "fractional_max_pool2d_with_indic": 1860, "fractional_max_pool3d_with_indic": 1860, "gaussian_nll_loss": 1860, "glu": [1860, 1902], "gumbel_softmax": 1860, "hardsigmoid": [1860, 1902, 1909], "hardswish": [1860, 1902, 1909], "huber_loss": [1860, 1902], "instance_norm": [1860, 1902, 1909], "local_response_norm": 1860, "lp_pool1d": 1860, "lp_pool2d": 1860, "max_pool1d_with_indic": [1860, 1902], "mish": [1860, 1902], "multi_head_attention_forward": 1860, "embed_dim_to_check": 1860, "in_proj_weight": 1860, "in_proj_bia": 1860, "bias_k": 1860, "bias_v": 1860, "out_proj_weight": 1860, "out_proj_bia": 1860, "use_separate_proj_weight": 1860, "q_proj_weight": 1860, "k_proj_weight": 1860, "v_proj_weight": 1860, "static_k": 1860, "static_v": 1860, "multilabel_soft_margin_loss": 1860, "relu6": [1860, 1902, 1909], "silu": [1860, 1877, 1902], "softsign": 1860, "tanhshrink": 1860, "adaptive_avg_pool1d": [1860, 1887, 1902, 1909], "adaptive_max_pool1d": [1860, 1887, 1902], "affine_grid_gener": [1860, 1902], "alias_copi": [1860, 1902], "align_tensor": [1860, 1902], "alpha_dropout_": 1860, "as_strided_copi": [1860, 1902], "atleast_1d": [1860, 1902], "avg_pool1d": [1860, 1902, 1909], "bartlett_window": [1860, 1864, 1902], "cudnn_en": 1860, "batch_norm_backward_elemt": 1860, "invstd": 1860, "mean_di": 1860, "mean_dy_xmu": 1860, "batch_norm_backward_reduc": 1860, "input_g": 1860, "bias_g": 1860, "out3": 1860, "batch_norm_elemt": [1860, 1902], "batch_norm_gather_stat": [1860, 1902], "batch_norm_gather_stats_with_count": [1860, 1902], "batch_norm_stat": [1860, 1902], "batch_norm_update_stat": [1860, 1902], "blackman_window": [1860, 1864, 1902], "block_diag": [1860, 1902], "can_cast": [1860, 1902], "ccol_indices_copi": [1860, 1902], "celu_": 1860, "choose_qparams_optim": [1860, 1902], "n_bin": 1860, "bit_width": 1860, "col_indices_copi": [1860, 1902], "column_stack": [1860, 1902], "conv_tbc": [1860, 1902], "crow_indices_copi": [1860, 1902], "cudnn_affine_grid_gener": [1860, 1902], "cudnn_batch_norm": [1860, 1902], "exponential_average_factor": 1860, "cudnn_convolut": [1860, 1902], "cudnn_convolution_add_relu": [1860, 1902], "cudnn_convolution_relu": [1860, 1902], "cudnn_convolution_transpos": [1860, 1902], "cudnn_grid_sampl": [1860, 1902], "cudnn_is_accept": [1860, 1902], "cumulative_trapezoid": [1860, 1902], "diagonal_copi": [1860, 1902], "dropout_": [1860, 1870], "embedding_renorm_": 1860, "empty_quant": [1860, 1902], "anyenumtyp": 1860, "expand_copi": [1860, 1902], "fake_quantize_per_channel_affin": [1860, 1902], "fbgemm_linear_fp16_weight": [1860, 1902], "packed_weight": 1860, "fbgemm_linear_fp16_weight_fp32_activ": [1860, 1902], "fbgemm_linear_int8_weight": [1860, 1902], "col_offset": 1860, "weight_scal": 1860, "weight_zero_point": 1860, "fbgemm_linear_int8_weight_fp32_activ": [1860, 1902], "fbgemm_linear_quantize_weight": [1860, 1902], "fbgemm_pack_gemm_matrix_fp16": [1860, 1902], "fbgemm_pack_quantized_matrix": [1860, 1902], "feature_alpha_dropout_": 1860, "feature_dropout": [1860, 1902], "feature_dropout_": 1860, "frobenius_norm": [1860, 1902], "from_fil": [1860, 1902, 1918], "fused_moving_avg_obs_fake_qu": [1860, 1902], "observer_on": 1860, "fake_quant_on": 1860, "running_min": 1860, "running_max": 1860, "per_row_fake_qu": 1860, "symmetric_qu": 1860, "has_bias": 1860, "gru_cel": [1860, 1902], "w_ih": 1860, "w_hh": 1860, "hamming_window": [1860, 1864, 1902], "histogramdd": [1860, 1902], "hspmm": [1860, 1902, 1916], "indices_copi": [1860, 1902], "is_autocast_cpu_en": [1860, 1902], "is_autocast_en": [1860, 1902], "is_grad_en": [1860, 1902], "is_vulkan_avail": [1860, 1902], "isin": [1860, 1902], "kaiser_window": [1860, 1902], "lstm_cell": [1860, 1902], "meshgrid": [1860, 1902], "miopen_batch_norm": [1860, 1902], "miopen_convolut": [1860, 1902], "miopen_convolution_add_relu": [1860, 1902], "miopen_convolution_relu": [1860, 1902], "miopen_convolution_transpos": [1860, 1902], "miopen_depthwise_convolut": [1860, 1902], "miopen_rnn": [1860, 1902], "weight_stride0": 1860, "dropout_st": 1860, "out4": 1860, "mkldnn_adaptive_avg_pool2d": [1860, 1902], "mkldnn_convolut": [1860, 1902], "mkldnn_linear_backward_weight": 1860, "bias_defin": 1860, "mkldnn_max_pool2d": [1860, 1902], "mkldnn_max_pool3d": [1860, 1902], "mkldnn_rnn_layer": [1860, 1902], "weight0": 1860, "weight1": 1860, "weight2": 1860, "weight3": 1860, "hx_": 1860, "cx_": 1860, "save_mean": 1860, "save_invstd": 1860, "native_channel_shuffl": [1860, 1902], "native_norm": [1860, 1902, 1916], "norm_except_dim": [1860, 1902], "nuclear_norm": [1860, 1902], "pairwise_dist": [1860, 1902], "permute_copi": [1860, 1902], "promote_typ": [1860, 1902, 1923], "quantize_per_channel": [1860, 1902, 1907], "quantize_per_tensor_dynam": [1860, 1902, 1907], "quantized_batch_norm": [1860, 1902], "quantized_gru_cel": [1860, 1902], "packed_ih": 1860, "packed_hh": 1860, "col_offsets_ih": 1860, "col_offsets_hh": 1860, "scale_ih": 1860, "scale_hh": 1860, "zero_point_ih": 1860, "zero_point_hh": 1860, "quantized_lstm_cel": [1860, 1902], "quantized_max_pool1d": [1860, 1902], "quantized_max_pool2d": [1860, 1902], "quantized_max_pool3d": [1860, 1902], "quantized_rnn_relu_cel": [1860, 1902], "quantized_rnn_tanh_cel": [1860, 1902], "randint_lik": [1860, 1864, 1902, 1924], "randn_lik": [1860, 1864, 1877, 1902, 1924], "randperm": [1860, 1864, 1902, 1924], "result_typ": [1860, 1902], "scalar1": 1860, "scalar2": 1860, "rnn_relu": [1860, 1902], "rnn_relu_cel": [1860, 1902], "rnn_tanh": [1860, 1902], "rnn_tanh_cel": [1860, 1902], "row_indices_copi": [1860, 1902], "row_stack": [1860, 1902], "rrelu_": 1860, "rsub": [1860, 1902], "searchsort": [1860, 1902], "segment_reduc": [1860, 1902], "selu_": 1860, "slice_copi": [1860, 1902], "sparse_bsc_tensor": [1860, 1902, 1916], "sparse_bsr_tensor": [1860, 1902, 1916], "sparse_compressed_tensor": [1860, 1902, 1916], "sparse_csc_tensor": [1860, 1902, 1916], "split_copi": [1860, 1902], "split_with_sizes_copi": [1860, 1902], "squeeze_copi": [1860, 1902], "std_mean": [1860, 1875, 1902], "t_copi": [1860, 1902], "threshold_": 1860, "transpose_copi": [1860, 1902], "trapz": [1860, 1902], "tril_indic": [1860, 1864, 1902], "triu_indic": [1860, 1864, 1902], "unbind_copi": [1860, 1902], "unfold_copi": [1860, 1902], "unsqueeze_copi": [1860, 1902], "values_copi": [1860, 1902], "vander": [1860, 1864, 1902], "var_mean": [1860, 1875, 1902], "view_as_complex_copi": [1860, 1902], "view_as_real_copi": [1860, 1902], "_nn": 1860, "adaptive_max_pool2d": [1860, 1902], "conv_depthwise3d": [1860, 1902], "cross_entropy_loss": [1860, 1902], "input_scal": 1860, "elu_": 1860, "flatten_dense_tensor": [1860, 1902], "random_sampl": 1860, "gelu_": 1860, "hardsigmoid_": [1860, 1909], "hardswish_": 1860, "hardtanh_": [1860, 1909], "leaky_relu_": 1860, "log_sigmoid": [1860, 1902], "mish_": 1860, "mkldnn_linear": [1860, 1902], "mkldnn_reorder_conv2d_weight": [1860, 1902], "mkldnn_reorder_conv3d_weight": [1860, 1902], "nll_loss2d": [1860, 1902], "nll_loss_nd": [1860, 1902], "reflection_pad3d": [1860, 1902], "relu6_": 1860, "rrelu_with_nois": [1860, 1902], "rrelu_with_noise_": 1860, "silu_": 1860, "slow_conv3d": [1860, 1902], "slow_conv_dilated2d": [1860, 1902], "slow_conv_dilated3d": [1860, 1902], "slow_conv_transpose2d": [1860, 1902], "slow_conv_transpose3d": [1860, 1902], "softshrink": [1860, 1902], "thnn_conv2d": [1860, 1902], "unflatten_dense_tensor": [1860, 1902], "upsample_bicubic2d": [1860, 1902], "scales_h": 1860, "scales_w": 1860, "upsample_linear1d": [1860, 1902], "upsample_nearest1d": [1860, 1902], "upsample_nearest3d": [1860, 1902], "scales_d": 1860, "upsample_trilinear3d": [1860, 1902], "fft_fftfreq": [1860, 1902], "fft_fftshift": [1860, 1902], "fft_hfft2": [1860, 1902], "fft_hfftn": [1860, 1902], "fft_ifftshift": [1860, 1902], "fft_ihfft2": [1860, 1902], "fft_ihfftn": [1860, 1902], "fft_rfftfreq": [1860, 1902], "_linalg": 1860, "linalg_cross": [1860, 1902], "linalg_det": [1860, 1902], "linalg_diagon": [1860, 1902], "eigvec": 1860, "linalg_ldl_factor": [1860, 1902], "linalg_ldl_factor_ex": [1860, 1902], "linalg_ldl_solv": [1860, 1902], "linalg_lu": [1860, 1902], "linalg_lu_factor": [1860, 1902], "linalg_lu_factor_ex": [1860, 1902], "linalg_lu_solv": [1860, 1902], "linalg_matmul": [1860, 1902], "linalg_matrix_exp": [1860, 1902], "linalg_matrix_pow": [1860, 1902], "linalg_multi_dot": [1860, 1902], "linalg_norm": [1860, 1902], "linalg_pinv": [1860, 1902], "linalg_solve_ex": [1860, 1902], "linalg_solve_triangular": [1860, 1902], "linalg_vand": [1860, 1902], "linalg_vecdot": [1860, 1902], "linalg_vector_norm": [1860, 1902], "_nest": 1860, "nested_to_padded_tensor": [1860, 1902], "_spars": 1860, "sparse_sampled_addmm": [1860, 1902], "_special": 1860, "special_airy_ai": [1860, 1902], "special_bessel_j0": [1860, 1902], "special_bessel_j1": [1860, 1902], "special_bessel_y0": [1860, 1902], "special_bessel_y1": [1860, 1902], "special_chebyshev_polynomial_t": [1860, 1902], "special_chebyshev_polynomial_u": [1860, 1902], "special_chebyshev_polynomial_v": [1860, 1902], "special_chebyshev_polynomial_w": [1860, 1902], "special_digamma": [1860, 1902], "special_entr": [1860, 1902], "special_erf": [1860, 1902], "special_erfc": [1860, 1902], "special_erfcx": [1860, 1902], "special_erfinv": [1860, 1902], "special_exp2": [1860, 1902], "special_expit": [1860, 1902], "special_expm1": [1860, 1902], "special_gammainc": [1860, 1902], "special_gammaincc": [1860, 1902], "special_gammaln": [1860, 1902], "special_hermite_polynomial_h": [1860, 1902], "special_i0": [1860, 1902], "special_i1": [1860, 1902], "special_laguerre_polynomial_l": [1860, 1902], "special_legendre_polynomial_p": [1860, 1902], "special_log1p": [1860, 1902], "special_log_ndtr": [1860, 1902], "special_log_softmax": [1860, 1902], "special_logit": [1860, 1902], "special_logsumexp": [1860, 1902], "special_modified_bessel_i0": [1860, 1902], "special_modified_bessel_i1": [1860, 1902], "special_modified_bessel_k0": [1860, 1902], "special_modified_bessel_k1": [1860, 1902], "special_multigammaln": [1860, 1902], "special_ndtr": [1860, 1902], "special_ndtri": [1860, 1902], "special_polygamma": [1860, 1902], "special_psi": [1860, 1902], "special_round": [1860, 1902], "special_scaled_modified_bessel_k0": [1860, 1902], "special_scaled_modified_bessel_k1": [1860, 1902], "special_shifted_chebyshev_polynomial_t": [1860, 1902], "special_shifted_chebyshev_polynomial_u": [1860, 1902], "special_shifted_chebyshev_polynomial_v": [1860, 1902], "special_shifted_chebyshev_polynomial_w": [1860, 1902], "special_sinc": [1860, 1902], "special_softmax": [1860, 1902], "special_spherical_bessel_j0": [1860, 1902], "special_xlog1pi": [1860, 1902], "special_xlogi": [1860, 1902], "special_zeta": [1860, 1902], "tval": 1860, "is_accept": 1860, "rect": 1860, "__complex__": 1860, "__float__": 1860, "__int__": 1860, "hex": [1860, 1862, 1902], "__hex__": 1860, "oct": [1860, 1902], "__oct__": 1860, "divmod": [1860, 1862, 1902], "chr": [1860, 1862, 1902], "int_float": 1860, "float_int": 1860, "fab": [1860, 1902], "int_int": 1860, "float_float": 1860, "complex_complex": 1860, "int_complex": 1860, "complex_int": 1860, "float_complex": 1860, "complex_float": [1860, 1918], "scalar_scalar": 1860, "int_to_int": 1860, "modf": [1860, 1902], "mathremaind": [1860, 1902], "programm": [1861, 1862], "tn": 1861, "subtyp": 1861, "an_error": 1861, "noreturn": [1861, 1862], "classvar": [1861, 1862], "anystr": [1861, 1862], "nomin": 1861, "newtyp": [1861, 1862], "tup": [1861, 1862], "emptydatastructur": 1861, "my_list": 1861, "aug_add_x": 1861, "inc": [1861, 1862], "assign_x": [1861, 1862], "polymorph": 1861, "sum_pair": 1861, "red": [1861, 1862], "enum_fn": [1861, 1862], "my_variable_nam": 1861, "top_level_method": 1861, "other_help": 1861, "ten": [1861, 1921], "my_paramet": 1861, "my_submodul": 1861, "tuple_or_list": 1861, "a_tupl": 1861, "de": [1861, 1904, 1907], "is_script": [1861, 1862, 1902], "unsupported_linear_op": 1861, "is_trac": [1861, 1862], "univers": 1861, "typing_extens": 1861, "a_dict": 1861, "some_dict": 1861, "delimit": [1862, 1863], "tstype": 1862, "tsmoduletyp": 1862, "tsalltyp": 1862, "tsmetatyp": 1862, "tsprimitivetyp": 1862, "tsstructuraltyp": 1862, "tsnominaltyp": 1862, "myclass": [1862, 1904], "printabl": [1862, 1904], "sortabl": 1862, "nevertheless": [1862, 1914], "inc_first_el": 1862, "cpufloattyp": 1862, "tstupl": 1862, "tsnamedtupl": 1862, "tslist": 1862, "tsdict": 1862, "tsoption": 1862, "tsunion": 1862, "tsfutur": 1862, "tsrref": 1862, "tsawait": 1862, "await": [1862, 1863, 1912], "keytyp": 1862, "_await": 1862, "mytupl": 1862, "scripted_inc": 1862, "_annotatednamedtupl": 1862, "_namedtupleannot": 1862, "_unannotatednamedtupl": 1862, "nameerror": 1862, "remedi": 1862, "tsbuiltinclass": 1862, "tscustomclass": 1862, "tsenum": 1862, "tstensor": 1862, "subtensor": [1862, 1887, 1927], "subwithtorchfunct": 1862, "script_g": 1862, "tsclassdef": 1862, "methoddefinit": 1862, "__torch__": [1862, 1900], "class2": 1862, "tsenumdef": 1862, "tsenumtyp": 1862, "memberidentifi": 1862, "intenum": 1862, "intflag": 1862, "basecolor": 1862, "compli": [1862, 1904], "classbodydefinit": 1862, "moduleobj": 1862, "testmodul": 1862, "mymodel": [1862, 1881, 1895], "dosometh": 1862, "strateg": 1862, "congruent": 1862, "python3": 1862, "unannot": 1862, "python3annot": 1862, "paramannot": 1862, "returnannot": 1862, "funcormethodbodi": 1862, "mypyannot": 1862, "localvarannot": 1862, "setval": 1862, "moduletyp": [1862, 1904], "classidentifi": 1862, "instanceattridentifi": 1862, "offset_": 1862, "tsstructualtyp": 1862, "grammar": 1862, "chapter": [1862, 1890], "floattyp": 1862, "inttyp": 1862, "stringtyp": 1862, "devicetyp": 1862, "bullet": 1862, "tupletyp": 1862, "listtyp": 1862, "enclosur": 1862, "parenth_form": 1862, "list_displai": 1862, "dict_displai": 1862, "legal": 1862, "stringliter": 1862, "floatnumb": 1862, "expression_list": 1862, "list_comprehens": 1862, "comp_for": 1862, "target_list": 1862, "or_expr": 1862, "key_datum_list": 1862, "dict_comprehens": 1862, "key_datum": 1862, "ongo": [1862, 1900, 1910, 1912], "enclos": 1862, "datum": [1862, 1926], "attributeref": 1862, "slice_list": 1862, "slice_item": 1862, "proper_slic": 1862, "argument_list": 1862, "u_expr": 1862, "tightli": [1862, 1893], "m_expr": 1862, "a_expr": 1862, "shift_expr": 1862, "and_expr": 1862, "xor_expr": 1862, "comp_oper": 1862, "__contains__": 1862, "or_test": 1862, "and_test": 1862, "not_test": 1862, "conditional_express": 1862, "starred_item": 1862, "expression_stmt": 1862, "starred_express": 1862, "assignment_express": 1862, "assignment_stmt": 1862, "augmented_assignment_stmt": 1862, "augtarget": 1862, "augop": 1862, "annotated_assignment_stmt": 1862, "raise_stmt": 1862, "assert_stmt": 1862, "return_stmt": 1862, "del_stmt": 1862, "pass_stmt": 1862, "print_stmt": 1862, "break_stmt": 1862, "continue_stmt": 1862, "if_stmt": 1862, "while_stmt": 1862, "for_stmt": 1862, "with_stmt": 1862, "with_item": 1862, "__enter__": 1862, "suppress": [1862, 1911], "tuple_stmt": 1862, "getattr_stmt": 1862, "hasattr_stmt": 1862, "zip_stmt": 1862, "iterable1": 1862, "iterable2": 1862, "enumerate_stmt": 1862, "add_stat_valu": 1862, "sugaredvalu": 1862, "unrecogn": 1862, "honor": 1862, "__abs__": 1862, "bytearrai": 1862, "delattr": 1862, "exec": 1862, "__index__": 1862, "isint": 1862, "issubclass": [1862, 1887], "ndigit": 1862, "setattr": 1862, "__import__": [1862, 1904], "rpc_sync": [1862, 1902, 1912, 1913, 1914], "synonym": 1862, "_fork": [1862, 1884], "_wait": [1862, 1884], "lexic": 1863, "indent": 1863, "coroutin": 1863, "__del__": [1863, 1882], "__bytes__": 1863, "__slots__": 1863, "metaclass": 1863, "mro": 1863, "__r": 1863, "nonloc": 1863, "bytesliter": 1863, "imagnumb": 1863, "parenthes": 1863, "ifs": 1863, "compound": 1863, "exc_typ": 1863, "exc_valu": 1863, "adaptivelogsoftmaxwithloss": 1864, "enable_grad": [1864, 1924], "overload_nam": 1866, "handi": [1866, 1882, 1885], "spotti": 1866, "googl": 1866, "keynam": 1866, "alias_analysi": 1866, "op_nam": 1866, "opoverload": 1866, "div_cpu": 1866, "off_by_default": 1868, "_registr": 1868, "born": 1869, "citizen": 1869, "afterthought": 1869, "unlock": 1869, "intuit": 1869, "alik": 1869, "grai": 1869, "systemat": 1869, "onboard": 1869, "maskedarrai": 1869, "masked_tensor": 1869, "blocklist": [1870, 1904], "mobileoptimizertyp": 1870, "conv_bn_fus": 1870, "correspondingli": 1870, "prepack": [1870, 1902], "insert_fold_prepack_op": 1870, "arm": [1870, 1907], "remove_dropout": 1870, "hoist": 1870, "hoist_conv_packed_param": 1870, "fuse_add_relu": 1870, "vulkan": 1870, "vulkan_automatic_gpu_transf": 1870, "freeze_modul": 1870, "script_modul": 1870, "optimization_blocklist": 1870, "preserved_method": 1870, "_mobileoptimizertyp": 1870, "recursivescriptmodul": [1870, 1898], "infrequ": 1872, "window_s": 1872, "max_sampl": 1872, "cap": 1872, "_monitor": 1872, "data_value_t": 1872, "eventhandlerhandl": 1872, "register_event_handl": 1872, "unregister_event_handl": 1872, "tensorboardeventhandl": 1872, "writer": [1872, 1893, 1921], "shared_memori": 1874, "abruptli": 1874, "get_all_sharing_strategi": 1874, "get_sharing_strategi": 1874, "set_sharing_strategi": 1874, "new_strategi": 1874, "abnorm": [1874, 1895], "fatal": [1874, 1895], "forev": [1874, 1886], "asap": 1874, "queue_2": 1874, "x_clone": 1874, "shm_open": 1874, "mmap": 1874, "destructor": [1874, 1914], "torch_shm_manag": 1874, "unnot": 1874, "spawncontext": 1874, "has_nam": 1875, "is_shar": [1875, 1918], "is_sparse_csr": [1875, 1902, 1918], "is_tensor": [1875, 1916], "items": [1875, 1902], "unifies_names_from_input_tensor": 1875, "nbyte": [1875, 1902, 1918], "ndimens": 1875, "position": [1875, 1876], "unnam": [1875, 1876], "misalign": 1875, "inher": 1875, "disappear": 1875, "img": [1876, 1921], "renamed_img": 1876, "coexist": 1876, "scale_channel": 1876, "more_img": 1876, "named_tensor": 1876, "named_img": 1876, "flat_img": 1876, "named_flat_img": 1876, "unflattened_img": 1876, "unflattened_named_img": 1876, "grad_loss": 1876, "8107": 1876, "6357": 1876, "0783": 1876, "untest": 1876, "rename_map": 1876, "greedili": 1876, "unment": 1876, "49152": 1876, "datastructur": 1877, "seamless": 1877, "nested_tensor": 1877, "nt": 1877, "vein": 1877, "as_nested_tensor": 1877, "irregular": 1877, "indistinguish": 1877, "2286": 1877, "4842": 1877, "7827": 1877, "6745": [1877, 1917], "0658": 1877, "1247": 1877, "4078": 1877, "8083": 1877, "2871": 1877, "5559": 1877, "9885": 1877, "4074": 1877, "4855": 1877, "0733": 1877, "8285": 1877, "6858": 1877, "7030": 1877, "3481": 1877, "0236": 1877, "fake_grad": 1877, "6862": 1877, "1282": 1877, "1031": 1877, "0464": 1877, "3276": 1877, "9967": 1877, "0054": 1877, "8972": 1877, "9174": 1877, "4995": 1877, "8546": 1877, "7194": 1877, "2918": 1877, "1846": 1877, "8793": 1877, "5183": 1877, "6447": 1877, "8009": 1877, "8468": 1877, "9832": 1877, "5272": 1877, "pt_infer": 1877, "pt_larg": 1877, "pt_small": 1877, "bitwidth": [1878, 1893, 1907], "asymmetr": [1878, 1907, 1910], "sacrific": [1880, 1885], "dirac": 1880, "glorot": 1880, "bengio": 1880, "fan": 1880, "_in": 1880, "fan_in": 1880, "delv": 1880, "surpass": 1880, "he": 1880, "_mode": 1880, "fan_out": 1880, "redrawn": 1880, "sax": 1880, "2013": 1880, "marten": 1880, "walkthrough": 1881, "clip_grad_value_": 1881, "optimizer2": 1881, "batch_per_it": 1881, "iters_to_accumul": 1881, "num_proc": 1881, "grad_param": 1881, "grad_norm": 1881, "scaled_grad_param": 1881, "inv_scal": 1881, "optimizer0": 1881, "optimizer1": 1881, "output0": 1881, "model0": 1881, "model1": 1881, "loss0": 1881, "loss1": 1881, "imped": 1881, "poor": [1881, 1882], "dp_model": 1881, "imported_funct": 1881, "mymm": 1881, "myfloat32func": 1881, "fwd_output": 1881, "cleaner": 1882, "mapsto": 1882, "educ": 1882, "_save": 1882, "_saved_self": 1882, "convex": 1882, "concav": 1882, "togglabl": 1882, "drawback": 1882, "0011": 1882, "dirti": 1882, "hogwild": 1882, "train_fn": 1882, "graphtask": 1882, "copyslic": 1882, "mutex": 1882, "gotten": 1882, "curiou": 1882, "\u2102": 1882, "yj": 1882, "holomorph": 1882, "theori": 1882, "homomorph": 1882, "mathematician": 1882, "im": 1882, "studi": [1882, 1906], "beauti": 1882, "somewhat": [1882, 1885, 1916], "counterintuit": 1882, "0906": 1882, "4835": 1882, "audio": [1882, 1921], "\u211d": 1882, "_output": 1882, "vj": 1882, "selfdeletingtempfil": 1882, "tmp_dir": 1882, "uuid": 1882, "uuid4": 1882, "temp_fil": 1882, "forbidden": 1882, "savedtensor": 1882, "_raw_saved_": 1882, "_raw_saved_self": 1882, "save_on_disk_threshold": 1882, "tensor_or_sctf": 1882, "_saved_oth": 1882, "4th": 1883, "backcompat": 1883, "broadcast_warn": 1883, "userwarn": 1883, "compute_z": 1884, "w_z": 1884, "w_y": 1884, "tbb": 1884, "aten_thread": 1884, "omp": 1884, "mkl_thread": 1884, "bla": 1884, "mkldnn_cpu_runtim": 1884, "use_mkldnn": 1884, "use_tbb": 1884, "use_openmp": 1884, "ON": [1884, 1891, 1892], "set_num_interop_thread": 1884, "get_num_interop_thread": 1884, "set_num_thread": 1884, "get_num_thread": 1884, "omp_num_thread": 1884, "mkl_num_thread": 1884, "1024": [1884, 1885], "e5": 1884, "oversubscript": 1884, "irrespect": 1885, "spread": 1885, "cuda2": [1885, 1891], "a_ful": 1885, "10240": 1885, "b_full": 1885, "ab_ful": 1885, "7277": 1885, "ab_tf32": 1885, "016": 1885, "ga100": 1885, "1747": 1885, "relative_error": 1885, "0022": 1885, "ab_fp32": 1885, "0031": 1885, "000039": 1885, "7x": 1885, "globalcontext": 1885, "setallowtf32cubla": 1885, "setallowtf32cudnn": 1885, "bench_gemm_transform": 1885, "allow_fp16_reduc": 1885, "4048": 1885, "1634": 1885, "1639": 1885, "4056": 1885, "1670": 1885, "1661": 1885, "4080": 1885, "1664": 1885, "1658": 1885, "1651": 1885, "4104": 1885, "1677": 1885, "1674": 1885, "4128": 1885, "1796": [1885, 1893], "2519": 1885, "5096": 1885, "2144": 1885, "2149": 1885, "2766": 1885, "5120": 1885, "2142": 1885, "9728": 1885, "3875": 1885, "5779": 1885, "6182": 1885, "9656": 1885, "setallowfp16reductioncubla": 1885, "instabl": 1885, "setallowbf16reductioncubla": 1885, "start_ev": 1885, "elapsed_time_m": 1885, "exploit": 1885, "paragraph": [1885, 1890], "initial_grad": 1885, "memory_alloc": [1885, 1891], "memory_snapshot": [1885, 1891], "memcheck": 1885, "pytorch_no_cuda_memory_cach": [1885, 1891], "option2": 1885, "value2": 1885, "max_split_size_mb": 1885, "borderlin": 1885, "memory_summari": 1885, "resort": [1885, 1890, 1904], "roundup_power2_divis": 1885, "cudacachingalloc": 1885, "1280": 1885, "1536": 1885, "1792": 1885, "256mb": 1885, "512mb": 1885, "1gb": 1885, "roundup_bypass_threshold_mb": 1885, "garbage_collection_threshold": 1885, "release_cached_block": 1885, "unfavor": 1885, "cuda_runtime_api": 1885, "iostream": 1885, "fpic": 1885, "my_malloc": 1885, "cout": 1885, "endl": [1885, 1892], "my_fre": 1885, "cudafre": 1885, "cudapluggablealloc": 1885, "new_alloc": 1885, "_cuda_clearcublasworkspac": 1885, "kib": 1885, "lru": 1885, "geometri": 1885, "1023": 1885, "use_pytorch_kernel_cach": 1885, "pytorch_kernel_cache_path": 1885, "store_tru": 1885, "disable_cuda": 1885, "assess": 1885, "cudagetdevicecount": 1885, "cuinit": 1885, "pytorch_nvml_based_cuda_check": 1885, "nvml": 1885, "nvmldevicegetcount_v2": 1885, "poison": 1885, "aforement": [1885, 1895], "train_load": 1885, "x_cpu": 1885, "x_gpu": 1885, "x_cpu_long": 1885, "y_cpu": 1885, "y_gpu": 1885, "y_cpu_long": 1885, "new_tensor": 1885, "overus": 1885, "cudagraphlaunch": 1885, "elid": 1885, "versatil": 1885, "static_input": 1885, "static_output": 1885, "realist": 1885, "sophist": [1885, 1903], "violat": [1885, 1888], "prohibit": [1885, 1898], "virtual": 1885, "d_in": 1885, "d_out": 1885, "640": 1885, "static_target": 1885, "static_y_pr": 1885, "static_loss": 1885, "real_target": 1885, "refil": 1885, "dag": 1885, "rejoin": 1885, "cuda_work": 1885, "nsight": 1885, "reorgan": 1885, "graphabl": 1885, "econom": 1885, "static_out_1": 1885, "g1_workload": 1885, "static_in_1": 1885, "static_out_2": 1885, "g2_workload": 1885, "static_in_2": 1885, "real_data_1": 1885, "real_data_2": 1885, "29500": [1886, 1905, 1912, 1913], "prerequisit": 1886, "grad0": 1886, "grad1": 1886, "bucket1": 1886, "bucket0": 1886, "hurt": 1886, "earliest": 1886, "unreadi": 1886, "absent": 1886, "hpp": 1886, "processgroupgloo": 1886, "processgroupmpi": 1886, "_sync_param": 1886, "autograd_hook": 1886, "prepare_for_backward": 1886, "_after_": 1886, "optimize_ddp": 1886, "mark_dirti": 1887, "mark_non_differenti": [1887, 1888], "set_materialize_grad": 1887, "linearfunct": 1887, "grad_bia": 1887, "mulconst": 1887, "mycub": [1887, 1888], "grad_dx": [1887, 1888], "my_cub": [1887, 1888], "input_featur": 1887, "output_featur": 1887, "duck": [1887, 1904], "__array_function__": 1887, "nep": 1887, "0018": 1887, "scalartensor": 1887, "handled_funct": 1887, "mandat": 1887, "update_wrapp": 1887, "ensure_tensor": 1887, "metadatatensor": 1887, "__add__": 1887, "subtensor2": 1887, "othersubtensor": 1887, "loggingtensor": 1887, "permiss": 1887, "_metadata": 1887, "ndata": 1887, "ret": [1887, 1912], "ministri": 1887, "silli": 1887, "superclass": 1887, "troublesom": 1887, "_get_overridable_funct": 1887, "overriden": 1887, "get_overridable_funct": [1887, 1927], "func_dict": 1887, "nn_func": 1887, "labori": 1887, "_get_testing_overrid": 1887, "get_testing_overrid": [1887, 1927], "override_dict": 1887, "dummy_add": 1887, "get_ignored_funct": [1887, 1927], "custom_vjp": 1888, "custom_jvp": 1888, "to_numpi": 1888, "numpysort": 1888, "ind_inv": 1888, "_1": [1888, 1904], "numpytak": 1888, "numpy_sort": 1888, "saniti": 1888, "ggx": 1888, "vmappabl": 1888, "x_bdim": 1888, "ind_bdim": 1888, "ind_inv_bdim": 1888, "expanded_x": 1888, "expanded_ind": 1888, "expanded_ind_inv": 1888, "new_dim": 1888, "logical_dim": 1888, "maybe_expand_bdim_at_front": 1888, "pseudocod": 1888, "rapidli": 1889, "abridg": 1889, "total_loss": 1889, "extrud": 1889, "phenomenon": 1889, "plenti": 1889, "bptt": 1889, "repackag": 1889, "nm": 1889, "blow": 1889, "elf": 1889, "grep": 1889, "run_model": 1889, "recoveri": 1889, "data_parallel": 1889, "pad_packed_sequ": 1889, "padded_input": 1889, "packed_input": 1889, "packed_output": 1889, "my_lstm": 1889, "dp_m": 1889, "padding_input": 1889, "ur": 1890, "rewritten": 1890, "j_f": 1890, "calculu": 1890, "cw": 1890, "bigger": 1890, "articl": 1890, "58eb23378f2a376565a66ac32c93a316c45b6131": 1890, "l99": 1890, "l105": 1890, "ds_dx": 1890, "compute_gradi": 1890, "ds_dy": 1890, "conj_w_d": 1890, "w_d": 1890, "d_idx": 1890, "albeit": 1890, "wonder": 1890, "amd": 1891, "dialect": 1891, "portabl": 1891, "rocmdoc": 1891, "programming_guid": 1891, "hip_api_guid": 1891, "cuda_vers": 1891, "cudaruntimegetvers": 1891, "cudadrivergetvers": 1891, "hip_vers": 1891, "hipruntimegetvers": 1891, "hipdrivergetvers": 1891, "11000": 1891, "use_rocm": 1891, "rocm_vers": 1891, "40300": 1891, "cmake": [1891, 1899], "drocm_force_enable_gpu_assert": 1891, "addglobalcallback": 1892, "recordfunct": 1892, "ivalu": 1892, "threadlocaldebuginfo": 1892, "debuginfoguard": 1892, "recordfunctioncallback": 1892, "onfunctionent": 1892, "onfunctionexit": 1892, "needsinput": 1892, "samplingprob": 1892, "enablerecordfunct": 1892, "cerr": 1892, "broader": [1892, 1924], "inject": 1892, "setapiusagehandl": 1892, "setapiusagelogg": 1892, "event_nam": 1892, "c10_log_api_usage_onc": 1892, "my_api": 1892, "_log_api_usage_onc": 1892, "archiv": 1892, "bundl": 1892, "akin": 1892, "jpeg": 1892, "camera": [1892, 1921], "setexportmoduleextrafileshook": 1892, "extrafilesmap": 1892, "producer_info": 1892, "getenv": 1892, "getsourc": 1892, "precompil": 1892, "pyc": 1892, "loos": 1892, "elabor": 1893, "tpu": 1893, "mylinear": 1893, "sample_input": 1893, "0413": 1893, "2057": 1893, "0597": 1893, "8247": 1893, "1045": 1893, "4299": 1893, "5457": 1893, "4793": 1893, "3634": 1893, "8525": 1893, "6749": 1893, "l0": [1893, 1898], "bignet": 1893, "big_net": 1893, "dynamicnet": 1893, "dynamic_net": 1893, "2051": 1893, "7601": 1893, "1963": 1893, "4354": 1893, "6598": 1893, "4446": 1893, "4628": 1893, "8774": 1893, "6848": 1893, "5458": 1893, "4647": 1893, "5310": 1893, "0609": 1893, "0940": 1893, "1266": 1893, "0623": 1893, "3508": 1893, "0550": 1893, "5317": 1893, "5562": 1893, "4028": 1893, "6942": 1893, "0140": 1893, "0329": 1893, "1160": 1893, "0434": 1893, "3889": 1893, "1613": 1893, "6340": 1893, "3887": 1893, "9979": 1893, "0767": 1893, "3526": 1893, "8756": 1893, "5847": 1893, "6016": 1893, "1608": 1893, "0829": 1893, "6338": 1893, "9239": 1893, "6943": 1893, "5034": 1893, "0268": 1893, "4489": 1893, "9403": 1893, "2509": 1893, "5052": 1893, "3088": 1893, "4951": 1893, "3381": 1893, "5166": 1893, "boilerpl": [1893, 1904], "beginn": 1893, "examples_nn": 1893, "polynomial_modul": 1893, "teach": 1893, "0013": [1893, 1917], "0030": 1893, "0008": 1893, "modalmodul": 1893, "6614": 1893, "2669": 1893, "0617": 1893, "4519": 1893, "two_layer_net_optim": 1893, "blitz": 1893, "neural_networks_tutori": 1893, "autograd_tutori": 1893, "new_net": 1893, "runningmean": 1893, "1041": 1893, "0647": 1893, "1515": 1893, "m_load": 1893, "unserialized_th": 1893, "statefulmodul": 1893, "param3": 1893, "param_list": 1893, "parameterlist": 1893, "param_dict": 1893, "parameterdict": 1893, "buffer1": 1893, "buffer2": 1893, "buffer3": 1893, "0322": 1893, "9066": 1893, "1409": 1893, "4852": 1893, "6949": 1893, "2911": 1893, "1044": 1893, "4202": 1893, "1953": 1893, "5299": 1893, "8747": 1893, "6289": 1893, "4898": 1893, "6434": 1893, "5187": 1893, "0346": 1893, "4077": 1893, "4324": 1893, "7022": 1893, "3915": 1893, "6176": 1893, "6062": 1893, "5992": 1893, "4452": 1893, "2843": 1893, "3710": 1893, "3947": 1893, "saving_loading_model": 1893, "what_is_state_dict": 1893, "skip_init": 1893, "skip_param_init": 1893, "new_grad_input": 1893, "5059": 1893, "8158": 1893, "2390": 1893, "0043": 1893, "addmmbackward": 1893, "forward_pre_hook_handl": 1893, "5752": 1893, "7421": 1893, "forward_hook_handl": 1893, "0980": 1893, "4666": 1893, "0256": 1893, "4497": 1893, "5046": 1893, "combat": 1893, "shader": 1894, "mps_devic": 1894, "yourfavoritenet": 1894, "a3c": 1895, "set_start_method": 1895, "simplequeu": 1895, "cope": 1895, "eleg": 1895, "num_process": 1895, "modern": 1896, "754": 1896, "1e20": 1896, "4142e": 1896, "struggl": 1896, "benign": 1896, "v_dot2": 1896, "mfma": 1896, "fp64": 1896, "rocbla": 1896, "miopen": 1896, "rocblas_internal_fp16_alt_impl": 1896, "miopen_debug_convolution_attrib_fp16_alt_impl": 1896, "_convbackend": 1896, "slownd": 1896, "slownd_transpos": 1896, "slownd_dil": 1896, "slownd_dilated_transpos": 1896, "convbackend": 1896, "miopendepthwis": 1896, "miopentranspos": 1896, "svd_lowrank": [1897, 1916], "22modul": 1897, "20determin": 1897, "index_add_cuda_": 1897, "1509": 1897, "8027": 1897, "0333": 1897, "1444": 1897, "rese": 1897, "seed_work": 1897, "worker_se": 1897, "train_dataset": 1897, "tensor_dict": 1898, "loaded_numb": 1898, "loaded_even": 1898, "scene": [1898, 1921], "loaded_smal": 1898, "num_batches_track": 1898, "bn_state_dict": 1898, "new_bn": 1898, "out0_relu": 1898, "1400": 1898, "4563": 1898, "0271": 1898, "4406": 1898, "2827": 1898, "4588": 1898, "2031": 1898, "0300": 1898, "1316": 1898, "6533": 1898, "3413": 1898, "1112": 1898, "m_state_dict": 1898, "new_m": 1898, "original_nam": 1898, "controlflowmodul": 1898, "controlflowmodule_trac": 1898, "3793": 1898, "controlflowmodule_script": 1898, "rem": 1899, "7z": 1899, "curl": 1899, "ossci": 1899, "mkl_2020": 1899, "aoa": 1899, "omkl": 1899, "cuda_prefix": 1899, "cuda102": 1899, "magma_2": 1899, "4_": 1899, "omagma": 1899, "cmake_include_path": 1899, "magma_hom": 1899, "studio": 1899, "pip": [1899, 1900, 1921], "cmake_gener": 1899, "ffi": 1899, "create_extens": 1899, "_ext": 1899, "define_macro": 1899, "relative_to": 1899, "c99": 1899, "x86_x64": 1899, "packagesnotfounderror": 1899, "anaconda": 1899, "noarch": 1899, "continuum": 1899, "pkg": 1899, "pro": [1899, 1921], "msys2": 1899, "importerror": [1899, 1904], "dll": 1899, "vc2017": 1899, "redistribut": 1899, "vc": 1899, "vs2017_runtim": 1899, "mkl_fft": 1899, "intel_openmp": 1899, "vs2017": 1899, "openbla": 1899, "forg": 1899, "bootstrap": 1899, "forgotten": 1899, "idiom": 1899, "freeze_support": 1899, "forkingpickl": 1899, "brokenpipeerror": 1899, "errno": 1899, "couldn": [1899, 1900], "torch_14808_1591070686": 1899, "thalloc": 1899, "tdr": 1899, "thcudacheck": 1899, "storageshar": 1899, "dummy_input": 1900, "input_nam": 1900, "actual_input_1": 1900, "learned_": 1900, "output_nam": 1900, "learned_0": 1900, "learned_1": 1900, "learned_2": 1900, "learned_3": 1900, "learned_14": 1900, "learned_15": 1900, "kernel_shap": 1900, "9216": 1900, "transb": 1900, "check_model": 1900, "printable_graph": 1900, "onnxruntim": 1900, "ort": 1900, "ort_sess": 1900, "inferencesess": 1900, "astyp": 1900, "seq_length": 1900, "real_seq_length": 1900, "experienc": 1900, "new_data": 1900, "hope": 1900, "symbolic_opset": 1900, "symbolic_opset9": 1900, "_variablefunct": 1900, "pyi": 1900, "___torch_mangle_0": 1900, "alpha_f": 1900, "myrelu": 1900, "value_t": 1900, "pythonop": [1900, 1902], "mylogexp": 1900, "operator_export_typ": 1900, "onnx_fallthrough": 1900, "onnx_aten_fallback": 1900, "onnxscript": 1900, "onnx_opset": 1900, "opset15": 1900, "custom_opset": 1900, "67326": 1900, "alphax": 1900, "castlik": 1900, "gammax": 1900, "settyp": 1900, "custom_selu": 1900, "jit_util": 1900, "graphcontext": 1900, "onnxscript_op": 1900, "register_custom_op_symbol": 1900, "symbolic_nam": 1900, "symbolic_fn": 1900, "symbolic_help": 1900, "symbolic_foo_forward": 1900, "custom_domain": 1900, "attr1_f": 1900, "attr2_i": 1900, "foo_forward": 1900, "foomodel": 1900, "example_input1": 1900, "caffe2": [1900, 1921], "torch_script_graph": 1900, "unconvertible_op": 1900, "dynamic_ax": 1900, "export_param": 1900, "trainingmod": 1900, "operatorexporttyp": 1900, "do_constant_fold": 1900, "keep_initializers_as_input": 1900, "export_modules_as_funct": 1900, "OF": 1900, "WITH": 1900, "input_i": 1900, "input_z": 1900, "fileno": 1900, "untrain": 1900, "doc_str": 1900, "onnx_aten": 1900, "build_caffe2": 1900, "summodul": 1900, "dim_valu": 1900, "my_custom_axis_nam": 1900, "dim_param": 1900, "sum_dynamic_axes_1": 1900, "predefin": 1900, "checkererror": 1900, "unsupportedoperatorerror": 1900, "export_to_pretty_str": 1900, "export_typ": 1900, "google_print": 1900, "add_node_nam": 1900, "nodeproto": 1900, "debugstr": 1900, "contrib": 1900, "test_aten_embedding_2": 1900, "test_oper": 1900, "unregister_custom_op_symbol": 1900, "select_model_mode_for_export": 1900, "is_in_onnx_export": 1900, "middl": 1900, "enable_log": 1900, "disable_log": 1900, "graphinfo": 1900, "incorrect_relu_symbolic_funct": 1900, "2328854203224182": 1900, "699536174352349": 1900, "rapid": 1900, "exportopt": 1900, "my_nn_modul": 1900, "my_nn_module_attribut": 1900, "underdevelop": 1901, "parsabl": 1901, "sarif": 1901, "diagsys0001": 1901, "fxe0001": 1901, "fxe0002": 1901, "fxe0003": 1901, "fxe0004": 1901, "fxe0005": 1901, "fxe0006": 1901, "atenlib": 1901, "fxe0007": 1901, "fxe0008": 1901, "fxe0009": 1901, "fxe0010": 1901, "fxe0011": 1901, "fxe0012": 1901, "poe0001": 1901, "poe0002": 1901, "poe0003": 1901, "poe0004": 1901, "_intern": [1901, 1918], "exportdiagnost": 1901, "frames_to_skip": 1901, "cpp_stack": 1901, "record_cpp_call_stack": 1901, "constantchunk": 1902, "__and_": 1902, "__contains_": 1902, "__derive_index": 1902, "__getitem_": 1902, "__interpol": 1902, "__is_": 1902, "__isnot_": 1902, "__lshift_": 1902, "__not_": 1902, "__or_": 1902, "__range_length": 1902, "__rshift_": 1902, "__xor_": 1902, "_cast_byt": 1902, "_cast_char": 1902, "_cast_doubl": 1902, "_cast_float": 1902, "_cast_half": 1902, "_cast_int": 1902, "_cast_long": 1902, "_cast_short": 1902, "_conj": 1902, "_convolution_mod": 1902, "_dim_arang": 1902, "_pack_padded_sequ": 1902, "_pad_packed_sequ": 1902, "_reshape_from_tensor": 1902, "_sample_dirichlet": 1902, "_set_item": 1902, "_shape_as_tensor": 1902, "_standard_gamma": 1902, "_uniqu": 1902, "_unique2": 1902, "_weight_norm": 1902, "conv1d_relu": 1902, "conv2d_relu": 1902, "embedding_renorm": 1902, "floordiv": [1902, 1909], "nonzero_numpi": 1902, "numpy_t": 1902, "unchecked_cast": 1902, "unique_dim": 1902, "_quantiz": 1902, "conv2d_prepack": 1902, "conv3d_prepack": 1902, "conv3d_relu": 1902, "conv_transpose1d_prepack": 1902, "conv_transpose2d_prepack": 1902, "conv_transpose3d_prepack": 1902, "linear_dynam": 1902, "linear_prepack": 1902, "linear_prepack_fp16": 1902, "linear_prepack_fp16_legaci": 1902, "linear_prepack_legaci": 1902, "_test": 1902, "get_first": 1902, "compleximplicit": 1902, "floatimplicit": 1902, "intimplicit": 1902, "__iand_": 1902, "__ilshift_": 1902, "__ior_": 1902, "__irshift_": 1902, "__ixor_": 1902, "__round_to_zero_floordiv": 1902, "__upsampl": 1902, "__upsample_bilinear": 1902, "__upsample_nearest": 1902, "_adaptive_avg_pool3d": 1902, "_add_batch_dim": 1902, "_add_relu": 1902, "_addmm_activ": 1902, "_aminmax": 1902, "_amp_foreach_non_finite_check_and_unscal": 1902, "_amp_update_scal": 1902, "_assert_async": 1902, "_assert_tensor_metadata": 1902, "_autocast_to_full_precis": 1902, "_autocast_to_reduced_precis": 1902, "_batch_norm_impl_index": 1902, "_cdist_forward": 1902, "_cholesky_solve_help": 1902, "_choose_qparams_per_tensor": 1902, "_chunk_grad_outputs_efficient_attent": 1902, "_coalesc": 1902, "_compute_linear_combin": 1902, "_conj_copi": 1902, "_conj_phys": 1902, "_conv_depthwise2d": 1902, "_convert_indices_from_coo_to_csr": 1902, "_convert_indices_from_csr_to_coo": 1902, "_copy_from": 1902, "_copy_from_and_res": 1902, "_ctc_loss": 1902, "_cudnn_ctc_loss": 1902, "_cudnn_init_dropout_st": 1902, "_cudnn_rnn": 1902, "_cudnn_rnn_flatten_weight": 1902, "_cufft_clear_plan_cach": 1902, "_cufft_get_plan_cache_max_s": 1902, "_cufft_get_plan_cache_s": 1902, "_cufft_set_plan_cache_max_s": 1902, "_cummax_help": 1902, "_cummin_help": 1902, "_debug_has_internal_overlap": 1902, "_dimi": 1902, "_dimv": 1902, "_dirichlet_grad": 1902, "_efficient_attention_forward": 1902, "_efficientzerotensor": 1902, "_embedding_bag": 1902, "_embedding_bag_forward_onli": 1902, "_empty_affine_quant": 1902, "_empty_per_channel_affine_quant": 1902, "_euclidean_dist": 1902, "_fake_quantize_learnable_per_channel_affin": 1902, "_fake_quantize_learnable_per_tensor_affin": 1902, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1902, "_fft_c2c": 1902, "_fft_c2r": 1902, "_fft_r2c": 1902, "_flash_attention_forward": 1902, "_foreach_ab": 1902, "_foreach_aco": 1902, "_foreach_add": 1902, "_foreach_addcdiv": 1902, "_foreach_addcmul": 1902, "_foreach_asin": 1902, "_foreach_atan": 1902, "_foreach_ceil": 1902, "_foreach_clamp_max": 1902, "_foreach_clamp_min": 1902, "_foreach_co": 1902, "_foreach_cosh": 1902, "_foreach_div": 1902, "_foreach_erf": 1902, "_foreach_erfc": 1902, "_foreach_exp": 1902, "_foreach_expm1": 1902, "_foreach_floor": 1902, "_foreach_frac": 1902, "_foreach_lerp": 1902, "_foreach_lgamma": 1902, "_foreach_log": 1902, "_foreach_log10": 1902, "_foreach_log1p": 1902, "_foreach_log2": 1902, "_foreach_maximum": 1902, "_foreach_minimum": 1902, "_foreach_mul": 1902, "_foreach_neg": 1902, "_foreach_norm": 1902, "_foreach_pow": 1902, "_foreach_reciproc": 1902, "_foreach_round": 1902, "_foreach_sigmoid": 1902, "_foreach_sin": 1902, "_foreach_sinh": 1902, "_foreach_sqrt": 1902, "_foreach_sub": 1902, "_foreach_tan": 1902, "_foreach_tanh": 1902, "_foreach_trunc": 1902, "_foreach_zero": 1902, "_fused_adam": 1902, "_fused_adamw": 1902, "_fused_dropout": 1902, "_fused_moving_avg_obs_fq_help": 1902, "_fused_moving_avg_obs_fq_helper_funct": 1902, "_fused_sdp_choic": 1902, "_fw_primal": 1902, "_fw_primal_copi": 1902, "_get_cpu_cap": 1902, "_get_tracing_st": 1902, "_grad_sum_to_s": 1902, "_has_compatible_shallow_copy_typ": 1902, "_has_same_storage_numel": 1902, "_histogramdd_bin_edg": 1902, "_histogramdd_from_bin_ct": 1902, "_histogramdd_from_bin_tensor": 1902, "_index_put_impl": 1902, "_indices_copi": 1902, "_infer_s": 1902, "_int_mm": 1902, "_is_all_tru": 1902, "_is_any_tru": 1902, "_is_zerotensor": 1902, "_linalg_check_error": 1902, "_linalg_det": 1902, "_linalg_eigh": 1902, "_linalg_slogdet": 1902, "_linalg_solve_ex": 1902, "_linalg_svd": 1902, "_list_to_tensor": 1902, "_local_scalar_dens": 1902, "_logcumsumexp": 1902, "_lstm_mp": 1902, "_make_du": 1902, "_make_dual_copi": 1902, "_make_per_channel_quantized_tensor": 1902, "_make_per_tensor_quantized_tensor": 1902, "_masked_scal": 1902, "_masked_softmax": 1902, "_mkldnn_reshap": 1902, "_mkldnn_transpos": 1902, "_mps_convolut": 1902, "_mps_convolution_transpos": 1902, "_native_batch_norm_legit_funct": 1902, "_native_batch_norm_legit_no_train": 1902, "_native_multi_head_attent": 1902, "_ncf_unsqueez": 1902, "_ncf_view": 1902, "_neg_view": 1902, "_neg_view_copi": 1902, "_nested_from_pad": 1902, "_nested_from_padded_and_nested_exampl": 1902, "_nested_tensor_from_mask": 1902, "_nested_tensor_from_mask_left_align": 1902, "_nested_tensor_from_tensor_list": 1902, "_nested_tensor_s": 1902, "_nested_tensor_softmax_with_shap": 1902, "_nested_tensor_storage_offset": 1902, "_nested_tensor_strid": 1902, "_nested_view_from_buff": 1902, "_nested_view_from_buffer_copi": 1902, "_new_zeros_with_same_feature_meta": 1902, "_nnpack_avail": 1902, "_nnpack_spatial_convolut": 1902, "_no_grad_embedding_renorm": 1902, "_no_grad_fil": 1902, "_no_grad_norm": 1902, "_no_grad_uniform": 1902, "_no_grad_zero": 1902, "_pack_sequ": 1902, "_pad_circular": 1902, "_pad_enum": 1902, "_pdist_forward": 1902, "_pin_memori": 1902, "_prelu_kernel": 1902, "_propagate_xla_data": 1902, "_remove_batch_dim": 1902, "_reshape_alia": 1902, "_reshape_alias_copi": 1902, "_reshape_copi": 1902, "_resize_output": 1902, "_rowwise_prun": 1902, "_saturate_weight_to_fp16": 1902, "_scaled_dot_product_attent": 1902, "_scaled_dot_product_attention_math": 1902, "_scaled_dot_product_efficient_attent": 1902, "_scaled_dot_product_flash_attent": 1902, "_size_if_not_equ": 1902, "_slow_conv2d_forward": 1902, "_sobol_engine_draw": 1902, "_sobol_engine_ff": 1902, "_sobol_engine_initialize_st": 1902, "_sobol_engine_scrambl": 1902, "_sparse_addmm": 1902, "_sparse_broadcast_to": 1902, "_sparse_broadcast_to_copi": 1902, "_sparse_bsc_tensor_unsaf": 1902, "_sparse_bsr_tensor_unsaf": 1902, "_sparse_compressed_tensor_unsaf": 1902, "_sparse_coo_tensor_unsaf": 1902, "_sparse_coo_tensor_with_dim": 1902, "_sparse_coo_tensor_with_dims_and_tensor": 1902, "_sparse_csc_tensor_unsaf": 1902, "_sparse_csr_prod": 1902, "_sparse_csr_sum": 1902, "_sparse_csr_tensor_unsaf": 1902, "_sparse_log_softmax": 1902, "_sparse_mm": 1902, "_sparse_mm_reduce_impl": 1902, "_sparse_softmax": 1902, "_sparse_sparse_matmul": 1902, "_sparse_sum": 1902, "_spdiag": 1902, "_standard_gamma_grad": 1902, "_structured_sparse_linear": 1902, "_tensor_to_list": 1902, "_test_ambiguous_default": 1902, "_test_autograd_multiple_dispatch": 1902, "_test_autograd_multiple_dispatch_view": 1902, "_test_autograd_multiple_dispatch_view_copi": 1902, "_test_check_tensor": 1902, "_test_functorch_fallback": 1902, "_test_optional_filled_intlist": 1902, "_test_optional_floatlist": 1902, "_test_optional_intlist": 1902, "_test_serialization_subcmul": 1902, "_test_string_default": 1902, "_test_warn_in_autograd": 1902, "_thnn_fused_gru_cel": 1902, "_thnn_fused_lstm_cel": 1902, "_to_cpu": 1902, "_to_dens": 1902, "_transform_bias_rescale_qkv": 1902, "_transformer_encoder_layer_fwd": 1902, "_trilinear": 1902, "_triton_multi_head_attent": 1902, "_triton_scaled_dot_attent": 1902, "_unpack_du": 1902, "_unsafe_index": 1902, "_unsafe_index_put": 1902, "_unsafe_view": 1902, "_unwrap_opt": 1902, "_upsample_bicubic2d_aa": 1902, "_upsample_bilinear2d_aa": 1902, "_upsample_nearest_exact1d": 1902, "_upsample_nearest_exact2d": 1902, "_upsample_nearest_exact3d": 1902, "_use_cudnn_ctc_loss": 1902, "_use_cudnn_rnn_flatten_weight": 1902, "_validate_compressed_sparse_indic": 1902, "_validate_sparse_bsc_tensor_arg": 1902, "_validate_sparse_bsr_tensor_arg": 1902, "_validate_sparse_compressed_tensor_arg": 1902, "_validate_sparse_coo_tensor_arg": 1902, "_validate_sparse_csc_tensor_arg": 1902, "_validate_sparse_csr_tensor_arg": 1902, "_values_copi": 1902, "_weight_norm_interfac": 1902, "capit": 1902, "confirmed_by_own": [1902, 1912], "convolution_overrid": 1902, "copy_sparse_to_spars": 1902, "endswith": 1902, "expandtab": 1902, "fake_quantize_per_channel_affine_cachemask": 1902, "fake_quantize_per_tensor_affine_cachemask": 1902, "fill_diagon": 1902, "glu_jvp": 1902, "has_torch_funct": [1902, 1927], "is_non_overlapping_and_dens": 1902, "is_own": 1902, "is_strides_like_format": 1902, "isalnum": 1902, "isalpha": 1902, "isdecim": 1902, "isdigit": 1902, "isidentifi": 1902, "islow": 1902, "isnumer": 1902, "isprint": 1902, "isspac": 1902, "istitl": 1902, "isupp": 1902, "lift_fresh": 1902, "lift_fresh_copi": 1902, "ljust": 1902, "local_valu": [1902, 1905], "log_sigmoid_forward": 1902, "lstrip": 1902, "matrix_h": 1902, "nll_loss2d_forward": 1902, "nll_loss_forward": 1902, "normal_funct": 1902, "owner_nam": 1902, "percentformat": 1902, "quantized_gru": 1902, "quantized_lstm": 1902, "resize_as_spars": 1902, "rfind": 1902, "rindex": 1902, "rjust": 1902, "rpartit": 1902, "rsplit": 1902, "rstrip": 1902, "set_data": 1902, "slow_conv3d_forward": 1902, "sparse_res": 1902, "sparse_resize_and_clear": 1902, "splitlin": 1902, "startswith": 1902, "swapcas": 1902, "sym_numel": 1902, "sym_siz": 1902, "sym_storage_offset": 1902, "sym_strid": 1902, "unique_dim_consecut": 1902, "zfill": 1902, "_allgather_bas": 1902, "_reduce_scatter_bas": 1902, "allgath": 1902, "allgather_coalesc": 1902, "allgather_into_tensor_coalesc": 1902, "allreduce_coalesc": 1902, "alltoal": 1902, "alltoall_bas": 1902, "recv_any_sourc": 1902, "debugprim": 1902, "load_tensor": 1902, "_mkl_linear": 1902, "_mkl_reorder_linear_weight": 1902, "_convolution_pointwis": 1902, "_convolution_transpose_pointwis": 1902, "_is_mkldnn_bf16_support": 1902, "_linear_pointwis": 1902, "_reorder_convolution_transpose_weight": 1902, "_reorder_linear_weight": 1902, "mkldnn_prepack": 1902, "conv2d_run": 1902, "nvprim": 1902, "conv2d_clamp_prepack": 1902, "conv2d_clamp_run": 1902, "conv2d_transpose_clamp_prepack": 1902, "conv2d_transpose_clamp_run": 1902, "linear_clamp_prepack": 1902, "linear_clamp_run": 1902, "unpack_prepacked_sizes_conv2d": 1902, "unpack_prepacked_sizes_linear": 1902, "addstatvalu": 1902, "autogradadd": 1902, "autogradallnonzero": 1902, "autogradallzero": 1902, "autogradanynonzero": 1902, "autogradzero": 1902, "bailouttempl": 1902, "broadcastmkldnntensor": 1902, "broadcasts": 1902, "chunksiz": 1902, "constantmkldnntensor": 1902, "differentiablegraph": 1902, "enumnam": 1902, "enumvalu": 1902, "fallbackgraph": 1902, "fusedconcat": 1902, "fusiongroup": 1902, "ifthenels": 1902, "ignoredpythonop": 1902, "mkldnnclamp": 1902, "mkldnnhardsigmoid": 1902, "mkldnnhardswish": 1902, "mkldnnhardtanh": 1902, "mkldnnlayernorm": 1902, "mkldnnscalarmul": 1902, "mmbatchsid": 1902, "mmtreereduc": 1902, "modulecontainerindex": 1902, "numtotensor": 1902, "raiseexcept": 1902, "reductions": 1902, "requiresgradcheck": 1902, "staticruntimecopyout": 1902, "staticsubgraph": 1902, "stringindex": 1902, "tensorexprdynamicgroup": 1902, "tensorexprdynamicguard": 1902, "tensorexprgroup": 1902, "timepoint": 1902, "tupleindex": 1902, "tupleunpack": 1902, "varconcat": 1902, "varstack": 1902, "awaitable_nowait": 1902, "awaitable_wait": 1902, "is_cpu": 1902, "is_ipu": 1902, "is_mkldnn": 1902, "is_mp": 1902, "is_nest": 1902, "is_ort": 1902, "is_quant": 1902, "is_vulkan": 1902, "is_xpu": 1902, "onednnfusiongroup": 1902, "onednnfusionguard": 1902, "profile_ivalu": 1902, "rangelist": 1902, "rpc_remot": 1902, "unchecked_unwrap_opt": 1902, "_call_end_callbacks_on_jit_fut": 1902, "_record_function_ent": 1902, "_record_function_enter_new": 1902, "_record_function_exit": 1902, "_bfloat16quantizedtofloat": 1902, "_floattobfloat16quant": 1902, "add_out": 1902, "add_relu_out": 1902, "add_scalar_out": 1902, "add_scalar_relu": 1902, "add_scalar_relu_out": 1902, "batch_norm1d": 1902, "batch_norm1d_relu": 1902, "batch_norm2d": 1902, "batch_norm2d_relu": 1902, "batch_norm3d": 1902, "batch_norm3d_relu": 1902, "batch_norm_relu": 1902, "cat_out": 1902, "cat_relu": 1902, "cat_relu_out": 1902, "conv1d_dynam": 1902, "conv1d_prepack": 1902, "conv1d_unpack": 1902, "conv2d_add": 1902, "conv2d_add_relu": 1902, "conv2d_dil": 1902, "conv2d_dynam": 1902, "conv2d_group": 1902, "conv2d_output_pad": 1902, "conv2d_pad": 1902, "conv2d_strid": 1902, "conv2d_transpos": 1902, "conv2d_unpack": 1902, "conv2d_unpack_s": 1902, "conv3d_dil": 1902, "conv3d_dynam": 1902, "conv3d_group": 1902, "conv3d_output_pad": 1902, "conv3d_pad": 1902, "conv3d_strid": 1902, "conv3d_transpos": 1902, "conv3d_unpack": 1902, "conv_prepack": 1902, "conv_transpose1d_dynam": 1902, "conv_transpose1d_unpack": 1902, "conv_transpose2d_dil": 1902, "conv_transpose2d_dynam": 1902, "conv_transpose2d_group": 1902, "conv_transpose2d_output_pad": 1902, "conv_transpose2d_pad": 1902, "conv_transpose2d_strid": 1902, "conv_transpose2d_transpos": 1902, "conv_transpose2d_unpack": 1902, "conv_transpose3d_dil": 1902, "conv_transpose3d_dynam": 1902, "conv_transpose3d_group": 1902, "conv_transpose3d_output_pad": 1902, "conv_transpose3d_pad": 1902, "conv_transpose3d_strid": 1902, "conv_transpose3d_transpos": 1902, "conv_transpose3d_unpack": 1902, "conv_unpack": 1902, "embedding_4bit": 1902, "embedding_bag_2bit_prepack": 1902, "embedding_bag_2bit_rowwise_offset": 1902, "embedding_bag_2bit_unpack": 1902, "embedding_bag_4bit": 1902, "embedding_bag_4bit_prepack": 1902, "embedding_bag_4bit_rowwise_offset": 1902, "embedding_bag_4bit_unpack": 1902, "embedding_bag_byt": 1902, "embedding_bag_byte_prepack": 1902, "embedding_bag_byte_rowwise_offset": 1902, "embedding_bag_byte_unpack": 1902, "embedding_bag_prepack": 1902, "embedding_bag_unpack": 1902, "embedding_byt": 1902, "linear_dynamic_fp16": 1902, "linear_leaky_relu": 1902, "linear_relu": [1902, 1909], "linear_relu_dynam": 1902, "linear_relu_dynamic_fp16": 1902, "linear_tanh": 1902, "linear_unpack": 1902, "linear_unpack_fp16": 1902, "linear_with_input_q_dq_qweight_dq_output_fp32": 1902, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1902, "make_quantized_cell_param": 1902, "make_quantized_cell_params_dynam": 1902, "make_quantized_cell_params_fp16": 1902, "mul_out": 1902, "mul_relu": 1902, "mul_relu_out": 1902, "mul_scalar_out": 1902, "mul_scalar_relu": 1902, "mul_scalar_relu_out": 1902, "quantized_gru_cell_dynam": 1902, "quantized_lstm_cell_dynam": 1902, "quantized_rnn_relu_cell_dynam": 1902, "quantized_rnn_tanh_cell_dynam": 1902, "rngprim": 1902, "philox_rand": 1902, "qlinear": 1902, "qlinear_dynam": 1902, "qlinear_prepack": 1902, "qlinear_relu": 1902, "qlinear_relu_dynam": 1902, "qlinear_unpack": 1902, "static_runtim": 1902, "vartupleunpack": 1902, "clamp_nan_to_num": 1902, "create_owned_ref": 1902, "dequantize_copi": 1902, "dict_unpack": 1902, "expand_dims_copi": 1902, "flatten_copi": 1902, "fused_equally_split": 1902, "reshape_copi": 1902, "select_tensor": 1902, "signed_log1p": 1902, "to_copi": 1902, "to_maybe_copy_out": 1902, "var1": 1903, "var2": 1903, "lbfg": 1903, "adadelta": 1903, "adamax": 1903, "asgd": 1903, "nadam": 1903, "radam": 1903, "rmsprop": 1903, "rprop": 1903, "reducelronplateau": 1903, "multisteplr": 1903, "upgrad": [1903, 1923], "swa_util": 1903, "averagedmodel": 1903, "swalr": 1903, "update_bn": 1903, "optima": 1903, "polyak": 1903, "averaged_model": 1903, "multi_avg_fn": 1903, "get_ema_multi_avg_fn": 1903, "textrm": 1903, "update_paramet": 1903, "avg_fn": 1903, "_foreach": 1903, "ema_model": 1903, "ema_avg": 1903, "averaged_model_paramet": 1903, "model_paramet": 1903, "num_averag": 1903, "swa_schedul": 1903, "anneal_epoch": 1903, "swa_lr": 1903, "swa_model": 1903, "cosineannealinglr": 1903, "swa_start": 1903, "test_input": 1903, "secur": 1904, "unpackag": 1904, "exercis": 1904, "unzip": 1904, "my_packag": 1904, "freeli": 1904, "94304870911616": 1904, "94304900784016": 1904, "extern_modul": 1904, "model_1": 1904, "pkl": 1904, "myzip": 1904, "file_byt": 1904, "writestr": 1904, "new_file_byt": 1904, "vim": 1904, "vimrc": 1904, "bufreadcmd": 1904, "brows": 1904, "amatch": 1904, "vi": 1904, "packageimport": 1904, "queryabl": 1904, "glob": 1904, "packageexport": 1904, "pe": 1904, "save_pickl": 1904, "has_fil": 1904, "importer_file_structur": 1904, "package_a": 1904, "get_rdep": 1904, "all_path": 1904, "dependency_graph_str": 1904, "save_text": 1904, "save_binari": 1904, "my_resourc": 1904, "config_stuff": 1904, "raw_data": 1904, "my_byt": 1904, "complementari": [1904, 1917], "load_pickl": 1904, "load_text": 1904, "load_binari": 1904, "my_tensor": 1904, "__reduce_package__": 1904, "my_str": 1904, "time_import": 1904, "time_export": 1904, "pickler": 1904, "persistent_id": 1904, "persistent_load": 1904, "generated_module_nam": 1904, "get_unique_id": 1904, "clock_gettim": 1904, "unpackage_foo": 1904, "depickl": 1904, "foo_1": 1904, "foo_2": 1904, "foo_packag": 1904, "foo_collect": 1904, "foo1": 1904, "foo2": 1904, "imported_foo": 1904, "9857706": 1904, "650140837": 1904, "652698385": 1904, "__torch_package__": 1904, "is_in_packag": 1904, "userexcept": 1904, "unpackageableexcept": 1904, "loaded_modul": 1904, "import_modul": 1904, "save_source_str": 1904, "save_modul": 1904, "textwrap": 1904, "dedent": 1904, "my_funct": 1904, "is_packag": 1904, "importlib": 1904, "my_pickl": 1904, "get_my_resourc": 1904, "read_text": 1904, "torch_package_import": 1904, "get_my_pickl": 1904, "is_from_packag": 1904, "stdlib": 1904, "my_test": 1904, "f2": [1904, 1905], "sys_import": 1904, "script_model": 1904, "mixed_model": 1904, "python_model_with_scripted_submodul": 1904, "loaded_script": 1904, "loaded_mix": 1904, "convention": 1904, "94286146172688": 1904, "94286146172784": 1904, "essai": 1904, "another_packag": 1904, "pickletool": 1904, "ast": 1904, "deni": 1904, "my_export": 1904, "my_interned_modul": 1904, "package_export": 1904, "my_externed_modul": 1904, "my_mocked_modul": 1904, "unwant": [1904, 1921], "hodg": 1904, "podg": 1904, "bazel": 1904, "buck": 1904, "my_class_inst": 1904, "imported_myclass": 1904, "okai": 1904, "torch_package_0": 1904, "handle_me_this_wai": 1904, "inadvert": 1904, "pun": 1904, "packagingerror": 1904, "dependency_graph": 1904, "emptymatcherror": 1904, "allow_empti": 1904, "_sysimport": 1904, "hermet": 1904, "scan": 1904, "orderedimport": 1904, "add_depend": 1904, "graphviz": 1904, "lang": 1904, "denied_modul": 1904, "my_subpackag": 1904, "digraph": 1904, "externed_modul": 1904, "interned_modul": 1904, "mocked_modul": 1904, "register_extern_hook": 1904, "register_intern_hook": 1904, "register_mock_hook": 1904, "myobject": 1904, "save_source_fil": 1904, "file_or_directori": 1904, "my_subsubpackag": 1904, "file_or_buff": 1904, "module_allow": 1904, "pytorchfileread": 1904, "python_vers": 1904, "is_dir": 1904, "gpipe": 1905, "suffer": 1905, "microbatch": 1905, "bubbl": 1905, "except_last": 1905, "deferred_batch_norm": 1905, "torchgpip": 1905, "withdevic": 1905, "micro": 1905, "fc": [1905, 1907], "init_rpc": [1905, 1912, 1913], "output_rref": 1905, "fed": [1905, 1921], "nochunk": 1905, "resnext": 1905, "till": 1905, "skippabl": 1905, "perfectli": 1905, "1to3": 1905, "layer1": 1905, "f1": 1905, "layer2": 1905, "layer3": 1905, "skip_1to3": 1905, "f3": 1905, "alic": 1905, "bob": 1905, "carol": 1905, "stashstashpop": 1905, "f_alic": 1905, "f_bob": 1905, "verify_skipp": 1905, "unmatch": [1905, 1926], "fairscal": 1905, "_kinetoprofil": 1906, "profileract": 1906, "add_metadata": 1906, "add_metadata_json": 1906, "unaggreg": 1906, "export_chrome_trac": 1906, "export_memory_timelin": 1906, "gzip": 1906, "export_stack": 1906, "self_cuda_time_tot": 1906, "flamegraph": 1906, "brendangregg": 1906, "pl": 1906, "countnam": 1906, "perf_viz": 1906, "svg": 1906, "on_trace_readi": 1906, "record_and_sav": 1906, "tensorboard_trace_handl": 1906, "dir_nam": 1906, "logdir": [1906, 1921], "code_to_profil": 1906, "row_limit": 1906, "trace_handl": 1906, "test_trace_": 1906, "step_num": 1906, "code_iteration_to_profil": 1906, "mtia": 1906, "skip_first": 1906, "worker_nam": [1906, 1912], "use_gzip": 1906, "range_push": 1906, "range_pop": 1906, "4x": 1907, "broadli": 1907, "domin": 1907, "previous_layer_fp32": 1907, "linear_fp32": 1907, "activation_fp32": 1907, "next_layer_fp32": 1907, "linear_weight_fp32": 1907, "linear_int8_w_fp32_inp": 1907, "linear_weight_int8": 1907, "ptdq": 1907, "model_fp32": 1907, "model_int8": 1907, "quantize_dynam": 1907, "input_fp32": 1907, "previous_layer_int8": 1907, "linear_with_activation_int8": 1907, "next_layer_int8": 1907, "ptsq": 1907, "minmax": 1907, "l2norm": 1907, "model_fp32_fus": 1907, "fuse_modul": [1907, 1908], "model_fp32_prepar": 1907, "fq": 1907, "prepare_qat": 1907, "training_loop": 1907, "requant": 1907, "linear1": 1907, "custom_qconfig": 1907, "fxptq": 1907, "model_fp": 1907, "usermodel": 1907, "model_to_quant": 1907, "default_dynamic_qconfig": 1907, "model_prepar": 1907, "model_quant": 1907, "model_fus": 1907, "per_tensor_symmetr": [1907, 1910], "per_channel_symmetr": [1907, 1910], "per_channel_scal": 1907, "per_channel_zero_point": 1907, "quantized_tensor": 1907, "qengin": 1907, "in4": 1907, "fx2trt": 1907, "float_modul": [1907, 1925], "staticquantcustommodul": 1907, "observed_modul": 1907, "default_qconfig": [1907, 1926], "test_quantized_op": 1907, "testquantizedop": 1907, "test_custom_module_lstm": 1907, "test_quantize_fx": 1907, "testquantizefx": 1907, "test_static_lstm": 1907, "some_oper": 1907, "e2": 1907, "thnn_conv2d_forward": 1907, "quantizedcpu": 1907, "some_qconfig": 1907, "linearpackedparam": 1907, "_modul": 1907, "prepare_orig": 1907, "quantized_orig": 1907, "scripted_quant": 1907, "fp32_op": 1908, "int8_op": 1908, "cooperlak": 1908, "audit": 1908, "op_fp32": 1908, "op_int8": 1908, "_numeric_suit": 1908, "_numeric_suite_fx": 1908, "0x7fdf6b2216c0": 1909, "0x7fdf570e54c0": 1909, "0x7fdf570e5550": 1909, "num_tensor_args_to_observation_typ": 1909, "convbn1d": 1909, "0x7fdf564de9d0": 1909, "reference_quantized_module_for_root": 1909, "fuse_convtranspose_bn": 1909, "0x7fdf564deb80": 1909, "linearbn1d": 1909, "fuse_linear_bn": 1909, "0x7fdf564deaf0": 1909, "convbn2d": 1909, "convbn3d": 1909, "bnrelu2d": 1909, "bnrelu3d": 1909, "input_type_to_index": 1909, "conv_fus": 1909, "convbnrelu1d": 1909, "convbnrelu2d": 1909, "convbnrelu3d": 1909, "convrelu1d": 1909, "convrelu3d": 1909, "0x7fdf570e55e0": 1909, "0x7fdf570e5c10": 1909, "quint4x2": [1909, 1918, 1922, 1923], "embedding_op": 1909, "0x7fdf570e8af0": 1909, "00390625": 1909, "0x7fdf570e8430": 1909, "0x7fdf570e85e0": 1909, "0x7fdf570e5af0": 1909, "0x7fdf570e89d0": 1909, "0x7fdf5706d1f0": 1909, "0x7fdf570e8a60": 1909, "0x7fdf570e5dc0": 1909, "linear_fus": 1909, "_sequential_wrapper2": 1909, "0x7fdf7236e430": 1909, "0x7fdf570e59d0": 1909, "0x7fdf543c03a0": 1909, "fuse_conv_bn_relu": 1909, "0x7fdf564dea60": 1909, "0x7fdf543c0430": 1909, "0x7fdf543c04c0": 1909, "0x7fdf543c0550": 1909, "0x7fdf543c05e0": 1909, "0x7fdf543c0670": 1909, "0x7fdf543c0700": 1909, "0x7fdf543c0790": 1909, "0x7fdf543c0820": 1909, "0x7fdf543c08b0": 1909, "0x7fdf543c0940": 1909, "0x7fdf570e5b80": 1909, "0078125": 1909, "customconfig": 1910, "custom_module_config": 1910, "_caller": 1911, "_devices_kw": 1911, "slowli": 1911, "unind": 1911, "deivc": 1911, "privateuse1": 1911, "shortcom": 1912, "stitch": 1912, "rpc_backend_opt": 1912, "trainer3": 1912, "parameterserver2": 1912, "dash": [1912, 1914], "backendtyp": 1912, "rpcbackendopt": 1912, "rpcagent": 1912, "transmit": 1912, "calle": [1912, 1914], "_set_rpc_timeout": 1912, "5678": 1912, "worker0": 1912, "my_script_add": 1912, "wire": 1912, "fut2": 1912, "meth": 1912, "grace": 1912, "userrref": [1912, 1914], "async_execut": 1912, "paus": 1912, "outmost": 1912, "async_add_chain": 1912, "worker2": 1912, "script_add": 1912, "async_add": 1912, "asyncexecutionclass": 1912, "static_async_add": 1912, "class_async_add": 1912, "ret_fut": 1912, "bound_async_add": 1912, "rpc_timeout": 1912, "incid": [1912, 1914], "nvlink": 1912, "multiplex": 1912, "tensorpiperpcbackendopt": 1912, "num_worker_thread": 1912, "device_map": 1912, "_transport": 1912, "tensorpipeag": 1912, "set_device_map": 1912, "intermitt": 1912, "remote_modul": 1912, "forward_async": 1912, "remote_devic": 1912, "workernam": 1912, "trainer0": 1912, "ps0": 1912, "remote_linear_modul": 1912, "get_module_rref": 1912, "remote_paramet": 1912, "my_add": [1913, 1927], "t4": 1913, "t5": 1913, "autograd_message_id": 1913, "autograd_context_id": 1913, "send1": 1913, "kickoff": 1913, "recv2": 1913, "heard": 1913, "send2": 1913, "recv1": 1913, "dist_autograd_simpl": 1913, "random_tensor": 1913, "_run_process": 1913, "dst_rank": 1913, "dst_name": 1913, "run_process": 1913, "rrefid": 1914, "ownerrref": 1914, "transient": 1914, "udf": 1914, "deliveri": 1914, "knowledg": 1914, "danger": 1914, "ancestor": 1914, "trickier": 1914, "forkid": 1914, "ack": 1914, "solid": 1914, "gc": 1914, "followup": 1914, "lil": 1916, "stark": 1916, "9093": 1916, "1411": 1916, "7568": 1916, "9589": 1916, "2794": 1916, "catastroph": 1916, "9900": 1916, "000": 1916, "400": 1916, "s2": 1916, "plain_dim_s": 1916, "lp64": 1916, "280": 1916, "310": 1916, "sp": 1916, "9078": 1916, "conception": 1916, "lobpcg": 1916, "geneig": 1916, "pca_lowrank": 1916, "kindli": 1916, "airy_ai": 1917, "airi": 1917, "onward": 1917, "9635": 1917, "entr": 1917, "3466": 1917, "int_": 1917, "8427": 1917, "0561": 1917, "4769": 1917, "9213": 1917, "8858": 1917, "7683": 1917, "7481": 1917, "2920": 1917, "int_0": 1917, "gammaln": 1917, "a1": 1917, "a2": 1917, "3528": 1917, "5665": 1917, "6472": 1917, "4335": 1917, "2650": 1917, "2661": 1917, "2796": 1917, "8808": 1917, "3019": 1917, "4658": 1917, "3085": 1917, "2430": 1917, "2070": 1917, "i1": 1917, "5652": 1917, "9534": 1917, "7595": 1917, "2153": 1917, "log_ndtr": 1917, "_ndtr": 1917, "6077": 1917, "7832": 1917, "841": 1917, "6931": 1917, "1728": 1917, "023": 1917, "9331": 1917, "6486": 1917, "1523": 1917, "6516": 1917, "6352": 1917, "6131": 1917, "7169": 1917, "6261": 1917, "displaystyl": 1917, "undefiend": 1917, "6835": 1917, "8474": 1917, "1929": 1917, "7162": 1917, "4180": 1917, "3928": 1917, "4007": 1917, "7586": 1917, "3901": 1917, "5049": 1917, "ndtr": 1917, "0228": 1917, "1587": 1917, "9772": 1917, "9987": 1917, "2p": 1917, "64493": 1917, "4041": 1917, "8288": 1917, "4939": 1917, "97": 1917, "4091": 1917, "8863": 1917, "771": 1917, "scaled_modified_bessel_k0": 1917, "scaled_modified_bessel_k1": 1917, "2948": 1917, "0267": 1917, "1566": 1917, "9186": 1917, "8631": 1917, "0259": 1917, "1300": 1917, "spheric": 1917, "xlog1pi": 1917, "3863": 1917, "1972": 1917, "6094": 1917, "2189": 1917, "8283": 1917, "7726": 1917, "0986": 1917, "1589": 1917, "hurwitz": 1917, "6449": 1917, "0823": 1917, "untyp": 1918, "wrap_storag": 1918, "complex_doubl": 1918, "from_buff": 1918, "pickle_storage_typ": 1918, "byteswap": 1918, "quint2x4": [1918, 1923], "twelv": 1919, "halftensor": [1919, 1922], "bfloat16tensor": [1919, 1922], "chartensor": [1919, 1922], "shorttensor": [1919, 1922], "binary16": [1919, 1922], "significand": [1919, 1922], "float_tensor": 1919, "double_tensor": 1919, "complex_float_tensor": 1919, "complex_double_tensor": 1919, "int_tensor": 1919, "long_tensor": 1919, "uint_tensor": 1919, "bool_tensor": 1919, "long_zerodim": 1919, "int_zerodim": 1919, "set_default_devic": 1919, "cuda1": 1919, "nhwc": [1919, 1921], "channels_last_3d": 1919, "ndhwc": 1919, "blogpost": 1920, "totensor": 1921, "trainset": 1921, "mnist": 1921, "mnist_train": 1921, "trainload": 1921, "grayscal": 1921, "make_grid": 1921, "add_imag": 1921, "add_graph": 1921, "clutter": 1921, "n_iter": 1921, "purge_step": 1921, "max_queu": 1921, "flush_sec": 1921, "filename_suffix": 1921, "current_datetime_hostnam": 1921, "exp1": 1921, "suffix": [1921, 1922], "global_step": 1921, "purg": 1921, "event_file_writ": 1921, "eventfilewrit": 1921, "may04_22": 1921, "54_": 1921, "macbook": 1921, "my_experi": 1921, "lr_0": 1921, "1_batch_16": 1921, "locallr_0": 1921, "scalar_valu": 1921, "walltim": 1921, "new_styl": 1921, "double_precis": 1921, "blobnam": 1921, "simple_valu": 1921, "main_tag": 1921, "tag_scalar_dict": 1921, "run_14h": 1921, "xsinx": 1921, "xcosx": 1921, "tanx": 1921, "add_histogram": 1921, "max_bin": 1921, "fd": 1921, "img_tensor": 1921, "dataformat": 1921, "chw": 1921, "hwc": 1921, "hw": 1921, "wh": 1921, "3xhxw": 1921, "img_hwc": 1921, "my_imag": 1921, "my_image_hwc": 1921, "img_batch": 1921, "my_image_batch": 1921, "add_figur": 1921, "add_video": 1921, "vid_tensor": 1921, "fp": 1921, "moviepi": 1921, "add_audio": 1921, "snd_tensor": 1921, "sample_r": 1921, "44100": 1921, "add_text": 1921, "text_str": 1921, "input_to_model": 1921, "use_strict_trac": 1921, "add_embed": 1921, "label_img": 1921, "metadata_head": 1921, "projector": 1921, "kwlist": 1921, "add_pr_curv": 1921, "num_threshold": 1921, "pr_curv": 1921, "add_custom_scalar": 1921, "chart": 1921, "categorynam": 1921, "chartnam": 1921, "listofproperti": 1921, "multilin": 1921, "taiwan": 1921, "twse": 1921, "0050": 1921, "2330": 1921, "dow": 1921, "aaa": 1921, "bbb": 1921, "ccc": 1921, "nasdaq": 1921, "add_mesh": 1921, "config_dict": 1921, "threej": 1921, "vertex": 1921, "number_of_vertic": 1921, "vertices_tensor": 1921, "colors_tensor": 1921, "faces_tensor": 1921, "my_mesh": 1921, "add_hparam": 1921, "hparam_dict": 1921, "metric_dict": 1921, "hparam_domain_discret": 1921, "run_nam": 1921, "hparam": 1921, "bsize": 1921, "_like": 1922, "allow_subclass": 1923, "check_devic": 1923, "check_layout": 1923, "6e": 1923, "3e": 1923, "assert_equ": 1923, "000000000000001e": 1923, "1e0": 1923, "argh": 1923, "nfooter": 1923, "66": 1923, "footer": 1923, "exclude_zero": 1923, "1205": 1923, "2282": 1923, "6380": 1923, "default_gener": 1924, "data_dependent_output": 1924, "dynamic_output_shap": 1924, "inplace_view": 1924, "nondeterministic_bitwis": 1924, "nondeterministic_seed": 1924, "compare_weight": 1925, "float_dict": 1925, "quantized_dict": 1925, "wt_compare_dict": 1925, "qmodel": 1925, "compute_error": 1925, "weight_dict": 1925, "get_logger_dict": 1925, "shadowlogg": 1925, "outputlogg": [1925, 1926], "target_dict": 1925, "q_modul": 1925, "logger_cl": [1925, 1926], "prepare_model_with_stub": 1925, "module_swap_list": 1925, "q_model": 1925, "ob_dict": 1925, "compare_model_stub": 1925, "quantizablebasicblock": 1925, "get_matching_activ": 1925, "act_dict": 1925, "prepare_model_output": 1925, "compare_model_output": 1925, "act_compare_dict": 1925, "weight_comparison": 1926, "extract_weight": 1926, "sqnr": 1926, "extend_logger_results_with_comparison": 1926, "compute_sqnr": 1926, "mp_n": 1926, "mq_n": 1926, "add_logg": 1926, "act_comparison": 1926, "extract_logger_info": 1926, "mp_shadows_mq": 1926, "add_shadow_logg": 1926, "shadow_act_comparison": 1926, "extract_shadow_logger_info": 1926, "ref_node_nam": 1926, "prev_node_nam": 1926, "model_nam": 1926, "ref_nam": 1926, "prev_node_target_typ": 1926, "ref_node_target_typ": 1926, "results_typ": 1926, "index_within_arg": 1926, "index_of_arg": 1926, "qconfig_str": 1926, "outputcomparisonlogg": 1926, "x_ref": 1926, "nstracer": 1926, "skipped_module_nam": 1926, "skipped_module_class": 1926, "model_name_a": 1926, "model_a": 1926, "model_name_b": 1926, "model_b": 1926, "base_name_to_sets_of_related_op": 1926, "unmatchable_types_map": 1926, "op_to_type_to_weight_extraction_fn": 1926, "nsresultstyp": 1926, "name_a": 1926, "name_b": 1926, "should_log_input": 1926, "model_a_with_logg": 1926, "model_b_with_logg": 1926, "model_name_to_use_for_layer_nam": 1926, "node_type_to_io_type_map": 1926, "model_a_shadows_b": 1926, "model_name_1": 1926, "model_name_2": 1926, "comparison_fn": 1926, "comparison_nam": 1926, "prepare_n_shadows_model": 1926, "qconfig_multi_map": 1926, "custom_prepare_fn": 1926, "custom_prepare_kwarg": 1926, "custom_trac": 1926, "args_kwargs_m": 1926, "op_m": 1926, "output_m": 1926, "op_m_n": 1926, "log_m_n": 1926, "log_m_0": 1926, "qconfig_n": 1926, "args_m": 1926, "op_m_prepared_with_qconfig_n": 1926, "out_m_n": 1926, "kwargs_m": 1926, "docblock": 1926, "loggers_set_en": 1926, "loggers_set_save_activ": 1926, "save_activ": 1926, "convert_n_shadows_model": 1926, "custom_convert_fn": 1926, "custom_convert_kwarg": 1926, "extract_results_n_shadows_model": 1926, "print_comparisons_n_shadows_model": 1926, "compute_normalized_l2_error": 1926, "compute_cosine_similar": 1926, "as_subclass": 1927, "resolve_nam": 1927, "handle_torch_funct": 1927, "public_api": 1927, "relevant_arg": 1927, "has_torch_function_unari": 1927, "is_tensor_lik": 1927, "notatensor": 1927, "tensorlik": 1927, "is_tensor_method_or_properti": 1927, "__get__": 1927, "__module__": 1927, "slot": 1927, "wrap_torch_funct": 1927, "smallest_norm": 1928, "subnorm": 1928, "denormal_numb": 1928}, "objects": {"": [[1924, 0, 0, "-", "torch"], [1859, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1918, 1, 1, "", "BFloat16Storage"], [1918, 1, 1, "", "BoolStorage"], [1918, 1, 1, "", "ByteStorage"], [1918, 1, 1, "", "CharStorage"], [1918, 1, 1, "", "ComplexDoubleStorage"], [1918, 1, 1, "", "ComplexFloatStorage"], [1918, 1, 1, "", "DoubleStorage"], [1918, 1, 1, "", "FloatStorage"], [88, 1, 1, "", "Generator"], [1918, 1, 1, "", "HalfStorage"], [1918, 1, 1, "", "IntStorage"], [1918, 1, 1, "", "LongStorage"], [1918, 1, 1, "", "QInt32Storage"], [1918, 1, 1, "", "QInt8Storage"], [1918, 1, 1, "", "QUInt2x4Storage"], [1918, 1, 1, "", "QUInt4x2Storage"], [1918, 1, 1, "", "QUInt8Storage"], [1918, 1, 1, "", "ShortStorage"], [1924, 1, 1, "", "SymBool"], [1924, 1, 1, "", "SymFloat"], [1924, 1, 1, "", "SymInt"], [1924, 1, 1, "", "Tag"], [1922, 1, 1, "", "Tensor"], [1918, 1, 1, "", "TypedStorage"], [1918, 1, 1, "", "UntypedStorage"], [30, 0, 0, "-", "__config__"], [620, 5, 1, "", "_assert"], [0, 0, 0, "-", "_dynamo"], [621, 5, 1, "", "_foreach_abs"], [622, 5, 1, "", "_foreach_abs_"], [623, 5, 1, "", "_foreach_acos"], [624, 5, 1, "", "_foreach_acos_"], [625, 5, 1, "", "_foreach_asin"], [626, 5, 1, "", "_foreach_asin_"], [627, 5, 1, "", "_foreach_atan"], [628, 5, 1, "", "_foreach_atan_"], [629, 5, 1, "", "_foreach_ceil"], [630, 5, 1, "", "_foreach_ceil_"], [631, 5, 1, "", "_foreach_cos"], [632, 5, 1, "", "_foreach_cos_"], [633, 5, 1, "", "_foreach_cosh"], [634, 5, 1, "", "_foreach_cosh_"], [635, 5, 1, "", "_foreach_erf"], [636, 5, 1, "", "_foreach_erf_"], [637, 5, 1, "", "_foreach_erfc"], [638, 5, 1, "", "_foreach_erfc_"], [639, 5, 1, "", "_foreach_exp"], [640, 5, 1, "", "_foreach_exp_"], [641, 5, 1, "", "_foreach_expm1"], [642, 5, 1, "", "_foreach_expm1_"], [643, 5, 1, "", "_foreach_floor"], [644, 5, 1, "", "_foreach_floor_"], [645, 5, 1, "", "_foreach_frac"], [646, 5, 1, "", "_foreach_frac_"], [647, 5, 1, "", "_foreach_lgamma"], [648, 5, 1, "", "_foreach_lgamma_"], [649, 5, 1, "", "_foreach_log"], [650, 5, 1, "", "_foreach_log10"], [651, 5, 1, "", "_foreach_log10_"], [652, 5, 1, "", "_foreach_log1p"], [653, 5, 1, "", "_foreach_log1p_"], [654, 5, 1, "", "_foreach_log2"], [655, 5, 1, "", "_foreach_log2_"], [656, 5, 1, "", "_foreach_log_"], [657, 5, 1, "", "_foreach_neg"], [658, 5, 1, "", "_foreach_neg_"], [659, 5, 1, "", "_foreach_reciprocal"], [660, 5, 1, "", "_foreach_reciprocal_"], [661, 5, 1, "", "_foreach_round"], [662, 5, 1, "", "_foreach_round_"], [663, 5, 1, "", "_foreach_sigmoid"], [664, 5, 1, "", "_foreach_sigmoid_"], [665, 5, 1, "", "_foreach_sin"], [666, 5, 1, "", "_foreach_sin_"], [667, 5, 1, "", "_foreach_sinh"], [668, 5, 1, "", "_foreach_sinh_"], [669, 5, 1, "", "_foreach_sqrt"], [670, 5, 1, "", "_foreach_sqrt_"], [671, 5, 1, "", "_foreach_tan"], [672, 5, 1, "", "_foreach_tan_"], [673, 5, 1, "", "_foreach_trunc"], [674, 5, 1, "", "_foreach_trunc_"], [675, 5, 1, "", "_foreach_zero_"], [1868, 0, 0, "-", "_logging"], [677, 5, 1, "", "abs"], [678, 5, 1, "", "absolute"], [679, 5, 1, "", "acos"], [680, 5, 1, "", "acosh"], [681, 5, 1, "", "add"], [682, 5, 1, "", "addbmm"], [683, 5, 1, "", "addcdiv"], [684, 5, 1, "", "addcmul"], [685, 5, 1, "", "addmm"], [686, 5, 1, "", "addmv"], [687, 5, 1, "", "addr"], [688, 5, 1, "", "adjoint"], [689, 5, 1, "", "all"], [690, 5, 1, "", "allclose"], [691, 5, 1, "", "amax"], [692, 5, 1, "", "amin"], [693, 5, 1, "", "aminmax"], [1, 0, 0, "-", "amp"], [694, 5, 1, "", "angle"], [695, 5, 1, "", "any"], [1907, 0, 0, "-", "ao"], [861, 5, 1, "", "arange"], [862, 5, 1, "", "arccos"], [863, 5, 1, "", "arccosh"], [864, 5, 1, "", "arcsin"], [865, 5, 1, "", "arcsinh"], [866, 5, 1, "", "arctan"], [867, 5, 1, "", "arctan2"], [868, 5, 1, "", "arctanh"], [869, 5, 1, "", "are_deterministic_algorithms_enabled"], [870, 5, 1, "", "argmax"], [871, 5, 1, "", "argmin"], [872, 5, 1, "", "argsort"], [873, 5, 1, "", "argwhere"], [874, 5, 1, "", "as_strided"], [875, 5, 1, "", "as_tensor"], [876, 5, 1, "", "asarray"], [877, 5, 1, "", "asin"], [878, 5, 1, "", "asinh"], [879, 5, 1, "", "atan"], [880, 5, 1, "", "atan2"], [881, 5, 1, "", "atanh"], [882, 5, 1, "", "atleast_1d"], [883, 5, 1, "", "atleast_2d"], [884, 5, 1, "", "atleast_3d"], [1, 1, 1, "", "autocast"], [2, 0, 0, "-", "autograd"], [3, 0, 0, "-", "backends"], [917, 5, 1, "", "baddbmm"], [918, 5, 1, "", "bartlett_window"], [919, 5, 1, "", "bernoulli"], [920, 5, 1, "", "bincount"], [921, 5, 1, "", "bitwise_and"], [922, 5, 1, "", "bitwise_left_shift"], [923, 5, 1, "", "bitwise_not"], [924, 5, 1, "", "bitwise_or"], [925, 5, 1, "", "bitwise_right_shift"], [926, 5, 1, "", "bitwise_xor"], [927, 5, 1, "", "blackman_window"], [928, 5, 1, "", "block_diag"], [929, 5, 1, "", "bmm"], [930, 5, 1, "", "broadcast_shapes"], [931, 5, 1, "", "broadcast_tensors"], [932, 5, 1, "", "broadcast_to"], [933, 5, 1, "", "bucketize"], [934, 5, 1, "", "can_cast"], [935, 5, 1, "", "cartesian_prod"], [936, 5, 1, "", "cat"], [937, 5, 1, "", "cdist"], [938, 5, 1, "", "ceil"], [939, 5, 1, "", "chain_matmul"], [940, 5, 1, "", "cholesky"], [941, 5, 1, "", "cholesky_inverse"], [942, 5, 1, "", "cholesky_solve"], [943, 5, 1, "", "chunk"], [944, 5, 1, "", "clamp"], [945, 5, 1, "", "clip"], [946, 5, 1, "", "clone"], [947, 5, 1, "", "column_stack"], [948, 5, 1, "", "combinations"], [19, 5, 1, "", "compile"], [950, 5, 1, "", "compiled_with_cxx11_abi"], [951, 5, 1, "", "complex"], [952, 5, 1, "", "concat"], [953, 5, 1, "", "concatenate"], [954, 5, 1, "", "conj"], [955, 5, 1, "", "conj_physical"], [1924, 0, 0, "-", "contrib"], [956, 5, 1, "", "copysign"], [957, 5, 1, "", "corrcoef"], [958, 5, 1, "", "cos"], [959, 5, 1, "", "cosh"], [960, 5, 1, "", "count_nonzero"], [961, 5, 1, "", "cov"], [1, 0, 0, "-", "cpu"], [962, 5, 1, "", "cross"], [33, 0, 0, "-", "cuda"], [1041, 5, 1, "", "cummax"], [1042, 5, 1, "", "cummin"], [1043, 5, 1, "", "cumprod"], [1044, 5, 1, "", "cumsum"], [1045, 5, 1, "", "cumulative_trapezoid"], [1046, 5, 1, "", "deg2rad"], [1047, 5, 1, "", "dequantize"], [1048, 5, 1, "", "det"], [1919, 1, 1, "", "device"], [1049, 5, 1, "", "diag"], [1050, 5, 1, "", "diag_embed"], [1051, 5, 1, "", "diagflat"], [1052, 5, 1, "", "diagonal"], [1053, 5, 1, "", "diagonal_scatter"], [1054, 5, 1, "", "diff"], [1055, 5, 1, "", "digamma"], [1056, 5, 1, "", "dist"], [40, 0, 0, "-", "distributed"], [46, 0, 0, "-", "distributions"], [1057, 5, 1, "", "div"], [1058, 5, 1, "", "divide"], [1059, 5, 1, "", "dot"], [1060, 5, 1, "", "dsplit"], [1061, 5, 1, "", "dstack"], [1919, 1, 1, "", "dtype"], [1062, 5, 1, "", "einsum"], [1063, 5, 1, "", "empty"], [1064, 5, 1, "", "empty_like"], [1065, 5, 1, "", "empty_strided"], [1066, 1, 1, "", "enable_grad"], [1067, 5, 1, "", "eq"], [1068, 5, 1, "", "equal"], [1069, 5, 1, "", "erf"], [1070, 5, 1, "", "erfc"], [1071, 5, 1, "", "erfinv"], [1072, 5, 1, "", "exp"], [1073, 5, 1, "", "exp2"], [1074, 5, 1, "", "expm1"], [1075, 5, 1, "", "eye"], [1076, 5, 1, "", "fake_quantize_per_channel_affine"], [1077, 5, 1, "", "fake_quantize_per_tensor_affine"], [61, 0, 0, "-", "fft"], [1100, 5, 1, "", "fix"], [1101, 5, 1, "", "flatten"], [1102, 5, 1, "", "flip"], [1103, 5, 1, "", "fliplr"], [1104, 5, 1, "", "flipud"], [1105, 5, 1, "", "float_power"], [1106, 5, 1, "", "floor"], [1107, 5, 1, "", "floor_divide"], [1108, 5, 1, "", "fmax"], [1109, 5, 1, "", "fmin"], [1110, 5, 1, "", "fmod"], [1111, 5, 1, "", "frac"], [1112, 5, 1, "", "frexp"], [1113, 5, 1, "", "from_dlpack"], [1114, 5, 1, "", "from_numpy"], [1115, 5, 1, "", "frombuffer"], [1116, 5, 1, "", "full"], [1117, 5, 1, "", "full_like"], [64, 0, 0, "-", "func"], [69, 0, 0, "-", "futures"], [70, 0, 0, "-", "fx"], [1131, 5, 1, "", "gather"], [1132, 5, 1, "", "gcd"], [1133, 5, 1, "", "ge"], [1134, 5, 1, "", "geqrf"], [1135, 5, 1, "", "ger"], [1136, 5, 1, "", "get_default_dtype"], [1137, 5, 1, "", "get_deterministic_debug_mode"], [1138, 5, 1, "", "get_float32_matmul_precision"], [1139, 5, 1, "", "get_num_interop_threads"], [1140, 5, 1, "", "get_num_threads"], [1141, 5, 1, "", "get_rng_state"], [1142, 5, 1, "", "gradient"], [1143, 5, 1, "", "greater"], [1144, 5, 1, "", "greater_equal"], [1145, 5, 1, "", "gt"], [1146, 5, 1, "", "hamming_window"], [1147, 5, 1, "", "hann_window"], [1148, 5, 1, "", "heaviside"], [1149, 5, 1, "", "histc"], [1150, 5, 1, "", "histogram"], [1151, 5, 1, "", "histogramdd"], [1152, 5, 1, "", "hsplit"], [1153, 5, 1, "", "hspmm"], [1154, 5, 1, "", "hstack"], [1856, 0, 0, "-", "hub"], [1155, 5, 1, "", "hypot"], [1156, 5, 1, "", "i0"], [1157, 5, 1, "", "igamma"], [1158, 5, 1, "", "igammac"], [1159, 5, 1, "", "imag"], [1160, 5, 1, "", "index_add"], [1161, 5, 1, "", "index_copy"], [1162, 5, 1, "", "index_reduce"], [1163, 5, 1, "", "index_select"], [1164, 1, 1, "", "inference_mode"], [1165, 5, 1, "", "initial_seed"], [1166, 5, 1, "", "inner"], [1167, 5, 1, "", "inverse"], [1168, 5, 1, "", "is_complex"], [1169, 5, 1, "", "is_conj"], [1170, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1171, 5, 1, "", "is_floating_point"], [1172, 5, 1, "", "is_grad_enabled"], [1173, 5, 1, "", "is_inference_mode_enabled"], [1174, 5, 1, "", "is_nonzero"], [1175, 5, 1, "", "is_storage"], [1176, 5, 1, "", "is_tensor"], [1177, 5, 1, "", "is_warn_always_enabled"], [1178, 5, 1, "", "isclose"], [1179, 5, 1, "", "isfinite"], [1180, 5, 1, "", "isin"], [1181, 5, 1, "", "isinf"], [1182, 5, 1, "", "isnan"], [1183, 5, 1, "", "isneginf"], [1184, 5, 1, "", "isposinf"], [1185, 5, 1, "", "isreal"], [1186, 5, 1, "", "istft"], [1859, 0, 0, "-", "jit"], [1208, 5, 1, "", "kaiser_window"], [1209, 5, 1, "", "kron"], [1210, 5, 1, "", "kthvalue"], [1919, 1, 1, "", "layout"], [1211, 5, 1, "", "lcm"], [1212, 5, 1, "", "ldexp"], [1213, 5, 1, "", "le"], [1214, 5, 1, "", "lerp"], [1215, 5, 1, "", "less"], [1216, 5, 1, "", "less_equal"], [1217, 5, 1, "", "lgamma"], [1867, 0, 0, "-", "linalg"], [1259, 5, 1, "", "linspace"], [1260, 5, 1, "", "load"], [1261, 5, 1, "", "lobpcg"], [1262, 5, 1, "", "log"], [1263, 5, 1, "", "log10"], [1264, 5, 1, "", "log1p"], [1265, 5, 1, "", "log2"], [1266, 5, 1, "", "logaddexp"], [1267, 5, 1, "", "logaddexp2"], [1268, 5, 1, "", "logcumsumexp"], [1269, 5, 1, "", "logdet"], [1270, 5, 1, "", "logical_and"], [1271, 5, 1, "", "logical_not"], [1272, 5, 1, "", "logical_or"], [1273, 5, 1, "", "logical_xor"], [1274, 5, 1, "", "logit"], [1275, 5, 1, "", "logspace"], [1276, 5, 1, "", "logsumexp"], [1277, 5, 1, "", "lt"], [1278, 5, 1, "", "lu"], [1279, 5, 1, "", "lu_solve"], [1280, 5, 1, "", "lu_unpack"], [1281, 5, 1, "", "manual_seed"], [1869, 0, 0, "-", "masked"], [1282, 5, 1, "", "masked_select"], [1283, 5, 1, "", "matmul"], [1284, 5, 1, "", "matrix_exp"], [1285, 5, 1, "", "matrix_power"], [1286, 5, 1, "", "max"], [1287, 5, 1, "", "maximum"], [1288, 5, 1, "", "mean"], [1289, 5, 1, "", "median"], [1919, 1, 1, "", "memory_format"], [1290, 5, 1, "", "meshgrid"], [1291, 5, 1, "", "min"], [1292, 5, 1, "", "minimum"], [1293, 5, 1, "", "mm"], [1294, 5, 1, "", "mode"], [1872, 0, 0, "-", "monitor"], [1295, 5, 1, "", "moveaxis"], [1296, 5, 1, "", "movedim"], [1873, 0, 0, "-", "mps"], [1309, 5, 1, "", "msort"], [1310, 5, 1, "", "mul"], [1311, 5, 1, "", "multinomial"], [1312, 5, 1, "", "multiply"], [1874, 0, 0, "-", "multiprocessing"], [1313, 5, 1, "", "mv"], [1314, 5, 1, "", "mvlgamma"], [1315, 5, 1, "", "nan_to_num"], [1316, 5, 1, "", "nanmean"], [1317, 5, 1, "", "nanmedian"], [1318, 5, 1, "", "nanquantile"], [1319, 5, 1, "", "nansum"], [1320, 5, 1, "", "narrow"], [1321, 5, 1, "", "narrow_copy"], [1322, 5, 1, "", "ne"], [1323, 5, 1, "", "neg"], [1324, 5, 1, "", "negative"], [1877, 0, 0, "-", "nested"], [1325, 5, 1, "", "nextafter"], [1878, 0, 0, "-", "nn"], [1646, 1, 1, "", "no_grad"], [1647, 5, 1, "", "nonzero"], [1648, 5, 1, "", "norm"], [1649, 5, 1, "", "normal"], [1650, 5, 1, "", "not_equal"], [1651, 5, 1, "", "numel"], [1652, 5, 1, "", "ones"], [1653, 5, 1, "", "ones_like"], [1900, 0, 0, "-", "onnx"], [1903, 0, 0, "-", "optim"], [1693, 5, 1, "", "orgqr"], [1694, 5, 1, "", "ormqr"], [1695, 5, 1, "", "outer"], [1904, 0, 0, "-", "package"], [1696, 5, 1, "", "pca_lowrank"], [1697, 5, 1, "", "permute"], [1698, 5, 1, "", "pinverse"], [1699, 5, 1, "", "poisson"], [1700, 5, 1, "", "polar"], [1701, 5, 1, "", "polygamma"], [1702, 5, 1, "", "positive"], [1703, 5, 1, "", "pow"], [1704, 5, 1, "", "prod"], [1906, 0, 0, "-", "profiler"], [1705, 5, 1, "", "promote_types"], [1706, 5, 1, "", "qr"], [1707, 5, 1, "", "quantile"], [1910, 0, 0, "-", "quantization"], [1708, 5, 1, "", "quantize_per_channel"], [1709, 5, 1, "", "quantize_per_tensor"], [1710, 5, 1, "", "quantized_batch_norm"], [1711, 5, 1, "", "quantized_max_pool1d"], [1712, 5, 1, "", "quantized_max_pool2d"], [1714, 5, 1, "", "rad2deg"], [1715, 5, 1, "", "rand"], [1716, 5, 1, "", "rand_like"], [1717, 5, 1, "", "randint"], [1718, 5, 1, "", "randint_like"], [1719, 5, 1, "", "randn"], [1720, 5, 1, "", "randn_like"], [1911, 0, 0, "-", "random"], [1721, 5, 1, "", "randperm"], [1722, 5, 1, "", "range"], [1723, 5, 1, "", "ravel"], [1724, 5, 1, "", "real"], [1725, 5, 1, "", "reciprocal"], [1726, 5, 1, "", "remainder"], [1727, 5, 1, "", "renorm"], [1728, 5, 1, "", "repeat_interleave"], [1729, 5, 1, "", "reshape"], [1730, 5, 1, "", "resolve_conj"], [1731, 5, 1, "", "resolve_neg"], [1732, 5, 1, "", "result_type"], [1733, 5, 1, "", "roll"], [1734, 5, 1, "", "rot90"], [1735, 5, 1, "", "round"], [1736, 5, 1, "", "row_stack"], [1737, 5, 1, "", "rsqrt"], [1738, 5, 1, "", "save"], [1739, 5, 1, "", "scatter"], [1740, 5, 1, "", "scatter_add"], [1741, 5, 1, "", "scatter_reduce"], [1742, 5, 1, "", "searchsorted"], [1743, 5, 1, "", "seed"], [1744, 5, 1, "", "select"], [1745, 5, 1, "", "select_scatter"], [1746, 5, 1, "", "set_default_device"], [1747, 5, 1, "", "set_default_dtype"], [1748, 5, 1, "", "set_default_tensor_type"], [1749, 5, 1, "", "set_deterministic_debug_mode"], [1750, 5, 1, "", "set_float32_matmul_precision"], [1751, 5, 1, "", "set_flush_denormal"], [1752, 1, 1, "", "set_grad_enabled"], [1753, 5, 1, "", "set_num_interop_threads"], [1754, 5, 1, "", "set_num_threads"], [1755, 5, 1, "", "set_printoptions"], [1756, 5, 1, "", "set_rng_state"], [1757, 5, 1, "", "set_warn_always"], [1758, 5, 1, "", "sgn"], [1759, 5, 1, "", "sigmoid"], [1760, 5, 1, "", "sign"], [1915, 0, 0, "-", "signal"], [1772, 5, 1, "", "signbit"], [1773, 5, 1, "", "sin"], [1774, 5, 1, "", "sinc"], [1775, 5, 1, "", "sinh"], [1776, 5, 1, "", "slice_scatter"], [1777, 5, 1, "", "slogdet"], [1778, 5, 1, "", "smm"], [1779, 5, 1, "", "softmax"], [1780, 5, 1, "", "sort"], [1916, 0, 0, "-", "sparse"], [1789, 5, 1, "", "sparse_bsc_tensor"], [1790, 5, 1, "", "sparse_bsr_tensor"], [1791, 5, 1, "", "sparse_compressed_tensor"], [1792, 5, 1, "", "sparse_coo_tensor"], [1793, 5, 1, "", "sparse_csc_tensor"], [1794, 5, 1, "", "sparse_csr_tensor"], [1917, 0, 0, "-", "special"], [1795, 5, 1, "", "split"], [1796, 5, 1, "", "sqrt"], [1797, 5, 1, "", "square"], [1798, 5, 1, "", "squeeze"], [1799, 5, 1, "", "sspaddmm"], [1800, 5, 1, "", "stack"], [1801, 5, 1, "", "std"], [1802, 5, 1, "", "std_mean"], [1803, 5, 1, "", "stft"], [1804, 5, 1, "", "sub"], [1805, 5, 1, "", "subtract"], [1806, 5, 1, "", "sum"], [1807, 5, 1, "", "svd"], [1808, 5, 1, "", "svd_lowrank"], [1809, 5, 1, "", "swapaxes"], [1810, 5, 1, "", "swapdims"], [1811, 5, 1, "", "sym_float"], [1812, 5, 1, "", "sym_int"], [1813, 5, 1, "", "sym_max"], [1814, 5, 1, "", "sym_min"], [1815, 5, 1, "", "sym_not"], [1816, 5, 1, "", "t"], [1817, 5, 1, "", "take"], [1818, 5, 1, "", "take_along_dim"], [1819, 5, 1, "", "tan"], [1820, 5, 1, "", "tanh"], [1821, 5, 1, "", "tensor"], [1822, 5, 1, "", "tensor_split"], [1823, 5, 1, "", "tensordot"], [1923, 0, 0, "-", "testing"], [1824, 5, 1, "", "tile"], [1825, 5, 1, "", "topk"], [1826, 5, 1, "", "trace"], [1827, 5, 1, "", "transpose"], [1828, 5, 1, "", "trapezoid"], [1829, 5, 1, "", "trapz"], [1830, 5, 1, "", "triangular_solve"], [1831, 5, 1, "", "tril"], [1832, 5, 1, "", "tril_indices"], [1833, 5, 1, "", "triu"], [1834, 5, 1, "", "triu_indices"], [1835, 5, 1, "", "true_divide"], [1836, 5, 1, "", "trunc"], [1837, 5, 1, "", "unbind"], [1838, 5, 1, "", "unflatten"], [1839, 5, 1, "", "unique"], [1840, 5, 1, "", "unique_consecutive"], [1841, 5, 1, "", "unsqueeze"], [1842, 5, 1, "", "use_deterministic_algorithms"], [1924, 0, 0, "-", "utils"], [1843, 5, 1, "", "vander"], [1844, 5, 1, "", "var"], [1845, 5, 1, "", "var_mean"], [1846, 5, 1, "", "vdot"], [1847, 5, 1, "", "view_as_complex"], [1848, 5, 1, "", "view_as_real"], [1849, 5, 1, "", "vmap"], [1850, 5, 1, "", "vsplit"], [1851, 5, 1, "", "vstack"], [1852, 5, 1, "", "where"], [1853, 5, 1, "", "xlogy"], [1854, 5, 1, "", "zeros"], [1855, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1918, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1918, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1918, 2, 1, "", "dtype"]], "torch.CharStorage": [[1918, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1918, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1918, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1918, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1918, 2, 1, "", "dtype"]], "torch.Generator": [[88, 2, 1, "", "device"], [88, 3, 1, "", "get_state"], [88, 3, 1, "", "initial_seed"], [88, 3, 1, "", "manual_seed"], [88, 3, 1, "", "seed"], [88, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1918, 2, 1, "", "dtype"]], "torch.IntStorage": [[1918, 2, 1, "", "dtype"]], "torch.LongStorage": [[1918, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1918, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1918, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1918, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1918, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1918, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1918, 2, 1, "", "dtype"]], "torch.Tag": [[1924, 4, 1, "", "name"]], "torch.Tensor": [[1922, 2, 1, "", "H"], [1922, 2, 1, "", "T"], [89, 3, 1, "", "abs"], [90, 3, 1, "", "abs_"], [91, 3, 1, "", "absolute"], [92, 3, 1, "", "absolute_"], [93, 3, 1, "", "acos"], [94, 3, 1, "", "acos_"], [95, 3, 1, "", "acosh"], [96, 3, 1, "", "acosh_"], [97, 3, 1, "", "add"], [98, 3, 1, "", "add_"], [99, 3, 1, "", "addbmm"], [100, 3, 1, "", "addbmm_"], [101, 3, 1, "", "addcdiv"], [102, 3, 1, "", "addcdiv_"], [103, 3, 1, "", "addcmul"], [104, 3, 1, "", "addcmul_"], [105, 3, 1, "", "addmm"], [106, 3, 1, "", "addmm_"], [107, 3, 1, "", "addmv"], [108, 3, 1, "", "addmv_"], [109, 3, 1, "", "addr"], [110, 3, 1, "", "addr_"], [111, 3, 1, "", "adjoint"], [1876, 3, 1, "", "align_as"], [1876, 3, 1, "", "align_to"], [112, 3, 1, "", "all"], [113, 3, 1, "", "allclose"], [114, 3, 1, "", "amax"], [115, 3, 1, "", "amin"], [116, 3, 1, "", "aminmax"], [117, 3, 1, "", "angle"], [118, 3, 1, "", "any"], [119, 3, 1, "", "apply_"], [120, 3, 1, "", "arccos"], [121, 3, 1, "", "arccos_"], [122, 3, 1, "", "arccosh"], [123, 3, 1, "", "arccosh_"], [124, 3, 1, "", "arcsin"], [125, 3, 1, "", "arcsin_"], [126, 3, 1, "", "arcsinh"], [127, 3, 1, "", "arcsinh_"], [128, 3, 1, "", "arctan"], [129, 3, 1, "", "arctan2"], [130, 3, 1, "", "arctan2_"], [131, 3, 1, "", "arctan_"], [132, 3, 1, "", "arctanh"], [133, 3, 1, "", "arctanh_"], [134, 3, 1, "", "argmax"], [135, 3, 1, "", "argmin"], [136, 3, 1, "", "argsort"], [137, 3, 1, "", "argwhere"], [138, 3, 1, "", "as_strided"], [139, 3, 1, "", "as_subclass"], [140, 3, 1, "", "asin"], [141, 3, 1, "", "asin_"], [142, 3, 1, "", "asinh"], [143, 3, 1, "", "asinh_"], [144, 3, 1, "", "atan"], [145, 3, 1, "", "atan2"], [146, 3, 1, "", "atan2_"], [147, 3, 1, "", "atan_"], [148, 3, 1, "", "atanh"], [149, 3, 1, "", "atanh_"], [150, 3, 1, "", "backward"], [151, 3, 1, "", "baddbmm"], [152, 3, 1, "", "baddbmm_"], [153, 3, 1, "", "bernoulli"], [154, 3, 1, "", "bernoulli_"], [155, 3, 1, "", "bfloat16"], [156, 3, 1, "", "bincount"], [157, 3, 1, "", "bitwise_and"], [158, 3, 1, "", "bitwise_and_"], [159, 3, 1, "", "bitwise_left_shift"], [160, 3, 1, "", "bitwise_left_shift_"], [161, 3, 1, "", "bitwise_not"], [162, 3, 1, "", "bitwise_not_"], [163, 3, 1, "", "bitwise_or"], [164, 3, 1, "", "bitwise_or_"], [165, 3, 1, "", "bitwise_right_shift"], [166, 3, 1, "", "bitwise_right_shift_"], [167, 3, 1, "", "bitwise_xor"], [168, 3, 1, "", "bitwise_xor_"], [169, 3, 1, "", "bmm"], [170, 3, 1, "", "bool"], [171, 3, 1, "", "broadcast_to"], [172, 3, 1, "", "byte"], [173, 3, 1, "", "cauchy_"], [174, 3, 1, "", "ccol_indices"], [175, 3, 1, "", "cdouble"], [176, 3, 1, "", "ceil"], [177, 3, 1, "", "ceil_"], [178, 3, 1, "", "cfloat"], [179, 3, 1, "", "chalf"], [180, 3, 1, "", "char"], [181, 3, 1, "", "cholesky"], [182, 3, 1, "", "cholesky_inverse"], [183, 3, 1, "", "cholesky_solve"], [184, 3, 1, "", "chunk"], [185, 3, 1, "", "clamp"], [186, 3, 1, "", "clamp_"], [187, 3, 1, "", "clip"], [188, 3, 1, "", "clip_"], [189, 3, 1, "", "clone"], [190, 3, 1, "", "coalesce"], [191, 3, 1, "", "col_indices"], [192, 3, 1, "", "conj"], [193, 3, 1, "", "conj_physical"], [194, 3, 1, "", "conj_physical_"], [195, 3, 1, "", "contiguous"], [196, 3, 1, "", "copy_"], [197, 3, 1, "", "copysign"], [198, 3, 1, "", "copysign_"], [199, 3, 1, "", "corrcoef"], [200, 3, 1, "", "cos"], [201, 3, 1, "", "cos_"], [202, 3, 1, "", "cosh"], [203, 3, 1, "", "cosh_"], [204, 3, 1, "", "count_nonzero"], [205, 3, 1, "", "cov"], [206, 3, 1, "", "cpu"], [207, 3, 1, "", "cross"], [208, 3, 1, "", "crow_indices"], [209, 3, 1, "", "cuda"], [210, 3, 1, "", "cummax"], [211, 3, 1, "", "cummin"], [212, 3, 1, "", "cumprod"], [213, 3, 1, "", "cumprod_"], [214, 3, 1, "", "cumsum"], [215, 3, 1, "", "cumsum_"], [216, 3, 1, "", "data_ptr"], [217, 3, 1, "", "deg2rad"], [218, 3, 1, "", "dense_dim"], [219, 3, 1, "", "dequantize"], [220, 3, 1, "", "det"], [221, 3, 1, "", "detach"], [222, 3, 1, "", "detach_"], [223, 2, 1, "", "device"], [224, 3, 1, "", "diag"], [225, 3, 1, "", "diag_embed"], [226, 3, 1, "", "diagflat"], [227, 3, 1, "", "diagonal"], [228, 3, 1, "", "diagonal_scatter"], [229, 3, 1, "", "diff"], [230, 3, 1, "", "digamma"], [231, 3, 1, "", "digamma_"], [232, 3, 1, "", "dim"], [233, 3, 1, "", "dist"], [234, 3, 1, "", "div"], [235, 3, 1, "", "div_"], [236, 3, 1, "", "divide"], [237, 3, 1, "", "divide_"], [238, 3, 1, "", "dot"], [239, 3, 1, "", "double"], [240, 3, 1, "", "dsplit"], [241, 3, 1, "", "element_size"], [242, 3, 1, "", "eq"], [243, 3, 1, "", "eq_"], [244, 3, 1, "", "equal"], [245, 3, 1, "", "erf"], [246, 3, 1, "", "erf_"], [247, 3, 1, "", "erfc"], [248, 3, 1, "", "erfc_"], [249, 3, 1, "", "erfinv"], [250, 3, 1, "", "erfinv_"], [251, 3, 1, "", "exp"], [252, 3, 1, "", "exp_"], [253, 3, 1, "", "expand"], [254, 3, 1, "", "expand_as"], [255, 3, 1, "", "expm1"], [256, 3, 1, "", "expm1_"], [257, 3, 1, "", "exponential_"], [258, 3, 1, "", "fill_"], [259, 3, 1, "", "fill_diagonal_"], [260, 3, 1, "", "fix"], [261, 3, 1, "", "fix_"], [262, 3, 1, "", "flatten"], [263, 3, 1, "", "flip"], [264, 3, 1, "", "fliplr"], [265, 3, 1, "", "flipud"], [266, 3, 1, "", "float"], [267, 3, 1, "", "float_power"], [268, 3, 1, "", "float_power_"], [269, 3, 1, "", "floor"], [270, 3, 1, "", "floor_"], [271, 3, 1, "", "floor_divide"], [272, 3, 1, "", "floor_divide_"], [273, 3, 1, "", "fmax"], [274, 3, 1, "", "fmin"], [275, 3, 1, "", "fmod"], [276, 3, 1, "", "fmod_"], [277, 3, 1, "", "frac"], [278, 3, 1, "", "frac_"], [279, 3, 1, "", "frexp"], [280, 3, 1, "", "gather"], [281, 3, 1, "", "gcd"], [282, 3, 1, "", "gcd_"], [283, 3, 1, "", "ge"], [284, 3, 1, "", "ge_"], [285, 3, 1, "", "geometric_"], [286, 3, 1, "", "geqrf"], [287, 3, 1, "", "ger"], [288, 3, 1, "", "get_device"], [289, 2, 1, "", "grad"], [290, 3, 1, "", "greater"], [291, 3, 1, "", "greater_"], [292, 3, 1, "", "greater_equal"], [293, 3, 1, "", "greater_equal_"], [294, 3, 1, "", "gt"], [295, 3, 1, "", "gt_"], [296, 3, 1, "", "half"], [297, 3, 1, "", "hardshrink"], [298, 3, 1, "", "heaviside"], [299, 3, 1, "", "histc"], [300, 3, 1, "", "histogram"], [301, 3, 1, "", "hsplit"], [302, 3, 1, "", "hypot"], [303, 3, 1, "", "hypot_"], [304, 3, 1, "", "i0"], [305, 3, 1, "", "i0_"], [306, 3, 1, "", "igamma"], [307, 3, 1, "", "igamma_"], [308, 3, 1, "", "igammac"], [309, 3, 1, "", "igammac_"], [310, 2, 1, "", "imag"], [311, 3, 1, "", "index_add"], [312, 3, 1, "", "index_add_"], [313, 3, 1, "", "index_copy"], [314, 3, 1, "", "index_copy_"], [315, 3, 1, "", "index_fill"], [316, 3, 1, "", "index_fill_"], [317, 3, 1, "", "index_put"], [318, 3, 1, "", "index_put_"], [319, 3, 1, "", "index_reduce"], [320, 3, 1, "", "index_reduce_"], [321, 3, 1, "", "index_select"], [322, 3, 1, "", "indices"], [323, 3, 1, "", "inner"], [324, 3, 1, "", "int"], [325, 3, 1, "", "int_repr"], [326, 3, 1, "", "inverse"], [327, 3, 1, "", "is_coalesced"], [328, 3, 1, "", "is_complex"], [329, 3, 1, "", "is_conj"], [330, 3, 1, "", "is_contiguous"], [331, 2, 1, "", "is_cuda"], [332, 3, 1, "", "is_floating_point"], [333, 3, 1, "", "is_inference"], [334, 2, 1, "", "is_leaf"], [335, 2, 1, "", "is_meta"], [336, 3, 1, "", "is_pinned"], [337, 2, 1, "", "is_quantized"], [338, 3, 1, "", "is_set_to"], [339, 3, 1, "", "is_shared"], [340, 3, 1, "", "is_signed"], [341, 2, 1, "", "is_sparse"], [342, 2, 1, "", "is_sparse_csr"], [343, 3, 1, "", "isclose"], [344, 3, 1, "", "isfinite"], [345, 3, 1, "", "isinf"], [346, 3, 1, "", "isnan"], [347, 3, 1, "", "isneginf"], [348, 3, 1, "", "isposinf"], [349, 3, 1, "", "isreal"], [350, 3, 1, "", "istft"], [351, 3, 1, "", "item"], [352, 2, 1, "", "itemsize"], [353, 3, 1, "", "kthvalue"], [354, 3, 1, "", "lcm"], [355, 3, 1, "", "lcm_"], [356, 3, 1, "", "ldexp"], [357, 3, 1, "", "ldexp_"], [358, 3, 1, "", "le"], [359, 3, 1, "", "le_"], [360, 3, 1, "", "lerp"], [361, 3, 1, "", "lerp_"], [362, 3, 1, "", "less"], [363, 3, 1, "", "less_"], [364, 3, 1, "", "less_equal"], [365, 3, 1, "", "less_equal_"], [366, 3, 1, "", "lgamma"], [367, 3, 1, "", "lgamma_"], [368, 3, 1, "", "log"], [369, 3, 1, "", "log10"], [370, 3, 1, "", "log10_"], [371, 3, 1, "", "log1p"], [372, 3, 1, "", "log1p_"], [373, 3, 1, "", "log2"], [374, 3, 1, "", "log2_"], [375, 3, 1, "", "log_"], [376, 3, 1, "", "log_normal_"], [377, 3, 1, "", "logaddexp"], [378, 3, 1, "", "logaddexp2"], [379, 3, 1, "", "logcumsumexp"], [380, 3, 1, "", "logdet"], [381, 3, 1, "", "logical_and"], [382, 3, 1, "", "logical_and_"], [383, 3, 1, "", "logical_not"], [384, 3, 1, "", "logical_not_"], [385, 3, 1, "", "logical_or"], [386, 3, 1, "", "logical_or_"], [387, 3, 1, "", "logical_xor"], [388, 3, 1, "", "logical_xor_"], [389, 3, 1, "", "logit"], [390, 3, 1, "", "logit_"], [391, 3, 1, "", "logsumexp"], [392, 3, 1, "", "long"], [393, 3, 1, "", "lt"], [394, 3, 1, "", "lt_"], [395, 3, 1, "", "lu"], [396, 3, 1, "", "lu_solve"], [1922, 2, 1, "", "mH"], [1922, 2, 1, "", "mT"], [397, 3, 1, "", "map_"], [398, 3, 1, "", "masked_fill"], [399, 3, 1, "", "masked_fill_"], [400, 3, 1, "", "masked_scatter"], [401, 3, 1, "", "masked_scatter_"], [402, 3, 1, "", "masked_select"], [403, 3, 1, "", "matmul"], [404, 3, 1, "", "matrix_exp"], [405, 3, 1, "", "matrix_power"], [406, 3, 1, "", "max"], [407, 3, 1, "", "maximum"], [408, 3, 1, "", "mean"], [409, 3, 1, "", "median"], [410, 3, 1, "", "min"], [411, 3, 1, "", "minimum"], [412, 3, 1, "", "mm"], [413, 3, 1, "", "mode"], [414, 3, 1, "", "moveaxis"], [415, 3, 1, "", "movedim"], [416, 3, 1, "", "msort"], [417, 3, 1, "", "mul"], [418, 3, 1, "", "mul_"], [419, 3, 1, "", "multinomial"], [420, 3, 1, "", "multiply"], [421, 3, 1, "", "multiply_"], [422, 3, 1, "", "mv"], [423, 3, 1, "", "mvlgamma"], [424, 3, 1, "", "mvlgamma_"], [1876, 2, 1, "", "names"], [425, 3, 1, "", "nan_to_num"], [426, 3, 1, "", "nan_to_num_"], [427, 3, 1, "", "nanmean"], [428, 3, 1, "", "nanmedian"], [429, 3, 1, "", "nanquantile"], [430, 3, 1, "", "nansum"], [431, 3, 1, "", "narrow"], [432, 3, 1, "", "narrow_copy"], [433, 2, 1, "", "nbytes"], [434, 2, 1, "", "ndim"], [435, 3, 1, "", "ndimension"], [436, 3, 1, "", "ne"], [437, 3, 1, "", "ne_"], [438, 3, 1, "", "neg"], [439, 3, 1, "", "neg_"], [440, 3, 1, "", "negative"], [441, 3, 1, "", "negative_"], [442, 3, 1, "", "nelement"], [443, 3, 1, "", "new_empty"], [444, 3, 1, "", "new_full"], [445, 3, 1, "", "new_ones"], [446, 3, 1, "", "new_tensor"], [447, 3, 1, "", "new_zeros"], [448, 3, 1, "", "nextafter"], [449, 3, 1, "", "nextafter_"], [450, 3, 1, "", "nonzero"], [451, 3, 1, "", "norm"], [452, 3, 1, "", "normal_"], [453, 3, 1, "", "not_equal"], [454, 3, 1, "", "not_equal_"], [455, 3, 1, "", "numel"], [456, 3, 1, "", "numpy"], [457, 3, 1, "", "orgqr"], [458, 3, 1, "", "ormqr"], [459, 3, 1, "", "outer"], [460, 3, 1, "", "permute"], [461, 3, 1, "", "pin_memory"], [462, 3, 1, "", "pinverse"], [463, 3, 1, "", "polygamma"], [464, 3, 1, "", "polygamma_"], [465, 3, 1, "", "positive"], [466, 3, 1, "", "pow"], [467, 3, 1, "", "pow_"], [468, 3, 1, "", "prod"], [469, 3, 1, "", "put_"], [470, 3, 1, "", "q_per_channel_axis"], [471, 3, 1, "", "q_per_channel_scales"], [472, 3, 1, "", "q_per_channel_zero_points"], [473, 3, 1, "", "q_scale"], [474, 3, 1, "", "q_zero_point"], [475, 3, 1, "", "qr"], [476, 3, 1, "", "qscheme"], [477, 3, 1, "", "quantile"], [478, 3, 1, "", "rad2deg"], [479, 3, 1, "", "random_"], [480, 3, 1, "", "ravel"], [481, 2, 1, "", "real"], [482, 3, 1, "", "reciprocal"], [483, 3, 1, "", "reciprocal_"], [484, 3, 1, "", "record_stream"], [1876, 3, 1, "", "refine_names"], [485, 3, 1, "", "register_hook"], [486, 3, 1, "", "remainder"], [487, 3, 1, "", "remainder_"], [1876, 3, 1, "", "rename"], [1876, 3, 1, "", "rename_"], [488, 3, 1, "", "renorm"], [489, 3, 1, "", "renorm_"], [490, 3, 1, "", "repeat"], [491, 3, 1, "", "repeat_interleave"], [492, 2, 1, "", "requires_grad"], [493, 3, 1, "", "requires_grad_"], [494, 3, 1, "", "reshape"], [495, 3, 1, "", "reshape_as"], [496, 3, 1, "", "resize_"], [497, 3, 1, "", "resize_as_"], [498, 3, 1, "", "resolve_conj"], [499, 3, 1, "", "resolve_neg"], [500, 3, 1, "", "retain_grad"], [501, 2, 1, "", "retains_grad"], [502, 3, 1, "", "roll"], [503, 3, 1, "", "rot90"], [504, 3, 1, "", "round"], [505, 3, 1, "", "round_"], [506, 3, 1, "", "row_indices"], [507, 3, 1, "", "rsqrt"], [508, 3, 1, "", "rsqrt_"], [509, 3, 1, "", "scatter"], [510, 3, 1, "", "scatter_"], [511, 3, 1, "", "scatter_add"], [512, 3, 1, "", "scatter_add_"], [513, 3, 1, "", "scatter_reduce"], [514, 3, 1, "", "scatter_reduce_"], [515, 3, 1, "", "select"], [516, 3, 1, "", "select_scatter"], [517, 3, 1, "", "set_"], [518, 3, 1, "", "sgn"], [519, 3, 1, "", "sgn_"], [520, 3, 1, "", "share_memory_"], [521, 3, 1, "", "short"], [522, 3, 1, "", "sigmoid"], [523, 3, 1, "", "sigmoid_"], [524, 3, 1, "", "sign"], [525, 3, 1, "", "sign_"], [526, 3, 1, "", "signbit"], [527, 3, 1, "", "sin"], [528, 3, 1, "", "sin_"], [529, 3, 1, "", "sinc"], [530, 3, 1, "", "sinc_"], [531, 3, 1, "", "sinh"], [532, 3, 1, "", "sinh_"], [533, 3, 1, "", "size"], [534, 3, 1, "", "slice_scatter"], [535, 3, 1, "", "slogdet"], [536, 3, 1, "", "smm"], [537, 3, 1, "", "softmax"], [538, 3, 1, "", "sort"], [539, 3, 1, "", "sparse_dim"], [540, 3, 1, "", "sparse_mask"], [541, 3, 1, "", "sparse_resize_"], [542, 3, 1, "", "sparse_resize_and_clear_"], [543, 3, 1, "", "split"], [544, 3, 1, "", "sqrt"], [545, 3, 1, "", "sqrt_"], [546, 3, 1, "", "square"], [547, 3, 1, "", "square_"], [548, 3, 1, "", "squeeze"], [549, 3, 1, "", "squeeze_"], [550, 3, 1, "", "sspaddmm"], [551, 3, 1, "", "std"], [552, 3, 1, "", "stft"], [553, 3, 1, "", "storage"], [554, 3, 1, "", "storage_offset"], [555, 3, 1, "", "storage_type"], [556, 3, 1, "", "stride"], [557, 3, 1, "", "sub"], [558, 3, 1, "", "sub_"], [559, 3, 1, "", "subtract"], [560, 3, 1, "", "subtract_"], [561, 3, 1, "", "sum"], [562, 3, 1, "", "sum_to_size"], [563, 3, 1, "", "svd"], [564, 3, 1, "", "swapaxes"], [565, 3, 1, "", "swapdims"], [566, 3, 1, "", "t"], [567, 3, 1, "", "t_"], [568, 3, 1, "", "take"], [569, 3, 1, "", "take_along_dim"], [570, 3, 1, "", "tan"], [571, 3, 1, "", "tan_"], [572, 3, 1, "", "tanh"], [573, 3, 1, "", "tanh_"], [574, 3, 1, "", "tensor_split"], [575, 3, 1, "", "tile"], [576, 3, 1, "", "to"], [577, 3, 1, "", "to_dense"], [578, 3, 1, "", "to_mkldnn"], [579, 3, 1, "", "to_sparse"], [580, 3, 1, "", "to_sparse_bsc"], [581, 3, 1, "", "to_sparse_bsr"], [582, 3, 1, "", "to_sparse_coo"], [583, 3, 1, "", "to_sparse_csc"], [584, 3, 1, "", "to_sparse_csr"], [585, 3, 1, "", "tolist"], [586, 3, 1, "", "topk"], [587, 3, 1, "", "trace"], [588, 3, 1, "", "transpose"], [589, 3, 1, "", "transpose_"], [590, 3, 1, "", "triangular_solve"], [591, 3, 1, "", "tril"], [592, 3, 1, "", "tril_"], [593, 3, 1, "", "triu"], [594, 3, 1, "", "triu_"], [595, 3, 1, "", "true_divide"], [596, 3, 1, "", "true_divide_"], [597, 3, 1, "", "trunc"], [598, 3, 1, "", "trunc_"], [599, 3, 1, "", "type"], [600, 3, 1, "", "type_as"], [601, 3, 1, "", "unbind"], [602, 3, 1, "", "unflatten"], [603, 3, 1, "", "unfold"], [604, 3, 1, "", "uniform_"], [605, 3, 1, "", "unique"], [606, 3, 1, "", "unique_consecutive"], [607, 3, 1, "", "unsqueeze"], [608, 3, 1, "", "unsqueeze_"], [609, 3, 1, "", "untyped_storage"], [610, 3, 1, "", "values"], [611, 3, 1, "", "var"], [612, 3, 1, "", "vdot"], [613, 3, 1, "", "view"], [614, 3, 1, "", "view_as"], [615, 3, 1, "", "vsplit"], [616, 3, 1, "", "where"], [617, 3, 1, "", "xlogy"], [618, 3, 1, "", "xlogy_"], [619, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1918, 3, 1, "", "bfloat16"], [1918, 3, 1, "", "bool"], [1918, 3, 1, "", "byte"], [1918, 3, 1, "", "char"], [1918, 3, 1, "", "clone"], [1918, 3, 1, "", "complex_double"], [1918, 3, 1, "", "complex_float"], [1918, 3, 1, "", "copy_"], [1918, 3, 1, "", "cpu"], [1918, 3, 1, "", "cuda"], [1918, 3, 1, "", "data_ptr"], [1918, 4, 1, "", "device"], [1918, 3, 1, "", "double"], [1918, 2, 1, "", "dtype"], [1918, 3, 1, "", "element_size"], [1918, 3, 1, "", "fill_"], [1918, 3, 1, "", "float"], [1918, 3, 1, "", "from_buffer"], [1918, 3, 1, "", "from_file"], [1918, 3, 1, "", "get_device"], [1918, 3, 1, "", "half"], [1918, 3, 1, "", "int"], [1918, 4, 1, "", "is_cuda"], [1918, 3, 1, "", "is_pinned"], [1918, 3, 1, "", "is_shared"], [1918, 2, 1, "", "is_sparse"], [1918, 3, 1, "", "long"], [1918, 3, 1, "", "nbytes"], [1918, 3, 1, "", "pickle_storage_type"], [1918, 3, 1, "", "pin_memory"], [1918, 3, 1, "", "resize_"], [1918, 3, 1, "", "share_memory_"], [1918, 3, 1, "", "short"], [1918, 3, 1, "", "size"], [1918, 3, 1, "", "tolist"], [1918, 3, 1, "", "type"], [1918, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1918, 3, 1, "", "bfloat16"], [1918, 3, 1, "", "bool"], [1918, 3, 1, "", "byte"], [1918, 3, 1, "", "byteswap"], [1918, 3, 1, "", "char"], [1918, 3, 1, "", "clone"], [1918, 3, 1, "", "complex_double"], [1918, 3, 1, "", "complex_float"], [1918, 3, 1, "", "copy_"], [1918, 3, 1, "", "cpu"], [1918, 3, 1, "", "cuda"], [1918, 3, 1, "", "data_ptr"], [1918, 2, 1, "", "device"], [1918, 3, 1, "", "double"], [1918, 3, 1, "", "element_size"], [1918, 3, 1, "", "fill_"], [1918, 3, 1, "", "float"], [1918, 3, 1, "", "from_buffer"], [1918, 3, 1, "", "from_file"], [1918, 3, 1, "", "get_device"], [1918, 3, 1, "", "half"], [1918, 3, 1, "", "int"], [1918, 4, 1, "", "is_cuda"], [1918, 3, 1, "", "is_pinned"], [1918, 3, 1, "", "is_shared"], [1918, 2, 1, "", "is_sparse"], [1918, 2, 1, "", "is_sparse_csr"], [1918, 3, 1, "", "long"], [1918, 3, 1, "", "mps"], [1918, 3, 1, "", "nbytes"], [1918, 3, 1, "", "new"], [1918, 3, 1, "", "pin_memory"], [1918, 3, 1, "", "resize_"], [1918, 3, 1, "", "share_memory_"], [1918, 3, 1, "", "short"], [1918, 3, 1, "", "size"], [1918, 3, 1, "", "tolist"], [1918, 3, 1, "", "type"], [1918, 3, 1, "", "untyped"]], "torch.__config__": [[30, 5, 1, "", "parallel_info"], [30, 5, 1, "", "show"]], "torch._dynamo": [[0, 1, 1, "", "OptimizedModule"], [0, 5, 1, "", "allow_in_graph"], [0, 5, 1, "", "disable"], [0, 5, 1, "", "disallow_in_graph"], [0, 5, 1, "", "export"], [0, 5, 1, "", "forbid_in_graph"], [0, 5, 1, "", "graph_break"], [0, 5, 1, "", "list_backends"], [0, 5, 1, "", "mark_dynamic"], [0, 5, 1, "", "mark_static"], [0, 5, 1, "", "optimize"], [0, 5, 1, "", "optimize_assert"], [0, 5, 1, "", "register_backend"], [0, 5, 1, "", "reset"], [0, 5, 1, "", "run"]], "torch._logging": [[676, 5, 1, "", "set_logs"]], "torch.ao": [[1907, 0, 0, "-", "nn"], [1907, 0, 0, "-", "ns"], [1907, 0, 0, "-", "pruning"], [1907, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1910, 0, 0, "-", "intrinsic"], [1910, 0, 0, "-", "qat"], [1907, 0, 0, "-", "quantizable"], [1907, 0, 0, "-", "quantized"], [1907, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[696, 1, 1, "", "BNReLU2d"], [697, 1, 1, "", "BNReLU3d"], [698, 1, 1, "", "ConvBn1d"], [699, 1, 1, "", "ConvBn2d"], [700, 1, 1, "", "ConvBn3d"], [701, 1, 1, "", "ConvBnReLU1d"], [702, 1, 1, "", "ConvBnReLU2d"], [703, 1, 1, "", "ConvBnReLU3d"], [704, 1, 1, "", "ConvReLU1d"], [705, 1, 1, "", "ConvReLU2d"], [706, 1, 1, "", "ConvReLU3d"], [707, 1, 1, "", "LinearReLU"], [1910, 0, 0, "-", "modules"], [1910, 0, 0, "-", "qat"], [1910, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[708, 1, 1, "", "ConvBn1d"], [709, 1, 1, "", "ConvBn2d"], [710, 1, 1, "", "ConvBn3d"], [711, 1, 1, "", "ConvBnReLU1d"], [712, 1, 1, "", "ConvBnReLU2d"], [713, 1, 1, "", "ConvBnReLU3d"], [714, 1, 1, "", "ConvReLU2d"], [715, 1, 1, "", "ConvReLU3d"], [716, 1, 1, "", "LinearReLU"], [717, 1, 1, "", "freeze_bn_stats"], [1910, 0, 0, "-", "modules"], [718, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[719, 1, 1, "", "BNReLU2d"], [720, 1, 1, "", "BNReLU3d"], [721, 1, 1, "", "ConvReLU1d"], [722, 1, 1, "", "ConvReLU2d"], [723, 1, 1, "", "ConvReLU3d"], [724, 1, 1, "", "LinearReLU"], [1910, 0, 0, "-", "dynamic"], [1910, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[725, 1, 1, "", "LinearReLU"], [1910, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[726, 1, 1, "", "Conv2d"], [727, 1, 1, "", "Conv3d"], [728, 1, 1, "", "Linear"], [1910, 0, 0, "-", "dynamic"], [1910, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[729, 1, 1, "", "Linear"], [1910, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[730, 1, 1, "", "LSTM"], [731, 1, 1, "", "MultiheadAttention"], [1907, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[731, 3, 1, "", "dequantize"], [731, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[732, 1, 1, "", "BatchNorm2d"], [733, 1, 1, "", "BatchNorm3d"], [734, 1, 1, "", "Conv1d"], [735, 1, 1, "", "Conv2d"], [736, 1, 1, "", "Conv3d"], [737, 1, 1, "", "ConvTranspose1d"], [738, 1, 1, "", "ConvTranspose2d"], [739, 1, 1, "", "ConvTranspose3d"], [740, 1, 1, "", "ELU"], [741, 1, 1, "", "Embedding"], [742, 1, 1, "", "EmbeddingBag"], [743, 1, 1, "", "FXFloatFunctional"], [744, 1, 1, "", "FloatFunctional"], [745, 1, 1, "", "GroupNorm"], [746, 1, 1, "", "Hardswish"], [747, 1, 1, "", "InstanceNorm1d"], [748, 1, 1, "", "InstanceNorm2d"], [749, 1, 1, "", "InstanceNorm3d"], [750, 1, 1, "", "LayerNorm"], [751, 1, 1, "", "LeakyReLU"], [752, 1, 1, "", "Linear"], [753, 1, 1, "", "QFunctional"], [754, 1, 1, "", "ReLU6"], [755, 1, 1, "", "Sigmoid"], [1910, 0, 0, "-", "dynamic"], [1910, 0, 0, "-", "functional"], [1910, 0, 0, "-", "modules"], [1907, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[736, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[741, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[742, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[752, 3, 1, "", "from_float"], [752, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[756, 1, 1, "", "GRU"], [757, 1, 1, "", "GRUCell"], [758, 1, 1, "", "LSTM"], [759, 1, 1, "", "LSTMCell"], [760, 1, 1, "", "Linear"], [761, 1, 1, "", "RNNCell"], [1910, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[760, 3, 1, "", "from_float"], [760, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[762, 1, 1, "", "adaptive_avg_pool2d"], [763, 1, 1, "", "adaptive_avg_pool3d"], [764, 1, 1, "", "avg_pool2d"], [765, 1, 1, "", "avg_pool3d"], [766, 1, 1, "", "celu"], [767, 1, 1, "", "clamp"], [768, 1, 1, "", "conv1d"], [769, 1, 1, "", "conv2d"], [770, 1, 1, "", "conv3d"], [771, 1, 1, "", "elu"], [772, 1, 1, "", "hardsigmoid"], [773, 1, 1, "", "hardswish"], [774, 1, 1, "", "hardtanh"], [775, 1, 1, "", "interpolate"], [776, 1, 1, "", "leaky_relu"], [777, 1, 1, "", "linear"], [778, 1, 1, "", "max_pool1d"], [779, 1, 1, "", "max_pool2d"], [780, 1, 1, "", "threshold"], [781, 1, 1, "", "upsample"], [782, 1, 1, "", "upsample_bilinear"], [783, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1907, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1907, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1907, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1925, 0, 0, "-", "_numeric_suite"], [1926, 0, 0, "-", "_numeric_suite_fx"], [1907, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1925, 1, 1, "", "Logger"], [1925, 1, 1, "", "OutputLogger"], [1925, 1, 1, "", "Shadow"], [1925, 1, 1, "", "ShadowLogger"], [1925, 5, 1, "", "compare_model_outputs"], [1925, 5, 1, "", "compare_model_stub"], [1925, 5, 1, "", "compare_weights"], [1925, 5, 1, "", "get_logger_dict"], [1925, 5, 1, "", "get_matching_activations"], [1925, 5, 1, "", "prepare_model_outputs"], [1925, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1925, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1925, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1925, 3, 1, "", "add"], [1925, 3, 1, "", "add_relu"], [1925, 3, 1, "", "add_scalar"], [1925, 3, 1, "", "cat"], [1925, 3, 1, "", "forward"], [1925, 3, 1, "", "mul"], [1925, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1925, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1926, 1, 1, "", "NSTracer"], [1926, 1, 1, "", "OutputComparisonLogger"], [1926, 1, 1, "", "OutputLogger"], [1926, 5, 1, "", "add_loggers"], [1926, 5, 1, "", "add_shadow_loggers"], [1926, 5, 1, "", "convert_n_shadows_model"], [1926, 5, 1, "", "extend_logger_results_with_comparison"], [1926, 5, 1, "", "extract_logger_info"], [1926, 5, 1, "", "extract_results_n_shadows_model"], [1926, 5, 1, "", "extract_shadow_logger_info"], [1926, 5, 1, "", "extract_weights"], [1926, 5, 1, "", "loggers_set_enabled"], [1926, 5, 1, "", "loggers_set_save_activations"], [1926, 5, 1, "", "prepare_n_shadows_model"], [1926, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1926, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1926, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1926, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1926, 5, 1, "", "compute_cosine_similarity"], [1926, 5, 1, "", "compute_normalized_l2_error"], [1926, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1907, 0, 0, "-", "scheduler"], [1907, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[784, 1, 1, "", "DeQuantStub"], [785, 1, 1, "", "QuantStub"], [786, 1, 1, "", "QuantWrapper"], [787, 1, 1, "", "add_quant_dequant"], [1907, 0, 0, "-", "backend_config"], [793, 1, 1, "", "convert"], [794, 1, 1, "", "default_eval_fn"], [810, 1, 1, "", "fuse_modules"], [1907, 0, 0, "-", "fx"], [834, 1, 1, "", "prepare"], [835, 1, 1, "", "prepare_qat"], [836, 1, 1, "", "propagate_qconfig_"], [853, 1, 1, "", "quantize"], [854, 1, 1, "", "quantize_dynamic"], [859, 1, 1, "", "quantize_qat"], [860, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[788, 1, 1, "", "BackendConfig"], [789, 1, 1, "", "BackendPatternConfig"], [790, 1, 1, "", "DTypeConfig"], [791, 1, 1, "", "DTypeWithConstraints"], [792, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[788, 4, 1, "", "configs"], [788, 3, 1, "", "from_dict"], [788, 3, 1, "", "set_backend_pattern_config"], [788, 3, 1, "", "set_backend_pattern_configs"], [788, 3, 1, "", "set_name"], [788, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[789, 3, 1, "", "add_dtype_config"], [789, 3, 1, "", "from_dict"], [789, 3, 1, "", "set_dtype_configs"], [789, 3, 1, "", "set_fused_module"], [789, 3, 1, "", "set_fuser_method"], [789, 3, 1, "", "set_observation_type"], [789, 3, 1, "", "set_pattern"], [789, 3, 1, "", "set_qat_module"], [789, 3, 1, "", "set_reference_quantized_module"], [789, 3, 1, "", "set_root_module"], [789, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[790, 3, 1, "", "from_dict"], [790, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[792, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [792, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [792, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[795, 1, 1, "", "FakeQuantize"], [796, 1, 1, "", "FakeQuantizeBase"], [797, 1, 1, "", "FixedQParamsFakeQuantize"], [798, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [799, 2, 1, "", "default_fake_quant"], [800, 2, 1, "", "default_fused_act_fake_quant"], [801, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [802, 2, 1, "", "default_fused_wt_fake_quant"], [803, 2, 1, "", "default_histogram_fake_quant"], [804, 2, 1, "", "default_per_channel_weight_fake_quant"], [805, 2, 1, "", "default_weight_fake_quant"], [806, 1, 1, "", "disable_fake_quant"], [807, 1, 1, "", "disable_observer"], [808, 1, 1, "", "enable_fake_quant"], [809, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[811, 1, 1, "", "ConvertCustomConfig"], [812, 1, 1, "", "FuseCustomConfig"], [813, 1, 1, "", "PrepareCustomConfig"], [814, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[811, 3, 1, "", "from_dict"], [811, 3, 1, "", "set_observed_to_quantized_mapping"], [811, 3, 1, "", "set_preserved_attributes"], [811, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[812, 3, 1, "", "from_dict"], [812, 3, 1, "", "set_preserved_attributes"], [812, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[813, 3, 1, "", "from_dict"], [813, 3, 1, "", "set_float_to_observed_mapping"], [813, 3, 1, "", "set_input_quantized_indexes"], [813, 3, 1, "", "set_non_traceable_module_classes"], [813, 3, 1, "", "set_non_traceable_module_names"], [813, 3, 1, "", "set_output_quantized_indexes"], [813, 3, 1, "", "set_preserved_attributes"], [813, 3, 1, "", "set_standalone_module_class"], [813, 3, 1, "", "set_standalone_module_name"], [813, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[815, 1, 1, "", "HistogramObserver"], [816, 1, 1, "", "MinMaxObserver"], [817, 1, 1, "", "MovingAverageMinMaxObserver"], [818, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [819, 1, 1, "", "NoopObserver"], [820, 1, 1, "", "ObserverBase"], [821, 1, 1, "", "PerChannelMinMaxObserver"], [822, 1, 1, "", "PlaceholderObserver"], [823, 1, 1, "", "RecordingObserver"], [824, 2, 1, "", "default_debug_observer"], [825, 2, 1, "", "default_dynamic_quant_observer"], [826, 2, 1, "", "default_float_qparams_observer"], [827, 2, 1, "", "default_histogram_observer"], [828, 2, 1, "", "default_observer"], [829, 2, 1, "", "default_per_channel_weight_observer"], [830, 2, 1, "", "default_placeholder_observer"], [831, 2, 1, "", "default_weight_observer"], [832, 1, 1, "", "get_observer_state_dict"], [833, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[816, 3, 1, "", "calculate_qparams"], [816, 3, 1, "", "forward"], [816, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[820, 3, 1, "", "with_args"], [820, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[821, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[837, 1, 1, "", "QConfig"], [838, 2, 1, "", "default_activation_only_qconfig"], [839, 2, 1, "", "default_debug_qconfig"], [840, 2, 1, "", "default_dynamic_qconfig"], [841, 2, 1, "", "default_per_channel_qconfig"], [842, 2, 1, "", "default_qat_qconfig"], [843, 2, 1, "", "default_qat_qconfig_v2"], [844, 2, 1, "", "default_qconfig"], [845, 2, 1, "", "default_weight_only_qconfig"], [846, 2, 1, "", "float16_dynamic_qconfig"], [847, 2, 1, "", "float16_static_qconfig"], [848, 2, 1, "", "float_qparams_weight_only_qconfig"], [849, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[850, 1, 1, "", "QConfigMapping"], [851, 1, 1, "", "get_default_qat_qconfig_mapping"], [852, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[850, 3, 1, "", "from_dict"], [850, 3, 1, "", "set_global"], [850, 3, 1, "", "set_module_name"], [850, 3, 1, "", "set_module_name_object_type_order"], [850, 3, 1, "", "set_module_name_regex"], [850, 3, 1, "", "set_object_type"], [850, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[855, 1, 1, "", "convert_fx"], [856, 1, 1, "", "fuse_fx"], [857, 1, 1, "", "prepare_fx"], [858, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[2, 1, 1, "", "Function"], [889, 5, 1, "", "backward"], [2, 1, 1, "", "detect_anomaly"], [903, 5, 1, "", "grad"], [904, 5, 1, "", "gradcheck"], [905, 5, 1, "", "gradgradcheck"], [2, 1, 1, "", "set_detect_anomaly"], [916, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[885, 3, 1, "", "backward"], [886, 3, 1, "", "forward"], [887, 3, 1, "", "jvp"], [888, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[890, 1, 1, "", "dual_level"], [891, 5, 1, "", "make_dual"], [892, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[893, 3, 1, "", "mark_dirty"], [894, 3, 1, "", "mark_non_differentiable"], [895, 3, 1, "", "save_for_backward"], [896, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[897, 5, 1, "", "hessian"], [898, 5, 1, "", "hvp"], [899, 5, 1, "", "jacobian"], [900, 5, 1, "", "jvp"], [901, 5, 1, "", "vhp"], [902, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[906, 3, 1, "", "metadata"], [907, 3, 1, "", "name"], [908, 4, 1, "", "next_functions"], [909, 3, 1, "", "register_hook"], [910, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[2, 1, 1, "", "allow_mutation_on_saved_tensors"], [2, 1, 1, "", "disable_saved_tensors_hooks"], [2, 1, 1, "", "register_multi_grad_hook"], [2, 1, 1, "", "save_on_cpu"], [2, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[2, 1, 1, "", "emit_itt"], [2, 1, 1, "", "emit_nvtx"], [911, 5, 1, "", "load_nvprof"], [2, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[912, 3, 1, "", "export_chrome_trace"], [913, 3, 1, "", "key_averages"], [914, 4, 1, "", "self_cpu_time_total"], [915, 3, 1, "", "total_average"]], "torch.backends": [[3, 0, 0, "-", "cpu"], [3, 0, 0, "-", "cuda"], [3, 0, 0, "-", "cudnn"], [3, 0, 0, "-", "mkl"], [3, 0, 0, "-", "mkldnn"], [3, 0, 0, "-", "mps"], [3, 0, 0, "-", "openmp"], [3, 0, 0, "-", "opt_einsum"], [3, 0, 0, "-", "quantized"], [3, 0, 0, "-", "xeon"], [3, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[3, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[3, 1, 1, "", "SDPBackend"], [3, 2, 1, "", "cufft_plan_cache"], [3, 5, 1, "", "enable_flash_sdp"], [3, 5, 1, "", "enable_math_sdp"], [3, 5, 1, "", "enable_mem_efficient_sdp"], [3, 5, 1, "", "flash_sdp_enabled"], [3, 5, 1, "", "is_built"], [3, 5, 1, "", "math_sdp_enabled"], [3, 5, 1, "", "mem_efficient_sdp_enabled"], [3, 5, 1, "", "preferred_linalg_library"], [3, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[3, 3, 1, "", "clear"], [3, 2, 1, "", "max_size"], [3, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[3, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [3, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [3, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[3, 2, 1, "", "allow_tf32"], [3, 2, 1, "", "benchmark"], [3, 2, 1, "", "benchmark_limit"], [3, 2, 1, "", "deterministic"], [3, 2, 1, "", "enabled"], [3, 5, 1, "", "is_available"], [3, 5, 1, "", "version"]], "torch.backends.mkl": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[3, 5, 1, "", "is_available"], [3, 1, 1, "", "verbose"]], "torch.backends.mps": [[3, 5, 1, "", "is_available"], [3, 5, 1, "", "is_built"]], "torch.backends.openmp": [[3, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[3, 2, 1, "", "enabled"], [3, 5, 1, "", "get_opt_einsum"], [3, 5, 1, "", "is_available"], [3, 2, 1, "", "strategy"]], "torch.cpu": [[1, 0, 0, "-", "amp"]], "torch.cpu.amp": [[1, 1, 1, "", "autocast"]], "torch.cuda": [[963, 1, 1, "", "CUDAGraph"], [964, 1, 1, "", "CUDAPluggableAllocator"], [965, 1, 1, "", "Event"], [966, 1, 1, "", "ExternalStream"], [967, 6, 1, "", "OutOfMemoryError"], [968, 1, 1, "", "Stream"], [969, 1, 1, "", "StreamContext"], [34, 0, 0, "-", "_sanitizer"], [1, 0, 0, "-", "amp"], [970, 5, 1, "", "caching_allocator_alloc"], [971, 5, 1, "", "caching_allocator_delete"], [972, 5, 1, "", "can_device_access_peer"], [973, 5, 1, "", "change_current_allocator"], [974, 5, 1, "", "clock_rate"], [980, 5, 1, "", "current_blas_handle"], [981, 5, 1, "", "current_device"], [982, 5, 1, "", "current_stream"], [983, 5, 1, "", "default_stream"], [984, 1, 1, "", "device"], [985, 5, 1, "", "device_count"], [986, 1, 1, "", "device_of"], [987, 5, 1, "", "empty_cache"], [988, 5, 1, "", "get_allocator_backend"], [989, 5, 1, "", "get_arch_list"], [990, 5, 1, "", "get_device_capability"], [991, 5, 1, "", "get_device_name"], [992, 5, 1, "", "get_device_properties"], [993, 5, 1, "", "get_gencode_flags"], [994, 5, 1, "", "get_rng_state"], [995, 5, 1, "", "get_rng_state_all"], [996, 5, 1, "", "get_sync_debug_mode"], [997, 1, 1, "", "graph"], [998, 5, 1, "", "graph_pool_handle"], [999, 5, 1, "", "init"], [1000, 5, 1, "", "initial_seed"], [1001, 5, 1, "", "ipc_collect"], [1002, 5, 1, "", "is_available"], [1003, 5, 1, "", "is_current_stream_capturing"], [1004, 5, 1, "", "is_initialized"], [1007, 5, 1, "", "list_gpu_processes"], [1008, 5, 1, "", "make_graphed_callables"], [1009, 5, 1, "", "manual_seed"], [1010, 5, 1, "", "manual_seed_all"], [1011, 5, 1, "", "max_memory_allocated"], [1012, 5, 1, "", "max_memory_cached"], [1013, 5, 1, "", "max_memory_reserved"], [1014, 5, 1, "", "mem_get_info"], [1015, 5, 1, "", "memory_allocated"], [1016, 5, 1, "", "memory_cached"], [1017, 5, 1, "", "memory_reserved"], [1018, 5, 1, "", "memory_snapshot"], [1019, 5, 1, "", "memory_stats"], [1020, 5, 1, "", "memory_summary"], [1021, 5, 1, "", "memory_usage"], [1025, 5, 1, "", "power_draw"], [1026, 5, 1, "", "reset_max_memory_allocated"], [1027, 5, 1, "", "reset_max_memory_cached"], [1028, 5, 1, "", "reset_peak_memory_stats"], [1029, 5, 1, "", "seed"], [1030, 5, 1, "", "seed_all"], [1031, 5, 1, "", "set_device"], [1032, 5, 1, "", "set_per_process_memory_fraction"], [1033, 5, 1, "", "set_rng_state"], [1034, 5, 1, "", "set_rng_state_all"], [1035, 5, 1, "", "set_stream"], [1036, 5, 1, "", "set_sync_debug_mode"], [1037, 5, 1, "", "stream"], [1038, 5, 1, "", "synchronize"], [1039, 5, 1, "", "temperature"], [1040, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[963, 3, 1, "", "capture_begin"], [963, 3, 1, "", "capture_end"], [963, 3, 1, "", "debug_dump"], [963, 3, 1, "", "enable_debug_mode"], [963, 3, 1, "", "pool"], [963, 3, 1, "", "replay"], [963, 3, 1, "", "reset"]], "torch.cuda.Event": [[965, 3, 1, "", "elapsed_time"], [965, 3, 1, "", "from_ipc_handle"], [965, 3, 1, "", "ipc_handle"], [965, 3, 1, "", "query"], [965, 3, 1, "", "record"], [965, 3, 1, "", "synchronize"], [965, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[966, 3, 1, "", "query"], [966, 3, 1, "", "record_event"], [966, 3, 1, "", "synchronize"], [966, 3, 1, "", "wait_event"], [966, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[968, 3, 1, "", "query"], [968, 3, 1, "", "record_event"], [968, 3, 1, "", "synchronize"], [968, 3, 1, "", "wait_event"], [968, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[34, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[1, 1, 1, "", "GradScaler"], [1, 1, 1, "", "autocast"], [1, 5, 1, "", "custom_bwd"], [1, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[1, 3, 1, "", "get_backoff_factor"], [1, 3, 1, "", "get_growth_factor"], [1, 3, 1, "", "get_growth_interval"], [1, 3, 1, "", "get_scale"], [1, 3, 1, "", "is_enabled"], [1, 3, 1, "", "load_state_dict"], [1, 3, 1, "", "scale"], [1, 3, 1, "", "set_backoff_factor"], [1, 3, 1, "", "set_growth_factor"], [1, 3, 1, "", "set_growth_interval"], [1, 3, 1, "", "state_dict"], [1, 3, 1, "", "step"], [1, 3, 1, "", "unscale_"], [1, 3, 1, "", "update"]], "torch.cuda.comm": [[975, 5, 1, "", "broadcast"], [976, 5, 1, "", "broadcast_coalesced"], [977, 5, 1, "", "gather"], [978, 5, 1, "", "reduce_add"], [979, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1005, 5, 1, "", "_create_jit_fn"], [1006, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1022, 5, 1, "", "mark"], [1023, 5, 1, "", "range_pop"], [1024, 5, 1, "", "range_push"]], "torch.distributed": [[40, 1, 1, "", "Backend"], [40, 1, 1, "", "DistBackendError"], [40, 1, 1, "", "FileStore"], [38, 1, 1, "", "GradBucket"], [40, 1, 1, "", "HashStore"], [40, 1, 1, "", "P2POp"], [40, 1, 1, "", "PrefixStore"], [40, 1, 1, "", "ReduceOp"], [40, 1, 1, "", "Store"], [40, 1, 1, "", "TCPStore"], [40, 0, 0, "-", "algorithms"], [40, 5, 1, "", "all_gather"], [40, 5, 1, "", "all_gather_into_tensor"], [40, 5, 1, "", "all_gather_multigpu"], [40, 5, 1, "", "all_gather_object"], [40, 5, 1, "", "all_reduce"], [40, 5, 1, "", "all_reduce_multigpu"], [40, 5, 1, "", "all_to_all"], [40, 5, 1, "", "all_to_all_single"], [1912, 0, 0, "-", "autograd"], [40, 5, 1, "", "barrier"], [40, 5, 1, "", "batch_isend_irecv"], [40, 5, 1, "", "broadcast"], [40, 5, 1, "", "broadcast_multigpu"], [40, 5, 1, "", "broadcast_object_list"], [42, 0, 0, "-", "checkpoint"], [40, 0, 0, "-", "elastic"], [62, 0, 0, "-", "fsdp"], [40, 5, 1, "", "gather"], [40, 5, 1, "", "gather_object"], [40, 5, 1, "", "get_backend"], [40, 5, 1, "", "get_global_rank"], [40, 5, 1, "", "get_group_rank"], [40, 5, 1, "", "get_process_group_ranks"], [40, 5, 1, "", "get_rank"], [40, 5, 1, "", "get_world_size"], [40, 5, 1, "", "init_process_group"], [40, 5, 1, "", "irecv"], [40, 5, 1, "", "is_available"], [40, 5, 1, "", "is_gloo_available"], [40, 5, 1, "", "is_initialized"], [40, 5, 1, "", "is_mpi_available"], [40, 5, 1, "", "is_nccl_available"], [40, 5, 1, "", "is_torchelastic_launched"], [40, 5, 1, "", "isend"], [40, 0, 0, "-", "launch"], [40, 0, 0, "-", "launcher"], [40, 5, 1, "", "monitored_barrier"], [40, 5, 1, "", "new_group"], [40, 0, 0, "-", "nn"], [44, 0, 0, "-", "optim"], [40, 0, 0, "-", "pipeline"], [40, 5, 1, "", "recv"], [40, 5, 1, "", "reduce"], [40, 5, 1, "", "reduce_multigpu"], [40, 1, 1, "", "reduce_op"], [40, 5, 1, "", "reduce_scatter"], [40, 5, 1, "", "reduce_scatter_multigpu"], [40, 5, 1, "", "reduce_scatter_tensor"], [1912, 0, 0, "-", "rpc"], [58, 0, 0, "-", "run"], [40, 5, 1, "", "scatter"], [40, 5, 1, "", "scatter_object_list"], [40, 5, 1, "", "send"], [40, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[40, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[38, 5, 1, "", "buffer"], [38, 5, 1, "", "gradients"], [38, 5, 1, "", "index"], [38, 5, 1, "", "is_last"], [38, 5, 1, "", "parameters"], [38, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[40, 5, 1, "", "add"], [40, 5, 1, "", "compare_set"], [40, 5, 1, "", "delete_key"], [40, 5, 1, "", "get"], [40, 5, 1, "", "num_keys"], [40, 5, 1, "", "set"], [40, 5, 1, "", "set_timeout"], [40, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[41, 1, 1, "", "Join"], [41, 1, 1, "", "JoinHook"], [41, 1, 1, "", "Joinable"], [40, 0, 0, "-", "ddp_comm_hooks"], [40, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[41, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[41, 3, 1, "", "main_hook"], [41, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[41, 4, 1, "", "join_device"], [41, 3, 1, "", "join_hook"], [41, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[38, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[38, 5, 1, "", "allreduce_hook"], [38, 5, 1, "", "bf16_compress_hook"], [38, 5, 1, "", "bf16_compress_wrapper"], [38, 5, 1, "", "fp16_compress_hook"], [38, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[38, 1, 1, "", "PowerSGDState"], [38, 5, 1, "", "batched_powerSGD_hook"], [38, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[38, 3, 1, "", "__getstate__"], [38, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1912, 5, 1, "", "backward"], [1912, 1, 1, "", "context"], [1912, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[42, 1, 1, "", "DefaultLoadPlanner"], [42, 1, 1, "", "DefaultSavePlanner"], [42, 1, 1, "", "FileSystemReader"], [42, 1, 1, "", "FileSystemWriter"], [42, 1, 1, "", "LoadPlan"], [42, 1, 1, "", "LoadPlanner"], [42, 1, 1, "", "ReadItem"], [42, 1, 1, "", "SavePlan"], [42, 1, 1, "", "SavePlanner"], [42, 1, 1, "", "StorageReader"], [42, 1, 1, "", "StorageWriter"], [42, 1, 1, "", "WriteItem"], [42, 5, 1, "", "load_state_dict"], [42, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[42, 3, 1, "", "lookup_tensor"], [42, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[42, 3, 1, "", "lookup_object"], [42, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[42, 3, 1, "", "commit_tensor"], [42, 3, 1, "", "create_global_plan"], [42, 3, 1, "", "create_local_plan"], [42, 3, 1, "", "finish_plan"], [42, 3, 1, "", "load_bytes"], [42, 3, 1, "", "resolve_tensor"], [42, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[42, 3, 1, "", "create_global_plan"], [42, 3, 1, "", "create_local_plan"], [42, 3, 1, "", "finish_plan"], [42, 3, 1, "", "resolve_data"], [42, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[42, 3, 1, "", "prepare_global_plan"], [42, 3, 1, "", "prepare_local_plan"], [42, 3, 1, "", "read_data"], [42, 3, 1, "", "read_metadata"], [42, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[42, 3, 1, "", "finish"], [42, 3, 1, "", "prepare_global_plan"], [42, 3, 1, "", "prepare_local_plan"], [42, 3, 1, "", "set_up_storage_writer"], [42, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[48, 0, 0, "-", "agent"], [51, 0, 0, "-", "events"], [54, 0, 0, "-", "metrics"], [55, 0, 0, "-", "multiprocessing"], [57, 0, 0, "-", "rendezvous"], [59, 0, 0, "-", "timer"], [40, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[48, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[48, 1, 1, "", "ElasticAgent"], [48, 1, 1, "", "SimpleElasticAgent"], [48, 1, 1, "", "Worker"], [48, 1, 1, "", "WorkerGroup"], [48, 1, 1, "", "WorkerSpec"], [48, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[48, 3, 1, "", "get_worker_group"], [48, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[48, 3, 1, "", "_assign_worker_ranks"], [48, 3, 1, "", "_exit_barrier"], [48, 3, 1, "", "_initialize_workers"], [48, 3, 1, "", "_monitor_workers"], [48, 3, 1, "", "_rendezvous"], [48, 3, 1, "", "_restart_workers"], [48, 3, 1, "", "_shutdown"], [48, 3, 1, "", "_start_workers"], [48, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[48, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[48, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[48, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[48, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[51, 1, 1, "", "Event"], [51, 2, 1, "", "EventMetadataValue"], [51, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[51, 5, 1, "", "get_logging_handler"], [51, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[54, 1, 1, "", "ConsoleMetricHandler"], [54, 1, 1, "", "MetricHandler"], [54, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[54, 5, 1, "", "configure"], [54, 5, 1, "", "prof"], [54, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[55, 1, 1, "", "MultiprocessContext"], [55, 1, 1, "", "PContext"], [55, 1, 1, "", "RunProcsResult"], [55, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[50, 0, 0, "-", "errors"], [55, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[50, 1, 1, "", "ChildFailedError"], [50, 1, 1, "", "ErrorHandler"], [50, 1, 1, "", "ProcessFailure"], [50, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[57, 1, 1, "", "RendezvousClosedError"], [57, 1, 1, "", "RendezvousConnectionError"], [57, 1, 1, "", "RendezvousError"], [57, 1, 1, "", "RendezvousHandler"], [57, 1, 1, "", "RendezvousHandlerRegistry"], [57, 1, 1, "", "RendezvousParameters"], [57, 1, 1, "", "RendezvousStateError"], [57, 1, 1, "", "RendezvousTimeoutError"], [57, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[57, 3, 1, "", "get_backend"], [57, 3, 1, "", "get_run_id"], [57, 3, 1, "", "is_closed"], [57, 3, 1, "", "next_rendezvous"], [57, 3, 1, "", "num_nodes_waiting"], [57, 3, 1, "", "set_closed"], [57, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[57, 3, 1, "", "create_handler"], [57, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[57, 3, 1, "", "get"], [57, 3, 1, "", "get_as_bool"], [57, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[57, 1, 1, "", "C10dRendezvousBackend"], [57, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[57, 3, 1, "", "get_state"], [57, 4, 1, "", "name"], [57, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[57, 1, 1, "", "DynamicRendezvousHandler"], [57, 1, 1, "", "RendezvousBackend"], [57, 1, 1, "", "RendezvousTimeout"], [57, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[57, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[57, 3, 1, "", "get_state"], [57, 4, 1, "", "name"], [57, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[57, 4, 1, "", "close"], [57, 4, 1, "", "heartbeat"], [57, 4, 1, "", "join"], [57, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[57, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[57, 1, 1, "", "EtcdRendezvousBackend"], [57, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[57, 3, 1, "", "get_state"], [57, 4, 1, "", "name"], [57, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[57, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[57, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[57, 3, 1, "", "add"], [57, 3, 1, "", "check"], [57, 3, 1, "", "get"], [57, 3, 1, "", "set"], [57, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[59, 1, 1, "", "FileTimerClient"], [59, 1, 1, "", "FileTimerServer"], [59, 1, 1, "", "LocalTimerClient"], [59, 1, 1, "", "LocalTimerServer"], [59, 1, 1, "", "TimerClient"], [59, 1, 1, "", "TimerRequest"], [59, 1, 1, "", "TimerServer"], [59, 5, 1, "", "configure"], [59, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[59, 3, 1, "", "acquire"], [59, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[59, 3, 1, "", "clear_timers"], [59, 3, 1, "", "get_expired_timers"], [59, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[40, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[62, 1, 1, "", "BackwardPrefetch"], [62, 1, 1, "", "CPUOffload"], [62, 1, 1, "", "FullyShardedDataParallel"], [62, 1, 1, "", "MixedPrecision"], [62, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[62, 3, 1, "", "apply"], [62, 3, 1, "", "clip_grad_norm_"], [62, 3, 1, "", "flatten_sharded_optim_state_dict"], [62, 3, 1, "", "forward"], [62, 3, 1, "", "fsdp_modules"], [62, 3, 1, "", "full_optim_state_dict"], [62, 3, 1, "", "load_optim_state_dict_pre_hook"], [62, 4, 1, "", "module"], [62, 3, 1, "", "named_buffers"], [62, 3, 1, "", "named_parameters"], [62, 3, 1, "", "no_sync"], [62, 3, 1, "", "optim_state_dict"], [62, 3, 1, "", "optim_state_dict_post_hook"], [62, 3, 1, "", "optim_state_dict_to_load"], [62, 3, 1, "", "register_comm_hook"], [62, 3, 1, "", "rekey_optim_state_dict"], [62, 3, 1, "", "scatter_full_optim_state_dict"], [62, 3, 1, "", "set_state_dict_type"], [62, 3, 1, "", "shard_full_optim_state_dict"], [62, 3, 1, "", "sharded_optim_state_dict"], [62, 3, 1, "", "state_dict_type"], [62, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[40, 0, 0, "-", "api"], [40, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1912, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1912, 3, 1, "", "get_module_rref"], [1912, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[40, 0, 0, "-", "templates"]], "torch.distributed.optim": [[44, 1, 1, "", "DistributedOptimizer"], [44, 1, 1, "", "PostLocalSGDOptimizer"], [44, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[44, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[44, 3, 1, "", "load_state_dict"], [44, 3, 1, "", "state_dict"], [44, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[44, 3, 1, "", "add_param_group"], [44, 3, 1, "", "consolidate_state_dict"], [44, 3, 1, "", "join_hook"], [44, 3, 1, "", "load_state_dict"], [44, 3, 1, "", "state_dict"], [44, 3, 1, "", "step"]], "torch.distributed.pipeline": [[40, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1905, 1, 1, "", "Pipe"], [40, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1905, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1905, 1, 1, "", "pop"], [1905, 5, 1, "", "skippable"], [1905, 1, 1, "", "stash"], [1905, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1912, 1, 1, "", "BackendType"], [1912, 1, 1, "", "RRef"], [1912, 1, 1, "", "RpcBackendOptions"], [1912, 1, 1, "", "TensorPipeRpcBackendOptions"], [1912, 1, 1, "", "WorkerInfo"], [1912, 5, 1, "", "get_worker_info"], [1912, 5, 1, "", "init_rpc"], [1912, 5, 1, "", "remote"], [1912, 5, 1, "", "rpc_async"], [1912, 5, 1, "", "rpc_sync"], [1912, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1912, 4, 1, "", "init_method"], [1912, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1912, 4, 1, "", "device_maps"], [1912, 4, 1, "", "devices"], [1912, 4, 1, "", "init_method"], [1912, 4, 1, "", "num_worker_threads"], [1912, 4, 1, "", "rpc_timeout"], [1912, 3, 1, "", "set_device_map"], [1912, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1912, 4, 1, "", "id"], [1912, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1912, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[45, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[45, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[45, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[45, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[45, 1, 1, "", "ColwiseParallel"], [45, 1, 1, "", "PairwiseParallel"], [45, 1, 1, "", "RowwiseParallel"], [45, 1, 1, "", "SequenceParallel"], [45, 5, 1, "", "make_input_replicate_1d"], [45, 5, 1, "", "make_input_reshard_replicate"], [45, 5, 1, "", "make_input_shard_1d"], [45, 5, 1, "", "make_input_shard_1d_last_dim"], [45, 5, 1, "", "make_output_replicate_1d"], [45, 5, 1, "", "make_output_reshard_tensor"], [45, 5, 1, "", "make_output_shard_1d"], [45, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[46, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "enumerate_support"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_enumerate_support"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.beta": [[46, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[46, 2, 1, "", "arg_constraints"], [46, 4, 1, "", "concentration0"], [46, 4, 1, "", "concentration1"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.binomial": [[46, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "enumerate_support"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_enumerate_support"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.categorical": [[46, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "enumerate_support"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_enumerate_support"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[46, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.chi2": [[46, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[46, 2, 1, "", "arg_constraints"], [46, 4, 1, "", "df"], [46, 3, 1, "", "expand"]], "torch.distributions": [[46, 0, 0, "-", "constraint_registry"], [46, 0, 0, "-", "constraints"], [46, 0, 0, "-", "kl"], [46, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[46, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[46, 3, 1, "", "register"]], "torch.distributions.constraints": [[46, 1, 1, "", "Constraint"], [46, 2, 1, "", "cat"], [46, 2, 1, "", "dependent_property"], [46, 2, 1, "", "greater_than"], [46, 2, 1, "", "greater_than_eq"], [46, 2, 1, "", "half_open_interval"], [46, 2, 1, "", "independent"], [46, 2, 1, "", "integer_interval"], [46, 2, 1, "", "interval"], [46, 2, 1, "", "less_than"], [46, 2, 1, "", "multinomial"], [46, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[46, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[46, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "rsample"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "stddev"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[46, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.distribution": [[46, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[46, 4, 1, "", "arg_constraints"], [46, 4, 1, "", "batch_shape"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "enumerate_support"], [46, 4, 1, "", "event_shape"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "perplexity"], [46, 3, 1, "", "rsample"], [46, 3, 1, "", "sample"], [46, 3, 1, "", "sample_n"], [46, 3, 1, "", "set_default_validate_args"], [46, 4, 1, "", "stddev"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[46, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[46, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[46, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 4, 1, "", "stddev"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[46, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.gamma": [[46, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.geometric": [[46, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[46, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "stddev"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[46, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "scale"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[46, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "scale"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.independent": [[46, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "enumerate_support"], [46, 3, 1, "", "expand"], [46, 4, 1, "", "has_enumerate_support"], [46, 4, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.kl": [[46, 5, 1, "", "kl_divergence"], [46, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[46, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.laplace": [[46, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 4, 1, "", "stddev"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[46, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"]], "torch.distributions.log_normal": [[46, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 4, 1, "", "loc"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "scale"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[46, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[46, 2, 1, "", "arg_constraints"], [46, 4, 1, "", "covariance_matrix"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "precision_matrix"], [46, 3, 1, "", "rsample"], [46, 4, 1, "", "scale_tril"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[46, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 4, 1, "", "component_distribution"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mixture_distribution"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[46, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "support"], [46, 2, 1, "", "total_count"], [46, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[46, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[46, 2, 1, "", "arg_constraints"], [46, 4, 1, "", "covariance_matrix"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "precision_matrix"], [46, 3, 1, "", "rsample"], [46, 4, 1, "", "scale_tril"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[46, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.normal": [[46, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "stddev"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[46, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "enumerate_support"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_enumerate_support"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.pareto": [[46, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.poisson": [[46, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[46, 1, 1, "", "LogitRelaxedBernoulli"], [46, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "param_shape"], [46, 4, 1, "", "probs"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "probs"], [46, 2, 1, "", "support"], [46, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[46, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 4, 1, "", "logits"], [46, 4, 1, "", "probs"], [46, 2, 1, "", "support"], [46, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[46, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[46, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "expand"], [46, 4, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 3, 1, "", "rsample"], [46, 3, 1, "", "sample"], [46, 4, 1, "", "support"]], "torch.distributions.transforms": [[46, 1, 1, "", "AbsTransform"], [46, 1, 1, "", "AffineTransform"], [46, 1, 1, "", "CatTransform"], [46, 1, 1, "", "ComposeTransform"], [46, 1, 1, "", "CorrCholeskyTransform"], [46, 1, 1, "", "CumulativeDistributionTransform"], [46, 1, 1, "", "ExpTransform"], [46, 1, 1, "", "IndependentTransform"], [46, 1, 1, "", "LowerCholeskyTransform"], [46, 1, 1, "", "PositiveDefiniteTransform"], [46, 1, 1, "", "PowerTransform"], [46, 1, 1, "", "ReshapeTransform"], [46, 1, 1, "", "SigmoidTransform"], [46, 1, 1, "", "SoftmaxTransform"], [46, 1, 1, "", "SoftplusTransform"], [46, 1, 1, "", "StackTransform"], [46, 1, 1, "", "StickBreakingTransform"], [46, 1, 1, "", "TanhTransform"], [46, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[46, 3, 1, "", "forward_shape"], [46, 4, 1, "", "inv"], [46, 3, 1, "", "inverse_shape"], [46, 3, 1, "", "log_abs_det_jacobian"], [46, 4, 1, "", "sign"]], "torch.distributions.uniform": [[46, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "cdf"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "icdf"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "rsample"], [46, 4, 1, "", "stddev"], [46, 4, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[46, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 3, 1, "", "sample"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.weibull": [[46, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[46, 2, 1, "", "arg_constraints"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.distributions.wishart": [[46, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[46, 2, 1, "", "arg_constraints"], [46, 4, 1, "", "covariance_matrix"], [46, 3, 1, "", "entropy"], [46, 3, 1, "", "expand"], [46, 2, 1, "", "has_rsample"], [46, 3, 1, "", "log_prob"], [46, 4, 1, "", "mean"], [46, 4, 1, "", "mode"], [46, 4, 1, "", "precision_matrix"], [46, 3, 1, "", "rsample"], [46, 4, 1, "", "scale_tril"], [46, 2, 1, "", "support"], [46, 4, 1, "", "variance"]], "torch.fft": [[1078, 5, 1, "", "fft"], [1079, 5, 1, "", "fft2"], [1080, 5, 1, "", "fftfreq"], [1081, 5, 1, "", "fftn"], [1082, 5, 1, "", "fftshift"], [1083, 5, 1, "", "hfft"], [1084, 5, 1, "", "hfft2"], [1085, 5, 1, "", "hfftn"], [1086, 5, 1, "", "ifft"], [1087, 5, 1, "", "ifft2"], [1088, 5, 1, "", "ifftn"], [1089, 5, 1, "", "ifftshift"], [1090, 5, 1, "", "ihfft"], [1091, 5, 1, "", "ihfft2"], [1092, 5, 1, "", "ihfftn"], [1093, 5, 1, "", "irfft"], [1094, 5, 1, "", "irfft2"], [1095, 5, 1, "", "irfftn"], [1096, 5, 1, "", "rfft"], [1097, 5, 1, "", "rfft2"], [1098, 5, 1, "", "rfftfreq"], [1099, 5, 1, "", "rfftn"]], "torch.func": [[1118, 5, 1, "", "functional_call"], [1119, 5, 1, "", "functionalize"], [1120, 5, 1, "", "grad"], [1121, 5, 1, "", "grad_and_value"], [1122, 5, 1, "", "hessian"], [1123, 5, 1, "", "jacfwd"], [1124, 5, 1, "", "jacrev"], [1125, 5, 1, "", "jvp"], [1126, 5, 1, "", "linearize"], [1127, 5, 1, "", "replace_all_batch_norm_modules_"], [1128, 5, 1, "", "stack_module_state"], [1129, 5, 1, "", "vjp"], [1130, 5, 1, "", "vmap"]], "torch.futures": [[69, 1, 1, "", "Future"], [69, 5, 1, "", "collect_all"], [69, 5, 1, "", "wait_all"]], "torch.futures.Future": [[69, 3, 1, "", "add_done_callback"], [69, 3, 1, "", "done"], [69, 3, 1, "", "set_exception"], [69, 3, 1, "", "set_result"], [69, 3, 1, "", "then"], [69, 3, 1, "", "value"], [69, 3, 1, "", "wait"]], "torch.fx": [[70, 1, 1, "", "Graph"], [70, 1, 1, "", "GraphModule"], [70, 1, 1, "", "Interpreter"], [70, 1, 1, "", "Node"], [70, 1, 1, "", "Proxy"], [70, 1, 1, "", "Tracer"], [70, 1, 1, "", "Transformer"], [70, 0, 0, "-", "experimental"], [70, 0, 0, "-", "passes"], [70, 5, 1, "", "replace_pattern"], [70, 5, 1, "", "symbolic_trace"], [70, 5, 1, "", "wrap"]], "torch.fx.Graph": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "call_function"], [70, 3, 1, "", "call_method"], [70, 3, 1, "", "call_module"], [70, 3, 1, "", "create_node"], [70, 3, 1, "", "eliminate_dead_code"], [70, 3, 1, "", "erase_node"], [70, 3, 1, "", "get_attr"], [70, 3, 1, "", "graph_copy"], [70, 3, 1, "", "inserting_after"], [70, 3, 1, "", "inserting_before"], [70, 3, 1, "", "lint"], [70, 3, 1, "", "node_copy"], [70, 4, 1, "", "nodes"], [70, 3, 1, "", "on_generate_code"], [70, 3, 1, "", "output"], [70, 3, 1, "", "placeholder"], [70, 3, 1, "", "print_tabular"], [70, 3, 1, "", "process_inputs"], [70, 3, 1, "", "process_outputs"], [70, 3, 1, "", "python_code"], [70, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[70, 3, 1, "", "__init__"], [70, 3, 1, "", "add_submodule"], [70, 4, 1, "", "code"], [70, 3, 1, "", "delete_all_unused_submodules"], [70, 3, 1, "", "delete_submodule"], [70, 4, 1, "", "graph"], [70, 3, 1, "", "print_readable"], [70, 3, 1, "", "recompile"], [70, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[70, 3, 1, "", "boxed_run"], [70, 3, 1, "", "call_function"], [70, 3, 1, "", "call_method"], [70, 3, 1, "", "call_module"], [70, 3, 1, "", "fetch_args_kwargs_from_env"], [70, 3, 1, "", "fetch_attr"], [70, 3, 1, "", "get_attr"], [70, 3, 1, "", "map_nodes_to_values"], [70, 3, 1, "", "output"], [70, 3, 1, "", "placeholder"], [70, 3, 1, "", "run"], [70, 3, 1, "", "run_node"]], "torch.fx.Node": [[70, 4, 1, "", "all_input_nodes"], [70, 3, 1, "", "append"], [70, 4, 1, "", "args"], [70, 3, 1, "", "format_node"], [70, 3, 1, "", "is_impure"], [70, 4, 1, "", "kwargs"], [70, 4, 1, "", "next"], [70, 3, 1, "", "normalized_arguments"], [70, 3, 1, "", "prepend"], [70, 4, 1, "", "prev"], [70, 3, 1, "", "replace_all_uses_with"], [70, 3, 1, "", "replace_input_with"], [70, 4, 1, "", "stack_trace"], [70, 3, 1, "", "update_arg"], [70, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[70, 3, 1, "", "call_module"], [70, 3, 1, "", "create_arg"], [70, 3, 1, "", "create_args_for_root"], [70, 3, 1, "", "create_node"], [70, 3, 1, "", "create_proxy"], [70, 3, 1, "", "getattr"], [70, 3, 1, "", "is_leaf_module"], [70, 3, 1, "", "iter"], [70, 3, 1, "", "keys"], [70, 3, 1, "", "path_of_module"], [70, 3, 1, "", "proxy"], [70, 3, 1, "", "to_bool"], [70, 3, 1, "", "trace"]], "torch.fx.Transformer": [[70, 3, 1, "", "call_function"], [70, 3, 1, "", "call_module"], [70, 3, 1, "", "get_attr"], [70, 3, 1, "", "placeholder"], [70, 3, 1, "", "transform"]], "torch.fx.experimental": [[70, 0, 0, "-", "migrate_gradual_types"], [70, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[70, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[70, 0, 0, "-", "backends"], [70, 0, 0, "-", "dialect"], [70, 0, 0, "-", "infra"], [70, 0, 0, "-", "tests"], [70, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[70, 0, 0, "-", "common"]], "torch.hub": [[1856, 5, 1, "", "download_url_to_file"], [1856, 5, 1, "", "get_dir"], [1856, 5, 1, "", "help"], [1856, 5, 1, "", "list"], [1856, 5, 1, "", "load"], [1856, 5, 1, "", "load_state_dict_from_url"], [1856, 5, 1, "", "set_dir"]], "torch.jit": [[1187, 1, 1, "", "Attribute"], [1188, 1, 1, "", "ScriptFunction"], [1189, 1, 1, "", "ScriptModule"], [1190, 5, 1, "", "annotate"], [1191, 5, 1, "", "enable_onednn_fusion"], [1859, 5, 1, "", "export"], [1192, 5, 1, "", "fork"], [1193, 5, 1, "", "freeze"], [1194, 5, 1, "", "ignore"], [1861, 5, 1, "", "is_scripting"], [1861, 5, 1, "", "is_tracing"], [1195, 5, 1, "", "isinstance"], [1196, 5, 1, "", "load"], [1859, 0, 0, "-", "mobile"], [1197, 5, 1, "", "onednn_fusion_enabled"], [1198, 5, 1, "", "optimize_for_inference"], [1199, 5, 1, "", "save"], [1200, 5, 1, "", "script"], [1201, 5, 1, "", "script_if_tracing"], [1202, 5, 1, "", "set_fusion_strategy"], [1203, 1, 1, "", "strict_fusion"], [1860, 0, 0, "-", "supported_ops"], [1204, 5, 1, "", "trace"], [1205, 5, 1, "", "trace_module"], [1864, 0, 0, "-", "unsupported_tensor_ops"], [1206, 5, 1, "", "unused"], [1207, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1187, 3, 1, "", "count"], [1187, 3, 1, "", "index"], [1187, 2, 1, "", "type"], [1187, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1188, 3, 1, "", "get_debug_state"], [1188, 3, 1, "", "save"], [1188, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1189, 3, 1, "", "add_module"], [1189, 3, 1, "", "apply"], [1189, 3, 1, "", "bfloat16"], [1189, 3, 1, "", "buffers"], [1189, 3, 1, "", "children"], [1189, 4, 1, "", "code"], [1189, 4, 1, "", "code_with_constants"], [1189, 3, 1, "", "compile"], [1189, 3, 1, "", "cpu"], [1189, 3, 1, "", "cuda"], [1189, 3, 1, "", "double"], [1189, 3, 1, "", "eval"], [1189, 3, 1, "", "extra_repr"], [1189, 3, 1, "", "float"], [1189, 3, 1, "", "get_buffer"], [1189, 3, 1, "", "get_extra_state"], [1189, 3, 1, "", "get_parameter"], [1189, 3, 1, "", "get_submodule"], [1189, 4, 1, "", "graph"], [1189, 3, 1, "", "half"], [1189, 4, 1, "", "inlined_graph"], [1189, 3, 1, "", "ipu"], [1189, 3, 1, "", "load_state_dict"], [1189, 3, 1, "", "modules"], [1189, 3, 1, "", "named_buffers"], [1189, 3, 1, "", "named_children"], [1189, 3, 1, "", "named_modules"], [1189, 3, 1, "", "named_parameters"], [1189, 3, 1, "", "parameters"], [1189, 3, 1, "", "register_backward_hook"], [1189, 3, 1, "", "register_buffer"], [1189, 3, 1, "", "register_forward_hook"], [1189, 3, 1, "", "register_forward_pre_hook"], [1189, 3, 1, "", "register_full_backward_hook"], [1189, 3, 1, "", "register_full_backward_pre_hook"], [1189, 3, 1, "", "register_load_state_dict_post_hook"], [1189, 3, 1, "", "register_module"], [1189, 3, 1, "", "register_parameter"], [1189, 3, 1, "", "register_state_dict_pre_hook"], [1189, 3, 1, "", "requires_grad_"], [1189, 3, 1, "", "save"], [1189, 3, 1, "", "set_extra_state"], [1189, 3, 1, "", "share_memory"], [1189, 3, 1, "", "state_dict"], [1189, 3, 1, "", "to"], [1189, 3, 1, "", "to_empty"], [1189, 3, 1, "", "train"], [1189, 3, 1, "", "type"], [1189, 3, 1, "", "xpu"], [1189, 3, 1, "", "zero_grad"]], "torch.library": [[1866, 1, 1, "", "Library"]], "torch.library.Library": [[1866, 3, 1, "", "define"], [1866, 3, 1, "", "impl"]], "torch.linalg": [[1218, 5, 1, "", "cholesky"], [1219, 5, 1, "", "cholesky_ex"], [1220, 5, 1, "", "cond"], [1221, 5, 1, "", "cross"], [1222, 5, 1, "", "det"], [1223, 5, 1, "", "diagonal"], [1224, 5, 1, "", "eig"], [1225, 5, 1, "", "eigh"], [1226, 5, 1, "", "eigvals"], [1227, 5, 1, "", "eigvalsh"], [1228, 5, 1, "", "householder_product"], [1229, 5, 1, "", "inv"], [1230, 5, 1, "", "inv_ex"], [1231, 5, 1, "", "ldl_factor"], [1232, 5, 1, "", "ldl_factor_ex"], [1233, 5, 1, "", "ldl_solve"], [1234, 5, 1, "", "lstsq"], [1235, 5, 1, "", "lu"], [1236, 5, 1, "", "lu_factor"], [1237, 5, 1, "", "lu_factor_ex"], [1238, 5, 1, "", "lu_solve"], [1239, 5, 1, "", "matmul"], [1240, 5, 1, "", "matrix_exp"], [1241, 5, 1, "", "matrix_norm"], [1242, 5, 1, "", "matrix_power"], [1243, 5, 1, "", "matrix_rank"], [1244, 5, 1, "", "multi_dot"], [1245, 5, 1, "", "norm"], [1246, 5, 1, "", "pinv"], [1247, 5, 1, "", "qr"], [1248, 5, 1, "", "slogdet"], [1249, 5, 1, "", "solve"], [1250, 5, 1, "", "solve_ex"], [1251, 5, 1, "", "solve_triangular"], [1252, 5, 1, "", "svd"], [1253, 5, 1, "", "svdvals"], [1254, 5, 1, "", "tensorinv"], [1255, 5, 1, "", "tensorsolve"], [1256, 5, 1, "", "vander"], [1257, 5, 1, "", "vecdot"], [1258, 5, 1, "", "vector_norm"]], "torch.masked": [[1869, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1872, 1, 1, "", "Aggregation"], [1872, 1, 1, "", "Event"], [1872, 1, 1, "", "EventHandlerHandle"], [1872, 1, 1, "", "Stat"], [1872, 1, 1, "", "TensorboardEventHandler"], [1872, 1, 1, "", "data_value_t"], [1872, 5, 1, "", "log_event"], [1872, 5, 1, "", "register_event_handler"], [1872, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1872, 4, 1, "", "name"]], "torch.monitor.Event": [[1872, 3, 1, "", "__init__"], [1872, 4, 1, "", "data"], [1872, 4, 1, "", "name"], [1872, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1872, 3, 1, "", "__init__"], [1872, 3, 1, "", "add"], [1872, 4, 1, "", "count"], [1872, 3, 1, "", "get"], [1872, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1872, 3, 1, "", "__init__"]], "torch.mps": [[1297, 5, 1, "", "current_allocated_memory"], [1298, 5, 1, "", "driver_allocated_memory"], [1299, 5, 1, "", "empty_cache"], [1300, 5, 1, "", "get_rng_state"], [1301, 5, 1, "", "manual_seed"], [1305, 5, 1, "", "seed"], [1306, 5, 1, "", "set_per_process_memory_fraction"], [1307, 5, 1, "", "set_rng_state"], [1308, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1302, 5, 1, "", "profile"], [1303, 5, 1, "", "start"], [1304, 5, 1, "", "stop"]], "torch.multiprocessing": [[1874, 1, 1, "", "SpawnContext"], [1874, 5, 1, "", "get_all_sharing_strategies"], [1874, 5, 1, "", "get_sharing_strategy"], [1874, 5, 1, "", "set_sharing_strategy"], [1874, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1874, 3, 1, "", "join"]], "torch.nested": [[1877, 5, 1, "", "as_nested_tensor"], [1877, 5, 1, "", "nested_tensor"], [1877, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1326, 1, 1, "", "AdaptiveAvgPool1d"], [1327, 1, 1, "", "AdaptiveAvgPool2d"], [1328, 1, 1, "", "AdaptiveAvgPool3d"], [1329, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1330, 1, 1, "", "AdaptiveMaxPool1d"], [1331, 1, 1, "", "AdaptiveMaxPool2d"], [1332, 1, 1, "", "AdaptiveMaxPool3d"], [1333, 1, 1, "", "AlphaDropout"], [1334, 1, 1, "", "AvgPool1d"], [1335, 1, 1, "", "AvgPool2d"], [1336, 1, 1, "", "AvgPool3d"], [1337, 1, 1, "", "BCELoss"], [1338, 1, 1, "", "BCEWithLogitsLoss"], [1339, 1, 1, "", "BatchNorm1d"], [1340, 1, 1, "", "BatchNorm2d"], [1341, 1, 1, "", "BatchNorm3d"], [1342, 1, 1, "", "Bilinear"], [1343, 1, 1, "", "CELU"], [1344, 1, 1, "", "CTCLoss"], [1345, 1, 1, "", "ChannelShuffle"], [1346, 1, 1, "", "ConstantPad1d"], [1347, 1, 1, "", "ConstantPad2d"], [1348, 1, 1, "", "ConstantPad3d"], [1349, 1, 1, "", "Conv1d"], [1350, 1, 1, "", "Conv2d"], [1351, 1, 1, "", "Conv3d"], [1352, 1, 1, "", "ConvTranspose1d"], [1353, 1, 1, "", "ConvTranspose2d"], [1354, 1, 1, "", "ConvTranspose3d"], [1355, 1, 1, "", "CosineEmbeddingLoss"], [1356, 1, 1, "", "CosineSimilarity"], [1357, 1, 1, "", "CrossEntropyLoss"], [1358, 1, 1, "", "DataParallel"], [1359, 1, 1, "", "Dropout"], [1360, 1, 1, "", "Dropout1d"], [1361, 1, 1, "", "Dropout2d"], [1362, 1, 1, "", "Dropout3d"], [1363, 1, 1, "", "ELU"], [1364, 1, 1, "", "Embedding"], [1365, 1, 1, "", "EmbeddingBag"], [1366, 1, 1, "", "FeatureAlphaDropout"], [1367, 1, 1, "", "Flatten"], [1368, 1, 1, "", "Fold"], [1369, 1, 1, "", "FractionalMaxPool2d"], [1370, 1, 1, "", "FractionalMaxPool3d"], [1371, 1, 1, "", "GELU"], [1372, 1, 1, "", "GLU"], [1373, 1, 1, "", "GRU"], [1374, 1, 1, "", "GRUCell"], [1375, 1, 1, "", "GaussianNLLLoss"], [1376, 1, 1, "", "GroupNorm"], [1377, 1, 1, "", "Hardshrink"], [1378, 1, 1, "", "Hardsigmoid"], [1379, 1, 1, "", "Hardswish"], [1380, 1, 1, "", "Hardtanh"], [1381, 1, 1, "", "HingeEmbeddingLoss"], [1382, 1, 1, "", "HuberLoss"], [1383, 1, 1, "", "Identity"], [1384, 1, 1, "", "InstanceNorm1d"], [1385, 1, 1, "", "InstanceNorm2d"], [1386, 1, 1, "", "InstanceNorm3d"], [1387, 1, 1, "", "KLDivLoss"], [1388, 1, 1, "", "L1Loss"], [1389, 1, 1, "", "LPPool1d"], [1390, 1, 1, "", "LPPool2d"], [1391, 1, 1, "", "LSTM"], [1392, 1, 1, "", "LSTMCell"], [1393, 1, 1, "", "LayerNorm"], [1394, 1, 1, "", "LazyBatchNorm1d"], [1395, 1, 1, "", "LazyBatchNorm2d"], [1396, 1, 1, "", "LazyBatchNorm3d"], [1397, 1, 1, "", "LazyConv1d"], [1398, 1, 1, "", "LazyConv2d"], [1399, 1, 1, "", "LazyConv3d"], [1400, 1, 1, "", "LazyConvTranspose1d"], [1401, 1, 1, "", "LazyConvTranspose2d"], [1402, 1, 1, "", "LazyConvTranspose3d"], [1403, 1, 1, "", "LazyInstanceNorm1d"], [1404, 1, 1, "", "LazyInstanceNorm2d"], [1405, 1, 1, "", "LazyInstanceNorm3d"], [1406, 1, 1, "", "LazyLinear"], [1407, 1, 1, "", "LeakyReLU"], [1408, 1, 1, "", "Linear"], [1409, 1, 1, "", "LocalResponseNorm"], [1410, 1, 1, "", "LogSigmoid"], [1411, 1, 1, "", "LogSoftmax"], [1412, 1, 1, "", "MSELoss"], [1413, 1, 1, "", "MarginRankingLoss"], [1414, 1, 1, "", "MaxPool1d"], [1415, 1, 1, "", "MaxPool2d"], [1416, 1, 1, "", "MaxPool3d"], [1417, 1, 1, "", "MaxUnpool1d"], [1418, 1, 1, "", "MaxUnpool2d"], [1419, 1, 1, "", "MaxUnpool3d"], [1420, 1, 1, "", "Mish"], [1421, 1, 1, "", "Module"], [1422, 1, 1, "", "ModuleDict"], [1423, 1, 1, "", "ModuleList"], [1424, 1, 1, "", "MultiLabelMarginLoss"], [1425, 1, 1, "", "MultiLabelSoftMarginLoss"], [1426, 1, 1, "", "MultiMarginLoss"], [1427, 1, 1, "", "MultiheadAttention"], [1428, 1, 1, "", "NLLLoss"], [1429, 1, 1, "", "PReLU"], [1430, 1, 1, "", "PairwiseDistance"], [1431, 1, 1, "", "ParameterDict"], [1432, 1, 1, "", "ParameterList"], [1433, 1, 1, "", "PixelShuffle"], [1434, 1, 1, "", "PixelUnshuffle"], [1435, 1, 1, "", "PoissonNLLLoss"], [1436, 1, 1, "", "RNN"], [1437, 1, 1, "", "RNNBase"], [1438, 1, 1, "", "RNNCell"], [1439, 1, 1, "", "RReLU"], [1440, 1, 1, "", "ReLU"], [1441, 1, 1, "", "ReLU6"], [1442, 1, 1, "", "ReflectionPad1d"], [1443, 1, 1, "", "ReflectionPad2d"], [1444, 1, 1, "", "ReflectionPad3d"], [1445, 1, 1, "", "ReplicationPad1d"], [1446, 1, 1, "", "ReplicationPad2d"], [1447, 1, 1, "", "ReplicationPad3d"], [1448, 1, 1, "", "SELU"], [1449, 1, 1, "", "Sequential"], [1450, 1, 1, "", "SiLU"], [1451, 1, 1, "", "Sigmoid"], [1452, 1, 1, "", "SmoothL1Loss"], [1453, 1, 1, "", "SoftMarginLoss"], [1454, 1, 1, "", "Softmax"], [1455, 1, 1, "", "Softmax2d"], [1456, 1, 1, "", "Softmin"], [1457, 1, 1, "", "Softplus"], [1458, 1, 1, "", "Softshrink"], [1459, 1, 1, "", "Softsign"], [1460, 1, 1, "", "SyncBatchNorm"], [1461, 1, 1, "", "Tanh"], [1462, 1, 1, "", "Tanhshrink"], [1463, 1, 1, "", "Threshold"], [1464, 1, 1, "", "Transformer"], [1465, 1, 1, "", "TransformerDecoder"], [1466, 1, 1, "", "TransformerDecoderLayer"], [1467, 1, 1, "", "TransformerEncoder"], [1468, 1, 1, "", "TransformerEncoderLayer"], [1469, 1, 1, "", "TripletMarginLoss"], [1470, 1, 1, "", "TripletMarginWithDistanceLoss"], [1471, 1, 1, "", "Unflatten"], [1472, 1, 1, "", "Unfold"], [1473, 1, 1, "", "Upsample"], [1474, 1, 1, "", "UpsamplingBilinear2d"], [1475, 1, 1, "", "UpsamplingNearest2d"], [1476, 1, 1, "", "ZeroPad1d"], [1477, 1, 1, "", "ZeroPad2d"], [1478, 1, 1, "", "ZeroPad3d"], [1878, 0, 0, "-", "backends"], [1910, 0, 0, "-", "intrinsic"], [1878, 0, 0, "-", "modules"], [1878, 0, 0, "-", "parallel"], [1910, 0, 0, "-", "qat"], [1910, 0, 0, "-", "quantizable"], [1910, 0, 0, "-", "quantized"], [1878, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1329, 3, 1, "", "log_prob"], [1329, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1364, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1365, 3, 1, "", "forward"], [1365, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1394, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1395, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1396, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1397, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1398, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1399, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1400, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1421, 3, 1, "", "add_module"], [1421, 3, 1, "", "apply"], [1421, 3, 1, "", "bfloat16"], [1421, 3, 1, "", "buffers"], [1421, 3, 1, "", "children"], [1421, 3, 1, "", "compile"], [1421, 3, 1, "", "cpu"], [1421, 3, 1, "", "cuda"], [1421, 3, 1, "", "double"], [1421, 3, 1, "", "eval"], [1421, 3, 1, "", "extra_repr"], [1421, 3, 1, "", "float"], [1421, 3, 1, "", "forward"], [1421, 3, 1, "", "get_buffer"], [1421, 3, 1, "", "get_extra_state"], [1421, 3, 1, "", "get_parameter"], [1421, 3, 1, "", "get_submodule"], [1421, 3, 1, "", "half"], [1421, 3, 1, "", "ipu"], [1421, 3, 1, "", "load_state_dict"], [1421, 3, 1, "", "modules"], [1421, 3, 1, "", "named_buffers"], [1421, 3, 1, "", "named_children"], [1421, 3, 1, "", "named_modules"], [1421, 3, 1, "", "named_parameters"], [1421, 3, 1, "", "parameters"], [1421, 3, 1, "", "register_backward_hook"], [1421, 3, 1, "", "register_buffer"], [1421, 3, 1, "", "register_forward_hook"], [1421, 3, 1, "", "register_forward_pre_hook"], [1421, 3, 1, "", "register_full_backward_hook"], [1421, 3, 1, "", "register_full_backward_pre_hook"], [1421, 3, 1, "", "register_load_state_dict_post_hook"], [1421, 3, 1, "", "register_module"], [1421, 3, 1, "", "register_parameter"], [1421, 3, 1, "", "register_state_dict_pre_hook"], [1421, 3, 1, "", "requires_grad_"], [1421, 3, 1, "", "set_extra_state"], [1421, 3, 1, "", "share_memory"], [1421, 3, 1, "", "state_dict"], [1421, 3, 1, "", "to"], [1421, 3, 1, "", "to_empty"], [1421, 3, 1, "", "train"], [1421, 3, 1, "", "type"], [1421, 3, 1, "", "xpu"], [1421, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1422, 3, 1, "", "clear"], [1422, 3, 1, "", "items"], [1422, 3, 1, "", "keys"], [1422, 3, 1, "", "pop"], [1422, 3, 1, "", "update"], [1422, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1423, 3, 1, "", "append"], [1423, 3, 1, "", "extend"], [1423, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1427, 3, 1, "", "forward"], [1427, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1431, 3, 1, "", "clear"], [1431, 3, 1, "", "copy"], [1431, 3, 1, "", "fromkeys"], [1431, 3, 1, "", "get"], [1431, 3, 1, "", "items"], [1431, 3, 1, "", "keys"], [1431, 3, 1, "", "pop"], [1431, 3, 1, "", "popitem"], [1431, 3, 1, "", "setdefault"], [1431, 3, 1, "", "update"], [1431, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1432, 3, 1, "", "append"], [1432, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1437, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1449, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1460, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1464, 3, 1, "", "forward"], [1464, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1465, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1466, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1467, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1468, 3, 1, "", "forward"]], "torch.nn.functional": [[1479, 5, 1, "", "adaptive_avg_pool1d"], [1480, 5, 1, "", "adaptive_avg_pool2d"], [1481, 5, 1, "", "adaptive_avg_pool3d"], [1482, 5, 1, "", "adaptive_max_pool1d"], [1483, 5, 1, "", "adaptive_max_pool2d"], [1484, 5, 1, "", "adaptive_max_pool3d"], [1485, 5, 1, "", "affine_grid"], [1486, 5, 1, "", "alpha_dropout"], [1487, 5, 1, "", "avg_pool1d"], [1488, 5, 1, "", "avg_pool2d"], [1489, 5, 1, "", "avg_pool3d"], [1490, 5, 1, "", "batch_norm"], [1491, 5, 1, "", "bilinear"], [1492, 5, 1, "", "binary_cross_entropy"], [1493, 5, 1, "", "binary_cross_entropy_with_logits"], [1494, 5, 1, "", "celu"], [1495, 5, 1, "", "conv1d"], [1496, 5, 1, "", "conv2d"], [1497, 5, 1, "", "conv3d"], [1498, 5, 1, "", "conv_transpose1d"], [1499, 5, 1, "", "conv_transpose2d"], [1500, 5, 1, "", "conv_transpose3d"], [1501, 5, 1, "", "cosine_embedding_loss"], [1502, 5, 1, "", "cosine_similarity"], [1503, 5, 1, "", "cross_entropy"], [1504, 5, 1, "", "ctc_loss"], [1505, 5, 1, "", "dropout"], [1506, 5, 1, "", "dropout1d"], [1507, 5, 1, "", "dropout2d"], [1508, 5, 1, "", "dropout3d"], [1509, 5, 1, "", "elu"], [1510, 5, 1, "", "elu_"], [1511, 5, 1, "", "embedding"], [1512, 5, 1, "", "embedding_bag"], [1513, 5, 1, "", "feature_alpha_dropout"], [1514, 5, 1, "", "fold"], [1515, 5, 1, "", "fractional_max_pool2d"], [1516, 5, 1, "", "fractional_max_pool3d"], [1517, 5, 1, "", "gaussian_nll_loss"], [1518, 5, 1, "", "gelu"], [1519, 5, 1, "", "glu"], [1520, 5, 1, "", "grid_sample"], [1521, 5, 1, "", "group_norm"], [1522, 5, 1, "", "gumbel_softmax"], [1523, 5, 1, "", "hardshrink"], [1524, 5, 1, "", "hardsigmoid"], [1525, 5, 1, "", "hardswish"], [1526, 5, 1, "", "hardtanh"], [1527, 5, 1, "", "hardtanh_"], [1528, 5, 1, "", "hinge_embedding_loss"], [1529, 5, 1, "", "huber_loss"], [1530, 5, 1, "", "instance_norm"], [1531, 5, 1, "", "interpolate"], [1532, 5, 1, "", "kl_div"], [1533, 5, 1, "", "l1_loss"], [1534, 5, 1, "", "layer_norm"], [1535, 5, 1, "", "leaky_relu"], [1536, 5, 1, "", "leaky_relu_"], [1537, 5, 1, "", "linear"], [1538, 5, 1, "", "local_response_norm"], [1539, 5, 1, "", "log_softmax"], [1540, 5, 1, "", "logsigmoid"], [1541, 5, 1, "", "lp_pool1d"], [1542, 5, 1, "", "lp_pool2d"], [1543, 5, 1, "", "margin_ranking_loss"], [1544, 5, 1, "", "max_pool1d"], [1545, 5, 1, "", "max_pool2d"], [1546, 5, 1, "", "max_pool3d"], [1547, 5, 1, "", "max_unpool1d"], [1548, 5, 1, "", "max_unpool2d"], [1549, 5, 1, "", "max_unpool3d"], [1550, 5, 1, "", "mish"], [1551, 5, 1, "", "mse_loss"], [1552, 5, 1, "", "multi_margin_loss"], [1553, 5, 1, "", "multilabel_margin_loss"], [1554, 5, 1, "", "multilabel_soft_margin_loss"], [1555, 5, 1, "", "nll_loss"], [1556, 5, 1, "", "normalize"], [1557, 5, 1, "", "one_hot"], [1558, 5, 1, "", "pad"], [1559, 5, 1, "", "pairwise_distance"], [1560, 5, 1, "", "pdist"], [1561, 5, 1, "", "pixel_shuffle"], [1562, 5, 1, "", "pixel_unshuffle"], [1563, 5, 1, "", "poisson_nll_loss"], [1564, 5, 1, "", "prelu"], [1565, 5, 1, "", "relu"], [1566, 5, 1, "", "relu6"], [1567, 5, 1, "", "relu_"], [1568, 5, 1, "", "rrelu"], [1569, 5, 1, "", "rrelu_"], [1570, 5, 1, "", "scaled_dot_product_attention"], [1571, 5, 1, "", "selu"], [1572, 5, 1, "", "sigmoid"], [1573, 5, 1, "", "silu"], [1574, 5, 1, "", "smooth_l1_loss"], [1575, 5, 1, "", "soft_margin_loss"], [1576, 5, 1, "", "softmax"], [1577, 5, 1, "", "softmin"], [1578, 5, 1, "", "softplus"], [1579, 5, 1, "", "softshrink"], [1580, 5, 1, "", "softsign"], [1581, 5, 1, "", "tanh"], [1582, 5, 1, "", "tanhshrink"], [1583, 5, 1, "", "threshold"], [1584, 5, 1, "", "threshold_"], [1586, 5, 1, "", "triplet_margin_loss"], [1587, 5, 1, "", "triplet_margin_with_distance_loss"], [1588, 5, 1, "", "unfold"], [1589, 5, 1, "", "upsample"], [1590, 5, 1, "", "upsample_bilinear"], [1591, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1880, 5, 1, "", "calculate_gain"], [1880, 5, 1, "", "constant_"], [1880, 5, 1, "", "dirac_"], [1880, 5, 1, "", "eye_"], [1880, 5, 1, "", "kaiming_normal_"], [1880, 5, 1, "", "kaiming_uniform_"], [1880, 5, 1, "", "normal_"], [1880, 5, 1, "", "ones_"], [1880, 5, 1, "", "orthogonal_"], [1880, 5, 1, "", "sparse_"], [1880, 5, 1, "", "trunc_normal_"], [1880, 5, 1, "", "uniform_"], [1880, 5, 1, "", "xavier_normal_"], [1880, 5, 1, "", "xavier_uniform_"], [1880, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1910, 0, 0, "-", "modules"], [1910, 0, 0, "-", "qat"], [1910, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1910, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1910, 0, 0, "-", "dynamic"], [1910, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1910, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1592, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1592, 3, 1, "", "has_uninitialized_params"], [1592, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1593, 5, 1, "", "register_module_backward_hook"], [1594, 5, 1, "", "register_module_buffer_registration_hook"], [1595, 5, 1, "", "register_module_forward_hook"], [1596, 5, 1, "", "register_module_forward_pre_hook"], [1597, 5, 1, "", "register_module_full_backward_hook"], [1598, 5, 1, "", "register_module_full_backward_pre_hook"], [1599, 5, 1, "", "register_module_module_registration_hook"], [1600, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1601, 1, 1, "", "DistributedDataParallel"], [1585, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1601, 3, 1, "", "join"], [1601, 3, 1, "", "join_hook"], [1601, 3, 1, "", "no_sync"], [1601, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1602, 1, 1, "", "Parameter"], [1603, 1, 1, "", "UninitializedBuffer"], [1604, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1604, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1910, 0, 0, "-", "dynamic"], [1910, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1910, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1910, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1910, 0, 0, "-", "dynamic"], [1910, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1910, 0, 0, "-", "modules"]], "torch.nn.utils": [[1605, 5, 1, "", "clip_grad_norm_"], [1606, 5, 1, "", "clip_grad_value_"], [1607, 5, 1, "", "parameters_to_vector"], [1632, 5, 1, "", "remove_spectral_norm"], [1633, 5, 1, "", "remove_weight_norm"], [1641, 5, 1, "", "skip_init"], [1642, 5, 1, "", "spectral_norm"], [1878, 0, 0, "-", "stateless"], [1644, 5, 1, "", "vector_to_parameters"], [1645, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1608, 5, 1, "", "orthogonal"], [1609, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1610, 1, 1, "", "ParametrizationList"], [1611, 5, 1, "", "cached"], [1612, 5, 1, "", "is_parametrized"], [1613, 5, 1, "", "register_parametrization"], [1614, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1610, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1615, 1, 1, "", "BasePruningMethod"], [1616, 1, 1, "", "CustomFromMask"], [1617, 1, 1, "", "Identity"], [1618, 1, 1, "", "L1Unstructured"], [1619, 1, 1, "", "LnStructured"], [1620, 1, 1, "", "PruningContainer"], [1621, 1, 1, "", "RandomStructured"], [1622, 1, 1, "", "RandomUnstructured"], [1623, 5, 1, "", "custom_from_mask"], [1624, 5, 1, "", "global_unstructured"], [1625, 5, 1, "", "identity"], [1626, 5, 1, "", "is_pruned"], [1627, 5, 1, "", "l1_unstructured"], [1628, 5, 1, "", "ln_structured"], [1629, 5, 1, "", "random_structured"], [1630, 5, 1, "", "random_unstructured"], [1631, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1615, 3, 1, "", "apply"], [1615, 3, 1, "", "apply_mask"], [1615, 3, 1, "", "compute_mask"], [1615, 3, 1, "", "prune"], [1615, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1616, 3, 1, "", "apply"], [1616, 3, 1, "", "apply_mask"], [1616, 3, 1, "", "prune"], [1616, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1617, 3, 1, "", "apply"], [1617, 3, 1, "", "apply_mask"], [1617, 3, 1, "", "prune"], [1617, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1618, 3, 1, "", "apply"], [1618, 3, 1, "", "apply_mask"], [1618, 3, 1, "", "prune"], [1618, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1619, 3, 1, "", "apply"], [1619, 3, 1, "", "apply_mask"], [1619, 3, 1, "", "compute_mask"], [1619, 3, 1, "", "prune"], [1619, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1620, 3, 1, "", "add_pruning_method"], [1620, 3, 1, "", "apply"], [1620, 3, 1, "", "apply_mask"], [1620, 3, 1, "", "compute_mask"], [1620, 3, 1, "", "prune"], [1620, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1621, 3, 1, "", "apply"], [1621, 3, 1, "", "apply_mask"], [1621, 3, 1, "", "compute_mask"], [1621, 3, 1, "", "prune"], [1621, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1622, 3, 1, "", "apply"], [1622, 3, 1, "", "apply_mask"], [1622, 3, 1, "", "prune"], [1622, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1634, 1, 1, "", "PackedSequence"], [1635, 5, 1, "", "pack_padded_sequence"], [1636, 5, 1, "", "pack_sequence"], [1637, 5, 1, "", "pad_packed_sequence"], [1638, 5, 1, "", "pad_sequence"], [1639, 5, 1, "", "unpack_sequence"], [1640, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1634, 2, 1, "", "batch_sizes"], [1634, 3, 1, "", "count"], [1634, 2, 1, "", "data"], [1634, 3, 1, "", "index"], [1634, 4, 1, "", "is_cuda"], [1634, 3, 1, "", "is_pinned"], [1634, 2, 1, "", "sorted_indices"], [1634, 3, 1, "", "to"], [1634, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1643, 5, 1, "", "functional_call"]], "torch.onnx": [[1654, 1, 1, "", "ExportOptions"], [1655, 1, 1, "", "ExportOutput"], [1656, 1, 1, "", "ExportOutputSerializer"], [1657, 1, 1, "", "JitScalarType"], [1900, 5, 1, "", "disable_log"], [1900, 5, 1, "", "dynamo_export"], [1900, 5, 1, "", "enable_log"], [1900, 5, 1, "", "export"], [1900, 5, 1, "", "export_to_pretty_string"], [1900, 5, 1, "", "is_in_onnx_export"], [1900, 5, 1, "", "register_custom_op_symbolic"], [1900, 5, 1, "", "select_model_mode_for_export"], [1900, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1655, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1655, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1655, 4, 1, "", "diagnostic_context"], [1655, 4, 1, "", "model_proto"], [1655, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1656, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1657, 3, 1, "", "dtype"], [1657, 3, 1, "", "from_dtype"], [1657, 3, 1, "", "from_value"], [1657, 3, 1, "", "onnx_compatible"], [1657, 3, 1, "", "onnx_type"], [1657, 3, 1, "", "scalar_name"], [1657, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1901, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1901, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1901, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1658, 1, 1, "", "GraphInfo"], [1659, 1, 1, "", "VerificationOptions"], [1900, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1658, 3, 1, "", "all_mismatch_leaf_graph_info"], [1658, 3, 1, "", "clear"], [1658, 3, 1, "", "essential_node_count"], [1658, 3, 1, "", "essential_node_kinds"], [1658, 3, 1, "", "export_repro"], [1658, 3, 1, "", "find_mismatch"], [1658, 3, 1, "", "find_partition"], [1658, 3, 1, "", "has_mismatch"], [1658, 3, 1, "", "pretty_print_mismatch"], [1658, 3, 1, "", "pretty_print_tree"], [1658, 3, 1, "", "verify_export"]], "torch.optim": [[1660, 1, 1, "", "ASGD"], [1661, 1, 1, "", "Adadelta"], [1662, 1, 1, "", "Adagrad"], [1663, 1, 1, "", "Adam"], [1664, 1, 1, "", "AdamW"], [1665, 1, 1, "", "Adamax"], [1666, 1, 1, "", "LBFGS"], [1667, 1, 1, "", "NAdam"], [1903, 1, 1, "", "Optimizer"], [1673, 1, 1, "", "RAdam"], [1674, 1, 1, "", "RMSprop"], [1675, 1, 1, "", "Rprop"], [1676, 1, 1, "", "SGD"], [1677, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1660, 3, 1, "", "add_param_group"], [1660, 3, 1, "", "load_state_dict"], [1660, 3, 1, "", "register_step_post_hook"], [1660, 3, 1, "", "register_step_pre_hook"], [1660, 3, 1, "", "state_dict"], [1660, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1661, 3, 1, "", "add_param_group"], [1661, 3, 1, "", "load_state_dict"], [1661, 3, 1, "", "register_step_post_hook"], [1661, 3, 1, "", "register_step_pre_hook"], [1661, 3, 1, "", "state_dict"], [1661, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1662, 3, 1, "", "add_param_group"], [1662, 3, 1, "", "load_state_dict"], [1662, 3, 1, "", "register_step_post_hook"], [1662, 3, 1, "", "register_step_pre_hook"], [1662, 3, 1, "", "state_dict"], [1662, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1663, 3, 1, "", "add_param_group"], [1663, 3, 1, "", "load_state_dict"], [1663, 3, 1, "", "register_step_post_hook"], [1663, 3, 1, "", "register_step_pre_hook"], [1663, 3, 1, "", "state_dict"], [1663, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1664, 3, 1, "", "add_param_group"], [1664, 3, 1, "", "load_state_dict"], [1664, 3, 1, "", "register_step_post_hook"], [1664, 3, 1, "", "register_step_pre_hook"], [1664, 3, 1, "", "state_dict"], [1664, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1665, 3, 1, "", "add_param_group"], [1665, 3, 1, "", "load_state_dict"], [1665, 3, 1, "", "register_step_post_hook"], [1665, 3, 1, "", "register_step_pre_hook"], [1665, 3, 1, "", "state_dict"], [1665, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1666, 3, 1, "", "add_param_group"], [1666, 3, 1, "", "load_state_dict"], [1666, 3, 1, "", "register_step_post_hook"], [1666, 3, 1, "", "register_step_pre_hook"], [1666, 3, 1, "", "state_dict"], [1666, 3, 1, "", "step"], [1666, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1667, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1667, 3, 1, "", "register_step_post_hook"], [1667, 3, 1, "", "register_step_pre_hook"], [1667, 3, 1, "", "state_dict"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1668, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "state_dict"], [1671, 3, 1, "", "step"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1673, 3, 1, "", "add_param_group"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "register_step_post_hook"], [1673, 3, 1, "", "register_step_pre_hook"], [1673, 3, 1, "", "state_dict"], [1673, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1674, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "register_step_post_hook"], [1674, 3, 1, "", "register_step_pre_hook"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1675, 3, 1, "", "add_param_group"], [1675, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "register_step_post_hook"], [1675, 3, 1, "", "register_step_pre_hook"], [1675, 3, 1, "", "state_dict"], [1675, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1676, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "register_step_post_hook"], [1676, 3, 1, "", "register_step_pre_hook"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1677, 3, 1, "", "add_param_group"], [1677, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "register_step_post_hook"], [1677, 3, 1, "", "register_step_pre_hook"], [1677, 3, 1, "", "state_dict"], [1677, 3, 1, "", "step"], [1677, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1678, 1, 1, "", "ChainedScheduler"], [1679, 1, 1, "", "ConstantLR"], [1680, 1, 1, "", "CosineAnnealingLR"], [1681, 1, 1, "", "CosineAnnealingWarmRestarts"], [1682, 1, 1, "", "CyclicLR"], [1683, 1, 1, "", "ExponentialLR"], [1684, 1, 1, "", "LambdaLR"], [1685, 1, 1, "", "LinearLR"], [1686, 1, 1, "", "MultiStepLR"], [1687, 1, 1, "", "MultiplicativeLR"], [1688, 1, 1, "", "OneCycleLR"], [1689, 1, 1, "", "PolynomialLR"], [1690, 1, 1, "", "ReduceLROnPlateau"], [1691, 1, 1, "", "SequentialLR"], [1692, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1678, 3, 1, "", "get_last_lr"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "print_lr"], [1678, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1679, 3, 1, "", "get_last_lr"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "print_lr"], [1679, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1680, 3, 1, "", "get_last_lr"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "print_lr"], [1680, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1681, 3, 1, "", "get_last_lr"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "print_lr"], [1681, 3, 1, "", "state_dict"], [1681, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1682, 3, 1, "", "get_last_lr"], [1682, 3, 1, "", "get_lr"], [1682, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1683, 3, 1, "", "get_last_lr"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "print_lr"], [1683, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1684, 3, 1, "", "get_last_lr"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "print_lr"], [1684, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "print_lr"], [1685, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "print_lr"], [1689, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "print_lr"], [1691, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.overrides": [[1927, 5, 1, "", "get_ignored_functions"], [1927, 5, 1, "", "get_overridable_functions"], [1927, 5, 1, "", "get_testing_overrides"], [1927, 5, 1, "", "handle_torch_function"], [1927, 5, 1, "", "has_torch_function"], [1927, 5, 1, "", "is_tensor_like"], [1927, 5, 1, "", "is_tensor_method_or_property"], [1927, 5, 1, "", "resolve_name"], [1927, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1904, 1, 1, "", "Directory"], [1904, 1, 1, "", "EmptyMatchError"], [1904, 1, 1, "", "PackageExporter"], [1904, 1, 1, "", "PackageImporter"], [1904, 1, 1, "", "PackagingError"], [1904, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1904, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1904, 3, 1, "", "__init__"], [1904, 3, 1, "", "add_dependency"], [1904, 3, 1, "", "all_paths"], [1904, 3, 1, "", "close"], [1904, 3, 1, "", "denied_modules"], [1904, 3, 1, "", "deny"], [1904, 3, 1, "", "dependency_graph_string"], [1904, 3, 1, "", "extern"], [1904, 3, 1, "", "externed_modules"], [1904, 3, 1, "", "get_rdeps"], [1904, 3, 1, "", "get_unique_id"], [1904, 3, 1, "", "intern"], [1904, 3, 1, "", "interned_modules"], [1904, 3, 1, "", "mock"], [1904, 3, 1, "", "mocked_modules"], [1904, 3, 1, "", "register_extern_hook"], [1904, 3, 1, "", "register_intern_hook"], [1904, 3, 1, "", "register_mock_hook"], [1904, 3, 1, "", "save_binary"], [1904, 3, 1, "", "save_module"], [1904, 3, 1, "", "save_pickle"], [1904, 3, 1, "", "save_source_file"], [1904, 3, 1, "", "save_source_string"], [1904, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1904, 3, 1, "", "__init__"], [1904, 3, 1, "", "file_structure"], [1904, 3, 1, "", "id"], [1904, 3, 1, "", "import_module"], [1904, 3, 1, "", "load_binary"], [1904, 3, 1, "", "load_pickle"], [1904, 3, 1, "", "load_text"], [1904, 3, 1, "", "python_version"]], "torch.profiler": [[1906, 1, 1, "", "ProfilerAction"], [1906, 1, 1, "", "ProfilerActivity"], [1906, 1, 1, "", "_KinetoProfile"], [1906, 1, 1, "", "profile"], [1906, 5, 1, "", "schedule"], [1906, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1906, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1906, 3, 1, "", "add_metadata"], [1906, 3, 1, "", "add_metadata_json"], [1906, 3, 1, "", "events"], [1906, 3, 1, "", "export_chrome_trace"], [1906, 3, 1, "", "export_memory_timeline"], [1906, 3, 1, "", "export_stacks"], [1906, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1906, 5, 1, "", "is_available"], [1906, 5, 1, "", "mark"], [1906, 5, 1, "", "range_pop"], [1906, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1906, 3, 1, "", "step"]], "torch.quantization": [[1910, 0, 0, "-", "fx"]], "torch.quasirandom": [[1713, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1713, 3, 1, "", "draw"], [1713, 3, 1, "", "draw_base2"], [1713, 3, 1, "", "fast_forward"], [1713, 3, 1, "", "reset"]], "torch.random": [[1911, 5, 1, "", "fork_rng"], [1911, 5, 1, "", "get_rng_state"], [1911, 5, 1, "", "initial_seed"], [1911, 5, 1, "", "manual_seed"], [1911, 5, 1, "", "seed"], [1911, 5, 1, "", "set_rng_state"]], "torch.signal": [[1915, 0, 0, "-", "windows"]], "torch.signal.windows": [[1761, 5, 1, "", "bartlett"], [1762, 5, 1, "", "blackman"], [1763, 5, 1, "", "cosine"], [1764, 5, 1, "", "exponential"], [1765, 5, 1, "", "gaussian"], [1766, 5, 1, "", "general_cosine"], [1767, 5, 1, "", "general_hamming"], [1768, 5, 1, "", "hamming"], [1769, 5, 1, "", "hann"], [1770, 5, 1, "", "kaiser"], [1771, 5, 1, "", "nuttall"]], "torch.sparse": [[1781, 5, 1, "", "addmm"], [1782, 1, 1, "", "check_sparse_tensor_invariants"], [1783, 5, 1, "", "log_softmax"], [1784, 5, 1, "", "mm"], [1785, 5, 1, "", "sampled_addmm"], [1786, 5, 1, "", "softmax"], [1787, 5, 1, "", "spdiags"], [1788, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1782, 3, 1, "", "disable"], [1782, 3, 1, "", "enable"], [1782, 3, 1, "", "is_enabled"]], "torch.special": [[1917, 5, 1, "", "airy_ai"], [1917, 5, 1, "", "bessel_j0"], [1917, 5, 1, "", "bessel_j1"], [1917, 5, 1, "", "digamma"], [1917, 5, 1, "", "entr"], [1917, 5, 1, "", "erf"], [1917, 5, 1, "", "erfc"], [1917, 5, 1, "", "erfcx"], [1917, 5, 1, "", "erfinv"], [1917, 5, 1, "", "exp2"], [1917, 5, 1, "", "expit"], [1917, 5, 1, "", "expm1"], [1917, 5, 1, "", "gammainc"], [1917, 5, 1, "", "gammaincc"], [1917, 5, 1, "", "gammaln"], [1917, 5, 1, "", "i0"], [1917, 5, 1, "", "i0e"], [1917, 5, 1, "", "i1"], [1917, 5, 1, "", "i1e"], [1917, 5, 1, "", "log1p"], [1917, 5, 1, "", "log_ndtr"], [1917, 5, 1, "", "log_softmax"], [1917, 5, 1, "", "logit"], [1917, 5, 1, "", "logsumexp"], [1917, 5, 1, "", "multigammaln"], [1917, 5, 1, "", "ndtr"], [1917, 5, 1, "", "ndtri"], [1917, 5, 1, "", "polygamma"], [1917, 5, 1, "", "psi"], [1917, 5, 1, "", "round"], [1917, 5, 1, "", "scaled_modified_bessel_k0"], [1917, 5, 1, "", "scaled_modified_bessel_k1"], [1917, 5, 1, "", "sinc"], [1917, 5, 1, "", "softmax"], [1917, 5, 1, "", "spherical_bessel_j0"], [1917, 5, 1, "", "xlog1py"], [1917, 5, 1, "", "xlogy"], [1917, 5, 1, "", "zeta"]], "torch.testing": [[1923, 5, 1, "", "assert_allclose"], [1923, 5, 1, "", "assert_close"], [1923, 5, 1, "", "make_tensor"]], "torch.torch": [[1924, 2, 1, "", "default_generator"], [1928, 1, 1, "", "finfo"], [1928, 1, 1, "", "iinfo"]], "torch.utils": [[1924, 0, 0, "-", "backcompat"], [4, 0, 0, "-", "benchmark"], [5, 0, 0, "-", "bottleneck"], [37, 0, 0, "-", "data"], [1924, 0, 0, "-", "hipify"], [1865, 0, 0, "-", "jit"], [1924, 0, 0, "-", "model_dump"], [1871, 0, 0, "-", "model_zoo"], [1921, 0, 0, "-", "tensorboard"]], "torch.utils.benchmark": [[4, 1, 1, "", "CallgrindStats"], [4, 1, 1, "", "FunctionCounts"], [4, 1, 1, "", "Measurement"], [4, 1, 1, "", "Timer"], [4, 0, 0, "-", "examples"], [4, 0, 0, "-", "op_fuzzers"], [4, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[4, 3, 1, "", "as_standardized"], [4, 3, 1, "", "counts"], [4, 3, 1, "", "delta"], [4, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[4, 3, 1, "", "denoise"], [4, 3, 1, "", "filter"], [4, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[4, 3, 1, "", "merge"], [4, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[4, 3, 1, "", "blocked_autorange"], [4, 3, 1, "", "collect_callgrind"], [4, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[4, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[6, 5, 1, "", "checkpoint"], [6, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[31, 5, 1, "", "BuildExtension"], [31, 5, 1, "", "CUDAExtension"], [31, 5, 1, "", "CppExtension"], [31, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [31, 5, 1, "", "include_paths"], [31, 5, 1, "", "is_ninja_available"], [31, 5, 1, "", "load"], [31, 5, 1, "", "load_inline"], [31, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[37, 1, 1, "", "BatchSampler"], [37, 1, 1, "", "ChainDataset"], [37, 1, 1, "", "ConcatDataset"], [37, 1, 1, "", "DataLoader"], [37, 1, 1, "", "Dataset"], [37, 1, 1, "", "IterableDataset"], [37, 1, 1, "", "RandomSampler"], [37, 1, 1, "", "Sampler"], [37, 1, 1, "", "SequentialSampler"], [37, 1, 1, "", "StackDataset"], [37, 1, 1, "", "Subset"], [37, 1, 1, "", "SubsetRandomSampler"], [37, 1, 1, "", "TensorDataset"], [37, 1, 1, "", "WeightedRandomSampler"], [37, 0, 0, "-", "datapipes"], [37, 5, 1, "", "default_collate"], [37, 5, 1, "", "default_convert"], [37, 5, 1, "", "get_worker_info"], [37, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[37, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[37, 0, 0, "-", "dataframe"], [37, 0, 0, "-", "iter"], [37, 0, 0, "-", "map"], [37, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[37, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[47, 5, 1, "", "from_dlpack"], [47, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1870, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1871, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1921, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1921, 3, 1, "", "__init__"], [1921, 3, 1, "", "add_audio"], [1921, 3, 1, "", "add_custom_scalars"], [1921, 3, 1, "", "add_embedding"], [1921, 3, 1, "", "add_figure"], [1921, 3, 1, "", "add_graph"], [1921, 3, 1, "", "add_histogram"], [1921, 3, 1, "", "add_hparams"], [1921, 3, 1, "", "add_image"], [1921, 3, 1, "", "add_images"], [1921, 3, 1, "", "add_mesh"], [1921, 3, 1, "", "add_pr_curve"], [1921, 3, 1, "", "add_scalar"], [1921, 3, 1, "", "add_scalars"], [1921, 3, 1, "", "add_text"], [1921, 3, 1, "", "add_video"], [1921, 3, 1, "", "close"], [1921, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"torch": [0, 1, 2, 3, 4, 5, 6, 11, 18, 19, 22, 26, 30, 31, 33, 37, 39, 40, 42, 43, 45, 46, 47, 58, 61, 63, 64, 66, 67, 68, 69, 70, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 967, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1668, 1669, 1670, 1671, 1672, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1878, 1879, 1880, 1885, 1887, 1888, 1891, 1896, 1898, 1900, 1901, 1903, 1904, 1906, 1910, 1911, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928], "_dynamo": [0, 18, 26], "automat": [1, 2, 37, 1859, 1881, 1888], "mix": [1, 1859, 1881], "precis": [1, 1881, 1885, 1896], "packag": [1, 2, 32, 40, 1874, 1899, 1904], "amp": [1, 1885], "autocast": [1, 1881], "gradient": [1, 2, 68, 1142, 1881, 1882, 1888, 1924], "scale": [1, 1881, 1892], "op": [1, 1864, 1881, 1900, 1924], "refer": [1, 34, 64, 70, 1859, 1861, 1862, 1863, 1872, 1876, 1891, 1901, 1904, 1906, 1907, 1910, 1914, 1922], "elig": 1, "cuda": [1, 3, 11, 12, 33, 34, 209, 967, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1874, 1881, 1885, 1889, 1891, 1895, 1897, 1899], "specif": [1, 37, 1916], "behavior": [1, 37, 1882, 1890], "can": [1, 24, 1882, 1889], "float16": 1, "float32": 1, "promot": [1, 8], "widest": 1, "input": [1, 1875, 1881, 1890], "type": [1, 37, 599, 1861, 1862, 1887, 1900, 1904, 1922, 1928], "prefer": 1, "binary_cross_entropy_with_logit": [1, 1493], "over": [1, 9, 1861], "binary_cross_entropi": [1, 1492], "cpu": [1, 3, 11, 206, 1882, 1884, 1907], "bfloat16": [1, 155], "differenti": [2, 1882], "autograd": [2, 11, 29, 32, 67, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 1876, 1881, 1882, 1887, 1888, 1900, 1912, 1913], "forward": [2, 886, 1887, 1913], "mode": [2, 58, 65, 413, 1294, 1882, 1887, 1890, 1900, 1907, 1913], "function": [2, 26, 40, 46, 61, 63, 64, 66, 68, 70, 77, 82, 85, 86, 885, 886, 887, 888, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 1119, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1859, 1860, 1861, 1862, 1864, 1867, 1869, 1875, 1877, 1878, 1879, 1881, 1882, 1888, 1890, 1900, 1910, 1916, 1917, 1927], "higher": 2, "level": [2, 11, 1910], "api": [2, 11, 15, 16, 18, 32, 34, 43, 51, 64, 67, 70, 1857, 1859, 1862, 1872, 1876, 1884, 1885, 1887, 1891, 1892, 1901, 1904, 1905, 1906, 1907, 1910], "local": [2, 24, 27, 1862, 1882, 1924], "disabl": [2, 18, 37, 1859, 1882, 1924], "comput": [2, 68, 1882, 1896, 1913, 1924], "default": [2, 37, 38, 1861, 1882, 1885, 1890, 1909], "layout": [2, 1919], "manual": 2, "In": [2, 9, 1882, 1883, 1924], "place": [2, 67, 1875, 1882, 1883, 1900, 1924], "oper": [2, 11, 16, 38, 40, 67, 87, 1861, 1862, 1867, 1869, 1875, 1876, 1877, 1882, 1887, 1892, 1899, 1900, 1902, 1907, 1916, 1922, 1924], "tensor": [2, 16, 29, 32, 45, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 1821, 1860, 1864, 1867, 1874, 1875, 1876, 1877, 1882, 1887, 1898, 1900, 1907, 1910, 1916, 1919, 1920, 1922, 1924], "correct": [2, 70, 1882], "check": [2, 24, 70, 1859, 1882, 1891], "variabl": [2, 21, 40, 58, 1859, 1861, 1862, 1885], "deprec": 2, "context": [2, 41, 55, 1913], "method": [2, 50, 51, 54, 59, 1860, 1861, 1864, 1900, 1910, 1916], "mixin": 2, "numer": [2, 1890, 1896, 1908], "profil": [2, 28, 40, 911, 912, 913, 914, 915, 1302, 1303, 1304, 1873, 1892, 1893, 1906], "anomali": 2, "detect": 2, "graph": [2, 12, 17, 27, 28, 33, 70, 906, 907, 908, 909, 910, 997, 1859, 1882, 1885, 1907], "backend": [3, 13, 20, 28, 40, 57, 58, 1859, 1891, 1894, 1907, 1909, 1912], "cudnn": 3, "mp": [3, 11, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1873, 1894], "mkl": 3, "mkldnn": [3, 11], "openmp": 3, "opt_einsum": 3, "xeon": 3, "benchmark": [4, 1897], "util": [4, 5, 6, 11, 27, 31, 37, 40, 47, 64, 66, 1040, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1865, 1870, 1871, 1878, 1910, 1921, 1924, 1926], "bottleneck": 5, "checkpoint": [6, 38, 42], "pytorch": [7, 8, 9, 10, 11, 12, 20, 23, 24, 28, 32, 39, 40, 67, 1857, 1859, 1860, 1864, 1882, 1885, 1887, 1897, 1898, 1900, 1905], "govern": [7, 10, 11], "build": [7, 8, 11, 1884, 1892, 1893, 1899], "ci": [7, 11], "how": [7, 16, 17, 24, 38, 65, 1856, 1882, 1887, 1903, 1904], "add": [7, 10, 76, 97, 681], "new": [7, 8, 10], "maintain": [7, 10, 11], "contribut": [8, 1900], "guid": 8, "process": [8, 10, 37, 55, 1881], "get": [8, 17, 20, 43, 1900], "start": [8, 20, 43, 55, 1303], "propos": 8, "featur": [8, 1892, 1893], "report": [8, 1889], "issu": [8, 28, 1859], "implement": [8, 16, 48, 57, 59, 1856, 1886, 1890, 1900, 1908, 1914], "fix": [8, 58, 65, 260, 1100], "bug": 8, "ad": [8, 1887, 1900], "tutori": [8, 11, 1904, 1905, 1912], "improv": [8, 1893], "document": [8, 43, 1857], "particip": 8, "onlin": 8, "discuss": 8, "submit": 8, "pull": 8, "request": 8, "open": 8, "review": 8, "code": [8, 17, 20, 70, 1859, 1885, 1904], "readabl": 8, "test": [8, 24, 1862, 1887, 1904, 1923], "case": [8, 1859], "make": [8, 10, 12, 21, 80], "codebas": 8, "more": [8, 22, 63, 1912], "robust": 8, "triag": 8, "about": [8, 16, 1882, 1912], "sourc": [8, 1897, 1899, 1904], "develop": [8, 1857, 1900], "common": [8, 40, 70, 1892, 1907], "mistak": 8, "To": 8, "avoid": [8, 1895, 1897, 1900, 1904], "frequent": [8, 17, 1859, 1889, 1900, 1907], "ask": [8, 17, 1859, 1889, 1900, 1907], "question": [8, 17, 1859, 1889, 1900, 1907], "On": [8, 38, 1861], "python": [8, 9, 21, 67, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1897, 1900], "doc": [8, 11, 1891], "c": [8, 11, 32, 1882, 1887, 1891, 1898, 1900], "overview": [8, 13, 21, 25, 34, 70, 1901, 1904, 1906, 1916], "design": [9, 1862, 1886, 1912, 1913, 1914], "philosophi": 9, "principl": [9, 10], "1": [9, 18, 58, 65, 1859, 1888], "usabl": 9, "perform": [9, 11, 16, 24, 28, 1893, 1898], "2": [9, 18, 23, 24, 26, 28, 65, 1859, 1885, 1888, 1889], "simpl": [9, 1861, 1862, 1893, 1913], "easi": 9, "3": [9, 18, 58, 65], "first": [9, 1904], "best": [9, 1885, 1895, 1907], "class": [9, 50, 70, 1859, 1861, 1862, 1864, 1900, 1903, 1904, 1922], "languag": [9, 1857, 1859, 1861, 1862, 1863], "interoper": 9, "mechan": [10, 1879, 1882, 1890], "summari": [10, 18, 21, 1907], "modul": [10, 11, 23, 64, 66, 70, 1421, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1859, 1860, 1861, 1862, 1864, 1878, 1882, 1887, 1893, 1898, 1904, 1907], "core": [10, 11, 1858], "lead": [10, 11], "bdfl": [10, 11], "nomin": [10, 1862], "confirm": 10, "remov": [10, 1631, 1875], "The": [10, 15, 70, 1862, 1882], "re": [10, 1904], "scope": 10, "project": 10, "decis": 10, "uncontroversi": 10, "chang": [10, 17, 58, 65], "controversi": 10, "gener": [10, 33, 41, 67, 70, 88, 1883, 1888, 1897, 1907, 1908, 1924], "polici": [10, 15], "faq": [10, 18, 1899], "respons": 11, "nn": [11, 23, 64, 66, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1605, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1861, 1862, 1878, 1879, 1880, 1882, 1885, 1887, 1898, 1910], "optim": [11, 20, 22, 44, 1668, 1669, 1670, 1671, 1672, 1881, 1882, 1903, 1912, 1913, 1924], "compil": [11, 17, 19, 22, 26, 28, 66, 949, 1857, 1885], "jit": [11, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1859, 1862, 1865], "torchscript": [11, 32, 1859, 1860, 1861, 1862, 1864, 1884, 1892, 1902, 1904], "fx": [11, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 1893, 1907, 1910, 1926], "torchdynamo": [11, 12, 14, 17, 18, 28, 1886, 1900], "distribut": [11, 17, 40, 42, 43, 44, 45, 46, 58, 1878, 1879, 1886, 1891, 1893, 1912, 1913], "rng": 11, "multiprocess": [11, 55, 1874, 1885, 1895, 1899], "dataload": [11, 1897], "linear": [11, 29, 728, 729, 752, 760, 777, 1126, 1408, 1537, 1878, 1879, 1896, 1916], "algebra": [11, 29, 1896, 1916], "linalg": [11, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1867, 1896], "spars": [11, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1878, 1879, 1916], "nestedtensor": 11, "nest": [11, 1877], "maskedtensor": [11, 1869], "mask": [11, 1869], "fast": [11, 61, 1890, 1913], "fourier": [11, 61], "transform": [11, 26, 27, 46, 61, 63, 64, 66, 68, 70, 1464, 1878, 1887, 1893], "fft": [11, 61, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099], "inductor": [11, 17], "gpu": [11, 40, 1878, 1879, 1881, 1889, 1905], "triton": 11, "nvfuser": 11, "amd": [11, 1896], "rocm": [11, 1891], "hip": [11, 1891], "tool": [11, 33, 1908, 1916], "c10": 11, "dispatch": 11, "onnx": [11, 78, 79, 84, 1900, 1901, 1902], "export": [11, 17, 1900, 1904], "mobil": 11, "edg": [11, 1859, 1904], "model": [11, 15, 32, 1856, 1881, 1889, 1892, 1903, 1904, 1905, 1907, 1910], "compress": [11, 1916], "window": [11, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1899, 1915], "appl": 11, "m1": 11, "powerpc": 11, "librari": [11, 1857, 1866, 1897], "xla": 11, "torchserv": 11, "torchvis": [11, 65], "torchtext": 11, "torchaudio": 11, "torchrec": 11, "torchx": 11, "torchdata": 11, "torcharrow": 11, "cudagraph": [12, 963], "tree": 12, "background": [12, 1890, 1913, 1914], "integr": 12, "callabl": 12, "previou": 12, "limit": [12, 18, 23, 67, 70, 1856, 1888, 1900], "comparison": [12, 1859, 1861, 1862, 1924], "custom": [13, 49, 59, 70, 85, 1862, 1881, 1885, 1887, 1888, 1893, 1900, 1903, 1904, 1907], "regist": [13, 1882], "after": 13, "aotautograd": [13, 74], "exampl": [13, 52, 70, 1881, 1886, 1887, 1888, 1900, 1913], "debug": [13, 28, 38, 40, 70, 1859, 1907, 1908], "speedi": 13, "compos": [13, 63, 68], "deeper": 14, "dive": 14, "what": [14, 24, 38, 63, 65, 68, 1869, 1882, 1904], "i": [14, 16, 17, 24, 68, 1869, 1882, 1904], "guard": [14, 15, 21], "dynamo": [14, 17, 80], "do": [14, 17, 20, 1904], "dynam": [15, 16, 57, 67, 70, 1907, 1910], "shape": [15, 16, 67, 84, 1900], "motiv": [15, 16, 1869], "abridg": 15, "public": 15, "overal": [15, 16], "architectur": [15, 16], "intern": [15, 1886, 1900, 1904], "dimdynam": 15, "unback": 15, "symint": 15, "fake": 16, "relat": [16, 1910], "work": [16, 26, 37, 64, 1881, 1889, 1916], "import": [16, 58, 1856, 1899, 1904], "bit": 16, "detail": 16, "subclass": [16, 1887], "each": [16, 1904], "individu": 16, "doe": [16, 38, 1882], "convert": [16, 75, 793], "characterist": 16, "interact": [16, 26], "other": [16, 40, 1878, 1897, 1904, 1916, 1924], "resourc": [16, 1904], "you": [17, 20], "support": [17, 23, 87, 1860, 1862, 1869, 1875, 1876, 1877, 1888, 1900, 1902, 1907, 1916], "still": 17, "need": [17, 20, 1881], "whole": [17, 1885], "why": [17, 20, 63, 68, 1885, 1890, 1904, 1916], "my": [17, 24, 1856, 1882, 1889, 1904], "crash": 17, "error": [17, 28, 50, 1889, 1899, 1907, 1908], "torchinductor": [17, 24, 28], "slow": 17, "excess": [17, 28], "recompil": [17, 28], "ar": [17, 63, 68, 1856, 1882, 1904], "product": [17, 68, 1867], "speed": [17, 1899], "up": [17, 58], "am": 17, "see": [17, 1904], "speedup": 17, "break": [17, 28, 1861, 1862], "identifi": [17, 28, 1862], "caus": [17, 28], "didn": 17, "t": [17, 26, 566, 1816, 1862, 1889], "when": [17, 1862, 1882, 1887, 1900, 1907, 1916], "incorrect": 17, "result": 17, "oom": 17, "control": [18, 67, 70, 1897], "fine": 18, "grain": 18, "trace": [18, 70, 587, 1204, 1826, 1859, 1900, 1906, 1907], "section": 18, "tabl": [18, 1857, 1898], "disallow_in_graph": 18, "4": [18, 58, 65], "5": 18, "6": [18, 1885], "exist": 20, "anoth": [20, 1888], "wai": 20, "cach": [21, 1611, 1856, 1885, 1891], "frame": 21, "evalu": [21, 1882, 1890], "pep": 21, "523": 21, "instructiontransl": 21, "troubleshoot": [22, 28], "gotcha": [22, 1888], "learn": [22, 1903], "0": [23, 24, 26, 28], "nnmodul": 23, "hook": [23, 38, 1882, 1893], "__call__": 23, "usag": [23, 34, 43, 58, 1885, 1888, 1892, 1893, 1899], "state_dict": [23, 1670], "dashboard": 24, "read": [24, 63, 1900], "measur": 24, "pr": 24, "affect": 24, "": [24, 65, 1904], "befor": 24, "merg": 24, "run": [24, 1856], "ani": [24, 118, 695, 1862], "technic": 25, "func": [26, 63, 64, 66, 68, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1887, 1888], "appli": 26, "d": 26, "doesn": [26, 1889], "pt": 26, "call": [26, 82, 1861, 1862, 1888], "insid": [26, 1904], "ed": 26, "workaround": 26, "us": [26, 28, 38, 40, 70, 1861, 1882, 1885, 1887, 1890, 1900, 1903, 1904, 1905, 1907, 1916], "allow_in_graph": 26, "write": [27, 59, 70, 1882, 1887, 1900], "aten": [27, 1858, 1900], "ir": [27, 76, 1858], "pass": [27, 75, 81, 1862, 1885, 1895, 1907, 1913], "One": [27, 1899], "x": 27, "none": 27, "inform": [27, 1890, 1912], "subgraph": [27, 70], "rewrit": [27, 70], "manag": [27, 33, 41, 1874, 1885, 1891, 1904], "partition": 27, "matcher": 27, "capabl": 27, "base": [27, 1903], "titl": 28, "diagnos": 28, "runtim": [28, 1884, 1889], "minifi": 28, "access": [28, 29, 1861, 1904], "torch_compile_debug": 28, "accuraci": [28, 1896, 1907, 1908], "file": [28, 40, 1874, 1904], "an": [28, 1856, 1900, 1903, 1904], "complex": [29, 951, 1882, 1890], "number": [29, 33, 58, 1882, 1884, 1889, 1897, 1924], "creat": [29, 1859, 1876], "transit": [29, 58], "from": [29, 58, 66, 70, 1856, 1875, 1899, 1900, 1904], "old": 29, "represent": 29, "real": [29, 481, 1724, 1890], "imag": [29, 310, 1159], "angl": [29, 117, 694], "ab": [29, 89, 677], "serial": [29, 1898, 1924], "__config__": 30, "cpp_extens": 31, "extend": [32, 48, 1887, 1888], "extens": [32, 33, 1887, 1892, 1899], "author": [32, 70], "random": [33, 37, 67, 1889, 1897, 1911, 1924], "commun": [33, 38, 40, 1857], "collect": [33, 40], "stream": [33, 34, 968, 1037, 1885], "event": [33, 49, 51, 965], "beta": [33, 46], "memori": [33, 37, 1885, 1889, 1891, 1893], "nvidia": [33, 1896], "nvtx": [33, 1022, 1023, 1024], "jiter": [33, 1005, 1006], "sanit": [33, 34], "prototyp": [33, 1907, 1908], "data": [37, 67, 1862, 1886, 1889, 1900, 1908, 1922], "dataset": 37, "map": [37, 1891], "style": 37, "iter": [37, 1861], "load": [37, 1196, 1260, 1856, 1898, 1904, 1907], "order": [37, 1882], "sampler": 37, "batch": [37, 65, 1896, 1903], "non": [37, 70, 1878, 1879, 1882, 1885, 1896, 1904, 1907], "collate_fn": 37, "singl": [37, 58, 1881], "multi": [37, 40, 58, 1878, 1879], "platform": 37, "pin": [37, 1885], "ddp": 38, "powersgd": 38, "state": [38, 1893, 1904], "acknowledg": [38, 1905], "deploi": 39, "ha": 39, "been": 39, "move": 39, "multipi": 39, "come": [40, 1882], "which": [40, 1882], "environ": [40, 58, 1885, 1892, 1904], "choos": 40, "network": [40, 1885, 1889, 1893], "interfac": [40, 1891], "nccl": [40, 1885], "basic": [40, 1862, 1876, 1888, 1912, 1922], "initi": [40, 1878, 1893, 1922], "tcp": 40, "share": [40, 1874, 1885, 1904, 1914], "system": [40, 1862, 1874, 1888], "post": [40, 1907], "kei": [40, 1899], "valu": [40, 610, 1861, 1862, 1896, 1909, 1914], "store": [40, 57], "group": 40, "point": [40, 1892], "synchron": [40, 1038, 1308], "asynchron": [40, 1862, 1885, 1895], "third": 40, "parti": 40, "launch": [40, 58], "spawn": [40, 1874], "applic": 40, "monitor": [40, 1872], "barrier": 40, "torch_distributed_debug": 40, "log": [40, 368, 1262, 1892], "join": [41, 1924], "elast": [43, 48, 58], "advanc": [43, 1893], "plugin": 43, "parallel": [45, 1585, 1885, 1886, 1889, 1905, 1924], "probabl": 46, "score": 46, "pathwis": 46, "deriv": [46, 1882], "exponentialfamili": 46, "bernoulli": [46, 153, 919], "binomi": 46, "categor": 46, "cauchi": 46, "chi2": 46, "continuousbernoulli": 46, "dirichlet": 46, "exponenti": [46, 1764], "fishersnedecor": 46, "gamma": 46, "geometr": 46, "gumbel": 46, "halfcauchi": 46, "halfnorm": 46, "independ": 46, "kumaraswami": 46, "lkjcholeski": 46, "laplac": 46, "lognorm": 46, "lowrankmultivariatenorm": 46, "mixturesamefamili": 46, "multinomi": [46, 419, 1311], "multivariatenorm": 46, "negativebinomi": 46, "normal": [46, 1556, 1649, 1878, 1903], "onehotcategor": 46, "pareto": 46, "poisson": [46, 1699], "relaxedbernoulli": 46, "logitrelaxedbernoulli": 46, "relaxedonehotcategor": 46, "studentt": 46, "transformeddistribut": 46, "uniform": 46, "vonmis": 46, "weibul": 46, "wishart": 46, "kl": 46, "diverg": [46, 1864], "constraint": [46, 1885], "registri": [46, 57], "dlpack": 47, "agent": 48, "server": [48, 57, 59], "concept": 48, "watchdog": 48, "launcher": 49, "rendezv": [49, 57, 58], "handler": [49, 54, 57, 1889], "metric": [49, 54], "propag": [50, 1876], "object": [51, 1904], "torchelast": 53, "kubernet": 53, "multipl": [55, 1881, 1885, 1887, 1905], "worker": [55, 58, 1889], "quickstart": 56, "except": [57, 1889], "c10d": 57, "etcd": 57, "legaci": 57, "torchrun": 58, "node": [58, 76, 79, 83, 84, 906, 907, 908, 909, 910, 1882], "stack": [58, 1800, 1907], "fault": 58, "toler": 58, "size": [58, 533, 1877], "failur": [58, 73], "min": [58, 410, 1291], "max": [58, 406, 1286], "membership": [58, 1862], "note": [58, 1857, 1862, 1885, 1907, 1912], "definit": [58, 1862], "deploy": [58, 1892], "notic": [58, 1856], "expir": 59, "timer": 59, "client": 59, "train": [60, 1881, 1893, 1895, 1907], "script": [60, 1200, 1859, 1899, 1900], "helper": 61, "fullyshardeddataparallel": 62, "patch": [65, 1904], "norm": [65, 451, 1245, 1648], "happen": 65, "option": [65, 1861, 1884, 1899, 1903], "batchnorm": 65, "paramet": [65, 1602, 1861, 1903], "functorch": [65, 66], "eval": [65, 1882], "migrat": [66, 1859], "make_funct": 66, "combine_state_for_ensembl": 66, "ux": 67, "vmap": [67, 68, 888, 1130, 1849, 1887, 1888], "mutat": [67, 1924], "arbitrari": [67, 1904], "structur": [67, 1862], "out": [67, 1875, 1889], "depend": [67, 1904, 1913], "flow": [67, 70, 1907], "item": [67, 351], "nonzero": [67, 450, 1647], "friend": 67, "whirlwind": 68, "tour": 68, "grad": [68, 289, 903, 1120, 1882, 1885], "auto": 68, "vector": 68, "vjp": [68, 902, 1129], "jacobian": [68, 899], "jvp": [68, 887, 900, 1125, 1888], "jacrev": [68, 1124], "jacfwd": [68, 1123], "hessian": [68, 897, 1122], "futur": 69, "A": [70, 1893], "quick": 70, "primer": 70, "manipul": [70, 1876], "direct": 70, "With": [70, 1864], "replace_pattern": 70, "proxi": 70, "retrac": 70, "interpret": [70, 1859], "pattern": [70, 1861, 1900, 1904], "introduct": [70, 1869, 1877, 1907], "pitfal": [70, 1900], "pdb": 70, "print": [70, 1861, 1862], "to_fold": 70, "graphmodul": 70, "avail": 70, "debugg": 70, "symbol": [70, 77, 82, 85, 86, 1900, 1907, 1924], "static": [70, 1900, 1907], "tracer": [70, 72, 73, 1859], "leaf": 70, "miscellanea": 70, "diagsys0001": 71, "arg": 71, "format": [71, 1904], "too": 71, "verbos": 71, "fxe0001": 72, "success": 72, "fxe0002": 73, "fxe0003": 74, "frontend": [74, 80], "fxe0004": 75, "neg": [75, 438, 440, 1323, 1324], "sigmoid": [75, 522, 755, 1451, 1572, 1759], "fxe0005": 76, "fxe0006": 77, "atenlib": [77, 78], "fxe0007": 78, "fxe0008": 79, "fxe0009": 80, "fxe0010": 81, "fxe0011": 82, "fxe0012": 83, "unsupport": [83, 1861, 1862, 1864, 1900, 1902], "analysi": 83, "poe0001": 84, "miss": [84, 85, 86], "infer": [84, 1876, 1882, 1884, 1898], "poe0002": 85, "poe0003": 86, "standard": 86, "poe0004": 87, "newer": 87, "opset": 87, "version": [87, 1898], "abs_": 90, "absolut": [91, 678], "absolute_": 92, "aco": [93, 679], "acos_": 94, "acosh": [95, 680], "acosh_": 96, "add_": 98, "addbmm": [99, 682], "addbmm_": 100, "addcdiv": [101, 683], "addcdiv_": 102, "addcmul": [103, 684], "addcmul_": 104, "addmm": [105, 685, 1781], "addmm_": 106, "addmv": [107, 686], "addmv_": 108, "addr": [109, 687], "addr_": 110, "adjoint": [111, 688], "all": [112, 689, 1900, 1903], "allclos": [113, 690], "amax": [114, 691], "amin": [115, 692], "aminmax": [116, 693], "apply_": 119, "arcco": [120, 862], "arccos_": 121, "arccosh": [122, 863], "arccosh_": 123, "arcsin": [124, 864], "arcsin_": 125, "arcsinh": [126, 865], "arcsinh_": 127, "arctan": [128, 866], "arctan2": [129, 867], "arctan2_": 130, "arctan_": 131, "arctanh": [132, 868], "arctanh_": 133, "argmax": [134, 870], "argmin": [135, 871], "argsort": [136, 872], "argwher": [137, 873], "as_strid": [138, 874], "as_subclass": 139, "asin": [140, 877], "asin_": 141, "asinh": [142, 878], "asinh_": 143, "atan": [144, 879], "atan2": [145, 880], "atan2_": 146, "atan_": 147, "atanh": [148, 881], "atanh_": 149, "backward": [150, 885, 889, 1882, 1883, 1885, 1890, 1913], "baddbmm": [151, 917], "baddbmm_": 152, "bernoulli_": 154, "bincount": [156, 920], "bitwise_and": [157, 921], "bitwise_and_": 158, "bitwise_left_shift": [159, 922], "bitwise_left_shift_": 160, "bitwise_not": [161, 923], "bitwise_not_": 162, "bitwise_or": [163, 924], "bitwise_or_": 164, "bitwise_right_shift": [165, 925], "bitwise_right_shift_": 166, "bitwise_xor": [167, 926], "bitwise_xor_": 168, "bmm": [169, 929], "bool": 170, "broadcast_to": [171, 932], "byte": 172, "cauchy_": 173, "ccol_indic": 174, "cdoubl": 175, "ceil": [176, 938], "ceil_": 177, "cfloat": 178, "chalf": 179, "char": 180, "choleski": [181, 940, 1218], "cholesky_invers": [182, 941], "cholesky_solv": [183, 942], "chunk": [184, 943], "clamp": [185, 767, 944], "clamp_": 186, "clip": [187, 945, 1881], "clip_": 188, "clone": [189, 946], "coalesc": 190, "col_indic": 191, "conj": [192, 954], "conj_phys": [193, 955], "conj_physical_": 194, "contigu": 195, "copy_": 196, "copysign": [197, 956], "copysign_": 198, "corrcoef": [199, 957], "co": [200, 958], "cos_": 201, "cosh": [202, 959], "cosh_": 203, "count_nonzero": [204, 960], "cov": [205, 961], "cross": [207, 962, 1221, 1882], "crow_indic": 208, "cummax": [210, 1041], "cummin": [211, 1042], "cumprod": [212, 1043], "cumprod_": 213, "cumsum": [214, 1044], "cumsum_": 215, "data_ptr": 216, "deg2rad": [217, 1046], "dense_dim": 218, "dequant": [219, 1047, 1907], "det": [220, 1048, 1222], "detach": 221, "detach_": 222, "devic": [223, 984, 1885, 1896, 1919], "diag": [224, 1049], "diag_emb": [225, 1050], "diagflat": [226, 1051], "diagon": [227, 1052, 1223], "diagonal_scatt": [228, 1053], "diff": [229, 1054], "digamma": [230, 1055], "digamma_": 231, "dim": [232, 1875], "dist": [233, 1056], "div": [234, 1057, 1898], "div_": 235, "divid": [236, 1058], "divide_": 237, "dot": [238, 1059], "doubl": 239, "dsplit": [240, 1060], "element_s": 241, "eq": [242, 1067], "eq_": 243, "equal": [244, 1068], "erf": [245, 1069], "erf_": 246, "erfc": [247, 1070], "erfc_": 248, "erfinv": [249, 1071], "erfinv_": 250, "exp": [251, 1072], "exp_": 252, "expand": 253, "expand_a": 254, "expm1": [255, 1074], "expm1_": 256, "exponential_": 257, "fill_": 258, "fill_diagonal_": 259, "fix_": 261, "flatten": [262, 1101, 1367], "flip": [263, 1102], "fliplr": [264, 1103], "flipud": [265, 1104], "float": [266, 1898], "float_pow": [267, 1105], "float_power_": 268, "floor": [269, 1106], "floor_": 270, "floor_divid": [271, 1107], "floor_divide_": 272, "fmax": [273, 1108], "fmin": [274, 1109], "fmod": [275, 1110], "fmod_": 276, "frac": [277, 1111], "frac_": 278, "frexp": [279, 1112], "gather": [280, 977, 1131], "gcd": [281, 1132], "gcd_": 282, "ge": [283, 1133], "ge_": 284, "geometric_": 285, "geqrf": [286, 1134], "ger": [287, 1135], "get_devic": 288, "greater": [290, 1143], "greater_": 291, "greater_equ": [292, 1144], "greater_equal_": 293, "gt": [294, 1145], "gt_": 295, "half": 296, "hardshrink": [297, 1377, 1523], "heavisid": [298, 1148], "histc": [299, 1149], "histogram": [300, 1150], "hsplit": [301, 1152], "hypot": [302, 1155], "hypot_": 303, "i0": [304, 1156], "i0_": 305, "igamma": [306, 1157], "igamma_": 307, "igammac": [308, 1158], "igammac_": 309, "index_add": [311, 1160], "index_add_": 312, "index_copi": [313, 1161], "index_copy_": 314, "index_fil": 315, "index_fill_": 316, "index_put": 317, "index_put_": 318, "index_reduc": [319, 1162], "index_reduce_": 320, "index_select": [321, 1163], "indic": [322, 1857], "inner": [323, 1166], "int": 324, "int_repr": 325, "invers": [326, 1167, 1867], "is_coalesc": 327, "is_complex": [328, 1168], "is_conj": [329, 1169], "is_contigu": 330, "is_cuda": 331, "is_floating_point": [332, 1171], "is_infer": 333, "is_leaf": 334, "is_meta": 335, "is_pin": 336, "is_quant": 337, "is_set_to": 338, "is_shar": 339, "is_sign": 340, "is_spars": 341, "is_sparse_csr": 342, "isclos": [343, 1178], "isfinit": [344, 1179], "isinf": [345, 1181], "isnan": [346, 1182], "isneginf": [347, 1183], "isposinf": [348, 1184], "isreal": [349, 1185], "istft": [350, 1186], "items": 352, "kthvalu": [353, 1210], "lcm": [354, 1211], "lcm_": 355, "ldexp": [356, 1212], "ldexp_": 357, "le": [358, 1213], "le_": 359, "lerp": [360, 1214], "lerp_": 361, "less": [362, 1215], "less_": 363, "less_equ": [364, 1216], "less_equal_": 365, "lgamma": [366, 1217], "lgamma_": 367, "log10": [369, 1263], "log10_": 370, "log1p": [371, 1264], "log1p_": 372, "log2": [373, 1265], "log2_": 374, "log_": 375, "log_normal_": 376, "logaddexp": [377, 1266], "logaddexp2": [378, 1267], "logcumsumexp": [379, 1268], "logdet": [380, 1269], "logical_and": [381, 1270], "logical_and_": 382, "logical_not": [383, 1271], "logical_not_": 384, "logical_or": [385, 1272], "logical_or_": 386, "logical_xor": [387, 1273], "logical_xor_": 388, "logit": [389, 1274], "logit_": 390, "logsumexp": [391, 1276], "long": 392, "lt": [393, 1277], "lt_": 394, "lu": [395, 1235, 1278], "lu_solv": [396, 1238, 1279], "map_": 397, "masked_fil": 398, "masked_fill_": 399, "masked_scatt": 400, "masked_scatter_": 401, "masked_select": [402, 1282], "matmul": [403, 1239, 1283], "matrix_exp": [404, 1240, 1284], "matrix_pow": [405, 1242, 1285], "maximum": [407, 1287], "mean": [408, 1288], "median": [409, 1289], "minimum": [411, 1292], "mm": [412, 1293, 1784], "moveaxi": [414, 1295], "movedim": [415, 1296], "msort": [416, 1309], "mul": [417, 1310], "mul_": 418, "multipli": [420, 1312], "multiply_": 421, "mv": [422, 1313], "mvlgamma": [423, 1314], "mvlgamma_": 424, "nan_to_num": [425, 1315], "nan_to_num_": 426, "nanmean": [427, 1316], "nanmedian": [428, 1317], "nanquantil": [429, 1318], "nansum": [430, 1319], "narrow": [431, 1320], "narrow_copi": [432, 1321], "nbyte": 433, "ndim": 434, "ndimens": 435, "ne": [436, 1322], "ne_": 437, "neg_": 439, "negative_": 441, "nelement": 442, "new_empti": 443, "new_ful": 444, "new_on": 445, "new_tensor": 446, "new_zero": 447, "nextaft": [448, 1325], "nextafter_": 449, "normal_": 452, "not_equ": [453, 1650], "not_equal_": 454, "numel": [455, 1651], "numpi": [456, 1900], "orgqr": [457, 1693], "ormqr": [458, 1694], "outer": [459, 1695], "permut": [460, 1697, 1875], "pin_memori": 461, "pinvers": [462, 1698], "polygamma": [463, 1701], "polygamma_": 464, "posit": [465, 1702], "pow": [466, 1703], "pow_": 467, "prod": [468, 1704], "put_": 469, "q_per_channel_axi": 470, "q_per_channel_scal": 471, "q_per_channel_zero_point": 472, "q_scale": 473, "q_zero_point": 474, "qr": [475, 1247, 1706], "qscheme": 476, "quantil": [477, 1707], "rad2deg": [478, 1714], "random_": 479, "ravel": [480, 1723], "reciproc": [482, 1725], "reciprocal_": 483, "record_stream": 484, "register_hook": [485, 909], "remaind": [486, 1726], "remainder_": 487, "renorm": [488, 1727], "renorm_": 489, "repeat": 490, "repeat_interleav": [491, 1728], "requires_grad": [492, 1882], "requires_grad_": 493, "reshap": [494, 1729], "reshape_a": 495, "resize_": 496, "resize_as_": 497, "resolve_conj": [498, 1730], "resolve_neg": [499, 1731], "retain_grad": 500, "retains_grad": 501, "roll": [502, 1733], "rot90": [503, 1734], "round": [504, 1735], "round_": 505, "row_indic": 506, "rsqrt": [507, 1737], "rsqrt_": 508, "scatter": [509, 979, 1739], "scatter_": 510, "scatter_add": [511, 1740], "scatter_add_": 512, "scatter_reduc": [513, 1741], "scatter_reduce_": 514, "select": [515, 1744, 1869], "select_scatt": [516, 1745], "set_": 517, "sgn": [518, 1758], "sgn_": 519, "share_memory_": 520, "short": 521, "sigmoid_": 523, "sign": [524, 1760], "sign_": 525, "signbit": [526, 1772], "sin": [527, 1773], "sin_": 528, "sinc": [529, 1774], "sinc_": 530, "sinh": [531, 1775], "sinh_": 532, "slice_scatt": [534, 1776], "slogdet": [535, 1248, 1777], "smm": [536, 1778], "softmax": [537, 1454, 1576, 1779, 1786], "sort": [538, 1780], "sparse_dim": 539, "sparse_mask": 540, "sparse_resize_": 541, "sparse_resize_and_clear_": 542, "split": [543, 1795], "sqrt": [544, 1796], "sqrt_": 545, "squar": [546, 1797], "square_": 547, "squeez": [548, 1798], "squeeze_": 549, "sspaddmm": [550, 1799], "std": [551, 1801], "stft": [552, 1803], "storag": [553, 1918], "storage_offset": 554, "storage_typ": 555, "stride": 556, "sub": [557, 1804], "sub_": 558, "subtract": [559, 1805], "subtract_": 560, "sum": [561, 1788, 1806, 1878], "sum_to_s": 562, "svd": [563, 1252, 1807], "swapax": [564, 1809], "swapdim": [565, 1810], "t_": 567, "take": [568, 1817, 1903], "take_along_dim": [569, 1818], "tan": [570, 1819], "tan_": 571, "tanh": [572, 1461, 1581, 1820], "tanh_": 573, "tensor_split": [574, 1822], "tile": [575, 1824], "to_dens": 577, "to_mkldnn": 578, "to_spars": 579, "to_sparse_bsc": 580, "to_sparse_bsr": 581, "to_sparse_coo": 582, "to_sparse_csc": 583, "to_sparse_csr": 584, "tolist": 585, "topk": [586, 1825], "transpos": [588, 1827], "transpose_": 589, "triangular_solv": [590, 1830], "tril": [591, 1831], "tril_": 592, "triu": [593, 1833], "triu_": 594, "true_divid": [595, 1835], "true_divide_": 596, "trunc": [597, 1836], "trunc_": 598, "type_a": 600, "unbind": [601, 1837, 1877], "unflatten": [602, 1471, 1838], "unfold": [603, 1472, 1588], "uniform_": 604, "uniqu": [605, 1839], "unique_consecut": [606, 1840], "unsqueez": [607, 1841], "unsqueeze_": 608, "untyped_storag": 609, "var": [611, 1844], "vdot": [612, 1846], "view": [613, 1869, 1898, 1920], "view_a": 614, "vsplit": [615, 1850], "where": [616, 1852, 1856], "xlogi": [617, 1853], "xlogy_": 618, "zero_": 619, "_assert": 620, "_foreach_ab": 621, "_foreach_abs_": 622, "_foreach_aco": 623, "_foreach_acos_": 624, "_foreach_asin": 625, "_foreach_asin_": 626, "_foreach_atan": 627, "_foreach_atan_": 628, "_foreach_ceil": 629, "_foreach_ceil_": 630, "_foreach_co": 631, "_foreach_cos_": 632, "_foreach_cosh": 633, "_foreach_cosh_": 634, "_foreach_erf": 635, "_foreach_erf_": 636, "_foreach_erfc": 637, "_foreach_erfc_": 638, "_foreach_exp": 639, "_foreach_exp_": 640, "_foreach_expm1": 641, "_foreach_expm1_": 642, "_foreach_floor": 643, "_foreach_floor_": 644, "_foreach_frac": 645, "_foreach_frac_": 646, "_foreach_lgamma": 647, "_foreach_lgamma_": 648, "_foreach_log": 649, "_foreach_log10": 650, "_foreach_log10_": 651, "_foreach_log1p": 652, "_foreach_log1p_": 653, "_foreach_log2": 654, "_foreach_log2_": 655, "_foreach_log_": 656, "_foreach_neg": 657, "_foreach_neg_": 658, "_foreach_reciproc": 659, "_foreach_reciprocal_": 660, "_foreach_round": 661, "_foreach_round_": 662, "_foreach_sigmoid": 663, "_foreach_sigmoid_": 664, "_foreach_sin": 665, "_foreach_sin_": 666, "_foreach_sinh": 667, "_foreach_sinh_": 668, "_foreach_sqrt": 669, "_foreach_sqrt_": 670, "_foreach_tan": 671, "_foreach_tan_": 672, "_foreach_trunc": 673, "_foreach_trunc_": 674, "_foreach_zero_": 675, "_log": [676, 1868], "set_log": 676, "bnrelu2d": [696, 719], "bnrelu3d": [697, 720], "convbn1d": [698, 708], "convbn2d": [699, 709], "convbn3d": [700, 710], "convbnrelu1d": [701, 711], "convbnrelu2d": [702, 712], "convbnrelu3d": [703, 713], "convrelu1d": [704, 721], "convrelu2d": [705, 714, 722], "convrelu3d": [706, 715, 723], "linearrelu": [707, 716, 724, 725], "freeze_bn_stat": 717, "update_bn_stat": 718, "conv2d": [726, 735, 769, 1350, 1496], "conv3d": [727, 736, 770, 1351, 1497], "lstm": [730, 758, 1391, 1897], "multiheadattent": [731, 1427], "batchnorm2d": [732, 1340], "batchnorm3d": [733, 1341], "conv1d": [734, 768, 1349, 1495], "convtranspose1d": [737, 1352], "convtranspose2d": [738, 1353], "convtranspose3d": [739, 1354], "elu": [740, 771, 1363, 1509], "embed": [741, 1364, 1511], "embeddingbag": [742, 1365], "fxfloatfunct": 743, "floatfunct": 744, "groupnorm": [745, 1376], "hardswish": [746, 773, 1379, 1525], "instancenorm1d": [747, 1384], "instancenorm2d": [748, 1385], "instancenorm3d": [749, 1386], "layernorm": [750, 1393], "leakyrelu": [751, 1407], "qfunction": 753, "relu6": [754, 1441, 1566], "gru": [756, 1373], "grucel": [757, 1374], "lstmcell": [759, 1392], "rnncell": [761, 1438], "adaptive_avg_pool2d": [762, 1480], "adaptive_avg_pool3d": [763, 1481], "avg_pool2d": [764, 1488], "avg_pool3d": [765, 1489], "celu": [766, 1343, 1494], "hardsigmoid": [772, 1378, 1524], "hardtanh": [774, 1380, 1526], "interpol": [775, 1531], "leaky_relu": [776, 1535], "max_pool1d": [778, 1544], "max_pool2d": [779, 1545], "threshold": [780, 1463, 1583], "upsampl": [781, 1473, 1589], "upsample_bilinear": [782, 1590], "upsample_nearest": [783, 1591], "dequantstub": 784, "quantstub": 785, "quantwrapp": 786, "add_quant_dequ": 787, "backendconfig": 788, "backendpatternconfig": 789, "dtypeconfig": 790, "dtypewithconstraint": 791, "observationtyp": 792, "default_eval_fn": 794, "fakequant": [795, 1907], "fakequantizebas": 796, "fixedqparamsfakequant": 797, "fusedmovingavgobsfakequant": 798, "default_fake_qu": 799, "default_fused_act_fake_qu": 800, "default_fused_per_channel_wt_fake_qu": 801, "default_fused_wt_fake_qu": 802, "default_histogram_fake_qu": 803, "default_per_channel_weight_fake_qu": 804, "default_weight_fake_qu": 805, "disable_fake_qu": 806, "disable_observ": 807, "enable_fake_qu": 808, "enable_observ": 809, "fuse_modul": 810, "convertcustomconfig": 811, "fusecustomconfig": 812, "preparecustomconfig": 813, "standalonemoduleconfigentri": 814, "histogramobserv": 815, "minmaxobserv": 816, "movingaverageminmaxobserv": 817, "movingaverageperchannelminmaxobserv": 818, "noopobserv": 819, "observerbas": 820, "perchannelminmaxobserv": 821, "placeholderobserv": 822, "recordingobserv": 823, "default_debug_observ": 824, "default_dynamic_quant_observ": 825, "default_float_qparams_observ": 826, "default_histogram_observ": 827, "default_observ": 828, "default_per_channel_weight_observ": 829, "default_placeholder_observ": 830, "default_weight_observ": 831, "get_observer_state_dict": 832, "load_observer_state_dict": 833, "prepar": [834, 1907, 1910], "prepare_qat": 835, "propagate_qconfig": 836, "qconfig": [837, 1907, 1910], "default_activation_only_qconfig": 838, "default_debug_qconfig": 839, "default_dynamic_qconfig": 840, "default_per_channel_qconfig": 841, "default_qat_qconfig": 842, "default_qat_qconfig_v2": 843, "default_qconfig": 844, "default_weight_only_qconfig": 845, "float16_dynamic_qconfig": 846, "float16_static_qconfig": 847, "float_qparams_weight_only_qconfig": 848, "per_channel_dynamic_qconfig": 849, "qconfigmap": 850, "get_default_qat_qconfig_map": 851, "get_default_qconfig_map": 852, "quantiz": [853, 1878, 1893, 1900, 1907, 1908, 1909, 1910], "quantize_dynam": 854, "convert_fx": 855, "fuse_fx": 856, "prepare_fx": 857, "prepare_qat_fx": 858, "quantize_qat": 859, "swap_modul": 860, "arang": 861, "are_deterministic_algorithms_en": 869, "as_tensor": 875, "asarrai": 876, "atleast_1d": 882, "atleast_2d": 883, "atleast_3d": 884, "dual_level": 890, "forward_ad": [891, 892], "make_du": 891, "unpack_du": 892, "functionctx": [893, 894, 895, 896], "mark_dirti": 893, "mark_non_differenti": 894, "save_for_backward": 895, "set_materialize_grad": 896, "hvp": 898, "vhp": 901, "gradcheck": [904, 1890], "gradgradcheck": [905, 1890], "metadata": [906, 1892], "name": [907, 1861, 1875, 1876], "next_funct": 908, "register_prehook": 910, "load_nvprof": 911, "export_chrome_trac": 912, "key_averag": 913, "self_cpu_time_tot": 914, "total_averag": 915, "set_multithreading_en": 916, "bartlett_window": 918, "blackman_window": 927, "block_diag": 928, "broadcast_shap": 930, "broadcast_tensor": 931, "bucket": 933, "can_cast": 934, "cartesian_prod": 935, "cat": 936, "cdist": 937, "chain_matmul": 939, "column_stack": 947, "combin": [948, 1887], "compiled_with_cxx11_abi": 950, "concat": 952, "concaten": 953, "cudapluggablealloc": 964, "externalstream": 966, "outofmemoryerror": 967, "streamcontext": 969, "caching_allocator_alloc": 970, "caching_allocator_delet": 971, "can_device_access_p": 972, "change_current_alloc": 973, "clock_rat": 974, "comm": [975, 976, 977, 978, 979], "broadcast": [975, 1883], "broadcast_coalesc": 976, "reduce_add": 978, "current_blas_handl": 980, "current_devic": 981, "current_stream": 982, "default_stream": 983, "device_count": 985, "device_of": 986, "empty_cach": [987, 1299], "get_allocator_backend": 988, "get_arch_list": 989, "get_device_cap": 990, "get_device_nam": 991, "get_device_properti": 992, "get_gencode_flag": 993, "get_rng_stat": [994, 1141, 1300], "get_rng_state_al": 995, "get_sync_debug_mod": 996, "graph_pool_handl": 998, "init": [999, 1880], "initial_se": [1000, 1165], "ipc_collect": 1001, "is_avail": 1002, "is_current_stream_captur": 1003, "is_initi": 1004, "_create_jit_fn": 1005, "_create_multi_output_jit_fn": 1006, "list_gpu_process": 1007, "make_graphed_cal": 1008, "manual_se": [1009, 1281, 1301], "manual_seed_al": 1010, "max_memory_alloc": 1011, "max_memory_cach": 1012, "max_memory_reserv": 1013, "mem_get_info": 1014, "memory_alloc": 1015, "memory_cach": 1016, "memory_reserv": 1017, "memory_snapshot": 1018, "memory_stat": 1019, "memory_summari": 1020, "memory_usag": 1021, "mark": 1022, "range_pop": 1023, "range_push": 1024, "power_draw": 1025, "reset_max_memory_alloc": 1026, "reset_max_memory_cach": 1027, "reset_peak_memory_stat": 1028, "seed": [1029, 1305, 1743], "seed_al": 1030, "set_devic": 1031, "set_per_process_memory_fract": [1032, 1306], "set_rng_stat": [1033, 1307, 1756], "set_rng_state_al": 1034, "set_stream": 1035, "set_sync_debug_mod": 1036, "temperatur": 1039, "cumulative_trapezoid": 1045, "dstack": 1061, "einsum": 1062, "empti": 1063, "empty_lik": 1064, "empty_strid": 1065, "enable_grad": 1066, "exp2": 1073, "ey": 1075, "fake_quantize_per_channel_affin": 1076, "fake_quantize_per_tensor_affin": 1077, "fft2": 1079, "fftfreq": 1080, "fftn": 1081, "fftshift": 1082, "hfft": 1083, "hfft2": 1084, "hfftn": 1085, "ifft": 1086, "ifft2": 1087, "ifftn": 1088, "ifftshift": 1089, "ihfft": 1090, "ihfft2": 1091, "ihfftn": 1092, "irfft": 1093, "irfft2": 1094, "irfftn": 1095, "rfft": 1096, "rfft2": 1097, "rfftfreq": 1098, "rfftn": 1099, "from_dlpack": 1113, "from_numpi": 1114, "frombuff": 1115, "full": [1116, 1898], "full_lik": 1117, "functional_cal": [1118, 1643], "grad_and_valu": 1121, "replace_all_batch_norm_modules_": 1127, "stack_module_st": 1128, "get_default_dtyp": 1136, "get_deterministic_debug_mod": 1137, "get_float32_matmul_precis": 1138, "get_num_interop_thread": 1139, "get_num_thread": 1140, "hamming_window": 1146, "hann_window": 1147, "histogramdd": 1151, "hspmm": 1153, "hstack": 1154, "inference_mod": 1164, "is_deterministic_algorithms_warn_only_en": 1170, "is_grad_en": 1172, "is_inference_mode_en": 1173, "is_nonzero": 1174, "is_storag": 1175, "is_tensor": 1176, "is_warn_always_en": 1177, "isin": 1180, "attribut": [1187, 1859, 1861, 1862, 1864, 1919], "scriptfunct": 1188, "scriptmodul": [1189, 1898], "annot": [1190, 1862], "enable_onednn_fus": 1191, "fork": 1192, "freez": 1193, "ignor": 1194, "isinst": 1195, "onednn_fusion_en": 1197, "optimize_for_infer": 1198, "save": [1199, 1738, 1856, 1882, 1892, 1898, 1907], "script_if_trac": 1201, "set_fusion_strategi": 1202, "strict_fus": 1203, "trace_modul": 1205, "unus": 1206, "wait": 1207, "kaiser_window": 1208, "kron": 1209, "cholesky_ex": 1219, "cond": 1220, "eig": 1224, "eigh": 1225, "eigval": 1226, "eigvalsh": 1227, "householder_product": 1228, "inv": 1229, "inv_ex": 1230, "ldl_factor": 1231, "ldl_factor_ex": 1232, "ldl_solv": 1233, "lstsq": 1234, "lu_factor": 1236, "lu_factor_ex": 1237, "matrix_norm": 1241, "matrix_rank": 1243, "multi_dot": 1244, "pinv": 1246, "solv": 1249, "solve_ex": 1250, "solve_triangular": 1251, "svdval": 1253, "tensorinv": 1254, "tensorsolv": 1255, "vander": [1256, 1843], "vecdot": 1257, "vector_norm": 1258, "linspac": 1259, "lobpcg": 1261, "logspac": 1275, "lu_unpack": 1280, "meshgrid": 1290, "current_allocated_memori": 1297, "driver_allocated_memori": 1298, "stop": 1304, "adaptiveavgpool1d": 1326, "adaptiveavgpool2d": 1327, "adaptiveavgpool3d": 1328, "adaptivelogsoftmaxwithloss": 1329, "adaptivemaxpool1d": 1330, "adaptivemaxpool2d": 1331, "adaptivemaxpool3d": 1332, "alphadropout": 1333, "avgpool1d": 1334, "avgpool2d": 1335, "avgpool3d": 1336, "bceloss": 1337, "bcewithlogitsloss": 1338, "batchnorm1d": 1339, "bilinear": [1342, 1491], "ctcloss": 1344, "channelshuffl": 1345, "constantpad1d": 1346, "constantpad2d": 1347, "constantpad3d": 1348, "cosineembeddingloss": 1355, "cosinesimilar": 1356, "crossentropyloss": 1357, "dataparallel": [1358, 1878, 1879, 1881, 1885], "dropout": [1359, 1505, 1878, 1879], "dropout1d": [1360, 1506], "dropout2d": [1361, 1507], "dropout3d": [1362, 1508], "featurealphadropout": 1366, "fold": [1368, 1514], "fractionalmaxpool2d": 1369, "fractionalmaxpool3d": 1370, "gelu": [1371, 1518], "glu": [1372, 1519], "gaussiannllloss": 1375, "hingeembeddingloss": 1381, "huberloss": 1382, "ident": [1383, 1617, 1625, 1862, 1889], "kldivloss": 1387, "l1loss": 1388, "lppool1d": 1389, "lppool2d": 1390, "lazybatchnorm1d": 1394, "lazybatchnorm2d": 1395, "lazybatchnorm3d": 1396, "lazyconv1d": 1397, "lazyconv2d": 1398, "lazyconv3d": 1399, "lazyconvtranspose1d": 1400, "lazyconvtranspose2d": 1401, "lazyconvtranspose3d": 1402, "lazyinstancenorm1d": 1403, "lazyinstancenorm2d": 1404, "lazyinstancenorm3d": 1405, "lazylinear": 1406, "localresponsenorm": 1409, "logsigmoid": [1410, 1540], "logsoftmax": 1411, "mseloss": 1412, "marginrankingloss": 1413, "maxpool1d": 1414, "maxpool2d": 1415, "maxpool3d": 1416, "maxunpool1d": 1417, "maxunpool2d": 1418, "maxunpool3d": 1419, "mish": [1420, 1550], "moduledict": [1422, 1862], "modulelist": [1423, 1861, 1862], "multilabelmarginloss": 1424, "multilabelsoftmarginloss": 1425, "multimarginloss": 1426, "nllloss": 1428, "prelu": [1429, 1564], "pairwisedist": 1430, "parameterdict": 1431, "parameterlist": 1432, "pixelshuffl": 1433, "pixelunshuffl": 1434, "poissonnllloss": 1435, "rnn": [1436, 1635, 1636, 1637, 1638, 1639, 1640, 1897], "rnnbase": 1437, "rrelu": [1439, 1568], "relu": [1440, 1565], "reflectionpad1d": 1442, "reflectionpad2d": 1443, "reflectionpad3d": 1444, "replicationpad1d": 1445, "replicationpad2d": 1446, "replicationpad3d": 1447, "selu": [1448, 1571], "sequenti": 1449, "silu": [1450, 1573], "smoothl1loss": 1452, "softmarginloss": 1453, "softmax2d": 1455, "softmin": [1456, 1577], "softplu": [1457, 1578], "softshrink": [1458, 1579], "softsign": [1459, 1580], "syncbatchnorm": 1460, "tanhshrink": [1462, 1582], "transformerdecod": 1465, "transformerdecoderlay": 1466, "transformerencod": 1467, "transformerencoderlay": 1468, "tripletmarginloss": 1469, "tripletmarginwithdistanceloss": 1470, "upsamplingbilinear2d": 1474, "upsamplingnearest2d": 1475, "zeropad1d": 1476, "zeropad2d": 1477, "zeropad3d": 1478, "adaptive_avg_pool1d": 1479, "adaptive_max_pool1d": 1482, "adaptive_max_pool2d": 1483, "adaptive_max_pool3d": 1484, "affine_grid": 1485, "alpha_dropout": 1486, "avg_pool1d": 1487, "batch_norm": 1490, "conv_transpose1d": 1498, "conv_transpose2d": 1499, "conv_transpose3d": 1500, "cosine_embedding_loss": 1501, "cosine_similar": 1502, "cross_entropi": 1503, "ctc_loss": 1504, "elu_": 1510, "embedding_bag": 1512, "feature_alpha_dropout": 1513, "fractional_max_pool2d": 1515, "fractional_max_pool3d": 1516, "gaussian_nll_loss": 1517, "grid_sampl": 1520, "group_norm": 1521, "gumbel_softmax": 1522, "hardtanh_": 1527, "hinge_embedding_loss": 1528, "huber_loss": 1529, "instance_norm": 1530, "kl_div": 1532, "l1_loss": 1533, "layer_norm": 1534, "leaky_relu_": 1536, "local_response_norm": 1538, "log_softmax": [1539, 1783], "lp_pool1d": 1541, "lp_pool2d": 1542, "margin_ranking_loss": 1543, "max_pool3d": 1546, "max_unpool1d": 1547, "max_unpool2d": 1548, "max_unpool3d": 1549, "mse_loss": 1551, "multi_margin_loss": 1552, "multilabel_margin_loss": 1553, "multilabel_soft_margin_loss": 1554, "nll_loss": 1555, "one_hot": 1557, "pad": [1558, 1878], "pairwise_dist": 1559, "pdist": 1560, "pixel_shuffl": 1561, "pixel_unshuffl": 1562, "poisson_nll_loss": 1563, "relu_": 1567, "rrelu_": 1569, "scaled_dot_product_attent": 1570, "smooth_l1_loss": 1574, "soft_margin_loss": 1575, "threshold_": 1584, "data_parallel": [1585, 1879], "triplet_margin_loss": 1586, "triplet_margin_with_distance_loss": 1587, "lazymodulemixin": 1592, "register_module_backward_hook": 1593, "register_module_buffer_registration_hook": 1594, "register_module_forward_hook": 1595, "register_module_forward_pre_hook": 1596, "register_module_full_backward_hook": 1597, "register_module_full_backward_pre_hook": 1598, "register_module_module_registration_hook": 1599, "register_module_parameter_registration_hook": 1600, "distributeddataparallel": [1601, 1881, 1885, 1886], "uninitializedbuff": 1603, "uninitializedparamet": 1604, "clip_grad_norm_": 1605, "clip_grad_value_": 1606, "parameters_to_vector": 1607, "parametr": [1608, 1609, 1611, 1612, 1613, 1614, 1893], "orthogon": 1608, "spectral_norm": [1609, 1642], "parametrizationlist": 1610, "is_parametr": 1612, "register_parametr": 1613, "remove_parametr": 1614, "basepruningmethod": 1615, "customfrommask": 1616, "l1unstructur": 1618, "lnstructur": 1619, "pruningcontain": 1620, "randomstructur": 1621, "randomunstructur": 1622, "prune": [1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1893], "custom_from_mask": 1623, "global_unstructur": 1624, "is_prun": 1626, "l1_unstructur": 1627, "ln_structur": 1628, "random_structur": 1629, "random_unstructur": 1630, "remove_spectral_norm": 1632, "remove_weight_norm": 1633, "packedsequ": 1634, "pack_padded_sequ": 1635, "pack_sequ": 1636, "pad_packed_sequ": 1637, "pad_sequ": 1638, "unpack_sequ": 1639, "unpad_sequ": 1640, "skip_init": 1641, "stateless": 1643, "vector_to_paramet": 1644, "weight_norm": 1645, "no_grad": 1646, "ones": 1652, "ones_lik": 1653, "exportopt": 1654, "exportoutput": 1655, "exportoutputseri": 1656, "jitscalartyp": 1657, "graphinfo": 1658, "verificationopt": 1659, "asgd": 1660, "adadelta": 1661, "adagrad": 1662, "adam": 1663, "adamw": 1664, "adamax": 1665, "lbfg": 1666, "nadam": 1667, "add_param_group": 1668, "load_state_dict": 1669, "step": [1671, 1903], "zero_grad": 1672, "radam": 1673, "rmsprop": 1674, "rprop": 1675, "sgd": 1676, "sparseadam": 1677, "chainedschedul": 1678, "constantlr": 1679, "cosineannealinglr": 1680, "cosineannealingwarmrestart": 1681, "cycliclr": 1682, "exponentiallr": 1683, "lambdalr": 1684, "linearlr": 1685, "multisteplr": 1686, "multiplicativelr": 1687, "onecyclelr": 1688, "polynomiallr": 1689, "reducelronplateau": 1690, "sequentiallr": 1691, "steplr": 1692, "pca_lowrank": 1696, "polar": 1700, "promote_typ": 1705, "quantize_per_channel": 1708, "quantize_per_tensor": 1709, "quantized_batch_norm": 1710, "quantized_max_pool1d": 1711, "quantized_max_pool2d": 1712, "sobolengin": 1713, "rand": 1715, "rand_lik": 1716, "randint": 1717, "randint_lik": 1718, "randn": 1719, "randn_lik": 1720, "randperm": 1721, "rang": [1722, 1861], "result_typ": 1732, "row_stack": 1736, "searchsort": 1742, "set_default_devic": 1746, "set_default_dtyp": 1747, "set_default_tensor_typ": 1748, "set_deterministic_debug_mod": 1749, "set_float32_matmul_precis": 1750, "set_flush_denorm": 1751, "set_grad_en": 1752, "set_num_interop_thread": 1753, "set_num_thread": 1754, "set_printopt": 1755, "set_warn_alwai": 1757, "signal": [1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1915], "bartlett": 1761, "blackman": 1762, "cosin": 1763, "gaussian": 1765, "general_cosin": 1766, "general_ham": 1767, "ham": 1768, "hann": 1769, "kaiser": 1770, "nuttal": 1771, "check_sparse_tensor_invari": 1782, "sampled_addmm": 1785, "spdiag": 1787, "sparse_bsc_tensor": 1789, "sparse_bsr_tensor": 1790, "sparse_compressed_tensor": 1791, "sparse_coo_tensor": 1792, "sparse_csc_tensor": 1793, "sparse_csr_tensor": 1794, "std_mean": 1802, "svd_lowrank": 1808, "sym_float": 1811, "sym_int": 1812, "sym_max": 1813, "sym_min": 1814, "sym_not": 1815, "tensordot": 1823, "trapezoid": 1828, "trapz": 1829, "tril_indic": 1832, "triu_indic": 1834, "use_deterministic_algorithm": 1842, "var_mean": 1845, "view_as_complex": 1847, "view_as_r": 1848, "vstack": 1851, "zero": 1854, "zeros_lik": 1855, "hub": 1856, "publish": 1856, "entrypoint": 1856, "download": 1856, "logic": [1856, 1861], "known": [1856, 1859], "bind": 1857, "prim": 1858, "built": [1859, 1860, 1862, 1900], "inspect": 1859, "warn": 1859, "appendix": [1859, 1862], "recurs": 1859, "constant": [1859, 1861], "fusion": 1859, "builtin": 1860, "math": [1860, 1924], "construct": [1861, 1862, 1864, 1877, 1903, 1916], "refin": [1861, 1862], "enum": [1861, 1862], "tupl": [1861, 1862], "express": [1861, 1862], "liter": [1861, 1862], "list": [1861, 1862, 1900], "dict": 1861, "arithmet": [1861, 1862], "subscript": [1861, 1862], "slice": [1861, 1862, 1896, 1924], "ternari": [1861, 1862], "cast": 1861, "statement": [1861, 1862], "assign": [1861, 1862], "match": [1861, 1876], "If": 1861, "while": [1861, 1862], "loop": 1861, "For": 1861, "continu": [1861, 1862], "return": [1861, 1862, 1889, 1914], "resolut": [1861, 1862], "lookup": 1861, "defin": [1861, 1887, 1888], "terminologi": 1862, "meta": 1862, "primit": 1862, "special": [1862, 1882, 1917], "instanc": 1862, "signatur": 1862, "expr": 1862, "convers": [1862, 1877], "atom": 1862, "parenthes": 1862, "form": 1862, "dictionari": 1862, "displai": 1862, "primari": 1862, "power": 1862, "unari": [1862, 1869, 1916], "bitwis": 1862, "binari": [1862, 1869], "shift": 1862, "boolean": 1862, "condit": 1862, "augment": 1862, "rais": 1862, "assert": [1862, 1891], "del": 1862, "compound": 1862, "els": 1862, "getattr": 1862, "hasattr": 1862, "zip": [1862, 1904], "enumer": 1862, "rule": [1862, 1876, 1888, 1901], "remot": [1862, 1914], "procedur": 1862, "execut": [1862, 1882, 1885, 1904, 1905], "program": 1862, "coverag": [1863, 1875, 1887], "properti": [1864, 1867], "Not": 1864, "correctli": 1864, "bound": 1864, "schema": 1864, "between": [1864, 1904], "matrix": [1867, 1907], "decomposit": 1867, "solver": 1867, "misc": 1867, "experiment": 1867, "reduct": [1869, 1885, 1896, 1924], "mobile_optim": 1870, "model_zoo": 1871, "strategi": [1874, 1903], "descriptor": 1874, "file_descriptor": 1874, "file_system": 1874, "subprocess": 1874, "keep": [1875, 1904], "dimens": [1875, 1876], "unifi": 1875, "contract": 1875, "awai": 1875, "factori": 1875, "variant": 1875, "semant": [1876, 1883, 1885, 1891, 1898], "explicit": 1876, "align": 1876, "current": 1876, "subsystem": 1876, "constructor": 1877, "contain": 1878, "convolut": [1878, 1879, 1896, 1897], "layer": 1878, "pool": [1878, 1879], "activ": [1878, 1879], "weight": [1878, 1903], "nonlinear": 1878, "recurr": [1878, 1889], "distanc": [1878, 1879], "loss": [1878, 1879, 1881], "vision": [1878, 1879], "shuffl": 1878, "lazi": 1878, "attent": 1879, "typic": 1881, "unscal": 1881, "accumul": 1881, "penalti": 1881, "one": 1881, "per": [1881, 1903], "particular": [1881, 1882], "dtype": [1881, 1898, 1910, 1919], "encod": 1882, "histori": 1882, "set": [1882, 1900], "No": 1882, "multithread": 1882, "concurr": 1882, "determin": [1882, 1897], "retain": 1882, "thread": [1882, 1884], "safeti": 1882, "wirting": 1882, "calculu": 1882, "pictur": 1882, "conjug": 1882, "own": 1882, "formula": 1882, "domain": 1882, "whether": [1882, 1904], "fire": 1882, "differ": [1882, 1900], "modifi": 1882, "compat": 1883, "tune": 1884, "tensorfloat": [1885, 1891, 1896], "32": [1885, 1891, 1896, 1899], "tf32": [1885, 1891, 1896], "amper": [1885, 1896], "reduc": [1885, 1896], "fp16": [1885, 1896], "gemm": [1885, 1896], "bf16": [1885, 1896], "bc": 1885, "alloc": [1885, 1889], "cubla": 1885, "workspac": 1885, "cufft": 1885, "plan": [1885, 1891], "just": 1885, "time": 1885, "practic": [1885, 1895, 1907], "agnost": 1885, "buffer": [1885, 1895], "instead": 1885, "captur": 1885, "partial": 1885, "9": 1885, "across": [1885, 1898], "processgroup": 1886, "ddpoptim": 1886, "separ": 1887, "setup_context": 1887, "like": [1887, 1904], "wrapper": 1887, "__torch_function__": 1887, "overrid": [1887, 1927], "specifi": 1888, "staticmethod": 1888, "isn": 1889, "freed": 1889, "properli": 1889, "loader": 1889, "notat": 1890, "analyt": 1890, "output": 1890, "u": 1890, "reus": [1891, 1895], "hipfft": 1891, "rocfft": 1891, "enabl": 1891, "kernel": [1891, 1907], "larg": 1892, "fleet": 1892, "wide": 1892, "attach": 1892, "consider": 1892, "block": 1893, "neural": 1893, "tip": [1895, 1908], "fight": 1895, "deadlock": 1895, "through": 1895, "queue": 1895, "e": 1895, "g": 1895, "hogwild": 1895, "extrem": 1896, "finit": 1896, "instinct": 1896, "mi200": 1896, "reproduc": 1897, "nondeterminist": 1897, "algorithm": [1897, 1903, 1913], "content": [1898, 1904], "preserv": 1898, "them": [1898, 1904], "integ": 1898, "divis": 1898, "alwai": 1898, "includ": [1899, 1904], "compon": 1899, "instal": 1899, "cffi": 1899, "cpp": 1899, "found": 1899, "win": 1899, "channel": 1899, "without": 1899, "claus": 1899, "protect": 1899, "broken": 1899, "pipe": [1899, 1905], "driver": 1899, "shut": 1899, "down": 1899, "ipc": 1899, "alexnet": 1900, "v": 1900, "index": [1900, 1924], "inlin": 1900, "discov": 1900, "unconvert": 1900, "onc": 1900, "preview": 1900, "diagnost": 1901, "closur": 1903, "adjust": 1903, "rate": 1903, "averag": 1903, "swa": 1903, "ema": 1903, "schedul": 1903, "care": 1903, "put": 1903, "togeth": 1903, "your": 1904, "treat": 1904, "archiv": 1904, "file_structur": 1904, "given": 1904, "wa": 1904, "later": 1904, "distinguish": 1904, "explan": 1904, "framework": [1904, 1912], "user": [1904, 1914], "find": 1904, "analyz": 1904, "extern": 1904, "mock": 1904, "refactor": 1904, "sharp": 1904, "global": 1904, "isol": 1904, "mangl": 1904, "pipelin": 1905, "skip": 1905, "connect": 1905, "intel": 1906, "instrument": 1906, "technologi": 1906, "eager": 1907, "awar": 1907, "engin": [1907, 1924], "observ": [1907, 1910], "hardwar": 1907, "nativ": [1907, 1909], "configur": [1907, 1909, 1924], "insensit": 1908, "int8": 1908, "sensit": 1908, "ao": [1910, 1925, 1926], "top": 1910, "quantize_fx": 1910, "qconfig_map": 1910, "backend_config": 1910, "custom_config": 1910, "fake_quant": 1910, "intrins": 1910, "qat": 1910, "scheme": 1910, "rpc": 1912, "tensorpip": 1912, "rref": [1912, 1914], "remotemodul": 1912, "record": 1913, "dure": 1913, "smart": 1913, "end": 1913, "protocol": 1914, "assumpt": 1914, "lifetim": 1914, "reason": 1914, "scenario": 1914, "owner": 1914, "argument": 1914, "sparsiti": 1916, "coo": 1916, "hybrid": 1916, "uncoalesc": 1916, "csr": 1916, "csc": 1916, "bsr": 1916, "bsc": 1916, "memory_format": 1919, "tensorboard": 1921, "creation": 1924, "sampl": 1924, "quasi": 1924, "pointwis": 1924, "spectral": 1924, "bla": 1924, "lapack": 1924, "foreach": 1924, "tag": 1924, "n": [1925, 1926], "_numeric_suit": 1925, "_numeric_suite_fx": 1926, "info": 1928, "finfo": 1928, "iinfo": 1928}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.arctan2": [[129, "torch-tensor-arctan2"]], "torch.Tensor.atan2_": [[146, "torch-tensor-atan2"]], "torch.Tensor.arctan_": [[131, "torch-tensor-arctan"]], "torch.Tensor.addcdiv_": [[102, "torch-tensor-addcdiv"]], "torch.Tensor.allclose": [[113, "torch-tensor-allclose"]], "torch.Tensor.arccos_": [[121, "torch-tensor-arccos"]], "torch.Tensor.argmin": [[135, "torch-tensor-argmin"]], "torch.Tensor.asin_": [[141, "torch-tensor-asin"]], "torch.Tensor.arcsinh": [[126, "torch-tensor-arcsinh"]], "torch.Tensor.adjoint": [[111, "torch-tensor-adjoint"]], "torch.Tensor.arctanh_": [[133, "torch-tensor-arctanh"]], "torch.Tensor.add_": [[98, "torch-tensor-add"]], "torch.Tensor.asinh_": [[143, "torch-tensor-asinh"]], "torch.Tensor.argwhere": [[137, "torch-tensor-argwhere"]], "torch.Tensor.addr_": [[110, "torch-tensor-addr"]], "torch.Tensor.any": [[118, "torch-tensor-any"]], "torch.Tensor.amin": [[115, "torch-tensor-amin"]], "torch.Tensor.all": [[112, "torch-tensor-all"]], "torch.Tensor.angle": [[117, "torch-tensor-angle"]], "torch.Tensor.apply_": [[119, "torch-tensor-apply"]], "torch.Tensor.arcsinh_": [[127, "torch-tensor-arcsinh"]], "torch.Tensor.addcmul": [[103, "torch-tensor-addcmul"]], "torch.Tensor.addmv": [[107, "torch-tensor-addmv"]], "torch.Tensor.argmax": [[134, "torch-tensor-argmax"]], "torch.Tensor.as_subclass": [[139, "torch-tensor-as-subclass"]], "torch.Tensor.arctanh": [[132, "torch-tensor-arctanh"]], "torch.Tensor.addr": [[109, "torch-tensor-addr"]], "torch.Tensor.argsort": [[136, "torch-tensor-argsort"]], "torch.Tensor.addcmul_": [[104, "torch-tensor-addcmul"]], "torch.Tensor.addmm_": [[106, "torch-tensor-addmm"]], "torch.Tensor.atan2": [[145, "torch-tensor-atan2"]], "torch.Tensor.addcdiv": [[101, "torch-tensor-addcdiv"]], "torch.Tensor.addmv_": [[108, "torch-tensor-addmv"]], "torch.Tensor.arcsin": [[124, "torch-tensor-arcsin"]], "torch.Tensor.aminmax": [[116, "torch-tensor-aminmax"]], "torch.Tensor.amax": [[114, "torch-tensor-amax"]], "torch.Tensor.arccosh_": [[123, "torch-tensor-arccosh"]], "torch.Tensor.arcsin_": [[125, "torch-tensor-arcsin"]], "torch.Tensor.addbmm": [[99, "torch-tensor-addbmm"]], "torch.Tensor.addmm": [[105, "torch-tensor-addmm"]], "torch.Tensor.atan": [[144, "torch-tensor-atan"]], "torch.Tensor.asin": [[140, "torch-tensor-asin"]], "torch.Tensor.arccos": [[120, "torch-tensor-arccos"]], "torch.Tensor.addbmm_": [[100, "torch-tensor-addbmm"]], "torch.Tensor.arccosh": [[122, "torch-tensor-arccosh"]], "torch.Tensor.arctan2_": [[130, "torch-tensor-arctan2"]], "torch.Tensor.as_strided": [[138, "torch-tensor-as-strided"]], "torch.Tensor.asinh": [[142, "torch-tensor-asinh"]], "torch.Tensor.arctan": [[128, "torch-tensor-arctan"]], "torch.Tensor.char": [[180, "torch-tensor-char"]], "torch.Tensor.bitwise_and": [[157, "torch-tensor-bitwise-and"]], "torch.Tensor.atanh": [[148, "torch-tensor-atanh"]], "torch.Tensor.ccol_indices": [[174, "torch-tensor-ccol-indices"]], "torch.Tensor.bfloat16": [[155, "torch-tensor-bfloat16"]], "torch.Tensor.contiguous": [[195, "torch-tensor-contiguous"]], "torch.Tensor.bitwise_left_shift": [[159, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.clone": [[189, "torch-tensor-clone"]], "torch.Tensor.atan_": [[147, "torch-tensor-atan"]], "torch.Tensor.bitwise_right_shift_": [[166, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clamp": [[185, "torch-tensor-clamp"]], "torch.Tensor.clip": [[187, "torch-tensor-clip"]], "torch.Tensor.chunk": [[184, "torch-tensor-chunk"]], "torch.Tensor.clip_": [[188, "torch-tensor-clip"]], "torch.Tensor.broadcast_to": [[171, "torch-tensor-broadcast-to"]], "torch.Tensor.bitwise_left_shift_": [[160, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bernoulli_": [[154, "torch-tensor-bernoulli"]], "torch.Tensor.bitwise_xor": [[167, "torch-tensor-bitwise-xor"]], "torch.Tensor.coalesce": [[190, "torch-tensor-coalesce"]], "torch.Tensor.bitwise_not_": [[162, "torch-tensor-bitwise-not"]], "torch.Tensor.cauchy_": [[173, "torch-tensor-cauchy"]], "torch.Tensor.cholesky_inverse": [[182, "torch-tensor-cholesky-inverse"]], "torch.Tensor.baddbmm": [[151, "torch-tensor-baddbmm"]], "torch.Tensor.clamp_": [[186, "torch-tensor-clamp"]], "torch.Tensor.bool": [[170, "torch-tensor-bool"]], "torch.Tensor.chalf": [[179, "torch-tensor-chalf"]], "torch.Tensor.byte": [[172, "torch-tensor-byte"]], "torch.Tensor.cdouble": [[175, "torch-tensor-cdouble"]], "torch.Tensor.cholesky_solve": [[183, "torch-tensor-cholesky-solve"]], "torch.Tensor.ceil": [[176, "torch-tensor-ceil"]], "torch.Tensor.cfloat": [[178, "torch-tensor-cfloat"]], "torch.Tensor.bernoulli": [[153, "torch-tensor-bernoulli"]], "torch.Tensor.bitwise_and_": [[158, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_right_shift": [[165, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bincount": [[156, "torch-tensor-bincount"]], "torch.Tensor.bitwise_or_": [[164, "torch-tensor-bitwise-or"]], "torch.Tensor.ceil_": [[177, "torch-tensor-ceil"]], "torch.Tensor.conj_physical_": [[194, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_or": [[163, "torch-tensor-bitwise-or"]], "torch.Tensor.conj_physical": [[193, "torch-tensor-conj-physical"]], "torch.Tensor.backward": [[150, "torch-tensor-backward"]], "torch.Tensor.bitwise_not": [[161, "torch-tensor-bitwise-not"]], "torch.Tensor.cholesky": [[181, "torch-tensor-cholesky"]], "torch.Tensor.baddbmm_": [[152, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_xor_": [[168, "torch-tensor-bitwise-xor"]], "torch.Tensor.conj": [[192, "torch-tensor-conj"]], "torch.Tensor.col_indices": [[191, "torch-tensor-col-indices"]], "torch.Tensor.bmm": [[169, "torch-tensor-bmm"]], "torch.Tensor.atanh_": [[149, "torch-tensor-atanh"]], "torch.Tensor.deg2rad": [[217, "torch-tensor-deg2rad"]], "torch.Tensor.cov": [[205, "torch-tensor-cov"]], "torch.Tensor.cpu": [[206, "torch-tensor-cpu"]], "torch.Tensor.digamma_": [[231, "torch-tensor-digamma"]], "torch.Tensor.cross": [[207, "torch-tensor-cross"]], "torch.Tensor.diagonal_scatter": [[228, "torch-tensor-diagonal-scatter"]], "torch.Tensor.device": [[223, "torch-tensor-device"]], "torch.Tensor.cumsum": [[214, "torch-tensor-cumsum"]], "torch.Tensor.cummax": [[210, "torch-tensor-cummax"]], "torch.Tensor.detach": [[221, "torch-tensor-detach"]], "torch.Tensor.detach_": [[222, "torch-tensor-detach"]], "torch.Tensor.element_size": [[241, "torch-tensor-element-size"]], "torch.Tensor.diag_embed": [[225, "torch-tensor-diag-embed"]], "torch.Tensor.dist": [[233, "torch-tensor-dist"]], "torch.Tensor.copy_": [[196, "torch-tensor-copy"]], "torch.Tensor.cos_": [[201, "torch-tensor-cos"]], "torch.Tensor.cuda": [[209, "torch-tensor-cuda"]], "torch.Tensor.det": [[220, "torch-tensor-det"]], "torch.Tensor.cummin": [[211, "torch-tensor-cummin"]], "torch.Tensor.eq_": [[243, "torch-tensor-eq"]], "torch.Tensor.diagonal": [[227, "torch-tensor-diagonal"]], "torch.Tensor.digamma": [[230, "torch-tensor-digamma"]], "torch.Tensor.corrcoef": [[199, "torch-tensor-corrcoef"]], "torch.Tensor.eq": [[242, "torch-tensor-eq"]], "torch.Tensor.data_ptr": [[216, "torch-tensor-data-ptr"]], "torch.Tensor.divide": [[236, "torch-tensor-divide"]], "torch.Tensor.div": [[234, "torch-tensor-div"]], "torch.Tensor.dot": [[238, "torch-tensor-dot"]], "torch.Tensor.cumprod_": [[213, "torch-tensor-cumprod"]], "torch.Tensor.diag": [[224, "torch-tensor-diag"]], "torch.Tensor.div_": [[235, "torch-tensor-div"]], "torch.Tensor.divide_": [[237, "torch-tensor-divide"]], "torch.Tensor.cosh": [[202, "torch-tensor-cosh"]], "torch.Tensor.double": [[239, "torch-tensor-double"]], "torch.Tensor.cos": [[200, "torch-tensor-cos"]], "torch.Tensor.cumprod": [[212, "torch-tensor-cumprod"]], "torch.Tensor.count_nonzero": [[204, "torch-tensor-count-nonzero"]], "torch.Tensor.crow_indices": [[208, "torch-tensor-crow-indices"]], "torch.Tensor.dim": [[232, "torch-tensor-dim"]], "torch.Tensor.dsplit": [[240, "torch-tensor-dsplit"]], "torch.Tensor.diagflat": [[226, "torch-tensor-diagflat"]], "torch.Tensor.cosh_": [[203, "torch-tensor-cosh"]], "torch.Tensor.dequantize": [[219, "torch-tensor-dequantize"]], "torch.Tensor.copysign_": [[198, "torch-tensor-copysign"]], "torch.Tensor.dense_dim": [[218, "torch-tensor-dense-dim"]], "torch.Tensor.cumsum_": [[215, "torch-tensor-cumsum"]], "torch.Tensor.diff": [[229, "torch-tensor-diff"]], "torch.Tensor.equal": [[244, "torch-tensor-equal"]], "torch.Tensor.copysign": [[197, "torch-tensor-copysign"]], "torch.Tensor.erf_": [[246, "torch-tensor-erf"]], "torch.Tensor.fill_": [[258, "torch-tensor-fill"]], "torch.Tensor.flip": [[263, "torch-tensor-flip"]], "torch.Tensor.float_power": [[267, "torch-tensor-float-power"]], "torch.Tensor.fill_diagonal_": [[259, "torch-tensor-fill-diagonal"]], "torch.Tensor.frac": [[277, "torch-tensor-frac"]], "torch.Tensor.float_power_": [[268, "torch-tensor-float-power"]], "torch.Tensor.grad": [[289, "torch-tensor-grad"]], "torch.Tensor.gcd": [[281, "torch-tensor-gcd"]], "torch.Tensor.ge_": [[284, "torch-tensor-ge"]], "torch.Tensor.fix": [[260, "torch-tensor-fix"]], "torch.Tensor.erf": [[245, "torch-tensor-erf"]], "torch.Tensor.flipud": [[265, "torch-tensor-flipud"]], "torch.Tensor.exponential_": [[257, "torch-tensor-exponential"]], "torch.Tensor.get_device": [[288, "torch-tensor-get-device"]], "torch.Tensor.expand": [[253, "torch-tensor-expand"]], "torch.Tensor.floor": [[269, "torch-tensor-floor"]], "torch.Tensor.fix_": [[261, "torch-tensor-fix"]], "torch.Tensor.fliplr": [[264, "torch-tensor-fliplr"]], "torch.Tensor.floor_divide": [[271, "torch-tensor-floor-divide"]], "torch.Tensor.floor_": [[270, "torch-tensor-floor"]], "torch.Tensor.fmod_": [[276, "torch-tensor-fmod"]], "torch.Tensor.erfinv": [[249, "torch-tensor-erfinv"]], "torch.Tensor.ge": [[283, "torch-tensor-ge"]], "torch.Tensor.floor_divide_": [[272, "torch-tensor-floor-divide"]], "torch.Tensor.fmin": [[274, "torch-tensor-fmin"]], "torch.Tensor.erfinv_": [[250, "torch-tensor-erfinv"]], "torch.Tensor.expm1": [[255, "torch-tensor-expm1"]], "torch.Tensor.flatten": [[262, "torch-tensor-flatten"]], "torch.Tensor.greater_equal": [[292, "torch-tensor-greater-equal"]], "torch.Tensor.expand_as": [[254, "torch-tensor-expand-as"]], "torch.Tensor.geqrf": [[286, "torch-tensor-geqrf"]], "torch.Tensor.exp_": [[252, "torch-tensor-exp"]], "torch.Tensor.geometric_": [[285, "torch-tensor-geometric"]], "torch.Tensor.erfc": [[247, "torch-tensor-erfc"]], "torch.Tensor.gcd_": [[282, "torch-tensor-gcd"]], "torch.Tensor.ger": [[287, "torch-tensor-ger"]], "torch.Tensor.frexp": [[279, "torch-tensor-frexp"]], "torch.Tensor.gather": [[280, "torch-tensor-gather"]], "torch.Tensor.greater": [[290, "torch-tensor-greater"]], "torch.Tensor.fmod": [[275, "torch-tensor-fmod"]], "torch.Tensor.greater_": [[291, "torch-tensor-greater"]], "torch.Tensor.float": [[266, "torch-tensor-float"]], "torch.Tensor.frac_": [[278, "torch-tensor-frac"]], "torch.Tensor.greater_equal_": [[293, "torch-tensor-greater-equal"]], "torch.Tensor.expm1_": [[256, "torch-tensor-expm1"]], "torch.Tensor.fmax": [[273, "torch-tensor-fmax"]], "torch.Tensor.exp": [[251, "torch-tensor-exp"]], "torch.Tensor.erfc_": [[248, "torch-tensor-erfc"]], "torch.Tensor.hypot_": [[303, "torch-tensor-hypot"]], "torch.Tensor.histc": [[299, "torch-tensor-histc"]], "torch.Tensor.is_set_to": [[338, "torch-tensor-is-set-to"]], "torch.Tensor.int": [[324, "torch-tensor-int"]], "torch.Tensor.igamma_": [[307, "torch-tensor-igamma"]], "torch.Tensor.is_complex": [[328, "torch-tensor-is-complex"]], "torch.Tensor.is_contiguous": [[330, "torch-tensor-is-contiguous"]], "torch.Tensor.i0": [[304, "torch-tensor-i0"]], "torch.Tensor.index_copy_": [[314, "torch-tensor-index-copy"]], "torch.Tensor.is_leaf": [[334, "torch-tensor-is-leaf"]], "torch.Tensor.i0_": [[305, "torch-tensor-i0"]], "torch.Tensor.inverse": [[326, "torch-tensor-inverse"]], "torch.Tensor.imag": [[310, "torch-tensor-imag"]], "torch.Tensor.gt_": [[295, "torch-tensor-gt"]], "torch.Tensor.igamma": [[306, "torch-tensor-igamma"]], "torch.Tensor.is_inference": [[333, "torch-tensor-is-inference"]], "torch.Tensor.hsplit": [[301, "torch-tensor-hsplit"]], "torch.Tensor.hardshrink": [[297, "torch-tensor-hardshrink"]], "torch.Tensor.index_fill_": [[316, "torch-tensor-index-fill"]], "torch.Tensor.index_fill": [[315, "torch-tensor-index-fill"]], "torch.Tensor.index_add": [[311, "torch-tensor-index-add"]], "torch.Tensor.index_add_": [[312, "torch-tensor-index-add"]], "torch.Tensor.hypot": [[302, "torch-tensor-hypot"]], "torch.Tensor.indices": [[322, "torch-tensor-indices"]], "torch.Tensor.int_repr": [[325, "torch-tensor-int-repr"]], "torch.Tensor.igammac_": [[309, "torch-tensor-igammac"]], "torch.Tensor.is_sparse_csr": [[342, "torch-tensor-is-sparse-csr"]], "torch.Tensor.histogram": [[300, "torch-tensor-histogram"]], "torch.Tensor.index_select": [[321, "torch-tensor-index-select"]], "torch.Tensor.heaviside": [[298, "torch-tensor-heaviside"]], "torch.Tensor.index_put_": [[318, "torch-tensor-index-put"]], "torch.Tensor.is_cuda": [[331, "torch-tensor-is-cuda"]], "torch.Tensor.is_pinned": [[336, "torch-tensor-is-pinned"]], "torch.Tensor.igammac": [[308, "torch-tensor-igammac"]], "torch.Tensor.inner": [[323, "torch-tensor-inner"]], "torch.Tensor.is_shared": [[339, "torch-tensor-is-shared"]], "torch.Tensor.is_sparse": [[341, "torch-tensor-is-sparse"]], "torch.Tensor.index_reduce": [[319, "torch-tensor-index-reduce"]], "torch.Tensor.index_copy": [[313, "torch-tensor-index-copy"]], "torch.Tensor.index_put": [[317, "torch-tensor-index-put"]], "torch.Tensor.is_meta": [[335, "torch-tensor-is-meta"]], "torch.Tensor.gt": [[294, "torch-tensor-gt"]], "torch.Tensor.index_reduce_": [[320, "torch-tensor-index-reduce"]], "torch.Tensor.is_quantized": [[337, "torch-tensor-is-quantized"]], "torch.Tensor.half": [[296, "torch-tensor-half"]], "torch.Tensor.is_signed": [[340, "torch-tensor-is-signed"]], "torch.Tensor.is_floating_point": [[332, "torch-tensor-is-floating-point"]], "torch.Tensor.is_coalesced": [[327, "torch-tensor-is-coalesced"]], "torch.Tensor.is_conj": [[329, "torch-tensor-is-conj"]], "torch.Tensor.logsumexp": [[391, "torch-tensor-logsumexp"]], "torch.Tensor.isposinf": [[348, "torch-tensor-isposinf"]], "torch.Tensor.logical_and": [[381, "torch-tensor-logical-and"]], "torch.Tensor.less": [[362, "torch-tensor-less"]], "torch.Tensor.log2_": [[374, "torch-tensor-log2"]], "torch.Tensor.log_normal_": [[376, "torch-tensor-log-normal"]], "torch.Tensor.logical_xor": [[387, "torch-tensor-logical-xor"]], "torch.Tensor.log10": [[369, "torch-tensor-log10"]], "torch.Tensor.logcumsumexp": [[379, "torch-tensor-logcumsumexp"]], "torch.Tensor.logit_": [[390, "torch-tensor-logit"]], "torch.Tensor.isclose": [[343, "torch-tensor-isclose"]], "torch.Tensor.lgamma_": [[367, "torch-tensor-lgamma"]], "torch.Tensor.isnan": [[346, "torch-tensor-isnan"]], "torch.Tensor.logaddexp2": [[378, "torch-tensor-logaddexp2"]], "torch.Tensor.logdet": [[380, "torch-tensor-logdet"]], "torch.Tensor.log_": [[375, "torch-tensor-log"]], "torch.Tensor.logical_or": [[385, "torch-tensor-logical-or"]], "torch.Tensor.isfinite": [[344, "torch-tensor-isfinite"]], "torch.Tensor.log10_": [[370, "torch-tensor-log10"]], "torch.Tensor.ldexp_": [[357, "torch-tensor-ldexp"]], "torch.Tensor.logical_and_": [[382, "torch-tensor-logical-and"]], "torch.Tensor.itemsize": [[352, "torch-tensor-itemsize"]], "torch.Tensor.logical_not_": [[384, "torch-tensor-logical-not"]], "torch.Tensor.lgamma": [[366, "torch-tensor-lgamma"]], "torch.Tensor.logaddexp": [[377, "torch-tensor-logaddexp"]], "torch.Tensor.logical_not": [[383, "torch-tensor-logical-not"]], "torch.Tensor.le_": [[359, "torch-tensor-le"]], "torch.Tensor.lerp_": [[361, "torch-tensor-lerp"]], "torch.Tensor.logical_xor_": [[388, "torch-tensor-logical-xor"]], "torch.Tensor.lerp": [[360, "torch-tensor-lerp"]], "torch.Tensor.log": [[368, "torch-tensor-log"]], "torch.Tensor.log1p": [[371, "torch-tensor-log1p"]], "torch.Tensor.log1p_": [[372, "torch-tensor-log1p"]], "torch.Tensor.ldexp": [[356, "torch-tensor-ldexp"]], "torch.Tensor.less_": [[363, "torch-tensor-less"]], "torch.Tensor.less_equal": [[364, "torch-tensor-less-equal"]], "torch.Tensor.le": [[358, "torch-tensor-le"]], "torch.Tensor.logical_or_": [[386, "torch-tensor-logical-or"]], "torch.Tensor.logit": [[389, "torch-tensor-logit"]], "torch.Tensor.isneginf": [[347, "torch-tensor-isneginf"]], "torch.Tensor.isinf": [[345, "torch-tensor-isinf"]], "torch.Tensor.kthvalue": [[353, "torch-tensor-kthvalue"]], "torch.Tensor.less_equal_": [[365, "torch-tensor-less-equal"]], "torch.Tensor.isreal": [[349, "torch-tensor-isreal"]], "torch.Tensor.item": [[351, "torch-tensor-item"]], "torch.Tensor.lcm": [[354, "torch-tensor-lcm"]], "torch.Tensor.lcm_": [[355, "torch-tensor-lcm"]], "torch.Tensor.log2": [[373, "torch-tensor-log2"]], "torch.Tensor.istft": [[350, "torch-tensor-istft"]], "torch.repeat_interleave": [[1728, "torch-repeat-interleave"]], "torch.set_deterministic_debug_mode": [[1749, "torch-set-deterministic-debug-mode"]], "torch.rsqrt": [[1737, "torch-rsqrt"]], "torch.randn_like": [[1720, "torch-randn-like"]], "torch.reshape": [[1729, "torch-reshape"]], "torch.range": [[1722, "torch-range"]], "torch.set_float32_matmul_precision": [[1750, "torch-set-float32-matmul-precision"]], "torch.sign": [[1760, "torch-sign"]], "torch.real": [[1724, "torch-real"]], "torch.remainder": [[1726, "torch-remainder"]], "torch.signal.windows.blackman": [[1762, "torch-signal-windows-blackman"]], "torch.rand": [[1715, "torch-rand"]], "torch.resolve_conj": [[1730, "torch-resolve-conj"]], "torch.reciprocal": [[1725, "torch-reciprocal"]], "torch.save": [[1738, "torch-save"]], "torch.randint_like": [[1718, "torch-randint-like"]], "torch.randint": [[1717, "torch-randint"]], "torch.scatter_reduce": [[1741, "torch-scatter-reduce"]], "torch.set_num_interop_threads": [[1753, "torch-set-num-interop-threads"]], "torch.set_default_tensor_type": [[1748, "torch-set-default-tensor-type"]], "torch.round": [[1735, "torch-round"]], "torch.set_warn_always": [[1757, "torch-set-warn-always"]], "torch.seed": [[1743, "torch-seed"]], "torch.rand_like": [[1716, "torch-rand-like"]], "torch.set_default_dtype": [[1747, "torch-set-default-dtype"]], "set_grad_enabled": [[1752, "set-grad-enabled"]], "torch.scatter_add": [[1740, "torch-scatter-add"]], "torch.sigmoid": [[1759, "torch-sigmoid"]], "torch.set_num_threads": [[1754, "torch-set-num-threads"]], "torch.signal.windows.bartlett": [[1761, "torch-signal-windows-bartlett"]], "torch.roll": [[1733, "torch-roll"]], "torch.result_type": [[1732, "torch-result-type"]], "torch.resolve_neg": [[1731, "torch-resolve-neg"]], "torch.randn": [[1719, "torch-randn"]], "torch.set_flush_denormal": [[1751, "torch-set-flush-denormal"]], "torch.signal.windows.cosine": [[1763, "torch-signal-windows-cosine"]], "torch.sgn": [[1758, "torch-sgn"]], "torch.scatter": [[1739, "torch-scatter"]], "torch.searchsorted": [[1742, "torch-searchsorted"]], "torch.set_rng_state": [[1756, "torch-set-rng-state"]], "torch.select": [[1744, "torch-select"]], "torch.row_stack": [[1736, "torch-row-stack"]], "torch.randperm": [[1721, "torch-randperm"]], "torch.renorm": [[1727, "torch-renorm"]], "torch.select_scatter": [[1745, "torch-select-scatter"]], "torch.rot90": [[1734, "torch-rot90"]], "torch.ravel": [[1723, "torch-ravel"]], "torch.set_default_device": [[1746, "torch-set-default-device"]], "torch.set_printoptions": [[1755, "torch-set-printoptions"]], "torch.signal.windows.gaussian": [[1765, "torch-signal-windows-gaussian"]], "torch.sparse.sum": [[1788, "torch-sparse-sum"]], "torch.signal.windows.general_cosine": [[1766, "torch-signal-windows-general-cosine"]], "torch.sparse.softmax": [[1786, "torch-sparse-softmax"]], "torch.sinc": [[1774, "torch-sinc"]], "torch.signal.windows.hamming": [[1768, "torch-signal-windows-hamming"]], "torch.signbit": [[1772, "torch-signbit"]], "torch.sparse_compressed_tensor": [[1791, "torch-sparse-compressed-tensor"]], "torch.sym_int": [[1812, "torch-sym-int"]], "torch.sin": [[1773, "torch-sin"]], "torch.slice_scatter": [[1776, "torch-slice-scatter"]], "torch.square": [[1797, "torch-square"]], "torch.sparse_bsc_tensor": [[1789, "torch-sparse-bsc-tensor"]], "torch.signal.windows.nuttall": [[1771, "torch-signal-windows-nuttall"]], "torch.sinh": [[1775, "torch-sinh"]], "torch.sparse_csr_tensor": [[1794, "torch-sparse-csr-tensor"]], "torch.squeeze": [[1798, "torch-squeeze"]], "check_sparse_tensor_invariants": [[1782, "check-sparse-tensor-invariants"]], "torch.sparse.sampled_addmm": [[1785, "torch-sparse-sampled-addmm"]], "torch.swapdims": [[1810, "torch-swapdims"]], "torch.stft": [[1803, "torch-stft"]], "torch.sym_float": [[1811, "torch-sym-float"]], "torch.signal.windows.kaiser": [[1770, "torch-signal-windows-kaiser"]], "torch.split": [[1795, "torch-split"]], "torch.signal.windows.general_hamming": [[1767, "torch-signal-windows-general-hamming"]], "torch.sparse.mm": [[1784, "torch-sparse-mm"]], "torch.sparse.spdiags": [[1787, "torch-sparse-spdiags"]], "torch.sparse.log_softmax": [[1783, "torch-sparse-log-softmax"]], "torch.sparse_coo_tensor": [[1792, "torch-sparse-coo-tensor"]], "torch.sparse_bsr_tensor": [[1790, "torch-sparse-bsr-tensor"]], "torch.signal.windows.exponential": [[1764, "torch-signal-windows-exponential"]], "torch.subtract": [[1805, "torch-subtract"]], "torch.sum": [[1806, "torch-sum"]], "torch.sparse_csc_tensor": [[1793, "torch-sparse-csc-tensor"]], "torch.softmax": [[1779, "torch-softmax"]], "torch.sparse.addmm": [[1781, "torch-sparse-addmm"]], "torch.svd_lowrank": [[1808, "torch-svd-lowrank"]], "torch.std_mean": [[1802, "torch-std-mean"]], "torch.slogdet": [[1777, "torch-slogdet"]], "torch.sub": [[1804, "torch-sub"]], "torch.swapaxes": [[1809, "torch-swapaxes"]], "torch.signal.windows.hann": [[1769, "torch-signal-windows-hann"]], "torch.sqrt": [[1796, "torch-sqrt"]], "torch.sspaddmm": [[1799, "torch-sspaddmm"]], "torch.std": [[1801, "torch-std"]], "torch.sort": [[1780, "torch-sort"]], "torch.svd": [[1807, "torch-svd"]], "torch.stack": [[1800, "torch-stack"]], "torch.smm": [[1778, "torch-smm"]], "ReduceLROnPlateau": [[1690, "reducelronplateau"]], "torch.outer": [[1695, "torch-outer"]], "torch.optim.Optimizer.zero_grad": [[1672, "torch-optim-optimizer-zero-grad"]], "SobolEngine": [[1713, "sobolengine"]], "ChainedScheduler": [[1678, "chainedscheduler"]], "PolynomialLR": [[1689, "polynomiallr"]], "torch.permute": [[1697, "torch-permute"]], "torch.pca_lowrank": [[1696, "torch-pca-lowrank"]], "torch.optim.Optimizer.step": [[1671, "torch-optim-optimizer-step"]], "RMSprop": [[1674, "rmsprop"]], "SparseAdam": [[1677, "sparseadam"]], "torch.poisson": [[1699, "torch-poisson"]], "torch.quantize_per_tensor": [[1709, "torch-quantize-per-tensor"]], "Rprop": [[1675, "rprop"]], "RAdam": [[1673, "radam"]], "torch.qr": [[1706, "torch-qr"]], "torch.promote_types": [[1705, "torch-promote-types"]], "CosineAnnealingLR": [[1680, "cosineannealinglr"]], "torch.optim.Optimizer.load_state_dict": [[1669, "torch-optim-optimizer-load-state-dict"]], "torch.prod": [[1704, "torch-prod"]], "torch.optim.Optimizer.state_dict": [[1670, "torch-optim-optimizer-state-dict"]], "NAdam": [[1667, "nadam"]], "CyclicLR": [[1682, "cycliclr"]], "torch.polar": [[1700, "torch-polar"]], "MultiplicativeLR": [[1687, "multiplicativelr"]], "SGD": [[1676, "sgd"]], "torch.ormqr": [[1694, "torch-ormqr"]], "torch.quantize_per_channel": [[1708, "torch-quantize-per-channel"]], "torch.orgqr": [[1693, "torch-orgqr"]], "StepLR": [[1692, "steplr"]], "torch.quantized_batch_norm": [[1710, "torch-quantized-batch-norm"]], "ConstantLR": [[1679, "constantlr"]], "torch.polygamma": [[1701, "torch-polygamma"]], "torch.positive": [[1702, "torch-positive"]], "torch.quantized_max_pool1d": [[1711, "torch-quantized-max-pool1d"]], "torch.optim.Optimizer.add_param_group": [[1668, "torch-optim-optimizer-add-param-group"]], "CosineAnnealingWarmRestarts": [[1681, "cosineannealingwarmrestarts"]], "MultiStepLR": [[1686, "multisteplr"]], "SequentialLR": [[1691, "sequentiallr"]], "LBFGS": [[1666, "lbfgs"]], "torch.quantized_max_pool2d": [[1712, "torch-quantized-max-pool2d"]], "ExponentialLR": [[1683, "exponentiallr"]], "torch.pinverse": [[1698, "torch-pinverse"]], "LinearLR": [[1685, "linearlr"]], "torch.pow": [[1703, "torch-pow"]], "LambdaLR": [[1684, "lambdalr"]], "torch.rad2deg": [[1714, "torch-rad2deg"]], "torch.quantile": [[1707, "torch-quantile"]], "OneCycleLR": [[1688, "onecyclelr"]], "TorchScript Language Reference": [[1861, "torchscript-language-reference"], [1862, "torchscript-language-reference"]], "Types": [[1861, "supported-type"], [1900, "types"]], "Unsupported Typing Constructs": [[1861, "unsupported-typing-constructs"], [1862, "unsupported-typing-constructs"]], "Default Types": [[1861, "default-types"]], "Optional Type Refinement": [[1861, "optional-type-refinement"]], "TorchScript Classes": [[1861, "id2"], [1859, "torchscript-classes"]], "TorchScript Enums": [[1861, "id4"]], "Named Tuples": [[1861, "named-tuples"]], "Iterables": [[1861, "iterables"]], "Expressions": [[1861, "expressions"], [1862, "expressions"]], "Literals": [[1861, "literals"], [1862, "literals"]], "List Construction": [[1861, "list-construction"]], "Tuple Construction": [[1861, "tuple-construction"]], "Dict Construction": [[1861, "dict-construction"]], "Variables": [[1861, "variables"], [1859, "variables"], [21, "variables"]], "Arithmetic Operators": [[1861, "arithmetic-operators"]], "Comparison Operators": [[1861, "comparison-operators"]], "Logical Operators": [[1861, "logical-operators"]], "Subscripts and Slicing": [[1861, "subscripts-and-slicing"]], "Function Calls": [[1861, "function-calls"]], "Method Calls": [[1861, "method-calls"]], "Ternary Expressions": [[1861, "ternary-expressions"]], "Casts": [[1861, "casts"]], "Accessing Module Parameters": [[1861, "accessing-module-parameters"]], "Statements": [[1861, "statements"]], "Simple Assignments": [[1861, "simple-assignments"]], "Pattern Matching Assignments": [[1861, "pattern-matching-assignments"]], "Print Statements": [[1861, "print-statements"]], "If Statements": [[1861, "if-statements"]], "While Loops": [[1861, "while-loops"]], "For loops with range": [[1861, "for-loops-with-range"]], "For loops over tuples": [[1861, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1861, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1861, "break-and-continue"]], "Return": [[1861, "return"]], "Variable Resolution": [[1861, "variable-resolution"]], "Use of Python Values": [[1861, "use-of-python-values"]], "Functions": [[1861, "functions"], [1859, "functions"], [1927, "functions"], [1917, "functions"], [1900, "functions"]], "Attribute Lookup On Python Modules": [[1861, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1861, "python-defined-constants"]], "Module Attributes": [[1861, "module-attributes"]], "torch.sym_not": [[1815, "torch-sym-not"]], "torch.take_along_dim": [[1818, "torch-take-along-dim"]], "torch.vdot": [[1846, "torch-vdot"]], "torch.unflatten": [[1838, "torch-unflatten"]], "torch.unsqueeze": [[1841, "torch-unsqueeze"]], "torch.transpose": [[1827, "torch-transpose"]], "torch.true_divide": [[1835, "torch-true-divide"]], "torch.zeros_like": [[1855, "torch-zeros-like"]], "torch.trunc": [[1836, "torch-trunc"]], "torch.tensor_split": [[1822, "torch-tensor-split"]], "IRs": [[1858, "irs"]], "Core Aten IR": [[1858, "core-aten-ir"]], "Prims IR": [[1858, "prims-ir"]], "torch.tril_indices": [[1832, "torch-tril-indices"]], "torch.xlogy": [[1853, "torch-xlogy"]], "torch.tanh": [[1820, "torch-tanh"]], "torch.use_deterministic_algorithms": [[1842, "torch-use-deterministic-algorithms"]], "torch.unbind": [[1837, "torch-unbind"]], "torch.vsplit": [[1850, "torch-vsplit"]], "torch.vander": [[1843, "torch-vander"]], "TorchScript": [[1859, "torchscript"]], "Creating TorchScript Code": [[1859, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1859, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1859, "torchscript-language"]], "Built-in Functions and Modules": [[1859, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1859, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1859, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1859, "python-language-reference-comparison"]], "Debugging": [[1859, "debugging"], [70, "debugging"]], "Disable JIT for Debugging": [[1859, "disable-jit-for-debugging"]], "Inspecting Code": [[1859, "inspecting-code"]], "Interpreting Graphs": [[1859, "interpreting-graphs"]], "Tracer": [[1859, "tracer"]], "Tracing Edge Cases": [[1859, "tracing-edge-cases"]], "Automatic Trace Checking": [[1859, "automatic-trace-checking"]], "Tracer Warnings": [[1859, "tracer-warnings"]], "Frequently Asked Questions": [[1859, "frequently-asked-questions"], [17, "frequently-asked-questions"], [8, "frequently-asked-questions"], [1900, "frequently-asked-questions"], [1889, "frequently-asked-questions"], [1907, "frequently-asked-questions"]], "Known Issues": [[1859, "known-issues"]], "Appendix": [[1859, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1859, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1859, "modules"], [1893, "modules"]], "Attributes": [[1859, "attributes"]], "Constants": [[1859, "constants"]], "Fusion Backends": [[1859, "fusion-backends"]], "References": [[1859, "references"]], "torch.triu_indices": [[1834, "torch-triu-indices"]], "torch.where": [[1852, "torch-where"]], "torch.var": [[1844, "torch-var"]], "torch.var_mean": [[1845, "torch-var-mean"]], "torch.trapezoid": [[1828, "torch-trapezoid"]], "torch.triangular_solve": [[1830, "torch-triangular-solve"]], "torch.trace": [[1826, "torch-trace"]], "torch.zeros": [[1854, "torch-zeros"]], "torch.topk": [[1825, "torch-topk"]], "torch.unique_consecutive": [[1840, "torch-unique-consecutive"]], "torch.tensor": [[1821, "torch-tensor"]], "torch.tan": [[1819, "torch-tan"]], "torch.sym_min": [[1814, "torch-sym-min"]], "torch.tile": [[1824, "torch-tile"]], "torch.sym_max": [[1813, "torch-sym-max"]], "torch.view_as_real": [[1848, "torch-view-as-real"]], "torch.triu": [[1833, "torch-triu"]], "torch.tensordot": [[1823, "torch-tensordot"]], "PyTorch documentation": [[1857, "pytorch-documentation"]], "Community": [[1857, null]], "Developer Notes": [[1857, null]], "torch.compile": [[1857, null], [949, "torch-compile"], [19, "torch-compile"], [22, "torch-compile"]], "Language Bindings": [[1857, null]], "Python API": [[1857, null]], "Libraries": [[1857, null]], "Indices and tables": [[1857, "indices-and-tables"]], "torch.vmap": [[1849, "torch-vmap"]], "torch.unique": [[1839, "torch-unique"]], "torch.take": [[1817, "torch-take"]], "torch.view_as_complex": [[1847, "torch-view-as-complex"]], "torch.vstack": [[1851, "torch-vstack"]], "TorchScript Builtins": [[1860, "torchscript-builtins"]], "Supported Tensor Methods": [[1860, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1860, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1860, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1860, "python-built-in-functions"]], "math Module": [[1860, "math-module"]], "torch.tril": [[1831, "torch-tril"]], "torch.trapz": [[1829, "torch-trapz"]], "torch.t": [[1816, "torch-t"]], "torch.hub": [[1856, "torch-hub"]], "Publishing models": [[1856, "publishing-models"]], "How to implement an entrypoint?": [[1856, "how-to-implement-an-entrypoint"]], "Important Notice": [[1856, "important-notice"]], "Loading models from Hub": [[1856, "loading-models-from-hub"]], "Running a loaded model:": [[1856, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1856, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1856, "caching-logic"]], "Known limitations:": [[1856, "known-limitations"]], "torch.nn.utils.parametrize.cached": [[1611, "torch-nn-utils-parametrize-cached"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1598, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.utils.clip_grad_norm_": [[1605, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.parametrize.register_parametrization": [[1613, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.functional.softsign": [[1580, "torch-nn-functional-softsign"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1597, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.sigmoid": [[1572, "torch-nn-functional-sigmoid"]], "torch.nn.functional.triplet_margin_loss": [[1586, "torch-nn-functional-triplet-margin-loss"]], "UninitializedBuffer": [[1603, "uninitializedbuffer"]], "ParametrizationList": [[1610, "parametrizationlist"]], "CustomFromMask": [[1616, "customfrommask"]], "torch.nn.functional.unfold": [[1588, "torch-nn-functional-unfold"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1587, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.softmax": [[1576, "torch-nn-functional-softmax"]], "torch.nn.functional.soft_margin_loss": [[1575, "torch-nn-functional-soft-margin-loss"]], "torch.nn.utils.parametrize.is_parametrized": [[1612, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.clip_grad_value_": [[1606, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.upsample_nearest": [[1591, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.tanh": [[1581, "torch-nn-functional-tanh"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1594, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1599, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.softplus": [[1578, "torch-nn-functional-softplus"]], "torch.nn.functional.rrelu": [[1568, "torch-nn-functional-rrelu"]], "torch.nn.functional.rrelu_": [[1569, "torch-nn-functional-rrelu"]], "torch.nn.functional.threshold_": [[1584, "torch-nn-functional-threshold"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1585, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.modules.module.register_module_backward_hook": [[1593, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.silu": [[1573, "torch-nn-functional-silu"]], "torch.nn.functional.selu": [[1571, "torch-nn-functional-selu"]], "torch.nn.functional.smooth_l1_loss": [[1574, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.upsample_bilinear": [[1590, "torch-nn-functional-upsample-bilinear"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1596, "torch-nn-modules-module-register-module-forward-pre-hook"]], "LazyModuleMixin": [[1592, "lazymodulemixin"]], "torch.nn.utils.parametrizations.spectral_norm": [[1609, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.functional.tanhshrink": [[1582, "torch-nn-functional-tanhshrink"]], "Parameter": [[1602, "parameter"]], "torch.nn.functional.upsample": [[1589, "torch-nn-functional-upsample"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1614, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.nn.functional.scaled_dot_product_attention": [[1570, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.utils.parameters_to_vector": [[1607, "torch-nn-utils-parameters-to-vector"]], "DistributedDataParallel": [[1601, "distributeddataparallel"], [1886, "distributeddataparallel"]], "BasePruningMethod": [[1615, "basepruningmethod"]], "torch.nn.functional.softshrink": [[1579, "torch-nn-functional-softshrink"]], "torch.nn.functional.softmin": [[1577, "torch-nn-functional-softmin"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1600, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.utils.parametrizations.orthogonal": [[1608, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.functional.threshold": [[1583, "torch-nn-functional-threshold"]], "UninitializedParameter": [[1604, "uninitializedparameter"]], "torch.nn.modules.module.register_module_forward_hook": [[1595, "torch-nn-modules-module-register-module-forward-hook"]], "Identity": [[1617, "identity"], [1383, "identity"]], "torch.nn.utils.rnn.pad_sequence": [[1638, "torch-nn-utils-rnn-pad-sequence"]], "ExportOutput": [[1655, "exportoutput"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1637, "torch-nn-utils-rnn-pad-packed-sequence"]], "Adamax": [[1665, "adamax"]], "ASGD": [[1660, "asgd"]], "torch.nn.utils.prune.is_pruned": [[1626, "torch-nn-utils-prune-is-pruned"]], "PackedSequence": [[1634, "packedsequence"]], "Adagrad": [[1662, "adagrad"]], "torch.nn.utils.remove_weight_norm": [[1633, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1635, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.prune.custom_from_mask": [[1623, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.utils.prune.ln_structured": [[1628, "torch-nn-utils-prune-ln-structured"]], "torch.normal": [[1649, "torch-normal"]], "ExportOptions": [[1654, "exportoptions"]], "torch.nn.utils.prune.global_unstructured": [[1624, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.utils.rnn.unpack_sequence": [[1639, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nonzero": [[1647, "torch-nonzero"]], "torch.nn.utils.vector_to_parameters": [[1644, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.prune.random_structured": [[1629, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.prune.remove": [[1631, "torch-nn-utils-prune-remove"]], "ExportOutputSerializer": [[1656, "exportoutputserializer"]], "Adadelta": [[1661, "adadelta"]], "torch.norm": [[1648, "torch-norm"]], "torch.ones": [[1652, "torch-ones"]], "torch.nn.utils.rnn.unpad_sequence": [[1640, "torch-nn-utils-rnn-unpad-sequence"]], "JitScalarType": [[1657, "jitscalartype"]], "torch.nn.utils.prune.l1_unstructured": [[1627, "torch-nn-utils-prune-l1-unstructured"]], "GraphInfo": [[1658, "graphinfo"]], "torch.nn.utils.prune.identity": [[1625, "torch-nn-utils-prune-identity"]], "torch.ones_like": [[1653, "torch-ones-like"]], "PruningContainer": [[1620, "pruningcontainer"]], "torch.nn.utils.remove_spectral_norm": [[1632, "torch-nn-utils-remove-spectral-norm"]], "AdamW": [[1664, "adamw"]], "torch.nn.utils.spectral_norm": [[1642, "torch-nn-utils-spectral-norm"]], "RandomUnstructured": [[1622, "randomunstructured"]], "no_grad": [[1646, "no-grad"]], "L1Unstructured": [[1618, "l1unstructured"]], "LnStructured": [[1619, "lnstructured"]], "torch.not_equal": [[1650, "torch-not-equal"]], "RandomStructured": [[1621, "randomstructured"]], "torch.nn.utils.skip_init": [[1641, "torch-nn-utils-skip-init"]], "torch.nn.utils.stateless.functional_call": [[1643, "torch-nn-utils-stateless-functional-call"]], "Adam": [[1663, "adam"]], "torch.nn.utils.rnn.pack_sequence": [[1636, "torch-nn-utils-rnn-pack-sequence"]], "VerificationOptions": [[1659, "verificationoptions"]], "torch.nn.utils.weight_norm": [[1645, "torch-nn-utils-weight-norm"]], "torch.nn.utils.prune.random_unstructured": [[1630, "torch-nn-utils-prune-random-unstructured"]], "torch.numel": [[1651, "torch-numel"]], "torch.nn.functional.max_unpool1d": [[1547, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.pdist": [[1560, "torch-nn-functional-pdist"]], "torch.nn.functional.glu": [[1519, "torch-nn-functional-glu"]], "torch.nn.functional.poisson_nll_loss": [[1563, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.linear": [[1537, "torch-nn-functional-linear"]], "torch.nn.functional.multilabel_margin_loss": [[1553, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.lp_pool2d": [[1542, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.hinge_embedding_loss": [[1528, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.hardswish": [[1525, "torch-nn-functional-hardswish"]], "torch.nn.functional.nll_loss": [[1555, "torch-nn-functional-nll-loss"]], "torch.nn.functional.hardtanh": [[1526, "torch-nn-functional-hardtanh"]], "torch.nn.functional.leaky_relu_": [[1536, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.leaky_relu": [[1535, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.pixel_unshuffle": [[1562, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.normalize": [[1556, "torch-nn-functional-normalize"]], "torch.nn.functional.pairwise_distance": [[1559, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.relu6": [[1566, "torch-nn-functional-relu6"]], "torch.nn.functional.pixel_shuffle": [[1561, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.interpolate": [[1531, "torch-nn-functional-interpolate"]], "torch.nn.functional.huber_loss": [[1529, "torch-nn-functional-huber-loss"]], "torch.nn.functional.log_softmax": [[1539, "torch-nn-functional-log-softmax"]], "torch.nn.functional.pad": [[1558, "torch-nn-functional-pad"]], "torch.nn.functional.grid_sample": [[1520, "torch-nn-functional-grid-sample"]], "torch.nn.functional.one_hot": [[1557, "torch-nn-functional-one-hot"]], "torch.nn.functional.relu_": [[1567, "torch-nn-functional-relu"]], "torch.nn.functional.margin_ranking_loss": [[1543, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.hardsigmoid": [[1524, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.hardtanh_": [[1527, "torch-nn-functional-hardtanh"]], "torch.nn.functional.local_response_norm": [[1538, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.gumbel_softmax": [[1522, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.max_pool3d": [[1546, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.mse_loss": [[1551, "torch-nn-functional-mse-loss"]], "torch.nn.functional.multi_margin_loss": [[1552, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.l1_loss": [[1533, "torch-nn-functional-l1-loss"]], "torch.nn.functional.max_pool1d": [[1544, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.logsigmoid": [[1540, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.layer_norm": [[1534, "torch-nn-functional-layer-norm"]], "torch.nn.functional.mish": [[1550, "torch-nn-functional-mish"]], "torch.nn.functional.max_pool2d": [[1545, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.max_unpool3d": [[1549, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.hardshrink": [[1523, "torch-nn-functional-hardshrink"]], "torch.nn.functional.prelu": [[1564, "torch-nn-functional-prelu"]], "torch.nn.functional.instance_norm": [[1530, "torch-nn-functional-instance-norm"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1554, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.kl_div": [[1532, "torch-nn-functional-kl-div"]], "torch.nn.functional.max_unpool2d": [[1548, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.group_norm": [[1521, "torch-nn-functional-group-norm"]], "torch.nn.functional.lp_pool1d": [[1541, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.relu": [[1565, "torch-nn-functional-relu"]], "torch.Tensor.absolute_": [[92, "torch-tensor-absolute"]], "Patching Batch Norm": [[65, "patching-batch-norm"]], "What\u2019s happening?": [[65, "what-s-happening"]], "How to fix": [[65, "how-to-fix"]], "Option 1: Change the BatchNorm": [[65, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[65, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[65, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[65, "option-4-eval-mode"]], "FXE0003:fx-frontend-aotautograd": [[74, "fxe0003-fx-frontend-aotautograd"]], "Migrating from functorch to torch.func": [[66, "migrating-from-functorch-to-torch-func"]], "function transforms": [[66, "function-transforms"]], "NN module utilities": [[66, "nn-module-utilities"]], "functorch.make_functional": [[66, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[66, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[66, "functorch-compile"]], "torch.Tensor.abs": [[89, "torch-tensor-abs"]], "FXE0011:no-symbolic-function-for-call-function": [[82, "fxe0011-no-symbolic-function-for-call-function"]], "Error Propagation": [[50, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[50, "methods-and-classes"]], "torch.Tensor.acosh": [[95, "torch-tensor-acosh"]], "torch.futures": [[69, "torch-futures"]], "Rendezvous": [[57, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[57, "registry"]], "Handler": [[57, "handler"]], "Exceptions": [[57, "exceptions"]], "Implementations": [[57, "implementations"], [48, "implementations"]], "Dynamic Rendezvous": [[57, "dynamic-rendezvous"]], "C10d Backend": [[57, "c10d-backend"]], "Etcd Backend": [[57, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[57, "etcd-rendezvous-legacy"]], "Etcd Store": [[57, "etcd-store"]], "Etcd Server": [[57, "etcd-server"]], "FXE0006:atenlib-symbolic-function": [[77, "fxe0006-atenlib-symbolic-function"]], "POE0004:operator-supported-in-newer-opset-version": [[87, "poe0004-operator-supported-in-newer-opset-version"]], "Train script": [[60, "train-script"]], "torch.Tensor.acos_": [[94, "torch-tensor-acos"]], "TorchElastic Kubernetes": [[53, "torchelastic-kubernetes"]], "POE0002:missing-custom-symbolic-function": [[85, "poe0002-missing-custom-symbolic-function"]], "FXE0009:fx-frontend-dynamo-make-fx": [[80, "fxe0009-fx-frontend-dynamo-make-fx"]], "FXE0001:fx-tracer-success": [[72, "fxe0001-fx-tracer-success"]], "torch.func": [[63, "torch-func"]], "What are composable function transforms?": [[63, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[63, "why-composable-function-transforms"], [68, "why-composable-function-transforms"]], "Read More": [[63, "read-more"]], "Quickstart": [[56, "quickstart"]], "torch.fft": [[61, "torch-fft"]], "Fast Fourier Transforms": [[61, "fast-fourier-transforms"]], "Helper Functions": [[61, "helper-functions"]], "FXE0002:fx-tracer-failure": [[73, "fxe0002-fx-tracer-failure"]], "FXE0010:fx-pass": [[81, "fxe0010-fx-pass"]], "Customization": [[49, "customization"]], "Launcher": [[49, "launcher"]], "Rendezvous Handler": [[49, "rendezvous-handler"]], "Metric Handler": [[49, "metric-handler"]], "Events Handler": [[49, "events-handler"]], "FXE0012:unsupported-fx-node-analysis": [[83, "fxe0012-unsupported-fx-node-analysis"]], "torch.Tensor.add": [[97, "torch-tensor-add"]], "torch.func API Reference": [[64, "module-torch.func"]], "Function Transforms": [[64, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[64, "utilities-for-working-with-torch-nn-modules"]], "FXE0008:fx-node-to-onnx": [[79, "fxe0008-fx-node-to-onnx"]], "Examples": [[52, "examples"], [13, "examples"]], "Expiration Timers": [[59, "module-torch.distributed.elastic.timer"]], "Client Methods": [[59, "client-methods"]], "Server/Client Implementations": [[59, "server-client-implementations"]], "Writing a custom timer server/client": [[59, "writing-a-custom-timer-server-client"]], "torch.Tensor.absolute": [[91, "torch-tensor-absolute"]], "Multiprocessing": [[55, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[55, "starting-multiple-workers"]], "Process Context": [[55, "process-context"]], "FullyShardedDataParallel": [[62, "module-torch.distributed.fsdp"]], "UX Limitations": [[67, "ux-limitations"]], "General limitations": [[67, "general-limitations"]], "torch.autograd APIs": [[67, "torch-autograd-apis"]], "vmap limitations": [[67, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[67, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[67, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[67, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[67, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[67, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[67, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[67, "randomness"]], "POE0001:node-missing-onnx-shape-inference": [[84, "poe0001-node-missing-onnx-shape-inference"]], "DIAGSYS0001:arg-format-too-verbose": [[71, "diagsys0001-arg-format-too-verbose"]], "torchrun (Elastic Launch)": [[58, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[58, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[58, "usage"], [34, "usage"], [43, null]], "Single-node multi-worker": [[58, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[58, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[58, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[58, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[58, "note-on-rendezvous-backend"]], "Definitions": [[58, "definitions"]], "Environment Variables": [[58, "environment-variables"]], "Deployment": [[58, "deployment"]], "Failure Modes": [[58, "failure-modes"]], "Membership Changes": [[58, "membership-changes"]], "Important Notices": [[58, "important-notices"]], "POE0003:missing-standard-symbolic-function": [[86, "poe0003-missing-standard-symbolic-function"]], "torch.Tensor.abs_": [[90, "torch-tensor-abs"]], "Metrics": [[54, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[54, "metric-handlers"]], "Methods": [[54, "methods"]], "torch.func Whirlwind Tour": [[68, "torch-func-whirlwind-tour"]], "What is torch.func?": [[68, "what-is-torch-func"]], "What are the transforms?": [[68, "what-are-the-transforms"]], "grad() (gradient computation)": [[68, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[68, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[68, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[68, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[68, "jacrev-jacfwd-and-hessian"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[75, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "FXE0007:atenlib-fx-to-onnx": [[78, "fxe0007-atenlib-fx-to-onnx"]], "torch.Tensor.acos": [[93, "torch-tensor-acos"]], "torch.fx": [[70, "torch-fx"]], "Overview": [[70, "module-torch.fx"], [34, "module-torch.cuda._sanitizer"], [13, "overview"], [1901, "overview"], [1906, "module-torch.profiler"]], "Writing Transformations": [[70, "writing-transformations"]], "A Quick Primer on Graphs": [[70, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[70, "graph-manipulation"]], "Direct Graph Manipulation": [[70, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[70, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[70, "graph-manipulation-examples"]], "Proxy/Retracing": [[70, "proxy-retracing"]], "The Interpreter Pattern": [[70, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[70, "examples-of-the-interpreter-pattern"]], "Introduction": [[70, "introduction"], [1869, "introduction"], [1877, "introduction"]], "Common Pitfalls in Transform Authoring": [[70, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[70, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[70, "debugging-the-generated-code"]], "Use pdb": [[70, "use-pdb"]], "Print the Generated Code": [[70, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[70, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[70, "debugging-the-transformation"]], "Available Debuggers": [[70, "available-debuggers"]], "Limitations of Symbolic Tracing": [[70, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[70, "dynamic-control-flow"]], "Static Control Flow": [[70, "static-control-flow"]], "Non-torch Functions": [[70, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[70, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[70, "leaf-modules"]], "Miscellanea": [[70, "miscellanea"]], "API Reference": [[70, "api-reference"], [34, "api-reference"], [1901, "api-reference"], [1872, "module-torch.monitor"], [1906, "api-reference"], [1904, "api-reference"]], "Generator": [[88, "generator"]], "FXE0005:fx-ir-add-node": [[76, "fxe0005-fx-ir-add-node"]], "Events": [[51, "module-torch.distributed.elastic.events"]], "API Methods": [[51, "api-methods"]], "Event Objects": [[51, "event-objects"]], "torch.Tensor.acosh_": [[96, "torch-tensor-acosh"]], "torch.nn.functional.conv3d": [[1497, "torch-nn-functional-conv3d"]], "torch.nn.functional.conv_transpose3d": [[1500, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1479, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.conv2d": [[1496, "torch-nn-functional-conv2d"]], "torch.nn.functional.affine_grid": [[1485, "torch-nn-functional-affine-grid"]], "Unflatten": [[1471, "unflatten"]], "torch.nn.functional.fractional_max_pool2d": [[1515, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.alpha_dropout": [[1486, "torch-nn-functional-alpha-dropout"]], "torch.nn.functional.ctc_loss": [[1504, "torch-nn-functional-ctc-loss"]], "Unfold": [[1472, "unfold"]], "torch.nn.functional.dropout2d": [[1507, "torch-nn-functional-dropout2d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1481, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.binary_cross_entropy": [[1492, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.avg_pool3d": [[1489, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.conv_transpose1d": [[1498, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.gaussian_nll_loss": [[1517, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.cross_entropy": [[1503, "torch-nn-functional-cross-entropy"]], "Upsample": [[1473, "upsample"]], "torch.nn.functional.feature_alpha_dropout": [[1513, "torch-nn-functional-feature-alpha-dropout"]], "ZeroPad1d": [[1476, "zeropad1d"]], "torch.nn.functional.celu": [[1494, "torch-nn-functional-celu"]], "torch.nn.functional.cosine_embedding_loss": [[1501, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.dropout3d": [[1508, "torch-nn-functional-dropout3d"]], "torch.nn.functional.avg_pool1d": [[1487, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.avg_pool2d": [[1488, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.cosine_similarity": [[1502, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.elu": [[1509, "torch-nn-functional-elu"]], "torch.nn.functional.adaptive_max_pool1d": [[1482, "torch-nn-functional-adaptive-max-pool1d"]], "ZeroPad2d": [[1477, "zeropad2d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1480, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.adaptive_max_pool3d": [[1484, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.conv_transpose2d": [[1499, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.bilinear": [[1491, "torch-nn-functional-bilinear"]], "torch.nn.functional.elu_": [[1510, "torch-nn-functional-elu"]], "torch.nn.functional.gelu": [[1518, "torch-nn-functional-gelu"]], "torch.nn.functional.fold": [[1514, "torch-nn-functional-fold"]], "torch.nn.functional.conv1d": [[1495, "torch-nn-functional-conv1d"]], "torch.nn.functional.batch_norm": [[1490, "torch-nn-functional-batch-norm"]], "torch.nn.functional.embedding": [[1511, "torch-nn-functional-embedding"]], "ZeroPad3d": [[1478, "zeropad3d"]], "UpsamplingBilinear2d": [[1474, "upsamplingbilinear2d"]], "torch.nn.functional.dropout1d": [[1506, "torch-nn-functional-dropout1d"]], "UpsamplingNearest2d": [[1475, "upsamplingnearest2d"]], "torch.nn.functional.adaptive_max_pool2d": [[1483, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1493, "torch-nn-functional-binary-cross-entropy-with-logits"]], "TripletMarginWithDistanceLoss": [[1470, "tripletmarginwithdistanceloss"]], "torch.nn.functional.embedding_bag": [[1512, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.fractional_max_pool3d": [[1516, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.dropout": [[1505, "torch-nn-functional-dropout"]], "torch.multiply": [[1312, "torch-multiply"]], "torch.manual_seed": [[1281, "torch-manual-seed"]], "torch.min": [[1291, "torch-min"]], "torch.mps.profiler.start": [[1303, "torch-mps-profiler-start"]], "torch.nan_to_num": [[1315, "torch-nan-to-num"]], "torch.narrow_copy": [[1321, "torch-narrow-copy"]], "torch.moveaxis": [[1295, "torch-moveaxis"]], "torch.mps.seed": [[1305, "torch-mps-seed"]], "torch.mps.empty_cache": [[1299, "torch-mps-empty-cache"]], "torch.meshgrid": [[1290, "torch-meshgrid"]], "torch.masked_select": [[1282, "torch-masked-select"]], "torch.narrow": [[1320, "torch-narrow"]], "torch.mps.set_rng_state": [[1307, "torch-mps-set-rng-state"]], "torch.mm": [[1293, "torch-mm"]], "torch.nanmedian": [[1317, "torch-nanmedian"]], "torch.logspace": [[1275, "torch-logspace"]], "torch.multinomial": [[1311, "torch-multinomial"]], "torch.logsumexp": [[1276, "torch-logsumexp"]], "torch.mode": [[1294, "torch-mode"]], "torch.mps.driver_allocated_memory": [[1298, "torch-mps-driver-allocated-memory"]], "torch.lu_unpack": [[1280, "torch-lu-unpack"]], "torch.mps.set_per_process_memory_fraction": [[1306, "torch-mps-set-per-process-memory-fraction"]], "torch.mul": [[1310, "torch-mul"]], "torch.maximum": [[1287, "torch-maximum"]], "torch.mps.synchronize": [[1308, "torch-mps-synchronize"]], "torch.nanmean": [[1316, "torch-nanmean"]], "torch.movedim": [[1296, "torch-movedim"]], "torch.mps.profiler.stop": [[1304, "torch-mps-profiler-stop"]], "torch.msort": [[1309, "torch-msort"]], "torch.matmul": [[1283, "torch-matmul"]], "torch.nansum": [[1319, "torch-nansum"]], "torch.lt": [[1277, "torch-lt"]], "torch.lu": [[1278, "torch-lu"]], "torch.lu_solve": [[1279, "torch-lu-solve"]], "torch.mv": [[1313, "torch-mv"]], "torch.max": [[1286, "torch-max"]], "torch.mvlgamma": [[1314, "torch-mvlgamma"]], "torch.median": [[1289, "torch-median"]], "torch.logit": [[1274, "torch-logit"]], "torch.matrix_exp": [[1284, "torch-matrix-exp"]], "torch.mps.current_allocated_memory": [[1297, "torch-mps-current-allocated-memory"]], "torch.matrix_power": [[1285, "torch-matrix-power"]], "torch.minimum": [[1292, "torch-minimum"]], "torch.mps.get_rng_state": [[1300, "torch-mps-get-rng-state"]], "torch.mps.profiler.profile": [[1302, "torch-mps-profiler-profile"]], "torch.mean": [[1288, "torch-mean"]], "torch.nanquantile": [[1318, "torch-nanquantile"]], "torch.mps.manual_seed": [[1301, "torch-mps-manual-seed"]], "torch.ne": [[1322, "torch-ne"]], "GaussianNLLLoss": [[1375, "gaussiannllloss"]], "LazyConvTranspose1d": [[1400, "lazyconvtranspose1d"]], "GLU": [[1372, "glu"]], "GRUCell": [[1374, "grucell"], [757, "grucell"]], "LazyBatchNorm2d": [[1395, "lazybatchnorm2d"]], "LazyInstanceNorm3d": [[1405, "lazyinstancenorm3d"]], "LogSigmoid": [[1410, "logsigmoid"]], "MaxPool2d": [[1415, "maxpool2d"]], "LogSoftmax": [[1411, "logsoftmax"]], "Mish": [[1420, "mish"]], "LocalResponseNorm": [[1409, "localresponsenorm"]], "LazyConv2d": [[1398, "lazyconv2d"]], "LazyBatchNorm1d": [[1394, "lazybatchnorm1d"]], "MaxUnpool3d": [[1419, "maxunpool3d"]], "LazyConvTranspose3d": [[1402, "lazyconvtranspose3d"]], "MaxUnpool2d": [[1418, "maxunpool2d"]], "LSTM": [[1391, "lstm"], [758, "lstm"], [730, "lstm"]], "LazyBatchNorm3d": [[1396, "lazybatchnorm3d"]], "Hardswish": [[1379, "hardswish"], [746, "hardswish"]], "LSTMCell": [[1392, "lstmcell"], [759, "lstmcell"]], "MarginRankingLoss": [[1413, "marginrankingloss"]], "MaxPool3d": [[1416, "maxpool3d"]], "HingeEmbeddingLoss": [[1381, "hingeembeddingloss"]], "GRU": [[1373, "gru"], [756, "gru"]], "InstanceNorm3d": [[1386, "instancenorm3d"], [749, "instancenorm3d"]], "LazyInstanceNorm2d": [[1404, "lazyinstancenorm2d"]], "LPPool1d": [[1389, "lppool1d"]], "LazyConv1d": [[1397, "lazyconv1d"]], "LazyConv3d": [[1399, "lazyconv3d"]], "Linear": [[1408, "linear"], [752, "linear"], [760, "linear"], [728, "linear"], [729, "linear"]], "LayerNorm": [[1393, "layernorm"], [750, "layernorm"]], "MaxUnpool1d": [[1417, "maxunpool1d"]], "GroupNorm": [[1376, "groupnorm"], [745, "groupnorm"]], "Hardtanh": [[1380, "hardtanh"]], "LPPool2d": [[1390, "lppool2d"]], "Hardshrink": [[1377, "hardshrink"]], "LazyInstanceNorm1d": [[1403, "lazyinstancenorm1d"]], "HuberLoss": [[1382, "huberloss"]], "KLDivLoss": [[1387, "kldivloss"]], "LeakyReLU": [[1407, "leakyrelu"], [751, "leakyrelu"]], "L1Loss": [[1388, "l1loss"]], "InstanceNorm1d": [[1384, "instancenorm1d"], [747, "instancenorm1d"]], "InstanceNorm2d": [[1385, "instancenorm2d"], [748, "instancenorm2d"]], "Hardsigmoid": [[1378, "hardsigmoid"]], "MaxPool1d": [[1414, "maxpool1d"]], "MSELoss": [[1412, "mseloss"]], "LazyConvTranspose2d": [[1401, "lazyconvtranspose2d"]], "LazyLinear": [[1406, "lazylinear"]], "PairwiseDistance": [[1430, "pairwisedistance"]], "Softshrink": [[1458, "softshrink"]], "SiLU": [[1450, "silu"]], "PixelUnshuffle": [[1434, "pixelunshuffle"]], "ReplicationPad1d": [[1445, "replicationpad1d"]], "SELU": [[1448, "selu"]], "RReLU": [[1439, "rrelu"]], "ReLU": [[1440, "relu"]], "MultiMarginLoss": [[1426, "multimarginloss"]], "ReflectionPad2d": [[1443, "reflectionpad2d"]], "PReLU": [[1429, "prelu"]], "SmoothL1Loss": [[1452, "smoothl1loss"]], "MultiheadAttention": [[1427, "multiheadattention"], [731, "multiheadattention"]], "ParameterDict": [[1431, "parameterdict"]], "Sequential": [[1449, "sequential"]], "Threshold": [[1463, "threshold"]], "Module": [[1421, "module"]], "ModuleDict": [[1422, "moduledict"]], "TransformerEncoderLayer": [[1468, "transformerencoderlayer"]], "ReLU6": [[1441, "relu6"], [754, "relu6"]], "ReplicationPad3d": [[1447, "replicationpad3d"]], "TransformerDecoderLayer": [[1466, "transformerdecoderlayer"]], "MultiLabelSoftMarginLoss": [[1425, "multilabelsoftmarginloss"]], "ReplicationPad2d": [[1446, "replicationpad2d"]], "Tanh": [[1461, "tanh"]], "Transformer": [[1464, "transformer"], [27, "transformer"]], "RNNBase": [[1437, "rnnbase"]], "ReflectionPad3d": [[1444, "reflectionpad3d"]], "Sigmoid": [[1451, "sigmoid"], [755, "sigmoid"]], "Softsign": [[1459, "softsign"]], "RNNCell": [[1438, "rnncell"], [761, "rnncell"]], "Tanhshrink": [[1462, "tanhshrink"]], "ParameterList": [[1432, "parameterlist"]], "TripletMarginLoss": [[1469, "tripletmarginloss"]], "Softmax": [[1454, "softmax"]], "TransformerEncoder": [[1467, "transformerencoder"]], "PoissonNLLLoss": [[1435, "poissonnllloss"]], "RNN": [[1436, "rnn"]], "SoftMarginLoss": [[1453, "softmarginloss"]], "NLLLoss": [[1428, "nllloss"]], "Softplus": [[1457, "softplus"]], "TransformerDecoder": [[1465, "transformerdecoder"]], "Softmax2d": [[1455, "softmax2d"]], "MultiLabelMarginLoss": [[1424, "multilabelmarginloss"]], "ReflectionPad1d": [[1442, "reflectionpad1d"]], "PixelShuffle": [[1433, "pixelshuffle"]], "ModuleList": [[1423, "modulelist"]], "Softmin": [[1456, "softmin"]], "SyncBatchNorm": [[1460, "syncbatchnorm"]], "AvgPool1d": [[1334, "avgpool1d"]], "AdaptiveLogSoftmaxWithLoss": [[1329, "adaptivelogsoftmaxwithloss"]], "BatchNorm3d": [[1341, "batchnorm3d"], [733, "batchnorm3d"]], "CELU": [[1343, "celu"]], "ConstantPad1d": [[1346, "constantpad1d"]], "AvgPool2d": [[1335, "avgpool2d"]], "Conv2d": [[1350, "conv2d"], [735, "conv2d"], [726, "conv2d"]], "EmbeddingBag": [[1365, "embeddingbag"], [742, "embeddingbag"]], "AdaptiveMaxPool3d": [[1332, "adaptivemaxpool3d"]], "Conv1d": [[1349, "conv1d"], [734, "conv1d"]], "Embedding": [[1364, "embedding"], [741, "embedding"]], "torch.negative": [[1324, "torch-negative"]], "ChannelShuffle": [[1345, "channelshuffle"]], "CosineEmbeddingLoss": [[1355, "cosineembeddingloss"]], "Dropout": [[1359, "dropout"]], "ConstantPad3d": [[1348, "constantpad3d"]], "AdaptiveMaxPool2d": [[1331, "adaptivemaxpool2d"]], "BCELoss": [[1337, "bceloss"]], "Conv3d": [[1351, "conv3d"], [736, "conv3d"], [727, "conv3d"]], "Dropout3d": [[1362, "dropout3d"]], "BCEWithLogitsLoss": [[1338, "bcewithlogitsloss"]], "CrossEntropyLoss": [[1357, "crossentropyloss"]], "AvgPool3d": [[1336, "avgpool3d"]], "Flatten": [[1367, "flatten"]], "torch.nextafter": [[1325, "torch-nextafter"]], "CTCLoss": [[1344, "ctcloss"]], "CosineSimilarity": [[1356, "cosinesimilarity"]], "AdaptiveMaxPool1d": [[1330, "adaptivemaxpool1d"]], "AdaptiveAvgPool2d": [[1327, "adaptiveavgpool2d"]], "ConvTranspose3d": [[1354, "convtranspose3d"], [739, "convtranspose3d"]], "ConvTranspose1d": [[1352, "convtranspose1d"], [737, "convtranspose1d"]], "ConvTranspose2d": [[1353, "convtranspose2d"], [738, "convtranspose2d"]], "AlphaDropout": [[1333, "alphadropout"]], "torch.neg": [[1323, "torch-neg"]], "FractionalMaxPool3d": [[1370, "fractionalmaxpool3d"]], "GELU": [[1371, "gelu"]], "BatchNorm1d": [[1339, "batchnorm1d"]], "BatchNorm2d": [[1340, "batchnorm2d"], [732, "batchnorm2d"]], "ELU": [[1363, "elu"], [740, "elu"]], "Dropout1d": [[1360, "dropout1d"]], "Dropout2d": [[1361, "dropout2d"]], "Fold": [[1368, "fold"]], "AdaptiveAvgPool3d": [[1328, "adaptiveavgpool3d"]], "FractionalMaxPool2d": [[1369, "fractionalmaxpool2d"]], "Bilinear": [[1342, "bilinear"]], "ConstantPad2d": [[1347, "constantpad2d"]], "AdaptiveAvgPool1d": [[1326, "adaptiveavgpool1d"]], "FeatureAlphaDropout": [[1366, "featurealphadropout"]], "DataParallel": [[1358, "dataparallel"]], "torch.linalg.solve_triangular": [[1251, "torch-linalg-solve-triangular"]], "torch.log10": [[1263, "torch-log10"]], "torch.linalg.tensorinv": [[1254, "torch-linalg-tensorinv"]], "torch.linalg.svd": [[1252, "torch-linalg-svd"]], "torch.linalg.matrix_rank": [[1243, "torch-linalg-matrix-rank"]], "torch.lobpcg": [[1261, "torch-lobpcg"]], "torch.linalg.eigh": [[1225, "torch-linalg-eigh"]], "torch.linalg.eigvalsh": [[1227, "torch-linalg-eigvalsh"]], "torch.linalg.eigvals": [[1226, "torch-linalg-eigvals"]], "torch.logcumsumexp": [[1268, "torch-logcumsumexp"]], "torch.linalg.lu": [[1235, "torch-linalg-lu"]], "torch.linalg.ldl_factor": [[1231, "torch-linalg-ldl-factor"]], "torch.linalg.ldl_solve": [[1233, "torch-linalg-ldl-solve"]], "torch.linalg.multi_dot": [[1244, "torch-linalg-multi-dot"]], "torch.logical_and": [[1270, "torch-logical-and"]], "torch.linalg.inv": [[1229, "torch-linalg-inv"]], "torch.linalg.qr": [[1247, "torch-linalg-qr"]], "torch.log": [[1262, "torch-log"]], "torch.logdet": [[1269, "torch-logdet"]], "torch.linalg.vecdot": [[1257, "torch-linalg-vecdot"]], "torch.linalg.matrix_power": [[1242, "torch-linalg-matrix-power"]], "torch.linalg.svdvals": [[1253, "torch-linalg-svdvals"]], "torch.logaddexp2": [[1267, "torch-logaddexp2"]], "torch.linalg.ldl_factor_ex": [[1232, "torch-linalg-ldl-factor-ex"]], "torch.linalg.slogdet": [[1248, "torch-linalg-slogdet"]], "torch.linalg.norm": [[1245, "torch-linalg-norm"]], "torch.linalg.pinv": [[1246, "torch-linalg-pinv"]], "torch.log1p": [[1264, "torch-log1p"]], "torch.logical_not": [[1271, "torch-logical-not"]], "torch.linalg.householder_product": [[1228, "torch-linalg-householder-product"]], "torch.linalg.matmul": [[1239, "torch-linalg-matmul"]], "torch.linalg.lu_factor_ex": [[1237, "torch-linalg-lu-factor-ex"]], "torch.linalg.tensorsolve": [[1255, "torch-linalg-tensorsolve"]], "torch.log2": [[1265, "torch-log2"]], "torch.linalg.solve_ex": [[1250, "torch-linalg-solve-ex"]], "torch.linalg.vector_norm": [[1258, "torch-linalg-vector-norm"]], "torch.linalg.lstsq": [[1234, "torch-linalg-lstsq"]], "torch.linalg.solve": [[1249, "torch-linalg-solve"]], "torch.linspace": [[1259, "torch-linspace"]], "torch.linalg.inv_ex": [[1230, "torch-linalg-inv-ex"]], "torch.load": [[1260, "torch-load"]], "torch.logical_xor": [[1273, "torch-logical-xor"]], "torch.logaddexp": [[1266, "torch-logaddexp"]], "torch.logical_or": [[1272, "torch-logical-or"]], "torch.linalg.matrix_exp": [[1240, "torch-linalg-matrix-exp"]], "torch.linalg.matrix_norm": [[1241, "torch-linalg-matrix-norm"]], "torch.linalg.vander": [[1256, "torch-linalg-vander"]], "torch.linalg.lu_solve": [[1238, "torch-linalg-lu-solve"]], "torch.linalg.lu_factor": [[1236, "torch-linalg-lu-factor"]], "torch.index_add": [[1160, "torch-index-add"]], "torch.func.replace_all_batch_norm_modules_": [[1127, "torch-func-replace-all-batch-norm-modules"]], "torch.histogram": [[1150, "torch-histogram"]], "torch.gcd": [[1132, "torch-gcd"]], "torch.hspmm": [[1153, "torch-hspmm"]], "torch.heaviside": [[1148, "torch-heaviside"]], "torch.igammac": [[1158, "torch-igammac"]], "torch.get_rng_state": [[1141, "torch-get-rng-state"]], "torch.ger": [[1135, "torch-ger"]], "torch.index_select": [[1163, "torch-index-select"]], "torch.is_storage": [[1175, "torch-is-storage"]], "torch.hstack": [[1154, "torch-hstack"]], "torch.is_complex": [[1168, "torch-is-complex"]], "torch.hsplit": [[1152, "torch-hsplit"]], "inference_mode": [[1164, "inference-mode"]], "torch.get_deterministic_debug_mode": [[1137, "torch-get-deterministic-debug-mode"]], "torch.i0": [[1156, "torch-i0"]], "torch.hamming_window": [[1146, "torch-hamming-window"]], "torch.is_conj": [[1169, "torch-is-conj"]], "torch.index_copy": [[1161, "torch-index-copy"]], "torch.histc": [[1149, "torch-histc"]], "torch.initial_seed": [[1165, "torch-initial-seed"]], "torch.igamma": [[1157, "torch-igamma"]], "torch.gt": [[1145, "torch-gt"]], "torch.hann_window": [[1147, "torch-hann-window"]], "torch.func.vmap": [[1130, "torch-func-vmap"]], "torch.get_num_threads": [[1140, "torch-get-num-threads"]], "torch.gradient": [[1142, "torch-gradient"]], "torch.histogramdd": [[1151, "torch-histogramdd"]], "torch.inner": [[1166, "torch-inner"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1170, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.index_reduce": [[1162, "torch-index-reduce"]], "torch.greater": [[1143, "torch-greater"]], "torch.is_floating_point": [[1171, "torch-is-floating-point"]], "torch.geqrf": [[1134, "torch-geqrf"]], "torch.is_inference_mode_enabled": [[1173, "torch-is-inference-mode-enabled"]], "torch.imag": [[1159, "torch-imag"]], "torch.greater_equal": [[1144, "torch-greater-equal"]], "torch.func.stack_module_state": [[1128, "torch-func-stack-module-state"]], "torch.gather": [[1131, "torch-gather"]], "torch.is_nonzero": [[1174, "torch-is-nonzero"]], "torch.ge": [[1133, "torch-ge"]], "torch.get_float32_matmul_precision": [[1138, "torch-get-float32-matmul-precision"]], "torch.inverse": [[1167, "torch-inverse"]], "torch.is_grad_enabled": [[1172, "torch-is-grad-enabled"]], "torch.hypot": [[1155, "torch-hypot"]], "torch.func.vjp": [[1129, "torch-func-vjp"]], "torch.get_default_dtype": [[1136, "torch-get-default-dtype"]], "torch.get_num_interop_threads": [[1139, "torch-get-num-interop-threads"]], "torch.is_tensor": [[1176, "torch-is-tensor"]], "torch.jit.fork": [[1192, "torch-jit-fork"]], "torch.ldexp": [[1212, "torch-ldexp"]], "torch.istft": [[1186, "torch-istft"]], "ScriptModule": [[1189, "scriptmodule"]], "strict_fusion": [[1203, "strict-fusion"]], "torch.jit.wait": [[1207, "torch-jit-wait"]], "torch.lgamma": [[1217, "torch-lgamma"]], "torch.linalg.cond": [[1220, "torch-linalg-cond"]], "torch.jit.script": [[1200, "torch-jit-script"]], "torch.less": [[1215, "torch-less"]], "torch.le": [[1213, "torch-le"]], "torch.linalg.diagonal": [[1223, "torch-linalg-diagonal"]], "torch.linalg.eig": [[1224, "torch-linalg-eig"]], "torch.jit.trace_module": [[1205, "torch-jit-trace-module"]], "torch.kaiser_window": [[1208, "torch-kaiser-window"]], "torch.linalg.cross": [[1221, "torch-linalg-cross"]], "Attribute": [[1187, "attribute"]], "torch.jit.trace": [[1204, "torch-jit-trace"]], "torch.is_warn_always_enabled": [[1177, "torch-is-warn-always-enabled"]], "torch.lerp": [[1214, "torch-lerp"]], "torch.isinf": [[1181, "torch-isinf"]], "torch.isclose": [[1178, "torch-isclose"]], "torch.jit.set_fusion_strategy": [[1202, "torch-jit-set-fusion-strategy"]], "torch.jit.load": [[1196, "torch-jit-load"]], "torch.jit.optimize_for_inference": [[1198, "torch-jit-optimize-for-inference"]], "torch.jit.onednn_fusion_enabled": [[1197, "torch-jit-onednn-fusion-enabled"]], "ScriptFunction": [[1188, "scriptfunction"]], "torch.jit.freeze": [[1193, "torch-jit-freeze"]], "torch.isreal": [[1185, "torch-isreal"]], "torch.kthvalue": [[1210, "torch-kthvalue"]], "torch.isposinf": [[1184, "torch-isposinf"]], "torch.isfinite": [[1179, "torch-isfinite"]], "torch.isin": [[1180, "torch-isin"]], "torch.jit.ignore": [[1194, "torch-jit-ignore"]], "torch.linalg.cholesky_ex": [[1219, "torch-linalg-cholesky-ex"]], "torch.jit.unused": [[1206, "torch-jit-unused"]], "torch.jit.annotate": [[1190, "torch-jit-annotate"]], "torch.isneginf": [[1183, "torch-isneginf"]], "torch.less_equal": [[1216, "torch-less-equal"]], "torch.linalg.det": [[1222, "torch-linalg-det"]], "torch.isnan": [[1182, "torch-isnan"]], "torch.linalg.cholesky": [[1218, "torch-linalg-cholesky"]], "torch.lcm": [[1211, "torch-lcm"]], "torch.jit.isinstance": [[1195, "torch-jit-isinstance"]], "torch.kron": [[1209, "torch-kron"]], "torch.jit.save": [[1199, "torch-jit-save"]], "torch.jit.script_if_tracing": [[1201, "torch-jit-script-if-tracing"]], "torch.jit.enable_onednn_fusion": [[1191, "torch-jit-enable-onednn-fusion"]], "torch.fft.ifftshift": [[1089, "torch-fft-ifftshift"]], "torch.fft.rfftfreq": [[1098, "torch-fft-rfftfreq"]], "torch.from_numpy": [[1114, "torch-from-numpy"]], "torch.flatten": [[1101, "torch-flatten"]], "torch.fft.rfftn": [[1099, "torch-fft-rfftn"]], "torch.fft.fft2": [[1079, "torch-fft-fft2"]], "torch.fft.hfft": [[1083, "torch-fft-hfft"]], "torch.func.hessian": [[1122, "torch-func-hessian"]], "torch.fft.rfft2": [[1097, "torch-fft-rfft2"]], "torch.frac": [[1111, "torch-frac"]], "torch.func.jacrev": [[1124, "torch-func-jacrev"]], "torch.func.functional_call": [[1118, "torch-func-functional-call"]], "torch.func.linearize": [[1126, "torch-func-linearize"]], "torch.fft.fft": [[1078, "torch-fft-fft"]], "torch.float_power": [[1105, "torch-float-power"]], "torch.full": [[1116, "torch-full"]], "torch.fix": [[1100, "torch-fix"]], "torch.fft.fftshift": [[1082, "torch-fft-fftshift"]], "torch.fft.ihfft": [[1090, "torch-fft-ihfft"]], "torch.fft.hfftn": [[1085, "torch-fft-hfftn"]], "torch.floor": [[1106, "torch-floor"]], "torch.fmod": [[1110, "torch-fmod"]], "torch.fft.ifft": [[1086, "torch-fft-ifft"]], "torch.fft.ihfftn": [[1092, "torch-fft-ihfftn"]], "torch.fliplr": [[1103, "torch-fliplr"]], "torch.func.grad_and_value": [[1121, "torch-func-grad-and-value"]], "torch.flipud": [[1104, "torch-flipud"]], "torch.fft.ifft2": [[1087, "torch-fft-ifft2"]], "torch.fft.hfft2": [[1084, "torch-fft-hfft2"]], "torch.fmin": [[1109, "torch-fmin"]], "torch.from_dlpack": [[1113, "torch-from-dlpack"]], "torch.fft.fftfreq": [[1080, "torch-fft-fftfreq"]], "torch.fft.rfft": [[1096, "torch-fft-rfft"]], "torch.fft.irfftn": [[1095, "torch-fft-irfftn"]], "torch.func.functionalize": [[1119, "torch-func-functionalize"]], "torch.floor_divide": [[1107, "torch-floor-divide"]], "torch.fft.fftn": [[1081, "torch-fft-fftn"]], "torch.fft.ihfft2": [[1091, "torch-fft-ihfft2"]], "torch.frombuffer": [[1115, "torch-frombuffer"]], "torch.func.grad": [[1120, "torch-func-grad"]], "torch.flip": [[1102, "torch-flip"]], "torch.fmax": [[1108, "torch-fmax"]], "torch.fft.irfft2": [[1094, "torch-fft-irfft2"]], "torch.func.jacfwd": [[1123, "torch-func-jacfwd"]], "torch.func.jvp": [[1125, "torch-func-jvp"]], "torch.frexp": [[1112, "torch-frexp"]], "torch.fft.irfft": [[1093, "torch-fft-irfft"]], "torch.fft.ifftn": [[1088, "torch-fft-ifftn"]], "torch.full_like": [[1117, "torch-full-like"]], "torch.cuda.set_rng_state": [[1033, "torch-cuda-set-rng-state"]], "torch.dist": [[1056, "torch-dist"]], "torch.dot": [[1059, "torch-dot"]], "torch.cuda.stream": [[1037, "torch-cuda-stream"]], "enable_grad": [[1066, "enable-grad"]], "torch.cuda.set_per_process_memory_fraction": [[1032, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.seed": [[1029, "torch-cuda-seed"]], "torch.eye": [[1075, "torch-eye"]], "torch.erf": [[1069, "torch-erf"]], "torch.empty": [[1063, "torch-empty"]], "torch.cuda.set_stream": [[1035, "torch-cuda-set-stream"]], "torch.equal": [[1068, "torch-equal"]], "torch.cummin": [[1042, "torch-cummin"]], "torch.eq": [[1067, "torch-eq"]], "torch.dstack": [[1061, "torch-dstack"]], "torch.einsum": [[1062, "torch-einsum"]], "torch.dsplit": [[1060, "torch-dsplit"]], "torch.cuda.set_device": [[1031, "torch-cuda-set-device"]], "torch.exp2": [[1073, "torch-exp2"]], "torch.cummax": [[1041, "torch-cummax"]], "torch.det": [[1048, "torch-det"]], "torch.cuda.utilization": [[1040, "torch-cuda-utilization"]], "torch.digamma": [[1055, "torch-digamma"]], "torch.empty_strided": [[1065, "torch-empty-strided"]], "torch.cuda.seed_all": [[1030, "torch-cuda-seed-all"]], "torch.exp": [[1072, "torch-exp"]], "torch.divide": [[1058, "torch-divide"]], "torch.cuda.set_rng_state_all": [[1034, "torch-cuda-set-rng-state-all"]], "torch.erfc": [[1070, "torch-erfc"]], "torch.cuda.set_sync_debug_mode": [[1036, "torch-cuda-set-sync-debug-mode"]], "torch.expm1": [[1074, "torch-expm1"]], "torch.fake_quantize_per_channel_affine": [[1076, "torch-fake-quantize-per-channel-affine"]], "torch.dequantize": [[1047, "torch-dequantize"]], "torch.diag_embed": [[1050, "torch-diag-embed"]], "torch.diag": [[1049, "torch-diag"]], "torch.cumulative_trapezoid": [[1045, "torch-cumulative-trapezoid"]], "torch.diff": [[1054, "torch-diff"]], "torch.div": [[1057, "torch-div"]], "torch.diagflat": [[1051, "torch-diagflat"]], "torch.deg2rad": [[1046, "torch-deg2rad"]], "torch.diagonal_scatter": [[1053, "torch-diagonal-scatter"]], "torch.erfinv": [[1071, "torch-erfinv"]], "torch.empty_like": [[1064, "torch-empty-like"]], "torch.fake_quantize_per_tensor_affine": [[1077, "torch-fake-quantize-per-tensor-affine"]], "torch.cumsum": [[1044, "torch-cumsum"]], "torch.cuda.temperature": [[1039, "torch-cuda-temperature"]], "torch.diagonal": [[1052, "torch-diagonal"]], "torch.cumprod": [[1043, "torch-cumprod"]], "torch.cuda.synchronize": [[1038, "torch-cuda-synchronize"]], "Type Info": [[1928, "type-info"]], "torch.finfo": [[1928, "torch-finfo"]], "torch.iinfo": [[1928, "torch-iinfo"]], "torch.utils.tensorboard": [[1921, "module-torch.utils.tensorboard"]], "torch.signal": [[1915, "module-torch.signal"]], "torch.signal.windows": [[1915, "module-torch.signal.windows"]], "torch": [[1924, "module-torch"]], "Tensors": [[1924, "tensors"]], "Creation Ops": [[1924, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1924, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1924, "generators"]], "Random sampling": [[1924, "random-sampling"]], "In-place random sampling": [[1924, "in-place-random-sampling"]], "Quasi-random sampling": [[1924, "quasi-random-sampling"]], "Serialization": [[1924, "serialization"], [29, "serialization"]], "Parallelism": [[1924, "parallelism"]], "Locally disabling gradient computation": [[1924, "locally-disabling-gradient-computation"], [2, "locally-disabling-gradient-computation"], [1882, "locally-disabling-gradient-computation"]], "Math operations": [[1924, "math-operations"]], "Pointwise Ops": [[1924, "pointwise-ops"]], "Reduction Ops": [[1924, "reduction-ops"]], "Comparison Ops": [[1924, "comparison-ops"]], "Spectral Ops": [[1924, "spectral-ops"]], "Other Operations": [[1924, "other-operations"]], "BLAS and LAPACK Operations": [[1924, "blas-and-lapack-operations"]], "Foreach Operations": [[1924, "foreach-operations"]], "Utilities": [[1924, "utilities"], [1878, "module-torch.nn.utils"]], "Symbolic Numbers": [[1924, "symbolic-numbers"]], "Optimizations": [[1924, "optimizations"], [22, "optimizations"]], "Operator Tags": [[1924, "operator-tags"]], "Engine Configuration": [[1924, "engine-configuration"]], "torch.ao.ns._numeric_suite": [[1925, "torch-ao-ns-numeric-suite"]], "Tensor Views": [[1920, "tensor-views"]], "Remote Reference Protocol": [[1914, "remote-reference-protocol"]], "Background": [[1914, "background"], [1913, "background"]], "Assumptions": [[1914, "assumptions"]], "RRef Lifetime": [[1914, "rref-lifetime"]], "Design Reasoning": [[1914, "design-reasoning"]], "Implementation": [[1914, "implementation"], [1886, "implementation"]], "Protocol Scenarios": [[1914, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1914, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1914, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1914, "owner-share-rref-with-user"]], "User Share RRef with User": [[1914, "user-share-rref-with-user"]], "torch.sparse": [[1916, "torch-sparse"]], "Why and when to use sparsity": [[1916, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1916, "functionality-overview"]], "Operator overview": [[1916, "operator-overview"]], "Sparse COO tensors": [[1916, "sparse-coo-tensors"]], "Construction": [[1916, "construction"], [1877, "construction"]], "Sparse hybrid COO tensors": [[1916, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1916, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1916, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1916, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1916, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1916, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1916, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1916, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1916, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1916, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1916, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1916, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1916, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1916, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1916, "construction-of-sparse-compressed-tensors"]], "Supported operations": [[1916, "supported-operations"], [1877, "supported-operations"]], "Linear Algebra operations": [[1916, "linear-algebra-operations"]], "Tensor methods and sparse": [[1916, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1916, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1916, "other-functions"]], "Unary functions": [[1916, "unary-functions"]], "torch.ao.ns._numeric_suite_fx": [[1926, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1926, "torch-ao-ns-fx-utils"]], "torch.Storage": [[1918, "torch-storage"]], "torch.testing": [[1923, "module-torch.testing"]], "Distributed Autograd Design": [[1913, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1913, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1913, "distributed-autograd-context"]], "Distributed Backward Pass": [[1913, "distributed-backward-pass"]], "Computing dependencies": [[1913, "computing-dependencies"]], "FAST mode algorithm": [[1913, "fast-mode-algorithm"]], "SMART mode algorithm": [[1913, "smart-mode-algorithm"]], "Distributed Optimizer": [[1913, "distributed-optimizer"], [1912, "distributed-optimizer"]], "Simple end to end example": [[1913, "simple-end-to-end-example"]], "torch.overrides": [[1927, "torch-overrides"]], "Tensor Attributes": [[1919, "tensor-attributes"]], "torch.dtype": [[1919, "torch-dtype"]], "torch.device": [[1919, "torch-device"]], "torch.layout": [[1919, "torch-layout"]], "torch.memory_format": [[1919, "torch-memory-format"]], "torch.random": [[1911, "module-torch.random"]], "Distributed RPC Framework": [[1912, "distributed-rpc-framework"]], "Basics": [[1912, "basics"], [40, "basics"]], "RPC": [[1912, "rpc"]], "Backends": [[1912, "backends"], [40, "backends"]], "TensorPipe Backend": [[1912, "tensorpipe-backend"]], "RRef": [[1912, "rref"]], "More Information about RRef": [[1912, null]], "RemoteModule": [[1912, "remotemodule"]], "Distributed Autograd Framework": [[1912, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1912, null]], "Design Notes": [[1912, "design-notes"], [1862, "design-notes"]], "Tutorials": [[1912, "tutorials"], [8, "tutorials"], [1905, "tutorials"], [1904, "tutorials"]], "torch.Tensor": [[1922, "torch-tensor"]], "Data types": [[1922, "data-types"]], "Initializing and basic operations": [[1922, "initializing-and-basic-operations"]], "Tensor class reference": [[1922, "tensor-class-reference"]], "torch.special": [[1917, "torch-special"]], "torch.cuda.graph_pool_handle": [[998, "torch-cuda-graph-pool-handle"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1006, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.memory_cached": [[1016, "torch-cuda-memory-cached"]], "torch.cuda.get_sync_debug_mode": [[996, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.default_stream": [[983, "torch-cuda-default-stream"]], "torch.cuda.current_stream": [[982, "torch-cuda-current-stream"]], "torch.cuda.nvtx.range_pop": [[1023, "torch-cuda-nvtx-range-pop"]], "torch.cuda.get_device_name": [[991, "torch-cuda-get-device-name"]], "torch.cuda.reset_max_memory_allocated": [[1026, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.current_blas_handle": [[980, "torch-cuda-current-blas-handle"]], "graph": [[997, "graph"]], "torch.cuda.jiterator._create_jit_fn": [[1005, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.manual_seed": [[1009, "torch-cuda-manual-seed"]], "torch.cuda.max_memory_allocated": [[1011, "torch-cuda-max-memory-allocated"]], "torch.cuda.memory_usage": [[1021, "torch-cuda-memory-usage"]], "torch.cuda.get_rng_state_all": [[995, "torch-cuda-get-rng-state-all"]], "device": [[984, "device"]], "torch.cuda.memory_reserved": [[1017, "torch-cuda-memory-reserved"]], "torch.cuda.get_device_capability": [[990, "torch-cuda-get-device-capability"]], "torch.cuda.is_available": [[1002, "torch-cuda-is-available"]], "torch.cuda.power_draw": [[1025, "torch-cuda-power-draw"]], "torch.cuda.list_gpu_processes": [[1007, "torch-cuda-list-gpu-processes"]], "torch.cuda.device_count": [[985, "torch-cuda-device-count"]], "torch.cuda.reset_max_memory_cached": [[1027, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.get_gencode_flags": [[993, "torch-cuda-get-gencode-flags"]], "torch.cuda.manual_seed_all": [[1010, "torch-cuda-manual-seed-all"]], "torch.cuda.memory_summary": [[1020, "torch-cuda-memory-summary"]], "torch.cuda.init": [[999, "torch-cuda-init"]], "torch.cuda.memory_snapshot": [[1018, "torch-cuda-memory-snapshot"]], "torch.cuda.reset_peak_memory_stats": [[1028, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.max_memory_cached": [[1012, "torch-cuda-max-memory-cached"]], "torch.cuda.memory_stats": [[1019, "torch-cuda-memory-stats"]], "torch.cuda.get_arch_list": [[989, "torch-cuda-get-arch-list"]], "torch.cuda.nvtx.range_push": [[1024, "torch-cuda-nvtx-range-push"]], "torch.cuda.ipc_collect": [[1001, "torch-cuda-ipc-collect"]], "torch.cuda.initial_seed": [[1000, "torch-cuda-initial-seed"]], "torch.cuda.current_device": [[981, "torch-cuda-current-device"]], "torch.cuda.make_graphed_callables": [[1008, "torch-cuda-make-graphed-callables"]], "torch.cuda.is_initialized": [[1004, "torch-cuda-is-initialized"]], "torch.cuda.nvtx.mark": [[1022, "torch-cuda-nvtx-mark"]], "device_of": [[986, "device-of"]], "torch.cuda.max_memory_reserved": [[1013, "torch-cuda-max-memory-reserved"]], "torch.cuda.is_current_stream_capturing": [[1003, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.get_allocator_backend": [[988, "torch-cuda-get-allocator-backend"]], "torch.cuda.get_device_properties": [[992, "torch-cuda-get-device-properties"]], "torch.cuda.get_rng_state": [[994, "torch-cuda-get-rng-state"]], "torch.cuda.empty_cache": [[987, "torch-cuda-empty-cache"]], "torch.cuda.mem_get_info": [[1014, "torch-cuda-mem-get-info"]], "torch.cuda.memory_allocated": [[1015, "torch-cuda-memory-allocated"]], "torch.copysign": [[956, "torch-copysign"]], "torch.column_stack": [[947, "torch-column-stack"]], "torch.cholesky_inverse": [[941, "torch-cholesky-inverse"]], "torch.cuda.comm.scatter": [[979, "torch-cuda-comm-scatter"]], "torch.clone": [[946, "torch-clone"]], "torch.conj": [[954, "torch-conj"]], "torch.cholesky": [[940, "torch-cholesky"]], "torch.cuda.comm.reduce_add": [[978, "torch-cuda-comm-reduce-add"]], "torch.chain_matmul": [[939, "torch-chain-matmul"]], "torch.compiled_with_cxx11_abi": [[950, "torch-compiled-with-cxx11-abi"]], "torch.cartesian_prod": [[935, "torch-cartesian-prod"]], "torch.clip": [[945, "torch-clip"]], "torch.cuda.clock_rate": [[974, "torch-cuda-clock-rate"]], "torch.cos": [[958, "torch-cos"]], "torch.complex": [[951, "torch-complex"]], "StreamContext": [[969, "streamcontext"]], "torch.cuda.comm.gather": [[977, "torch-cuda-comm-gather"]], "torch.count_nonzero": [[960, "torch-count-nonzero"]], "Event": [[965, "event"]], "torch.cuda.comm.broadcast": [[975, "torch-cuda-comm-broadcast"]], "torch.can_cast": [[934, "torch-can-cast"]], "torch.cat": [[936, "torch-cat"]], "torch.clamp": [[944, "torch-clamp"]], "torch.cov": [[961, "torch-cov"]], "torch.combinations": [[948, "torch-combinations"]], "Stream": [[968, "stream"]], "torch.cuda.change_current_allocator": [[973, "torch-cuda-change-current-allocator"]], "torch.corrcoef": [[957, "torch-corrcoef"]], "torch.ceil": [[938, "torch-ceil"]], "torch.cholesky_solve": [[942, "torch-cholesky-solve"]], "ExternalStream": [[966, "externalstream"]], "torch.cuda.OutOfMemoryError": [[967, "torch-cuda-outofmemoryerror"]], "torch.cuda.caching_allocator_alloc": [[970, "torch-cuda-caching-allocator-alloc"]], "torch.cuda.comm.broadcast_coalesced": [[976, "torch-cuda-comm-broadcast-coalesced"]], "torch.cdist": [[937, "torch-cdist"]], "torch.broadcast_tensors": [[931, "torch-broadcast-tensors"]], "torch.bucketize": [[933, "torch-bucketize"]], "torch.cuda.caching_allocator_delete": [[971, "torch-cuda-caching-allocator-delete"]], "torch.conj_physical": [[955, "torch-conj-physical"]], "torch.concat": [[952, "torch-concat"]], "torch.broadcast_to": [[932, "torch-broadcast-to"]], "CUDAPluggableAllocator": [[964, "cudapluggableallocator"]], "CUDAGraph": [[963, "cudagraph"]], "torch.chunk": [[943, "torch-chunk"]], "torch.concatenate": [[953, "torch-concatenate"]], "torch.cuda.can_device_access_peer": [[972, "torch-cuda-can-device-access-peer"]], "torch.cross": [[962, "torch-cross"]], "torch.cosh": [[959, "torch-cosh"]], "torch.utils.data": [[37, "module-torch.utils.data"]], "Dataset Types": [[37, "dataset-types"]], "Map-style datasets": [[37, "map-style-datasets"]], "Iterable-style datasets": [[37, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[37, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[37, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[37, "automatic-batching-default"]], "Disable automatic batching": [[37, "disable-automatic-batching"]], "Working with collate_fn": [[37, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[37, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[37, "single-process-data-loading-default"]], "Multi-process data loading": [[37, "multi-process-data-loading"]], "Platform-specific behaviors": [[37, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[37, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[37, "memory-pinning"]], "torch.func interaction with torch.compile": [[26, "torch-func-interaction-with-torch-compile"]], "Applying a torch.func transform to a torch.compile\u2019d function": [[26, "applying-a-torch-func-transform-to-a-torch-compile-d-function"]], "Doesn\u2019t work (PT 2.0): calling a torch.func transform inside of a torch.compile\u2019ed function": [[26, "doesn-t-work-pt-2-0-calling-a-torch-func-transform-inside-of-a-torch-compile-ed-function"]], "Workaround: use torch._dynamo.allow_in_graph": [[26, "workaround-use-torch-dynamo-allow-in-graph"]], "PyTorch 2.0 Troubleshooting": [[28, "pytorch-2-0-troubleshooting"]], "Title": [[28, "id1"]], "Diagnosing Runtime Errors": [[28, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[28, "torchdynamo-errors"]], "TorchInductor Errors": [[28, "torchinductor-errors"], [17, "torchinductor-errors"]], "Minifying TorchInductor Errors": [[28, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[28, "minifying-backend-compiler-errors"]], "Performance Profiling": [[28, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[28, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[28, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[28, "graph-breaks"], [17, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[28, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[28, "excessive-recompilation"], [17, "excessive-recompilation"]], "Accuracy Debugging": [[28, "accuracy-debugging"]], "File an Issue": [[28, "file-an-issue"]], "Complex Numbers": [[29, "complex-numbers"]], "Creating Complex Tensors": [[29, "creating-complex-tensors"]], "Transition from the old representation": [[29, "transition-from-the-old-representation"]], "Accessing real and imag": [[29, "accessing-real-and-imag"]], "Angle and abs": [[29, "angle-and-abs"]], "Linear Algebra": [[29, "linear-algebra"]], "Autograd": [[29, "autograd"]], "CUDA Stream Sanitizer": [[34, "cuda-stream-sanitizer"]], "Distributed Optimizers": [[44, "distributed-optimizers"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[42, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.utils.cpp_extension": [[31, "torch-utils-cpp-extension"]], "Writing Graph Transformations on ATen IR": [[27, "writing-graph-transformations-on-aten-ir"]], "Passes": [[27, "passes"]], "One-to-One Pass": [[27, "one-to-one-pass"]], "One-to-X Pass": [[27, "one-to-x-pass"]], "One-to-None Pass": [[27, "one-to-none-pass"]], "Utilizing Local Information": [[27, "utilizing-local-information"]], "Subgraph Rewriter": [[27, "subgraph-rewriter"]], "Pass Manager": [[27, "pass-manager"]], "Partitioner": [[27, "partitioner"]], "Subgraph Matcher": [[27, "subgraph-matcher"]], "Capability Based Partitioner": [[27, "capability-based-partitioner"]], "C++": [[32, "c"]], "TorchScript C++ API": [[32, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[32, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[32, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[32, "authoring-models-in-c"]], "Packaging for C++": [[32, "packaging-for-c"]], "Custom Backends": [[13, "custom-backends"]], "Registering Custom Backends": [[13, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[13, "custom-backends-after-aotautograd"]], "Debugging Backend": [[13, "debugging-backend"]], "Speedy Backend": [[13, "speedy-backend"]], "Composable Backends": [[13, "composable-backends"]], "PyTorch Governance | Build + CI": [[7, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[7, "how-to-add-a-new-maintainer"]], "PyTorch Design Philosophy": [[9, "pytorch-design-philosophy"]], "Design Principles": [[9, "design-principles"]], "Principle 1: Usability over Performance": [[9, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[9, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[9, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "PyTorch 2.0 Performance Dashboard": [[24, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[24, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[24, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[24, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[24, "how-can-i-run-any-performance-test-locally"]], "Dynamic shapes": [[15, "dynamic-shapes"]], "Motivation": [[15, "motivation"], [16, "motivation"], [1869, "motivation"]], "Abridged public API": [[15, "abridged-public-api"]], "The Guard Model": [[15, "the-guard-model"]], "Overall architecture": [[15, "overall-architecture"], [16, "overall-architecture"]], "Abridged internal API": [[15, "abridged-internal-api"]], "DimDynamic policy": [[15, "dimdynamic-policy"]], "Unbacked SymInts": [[15, "unbacked-symints"]], "PyTorch Governance | Maintainers": [[11, "pytorch-governance-maintainers"]], "Responsibilities": [[11, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[11, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[11, "core-maintainers"], [10, "core-maintainers"]], "Module-level maintainers": [[11, "module-level-maintainers"]], "NN APIs (torch.nn)": [[11, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[11, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[11, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[11, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[11, "distributions-rng"]], "Distributed": [[11, "distributed"]], "Multiprocessing and DataLoaders": [[11, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[11, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[11, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[11, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[11, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[11, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[11, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[11, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[11, "nvfuser"]], "AMD/ROCm/HIP": [[11, "amd-rocm-hip"]], "Build + CI": [[11, "build-ci"]], "Performance Tools": [[11, "performance-tools"]], "C++ API": [[11, "c-api"]], "C10 utils and operator dispatch": [[11, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[11, "onnx-exporter"]], "Mobile / Edge": [[11, "mobile-edge"]], "Model Compression & Optimization": [[11, "model-compression-optimization"]], "Windows": [[11, "windows"]], "Apple M1/MPS": [[11, "apple-m1-mps"]], "PowerPC": [[11, "powerpc"]], "Docs / Tutorials": [[11, "docs-tutorials"]], "Library-level maintainers": [[11, "library-level-maintainers"]], "XLA": [[11, "xla"]], "TorchServe": [[11, "torchserve"]], "TorchVision": [[11, "torchvision"]], "TorchText": [[11, "torchtext"]], "TorchAudio": [[11, "torchaudio"]], "TorchRec": [[11, "torchrec"]], "TorchX": [[11, "torchx"]], "TorchData / TorchArrow": [[11, "torchdata-torcharrow"]], "torch.__config__": [[30, "module-torch.__config__"]], "Do you support Distributed code?": [[17, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[17, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[17, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[17, "torchdynamo-errors"]], "Why is compilation slow?": [[17, "why-is-compilation-slow"]], "Dynamo Compilation": [[17, "dynamo-compilation"]], "Inductor Compilation": [[17, "inductor-compilation"]], "Why are you recompiling in production?": [[17, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[17, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[17, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[17, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[17, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[17, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[17, "why-am-i-getting-ooms"]], "Guards Overview": [[21, "guards-overview"]], "Caching and Guards Overview": [[21, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[21, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[21, "instructiontranslator"]], "Making Guards": [[21, "making-guards"]], "Summary": [[21, "summary"], [10, "summary"]], "Generic Join Context Manager": [[41, "generic-join-context-manager"]], "torch.utils.dlpack": [[47, "torch-utils-dlpack"]], "torch::deploy has been moved to pytorch/multipy": [[39, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Elastic Agent": [[48, "module-torch.distributed.elastic.agent"]], "Server": [[48, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[48, "concepts"]], "Extending the Agent": [[48, "extending-the-agent"]], "Watchdog in the Agent": [[48, "watchdog-in-the-agent"]], "Technical Overview": [[25, "technical-overview"]], "Automatic differentiation package - torch.autograd": [[2, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[2, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[2, "functional-higher-level-api"]], "Default gradient layouts": [[2, "default-gradient-layouts"]], "Manual gradient layouts": [[2, "manual-gradient-layouts"]], "In-place operations on Tensors": [[2, "in-place-operations-on-tensors"]], "In-place correctness checks": [[2, "in-place-correctness-checks"], [1882, "in-place-correctness-checks"]], "Variable (deprecated)": [[2, "variable-deprecated"]], "Tensor autograd functions": [[2, "tensor-autograd-functions"]], "Function": [[2, "function"]], "Context method mixins": [[2, "context-method-mixins"]], "Numerical gradient checking": [[2, "numerical-gradient-checking"]], "Profiler": [[2, "profiler"]], "Anomaly detection": [[2, "anomaly-detection"]], "Autograd graph": [[2, "autograd-graph"]], "Distributed communication package - torch.distributed": [[40, "distributed-communication-package-torch-distributed"]], "Backends that come with PyTorch": [[40, "backends-that-come-with-pytorch"]], "Which backend to use?": [[40, "which-backend-to-use"]], "Common environment variables": [[40, "common-environment-variables"]], "Choosing the network interface to use": [[40, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[40, "other-nccl-environment-variables"]], "Initialization": [[40, "initialization"]], "TCP initialization": [[40, "tcp-initialization"]], "Shared file-system initialization": [[40, "shared-file-system-initialization"]], "Environment variable initialization": [[40, "environment-variable-initialization"]], "Post-Initialization": [[40, "post-initialization"]], "Distributed Key-Value Store": [[40, "distributed-key-value-store"]], "Groups": [[40, "groups"]], "Point-to-point communication": [[40, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[40, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[40, "collective-functions"]], "Profiling Collective Communication": [[40, "profiling-collective-communication"]], "Multi-GPU collective functions": [[40, "multi-gpu-collective-functions"]], "Third-party backends": [[40, "third-party-backends"]], "Launch utility": [[40, "launch-utility"]], "Spawn utility": [[40, "spawn-utility"]], "Debugging torch.distributed applications": [[40, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[40, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[40, "torch-distributed-debug"]], "Logging": [[40, "logging"]], "Probability distributions - torch.distributions": [[46, "module-torch.distributions"]], "Score function": [[46, "score-function"]], "Pathwise derivative": [[46, "pathwise-derivative"]], "Distribution": [[46, "distribution"]], "ExponentialFamily": [[46, "exponentialfamily"]], "Bernoulli": [[46, "bernoulli"]], "Beta": [[46, "beta"]], "Binomial": [[46, "binomial"]], "Categorical": [[46, "categorical"]], "Cauchy": [[46, "cauchy"]], "Chi2": [[46, "chi2"]], "ContinuousBernoulli": [[46, "continuousbernoulli"]], "Dirichlet": [[46, "dirichlet"]], "Exponential": [[46, "exponential"]], "FisherSnedecor": [[46, "fishersnedecor"]], "Gamma": [[46, "gamma"]], "Geometric": [[46, "geometric"]], "Gumbel": [[46, "gumbel"]], "HalfCauchy": [[46, "halfcauchy"]], "HalfNormal": [[46, "halfnormal"]], "Independent": [[46, "independent"]], "Kumaraswamy": [[46, "kumaraswamy"]], "LKJCholesky": [[46, "lkjcholesky"]], "Laplace": [[46, "laplace"]], "LogNormal": [[46, "lognormal"]], "LowRankMultivariateNormal": [[46, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[46, "mixturesamefamily"]], "Multinomial": [[46, "multinomial"]], "MultivariateNormal": [[46, "multivariatenormal"]], "NegativeBinomial": [[46, "negativebinomial"]], "Normal": [[46, "normal"]], "OneHotCategorical": [[46, "onehotcategorical"]], "Pareto": [[46, "pareto"]], "Poisson": [[46, "poisson"]], "RelaxedBernoulli": [[46, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[46, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[46, "relaxedonehotcategorical"]], "StudentT": [[46, "studentt"]], "TransformedDistribution": [[46, "transformeddistribution"]], "Uniform": [[46, "uniform"]], "VonMises": [[46, "vonmises"]], "Weibull": [[46, "weibull"]], "Wishart": [[46, "wishart"]], "KL Divergence": [[46, "module-torch.distributions.kl"]], "Transforms": [[46, "module-torch.distributions.transforms"]], "Constraints": [[46, "module-torch.distributions.constraints"], [1885, "constraints"]], "Constraint Registry": [[46, "module-torch.distributions.constraint_registry"]], "TorchDynamo Deeper Dive": [[14, "torchdynamo-deeper-dive"]], "What is a guard?": [[14, "what-is-a-guard"]], "What is Dynamo doing?": [[14, "what-is-dynamo-doing"]], "Automatic Mixed Precision package - torch.amp": [[1, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[1, "autocasting"]], "Gradient Scaling": [[1, "gradient-scaling"]], "Autocast Op Reference": [[1, "autocast-op-reference"]], "Op Eligibility": [[1, "op-eligibility"]], "CUDA Op-Specific Behavior": [[1, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[1, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[1, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[1, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[1, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[1, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[1, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[1, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[1, "cpu-ops-that-promote-to-the-widest-input-type"]], "Getting Started": [[20, "getting-started"], [8, "getting-started"]], "Existing Backends": [[20, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[20, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[45, "tensor-parallelism-torch-distributed-tensor-parallel"]], "TorchDynamo APIs to control fine-grained tracing": [[18, "torchdynamo-apis-to-control-fine-grained-tracing"], [18, "id7"]], "Section 1 - Summary Table": [[18, "section-1-summary-table"]], "Section 2 - torch._dynamo.disable": [[18, "section-2-torch-dynamo-disable"]], "Section 3 - torch._dynamo.disallow_in_graph": [[18, "section-3-torch-dynamo-disallow-in-graph"]], "Section 4 - torch._dynamo.disallow_in_graph": [[18, "section-4-torch-dynamo-disallow-in-graph"]], "Section 5 - Limitations": [[18, "section-5-limitations"]], "Section 6 - FAQ": [[18, "section-6-faq"]], "Benchmark Utils - torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "PyTorch Contribution Guide": [[8, "pytorch-contribution-guide"]], "Contribution Process": [[8, "contribution-process"]], "Proposing New Features": [[8, "proposing-new-features"]], "Reporting Issues": [[8, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[8, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[8, "adding-tutorials"]], "Improving Documentation & Tutorials": [[8, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[8, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[8, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[8, "reviewing-open-pull-requests"]], "Improving Code Readability": [[8, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[8, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[8, "promoting-pytorch"]], "Triaging Issues": [[8, "triaging-issues"]], "About Open Source Development": [[8, "about-open-source-development"]], "Common Mistakes To Avoid": [[8, "common-mistakes-to-avoid"]], "On Documentation": [[8, "on-documentation"]], "Python Docs": [[8, "python-docs"]], "C++ Docs": [[8, "c-docs"]], "Tutorials Build Overview": [[8, "tutorials-build-overview"]], "Contributing a New Tutorial": [[8, "contributing-a-new-tutorial"]], "PyTorch 2.0 NNModule Support": [[23, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[23, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[23, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[23, "state-dict-hooks"]], "torch.utils.checkpoint": [[6, "torch-utils-checkpoint"]], "Troubleshooting and Gotchas": [[22, "troubleshooting-and-gotchas"]], "Learn more": [[22, "learn-more"]], "Torch Distributed Elastic": [[43, "torch-distributed-elastic"]], "Get Started": [[43, "get-started"]], "Documentation": [[43, "documentation"]], "API": [[43, null]], "Advanced": [[43, null]], "Plugins": [[43, null]], "Fake tensor": [[16, "fake-tensor"]], "Related work": [[16, "related-work"]], "API: the important bits": [[16, "api-the-important-bits"]], "Details": [[16, "details"]], "About the tensor subclass": [[16, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[16, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[16, "how-does-the-converter-work"]], "Performance characteristics": [[16, "performance-characteristics"]], "Fake tensor of fake tensor?": [[16, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[16, "interaction-with-dynamic-shapes"]], "Other resources": [[16, "other-resources"]], "PyTorch Governance | Mechanics": [[10, "pytorch-governance-mechanics"]], "Module Maintainers": [[10, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[10, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[10, "the-principles"]], "The Process for Nomination": [[10, "the-process-for-nomination"]], "The Process for Removal": [[10, "the-process-for-removal"]], "Nominating Core Maintainers": [[10, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[10, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[10, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[10, "decision-making"]], "Uncontroversial Changes": [[10, "uncontroversial-changes"]], "Controversial Decision Process": [[10, "controversial-decision-process"]], "General Project Policies": [[10, "general-project-policies"]], "FAQ": [[10, "faq"]], "torch.cuda": [[33, "module-torch.cuda"]], "Random Number Generator": [[33, "random-number-generator"]], "Communication collectives": [[33, "communication-collectives"]], "Streams and events": [[33, "streams-and-events"]], "Graphs (beta)": [[33, "graphs-beta"]], "Memory management": [[33, "memory-management"], [1891, "memory-management"], [1885, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[33, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[33, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[33, "stream-sanitizer-prototype"]], "DDP Communication Hooks": [[38, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[38, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[38, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[38, "default-communication-hooks"]], "PowerSGD Communication Hook": [[38, "powersgd-communication-hook"]], "PowerSGD State": [[38, "powersgd-state"]], "PowerSGD Hooks": [[38, "powersgd-hooks"]], "Debugging Communication Hooks": [[38, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[38, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[38, "acknowledgements"], [1905, "acknowledgements"]], "CUDAGraph Trees": [[12, "cudagraph-trees"]], "CUDAGraph Background": [[12, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[12, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[12, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[12, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[12, "cudagraph-trees-integration"]], "Limitations": [[12, "limitations"], [1900, "limitations"]], "Comparisons": [[12, "comparisons"], [1862, "comparisons"]], "torch._dynamo": [[0, "torch-dynamo"]], "torch.library": [[1866, "torch-library"]], "torch.onnx": [[1900, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1900, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1900, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1900, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1900, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1900, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1900, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1900, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1900, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1900, "reads-gets"]], "Writes / Sets": [[1900, "writes-sets"]], "Adding support for operators": [[1900, "adding-support-for-operators"]], "ONNX exporter internals": [[1900, "onnx-exporter-internals"]], "ATen operators": [[1900, "aten-operators"]], "List of supported operators": [[1900, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1900, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1900, "torch-autograd-functions"]], "Static Symbolic Method": [[1900, "static-symbolic-method"]], "Inline Autograd Function": [[1900, "inline-autograd-function"]], "Custom operators": [[1900, "custom-operators"]], "ONNX-script functions": [[1900, "onnx-script-functions"]], "C++ Operators": [[1900, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1900, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1900, "contributing-developing"]], "Classes": [[1900, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1900, "preview-torch-onnx-torchdynamo-exporter"]], "Pipeline Parallelism": [[1905, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1905, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1905, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1905, "pipe-apis-in-pytorch"]], "Skip connections": [[1905, "skip-connections"]], "Python Language Reference Coverage": [[1863, "python-language-reference-coverage"]], "torch.linalg": [[1867, "torch-linalg"]], "Matrix Properties": [[1867, "matrix-properties"]], "Decompositions": [[1867, "decompositions"]], "Solvers": [[1867, "solvers"]], "Inverses": [[1867, "inverses"]], "Matrix Functions": [[1867, "matrix-functions"]], "Matrix Products": [[1867, "matrix-products"]], "Tensor Operations": [[1867, "tensor-operations"]], "Misc": [[1867, "misc"]], "Experimental Functions": [[1867, "experimental-functions"]], "torch.nn.init": [[1880, "torch-nn-init"]], "Autograd mechanics": [[1882, "autograd-mechanics"]], "How autograd encodes the history": [[1882, "how-autograd-encodes-the-history"]], "Saved tensors": [[1882, "saved-tensors"]], "Gradients for non-differentiable functions": [[1882, "gradients-for-non-differentiable-functions"]], "Setting requires_grad": [[1882, "setting-requires-grad"]], "Grad Modes": [[1882, "grad-modes"]], "Default Mode (Grad Mode)": [[1882, "default-mode-grad-mode"]], "No-grad Mode": [[1882, "no-grad-mode"]], "Inference Mode": [[1882, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1882, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1882, "in-place-operations-with-autograd"]], "Multithreaded Autograd": [[1882, "multithreaded-autograd"]], "Concurrency on CPU": [[1882, "concurrency-on-cpu"]], "Non-determinism": [[1882, "non-determinism"]], "Graph retaining": [[1882, "graph-retaining"]], "Thread Safety on Autograd Node": [[1882, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1882, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1882, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1882, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1882, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1882, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1882, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1882, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1882, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1882, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1882, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1882, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1882, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1882, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1882, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1882, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1882, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Quantization Backend Configuration": [[1909, "quantization-backend-configuration"], [1907, "quantization-backend-configuration"]], "Default values for native configurations": [[1909, "default-values-for-native-configurations"]], "Quantization API Reference": [[1910, "quantization-api-reference"], [1907, "quantization-api-reference"]], "torch.ao.quantization": [[1910, "torch-ao-quantization"]], "Top level APIs": [[1910, "top-level-apis"]], "Preparing model for quantization": [[1910, "preparing-model-for-quantization"]], "Utility functions": [[1910, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1910, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1910, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1910, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1910, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1910, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1910, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1910, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1910, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1910, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1910, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1910, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1910, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1910, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1910, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1910, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1910, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1910, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1910, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1910, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1910, "quantized-dtypes-and-quantization-schemes"]], "Multiprocessing best practices": [[1895, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1895, "cuda-in-multiprocessing"]], "Best practices and tips": [[1895, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1895, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1895, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1895, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1895, "hogwild"]], "Broadcasting semantics": [[1883, "broadcasting-semantics"]], "General semantics": [[1883, "general-semantics"]], "In-place semantics": [[1883, "in-place-semantics"]], "Backwards compatibility": [[1883, "backwards-compatibility"]], "Extending torch.func with autograd.Function": [[1888, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1888, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1888, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1888, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1888, "limitations-and-gotchas"]], "torch.vmap() Support": [[1888, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1888, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1888, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1888, "torch-func-jvp-support"]], "Features for large-scale deployments": [[1892, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1892, "fleet-wide-operator-profiling"]], "API usage logging": [[1892, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1892, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1892, "build-environment-considerations"]], "Common extension points": [[1892, "common-extension-points"]], "Numerical accuracy": [[1896, "numerical-accuracy"]], "Batched computations or slice computations": [[1896, "batched-computations-or-slice-computations"]], "Extremal values": [[1896, "extremal-values"]], "Linear algebra (torch.linalg)": [[1896, "linear-algebra-torch-linalg"]], "Non-finite values": [[1896, "non-finite-values"]], "Extremal values in linalg": [[1896, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1896, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1896, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1896, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Serialization semantics": [[1898, "serialization-semantics"]], "Table of Contents": [[1898, "table-of-contents"]], "Saving and loading tensors": [[1898, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1898, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1898, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1898, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1898, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1898, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1898, "torch-full-always-inferring-a-float-dtype"]], "torch.onnx diagnostics": [[1901, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1901, "diagnostic-rules"]], "torch.nn": [[1878, "module-torch.nn"], [1878, "id1"]], "Containers": [[1878, "containers"]], "Convolution Layers": [[1878, "convolution-layers"]], "Pooling layers": [[1878, "pooling-layers"]], "Padding Layers": [[1878, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1878, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1878, "non-linear-activations-other"]], "Normalization Layers": [[1878, "normalization-layers"]], "Recurrent Layers": [[1878, "recurrent-layers"]], "Transformer Layers": [[1878, "transformer-layers"]], "Linear Layers": [[1878, "linear-layers"]], "Dropout Layers": [[1878, "dropout-layers"]], "Sparse Layers": [[1878, "sparse-layers"]], "Distance Functions": [[1878, "distance-functions"]], "Loss Functions": [[1878, "loss-functions"]], "Vision Layers": [[1878, "vision-layers"]], "Shuffle Layers": [[1878, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1878, "module-torch.nn.parallel"]], "Quantized Functions": [[1878, "quantized-functions"]], "Lazy Modules Initialization": [[1878, "lazy-modules-initialization"]], "MPS backend": [[1894, "mps-backend"]], "torch.nn.functional": [[1879, "torch-nn-functional"]], "Convolution functions": [[1879, "convolution-functions"]], "Pooling functions": [[1879, "pooling-functions"]], "Attention Mechanisms": [[1879, "attention-mechanisms"]], "Non-linear activation functions": [[1879, "non-linear-activation-functions"]], "Linear functions": [[1879, "linear-functions"]], "Dropout functions": [[1879, "dropout-functions"]], "Sparse functions": [[1879, "sparse-functions"]], "Distance functions": [[1879, "distance-functions"]], "Loss functions": [[1879, "loss-functions"]], "Vision functions": [[1879, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1879, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1879, "data-parallel"]], "torch.utils.model_zoo": [[1871, "torch-utils-model-zoo"]], "A Simple Custom Module": [[1893, "a-simple-custom-module"]], "Modules as Building Blocks": [[1893, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1893, "neural-network-training-with-modules"]], "Module State": [[1893, "module-state"]], "Module Initialization": [[1893, "module-initialization"]], "Module Hooks": [[1893, "module-hooks"]], "Advanced Features": [[1893, "advanced-features"]], "Distributed Training": [[1893, "distributed-training"]], "Profiling Performance": [[1893, "profiling-performance"]], "Improving Performance with Quantization": [[1893, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1893, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1893, "parametrizations"]], "Transforming Modules with FX": [[1893, "transforming-modules-with-fx"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1889, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1889, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1889, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1889, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1889, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "HIP (ROCm) semantics": [[1891, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1891, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1891, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1891, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1891, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1891, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1891, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1891, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1891, "enabling-kernel-asserts"]], "Terminology": [[1862, "terminology"]], "Type System": [[1862, "id1"]], "TorchScript Types": [[1862, "torchscript-types"]], "Meta Types": [[1862, "meta-types"]], "Any Type": [[1862, "any-type"]], "Operators Supported for Any Type": [[1862, "operators-supported-for-any-type"]], "Primitive Types": [[1862, "primitive-types"]], "Structural Types": [[1862, "structural-types"]], "Nominal Types": [[1862, "nominal-types"]], "Built-in Class": [[1862, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1862, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1862, "custom-class"]], "Enum Type": [[1862, "enum-type"]], "TorchScript Module Class": [[1862, "torchscript-module-class"]], "Module Instance Class": [[1862, "module-instance-class"]], "Type Annotation": [[1862, "type-annotation"]], "When to Annotate Types": [[1862, "when-to-annotate-types"]], "Annotate Function Signature": [[1862, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1862, "annotate-variables-and-data-attributes"]], "Local Variables": [[1862, "local-variables"]], "Instance Data Attributes": [[1862, "instance-data-attributes"]], "Type Annotation APIs": [[1862, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1862, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1862, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1862, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1862, "arithmetic-conversions"]], "Atoms": [[1862, "atoms"]], "Identifiers": [[1862, "identifiers"]], "Parenthesized Forms": [[1862, "parenthesized-forms"]], "List and Dictionary Displays": [[1862, "list-and-dictionary-displays"]], "Primaries": [[1862, "primaries"]], "Attribute References": [[1862, "attribute-references"]], "Subscriptions": [[1862, "subscriptions"]], "Slicings": [[1862, "slicings"]], "Calls": [[1862, "calls"]], "Power Operator": [[1862, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1862, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1862, "binary-arithmetic-operations"]], "Shifting Operations": [[1862, "shifting-operations"]], "Binary Bitwise Operations": [[1862, "binary-bitwise-operations"]], "Value Comparisons": [[1862, "value-comparisons"]], "Membership Test Operations": [[1862, "membership-test-operations"]], "Identity Comparisons": [[1862, "identity-comparisons"]], "Boolean Operations": [[1862, "boolean-operations"]], "Conditional Expressions": [[1862, "conditional-expressions"]], "Expression Lists": [[1862, "expression-lists"]], "Simple Statements": [[1862, "simple-statements"]], "Expression Statements": [[1862, "expression-statements"]], "Assignment Statements": [[1862, "assignment-statements"]], "Augmented Assignment Statements": [[1862, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1862, "annotated-assignment-statements"]], "The raise Statement": [[1862, "the-raise-statement"]], "The assert Statement": [[1862, "the-assert-statement"]], "The return Statement": [[1862, "the-return-statement"]], "The del Statement": [[1862, "the-del-statement"]], "The pass Statement": [[1862, "the-pass-statement"]], "The print Statement": [[1862, "the-print-statement"]], "The break Statement": [[1862, "the-break-statement"]], "The continue Statement:": [[1862, "the-continue-statement"]], "Compound Statements": [[1862, "compound-statements"]], "The if Statement": [[1862, "the-if-statement"]], "Basic if/else Statement": [[1862, "basic-if-else-statement"]], "Ternary if/else Statement": [[1862, "ternary-if-else-statement"]], "The while Statement": [[1862, "the-while-statement"]], "The for-in Statement": [[1862, "the-for-in-statement"]], "The with Statement": [[1862, "the-with-statement"]], "The tuple Statement": [[1862, "the-tuple-statement"]], "The getattr Statement": [[1862, "the-getattr-statement"]], "The hasattr Statement": [[1862, "the-hasattr-statement"]], "The zip Statement": [[1862, "the-zip-statement"]], "The enumerate Statement": [[1862, "the-enumerate-statement"]], "Python Values": [[1862, "python-values"]], "Resolution Rules": [[1862, "resolution-rules"]], "Python Built-in Functions Support": [[1862, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1862, "id5"]], "Python Built-in Values Support": [[1862, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1862, "id6"]], "torch.* APIs": [[1862, "torch-apis"]], "Remote Procedure Calls": [[1862, "remote-procedure-calls"]], "Asynchronous Execution": [[1862, "asynchronous-execution"]], "Type Annotations": [[1862, "type-annotations"]], "Meta Programming": [[1862, "meta-programming"]], "Type Refinement": [[1862, "type-refinement"]], "Multiprocessing package - torch.multiprocessing": [[1874, "module-torch.multiprocessing"]], "Strategy management": [[1874, "strategy-management"]], "Sharing CUDA tensors": [[1874, "sharing-cuda-tensors"]], "Sharing strategies": [[1874, "sharing-strategies"]], "File descriptor - file_descriptor": [[1874, "file-descriptor-file-descriptor"]], "File system - file_system": [[1874, "file-system-file-system"]], "Spawning subprocesses": [[1874, "spawning-subprocesses"]], "JIT Utils - torch.utils.jit": [[1865, "module-torch.utils.jit"]], "Named Tensors": [[1876, "named-tensors"]], "Creating named tensors": [[1876, "creating-named-tensors"]], "Named dimensions": [[1876, "named-dimensions"]], "Name propagation semantics": [[1876, "name-propagation-semantics"]], "match semantics": [[1876, "match-semantics"]], "Basic name inference rules": [[1876, "basic-name-inference-rules"]], "Explicit alignment by names": [[1876, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1876, "manipulating-dimensions"]], "Autograd support": [[1876, "autograd-support"]], "Currently supported operations and subsystems": [[1876, "currently-supported-operations-and-subsystems"]], "Operators": [[1876, "operators"]], "Subsystems": [[1876, "subsystems"]], "Named tensor API reference": [[1876, "named-tensor-api-reference"]], "torch.monitor": [[1872, "torch-monitor"]], "Windows FAQ": [[1899, "windows-faq"]], "Building from source": [[1899, "building-from-source"]], "Include optional components": [[1899, "include-optional-components"]], "Speeding CUDA build for Windows": [[1899, "speeding-cuda-build-for-windows"]], "One key install script": [[1899, "one-key-install-script"]], "Extension": [[1899, "extension"]], "CFFI Extension": [[1899, "cffi-extension"]], "Cpp Extension": [[1899, "cpp-extension"]], "Installation": [[1899, "installation"]], "Package not found in win-32 channel.": [[1899, "package-not-found-in-win-32-channel"]], "Import error": [[1899, "import-error"]], "Usage (multiprocessing)": [[1899, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1899, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1899, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1899, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1899, "cuda-ipc-operations"]], "ONNX supported TorchScript operators": [[1902, "onnx-supported-torchscript-operators"]], "Supported operators": [[1902, "supported-operators"]], "ONNX support for TorchScript operators": [[1902, "id1"]], "Unsupported operators": [[1902, "unsupported-operators"], [1902, "id2"]], "CUDA Automatic Mixed Precision examples": [[1881, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1881, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1881, "working-with-unscaled-gradients"]], "Gradient clipping": [[1881, "gradient-clipping"]], "Working with Scaled Gradients": [[1881, "working-with-scaled-gradients"]], "Gradient accumulation": [[1881, "gradient-accumulation"]], "Gradient penalty": [[1881, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1881, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1881, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1881, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1881, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1881, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1881, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1881, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1881, "functions-that-need-a-particular-dtype"]], "torch.profiler": [[1906, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1906, "intel-instrumentation-and-tracing-technology-apis"]], "Named Tensors operator coverage": [[1875, "named-tensors-operator-coverage"]], "Supported Operations": [[1875, "id1"]], "Keeps input names": [[1875, "keeps-input-names"]], "Removes dimensions": [[1875, "removes-dimensions"]], "Unifies names from inputs": [[1875, "unifies-names-from-inputs"]], "Permutes dimensions": [[1875, "permutes-dimensions"]], "Contracts away dims": [[1875, "contracts-away-dims"]], "Factory functions": [[1875, "factory-functions"]], "out function and in-place variants": [[1875, "out-function-and-in-place-variants"]], "CPU threading and TorchScript inference": [[1884, "cpu-threading-and-torchscript-inference"]], "Build options": [[1884, "build-options"]], "Runtime API": [[1884, "runtime-api"]], "Tuning the number of threads": [[1884, "tuning-the-number-of-threads"]], "Reproducibility": [[1897, "reproducibility"]], "Controlling sources of randomness": [[1897, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1897, "pytorch-random-number-generator"]], "Python": [[1897, "python"]], "Random number generators in other libraries": [[1897, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1897, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1897, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1897, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1897, "cuda-rnn-and-lstm"]], "DataLoader": [[1897, "dataloader"]], "torch.optim": [[1903, "module-torch.optim"]], "How to use an optimizer": [[1903, "how-to-use-an-optimizer"]], "Constructing it": [[1903, "constructing-it"]], "Per-parameter options": [[1903, "per-parameter-options"]], "Taking an optimization step": [[1903, "taking-an-optimization-step"]], "optimizer.step()": [[1903, "optimizer-step"]], "optimizer.step(closure)": [[1903, "optimizer-step-closure"]], "Base class": [[1903, "base-class"]], "Algorithms": [[1903, "algorithms"]], "How to adjust learning rate": [[1903, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1903, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1903, "constructing-averaged-models"]], "Custom averaging strategies": [[1903, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1903, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1903, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1903, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1903, "putting-it-all-together-ema"]], "Distributed Data Parallel": [[1886, "distributed-data-parallel"]], "Example": [[1886, "example"], [1887, "example"]], "Internal Design": [[1886, "internal-design"]], "ProcessGroup": [[1886, "processgroup"]], "TorchDynamo DDPOptimizer": [[1886, "id1"]], "TorchScript Unsupported PyTorch Constructs": [[1864, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1864, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1864, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1864, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1864, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1864, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1864, "pytorch-unsupported-modules-and-classes"]], "torch.masked": [[1869, "torch-masked"]], "What is a MaskedTensor?": [[1869, "what-is-a-maskedtensor"]], "Supported Operators": [[1869, "supported-operators"]], "Unary Operators": [[1869, "unary-operators"]], "Binary Operators": [[1869, "binary-operators"]], "Reductions": [[1869, "reductions"]], "View and select functions": [[1869, "view-and-select-functions"]], "torch.mps": [[1873, "module-torch.mps"]], "MPS Profiler": [[1873, "mps-profiler"]], "CUDA semantics": [[1885, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1885, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1885, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1885, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1885, "asynchronous-execution"]], "CUDA streams": [[1885, "cuda-streams"]], "Stream semantics of backward passes": [[1885, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1885, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1885, "environment-variables"]], "Using custom memory allocators for CUDA": [[1885, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1885, "cublas-workspaces"]], "cuFFT plan cache": [[1885, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1885, "just-in-time-compilation"]], "Best practices": [[1885, "best-practices"]], "Device-agnostic code": [[1885, "device-agnostic-code"]], "Use pinned memory buffers": [[1885, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1885, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1885, "cuda-graphs"]], "Why CUDA Graphs?": [[1885, "why-cuda-graphs"]], "PyTorch API": [[1885, "pytorch-api"]], "Non-constraints": [[1885, "non-constraints"]], "Whole-network capture": [[1885, "whole-network-capture"]], "Partial-network capture": [[1885, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1885, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1885, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1885, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1885, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1885, "id5"]], "Graph memory management": [[1885, "graph-memory-management"]], "Sharing memory across captures": [[1885, "sharing-memory-across-captures"]], "Gradcheck mechanics": [[1890, "gradcheck-mechanics"]], "Notations and background information": [[1890, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1890, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1890, "real-to-real-functions"]], "Default real input numerical evaluation": [[1890, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1890, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1890, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1890, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1890, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1890, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1890, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1890, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1890, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1890, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1890, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1890, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1890, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1890, "gradgradcheck-implementation"]], "Extending PyTorch": [[1887, "extending-pytorch"]], "Extending torch.autograd": [[1887, "extending-torch-autograd"]], "When to use": [[1887, "when-to-use"]], "When not to use": [[1887, "when-not-to-use"]], "How to use": [[1887, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1887, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1887, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1887, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1887, "extending-torch-nn"]], "Adding a Module": [[1887, "adding-a-module"]], "Extending torch": [[1887, "extending-torch"]], "Extending torch with a Tensor-like type": [[1887, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1887, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1887, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1887, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1887, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Writing custom C++ extensions": [[1887, "writing-custom-c-extensions"]], "Writing custom C extensions": [[1887, "id2"]], "Quantization Accuracy Debugging": [[1908, "quantization-accuracy-debugging"], [1907, "quantization-accuracy-debugging"]], "Data insensitive error": [[1908, "data-insensitive-error"]], "General tips": [[1908, "general-tips"]], "Int8 quantization tips": [[1908, "int8-quantization-tips"]], "Data sensitive error": [[1908, "data-sensitive-error"]], "Implementation error": [[1908, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1908, "numerical-debugging-tooling-prototype"]], "torch.nested": [[1877, "module-torch.nested"]], "size": [[1877, "size"]], "unbind": [[1877, "unbind"]], "Nested tensor constructor and conversion functions": [[1877, "nested-tensor-constructor-and-conversion-functions"]], "torch.utils.mobile_optimizer": [[1870, "torch-utils-mobile-optimizer"]], "torch.package": [[1904, "torch-package"]], "Packaging your first model": [[1904, "packaging-your-first-model"]], "How do I\u2026": [[1904, "how-do-i"]], "See what is inside a package?": [[1904, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1904, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1904, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1904, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1904, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1904, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1904, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1904, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1904, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1904, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1904, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1904, "package-a-torchscript-module"]], "Explanation": [[1904, "explanation"]], "torch.package Format Overview": [[1904, "torch-package-format-overview"]], "Framework files": [[1904, "framework-files"]], "User files": [[1904, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1904, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1904, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1904, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1904, "dependency-management"]], "intern": [[1904, "intern"]], "extern": [[1904, "extern"]], "mock": [[1904, "mock"]], "Refactoring": [[1904, "refactoring"]], "Patterns": [[1904, "patterns"]], "torch.package sharp edges": [[1904, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1904, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1904, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1904, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1904, "mangling"]], "torch._logging": [[1868, "torch-logging"]], "Quantization": [[1907, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1907, "introduction-to-quantization"]], "Quantization API Summary": [[1907, "quantization-api-summary"]], "Eager Mode Quantization": [[1907, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1907, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1907, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1907, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1907, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1907, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1907, "quantization-stack"]], "Quantized Model": [[1907, "quantized-model"]], "Quantized Tensor": [[1907, "quantized-tensor"]], "Quantize and Dequantize": [[1907, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1907, "quantized-operators-modules"]], "Quantized Engine": [[1907, "quantized-engine"]], "Quantization Flow": [[1907, "quantization-flow"]], "Observer and FakeQuantize": [[1907, "observer-and-fakequantize"]], "QConfig": [[1907, "qconfig"], [837, "qconfig"]], "General Quantization Flow": [[1907, "general-quantization-flow"]], "Quantization Support Matrix": [[1907, "quantization-support-matrix"]], "Quantization Mode Support": [[1907, "quantization-mode-support"]], "Quantization Flow Support": [[1907, "quantization-flow-support"]], "Backend/Hardware Support": [[1907, "backend-hardware-support"]], "Note for native CPU backends": [[1907, "note-for-native-cpu-backends"]], "Operator Support": [[1907, "operator-support"]], "Quantization Customizations": [[1907, "quantization-customizations"]], "Quantization Custom Module API": [[1907, "quantization-custom-module-api"]], "Best Practices": [[1907, "best-practices"]], "Common Errors": [[1907, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1907, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1907, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1907, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1907, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.autograd.Function.jvp": [[887, "torch-autograd-function-jvp"]], "torch.autograd.gradgradcheck": [[905, "torch-autograd-gradgradcheck"]], "torch.atleast_2d": [[883, "torch-atleast-2d"]], "torch.atleast_1d": [[882, "torch-atleast-1d"]], "torch.autograd.functional.hvp": [[898, "torch-autograd-functional-hvp"]], "set_multithreading_enabled": [[916, "set-multithreading-enabled"]], "torch.autograd.Function.vmap": [[888, "torch-autograd-function-vmap"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[896, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.bincount": [[920, "torch-bincount"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[895, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.gradcheck": [[904, "torch-autograd-gradcheck"]], "torch.autograd.graph.Node.next_functions": [[908, "torch-autograd-graph-node-next-functions"]], "torch.bitwise_xor": [[926, "torch-bitwise-xor"]], "torch.bitwise_and": [[921, "torch-bitwise-and"]], "torch.blackman_window": [[927, "torch-blackman-window"]], "torch.autograd.functional.jacobian": [[899, "torch-autograd-functional-jacobian"]], "torch.bitwise_left_shift": [[922, "torch-bitwise-left-shift"]], "torch.autograd.Function.forward": [[886, "torch-autograd-function-forward"]], "torch.autograd.profiler.profile.total_average": [[915, "torch-autograd-profiler-profile-total-average"]], "torch.autograd.functional.jvp": [[900, "torch-autograd-functional-jvp"]], "torch.autograd.graph.Node.metadata": [[906, "torch-autograd-graph-node-metadata"]], "torch.autograd.functional.hessian": [[897, "torch-autograd-functional-hessian"]], "torch.autograd.forward_ad.unpack_dual": [[892, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.profiler.profile.export_chrome_trace": [[912, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.bitwise_right_shift": [[925, "torch-bitwise-right-shift"]], "torch.broadcast_shapes": [[930, "torch-broadcast-shapes"]], "torch.autograd.Function.backward": [[885, "torch-autograd-function-backward"]], "torch.autograd.profiler.load_nvprof": [[911, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[914, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.bernoulli": [[919, "torch-bernoulli"]], "torch.autograd.graph.Node.register_hook": [[909, "torch-autograd-graph-node-register-hook"]], "torch.autograd.graph.Node.name": [[907, "torch-autograd-graph-node-name"]], "torch.autograd.profiler.profile.key_averages": [[913, "torch-autograd-profiler-profile-key-averages"]], "dual_level": [[890, "dual-level"]], "torch.block_diag": [[928, "torch-block-diag"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[893, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.grad": [[903, "torch-autograd-grad"]], "torch.autograd.backward": [[889, "torch-autograd-backward"]], "torch.autograd.functional.vjp": [[902, "torch-autograd-functional-vjp"]], "torch.bitwise_or": [[924, "torch-bitwise-or"]], "torch.bartlett_window": [[918, "torch-bartlett-window"]], "torch.bmm": [[929, "torch-bmm"]], "torch.atleast_3d": [[884, "torch-atleast-3d"]], "torch.bitwise_not": [[923, "torch-bitwise-not"]], "torch.autograd.graph.Node.register_prehook": [[910, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[894, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.functional.vhp": [[901, "torch-autograd-functional-vhp"]], "torch.autograd.forward_ad.make_dual": [[891, "torch-autograd-forward-ad-make-dual"]], "torch.baddbmm": [[917, "torch-baddbmm"]], "torch.argmax": [[870, "torch-argmax"]], "torch.as_tensor": [[875, "torch-as-tensor"]], "default_debug_qconfig": [[839, "default-debug-qconfig"]], "torch.argmin": [[871, "torch-argmin"]], "propagate_qconfig": [[836, "propagate-qconfig"]], "swap_module": [[860, "swap-module"]], "default_dynamic_qconfig": [[840, "default-dynamic-qconfig"]], "default_weight_only_qconfig": [[845, "default-weight-only-qconfig"]], "load_observer_state_dict": [[833, "load-observer-state-dict"]], "quantize_qat": [[859, "quantize-qat"]], "torch.arctanh": [[868, "torch-arctanh"]], "torch.argwhere": [[873, "torch-argwhere"]], "torch.asinh": [[878, "torch-asinh"]], "torch.asin": [[877, "torch-asin"]], "per_channel_dynamic_qconfig": [[849, "per-channel-dynamic-qconfig"]], "default_qconfig": [[844, "default-qconfig"]], "get_default_qconfig_mapping": [[852, "get-default-qconfig-mapping"]], "float16_dynamic_qconfig": [[846, "float16-dynamic-qconfig"]], "torch.argsort": [[872, "torch-argsort"]], "torch.arcsin": [[864, "torch-arcsin"]], "float_qparams_weight_only_qconfig": [[848, "float-qparams-weight-only-qconfig"]], "quantize": [[853, "quantize"]], "torch.arccos": [[862, "torch-arccos"]], "prepare_qat_fx": [[858, "prepare-qat-fx"]], "torch.arange": [[861, "torch-arange"]], "torch.atan2": [[880, "torch-atan2"]], "float16_static_qconfig": [[847, "float16-static-qconfig"]], "default_per_channel_qconfig": [[841, "default-per-channel-qconfig"]], "torch.asarray": [[876, "torch-asarray"]], "prepare": [[834, "prepare"]], "torch.arccosh": [[863, "torch-arccosh"]], "QConfigMapping": [[850, "qconfigmapping"]], "torch.atanh": [[881, "torch-atanh"]], "convert_fx": [[855, "convert-fx"]], "default_qat_qconfig_v2": [[843, "default-qat-qconfig-v2"]], "fuse_fx": [[856, "fuse-fx"]], "get_default_qat_qconfig_mapping": [[851, "get-default-qat-qconfig-mapping"]], "torch.as_strided": [[874, "torch-as-strided"]], "default_activation_only_qconfig": [[838, "default-activation-only-qconfig"]], "torch.arcsinh": [[865, "torch-arcsinh"]], "torch.arctan": [[866, "torch-arctan"]], "torch.atan": [[879, "torch-atan"]], "quantize_dynamic": [[854, "quantize-dynamic"]], "torch.are_deterministic_algorithms_enabled": [[869, "torch-are-deterministic-algorithms-enabled"]], "torch.arctan2": [[867, "torch-arctan2"]], "prepare_qat": [[835, "prepare-qat"]], "prepare_fx": [[857, "prepare-fx"]], "default_qat_qconfig": [[842, "default-qat-qconfig"]], "default_placeholder_observer": [[830, "default-placeholder-observer"]], "default_float_qparams_observer": [[826, "default-float-qparams-observer"]], "default_per_channel_weight_fake_quant": [[804, "default-per-channel-weight-fake-quant"]], "StandaloneModuleConfigEntry": [[814, "standalonemoduleconfigentry"]], "RecordingObserver": [[823, "recordingobserver"]], "default_histogram_fake_quant": [[803, "default-histogram-fake-quant"]], "FakeQuantize": [[795, "fakequantize"]], "HistogramObserver": [[815, "histogramobserver"]], "enable_observer": [[809, "enable-observer"]], "add_quant_dequant": [[787, "add-quant-dequant"]], "default_debug_observer": [[824, "default-debug-observer"]], "default_dynamic_quant_observer": [[825, "default-dynamic-quant-observer"]], "DTypeWithConstraints": [[791, "dtypewithconstraints"]], "FusedMovingAvgObsFakeQuantize": [[798, "fusedmovingavgobsfakequantize"]], "disable_fake_quant": [[806, "disable-fake-quant"]], "PlaceholderObserver": [[822, "placeholderobserver"]], "FuseCustomConfig": [[812, "fusecustomconfig"]], "fuse_modules": [[810, "fuse-modules"]], "MovingAverageMinMaxObserver": [[817, "movingaverageminmaxobserver"]], "get_observer_state_dict": [[832, "get-observer-state-dict"]], "FixedQParamsFakeQuantize": [[797, "fixedqparamsfakequantize"]], "NoopObserver": [[819, "noopobserver"]], "MovingAveragePerChannelMinMaxObserver": [[818, "movingaverageperchannelminmaxobserver"]], "DTypeConfig": [[790, "dtypeconfig"]], "default_fused_per_channel_wt_fake_quant": [[801, "default-fused-per-channel-wt-fake-quant"]], "convert": [[793, "convert"]], "default_weight_fake_quant": [[805, "default-weight-fake-quant"]], "ConvertCustomConfig": [[811, "convertcustomconfig"]], "default_eval_fn": [[794, "default-eval-fn"]], "QuantStub": [[785, "quantstub"]], "disable_observer": [[807, "disable-observer"]], "MinMaxObserver": [[816, "minmaxobserver"]], "default_observer": [[828, "default-observer"]], "FakeQuantizeBase": [[796, "fakequantizebase"]], "default_histogram_observer": [[827, "default-histogram-observer"]], "DeQuantStub": [[784, "dequantstub"]], "QuantWrapper": [[786, "quantwrapper"]], "BackendConfig": [[788, "backendconfig"]], "ObservationType": [[792, "observationtype"]], "ObserverBase": [[820, "observerbase"]], "default_fused_act_fake_quant": [[800, "default-fused-act-fake-quant"]], "PrepareCustomConfig": [[813, "preparecustomconfig"]], "default_fused_wt_fake_quant": [[802, "default-fused-wt-fake-quant"]], "BackendPatternConfig": [[789, "backendpatternconfig"]], "enable_fake_quant": [[808, "enable-fake-quant"]], "PerChannelMinMaxObserver": [[821, "perchannelminmaxobserver"]], "default_fake_quant": [[799, "default-fake-quant"]], "default_weight_observer": [[831, "default-weight-observer"]], "default_per_channel_weight_observer": [[829, "default-per-channel-weight-observer"]], "conv3d": [[770, "conv3d"]], "hardsigmoid": [[772, "hardsigmoid"]], "adaptive_avg_pool3d": [[763, "adaptive-avg-pool3d"]], "interpolate": [[775, "interpolate"]], "upsample": [[781, "upsample"]], "upsample_bilinear": [[782, "upsample-bilinear"]], "QFunctional": [[753, "qfunctional"]], "adaptive_avg_pool2d": [[762, "adaptive-avg-pool2d"]], "hardtanh": [[774, "hardtanh"]], "FloatFunctional": [[744, "floatfunctional"]], "leaky_relu": [[776, "leaky-relu"]], "clamp": [[767, "clamp"]], "FXFloatFunctional": [[743, "fxfloatfunctional"]], "conv1d": [[768, "conv1d"]], "max_pool1d": [[778, "max-pool1d"]], "threshold": [[780, "threshold"]], "avg_pool3d": [[765, "avg-pool3d"]], "hardswish": [[773, "hardswish"]], "max_pool2d": [[779, "max-pool2d"]], "conv2d": [[769, "conv2d"]], "elu": [[771, "elu"]], "linear": [[777, "linear"]], "upsample_nearest": [[783, "upsample-nearest"]], "celu": [[766, "celu"]], "avg_pool2d": [[764, "avg-pool2d"]], "LinearReLU": [[724, "linearrelu"], [707, "linearrelu"], [716, "linearrelu"], [725, "linearrelu"]], "ConvBn3d": [[700, "convbn3d"], [710, "convbn3d"]], "torch.adjoint": [[688, "torch-adjoint"]], "torch.aminmax": [[693, "torch-aminmax"]], "ConvBnReLU1d": [[701, "convbnrelu1d"], [711, "convbnrelu1d"]], "ConvReLU2d": [[714, "convrelu2d"], [722, "convrelu2d"], [705, "convrelu2d"]], "ConvBnReLU3d": [[703, "convbnrelu3d"], [713, "convbnrelu3d"]], "update_bn_stats": [[718, "update-bn-stats"]], "ConvBnReLU2d": [[702, "convbnrelu2d"], [712, "convbnrelu2d"]], "freeze_bn_stats": [[717, "freeze-bn-stats"]], "ConvBn2d": [[699, "convbn2d"], [709, "convbn2d"]], "ConvReLU3d": [[723, "convrelu3d"], [715, "convrelu3d"], [706, "convrelu3d"]], "torch.angle": [[694, "torch-angle"]], "ConvReLU1d": [[704, "convrelu1d"], [721, "convrelu1d"]], "torch.addmv": [[686, "torch-addmv"]], "ConvBn1d": [[708, "convbn1d"], [698, "convbn1d"]], "BNReLU2d": [[719, "bnrelu2d"], [696, "bnrelu2d"]], "torch.allclose": [[690, "torch-allclose"]], "BNReLU3d": [[720, "bnrelu3d"], [697, "bnrelu3d"]], "torch.all": [[689, "torch-all"]], "torch.amin": [[692, "torch-amin"]], "torch.amax": [[691, "torch-amax"]], "torch.any": [[695, "torch-any"]], "torch.addr": [[687, "torch-addr"]], "torch._foreach_log2_": [[655, "torch-foreach-log2"]], "torch._foreach_erfc": [[637, "torch-foreach-erfc"]], "torch._foreach_floor": [[643, "torch-foreach-floor"]], "torch.addcdiv": [[683, "torch-addcdiv"]], "torch._foreach_lgamma": [[647, "torch-foreach-lgamma"]], "torch._foreach_log10_": [[651, "torch-foreach-log10"]], "torch._foreach_neg": [[657, "torch-foreach-neg"]], "torch._foreach_log1p_": [[653, "torch-foreach-log1p"]], "torch._foreach_log10": [[650, "torch-foreach-log10"]], "torch._foreach_exp": [[639, "torch-foreach-exp"]], "torch._foreach_log_": [[656, "torch-foreach-log"]], "torch._foreach_sqrt_": [[670, "torch-foreach-sqrt"]], "torch._foreach_expm1": [[641, "torch-foreach-expm1"]], "torch.add": [[681, "torch-add"]], "torch._foreach_reciprocal_": [[660, "torch-foreach-reciprocal"]], "torch._foreach_sin": [[665, "torch-foreach-sin"]], "torch._foreach_log2": [[654, "torch-foreach-log2"]], "torch.acosh": [[680, "torch-acosh"]], "torch.addbmm": [[682, "torch-addbmm"]], "torch._foreach_exp_": [[640, "torch-foreach-exp"]], "torch._foreach_erfc_": [[638, "torch-foreach-erfc"]], "torch.addmm": [[685, "torch-addmm"]], "torch._foreach_frac": [[645, "torch-foreach-frac"]], "torch._foreach_lgamma_": [[648, "torch-foreach-lgamma"]], "torch._foreach_frac_": [[646, "torch-foreach-frac"]], "torch._foreach_reciprocal": [[659, "torch-foreach-reciprocal"]], "torch._foreach_sinh": [[667, "torch-foreach-sinh"]], "torch._foreach_log": [[649, "torch-foreach-log"]], "torch._foreach_floor_": [[644, "torch-foreach-floor"]], "torch._foreach_tan": [[671, "torch-foreach-tan"]], "torch._logging.set_logs": [[676, "torch-logging-set-logs"]], "torch._foreach_expm1_": [[642, "torch-foreach-expm1"]], "torch._foreach_tan_": [[672, "torch-foreach-tan"]], "torch._foreach_sigmoid": [[663, "torch-foreach-sigmoid"]], "torch.addcmul": [[684, "torch-addcmul"]], "torch._foreach_trunc": [[673, "torch-foreach-trunc"]], "torch._foreach_zero_": [[675, "torch-foreach-zero"]], "torch._foreach_neg_": [[658, "torch-foreach-neg"]], "torch.abs": [[677, "torch-abs"]], "torch._foreach_sin_": [[666, "torch-foreach-sin"]], "torch._foreach_sinh_": [[668, "torch-foreach-sinh"]], "torch._foreach_round_": [[662, "torch-foreach-round"]], "torch._foreach_log1p": [[652, "torch-foreach-log1p"]], "torch.absolute": [[678, "torch-absolute"]], "torch._foreach_trunc_": [[674, "torch-foreach-trunc"]], "torch._foreach_round": [[661, "torch-foreach-round"]], "torch._foreach_sigmoid_": [[664, "torch-foreach-sigmoid"]], "torch.acos": [[679, "torch-acos"]], "torch._foreach_sqrt": [[669, "torch-foreach-sqrt"]], "torch.Tensor.true_divide_": [[596, "torch-tensor-true-divide"]], "torch._assert": [[620, "torch-assert"]], "torch.Tensor.true_divide": [[595, "torch-tensor-true-divide"]], "torch.Tensor.tril": [[591, "torch-tensor-tril"]], "torch._foreach_ceil": [[629, "torch-foreach-ceil"]], "torch.Tensor.unsqueeze": [[607, "torch-tensor-unsqueeze"]], "torch.Tensor.unflatten": [[602, "torch-tensor-unflatten"]], "torch.Tensor.triu_": [[594, "torch-tensor-triu"]], "torch.Tensor.view_as": [[614, "torch-tensor-view-as"]], "torch._foreach_cosh_": [[634, "torch-foreach-cosh"]], "torch.Tensor.triangular_solve": [[590, "torch-tensor-triangular-solve"]], "torch.Tensor.transpose_": [[589, "torch-tensor-transpose"]], "torch.Tensor.trunc": [[597, "torch-tensor-trunc"]], "torch._foreach_atan_": [[628, "torch-foreach-atan"]], "torch.Tensor.tril_": [[592, "torch-tensor-tril"]], "torch._foreach_abs": [[621, "torch-foreach-abs"]], "torch.Tensor.var": [[611, "torch-tensor-var"]], "torch.Tensor.unsqueeze_": [[608, "torch-tensor-unsqueeze"]], "torch.Tensor.unbind": [[601, "torch-tensor-unbind"]], "torch._foreach_abs_": [[622, "torch-foreach-abs"]], "torch.Tensor.transpose": [[588, "torch-tensor-transpose"]], "torch.Tensor.xlogy": [[617, "torch-tensor-xlogy"]], "torch.Tensor.untyped_storage": [[609, "torch-tensor-untyped-storage"]], "torch.Tensor.unique": [[605, "torch-tensor-unique"]], "torch._foreach_erf": [[635, "torch-foreach-erf"]], "torch._foreach_erf_": [[636, "torch-foreach-erf"]], "torch.Tensor.unfold": [[603, "torch-tensor-unfold"]], "torch._foreach_cosh": [[633, "torch-foreach-cosh"]], "torch.Tensor.vdot": [[612, "torch-tensor-vdot"]], "torch.Tensor.view": [[613, "torch-tensor-view"]], "torch.Tensor.values": [[610, "torch-tensor-values"]], "torch._foreach_atan": [[627, "torch-foreach-atan"]], "torch.Tensor.triu": [[593, "torch-tensor-triu"]], "torch.Tensor.vsplit": [[615, "torch-tensor-vsplit"]], "torch._foreach_cos_": [[632, "torch-foreach-cos"]], "torch.Tensor.where": [[616, "torch-tensor-where"]], "torch.Tensor.xlogy_": [[618, "torch-tensor-xlogy"]], "torch._foreach_acos_": [[624, "torch-foreach-acos"]], "torch.Tensor.uniform_": [[604, "torch-tensor-uniform"]], "torch._foreach_cos": [[631, "torch-foreach-cos"]], "torch.Tensor.trunc_": [[598, "torch-tensor-trunc"]], "torch._foreach_asin_": [[626, "torch-foreach-asin"]], "torch._foreach_asin": [[625, "torch-foreach-asin"]], "torch._foreach_ceil_": [[630, "torch-foreach-ceil"]], "torch.Tensor.type_as": [[600, "torch-tensor-type-as"]], "torch.Tensor.unique_consecutive": [[606, "torch-tensor-unique-consecutive"]], "torch._foreach_acos": [[623, "torch-foreach-acos"]], "torch.Tensor.type": [[599, "torch-tensor-type"]], "torch.Tensor.zero_": [[619, "torch-tensor-zero"]], "torch.Tensor.sub": [[557, "torch-tensor-sub"]], "torch.Tensor.sparse_resize_": [[541, "torch-tensor-sparse-resize"]], "torch.Tensor.storage_type": [[555, "torch-tensor-storage-type"]], "torch.Tensor.squeeze_": [[549, "torch-tensor-squeeze"]], "torch.Tensor.split": [[543, "torch-tensor-split"]], "torch.Tensor.swapaxes": [[564, "torch-tensor-swapaxes"]], "torch.Tensor.to_mkldnn": [[578, "torch-tensor-to-mkldnn"]], "torch.Tensor.storage_offset": [[554, "torch-tensor-storage-offset"]], "torch.Tensor.to": [[576, "torch-tensor-to"]], "torch.Tensor.take_along_dim": [[569, "torch-tensor-take-along-dim"]], "torch.Tensor.tolist": [[585, "torch-tensor-tolist"]], "torch.Tensor.stride": [[556, "torch-tensor-stride"]], "torch.Tensor.tensor_split": [[574, "torch-tensor-tensor-split"]], "torch.Tensor.stft": [[552, "torch-tensor-stft"]], "torch.Tensor.squeeze": [[548, "torch-tensor-squeeze"]], "torch.Tensor.square": [[546, "torch-tensor-square"]], "torch.Tensor.take": [[568, "torch-tensor-take"]], "torch.Tensor.swapdims": [[565, "torch-tensor-swapdims"]], "torch.Tensor.tanh": [[572, "torch-tensor-tanh"]], "torch.Tensor.sspaddmm": [[550, "torch-tensor-sspaddmm"]], "torch.Tensor.to_sparse": [[579, "torch-tensor-to-sparse"]], "torch.Tensor.to_sparse_bsc": [[580, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.trace": [[587, "torch-tensor-trace"]], "torch.Tensor.tan": [[570, "torch-tensor-tan"]], "torch.Tensor.to_sparse_csr": [[584, "torch-tensor-to-sparse-csr"]], "torch.Tensor.sparse_mask": [[540, "torch-tensor-sparse-mask"]], "torch.Tensor.sparse_dim": [[539, "torch-tensor-sparse-dim"]], "torch.Tensor.sub_": [[558, "torch-tensor-sub"]], "torch.Tensor.to_sparse_coo": [[582, "torch-tensor-to-sparse-coo"]], "torch.Tensor.to_dense": [[577, "torch-tensor-to-dense"]], "torch.Tensor.topk": [[586, "torch-tensor-topk"]], "torch.Tensor.sqrt_": [[545, "torch-tensor-sqrt"]], "torch.Tensor.t": [[566, "torch-tensor-t"]], "torch.Tensor.storage": [[553, "torch-tensor-storage"]], "torch.Tensor.t_": [[567, "torch-tensor-t"]], "torch.Tensor.sparse_resize_and_clear_": [[542, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.subtract": [[559, "torch-tensor-subtract"]], "torch.Tensor.to_sparse_csc": [[583, "torch-tensor-to-sparse-csc"]], "torch.Tensor.svd": [[563, "torch-tensor-svd"]], "torch.Tensor.tanh_": [[573, "torch-tensor-tanh"]], "torch.Tensor.sum": [[561, "torch-tensor-sum"]], "torch.Tensor.sqrt": [[544, "torch-tensor-sqrt"]], "torch.Tensor.subtract_": [[560, "torch-tensor-subtract"]], "torch.Tensor.tile": [[575, "torch-tensor-tile"]], "torch.Tensor.sum_to_size": [[562, "torch-tensor-sum-to-size"]], "torch.Tensor.std": [[551, "torch-tensor-std"]], "torch.Tensor.tan_": [[571, "torch-tensor-tan"]], "torch.Tensor.to_sparse_bsr": [[581, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.square_": [[547, "torch-tensor-square"]], "torch.Tensor.select_scatter": [[516, "torch-tensor-select-scatter"]], "torch.Tensor.smm": [[536, "torch-tensor-smm"]], "torch.Tensor.requires_grad": [[492, "torch-tensor-requires-grad"]], "torch.Tensor.round_": [[505, "torch-tensor-round"]], "torch.Tensor.share_memory_": [[520, "torch-tensor-share-memory"]], "torch.Tensor.scatter": [[509, "torch-tensor-scatter"]], "torch.Tensor.sigmoid": [[522, "torch-tensor-sigmoid"]], "torch.Tensor.signbit": [[526, "torch-tensor-signbit"]], "torch.Tensor.slice_scatter": [[534, "torch-tensor-slice-scatter"]], "torch.Tensor.short": [[521, "torch-tensor-short"]], "torch.Tensor.select": [[515, "torch-tensor-select"]], "torch.Tensor.sign_": [[525, "torch-tensor-sign"]], "torch.Tensor.sgn": [[518, "torch-tensor-sgn"]], "torch.Tensor.set_": [[517, "torch-tensor-set"]], "torch.Tensor.scatter_": [[510, "torch-tensor-scatter"]], "torch.Tensor.sinc": [[529, "torch-tensor-sinc"]], "torch.Tensor.resize_as_": [[497, "torch-tensor-resize-as"]], "torch.Tensor.sigmoid_": [[523, "torch-tensor-sigmoid"]], "torch.Tensor.roll": [[502, "torch-tensor-roll"]], "torch.Tensor.retains_grad": [[501, "torch-tensor-retains-grad"]], "torch.Tensor.sort": [[538, "torch-tensor-sort"]], "torch.Tensor.sinc_": [[530, "torch-tensor-sinc"]], "torch.Tensor.reshape_as": [[495, "torch-tensor-reshape-as"]], "torch.Tensor.sgn_": [[519, "torch-tensor-sgn"]], "torch.Tensor.rsqrt": [[507, "torch-tensor-rsqrt"]], "torch.Tensor.retain_grad": [[500, "torch-tensor-retain-grad"]], "torch.Tensor.requires_grad_": [[493, "torch-tensor-requires-grad"]], "torch.Tensor.scatter_reduce_": [[514, "torch-tensor-scatter-reduce"]], "torch.Tensor.reshape": [[494, "torch-tensor-reshape"]], "torch.Tensor.sin": [[527, "torch-tensor-sin"]], "torch.Tensor.slogdet": [[535, "torch-tensor-slogdet"]], "torch.Tensor.resize_": [[496, "torch-tensor-resize"]], "torch.Tensor.sin_": [[528, "torch-tensor-sin"]], "torch.Tensor.repeat_interleave": [[491, "torch-tensor-repeat-interleave"]], "torch.Tensor.sign": [[524, "torch-tensor-sign"]], "torch.Tensor.round": [[504, "torch-tensor-round"]], "torch.Tensor.sinh": [[531, "torch-tensor-sinh"]], "torch.Tensor.repeat": [[490, "torch-tensor-repeat"]], "torch.Tensor.sinh_": [[532, "torch-tensor-sinh"]], "torch.Tensor.scatter_reduce": [[513, "torch-tensor-scatter-reduce"]], "torch.Tensor.resolve_neg": [[499, "torch-tensor-resolve-neg"]], "torch.Tensor.row_indices": [[506, "torch-tensor-row-indices"]], "torch.Tensor.rsqrt_": [[508, "torch-tensor-rsqrt"]], "torch.Tensor.softmax": [[537, "torch-tensor-softmax"]], "torch.Tensor.rot90": [[503, "torch-tensor-rot90"]], "torch.Tensor.scatter_add": [[511, "torch-tensor-scatter-add"]], "torch.Tensor.size": [[533, "torch-tensor-size"]], "torch.Tensor.scatter_add_": [[512, "torch-tensor-scatter-add"]], "torch.Tensor.resolve_conj": [[498, "torch-tensor-resolve-conj"]], "torch.Tensor.normal_": [[452, "torch-tensor-normal"]], "torch.Tensor.real": [[481, "torch-tensor-real"]], "torch.Tensor.not_equal_": [[454, "torch-tensor-not-equal"]], "torch.Tensor.pinverse": [[462, "torch-tensor-pinverse"]], "torch.Tensor.polygamma_": [[464, "torch-tensor-polygamma"]], "torch.Tensor.pin_memory": [[461, "torch-tensor-pin-memory"]], "torch.Tensor.register_hook": [[485, "torch-tensor-register-hook"]], "torch.Tensor.pow_": [[467, "torch-tensor-pow"]], "torch.Tensor.norm": [[451, "torch-tensor-norm"]], "torch.Tensor.polygamma": [[463, "torch-tensor-polygamma"]], "torch.Tensor.q_scale": [[473, "torch-tensor-q-scale"]], "torch.Tensor.q_per_channel_scales": [[471, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.nextafter": [[448, "torch-tensor-nextafter"]], "torch.Tensor.q_per_channel_axis": [[470, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.quantile": [[477, "torch-tensor-quantile"]], "torch.Tensor.qr": [[475, "torch-tensor-qr"]], "torch.Tensor.qscheme": [[476, "torch-tensor-qscheme"]], "torch.Tensor.new_empty": [[443, "torch-tensor-new-empty"]], "torch.Tensor.ormqr": [[458, "torch-tensor-ormqr"]], "torch.Tensor.reciprocal_": [[483, "torch-tensor-reciprocal"]], "torch.Tensor.outer": [[459, "torch-tensor-outer"]], "torch.Tensor.ravel": [[480, "torch-tensor-ravel"]], "torch.Tensor.numel": [[455, "torch-tensor-numel"]], "torch.Tensor.remainder_": [[487, "torch-tensor-remainder"]], "torch.Tensor.prod": [[468, "torch-tensor-prod"]], "torch.Tensor.numpy": [[456, "torch-tensor-numpy"]], "torch.Tensor.new_tensor": [[446, "torch-tensor-new-tensor"]], "torch.Tensor.new_zeros": [[447, "torch-tensor-new-zeros"]], "torch.Tensor.nextafter_": [[449, "torch-tensor-nextafter"]], "torch.Tensor.permute": [[460, "torch-tensor-permute"]], "torch.Tensor.not_equal": [[453, "torch-tensor-not-equal"]], "torch.Tensor.put_": [[469, "torch-tensor-put"]], "torch.Tensor.orgqr": [[457, "torch-tensor-orgqr"]], "torch.Tensor.remainder": [[486, "torch-tensor-remainder"]], "torch.Tensor.q_per_channel_zero_points": [[472, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.negative_": [[441, "torch-tensor-negative"]], "torch.Tensor.q_zero_point": [[474, "torch-tensor-q-zero-point"]], "torch.Tensor.random_": [[479, "torch-tensor-random"]], "torch.Tensor.nonzero": [[450, "torch-tensor-nonzero"]], "torch.Tensor.pow": [[466, "torch-tensor-pow"]], "torch.Tensor.renorm_": [[489, "torch-tensor-renorm"]], "torch.Tensor.nelement": [[442, "torch-tensor-nelement"]], "torch.Tensor.record_stream": [[484, "torch-tensor-record-stream"]], "torch.Tensor.positive": [[465, "torch-tensor-positive"]], "torch.Tensor.reciprocal": [[482, "torch-tensor-reciprocal"]], "torch.Tensor.new_full": [[444, "torch-tensor-new-full"]], "torch.Tensor.rad2deg": [[478, "torch-tensor-rad2deg"]], "torch.Tensor.renorm": [[488, "torch-tensor-renorm"]], "torch.Tensor.new_ones": [[445, "torch-tensor-new-ones"]], "torch.Tensor.mode": [[413, "torch-tensor-mode"]], "torch.Tensor.multinomial": [[419, "torch-tensor-multinomial"]], "torch.Tensor.negative": [[440, "torch-tensor-negative"]], "torch.Tensor.min": [[410, "torch-tensor-min"]], "torch.Tensor.matmul": [[403, "torch-tensor-matmul"]], "torch.Tensor.nansum": [[430, "torch-tensor-nansum"]], "torch.Tensor.masked_fill": [[398, "torch-tensor-masked-fill"]], "torch.Tensor.lt_": [[394, "torch-tensor-lt"]], "torch.Tensor.lu": [[395, "torch-tensor-lu"]], "torch.Tensor.long": [[392, "torch-tensor-long"]], "torch.Tensor.moveaxis": [[414, "torch-tensor-moveaxis"]], "torch.Tensor.msort": [[416, "torch-tensor-msort"]], "torch.Tensor.masked_select": [[402, "torch-tensor-masked-select"]], "torch.Tensor.mul_": [[418, "torch-tensor-mul"]], "torch.Tensor.median": [[409, "torch-tensor-median"]], "torch.Tensor.mvlgamma": [[423, "torch-tensor-mvlgamma"]], "torch.Tensor.mvlgamma_": [[424, "torch-tensor-mvlgamma"]], "torch.Tensor.map_": [[397, "torch-tensor-map"]], "torch.Tensor.matrix_power": [[405, "torch-tensor-matrix-power"]], "torch.Tensor.mul": [[417, "torch-tensor-mul"]], "torch.Tensor.lu_solve": [[396, "torch-tensor-lu-solve"]], "torch.Tensor.multiply_": [[421, "torch-tensor-multiply"]], "torch.Tensor.ne": [[436, "torch-tensor-ne"]], "torch.Tensor.ne_": [[437, "torch-tensor-ne"]], "torch.Tensor.neg_": [[439, "torch-tensor-neg"]], "torch.Tensor.nan_to_num_": [[426, "torch-tensor-nan-to-num"]], "torch.Tensor.mean": [[408, "torch-tensor-mean"]], "torch.Tensor.matrix_exp": [[404, "torch-tensor-matrix-exp"]], "torch.Tensor.multiply": [[420, "torch-tensor-multiply"]], "torch.Tensor.nbytes": [[433, "torch-tensor-nbytes"]], "torch.Tensor.neg": [[438, "torch-tensor-neg"]], "torch.Tensor.maximum": [[407, "torch-tensor-maximum"]], "torch.Tensor.narrow_copy": [[432, "torch-tensor-narrow-copy"]], "torch.Tensor.ndim": [[434, "torch-tensor-ndim"]], "torch.Tensor.masked_scatter_": [[401, "torch-tensor-masked-scatter"]], "torch.Tensor.masked_fill_": [[399, "torch-tensor-masked-fill"]], "torch.Tensor.ndimension": [[435, "torch-tensor-ndimension"]], "torch.Tensor.mm": [[412, "torch-tensor-mm"]], "torch.Tensor.lt": [[393, "torch-tensor-lt"]], "torch.Tensor.masked_scatter": [[400, "torch-tensor-masked-scatter"]], "torch.Tensor.mv": [[422, "torch-tensor-mv"]], "torch.Tensor.max": [[406, "torch-tensor-max"]], "torch.Tensor.nanmean": [[427, "torch-tensor-nanmean"]], "torch.Tensor.movedim": [[415, "torch-tensor-movedim"]], "torch.Tensor.nan_to_num": [[425, "torch-tensor-nan-to-num"]], "torch.Tensor.narrow": [[431, "torch-tensor-narrow"]], "torch.Tensor.minimum": [[411, "torch-tensor-minimum"]], "torch.Tensor.nanquantile": [[429, "torch-tensor-nanquantile"]], "torch.Tensor.nanmedian": [[428, "torch-tensor-nanmedian"]]}, "indexentries": {"optimizedmodule (class in torch._dynamo)": [[0, "torch._dynamo.OptimizedModule"]], "allow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.allow_in_graph"]], "disable() (in module torch._dynamo)": [[0, "torch._dynamo.disable"]], "disallow_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.disallow_in_graph"]], "export() (in module torch._dynamo)": [[0, "torch._dynamo.export"]], "forbid_in_graph() (in module torch._dynamo)": [[0, "torch._dynamo.forbid_in_graph"]], "graph_break() (in module torch._dynamo)": [[0, "torch._dynamo.graph_break"]], "list_backends() (in module torch._dynamo)": [[0, "torch._dynamo.list_backends"]], "mark_dynamic() (in module torch._dynamo)": [[0, "torch._dynamo.mark_dynamic"]], "mark_static() (in module torch._dynamo)": [[0, "torch._dynamo.mark_static"]], "module": [[0, "module-torch._dynamo"], [1, "module-torch.amp"], [1, "module-torch.cpu"], [1, "module-torch.cpu.amp"], [1, "module-torch.cuda.amp"], [2, "module-torch.autograd"], [3, "module-torch.backends"], [3, "module-torch.backends.cpu"], [3, "module-torch.backends.cuda"], [3, "module-torch.backends.cudnn"], [3, "module-torch.backends.mkl"], [3, "module-torch.backends.mkldnn"], [3, "module-torch.backends.mps"], [3, "module-torch.backends.openmp"], [3, "module-torch.backends.opt_einsum"], [3, "module-torch.backends.quantized"], [3, "module-torch.backends.xeon"], [3, "module-torch.backends.xnnpack"], [4, "module-torch.utils.benchmark"], [4, "module-torch.utils.benchmark.examples"], [4, "module-torch.utils.benchmark.op_fuzzers"], [4, "module-torch.utils.benchmark.utils"], [4, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [5, "module-torch.utils.bottleneck"], [30, "module-torch.__config__"], [33, "module-torch.cuda"], [34, "module-torch.cuda._sanitizer"], [37, "module-torch.utils.data"], [37, "module-torch.utils.data.datapipes"], [37, "module-torch.utils.data.datapipes.dataframe"], [37, "module-torch.utils.data.datapipes.iter"], [37, "module-torch.utils.data.datapipes.map"], [37, "module-torch.utils.data.datapipes.utils"], [40, "module-torch.distributed"], [40, "module-torch.distributed.algorithms"], [40, "module-torch.distributed.algorithms.ddp_comm_hooks"], [40, "module-torch.distributed.algorithms.model_averaging"], [40, "module-torch.distributed.elastic"], [40, "module-torch.distributed.elastic.utils"], [40, "module-torch.distributed.elastic.utils.data"], [40, "module-torch.distributed.launch"], [40, "module-torch.distributed.launcher"], [40, "module-torch.distributed.nn"], [40, "module-torch.distributed.nn.api"], [40, "module-torch.distributed.nn.jit"], [40, "module-torch.distributed.nn.jit.templates"], [40, "module-torch.distributed.pipeline"], [40, "module-torch.distributed.pipeline.sync"], [40, "module-torch.distributed.pipeline.sync.skip"], [40, "module-torch.distributed.tensor"], [42, "module-torch.distributed.checkpoint"], [44, "module-torch.distributed.optim"], [45, "module-torch.distributed.tensor.parallel"], [46, "module-torch.distributions"], [46, "module-torch.distributions.constraint_registry"], [46, "module-torch.distributions.constraints"], [46, "module-torch.distributions.kl"], [46, "module-torch.distributions.transforms"], [48, "module-torch.distributed.elastic.agent"], [48, "module-torch.distributed.elastic.agent.server"], [50, "module-torch.distributed.elastic.multiprocessing.errors"], [51, "module-torch.distributed.elastic.events"], [54, "module-torch.distributed.elastic.metrics"], [55, "module-torch.distributed.elastic.multiprocessing"], [57, "module-torch.distributed.elastic.rendezvous"], [57, "module-torch.distributed.elastic.rendezvous.registry"], [58, "module-torch.distributed.run"], [59, "module-torch.distributed.elastic.timer"], [61, "module-torch.fft"], [62, "module-torch.distributed.fsdp"], [64, "module-torch.func"], [69, "module-torch.futures"], [70, "module-torch.fx"], [70, "module-torch.fx.experimental"], [70, "module-torch.fx.experimental.migrate_gradual_types"], [70, "module-torch.fx.experimental.unification"], [70, "module-torch.fx.experimental.unification.multipledispatch"], [70, "module-torch.fx.passes"], [70, "module-torch.fx.passes.backends"], [70, "module-torch.fx.passes.dialect"], [70, "module-torch.fx.passes.dialect.common"], [70, "module-torch.fx.passes.infra"], [70, "module-torch.fx.passes.tests"], [70, "module-torch.fx.passes.utils"], [1856, "module-torch.hub"], [1859, "module-torch.jit"], [1859, "module-torch.jit.mobile"], [1860, "module-torch.jit.supported_ops"], [1864, "module-torch.jit.unsupported_tensor_ops"], [1865, "module-torch.utils.jit"], [1867, "module-torch.linalg"], [1868, "module-torch._logging"], [1869, "module-torch.masked"], [1869, "module-torch.masked.maskedtensor"], [1871, "module-torch.utils.model_zoo"], [1872, "module-torch.monitor"], [1873, "module-torch.mps"], [1874, "module-torch.multiprocessing"], [1877, "module-torch.nested"], [1878, "module-torch.nn"], [1878, "module-torch.nn.backends"], [1878, "module-torch.nn.modules"], [1878, "module-torch.nn.parallel"], [1878, "module-torch.nn.utils"], [1878, "module-torch.nn.utils.stateless"], [1900, "module-torch.onnx"], [1901, "module-torch.onnx._internal.diagnostics"], [1903, "module-torch.optim"], [1904, "module-torch.package"], [1904, "module-torch.package.analyze"], [1906, "module-torch.profiler"], [1907, "module-torch.ao"], [1907, "module-torch.ao.nn"], [1907, "module-torch.ao.nn.quantizable"], [1907, "module-torch.ao.nn.quantizable.modules"], [1907, "module-torch.ao.nn.quantized"], [1907, "module-torch.ao.nn.quantized.reference"], [1907, "module-torch.ao.nn.quantized.reference.modules"], [1907, "module-torch.ao.nn.sparse"], [1907, "module-torch.ao.nn.sparse.quantized"], [1907, "module-torch.ao.nn.sparse.quantized.dynamic"], [1907, "module-torch.ao.ns"], [1907, "module-torch.ao.ns.fx"], [1907, "module-torch.ao.pruning"], [1907, "module-torch.ao.pruning.scheduler"], [1907, "module-torch.ao.pruning.sparsifier"], [1907, "module-torch.ao.quantization"], [1907, "module-torch.ao.quantization.backend_config"], [1907, "module-torch.ao.quantization.fx"], [1910, "module-torch.ao.nn.intrinsic"], [1910, "module-torch.ao.nn.intrinsic.modules"], [1910, "module-torch.ao.nn.intrinsic.qat"], [1910, "module-torch.ao.nn.intrinsic.qat.modules"], [1910, "module-torch.ao.nn.intrinsic.quantized"], [1910, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1910, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1910, "module-torch.ao.nn.intrinsic.quantized.modules"], [1910, "module-torch.ao.nn.qat"], [1910, "module-torch.ao.nn.qat.dynamic"], [1910, "module-torch.ao.nn.qat.dynamic.modules"], [1910, "module-torch.ao.nn.qat.modules"], [1910, "module-torch.ao.nn.quantized.dynamic"], [1910, "module-torch.ao.nn.quantized.dynamic.modules"], [1910, "module-torch.ao.nn.quantized.functional"], [1910, "module-torch.ao.nn.quantized.modules"], [1910, "module-torch.nn.intrinsic"], [1910, "module-torch.nn.intrinsic.modules"], [1910, "module-torch.nn.intrinsic.qat"], [1910, "module-torch.nn.intrinsic.qat.modules"], [1910, "module-torch.nn.intrinsic.quantized"], [1910, "module-torch.nn.intrinsic.quantized.dynamic"], [1910, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1910, "module-torch.nn.intrinsic.quantized.modules"], [1910, "module-torch.nn.qat"], [1910, "module-torch.nn.qat.dynamic"], [1910, "module-torch.nn.qat.dynamic.modules"], [1910, "module-torch.nn.qat.modules"], [1910, "module-torch.nn.quantizable"], [1910, "module-torch.nn.quantizable.modules"], [1910, "module-torch.nn.quantized"], [1910, "module-torch.nn.quantized.dynamic"], [1910, "module-torch.nn.quantized.dynamic.modules"], [1910, "module-torch.nn.quantized.modules"], [1910, "module-torch.quantization"], [1910, "module-torch.quantization.fx"], [1911, "module-torch.random"], [1912, "module-torch.distributed.autograd"], [1912, "module-torch.distributed.rpc"], [1915, "module-torch.signal"], [1915, "module-torch.signal.windows"], [1916, "module-torch.sparse"], [1917, "module-torch.special"], [1921, "module-torch.utils.tensorboard"], [1923, "module-torch.testing"], [1924, "module-torch"], [1924, "module-torch.autograd"], [1924, "module-torch.contrib"], [1924, "module-torch.utils"], [1924, "module-torch.utils.backcompat"], [1924, "module-torch.utils.hipify"], [1924, "module-torch.utils.model_dump"], [1925, "module-torch.ao.ns._numeric_suite"], [1926, "module-torch.ao.ns._numeric_suite_fx"]], "optimize() (in module torch._dynamo)": [[0, "torch._dynamo.optimize"]], "optimize_assert() (in module torch._dynamo)": [[0, "torch._dynamo.optimize_assert"]], "register_backend() (in module torch._dynamo)": [[0, "torch._dynamo.register_backend"]], "reset() (in module torch._dynamo)": [[0, "torch._dynamo.reset"]], "run() (in module torch._dynamo)": [[0, "torch._dynamo.run"]], "torch._dynamo": [[0, "module-torch._dynamo"]], "gradscaler (class in torch.cuda.amp)": [[1, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[1, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[1, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[1, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[1, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.load_state_dict"]], "scale() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[1, "module-torch.amp"]], "torch.cpu": [[1, "module-torch.cpu"]], "torch.cpu.amp": [[1, "module-torch.cpu.amp"]], "torch.cuda.amp": [[1, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[1, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[2, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[2, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[2, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[2, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[2, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[2, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[2, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[2, "module-torch.autograd"], [1924, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[3, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[3, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[3, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[3, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[3, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[3, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[3, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[3, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[3, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[3, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[3, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[3, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[3, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[3, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[3, "module-torch.backends"]], "torch.backends.cpu": [[3, "module-torch.backends.cpu"]], "torch.backends.cuda": [[3, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[3, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[3, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[3, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[3, "module-torch.backends.mps"]], "torch.backends.openmp": [[3, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[3, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[3, "module-torch.backends.quantized"]], "torch.backends.xeon": [[3, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[3, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[3, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[3, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[3, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[4, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[4, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[4, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[4, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[4, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[4, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[4, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[4, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[4, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[4, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[4, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[5, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[6, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[19, "torch.compile"], [949, "torch.compile"]], "parallel_info() (in module torch.__config__)": [[30, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[30, "torch.__config__.show"]], "torch.__config__": [[30, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[31, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[33, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[34, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[34, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[37, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[37, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[37, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[37, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[37, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[37, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[37, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[37, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[37, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[37, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[37, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[37, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[37, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[37, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[37, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[37, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[37, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[37, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[37, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[37, "torch.utils.data.random_split"]], "torch.utils.data": [[37, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[37, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[37, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[37, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[37, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[37, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[38, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[38, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[38, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[38, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[38, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[38, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[38, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[38, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[40, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[40, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[40, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[40, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[40, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[40, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[40, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[40, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[40, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[40, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[40, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[40, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[40, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[40, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[40, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[40, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[40, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[40, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[40, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[40, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[40, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[40, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[40, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[40, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[40, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[40, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[40, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[40, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[40, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[40, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[40, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[40, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[40, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[40, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[40, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[40, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[40, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[40, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[40, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[40, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[40, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[40, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[40, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[40, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[40, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[40, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[40, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[40, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[40, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[40, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[40, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[40, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[40, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[40, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[40, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[40, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[40, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[40, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[40, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[40, "module-torch.distributed"]], "torch.distributed.algorithms": [[40, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[40, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[40, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[40, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[40, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[40, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[40, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[40, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[40, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[40, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[40, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[40, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[40, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[40, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[40, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[40, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[40, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[41, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[41, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[41, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[41, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[41, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[41, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[41, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[41, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[41, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[42, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[42, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[42, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[42, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[42, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[42, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[42, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[42, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[42, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[42, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[42, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[42, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[42, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[42, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[42, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[42, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[42, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[42, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[42, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[42, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[42, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[42, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[44, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[44, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[44, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[44, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[44, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[44, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[44, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[44, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[45, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[45, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[45, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[45, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[45, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[46, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[46, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[46, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[46, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[46, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[46, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[46, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[46, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[46, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[46, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[46, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[46, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[46, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[46, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[46, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[46, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[46, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[46, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[46, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[46, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[46, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[46, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[46, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[46, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[46, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[46, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[46, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[46, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[46, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[46, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[46, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[46, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[46, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[46, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[46, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[46, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[46, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[46, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[46, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[46, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[46, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[46, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[46, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[46, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[46, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[46, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[46, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[46, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[46, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[46, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[46, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[46, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[46, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[46, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[46, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[46, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[46, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[46, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[46, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[46, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[46, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[46, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[46, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[46, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[46, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[46, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[46, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[46, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[46, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[46, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[46, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[46, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[46, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[46, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[46, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[46, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[46, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[46, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[46, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[46, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[46, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[46, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[46, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[46, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[46, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[46, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[46, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[46, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[46, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[46, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[46, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[46, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[46, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[46, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[46, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[46, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[46, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[46, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[46, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[46, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[46, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[46, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[46, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[46, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[46, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[46, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[46, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[46, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[46, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[46, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[46, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[46, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[46, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[46, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[46, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[46, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[46, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[46, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[46, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[46, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[46, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[46, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[46, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[46, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[46, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[46, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[46, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[46, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[46, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[46, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[46, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[46, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[46, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[46, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[46, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[46, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[46, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[46, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[46, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[46, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[46, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[46, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[46, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[46, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[46, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[46, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[46, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[46, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[46, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[46, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[46, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[46, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[46, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[46, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[46, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[46, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[46, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[46, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[46, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[46, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[46, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[46, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[46, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[46, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[46, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[46, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[46, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[46, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[46, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[46, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[46, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[46, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[46, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[46, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[46, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[46, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[46, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[46, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[46, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[46, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[46, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[46, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[46, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[46, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[46, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[46, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[46, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[46, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[46, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[46, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[46, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[46, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[46, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[46, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[46, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[46, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[46, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[46, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[46, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[46, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[46, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[46, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[46, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[46, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[46, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[46, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[46, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[46, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[46, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[46, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[46, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[46, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[46, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[46, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[46, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[46, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[46, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[46, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[46, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[46, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[46, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[46, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[46, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[46, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[46, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[46, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[46, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[46, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[46, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[46, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[46, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[46, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[46, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[46, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[46, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[46, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[46, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[46, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[46, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[46, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[46, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[46, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[46, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[46, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[46, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[46, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[46, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[46, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[46, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[46, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[46, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[46, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[46, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[46, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[46, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[46, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[46, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[46, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[46, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[46, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[46, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[46, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[46, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[46, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[46, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[46, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[46, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[46, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[46, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[46, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[46, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[46, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[46, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[46, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[46, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[46, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[46, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[46, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[46, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[46, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[46, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[46, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[46, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[46, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[46, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[46, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[46, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[46, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[46, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[46, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[46, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[46, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[46, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[46, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[46, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[46, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[46, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[46, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[46, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[46, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[46, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[46, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[46, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[46, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[46, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[46, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[46, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[46, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[46, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[46, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[46, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[46, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[46, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[46, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[46, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[46, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[46, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[46, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[46, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[46, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[46, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[46, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[46, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[46, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[46, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[46, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[47, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[47, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[48, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[48, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[48, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[48, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[48, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[48, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[48, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[48, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[48, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[48, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[48, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[48, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[48, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[48, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[50, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[50, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[50, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[50, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[50, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[51, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[51, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[51, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[51, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[51, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[51, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[54, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[54, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[54, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[54, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[54, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[54, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[54, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[55, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[55, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[55, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[55, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[55, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[55, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[57, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[57, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[57, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[57, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[57, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[57, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[57, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[57, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[57, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[57, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[57, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[57, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[57, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[57, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[57, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[57, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[57, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[57, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[57, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[57, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[57, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[57, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[57, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[58, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[59, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[59, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[59, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[59, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[59, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[59, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[59, "module-torch.distributed.elastic.timer"]], "torch.fft": [[61, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[62, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[62, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[62, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[62, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "load_optim_state_dict_pre_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.load_optim_state_dict_pre_hook"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_post_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_post_hook"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[62, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[62, "module-torch.distributed.fsdp"]], "torch.func": [[64, "module-torch.func"]], "future (class in torch.futures)": [[69, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[69, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[69, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[69, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[69, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[69, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[69, "torch.futures.Future.then"]], "torch.futures": [[69, "module-torch.futures"]], "value() (torch.futures.future method)": [[69, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[69, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[69, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[70, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[70, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[70, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[70, "torch.fx.Node"]], "proxy (class in torch.fx)": [[70, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[70, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[70, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[70, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[70, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[70, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[70, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[70, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[70, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[70, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[70, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[70, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[70, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[70, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[70, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[70, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[70, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[70, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[70, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[70, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[70, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[70, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[70, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[70, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[70, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[70, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[70, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[70, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[70, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[70, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[70, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[70, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[70, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[70, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[70, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[70, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[70, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[70, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[70, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[70, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[70, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[70, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[70, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[70, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[70, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[70, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[70, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[70, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[70, "module-torch.fx"]], "torch.fx.experimental": [[70, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[70, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[70, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[70, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[70, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[70, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[70, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[70, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[70, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[70, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[70, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[70, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[70, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[70, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[70, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[70, "torch.fx.wrap"]], "generator (class in torch)": [[88, "torch.Generator"]], "device (torch.generator attribute)": [[88, "torch.Generator.device"]], "get_state() (torch.generator method)": [[88, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[88, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[88, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[88, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[88, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[89, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[90, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[91, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[92, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[93, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[94, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[95, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[96, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[97, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[98, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[99, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[100, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[101, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[102, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[103, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[104, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[105, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[106, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[107, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[108, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[109, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[110, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[111, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[112, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[113, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[114, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[115, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[116, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[117, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[118, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[119, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[120, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[121, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[122, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[123, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[124, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[125, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[126, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[127, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[128, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[129, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[130, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[131, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[132, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[133, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[134, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[135, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[136, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[137, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[138, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[139, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[140, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[141, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[142, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[143, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[144, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[145, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[146, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[147, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[148, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[149, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[150, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[151, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[152, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[153, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[154, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[155, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[156, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[157, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[158, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[159, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[160, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[161, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[162, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[163, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[164, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[165, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[166, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[167, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[168, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[169, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[170, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[171, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[172, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[173, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[174, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[175, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[176, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[177, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[178, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[179, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[180, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[181, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[182, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[183, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[184, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[185, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[186, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[187, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[188, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[189, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[190, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[191, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[192, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[193, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[194, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[195, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[196, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[197, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[198, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[199, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[200, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[201, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[202, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[203, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[204, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[205, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[206, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[207, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[208, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[209, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[210, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[211, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[212, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[213, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[214, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[215, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[216, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[217, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[218, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[219, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[220, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[221, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[222, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[223, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[224, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[225, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[226, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[227, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[228, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[229, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[230, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[231, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[232, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[233, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[234, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[235, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[236, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[237, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[238, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[239, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[240, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[241, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[242, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[243, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[244, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[245, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[246, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[247, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[248, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[249, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[250, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[251, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[252, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[253, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[254, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[255, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[256, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[257, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[258, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[259, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[260, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[261, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[262, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[263, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[264, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[265, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[266, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[267, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[268, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[269, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[270, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[271, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[272, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[273, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[274, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[275, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[276, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[277, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[278, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[279, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[280, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[281, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[282, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[283, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[284, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[285, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[286, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[287, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[288, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[289, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[290, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[291, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[292, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[293, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[294, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[295, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[296, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[297, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[298, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[299, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[300, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[301, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[302, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[303, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[304, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[305, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[306, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[307, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[308, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[309, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[310, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[311, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[312, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[313, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[314, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[315, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[316, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[317, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[318, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[319, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[320, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[321, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[322, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[323, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[324, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[325, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[326, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[327, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[328, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[329, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[330, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[331, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[332, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[333, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[334, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[335, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[336, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[337, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[338, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[339, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[340, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[341, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[342, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[343, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[344, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[345, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[346, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[347, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[348, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[349, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[350, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[351, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[352, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[353, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[354, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[355, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[356, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[357, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[358, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[359, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[360, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[361, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[362, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[363, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[364, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[365, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[366, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[367, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[368, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[369, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[370, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[371, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[372, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[373, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[374, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[375, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[376, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[377, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[378, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[379, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[380, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[381, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[382, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[383, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[384, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[385, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[386, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[387, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[388, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[389, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[390, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[391, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[392, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[393, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[394, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[395, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[396, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[397, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[398, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[399, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[400, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[401, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[402, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[403, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[404, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[405, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[406, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[407, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[408, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[409, "torch.Tensor.median"]], "min() (torch.tensor method)": [[410, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[411, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[412, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[413, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[414, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[415, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[416, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[417, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[418, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[419, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[420, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[421, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[422, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[423, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[424, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[425, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[426, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[427, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[428, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[429, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[430, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[431, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[432, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[433, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[434, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[435, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[436, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[437, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[438, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[439, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[440, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[441, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[442, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[443, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[444, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[445, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[446, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[447, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[448, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[449, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[450, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[451, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[452, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[453, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[454, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[455, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[456, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[457, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[458, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[459, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[460, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[461, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[462, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[463, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[464, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[465, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[466, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[467, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[468, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[469, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[470, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[471, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[472, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[473, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[474, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[475, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[476, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[477, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[478, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[479, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[480, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[481, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[482, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[483, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[484, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[485, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[486, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[487, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[488, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[489, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[490, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[491, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[492, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[493, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[494, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[495, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[496, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[497, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[498, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[499, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[500, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[501, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[502, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[503, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[504, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[505, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[506, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[507, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[508, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[509, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[510, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[511, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[512, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[513, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[514, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[515, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[516, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[517, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[518, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[519, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[520, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[521, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[522, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[523, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[524, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[525, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[526, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[527, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[528, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[529, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[530, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[531, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[532, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[533, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[534, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[535, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[536, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[537, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[538, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[539, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[540, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[541, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[542, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[543, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[544, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[545, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[546, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[547, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[548, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[549, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[550, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[551, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[552, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[553, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[554, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[555, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[556, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[557, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[558, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[559, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[560, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[561, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[562, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[563, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[564, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[565, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[566, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[567, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[568, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[569, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[570, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[571, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[572, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[573, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[574, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[575, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[576, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[577, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[578, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[579, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[580, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[581, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[582, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[585, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[586, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[587, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[588, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[589, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[590, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[591, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[592, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[593, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[594, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[595, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[596, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[597, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[598, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[599, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[600, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[601, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[602, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[603, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[604, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[605, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[606, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[607, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[608, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[609, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[610, "torch.Tensor.values"]], "var() (torch.tensor method)": [[611, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[612, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[613, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[614, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[615, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[616, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[617, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[618, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[619, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[620, "torch._assert"]], "_foreach_abs() (in module torch)": [[621, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[622, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[623, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[624, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[625, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[626, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[627, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[628, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[629, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[630, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[631, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[632, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[633, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[634, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[635, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[636, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[637, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[638, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[639, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[640, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[641, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[642, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[643, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[644, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[645, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[646, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[647, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[648, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[649, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[650, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[651, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[652, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[653, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[654, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[655, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[656, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[657, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[658, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[659, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[660, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[661, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[662, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[663, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[664, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[665, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[666, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[667, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[668, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[669, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[670, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[671, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[672, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[673, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[674, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[675, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[676, "torch._logging.set_logs"]], "abs() (in module torch)": [[677, "torch.abs"]], "absolute() (in module torch)": [[678, "torch.absolute"]], "acos() (in module torch)": [[679, "torch.acos"]], "acosh() (in module torch)": [[680, "torch.acosh"]], "add() (in module torch)": [[681, "torch.add"]], "addbmm() (in module torch)": [[682, "torch.addbmm"]], "addcdiv() (in module torch)": [[683, "torch.addcdiv"]], "addcmul() (in module torch)": [[684, "torch.addcmul"]], "addmm() (in module torch)": [[685, "torch.addmm"]], "addmv() (in module torch)": [[686, "torch.addmv"]], "addr() (in module torch)": [[687, "torch.addr"]], "adjoint() (in module torch)": [[688, "torch.adjoint"]], "all() (in module torch)": [[689, "torch.all"]], "allclose() (in module torch)": [[690, "torch.allclose"]], "amax() (in module torch)": [[691, "torch.amax"]], "amin() (in module torch)": [[692, "torch.amin"]], "aminmax() (in module torch)": [[693, "torch.aminmax"]], "angle() (in module torch)": [[694, "torch.angle"]], "any() (in module torch)": [[695, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[719, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[720, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[721, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[725, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[726, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[727, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[728, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[728, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[729, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[730, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[731, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[731, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[731, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[734, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[735, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[736, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[741, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[742, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[752, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[752, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[756, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[757, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[758, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[760, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[760, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[784, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[785, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[786, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[787, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[788, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[788, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[790, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[790, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[790, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[793, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[794, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[810, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[814, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[820, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[820, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[821, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[834, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[835, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[836, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[851, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[852, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[853, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[854, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[855, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[856, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[857, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[858, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[859, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[860, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[861, "torch.arange"]], "arccos() (in module torch)": [[862, "torch.arccos"]], "arccosh() (in module torch)": [[863, "torch.arccosh"]], "arcsin() (in module torch)": [[864, "torch.arcsin"]], "arcsinh() (in module torch)": [[865, "torch.arcsinh"]], "arctan() (in module torch)": [[866, "torch.arctan"]], "arctan2() (in module torch)": [[867, "torch.arctan2"]], "arctanh() (in module torch)": [[868, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[869, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[870, "torch.argmax"]], "argmin() (in module torch)": [[871, "torch.argmin"]], "argsort() (in module torch)": [[872, "torch.argsort"]], "argwhere() (in module torch)": [[873, "torch.argwhere"]], "as_strided() (in module torch)": [[874, "torch.as_strided"]], "as_tensor() (in module torch)": [[875, "torch.as_tensor"]], "asarray() (in module torch)": [[876, "torch.asarray"]], "asin() (in module torch)": [[877, "torch.asin"]], "asinh() (in module torch)": [[878, "torch.asinh"]], "atan() (in module torch)": [[879, "torch.atan"]], "atan2() (in module torch)": [[880, "torch.atan2"]], "atanh() (in module torch)": [[881, "torch.atanh"]], "atleast_1d() (in module torch)": [[882, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[883, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[884, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[885, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[886, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[887, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[888, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[889, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[890, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[891, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[892, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[893, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[894, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[895, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[896, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[897, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[898, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[899, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[900, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[901, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[902, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[903, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[904, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[905, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[906, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[907, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[908, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[909, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[910, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[911, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[912, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[913, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[914, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[915, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[916, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[917, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[918, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[919, "torch.bernoulli"]], "bincount() (in module torch)": [[920, "torch.bincount"]], "bitwise_and() (in module torch)": [[921, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[922, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[923, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[924, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[925, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[926, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[927, "torch.blackman_window"]], "block_diag() (in module torch)": [[928, "torch.block_diag"]], "bmm() (in module torch)": [[929, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[930, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[931, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[932, "torch.broadcast_to"]], "bucketize() (in module torch)": [[933, "torch.bucketize"]], "can_cast() (in module torch)": [[934, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[935, "torch.cartesian_prod"]], "cat() (in module torch)": [[936, "torch.cat"]], "cdist() (in module torch)": [[937, "torch.cdist"]], "ceil() (in module torch)": [[938, "torch.ceil"]], "chain_matmul() (in module torch)": [[939, "torch.chain_matmul"]], "cholesky() (in module torch)": [[940, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[941, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[942, "torch.cholesky_solve"]], "chunk() (in module torch)": [[943, "torch.chunk"]], "clamp() (in module torch)": [[944, "torch.clamp"]], "clip() (in module torch)": [[945, "torch.clip"]], "clone() (in module torch)": [[946, "torch.clone"]], "column_stack() (in module torch)": [[947, "torch.column_stack"]], "combinations() (in module torch)": [[948, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[950, "torch.compiled_with_cxx11_abi"]], "complex() (in module torch)": [[951, "torch.complex"]], "concat() (in module torch)": [[952, "torch.concat"]], "concatenate() (in module torch)": [[953, "torch.concatenate"]], "conj() (in module torch)": [[954, "torch.conj"]], "conj_physical() (in module torch)": [[955, "torch.conj_physical"]], "copysign() (in module torch)": [[956, "torch.copysign"]], "corrcoef() (in module torch)": [[957, "torch.corrcoef"]], "cos() (in module torch)": [[958, "torch.cos"]], "cosh() (in module torch)": [[959, "torch.cosh"]], "count_nonzero() (in module torch)": [[960, "torch.count_nonzero"]], "cov() (in module torch)": [[961, "torch.cov"]], "cross() (in module torch)": [[962, "torch.cross"]], "cudagraph (class in torch.cuda)": [[963, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[963, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[964, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[965, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[965, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[965, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[965, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[965, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[965, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[965, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[965, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[966, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[966, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[966, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[966, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[966, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[966, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[967, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[968, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[968, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[968, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[968, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[968, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[968, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[969, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[970, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[971, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[972, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[973, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[974, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[975, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[976, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[977, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[978, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[979, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[980, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[981, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[982, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[983, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[984, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[985, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[986, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[987, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[988, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[989, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[990, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[991, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[992, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[993, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[994, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[995, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[996, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[997, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[998, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[999, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1000, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1001, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1002, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1003, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1004, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1005, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1006, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1007, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1008, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1009, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1010, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1011, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1012, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1013, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1014, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1015, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1016, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1017, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1018, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1019, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1020, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1021, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1022, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1023, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1024, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1025, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1026, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1027, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1028, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1029, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1030, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1031, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1032, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1033, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1034, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1035, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1036, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1037, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1038, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1039, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1040, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1041, "torch.cummax"]], "cummin() (in module torch)": [[1042, "torch.cummin"]], "cumprod() (in module torch)": [[1043, "torch.cumprod"]], "cumsum() (in module torch)": [[1044, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1045, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1046, "torch.deg2rad"]], "dequantize() (in module torch)": [[1047, "torch.dequantize"]], "det() (in module torch)": [[1048, "torch.det"]], "diag() (in module torch)": [[1049, "torch.diag"]], "diag_embed() (in module torch)": [[1050, "torch.diag_embed"]], "diagflat() (in module torch)": [[1051, "torch.diagflat"]], "diagonal() (in module torch)": [[1052, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1053, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1054, "torch.diff"]], "digamma() (in module torch)": [[1055, "torch.digamma"]], "dist() (in module torch)": [[1056, "torch.dist"]], "div() (in module torch)": [[1057, "torch.div"]], "divide() (in module torch)": [[1058, "torch.divide"]], "dot() (in module torch)": [[1059, "torch.dot"]], "dsplit() (in module torch)": [[1060, "torch.dsplit"]], "dstack() (in module torch)": [[1061, "torch.dstack"]], "einsum() (in module torch)": [[1062, "torch.einsum"]], "empty() (in module torch)": [[1063, "torch.empty"]], "empty_like() (in module torch)": [[1064, "torch.empty_like"]], "empty_strided() (in module torch)": [[1065, "torch.empty_strided"]], "enable_grad (class in torch)": [[1066, "torch.enable_grad"]], "eq() (in module torch)": [[1067, "torch.eq"]], "equal() (in module torch)": [[1068, "torch.equal"]], "erf() (in module torch)": [[1069, "torch.erf"]], "erfc() (in module torch)": [[1070, "torch.erfc"]], "erfinv() (in module torch)": [[1071, "torch.erfinv"]], "exp() (in module torch)": [[1072, "torch.exp"]], "exp2() (in module torch)": [[1073, "torch.exp2"]], "expm1() (in module torch)": [[1074, "torch.expm1"]], "eye() (in module torch)": [[1075, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1076, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1077, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1078, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1079, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1080, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1081, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1082, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1083, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1084, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1085, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1086, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1087, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1088, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1089, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1090, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1091, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1092, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1093, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1094, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1095, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1096, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1097, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1098, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1099, "torch.fft.rfftn"]], "fix() (in module torch)": [[1100, "torch.fix"]], "flatten() (in module torch)": [[1101, "torch.flatten"]], "flip() (in module torch)": [[1102, "torch.flip"]], "fliplr() (in module torch)": [[1103, "torch.fliplr"]], "flipud() (in module torch)": [[1104, "torch.flipud"]], "float_power() (in module torch)": [[1105, "torch.float_power"]], "floor() (in module torch)": [[1106, "torch.floor"]], "floor_divide() (in module torch)": [[1107, "torch.floor_divide"]], "fmax() (in module torch)": [[1108, "torch.fmax"]], "fmin() (in module torch)": [[1109, "torch.fmin"]], "fmod() (in module torch)": [[1110, "torch.fmod"]], "frac() (in module torch)": [[1111, "torch.frac"]], "frexp() (in module torch)": [[1112, "torch.frexp"]], "from_dlpack() (in module torch)": [[1113, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1114, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1115, "torch.frombuffer"]], "full() (in module torch)": [[1116, "torch.full"]], "full_like() (in module torch)": [[1117, "torch.full_like"]], "functional_call() (in module torch.func)": [[1118, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1119, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1120, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1121, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1122, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1123, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1124, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1125, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1126, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1127, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1128, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1129, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1130, "torch.func.vmap"]], "gather() (in module torch)": [[1131, "torch.gather"]], "gcd() (in module torch)": [[1132, "torch.gcd"]], "ge() (in module torch)": [[1133, "torch.ge"]], "geqrf() (in module torch)": [[1134, "torch.geqrf"]], "ger() (in module torch)": [[1135, "torch.ger"]], "get_default_dtype() (in module torch)": [[1136, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1137, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1138, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1139, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1140, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1141, "torch.get_rng_state"]], "gradient() (in module torch)": [[1142, "torch.gradient"]], "greater() (in module torch)": [[1143, "torch.greater"]], "greater_equal() (in module torch)": [[1144, "torch.greater_equal"]], "gt() (in module torch)": [[1145, "torch.gt"]], "hamming_window() (in module torch)": [[1146, "torch.hamming_window"]], "hann_window() (in module torch)": [[1147, "torch.hann_window"]], "heaviside() (in module torch)": [[1148, "torch.heaviside"]], "histc() (in module torch)": [[1149, "torch.histc"]], "histogram() (in module torch)": [[1150, "torch.histogram"]], "histogramdd() (in module torch)": [[1151, "torch.histogramdd"]], "hsplit() (in module torch)": [[1152, "torch.hsplit"]], "hspmm() (in module torch)": [[1153, "torch.hspmm"]], "hstack() (in module torch)": [[1154, "torch.hstack"]], "hypot() (in module torch)": [[1155, "torch.hypot"]], "i0() (in module torch)": [[1156, "torch.i0"]], "igamma() (in module torch)": [[1157, "torch.igamma"]], "igammac() (in module torch)": [[1158, "torch.igammac"]], "imag() (in module torch)": [[1159, "torch.imag"]], "index_add() (in module torch)": [[1160, "torch.index_add"]], "index_copy() (in module torch)": [[1161, "torch.index_copy"]], "index_reduce() (in module torch)": [[1162, "torch.index_reduce"]], "index_select() (in module torch)": [[1163, "torch.index_select"]], "inference_mode (class in torch)": [[1164, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1165, "torch.initial_seed"]], "inner() (in module torch)": [[1166, "torch.inner"]], "inverse() (in module torch)": [[1167, "torch.inverse"]], "is_complex() (in module torch)": [[1168, "torch.is_complex"]], "is_conj() (in module torch)": [[1169, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1170, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1171, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1172, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1173, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1174, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1175, "torch.is_storage"]], "is_tensor() (in module torch)": [[1176, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1177, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1178, "torch.isclose"]], "isfinite() (in module torch)": [[1179, "torch.isfinite"]], "isin() (in module torch)": [[1180, "torch.isin"]], "isinf() (in module torch)": [[1181, "torch.isinf"]], "isnan() (in module torch)": [[1182, "torch.isnan"]], "isneginf() (in module torch)": [[1183, "torch.isneginf"]], "isposinf() (in module torch)": [[1184, "torch.isposinf"]], "isreal() (in module torch)": [[1185, "torch.isreal"]], "istft() (in module torch)": [[1186, "torch.istft"]], "attribute (class in torch.jit)": [[1187, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1187, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1187, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1187, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1187, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1188, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1188, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1188, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1188, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1189, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1189, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1189, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1189, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1189, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1189, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1190, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1191, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1192, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1193, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1194, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1195, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1196, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1197, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1198, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1199, "torch.jit.save"]], "script() (in module torch.jit)": [[1200, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1201, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1202, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1203, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1204, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1205, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1206, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1207, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1208, "torch.kaiser_window"]], "kron() (in module torch)": [[1209, "torch.kron"]], "kthvalue() (in module torch)": [[1210, "torch.kthvalue"]], "lcm() (in module torch)": [[1211, "torch.lcm"]], "ldexp() (in module torch)": [[1212, "torch.ldexp"]], "le() (in module torch)": [[1213, "torch.le"]], "lerp() (in module torch)": [[1214, "torch.lerp"]], "less() (in module torch)": [[1215, "torch.less"]], "less_equal() (in module torch)": [[1216, "torch.less_equal"]], "lgamma() (in module torch)": [[1217, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1218, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1219, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1220, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1221, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1222, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1223, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1224, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1225, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1226, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1227, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1228, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1229, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1230, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1231, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1232, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1233, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1234, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1235, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1236, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1237, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1238, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1239, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1240, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1241, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1242, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1243, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1244, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1245, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1246, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1247, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1248, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1249, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1250, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1251, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1252, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1253, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1254, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1255, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1256, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1257, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1258, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1259, "torch.linspace"]], "load() (in module torch)": [[1260, "torch.load"]], "lobpcg() (in module torch)": [[1261, "torch.lobpcg"]], "log() (in module torch)": [[1262, "torch.log"]], "log10() (in module torch)": [[1263, "torch.log10"]], "log1p() (in module torch)": [[1264, "torch.log1p"]], "log2() (in module torch)": [[1265, "torch.log2"]], "logaddexp() (in module torch)": [[1266, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1267, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1268, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1269, "torch.logdet"]], "logical_and() (in module torch)": [[1270, "torch.logical_and"]], "logical_not() (in module torch)": [[1271, "torch.logical_not"]], "logical_or() (in module torch)": [[1272, "torch.logical_or"]], "logical_xor() (in module torch)": [[1273, "torch.logical_xor"]], "logit() (in module torch)": [[1274, "torch.logit"]], "logspace() (in module torch)": [[1275, "torch.logspace"]], "logsumexp() (in module torch)": [[1276, "torch.logsumexp"]], "lt() (in module torch)": [[1277, "torch.lt"]], "lu() (in module torch)": [[1278, "torch.lu"]], "lu_solve() (in module torch)": [[1279, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1280, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1281, "torch.manual_seed"]], "masked_select() (in module torch)": [[1282, "torch.masked_select"]], "matmul() (in module torch)": [[1283, "torch.matmul"]], "matrix_exp() (in module torch)": [[1284, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1285, "torch.matrix_power"]], "max() (in module torch)": [[1286, "torch.max"]], "maximum() (in module torch)": [[1287, "torch.maximum"]], "mean() (in module torch)": [[1288, "torch.mean"]], "median() (in module torch)": [[1289, "torch.median"]], "meshgrid() (in module torch)": [[1290, "torch.meshgrid"]], "min() (in module torch)": [[1291, "torch.min"]], "minimum() (in module torch)": [[1292, "torch.minimum"]], "mm() (in module torch)": [[1293, "torch.mm"]], "mode() (in module torch)": [[1294, "torch.mode"]], "moveaxis() (in module torch)": [[1295, "torch.moveaxis"]], "movedim() (in module torch)": [[1296, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1297, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1298, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1299, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1300, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1301, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1302, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1303, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1304, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1305, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1306, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1307, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1308, "torch.mps.synchronize"]], "msort() (in module torch)": [[1309, "torch.msort"]], "mul() (in module torch)": [[1310, "torch.mul"]], "multinomial() (in module torch)": [[1311, "torch.multinomial"]], "multiply() (in module torch)": [[1312, "torch.multiply"]], "mv() (in module torch)": [[1313, "torch.mv"]], "mvlgamma() (in module torch)": [[1314, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1315, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1316, "torch.nanmean"]], "nanmedian() (in module torch)": [[1317, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1318, "torch.nanquantile"]], "nansum() (in module torch)": [[1319, "torch.nansum"]], "narrow() (in module torch)": [[1320, "torch.narrow"]], "narrow_copy() (in module torch)": [[1321, "torch.narrow_copy"]], "ne() (in module torch)": [[1322, "torch.ne"]], "neg() (in module torch)": [[1323, "torch.neg"]], "negative() (in module torch)": [[1324, "torch.negative"]], "nextafter() (in module torch)": [[1325, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1326, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1327, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1328, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1329, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1329, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1329, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1330, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1331, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1332, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1333, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1334, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1335, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1336, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1337, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1338, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1339, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1340, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1341, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1342, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1343, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1344, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1345, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1346, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1347, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1348, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1349, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1350, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1351, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1352, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1353, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1354, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1355, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1356, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1357, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1358, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1359, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1360, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1361, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1362, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1363, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1364, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1364, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1365, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1365, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1365, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1366, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1367, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1368, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1369, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1370, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1371, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1372, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1373, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1374, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1375, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1376, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1377, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1378, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1379, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1380, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1381, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1382, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1383, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1384, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1385, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1386, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1387, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1388, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1389, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1390, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1391, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1392, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1393, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1394, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1394, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1395, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1395, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1396, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1396, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1397, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1397, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1398, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1398, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1399, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1399, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1400, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1400, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1401, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1401, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1402, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1402, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1403, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1403, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1404, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1404, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1405, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1405, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1406, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1406, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1407, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1408, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1409, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1410, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1411, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1412, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1413, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1414, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1415, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1416, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1417, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1418, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1419, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1420, "torch.nn.Mish"]], "module (class in torch.nn)": [[1421, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1421, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1421, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1421, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1421, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1421, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1421, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1421, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1421, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1421, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1421, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1421, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1421, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1421, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1421, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1421, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1421, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1421, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1421, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1421, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1421, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1421, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1421, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1421, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1421, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1421, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1421, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1421, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1421, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1421, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1421, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1421, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1421, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1421, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1421, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1421, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1421, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1421, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1421, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1421, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1421, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1422, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1422, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1422, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1422, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1422, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1422, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1422, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1423, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1423, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1423, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1423, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1424, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1425, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1426, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1427, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1427, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1427, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1428, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1429, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1430, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1431, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1431, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1432, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1432, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1432, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1433, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1434, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1435, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1436, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1437, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1437, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1438, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1439, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1440, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1441, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1442, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1443, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1444, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1445, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1446, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1447, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1448, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1449, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1449, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1450, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1451, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1452, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1453, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1454, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1455, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1456, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1457, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1458, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1459, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1460, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1460, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1461, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1462, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1463, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1464, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1464, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1464, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1465, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1465, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1466, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1466, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1467, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1467, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1468, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1468, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1469, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1470, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1471, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1472, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1473, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1474, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1475, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1476, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1477, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1478, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1479, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1480, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1481, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1482, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1483, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1484, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1485, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1486, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1490, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1491, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1492, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1493, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1494, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1497, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1498, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1499, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1500, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1501, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1502, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1503, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1504, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1505, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1507, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1508, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1509, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1510, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1511, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1512, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1513, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1514, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1515, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1516, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1517, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1518, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1519, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1520, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1521, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1522, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1523, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1524, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1525, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1526, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1527, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1528, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1529, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1530, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1531, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1532, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1533, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1534, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1535, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1536, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1537, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1538, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1539, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1540, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1541, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1542, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1543, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1544, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1545, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1546, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1547, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1548, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1549, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1550, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1551, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1552, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1553, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1554, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1555, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1556, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1557, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1558, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1559, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1560, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1561, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1562, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1563, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1564, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1565, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1566, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1567, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1568, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1569, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1570, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1571, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1572, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1573, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1574, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1575, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1576, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1577, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1578, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1579, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1580, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1581, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1582, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1583, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1584, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1585, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1586, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1587, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1588, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1589, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1590, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1591, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1592, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1592, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1592, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1593, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1594, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1595, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1596, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1597, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1598, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1599, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1600, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1601, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1601, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1601, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1601, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1601, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1602, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1603, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1604, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1604, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1605, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1606, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1607, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1608, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1609, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1610, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1610, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1611, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1612, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1613, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1614, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1615, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1615, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1615, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1615, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1615, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1615, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1616, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1616, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1616, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1616, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1616, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1617, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1617, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1617, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1617, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1617, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1618, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1618, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1618, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1618, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1618, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1619, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1619, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1619, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1619, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1619, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1619, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1620, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1620, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1620, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1620, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1620, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1620, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1620, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1621, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1621, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1621, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1621, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1621, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1621, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1622, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1622, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1622, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1622, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1632, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1633, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1634, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1634, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1634, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1634, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1634, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1634, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1634, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1634, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1634, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1634, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1635, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1636, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1637, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1638, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1639, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1640, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1641, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1642, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1643, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1644, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1645, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1646, "torch.no_grad"]], "nonzero() (in module torch)": [[1647, "torch.nonzero"]], "norm() (in module torch)": [[1648, "torch.norm"]], "normal() (in module torch)": [[1649, "torch.normal"]], "not_equal() (in module torch)": [[1650, "torch.not_equal"]], "numel() (in module torch)": [[1651, "torch.numel"]], "ones() (in module torch)": [[1652, "torch.ones"]], "ones_like() (in module torch)": [[1653, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1654, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1655, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1655, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1655, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1655, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1655, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1655, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1656, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1656, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1657, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1657, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1657, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1657, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1657, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1657, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1657, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1657, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1658, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1658, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1659, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1660, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1660, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1660, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1660, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1660, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1660, "torch.optim.ASGD.state_dict"]], "zero_grad() (torch.optim.asgd method)": [[1660, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1661, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1661, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1661, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1661, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1661, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1661, "torch.optim.Adadelta.state_dict"]], "zero_grad() (torch.optim.adadelta method)": [[1661, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1662, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1662, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1662, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1662, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1662, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1662, "torch.optim.Adagrad.state_dict"]], "zero_grad() (torch.optim.adagrad method)": [[1662, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1663, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1663, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1663, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1663, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1663, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1663, "torch.optim.Adam.state_dict"]], "zero_grad() (torch.optim.adam method)": [[1663, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1664, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1664, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1664, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1664, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1664, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1664, "torch.optim.AdamW.state_dict"]], "zero_grad() (torch.optim.adamw method)": [[1664, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1665, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1665, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1665, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1665, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1665, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1665, "torch.optim.Adamax.state_dict"]], "zero_grad() (torch.optim.adamax method)": [[1665, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1666, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1666, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1667, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1667, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1667, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1667, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1667, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1667, "torch.optim.NAdam.state_dict"]], "zero_grad() (torch.optim.nadam method)": [[1667, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1668, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1669, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1670, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1671, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1672, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1673, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1673, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1673, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1673, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1673, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1673, "torch.optim.RAdam.state_dict"]], "zero_grad() (torch.optim.radam method)": [[1673, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1674, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1674, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1674, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1674, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1674, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1674, "torch.optim.RMSprop.state_dict"]], "zero_grad() (torch.optim.rmsprop method)": [[1674, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1675, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1675, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1675, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1675, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1675, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1675, "torch.optim.Rprop.state_dict"]], "zero_grad() (torch.optim.rprop method)": [[1675, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1676, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1676, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1676, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1676, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1676, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1676, "torch.optim.SGD.state_dict"]], "zero_grad() (torch.optim.sgd method)": [[1676, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1677, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1677, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1678, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1678, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1678, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1678, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1678, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1679, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1679, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1679, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1679, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1679, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1680, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1680, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1680, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1680, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1680, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1681, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1681, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1681, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1681, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1681, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1681, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1682, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1682, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1682, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1682, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1683, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1683, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1683, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1683, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1683, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1684, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1684, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1684, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1684, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1684, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1685, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1685, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1685, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1685, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1686, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1686, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1686, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1686, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1687, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1687, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1687, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1687, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1688, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1688, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1688, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1688, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1689, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1689, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1689, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1689, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1691, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1691, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1691, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1691, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1692, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1692, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1692, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1692, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1693, "torch.orgqr"]], "ormqr() (in module torch)": [[1694, "torch.ormqr"]], "outer() (in module torch)": [[1695, "torch.outer"]], "pca_lowrank() (in module torch)": [[1696, "torch.pca_lowrank"]], "permute() (in module torch)": [[1697, "torch.permute"]], "pinverse() (in module torch)": [[1698, "torch.pinverse"]], "poisson() (in module torch)": [[1699, "torch.poisson"]], "polar() (in module torch)": [[1700, "torch.polar"]], "polygamma() (in module torch)": [[1701, "torch.polygamma"]], "positive() (in module torch)": [[1702, "torch.positive"]], "pow() (in module torch)": [[1703, "torch.pow"]], "prod() (in module torch)": [[1704, "torch.prod"]], "promote_types() (in module torch)": [[1705, "torch.promote_types"]], "qr() (in module torch)": [[1706, "torch.qr"]], "quantile() (in module torch)": [[1707, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1708, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1709, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1710, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1711, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1712, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1713, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1713, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1713, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1713, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1713, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1714, "torch.rad2deg"]], "rand() (in module torch)": [[1715, "torch.rand"]], "rand_like() (in module torch)": [[1716, "torch.rand_like"]], "randint() (in module torch)": [[1717, "torch.randint"]], "randint_like() (in module torch)": [[1718, "torch.randint_like"]], "randn() (in module torch)": [[1719, "torch.randn"]], "randn_like() (in module torch)": [[1720, "torch.randn_like"]], "randperm() (in module torch)": [[1721, "torch.randperm"]], "range() (in module torch)": [[1722, "torch.range"]], "ravel() (in module torch)": [[1723, "torch.ravel"]], "real() (in module torch)": [[1724, "torch.real"]], "reciprocal() (in module torch)": [[1725, "torch.reciprocal"]], "remainder() (in module torch)": [[1726, "torch.remainder"]], "renorm() (in module torch)": [[1727, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1728, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1729, "torch.reshape"]], "resolve_conj() (in module torch)": [[1730, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1731, "torch.resolve_neg"]], "result_type() (in module torch)": [[1732, "torch.result_type"]], "roll() (in module torch)": [[1733, "torch.roll"]], "rot90() (in module torch)": [[1734, "torch.rot90"]], "round() (in module torch)": [[1735, "torch.round"]], "row_stack() (in module torch)": [[1736, "torch.row_stack"]], "rsqrt() (in module torch)": [[1737, "torch.rsqrt"]], "save() (in module torch)": [[1738, "torch.save"]], "scatter() (in module torch)": [[1739, "torch.scatter"]], "scatter_add() (in module torch)": [[1740, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1741, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1742, "torch.searchsorted"]], "seed() (in module torch)": [[1743, "torch.seed"]], "select() (in module torch)": [[1744, "torch.select"]], "select_scatter() (in module torch)": [[1745, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1746, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1747, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1748, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1749, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1750, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1751, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1752, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1753, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1754, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1755, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1756, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1757, "torch.set_warn_always"]], "sgn() (in module torch)": [[1758, "torch.sgn"]], "sigmoid() (in module torch)": [[1759, "torch.sigmoid"]], "sign() (in module torch)": [[1760, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1761, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1762, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1763, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1764, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1765, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1766, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1767, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1768, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1769, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1770, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1771, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1772, "torch.signbit"]], "sin() (in module torch)": [[1773, "torch.sin"]], "sinc() (in module torch)": [[1774, "torch.sinc"]], "sinh() (in module torch)": [[1775, "torch.sinh"]], "slice_scatter() (in module torch)": [[1776, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1777, "torch.slogdet"]], "smm() (in module torch)": [[1778, "torch.smm"]], "softmax() (in module torch)": [[1779, "torch.softmax"]], "sort() (in module torch)": [[1780, "torch.sort"]], "addmm() (in module torch.sparse)": [[1781, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1782, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1782, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1782, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1782, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1783, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1784, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1785, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1786, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1787, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1788, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1789, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1790, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1791, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1792, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1793, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1794, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1795, "torch.split"]], "sqrt() (in module torch)": [[1796, "torch.sqrt"]], "square() (in module torch)": [[1797, "torch.square"]], "squeeze() (in module torch)": [[1798, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1799, "torch.sspaddmm"]], "stack() (in module torch)": [[1800, "torch.stack"]], "std() (in module torch)": [[1801, "torch.std"]], "std_mean() (in module torch)": [[1802, "torch.std_mean"]], "stft() (in module torch)": [[1803, "torch.stft"]], "sub() (in module torch)": [[1804, "torch.sub"]], "subtract() (in module torch)": [[1805, "torch.subtract"]], "sum() (in module torch)": [[1806, "torch.sum"]], "svd() (in module torch)": [[1807, "torch.svd"]], "svd_lowrank() (in module torch)": [[1808, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1809, "torch.swapaxes"]], "swapdims() (in module torch)": [[1810, "torch.swapdims"]], "sym_float() (in module torch)": [[1811, "torch.sym_float"]], "sym_int() (in module torch)": [[1812, "torch.sym_int"]], "sym_max() (in module torch)": [[1813, "torch.sym_max"]], "sym_min() (in module torch)": [[1814, "torch.sym_min"]], "sym_not() (in module torch)": [[1815, "torch.sym_not"]], "t() (in module torch)": [[1816, "torch.t"]], "take() (in module torch)": [[1817, "torch.take"]], "take_along_dim() (in module torch)": [[1818, "torch.take_along_dim"]], "tan() (in module torch)": [[1819, "torch.tan"]], "tanh() (in module torch)": [[1820, "torch.tanh"]], "tensor() (in module torch)": [[1821, "torch.tensor"]], "tensor_split() (in module torch)": [[1822, "torch.tensor_split"]], "tensordot() (in module torch)": [[1823, "torch.tensordot"]], "tile() (in module torch)": [[1824, "torch.tile"]], "topk() (in module torch)": [[1825, "torch.topk"]], "trace() (in module torch)": [[1826, "torch.trace"]], "transpose() (in module torch)": [[1827, "torch.transpose"]], "trapezoid() (in module torch)": [[1828, "torch.trapezoid"]], "trapz() (in module torch)": [[1829, "torch.trapz"]], "triangular_solve() (in module torch)": [[1830, "torch.triangular_solve"]], "tril() (in module torch)": [[1831, "torch.tril"]], "tril_indices() (in module torch)": [[1832, "torch.tril_indices"]], "triu() (in module torch)": [[1833, "torch.triu"]], "triu_indices() (in module torch)": [[1834, "torch.triu_indices"]], "true_divide() (in module torch)": [[1835, "torch.true_divide"]], "trunc() (in module torch)": [[1836, "torch.trunc"]], "unbind() (in module torch)": [[1837, "torch.unbind"]], "unflatten() (in module torch)": [[1838, "torch.unflatten"]], "unique() (in module torch)": [[1839, "torch.unique"]], "unique_consecutive() (in module torch)": [[1840, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1841, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1842, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1843, "torch.vander"]], "var() (in module torch)": [[1844, "torch.var"]], "var_mean() (in module torch)": [[1845, "torch.var_mean"]], "vdot() (in module torch)": [[1846, "torch.vdot"]], "view_as_complex() (in module torch)": [[1847, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1848, "torch.view_as_real"]], "vmap() (in module torch)": [[1849, "torch.vmap"]], "vsplit() (in module torch)": [[1850, "torch.vsplit"]], "vstack() (in module torch)": [[1851, "torch.vstack"]], "where() (in module torch)": [[1852, "torch.where"]], "xlogy() (in module torch)": [[1853, "torch.xlogy"]], "zeros() (in module torch)": [[1854, "torch.zeros"]], "zeros_like() (in module torch)": [[1855, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1856, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1856, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1856, "torch.hub.help"]], "list() (in module torch.hub)": [[1856, "torch.hub.list"]], "load() (in module torch.hub)": [[1856, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1856, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1856, "torch.hub.set_dir"]], "torch.hub": [[1856, "module-torch.hub"]], "pytorch_jit": [[1859, "envvar-PYTORCH_JIT"]], "environment variable": [[1859, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1859, "torch.jit.export"]], "torch.jit": [[1859, "module-torch.jit"]], "torch.jit.mobile": [[1859, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1860, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1861, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1861, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1864, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1865, "module-torch.utils.jit"]], "library (class in torch.library)": [[1866, "torch.library.Library"]], "define() (torch.library.library method)": [[1866, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1866, "torch.library.Library.impl"]], "torch.linalg": [[1867, "module-torch.linalg"]], "torch._logging": [[1868, "module-torch._logging"]], "torch.masked": [[1869, "module-torch.masked"]], "torch.masked.maskedtensor": [[1869, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1870, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1871, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1871, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1872, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1872, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1872, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1872, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1872, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1872, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1872, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1872, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1872, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1872, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1872, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1872, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1872, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1872, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1872, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1872, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1872, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1872, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1872, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1872, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1872, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1873, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1874, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1874, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1874, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1874, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1874, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1874, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1874, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1876, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1876, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1876, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1876, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1876, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1876, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1877, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1877, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1877, "torch.nested.to_padded_tensor"]], "torch.nested": [[1877, "module-torch.nested"]], "torch.nn": [[1878, "module-torch.nn"]], "torch.nn.backends": [[1878, "module-torch.nn.backends"]], "torch.nn.modules": [[1878, "module-torch.nn.modules"]], "torch.nn.parallel": [[1878, "module-torch.nn.parallel"]], "torch.nn.utils": [[1878, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1878, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1880, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1880, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1880, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1880, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1880, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1880, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1880, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1880, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1880, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1880, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1880, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1880, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1880, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1880, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1880, "torch.nn.init.zeros_"]], "disable_log() (in module torch.onnx)": [[1900, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1900, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1900, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1900, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1900, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1900, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1900, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1900, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1900, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1900, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1900, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1901, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1901, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1901, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1903, "torch.optim.Optimizer"]], "torch.optim": [[1903, "module-torch.optim"]], "directory (class in torch.package)": [[1904, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1904, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1904, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1904, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1904, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1904, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1904, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1904, "torch.package.PackageExporter.save_text"]], "torch.package": [[1904, "module-torch.package"]], "torch.package.analyze": [[1904, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1905, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1905, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1905, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1905, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1905, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1905, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1906, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1906, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1906, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1906, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1906, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1906, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1906, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1906, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1906, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1906, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1906, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1906, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1906, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1906, "module-torch.profiler"]], "torch.ao": [[1907, "module-torch.ao"]], "torch.ao.nn": [[1907, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1907, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1907, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1907, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1907, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1907, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1907, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1907, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1907, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1907, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1907, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1907, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1907, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1907, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1907, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1907, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1907, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1910, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1910, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1910, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1910, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1910, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1910, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1910, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1910, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1910, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1910, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1910, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1910, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1910, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1910, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1910, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1910, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1910, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1910, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1910, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1910, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1910, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1910, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1910, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1910, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1910, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1910, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1910, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1910, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1910, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1910, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1910, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1910, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1910, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1910, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1910, "module-torch.quantization"]], "torch.quantization.fx": [[1910, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1911, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1911, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1911, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1911, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1911, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1911, "torch.random.set_rng_state"]], "torch.random": [[1911, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1912, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1912, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1912, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1912, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1912, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1912, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1912, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1912, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1912, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1912, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1912, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1912, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1912, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1912, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1912, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1912, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1912, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1912, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1912, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1912, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1912, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1912, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1912, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1912, "module-torch.distributed.rpc"]], "torch.signal": [[1915, "module-torch.signal"]], "torch.signal.windows": [[1915, "module-torch.signal.windows"]], "torch.sparse": [[1916, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1917, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1917, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1917, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1917, "torch.special.digamma"]], "entr() (in module torch.special)": [[1917, "torch.special.entr"]], "erf() (in module torch.special)": [[1917, "torch.special.erf"]], "erfc() (in module torch.special)": [[1917, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1917, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1917, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1917, "torch.special.exp2"]], "expit() (in module torch.special)": [[1917, "torch.special.expit"]], "expm1() (in module torch.special)": [[1917, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1917, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1917, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1917, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1917, "torch.special.i0"]], "i0e() (in module torch.special)": [[1917, "torch.special.i0e"]], "i1() (in module torch.special)": [[1917, "torch.special.i1"]], "i1e() (in module torch.special)": [[1917, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1917, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1917, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1917, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1917, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1917, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1917, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1917, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1917, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1917, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1917, "torch.special.psi"]], "round() (in module torch.special)": [[1917, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1917, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1917, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1917, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1917, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1917, "torch.special.spherical_bessel_j0"]], "torch.special": [[1917, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1917, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1917, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1917, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1918, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1918, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1918, "torch.ByteStorage"]], "charstorage (class in torch)": [[1918, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1918, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1918, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1918, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1918, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1918, "torch.HalfStorage"]], "intstorage (class in torch)": [[1918, "torch.IntStorage"]], "longstorage (class in torch)": [[1918, "torch.LongStorage"]], "qint32storage (class in torch)": [[1918, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1918, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1918, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1918, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1918, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1918, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1918, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1918, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1918, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1918, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1918, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1918, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1918, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1918, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1918, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1918, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1918, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1918, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1918, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1918, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1918, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1918, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1918, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1918, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1918, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1918, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1918, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1918, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1918, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1918, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1918, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1918, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1918, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1918, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1918, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1918, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1918, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1918, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1918, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1918, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1918, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1918, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1918, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1918, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1918, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1918, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1918, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1918, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1918, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.half"]], "int() (torch.typedstorage method)": [[1918, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1918, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1918, "torch.UntypedStorage.is_cuda"]], "is_pinned() (torch.typedstorage method)": [[1918, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1918, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1918, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1918, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1918, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1918, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1918, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1918, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1918, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1918, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1918, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1918, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1918, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1918, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1918, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1918, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1918, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1919, "torch.device"]], "dtype (class in torch)": [[1919, "torch.dtype"]], "layout (class in torch)": [[1919, "torch.layout"]], "memory_format (class in torch)": [[1919, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1921, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1921, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1922, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1922, "torch.Tensor.T"]], "tensor (class in torch)": [[1922, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1922, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1922, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1923, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1923, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1923, "torch.testing.make_tensor"]], "torch.testing": [[1923, "module-torch.testing"]], "symbool (class in torch)": [[1924, "torch.SymBool"]], "symfloat (class in torch)": [[1924, "torch.SymFloat"]], "symint (class in torch)": [[1924, "torch.SymInt"]], "tag (class in torch)": [[1924, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1924, "torch.torch.default_generator"]], "name (torch.tag property)": [[1924, "torch.Tag.name"]], "torch": [[1924, "module-torch"]], "torch.contrib": [[1924, "module-torch.contrib"]], "torch.utils": [[1924, "module-torch.utils"]], "torch.utils.backcompat": [[1924, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1924, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1924, "module-torch.utils.model_dump"]], "logger (class in torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1925, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1925, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1925, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1925, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1925, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1925, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1926, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1926, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1926, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1926, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1926, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1926, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1926, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1926, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1927, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1927, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1927, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1927, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1927, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1927, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1927, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1927, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1927, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1928, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1928, "torch.torch.iinfo"]]}})