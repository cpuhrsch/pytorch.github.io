Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.event.Event", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.OnnxExporterError", "generated/torch.onnx.OnnxRegistry", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler_api", "torch.compiler_best_practices_for_backends", "torch.compiler_cudagraph_trees", "torch.compiler_custom_backends", "torch.compiler_deepdive", "torch.compiler_dynamic_shapes", "torch.compiler_fake_tensor", "torch.compiler_faq", "torch.compiler_fine_grain_apis", "torch.compiler_get_started", "torch.compiler_guards_overview", "torch.compiler_inductor_profiling", "torch.compiler_ir", "torch.compiler_nn_module", "torch.compiler_performance_dashboard", "torch.compiler_profiling_torch_compile", "torch.compiler_transformations", "torch.compiler_troubleshooting", "torch.overrides", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.event.Event.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.OnnxExporterError.rst", "generated/torch.onnx.OnnxRegistry.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.compiler.rst", "torch.compiler_api.rst", "torch.compiler_best_practices_for_backends.rst", "torch.compiler_cudagraph_trees.rst", "torch.compiler_custom_backends.rst", "torch.compiler_deepdive.rst", "torch.compiler_dynamic_shapes.rst", "torch.compiler_fake_tensor.rst", "torch.compiler_faq.rst", "torch.compiler_fine_grain_apis.rst", "torch.compiler_get_started.rst", "torch.compiler_guards_overview.rst", "torch.compiler_inductor_profiling.rst", "torch.compiler_ir.rst", "torch.compiler_nn_module.rst", "torch.compiler_performance_dashboard.rst", "torch.compiler_profiling_torch_compile.rst", "torch.compiler_transformations.rst", "torch.compiler_troubleshooting.rst", "torch.overrides.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch._export.export", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.escape-hatch", "torch.map", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "Event", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "OnnxExporterError", "OnnxRegistry", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.compiler", "torch.compiler API reference", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deep Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs for fine-grained tracing", "Getting Started", "Guards Overview", "TorchInductor GPU Profiling", "IRs", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.overrides", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 13, 14, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 41, 42, 43, 46, 50, 53, 54, 149, 599, 676, 685, 731, 734, 735, 736, 741, 742, 744, 752, 753, 756, 760, 784, 785, 795, 796, 810, 820, 837, 854, 889, 898, 900, 901, 902, 927, 932, 935, 940, 941, 953, 966, 985, 1031, 1074, 1094, 1130, 1142, 1154, 1162, 1163, 1198, 1201, 1207, 1208, 1212, 1214, 1216, 1231, 1248, 1273, 1305, 1365, 1366, 1367, 1370, 1386, 1387, 1395, 1400, 1404, 1405, 1430, 1431, 1432, 1434, 1440, 1441, 1444, 1449, 1451, 1462, 1477, 1478, 1479, 1480, 1481, 1505, 1506, 1583, 1614, 1628, 1648, 1656, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1703, 1706, 1711, 1747, 1757, 1804, 1805, 1806, 1807, 1808, 1809, 1847, 1849, 1858, 1868, 1875, 1877, 1879, 1880, 1884, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1914, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1947, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1961, 1962, 1963, 1965], "conveni": [0, 3, 7, 13, 37, 40, 41, 46, 52, 1142, 1258, 1605, 1858, 1860, 1868, 1875, 1879, 1884, 1899, 1900, 1903, 1905, 1910, 1911, 1922, 1929, 1948, 1950, 1951, 1956, 1957], "method": [0, 3, 7, 9, 13, 14, 17, 20, 23, 24, 25, 27, 29, 30, 31, 32, 38, 40, 46, 53, 54, 55, 57, 62, 63, 220, 221, 321, 483, 484, 493, 494, 495, 516, 610, 789, 793, 795, 811, 812, 813, 834, 837, 850, 870, 871, 872, 889, 893, 894, 895, 896, 909, 910, 1011, 1125, 1154, 1199, 1201, 1202, 1204, 1205, 1206, 1211, 1212, 1216, 1217, 1218, 1246, 1264, 1265, 1272, 1273, 1331, 1334, 1342, 1350, 1377, 1434, 1435, 1436, 1444, 1445, 1462, 1533, 1605, 1614, 1622, 1623, 1626, 1628, 1630, 1633, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1650, 1655, 1668, 1669, 1676, 1677, 1678, 1680, 1690, 1722, 1803, 1818, 1822, 1858, 1875, 1876, 1877, 1880, 1881, 1888, 1890, 1892, 1893, 1894, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1916, 1919, 1921, 1922, 1925, 1927, 1930, 1932, 1936, 1937, 1939, 1940, 1942, 1945, 1949, 1950, 1956, 1961, 1963, 1964], "where": [0, 1, 2, 3, 4, 7, 8, 9, 11, 13, 14, 20, 21, 23, 27, 28, 29, 31, 33, 40, 41, 42, 43, 46, 48, 49, 51, 54, 81, 152, 222, 252, 398, 400, 483, 676, 689, 691, 692, 695, 731, 754, 756, 777, 816, 817, 829, 873, 892, 897, 899, 912, 917, 926, 932, 939, 940, 941, 948, 962, 966, 978, 980, 989, 991, 1053, 1054, 1057, 1061, 1079, 1090, 1091, 1093, 1096, 1097, 1099, 1100, 1102, 1103, 1104, 1106, 1107, 1109, 1111, 1135, 1136, 1137, 1141, 1142, 1145, 1157, 1158, 1159, 1160, 1190, 1191, 1193, 1194, 1197, 1198, 1199, 1202, 1214, 1220, 1221, 1222, 1225, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1272, 1273, 1278, 1281, 1288, 1289, 1290, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1324, 1329, 1330, 1332, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1506, 1516, 1517, 1524, 1529, 1531, 1532, 1550, 1551, 1568, 1570, 1571, 1574, 1575, 1577, 1583, 1586, 1614, 1616, 1617, 1621, 1648, 1649, 1650, 1651, 1660, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1709, 1719, 1721, 1722, 1742, 1743, 1779, 1785, 1786, 1791, 1795, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 1817, 1818, 1821, 1822, 1836, 1845, 1846, 1847, 1848, 1849, 1854, 1855, 1863, 1864, 1865, 1866, 1867, 1868, 1877, 1878, 1880, 1881, 1886, 1887, 1889, 1892, 1895, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1928, 1930, 1932, 1934, 1935, 1937, 1939, 1944, 1951, 1952, 1953, 1954, 1955, 1956, 1958, 1961, 1963, 1964], "some": [0, 1, 3, 7, 8, 9, 13, 19, 20, 21, 23, 25, 28, 29, 31, 33, 41, 42, 46, 49, 51, 52, 53, 54, 80, 82, 474, 492, 563, 685, 744, 948, 1027, 1031, 1034, 1074, 1095, 1097, 1105, 1106, 1107, 1122, 1131, 1142, 1176, 1198, 1199, 1201, 1202, 1211, 1214, 1216, 1246, 1264, 1270, 1295, 1302, 1305, 1342, 1346, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1394, 1397, 1398, 1399, 1400, 1401, 1404, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1449, 1465, 1466, 1482, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1545, 1550, 1568, 1571, 1576, 1583, 1605, 1614, 1615, 1616, 1617, 1621, 1654, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1721, 1741, 1765, 1772, 1786, 1822, 1860, 1868, 1875, 1877, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1939, 1945, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1959, 1960, 1961, 1962, 1963], "oper": [0, 2, 4, 5, 7, 8, 11, 14, 17, 20, 25, 29, 30, 37, 38, 40, 41, 47, 52, 53, 54, 77, 78, 79, 80, 81, 83, 84, 85, 252, 311, 319, 333, 350, 400, 442, 443, 444, 445, 446, 489, 492, 495, 509, 511, 513, 585, 676, 682, 685, 737, 738, 739, 743, 744, 753, 754, 764, 765, 775, 781, 788, 789, 791, 792, 795, 819, 822, 855, 857, 858, 861, 885, 887, 893, 895, 916, 917, 919, 921, 924, 926, 928, 930, 935, 938, 941, 945, 948, 955, 960, 978, 980, 1008, 1017, 1048, 1053, 1054, 1055, 1056, 1069, 1074, 1075, 1076, 1077, 1087, 1092, 1110, 1122, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1142, 1149, 1152, 1158, 1159, 1176, 1201, 1211, 1212, 1216, 1217, 1220, 1230, 1243, 1253, 1256, 1257, 1270, 1271, 1280, 1287, 1295, 1300, 1305, 1315, 1316, 1329, 1332, 1346, 1351, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1391, 1392, 1393, 1394, 1396, 1401, 1420, 1425, 1430, 1431, 1432, 1434, 1447, 1452, 1453, 1454, 1461, 1476, 1477, 1479, 1481, 1485, 1501, 1502, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1521, 1525, 1526, 1528, 1529, 1533, 1537, 1544, 1550, 1552, 1558, 1559, 1569, 1571, 1575, 1583, 1589, 1590, 1601, 1602, 1603, 1604, 1614, 1616, 1617, 1650, 1656, 1661, 1665, 1666, 1672, 1689, 1695, 1705, 1709, 1718, 1719, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1741, 1747, 1764, 1765, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1798, 1799, 1800, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1821, 1836, 1857, 1858, 1860, 1868, 1871, 1873, 1874, 1876, 1877, 1881, 1884, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1924, 1926, 1928, 1929, 1930, 1931, 1935, 1937, 1938, 1941, 1948, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1962, 1963], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 18, 20, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 46, 47, 49, 50, 51, 52, 53, 55, 57, 62, 63, 77, 78, 79, 81, 87, 96, 118, 149, 153, 190, 207, 317, 319, 333, 340, 341, 404, 432, 445, 455, 483, 484, 492, 495, 509, 513, 516, 540, 553, 579, 580, 581, 583, 584, 613, 676, 682, 685, 708, 709, 710, 711, 712, 713, 716, 725, 726, 727, 728, 729, 731, 744, 753, 756, 764, 765, 768, 769, 770, 775, 777, 781, 782, 783, 786, 789, 790, 791, 792, 795, 798, 803, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 827, 828, 829, 830, 833, 850, 854, 855, 857, 858, 861, 874, 875, 876, 885, 886, 887, 889, 890, 891, 892, 894, 895, 897, 898, 899, 900, 903, 904, 905, 909, 910, 913, 916, 917, 918, 926, 928, 929, 936, 938, 940, 948, 951, 955, 959, 962, 964, 974, 975, 976, 977, 978, 980, 982, 983, 985, 988, 998, 999, 1002, 1003, 1009, 1013, 1017, 1019, 1020, 1021, 1023, 1025, 1026, 1031, 1032, 1041, 1043, 1044, 1050, 1055, 1056, 1057, 1066, 1074, 1075, 1076, 1077, 1087, 1088, 1089, 1092, 1094, 1102, 1104, 1108, 1110, 1117, 1119, 1122, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1146, 1147, 1151, 1152, 1154, 1158, 1159, 1160, 1161, 1175, 1176, 1188, 1198, 1199, 1201, 1202, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1220, 1222, 1224, 1232, 1236, 1237, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1253, 1254, 1255, 1257, 1258, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1278, 1281, 1287, 1290, 1291, 1294, 1295, 1300, 1301, 1302, 1305, 1311, 1312, 1324, 1329, 1331, 1332, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1421, 1422, 1427, 1428, 1429, 1430, 1431, 1434, 1436, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1467, 1470, 1473, 1481, 1482, 1483, 1484, 1486, 1489, 1490, 1491, 1498, 1500, 1501, 1502, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1542, 1544, 1545, 1552, 1557, 1558, 1559, 1569, 1571, 1577, 1583, 1587, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1648, 1649, 1650, 1654, 1655, 1656, 1658, 1659, 1661, 1662, 1665, 1668, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1700, 1701, 1703, 1704, 1706, 1707, 1709, 1719, 1721, 1722, 1723, 1726, 1727, 1728, 1730, 1732, 1734, 1736, 1737, 1743, 1750, 1753, 1758, 1759, 1761, 1762, 1763, 1765, 1767, 1768, 1769, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1790, 1795, 1797, 1798, 1800, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1821, 1822, 1823, 1836, 1840, 1843, 1847, 1849, 1854, 1856, 1857, 1858, 1860, 1865, 1868, 1873, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1902, 1904, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1956, 1957, 1958, 1959, 1960, 1962, 1964], "float": [0, 1, 3, 11, 20, 21, 23, 27, 29, 31, 34, 42, 46, 54, 152, 153, 218, 311, 313, 315, 319, 331, 398, 472, 478, 495, 509, 681, 683, 688, 690, 694, 728, 731, 734, 735, 736, 740, 741, 742, 744, 751, 752, 757, 758, 759, 760, 761, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 781, 788, 789, 790, 795, 813, 815, 826, 834, 835, 848, 853, 854, 857, 858, 861, 876, 904, 905, 917, 918, 926, 933, 936, 940, 956, 961, 962, 966, 974, 1044, 1057, 1068, 1069, 1075, 1076, 1077, 1079, 1092, 1110, 1119, 1120, 1121, 1122, 1124, 1145, 1148, 1157, 1158, 1159, 1162, 1163, 1183, 1190, 1191, 1193, 1194, 1195, 1196, 1199, 1201, 1216, 1217, 1220, 1224, 1226, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1278, 1287, 1289, 1291, 1319, 1323, 1324, 1328, 1330, 1331, 1332, 1335, 1338, 1342, 1346, 1352, 1353, 1354, 1356, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1388, 1389, 1390, 1393, 1394, 1395, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1422, 1426, 1434, 1439, 1440, 1442, 1443, 1448, 1452, 1455, 1456, 1457, 1458, 1459, 1465, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1486, 1487, 1488, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1535, 1544, 1569, 1576, 1583, 1602, 1614, 1618, 1619, 1622, 1631, 1632, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1650, 1651, 1655, 1661, 1662, 1668, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1700, 1701, 1703, 1705, 1707, 1709, 1715, 1718, 1722, 1723, 1724, 1725, 1737, 1741, 1742, 1762, 1763, 1766, 1770, 1779, 1780, 1782, 1783, 1785, 1819, 1822, 1826, 1843, 1845, 1857, 1877, 1878, 1879, 1880, 1881, 1887, 1890, 1892, 1893, 1895, 1896, 1898, 1899, 1903, 1905, 1907, 1911, 1914, 1918, 1920, 1922, 1924, 1925, 1926, 1930, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1951, 1955, 1958, 1962, 1965], "datatyp": [0, 54, 876, 1198, 1201, 1434, 1616, 1617, 1765, 1914, 1918, 1934], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 17, 20, 21, 24, 27, 29, 30, 31, 33, 37, 38, 40, 41, 46, 47, 49, 51, 52, 53, 54, 96, 97, 112, 128, 129, 132, 144, 145, 148, 149, 158, 159, 164, 165, 195, 196, 197, 206, 232, 237, 241, 242, 243, 253, 272, 273, 280, 281, 282, 283, 289, 290, 291, 292, 293, 294, 301, 302, 305, 306, 307, 308, 311, 313, 319, 322, 342, 350, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 376, 377, 392, 393, 406, 410, 435, 436, 447, 448, 452, 453, 484, 494, 516, 557, 558, 559, 560, 576, 579, 612, 613, 614, 617, 618, 676, 681, 690, 734, 735, 736, 737, 738, 739, 756, 810, 822, 857, 861, 867, 874, 875, 880, 886, 889, 890, 903, 904, 905, 909, 910, 920, 921, 923, 924, 925, 927, 932, 948, 961, 974, 975, 978, 980, 982, 989, 999, 1020, 1062, 1068, 1069, 1070, 1071, 1078, 1079, 1080, 1094, 1101, 1119, 1120, 1121, 1122, 1125, 1131, 1132, 1133, 1134, 1137, 1141, 1143, 1144, 1145, 1155, 1156, 1157, 1166, 1167, 1169, 1170, 1175, 1176, 1178, 1190, 1199, 1201, 1205, 1212, 1221, 1223, 1224, 1225, 1227, 1228, 1233, 1251, 1253, 1256, 1257, 1270, 1278, 1279, 1280, 1282, 1284, 1285, 1288, 1289, 1295, 1298, 1299, 1303, 1304, 1308, 1311, 1323, 1325, 1335, 1338, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1371, 1381, 1386, 1388, 1400, 1434, 1435, 1444, 1462, 1477, 1481, 1485, 1508, 1509, 1510, 1535, 1544, 1583, 1602, 1605, 1614, 1618, 1619, 1637, 1659, 1663, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1700, 1701, 1707, 1709, 1737, 1741, 1757, 1762, 1765, 1767, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1819, 1820, 1836, 1842, 1846, 1848, 1865, 1866, 1871, 1872, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1888, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1918, 1921, 1925, 1926, 1930, 1931, 1932, 1935, 1939, 1940, 1941, 1948, 1951, 1953, 1954, 1956, 1958, 1961, 1962, 1963, 1964], "lower": [0, 1, 8, 21, 23, 29, 789, 791, 855, 927, 932, 939, 940, 941, 943, 1088, 1089, 1161, 1162, 1230, 1237, 1239, 1247, 1248, 1255, 1258, 1263, 1301, 1324, 1331, 1342, 1452, 1508, 1509, 1510, 1581, 1582, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1705, 1720, 1722, 1742, 1757, 1765, 1802, 1845, 1846, 1847, 1877, 1878, 1880, 1896, 1898, 1900, 1911, 1916, 1920, 1925, 1935, 1941, 1958, 1963], "point": [0, 1, 7, 8, 9, 11, 20, 21, 24, 27, 31, 37, 40, 41, 46, 54, 87, 152, 153, 319, 331, 337, 478, 495, 694, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 757, 758, 759, 760, 761, 771, 773, 775, 776, 777, 781, 791, 795, 815, 816, 817, 818, 821, 826, 848, 857, 858, 861, 876, 898, 900, 901, 902, 904, 905, 917, 918, 926, 948, 961, 962, 966, 1023, 1025, 1034, 1038, 1039, 1075, 1076, 1077, 1120, 1121, 1122, 1148, 1154, 1158, 1159, 1163, 1183, 1198, 1201, 1216, 1217, 1224, 1226, 1247, 1248, 1271, 1273, 1278, 1287, 1331, 1338, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1434, 1485, 1486, 1498, 1524, 1533, 1544, 1583, 1602, 1614, 1661, 1675, 1706, 1722, 1723, 1724, 1728, 1737, 1750, 1762, 1763, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1857, 1858, 1876, 1877, 1879, 1880, 1881, 1884, 1890, 1896, 1898, 1899, 1900, 1904, 1908, 1911, 1914, 1923, 1924, 1925, 1926, 1928, 1930, 1931, 1934, 1937, 1939, 1940, 1941, 1943, 1949, 1950, 1953, 1955, 1956, 1959, 1962, 1965], "lower_precision_fp": 0, "half": [0, 1, 10, 21, 29, 613, 956, 1088, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1201, 1263, 1269, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1385, 1434, 1528, 1529, 1532, 1670, 1672, 1697, 1750, 1818, 1893, 1911, 1914, 1934, 1936, 1937, 1940], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 28, 29, 38, 40, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 334, 585, 613, 756, 789, 837, 856, 874, 895, 904, 905, 917, 926, 950, 955, 1017, 1018, 1027, 1069, 1074, 1075, 1095, 1117, 1120, 1121, 1127, 1131, 1134, 1135, 1136, 1142, 1158, 1159, 1199, 1201, 1202, 1208, 1211, 1216, 1220, 1247, 1248, 1259, 1272, 1342, 1350, 1378, 1381, 1397, 1398, 1399, 1434, 1435, 1436, 1444, 1445, 1462, 1485, 1527, 1545, 1601, 1605, 1614, 1615, 1616, 1617, 1622, 1647, 1665, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1715, 1730, 1734, 1753, 1762, 1765, 1822, 1833, 1858, 1868, 1873, 1875, 1876, 1877, 1879, 1880, 1887, 1892, 1893, 1894, 1899, 1900, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1921, 1923, 1924, 1925, 1928, 1930, 1931, 1934, 1936, 1937, 1941, 1942, 1944, 1947, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1964], "linear": [0, 2, 9, 21, 23, 24, 27, 29, 46, 48, 50, 52, 54, 55, 428, 469, 470, 471, 472, 473, 476, 707, 716, 724, 725, 761, 788, 789, 790, 792, 810, 850, 854, 855, 857, 858, 899, 941, 980, 1074, 1130, 1132, 1140, 1142, 1154, 1201, 1205, 1212, 1226, 1232, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1261, 1263, 1291, 1331, 1350, 1356, 1376, 1384, 1385, 1393, 1419, 1434, 1436, 1449, 1451, 1453, 1461, 1463, 1470, 1473, 1477, 1479, 1481, 1484, 1486, 1522, 1531, 1532, 1544, 1578, 1586, 1591, 1602, 1605, 1614, 1621, 1622, 1626, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1654, 1655, 1658, 1669, 1700, 1703, 1711, 1722, 1857, 1868, 1876, 1878, 1879, 1885, 1888, 1895, 1898, 1903, 1904, 1905, 1907, 1911, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1930, 1961, 1963], "layer": [0, 8, 21, 23, 25, 27, 28, 46, 49, 730, 731, 756, 837, 854, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1375, 1379, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1419, 1421, 1427, 1428, 1429, 1440, 1441, 1449, 1451, 1462, 1473, 1477, 1478, 1479, 1480, 1481, 1547, 1614, 1621, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1876, 1898, 1903, 1905, 1907, 1910, 1911, 1916, 1918, 1921, 1923, 1925, 1926, 1928, 1934, 1944], "convolut": [0, 1, 2, 734, 735, 736, 737, 738, 739, 768, 769, 770, 948, 1210, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1375, 1379, 1410, 1411, 1412, 1413, 1414, 1415, 1446, 1447, 1452, 1482, 1483, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1532, 1533, 1765, 1876, 1878, 1888, 1898, 1902, 1903, 1908, 1911, 1920, 1924, 1925, 1928, 1958], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 40, 41, 42, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 63, 77, 79, 80, 81, 82, 87, 96, 149, 252, 317, 319, 333, 334, 337, 375, 400, 445, 468, 478, 483, 495, 509, 513, 540, 576, 585, 613, 676, 685, 686, 687, 693, 731, 752, 756, 757, 759, 760, 761, 775, 778, 779, 781, 782, 783, 788, 789, 790, 791, 792, 795, 810, 811, 812, 813, 815, 816, 817, 818, 821, 836, 850, 854, 855, 856, 857, 858, 861, 870, 871, 882, 883, 884, 886, 889, 895, 897, 898, 899, 900, 901, 902, 904, 905, 917, 926, 927, 929, 930, 932, 935, 941, 948, 956, 961, 962, 965, 966, 976, 977, 978, 980, 981, 983, 988, 1000, 1011, 1017, 1020, 1021, 1031, 1041, 1048, 1057, 1062, 1066, 1069, 1074, 1075, 1076, 1077, 1090, 1091, 1092, 1093, 1095, 1097, 1102, 1104, 1110, 1113, 1115, 1116, 1120, 1121, 1122, 1130, 1131, 1136, 1138, 1140, 1141, 1142, 1146, 1154, 1158, 1159, 1161, 1163, 1176, 1178, 1190, 1191, 1193, 1194, 1197, 1198, 1199, 1201, 1202, 1205, 1207, 1208, 1211, 1214, 1216, 1217, 1222, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1267, 1270, 1271, 1272, 1273, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1292, 1293, 1295, 1298, 1301, 1302, 1303, 1306, 1308, 1312, 1324, 1328, 1329, 1330, 1331, 1332, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1381, 1386, 1387, 1388, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1451, 1462, 1465, 1466, 1467, 1473, 1477, 1479, 1481, 1482, 1483, 1485, 1486, 1498, 1504, 1505, 1506, 1516, 1517, 1524, 1525, 1526, 1527, 1533, 1544, 1545, 1568, 1571, 1573, 1576, 1583, 1601, 1602, 1603, 1604, 1605, 1610, 1611, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1626, 1633, 1647, 1651, 1654, 1655, 1656, 1657, 1658, 1659, 1661, 1662, 1668, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1699, 1702, 1703, 1715, 1721, 1722, 1728, 1737, 1740, 1741, 1748, 1750, 1761, 1762, 1765, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1817, 1818, 1821, 1822, 1831, 1833, 1837, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1857, 1858, 1860, 1862, 1863, 1864, 1868, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "much": [0, 4, 7, 9, 14, 20, 21, 149, 889, 898, 903, 1031, 1236, 1237, 1264, 1273, 1378, 1614, 1637, 1703, 1877, 1900, 1903, 1908, 1911, 1916, 1922, 1923, 1930, 1931, 1934, 1951, 1953, 1956], "faster": [0, 2, 8, 11, 20, 21, 23, 898, 904, 905, 1130, 1230, 1231, 1236, 1237, 1241, 1246, 1254, 1256, 1258, 1261, 1264, 1266, 1270, 1273, 1450, 1467, 1573, 1589, 1614, 1618, 1619, 1621, 1678, 1679, 1690, 1804, 1805, 1806, 1808, 1809, 1888, 1900, 1903, 1908, 1921, 1925, 1934, 1939, 1945, 1950, 1953, 1959], "reduct": [0, 2, 23, 46, 319, 509, 513, 948, 1246, 1278, 1331, 1350, 1351, 1357, 1368, 1370, 1378, 1388, 1394, 1395, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1483, 1505, 1506, 1514, 1516, 1517, 1525, 1530, 1541, 1542, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1587, 1588, 1599, 1600, 1614, 1722, 1799, 1878, 1893, 1904, 1908, 1922, 1925, 1957, 1963], "often": [0, 2, 4, 7, 8, 13, 20, 23, 29, 41, 46, 49, 54, 149, 889, 903, 1216, 1247, 1248, 1257, 1306, 1377, 1397, 1398, 1399, 1498, 1506, 1524, 1533, 1605, 1621, 1668, 1705, 1880, 1900, 1903, 1907, 1910, 1911, 1913, 1914, 1915, 1922, 1930, 1939, 1952, 1953, 1961, 1963], "requir": [0, 1, 5, 8, 9, 13, 14, 20, 21, 23, 24, 25, 27, 29, 31, 39, 40, 46, 49, 51, 53, 54, 118, 149, 220, 333, 455, 492, 509, 511, 513, 556, 789, 791, 819, 822, 876, 885, 889, 894, 897, 898, 899, 900, 901, 902, 903, 948, 974, 975, 1030, 1074, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1115, 1116, 1142, 1143, 1214, 1240, 1271, 1273, 1287, 1370, 1377, 1378, 1477, 1478, 1479, 1480, 1481, 1483, 1525, 1583, 1605, 1614, 1615, 1624, 1626, 1628, 1668, 1669, 1681, 1691, 1709, 1806, 1818, 1857, 1868, 1875, 1877, 1880, 1882, 1887, 1888, 1892, 1894, 1895, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1916, 1918, 1922, 1923, 1925, 1926, 1930, 1931, 1932, 1934, 1939, 1941, 1944, 1945, 1948, 1949, 1950, 1952, 1953, 1959, 1961, 1964], "dynam": [0, 13, 14, 20, 55, 56, 57, 60, 61, 62, 65, 676, 725, 729, 756, 757, 758, 759, 760, 761, 790, 811, 822, 825, 840, 846, 847, 848, 849, 854, 855, 948, 976, 1208, 1214, 1216, 1272, 1621, 1879, 1880, 1881, 1898, 1903, 1911, 1914, 1918, 1921, 1922, 1926, 1945, 1950, 1953, 1960, 1963], "rang": [0, 1, 3, 20, 23, 24, 27, 29, 40, 41, 43, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 87, 299, 478, 680, 757, 759, 761, 791, 815, 816, 817, 818, 819, 821, 822, 823, 881, 918, 943, 1035, 1036, 1044, 1074, 1124, 1140, 1161, 1162, 1163, 1267, 1278, 1293, 1302, 1319, 1331, 1342, 1370, 1380, 1382, 1383, 1387, 1393, 1405, 1424, 1436, 1441, 1445, 1451, 1467, 1468, 1469, 1473, 1528, 1529, 1533, 1589, 1614, 1619, 1693, 1694, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1722, 1801, 1856, 1877, 1878, 1880, 1900, 1902, 1903, 1907, 1911, 1913, 1914, 1918, 1920, 1921, 1924, 1925, 1928, 1929, 1935, 1937, 1939, 1940, 1941, 1942, 1949, 1950, 1951, 1956, 1961, 1963], "tri": [0, 2, 3, 7, 20, 29, 33, 54, 82, 576, 1201, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1879, 1880, 1892, 1907, 1918, 1922, 1952, 1953, 1955], "match": [0, 1, 3, 23, 25, 27, 29, 40, 46, 54, 55, 62, 63, 79, 149, 311, 313, 319, 470, 471, 495, 496, 576, 579, 689, 695, 775, 789, 790, 791, 850, 874, 889, 903, 904, 905, 974, 977, 989, 990, 991, 1020, 1066, 1074, 1130, 1142, 1178, 1201, 1214, 1216, 1233, 1272, 1294, 1369, 1378, 1434, 1440, 1486, 1505, 1506, 1544, 1570, 1577, 1583, 1602, 1614, 1626, 1656, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1723, 1757, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1838, 1868, 1877, 1880, 1887, 1893, 1895, 1900, 1901, 1903, 1905, 1911, 1916, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1930, 1937, 1941, 1943, 1953, 1956, 1962], "each": [0, 1, 2, 5, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 38, 41, 42, 43, 46, 47, 49, 51, 52, 54, 78, 81, 96, 118, 152, 153, 396, 400, 489, 509, 511, 513, 541, 603, 613, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 682, 689, 691, 692, 695, 731, 756, 788, 836, 837, 855, 857, 858, 861, 873, 882, 883, 884, 885, 887, 888, 889, 894, 903, 916, 919, 928, 932, 936, 937, 939, 942, 946, 948, 950, 966, 986, 987, 991, 1020, 1023, 1025, 1031, 1033, 1037, 1040, 1046, 1051, 1052, 1053, 1054, 1057, 1058, 1069, 1072, 1074, 1091, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1115, 1116, 1118, 1123, 1127, 1132, 1133, 1137, 1141, 1142, 1143, 1154, 1160, 1162, 1163, 1164, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1201, 1216, 1217, 1222, 1254, 1272, 1273, 1288, 1290, 1298, 1300, 1301, 1302, 1303, 1306, 1308, 1315, 1316, 1324, 1330, 1332, 1342, 1347, 1350, 1351, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1414, 1415, 1419, 1421, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1462, 1465, 1466, 1468, 1473, 1476, 1482, 1483, 1485, 1503, 1505, 1506, 1511, 1512, 1513, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1543, 1545, 1568, 1569, 1571, 1573, 1576, 1583, 1596, 1605, 1610, 1611, 1614, 1647, 1648, 1650, 1660, 1661, 1662, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1714, 1718, 1719, 1722, 1729, 1737, 1742, 1743, 1748, 1752, 1757, 1770, 1781, 1787, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1821, 1822, 1837, 1839, 1840, 1843, 1854, 1855, 1862, 1868, 1869, 1875, 1879, 1880, 1886, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1930, 1931, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1943, 1944, 1945, 1947, 1948, 1950, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963], "its": [0, 1, 4, 5, 7, 8, 9, 13, 14, 17, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 40, 41, 42, 46, 53, 54, 55, 57, 77, 78, 149, 455, 484, 500, 509, 511, 513, 579, 580, 581, 613, 676, 819, 822, 870, 871, 872, 874, 875, 876, 889, 892, 904, 909, 910, 940, 941, 955, 956, 962, 966, 981, 1009, 1011, 1020, 1057, 1061, 1064, 1074, 1077, 1122, 1127, 1131, 1132, 1133, 1136, 1141, 1162, 1163, 1167, 1181, 1201, 1211, 1236, 1237, 1241, 1246, 1253, 1255, 1258, 1259, 1264, 1270, 1295, 1322, 1350, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1397, 1398, 1399, 1434, 1435, 1444, 1465, 1473, 1481, 1533, 1544, 1571, 1577, 1605, 1610, 1611, 1615, 1616, 1617, 1622, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1648, 1654, 1658, 1662, 1673, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1712, 1737, 1741, 1745, 1746, 1762, 1763, 1767, 1787, 1823, 1842, 1843, 1845, 1853, 1866, 1877, 1879, 1880, 1884, 1888, 1890, 1892, 1899, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1911, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1930, 1931, 1932, 1934, 1937, 1938, 1940, 1943, 1944, 1945, 1948, 1950, 1951, 1952, 1953, 1956, 1957, 1959], "appropri": [0, 7, 8, 9, 23, 24, 29, 46, 53, 54, 890, 1020, 1216, 1672, 1880, 1881, 1884, 1894, 1908, 1913, 1916, 1923, 1925, 1928, 1930, 1931, 1932, 1936, 1953, 1956, 1959, 1964], "ordinarili": [0, 1899], "train": [0, 1, 14, 20, 21, 23, 24, 26, 27, 31, 38, 39, 40, 41, 46, 49, 50, 54, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 795, 797, 834, 835, 851, 852, 853, 855, 857, 858, 859, 1019, 1020, 1023, 1025, 1032, 1140, 1176, 1201, 1206, 1212, 1215, 1216, 1342, 1346, 1352, 1353, 1354, 1370, 1371, 1372, 1377, 1378, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1440, 1441, 1452, 1473, 1481, 1499, 1503, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1581, 1582, 1583, 1614, 1622, 1624, 1626, 1655, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1875, 1877, 1878, 1888, 1890, 1898, 1900, 1903, 1904, 1907, 1912, 1914, 1916, 1918, 1921, 1922, 1923, 1924, 1928, 1930, 1932, 1939, 1945, 1947, 1948, 1949, 1950, 1955, 1957, 1958, 1960, 1963], "gradscal": [0, 1899, 1903], "togeth": [0, 3, 9, 20, 23, 28, 29, 47, 52, 54, 756, 1017, 1074, 1130, 1132, 1136, 1140, 1141, 1146, 1240, 1386, 1404, 1449, 1544, 1614, 1618, 1843, 1888, 1899, 1905, 1906, 1907, 1910, 1911, 1925, 1930, 1931, 1932, 1934, 1939, 1949, 1952, 1953, 1959], "shown": [0, 21, 32, 41, 1017, 1027, 1406, 1626, 1673, 1703, 1770, 1877, 1880, 1899, 1903, 1905, 1907, 1911, 1923, 1925, 1934, 1949, 1954], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 55, 57, 62, 63, 86, 87, 190, 207, 240, 252, 258, 287, 309, 311, 313, 315, 319, 333, 350, 399, 400, 442, 443, 444, 445, 446, 468, 478, 480, 484, 489, 492, 495, 509, 511, 513, 519, 533, 540, 554, 556, 576, 577, 579, 580, 581, 582, 583, 584, 585, 603, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 741, 742, 744, 752, 753, 754, 756, 757, 758, 759, 760, 761, 768, 769, 770, 781, 788, 789, 790, 792, 793, 806, 807, 808, 809, 810, 811, 812, 813, 820, 834, 850, 855, 856, 857, 858, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 907, 909, 910, 916, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 947, 948, 956, 959, 960, 961, 962, 963, 964, 965, 966, 974, 1017, 1018, 1023, 1025, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1138, 1140, 1142, 1143, 1144, 1145, 1148, 1154, 1157, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1171, 1175, 1176, 1178, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1528, 1529, 1533, 1535, 1568, 1570, 1571, 1574, 1575, 1583, 1602, 1605, 1614, 1621, 1622, 1624, 1626, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1710, 1712, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1757, 1759, 1760, 1761, 1762, 1763, 1766, 1767, 1770, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1795, 1797, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1816, 1817, 1819, 1821, 1822, 1824, 1825, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877, 1879, 1880, 1881, 1884, 1886, 1887, 1889, 1890, 1893, 1894, 1895, 1898, 1900, 1901, 1902, 1903, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1964], "recip": [0, 3, 27, 1434, 1614, 1628, 1899, 1911, 1952], "howev": [0, 2, 3, 4, 5, 7, 9, 13, 14, 20, 21, 23, 27, 29, 31, 37, 46, 47, 48, 50, 51, 53, 54, 55, 60, 63, 79, 80, 81, 478, 541, 890, 897, 977, 999, 1020, 1062, 1064, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1130, 1131, 1135, 1136, 1138, 1141, 1142, 1201, 1204, 1205, 1211, 1213, 1240, 1255, 1256, 1258, 1272, 1273, 1290, 1350, 1353, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1378, 1434, 1508, 1509, 1510, 1533, 1605, 1614, 1647, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1868, 1876, 1880, 1895, 1899, 1900, 1903, 1905, 1909, 1911, 1913, 1915, 1916, 1917, 1918, 1922, 1923, 1930, 1932, 1934, 1948, 1951, 1952, 1953, 1954], "modular": [0, 1899], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 19, 20, 21, 23, 27, 29, 30, 31, 33, 37, 39, 40, 44, 46, 47, 51, 53, 54, 79, 195, 220, 252, 311, 319, 455, 511, 513, 552, 599, 613, 676, 685, 811, 812, 813, 857, 888, 895, 897, 899, 903, 904, 913, 919, 930, 942, 948, 959, 960, 962, 964, 974, 975, 977, 978, 986, 999, 1009, 1010, 1011, 1017, 1018, 1020, 1031, 1033, 1037, 1051, 1052, 1074, 1113, 1117, 1122, 1125, 1127, 1134, 1135, 1137, 1163, 1198, 1201, 1204, 1205, 1210, 1211, 1213, 1214, 1216, 1222, 1231, 1232, 1236, 1237, 1238, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1256, 1258, 1259, 1262, 1263, 1264, 1270, 1272, 1273, 1278, 1295, 1305, 1319, 1342, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1400, 1404, 1430, 1431, 1432, 1434, 1441, 1449, 1479, 1481, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1535, 1544, 1550, 1571, 1583, 1601, 1602, 1603, 1604, 1605, 1614, 1621, 1623, 1624, 1626, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1721, 1741, 1744, 1762, 1765, 1772, 1790, 1802, 1818, 1822, 1845, 1857, 1875, 1876, 1877, 1879, 1880, 1884, 1886, 1887, 1888, 1890, 1894, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1911, 1914, 1915, 1916, 1917, 1918, 1922, 1924, 1925, 1926, 1928, 1930, 1932, 1934, 1936, 1942, 1948, 1951, 1952, 1953, 1956, 1957, 1961, 1963, 1964], "separ": [0, 1, 3, 9, 13, 20, 23, 27, 40, 41, 46, 47, 49, 52, 53, 54, 731, 756, 886, 1074, 1091, 1093, 1099, 1100, 1103, 1104, 1109, 1111, 1130, 1211, 1246, 1261, 1389, 1397, 1398, 1399, 1440, 1442, 1552, 1662, 1668, 1875, 1878, 1880, 1886, 1899, 1900, 1902, 1903, 1906, 1916, 1921, 1922, 1931, 1934, 1935, 1939, 1948, 1963], "desir": [0, 1, 3, 20, 23, 29, 46, 54, 87, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 238, 252, 265, 295, 323, 391, 442, 443, 444, 445, 446, 493, 495, 496, 516, 521, 540, 541, 542, 556, 576, 579, 599, 600, 613, 789, 861, 875, 917, 926, 945, 1021, 1022, 1045, 1046, 1055, 1056, 1075, 1076, 1077, 1087, 1092, 1110, 1127, 1128, 1129, 1158, 1159, 1201, 1220, 1271, 1287, 1293, 1300, 1314, 1320, 1329, 1331, 1332, 1350, 1351, 1434, 1484, 1506, 1552, 1589, 1590, 1605, 1647, 1661, 1665, 1666, 1712, 1719, 1722, 1723, 1724, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1771, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1798, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1821, 1836, 1847, 1849, 1873, 1874, 1893, 1894, 1895, 1899, 1900, 1903, 1906, 1909, 1911, 1916, 1923, 1929, 1930, 1935, 1936, 1937, 1963], "As": [0, 1, 8, 21, 23, 25, 29, 46, 49, 50, 54, 252, 930, 1074, 1205, 1232, 1236, 1237, 1247, 1248, 1259, 1264, 1373, 1374, 1375, 1379, 1400, 1434, 1465, 1601, 1660, 1666, 1874, 1877, 1879, 1880, 1887, 1895, 1900, 1903, 1905, 1907, 1911, 1914, 1917, 1918, 1922, 1923, 1929, 1930, 1931, 1932, 1934, 1945, 1947, 1949, 1953, 1954, 1955, 1956, 1963], "section": [0, 1, 7, 20, 29, 31, 32, 50, 54, 81, 118, 1031, 1074, 1154, 1371, 1386, 1404, 1432, 1449, 1516, 1650, 1837, 1877, 1878, 1879, 1880, 1881, 1892, 1894, 1895, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1911, 1913, 1931, 1939, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1961, 1963], "infer": [0, 1, 2, 3, 5, 11, 14, 29, 40, 46, 576, 613, 857, 858, 861, 875, 876, 991, 1127, 1128, 1163, 1176, 1185, 1199, 1202, 1210, 1215, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1440, 1486, 1544, 1570, 1605, 1659, 1692, 1703, 1737, 1744, 1762, 1763, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1853, 1876, 1877, 1879, 1880, 1884, 1893, 1895, 1911, 1918, 1919, 1924, 1925, 1926, 1928, 1934, 1945, 1947, 1948, 1951, 1953, 1955, 1960], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 38, 40, 41, 46, 50, 51, 53, 54, 77, 78, 79, 118, 252, 309, 319, 321, 333, 350, 442, 443, 444, 445, 446, 455, 478, 483, 509, 511, 513, 553, 579, 580, 581, 583, 584, 610, 613, 676, 691, 692, 731, 734, 735, 736, 737, 739, 768, 769, 770, 775, 781, 782, 783, 787, 789, 797, 810, 813, 816, 817, 820, 824, 838, 845, 854, 874, 890, 893, 894, 895, 896, 897, 899, 904, 917, 918, 926, 948, 967, 968, 969, 970, 971, 972, 973, 976, 977, 978, 980, 987, 989, 991, 1017, 1018, 1020, 1041, 1071, 1075, 1077, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1120, 1121, 1125, 1126, 1131, 1142, 1154, 1158, 1159, 1163, 1171, 1182, 1190, 1199, 1201, 1204, 1205, 1212, 1216, 1217, 1220, 1231, 1236, 1237, 1239, 1240, 1241, 1242, 1244, 1246, 1247, 1248, 1249, 1259, 1261, 1262, 1264, 1265, 1272, 1273, 1290, 1295, 1342, 1365, 1366, 1367, 1370, 1371, 1377, 1378, 1381, 1404, 1406, 1434, 1437, 1439, 1440, 1442, 1450, 1473, 1481, 1485, 1486, 1516, 1525, 1527, 1533, 1544, 1571, 1601, 1602, 1605, 1608, 1609, 1610, 1611, 1614, 1616, 1617, 1627, 1647, 1648, 1649, 1661, 1668, 1674, 1678, 1679, 1681, 1692, 1695, 1699, 1702, 1703, 1705, 1709, 1721, 1730, 1734, 1736, 1738, 1761, 1765, 1766, 1768, 1772, 1799, 1803, 1813, 1818, 1822, 1836, 1847, 1849, 1854, 1855, 1857, 1858, 1860, 1865, 1866, 1867, 1868, 1875, 1878, 1879, 1880, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1928, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1945, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1963], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 29, 31, 37, 38, 40, 41, 43, 46, 47, 48, 50, 51, 52, 53, 54, 195, 220, 252, 287, 311, 313, 319, 333, 350, 468, 478, 489, 495, 509, 511, 513, 579, 585, 599, 613, 682, 683, 684, 685, 686, 689, 695, 730, 734, 735, 736, 737, 738, 739, 756, 788, 789, 790, 810, 854, 855, 888, 904, 916, 920, 922, 923, 925, 928, 937, 941, 948, 1009, 1023, 1025, 1031, 1055, 1056, 1057, 1074, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1118, 1140, 1142, 1143, 1154, 1163, 1178, 1201, 1211, 1212, 1214, 1216, 1217, 1232, 1236, 1237, 1240, 1243, 1244, 1245, 1246, 1248, 1257, 1258, 1260, 1264, 1273, 1280, 1288, 1295, 1301, 1305, 1342, 1346, 1350, 1351, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1380, 1381, 1386, 1388, 1395, 1400, 1404, 1406, 1434, 1437, 1438, 1439, 1440, 1448, 1449, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1470, 1484, 1485, 1489, 1490, 1491, 1506, 1508, 1509, 1510, 1533, 1544, 1569, 1571, 1583, 1591, 1605, 1610, 1611, 1614, 1624, 1647, 1648, 1649, 1651, 1661, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1705, 1750, 1759, 1797, 1807, 1813, 1822, 1837, 1839, 1843, 1851, 1858, 1860, 1866, 1867, 1868, 1875, 1876, 1877, 1880, 1882, 1884, 1886, 1887, 1888, 1890, 1893, 1894, 1895, 1896, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1945, 1946, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1956, 1957, 1959, 1960, 1962, 1963, 1964], "api": [0, 2, 3, 5, 8, 9, 21, 23, 24, 28, 31, 32, 33, 37, 38, 39, 40, 41, 46, 47, 50, 53, 55, 60, 63, 796, 820, 857, 890, 891, 892, 900, 937, 975, 1009, 1010, 1011, 1017, 1018, 1020, 1047, 1078, 1118, 1131, 1134, 1135, 1137, 1142, 1211, 1212, 1214, 1319, 1614, 1656, 1658, 1659, 1668, 1670, 1750, 1761, 1767, 1851, 1860, 1868, 1875, 1884, 1886, 1887, 1888, 1891, 1892, 1893, 1895, 1900, 1904, 1916, 1918, 1926, 1930, 1931, 1934, 1937, 1939, 1942, 1945, 1948, 1950, 1955, 1964], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 27, 28, 29, 30, 37, 40, 46, 50, 51, 52, 53, 54, 55, 62, 63, 82, 153, 217, 220, 221, 252, 321, 509, 511, 513, 519, 539, 610, 737, 738, 739, 756, 796, 810, 857, 876, 885, 886, 895, 917, 926, 940, 948, 953, 974, 1017, 1020, 1031, 1055, 1056, 1074, 1078, 1094, 1125, 1131, 1137, 1141, 1142, 1143, 1146, 1148, 1158, 1159, 1163, 1176, 1201, 1204, 1205, 1207, 1210, 1214, 1216, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1302, 1308, 1322, 1330, 1342, 1350, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1378, 1381, 1386, 1400, 1404, 1434, 1441, 1449, 1463, 1465, 1473, 1482, 1483, 1485, 1511, 1512, 1513, 1533, 1570, 1586, 1605, 1614, 1624, 1626, 1636, 1638, 1640, 1641, 1642, 1643, 1659, 1693, 1699, 1703, 1706, 1709, 1734, 1741, 1753, 1763, 1778, 1779, 1796, 1799, 1813, 1822, 1831, 1833, 1836, 1842, 1843, 1854, 1855, 1868, 1871, 1875, 1876, 1877, 1879, 1880, 1884, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1930, 1931, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1948, 1949, 1951, 1952, 1953, 1954, 1957, 1959, 1960, 1961, 1962, 1963, 1964], "arg": [0, 1, 3, 4, 5, 13, 20, 21, 23, 27, 29, 31, 32, 38, 39, 41, 42, 43, 46, 53, 54, 55, 60, 61, 62, 63, 86, 576, 599, 676, 728, 743, 745, 747, 748, 749, 750, 756, 758, 759, 820, 857, 886, 888, 893, 894, 952, 1020, 1130, 1134, 1135, 1136, 1142, 1201, 1204, 1290, 1350, 1351, 1368, 1370, 1386, 1394, 1396, 1401, 1404, 1423, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1449, 1462, 1464, 1465, 1466, 1468, 1472, 1473, 1474, 1475, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1605, 1614, 1628, 1633, 1647, 1654, 1656, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1823, 1855, 1865, 1868, 1875, 1878, 1880, 1881, 1892, 1894, 1900, 1903, 1904, 1905, 1906, 1913, 1918, 1919, 1922, 1923, 1930, 1931, 1932, 1936, 1944, 1949, 1950, 1952, 1956, 1962, 1963, 1964], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 62, 63, 67, 68, 69, 77, 78, 79, 80, 81, 82, 83, 86, 87, 96, 149, 152, 153, 154, 169, 171, 174, 177, 178, 179, 189, 190, 194, 195, 205, 207, 208, 217, 222, 238, 252, 253, 265, 288, 295, 309, 311, 313, 317, 319, 321, 323, 326, 327, 328, 329, 330, 331, 333, 334, 336, 338, 339, 340, 341, 350, 391, 398, 400, 404, 445, 455, 468, 469, 478, 480, 483, 484, 489, 491, 492, 493, 494, 495, 496, 499, 500, 509, 511, 513, 516, 520, 521, 533, 539, 540, 541, 553, 556, 576, 577, 579, 580, 581, 583, 584, 585, 599, 600, 603, 610, 613, 614, 616, 620, 676, 677, 679, 680, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 764, 765, 768, 769, 770, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 797, 798, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 822, 823, 829, 834, 835, 836, 853, 854, 855, 857, 858, 861, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 913, 916, 917, 918, 919, 921, 924, 926, 928, 929, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 955, 959, 960, 961, 962, 963, 964, 965, 966, 971, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 986, 987, 989, 991, 994, 995, 996, 998, 1002, 1003, 1006, 1009, 1010, 1011, 1013, 1014, 1015, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1065, 1066, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1154, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1171, 1175, 1176, 1178, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1220, 1221, 1222, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1283, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1322, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1469, 1470, 1473, 1474, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1544, 1545, 1550, 1552, 1554, 1555, 1557, 1558, 1559, 1568, 1569, 1571, 1573, 1574, 1575, 1576, 1577, 1583, 1586, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1666, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1728, 1730, 1731, 1732, 1734, 1735, 1737, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1752, 1753, 1757, 1759, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1788, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1817, 1818, 1821, 1822, 1823, 1824, 1825, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1853, 1854, 1855, 1857, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964, 1965], "equival": [0, 3, 5, 20, 21, 27, 29, 33, 40, 41, 46, 50, 51, 54, 77, 154, 169, 171, 174, 177, 178, 179, 238, 253, 265, 295, 317, 323, 391, 445, 455, 494, 496, 521, 600, 606, 613, 614, 616, 688, 740, 744, 751, 753, 755, 781, 782, 783, 872, 886, 929, 931, 934, 936, 939, 946, 947, 1062, 1066, 1069, 1072, 1073, 1074, 1076, 1091, 1093, 1096, 1099, 1100, 1103, 1104, 1106, 1109, 1111, 1129, 1131, 1134, 1136, 1142, 1164, 1166, 1178, 1200, 1201, 1211, 1216, 1217, 1220, 1232, 1253, 1257, 1265, 1270, 1302, 1307, 1322, 1329, 1342, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1377, 1378, 1389, 1395, 1397, 1398, 1399, 1400, 1404, 1406, 1434, 1465, 1473, 1485, 1487, 1552, 1573, 1583, 1602, 1603, 1604, 1614, 1666, 1692, 1728, 1731, 1735, 1759, 1765, 1773, 1795, 1801, 1814, 1824, 1825, 1831, 1836, 1855, 1868, 1869, 1870, 1874, 1877, 1879, 1880, 1900, 1918, 1922, 1926, 1934, 1935, 1937, 1940, 1941, 1949, 1956, 1964, 1965], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 20, 21, 23, 25, 27, 28, 29, 30, 32, 33, 40, 41, 46, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 81, 82, 309, 319, 455, 579, 613, 681, 682, 683, 685, 689, 691, 692, 695, 725, 734, 735, 736, 768, 769, 770, 775, 781, 782, 783, 788, 789, 790, 791, 797, 813, 829, 855, 857, 858, 888, 890, 895, 904, 905, 916, 917, 921, 924, 926, 928, 940, 941, 948, 961, 974, 976, 1017, 1018, 1020, 1037, 1069, 1071, 1074, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1137, 1141, 1158, 1159, 1171, 1198, 1205, 1212, 1216, 1220, 1221, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1291, 1295, 1299, 1304, 1305, 1323, 1362, 1363, 1364, 1365, 1366, 1367, 1374, 1377, 1378, 1381, 1401, 1421, 1439, 1440, 1473, 1481, 1483, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1525, 1527, 1533, 1544, 1550, 1583, 1601, 1602, 1604, 1614, 1661, 1666, 1668, 1672, 1678, 1679, 1681, 1709, 1721, 1740, 1741, 1762, 1765, 1766, 1796, 1799, 1802, 1819, 1822, 1845, 1847, 1849, 1858, 1860, 1865, 1866, 1867, 1874, 1875, 1876, 1877, 1879, 1881, 1882, 1884, 1888, 1890, 1892, 1896, 1900, 1901, 1902, 1903, 1904, 1905, 1909, 1911, 1913, 1914, 1916, 1917, 1919, 1921, 1922, 1923, 1924, 1928, 1929, 1930, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1962, 1963, 1964], "now": [0, 1, 23, 28, 30, 37, 41, 42, 46, 51, 54, 220, 492, 896, 903, 989, 1017, 1038, 1039, 1125, 1148, 1198, 1199, 1205, 1216, 1250, 1431, 1450, 1486, 1605, 1626, 1637, 1658, 1681, 1762, 1813, 1818, 1860, 1877, 1887, 1893, 1894, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1911, 1912, 1918, 1922, 1925, 1931, 1932, 1934, 1948, 1951, 1952, 1953, 1954, 1956, 1957, 1962, 1963, 1964], "new": [0, 1, 5, 8, 13, 17, 20, 22, 23, 25, 29, 31, 40, 41, 46, 47, 50, 51, 52, 53, 54, 81, 220, 252, 309, 445, 480, 484, 492, 495, 540, 576, 579, 613, 676, 680, 756, 787, 810, 815, 850, 875, 877, 878, 879, 880, 881, 891, 909, 910, 931, 932, 935, 937, 946, 950, 961, 963, 964, 978, 980, 1058, 1062, 1084, 1088, 1089, 1115, 1116, 1118, 1131, 1140, 1142, 1171, 1175, 1176, 1190, 1191, 1194, 1197, 1201, 1207, 1212, 1214, 1274, 1275, 1276, 1277, 1294, 1333, 1336, 1352, 1353, 1354, 1386, 1397, 1398, 1399, 1434, 1435, 1440, 1444, 1473, 1484, 1486, 1544, 1607, 1610, 1611, 1612, 1613, 1614, 1622, 1626, 1628, 1632, 1633, 1634, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1651, 1655, 1658, 1659, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1705, 1729, 1739, 1740, 1744, 1745, 1746, 1752, 1753, 1757, 1762, 1763, 1773, 1775, 1786, 1788, 1790, 1811, 1812, 1815, 1832, 1834, 1835, 1851, 1853, 1856, 1857, 1866, 1867, 1868, 1875, 1877, 1879, 1880, 1884, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1900, 1903, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1928, 1932, 1934, 1935, 1936, 1938, 1939, 1940, 1941, 1944, 1948, 1950, 1951, 1953, 1956, 1962, 1963], "version": [0, 1, 2, 5, 8, 13, 19, 21, 23, 25, 29, 41, 46, 49, 50, 54, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 120, 122, 124, 126, 129, 130, 132, 140, 142, 145, 146, 148, 151, 157, 159, 161, 163, 165, 167, 176, 185, 193, 197, 200, 202, 212, 214, 230, 234, 236, 242, 245, 247, 249, 251, 255, 260, 267, 269, 271, 275, 277, 281, 283, 290, 292, 294, 302, 304, 306, 308, 310, 312, 314, 316, 354, 356, 358, 360, 362, 364, 366, 369, 371, 373, 374, 381, 383, 385, 387, 389, 393, 397, 399, 417, 420, 423, 425, 436, 438, 440, 448, 453, 463, 466, 482, 486, 488, 504, 507, 508, 510, 512, 518, 523, 525, 528, 530, 532, 545, 547, 549, 552, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 608, 618, 731, 732, 733, 745, 746, 747, 748, 749, 750, 771, 772, 773, 774, 776, 780, 781, 800, 801, 802, 835, 843, 851, 852, 854, 1020, 1130, 1158, 1176, 1198, 1201, 1204, 1205, 1208, 1211, 1230, 1243, 1244, 1248, 1249, 1262, 1295, 1333, 1351, 1404, 1434, 1435, 1449, 1486, 1498, 1523, 1533, 1540, 1549, 1580, 1582, 1597, 1598, 1602, 1606, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1655, 1656, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1754, 1755, 1756, 1813, 1816, 1817, 1818, 1822, 1842, 1857, 1863, 1864, 1875, 1893, 1894, 1900, 1901, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1915, 1917, 1918, 1919, 1921, 1922, 1924, 1928, 1934, 1941, 1942, 1953, 1954, 1961, 1963], "1": [0, 1, 2, 3, 11, 13, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 40, 43, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 135, 150, 151, 172, 190, 204, 207, 224, 226, 227, 228, 240, 252, 256, 261, 284, 287, 309, 310, 311, 313, 315, 319, 350, 375, 399, 400, 442, 444, 445, 451, 468, 478, 480, 484, 489, 492, 495, 509, 511, 513, 533, 534, 538, 540, 550, 551, 552, 554, 556, 557, 558, 559, 560, 577, 579, 580, 581, 583, 584, 603, 604, 611, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 726, 727, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 747, 748, 749, 752, 753, 754, 756, 766, 768, 769, 770, 771, 774, 778, 779, 781, 792, 804, 805, 815, 816, 817, 818, 821, 823, 851, 857, 858, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 886, 890, 893, 895, 896, 897, 898, 899, 900, 901, 902, 909, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 947, 949, 956, 959, 960, 961, 962, 963, 964, 965, 966, 970, 974, 986, 1017, 1018, 1033, 1037, 1044, 1048, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1077, 1078, 1079, 1080, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1171, 1172, 1175, 1176, 1178, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1205, 1211, 1212, 1216, 1217, 1220, 1221, 1222, 1224, 1225, 1226, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1246, 1247, 1248, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1276, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1319, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1500, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1531, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1542, 1543, 1551, 1553, 1557, 1558, 1559, 1565, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1577, 1581, 1582, 1583, 1584, 1585, 1587, 1589, 1590, 1591, 1593, 1598, 1599, 1600, 1601, 1602, 1605, 1614, 1621, 1622, 1626, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1669, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1715, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1757, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1770, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1790, 1791, 1795, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1878, 1879, 1880, 1881, 1884, 1887, 1888, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1961, 1962, 1963, 1964, 1965], "10": [0, 1, 19, 20, 21, 23, 24, 29, 30, 40, 42, 55, 60, 62, 63, 311, 319, 333, 468, 509, 556, 577, 579, 580, 581, 681, 682, 693, 730, 741, 742, 756, 757, 758, 759, 761, 916, 928, 938, 940, 941, 942, 946, 966, 1053, 1054, 1055, 1056, 1057, 1072, 1074, 1091, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1109, 1111, 1117, 1125, 1144, 1154, 1164, 1190, 1206, 1211, 1212, 1218, 1223, 1226, 1253, 1255, 1256, 1271, 1273, 1275, 1280, 1282, 1283, 1284, 1285, 1287, 1295, 1306, 1324, 1340, 1341, 1342, 1344, 1345, 1351, 1354, 1357, 1358, 1361, 1364, 1367, 1377, 1378, 1386, 1387, 1388, 1389, 1399, 1404, 1405, 1406, 1431, 1435, 1436, 1441, 1444, 1445, 1449, 1451, 1473, 1477, 1478, 1479, 1480, 1481, 1485, 1491, 1510, 1513, 1517, 1524, 1525, 1535, 1605, 1614, 1637, 1645, 1659, 1662, 1673, 1677, 1697, 1703, 1705, 1723, 1724, 1732, 1757, 1770, 1776, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1795, 1810, 1822, 1823, 1833, 1837, 1838, 1841, 1843, 1857, 1869, 1875, 1877, 1878, 1879, 1880, 1881, 1887, 1900, 1903, 1904, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1934, 1935, 1937, 1939, 1940, 1941, 1948, 1949, 1950, 1953, 1955, 1956, 1961, 1963, 1965], "class": [0, 1, 2, 3, 14, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 34, 37, 38, 40, 42, 46, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 87, 553, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 890, 893, 894, 895, 896, 967, 968, 975, 976, 977, 978, 980, 981, 996, 998, 1009, 1049, 1078, 1140, 1176, 1199, 1200, 1201, 1204, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1312, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1506, 1516, 1524, 1568, 1570, 1605, 1614, 1615, 1616, 1617, 1623, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1647, 1654, 1659, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1728, 1767, 1797, 1858, 1876, 1878, 1881, 1884, 1887, 1890, 1892, 1894, 1899, 1900, 1903, 1905, 1906, 1907, 1911, 1913, 1916, 1919, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1934, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1949, 1950, 1951, 1956, 1959, 1961, 1962, 1963, 1964, 1965], "device_typ": [0, 1, 23, 1899, 1929], "dtype": [0, 1, 5, 11, 17, 18, 20, 23, 25, 46, 54, 55, 60, 62, 63, 80, 152, 153, 190, 207, 211, 212, 213, 214, 240, 309, 311, 313, 315, 317, 319, 407, 426, 429, 442, 443, 444, 445, 446, 450, 455, 467, 478, 480, 509, 511, 561, 576, 577, 599, 613, 683, 685, 688, 689, 693, 695, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 760, 761, 768, 769, 770, 790, 791, 795, 815, 816, 817, 818, 819, 820, 821, 822, 823, 837, 854, 855, 857, 858, 861, 875, 876, 893, 895, 897, 899, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 933, 940, 956, 959, 960, 966, 974, 990, 1055, 1056, 1075, 1076, 1077, 1087, 1091, 1092, 1093, 1099, 1100, 1110, 1117, 1122, 1124, 1126, 1127, 1128, 1129, 1148, 1158, 1159, 1171, 1201, 1205, 1214, 1220, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1282, 1283, 1284, 1285, 1287, 1290, 1291, 1295, 1299, 1300, 1301, 1304, 1305, 1324, 1328, 1329, 1330, 1332, 1342, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1377, 1378, 1381, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1440, 1441, 1442, 1449, 1450, 1451, 1455, 1456, 1457, 1458, 1459, 1473, 1477, 1479, 1481, 1485, 1486, 1487, 1488, 1500, 1516, 1517, 1544, 1550, 1552, 1583, 1589, 1590, 1605, 1616, 1617, 1623, 1626, 1627, 1647, 1661, 1665, 1666, 1670, 1674, 1709, 1715, 1719, 1720, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1747, 1750, 1762, 1763, 1765, 1766, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1794, 1798, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1821, 1822, 1833, 1836, 1847, 1849, 1854, 1857, 1858, 1860, 1866, 1867, 1871, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1882, 1887, 1894, 1895, 1903, 1905, 1911, 1914, 1918, 1920, 1925, 1926, 1927, 1934, 1935, 1936, 1939, 1940, 1941, 1950, 1952, 1958, 1963, 1965], "none": [0, 1, 2, 3, 5, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 38, 40, 42, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 111, 113, 114, 115, 117, 133, 134, 137, 149, 152, 153, 155, 172, 184, 185, 186, 187, 203, 204, 206, 208, 211, 212, 213, 214, 228, 233, 234, 235, 236, 256, 284, 288, 299, 333, 349, 352, 375, 405, 407, 408, 409, 412, 418, 424, 425, 426, 427, 428, 429, 442, 443, 444, 445, 446, 450, 451, 467, 476, 478, 484, 490, 499, 509, 516, 533, 534, 548, 549, 551, 552, 561, 576, 577, 579, 584, 586, 599, 604, 605, 606, 611, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 651, 653, 655, 656, 658, 660, 662, 664, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 742, 745, 746, 747, 748, 749, 750, 751, 762, 763, 764, 765, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 789, 790, 791, 793, 795, 810, 813, 815, 816, 817, 818, 821, 822, 834, 835, 836, 853, 854, 855, 856, 857, 858, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 890, 891, 892, 895, 896, 898, 900, 901, 902, 903, 904, 905, 909, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 932, 935, 937, 938, 939, 940, 941, 943, 944, 946, 948, 953, 956, 957, 958, 960, 961, 963, 964, 965, 966, 969, 973, 974, 975, 977, 978, 980, 981, 982, 986, 987, 989, 990, 991, 994, 995, 996, 1002, 1003, 1009, 1019, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1044, 1047, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1066, 1067, 1069, 1070, 1071, 1073, 1075, 1076, 1077, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1128, 1129, 1130, 1131, 1132, 1136, 1139, 1140, 1142, 1143, 1144, 1145, 1146, 1147, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1178, 1179, 1195, 1196, 1198, 1200, 1201, 1205, 1208, 1210, 1211, 1212, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1380, 1382, 1383, 1384, 1387, 1388, 1389, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1448, 1450, 1451, 1465, 1466, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1493, 1494, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1524, 1525, 1528, 1529, 1530, 1531, 1533, 1534, 1541, 1543, 1544, 1545, 1546, 1547, 1550, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1571, 1573, 1576, 1583, 1587, 1588, 1589, 1590, 1598, 1599, 1600, 1602, 1603, 1604, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1625, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1647, 1649, 1650, 1651, 1652, 1655, 1656, 1658, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1709, 1710, 1711, 1714, 1715, 1716, 1718, 1719, 1721, 1722, 1725, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1741, 1742, 1743, 1748, 1750, 1751, 1752, 1757, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1794, 1795, 1798, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1833, 1834, 1835, 1836, 1838, 1840, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1854, 1855, 1858, 1860, 1862, 1863, 1864, 1865, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1881, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1898, 1900, 1903, 1905, 1906, 1911, 1913, 1916, 1918, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1935, 1936, 1937, 1939, 1941, 1943, 1944, 1949, 1956, 1958, 1963, 1964], "enabl": [0, 1, 2, 5, 8, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 31, 41, 46, 80, 82, 499, 500, 676, 756, 808, 809, 890, 895, 948, 975, 1020, 1074, 1078, 1176, 1184, 1185, 1203, 1209, 1315, 1316, 1386, 1404, 1449, 1450, 1480, 1583, 1614, 1623, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1659, 1691, 1766, 1767, 1770, 1797, 1857, 1860, 1880, 1886, 1887, 1888, 1891, 1895, 1899, 1900, 1901, 1902, 1903, 1905, 1910, 1912, 1914, 1915, 1918, 1923, 1924, 1929, 1930, 1931, 1934, 1942, 1944, 1945, 1947, 1949, 1950, 1952, 1953, 1956, 1957, 1961, 1963, 1964], "true": [0, 1, 2, 3, 5, 13, 20, 21, 23, 24, 25, 27, 29, 31, 42, 46, 51, 52, 53, 54, 55, 62, 63, 149, 195, 208, 258, 317, 319, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 394, 398, 400, 445, 455, 457, 468, 474, 484, 491, 492, 495, 500, 512, 513, 552, 563, 576, 577, 586, 590, 599, 605, 613, 676, 683, 688, 689, 690, 691, 692, 693, 695, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 742, 745, 750, 752, 756, 757, 760, 761, 764, 765, 775, 781, 782, 793, 810, 822, 855, 869, 871, 872, 876, 885, 888, 889, 890, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 909, 910, 917, 920, 923, 925, 926, 932, 933, 939, 940, 941, 947, 948, 951, 953, 959, 977, 1015, 1069, 1075, 1076, 1077, 1078, 1079, 1080, 1096, 1097, 1103, 1104, 1127, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1141, 1142, 1143, 1145, 1157, 1158, 1159, 1162, 1163, 1174, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1201, 1205, 1206, 1207, 1210, 1216, 1217, 1218, 1220, 1222, 1225, 1230, 1231, 1242, 1243, 1244, 1247, 1248, 1249, 1250, 1253, 1255, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1270, 1272, 1273, 1282, 1283, 1284, 1285, 1288, 1289, 1290, 1292, 1294, 1298, 1300, 1301, 1302, 1303, 1306, 1312, 1324, 1329, 1332, 1335, 1338, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1388, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1448, 1449, 1450, 1451, 1465, 1466, 1473, 1477, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1537, 1543, 1544, 1545, 1557, 1558, 1559, 1568, 1576, 1583, 1602, 1603, 1605, 1608, 1614, 1615, 1617, 1618, 1621, 1622, 1625, 1626, 1627, 1639, 1647, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1711, 1719, 1721, 1722, 1726, 1727, 1728, 1745, 1746, 1753, 1756, 1757, 1765, 1766, 1767, 1770, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1795, 1797, 1799, 1816, 1817, 1818, 1821, 1822, 1836, 1840, 1845, 1854, 1855, 1857, 1860, 1862, 1863, 1864, 1868, 1871, 1875, 1878, 1879, 1880, 1887, 1889, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1950, 1951, 1953, 1955, 1956, 1958, 1959, 1961, 1962, 1963, 1964], "cache_en": [0, 1020], "sourc": [0, 1, 2, 3, 4, 5, 9, 12, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 42, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 149, 195, 208, 310, 311, 319, 338, 349, 394, 399, 400, 413, 414, 450, 468, 484, 509, 511, 513, 516, 520, 543, 552, 553, 555, 582, 599, 602, 605, 606, 620, 676, 691, 692, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 832, 833, 834, 835, 836, 837, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 869, 882, 883, 884, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 911, 912, 913, 915, 927, 929, 930, 934, 936, 938, 948, 949, 950, 951, 952, 953, 954, 955, 967, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1074, 1078, 1125, 1127, 1143, 1149, 1150, 1153, 1172, 1173, 1174, 1176, 1177, 1182, 1187, 1188, 1189, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1272, 1273, 1293, 1302, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1498, 1499, 1503, 1505, 1506, 1507, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1554, 1555, 1556, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1593, 1594, 1595, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1661, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1711, 1728, 1753, 1758, 1761, 1762, 1763, 1764, 1765, 1767, 1770, 1771, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1797, 1803, 1810, 1818, 1823, 1826, 1827, 1828, 1829, 1830, 1838, 1857, 1858, 1859, 1860, 1861, 1875, 1877, 1878, 1879, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1898, 1907, 1909, 1910, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1925, 1929, 1930, 1931, 1936, 1939, 1941, 1942, 1943, 1944, 1953, 1954, 1956, 1963, 1964], "instanc": [0, 3, 20, 23, 24, 25, 27, 29, 30, 31, 37, 40, 41, 42, 46, 51, 54, 138, 613, 676, 730, 744, 753, 789, 792, 820, 822, 837, 854, 975, 1074, 1125, 1199, 1201, 1212, 1216, 1273, 1377, 1378, 1381, 1397, 1398, 1399, 1406, 1434, 1444, 1478, 1480, 1481, 1485, 1543, 1614, 1622, 1633, 1647, 1655, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1807, 1837, 1877, 1879, 1881, 1886, 1888, 1892, 1894, 1899, 1900, 1903, 1904, 1905, 1907, 1911, 1915, 1922, 1925, 1930, 1931, 1932, 1934, 1936, 1941, 1948, 1956, 1962, 1964], "serv": [0, 7, 8, 14, 23, 82, 1887, 1919, 1921, 1930, 1931, 1949, 1953, 1958], "context": [0, 2, 5, 20, 27, 31, 40, 41, 46, 54, 55, 149, 788, 885, 886, 887, 889, 890, 903, 904, 953, 968, 972, 981, 996, 998, 1009, 1015, 1020, 1027, 1047, 1049, 1078, 1132, 1136, 1141, 1176, 1201, 1315, 1434, 1583, 1605, 1614, 1615, 1624, 1626, 1659, 1668, 1671, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1767, 1797, 1876, 1880, 1881, 1892, 1899, 1900, 1903, 1905, 1909, 1910, 1913, 1918, 1922, 1924, 1929, 1930, 1932, 1934, 1937, 1942, 1951, 1952, 1956, 1961], "manag": [0, 1, 2, 5, 7, 23, 27, 29, 31, 38, 40, 41, 42, 46, 54, 55, 87, 483, 890, 953, 968, 972, 975, 976, 978, 981, 982, 983, 985, 996, 998, 999, 1000, 1009, 1010, 1020, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1047, 1049, 1078, 1132, 1136, 1141, 1176, 1315, 1583, 1614, 1623, 1624, 1626, 1659, 1767, 1797, 1876, 1880, 1881, 1900, 1907, 1910, 1918, 1923, 1924, 1929, 1930, 1931, 1934, 1937, 1942, 1951, 1952, 1953, 1956], "decor": [0, 1, 29, 33, 37, 41, 54, 64, 895, 950, 953, 1078, 1176, 1206, 1212, 1218, 1659, 1797, 1877, 1879, 1880, 1884, 1899, 1900, 1905, 1923, 1930, 1949, 1950, 1954, 1964], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 24, 29, 31, 32, 40, 41, 46, 47, 49, 50, 51, 52, 54, 55, 57, 149, 509, 676, 731, 789, 793, 795, 820, 889, 891, 903, 904, 933, 947, 951, 1017, 1020, 1044, 1074, 1135, 1201, 1206, 1218, 1256, 1278, 1319, 1333, 1347, 1348, 1349, 1370, 1371, 1388, 1427, 1428, 1429, 1434, 1437, 1440, 1462, 1477, 1614, 1619, 1660, 1668, 1674, 1690, 1799, 1857, 1875, 1879, 1880, 1887, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1934, 1937, 1938, 1939, 1941, 1950, 1951, 1952, 1953, 1956, 1959, 1962, 1963], "region": [0, 3, 5, 29, 37, 764, 765, 948, 1347, 1348, 1349, 1382, 1383, 1393, 1395, 1427, 1428, 1429, 1501, 1502, 1528, 1529, 1558, 1559, 1877, 1892, 1899, 1903, 1952, 1953, 1961], "your": [0, 1, 2, 4, 7, 8, 9, 11, 13, 14, 16, 20, 23, 27, 28, 29, 32, 33, 37, 39, 40, 41, 42, 43, 46, 50, 51, 53, 54, 889, 895, 897, 898, 903, 948, 951, 1176, 1201, 1205, 1206, 1210, 1213, 1216, 1217, 1218, 1434, 1441, 1481, 1614, 1623, 1626, 1659, 1692, 1766, 1854, 1858, 1860, 1877, 1879, 1880, 1884, 1886, 1892, 1893, 1894, 1896, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1921, 1923, 1926, 1929, 1931, 1934, 1939, 1940, 1942, 1945, 1947, 1948, 1949, 1952, 1953, 1954, 1955, 1957, 1959, 1960, 1961, 1963, 1964], "script": [0, 2, 4, 17, 20, 23, 26, 31, 33, 39, 41, 42, 1202, 1204, 1205, 1206, 1207, 1210, 1211, 1213, 1215, 1216, 1218, 1672, 1875, 1876, 1879, 1880, 1888, 1902, 1910, 1912, 1916, 1922, 1925, 1930, 1947, 1949, 1955, 1957, 1960], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 13, 14, 17, 20, 21, 23, 24, 27, 29, 31, 32, 33, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 51, 52, 53, 54, 55, 149, 788, 794, 813, 815, 816, 817, 818, 821, 853, 857, 858, 859, 889, 903, 904, 905, 948, 1019, 1020, 1131, 1136, 1142, 1176, 1201, 1202, 1204, 1205, 1208, 1210, 1212, 1214, 1216, 1217, 1246, 1272, 1273, 1301, 1352, 1353, 1354, 1371, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1462, 1473, 1583, 1605, 1608, 1614, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1765, 1769, 1801, 1847, 1849, 1857, 1868, 1876, 1877, 1880, 1888, 1890, 1891, 1892, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1928, 1929, 1930, 1931, 1932, 1934, 1939, 1942, 1943, 1944, 1945, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963], "In": [0, 2, 3, 4, 7, 9, 14, 17, 20, 23, 25, 27, 29, 33, 40, 41, 42, 46, 48, 49, 50, 51, 53, 54, 79, 81, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 120, 122, 124, 126, 129, 130, 132, 140, 142, 145, 146, 148, 151, 153, 157, 159, 161, 163, 165, 167, 176, 185, 193, 197, 200, 202, 212, 214, 220, 230, 234, 236, 242, 245, 247, 249, 251, 255, 260, 267, 269, 271, 275, 277, 281, 283, 290, 292, 294, 302, 304, 306, 308, 354, 356, 358, 360, 362, 364, 366, 369, 371, 373, 374, 381, 383, 385, 387, 389, 393, 417, 420, 423, 425, 436, 438, 440, 448, 453, 463, 466, 482, 486, 488, 504, 507, 518, 523, 525, 528, 530, 532, 545, 547, 549, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 608, 618, 676, 756, 796, 820, 850, 895, 924, 932, 959, 960, 974, 1020, 1031, 1043, 1044, 1048, 1049, 1074, 1095, 1097, 1105, 1106, 1107, 1122, 1132, 1136, 1139, 1141, 1199, 1201, 1210, 1213, 1214, 1216, 1232, 1241, 1246, 1247, 1248, 1256, 1259, 1264, 1269, 1273, 1278, 1281, 1290, 1295, 1301, 1302, 1329, 1347, 1348, 1349, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1373, 1374, 1375, 1379, 1381, 1386, 1395, 1404, 1419, 1427, 1428, 1429, 1434, 1440, 1477, 1479, 1481, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1523, 1533, 1540, 1549, 1577, 1580, 1582, 1583, 1597, 1614, 1621, 1626, 1627, 1659, 1668, 1692, 1703, 1705, 1741, 1757, 1759, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1822, 1823, 1845, 1857, 1858, 1860, 1865, 1866, 1875, 1876, 1877, 1879, 1880, 1886, 1887, 1892, 1893, 1894, 1895, 1898, 1899, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1924, 1925, 1926, 1927, 1930, 1931, 1932, 1934, 1939, 1941, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 78, 80, 81, 87, 149, 153, 189, 220, 240, 252, 311, 313, 319, 321, 326, 333, 495, 509, 511, 513, 533, 541, 556, 603, 610, 613, 676, 683, 684, 731, 737, 738, 739, 752, 756, 761, 775, 781, 783, 785, 788, 792, 811, 813, 819, 822, 850, 857, 858, 860, 874, 875, 876, 885, 887, 888, 889, 891, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 912, 913, 919, 935, 945, 948, 959, 960, 962, 975, 977, 978, 980, 987, 988, 989, 990, 991, 1009, 1010, 1017, 1018, 1020, 1032, 1034, 1044, 1048, 1049, 1059, 1072, 1074, 1075, 1076, 1077, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1114, 1117, 1125, 1127, 1130, 1131, 1134, 1135, 1136, 1138, 1140, 1142, 1143, 1146, 1154, 1162, 1163, 1164, 1198, 1199, 1201, 1204, 1205, 1208, 1211, 1212, 1214, 1216, 1217, 1218, 1219, 1230, 1231, 1236, 1237, 1242, 1244, 1246, 1249, 1250, 1254, 1257, 1259, 1262, 1263, 1270, 1272, 1273, 1290, 1292, 1295, 1301, 1312, 1319, 1324, 1333, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1394, 1398, 1399, 1402, 1403, 1404, 1406, 1416, 1417, 1418, 1419, 1421, 1422, 1424, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1451, 1453, 1462, 1465, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1485, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1518, 1524, 1525, 1527, 1528, 1529, 1533, 1544, 1551, 1552, 1554, 1555, 1557, 1558, 1559, 1583, 1587, 1602, 1604, 1605, 1608, 1614, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1633, 1650, 1657, 1659, 1661, 1666, 1668, 1669, 1670, 1671, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1721, 1726, 1727, 1728, 1747, 1749, 1753, 1761, 1764, 1773, 1779, 1799, 1802, 1803, 1807, 1810, 1815, 1818, 1822, 1836, 1837, 1853, 1854, 1855, 1857, 1860, 1866, 1867, 1868, 1869, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1964, 1965], "chosen": [0, 51, 1062, 1222, 1583, 1770, 1795, 1840, 1895, 1899, 1903, 1905, 1913, 1918, 1925, 1963], "improv": [0, 1, 3, 9, 13, 18, 21, 23, 46, 54, 756, 800, 801, 802, 897, 899, 903, 962, 1154, 1372, 1386, 1404, 1449, 1480, 1583, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1705, 1876, 1877, 1899, 1904, 1905, 1906, 1914, 1915, 1919, 1925, 1926, 1930, 1957, 1959, 1961, 1963], "perform": [0, 1, 2, 3, 4, 5, 11, 13, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 40, 41, 46, 50, 53, 54, 118, 205, 208, 455, 576, 599, 613, 682, 683, 684, 685, 686, 687, 756, 777, 800, 801, 802, 843, 854, 857, 890, 895, 897, 899, 900, 903, 904, 916, 928, 948, 959, 960, 976, 982, 1031, 1055, 1056, 1069, 1094, 1117, 1119, 1130, 1131, 1134, 1165, 1176, 1201, 1210, 1211, 1216, 1244, 1246, 1249, 1253, 1256, 1257, 1261, 1262, 1270, 1271, 1273, 1278, 1287, 1300, 1305, 1315, 1316, 1326, 1329, 1332, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1374, 1377, 1378, 1386, 1404, 1434, 1440, 1442, 1449, 1462, 1477, 1480, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1552, 1569, 1583, 1589, 1590, 1605, 1614, 1616, 1617, 1622, 1626, 1647, 1654, 1656, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1711, 1719, 1747, 1761, 1765, 1793, 1798, 1799, 1800, 1801, 1821, 1823, 1857, 1876, 1877, 1880, 1890, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1912, 1913, 1914, 1915, 1918, 1921, 1922, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1945, 1947, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1959, 1964], "while": [0, 2, 3, 5, 7, 8, 11, 13, 20, 21, 23, 24, 25, 29, 42, 46, 51, 53, 54, 80, 691, 692, 731, 850, 880, 888, 978, 1049, 1131, 1163, 1201, 1204, 1216, 1217, 1273, 1330, 1342, 1358, 1395, 1397, 1398, 1399, 1404, 1434, 1440, 1452, 1465, 1473, 1477, 1481, 1552, 1608, 1614, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1661, 1757, 1881, 1886, 1887, 1894, 1895, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1915, 1916, 1918, 1921, 1923, 1925, 1928, 1930, 1932, 1934, 1935, 1938, 1939, 1940, 1952, 1954, 1956, 1957, 1963], "maintain": [0, 7, 8, 20, 21, 23, 29, 46, 50, 54, 1346, 1374, 1379, 1526, 1614, 1647, 1661, 1672, 1876, 1895, 1899, 1900, 1903, 1905, 1911, 1925, 1951, 1952, 1956], "accuraci": [0, 21, 948, 1264, 1583, 1876, 1890, 1899, 1911, 1939, 1943, 1953], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 16, 19, 20, 23, 24, 29, 32, 40, 41, 43, 46, 51, 52, 53, 54, 88, 92, 94, 96, 98, 100, 102, 104, 106, 108, 111, 112, 113, 114, 115, 116, 117, 119, 121, 123, 125, 127, 128, 131, 133, 134, 135, 136, 137, 139, 141, 143, 144, 147, 149, 150, 152, 153, 154, 155, 156, 158, 160, 162, 164, 166, 168, 169, 170, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 188, 191, 192, 196, 198, 199, 201, 203, 204, 206, 209, 210, 211, 213, 216, 217, 219, 223, 224, 225, 226, 227, 228, 229, 232, 233, 235, 237, 238, 239, 241, 243, 244, 246, 248, 250, 253, 254, 259, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 274, 276, 278, 279, 280, 282, 285, 286, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 311, 319, 320, 321, 322, 323, 325, 326, 332, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 357, 359, 361, 363, 365, 367, 368, 370, 372, 376, 377, 378, 379, 380, 382, 384, 386, 388, 390, 391, 392, 394, 395, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 424, 426, 427, 428, 429, 430, 431, 435, 437, 439, 447, 449, 450, 452, 454, 456, 457, 458, 459, 461, 462, 464, 465, 467, 474, 476, 477, 479, 481, 484, 485, 487, 489, 490, 491, 493, 494, 495, 497, 498, 501, 502, 503, 506, 511, 513, 514, 515, 517, 519, 521, 522, 524, 526, 527, 529, 531, 534, 535, 536, 538, 539, 543, 544, 546, 548, 550, 551, 552, 557, 559, 561, 563, 564, 565, 566, 568, 569, 570, 572, 574, 575, 586, 587, 588, 590, 591, 593, 595, 597, 601, 602, 605, 606, 607, 610, 611, 612, 614, 615, 616, 617, 676, 689, 691, 692, 695, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 744, 752, 753, 756, 757, 758, 759, 760, 761, 762, 763, 764, 767, 768, 769, 770, 775, 776, 777, 778, 779, 780, 781, 789, 836, 855, 856, 857, 858, 861, 870, 871, 872, 875, 886, 888, 889, 890, 891, 892, 894, 895, 899, 903, 904, 909, 910, 913, 917, 919, 926, 928, 931, 945, 948, 952, 964, 975, 976, 977, 978, 980, 982, 983, 985, 999, 1000, 1009, 1010, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1069, 1072, 1074, 1075, 1077, 1078, 1087, 1092, 1110, 1113, 1128, 1133, 1134, 1135, 1137, 1146, 1154, 1158, 1159, 1163, 1164, 1172, 1173, 1174, 1176, 1201, 1205, 1212, 1216, 1217, 1219, 1220, 1222, 1232, 1240, 1243, 1246, 1248, 1255, 1257, 1258, 1266, 1270, 1271, 1273, 1279, 1281, 1287, 1288, 1290, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1315, 1316, 1322, 1329, 1331, 1332, 1342, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1380, 1386, 1388, 1394, 1395, 1400, 1401, 1404, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1446, 1447, 1448, 1449, 1452, 1461, 1463, 1465, 1466, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1614, 1615, 1621, 1622, 1623, 1626, 1632, 1641, 1650, 1655, 1658, 1659, 1660, 1661, 1665, 1709, 1719, 1720, 1730, 1732, 1734, 1736, 1737, 1741, 1744, 1747, 1753, 1762, 1765, 1767, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1790, 1797, 1798, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 1817, 1818, 1821, 1831, 1833, 1836, 1842, 1843, 1847, 1849, 1857, 1860, 1863, 1864, 1869, 1871, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1934, 1935, 1937, 1938, 1940, 1941, 1942, 1945, 1946, 1949, 1950, 1951, 1954, 1955, 1956, 1957, 1961, 1962, 1963, 1964, 1965], "detail": [0, 1, 2, 3, 7, 8, 11, 12, 13, 14, 16, 17, 20, 23, 24, 25, 29, 31, 41, 46, 52, 54, 149, 321, 491, 610, 676, 731, 734, 735, 736, 737, 738, 739, 756, 762, 763, 764, 767, 768, 769, 770, 775, 776, 778, 779, 780, 781, 789, 855, 856, 857, 858, 869, 886, 888, 889, 890, 891, 892, 895, 904, 931, 952, 964, 976, 980, 982, 983, 985, 999, 1000, 1009, 1020, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1057, 1074, 1113, 1135, 1146, 1149, 1150, 1154, 1182, 1189, 1201, 1205, 1216, 1240, 1258, 1265, 1273, 1279, 1281, 1301, 1342, 1346, 1356, 1365, 1366, 1367, 1371, 1377, 1378, 1379, 1380, 1382, 1383, 1386, 1404, 1434, 1440, 1446, 1447, 1449, 1461, 1482, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1534, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1605, 1614, 1615, 1650, 1660, 1673, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1692, 1697, 1709, 1721, 1753, 1764, 1790, 1798, 1843, 1857, 1860, 1875, 1877, 1878, 1879, 1880, 1887, 1889, 1891, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1914, 1915, 1916, 1918, 1922, 1923, 1925, 1927, 1929, 1930, 1931, 1932, 1934, 1938, 1939, 1941, 1942, 1956, 1960, 1963, 1964], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 46, 49, 51, 52, 53, 54, 77, 79, 80, 83, 96, 149, 190, 207, 258, 311, 319, 445, 484, 493, 494, 509, 511, 513, 540, 556, 576, 613, 676, 682, 685, 731, 764, 765, 775, 781, 787, 789, 820, 836, 854, 861, 873, 876, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 916, 919, 928, 936, 939, 947, 948, 959, 960, 964, 977, 979, 989, 991, 1013, 1019, 1020, 1032, 1057, 1074, 1113, 1117, 1122, 1127, 1131, 1132, 1137, 1140, 1141, 1142, 1154, 1176, 1190, 1191, 1193, 1194, 1197, 1201, 1202, 1204, 1212, 1213, 1214, 1216, 1217, 1221, 1222, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1270, 1271, 1272, 1273, 1281, 1287, 1290, 1295, 1301, 1302, 1305, 1324, 1329, 1330, 1331, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1381, 1384, 1386, 1387, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1473, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1525, 1531, 1533, 1544, 1545, 1568, 1571, 1573, 1576, 1577, 1583, 1591, 1602, 1603, 1604, 1605, 1610, 1611, 1614, 1615, 1616, 1617, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1650, 1655, 1659, 1660, 1661, 1662, 1668, 1670, 1671, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1711, 1718, 1721, 1722, 1744, 1750, 1757, 1762, 1765, 1772, 1790, 1796, 1799, 1801, 1802, 1803, 1813, 1818, 1822, 1831, 1836, 1838, 1843, 1847, 1849, 1854, 1857, 1858, 1868, 1871, 1875, 1876, 1877, 1879, 1886, 1888, 1890, 1892, 1893, 1894, 1898, 1901, 1902, 1903, 1904, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1924, 1929, 1930, 1931, 1932, 1935, 1937, 1938, 1939, 1940, 1941, 1949, 1950, 1951, 1952, 1954, 1956, 1957, 1959, 1961, 1962, 1963], "enter": [0, 23, 890, 1176, 1905], "tensor": [0, 2, 5, 7, 8, 13, 16, 17, 20, 21, 23, 24, 25, 27, 29, 30, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 87, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 716, 728, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 780, 781, 782, 783, 784, 785, 786, 790, 794, 795, 796, 797, 798, 815, 816, 817, 818, 820, 821, 823, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 907, 909, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 974, 987, 988, 989, 990, 991, 998, 1006, 1007, 1013, 1017, 1020, 1023, 1027, 1038, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1180, 1181, 1183, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1202, 1204, 1205, 1207, 1208, 1211, 1212, 1214, 1216, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1313, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1342, 1346, 1347, 1350, 1351, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1386, 1387, 1388, 1394, 1400, 1401, 1404, 1405, 1421, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1466, 1467, 1468, 1469, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1610, 1611, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1766, 1767, 1770, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1876, 1877, 1879, 1880, 1884, 1887, 1896, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1917, 1920, 1921, 1922, 1923, 1924, 1926, 1929, 1930, 1931, 1935, 1936, 1939, 1941, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1958, 1962, 1963, 1964], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 17, 20, 21, 23, 24, 25, 27, 29, 31, 33, 34, 38, 39, 40, 41, 43, 46, 51, 53, 54, 87, 149, 252, 495, 541, 613, 693, 754, 777, 788, 789, 790, 796, 806, 807, 808, 809, 811, 812, 813, 814, 819, 820, 822, 850, 861, 885, 886, 887, 889, 895, 897, 903, 904, 905, 924, 930, 934, 935, 959, 977, 1013, 1020, 1031, 1075, 1076, 1077, 1090, 1091, 1093, 1094, 1095, 1097, 1101, 1105, 1106, 1107, 1122, 1130, 1131, 1138, 1139, 1140, 1142, 1163, 1200, 1201, 1205, 1207, 1211, 1212, 1214, 1216, 1222, 1230, 1232, 1236, 1237, 1241, 1246, 1247, 1248, 1253, 1254, 1257, 1261, 1264, 1270, 1272, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1350, 1351, 1355, 1356, 1362, 1363, 1364, 1371, 1372, 1376, 1380, 1381, 1384, 1385, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1400, 1401, 1420, 1421, 1423, 1424, 1425, 1433, 1434, 1442, 1444, 1445, 1448, 1452, 1453, 1454, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1483, 1484, 1485, 1504, 1508, 1509, 1510, 1550, 1569, 1570, 1583, 1605, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1638, 1648, 1649, 1651, 1654, 1656, 1661, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1737, 1753, 1768, 1770, 1822, 1868, 1875, 1877, 1878, 1879, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1918, 1920, 1921, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1936, 1939, 1941, 1943, 1944, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1958, 1959, 1961, 1962, 1963, 1964], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 27, 28, 29, 31, 32, 37, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 63, 77, 78, 149, 252, 333, 445, 495, 676, 685, 730, 731, 744, 753, 777, 885, 886, 887, 888, 889, 894, 895, 897, 898, 899, 903, 930, 948, 975, 998, 1009, 1011, 1020, 1021, 1041, 1074, 1130, 1131, 1134, 1135, 1136, 1137, 1142, 1176, 1201, 1205, 1206, 1213, 1216, 1217, 1218, 1246, 1264, 1272, 1295, 1302, 1305, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1404, 1430, 1431, 1432, 1434, 1439, 1440, 1441, 1449, 1468, 1477, 1479, 1481, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1544, 1550, 1583, 1601, 1602, 1605, 1614, 1622, 1648, 1656, 1658, 1659, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1703, 1721, 1744, 1753, 1761, 1804, 1805, 1806, 1808, 1809, 1813, 1858, 1860, 1868, 1875, 1877, 1879, 1880, 1882, 1884, 1887, 1888, 1890, 1892, 1893, 1895, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964], "should": [0, 1, 3, 4, 5, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 46, 50, 51, 53, 54, 55, 60, 61, 63, 79, 118, 149, 153, 311, 319, 396, 400, 442, 443, 444, 445, 446, 484, 492, 509, 511, 513, 579, 580, 581, 583, 584, 682, 685, 686, 731, 756, 768, 769, 770, 789, 792, 796, 813, 820, 834, 835, 850, 851, 852, 855, 861, 885, 886, 887, 888, 889, 893, 894, 895, 896, 897, 898, 899, 903, 909, 910, 916, 917, 918, 919, 926, 939, 953, 966, 977, 980, 990, 991, 1009, 1011, 1020, 1065, 1075, 1076, 1077, 1087, 1092, 1095, 1096, 1097, 1105, 1106, 1107, 1110, 1125, 1127, 1128, 1129, 1131, 1132, 1136, 1140, 1141, 1142, 1158, 1159, 1162, 1163, 1198, 1199, 1201, 1202, 1206, 1210, 1212, 1213, 1216, 1217, 1218, 1220, 1245, 1270, 1271, 1272, 1278, 1287, 1290, 1291, 1292, 1312, 1342, 1350, 1351, 1355, 1368, 1370, 1371, 1373, 1374, 1375, 1378, 1379, 1400, 1404, 1426, 1434, 1440, 1441, 1442, 1461, 1482, 1486, 1498, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1525, 1533, 1583, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1652, 1654, 1665, 1666, 1669, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1721, 1723, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1744, 1760, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1822, 1836, 1845, 1860, 1868, 1873, 1874, 1875, 1876, 1877, 1879, 1880, 1884, 1886, 1887, 1889, 1890, 1892, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1913, 1914, 1915, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1932, 1934, 1938, 1939, 1941, 1947, 1949, 1952, 1953, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964], "call": [0, 1, 2, 3, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 40, 42, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 63, 70, 81, 149, 288, 321, 333, 455, 483, 484, 552, 576, 610, 613, 676, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 777, 786, 793, 820, 853, 857, 858, 889, 893, 894, 895, 896, 897, 899, 900, 903, 909, 910, 931, 948, 953, 955, 975, 978, 980, 1009, 1011, 1021, 1022, 1031, 1038, 1039, 1041, 1042, 1072, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1130, 1131, 1142, 1146, 1164, 1176, 1186, 1201, 1204, 1206, 1211, 1212, 1213, 1220, 1256, 1264, 1268, 1270, 1272, 1273, 1302, 1346, 1352, 1353, 1354, 1371, 1372, 1373, 1374, 1375, 1377, 1379, 1381, 1419, 1430, 1431, 1432, 1434, 1441, 1442, 1462, 1473, 1485, 1511, 1512, 1513, 1519, 1520, 1521, 1526, 1544, 1583, 1602, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1623, 1626, 1633, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1649, 1655, 1656, 1658, 1659, 1670, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1734, 1761, 1768, 1769, 1797, 1816, 1817, 1818, 1838, 1857, 1858, 1860, 1863, 1864, 1868, 1869, 1875, 1877, 1881, 1884, 1890, 1892, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1945, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1962, 1963, 1964, 1965], "model": [0, 1, 2, 3, 4, 5, 8, 9, 21, 23, 24, 25, 27, 28, 29, 39, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 77, 78, 86, 788, 789, 790, 793, 794, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 832, 833, 834, 835, 850, 853, 854, 855, 856, 857, 858, 859, 948, 1021, 1041, 1130, 1131, 1132, 1140, 1142, 1176, 1201, 1205, 1206, 1210, 1212, 1216, 1218, 1272, 1342, 1371, 1388, 1399, 1400, 1434, 1440, 1462, 1473, 1477, 1479, 1480, 1481, 1532, 1614, 1615, 1620, 1622, 1624, 1637, 1656, 1657, 1668, 1669, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1705, 1818, 1868, 1876, 1877, 1879, 1880, 1881, 1888, 1889, 1895, 1900, 1902, 1903, 1904, 1905, 1909, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1924, 1926, 1930, 1931, 1933, 1934, 1935, 1939, 1943, 1944, 1947, 1948, 1949, 1952, 1953, 1954, 1956, 1959, 1961, 1963], "": [0, 1, 2, 3, 4, 7, 8, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 30, 31, 33, 36, 37, 38, 40, 41, 46, 48, 50, 51, 53, 54, 81, 82, 460, 478, 489, 492, 509, 540, 554, 577, 620, 676, 685, 690, 691, 692, 731, 756, 789, 790, 791, 811, 812, 813, 816, 819, 822, 850, 857, 858, 871, 873, 874, 875, 876, 892, 893, 894, 898, 899, 901, 905, 932, 934, 947, 959, 960, 961, 966, 973, 975, 977, 981, 996, 1000, 1009, 1011, 1016, 1017, 1020, 1021, 1022, 1041, 1042, 1043, 1049, 1066, 1069, 1071, 1072, 1074, 1088, 1089, 1091, 1092, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1142, 1146, 1154, 1162, 1163, 1164, 1188, 1190, 1198, 1199, 1201, 1205, 1211, 1212, 1216, 1231, 1232, 1242, 1243, 1244, 1246, 1249, 1253, 1255, 1257, 1258, 1262, 1263, 1264, 1265, 1270, 1272, 1273, 1288, 1295, 1300, 1302, 1305, 1307, 1308, 1312, 1315, 1316, 1319, 1328, 1329, 1332, 1334, 1340, 1341, 1342, 1350, 1351, 1352, 1353, 1354, 1357, 1371, 1377, 1388, 1434, 1435, 1440, 1444, 1450, 1462, 1465, 1467, 1473, 1477, 1479, 1481, 1487, 1488, 1505, 1506, 1517, 1530, 1533, 1544, 1545, 1550, 1583, 1589, 1602, 1605, 1610, 1611, 1614, 1615, 1626, 1637, 1650, 1654, 1661, 1662, 1670, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1697, 1709, 1711, 1715, 1722, 1737, 1740, 1741, 1744, 1745, 1746, 1748, 1750, 1757, 1764, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1816, 1817, 1818, 1821, 1822, 1823, 1824, 1825, 1833, 1837, 1839, 1845, 1860, 1863, 1864, 1865, 1868, 1869, 1875, 1877, 1878, 1879, 1880, 1881, 1884, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1894, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1948, 1949, 1951, 1952, 1954, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964], "wrap": [0, 1, 14, 20, 21, 23, 27, 33, 42, 46, 50, 51, 54, 55, 258, 786, 787, 978, 1131, 1201, 1216, 1371, 1434, 1473, 1609, 1614, 1624, 1650, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1877, 1878, 1880, 1887, 1899, 1900, 1903, 1904, 1905, 1906, 1911, 1917, 1918, 1923, 1924, 1925, 1930, 1931, 1942, 1944, 1949, 1950, 1953, 1956, 1963, 1964], "forward": [0, 5, 7, 8, 13, 21, 23, 24, 27, 29, 46, 47, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 149, 220, 221, 676, 731, 744, 753, 756, 796, 811, 812, 813, 816, 820, 857, 858, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 899, 900, 903, 904, 1020, 1066, 1078, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1131, 1133, 1134, 1135, 1137, 1140, 1176, 1201, 1204, 1205, 1206, 1207, 1211, 1212, 1216, 1217, 1218, 1346, 1350, 1353, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1386, 1404, 1419, 1430, 1431, 1432, 1434, 1435, 1436, 1440, 1441, 1444, 1445, 1449, 1462, 1477, 1478, 1479, 1480, 1481, 1519, 1520, 1521, 1526, 1571, 1605, 1608, 1609, 1610, 1611, 1614, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1655, 1658, 1659, 1669, 1728, 1767, 1796, 1857, 1876, 1877, 1879, 1880, 1886, 1888, 1892, 1894, 1898, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1914, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1930, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1953, 1956, 1957, 1958, 1959, 1961, 1962, 1963], "pass": [0, 1, 3, 5, 6, 7, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 48, 50, 51, 53, 54, 55, 62, 63, 81, 149, 252, 445, 509, 511, 513, 540, 556, 789, 790, 819, 822, 855, 857, 876, 885, 886, 887, 888, 889, 895, 903, 932, 948, 954, 975, 1009, 1020, 1064, 1095, 1096, 1097, 1105, 1106, 1107, 1113, 1127, 1130, 1131, 1135, 1136, 1137, 1140, 1141, 1163, 1199, 1201, 1202, 1205, 1210, 1212, 1216, 1217, 1245, 1261, 1263, 1272, 1319, 1342, 1343, 1344, 1345, 1353, 1371, 1377, 1378, 1382, 1383, 1434, 1439, 1440, 1462, 1478, 1479, 1480, 1481, 1486, 1498, 1528, 1529, 1533, 1544, 1545, 1571, 1583, 1605, 1608, 1609, 1610, 1611, 1614, 1624, 1626, 1628, 1633, 1647, 1650, 1654, 1656, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1753, 1757, 1761, 1822, 1875, 1877, 1881, 1884, 1888, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1904, 1905, 1906, 1908, 1910, 1911, 1914, 1918, 1919, 1921, 1922, 1923, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1944, 1945, 1949, 1952, 1953, 1956, 1960, 1963, 1964], "e": [0, 1, 2, 3, 5, 7, 11, 13, 14, 20, 21, 23, 24, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 46, 49, 51, 53, 54, 55, 62, 63, 149, 256, 333, 375, 576, 613, 731, 744, 753, 756, 789, 790, 811, 813, 850, 854, 855, 857, 858, 876, 885, 889, 894, 904, 905, 927, 929, 932, 1006, 1020, 1045, 1074, 1084, 1125, 1131, 1136, 1140, 1151, 1176, 1180, 1181, 1183, 1186, 1198, 1201, 1207, 1208, 1216, 1236, 1237, 1252, 1264, 1272, 1273, 1274, 1276, 1278, 1295, 1306, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1425, 1434, 1435, 1440, 1441, 1443, 1444, 1448, 1449, 1465, 1473, 1477, 1481, 1482, 1483, 1485, 1508, 1509, 1510, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1533, 1544, 1576, 1583, 1602, 1604, 1605, 1610, 1614, 1615, 1616, 1617, 1622, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1647, 1648, 1654, 1658, 1661, 1668, 1669, 1678, 1679, 1714, 1725, 1743, 1750, 1757, 1761, 1768, 1773, 1818, 1822, 1875, 1877, 1879, 1880, 1881, 1884, 1887, 1888, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1914, 1916, 1918, 1921, 1922, 1924, 1925, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1941, 1948, 1951, 1952, 1956, 1961, 1963, 1964, 1965], "network": [0, 1, 7, 8, 14, 27, 29, 40, 837, 1020, 1201, 1216, 1217, 1346, 1352, 1353, 1354, 1357, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1379, 1388, 1400, 1404, 1434, 1441, 1446, 1447, 1452, 1461, 1463, 1473, 1477, 1479, 1481, 1498, 1532, 1533, 1586, 1605, 1622, 1624, 1650, 1655, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1877, 1879, 1880, 1898, 1899, 1905, 1914, 1915, 1918, 1921, 1925, 1930, 1931, 1932, 1951], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 13, 14, 20, 21, 23, 25, 37, 40, 41, 46, 54, 78, 319, 513, 579, 764, 765, 855, 857, 950, 1102, 1104, 1162, 1199, 1201, 1202, 1230, 1309, 1310, 1347, 1348, 1349, 1355, 1357, 1371, 1380, 1388, 1421, 1430, 1431, 1432, 1434, 1440, 1477, 1478, 1479, 1480, 1481, 1484, 1500, 1501, 1502, 1517, 1530, 1550, 1614, 1648, 1649, 1651, 1786, 1846, 1847, 1848, 1849, 1875, 1877, 1879, 1880, 1887, 1888, 1890, 1892, 1900, 1902, 1903, 1907, 1910, 1911, 1916, 1918, 1924, 1925, 1930, 1932, 1939, 1942, 1945, 1947, 1949, 1950, 1952, 1953, 1954, 1959, 1960, 1961, 1963, 1964], "loss": [0, 1, 21, 23, 24, 27, 29, 46, 1132, 1198, 1236, 1237, 1246, 1264, 1342, 1350, 1351, 1357, 1368, 1370, 1377, 1388, 1394, 1395, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1483, 1505, 1506, 1516, 1517, 1530, 1545, 1568, 1576, 1614, 1648, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1696, 1705, 1765, 1875, 1876, 1890, 1894, 1900, 1903, 1904, 1907, 1908, 1911, 1921, 1925, 1926, 1930, 1931, 1939], "comput": [0, 3, 5, 7, 8, 11, 13, 16, 20, 21, 23, 25, 29, 31, 33, 46, 47, 48, 50, 149, 288, 484, 491, 677, 679, 693, 694, 756, 764, 765, 796, 798, 815, 816, 817, 818, 820, 821, 885, 889, 890, 891, 893, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 920, 921, 922, 923, 924, 925, 936, 938, 939, 940, 947, 960, 962, 974, 1017, 1020, 1057, 1066, 1068, 1071, 1074, 1078, 1079, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1119, 1120, 1121, 1123, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1144, 1145, 1146, 1154, 1157, 1160, 1161, 1162, 1163, 1176, 1178, 1201, 1204, 1212, 1220, 1221, 1223, 1225, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1273, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1299, 1300, 1301, 1304, 1329, 1331, 1335, 1342, 1346, 1347, 1348, 1349, 1352, 1353, 1354, 1365, 1366, 1367, 1369, 1370, 1372, 1377, 1378, 1386, 1389, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1424, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1441, 1443, 1448, 1449, 1467, 1469, 1473, 1482, 1483, 1486, 1500, 1501, 1502, 1515, 1516, 1524, 1525, 1532, 1533, 1535, 1544, 1552, 1557, 1558, 1559, 1560, 1561, 1562, 1573, 1576, 1583, 1589, 1590, 1605, 1608, 1610, 1611, 1614, 1615, 1618, 1621, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1648, 1654, 1658, 1659, 1661, 1676, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1709, 1715, 1721, 1722, 1726, 1727, 1741, 1742, 1765, 1767, 1773, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1798, 1799, 1800, 1801, 1818, 1822, 1823, 1838, 1843, 1865, 1868, 1876, 1877, 1880, 1887, 1890, 1893, 1894, 1896, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1918, 1921, 1925, 1928, 1930, 1934, 1935, 1940, 1943, 1947, 1948, 1951, 1952, 1953, 1955, 1962], "backward": [0, 1, 5, 9, 23, 24, 25, 27, 29, 46, 50, 51, 54, 55, 288, 333, 484, 492, 499, 500, 509, 511, 513, 577, 676, 682, 685, 756, 811, 812, 813, 886, 891, 892, 893, 894, 895, 896, 898, 900, 903, 904, 909, 910, 916, 928, 1020, 1078, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1130, 1131, 1201, 1273, 1281, 1295, 1305, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1377, 1386, 1387, 1388, 1401, 1404, 1405, 1421, 1425, 1426, 1434, 1440, 1441, 1448, 1449, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1505, 1506, 1516, 1517, 1533, 1544, 1568, 1571, 1606, 1610, 1611, 1614, 1626, 1659, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1696, 1709, 1721, 1796, 1799, 1803, 1822, 1857, 1875, 1876, 1878, 1880, 1886, 1894, 1895, 1898, 1899, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1918, 1921, 1922, 1924, 1925, 1930, 1934, 1935, 1940, 1945, 1948, 1949, 1953, 1957, 1959, 1961, 1962, 1963], "under": [0, 1, 3, 4, 5, 9, 20, 23, 40, 46, 47, 49, 51, 53, 83, 904, 912, 933, 1176, 1201, 1357, 1434, 1498, 1524, 1525, 1621, 1623, 1626, 1672, 1673, 1742, 1892, 1899, 1900, 1903, 1904, 1906, 1908, 1913, 1918, 1922, 1923, 1925, 1928, 1929, 1932, 1935, 1939, 1942, 1944, 1950, 1951, 1952, 1953, 1956, 1958, 1961, 1963], "recommend": [0, 1, 5, 20, 21, 23, 25, 28, 29, 31, 40, 41, 46, 50, 53, 54, 55, 79, 80, 82, 445, 889, 955, 959, 960, 974, 1095, 1096, 1097, 1105, 1106, 1107, 1188, 1204, 1246, 1273, 1319, 1342, 1371, 1545, 1614, 1728, 1854, 1858, 1875, 1877, 1889, 1892, 1894, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1911, 1913, 1914, 1916, 1918, 1922, 1925, 1954], "same": [0, 1, 3, 7, 13, 14, 16, 17, 20, 21, 23, 24, 25, 27, 29, 31, 37, 38, 40, 41, 42, 43, 46, 49, 51, 53, 54, 55, 62, 63, 138, 152, 194, 220, 253, 309, 311, 313, 317, 319, 337, 442, 443, 444, 445, 446, 468, 480, 493, 494, 496, 509, 511, 513, 516, 540, 576, 613, 614, 682, 685, 689, 691, 692, 693, 695, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 754, 757, 758, 759, 760, 761, 775, 781, 784, 785, 789, 790, 792, 796, 798, 810, 815, 818, 820, 821, 855, 857, 874, 875, 876, 888, 891, 894, 897, 898, 899, 900, 901, 902, 904, 905, 916, 918, 919, 928, 930, 932, 935, 940, 942, 948, 951, 956, 974, 975, 977, 988, 990, 1009, 1020, 1057, 1062, 1064, 1065, 1071, 1074, 1076, 1077, 1080, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1122, 1126, 1127, 1129, 1130, 1131, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1146, 1154, 1162, 1163, 1171, 1175, 1192, 1198, 1201, 1211, 1212, 1216, 1217, 1221, 1222, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1268, 1288, 1292, 1294, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1329, 1332, 1333, 1334, 1340, 1341, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1381, 1384, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1406, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1442, 1443, 1448, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1485, 1486, 1489, 1490, 1491, 1498, 1504, 1505, 1506, 1508, 1509, 1510, 1516, 1525, 1533, 1535, 1544, 1545, 1583, 1602, 1614, 1621, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1647, 1651, 1656, 1661, 1662, 1666, 1668, 1674, 1688, 1709, 1714, 1715, 1718, 1719, 1731, 1733, 1735, 1739, 1741, 1743, 1744, 1748, 1750, 1757, 1760, 1773, 1796, 1804, 1805, 1806, 1808, 1809, 1815, 1816, 1817, 1821, 1822, 1832, 1843, 1854, 1855, 1856, 1857, 1863, 1864, 1865, 1868, 1874, 1875, 1877, 1879, 1880, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1925, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1943, 1944, 1947, 1948, 1949, 1951, 1952, 1953, 1956, 1959, 1961, 1962, 1963, 1964], "correspond": [0, 1, 7, 17, 20, 21, 23, 25, 27, 28, 29, 40, 46, 54, 77, 470, 471, 509, 511, 513, 540, 541, 676, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 789, 793, 832, 834, 853, 854, 855, 860, 876, 885, 887, 888, 889, 894, 897, 899, 904, 940, 961, 1020, 1040, 1069, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1154, 1163, 1190, 1201, 1217, 1231, 1236, 1237, 1242, 1245, 1264, 1271, 1273, 1287, 1302, 1324, 1371, 1377, 1404, 1434, 1440, 1480, 1524, 1533, 1570, 1610, 1614, 1622, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1655, 1661, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1714, 1715, 1725, 1748, 1757, 1773, 1816, 1817, 1822, 1853, 1856, 1863, 1864, 1875, 1877, 1878, 1880, 1884, 1890, 1893, 1894, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1915, 1918, 1922, 1924, 1925, 1930, 1931, 1934, 1935, 1936, 1939, 1941, 1943, 1944, 1954, 1960, 1961, 1963], "devic": [0, 1, 2, 5, 8, 13, 15, 17, 20, 21, 23, 24, 25, 28, 41, 42, 46, 50, 53, 54, 55, 60, 63, 87, 195, 205, 208, 287, 311, 319, 333, 442, 443, 444, 445, 446, 511, 513, 576, 682, 685, 719, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 745, 746, 747, 748, 749, 750, 751, 861, 873, 875, 876, 897, 899, 916, 917, 919, 926, 928, 967, 968, 969, 970, 971, 972, 973, 976, 977, 978, 980, 981, 982, 983, 984, 986, 987, 988, 989, 990, 991, 993, 994, 995, 998, 1002, 1003, 1004, 1006, 1007, 1015, 1017, 1018, 1019, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1050, 1051, 1052, 1075, 1076, 1077, 1087, 1092, 1110, 1128, 1129, 1158, 1159, 1201, 1205, 1208, 1211, 1214, 1220, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1247, 1248, 1249, 1255, 1258, 1259, 1261, 1262, 1264, 1265, 1271, 1272, 1287, 1290, 1295, 1301, 1305, 1312, 1319, 1321, 1342, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1387, 1389, 1397, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1440, 1442, 1450, 1451, 1473, 1477, 1479, 1481, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1544, 1550, 1583, 1598, 1602, 1603, 1604, 1605, 1614, 1616, 1617, 1618, 1619, 1647, 1654, 1660, 1662, 1665, 1666, 1681, 1721, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1761, 1765, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1800, 1804, 1805, 1806, 1807, 1808, 1809, 1822, 1836, 1838, 1847, 1849, 1857, 1858, 1860, 1873, 1874, 1876, 1877, 1878, 1879, 1880, 1882, 1888, 1893, 1895, 1899, 1904, 1906, 1907, 1909, 1911, 1912, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1929, 1930, 1934, 1936, 1940, 1941, 1948, 1950, 1952, 1955, 1958, 1960, 1961, 1963], "creat": [0, 1, 3, 5, 6, 7, 9, 13, 20, 21, 23, 25, 27, 29, 31, 32, 38, 40, 41, 42, 43, 46, 53, 54, 55, 79, 80, 82, 87, 149, 221, 252, 333, 576, 577, 579, 580, 581, 583, 584, 676, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 790, 810, 811, 812, 813, 815, 820, 850, 874, 875, 876, 889, 891, 903, 927, 929, 945, 946, 948, 961, 976, 985, 1017, 1018, 1027, 1062, 1077, 1126, 1127, 1128, 1198, 1201, 1204, 1213, 1219, 1224, 1230, 1231, 1237, 1239, 1258, 1271, 1287, 1302, 1324, 1350, 1368, 1377, 1378, 1381, 1395, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1462, 1465, 1466, 1473, 1482, 1483, 1485, 1614, 1626, 1647, 1654, 1659, 1668, 1670, 1673, 1692, 1760, 1791, 1802, 1807, 1836, 1843, 1876, 1880, 1881, 1884, 1888, 1892, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1913, 1916, 1918, 1921, 1922, 1924, 1925, 1930, 1931, 1932, 1934, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1948, 1949, 1950, 1951, 1952, 1956, 1962, 1963, 1965], "optim": [0, 1, 2, 7, 8, 11, 13, 14, 21, 23, 24, 25, 29, 46, 54, 815, 904, 913, 948, 951, 1074, 1140, 1201, 1205, 1210, 1212, 1216, 1217, 1256, 1273, 1352, 1353, 1354, 1370, 1377, 1397, 1398, 1399, 1434, 1437, 1438, 1439, 1440, 1466, 1473, 1481, 1583, 1605, 1614, 1621, 1626, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1711, 1876, 1877, 1879, 1888, 1894, 1898, 1902, 1903, 1904, 1905, 1907, 1908, 1911, 1913, 1918, 1924, 1925, 1934, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1963], "default": [0, 2, 3, 5, 9, 11, 13, 17, 23, 24, 25, 27, 28, 29, 31, 32, 37, 38, 39, 40, 41, 43, 46, 49, 50, 51, 52, 54, 55, 59, 60, 62, 63, 79, 80, 82, 149, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 238, 265, 288, 295, 323, 329, 391, 442, 443, 444, 445, 446, 455, 492, 495, 496, 516, 521, 576, 577, 579, 676, 690, 693, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 731, 751, 754, 756, 764, 765, 766, 768, 769, 770, 775, 781, 789, 794, 799, 804, 805, 810, 813, 815, 816, 817, 818, 821, 824, 825, 826, 827, 828, 829, 830, 831, 837, 838, 839, 840, 841, 842, 844, 845, 850, 851, 852, 854, 861, 875, 876, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 917, 926, 932, 936, 939, 940, 941, 945, 948, 966, 974, 977, 980, 982, 986, 989, 990, 991, 994, 995, 1002, 1003, 1006, 1017, 1019, 1020, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1044, 1045, 1048, 1050, 1051, 1052, 1055, 1056, 1057, 1062, 1063, 1064, 1065, 1066, 1069, 1074, 1075, 1076, 1077, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1146, 1148, 1154, 1158, 1159, 1162, 1163, 1190, 1192, 1198, 1201, 1202, 1205, 1212, 1216, 1217, 1220, 1221, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1287, 1290, 1292, 1298, 1300, 1301, 1302, 1306, 1312, 1328, 1329, 1331, 1332, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1451, 1452, 1453, 1454, 1461, 1465, 1466, 1470, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1532, 1533, 1535, 1537, 1544, 1545, 1552, 1557, 1558, 1559, 1568, 1569, 1571, 1576, 1583, 1589, 1590, 1598, 1602, 1608, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1648, 1649, 1651, 1653, 1654, 1655, 1656, 1658, 1660, 1661, 1665, 1666, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1711, 1719, 1721, 1722, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1743, 1749, 1750, 1753, 1757, 1761, 1762, 1763, 1764, 1765, 1770, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 1817, 1818, 1821, 1822, 1823, 1836, 1837, 1843, 1845, 1847, 1849, 1854, 1855, 1857, 1858, 1860, 1862, 1863, 1864, 1868, 1873, 1874, 1875, 1876, 1877, 1880, 1884, 1886, 1888, 1889, 1892, 1895, 1898, 1899, 1902, 1904, 1905, 1906, 1907, 1909, 1911, 1914, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1929, 1930, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1945, 1949, 1951, 1952, 1953, 1957, 1959, 1960, 1962, 1963, 1965], "net": [0, 6, 14, 31, 49, 54, 1201, 1216, 1217, 1371, 1434, 1614, 1637, 1696, 1879, 1880, 1899, 1900, 1903, 1911, 1939], "sgd": [0, 20, 21, 27, 1377, 1605, 1614, 1697, 1703, 1705, 1899, 1903, 1904, 1911, 1913, 1921, 1930, 1931], "paramet": [0, 1, 2, 3, 5, 11, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 34, 38, 40, 42, 46, 48, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 87, 149, 154, 169, 171, 174, 177, 178, 179, 194, 195, 205, 208, 238, 252, 253, 258, 265, 295, 311, 313, 315, 317, 319, 323, 329, 391, 398, 400, 442, 443, 444, 445, 446, 455, 468, 489, 492, 493, 494, 495, 496, 509, 511, 513, 516, 521, 533, 540, 541, 542, 556, 562, 579, 580, 581, 583, 584, 599, 600, 603, 613, 614, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 746, 751, 752, 754, 755, 756, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 787, 789, 791, 793, 795, 796, 797, 810, 815, 816, 817, 818, 819, 820, 821, 822, 823, 834, 835, 836, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 912, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 953, 954, 956, 959, 960, 961, 962, 963, 964, 965, 966, 969, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 987, 988, 989, 990, 991, 994, 995, 996, 998, 1002, 1003, 1004, 1006, 1009, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1171, 1175, 1176, 1178, 1180, 1181, 1183, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1207, 1208, 1211, 1212, 1213, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1312, 1314, 1315, 1316, 1319, 1320, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1535, 1537, 1544, 1545, 1552, 1557, 1558, 1559, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1583, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1608, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1770, 1771, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1793, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1826, 1827, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1876, 1877, 1880, 1882, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1922, 1923, 1924, 1925, 1929, 1930, 1931, 1934, 1935, 1936, 1939, 1941, 1943, 1944, 1953, 1962, 1964], "target": [0, 13, 27, 46, 50, 52, 53, 54, 55, 495, 731, 762, 763, 788, 793, 855, 857, 858, 933, 1132, 1201, 1210, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1350, 1351, 1357, 1368, 1370, 1382, 1383, 1388, 1394, 1395, 1400, 1401, 1425, 1426, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1477, 1486, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1505, 1506, 1514, 1516, 1517, 1528, 1529, 1530, 1541, 1542, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1583, 1587, 1588, 1614, 1672, 1691, 1857, 1878, 1880, 1899, 1900, 1903, 1913, 1918, 1921, 1922, 1925, 1926, 1930, 1939, 1943, 1949, 1950, 1951, 1956, 1962, 1963], "data": [0, 1, 2, 3, 7, 11, 17, 18, 21, 23, 25, 27, 29, 30, 31, 34, 37, 40, 42, 46, 50, 54, 55, 56, 60, 63, 138, 149, 194, 195, 324, 327, 331, 334, 339, 442, 445, 478, 489, 493, 495, 613, 734, 735, 736, 756, 768, 769, 770, 777, 788, 789, 790, 794, 815, 816, 817, 818, 819, 821, 823, 861, 875, 876, 886, 889, 917, 926, 932, 978, 1055, 1056, 1075, 1076, 1077, 1087, 1088, 1089, 1092, 1094, 1095, 1097, 1105, 1106, 1107, 1110, 1113, 1114, 1115, 1116, 1125, 1127, 1128, 1129, 1131, 1140, 1158, 1159, 1161, 1180, 1183, 1208, 1212, 1216, 1220, 1271, 1272, 1273, 1287, 1292, 1300, 1302, 1315, 1316, 1329, 1331, 1332, 1355, 1357, 1362, 1363, 1364, 1371, 1386, 1389, 1397, 1398, 1399, 1404, 1406, 1421, 1441, 1449, 1450, 1486, 1498, 1503, 1504, 1508, 1509, 1510, 1543, 1550, 1552, 1589, 1590, 1614, 1615, 1616, 1617, 1647, 1648, 1649, 1650, 1652, 1661, 1665, 1666, 1670, 1673, 1697, 1703, 1711, 1719, 1722, 1723, 1724, 1728, 1730, 1731, 1733, 1734, 1735, 1736, 1737, 1744, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1798, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1821, 1822, 1836, 1845, 1847, 1849, 1856, 1857, 1858, 1873, 1874, 1876, 1877, 1878, 1881, 1887, 1888, 1890, 1892, 1895, 1899, 1900, 1901, 1903, 1905, 1906, 1910, 1913, 1915, 1916, 1917, 1920, 1921, 1922, 1923, 1925, 1928, 1930, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1942, 1943, 1944, 1947, 1951, 1952, 1953, 1955, 1956, 1961], "zero_grad": [0, 1, 27, 1201, 1434, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1696, 1899, 1903, 1907, 1911, 1913, 1921], "output": [0, 1, 4, 5, 7, 17, 20, 21, 23, 27, 28, 29, 31, 37, 38, 50, 51, 52, 54, 55, 63, 138, 311, 319, 442, 443, 444, 446, 509, 513, 562, 613, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 716, 724, 725, 730, 731, 734, 735, 736, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 773, 775, 776, 777, 778, 779, 781, 782, 783, 788, 789, 790, 792, 795, 798, 810, 813, 854, 857, 858, 859, 861, 870, 871, 874, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 916, 918, 919, 920, 921, 922, 923, 924, 925, 928, 932, 935, 936, 937, 938, 939, 940, 941, 943, 946, 960, 961, 963, 964, 974, 987, 989, 990, 991, 1017, 1018, 1020, 1030, 1031, 1053, 1054, 1055, 1056, 1058, 1061, 1062, 1064, 1066, 1069, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1154, 1157, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1175, 1178, 1195, 1196, 1198, 1201, 1205, 1212, 1216, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1527, 1528, 1529, 1530, 1533, 1535, 1544, 1545, 1550, 1552, 1557, 1558, 1559, 1568, 1569, 1573, 1574, 1575, 1576, 1583, 1598, 1602, 1603, 1604, 1608, 1610, 1611, 1614, 1622, 1623, 1624, 1627, 1648, 1650, 1651, 1655, 1658, 1660, 1661, 1662, 1665, 1666, 1668, 1673, 1674, 1692, 1696, 1709, 1710, 1718, 1719, 1722, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1741, 1742, 1743, 1745, 1746, 1750, 1752, 1757, 1765, 1770, 1773, 1775, 1787, 1788, 1790, 1795, 1799, 1800, 1802, 1803, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1833, 1834, 1835, 1840, 1843, 1845, 1846, 1848, 1851, 1853, 1854, 1855, 1857, 1862, 1863, 1864, 1865, 1868, 1870, 1871, 1873, 1874, 1875, 1877, 1878, 1880, 1886, 1888, 1893, 1894, 1895, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1914, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1931, 1934, 1935, 1937, 1938, 1939, 1941, 1943, 1944, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1962, 1963], "loss_fn": [0, 27, 1691, 1899, 1903, 1904, 1913, 1921], "exit": [0, 1, 2, 4, 17, 23, 31, 40, 46, 53, 54, 890, 1614, 1880, 1892, 1900, 1905, 1913, 1918, 1932, 1956], "befor": [0, 1, 3, 6, 7, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 32, 37, 39, 40, 41, 42, 46, 54, 96, 149, 743, 756, 784, 785, 786, 889, 893, 895, 946, 955, 977, 1055, 1056, 1057, 1066, 1074, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1115, 1116, 1119, 1127, 1130, 1201, 1212, 1214, 1253, 1257, 1270, 1300, 1312, 1329, 1332, 1371, 1377, 1378, 1381, 1386, 1434, 1435, 1436, 1473, 1477, 1485, 1533, 1552, 1589, 1590, 1605, 1608, 1609, 1610, 1611, 1614, 1622, 1655, 1658, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1705, 1719, 1722, 1748, 1757, 1768, 1769, 1798, 1801, 1804, 1805, 1806, 1808, 1809, 1818, 1821, 1843, 1854, 1877, 1879, 1880, 1892, 1899, 1900, 1903, 1904, 1905, 1908, 1910, 1911, 1914, 1916, 1917, 1921, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1935, 1939, 1941, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1959], "step": [0, 1, 2, 4, 9, 13, 20, 21, 23, 24, 25, 27, 29, 41, 46, 50, 54, 534, 603, 682, 764, 765, 853, 861, 890, 891, 892, 919, 943, 1160, 1248, 1271, 1272, 1273, 1287, 1290, 1302, 1382, 1383, 1404, 1501, 1502, 1528, 1529, 1614, 1647, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1728, 1737, 1791, 1860, 1877, 1878, 1894, 1899, 1900, 1903, 1904, 1905, 1907, 1911, 1913, 1915, 1917, 1918, 1922, 1924, 1925, 1930, 1931, 1934, 1939, 1953, 1956, 1957, 1958, 1961, 1963], "usag": [0, 1, 4, 7, 9, 14, 20, 23, 27, 29, 30, 31, 34, 37, 38, 40, 42, 46, 54, 55, 56, 744, 753, 788, 789, 790, 806, 807, 808, 809, 811, 812, 813, 850, 854, 886, 948, 1023, 1043, 1047, 1074, 1125, 1130, 1134, 1135, 1136, 1214, 1273, 1614, 1669, 1877, 1880, 1890, 1894, 1899, 1900, 1905, 1907, 1918, 1924, 1932, 1939, 1940, 1942, 1943, 1944, 1951, 1952, 1953, 1954, 1963], "along": [0, 13, 17, 20, 23, 29, 33, 40, 55, 61, 311, 313, 315, 319, 489, 509, 511, 513, 682, 693, 815, 871, 872, 935, 942, 965, 974, 989, 991, 1057, 1065, 1066, 1073, 1074, 1090, 1095, 1098, 1102, 1105, 1108, 1114, 1142, 1143, 1166, 1175, 1178, 1222, 1233, 1269, 1322, 1329, 1333, 1334, 1343, 1344, 1345, 1351, 1369, 1382, 1383, 1424, 1427, 1428, 1429, 1467, 1469, 1498, 1506, 1515, 1528, 1529, 1532, 1535, 1552, 1557, 1558, 1559, 1569, 1589, 1590, 1632, 1634, 1641, 1642, 1651, 1660, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1703, 1722, 1742, 1743, 1748, 1759, 1795, 1798, 1801, 1802, 1810, 1815, 1833, 1837, 1840, 1843, 1852, 1865, 1868, 1870, 1875, 1879, 1884, 1895, 1901, 1905, 1907, 1910, 1911, 1922, 1925, 1935], "more": [0, 1, 2, 3, 4, 5, 8, 9, 11, 13, 14, 16, 19, 20, 21, 23, 24, 29, 30, 31, 32, 36, 39, 40, 41, 42, 46, 49, 50, 51, 52, 54, 78, 80, 81, 149, 252, 253, 311, 319, 484, 489, 491, 494, 509, 511, 513, 541, 614, 676, 731, 767, 776, 780, 789, 850, 855, 856, 857, 869, 882, 883, 884, 886, 888, 889, 895, 897, 899, 903, 904, 905, 909, 910, 919, 927, 930, 932, 938, 939, 940, 941, 948, 977, 978, 980, 982, 983, 999, 1018, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1044, 1052, 1057, 1063, 1072, 1074, 1078, 1090, 1091, 1093, 1095, 1114, 1115, 1116, 1117, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1149, 1150, 1154, 1163, 1164, 1176, 1182, 1186, 1188, 1189, 1201, 1214, 1217, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1270, 1273, 1276, 1279, 1281, 1291, 1292, 1315, 1316, 1319, 1330, 1342, 1346, 1351, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1379, 1395, 1404, 1430, 1431, 1432, 1434, 1440, 1446, 1447, 1448, 1449, 1461, 1473, 1481, 1498, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1522, 1524, 1525, 1533, 1536, 1537, 1538, 1539, 1544, 1548, 1552, 1553, 1563, 1570, 1577, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1601, 1602, 1603, 1604, 1605, 1614, 1615, 1621, 1623, 1624, 1659, 1660, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1709, 1720, 1721, 1747, 1753, 1757, 1767, 1797, 1798, 1822, 1843, 1845, 1857, 1860, 1868, 1869, 1875, 1876, 1877, 1879, 1880, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1931, 1932, 1934, 1937, 1938, 1939, 1940, 1941, 1942, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1961, 1963, 1964, 1965], "complex": [0, 1, 3, 7, 8, 20, 21, 23, 54, 309, 327, 480, 495, 681, 688, 904, 905, 941, 959, 960, 1069, 1075, 1076, 1077, 1095, 1117, 1122, 1154, 1171, 1180, 1191, 1193, 1194, 1197, 1198, 1201, 1221, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1250, 1253, 1255, 1257, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1273, 1281, 1287, 1299, 1304, 1323, 1362, 1363, 1364, 1401, 1434, 1508, 1509, 1510, 1621, 1661, 1672, 1715, 1728, 1741, 1762, 1773, 1818, 1819, 1822, 1857, 1865, 1866, 1867, 1875, 1876, 1878, 1880, 1881, 1889, 1913, 1920, 1936, 1937, 1940, 1941, 1954, 1955], "scenario": [0, 20, 23, 40, 1669, 1670, 1858, 1903, 1908, 1913, 1918, 1924, 1930, 1953, 1954], "g": [0, 1, 2, 3, 5, 7, 11, 13, 14, 20, 21, 23, 27, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 43, 46, 49, 51, 53, 54, 55, 62, 63, 576, 613, 744, 753, 756, 789, 790, 811, 813, 850, 855, 857, 858, 885, 894, 904, 905, 929, 1020, 1074, 1125, 1131, 1135, 1136, 1151, 1154, 1176, 1198, 1201, 1207, 1208, 1216, 1272, 1357, 1358, 1371, 1373, 1374, 1375, 1379, 1381, 1386, 1394, 1400, 1404, 1405, 1434, 1435, 1444, 1449, 1465, 1517, 1519, 1520, 1521, 1526, 1533, 1614, 1615, 1616, 1617, 1658, 1661, 1668, 1669, 1676, 1677, 1678, 1679, 1682, 1688, 1689, 1690, 1691, 1743, 1750, 1761, 1768, 1786, 1818, 1875, 1877, 1879, 1880, 1881, 1884, 1887, 1892, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1914, 1915, 1918, 1921, 1922, 1924, 1925, 1930, 1934, 1937, 1938, 1939, 1949, 1951, 1952, 1953, 1961, 1963, 1964], "penalti": [0, 777, 1031, 1675, 1676, 1677, 1678, 1680, 1682, 1688, 1689, 1691, 1926, 1959], "multipl": [0, 1, 2, 3, 5, 20, 21, 23, 24, 25, 29, 30, 33, 40, 41, 42, 46, 51, 53, 54, 190, 207, 313, 509, 682, 684, 685, 691, 692, 756, 837, 870, 871, 874, 903, 936, 938, 948, 962, 966, 989, 990, 991, 1017, 1072, 1074, 1077, 1127, 1135, 1136, 1137, 1138, 1141, 1142, 1146, 1150, 1164, 1165, 1214, 1217, 1222, 1223, 1238, 1239, 1240, 1256, 1261, 1266, 1267, 1295, 1298, 1303, 1305, 1350, 1351, 1365, 1366, 1367, 1368, 1370, 1378, 1381, 1386, 1394, 1400, 1401, 1422, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1485, 1505, 1506, 1516, 1525, 1545, 1568, 1576, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1690, 1698, 1699, 1700, 1701, 1702, 1707, 1709, 1765, 1793, 1799, 1800, 1804, 1805, 1806, 1808, 1809, 1837, 1838, 1845, 1853, 1857, 1868, 1869, 1875, 1876, 1879, 1880, 1892, 1893, 1894, 1895, 1900, 1902, 1904, 1906, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1944, 1945, 1947, 1948, 1952, 1953, 1962], "custom": [0, 1, 3, 5, 13, 14, 20, 23, 24, 25, 26, 27, 33, 36, 37, 39, 46, 55, 57, 77, 78, 79, 80, 82, 495, 789, 793, 810, 811, 812, 813, 834, 836, 855, 856, 857, 858, 895, 948, 950, 976, 985, 1049, 1201, 1434, 1477, 1481, 1482, 1483, 1628, 1637, 1654, 1672, 1697, 1858, 1860, 1876, 1881, 1884, 1886, 1892, 1893, 1900, 1910, 1915, 1916, 1917, 1919, 1928, 1929, 1943, 1945, 1952, 1954, 1956], "autograd": [0, 4, 5, 7, 8, 23, 27, 29, 46, 47, 50, 55, 138, 333, 442, 443, 444, 445, 446, 492, 685, 861, 875, 876, 890, 917, 926, 945, 950, 1020, 1075, 1076, 1077, 1087, 1092, 1110, 1127, 1128, 1129, 1130, 1131, 1140, 1142, 1158, 1159, 1176, 1201, 1220, 1240, 1271, 1287, 1295, 1305, 1388, 1434, 1440, 1481, 1535, 1550, 1614, 1665, 1666, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1769, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1868, 1873, 1874, 1876, 1878, 1882, 1887, 1895, 1898, 1903, 1904, 1907, 1908, 1910, 1911, 1924, 1940, 1941, 1945, 1953, 1954, 1959, 1963, 1964], "function": [0, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 24, 25, 27, 28, 30, 31, 33, 37, 38, 40, 41, 46, 49, 51, 53, 55, 57, 58, 62, 63, 65, 78, 79, 82, 87, 118, 149, 194, 258, 287, 296, 319, 484, 489, 492, 513, 537, 552, 676, 685, 689, 690, 694, 695, 744, 753, 754, 756, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 793, 794, 796, 810, 811, 812, 813, 820, 822, 834, 837, 850, 853, 855, 857, 858, 859, 873, 874, 889, 890, 891, 892, 903, 904, 905, 909, 910, 913, 917, 926, 928, 936, 938, 942, 945, 948, 950, 951, 952, 953, 955, 959, 960, 969, 970, 971, 972, 973, 974, 975, 976, 978, 980, 982, 985, 1002, 1003, 1006, 1011, 1012, 1017, 1018, 1020, 1021, 1022, 1023, 1025, 1030, 1031, 1038, 1039, 1041, 1042, 1043, 1047, 1057, 1062, 1064, 1065, 1072, 1074, 1078, 1090, 1091, 1093, 1113, 1117, 1120, 1121, 1122, 1125, 1127, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1146, 1147, 1154, 1158, 1159, 1160, 1162, 1164, 1172, 1173, 1174, 1176, 1188, 1198, 1199, 1200, 1201, 1202, 1204, 1206, 1207, 1211, 1212, 1213, 1214, 1216, 1218, 1220, 1221, 1222, 1224, 1229, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1252, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1276, 1278, 1287, 1290, 1291, 1295, 1298, 1301, 1303, 1305, 1306, 1307, 1326, 1329, 1330, 1346, 1350, 1356, 1357, 1359, 1360, 1361, 1368, 1372, 1376, 1379, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1400, 1402, 1403, 1404, 1405, 1420, 1423, 1424, 1426, 1433, 1434, 1439, 1440, 1442, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1479, 1481, 1482, 1483, 1485, 1487, 1489, 1490, 1491, 1606, 1610, 1611, 1614, 1621, 1622, 1626, 1637, 1647, 1648, 1649, 1651, 1654, 1655, 1656, 1658, 1659, 1661, 1662, 1666, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1693, 1696, 1697, 1699, 1702, 1703, 1704, 1709, 1710, 1711, 1715, 1721, 1728, 1732, 1737, 1750, 1759, 1760, 1761, 1764, 1767, 1773, 1781, 1785, 1786, 1791, 1794, 1796, 1797, 1798, 1799, 1801, 1807, 1814, 1818, 1824, 1825, 1833, 1837, 1839, 1843, 1853, 1854, 1855, 1857, 1858, 1865, 1866, 1867, 1868, 1869, 1874, 1875, 1876, 1881, 1884, 1886, 1889, 1890, 1892, 1894, 1898, 1901, 1903, 1904, 1905, 1907, 1910, 1911, 1913, 1914, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1956, 1958, 1959, 1960, 1962, 1963], "autocastmodel": 0, "nn": [0, 3, 5, 14, 20, 21, 23, 24, 27, 28, 41, 46, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 296, 537, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 788, 789, 810, 850, 855, 856, 857, 858, 860, 1017, 1020, 1074, 1130, 1139, 1140, 1199, 1201, 1202, 1204, 1205, 1206, 1207, 1210, 1211, 1212, 1216, 1217, 1218, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1605, 1614, 1615, 1616, 1617, 1623, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1647, 1659, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1794, 1818, 1857, 1858, 1875, 1876, 1877, 1878, 1882, 1894, 1895, 1899, 1904, 1907, 1911, 1913, 1914, 1915, 1918, 1921, 1922, 1923, 1925, 1927, 1930, 1939, 1941, 1944, 1949, 1952, 1953, 1956, 1961, 1962, 1963], "modul": [0, 1, 3, 5, 6, 8, 11, 13, 17, 21, 23, 25, 27, 28, 32, 34, 37, 40, 41, 46, 47, 49, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 484, 676, 682, 685, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 734, 735, 736, 741, 742, 743, 752, 757, 758, 759, 760, 761, 784, 785, 786, 787, 788, 789, 793, 795, 796, 798, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 834, 835, 836, 850, 853, 854, 855, 856, 857, 858, 860, 909, 910, 916, 928, 948, 1020, 1130, 1139, 1140, 1142, 1176, 1199, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1217, 1218, 1272, 1295, 1305, 1342, 1346, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1387, 1389, 1397, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1435, 1436, 1444, 1445, 1450, 1462, 1467, 1473, 1477, 1481, 1524, 1525, 1598, 1605, 1614, 1615, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1654, 1655, 1656, 1658, 1669, 1692, 1753, 1797, 1858, 1860, 1861, 1868, 1875, 1876, 1881, 1886, 1888, 1890, 1892, 1894, 1895, 1898, 1902, 1903, 1904, 1907, 1910, 1912, 1913, 1915, 1917, 1918, 1921, 1923, 1924, 1927, 1928, 1930, 1933, 1934, 1935, 1939, 1942, 1943, 1944, 1949, 1952, 1953, 1957, 1961, 1962, 1963, 1964], "def": [0, 1, 20, 21, 23, 24, 25, 29, 31, 32, 33, 37, 38, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 396, 788, 789, 857, 858, 886, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 948, 1078, 1130, 1131, 1132, 1134, 1135, 1136, 1138, 1140, 1141, 1142, 1176, 1199, 1201, 1202, 1204, 1205, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1434, 1435, 1436, 1444, 1445, 1483, 1583, 1605, 1614, 1626, 1659, 1668, 1669, 1797, 1868, 1875, 1877, 1879, 1880, 1884, 1894, 1899, 1900, 1902, 1904, 1905, 1906, 1907, 1911, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1930, 1931, 1932, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1961, 1962, 1963, 1964], "self": [0, 1, 9, 17, 20, 21, 23, 25, 31, 32, 37, 42, 46, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 96, 138, 149, 152, 153, 154, 169, 171, 174, 177, 178, 179, 189, 190, 194, 195, 207, 215, 217, 231, 238, 252, 253, 256, 257, 265, 284, 288, 295, 309, 311, 313, 315, 317, 319, 321, 323, 324, 326, 327, 328, 329, 331, 339, 375, 391, 396, 398, 399, 400, 451, 468, 478, 480, 493, 494, 495, 496, 509, 511, 513, 516, 519, 521, 533, 539, 540, 541, 542, 554, 556, 576, 577, 579, 580, 581, 583, 584, 600, 603, 604, 610, 613, 614, 616, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 857, 858, 914, 1130, 1131, 1140, 1171, 1199, 1200, 1201, 1204, 1205, 1206, 1207, 1211, 1212, 1216, 1217, 1218, 1342, 1346, 1379, 1433, 1434, 1435, 1436, 1440, 1444, 1445, 1461, 1463, 1473, 1479, 1481, 1563, 1586, 1605, 1623, 1624, 1626, 1632, 1634, 1647, 1656, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1718, 1739, 1877, 1878, 1879, 1880, 1884, 1890, 1893, 1894, 1898, 1900, 1901, 1902, 1905, 1907, 1911, 1916, 1918, 1922, 1923, 1925, 1930, 1936, 1949, 1956, 1958, 1961, 1962, 1963], "produc": [0, 7, 13, 20, 23, 25, 30, 32, 34, 37, 42, 51, 52, 53, 54, 87, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 919, 939, 1013, 1105, 1106, 1107, 1125, 1135, 1136, 1142, 1154, 1212, 1216, 1217, 1220, 1236, 1237, 1240, 1247, 1248, 1259, 1264, 1298, 1301, 1302, 1303, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1440, 1517, 1525, 1533, 1544, 1602, 1603, 1604, 1661, 1692, 1721, 1728, 1737, 1822, 1857, 1868, 1877, 1879, 1880, 1892, 1893, 1899, 1900, 1901, 1903, 1905, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1934, 1938, 1949, 1951, 1953, 1956, 1959, 1963], "after": [0, 1, 7, 9, 13, 20, 21, 23, 24, 25, 27, 28, 40, 42, 46, 53, 54, 55, 60, 61, 258, 756, 786, 853, 855, 857, 858, 889, 890, 893, 948, 955, 975, 977, 1013, 1020, 1073, 1131, 1186, 1201, 1205, 1256, 1272, 1295, 1312, 1338, 1371, 1386, 1419, 1434, 1437, 1477, 1479, 1481, 1498, 1533, 1605, 1608, 1614, 1626, 1628, 1632, 1634, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1696, 1697, 1703, 1705, 1761, 1818, 1843, 1858, 1860, 1870, 1875, 1879, 1880, 1890, 1892, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1913, 1914, 1918, 1921, 1922, 1924, 1925, 1930, 1931, 1932, 1933, 1935, 1937, 1939, 1948, 1950, 1953, 1954, 1956, 1957, 1959, 1961, 1962, 1963], "return": [0, 1, 2, 3, 5, 11, 12, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 42, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 87, 118, 152, 154, 169, 171, 174, 177, 178, 179, 189, 190, 194, 195, 205, 207, 208, 215, 217, 218, 220, 231, 238, 240, 252, 258, 265, 287, 295, 309, 317, 321, 323, 324, 326, 327, 328, 329, 331, 335, 337, 339, 350, 375, 391, 432, 442, 443, 444, 445, 446, 455, 469, 470, 471, 472, 473, 475, 480, 484, 492, 493, 494, 509, 511, 519, 521, 533, 539, 540, 552, 553, 554, 555, 556, 576, 577, 578, 579, 585, 599, 600, 603, 605, 609, 610, 613, 680, 688, 689, 691, 692, 693, 694, 695, 731, 762, 763, 766, 767, 771, 772, 773, 774, 777, 780, 787, 788, 789, 790, 810, 811, 812, 813, 832, 836, 837, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 869, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 913, 914, 915, 917, 918, 919, 926, 927, 929, 932, 934, 936, 937, 938, 939, 940, 941, 942, 943, 945, 947, 948, 949, 950, 951, 954, 959, 960, 962, 963, 964, 966, 969, 970, 971, 972, 974, 975, 977, 978, 980, 984, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1049, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1061, 1062, 1063, 1064, 1065, 1068, 1074, 1075, 1076, 1077, 1078, 1079, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1149, 1150, 1151, 1152, 1153, 1157, 1158, 1159, 1161, 1162, 1163, 1167, 1171, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1201, 1202, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1222, 1225, 1226, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1280, 1281, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1309, 1310, 1312, 1313, 1319, 1324, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1338, 1342, 1343, 1344, 1345, 1350, 1351, 1368, 1369, 1370, 1371, 1378, 1382, 1383, 1394, 1400, 1401, 1424, 1425, 1426, 1427, 1428, 1429, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1448, 1462, 1465, 1466, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1503, 1505, 1506, 1507, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1576, 1578, 1579, 1581, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1596, 1598, 1599, 1600, 1601, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1669, 1670, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1711, 1712, 1714, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1743, 1744, 1745, 1746, 1747, 1750, 1752, 1757, 1758, 1759, 1760, 1766, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1795, 1797, 1798, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1817, 1818, 1821, 1822, 1823, 1831, 1832, 1833, 1834, 1835, 1836, 1838, 1840, 1841, 1842, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1859, 1860, 1862, 1864, 1866, 1867, 1868, 1871, 1873, 1874, 1875, 1877, 1881, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1914, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1929, 1930, 1931, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1961, 1962, 1963, 1964, 1965], "disabl": [0, 2, 5, 24, 29, 46, 54, 806, 807, 948, 1020, 1074, 1078, 1130, 1176, 1201, 1203, 1216, 1217, 1434, 1440, 1473, 1481, 1583, 1614, 1615, 1656, 1659, 1766, 1767, 1770, 1797, 1876, 1879, 1886, 1899, 1902, 1903, 1904, 1905, 1909, 1914, 1915, 1918, 1923, 1929, 1934, 1941, 1952, 1957, 1960, 1963], "them": [0, 1, 3, 5, 7, 8, 9, 11, 13, 14, 20, 23, 25, 31, 32, 37, 40, 42, 46, 50, 51, 53, 54, 149, 220, 252, 730, 889, 895, 899, 930, 1020, 1059, 1062, 1074, 1201, 1222, 1231, 1242, 1256, 1268, 1272, 1300, 1332, 1358, 1377, 1434, 1467, 1469, 1589, 1633, 1648, 1651, 1693, 1801, 1803, 1821, 1858, 1860, 1875, 1879, 1880, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1915, 1917, 1921, 1923, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1943, 1951, 1952, 1953, 1956, 1959, 1960, 1962, 1963], "differ": [0, 1, 3, 5, 8, 13, 17, 20, 23, 25, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 43, 46, 47, 50, 51, 52, 54, 195, 483, 489, 613, 676, 682, 685, 691, 692, 731, 756, 789, 792, 793, 818, 820, 821, 857, 858, 861, 875, 876, 904, 905, 916, 928, 929, 966, 1057, 1062, 1064, 1066, 1074, 1114, 1115, 1116, 1120, 1121, 1127, 1130, 1135, 1136, 1142, 1154, 1175, 1201, 1211, 1216, 1230, 1236, 1237, 1247, 1248, 1256, 1259, 1264, 1268, 1295, 1305, 1342, 1351, 1352, 1353, 1354, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1386, 1387, 1395, 1397, 1398, 1399, 1400, 1404, 1405, 1421, 1434, 1437, 1440, 1455, 1456, 1458, 1459, 1460, 1462, 1465, 1473, 1479, 1481, 1483, 1486, 1489, 1490, 1491, 1498, 1506, 1524, 1533, 1544, 1546, 1557, 1558, 1559, 1583, 1605, 1614, 1616, 1617, 1621, 1656, 1661, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1697, 1705, 1711, 1721, 1743, 1816, 1817, 1822, 1843, 1854, 1855, 1857, 1863, 1864, 1868, 1875, 1877, 1879, 1880, 1882, 1886, 1887, 1892, 1893, 1895, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1913, 1914, 1915, 1917, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1932, 1934, 1937, 1939, 1940, 1941, 1944, 1945, 1947, 1950, 1952, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1963], "caus": [0, 1, 2, 3, 5, 13, 17, 20, 23, 27, 33, 39, 40, 41, 51, 54, 79, 552, 613, 873, 876, 889, 951, 1127, 1212, 1216, 1236, 1237, 1264, 1319, 1544, 1545, 1602, 1605, 1614, 1660, 1674, 1761, 1772, 1818, 1857, 1877, 1880, 1892, 1901, 1903, 1905, 1907, 1913, 1915, 1917, 1918, 1922, 1925, 1926, 1932, 1934, 1937, 1952, 1954], "mismatch": [0, 23, 54, 80, 82, 876, 1202, 1673, 1674, 1879, 1899, 1904, 1905, 1907, 1918, 1941], "error": [0, 1, 5, 8, 13, 16, 17, 20, 21, 23, 24, 26, 29, 38, 40, 41, 46, 49, 51, 53, 54, 55, 56, 77, 78, 79, 80, 82, 189, 220, 311, 313, 319, 321, 326, 541, 552, 610, 613, 676, 815, 861, 874, 876, 895, 897, 898, 899, 900, 901, 902, 903, 985, 1020, 1031, 1044, 1048, 1072, 1130, 1134, 1135, 1137, 1142, 1164, 1201, 1206, 1215, 1230, 1231, 1240, 1242, 1244, 1247, 1248, 1249, 1259, 1262, 1272, 1290, 1319, 1324, 1350, 1351, 1384, 1395, 1401, 1425, 1434, 1463, 1465, 1531, 1542, 1564, 1583, 1586, 1587, 1614, 1616, 1617, 1618, 1656, 1661, 1671, 1673, 1674, 1717, 1757, 1764, 1813, 1818, 1857, 1860, 1868, 1869, 1875, 1876, 1877, 1879, 1880, 1886, 1887, 1892, 1893, 1894, 1895, 1899, 1900, 1903, 1905, 1906, 1908, 1909, 1915, 1918, 1922, 1928, 1930, 1935, 1940, 1941, 1943, 1944, 1948, 1952, 1953], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 62, 63, 77, 78, 79, 80, 82, 96, 149, 153, 194, 205, 208, 252, 313, 317, 319, 442, 443, 444, 445, 446, 455, 468, 478, 492, 495, 513, 516, 533, 541, 576, 577, 579, 580, 581, 583, 584, 599, 603, 613, 676, 682, 685, 686, 687, 689, 691, 692, 693, 695, 731, 752, 756, 760, 775, 777, 781, 790, 791, 813, 816, 817, 818, 821, 850, 854, 857, 861, 870, 871, 872, 873, 874, 875, 876, 885, 887, 888, 889, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 916, 917, 919, 926, 928, 929, 930, 932, 936, 938, 939, 940, 941, 942, 943, 950, 956, 959, 960, 961, 965, 966, 974, 977, 978, 980, 982, 985, 987, 989, 991, 998, 1009, 1015, 1020, 1021, 1041, 1044, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1065, 1074, 1075, 1076, 1077, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1117, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1142, 1143, 1154, 1158, 1159, 1161, 1162, 1163, 1164, 1175, 1178, 1192, 1198, 1201, 1204, 1205, 1206, 1208, 1210, 1212, 1213, 1216, 1217, 1220, 1221, 1222, 1226, 1230, 1231, 1236, 1237, 1239, 1240, 1242, 1243, 1244, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1266, 1267, 1268, 1270, 1271, 1272, 1273, 1283, 1287, 1288, 1290, 1292, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1319, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1387, 1388, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1421, 1425, 1426, 1427, 1428, 1429, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1466, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1489, 1490, 1491, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1537, 1544, 1545, 1550, 1552, 1554, 1555, 1557, 1558, 1559, 1568, 1569, 1570, 1573, 1576, 1577, 1583, 1589, 1590, 1601, 1602, 1608, 1614, 1615, 1618, 1619, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1650, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1665, 1666, 1668, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1709, 1710, 1715, 1719, 1721, 1722, 1726, 1727, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1742, 1743, 1748, 1750, 1753, 1757, 1759, 1761, 1764, 1765, 1770, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1795, 1798, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1816, 1817, 1818, 1821, 1822, 1836, 1837, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1854, 1855, 1857, 1860, 1862, 1863, 1864, 1868, 1873, 1874, 1875, 1877, 1880, 1882, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1963, 1964], "so": [0, 1, 2, 3, 7, 9, 13, 16, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 40, 41, 43, 46, 49, 50, 51, 53, 54, 333, 455, 492, 676, 855, 890, 895, 897, 898, 903, 945, 948, 976, 999, 1062, 1064, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1125, 1127, 1130, 1134, 1135, 1137, 1138, 1188, 1198, 1201, 1204, 1205, 1210, 1212, 1214, 1256, 1258, 1268, 1273, 1278, 1290, 1311, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1378, 1381, 1388, 1434, 1450, 1467, 1469, 1485, 1498, 1508, 1509, 1510, 1533, 1589, 1590, 1605, 1614, 1660, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1787, 1801, 1813, 1818, 1822, 1842, 1854, 1858, 1862, 1877, 1879, 1880, 1886, 1888, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1925, 1929, 1930, 1934, 1935, 1937, 1939, 1940, 1942, 1948, 1951, 1952, 1953, 1954, 1956, 1957, 1959, 1962, 1963], "cast": [0, 6, 21, 38, 46, 81, 333, 599, 600, 933, 1055, 1056, 1201, 1253, 1257, 1270, 1300, 1329, 1332, 1434, 1552, 1589, 1590, 1661, 1719, 1798, 1801, 1807, 1821, 1826, 1827, 1877, 1899, 1914, 1918, 1935, 1936, 1937], "back": [0, 1, 2, 13, 20, 21, 23, 25, 29, 40, 46, 51, 54, 55, 60, 63, 731, 833, 904, 945, 948, 1094, 1131, 1202, 1214, 1266, 1272, 1480, 1618, 1619, 1803, 1875, 1877, 1880, 1900, 1905, 1906, 1913, 1914, 1915, 1918, 1921, 1922, 1925, 1930, 1934, 1948, 1953, 1955, 1956, 1964], "from": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 37, 38, 40, 42, 43, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 65, 79, 87, 152, 153, 172, 195, 220, 221, 256, 284, 311, 313, 317, 319, 375, 400, 445, 451, 468, 470, 471, 478, 483, 484, 489, 495, 509, 511, 513, 540, 542, 556, 576, 603, 604, 606, 613, 676, 708, 709, 710, 711, 712, 713, 716, 724, 725, 728, 731, 734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 768, 769, 770, 777, 784, 785, 788, 789, 790, 793, 796, 811, 812, 813, 820, 822, 836, 850, 854, 856, 857, 858, 860, 861, 875, 876, 887, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 909, 910, 917, 918, 926, 927, 932, 933, 945, 976, 977, 980, 989, 990, 991, 1009, 1013, 1031, 1058, 1074, 1075, 1076, 1077, 1094, 1096, 1097, 1102, 1103, 1104, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1158, 1159, 1163, 1178, 1198, 1199, 1201, 1202, 1204, 1206, 1207, 1208, 1211, 1212, 1224, 1240, 1244, 1253, 1256, 1257, 1270, 1271, 1272, 1273, 1287, 1291, 1292, 1305, 1310, 1312, 1315, 1316, 1317, 1319, 1324, 1333, 1334, 1342, 1346, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1388, 1389, 1395, 1397, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1435, 1436, 1440, 1444, 1445, 1449, 1451, 1452, 1473, 1478, 1479, 1481, 1483, 1485, 1486, 1498, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1535, 1544, 1557, 1558, 1559, 1571, 1601, 1605, 1614, 1618, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1641, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1658, 1662, 1668, 1670, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1711, 1714, 1722, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1743, 1744, 1747, 1749, 1750, 1757, 1770, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1819, 1823, 1833, 1836, 1845, 1847, 1849, 1854, 1855, 1857, 1859, 1860, 1862, 1871, 1876, 1877, 1878, 1879, 1880, 1882, 1884, 1886, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1921, 1923, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1960, 1961, 1962, 1963, 1964], "alreadi": [0, 1, 11, 20, 21, 23, 24, 40, 41, 46, 53, 54, 194, 205, 208, 460, 483, 520, 576, 599, 600, 788, 836, 850, 854, 875, 985, 1011, 1201, 1210, 1272, 1434, 1609, 1614, 1647, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1852, 1854, 1860, 1875, 1877, 1887, 1889, 1893, 1894, 1899, 1900, 1903, 1905, 1908, 1913, 1918, 1921, 1922, 1925, 1931, 1932, 1934, 1936, 1938, 1948, 1952], "incur": [0, 5, 21, 23, 46, 938, 1913, 1930], "addit": [0, 1, 3, 5, 7, 9, 13, 14, 20, 23, 24, 25, 29, 34, 40, 41, 46, 53, 54, 55, 63, 333, 509, 603, 745, 747, 748, 749, 750, 754, 756, 777, 791, 810, 855, 1031, 1198, 1201, 1205, 1210, 1215, 1342, 1353, 1354, 1355, 1365, 1366, 1367, 1378, 1385, 1386, 1388, 1395, 1398, 1399, 1406, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1424, 1430, 1431, 1432, 1434, 1440, 1442, 1467, 1469, 1473, 1477, 1479, 1481, 1483, 1504, 1511, 1512, 1513, 1550, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1854, 1855, 1866, 1877, 1879, 1880, 1886, 1890, 1893, 1894, 1895, 1900, 1902, 1903, 1905, 1906, 1910, 1913, 1914, 1917, 1918, 1919, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1938, 1941, 1948, 1951, 1953, 1959, 1960, 1963], "overhead": [0, 1, 3, 4, 8, 21, 23, 46, 777, 948, 1031, 1212, 1614, 1900, 1902, 1903, 1904, 1909, 1910, 1913, 1923, 1924, 1931, 1934, 1940, 1948, 1952, 1953, 1955, 1956, 1957], "here": [0, 1, 7, 8, 9, 14, 17, 20, 21, 23, 24, 29, 39, 41, 48, 49, 50, 51, 53, 54, 80, 82, 576, 789, 790, 964, 983, 1074, 1091, 1093, 1094, 1099, 1100, 1101, 1103, 1104, 1109, 1111, 1130, 1140, 1199, 1212, 1352, 1353, 1354, 1365, 1366, 1367, 1397, 1398, 1399, 1442, 1473, 1533, 1535, 1623, 1689, 1692, 1703, 1790, 1875, 1877, 1879, 1880, 1882, 1893, 1894, 1895, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1917, 1918, 1921, 1922, 1923, 1925, 1928, 1934, 1938, 1939, 1941, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1963], "assum": [0, 11, 20, 23, 28, 29, 31, 33, 40, 41, 46, 49, 52, 54, 813, 1057, 1092, 1095, 1097, 1105, 1106, 1107, 1110, 1192, 1198, 1199, 1202, 1216, 1236, 1237, 1239, 1246, 1255, 1258, 1261, 1263, 1273, 1357, 1426, 1486, 1517, 1583, 1614, 1623, 1626, 1651, 1693, 1694, 1699, 1700, 1701, 1704, 1706, 1707, 1711, 1823, 1843, 1845, 1860, 1875, 1877, 1879, 1880, 1893, 1900, 1903, 1905, 1906, 1908, 1910, 1913, 1914, 1918, 1921, 1922, 1923, 1930, 1931, 1932, 1934, 1950, 1951, 1959], "a_float32": 0, "rand": [0, 1, 17, 29, 54, 333, 689, 695, 897, 898, 899, 900, 901, 902, 966, 1017, 1018, 1091, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1109, 1111, 1132, 1207, 1212, 1216, 1217, 1218, 1274, 1275, 1277, 1350, 1400, 1477, 1478, 1479, 1480, 1481, 1505, 1524, 1525, 1583, 1614, 1626, 1659, 1714, 1725, 1726, 1727, 1731, 1877, 1878, 1879, 1880, 1882, 1893, 1894, 1918, 1920, 1923, 1925, 1930, 1931, 1934, 1935, 1938, 1939, 1942, 1958, 1961], "8": [0, 1, 13, 19, 20, 21, 23, 29, 31, 55, 60, 311, 313, 315, 319, 399, 400, 468, 509, 513, 556, 603, 613, 681, 682, 693, 694, 741, 742, 757, 759, 761, 769, 770, 816, 817, 818, 821, 900, 919, 927, 938, 941, 942, 946, 1017, 1018, 1053, 1057, 1072, 1077, 1090, 1106, 1107, 1113, 1114, 1117, 1124, 1154, 1163, 1164, 1224, 1253, 1256, 1257, 1258, 1266, 1268, 1271, 1272, 1333, 1334, 1339, 1340, 1341, 1343, 1344, 1345, 1358, 1369, 1404, 1430, 1431, 1437, 1439, 1441, 1448, 1449, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1477, 1478, 1479, 1480, 1481, 1485, 1509, 1512, 1515, 1571, 1576, 1581, 1582, 1583, 1661, 1662, 1668, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1697, 1705, 1710, 1714, 1718, 1738, 1748, 1749, 1750, 1757, 1770, 1777, 1780, 1785, 1791, 1795, 1802, 1804, 1805, 1810, 1818, 1822, 1832, 1837, 1838, 1839, 1841, 1843, 1852, 1857, 1862, 1869, 1877, 1881, 1887, 1903, 1905, 1916, 1918, 1920, 1922, 1923, 1924, 1925, 1928, 1930, 1934, 1935, 1937, 1938, 1940, 1950, 1956, 1963], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 940, 941, 1205, 1256, 1295, 1444, 1445, 1721, 1822, 1857, 1878, 1879, 1893, 1899, 1902, 1905, 1914, 1920, 1934, 1957, 1958], "list": [0, 1, 3, 5, 6, 7, 9, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 40, 42, 46, 51, 53, 54, 55, 56, 60, 61, 62, 63, 78, 183, 239, 300, 442, 444, 446, 574, 579, 580, 581, 585, 615, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 788, 789, 794, 810, 811, 812, 813, 834, 850, 857, 875, 882, 883, 884, 930, 931, 934, 938, 942, 947, 948, 950, 954, 1001, 1007, 1059, 1072, 1074, 1075, 1114, 1128, 1140, 1154, 1164, 1201, 1205, 1207, 1212, 1214, 1216, 1217, 1300, 1302, 1332, 1371, 1377, 1406, 1434, 1436, 1445, 1462, 1473, 1484, 1524, 1598, 1614, 1615, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1661, 1665, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1697, 1699, 1701, 1702, 1703, 1705, 1706, 1724, 1726, 1727, 1730, 1734, 1749, 1786, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1816, 1817, 1821, 1836, 1837, 1838, 1854, 1855, 1857, 1858, 1860, 1863, 1864, 1869, 1873, 1875, 1877, 1878, 1881, 1882, 1886, 1888, 1890, 1893, 1894, 1895, 1905, 1909, 1911, 1914, 1915, 1916, 1920, 1921, 1922, 1923, 1924, 1925, 1930, 1931, 1934, 1936, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1949, 1950, 1951, 1952, 1954, 1956, 1957, 1961, 1962, 1963, 1964], "No": [0, 9, 43, 53, 896, 1614, 1659, 1879, 1903, 1918, 1928, 1938, 1941, 1948], "manual": [0, 20, 23, 38, 40, 41, 43, 46, 54, 793, 834, 874, 903, 1163, 1205, 1350, 1351, 1370, 1438, 1439, 1441, 1462, 1481, 1505, 1506, 1516, 1568, 1626, 1647, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1877, 1880, 1892, 1899, 1903, 1905, 1906, 1907, 1908, 1911, 1917, 1918, 1925, 1926, 1939, 1948, 1951, 1960], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 13, 20, 21, 23, 24, 25, 27, 31, 32, 33, 40, 41, 46, 53, 54, 484, 836, 886, 896, 909, 910, 950, 961, 977, 992, 1019, 1032, 1074, 1120, 1121, 1142, 1201, 1231, 1371, 1434, 1481, 1483, 1533, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1741, 1787, 1823, 1868, 1875, 1890, 1892, 1894, 1903, 1905, 1906, 1907, 1908, 1913, 1918, 1922, 1925, 1930, 1932, 1941, 1942, 1948, 1952, 1954, 1956, 1959], "f_float16": 0, "g_float32": 0, "epoch": [0, 20, 33, 43, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1890, 1899, 1913, 1921, 1939], "eval": [0, 54, 810, 856, 857, 1140, 1201, 1205, 1210, 1216, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1440, 1473, 1481, 1622, 1880, 1888, 1911, 1918, 1925, 1944, 1964], "jit": [0, 11, 13, 1017, 1018, 1049, 1151, 1199, 1200, 1201, 1215, 1670, 1673, 1768, 1769, 1876, 1879, 1882, 1888, 1894, 1902, 1910, 1916, 1918, 1925, 1930, 1939, 1949, 1950, 1951, 1953, 1955], "trace": [0, 1, 5, 14, 17, 20, 21, 23, 33, 55, 58, 59, 60, 61, 67, 68, 69, 676, 911, 912, 913, 948, 1074, 1204, 1212, 1213, 1217, 1273, 1315, 1316, 1317, 1674, 1859, 1876, 1878, 1879, 1880, 1882, 1886, 1900, 1903, 1904, 1916, 1920, 1922, 1939, 1945, 1949, 1951, 1952, 1955, 1956, 1957, 1959, 1963], "testmodel": 0, "__init__": [0, 1, 20, 21, 23, 29, 54, 55, 60, 62, 63, 64, 857, 858, 1140, 1199, 1202, 1204, 1207, 1212, 1216, 1217, 1218, 1434, 1435, 1436, 1444, 1445, 1605, 1669, 1877, 1879, 1880, 1890, 1900, 1905, 1907, 1911, 1916, 1918, 1922, 1925, 1939, 1949, 1951, 1961, 1962, 1963], "input_s": [0, 730, 756, 757, 761, 1386, 1387, 1404, 1405, 1449, 1450, 1451, 1878], "num_class": [0, 1570, 1878, 1955], "super": [0, 9, 20, 21, 23, 25, 54, 55, 60, 62, 63, 64, 857, 858, 1140, 1199, 1204, 1207, 1212, 1216, 1217, 1218, 1434, 1435, 1436, 1444, 1445, 1446, 1447, 1605, 1669, 1703, 1877, 1879, 1880, 1881, 1900, 1905, 1911, 1916, 1918, 1922, 1925, 1949, 1961, 1962, 1963], "fc1": [0, 21, 1605, 1923], "x": [0, 1, 3, 11, 13, 20, 21, 23, 29, 31, 37, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 172, 252, 256, 284, 287, 309, 311, 313, 315, 319, 350, 375, 445, 480, 489, 495, 554, 556, 579, 603, 604, 613, 688, 754, 756, 766, 775, 776, 780, 781, 792, 795, 798, 816, 817, 857, 858, 874, 880, 882, 883, 884, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 930, 931, 932, 935, 936, 948, 959, 962, 965, 966, 1017, 1018, 1057, 1064, 1068, 1069, 1074, 1078, 1088, 1089, 1090, 1091, 1093, 1094, 1099, 1100, 1102, 1104, 1108, 1109, 1111, 1114, 1115, 1116, 1124, 1130, 1132, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1154, 1171, 1175, 1176, 1188, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1222, 1232, 1245, 1246, 1250, 1253, 1257, 1261, 1263, 1266, 1267, 1268, 1269, 1270, 1273, 1278, 1279, 1280, 1288, 1291, 1294, 1295, 1302, 1328, 1329, 1333, 1334, 1340, 1341, 1350, 1351, 1352, 1353, 1354, 1356, 1368, 1370, 1376, 1382, 1383, 1384, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1423, 1424, 1425, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1445, 1449, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1483, 1486, 1507, 1531, 1533, 1537, 1538, 1544, 1548, 1552, 1563, 1568, 1573, 1577, 1579, 1584, 1585, 1586, 1590, 1591, 1593, 1594, 1595, 1602, 1605, 1622, 1624, 1626, 1647, 1648, 1649, 1650, 1651, 1656, 1659, 1660, 1661, 1668, 1669, 1673, 1676, 1697, 1711, 1712, 1723, 1725, 1739, 1742, 1743, 1745, 1746, 1748, 1749, 1753, 1757, 1767, 1795, 1799, 1813, 1816, 1817, 1818, 1824, 1825, 1831, 1837, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1855, 1856, 1862, 1863, 1864, 1866, 1867, 1868, 1871, 1875, 1877, 1878, 1879, 1880, 1881, 1892, 1893, 1894, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1917, 1918, 1922, 1925, 1930, 1934, 1935, 1937, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1961, 1963], "2": [0, 1, 3, 11, 13, 17, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 33, 38, 40, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 172, 190, 207, 224, 232, 252, 258, 311, 313, 315, 319, 333, 375, 399, 400, 442, 443, 444, 445, 446, 478, 484, 489, 492, 495, 509, 511, 513, 540, 554, 556, 576, 577, 579, 580, 581, 583, 584, 585, 603, 613, 676, 677, 679, 680, 681, 682, 685, 686, 687, 688, 689, 691, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 741, 742, 751, 754, 756, 758, 789, 792, 816, 861, 870, 871, 872, 873, 874, 875, 876, 880, 882, 883, 884, 886, 895, 897, 898, 899, 900, 901, 902, 909, 910, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 938, 939, 940, 941, 942, 946, 947, 956, 959, 960, 961, 962, 965, 966, 974, 1048, 1053, 1056, 1057, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1084, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1136, 1137, 1141, 1142, 1143, 1144, 1145, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1175, 1176, 1178, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1201, 1204, 1205, 1210, 1212, 1214, 1216, 1220, 1221, 1222, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1277, 1278, 1279, 1280, 1287, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1319, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1338, 1341, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1386, 1388, 1390, 1391, 1392, 1393, 1395, 1402, 1403, 1404, 1405, 1406, 1420, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1439, 1440, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1498, 1500, 1505, 1506, 1517, 1524, 1525, 1531, 1533, 1535, 1537, 1544, 1550, 1557, 1558, 1559, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1583, 1599, 1605, 1614, 1618, 1621, 1622, 1626, 1638, 1639, 1640, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1669, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1700, 1704, 1705, 1706, 1710, 1711, 1712, 1714, 1715, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1732, 1734, 1736, 1737, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1753, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1767, 1770, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1795, 1796, 1797, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1825, 1831, 1832, 1834, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1874, 1878, 1879, 1880, 1881, 1887, 1888, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1908, 1909, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1958, 1961, 1962], "we": [0, 1, 2, 5, 7, 8, 9, 11, 13, 14, 20, 21, 23, 25, 27, 28, 29, 30, 31, 40, 41, 43, 46, 47, 48, 49, 50, 51, 53, 54, 55, 81, 492, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 775, 781, 784, 785, 787, 789, 790, 834, 853, 855, 857, 858, 861, 889, 890, 893, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 917, 926, 948, 974, 1031, 1074, 1092, 1094, 1095, 1096, 1097, 1104, 1109, 1110, 1111, 1125, 1134, 1135, 1137, 1142, 1154, 1158, 1159, 1175, 1199, 1201, 1204, 1205, 1212, 1214, 1216, 1256, 1259, 1264, 1272, 1273, 1292, 1324, 1342, 1350, 1351, 1400, 1434, 1486, 1533, 1535, 1544, 1602, 1609, 1614, 1621, 1623, 1632, 1634, 1637, 1641, 1642, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1694, 1700, 1705, 1722, 1858, 1868, 1875, 1876, 1877, 1879, 1880, 1882, 1884, 1887, 1888, 1892, 1893, 1894, 1895, 1900, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1917, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1937, 1939, 1943, 1944, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963], "suggest": [0, 9, 21, 47, 77, 78, 80, 82, 1368, 1875, 1882, 1899, 1900, 1907, 1934, 1957, 1963], "issu": [0, 2, 3, 5, 9, 10, 11, 13, 19, 20, 23, 30, 46, 47, 49, 51, 54, 55, 79, 80, 897, 903, 948, 950, 951, 1125, 1136, 1138, 1142, 1246, 1290, 1302, 1400, 1404, 1430, 1431, 1432, 1449, 1486, 1544, 1545, 1658, 1761, 1868, 1875, 1876, 1880, 1882, 1887, 1892, 1893, 1894, 1895, 1899, 1900, 1903, 1905, 1913, 1914, 1915, 1917, 1918, 1922, 1925, 1926, 1930, 1934, 1935, 1937, 1948, 1953, 1954, 1963], "http": [0, 2, 3, 4, 7, 9, 13, 14, 21, 22, 23, 28, 29, 40, 41, 46, 149, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 788, 789, 889, 948, 1074, 1131, 1273, 1302, 1357, 1404, 1430, 1431, 1432, 1452, 1453, 1477, 1480, 1483, 1658, 1711, 1728, 1761, 1786, 1857, 1860, 1875, 1881, 1889, 1891, 1900, 1901, 1905, 1908, 1909, 1911, 1915, 1917, 1918, 1922, 1924, 1937, 1939, 1955, 1957, 1962, 1965], "github": [0, 7, 9, 13, 22, 23, 36, 46, 47, 51, 149, 788, 789, 889, 903, 1131, 1302, 1430, 1431, 1432, 1477, 1658, 1697, 1761, 1860, 1875, 1882, 1887, 1905, 1908, 1915, 1918, 1924, 1925, 1934, 1935, 1937, 1953, 1957, 1962], "com": [0, 7, 13, 22, 23, 39, 41, 46, 149, 788, 789, 889, 1131, 1302, 1430, 1431, 1432, 1477, 1658, 1761, 1857, 1860, 1875, 1889, 1891, 1905, 1908, 1909, 1915, 1917, 1918, 1924, 1937, 1957, 1962], "pytorch": [0, 1, 2, 3, 4, 5, 11, 12, 13, 16, 17, 20, 21, 25, 26, 27, 28, 29, 30, 31, 33, 40, 41, 46, 47, 50, 52, 54, 55, 77, 78, 79, 80, 81, 82, 84, 85, 149, 509, 579, 676, 694, 726, 727, 728, 729, 741, 742, 752, 756, 757, 758, 759, 760, 761, 788, 789, 806, 807, 808, 809, 876, 889, 933, 938, 939, 948, 949, 974, 999, 1000, 1011, 1016, 1074, 1119, 1125, 1131, 1132, 1136, 1141, 1142, 1147, 1187, 1188, 1211, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1271, 1287, 1290, 1291, 1302, 1350, 1351, 1357, 1386, 1400, 1430, 1431, 1432, 1477, 1506, 1583, 1614, 1647, 1655, 1656, 1658, 1661, 1668, 1674, 1721, 1753, 1761, 1762, 1772, 1818, 1822, 1845, 1857, 1860, 1868, 1875, 1879, 1880, 1884, 1886, 1887, 1889, 1890, 1894, 1895, 1896, 1901, 1902, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1921, 1922, 1924, 1925, 1926, 1927, 1930, 1931, 1934, 1935, 1937, 1938, 1939, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1961, 1962, 1964, 1965], "75956": 0, "_c": [0, 20, 21, 23, 53, 897, 903, 1200, 1212, 1670, 1878, 1880, 1890, 1903, 1910, 1914, 1917, 1918, 1930], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 13, 20, 21, 23, 24, 25, 27, 29, 31, 46, 49, 54, 55, 60, 62, 63, 111, 112, 113, 114, 115, 117, 133, 134, 135, 149, 180, 181, 182, 195, 208, 258, 299, 316, 317, 319, 326, 330, 333, 334, 336, 340, 341, 342, 349, 352, 390, 394, 405, 407, 408, 409, 412, 418, 426, 427, 428, 429, 442, 443, 444, 445, 446, 450, 455, 457, 467, 468, 476, 491, 492, 500, 513, 538, 551, 552, 561, 576, 590, 599, 605, 606, 611, 613, 676, 689, 690, 691, 692, 693, 695, 708, 709, 710, 711, 712, 713, 730, 731, 741, 742, 747, 748, 749, 751, 754, 756, 764, 765, 772, 774, 775, 776, 778, 779, 781, 793, 810, 815, 816, 817, 818, 820, 821, 822, 834, 835, 853, 854, 859, 861, 870, 871, 872, 876, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 913, 917, 920, 923, 925, 926, 932, 933, 939, 940, 941, 947, 948, 959, 977, 1015, 1020, 1032, 1074, 1075, 1076, 1077, 1079, 1080, 1087, 1091, 1092, 1093, 1094, 1099, 1100, 1105, 1106, 1107, 1109, 1110, 1111, 1127, 1128, 1129, 1130, 1132, 1133, 1135, 1136, 1137, 1139, 1141, 1143, 1145, 1157, 1158, 1159, 1162, 1163, 1176, 1186, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1201, 1206, 1207, 1208, 1216, 1217, 1218, 1220, 1222, 1225, 1230, 1231, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1255, 1257, 1258, 1261, 1262, 1263, 1264, 1265, 1270, 1271, 1272, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1292, 1294, 1298, 1300, 1301, 1303, 1306, 1312, 1315, 1316, 1324, 1329, 1330, 1331, 1332, 1335, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1368, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1420, 1421, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1463, 1465, 1466, 1473, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1486, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1528, 1529, 1530, 1533, 1535, 1537, 1538, 1539, 1544, 1545, 1548, 1554, 1555, 1557, 1558, 1559, 1563, 1568, 1572, 1576, 1578, 1579, 1581, 1582, 1583, 1584, 1586, 1596, 1599, 1600, 1602, 1608, 1614, 1616, 1618, 1621, 1623, 1626, 1627, 1639, 1648, 1649, 1650, 1651, 1653, 1656, 1659, 1660, 1661, 1665, 1666, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1719, 1721, 1722, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1745, 1746, 1753, 1757, 1765, 1766, 1767, 1770, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1795, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 1817, 1818, 1821, 1822, 1836, 1840, 1845, 1854, 1857, 1860, 1862, 1863, 1864, 1871, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1886, 1887, 1888, 1889, 1892, 1894, 1895, 1899, 1900, 1903, 1904, 1905, 1907, 1911, 1914, 1915, 1918, 1919, 1922, 1923, 1924, 1926, 1929, 1930, 1934, 1935, 1936, 1938, 1939, 1941, 1942, 1944, 1948, 1953, 1956, 1958, 1959, 1962, 1963, 1964], "randn": [0, 1, 11, 23, 29, 48, 50, 51, 52, 54, 55, 57, 62, 63, 287, 309, 480, 540, 576, 580, 581, 582, 583, 584, 585, 613, 679, 680, 681, 682, 683, 684, 685, 686, 691, 692, 695, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 752, 754, 756, 757, 758, 759, 760, 761, 768, 769, 770, 857, 858, 870, 871, 872, 874, 877, 878, 879, 880, 881, 916, 928, 935, 937, 938, 939, 940, 941, 943, 961, 962, 963, 964, 965, 974, 1053, 1054, 1055, 1056, 1061, 1062, 1063, 1064, 1068, 1074, 1088, 1089, 1118, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1171, 1175, 1178, 1212, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1254, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1276, 1280, 1281, 1288, 1290, 1291, 1292, 1294, 1295, 1298, 1300, 1301, 1303, 1305, 1306, 1307, 1308, 1322, 1323, 1326, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1432, 1433, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1460, 1461, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1484, 1485, 1489, 1490, 1491, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1528, 1529, 1535, 1568, 1574, 1575, 1664, 1668, 1669, 1712, 1717, 1718, 1719, 1721, 1722, 1735, 1739, 1740, 1752, 1788, 1790, 1795, 1800, 1803, 1811, 1812, 1821, 1822, 1831, 1834, 1835, 1838, 1842, 1845, 1846, 1848, 1851, 1853, 1857, 1866, 1867, 1868, 1871, 1878, 1879, 1880, 1882, 1893, 1894, 1895, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1911, 1915, 1916, 1918, 1920, 1922, 1925, 1930, 1934, 1935, 1937, 1939, 1942, 1944, 1948, 1949, 1950, 1953, 1955, 1956, 1958, 1961, 1963], "freez": [0, 46, 1201, 1210, 1377, 1378, 1434, 1900], "_": [0, 1, 3, 20, 21, 23, 24, 27, 33, 52, 54, 677, 679, 680, 694, 861, 877, 878, 879, 880, 881, 890, 896, 918, 937, 960, 961, 963, 964, 966, 1118, 1123, 1137, 1141, 1167, 1221, 1229, 1280, 1288, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1614, 1622, 1655, 1689, 1691, 1711, 1734, 1737, 1740, 1752, 1767, 1773, 1775, 1781, 1788, 1790, 1811, 1822, 1834, 1835, 1900, 1903, 1906, 1907, 1911, 1917, 1921, 1922, 1924, 1935, 1949, 1950, 1956, 1957, 1961, 1963], "3": [0, 1, 3, 4, 6, 9, 11, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 33, 38, 40, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 190, 207, 252, 258, 287, 311, 313, 315, 319, 399, 400, 442, 443, 444, 445, 446, 468, 484, 489, 492, 495, 509, 511, 513, 519, 533, 540, 554, 556, 577, 579, 580, 581, 583, 584, 603, 613, 676, 677, 681, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 742, 744, 753, 756, 757, 758, 759, 761, 768, 769, 770, 781, 789, 820, 857, 858, 861, 871, 872, 874, 875, 876, 883, 884, 897, 898, 899, 900, 901, 902, 916, 918, 919, 920, 921, 922, 923, 924, 925, 927, 928, 929, 930, 931, 932, 934, 935, 936, 938, 939, 940, 941, 942, 946, 947, 956, 959, 960, 965, 966, 974, 1017, 1018, 1020, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1087, 1090, 1095, 1098, 1102, 1108, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1132, 1137, 1138, 1140, 1142, 1143, 1144, 1145, 1154, 1157, 1160, 1161, 1162, 1163, 1164, 1166, 1167, 1175, 1176, 1178, 1186, 1188, 1190, 1192, 1201, 1205, 1207, 1210, 1212, 1216, 1217, 1221, 1222, 1223, 1224, 1225, 1226, 1230, 1232, 1233, 1234, 1236, 1237, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1278, 1281, 1283, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1347, 1348, 1349, 1350, 1351, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1370, 1377, 1378, 1381, 1382, 1383, 1384, 1386, 1387, 1389, 1391, 1392, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1437, 1439, 1441, 1446, 1447, 1449, 1451, 1452, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1473, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1500, 1505, 1506, 1509, 1510, 1512, 1513, 1516, 1524, 1525, 1528, 1529, 1531, 1533, 1537, 1538, 1544, 1552, 1568, 1570, 1571, 1574, 1575, 1581, 1582, 1589, 1590, 1602, 1614, 1622, 1636, 1638, 1640, 1641, 1642, 1643, 1647, 1649, 1650, 1651, 1652, 1655, 1660, 1661, 1662, 1664, 1665, 1666, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1700, 1703, 1704, 1706, 1710, 1712, 1714, 1718, 1719, 1721, 1722, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1734, 1736, 1737, 1738, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1753, 1757, 1761, 1762, 1763, 1770, 1773, 1775, 1777, 1779, 1780, 1781, 1785, 1786, 1787, 1795, 1797, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1821, 1822, 1824, 1825, 1831, 1832, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1862, 1865, 1868, 1869, 1870, 1871, 1873, 1874, 1877, 1878, 1879, 1880, 1881, 1887, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1911, 1912, 1916, 1917, 1918, 1921, 1922, 1925, 1927, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1942, 1948, 1950, 1953, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963], "bug": [0, 13, 17, 23, 54, 1134, 1135, 1137, 1290, 1899, 1913, 1934, 1953, 1963], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 54, 55, 57, 62, 63, 77, 78, 79, 80, 81, 82, 83, 118, 149, 153, 194, 195, 205, 208, 220, 221, 222, 253, 258, 287, 288, 311, 319, 321, 333, 335, 338, 350, 442, 443, 444, 445, 446, 455, 483, 484, 489, 491, 492, 493, 494, 495, 496, 499, 500, 509, 511, 513, 520, 552, 562, 579, 580, 581, 583, 584, 585, 599, 600, 610, 613, 614, 676, 680, 682, 685, 689, 690, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 731, 732, 733, 740, 744, 745, 746, 747, 748, 749, 750, 751, 753, 755, 756, 771, 772, 773, 774, 775, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 798, 806, 807, 808, 809, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821, 822, 850, 855, 857, 858, 870, 871, 872, 873, 874, 881, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 913, 916, 919, 921, 924, 928, 929, 936, 938, 939, 942, 943, 945, 948, 950, 951, 952, 953, 955, 959, 960, 962, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 985, 996, 998, 1001, 1002, 1003, 1005, 1006, 1009, 1010, 1011, 1012, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1025, 1027, 1030, 1031, 1032, 1038, 1039, 1041, 1042, 1043, 1047, 1048, 1049, 1055, 1056, 1057, 1062, 1064, 1065, 1069, 1072, 1073, 1074, 1078, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1120, 1121, 1122, 1125, 1127, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1144, 1146, 1147, 1148, 1154, 1158, 1164, 1166, 1176, 1188, 1198, 1199, 1201, 1202, 1204, 1206, 1207, 1208, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1220, 1221, 1222, 1223, 1224, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1276, 1278, 1281, 1290, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1312, 1315, 1316, 1326, 1329, 1330, 1331, 1332, 1334, 1342, 1346, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1387, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1421, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1440, 1441, 1444, 1446, 1449, 1450, 1462, 1465, 1467, 1470, 1473, 1479, 1480, 1481, 1482, 1485, 1486, 1487, 1488, 1498, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1533, 1535, 1537, 1544, 1550, 1552, 1557, 1558, 1559, 1569, 1571, 1573, 1583, 1589, 1590, 1598, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1647, 1648, 1649, 1650, 1651, 1654, 1655, 1656, 1658, 1659, 1661, 1662, 1666, 1668, 1669, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1700, 1701, 1703, 1705, 1707, 1709, 1710, 1711, 1715, 1719, 1721, 1728, 1732, 1737, 1741, 1743, 1750, 1757, 1759, 1760, 1761, 1763, 1764, 1765, 1767, 1770, 1772, 1773, 1791, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1816, 1817, 1818, 1821, 1822, 1824, 1825, 1831, 1833, 1837, 1839, 1843, 1845, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "what": [0, 1, 3, 5, 7, 8, 9, 23, 28, 29, 33, 37, 38, 46, 48, 50, 51, 54, 55, 888, 1135, 1216, 1217, 1290, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1428, 1429, 1462, 1485, 1557, 1558, 1559, 1583, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1722, 1875, 1876, 1877, 1879, 1880, 1893, 1905, 1906, 1908, 1911, 1913, 1918, 1921, 1924, 1925, 1930, 1931, 1934, 1948, 1949, 1951, 1952, 1954, 1955, 1956, 1963], "observ": [0, 21, 31, 40, 752, 785, 786, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 804, 805, 807, 809, 811, 813, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 837, 855, 857, 858, 860, 962, 966, 1214, 1302, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1394, 1397, 1398, 1399, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1899, 1900, 1903, 1904, 1910, 1913, 1926, 1944, 1947, 1948, 1953, 1961, 1963], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 11, 14, 21, 23, 29, 32, 35, 36, 40, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 81, 252, 253, 494, 509, 614, 685, 726, 727, 728, 729, 730, 731, 737, 738, 739, 741, 742, 752, 757, 758, 759, 760, 761, 857, 858, 888, 890, 891, 892, 897, 899, 900, 903, 930, 1057, 1130, 1134, 1135, 1136, 1137, 1138, 1142, 1201, 1264, 1295, 1305, 1357, 1365, 1400, 1434, 1533, 1544, 1545, 1550, 1571, 1583, 1601, 1614, 1655, 1656, 1658, 1699, 1761, 1868, 1882, 1887, 1893, 1894, 1895, 1896, 1899, 1900, 1905, 1906, 1909, 1914, 1915, 1917, 1918, 1921, 1922, 1925, 1928, 1930, 1931, 1934, 1935, 1937, 1938, 1939, 1941, 1949, 1952, 1953, 1960, 1963], "file": [0, 1, 3, 6, 7, 9, 11, 13, 17, 20, 25, 31, 33, 38, 40, 42, 49, 51, 54, 897, 903, 911, 912, 976, 1013, 1134, 1135, 1137, 1138, 1176, 1201, 1208, 1211, 1272, 1668, 1673, 1753, 1797, 1875, 1877, 1880, 1881, 1882, 1889, 1893, 1894, 1895, 1900, 1903, 1905, 1910, 1913, 1915, 1916, 1917, 1918, 1924, 1928, 1931, 1934, 1936, 1939, 1949, 1951, 1953, 1955, 1957, 1960, 1961, 1963], "subregion": 0, "nest": [0, 1, 5, 13, 25, 46, 54, 55, 58, 62, 63, 585, 789, 811, 813, 890, 899, 1035, 1036, 1132, 1142, 1201, 1204, 1216, 1434, 1440, 1480, 1481, 1668, 1674, 1868, 1876, 1906, 1918, 1924, 1930], "local": [0, 23, 25, 27, 28, 31, 38, 40, 41, 42, 43, 46, 54, 1017, 1078, 1131, 1176, 1201, 1273, 1373, 1374, 1375, 1379, 1381, 1422, 1434, 1485, 1527, 1551, 1601, 1614, 1615, 1659, 1767, 1797, 1875, 1876, 1879, 1892, 1899, 1903, 1904, 1907, 1918, 1922, 1923, 1927, 1930, 1931, 1932, 1939, 1950, 1953, 1956, 1963], "want": [0, 1, 7, 8, 9, 13, 20, 23, 28, 29, 37, 46, 48, 49, 50, 51, 53, 54, 55, 445, 492, 495, 777, 787, 834, 1013, 1130, 1131, 1213, 1216, 1217, 1302, 1382, 1383, 1486, 1528, 1529, 1544, 1602, 1614, 1615, 1656, 1659, 1678, 1679, 1692, 1753, 1860, 1875, 1884, 1887, 1899, 1900, 1902, 1903, 1905, 1906, 1908, 1911, 1918, 1921, 1922, 1925, 1934, 1939, 1940, 1943, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1959, 1962], "forc": [0, 1, 13, 17, 46, 455, 876, 948, 1013, 1204, 1215, 1219, 1772, 1875, 1877, 1880, 1899, 1903, 1939, 1942, 1948, 1950], "particular": [0, 3, 7, 20, 25, 31, 37, 40, 41, 46, 54, 55, 60, 63, 556, 676, 857, 858, 1048, 1142, 1201, 1295, 1371, 1434, 1668, 1868, 1877, 1879, 1887, 1895, 1903, 1905, 1907, 1910, 1911, 1914, 1918, 1921, 1934, 1936, 1942, 1948, 1952, 1953, 1954, 1963, 1964], "give": [0, 3, 4, 7, 9, 17, 20, 21, 25, 27, 39, 46, 54, 904, 905, 966, 1092, 1094, 1095, 1097, 1101, 1110, 1134, 1135, 1136, 1214, 1230, 1237, 1362, 1363, 1364, 1439, 1485, 1486, 1621, 1660, 1678, 1679, 1818, 1857, 1875, 1877, 1892, 1894, 1898, 1900, 1903, 1905, 1906, 1908, 1909, 1911, 1915, 1918, 1921, 1923, 1934, 1948, 1951, 1952, 1960, 1963, 1964], "explicit": [0, 8, 23, 46, 50, 54, 1009, 1154, 1188, 1545, 1761, 1838, 1875, 1876, 1880, 1881, 1893, 1899, 1903, 1905, 1922, 1937, 1938, 1958], "control": [0, 1, 2, 13, 20, 21, 23, 24, 25, 29, 31, 36, 39, 40, 55, 61, 63, 751, 795, 854, 857, 872, 876, 890, 917, 926, 1061, 1062, 1063, 1064, 1065, 1158, 1159, 1212, 1213, 1214, 1216, 1231, 1237, 1239, 1242, 1244, 1247, 1249, 1253, 1259, 1262, 1264, 1270, 1290, 1342, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1420, 1428, 1429, 1485, 1583, 1614, 1709, 1765, 1766, 1780, 1795, 1797, 1802, 1818, 1822, 1840, 1846, 1847, 1848, 1849, 1877, 1886, 1900, 1902, 1903, 1904, 1911, 1913, 1914, 1916, 1918, 1921, 1925, 1932, 1934, 1948, 1949, 1951, 1953, 1956], "execut": [0, 1, 2, 3, 4, 5, 7, 13, 14, 20, 23, 25, 27, 31, 32, 34, 41, 46, 51, 53, 54, 484, 909, 910, 948, 980, 991, 1052, 1131, 1201, 1202, 1204, 1216, 1217, 1272, 1315, 1316, 1371, 1434, 1440, 1477, 1478, 1479, 1480, 1481, 1608, 1610, 1614, 1768, 1876, 1877, 1879, 1881, 1888, 1899, 1901, 1902, 1907, 1910, 1911, 1913, 1915, 1917, 1918, 1924, 1925, 1930, 1931, 1934, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1962, 1963], "surround": [0, 54, 786, 1879, 1899, 1903], "ensur": [0, 1, 4, 6, 7, 9, 20, 23, 24, 25, 27, 31, 40, 41, 43, 46, 53, 54, 478, 483, 731, 815, 893, 895, 955, 1131, 1201, 1346, 1427, 1434, 1437, 1438, 1477, 1533, 1557, 1558, 1559, 1583, 1614, 1769, 1875, 1877, 1879, 1887, 1889, 1892, 1899, 1900, 1903, 1905, 1906, 1908, 1913, 1915, 1922, 1925, 1926, 1930, 1931, 1948, 1952, 1953, 1963], "necessari": [0, 1, 3, 9, 13, 20, 25, 31, 40, 41, 46, 53, 87, 190, 207, 556, 585, 896, 1131, 1175, 1212, 1440, 1648, 1649, 1877, 1880, 1894, 1898, 1900, 1901, 1903, 1904, 1909, 1911, 1914, 1917, 1922, 1925, 1930, 1931, 1932, 1937, 1953, 1963], "becaus": [0, 1, 3, 4, 5, 7, 8, 13, 20, 21, 23, 27, 29, 33, 46, 50, 51, 53, 54, 55, 62, 63, 492, 899, 904, 905, 1095, 1096, 1097, 1105, 1106, 1107, 1132, 1136, 1141, 1142, 1198, 1202, 1205, 1208, 1247, 1248, 1272, 1290, 1352, 1353, 1354, 1371, 1473, 1605, 1614, 1615, 1695, 1737, 1818, 1868, 1876, 1877, 1880, 1882, 1892, 1893, 1894, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1918, 1922, 1925, 1926, 1930, 1932, 1934, 1939, 1941, 1944, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1961, 1963, 1964], "wa": [0, 1, 3, 7, 17, 21, 23, 38, 39, 40, 41, 46, 53, 54, 333, 483, 492, 676, 781, 788, 850, 938, 949, 977, 978, 1001, 1005, 1020, 1033, 1052, 1094, 1142, 1198, 1207, 1216, 1231, 1242, 1244, 1248, 1272, 1290, 1312, 1324, 1404, 1430, 1431, 1432, 1463, 1486, 1498, 1533, 1586, 1602, 1614, 1615, 1650, 1697, 1703, 1816, 1817, 1854, 1855, 1863, 1864, 1868, 1875, 1877, 1879, 1880, 1881, 1884, 1886, 1887, 1890, 1892, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1910, 1912, 1918, 1921, 1923, 1925, 1929, 1930, 1934, 1941, 1952, 1953, 1956, 1962], "f_float32": 0, "re": [0, 1, 4, 5, 7, 13, 20, 23, 27, 30, 37, 40, 46, 47, 48, 49, 50, 51, 53, 54, 928, 1125, 1201, 1205, 1434, 1589, 1615, 1650, 1748, 1801, 1877, 1880, 1887, 1892, 1899, 1900, 1903, 1905, 1906, 1908, 1913, 1925, 1931, 1932, 1935, 1948, 1951, 1952, 1953, 1962, 1963, 1964], "again": [0, 17, 20, 23, 27, 31, 49, 1324, 1900, 1905, 1906, 1911, 1948, 1951, 1952, 1956, 1957], "regardless": [0, 20, 39, 46, 960, 1201, 1205, 1210, 1434, 1608, 1854, 1899, 1903, 1916, 1930, 1941, 1953], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 50, 51, 52, 53, 55, 62, 63, 67, 68, 69, 77, 78, 79, 80, 81, 82, 87, 149, 190, 195, 207, 208, 220, 253, 288, 309, 311, 313, 317, 319, 396, 398, 399, 400, 445, 455, 480, 483, 484, 489, 491, 494, 495, 509, 511, 513, 533, 540, 579, 599, 613, 614, 676, 680, 683, 684, 685, 686, 690, 691, 692, 693, 731, 744, 753, 756, 762, 763, 764, 765, 768, 769, 770, 775, 776, 778, 779, 781, 782, 783, 788, 789, 790, 791, 795, 798, 811, 813, 815, 816, 817, 818, 821, 823, 833, 834, 850, 855, 860, 873, 874, 876, 880, 881, 885, 886, 888, 889, 890, 891, 892, 897, 898, 900, 901, 902, 903, 904, 905, 909, 910, 912, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 933, 934, 940, 947, 951, 953, 956, 962, 966, 976, 977, 983, 990, 1006, 1017, 1018, 1020, 1021, 1022, 1031, 1044, 1045, 1046, 1057, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1074, 1075, 1079, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1122, 1124, 1125, 1126, 1127, 1128, 1131, 1134, 1137, 1140, 1141, 1142, 1145, 1146, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1167, 1171, 1175, 1178, 1198, 1201, 1204, 1206, 1208, 1211, 1212, 1214, 1216, 1217, 1220, 1221, 1225, 1226, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1246, 1247, 1248, 1250, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1267, 1270, 1272, 1273, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1301, 1309, 1310, 1314, 1315, 1316, 1319, 1320, 1324, 1330, 1333, 1335, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1379, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1424, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1439, 1441, 1448, 1449, 1451, 1452, 1462, 1463, 1465, 1473, 1476, 1477, 1482, 1483, 1485, 1486, 1498, 1501, 1502, 1516, 1517, 1524, 1525, 1526, 1528, 1529, 1532, 1533, 1535, 1544, 1545, 1557, 1558, 1559, 1568, 1571, 1583, 1586, 1602, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1640, 1641, 1644, 1650, 1654, 1655, 1658, 1660, 1661, 1662, 1668, 1670, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1711, 1712, 1715, 1718, 1721, 1726, 1727, 1728, 1730, 1732, 1734, 1739, 1741, 1743, 1745, 1746, 1748, 1750, 1753, 1760, 1761, 1762, 1763, 1770, 1771, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1791, 1797, 1799, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1816, 1817, 1818, 1822, 1823, 1832, 1838, 1839, 1840, 1842, 1843, 1846, 1847, 1848, 1849, 1856, 1857, 1860, 1862, 1863, 1864, 1866, 1868, 1871, 1875, 1877, 1878, 1879, 1881, 1882, 1886, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1945, 1947, 1948, 1949, 1950, 1952, 1953, 1954, 1955, 1956, 1957, 1960, 1961, 1962, 1963, 1965], "state": [0, 1, 2, 5, 9, 20, 23, 25, 27, 29, 31, 33, 40, 43, 46, 54, 87, 744, 756, 832, 955, 1006, 1007, 1011, 1016, 1020, 1030, 1045, 1046, 1131, 1140, 1153, 1201, 1204, 1216, 1273, 1313, 1320, 1386, 1387, 1404, 1405, 1434, 1449, 1451, 1481, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1728, 1771, 1797, 1860, 1888, 1899, 1900, 1903, 1904, 1905, 1909, 1913, 1916, 1918, 1921, 1929, 1943, 1948, 1950, 1951, 1952, 1953, 1959], "thread": [0, 1, 3, 20, 23, 25, 31, 42, 46, 53, 977, 1078, 1151, 1152, 1176, 1312, 1371, 1659, 1767, 1768, 1769, 1859, 1876, 1877, 1890, 1899, 1903, 1910, 1913, 1930, 1932, 1942, 1950], "must": [0, 3, 5, 6, 9, 13, 20, 23, 25, 27, 29, 30, 31, 38, 41, 42, 46, 49, 51, 53, 54, 55, 62, 63, 87, 96, 138, 152, 153, 195, 258, 311, 313, 319, 396, 398, 400, 509, 540, 541, 562, 579, 580, 581, 583, 584, 613, 682, 683, 684, 685, 686, 687, 693, 744, 753, 768, 769, 770, 789, 811, 813, 855, 856, 874, 880, 885, 886, 887, 888, 890, 896, 898, 900, 901, 902, 904, 905, 916, 918, 920, 921, 922, 923, 924, 925, 928, 932, 935, 956, 966, 976, 977, 987, 988, 989, 991, 1017, 1018, 1020, 1062, 1064, 1065, 1066, 1068, 1071, 1072, 1074, 1095, 1096, 1097, 1102, 1104, 1105, 1106, 1107, 1108, 1115, 1116, 1125, 1127, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1154, 1163, 1164, 1167, 1178, 1198, 1201, 1211, 1216, 1223, 1226, 1255, 1256, 1257, 1258, 1264, 1266, 1267, 1270, 1273, 1291, 1293, 1294, 1295, 1301, 1308, 1324, 1330, 1333, 1334, 1338, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1381, 1382, 1383, 1388, 1389, 1395, 1427, 1434, 1437, 1440, 1465, 1471, 1486, 1506, 1515, 1517, 1525, 1544, 1557, 1558, 1559, 1577, 1614, 1637, 1647, 1648, 1654, 1656, 1661, 1668, 1669, 1701, 1703, 1710, 1711, 1714, 1715, 1718, 1726, 1727, 1748, 1757, 1760, 1769, 1785, 1796, 1799, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1823, 1833, 1837, 1838, 1842, 1847, 1849, 1853, 1857, 1860, 1865, 1866, 1868, 1869, 1871, 1877, 1878, 1879, 1880, 1887, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1909, 1913, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1941, 1948, 1949, 1951, 1953, 1954, 1956, 1962, 1963, 1964], "invok": [0, 2, 8, 14, 17, 20, 23, 38, 40, 41, 53, 54, 897, 899, 1017, 1018, 1201, 1204, 1210, 1371, 1434, 1607, 1609, 1612, 1613, 1658, 1697, 1703, 1877, 1880, 1881, 1888, 1899, 1902, 1903, 1904, 1905, 1906, 1910, 1911, 1922, 1930, 1931, 1948, 1952, 1953, 1954, 1956], "affect": [0, 1, 2, 7, 9, 17, 19, 30, 46, 220, 221, 781, 978, 980, 1078, 1125, 1148, 1176, 1201, 1315, 1316, 1404, 1434, 1449, 1486, 1602, 1615, 1659, 1761, 1764, 1765, 1767, 1899, 1900, 1903, 1908, 1911, 1914, 1915, 1936, 1959, 1961], "dataparallel": [0, 23, 1598, 1614, 1650, 1876, 1900, 1907, 1913, 1930], "parallel": [0, 12, 13, 20, 21, 23, 24, 25, 27, 40, 41, 46, 1151, 1152, 1204, 1371, 1440, 1473, 1533, 1614, 1768, 1769, 1876, 1880, 1899, 1900, 1902, 1913, 1917, 1930, 1932, 1947, 1953], "distributeddataparallel": [0, 20, 21, 23, 24, 27, 41, 46, 1371, 1473, 1913, 1923, 1930, 1953], "than": [0, 3, 4, 5, 6, 8, 9, 11, 13, 20, 21, 23, 24, 25, 29, 30, 31, 33, 37, 40, 41, 42, 46, 51, 54, 55, 56, 63, 149, 252, 495, 541, 613, 676, 689, 695, 775, 781, 889, 898, 899, 913, 919, 930, 937, 938, 942, 943, 989, 1027, 1031, 1044, 1062, 1063, 1114, 1115, 1116, 1118, 1122, 1127, 1138, 1145, 1157, 1161, 1175, 1186, 1198, 1199, 1202, 1212, 1221, 1222, 1225, 1230, 1231, 1237, 1241, 1246, 1254, 1255, 1257, 1258, 1261, 1266, 1272, 1276, 1289, 1292, 1298, 1301, 1303, 1306, 1319, 1324, 1334, 1350, 1351, 1362, 1363, 1364, 1371, 1377, 1378, 1395, 1404, 1426, 1440, 1448, 1465, 1471, 1481, 1482, 1483, 1498, 1508, 1509, 1510, 1524, 1525, 1533, 1544, 1570, 1583, 1601, 1602, 1605, 1614, 1621, 1622, 1623, 1624, 1650, 1655, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1703, 1705, 1719, 1720, 1741, 1742, 1770, 1803, 1804, 1805, 1806, 1808, 1809, 1839, 1847, 1849, 1857, 1875, 1877, 1879, 1880, 1882, 1894, 1895, 1896, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1930, 1934, 1935, 1937, 1939, 1940, 1941, 1948, 1949, 1952, 1953, 1954, 1955, 1957, 1958, 1959, 1961, 1963], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 40, 42, 43, 46, 50, 51, 52, 53, 54, 55, 60, 62, 63, 67, 69, 77, 78, 79, 80, 82, 149, 220, 252, 350, 400, 483, 509, 516, 541, 556, 693, 744, 753, 789, 850, 851, 852, 876, 882, 888, 889, 890, 891, 893, 899, 919, 930, 932, 942, 946, 950, 973, 978, 980, 985, 987, 991, 1018, 1041, 1052, 1063, 1074, 1078, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1113, 1117, 1120, 1121, 1122, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1154, 1163, 1164, 1176, 1180, 1183, 1186, 1205, 1210, 1214, 1220, 1221, 1231, 1232, 1242, 1245, 1246, 1248, 1253, 1257, 1259, 1261, 1264, 1270, 1271, 1287, 1295, 1299, 1304, 1324, 1330, 1342, 1347, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1365, 1366, 1367, 1378, 1382, 1383, 1388, 1397, 1398, 1399, 1401, 1402, 1403, 1413, 1414, 1415, 1425, 1434, 1438, 1440, 1473, 1481, 1486, 1498, 1508, 1511, 1512, 1513, 1528, 1529, 1530, 1535, 1570, 1583, 1601, 1605, 1614, 1615, 1620, 1622, 1623, 1627, 1637, 1648, 1657, 1658, 1659, 1660, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1699, 1701, 1702, 1703, 1723, 1724, 1741, 1757, 1765, 1767, 1770, 1773, 1813, 1822, 1837, 1842, 1843, 1845, 1853, 1856, 1857, 1860, 1868, 1876, 1877, 1880, 1884, 1886, 1888, 1890, 1892, 1893, 1894, 1895, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1926, 1930, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1948, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1960, 1962, 1963], "gpu": [0, 1, 2, 3, 4, 7, 13, 16, 18, 20, 21, 25, 31, 41, 42, 46, 53, 195, 208, 287, 330, 599, 756, 948, 982, 983, 986, 987, 988, 989, 990, 991, 997, 998, 999, 1006, 1012, 1013, 1019, 1021, 1022, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1037, 1038, 1039, 1040, 1041, 1042, 1045, 1051, 1052, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1122, 1201, 1210, 1247, 1272, 1301, 1309, 1310, 1311, 1315, 1316, 1342, 1371, 1386, 1404, 1434, 1449, 1450, 1473, 1598, 1614, 1647, 1822, 1876, 1877, 1888, 1891, 1903, 1905, 1909, 1911, 1912, 1914, 1915, 1917, 1925, 1930, 1934, 1936, 1940, 1942, 1945, 1948, 1950, 1952, 1955, 1960, 1961, 1963], "per": [0, 13, 20, 21, 23, 24, 25, 27, 28, 30, 31, 33, 39, 41, 42, 46, 47, 52, 469, 470, 471, 730, 731, 797, 804, 815, 818, 821, 829, 841, 849, 888, 897, 899, 948, 981, 1057, 1088, 1132, 1142, 1273, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1371, 1378, 1389, 1394, 1397, 1398, 1399, 1400, 1401, 1406, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1614, 1658, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1711, 1723, 1770, 1772, 1823, 1839, 1843, 1860, 1868, 1890, 1894, 1896, 1902, 1903, 1904, 1906, 1910, 1923, 1925, 1926, 1928, 1931, 1934, 1939, 1951], "process": [0, 1, 3, 11, 13, 21, 23, 24, 25, 29, 31, 32, 33, 34, 40, 41, 42, 43, 46, 54, 79, 81, 977, 1013, 1019, 1044, 1201, 1211, 1273, 1310, 1319, 1350, 1351, 1368, 1370, 1377, 1378, 1394, 1401, 1425, 1426, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1477, 1479, 1481, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1700, 1706, 1772, 1786, 1860, 1875, 1876, 1877, 1890, 1892, 1893, 1894, 1900, 1902, 1903, 1904, 1905, 1910, 1911, 1913, 1915, 1917, 1918, 1922, 1923, 1924, 1925, 1928, 1930, 1932, 1934, 1936, 1943, 1947, 1951, 1953, 1956, 1961, 1963], "work": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 23, 24, 25, 27, 28, 29, 30, 31, 40, 41, 42, 43, 46, 47, 51, 54, 55, 62, 63, 118, 149, 350, 442, 443, 444, 445, 446, 483, 583, 584, 817, 857, 858, 889, 903, 948, 975, 977, 978, 980, 1009, 1020, 1021, 1041, 1075, 1077, 1094, 1114, 1115, 1116, 1131, 1201, 1205, 1212, 1213, 1236, 1237, 1264, 1265, 1273, 1312, 1371, 1431, 1434, 1450, 1467, 1571, 1589, 1614, 1673, 1703, 1730, 1734, 1736, 1762, 1768, 1833, 1836, 1860, 1875, 1877, 1880, 1881, 1891, 1892, 1893, 1894, 1895, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1911, 1913, 1916, 1917, 1918, 1922, 1923, 1925, 1928, 1930, 1931, 1940, 1942, 1949, 1950, 1951, 1954, 1955, 1956, 1959, 1960, 1963, 1964], "str": [0, 1, 2, 3, 5, 13, 20, 21, 23, 25, 27, 28, 29, 31, 34, 38, 40, 42, 46, 54, 319, 509, 513, 599, 775, 781, 788, 789, 790, 811, 812, 813, 850, 897, 899, 907, 911, 912, 936, 948, 954, 976, 987, 988, 989, 991, 1000, 1001, 1003, 1004, 1005, 1017, 1018, 1019, 1031, 1032, 1034, 1036, 1048, 1069, 1074, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1130, 1131, 1135, 1140, 1142, 1150, 1199, 1200, 1201, 1202, 1204, 1205, 1207, 1210, 1246, 1259, 1264, 1265, 1272, 1273, 1302, 1315, 1316, 1331, 1350, 1351, 1357, 1362, 1363, 1364, 1368, 1370, 1378, 1384, 1388, 1394, 1395, 1400, 1401, 1410, 1411, 1412, 1425, 1426, 1434, 1435, 1437, 1438, 1439, 1441, 1444, 1448, 1451, 1462, 1465, 1466, 1477, 1479, 1481, 1482, 1483, 1484, 1486, 1505, 1506, 1516, 1517, 1525, 1530, 1533, 1544, 1545, 1568, 1576, 1602, 1614, 1621, 1622, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1655, 1656, 1658, 1668, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1705, 1722, 1753, 1757, 1764, 1765, 1799, 1818, 1859, 1860, 1868, 1875, 1877, 1878, 1879, 1880, 1881, 1888, 1889, 1890, 1892, 1894, 1898, 1900, 1916, 1918, 1920, 1921, 1922, 1923, 1924, 1929, 1930, 1936, 1939, 1941, 1943, 1944, 1953, 1956, 1958, 1962, 1963, 1964], "possibl": [0, 2, 9, 13, 14, 17, 23, 25, 29, 50, 51, 54, 493, 494, 576, 613, 854, 875, 876, 942, 948, 984, 1075, 1076, 1077, 1122, 1134, 1201, 1214, 1241, 1254, 1257, 1258, 1261, 1266, 1272, 1351, 1357, 1434, 1440, 1524, 1525, 1544, 1577, 1602, 1626, 1627, 1741, 1744, 1759, 1810, 1818, 1836, 1877, 1879, 1880, 1892, 1893, 1898, 1900, 1902, 1903, 1904, 1905, 1908, 1913, 1914, 1915, 1917, 1922, 1925, 1930, 1932, 1937, 1941, 1945, 1948, 1949, 1951, 1952, 1953, 1954, 1956, 1959, 1963], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 17, 20, 21, 24, 25, 27, 29, 31, 32, 34, 37, 38, 40, 41, 46, 48, 51, 53, 54, 55, 57, 60, 63, 87, 100, 101, 102, 103, 118, 149, 153, 220, 233, 234, 235, 236, 252, 257, 258, 270, 271, 297, 309, 311, 313, 314, 315, 316, 317, 319, 321, 324, 350, 397, 398, 416, 417, 419, 420, 468, 478, 480, 495, 509, 511, 513, 533, 540, 556, 579, 580, 581, 583, 584, 595, 596, 676, 677, 680, 683, 684, 687, 691, 692, 693, 731, 752, 760, 766, 767, 775, 780, 781, 783, 789, 791, 792, 795, 798, 815, 816, 817, 818, 821, 822, 823, 850, 855, 861, 870, 871, 872, 876, 881, 885, 887, 889, 891, 892, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 917, 918, 919, 924, 926, 932, 936, 941, 943, 953, 961, 962, 965, 978, 1008, 1017, 1018, 1031, 1044, 1053, 1054, 1057, 1065, 1066, 1075, 1076, 1077, 1079, 1088, 1089, 1091, 1093, 1095, 1096, 1097, 1102, 1104, 1105, 1106, 1107, 1108, 1117, 1122, 1128, 1130, 1131, 1132, 1133, 1137, 1138, 1140, 1141, 1143, 1145, 1149, 1150, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1171, 1186, 1191, 1192, 1193, 1194, 1197, 1198, 1199, 1201, 1202, 1204, 1207, 1208, 1216, 1219, 1221, 1222, 1225, 1229, 1230, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1246, 1250, 1253, 1255, 1257, 1258, 1260, 1264, 1265, 1270, 1271, 1272, 1273, 1276, 1281, 1287, 1289, 1290, 1293, 1298, 1300, 1301, 1303, 1306, 1319, 1322, 1324, 1328, 1329, 1330, 1331, 1334, 1335, 1338, 1342, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376, 1377, 1378, 1379, 1381, 1388, 1389, 1390, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1420, 1421, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1462, 1465, 1467, 1468, 1469, 1470, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1485, 1486, 1505, 1506, 1508, 1509, 1510, 1515, 1516, 1525, 1526, 1530, 1533, 1535, 1544, 1545, 1546, 1557, 1558, 1559, 1568, 1569, 1570, 1571, 1573, 1576, 1583, 1596, 1597, 1602, 1604, 1605, 1607, 1609, 1612, 1613, 1614, 1619, 1621, 1622, 1623, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1640, 1641, 1647, 1650, 1651, 1654, 1656, 1660, 1661, 1665, 1666, 1670, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1711, 1715, 1718, 1722, 1724, 1725, 1737, 1739, 1741, 1742, 1743, 1748, 1749, 1750, 1757, 1760, 1770, 1773, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1791, 1795, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1822, 1823, 1833, 1837, 1840, 1843, 1846, 1847, 1848, 1849, 1851, 1854, 1855, 1856, 1857, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1881, 1887, 1889, 1890, 1892, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1924, 1925, 1928, 1929, 1930, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1948, 1950, 1951, 1953, 1956, 1957, 1958, 1962, 1963], "xpu": [0, 1201, 1434, 1924], "hpu": [0, 1936], "attribut": [0, 1, 11, 20, 21, 23, 24, 30, 54, 55, 80, 149, 288, 491, 492, 723, 734, 735, 736, 737, 738, 739, 741, 742, 752, 760, 787, 798, 811, 812, 813, 834, 835, 836, 854, 855, 885, 889, 891, 895, 1125, 1200, 1201, 1202, 1204, 1205, 1211, 1212, 1273, 1371, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1434, 1477, 1614, 1615, 1625, 1626, 1627, 1648, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1858, 1861, 1876, 1878, 1881, 1895, 1899, 1900, 1903, 1905, 1906, 1911, 1916, 1918, 1922, 1925, 1930, 1940, 1941, 1956, 1962, 1964, 1965], "thu": [0, 1, 11, 20, 23, 29, 41, 46, 54, 781, 818, 821, 850, 1074, 1095, 1264, 1295, 1374, 1486, 1602, 1614, 1678, 1679, 1689, 1807, 1877, 1880, 1887, 1888, 1900, 1902, 1905, 1907, 1908, 1910, 1911, 1918, 1925, 1930, 1934, 1938, 1940, 1941], "obtain": [0, 3, 20, 23, 29, 33, 53, 54, 492, 914, 1146, 1319, 1357, 1441, 1517, 1614, 1682, 1711, 1728, 1823, 1880, 1892, 1893, 1902, 1915, 1918, 1921, 1924, 1925, 1961], "bool": [0, 1, 2, 3, 5, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 40, 42, 46, 53, 54, 149, 195, 208, 243, 258, 317, 319, 326, 327, 328, 329, 331, 332, 337, 339, 442, 443, 444, 445, 446, 455, 468, 492, 513, 577, 599, 676, 689, 690, 691, 692, 693, 695, 731, 754, 775, 776, 781, 790, 810, 861, 869, 870, 871, 872, 876, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 917, 920, 922, 923, 925, 926, 932, 933, 939, 940, 941, 947, 948, 949, 971, 977, 984, 1014, 1020, 1032, 1075, 1076, 1077, 1080, 1087, 1092, 1110, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1135, 1136, 1137, 1141, 1143, 1158, 1159, 1162, 1163, 1176, 1182, 1186, 1189, 1190, 1192, 1198, 1201, 1205, 1207, 1208, 1216, 1217, 1220, 1222, 1230, 1231, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1255, 1257, 1258, 1261, 1262, 1263, 1264, 1270, 1271, 1272, 1273, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1292, 1298, 1300, 1301, 1303, 1306, 1312, 1315, 1316, 1324, 1329, 1330, 1331, 1332, 1333, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1448, 1451, 1452, 1453, 1454, 1461, 1465, 1466, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1498, 1505, 1506, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1535, 1537, 1544, 1545, 1568, 1576, 1583, 1602, 1608, 1614, 1615, 1618, 1619, 1621, 1623, 1625, 1626, 1627, 1648, 1649, 1650, 1651, 1653, 1656, 1661, 1665, 1666, 1668, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1711, 1717, 1719, 1721, 1722, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1757, 1762, 1766, 1767, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1795, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 1817, 1818, 1821, 1822, 1830, 1836, 1840, 1845, 1854, 1855, 1857, 1858, 1860, 1862, 1863, 1864, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1889, 1890, 1892, 1893, 1894, 1895, 1909, 1916, 1918, 1920, 1922, 1923, 1924, 1929, 1930, 1934, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1951, 1958, 1962, 1964], "option": [0, 1, 3, 5, 13, 20, 23, 27, 28, 29, 31, 34, 38, 39, 40, 42, 43, 46, 54, 78, 87, 149, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 238, 265, 295, 323, 329, 391, 442, 443, 444, 445, 446, 484, 495, 496, 509, 516, 521, 533, 556, 576, 577, 579, 580, 581, 583, 584, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 731, 754, 775, 776, 781, 788, 790, 795, 814, 850, 855, 858, 861, 872, 874, 875, 876, 877, 878, 879, 880, 881, 888, 889, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 928, 932, 935, 937, 938, 939, 940, 941, 943, 945, 946, 947, 948, 953, 954, 960, 961, 963, 964, 965, 966, 969, 973, 974, 975, 977, 978, 980, 982, 986, 987, 989, 990, 991, 994, 995, 1002, 1003, 1006, 1009, 1017, 1018, 1019, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1044, 1045, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1071, 1073, 1074, 1075, 1076, 1077, 1079, 1084, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1127, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1143, 1144, 1145, 1146, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1175, 1178, 1190, 1192, 1195, 1196, 1198, 1199, 1201, 1202, 1205, 1207, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1312, 1315, 1316, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1388, 1391, 1392, 1393, 1394, 1395, 1400, 1401, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1425, 1426, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1452, 1453, 1454, 1461, 1465, 1466, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1486, 1487, 1488, 1498, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1528, 1529, 1530, 1533, 1535, 1544, 1545, 1552, 1557, 1558, 1559, 1568, 1569, 1576, 1583, 1589, 1590, 1602, 1610, 1611, 1614, 1615, 1621, 1622, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1653, 1655, 1656, 1658, 1660, 1661, 1662, 1665, 1666, 1667, 1668, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1696, 1709, 1710, 1711, 1714, 1718, 1719, 1721, 1722, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1741, 1742, 1743, 1750, 1752, 1757, 1770, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1833, 1834, 1835, 1836, 1837, 1840, 1842, 1845, 1846, 1847, 1848, 1849, 1851, 1854, 1855, 1857, 1862, 1863, 1864, 1865, 1870, 1871, 1873, 1874, 1875, 1877, 1878, 1880, 1882, 1884, 1886, 1888, 1889, 1890, 1895, 1898, 1903, 1905, 1906, 1907, 1910, 1911, 1915, 1916, 1918, 1922, 1924, 1925, 1930, 1934, 1935, 1937, 1939, 1941, 1944, 1945, 1953, 1956, 1960, 1962, 1963], "whether": [0, 1, 2, 7, 13, 20, 21, 23, 24, 25, 28, 29, 31, 39, 40, 46, 54, 82, 317, 319, 468, 513, 613, 676, 689, 691, 692, 695, 870, 871, 876, 885, 893, 896, 897, 899, 904, 905, 917, 926, 939, 940, 941, 947, 948, 949, 951, 953, 1016, 1032, 1130, 1142, 1158, 1159, 1176, 1198, 1201, 1208, 1209, 1217, 1222, 1230, 1231, 1237, 1239, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1255, 1257, 1258, 1261, 1262, 1263, 1264, 1272, 1288, 1290, 1298, 1300, 1301, 1303, 1306, 1324, 1329, 1330, 1331, 1332, 1357, 1368, 1394, 1400, 1434, 1443, 1448, 1483, 1495, 1496, 1497, 1517, 1545, 1576, 1608, 1614, 1621, 1623, 1626, 1639, 1653, 1656, 1661, 1670, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1697, 1709, 1719, 1722, 1766, 1767, 1816, 1817, 1818, 1821, 1822, 1840, 1845, 1854, 1855, 1857, 1858, 1863, 1864, 1868, 1875, 1880, 1886, 1887, 1889, 1895, 1899, 1903, 1905, 1909, 1918, 1923, 1925, 1930, 1934, 1936, 1938, 1939, 1944, 1953, 1956, 1963], "torch_dtyp": 0, "weight": [0, 20, 23, 29, 46, 52, 54, 55, 155, 299, 359, 360, 492, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 745, 747, 748, 749, 750, 752, 756, 757, 759, 760, 761, 768, 769, 770, 777, 788, 789, 790, 804, 805, 829, 831, 837, 841, 845, 846, 847, 848, 849, 854, 855, 857, 858, 919, 966, 1130, 1132, 1140, 1142, 1162, 1163, 1201, 1205, 1210, 1212, 1217, 1226, 1324, 1350, 1351, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1377, 1378, 1386, 1387, 1389, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1438, 1439, 1440, 1441, 1442, 1449, 1451, 1463, 1477, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1524, 1525, 1534, 1543, 1547, 1550, 1565, 1567, 1568, 1577, 1586, 1605, 1614, 1621, 1622, 1624, 1626, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1654, 1655, 1656, 1658, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1725, 1857, 1868, 1875, 1876, 1878, 1879, 1880, 1888, 1889, 1894, 1895, 1898, 1905, 1907, 1911, 1916, 1925, 1926, 1927, 1928, 1934, 1939, 1943, 1944, 1953, 1958], "cach": [0, 2, 3, 29, 54, 483, 948, 955, 999, 1000, 1017, 1020, 1025, 1027, 1029, 1031, 1039, 1044, 1309, 1310, 1311, 1615, 1626, 1658, 1892, 1907, 1948, 1953, 1957, 1961, 1963], "insid": [0, 1, 7, 20, 40, 46, 51, 53, 54, 893, 894, 895, 896, 983, 1020, 1132, 1136, 1141, 1212, 1614, 1877, 1879, 1880, 1888, 1899, 1903, 1905, 1906, 1910, 1918, 1934, 1943, 1952, 1956, 1963], "custom_fwd": [0, 1899], "fwd": [0, 1957], "cast_input": [0, 1899], "helper": [0, 3, 5, 23, 50, 54, 1473, 1875, 1876, 1879, 1903, 1904, 1918, 1922, 1930, 1962, 1964], "subclass": [0, 1, 13, 20, 25, 29, 33, 51, 54, 138, 533, 885, 886, 887, 1199, 1202, 1211, 1434, 1615, 1628, 1633, 1654, 1877, 1880, 1881, 1887, 1899, 1911, 1918, 1919, 1930, 1934, 1950, 1956, 1964], "page": [0, 6, 7, 9, 20, 24, 41, 43, 1273, 1477, 1479, 1481, 1903, 1904, 1911, 1920, 1930, 1960], "incom": [0, 23, 42, 777, 815, 816, 817, 818, 821, 1355, 1421, 1504, 1550, 1892, 1900], "non": [0, 1, 3, 5, 13, 19, 21, 23, 24, 25, 28, 29, 31, 33, 40, 42, 43, 46, 53, 55, 64, 79, 87, 149, 333, 500, 509, 513, 541, 694, 730, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 761, 768, 769, 770, 834, 861, 873, 885, 887, 889, 894, 896, 904, 905, 919, 932, 935, 948, 959, 960, 965, 1031, 1120, 1121, 1127, 1131, 1136, 1142, 1178, 1201, 1204, 1213, 1216, 1217, 1236, 1237, 1244, 1248, 1249, 1262, 1264, 1273, 1283, 1290, 1295, 1300, 1324, 1329, 1330, 1334, 1347, 1348, 1349, 1363, 1364, 1366, 1367, 1370, 1380, 1386, 1403, 1404, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1439, 1441, 1449, 1451, 1465, 1516, 1535, 1563, 1568, 1610, 1611, 1614, 1660, 1692, 1714, 1757, 1758, 1773, 1785, 1799, 1800, 1804, 1805, 1806, 1807, 1808, 1809, 1838, 1854, 1868, 1875, 1876, 1877, 1879, 1880, 1882, 1892, 1895, 1898, 1901, 1905, 1906, 1907, 1911, 1915, 1918, 1923, 1924, 1929, 1930, 1932, 1934, 1935, 1937, 1938, 1939, 1941, 1948, 1951, 1952, 1953, 1954, 1961, 1962, 1964], "intern": [0, 3, 8, 9, 13, 20, 21, 23, 25, 29, 31, 37, 46, 51, 54, 975, 1009, 1030, 1131, 1201, 1237, 1239, 1255, 1258, 1281, 1352, 1353, 1354, 1388, 1473, 1508, 1509, 1510, 1533, 1623, 1670, 1765, 1807, 1857, 1881, 1899, 1900, 1902, 1903, 1908, 1914, 1915, 1931, 1932, 1936, 1938, 1945, 1953, 1956, 1963], "current": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 20, 23, 25, 27, 28, 29, 31, 33, 40, 41, 46, 47, 53, 54, 87, 149, 208, 220, 483, 493, 494, 495, 737, 739, 777, 789, 791, 813, 855, 857, 858, 861, 875, 876, 886, 889, 890, 897, 898, 899, 904, 917, 926, 969, 971, 975, 976, 977, 978, 980, 985, 986, 989, 990, 992, 993, 994, 995, 998, 999, 1000, 1002, 1003, 1006, 1008, 1009, 1012, 1014, 1015, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1041, 1043, 1045, 1047, 1050, 1051, 1052, 1075, 1077, 1087, 1092, 1110, 1126, 1128, 1148, 1149, 1150, 1158, 1159, 1184, 1185, 1201, 1205, 1216, 1220, 1271, 1273, 1287, 1302, 1309, 1311, 1312, 1374, 1377, 1381, 1434, 1473, 1481, 1485, 1527, 1533, 1544, 1583, 1601, 1602, 1604, 1614, 1627, 1631, 1632, 1633, 1634, 1635, 1640, 1641, 1642, 1643, 1665, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1721, 1730, 1732, 1734, 1736, 1737, 1761, 1765, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1797, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1847, 1849, 1854, 1859, 1860, 1873, 1876, 1877, 1879, 1880, 1881, 1882, 1884, 1887, 1890, 1892, 1895, 1899, 1900, 1903, 1904, 1909, 1910, 1911, 1912, 1913, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1928, 1930, 1931, 1934, 1936, 1937, 1939, 1940, 1943, 1951, 1952, 1953, 1956, 1959, 1960, 1963, 1964], "outsid": [0, 5, 9, 20, 33, 46, 51, 680, 791, 881, 1130, 1132, 1136, 1141, 1202, 1533, 1614, 1694, 1695, 1700, 1701, 1707, 1879, 1880, 1898, 1900, 1903, 1906, 1907, 1941, 1953, 1959], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 13, 14, 16, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 37, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 149, 195, 208, 253, 258, 333, 442, 443, 444, 445, 446, 470, 471, 492, 494, 540, 576, 577, 599, 600, 614, 676, 685, 689, 691, 692, 693, 695, 731, 756, 775, 777, 781, 783, 787, 793, 834, 836, 843, 854, 860, 870, 871, 873, 885, 888, 889, 891, 893, 899, 904, 905, 918, 936, 939, 940, 948, 950, 959, 960, 961, 974, 977, 978, 980, 985, 1013, 1016, 1017, 1062, 1064, 1078, 1110, 1122, 1130, 1131, 1134, 1135, 1138, 1142, 1154, 1163, 1164, 1175, 1198, 1201, 1205, 1208, 1211, 1212, 1213, 1216, 1221, 1222, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1267, 1268, 1272, 1281, 1288, 1290, 1295, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1312, 1329, 1330, 1331, 1332, 1350, 1351, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1372, 1378, 1381, 1382, 1383, 1386, 1389, 1394, 1397, 1398, 1399, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1438, 1439, 1440, 1441, 1442, 1449, 1465, 1467, 1473, 1481, 1485, 1486, 1498, 1508, 1509, 1510, 1516, 1525, 1528, 1529, 1533, 1544, 1568, 1570, 1571, 1573, 1577, 1583, 1589, 1602, 1604, 1605, 1608, 1609, 1614, 1621, 1623, 1625, 1628, 1632, 1634, 1637, 1647, 1648, 1655, 1656, 1660, 1662, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1699, 1703, 1705, 1709, 1719, 1721, 1722, 1723, 1724, 1741, 1743, 1753, 1765, 1787, 1800, 1801, 1802, 1813, 1815, 1816, 1817, 1818, 1821, 1822, 1839, 1845, 1863, 1864, 1868, 1877, 1879, 1880, 1886, 1887, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1940, 1941, 1942, 1945, 1948, 1949, 1950, 1952, 1953, 1954, 1956, 1957, 1959, 1963], "effect": [0, 3, 7, 13, 20, 21, 23, 29, 42, 46, 51, 54, 55, 58, 195, 208, 599, 731, 775, 781, 1009, 1057, 1142, 1201, 1243, 1244, 1245, 1246, 1302, 1342, 1357, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1434, 1440, 1486, 1544, 1571, 1602, 1608, 1614, 1615, 1633, 1689, 1697, 1797, 1802, 1822, 1843, 1858, 1868, 1875, 1877, 1888, 1898, 1899, 1900, 1903, 1905, 1925, 1928, 1936, 1937, 1939, 1948], "custom_bwd": [0, 1899], "bwd": 0, "small": [0, 3, 7, 9, 20, 21, 23, 29, 40, 861, 904, 905, 948, 988, 1031, 1263, 1264, 1276, 1278, 1342, 1369, 1443, 1448, 1462, 1482, 1486, 1515, 1569, 1576, 1614, 1694, 1700, 1709, 1822, 1877, 1879, 1880, 1903, 1905, 1907, 1911, 1914, 1916, 1918, 1922, 1925, 1926, 1934, 1935, 1941, 1948, 1952, 1953, 1954, 1957, 1961, 1963], "magnitud": [0, 961, 1658, 1773, 1898, 1899, 1903], "represent": [0, 3, 13, 20, 23, 25, 38, 54, 478, 754, 822, 978, 1090, 1091, 1093, 1117, 1146, 1201, 1240, 1243, 1245, 1248, 1328, 1434, 1440, 1668, 1709, 1876, 1877, 1880, 1895, 1905, 1914, 1918, 1922, 1925, 1934, 1941, 1951, 1953, 1963, 1965], "These": [0, 1, 2, 3, 8, 13, 14, 20, 23, 24, 29, 47, 49, 52, 54, 790, 876, 966, 1074, 1138, 1198, 1201, 1243, 1308, 1342, 1434, 1605, 1622, 1876, 1877, 1878, 1879, 1880, 1890, 1893, 1894, 1896, 1899, 1900, 1903, 1904, 1905, 1911, 1914, 1916, 1918, 1922, 1928, 1930, 1931, 1937, 1942, 1948, 1951, 1953, 1956, 1959, 1963, 1964], "flush": [0, 1, 25, 1031, 1211, 1753, 1766, 1914, 1939], "zero": [0, 1, 2, 21, 23, 24, 27, 29, 42, 46, 51, 54, 149, 258, 313, 509, 511, 540, 541, 580, 581, 583, 584, 619, 675, 687, 694, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 756, 760, 764, 765, 768, 769, 770, 771, 773, 776, 777, 791, 795, 815, 816, 817, 818, 821, 826, 873, 882, 883, 884, 889, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 918, 919, 939, 940, 941, 946, 961, 965, 1020, 1031, 1035, 1036, 1065, 1069, 1087, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1122, 1127, 1130, 1138, 1160, 1161, 1164, 1186, 1198, 1201, 1212, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1273, 1281, 1282, 1283, 1284, 1285, 1290, 1291, 1324, 1328, 1332, 1346, 1347, 1348, 1349, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1389, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1443, 1446, 1447, 1448, 1449, 1451, 1471, 1485, 1486, 1489, 1490, 1491, 1500, 1501, 1502, 1511, 1512, 1513, 1515, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1533, 1554, 1555, 1569, 1570, 1571, 1583, 1631, 1632, 1633, 1634, 1649, 1656, 1660, 1664, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1709, 1721, 1723, 1724, 1725, 1741, 1750, 1760, 1787, 1791, 1800, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1822, 1836, 1837, 1839, 1845, 1874, 1877, 1878, 1880, 1882, 1890, 1892, 1893, 1894, 1895, 1898, 1900, 1903, 1905, 1911, 1914, 1917, 1918, 1920, 1922, 1924, 1925, 1928, 1930, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1952], "underflow": [0, 1400, 1899], "updat": [0, 9, 11, 20, 21, 25, 27, 31, 40, 46, 49, 50, 54, 81, 220, 509, 511, 756, 795, 796, 820, 1130, 1139, 1201, 1352, 1353, 1354, 1371, 1377, 1378, 1386, 1397, 1398, 1399, 1434, 1435, 1444, 1473, 1524, 1525, 1622, 1626, 1656, 1675, 1681, 1686, 1688, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1875, 1877, 1888, 1899, 1900, 1903, 1904, 1905, 1911, 1913, 1916, 1917, 1918, 1920, 1921, 1923, 1925, 1930, 1931, 1932, 1939, 1948, 1962], "lost": [0, 31, 41, 43, 1371, 1430, 1431, 1432], "To": [0, 1, 2, 3, 4, 5, 6, 9, 13, 14, 20, 21, 23, 24, 27, 28, 29, 31, 32, 38, 39, 41, 42, 46, 51, 54, 77, 78, 81, 333, 495, 553, 730, 890, 903, 945, 948, 976, 1021, 1041, 1062, 1064, 1074, 1102, 1104, 1108, 1119, 1201, 1202, 1204, 1205, 1211, 1212, 1246, 1268, 1273, 1301, 1342, 1351, 1374, 1400, 1430, 1431, 1432, 1434, 1487, 1488, 1506, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1658, 1703, 1711, 1722, 1761, 1769, 1823, 1875, 1877, 1879, 1880, 1884, 1892, 1893, 1894, 1896, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1930, 1931, 1932, 1934, 1937, 1938, 1939, 1940, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1961, 1962, 1963], "prevent": [0, 7, 8, 20, 21, 23, 24, 31, 46, 54, 495, 731, 895, 977, 1055, 1056, 1075, 1076, 1077, 1198, 1300, 1312, 1329, 1332, 1372, 1440, 1465, 1552, 1589, 1590, 1605, 1614, 1719, 1798, 1801, 1821, 1847, 1849, 1857, 1892, 1899, 1900, 1903, 1904, 1907, 1911, 1922, 1924, 1932, 1934, 1935, 1948, 1952, 1953, 1956], "multipli": [0, 23, 311, 319, 420, 509, 681, 682, 683, 684, 685, 686, 687, 756, 775, 781, 782, 783, 916, 928, 1044, 1057, 1074, 1154, 1165, 1224, 1236, 1237, 1241, 1254, 1256, 1258, 1264, 1266, 1295, 1305, 1319, 1323, 1326, 1350, 1362, 1363, 1364, 1367, 1386, 1404, 1486, 1487, 1488, 1544, 1602, 1603, 1604, 1626, 1694, 1700, 1702, 1709, 1793, 1796, 1799, 1800, 1814, 1818, 1819, 1822, 1843, 1878, 1893, 1903, 1908, 1911, 1914, 1920, 1934, 1935, 1953], "factor": [0, 3, 21, 29, 54, 685, 686, 687, 795, 815, 916, 939, 940, 941, 1243, 1244, 1245, 1248, 1250, 1290, 1291, 1292, 1372, 1395, 1422, 1446, 1447, 1574, 1575, 1583, 1689, 1690, 1691, 1693, 1694, 1696, 1698, 1699, 1700, 1701, 1702, 1705, 1706, 1707, 1721, 1779, 1800, 1822, 1898, 1899, 1925, 1934, 1953], "flow": [0, 55, 61, 63, 945, 1213, 1216, 1498, 1533, 1614, 1877, 1898, 1900, 1903, 1905, 1916, 1918, 1932, 1948, 1949, 1951, 1956, 1961], "through": [0, 5, 7, 9, 14, 20, 23, 25, 29, 33, 46, 51, 53, 54, 55, 58, 60, 492, 788, 836, 850, 857, 858, 895, 904, 905, 982, 1020, 1101, 1134, 1142, 1199, 1202, 1204, 1216, 1217, 1219, 1236, 1237, 1258, 1264, 1281, 1441, 1478, 1479, 1480, 1481, 1535, 1605, 1614, 1626, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1721, 1868, 1875, 1876, 1879, 1880, 1884, 1886, 1890, 1892, 1893, 1894, 1900, 1903, 1905, 1907, 1908, 1910, 1911, 1917, 1918, 1922, 1923, 1925, 1928, 1930, 1931, 1932, 1934, 1938, 1942, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1962, 1963, 1965], "word": [0, 1, 8, 23, 40, 41, 49, 53, 54, 932, 1342, 1362, 1363, 1364, 1377, 1378, 1477, 1524, 1525, 1544, 1602, 1614, 1621, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1879, 1900, 1907, 1922, 1931], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 13, 20, 23, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 54, 55, 62, 63, 79, 152, 153, 220, 221, 311, 313, 319, 333, 396, 400, 445, 455, 468, 483, 484, 499, 509, 511, 513, 516, 540, 613, 676, 685, 689, 691, 692, 693, 695, 811, 813, 837, 876, 885, 889, 897, 899, 909, 910, 917, 918, 926, 935, 936, 948, 951, 966, 980, 989, 990, 1020, 1031, 1065, 1073, 1080, 1094, 1104, 1109, 1111, 1125, 1130, 1131, 1142, 1143, 1144, 1158, 1159, 1162, 1163, 1175, 1176, 1198, 1200, 1201, 1204, 1205, 1208, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1222, 1223, 1232, 1236, 1237, 1253, 1260, 1261, 1264, 1266, 1272, 1281, 1283, 1288, 1295, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1324, 1329, 1330, 1332, 1334, 1342, 1346, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1377, 1378, 1382, 1383, 1388, 1393, 1397, 1398, 1399, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1481, 1483, 1515, 1524, 1525, 1528, 1529, 1533, 1550, 1568, 1570, 1573, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1618, 1619, 1621, 1623, 1626, 1650, 1654, 1659, 1661, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1719, 1745, 1746, 1760, 1773, 1796, 1799, 1803, 1804, 1805, 1806, 1808, 1809, 1816, 1817, 1818, 1821, 1822, 1833, 1837, 1843, 1845, 1857, 1860, 1863, 1864, 1866, 1868, 1870, 1875, 1877, 1878, 1879, 1880, 1882, 1884, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1926, 1929, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1962, 1963, 1964], "larger": [0, 9, 23, 29, 54, 252, 495, 905, 919, 1031, 1131, 1255, 1258, 1342, 1371, 1377, 1378, 1426, 1483, 1486, 1524, 1525, 1900, 1903, 1907, 1908, 1910, 1914, 1916, 1934, 1939, 1956, 1957, 1960, 1961, 1962], "thei": [0, 1, 3, 5, 7, 9, 11, 16, 17, 20, 23, 25, 29, 30, 40, 46, 49, 50, 53, 54, 79, 319, 333, 334, 682, 685, 686, 693, 796, 811, 812, 813, 820, 837, 850, 855, 886, 895, 905, 916, 948, 1020, 1078, 1125, 1130, 1140, 1176, 1190, 1191, 1198, 1201, 1208, 1213, 1222, 1236, 1237, 1243, 1264, 1272, 1294, 1298, 1301, 1303, 1306, 1324, 1347, 1348, 1349, 1365, 1366, 1367, 1381, 1419, 1427, 1428, 1429, 1434, 1440, 1450, 1462, 1485, 1533, 1535, 1605, 1614, 1615, 1618, 1621, 1623, 1624, 1647, 1650, 1659, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1699, 1702, 1761, 1767, 1818, 1822, 1857, 1858, 1862, 1875, 1877, 1879, 1880, 1882, 1884, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1896, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1909, 1911, 1913, 1914, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1930, 1934, 1939, 1941, 1942, 1943, 1948, 1951, 1952, 1953, 1954, 1955, 1959, 1963, 1964], "don": [0, 1, 4, 7, 9, 11, 23, 39, 47, 49, 51, 54, 149, 781, 791, 889, 890, 903, 1048, 1130, 1216, 1294, 1397, 1398, 1399, 1486, 1602, 1605, 1614, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1764, 1875, 1877, 1881, 1892, 1893, 1894, 1900, 1903, 1905, 1907, 1911, 1913, 1917, 1918, 1921, 1922, 1923, 1925, 1930, 1931, 1934, 1951, 1952, 1953, 1954, 1956, 1964], "t": [0, 1, 2, 3, 4, 7, 8, 9, 11, 20, 21, 23, 25, 29, 30, 33, 37, 39, 40, 47, 49, 51, 52, 53, 54, 55, 57, 79, 149, 311, 313, 319, 455, 519, 533, 567, 683, 684, 693, 756, 777, 781, 791, 819, 822, 873, 874, 875, 876, 885, 887, 889, 890, 893, 895, 898, 903, 939, 940, 941, 946, 966, 975, 978, 999, 1017, 1018, 1048, 1072, 1090, 1095, 1096, 1097, 1098, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1125, 1126, 1127, 1130, 1131, 1132, 1142, 1143, 1154, 1164, 1198, 1199, 1201, 1202, 1204, 1207, 1208, 1212, 1214, 1216, 1219, 1221, 1230, 1231, 1237, 1239, 1240, 1243, 1250, 1258, 1259, 1264, 1272, 1273, 1281, 1294, 1307, 1308, 1322, 1331, 1351, 1355, 1357, 1362, 1363, 1364, 1371, 1377, 1378, 1386, 1395, 1397, 1398, 1399, 1400, 1404, 1421, 1434, 1449, 1465, 1467, 1477, 1485, 1486, 1504, 1508, 1509, 1510, 1517, 1524, 1525, 1545, 1550, 1569, 1589, 1602, 1605, 1608, 1609, 1614, 1615, 1621, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1648, 1650, 1651, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1695, 1705, 1711, 1717, 1721, 1738, 1763, 1764, 1773, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1799, 1818, 1822, 1823, 1833, 1836, 1842, 1845, 1868, 1869, 1875, 1877, 1878, 1879, 1881, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1908, 1910, 1911, 1913, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1951, 1952, 1954, 1956, 1958, 1961, 1963, 1964], "grad": [0, 1, 5, 23, 29, 47, 50, 51, 54, 149, 333, 455, 484, 491, 492, 499, 500, 577, 876, 885, 889, 890, 896, 897, 899, 904, 905, 909, 910, 1020, 1078, 1130, 1131, 1133, 1137, 1141, 1142, 1176, 1184, 1201, 1273, 1434, 1614, 1659, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1767, 1799, 1857, 1868, 1876, 1877, 1878, 1893, 1894, 1895, 1899, 1904, 1905, 1906, 1908, 1911, 1913, 1920, 1930, 1931, 1934, 1940, 1953, 1959], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 13, 23, 27, 29, 31, 33, 37, 39, 40, 42, 46, 49, 50, 51, 53, 54, 55, 149, 252, 333, 432, 455, 579, 613, 676, 691, 692, 744, 753, 756, 786, 790, 857, 876, 928, 1011, 1015, 1065, 1074, 1078, 1127, 1130, 1142, 1175, 1200, 1202, 1205, 1211, 1216, 1226, 1231, 1243, 1244, 1248, 1249, 1256, 1262, 1264, 1270, 1273, 1290, 1294, 1295, 1301, 1305, 1309, 1326, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1374, 1377, 1378, 1381, 1386, 1387, 1397, 1398, 1399, 1404, 1405, 1407, 1408, 1409, 1416, 1417, 1418, 1428, 1429, 1435, 1441, 1444, 1449, 1451, 1473, 1485, 1516, 1568, 1614, 1615, 1623, 1626, 1630, 1656, 1659, 1661, 1666, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1706, 1710, 1715, 1757, 1760, 1761, 1765, 1767, 1791, 1796, 1822, 1842, 1845, 1857, 1858, 1868, 1874, 1875, 1876, 1877, 1879, 1880, 1882, 1888, 1892, 1893, 1894, 1895, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1913, 1914, 1915, 1918, 1922, 1923, 1925, 1930, 1932, 1934, 1937, 1941, 1948, 1956, 1963], "interfer": [0, 1890, 1903, 1918, 1953], "learn": [0, 7, 8, 14, 29, 39, 46, 54, 81, 1355, 1368, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1394, 1406, 1419, 1421, 1442, 1463, 1477, 1479, 1481, 1482, 1483, 1586, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1876, 1884, 1896, 1898, 1909, 1911, 1912, 1918, 1922, 1925, 1930, 1932, 1945, 1947, 1949, 1951, 1956], "rate": [0, 8, 21, 29, 46, 1373, 1374, 1375, 1379, 1480, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1714, 1876, 1910, 1939, 1960], "fp16": [0, 2, 725, 1614, 1925, 1926], "everi": [0, 1, 2, 8, 9, 20, 21, 23, 25, 27, 29, 31, 46, 51, 54, 478, 484, 606, 676, 777, 815, 893, 909, 910, 948, 1057, 1074, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1131, 1154, 1163, 1201, 1232, 1246, 1256, 1259, 1290, 1346, 1372, 1373, 1374, 1375, 1379, 1427, 1434, 1467, 1469, 1473, 1519, 1520, 1521, 1526, 1557, 1558, 1559, 1573, 1590, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1622, 1655, 1658, 1659, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1761, 1822, 1855, 1880, 1886, 1890, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1912, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1941, 1951, 1952, 1956, 1960, 1961, 1962, 1963], "most": [0, 1, 3, 4, 7, 8, 14, 20, 23, 25, 27, 29, 30, 31, 32, 39, 40, 42, 43, 46, 51, 52, 53, 54, 55, 495, 789, 893, 894, 895, 900, 904, 913, 948, 1043, 1057, 1074, 1131, 1176, 1186, 1199, 1202, 1306, 1342, 1481, 1533, 1583, 1614, 1626, 1686, 1797, 1843, 1875, 1877, 1879, 1880, 1882, 1887, 1892, 1894, 1895, 1900, 1903, 1905, 1913, 1914, 1915, 1921, 1924, 1925, 1931, 1932, 1934, 1937, 1939, 1941, 1945, 1947, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963], "bf16": [0, 2], "pretrain": [0, 858, 1377, 1378, 1875, 1900, 1918], "cannot": [0, 3, 8, 9, 20, 21, 23, 29, 30, 33, 40, 46, 47, 51, 52, 53, 54, 55, 84, 85, 221, 252, 520, 541, 876, 1095, 1097, 1105, 1106, 1107, 1113, 1130, 1198, 1206, 1324, 1357, 1377, 1486, 1517, 1583, 1614, 1670, 1823, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1890, 1894, 1895, 1900, 1904, 1905, 1916, 1917, 1918, 1925, 1930, 1932, 1934, 1936, 1937, 1948, 1954, 1964], "numer": [0, 20, 29, 47, 52, 683, 789, 904, 905, 932, 1205, 1216, 1217, 1232, 1236, 1237, 1241, 1246, 1254, 1255, 1258, 1261, 1264, 1266, 1288, 1290, 1351, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1467, 1470, 1473, 1482, 1524, 1545, 1552, 1583, 1589, 1591, 1622, 1655, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1725, 1757, 1822, 1876, 1880, 1881, 1885, 1888, 1903, 1905, 1906, 1918, 1925, 1935, 1940, 1953, 1963, 1965], "max": [0, 20, 23, 31, 33, 39, 40, 42, 46, 54, 115, 184, 185, 186, 187, 298, 691, 692, 693, 754, 766, 767, 776, 778, 779, 798, 815, 816, 817, 818, 821, 870, 919, 936, 943, 944, 948, 1053, 1088, 1089, 1161, 1212, 1232, 1246, 1253, 1255, 1257, 1258, 1270, 1343, 1344, 1345, 1356, 1357, 1368, 1369, 1378, 1382, 1383, 1388, 1393, 1394, 1402, 1403, 1420, 1422, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1439, 1442, 1453, 1454, 1461, 1482, 1483, 1485, 1495, 1496, 1497, 1507, 1515, 1525, 1528, 1529, 1544, 1548, 1557, 1558, 1559, 1569, 1573, 1577, 1579, 1584, 1602, 1618, 1650, 1678, 1679, 1680, 1690, 1695, 1696, 1705, 1726, 1727, 1799, 1828, 1829, 1857, 1877, 1878, 1887, 1890, 1895, 1901, 1903, 1907, 1920, 1925, 1928, 1952, 1957, 1958, 1965], "65504": 0, "overflow": [0, 1055, 1056, 1300, 1329, 1332, 1552, 1589, 1590, 1719, 1750, 1798, 1801, 1821, 1847, 1849, 1903, 1914, 1935], "instead": [0, 1, 3, 5, 8, 9, 13, 20, 21, 23, 25, 28, 29, 31, 37, 40, 41, 46, 49, 50, 51, 54, 55, 57, 63, 220, 404, 455, 495, 509, 744, 753, 764, 765, 789, 813, 822, 876, 886, 897, 898, 899, 900, 903, 904, 932, 938, 1109, 1111, 1135, 1136, 1137, 1138, 1141, 1142, 1147, 1188, 1199, 1201, 1202, 1206, 1230, 1231, 1237, 1239, 1255, 1258, 1264, 1270, 1272, 1301, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1371, 1373, 1374, 1375, 1379, 1386, 1394, 1400, 1401, 1402, 1403, 1404, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1441, 1448, 1449, 1461, 1465, 1466, 1467, 1473, 1482, 1500, 1501, 1502, 1505, 1506, 1516, 1526, 1533, 1545, 1557, 1558, 1559, 1568, 1576, 1589, 1614, 1656, 1658, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1696, 1697, 1703, 1726, 1727, 1737, 1757, 1761, 1803, 1818, 1822, 1857, 1868, 1877, 1879, 1880, 1887, 1894, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1924, 1925, 1928, 1931, 1934, 1941, 1942, 1944, 1948, 1949, 1951, 1952, 1953, 1956, 1959, 1962, 1963, 1964], "case": [0, 1, 3, 4, 8, 9, 11, 13, 14, 20, 21, 23, 25, 27, 29, 31, 32, 33, 40, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 79, 149, 153, 195, 350, 492, 495, 676, 756, 780, 787, 790, 816, 817, 819, 822, 854, 861, 889, 897, 899, 903, 917, 919, 924, 961, 974, 999, 1021, 1022, 1041, 1042, 1043, 1074, 1095, 1097, 1105, 1106, 1107, 1122, 1132, 1136, 1141, 1160, 1186, 1199, 1202, 1210, 1213, 1214, 1216, 1230, 1232, 1236, 1237, 1241, 1246, 1247, 1248, 1250, 1256, 1259, 1264, 1266, 1270, 1272, 1273, 1278, 1281, 1290, 1301, 1324, 1342, 1347, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1373, 1374, 1375, 1376, 1378, 1379, 1381, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1402, 1403, 1420, 1425, 1427, 1428, 1429, 1440, 1441, 1442, 1452, 1465, 1471, 1476, 1481, 1483, 1485, 1498, 1516, 1525, 1533, 1537, 1538, 1568, 1570, 1577, 1614, 1616, 1617, 1621, 1623, 1626, 1627, 1660, 1661, 1668, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1703, 1741, 1744, 1757, 1759, 1773, 1776, 1822, 1823, 1853, 1857, 1871, 1875, 1880, 1885, 1892, 1893, 1894, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1938, 1939, 1940, 1941, 1945, 1951, 1952, 1953, 1954, 1956, 1959, 1961, 1962, 1963, 1964, 1965], "decreas": [0, 29, 1031, 1246, 1373, 1374, 1375, 1379, 1447, 1648, 1649, 1690, 1697, 1705, 1886, 1888, 1913, 1915, 1934, 1937], "attempt": [0, 1, 8, 13, 23, 40, 41, 46, 51, 80, 942, 948, 951, 962, 1205, 1211, 1290, 1583, 1616, 1617, 1678, 1679, 1857, 1860, 1877, 1880, 1893, 1894, 1899, 1903, 1905, 1917, 1921, 1922, 1930, 1951, 1952, 1953, 1963], "bring": [0, 47, 54, 1095, 1498, 1533, 1923, 1957, 1960], "number": [0, 1, 2, 3, 4, 5, 7, 13, 20, 21, 23, 27, 28, 29, 31, 38, 39, 40, 43, 47, 49, 52, 54, 55, 60, 80, 87, 153, 172, 217, 231, 252, 311, 350, 375, 396, 400, 432, 443, 468, 470, 471, 478, 489, 493, 495, 509, 511, 513, 539, 541, 542, 554, 579, 580, 581, 583, 584, 585, 604, 613, 681, 682, 683, 684, 685, 686, 687, 694, 754, 756, 764, 765, 768, 769, 770, 777, 815, 861, 873, 886, 904, 916, 918, 919, 924, 928, 930, 934, 942, 943, 947, 961, 965, 966, 970, 980, 982, 988, 997, 1006, 1007, 1018, 1020, 1021, 1022, 1031, 1041, 1042, 1045, 1046, 1066, 1069, 1071, 1074, 1075, 1079, 1087, 1117, 1119, 1122, 1127, 1129, 1143, 1145, 1151, 1152, 1153, 1157, 1161, 1162, 1163, 1175, 1177, 1198, 1199, 1201, 1214, 1221, 1224, 1225, 1232, 1246, 1255, 1264, 1268, 1273, 1278, 1289, 1293, 1301, 1313, 1314, 1318, 1320, 1323, 1324, 1328, 1332, 1335, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1376, 1377, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1400, 1401, 1404, 1405, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1524, 1525, 1528, 1529, 1534, 1544, 1545, 1547, 1550, 1557, 1558, 1559, 1568, 1570, 1576, 1577, 1583, 1605, 1614, 1622, 1626, 1631, 1632, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1651, 1655, 1660, 1661, 1662, 1664, 1665, 1673, 1681, 1694, 1695, 1696, 1697, 1700, 1701, 1703, 1704, 1705, 1711, 1714, 1718, 1728, 1730, 1731, 1732, 1734, 1735, 1736, 1741, 1743, 1744, 1747, 1748, 1749, 1750, 1758, 1762, 1766, 1768, 1769, 1770, 1771, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1815, 1816, 1817, 1818, 1819, 1823, 1837, 1838, 1839, 1847, 1849, 1854, 1855, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1873, 1876, 1878, 1879, 1880, 1881, 1882, 1887, 1890, 1892, 1895, 1898, 1901, 1903, 1905, 1908, 1911, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1924, 1926, 1929, 1930, 1931, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1948, 1951, 1952, 1953, 1960, 1963, 1965], "expect": [0, 1, 3, 5, 7, 9, 20, 21, 23, 25, 27, 31, 38, 40, 42, 46, 51, 52, 54, 676, 693, 756, 850, 897, 898, 899, 900, 901, 902, 1020, 1095, 1097, 1114, 1115, 1116, 1135, 1136, 1175, 1198, 1201, 1216, 1217, 1245, 1266, 1267, 1301, 1353, 1354, 1370, 1386, 1387, 1388, 1389, 1398, 1399, 1400, 1404, 1405, 1406, 1416, 1417, 1418, 1434, 1440, 1441, 1449, 1451, 1467, 1473, 1477, 1479, 1481, 1486, 1524, 1530, 1544, 1568, 1576, 1577, 1589, 1602, 1603, 1604, 1605, 1614, 1648, 1706, 1762, 1831, 1866, 1875, 1876, 1882, 1900, 1903, 1904, 1907, 1908, 1911, 1918, 1921, 1922, 1925, 1926, 1927, 1930, 1934, 1939, 1941, 1949, 1952, 1953, 1957, 1959], "alwai": [0, 5, 7, 13, 16, 20, 21, 23, 38, 42, 46, 50, 54, 338, 445, 455, 790, 876, 894, 897, 903, 917, 926, 936, 942, 948, 970, 1020, 1031, 1061, 1069, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1105, 1106, 1107, 1108, 1110, 1113, 1117, 1158, 1159, 1201, 1211, 1216, 1231, 1236, 1237, 1238, 1239, 1241, 1242, 1254, 1257, 1258, 1259, 1260, 1264, 1266, 1330, 1350, 1352, 1353, 1354, 1371, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1470, 1473, 1605, 1614, 1647, 1745, 1746, 1772, 1818, 1822, 1854, 1857, 1880, 1881, 1892, 1895, 1900, 1901, 1902, 1903, 1904, 1905, 1908, 1910, 1911, 1922, 1923, 1929, 1930, 1932, 1934, 1937, 1940, 1941, 1948, 1951, 1952], "abov": [0, 1, 3, 14, 23, 29, 33, 40, 42, 46, 47, 52, 54, 55, 57, 77, 613, 676, 788, 789, 876, 917, 926, 941, 1031, 1057, 1061, 1062, 1063, 1064, 1065, 1074, 1146, 1158, 1159, 1201, 1202, 1221, 1232, 1236, 1237, 1255, 1257, 1258, 1261, 1264, 1267, 1270, 1273, 1350, 1381, 1434, 1462, 1470, 1485, 1583, 1605, 1662, 1697, 1721, 1732, 1733, 1765, 1770, 1783, 1802, 1843, 1846, 1847, 1848, 1849, 1875, 1877, 1879, 1880, 1887, 1900, 1901, 1902, 1903, 1905, 1906, 1908, 1911, 1913, 1915, 1916, 1918, 1922, 1925, 1930, 1931, 1932, 1934, 1935, 1941, 1945, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1963], "our": [0, 3, 7, 8, 23, 36, 39, 40, 41, 43, 50, 51, 52, 54, 893, 1094, 1131, 1350, 1900, 1905, 1908, 1913, 1918, 1921, 1925, 1931, 1934, 1945, 1948, 1951, 1952, 1953, 1955, 1956, 1957, 1962, 1963], "NOT": [0, 20, 23, 31, 40, 41, 42, 54, 922, 1201, 1283, 1374, 1614, 1615, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1659, 1668, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1900, 1918, 1932, 1934], "make": [0, 1, 2, 3, 4, 5, 8, 13, 14, 20, 21, 23, 25, 26, 28, 29, 31, 32, 37, 40, 41, 42, 43, 50, 51, 54, 55, 64, 138, 221, 492, 775, 781, 857, 858, 889, 939, 940, 941, 977, 978, 980, 1062, 1078, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1114, 1115, 1116, 1176, 1201, 1205, 1210, 1211, 1230, 1231, 1243, 1244, 1245, 1273, 1312, 1350, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1395, 1434, 1444, 1481, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1533, 1535, 1544, 1583, 1602, 1614, 1621, 1637, 1654, 1659, 1699, 1762, 1795, 1804, 1805, 1806, 1808, 1809, 1840, 1857, 1860, 1875, 1877, 1879, 1880, 1884, 1890, 1892, 1893, 1895, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1915, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1937, 1939, 1943, 1945, 1950, 1951, 1952, 1953, 1955, 1957, 1959, 1962, 1963, 1964], "guarante": [0, 1, 5, 9, 20, 23, 25, 27, 29, 40, 42, 51, 53, 54, 55, 872, 948, 1201, 1210, 1371, 1434, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1795, 1857, 1900, 1902, 1903, 1914, 1915, 1922, 1924, 1926, 1930, 1932, 1951], "encount": [0, 5, 23, 51, 53, 54, 676, 1614, 1877, 1880, 1882, 1886, 1902, 1914, 1922, 1925, 1949, 1953, 1956, 1959, 1961, 1963], "nan": [0, 1, 29, 424, 425, 495, 680, 682, 685, 686, 687, 690, 693, 694, 877, 881, 916, 932, 1075, 1076, 1077, 1120, 1121, 1122, 1161, 1190, 1191, 1193, 1194, 1240, 1247, 1260, 1263, 1276, 1281, 1299, 1300, 1304, 1328, 1329, 1330, 1331, 1332, 1533, 1618, 1715, 1752, 1757, 1811, 1845, 1857, 1878, 1887, 1899, 1900, 1906, 1914, 1935, 1941], "verifi": [0, 23, 54, 82, 904, 1057, 1673, 1674, 1692, 1843, 1875, 1877, 1889, 1905, 1908, 1918, 1923, 1955], "compat": [0, 1, 13, 20, 25, 29, 31, 44, 46, 50, 51, 54, 55, 493, 494, 599, 613, 676, 811, 812, 813, 886, 929, 959, 960, 1201, 1206, 1218, 1231, 1242, 1255, 1258, 1434, 1440, 1477, 1478, 1479, 1480, 1481, 1544, 1658, 1668, 1670, 1744, 1875, 1876, 1879, 1880, 1886, 1892, 1893, 1899, 1905, 1916, 1918, 1922, 1924, 1925, 1928, 1930, 1934, 1936], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 41, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 153, 155, 172, 183, 190, 207, 223, 224, 225, 226, 227, 252, 258, 261, 287, 296, 298, 309, 311, 313, 315, 319, 350, 399, 400, 424, 425, 442, 445, 446, 451, 478, 480, 484, 492, 503, 504, 509, 511, 513, 516, 534, 539, 540, 543, 552, 554, 556, 574, 576, 577, 579, 580, 581, 583, 584, 585, 591, 592, 593, 594, 601, 603, 604, 613, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 708, 709, 710, 711, 712, 713, 714, 715, 719, 720, 721, 722, 723, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 747, 748, 749, 751, 752, 753, 754, 756, 764, 765, 766, 768, 769, 770, 771, 774, 776, 778, 779, 781, 790, 792, 795, 798, 813, 816, 817, 818, 821, 850, 852, 861, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 894, 897, 898, 899, 901, 904, 905, 907, 909, 910, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 932, 935, 936, 937, 938, 939, 940, 941, 942, 943, 946, 957, 958, 961, 962, 963, 964, 965, 966, 974, 980, 989, 991, 1017, 1018, 1044, 1048, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1072, 1074, 1076, 1077, 1084, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1130, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1154, 1158, 1160, 1161, 1162, 1163, 1164, 1167, 1171, 1175, 1178, 1186, 1197, 1198, 1199, 1201, 1205, 1207, 1208, 1212, 1220, 1221, 1222, 1223, 1224, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1247, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1262, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1294, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1307, 1308, 1319, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1336, 1338, 1340, 1341, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1422, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1448, 1449, 1450, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1465, 1467, 1468, 1469, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1485, 1486, 1489, 1490, 1491, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1531, 1533, 1536, 1537, 1538, 1541, 1542, 1543, 1544, 1548, 1549, 1551, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1579, 1583, 1584, 1587, 1589, 1592, 1598, 1599, 1600, 1601, 1602, 1605, 1614, 1618, 1621, 1622, 1626, 1631, 1632, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1647, 1648, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1660, 1661, 1662, 1666, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1712, 1714, 1715, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1752, 1753, 1757, 1759, 1760, 1761, 1764, 1766, 1770, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1795, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1824, 1825, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1862, 1863, 1864, 1866, 1867, 1868, 1869, 1871, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1887, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1945, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1961, 1962, 1964, 1965], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 11, 13, 17, 18, 20, 21, 23, 29, 38, 50, 51, 52, 53, 54, 55, 56, 60, 61, 62, 63, 153, 190, 207, 258, 287, 296, 311, 313, 315, 319, 399, 400, 442, 468, 495, 509, 511, 513, 519, 533, 540, 554, 556, 580, 581, 582, 583, 584, 603, 681, 682, 686, 693, 730, 735, 736, 737, 738, 739, 741, 742, 756, 758, 769, 770, 857, 858, 861, 876, 882, 883, 884, 897, 900, 902, 916, 919, 926, 927, 928, 932, 934, 938, 941, 942, 943, 946, 961, 965, 1053, 1055, 1057, 1064, 1066, 1068, 1069, 1072, 1073, 1074, 1077, 1090, 1092, 1094, 1095, 1101, 1102, 1105, 1110, 1113, 1114, 1117, 1120, 1122, 1123, 1124, 1132, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1144, 1154, 1160, 1162, 1164, 1166, 1167, 1178, 1186, 1190, 1207, 1211, 1212, 1221, 1222, 1223, 1226, 1229, 1230, 1247, 1250, 1253, 1256, 1257, 1258, 1259, 1264, 1265, 1268, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1283, 1287, 1294, 1295, 1301, 1302, 1306, 1331, 1333, 1334, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1388, 1389, 1390, 1395, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1422, 1425, 1430, 1431, 1434, 1441, 1444, 1448, 1449, 1455, 1456, 1457, 1458, 1459, 1462, 1465, 1471, 1473, 1477, 1479, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1499, 1500, 1508, 1509, 1511, 1512, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1528, 1529, 1531, 1533, 1536, 1544, 1568, 1570, 1576, 1592, 1602, 1603, 1604, 1614, 1626, 1636, 1639, 1641, 1642, 1644, 1649, 1650, 1652, 1654, 1660, 1661, 1662, 1664, 1665, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1694, 1700, 1704, 1710, 1712, 1714, 1715, 1717, 1718, 1721, 1722, 1725, 1726, 1727, 1728, 1732, 1737, 1738, 1741, 1742, 1748, 1749, 1750, 1757, 1770, 1777, 1779, 1780, 1781, 1782, 1785, 1786, 1795, 1800, 1802, 1803, 1804, 1805, 1807, 1810, 1818, 1821, 1822, 1823, 1824, 1825, 1832, 1834, 1836, 1837, 1838, 1840, 1841, 1843, 1852, 1853, 1857, 1862, 1868, 1869, 1870, 1873, 1877, 1878, 1879, 1880, 1881, 1887, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1905, 1907, 1908, 1911, 1912, 1916, 1917, 1918, 1921, 1923, 1925, 1930, 1934, 1935, 1937, 1939, 1940, 1941, 1950, 1961, 1962, 1963], "growth_interv": 0, "2000": [0, 23, 27, 1092, 1094, 1101, 1110, 1123, 1278, 1486, 1697, 1725, 1775, 1776, 1836], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 13, 14, 17, 20, 23, 27, 29, 30, 31, 33, 34, 37, 38, 40, 41, 46, 54, 55, 62, 63, 350, 585, 620, 676, 777, 876, 897, 898, 899, 900, 901, 902, 904, 905, 934, 935, 947, 948, 950, 1011, 1017, 1018, 1020, 1069, 1074, 1092, 1094, 1122, 1127, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1177, 1199, 1201, 1202, 1204, 1205, 1206, 1211, 1212, 1216, 1272, 1435, 1436, 1444, 1445, 1583, 1614, 1715, 1737, 1741, 1761, 1762, 1797, 1860, 1861, 1868, 1875, 1884, 1886, 1891, 1892, 1894, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1910, 1913, 1916, 1917, 1922, 1925, 1929, 1930, 1931, 1932, 1937, 1940, 1941, 1945, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1957, 1959, 1960, 1963, 1964], "contain": [0, 1, 2, 3, 5, 11, 13, 14, 20, 23, 24, 27, 28, 29, 31, 33, 34, 38, 41, 46, 53, 54, 55, 56, 61, 63, 78, 87, 149, 153, 190, 194, 207, 288, 309, 311, 313, 317, 319, 468, 480, 540, 599, 603, 682, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 756, 810, 833, 837, 873, 888, 889, 897, 898, 899, 900, 901, 902, 903, 913, 916, 917, 918, 926, 928, 932, 950, 961, 962, 966, 976, 987, 988, 989, 990, 991, 1020, 1074, 1108, 1109, 1111, 1117, 1137, 1138, 1141, 1142, 1158, 1159, 1162, 1163, 1171, 1175, 1192, 1199, 1201, 1202, 1207, 1208, 1211, 1216, 1217, 1220, 1231, 1237, 1238, 1239, 1240, 1242, 1244, 1246, 1247, 1263, 1272, 1290, 1294, 1301, 1324, 1330, 1342, 1351, 1370, 1371, 1377, 1378, 1381, 1386, 1387, 1389, 1394, 1404, 1405, 1426, 1434, 1435, 1436, 1441, 1444, 1449, 1451, 1462, 1466, 1473, 1485, 1516, 1524, 1525, 1527, 1598, 1605, 1608, 1609, 1614, 1622, 1623, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1654, 1655, 1658, 1660, 1668, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1711, 1714, 1739, 1753, 1757, 1817, 1818, 1822, 1838, 1845, 1847, 1849, 1854, 1855, 1859, 1860, 1864, 1868, 1876, 1877, 1879, 1880, 1881, 1887, 1890, 1894, 1895, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1914, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1934, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1947, 1949, 1952, 1955, 1956, 1957, 1960, 1962, 1963, 1964], "backoff": [0, 1930], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 17, 20, 21, 23, 25, 27, 28, 29, 31, 34, 37, 38, 40, 41, 43, 46, 54, 55, 62, 63, 64, 87, 215, 217, 231, 240, 252, 311, 313, 315, 319, 434, 441, 442, 444, 446, 454, 469, 473, 489, 493, 495, 509, 511, 513, 516, 533, 539, 541, 542, 554, 556, 562, 579, 580, 581, 583, 584, 603, 613, 676, 689, 691, 692, 693, 695, 751, 752, 771, 773, 775, 776, 781, 782, 783, 815, 870, 871, 872, 874, 888, 895, 908, 917, 919, 926, 933, 935, 942, 947, 965, 966, 969, 970, 973, 974, 976, 978, 980, 982, 983, 986, 987, 988, 989, 990, 991, 993, 994, 995, 996, 997, 1002, 1003, 1004, 1006, 1008, 1012, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1061, 1062, 1063, 1064, 1065, 1066, 1072, 1075, 1077, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1142, 1143, 1149, 1151, 1152, 1154, 1158, 1159, 1161, 1162, 1163, 1164, 1175, 1177, 1198, 1199, 1201, 1202, 1204, 1207, 1212, 1220, 1222, 1232, 1233, 1253, 1254, 1257, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1280, 1287, 1288, 1293, 1298, 1300, 1301, 1303, 1306, 1308, 1309, 1310, 1314, 1324, 1329, 1330, 1331, 1332, 1333, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1377, 1378, 1380, 1381, 1382, 1383, 1385, 1387, 1389, 1397, 1398, 1399, 1402, 1403, 1405, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1421, 1422, 1424, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1436, 1439, 1441, 1442, 1445, 1446, 1447, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1469, 1470, 1473, 1477, 1479, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1515, 1516, 1517, 1524, 1525, 1532, 1535, 1544, 1552, 1568, 1569, 1570, 1574, 1575, 1589, 1590, 1598, 1602, 1603, 1604, 1614, 1622, 1631, 1632, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1648, 1650, 1655, 1658, 1661, 1662, 1664, 1665, 1668, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1711, 1712, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1732, 1733, 1734, 1736, 1742, 1743, 1744, 1747, 1748, 1749, 1750, 1753, 1758, 1759, 1760, 1764, 1768, 1769, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1791, 1795, 1798, 1801, 1802, 1803, 1810, 1813, 1815, 1816, 1817, 1818, 1821, 1823, 1827, 1833, 1837, 1838, 1840, 1842, 1843, 1846, 1847, 1848, 1849, 1852, 1853, 1854, 1855, 1856, 1859, 1860, 1862, 1863, 1864, 1868, 1869, 1873, 1877, 1878, 1879, 1880, 1881, 1890, 1892, 1893, 1895, 1898, 1903, 1906, 1913, 1916, 1918, 1920, 1923, 1924, 1925, 1929, 1930, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1951, 1956, 1958, 1962, 1965], "interv": [0, 29, 42, 861, 962, 1124, 1315, 1316, 1706, 1730, 1731, 1779, 1890, 1903, 1924], "get_scal": [0, 1899], "sync": [0, 23, 27, 46, 53, 54, 1614, 1903, 1904, 1923, 1948, 1952], "is_en": [0, 1797, 1804, 1805, 1806, 1807, 1808, 1809], "indic": [0, 1, 2, 3, 20, 21, 23, 24, 28, 29, 40, 78, 79, 190, 207, 220, 311, 313, 315, 316, 317, 319, 468, 509, 511, 513, 540, 568, 569, 579, 610, 691, 692, 731, 741, 742, 870, 871, 872, 873, 874, 894, 904, 905, 932, 939, 940, 953, 971, 975, 977, 978, 980, 1014, 1053, 1054, 1077, 1132, 1133, 1135, 1136, 1137, 1141, 1142, 1143, 1154, 1175, 1199, 1201, 1206, 1214, 1217, 1218, 1222, 1231, 1242, 1244, 1255, 1258, 1272, 1280, 1288, 1290, 1292, 1298, 1301, 1303, 1306, 1312, 1324, 1330, 1334, 1342, 1343, 1344, 1345, 1370, 1377, 1378, 1382, 1383, 1428, 1429, 1430, 1431, 1432, 1437, 1439, 1440, 1495, 1496, 1497, 1516, 1524, 1525, 1528, 1529, 1545, 1560, 1561, 1562, 1570, 1583, 1598, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1640, 1641, 1660, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1701, 1703, 1722, 1757, 1795, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1832, 1833, 1837, 1840, 1846, 1847, 1848, 1849, 1854, 1855, 1857, 1858, 1860, 1868, 1871, 1877, 1878, 1880, 1884, 1893, 1894, 1905, 1913, 1916, 1918, 1920, 1930, 1934, 1938, 1939, 1941, 1954, 1956, 1958, 1963], "load_state_dict": [0, 21, 25, 27, 46, 1201, 1272, 1434, 1605, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1875, 1876, 1911, 1916, 1925], "state_dict": [0, 21, 25, 27, 46, 832, 833, 1201, 1434, 1605, 1640, 1658, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1875, 1889, 1904, 1911, 1913, 1916, 1918, 1925, 1943], "load": [0, 1, 11, 13, 14, 21, 25, 27, 46, 833, 858, 912, 948, 976, 1205, 1211, 1216, 1378, 1605, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1753, 1876, 1877, 1888, 1889, 1894, 1900, 1903, 1910, 1911, 1915, 1917, 1918, 1930, 1939, 1955, 1957, 1961, 1963], "scaler": [0, 1899, 1903], "dict": [0, 3, 5, 20, 21, 23, 24, 25, 27, 28, 29, 31, 34, 38, 42, 46, 48, 50, 54, 676, 788, 789, 790, 811, 812, 813, 832, 850, 906, 948, 1017, 1018, 1031, 1040, 1130, 1140, 1142, 1199, 1200, 1201, 1202, 1207, 1212, 1216, 1217, 1272, 1273, 1371, 1381, 1434, 1435, 1444, 1485, 1605, 1614, 1637, 1656, 1668, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1868, 1875, 1877, 1878, 1880, 1881, 1889, 1890, 1905, 1911, 1916, 1918, 1920, 1921, 1930, 1931, 1939, 1943, 1944, 1959, 1962, 1964], "object": [0, 1, 3, 5, 6, 8, 13, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 40, 42, 46, 53, 54, 55, 57, 70, 87, 205, 208, 599, 789, 790, 850, 857, 876, 886, 887, 888, 913, 915, 948, 998, 1009, 1049, 1074, 1113, 1125, 1127, 1132, 1133, 1135, 1136, 1137, 1141, 1187, 1188, 1201, 1207, 1208, 1211, 1212, 1216, 1217, 1232, 1253, 1257, 1270, 1272, 1273, 1293, 1371, 1373, 1374, 1375, 1379, 1397, 1398, 1399, 1434, 1444, 1473, 1614, 1624, 1639, 1648, 1649, 1652, 1653, 1654, 1668, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1684, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1753, 1826, 1827, 1830, 1858, 1861, 1875, 1879, 1880, 1881, 1884, 1888, 1889, 1892, 1896, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1910, 1913, 1915, 1916, 1917, 1918, 1921, 1925, 1927, 1928, 1929, 1930, 1932, 1936, 1937, 1939, 1941, 1949, 1950, 1952, 1956, 1959, 1962, 1964, 1965], "unmodifi": [0, 23, 1950], "iter": [0, 1, 2, 3, 7, 21, 23, 24, 25, 27, 29, 41, 43, 46, 54, 55, 60, 987, 988, 989, 990, 991, 1020, 1023, 1025, 1046, 1201, 1273, 1434, 1435, 1436, 1444, 1445, 1614, 1615, 1618, 1619, 1620, 1622, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1655, 1657, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1700, 1711, 1781, 1823, 1878, 1880, 1881, 1892, 1894, 1899, 1900, 1901, 1903, 1904, 1905, 1908, 1911, 1921, 1924, 1929, 1939, 1953, 1956, 1962, 1963, 1964], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 16, 17, 20, 21, 23, 24, 25, 28, 29, 31, 33, 37, 38, 39, 40, 41, 42, 46, 48, 50, 51, 52, 53, 54, 55, 79, 149, 195, 470, 471, 509, 511, 513, 540, 553, 885, 886, 887, 888, 889, 893, 948, 950, 953, 955, 959, 960, 991, 996, 1002, 1003, 1021, 1022, 1041, 1042, 1050, 1097, 1126, 1131, 1134, 1142, 1143, 1162, 1198, 1201, 1202, 1207, 1211, 1233, 1237, 1241, 1244, 1246, 1248, 1249, 1254, 1258, 1259, 1261, 1262, 1264, 1266, 1269, 1270, 1272, 1273, 1281, 1342, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1381, 1428, 1429, 1430, 1431, 1432, 1434, 1441, 1462, 1465, 1485, 1487, 1535, 1545, 1589, 1607, 1608, 1609, 1612, 1613, 1614, 1622, 1623, 1626, 1647, 1650, 1651, 1659, 1668, 1672, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1709, 1728, 1741, 1757, 1767, 1773, 1780, 1801, 1853, 1868, 1875, 1879, 1880, 1890, 1892, 1894, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1935, 1936, 1938, 1942, 1948, 1949, 1950, 1951, 1952, 1953, 1956, 1957, 1962, 1963], "five": [0, 1880, 1916], "entri": [0, 3, 23, 24, 27, 29, 38, 40, 41, 313, 731, 854, 855, 913, 1017, 1018, 1064, 1115, 1116, 1175, 1201, 1221, 1377, 1378, 1434, 1440, 1524, 1525, 1610, 1611, 1632, 1633, 1641, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1801, 1877, 1880, 1881, 1887, 1895, 1900, 1904, 1905, 1908, 1911, 1928, 1934, 1939, 1943, 1949, 1951, 1956], "_growth_track": 0, "recent": [0, 1, 7, 8, 43, 53, 1176, 1186, 1797, 1879, 1880, 1895, 1905, 1914, 1915, 1934, 1941, 1960, 1963], "consecut": [0, 23, 46, 606, 1649, 1693, 1843, 1854, 1855, 1894, 1918], "unskip": 0, "empti": [0, 3, 23, 25, 31, 38, 46, 51, 54, 319, 509, 511, 519, 533, 541, 813, 918, 919, 929, 935, 1074, 1076, 1199, 1202, 1226, 1246, 1247, 1252, 1259, 1282, 1283, 1284, 1285, 1292, 1351, 1370, 1378, 1441, 1506, 1525, 1571, 1654, 1666, 1670, 1807, 1822, 1836, 1857, 1874, 1877, 1878, 1879, 1880, 1882, 1888, 1893, 1894, 1895, 1898, 1901, 1903, 1905, 1918, 1920, 1922, 1934, 1935, 1942, 1951, 1952, 1958, 1961], "wish": [0, 1137, 1813, 1899, 1903, 1905, 1906], "checkpoint": [0, 27, 41, 43, 46, 912, 1272, 1614, 1668, 1875, 1876, 1889, 1907, 1916, 1923, 1932, 1948], "kwarg": [0, 1, 5, 13, 20, 23, 24, 27, 40, 46, 54, 55, 576, 599, 743, 756, 758, 759, 817, 818, 820, 823, 886, 952, 978, 980, 1017, 1018, 1130, 1141, 1142, 1201, 1204, 1206, 1264, 1290, 1386, 1396, 1404, 1423, 1434, 1449, 1464, 1468, 1472, 1474, 1475, 1605, 1610, 1614, 1628, 1633, 1637, 1647, 1654, 1656, 1659, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1753, 1855, 1868, 1875, 1880, 1881, 1905, 1906, 1911, 1919, 1921, 1930, 1936, 1944, 1949, 1950, 1962, 1963, 1964], "carri": [0, 50, 334, 793, 834, 835, 853, 854, 1901, 1925], "out": [0, 1, 2, 3, 7, 8, 9, 11, 14, 17, 20, 23, 25, 28, 29, 37, 38, 41, 47, 50, 54, 55, 59, 61, 310, 312, 314, 316, 397, 399, 445, 492, 508, 510, 512, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 752, 756, 760, 768, 769, 770, 775, 777, 781, 793, 832, 834, 835, 853, 854, 861, 862, 863, 864, 865, 866, 867, 868, 873, 877, 878, 879, 880, 881, 890, 891, 892, 895, 904, 916, 918, 919, 920, 921, 922, 923, 924, 925, 928, 932, 935, 937, 938, 939, 940, 941, 943, 944, 946, 948, 956, 957, 958, 960, 961, 963, 964, 974, 979, 987, 989, 991, 1018, 1019, 1031, 1032, 1044, 1048, 1053, 1054, 1055, 1056, 1058, 1061, 1066, 1067, 1069, 1070, 1071, 1073, 1074, 1075, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1127, 1128, 1131, 1132, 1134, 1135, 1137, 1142, 1143, 1144, 1145, 1146, 1147, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1178, 1179, 1195, 1196, 1201, 1212, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1334, 1335, 1336, 1337, 1338, 1339, 1343, 1344, 1345, 1347, 1348, 1349, 1355, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1377, 1379, 1382, 1383, 1386, 1387, 1402, 1403, 1404, 1419, 1421, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1477, 1478, 1479, 1480, 1481, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1519, 1520, 1521, 1526, 1529, 1533, 1544, 1550, 1569, 1571, 1602, 1614, 1631, 1632, 1633, 1634, 1660, 1661, 1662, 1663, 1665, 1666, 1669, 1692, 1709, 1710, 1714, 1715, 1716, 1718, 1721, 1722, 1728, 1729, 1730, 1732, 1734, 1736, 1737, 1740, 1741, 1742, 1746, 1750, 1751, 1752, 1754, 1755, 1756, 1757, 1773, 1774, 1775, 1787, 1788, 1789, 1790, 1795, 1799, 1800, 1811, 1812, 1814, 1815, 1816, 1817, 1819, 1820, 1822, 1833, 1834, 1835, 1838, 1840, 1842, 1845, 1846, 1848, 1850, 1851, 1857, 1863, 1864, 1865, 1868, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1887, 1890, 1892, 1894, 1895, 1900, 1901, 1903, 1904, 1905, 1906, 1911, 1913, 1918, 1921, 1922, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935, 1937, 1939, 1940, 1944, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1961, 1962, 1964], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 13, 14, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 37, 38, 39, 40, 41, 46, 48, 50, 51, 54, 55, 57, 62, 63, 77, 78, 79, 484, 613, 676, 756, 775, 781, 788, 789, 790, 796, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 850, 857, 858, 885, 886, 887, 891, 909, 910, 932, 937, 1017, 1031, 1074, 1092, 1094, 1118, 1127, 1140, 1154, 1201, 1202, 1210, 1214, 1221, 1232, 1243, 1253, 1256, 1257, 1270, 1273, 1292, 1295, 1342, 1351, 1357, 1370, 1378, 1381, 1386, 1404, 1434, 1449, 1465, 1481, 1485, 1552, 1583, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1621, 1661, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1700, 1703, 1711, 1722, 1750, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1797, 1798, 1799, 1800, 1807, 1818, 1843, 1851, 1857, 1860, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1940, 1941, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1961, 1963, 1964, 1965], "two": [0, 1, 3, 4, 5, 6, 8, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 37, 38, 40, 41, 46, 50, 51, 54, 79, 80, 579, 580, 581, 583, 584, 603, 613, 676, 688, 690, 756, 789, 883, 886, 899, 904, 936, 938, 984, 1023, 1025, 1053, 1054, 1062, 1071, 1074, 1080, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1120, 1121, 1130, 1140, 1162, 1164, 1190, 1199, 1201, 1211, 1214, 1221, 1224, 1226, 1231, 1233, 1236, 1237, 1242, 1243, 1248, 1253, 1256, 1257, 1259, 1260, 1262, 1264, 1269, 1272, 1295, 1298, 1301, 1303, 1306, 1331, 1348, 1350, 1351, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1381, 1386, 1394, 1395, 1401, 1403, 1404, 1425, 1426, 1428, 1434, 1437, 1438, 1439, 1441, 1442, 1448, 1449, 1465, 1466, 1481, 1482, 1483, 1485, 1505, 1506, 1516, 1535, 1545, 1552, 1568, 1576, 1583, 1621, 1626, 1648, 1658, 1660, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1696, 1697, 1699, 1703, 1722, 1737, 1750, 1802, 1807, 1822, 1838, 1842, 1843, 1845, 1865, 1869, 1875, 1877, 1879, 1880, 1884, 1886, 1887, 1893, 1894, 1895, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1911, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1932, 1934, 1935, 1939, 1940, 1941, 1943, 1944, 1948, 1949, 1951, 1952, 1958, 1961, 1963], "unscale_": [0, 1899], "unless": [0, 1, 4, 7, 21, 23, 42, 46, 47, 54, 149, 495, 836, 854, 893, 919, 1130, 1201, 1244, 1249, 1262, 1272, 1301, 1388, 1434, 1481, 1609, 1637, 1656, 1686, 1692, 1757, 1857, 1880, 1886, 1900, 1903, 1915, 1918, 1922, 1926, 1951], "explicitli": [0, 8, 13, 23, 28, 33, 46, 81, 1011, 1062, 1064, 1074, 1163, 1241, 1254, 1258, 1266, 1308, 1544, 1602, 1703, 1818, 1877, 1879, 1880, 1881, 1886, 1903, 1905, 1908, 1910, 1916, 1918, 1922, 1923, 1929, 1930, 1934, 1951], "earlier": [0, 1, 6, 46, 1822, 1900, 1903, 1907, 1910, 1916, 1918, 1924], "part": [0, 1, 3, 4, 5, 6, 7, 9, 13, 14, 17, 20, 21, 23, 25, 29, 40, 41, 46, 50, 51, 54, 77, 78, 837, 903, 956, 1074, 1191, 1193, 1194, 1197, 1201, 1211, 1213, 1216, 1217, 1231, 1237, 1239, 1248, 1255, 1258, 1434, 1473, 1583, 1614, 1624, 1695, 1722, 1803, 1843, 1846, 1847, 1848, 1849, 1875, 1876, 1877, 1879, 1880, 1888, 1889, 1899, 1900, 1903, 1905, 1907, 1908, 1911, 1916, 1918, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1939, 1941, 1949, 1952, 1953, 1954, 1961, 1962, 1963], "check": [0, 4, 5, 11, 13, 20, 23, 24, 29, 31, 40, 46, 55, 56, 61, 63, 220, 338, 495, 690, 857, 893, 895, 896, 904, 905, 950, 977, 978, 980, 984, 1013, 1031, 1188, 1198, 1201, 1216, 1217, 1230, 1231, 1236, 1237, 1239, 1242, 1244, 1249, 1255, 1258, 1262, 1264, 1265, 1290, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1605, 1614, 1623, 1626, 1639, 1649, 1672, 1673, 1674, 1797, 1804, 1805, 1806, 1807, 1808, 1809, 1858, 1860, 1875, 1876, 1879, 1880, 1881, 1893, 1894, 1899, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1915, 1918, 1921, 1922, 1923, 1924, 1930, 1934, 1939, 1941, 1947, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1964], "inf": [0, 29, 46, 680, 682, 685, 686, 687, 881, 916, 932, 1190, 1191, 1193, 1195, 1196, 1232, 1247, 1253, 1257, 1260, 1270, 1281, 1328, 1424, 1467, 1477, 1583, 1618, 1632, 1641, 1661, 1750, 1757, 1899, 1900, 1906, 1914, 1935, 1941, 1963], "found": [0, 7, 14, 15, 17, 40, 54, 78, 80, 81, 82, 932, 974, 1053, 1054, 1201, 1205, 1222, 1298, 1301, 1303, 1306, 1330, 1346, 1356, 1379, 1434, 1461, 1757, 1875, 1877, 1880, 1895, 1899, 1905, 1908, 1911, 1913, 1918, 1922, 1924, 1925, 1930, 1939, 1949, 1952, 1957, 1960, 1962, 1964], "otherwis": [0, 1, 3, 5, 7, 9, 11, 13, 20, 23, 24, 30, 33, 46, 47, 51, 54, 87, 208, 319, 326, 330, 334, 336, 340, 341, 491, 500, 556, 576, 577, 579, 599, 613, 676, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 731, 756, 764, 765, 780, 790, 813, 816, 817, 857, 858, 861, 888, 891, 899, 904, 916, 932, 1015, 1074, 1080, 1113, 1125, 1192, 1198, 1201, 1204, 1207, 1213, 1222, 1246, 1261, 1270, 1272, 1273, 1288, 1293, 1298, 1300, 1301, 1303, 1305, 1306, 1329, 1332, 1348, 1349, 1368, 1370, 1373, 1374, 1375, 1379, 1386, 1390, 1391, 1392, 1393, 1395, 1404, 1420, 1434, 1438, 1439, 1440, 1441, 1442, 1444, 1449, 1450, 1452, 1465, 1471, 1473, 1476, 1477, 1479, 1481, 1482, 1483, 1501, 1502, 1535, 1537, 1538, 1542, 1577, 1587, 1614, 1621, 1626, 1647, 1651, 1659, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1709, 1711, 1719, 1721, 1728, 1737, 1744, 1757, 1765, 1773, 1816, 1817, 1818, 1821, 1853, 1854, 1855, 1863, 1864, 1871, 1875, 1877, 1879, 1880, 1887, 1888, 1893, 1899, 1905, 1906, 1913, 1918, 1925, 1926, 1928, 1929, 1930, 1932, 1935, 1936, 1937, 1938, 1939, 1941, 1964], "skip": [0, 40, 855, 950, 1074, 1127, 1230, 1231, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1791, 1859, 1877, 1899, 1900, 1903, 1904, 1905, 1911, 1921, 1924, 1930, 1951, 1953, 1954, 1956], "avoid": [0, 5, 8, 9, 20, 23, 29, 38, 41, 46, 54, 55, 62, 63, 190, 207, 445, 777, 861, 889, 929, 948, 1031, 1201, 1246, 1272, 1369, 1400, 1401, 1425, 1434, 1443, 1448, 1485, 1515, 1545, 1569, 1576, 1614, 1622, 1692, 1743, 1772, 1818, 1836, 1854, 1876, 1890, 1894, 1900, 1902, 1903, 1907, 1908, 1911, 1923, 1930, 1931, 1938, 1939, 1940, 1951, 1952, 1953, 1954, 1956], "corrupt": [0, 23, 40, 1371, 1903, 1913], "param": [0, 1, 27, 29, 32, 40, 46, 48, 50, 54, 760, 791, 1130, 1140, 1201, 1219, 1434, 1440, 1444, 1445, 1613, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1705, 1859, 1878, 1888, 1898, 1899, 1903, 1904, 1921, 1964], "appli": [0, 1, 3, 5, 8, 21, 25, 27, 28, 29, 31, 33, 40, 46, 50, 51, 52, 54, 55, 64, 77, 78, 118, 319, 396, 469, 509, 513, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 731, 734, 735, 736, 737, 738, 739, 754, 756, 762, 763, 764, 765, 766, 767, 768, 769, 770, 776, 777, 778, 779, 780, 806, 807, 808, 809, 836, 854, 893, 895, 896, 904, 921, 924, 950, 961, 1062, 1064, 1069, 1078, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1122, 1130, 1131, 1138, 1141, 1142, 1201, 1205, 1250, 1273, 1290, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1376, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1448, 1449, 1452, 1453, 1454, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1526, 1528, 1529, 1530, 1531, 1534, 1536, 1537, 1538, 1539, 1543, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1563, 1568, 1576, 1577, 1578, 1579, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1605, 1610, 1611, 1614, 1621, 1622, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1647, 1648, 1655, 1656, 1658, 1659, 1661, 1676, 1688, 1692, 1705, 1718, 1723, 1724, 1725, 1726, 1727, 1767, 1798, 1799, 1801, 1818, 1854, 1855, 1856, 1868, 1877, 1880, 1887, 1892, 1894, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1911, 1914, 1918, 1921, 1922, 1923, 1925, 1928, 1931, 1934, 1935, 1947, 1948, 1950, 1954, 1962], "argument": [0, 1, 3, 4, 5, 8, 9, 13, 17, 20, 23, 24, 25, 27, 29, 31, 38, 41, 43, 46, 50, 51, 53, 54, 55, 61, 62, 63, 79, 87, 149, 195, 208, 311, 319, 442, 443, 444, 445, 446, 484, 509, 513, 556, 576, 577, 579, 580, 581, 583, 584, 599, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 730, 734, 735, 736, 737, 738, 739, 789, 790, 795, 815, 816, 817, 820, 821, 822, 837, 853, 854, 857, 859, 861, 876, 877, 878, 879, 880, 881, 885, 886, 887, 888, 889, 893, 894, 895, 898, 900, 901, 902, 903, 904, 909, 910, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 928, 932, 935, 937, 938, 939, 940, 941, 943, 945, 946, 952, 956, 960, 961, 963, 964, 966, 974, 996, 998, 1002, 1003, 1009, 1017, 1018, 1020, 1043, 1047, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1062, 1063, 1064, 1065, 1066, 1069, 1071, 1072, 1073, 1075, 1076, 1077, 1079, 1084, 1087, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1175, 1178, 1195, 1196, 1198, 1201, 1204, 1212, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1378, 1381, 1384, 1386, 1393, 1396, 1397, 1398, 1399, 1400, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1430, 1431, 1432, 1434, 1435, 1440, 1441, 1442, 1449, 1473, 1481, 1485, 1487, 1488, 1531, 1533, 1569, 1605, 1608, 1609, 1610, 1611, 1614, 1625, 1626, 1628, 1632, 1633, 1637, 1641, 1647, 1656, 1660, 1662, 1665, 1666, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1697, 1709, 1710, 1714, 1715, 1718, 1719, 1721, 1722, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1741, 1742, 1743, 1750, 1752, 1757, 1761, 1767, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1795, 1797, 1799, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1833, 1834, 1835, 1836, 1838, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1854, 1857, 1863, 1864, 1868, 1869, 1870, 1871, 1873, 1874, 1875, 1878, 1879, 1880, 1882, 1884, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1915, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1934, 1935, 1936, 1937, 1939, 1941, 1948, 1952, 1957, 1962, 1964, 1965], "keyword": [0, 1, 5, 20, 23, 24, 27, 51, 54, 55, 61, 79, 87, 311, 319, 442, 443, 444, 445, 446, 577, 676, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 857, 861, 876, 877, 878, 879, 880, 881, 916, 917, 918, 920, 921, 922, 923, 924, 925, 926, 928, 932, 935, 937, 939, 940, 941, 943, 945, 946, 956, 960, 961, 963, 964, 966, 974, 987, 989, 991, 1017, 1018, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1066, 1069, 1071, 1073, 1075, 1076, 1077, 1079, 1084, 1087, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1127, 1128, 1129, 1130, 1143, 1144, 1145, 1146, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1175, 1178, 1195, 1196, 1201, 1204, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1288, 1289, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1301, 1303, 1304, 1305, 1306, 1322, 1323, 1324, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1371, 1393, 1396, 1434, 1608, 1609, 1614, 1626, 1628, 1633, 1637, 1656, 1660, 1662, 1665, 1666, 1668, 1709, 1710, 1714, 1715, 1718, 1719, 1721, 1722, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1741, 1742, 1743, 1750, 1752, 1757, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1795, 1797, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1814, 1815, 1816, 1817, 1819, 1821, 1822, 1833, 1834, 1835, 1836, 1840, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1857, 1863, 1864, 1865, 1870, 1871, 1873, 1874, 1875, 1880, 1881, 1894, 1895, 1905, 1914, 1918, 1921, 1930, 1934, 1935, 1939, 1964], "closur": [0, 27, 55, 62, 63, 950, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1954], "divid": [0, 5, 21, 23, 27, 236, 579, 580, 581, 991, 1069, 1072, 1092, 1110, 1119, 1163, 1164, 1211, 1350, 1351, 1357, 1358, 1368, 1394, 1395, 1401, 1425, 1426, 1437, 1438, 1439, 1448, 1465, 1466, 1482, 1483, 1505, 1506, 1516, 1517, 1545, 1568, 1576, 1614, 1822, 1869, 1878, 1920], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 38, 40, 41, 43, 46, 48, 49, 51, 54, 55, 80, 81, 149, 252, 468, 491, 495, 579, 676, 730, 731, 815, 816, 817, 820, 821, 822, 837, 854, 885, 889, 893, 894, 903, 929, 930, 938, 1011, 1020, 1027, 1062, 1064, 1074, 1095, 1097, 1117, 1130, 1201, 1294, 1324, 1370, 1377, 1430, 1431, 1432, 1434, 1440, 1477, 1479, 1481, 1508, 1509, 1510, 1601, 1614, 1626, 1628, 1632, 1634, 1662, 1668, 1692, 1738, 1743, 1757, 1815, 1843, 1858, 1860, 1876, 1877, 1879, 1880, 1887, 1888, 1892, 1894, 1895, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1941, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1959, 1961, 1963, 1964], "modifi": [0, 1, 17, 20, 21, 23, 24, 25, 27, 46, 54, 55, 258, 484, 787, 834, 835, 836, 893, 895, 896, 909, 910, 950, 959, 960, 1154, 1198, 1201, 1204, 1205, 1220, 1377, 1434, 1477, 1479, 1481, 1524, 1525, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1619, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1695, 1703, 1785, 1877, 1880, 1893, 1899, 1903, 1905, 1906, 1911, 1916, 1922, 1923, 1925, 1930, 1935, 1938, 1940, 1944, 1950, 1951, 1952, 1953, 1959, 1963], "inspect": [0, 1, 23, 46, 54, 912, 1201, 1212, 1899, 1905, 1910, 1922, 1926, 1937, 1953, 1955, 1957, 1964], "between": [0, 1, 2, 3, 7, 16, 17, 21, 23, 29, 30, 40, 41, 42, 46, 53, 54, 195, 509, 579, 580, 581, 583, 584, 603, 613, 685, 686, 687, 691, 692, 756, 768, 769, 770, 798, 853, 861, 880, 889, 891, 898, 900, 901, 902, 904, 905, 936, 948, 966, 977, 984, 986, 1033, 1037, 1051, 1052, 1057, 1074, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1125, 1154, 1161, 1198, 1201, 1212, 1236, 1237, 1259, 1264, 1331, 1350, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1373, 1374, 1375, 1379, 1381, 1386, 1395, 1401, 1410, 1411, 1412, 1413, 1414, 1415, 1425, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1443, 1462, 1465, 1466, 1467, 1482, 1483, 1485, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1532, 1557, 1558, 1559, 1573, 1589, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1668, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1696, 1697, 1703, 1705, 1714, 1722, 1726, 1727, 1732, 1733, 1737, 1762, 1815, 1816, 1817, 1818, 1822, 1842, 1843, 1863, 1864, 1877, 1879, 1880, 1881, 1887, 1892, 1895, 1899, 1900, 1902, 1903, 1904, 1908, 1909, 1911, 1913, 1915, 1916, 1918, 1921, 1923, 1925, 1926, 1930, 1932, 1934, 1936, 1939, 1943, 1948, 1956, 1961, 1963], "dure": [0, 1, 5, 13, 17, 21, 23, 25, 31, 32, 34, 40, 46, 53, 54, 55, 78, 79, 333, 499, 500, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 823, 885, 886, 895, 1019, 1020, 1032, 1033, 1052, 1211, 1213, 1214, 1216, 1272, 1346, 1352, 1353, 1354, 1371, 1372, 1377, 1378, 1397, 1398, 1399, 1452, 1473, 1479, 1481, 1518, 1524, 1525, 1605, 1614, 1616, 1617, 1654, 1668, 1673, 1706, 1803, 1847, 1849, 1879, 1886, 1887, 1888, 1890, 1893, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1914, 1915, 1918, 1922, 1924, 1925, 1928, 1930, 1932, 1941, 1948, 1949, 1953, 1956, 1960, 1961, 1962, 1963], "simpl": [0, 14, 17, 21, 33, 40, 50, 52, 54, 966, 1031, 1132, 1140, 1141, 1142, 1201, 1205, 1212, 1352, 1353, 1354, 1377, 1407, 1408, 1409, 1434, 1473, 1524, 1669, 1778, 1868, 1875, 1877, 1881, 1895, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1918, 1922, 1930, 1934, 1952, 1955, 1956], "clip": [0, 46, 962, 1618, 1619, 1878, 1906, 1918, 1920], "util": [0, 7, 16, 41, 46, 47, 53, 54, 55, 728, 731, 734, 735, 736, 741, 742, 752, 756, 760, 786, 794, 991, 1125, 1201, 1386, 1404, 1434, 1449, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1623, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1647, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1826, 1827, 1828, 1829, 1830, 1876, 1880, 1890, 1899, 1901, 1902, 1903, 1905, 1907, 1908, 1910, 1911, 1913, 1918, 1921, 1922, 1923, 1951, 1953, 1961, 1963], "clip_grad_norm_": [0, 46, 1899], "max_norm": [0, 46, 741, 742, 1377, 1378, 1524, 1525, 1618, 1878, 1899], "own": [0, 7, 9, 23, 24, 27, 29, 32, 40, 42, 46, 54, 676, 1009, 1108, 1127, 1163, 1201, 1272, 1362, 1363, 1364, 1365, 1366, 1367, 1434, 1623, 1626, 1880, 1896, 1899, 1903, 1922, 1925, 1926, 1930, 1932, 1934, 1952, 1955], "onc": [0, 1, 7, 9, 14, 20, 21, 23, 24, 25, 27, 29, 30, 32, 33, 40, 46, 49, 51, 53, 54, 77, 893, 894, 895, 897, 899, 1074, 1201, 1205, 1272, 1371, 1434, 1614, 1624, 1626, 1658, 1701, 1705, 1721, 1768, 1772, 1860, 1877, 1880, 1888, 1890, 1892, 1899, 1900, 1902, 1903, 1905, 1908, 1910, 1911, 1921, 1922, 1934, 1939, 1948, 1950, 1953, 1956, 1960], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 13, 14, 17, 20, 21, 23, 24, 25, 27, 29, 31, 33, 37, 38, 39, 40, 41, 42, 43, 46, 49, 51, 52, 53, 54, 70, 87, 149, 258, 311, 313, 319, 333, 483, 509, 511, 513, 542, 556, 603, 606, 613, 676, 682, 683, 688, 690, 694, 695, 731, 756, 787, 789, 790, 810, 836, 850, 854, 857, 870, 873, 885, 886, 887, 889, 890, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 913, 914, 915, 918, 927, 929, 934, 935, 939, 942, 943, 947, 948, 950, 955, 965, 973, 977, 978, 980, 981, 989, 990, 999, 1007, 1011, 1017, 1021, 1022, 1030, 1031, 1038, 1039, 1041, 1042, 1046, 1048, 1050, 1091, 1092, 1093, 1094, 1097, 1100, 1101, 1104, 1107, 1109, 1111, 1127, 1130, 1131, 1137, 1138, 1140, 1141, 1143, 1163, 1166, 1197, 1198, 1201, 1208, 1211, 1212, 1215, 1216, 1236, 1263, 1272, 1288, 1290, 1298, 1300, 1303, 1311, 1312, 1321, 1329, 1330, 1331, 1332, 1342, 1349, 1351, 1355, 1357, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1381, 1386, 1387, 1388, 1389, 1394, 1400, 1401, 1404, 1405, 1421, 1425, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1473, 1477, 1479, 1481, 1482, 1485, 1490, 1491, 1498, 1504, 1506, 1524, 1525, 1530, 1535, 1554, 1555, 1583, 1589, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1621, 1626, 1633, 1637, 1647, 1651, 1659, 1660, 1661, 1662, 1668, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1697, 1700, 1701, 1704, 1705, 1706, 1707, 1719, 1797, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1815, 1816, 1817, 1818, 1821, 1837, 1839, 1846, 1847, 1848, 1849, 1852, 1855, 1860, 1863, 1864, 1866, 1870, 1875, 1877, 1878, 1879, 1880, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1922, 1923, 1924, 1925, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1948, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1959, 1960, 1961, 1962, 1963, 1964], "assign": [0, 1, 7, 9, 10, 20, 23, 31, 40, 41, 51, 54, 676, 834, 835, 836, 1199, 1201, 1202, 1342, 1370, 1434, 1441, 1444, 1445, 1615, 1626, 1877, 1881, 1899, 1905, 1906, 1907, 1918, 1925, 1931, 1932, 1938, 1939], "been": [0, 1, 5, 9, 11, 20, 21, 23, 24, 27, 28, 29, 31, 33, 40, 43, 46, 49, 50, 54, 79, 676, 756, 893, 978, 980, 985, 1013, 1016, 1073, 1078, 1131, 1204, 1205, 1210, 1215, 1272, 1386, 1393, 1404, 1449, 1498, 1533, 1614, 1623, 1628, 1632, 1634, 1654, 1655, 1668, 1675, 1695, 1696, 1697, 1703, 1705, 1721, 1818, 1860, 1870, 1886, 1890, 1892, 1893, 1894, 1899, 1900, 1902, 1903, 1908, 1909, 1911, 1913, 1915, 1917, 1918, 1921, 1922, 1930, 1932, 1934, 1939, 1948, 1949, 1953, 1959, 1963], "accumul": [0, 1, 2, 46, 149, 288, 311, 316, 317, 319, 468, 682, 889, 903, 1270, 1614, 1676, 1677, 1857, 1877, 1878, 1890, 1900, 1903, 1904, 1907, 1914, 1921, 1926, 1930, 1931, 1934, 1951, 1953, 1958, 1963], "twice": [0, 53, 613, 898, 1138, 1899, 1900, 1907, 1908, 1952], "given": [0, 1, 2, 3, 7, 9, 13, 20, 21, 23, 24, 25, 27, 28, 29, 31, 38, 40, 42, 46, 52, 53, 54, 70, 149, 218, 311, 313, 315, 319, 324, 375, 396, 400, 469, 470, 471, 472, 473, 475, 509, 511, 513, 580, 581, 600, 603, 676, 689, 691, 692, 694, 695, 731, 756, 775, 781, 788, 789, 790, 791, 795, 796, 798, 816, 820, 833, 836, 850, 854, 861, 872, 885, 887, 889, 891, 893, 895, 897, 898, 899, 900, 901, 902, 905, 918, 919, 922, 930, 934, 935, 941, 942, 947, 948, 960, 962, 965, 966, 968, 969, 972, 974, 977, 978, 980, 981, 982, 986, 994, 995, 998, 1002, 1003, 1019, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1049, 1050, 1051, 1052, 1059, 1061, 1066, 1074, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1114, 1130, 1140, 1141, 1167, 1198, 1201, 1208, 1216, 1217, 1222, 1226, 1236, 1238, 1239, 1248, 1250, 1256, 1264, 1273, 1280, 1282, 1283, 1284, 1285, 1288, 1298, 1300, 1302, 1303, 1306, 1332, 1342, 1350, 1351, 1357, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1377, 1378, 1382, 1383, 1386, 1394, 1404, 1426, 1430, 1431, 1432, 1434, 1436, 1438, 1439, 1441, 1443, 1445, 1449, 1462, 1468, 1482, 1483, 1486, 1487, 1488, 1498, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1524, 1525, 1528, 1529, 1533, 1544, 1568, 1583, 1598, 1602, 1603, 1604, 1608, 1609, 1610, 1622, 1647, 1654, 1655, 1658, 1661, 1662, 1672, 1673, 1699, 1702, 1704, 1706, 1709, 1714, 1719, 1722, 1723, 1724, 1737, 1743, 1748, 1759, 1760, 1791, 1795, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1815, 1818, 1821, 1823, 1832, 1833, 1838, 1840, 1842, 1852, 1857, 1861, 1875, 1876, 1877, 1880, 1884, 1886, 1887, 1889, 1892, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1915, 1916, 1918, 1921, 1924, 1925, 1930, 1931, 1934, 1935, 1936, 1939, 1941, 1944, 1947, 1952, 1953, 1956, 1962, 1963, 1964], "trigger": [0, 7, 9, 23, 40, 53, 79, 80, 82, 220, 1048, 1770, 1899, 1903, 1904, 1905, 1910, 1916, 1930, 1948, 1950, 1953, 1959, 1960, 1963], "runtimeerror": [0, 1, 13, 23, 27, 51, 54, 79, 87, 579, 693, 893, 929, 1122, 1176, 1186, 1201, 1230, 1231, 1232, 1240, 1241, 1242, 1244, 1248, 1254, 1261, 1266, 1267, 1293, 1324, 1434, 1670, 1759, 1797, 1857, 1877, 1879, 1880, 1893, 1895, 1899, 1901, 1907, 1915, 1917, 1918, 1925, 1929, 1934, 1937], "spars": [0, 1, 11, 189, 190, 207, 217, 220, 321, 326, 340, 341, 432, 539, 540, 541, 542, 577, 579, 580, 581, 582, 583, 584, 610, 685, 741, 742, 904, 905, 1048, 1143, 1165, 1186, 1273, 1295, 1305, 1334, 1377, 1378, 1467, 1524, 1525, 1550, 1692, 1711, 1759, 1793, 1797, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1823, 1842, 1857, 1858, 1876, 1878, 1882, 1887, 1898, 1914, 1915, 1920, 1927, 1937, 1938, 1941, 1951, 1958], "place": [0, 3, 7, 11, 20, 21, 23, 25, 30, 31, 46, 49, 50, 54, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 120, 122, 124, 126, 129, 130, 132, 140, 142, 145, 146, 148, 151, 157, 159, 161, 163, 165, 167, 176, 185, 193, 197, 200, 202, 212, 214, 220, 221, 230, 234, 236, 242, 245, 247, 249, 251, 252, 255, 258, 260, 267, 269, 271, 275, 277, 281, 283, 290, 292, 294, 302, 304, 306, 308, 310, 312, 314, 316, 354, 356, 358, 360, 362, 364, 366, 369, 371, 373, 374, 381, 383, 385, 387, 389, 393, 397, 399, 417, 420, 423, 425, 436, 438, 440, 448, 453, 463, 466, 482, 484, 486, 488, 492, 495, 504, 507, 508, 510, 512, 518, 523, 525, 528, 530, 532, 545, 547, 549, 558, 560, 567, 571, 573, 589, 592, 594, 596, 598, 599, 608, 618, 754, 789, 793, 810, 834, 835, 853, 854, 893, 895, 909, 910, 930, 987, 988, 990, 991, 1011, 1074, 1125, 1130, 1131, 1139, 1201, 1245, 1263, 1324, 1346, 1356, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1391, 1392, 1393, 1420, 1434, 1451, 1452, 1453, 1454, 1461, 1476, 1518, 1519, 1520, 1521, 1523, 1524, 1525, 1526, 1537, 1540, 1549, 1580, 1582, 1597, 1601, 1605, 1610, 1611, 1614, 1618, 1619, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1656, 1692, 1748, 1750, 1754, 1755, 1756, 1802, 1838, 1876, 1877, 1879, 1880, 1887, 1894, 1899, 1903, 1905, 1910, 1921, 1922, 1923, 1930, 1931, 1936, 1938, 1940, 1951, 1952, 1953, 1956, 1960, 1962], "replac": [0, 1, 13, 20, 21, 23, 25, 39, 41, 46, 48, 49, 50, 51, 52, 54, 77, 79, 80, 82, 118, 418, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 743, 810, 835, 854, 939, 1020, 1074, 1130, 1131, 1206, 1208, 1218, 1290, 1291, 1324, 1328, 1465, 1476, 1605, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1656, 1658, 1721, 1818, 1822, 1845, 1877, 1878, 1880, 1888, 1903, 1905, 1906, 1908, 1910, 1913, 1917, 1918, 1920, 1922, 1925, 1941, 1949, 1951, 1955, 1962], "were": [0, 1, 2, 3, 17, 23, 31, 40, 43, 46, 51, 53, 54, 149, 319, 333, 468, 850, 885, 887, 889, 903, 1020, 1131, 1142, 1208, 1272, 1498, 1614, 1618, 1623, 1633, 1650, 1688, 1757, 1761, 1832, 1839, 1868, 1879, 1887, 1899, 1903, 1905, 1916, 1918, 1922, 1948, 1952, 1953, 1959, 1962, 1963], "reduc": [0, 2, 3, 13, 21, 23, 24, 25, 27, 46, 319, 509, 512, 513, 682, 689, 691, 692, 693, 695, 815, 816, 817, 818, 821, 823, 870, 871, 948, 988, 999, 1031, 1174, 1253, 1257, 1259, 1264, 1270, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1330, 1331, 1332, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1378, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1482, 1505, 1506, 1514, 1516, 1525, 1541, 1544, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1587, 1588, 1599, 1602, 1614, 1622, 1659, 1681, 1705, 1719, 1721, 1722, 1756, 1799, 1803, 1816, 1817, 1821, 1822, 1843, 1857, 1863, 1864, 1878, 1892, 1893, 1900, 1902, 1904, 1905, 1911, 1913, 1915, 1916, 1917, 1920, 1921, 1922, 1923, 1925, 1934, 1948, 1951, 1953, 1958, 1959, 1963, 1964], "occur": [0, 11, 20, 23, 33, 34, 40, 46, 51, 77, 79, 195, 313, 948, 1034, 1074, 1198, 1204, 1214, 1244, 1357, 1473, 1517, 1661, 1671, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1879, 1890, 1894, 1899, 1900, 1903, 1907, 1914, 1918, 1924, 1930, 1932, 1938, 1941, 1951, 1953, 1955, 1959, 1961, 1963, 1964], "increas": [0, 1, 3, 7, 21, 23, 29, 37, 46, 676, 850, 894, 932, 999, 1031, 1074, 1162, 1163, 1342, 1351, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1446, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1574, 1575, 1583, 1690, 1696, 1697, 1701, 1703, 1705, 1757, 1765, 1843, 1862, 1878, 1886, 1891, 1902, 1903, 1909, 1913, 1926, 1934, 1948, 1953, 1957], "set": [0, 1, 2, 3, 5, 8, 9, 12, 13, 19, 20, 21, 23, 24, 25, 27, 29, 31, 33, 38, 40, 41, 42, 43, 46, 49, 50, 53, 54, 55, 87, 149, 153, 252, 328, 442, 443, 444, 445, 446, 455, 492, 495, 516, 576, 577, 676, 731, 737, 739, 756, 775, 781, 788, 789, 790, 793, 811, 812, 813, 816, 817, 818, 821, 822, 837, 850, 854, 855, 857, 858, 861, 874, 886, 888, 889, 896, 897, 898, 899, 900, 901, 902, 903, 927, 932, 943, 947, 948, 960, 985, 1000, 1009, 1021, 1022, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1075, 1076, 1077, 1130, 1139, 1148, 1163, 1181, 1182, 1201, 1205, 1208, 1210, 1212, 1214, 1216, 1217, 1236, 1237, 1240, 1246, 1253, 1255, 1257, 1258, 1270, 1271, 1272, 1273, 1287, 1290, 1293, 1314, 1318, 1319, 1320, 1342, 1346, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1379, 1386, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1421, 1425, 1426, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1444, 1448, 1449, 1465, 1466, 1473, 1477, 1479, 1481, 1482, 1483, 1498, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1533, 1537, 1544, 1545, 1554, 1555, 1568, 1570, 1576, 1583, 1602, 1614, 1616, 1617, 1622, 1627, 1656, 1668, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1721, 1728, 1730, 1734, 1736, 1737, 1745, 1746, 1757, 1758, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1787, 1802, 1816, 1817, 1836, 1846, 1847, 1848, 1849, 1857, 1860, 1861, 1863, 1864, 1875, 1877, 1879, 1880, 1881, 1884, 1886, 1888, 1889, 1890, 1892, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1939, 1941, 1943, 1944, 1947, 1950, 1952, 1953, 1954, 1956, 1958, 1959, 1960, 1962, 1963, 1964], "directli": [0, 1, 3, 7, 9, 13, 14, 20, 21, 23, 25, 29, 30, 31, 39, 46, 50, 54, 553, 728, 743, 886, 895, 950, 1057, 1125, 1131, 1138, 1140, 1146, 1231, 1440, 1467, 1486, 1544, 1589, 1648, 1843, 1877, 1879, 1880, 1890, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1916, 1922, 1924, 1925, 1930, 1934, 1939, 1941, 1951, 1952, 1953, 1955, 1957, 1962, 1963], "fill": [0, 23, 153, 172, 256, 257, 258, 284, 315, 319, 375, 398, 442, 443, 444, 446, 451, 478, 604, 619, 919, 1062, 1075, 1076, 1077, 1128, 1129, 1231, 1242, 1244, 1378, 1477, 1525, 1571, 1665, 1666, 1730, 1731, 1732, 1733, 1734, 1735, 1822, 1857, 1873, 1874, 1878, 1884, 1894, 1895, 1898, 1903, 1905, 1916, 1920, 1934, 1941, 1952, 1956, 1958], "later": [0, 1, 2, 3, 7, 19, 21, 23, 46, 53, 54, 741, 742, 752, 760, 912, 1009, 1272, 1404, 1427, 1428, 1429, 1449, 1463, 1557, 1558, 1559, 1586, 1614, 1822, 1877, 1900, 1902, 1903, 1904, 1911, 1916, 1931, 1932, 1956, 1959], "chang": [0, 1, 2, 3, 7, 11, 17, 21, 23, 25, 27, 28, 29, 31, 39, 44, 46, 47, 50, 51, 53, 54, 138, 220, 252, 319, 455, 492, 495, 513, 516, 552, 613, 676, 815, 873, 904, 905, 948, 959, 960, 974, 975, 976, 985, 996, 998, 1009, 1010, 1017, 1018, 1020, 1062, 1110, 1130, 1148, 1154, 1175, 1198, 1201, 1211, 1212, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1302, 1374, 1377, 1395, 1404, 1434, 1465, 1486, 1498, 1533, 1557, 1558, 1559, 1583, 1605, 1606, 1614, 1616, 1617, 1623, 1626, 1627, 1656, 1660, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1697, 1700, 1701, 1703, 1705, 1707, 1721, 1761, 1765, 1802, 1813, 1816, 1817, 1818, 1842, 1860, 1863, 1864, 1875, 1876, 1877, 1886, 1887, 1888, 1890, 1892, 1893, 1894, 1895, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1908, 1909, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1948, 1951, 1952, 1954, 1955, 1956, 1959, 1960, 1963], "further": [0, 1, 4, 9, 13, 21, 23, 46, 53, 1146, 1205, 1240, 1342, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1614, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1709, 1880, 1887, 1911, 1913, 1922, 1924, 1932, 1939, 1944, 1947, 1951, 1958, 1961, 1963], "floattensor": [0, 23, 319, 484, 682, 683, 684, 685, 686, 731, 904, 905, 916, 1148, 1377, 1378, 1437, 1477, 1763, 1937, 1940], "end": [0, 7, 8, 9, 20, 21, 23, 29, 33, 37, 49, 54, 359, 360, 534, 756, 780, 793, 816, 817, 861, 917, 961, 975, 1035, 1064, 1074, 1113, 1127, 1154, 1160, 1161, 1198, 1201, 1221, 1226, 1256, 1266, 1268, 1271, 1273, 1287, 1333, 1334, 1349, 1350, 1351, 1368, 1370, 1376, 1380, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1404, 1405, 1420, 1425, 1428, 1429, 1434, 1436, 1441, 1442, 1445, 1449, 1452, 1462, 1465, 1471, 1476, 1483, 1516, 1525, 1537, 1538, 1614, 1621, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1695, 1700, 1737, 1770, 1773, 1776, 1791, 1843, 1854, 1855, 1871, 1877, 1878, 1879, 1880, 1892, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1914, 1917, 1918, 1921, 1924, 1925, 1928, 1930, 1935, 1948, 1952, 1955, 1958, 1963], "reason": [0, 3, 8, 9, 20, 23, 25, 46, 51, 676, 837, 1095, 1097, 1201, 1216, 1217, 1236, 1237, 1264, 1301, 1350, 1374, 1434, 1535, 1583, 1610, 1611, 1626, 1753, 1877, 1879, 1880, 1886, 1900, 1904, 1906, 1914, 1916, 1918, 1930, 1937, 1949, 1951, 1952, 1953, 1956, 1957, 1963, 1964], "do": [0, 1, 4, 7, 8, 9, 11, 13, 14, 20, 21, 23, 27, 28, 30, 31, 33, 40, 41, 42, 46, 47, 48, 51, 52, 53, 54, 79, 491, 509, 511, 513, 754, 819, 822, 859, 888, 890, 895, 904, 934, 947, 948, 1020, 1053, 1054, 1055, 1056, 1125, 1127, 1136, 1143, 1163, 1176, 1188, 1198, 1201, 1204, 1212, 1216, 1246, 1264, 1273, 1280, 1290, 1292, 1301, 1324, 1334, 1346, 1356, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1391, 1392, 1393, 1420, 1452, 1453, 1454, 1461, 1476, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1535, 1537, 1552, 1605, 1614, 1662, 1670, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1709, 1715, 1857, 1875, 1876, 1877, 1878, 1880, 1882, 1884, 1892, 1893, 1894, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1924, 1925, 1926, 1930, 1932, 1934, 1935, 1936, 1937, 1938, 1939, 1941, 1948, 1951, 1952, 1955, 1956, 1959, 1960, 1962, 1963], "synchron": [0, 3, 4, 16, 17, 21, 25, 27, 31, 40, 46, 53, 873, 977, 978, 980, 988, 1008, 1048, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1248, 1249, 1255, 1258, 1261, 1262, 1264, 1265, 1273, 1312, 1473, 1614, 1660, 1662, 1743, 1876, 1902, 1903, 1904, 1909, 1913, 1923, 1930, 1953], "fall": [0, 2, 7, 13, 20, 791, 904, 948, 1163, 1214, 1272, 1395, 1465, 1542, 1587, 1618, 1619, 1875, 1918, 1925], "below": [0, 1, 5, 9, 13, 20, 21, 23, 29, 31, 32, 37, 40, 41, 42, 43, 54, 55, 62, 63, 676, 730, 744, 753, 791, 810, 1017, 1061, 1062, 1063, 1064, 1065, 1074, 1102, 1104, 1108, 1146, 1154, 1201, 1217, 1257, 1258, 1263, 1270, 1302, 1365, 1366, 1367, 1386, 1388, 1395, 1404, 1406, 1430, 1431, 1432, 1434, 1449, 1465, 1486, 1516, 1542, 1587, 1614, 1626, 1660, 1692, 1762, 1802, 1833, 1843, 1846, 1847, 1848, 1849, 1877, 1879, 1880, 1882, 1886, 1887, 1892, 1893, 1899, 1900, 1903, 1904, 1905, 1908, 1909, 1911, 1913, 1915, 1916, 1918, 1921, 1922, 1923, 1925, 1927, 1930, 1931, 1932, 1935, 1938, 1941, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1963], "someth": [0, 3, 7, 48, 54, 55, 57, 897, 899, 1074, 1201, 1216, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1882, 1890, 1892, 1893, 1900, 1909, 1917, 1918, 1930, 1949, 1951, 1953, 1955, 1956, 1962, 1963, 1964], "wrong": [0, 23, 54, 79, 893, 1199, 1202, 1904, 1913, 1917, 1918, 1921], "incompat": [0, 9, 13, 51, 929, 1198, 1901, 1922], "due": [0, 3, 4, 5, 7, 21, 23, 29, 39, 46, 51, 54, 55, 57, 79, 483, 876, 897, 898, 903, 962, 1213, 1236, 1237, 1264, 1290, 1374, 1388, 1477, 1486, 1544, 1583, 1654, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1823, 1877, 1895, 1903, 1904, 1908, 1909, 1915, 1918, 1925, 1926, 1930, 1932, 1953, 1956, 1959, 1963], "float64": [0, 11, 238, 443, 446, 576, 876, 956, 1117, 1126, 1148, 1183, 1201, 1230, 1236, 1237, 1239, 1241, 1257, 1434, 1583, 1678, 1679, 1715, 1723, 1762, 1763, 1766, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1866, 1871, 1911, 1914, 1934, 1936, 1937, 1940, 1941, 1965], "variant": [0, 5, 21, 854, 1231, 1242, 1255, 1258, 1331, 1334, 1678, 1679, 1680, 1692, 1845, 1876, 1910, 1928, 1940, 1958, 1959, 1962], "suppli": [0, 5, 7, 13, 14, 23, 1009, 1440, 1674, 1880, 1903, 1918, 1934, 1953, 1963], "won": [0, 8, 21, 25, 40, 49, 455, 1201, 1212, 1434, 1569, 1608, 1609, 1875, 1900, 1905, 1930, 1942, 1952, 1953, 1956, 1961, 1963], "go": [0, 1, 7, 14, 20, 23, 37, 42, 50, 54, 495, 496, 556, 894, 909, 1273, 1347, 1348, 1349, 1427, 1428, 1429, 1879, 1880, 1887, 1892, 1893, 1894, 1900, 1902, 1903, 1905, 1906, 1910, 1911, 1913, 1917, 1918, 1922, 1937, 1939, 1949, 1950, 1951, 1952, 1953, 1956], "addmm": [0, 55, 105, 1814, 1878, 1893, 1914, 1920, 1934, 1958, 1962], "b": [0, 1, 3, 11, 20, 23, 25, 29, 38, 54, 55, 58, 80, 82, 258, 333, 396, 613, 681, 682, 744, 753, 777, 820, 876, 893, 895, 896, 907, 909, 910, 916, 927, 928, 930, 934, 936, 938, 941, 946, 961, 967, 968, 969, 970, 971, 972, 973, 974, 1017, 1018, 1066, 1069, 1073, 1074, 1119, 1120, 1121, 1122, 1127, 1131, 1144, 1166, 1178, 1198, 1204, 1211, 1212, 1220, 1221, 1223, 1232, 1233, 1241, 1245, 1246, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1261, 1262, 1263, 1266, 1267, 1270, 1273, 1282, 1284, 1285, 1291, 1299, 1304, 1306, 1323, 1351, 1355, 1377, 1378, 1385, 1421, 1504, 1506, 1525, 1532, 1550, 1621, 1648, 1649, 1650, 1651, 1652, 1653, 1661, 1668, 1689, 1691, 1722, 1728, 1741, 1744, 1760, 1772, 1791, 1799, 1804, 1805, 1806, 1808, 1809, 1813, 1818, 1819, 1821, 1828, 1829, 1838, 1845, 1846, 1848, 1865, 1870, 1877, 1878, 1879, 1880, 1893, 1894, 1895, 1898, 1899, 1901, 1903, 1905, 1907, 1908, 1909, 1914, 1916, 1924, 1925, 1931, 1932, 1934, 1935, 1938, 1939, 1944, 1949, 1950, 1953, 1955, 1956, 1958, 1962, 1963], "c": [0, 1, 3, 8, 9, 13, 20, 23, 29, 38, 49, 54, 80, 82, 258, 333, 495, 516, 613, 681, 817, 873, 876, 895, 927, 938, 941, 962, 1011, 1017, 1051, 1066, 1069, 1074, 1120, 1121, 1122, 1131, 1132, 1136, 1141, 1144, 1154, 1201, 1211, 1223, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1256, 1257, 1259, 1261, 1263, 1264, 1323, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1370, 1373, 1374, 1375, 1379, 1381, 1382, 1383, 1389, 1397, 1398, 1399, 1402, 1403, 1405, 1406, 1416, 1417, 1418, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1439, 1441, 1446, 1447, 1455, 1456, 1457, 1458, 1459, 1460, 1468, 1473, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1506, 1516, 1517, 1529, 1533, 1568, 1574, 1575, 1583, 1621, 1649, 1651, 1652, 1653, 1660, 1661, 1709, 1725, 1741, 1779, 1799, 1813, 1818, 1838, 1855, 1859, 1860, 1876, 1877, 1878, 1879, 1880, 1884, 1893, 1894, 1902, 1903, 1904, 1906, 1908, 1910, 1917, 1919, 1922, 1931, 1932, 1934, 1935, 1938, 1939, 1945, 1950, 1951, 1952, 1953, 1955, 1956, 1958, 1962, 1963, 1964], "addmm_": [0, 1878, 1893, 1934], "d": [0, 1, 11, 20, 21, 23, 28, 29, 47, 54, 311, 319, 333, 468, 509, 511, 513, 540, 579, 613, 682, 686, 861, 876, 895, 916, 917, 919, 926, 927, 928, 932, 938, 1061, 1063, 1073, 1074, 1087, 1091, 1092, 1093, 1094, 1099, 1100, 1103, 1104, 1109, 1110, 1111, 1114, 1115, 1116, 1142, 1143, 1158, 1159, 1166, 1175, 1198, 1202, 1206, 1243, 1244, 1294, 1305, 1326, 1341, 1349, 1350, 1354, 1364, 1368, 1369, 1373, 1374, 1375, 1377, 1379, 1381, 1386, 1388, 1399, 1404, 1406, 1418, 1429, 1443, 1449, 1473, 1482, 1483, 1485, 1498, 1533, 1544, 1550, 1577, 1601, 1602, 1622, 1655, 1660, 1661, 1690, 1710, 1728, 1737, 1749, 1757, 1762, 1813, 1818, 1831, 1832, 1838, 1841, 1846, 1847, 1848, 1849, 1862, 1868, 1870, 1875, 1878, 1887, 1893, 1894, 1895, 1898, 1900, 1903, 1905, 1906, 1908, 1909, 1916, 1918, 1930, 1931, 1934, 1935, 1939, 1940, 1952, 1953, 1955, 1961, 1963], "best": [0, 1, 7, 14, 17, 20, 23, 29, 41, 46, 49, 857, 858, 913, 935, 948, 1216, 1217, 1246, 1440, 1692, 1705, 1876, 1877, 1879, 1892, 1898, 1899, 1900, 1905, 1907, 1922, 1930, 1934, 1945, 1950, 1953, 1957], "stabil": [0, 1232, 1288, 1351, 1352, 1353, 1354, 1388, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1470, 1473, 1482, 1530, 1591, 1622, 1655, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1725, 1906, 1953, 1963], "respect": [0, 1, 5, 8, 23, 24, 27, 29, 38, 40, 46, 52, 53, 54, 195, 208, 484, 576, 599, 685, 686, 687, 756, 791, 815, 837, 881, 887, 889, 903, 905, 909, 910, 943, 966, 1062, 1064, 1065, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1141, 1154, 1201, 1232, 1236, 1237, 1246, 1256, 1259, 1261, 1264, 1273, 1305, 1328, 1350, 1357, 1365, 1366, 1367, 1371, 1386, 1388, 1404, 1434, 1435, 1449, 1479, 1481, 1482, 1483, 1484, 1486, 1524, 1533, 1610, 1611, 1628, 1632, 1634, 1656, 1658, 1691, 1705, 1796, 1799, 1822, 1838, 1894, 1899, 1900, 1903, 1905, 1908, 1911, 1912, 1923, 1928, 1934, 1935, 1936, 1941, 1952, 1957], "describ": [0, 5, 7, 8, 9, 20, 21, 25, 27, 28, 31, 32, 38, 40, 54, 509, 788, 789, 790, 811, 812, 813, 837, 855, 933, 1000, 1017, 1034, 1074, 1154, 1221, 1261, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1373, 1374, 1375, 1376, 1379, 1381, 1382, 1383, 1389, 1392, 1395, 1397, 1398, 1399, 1401, 1406, 1425, 1427, 1428, 1429, 1440, 1441, 1448, 1452, 1465, 1473, 1481, 1482, 1483, 1485, 1516, 1528, 1529, 1538, 1571, 1703, 1843, 1876, 1877, 1879, 1880, 1898, 1899, 1900, 1903, 1904, 1907, 1908, 1910, 1911, 1916, 1918, 1922, 1924, 1925, 1928, 1931, 1932, 1941, 1954, 1959], "expos": [0, 1, 8, 23, 27, 46, 53, 54, 791, 1127, 1900, 1903, 1910, 1922, 1925, 1964], "namespac": [0, 54, 1048, 1672, 1877, 1881, 1884, 1905, 1911, 1918, 1923, 1928, 1945, 1964], "defin": [0, 1, 2, 3, 5, 9, 13, 14, 20, 21, 23, 24, 25, 28, 29, 31, 32, 38, 40, 41, 46, 51, 54, 432, 442, 444, 446, 513, 562, 788, 793, 795, 834, 855, 856, 857, 858, 885, 886, 887, 888, 1031, 1057, 1074, 1075, 1094, 1122, 1128, 1144, 1146, 1160, 1162, 1163, 1190, 1201, 1223, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1253, 1257, 1258, 1259, 1261, 1263, 1264, 1270, 1306, 1371, 1376, 1382, 1383, 1390, 1391, 1392, 1393, 1400, 1402, 1403, 1434, 1440, 1452, 1467, 1469, 1474, 1476, 1498, 1533, 1583, 1589, 1605, 1608, 1614, 1632, 1634, 1641, 1642, 1662, 1665, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1697, 1700, 1703, 1721, 1730, 1732, 1734, 1741, 1770, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1799, 1801, 1843, 1846, 1847, 1848, 1849, 1871, 1873, 1875, 1877, 1880, 1882, 1884, 1892, 1893, 1895, 1900, 1903, 1904, 1908, 1909, 1911, 1913, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1928, 1930, 1934, 1935, 1940, 1941, 1942, 1948, 1949, 1952, 1954, 1956, 1960, 1964], "still": [0, 1, 2, 7, 8, 20, 23, 28, 29, 31, 40, 46, 53, 54, 790, 795, 894, 899, 1205, 1210, 1218, 1401, 1425, 1614, 1615, 1616, 1617, 1705, 1753, 1877, 1880, 1892, 1893, 1894, 1895, 1899, 1900, 1903, 1904, 1905, 1907, 1909, 1916, 1917, 1918, 1921, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1952, 1956, 1958, 1959, 1963], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 17, 20, 21, 24, 25, 27, 28, 29, 30, 31, 33, 38, 39, 40, 41, 42, 46, 50, 51, 53, 54, 55, 62, 63, 87, 149, 287, 311, 313, 315, 317, 319, 333, 469, 483, 484, 495, 509, 511, 513, 533, 556, 600, 603, 613, 620, 680, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 756, 760, 777, 786, 787, 793, 795, 815, 819, 822, 834, 850, 853, 854, 855, 857, 872, 876, 881, 888, 889, 890, 891, 897, 898, 899, 900, 901, 902, 903, 909, 910, 913, 919, 932, 935, 938, 942, 948, 950, 964, 965, 966, 974, 975, 980, 987, 988, 989, 990, 991, 1002, 1003, 1004, 1031, 1033, 1038, 1039, 1050, 1052, 1057, 1061, 1062, 1063, 1064, 1065, 1074, 1090, 1095, 1098, 1102, 1105, 1108, 1113, 1114, 1115, 1116, 1117, 1122, 1125, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1142, 1143, 1146, 1163, 1175, 1186, 1192, 1198, 1199, 1201, 1202, 1204, 1210, 1211, 1212, 1216, 1233, 1236, 1237, 1246, 1250, 1252, 1253, 1256, 1257, 1261, 1263, 1264, 1266, 1269, 1270, 1272, 1278, 1294, 1301, 1306, 1324, 1330, 1333, 1334, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1352, 1353, 1354, 1357, 1363, 1364, 1366, 1367, 1370, 1371, 1378, 1385, 1386, 1395, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1406, 1420, 1424, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1439, 1440, 1462, 1465, 1467, 1469, 1473, 1482, 1483, 1515, 1532, 1533, 1535, 1545, 1552, 1570, 1571, 1589, 1590, 1598, 1605, 1614, 1621, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1656, 1658, 1661, 1669, 1670, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1711, 1723, 1737, 1741, 1743, 1744, 1748, 1750, 1757, 1761, 1770, 1772, 1790, 1795, 1798, 1799, 1801, 1802, 1810, 1813, 1837, 1842, 1843, 1846, 1847, 1848, 1849, 1853, 1854, 1856, 1857, 1860, 1868, 1875, 1877, 1879, 1880, 1882, 1886, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "unlist": 0, "downstream": [0, 3, 1890, 1953, 1954, 1956, 1963], "stabl": [0, 1, 2, 23, 29, 40, 41, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 872, 1074, 1236, 1237, 1241, 1246, 1254, 1258, 1261, 1264, 1266, 1273, 1351, 1795, 1876, 1878, 1898, 1901, 1915, 1930], "believ": [0, 8, 1953], "unstabl": [0, 29, 1236, 1237, 1264, 1281, 1290, 1552, 1822, 1935], "__matmul__": 0, "addbmm": [0, 99, 916, 1878, 1914, 1920], "addmv": [0, 107, 1878, 1893, 1920], "addr": [0, 23, 109, 1878, 1920], "baddbmm": [0, 151, 1878, 1914, 1920], "bmm": [0, 1857, 1878, 1893, 1895, 1914, 1915, 1920, 1934, 1958], "chain_matmul": [0, 1878, 1920], "multi_dot": [0, 938], "conv1d": [0, 704, 708, 711, 721, 737, 1365, 1373, 1410, 1857, 1878, 1920, 1925, 1927], "conv2d": [0, 705, 709, 712, 714, 722, 738, 788, 810, 1201, 1210, 1212, 1216, 1217, 1366, 1374, 1411, 1434, 1435, 1441, 1462, 1485, 1641, 1857, 1877, 1878, 1888, 1918, 1920, 1925, 1927, 1928, 1939, 1944], "conv3d": [0, 706, 710, 713, 715, 723, 739, 1367, 1375, 1412, 1857, 1878, 1920, 1925, 1927], "conv_transpose1d": [0, 1878, 1920, 1927], "conv_transpose2d": [0, 1878, 1920, 1927], "conv_transpose3d": [0, 1878, 1920, 1927], "grucel": [0, 1914, 1925, 1927, 1928], "lstmcell": [0, 1914, 1925, 1927, 1928], "matmul": [0, 2, 11, 928, 948, 1141, 1305, 1485, 1711, 1721, 1765, 1822, 1878, 1893, 1895, 1903, 1914, 1920, 1927, 1934, 1948], "mv": [0, 11, 1212, 1857, 1878, 1893, 1920, 1934], "prelu": [0, 1435, 1878, 1920, 1927], "rnncell": [0, 1925, 1927, 1928], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 93, 623, 624, 862, 1878, 1893, 1920, 1941, 1958], "asin": [0, 140, 625, 626, 864, 1878, 1893, 1920, 1934, 1958], "cosh": [0, 202, 633, 634, 680, 1878, 1893, 1920, 1958], "cosine_embedding_loss": [0, 1878, 1920], "cdist": [0, 1903, 1920], "cosine_similar": [0, 1483, 1878, 1920], "cross_entropi": [0, 1878], "cumprod": [0, 212, 1878, 1893, 1920], "cumsum": [0, 214, 1057, 1857, 1878, 1893, 1920, 1958], "dist": [0, 21, 23, 24, 27, 29, 41, 46, 939, 940, 1230, 1236, 1237, 1238, 1240, 1241, 1242, 1246, 1247, 1258, 1259, 1262, 1264, 1265, 1288, 1291, 1443, 1473, 1614, 1621, 1822, 1878, 1904, 1920, 1930, 1932], "erfinv": [0, 249, 1878, 1893, 1920, 1934, 1935], "exp": [0, 1, 29, 251, 639, 640, 766, 899, 900, 902, 1117, 1260, 1280, 1288, 1351, 1356, 1370, 1376, 1400, 1423, 1424, 1438, 1448, 1461, 1464, 1466, 1467, 1469, 1470, 1474, 1507, 1553, 1576, 1584, 1585, 1589, 1591, 1594, 1621, 1718, 1779, 1780, 1801, 1818, 1878, 1893, 1900, 1918, 1920, 1935, 1958], "expm1": [0, 255, 641, 642, 1878, 1893, 1920, 1934, 1935, 1958], "group_norm": [0, 1878, 1920, 1927], "hinge_embedding_loss": [0, 1878, 1920], "kl_div": [0, 1878, 1920], "l1_loss": [0, 1878, 1920], "layer_norm": [0, 1406, 1878, 1920, 1927], "log": [0, 13, 20, 21, 29, 31, 33, 34, 37, 38, 42, 374, 375, 649, 656, 676, 1084, 1276, 1278, 1280, 1281, 1288, 1316, 1342, 1350, 1351, 1370, 1388, 1400, 1423, 1424, 1438, 1441, 1448, 1466, 1467, 1470, 1530, 1535, 1545, 1552, 1553, 1568, 1576, 1589, 1591, 1614, 1876, 1878, 1886, 1890, 1893, 1900, 1903, 1905, 1918, 1920, 1924, 1935, 1939, 1942, 1943, 1944, 1950, 1955, 1956, 1957, 1958, 1960, 1961, 1963], "log_softmax": [0, 1357, 1400, 1517, 1568, 1589, 1878, 1894, 1920, 1935], "log10": [0, 369, 650, 651, 1878, 1893, 1920, 1958], "log1p": [0, 371, 652, 653, 1878, 1893, 1920, 1934, 1935, 1958], "log2": [0, 373, 654, 655, 1878, 1893, 1920, 1935, 1958], "margin_ranking_loss": [0, 1878, 1920], "mse_loss": [0, 50, 1130, 1878, 1920], "multilabel_margin_loss": [0, 1878, 1920], "multi_margin_loss": [0, 1878, 1920], "nll_loss": [0, 1878, 1920], "norm": [0, 29, 46, 48, 54, 698, 699, 700, 701, 702, 703, 936, 1068, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1232, 1236, 1245, 1246, 1253, 1258, 1270, 1377, 1378, 1425, 1443, 1478, 1479, 1480, 1481, 1482, 1524, 1525, 1569, 1573, 1618, 1622, 1631, 1632, 1637, 1640, 1641, 1655, 1658, 1680, 1742, 1878, 1882, 1899, 1900, 1908, 1911, 1914, 1920], "normal": [0, 1, 21, 27, 40, 46, 54, 77, 334, 349, 375, 451, 552, 966, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1162, 1198, 1201, 1206, 1236, 1278, 1346, 1352, 1353, 1354, 1373, 1374, 1375, 1379, 1389, 1397, 1398, 1399, 1406, 1416, 1417, 1418, 1422, 1461, 1473, 1477, 1478, 1479, 1480, 1481, 1503, 1533, 1534, 1543, 1547, 1551, 1577, 1618, 1619, 1622, 1637, 1645, 1646, 1655, 1658, 1689, 1705, 1725, 1734, 1735, 1742, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1818, 1857, 1875, 1876, 1877, 1878, 1882, 1893, 1895, 1898, 1900, 1903, 1906, 1918, 1920, 1922, 1927, 1930, 1935, 1939, 1941, 1942, 1947, 1958, 1965], "pdist": [0, 1443, 1878, 1920], "poisson_nll_loss": [0, 1878, 1920], "pow": [0, 1, 466, 492, 897, 898, 901, 1117, 1878, 1880, 1893, 1899, 1900, 1920, 1934, 1940, 1958], "prod": [0, 37, 319, 513, 1091, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1109, 1111, 1266, 1267, 1377, 1381, 1485, 1857, 1878, 1893, 1920, 1934, 1958], "reciproc": [0, 482, 659, 660, 1752, 1878, 1893, 1920, 1958], "rsqrt": [0, 507, 1878, 1893, 1920, 1958], "sinh": [0, 532, 667, 668, 878, 1878, 1893, 1920, 1934, 1958], "smooth_l1_loss": [0, 1878, 1920], "soft_margin_loss": [0, 1878, 1920], "softmax": [0, 29, 792, 1342, 1370, 1400, 1424, 1468, 1516, 1535, 1545, 1552, 1583, 1590, 1798, 1878, 1893, 1894, 1895, 1903, 1920, 1927, 1934, 1935], "softmin": [0, 1878], "softplu": [0, 29, 1433, 1563, 1878, 1920], "sum": [0, 1, 20, 23, 24, 27, 29, 31, 46, 51, 52, 54, 492, 513, 562, 742, 889, 897, 898, 899, 900, 901, 902, 903, 909, 910, 914, 966, 989, 990, 991, 1056, 1057, 1074, 1134, 1135, 1136, 1141, 1178, 1232, 1253, 1257, 1270, 1278, 1279, 1280, 1288, 1324, 1332, 1350, 1351, 1357, 1367, 1368, 1370, 1371, 1378, 1381, 1388, 1394, 1395, 1400, 1401, 1402, 1403, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1467, 1469, 1482, 1483, 1485, 1505, 1506, 1516, 1517, 1525, 1530, 1535, 1545, 1554, 1555, 1568, 1576, 1589, 1590, 1614, 1637, 1642, 1643, 1661, 1697, 1743, 1781, 1799, 1801, 1841, 1843, 1857, 1876, 1878, 1880, 1884, 1890, 1893, 1899, 1900, 1903, 1904, 1905, 1906, 1911, 1914, 1918, 1920, 1930, 1931, 1934, 1935, 1940, 1948, 1949, 1950, 1953, 1956, 1958, 1961, 1963], "renorm": [0, 488, 1377, 1378, 1524, 1525, 1878, 1920], "tan": [0, 571, 671, 672, 879, 1878, 1893, 1920, 1934, 1939, 1958], "triplet_margin_loss": [0, 1878, 1920], "take": [0, 1, 2, 3, 4, 7, 9, 13, 20, 21, 23, 25, 27, 29, 31, 39, 40, 41, 42, 46, 48, 49, 51, 52, 53, 54, 55, 62, 63, 82, 756, 789, 794, 810, 816, 822, 858, 897, 898, 899, 900, 901, 902, 904, 905, 941, 974, 1011, 1062, 1064, 1065, 1090, 1092, 1095, 1098, 1102, 1103, 1105, 1108, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1233, 1255, 1258, 1342, 1351, 1378, 1382, 1383, 1386, 1404, 1428, 1429, 1430, 1431, 1432, 1434, 1442, 1449, 1477, 1487, 1488, 1528, 1529, 1546, 1570, 1583, 1614, 1659, 1689, 1693, 1718, 1845, 1858, 1868, 1875, 1877, 1878, 1880, 1887, 1888, 1892, 1893, 1894, 1895, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1909, 1911, 1915, 1916, 1917, 1918, 1920, 1922, 1924, 1925, 1930, 1931, 1932, 1934, 1937, 1938, 1939, 1943, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1956, 1957, 1961, 1962], "addcdiv": [0, 101, 1878, 1920], "addcmul": [0, 103, 1878, 1920], "atan2": [0, 145, 867, 1878, 1893, 1920, 1958], "bilinear": [0, 775, 781, 782, 1074, 1486, 1487, 1533, 1544, 1602, 1603, 1857, 1878, 1920], "cross": [0, 7, 8, 25, 29, 31, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1505, 1506, 1516, 1878, 1903, 1917, 1920, 1956], "dot": [0, 2, 13, 51, 52, 613, 898, 900, 901, 902, 1053, 1054, 1055, 1056, 1132, 1142, 1178, 1221, 1268, 1269, 1295, 1350, 1351, 1370, 1381, 1394, 1401, 1425, 1440, 1441, 1483, 1583, 1818, 1865, 1866, 1867, 1868, 1878, 1893, 1908, 1920, 1922], "grid_sampl": [0, 1498, 1857, 1878, 1920], "index_put": [0, 1857, 1878, 1920, 1958], "scatter_add": [0, 1878, 1920, 1958], "tensordot": [0, 1178, 1266, 1267, 1882, 1903, 1920], "binari": [0, 2, 13, 14, 21, 29, 31, 33, 38, 40, 54, 153, 731, 918, 1294, 1350, 1351, 1440, 1505, 1506, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1669, 1673, 1876, 1881, 1893, 1894, 1910, 1918, 1922, 1939], "add": [0, 1, 3, 7, 14, 16, 20, 23, 25, 27, 37, 40, 46, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 77, 81, 97, 288, 311, 509, 511, 682, 683, 684, 687, 743, 744, 753, 786, 789, 834, 855, 857, 858, 990, 1020, 1031, 1074, 1131, 1201, 1212, 1342, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1434, 1436, 1440, 1441, 1445, 1448, 1535, 1576, 1605, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1814, 1875, 1877, 1878, 1879, 1880, 1884, 1888, 1890, 1893, 1895, 1899, 1901, 1902, 1905, 1906, 1909, 1910, 1911, 1913, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1937, 1938, 1939, 1943, 1944, 1948, 1949, 1950, 1951, 1954, 1957, 1958, 1961, 1962, 1963, 1964], "nativ": [0, 2, 11, 21, 28, 46, 54, 1000, 1131, 1211, 1618, 1619, 1765, 1877, 1880, 1892, 1903, 1916, 1921, 1922, 1930], "without": [0, 1, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 29, 33, 40, 46, 47, 52, 53, 54, 55, 56, 252, 613, 945, 948, 978, 980, 1015, 1095, 1096, 1097, 1105, 1106, 1107, 1198, 1199, 1201, 1202, 1247, 1248, 1263, 1270, 1324, 1352, 1353, 1354, 1374, 1378, 1397, 1398, 1399, 1431, 1434, 1442, 1473, 1481, 1525, 1605, 1614, 1638, 1654, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1728, 1744, 1761, 1762, 1852, 1875, 1879, 1880, 1887, 1888, 1890, 1892, 1894, 1899, 1900, 1901, 1903, 1904, 1905, 1908, 1909, 1911, 1913, 1915, 1916, 1918, 1922, 1923, 1925, 1929, 1930, 1934, 1939, 1944, 1948, 1950, 1951, 1952, 1953, 1963, 1965], "intervent": [0, 8, 1930], "mixtur": [0, 29, 1370, 1516], "bceloss": [0, 1351, 1505], "aren": [0, 8, 51, 54, 1131, 1893, 1900, 1931, 1964], "mean": [0, 2, 3, 5, 7, 8, 14, 17, 20, 21, 23, 25, 27, 29, 40, 42, 46, 47, 49, 52, 53, 54, 252, 319, 333, 375, 451, 491, 513, 754, 756, 777, 790, 792, 857, 858, 916, 929, 966, 1130, 1132, 1211, 1301, 1319, 1324, 1329, 1333, 1334, 1340, 1341, 1342, 1344, 1345, 1346, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1368, 1370, 1372, 1376, 1378, 1379, 1380, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1421, 1423, 1424, 1425, 1426, 1433, 1437, 1438, 1439, 1441, 1442, 1448, 1449, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1482, 1483, 1484, 1504, 1505, 1506, 1514, 1516, 1517, 1525, 1526, 1530, 1541, 1542, 1545, 1546, 1550, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1587, 1588, 1599, 1600, 1614, 1662, 1692, 1725, 1734, 1735, 1779, 1799, 1816, 1817, 1823, 1857, 1863, 1864, 1875, 1877, 1878, 1879, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1911, 1917, 1918, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1930, 1931, 1932, 1934, 1951, 1952, 1953, 1956, 1957, 1958, 1959, 1960], "doesn": [0, 1, 2, 7, 8, 11, 20, 23, 25, 49, 51, 53, 54, 79, 819, 822, 876, 893, 903, 978, 999, 1131, 1142, 1208, 1214, 1240, 1264, 1272, 1281, 1362, 1363, 1364, 1371, 1400, 1467, 1508, 1509, 1510, 1545, 1589, 1614, 1615, 1637, 1681, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1796, 1799, 1868, 1877, 1880, 1881, 1893, 1895, 1900, 1901, 1903, 1905, 1906, 1910, 1913, 1917, 1921, 1923, 1931, 1934, 1952, 1953, 1958, 1963], "help": [0, 1, 4, 7, 8, 11, 13, 20, 21, 23, 37, 40, 46, 51, 54, 904, 905, 913, 999, 1031, 1131, 1132, 1142, 1201, 1202, 1220, 1302, 1315, 1316, 1373, 1374, 1375, 1379, 1434, 1621, 1772, 1868, 1875, 1880, 1887, 1893, 1894, 1899, 1900, 1901, 1903, 1904, 1906, 1909, 1911, 1914, 1918, 1919, 1922, 1930, 1931, 1934, 1942, 1952, 1955, 1956, 1957, 1961, 1963], "revers": [0, 29, 52, 54, 509, 730, 789, 897, 899, 1092, 1094, 1114, 1134, 1136, 1141, 1268, 1404, 1447, 1575, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1845, 1862, 1878, 1879, 1880, 1900, 1904, 1906, 1920, 1940], "therefor": [0, 3, 5, 20, 21, 23, 29, 30, 38, 46, 49, 55, 60, 61, 81, 445, 540, 903, 917, 926, 950, 1020, 1108, 1125, 1127, 1130, 1158, 1159, 1213, 1216, 1246, 1259, 1377, 1378, 1485, 1524, 1525, 1533, 1656, 1697, 1880, 1899, 1900, 1903, 1905, 1907, 1910, 1918, 1932, 1934, 1954, 1956], "rais": [0, 1, 5, 7, 13, 23, 27, 29, 31, 33, 40, 46, 51, 53, 54, 55, 87, 311, 313, 319, 693, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 929, 938, 979, 1044, 1117, 1122, 1199, 1201, 1206, 1208, 1216, 1218, 1230, 1232, 1240, 1241, 1244, 1248, 1249, 1254, 1261, 1262, 1266, 1267, 1272, 1293, 1319, 1434, 1583, 1608, 1626, 1627, 1632, 1634, 1637, 1647, 1670, 1671, 1672, 1673, 1759, 1857, 1875, 1881, 1887, 1892, 1900, 1903, 1905, 1907, 1914, 1918, 1922, 1923, 1929, 1930, 1941, 1952, 1953, 1956, 1962, 1963, 1964], "mani": [0, 3, 7, 11, 13, 20, 21, 23, 29, 40, 46, 50, 51, 54, 87, 400, 676, 885, 887, 897, 899, 1074, 1213, 1357, 1692, 1791, 1839, 1846, 1847, 1848, 1849, 1877, 1879, 1893, 1898, 1900, 1901, 1902, 1903, 1905, 1906, 1910, 1911, 1914, 1918, 1921, 1925, 1932, 1934, 1937, 1939, 1940, 1942, 1949, 1951, 1952, 1953, 1955, 1956, 1957, 1959, 1962, 1963], "sigmoid": [0, 29, 54, 523, 663, 664, 756, 791, 1350, 1351, 1377, 1386, 1387, 1404, 1405, 1463, 1505, 1532, 1586, 1878, 1893, 1894, 1898, 1919, 1920, 1927, 1935, 1958], "right": [0, 2, 7, 9, 23, 25, 29, 46, 54, 816, 861, 917, 924, 926, 927, 932, 937, 1068, 1074, 1115, 1118, 1119, 1123, 1154, 1158, 1159, 1163, 1167, 1198, 1220, 1245, 1250, 1261, 1263, 1264, 1272, 1278, 1279, 1324, 1342, 1347, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1381, 1388, 1401, 1402, 1403, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1437, 1438, 1439, 1443, 1444, 1450, 1482, 1485, 1486, 1487, 1488, 1533, 1553, 1571, 1619, 1626, 1681, 1695, 1696, 1737, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1818, 1838, 1843, 1845, 1860, 1862, 1875, 1878, 1880, 1892, 1893, 1894, 1900, 1905, 1908, 1918, 1921, 1928, 1932, 1935, 1950, 1952, 1961], "entropi": [0, 29, 1350, 1370, 1438, 1505, 1506, 1516, 1935], "combin": [0, 3, 20, 21, 23, 40, 52, 53, 613, 685, 708, 709, 710, 711, 712, 713, 714, 715, 789, 850, 886, 1031, 1103, 1104, 1109, 1111, 1163, 1295, 1305, 1351, 1381, 1395, 1440, 1481, 1485, 1527, 1550, 1633, 1877, 1878, 1879, 1899, 1903, 1906, 1918, 1920, 1921, 1923, 1925, 1928, 1930, 1949, 1956], "bcewithlogitsloss": [0, 1506], "bcewithlogit": 0, "safe": [0, 23, 40, 53, 54, 80, 82, 1021, 1022, 1041, 1042, 1614, 1678, 1679, 1682, 1877, 1880, 1899, 1900, 1903, 1906, 1910, 1930, 1945, 1948, 1953, 1954, 1956, 1963], "_convolut": [0, 1920], "avg_pool3d": [0, 1878, 1920, 1927], "grid_sampler_2d": [0, 1878, 1920, 1958], "_grid_sampler_2d_cpu_fallback": [0, 1920], "grid_sampler_3d": [0, 1878, 1920], "polar": [0, 29, 1260, 1878, 1920], "quantil": [0, 1301, 1331, 1878, 1920, 1935], "nanquantil": [0, 1878, 1920], "stft": [0, 917, 926, 1158, 1159, 1198, 1220, 1878, 1920], "view_as_complex": [0, 11, 1878, 1920], "choleski": [0, 2, 29, 940, 941, 1231, 1237, 1273, 1878, 1920], "cholesky_invers": [0, 2, 1878, 1920], "cholesky_solv": [0, 2, 1878, 1920], "invers": [0, 29, 679, 680, 878, 881, 935, 940, 941, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1198, 1241, 1242, 1254, 1258, 1261, 1266, 1267, 1365, 1366, 1367, 1377, 1378, 1381, 1430, 1431, 1432, 1485, 1524, 1525, 1560, 1561, 1562, 1623, 1626, 1650, 1697, 1703, 1853, 1876, 1878, 1880, 1914, 1920, 1935], "lu_solv": [0, 2, 1248, 1878, 1920], "orgqr": [0, 1878, 1920], "ormqr": [0, 1146, 1240, 1878, 1920], "pinvers": [0, 1246, 1878, 1920], "max_pool3d": [0, 1878, 1920, 1927], "max_unpool2d": [0, 1528, 1558, 1878, 1920], "max_unpool3d": [0, 1529, 1559, 1878, 1920], "adaptive_avg_pool3d": [0, 1878, 1905, 1920, 1927], "reflection_pad1d": [0, 1878, 1920], "reflection_pad2d": [0, 1878, 1920, 1958], "replication_pad1d": [0, 1878, 1920], "replication_pad2d": [0, 1878, 1920, 1958], "replication_pad3d": [0, 1878, 1920, 1958], "ctc_loss": [0, 1357, 1878, 1920], "fft_fft": [0, 1878, 1920], "fft_ifft": [0, 1878, 1920], "fft_fft2": [0, 1878, 1920], "fft_ifft2": [0, 1878, 1920], "fft_fftn": [0, 1878, 1920], "fft_ifftn": [0, 1878, 1920], "fft_rfft": [0, 1878, 1920], "fft_irfft": [0, 1878, 1920], "fft_rfft2": [0, 1878, 1920], "fft_irfft2": [0, 1878, 1920], "fft_rfftn": [0, 1878, 1920], "fft_irfftn": [0, 1878, 1920], "fft_hfft": [0, 1878, 1920], "fft_ihfft": [0, 1878, 1920], "linalg_matrix_norm": [0, 1878, 1920], "linalg_cond": [0, 1878, 1920], "linalg_matrix_rank": [0, 1878, 1920], "linalg_solv": [0, 1878, 1920], "linalg_choleski": [0, 1878, 1920], "linalg_svdv": [0, 1878, 1920], "linalg_eigv": [0, 1878, 1920], "linalg_eigvalsh": [0, 1878, 1920], "linalg_inv": [0, 1878, 1920], "linalg_householder_product": [0, 1878, 1920], "linalg_tensorinv": [0, 1878, 1920], "linalg_tensorsolv": [0, 1878, 1920], "fake_quantize_per_tensor_affin": [0, 1878, 1920], "eig": [0, 1237, 1238, 1264, 1914], "geqrf": [0, 1240, 1709, 1878, 1920], "lstsq": [0, 1146, 1232, 1258], "_lu_with_info": [0, 1920], "qr": [0, 2, 1146, 1236, 1237, 1240, 1246, 1264, 1621, 1709, 1878, 1920], "solv": [0, 7, 11, 941, 1146, 1154, 1232, 1241, 1243, 1244, 1247, 1248, 1250, 1254, 1262, 1263, 1267, 1273, 1291, 1845, 1900, 1908, 1914, 1917, 1945, 1953], "svd": [0, 2, 11, 1236, 1237, 1246, 1258, 1265, 1281, 1626, 1711, 1823, 1878, 1914, 1920, 1934, 1958], "symeig": 0, "triangular_solv": [0, 1878, 1920], "fractional_max_pool2d": [0, 1878, 1920], "fractional_max_pool3d": [0, 1878, 1920], "adaptive_max_pool3d": [0, 1878, 1920], "multilabel_margin_loss_forward": [0, 1920], "linalg_qr": [0, 1878, 1920], "linalg_cholesky_ex": [0, 1878, 1920], "linalg_svd": [0, 1878, 1920], "linalg_eig": [0, 1878, 1920], "linalg_eigh": [0, 1878, 1920], "linalg_lstsq": [0, 1878, 1920], "linalg_inv_ex": [0, 1878, 1920], "cat": [0, 23, 29, 54, 540, 743, 744, 753, 789, 792, 957, 958, 1302, 1453, 1803, 1815, 1877, 1878, 1893, 1918, 1920, 1922, 1925, 1927, 1934, 1943, 1951, 1958], "stack": [0, 8, 17, 20, 21, 23, 29, 33, 50, 51, 54, 756, 913, 935, 946, 1035, 1036, 1073, 1140, 1142, 1166, 1302, 1357, 1386, 1404, 1405, 1449, 1478, 1480, 1651, 1859, 1868, 1870, 1876, 1878, 1895, 1903, 1904, 1907, 1919, 1920, 1922, 1924, 1927, 1934, 1950, 1952, 1953, 1956, 1963], "index_copi": [0, 1857, 1878, 1920], "implement": [1, 2, 5, 8, 15, 16, 20, 21, 23, 24, 25, 27, 29, 32, 37, 38, 41, 46, 51, 54, 55, 57, 63, 79, 149, 509, 511, 513, 683, 734, 735, 736, 737, 738, 739, 756, 775, 777, 781, 789, 796, 815, 816, 817, 820, 821, 822, 874, 876, 889, 898, 904, 905, 964, 1074, 1117, 1122, 1127, 1134, 1135, 1137, 1138, 1201, 1208, 1210, 1211, 1214, 1256, 1259, 1272, 1273, 1301, 1342, 1357, 1371, 1386, 1402, 1403, 1434, 1440, 1446, 1453, 1470, 1479, 1481, 1533, 1571, 1583, 1591, 1614, 1618, 1619, 1621, 1622, 1626, 1637, 1650, 1654, 1655, 1658, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1695, 1697, 1703, 1721, 1728, 1741, 1750, 1753, 1790, 1799, 1822, 1823, 1838, 1854, 1857, 1858, 1860, 1879, 1880, 1881, 1884, 1887, 1892, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1921, 1922, 1923, 1925, 1930, 1931, 1934, 1935, 1938, 1940, 1948, 1951, 1956, 1959, 1964], "arbitrari": [1, 3, 23, 27, 55, 58, 62, 252, 886, 1057, 1264, 1272, 1371, 1377, 1401, 1425, 1485, 1505, 1506, 1524, 1545, 1571, 1647, 1822, 1843, 1880, 1886, 1900, 1906, 1910, 1911, 1921, 1923, 1925, 1934, 1942, 1953, 1959, 1963, 1964], "scalar": [1, 23, 29, 55, 63, 96, 149, 153, 258, 311, 443, 585, 683, 684, 734, 735, 736, 737, 738, 739, 875, 876, 889, 897, 898, 901, 903, 921, 924, 932, 962, 966, 1069, 1074, 1089, 1122, 1128, 1154, 1161, 1178, 1192, 1225, 1226, 1295, 1302, 1331, 1342, 1350, 1351, 1357, 1368, 1370, 1371, 1388, 1394, 1395, 1400, 1401, 1406, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1483, 1535, 1577, 1660, 1665, 1666, 1670, 1705, 1718, 1720, 1722, 1740, 1741, 1757, 1805, 1806, 1807, 1808, 1809, 1836, 1854, 1855, 1871, 1873, 1874, 1878, 1879, 1880, 1890, 1895, 1898, 1900, 1905, 1908, 1918, 1930, 1934, 1937, 1939, 1941, 1952, 1958, 1962], "minim": [1, 7, 8, 815, 871, 1303, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1689, 1690, 1691, 1692, 1705, 1875, 1890, 1899, 1903, 1911, 1913, 1916, 1918, 1923, 1925, 1953, 1963], "exist": [1, 7, 8, 9, 11, 13, 20, 23, 24, 25, 29, 31, 33, 38, 40, 41, 46, 50, 54, 55, 77, 78, 252, 495, 788, 850, 874, 897, 898, 899, 900, 901, 902, 903, 904, 967, 968, 969, 970, 971, 972, 973, 1015, 1201, 1205, 1216, 1236, 1241, 1247, 1248, 1273, 1331, 1434, 1435, 1444, 1797, 1815, 1860, 1875, 1877, 1884, 1887, 1892, 1893, 1895, 1896, 1900, 1901, 1903, 1905, 1906, 1909, 1910, 1911, 1912, 1914, 1916, 1918, 1922, 1923, 1924, 1925, 1930, 1932, 1934, 1938, 1940, 1948, 1949, 1952, 1954, 1958, 1961], "code": [1, 3, 4, 8, 9, 11, 13, 14, 15, 20, 21, 23, 28, 29, 31, 41, 42, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 118, 676, 948, 950, 967, 968, 969, 970, 971, 972, 973, 1017, 1018, 1031, 1131, 1176, 1201, 1205, 1206, 1211, 1212, 1213, 1216, 1217, 1218, 1231, 1242, 1244, 1272, 1450, 1462, 1614, 1769, 1875, 1876, 1879, 1880, 1886, 1894, 1900, 1901, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1916, 1917, 1918, 1921, 1929, 1930, 1931, 1932, 1934, 1937, 1938, 1945, 1948, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964], "declar": [1, 9, 13, 20, 41, 1879, 1880, 1881, 1905, 1918, 1922, 1923], "requires_grad": [1, 5, 29, 46, 52, 333, 442, 443, 444, 445, 446, 484, 492, 861, 876, 893, 895, 896, 904, 905, 907, 909, 910, 917, 926, 1020, 1075, 1076, 1077, 1078, 1087, 1092, 1110, 1127, 1128, 1129, 1132, 1142, 1158, 1159, 1176, 1201, 1220, 1271, 1287, 1350, 1351, 1370, 1377, 1378, 1388, 1400, 1401, 1425, 1426, 1434, 1440, 1441, 1448, 1481, 1482, 1505, 1506, 1516, 1568, 1614, 1615, 1616, 1617, 1654, 1659, 1665, 1666, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1767, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1857, 1868, 1873, 1874, 1878, 1882, 1893, 1894, 1895, 1903, 1905, 1906, 1911, 1916, 1918, 1920, 1930, 1931, 1940, 1941, 1942, 1950, 1952, 1958, 1961], "type": [1, 2, 3, 5, 13, 14, 16, 21, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 38, 40, 41, 42, 46, 51, 53, 54, 55, 57, 60, 61, 63, 80, 82, 87, 149, 190, 195, 207, 324, 327, 331, 339, 442, 443, 444, 445, 446, 478, 555, 600, 676, 681, 682, 683, 684, 685, 686, 730, 731, 734, 735, 736, 745, 747, 748, 749, 750, 752, 760, 762, 763, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 780, 788, 789, 790, 793, 811, 812, 813, 815, 816, 817, 818, 819, 821, 823, 836, 850, 851, 852, 853, 854, 855, 856, 857, 858, 861, 869, 875, 885, 886, 887, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 910, 916, 917, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 932, 933, 934, 935, 936, 938, 947, 948, 949, 954, 969, 970, 971, 972, 984, 986, 993, 994, 995, 997, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1012, 1014, 1017, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1037, 1049, 1051, 1052, 1055, 1056, 1069, 1074, 1075, 1076, 1077, 1087, 1088, 1089, 1092, 1110, 1117, 1119, 1120, 1121, 1122, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1139, 1140, 1142, 1144, 1148, 1149, 1150, 1153, 1158, 1159, 1161, 1162, 1163, 1177, 1180, 1182, 1183, 1186, 1189, 1197, 1198, 1199, 1201, 1202, 1204, 1207, 1210, 1212, 1214, 1216, 1217, 1219, 1220, 1223, 1232, 1236, 1253, 1257, 1264, 1270, 1271, 1272, 1273, 1287, 1290, 1293, 1300, 1302, 1309, 1310, 1313, 1323, 1329, 1332, 1342, 1346, 1362, 1363, 1364, 1371, 1378, 1424, 1434, 1435, 1436, 1440, 1444, 1445, 1462, 1467, 1468, 1469, 1477, 1478, 1479, 1480, 1481, 1493, 1494, 1498, 1499, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1530, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1551, 1552, 1554, 1555, 1556, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1576, 1578, 1579, 1581, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1596, 1598, 1599, 1600, 1601, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1658, 1660, 1661, 1665, 1666, 1668, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1711, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1740, 1741, 1743, 1747, 1750, 1757, 1758, 1761, 1762, 1763, 1765, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1798, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1818, 1819, 1821, 1822, 1823, 1836, 1845, 1847, 1849, 1854, 1855, 1857, 1858, 1859, 1862, 1868, 1871, 1873, 1874, 1875, 1876, 1877, 1878, 1881, 1888, 1889, 1890, 1893, 1895, 1898, 1899, 1900, 1902, 1903, 1908, 1909, 1910, 1911, 1914, 1916, 1917, 1919, 1920, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1949, 1950, 1951, 1956, 1958, 1962, 1964], "doubl": [1, 3, 31, 478, 484, 613, 745, 747, 748, 749, 750, 752, 762, 763, 777, 893, 895, 900, 904, 905, 933, 940, 956, 974, 1020, 1089, 1117, 1154, 1201, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1281, 1282, 1283, 1284, 1285, 1291, 1378, 1434, 1493, 1496, 1525, 1605, 1670, 1709, 1715, 1804, 1805, 1806, 1808, 1809, 1822, 1836, 1845, 1871, 1880, 1893, 1903, 1905, 1906, 1914, 1918, 1922, 1936, 1937, 1940], "bfloat16": [1, 21, 46, 1183, 1201, 1252, 1269, 1434, 1670, 1678, 1679, 1765, 1893, 1903, 1934, 1936, 1937, 1940, 1941, 1965], "cfloat": [1, 11, 23, 309, 480, 613, 940, 974, 1171, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1291, 1709, 1739, 1822, 1845, 1867, 1937, 1940], "cdoubl": [1, 11, 940, 974, 1201, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1291, 1434, 1709, 1822, 1845, 1937, 1940], "beta": [1, 2, 11, 47, 53, 98, 99, 104, 105, 106, 107, 108, 109, 150, 151, 319, 513, 550, 682, 685, 686, 687, 916, 975, 1009, 1010, 1017, 1018, 1020, 1158, 1220, 1295, 1305, 1352, 1353, 1354, 1389, 1395, 1397, 1398, 1399, 1406, 1422, 1465, 1470, 1473, 1550, 1551, 1583, 1587, 1591, 1678, 1679, 1680, 1682, 1688, 1692, 1725, 1783, 1785, 1796, 1800, 1814, 1876, 1878, 1888, 1903, 1918, 1925, 1930, 1934, 1937, 1942, 1958], "even": [1, 8, 20, 21, 23, 28, 31, 46, 53, 54, 82, 540, 576, 811, 812, 813, 889, 966, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1105, 1106, 1107, 1110, 1141, 1186, 1213, 1230, 1232, 1236, 1237, 1238, 1239, 1253, 1257, 1259, 1260, 1264, 1265, 1270, 1295, 1301, 1371, 1473, 1508, 1509, 1510, 1571, 1614, 1621, 1659, 1661, 1703, 1750, 1761, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1822, 1866, 1877, 1880, 1881, 1890, 1895, 1899, 1900, 1903, 1905, 1907, 1909, 1911, 1913, 1914, 1915, 1916, 1921, 1922, 1923, 1932, 1937, 1948, 1951, 1952, 1953, 1955, 1956], "though": [1, 23, 54, 55, 58, 149, 790, 886, 889, 899, 1090, 1091, 1093, 1199, 1202, 1295, 1661, 1877, 1881, 1894, 1895, 1900, 1905, 1906, 1913, 1914, 1921, 1925, 1952], "signatur": [1, 20, 33, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 396, 484, 552, 909, 910, 976, 1201, 1434, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1626, 1647, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1818, 1903, 1905, 1906, 1918, 1922, 1923, 1930, 1934, 1955, 1956, 1964], "veri": [1, 4, 7, 8, 17, 20, 21, 23, 50, 52, 54, 950, 964, 1132, 1140, 1142, 1263, 1397, 1398, 1399, 1614, 1615, 1621, 1681, 1703, 1709, 1786, 1790, 1845, 1868, 1879, 1892, 1900, 1905, 1907, 1908, 1909, 1911, 1913, 1914, 1917, 1921, 1922, 1929, 1930, 1931, 1934, 1952, 1953, 1955, 1956, 1962, 1963], "unlik": [1, 3, 7, 29, 46, 52, 489, 1071, 1110, 1113, 1117, 1176, 1236, 1237, 1256, 1259, 1264, 1268, 1298, 1301, 1303, 1406, 1616, 1617, 1740, 1762, 1865, 1879, 1880, 1892, 1895, 1903, 1913, 1915, 1937, 1942, 1951, 1953], "coverag": [1, 7, 47, 54, 1134, 1135, 1876, 1877, 1882, 1894, 1925, 1934, 1964], "plan": [1, 2, 7, 9, 23, 25, 28, 890, 1614, 1721, 1895, 1900, 1905, 1922, 1934, 1951, 1962, 1963], "consid": [1, 5, 8, 21, 23, 31, 40, 46, 51, 53, 54, 690, 775, 781, 790, 897, 899, 900, 904, 941, 966, 1061, 1062, 1063, 1064, 1065, 1095, 1130, 1190, 1194, 1197, 1201, 1241, 1243, 1244, 1245, 1246, 1254, 1255, 1258, 1263, 1266, 1370, 1381, 1434, 1437, 1485, 1498, 1533, 1544, 1602, 1615, 1621, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1656, 1691, 1759, 1779, 1813, 1846, 1847, 1848, 1849, 1875, 1877, 1880, 1884, 1887, 1899, 1900, 1901, 1905, 1907, 1908, 1911, 1914, 1922, 1924, 1926, 1931, 1932, 1934, 1937, 1940, 1941, 1951, 1953, 1962, 1964], "ad": [1, 3, 9, 13, 20, 21, 23, 27, 29, 37, 46, 49, 51, 52, 53, 54, 220, 221, 311, 317, 468, 511, 676, 682, 683, 684, 685, 686, 687, 731, 890, 891, 892, 897, 898, 899, 900, 904, 916, 1074, 1078, 1134, 1135, 1137, 1176, 1201, 1214, 1278, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1440, 1441, 1443, 1448, 1462, 1473, 1477, 1482, 1485, 1511, 1512, 1513, 1530, 1557, 1558, 1559, 1583, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1626, 1633, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1659, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1725, 1726, 1727, 1767, 1796, 1800, 1814, 1875, 1876, 1877, 1879, 1884, 1890, 1894, 1899, 1906, 1908, 1910, 1911, 1922, 1925, 1928, 1934, 1939, 1942, 1949, 1952, 1953, 1958, 1959, 1962], "tutori": [1, 3, 9, 14, 23, 24, 27, 54, 890, 891, 892, 895, 1860, 1876, 1877, 1884, 1887, 1896, 1905, 1910, 1911, 1913, 1916, 1918, 1925, 1952, 1955], "how": [1, 3, 5, 7, 8, 9, 14, 16, 20, 23, 25, 28, 32, 40, 41, 42, 46, 47, 48, 50, 51, 54, 55, 62, 63, 484, 781, 788, 789, 792, 837, 855, 857, 858, 890, 891, 892, 895, 909, 910, 1057, 1078, 1131, 1140, 1154, 1176, 1201, 1211, 1272, 1381, 1434, 1485, 1486, 1571, 1602, 1614, 1647, 1659, 1741, 1765, 1767, 1780, 1791, 1876, 1877, 1879, 1880, 1884, 1887, 1889, 1892, 1893, 1894, 1896, 1899, 1902, 1904, 1906, 1907, 1908, 1911, 1913, 1915, 1916, 1918, 1923, 1925, 1928, 1930, 1931, 1932, 1934, 1939, 1950, 1951, 1955, 1956, 1957], "major": [1, 6, 7, 8, 9, 1002, 1822, 1876, 1880, 1921, 1951, 1953, 1955, 1957], "build": [1, 8, 9, 13, 14, 23, 29, 54, 1201, 1210, 1434, 1480, 1498, 1533, 1876, 1877, 1887, 1896, 1900, 1918, 1923, 1925, 1931, 1939, 1940, 1945, 1948, 1963], "basic": [1, 3, 7, 9, 25, 40, 54, 55, 56, 1134, 1135, 1136, 1207, 1273, 1614, 1697, 1876, 1881, 1896, 1901, 1903, 1904, 1908, 1922, 1931, 1938, 1939, 1950, 1953, 1955, 1956], "jacobian": [1, 29, 47, 48, 50, 51, 889, 891, 897, 900, 902, 903, 904, 905, 1135, 1136, 1137, 1141, 1142, 1868, 1900, 1905, 1908], "hessian": [1, 47, 50, 51, 898, 901, 1135, 1136, 1898, 1906], "etc": [1, 3, 5, 11, 20, 21, 23, 29, 31, 40, 41, 46, 855, 856, 857, 950, 1198, 1201, 1370, 1434, 1614, 1668, 1743, 1875, 1879, 1880, 1887, 1905, 1906, 1907, 1911, 1913, 1918, 1921, 1922, 1925, 1930, 1934, 1936, 1939, 1942, 1948, 1950, 1956], "user": [1, 2, 5, 7, 8, 9, 10, 11, 14, 20, 21, 23, 24, 25, 28, 29, 30, 31, 33, 37, 40, 41, 43, 46, 47, 50, 51, 53, 54, 55, 79, 149, 333, 728, 734, 735, 736, 741, 742, 752, 760, 790, 793, 795, 834, 850, 857, 858, 889, 895, 903, 978, 1011, 1125, 1130, 1131, 1201, 1272, 1434, 1477, 1479, 1480, 1481, 1583, 1608, 1609, 1614, 1623, 1637, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1875, 1876, 1877, 1879, 1880, 1884, 1887, 1892, 1894, 1895, 1899, 1900, 1901, 1903, 1905, 1908, 1909, 1910, 1911, 1913, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1930, 1931, 1934, 1938, 1939, 1941, 1948, 1949, 1951, 1952, 1954, 1955, 1956, 1959, 1961, 1963, 1964], "input": [1, 2, 3, 5, 9, 11, 14, 18, 20, 21, 23, 24, 27, 28, 29, 30, 33, 46, 47, 48, 49, 50, 51, 52, 54, 55, 62, 63, 77, 79, 80, 81, 87, 149, 258, 278, 299, 399, 480, 495, 513, 605, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 716, 724, 725, 730, 731, 734, 735, 736, 737, 738, 739, 741, 742, 752, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 798, 810, 813, 815, 833, 834, 835, 836, 853, 854, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 893, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 934, 936, 937, 939, 940, 941, 942, 943, 944, 945, 947, 948, 956, 959, 960, 961, 962, 963, 964, 965, 966, 974, 990, 1017, 1018, 1020, 1053, 1054, 1055, 1056, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1142, 1143, 1144, 1145, 1146, 1147, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1181, 1183, 1186, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1201, 1204, 1205, 1207, 1208, 1212, 1214, 1216, 1217, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1291, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1601, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1647, 1648, 1649, 1651, 1656, 1659, 1660, 1661, 1663, 1664, 1666, 1668, 1669, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1696, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1731, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1754, 1755, 1756, 1759, 1760, 1762, 1773, 1774, 1775, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1831, 1832, 1833, 1834, 1835, 1837, 1839, 1840, 1841, 1842, 1845, 1846, 1848, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1874, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1887, 1888, 1894, 1895, 1896, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1914, 1915, 1916, 1918, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1934, 1935, 1937, 1938, 1941, 1943, 1944, 1948, 1951, 1952, 1953, 1958, 1961, 1962, 1963, 1964], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 27, 28, 29, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 77, 78, 79, 80, 81, 82, 149, 153, 252, 321, 333, 455, 484, 509, 511, 541, 610, 613, 676, 683, 725, 737, 738, 739, 744, 753, 754, 756, 764, 765, 768, 769, 770, 781, 787, 788, 789, 790, 793, 795, 810, 816, 819, 820, 822, 833, 837, 850, 854, 855, 857, 858, 859, 875, 876, 885, 886, 887, 889, 890, 891, 892, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 912, 918, 935, 941, 948, 951, 954, 959, 975, 977, 987, 989, 991, 998, 999, 1017, 1019, 1023, 1025, 1027, 1031, 1032, 1057, 1074, 1075, 1078, 1079, 1092, 1094, 1095, 1096, 1097, 1110, 1113, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1140, 1141, 1142, 1145, 1146, 1154, 1157, 1162, 1163, 1176, 1192, 1198, 1199, 1201, 1202, 1204, 1205, 1207, 1211, 1212, 1214, 1216, 1217, 1222, 1225, 1232, 1240, 1243, 1247, 1248, 1253, 1256, 1259, 1260, 1264, 1270, 1272, 1289, 1290, 1292, 1302, 1311, 1312, 1331, 1333, 1334, 1335, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1371, 1372, 1376, 1377, 1378, 1379, 1382, 1383, 1386, 1391, 1392, 1393, 1395, 1401, 1403, 1404, 1407, 1408, 1409, 1420, 1424, 1425, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1440, 1441, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1462, 1465, 1470, 1473, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1486, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1528, 1529, 1544, 1557, 1558, 1559, 1577, 1583, 1602, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1626, 1647, 1648, 1654, 1659, 1661, 1665, 1668, 1670, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1697, 1700, 1701, 1703, 1707, 1709, 1718, 1722, 1730, 1734, 1744, 1750, 1753, 1765, 1767, 1768, 1770, 1795, 1797, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1816, 1817, 1818, 1822, 1836, 1840, 1843, 1845, 1853, 1856, 1858, 1860, 1863, 1864, 1868, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1884, 1886, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1961, 1962, 1963, 1964, 1965], "lambda": [1, 20, 25, 29, 49, 52, 53, 54, 55, 62, 63, 256, 484, 909, 910, 936, 1132, 1137, 1141, 1142, 1236, 1237, 1238, 1239, 1272, 1390, 1471, 1483, 1573, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1691, 1697, 1699, 1702, 1868, 1881, 1900, 1905, 1906, 1921, 1922, 1930, 1941, 1964], "captur": [1, 14, 54, 55, 58, 62, 63, 676, 975, 977, 1009, 1015, 1020, 1204, 1312, 1678, 1679, 1682, 1877, 1881, 1886, 1905, 1906, 1909, 1918, 1922, 1925, 1944, 1945, 1948, 1950, 1951, 1953, 1956, 1961, 1963], "f": [1, 10, 21, 23, 29, 31, 32, 37, 38, 47, 48, 51, 52, 53, 54, 55, 56, 172, 256, 284, 333, 375, 891, 892, 1092, 1094, 1101, 1110, 1131, 1132, 1134, 1135, 1136, 1137, 1141, 1142, 1154, 1201, 1208, 1211, 1212, 1272, 1400, 1402, 1403, 1405, 1434, 1483, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1524, 1525, 1528, 1529, 1535, 1568, 1570, 1571, 1583, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1753, 1868, 1877, 1879, 1880, 1893, 1894, 1900, 1903, 1905, 1907, 1908, 1909, 1911, 1917, 1918, 1922, 1923, 1930, 1934, 1939, 1941, 1949, 1951, 1953, 1956, 1962, 1964], "three": [1, 2, 6, 9, 23, 27, 46, 48, 51, 54, 82, 884, 1072, 1074, 1154, 1163, 1244, 1247, 1248, 1249, 1264, 1292, 1349, 1364, 1367, 1406, 1429, 1583, 1621, 1661, 1697, 1765, 1880, 1900, 1903, 1904, 1905, 1918, 1922, 1923, 1925, 1930, 1932, 1934, 1939, 1960], "anoth": [1, 5, 7, 20, 21, 23, 25, 29, 30, 31, 42, 46, 54, 483, 955, 975, 977, 978, 980, 1125, 1210, 1236, 1237, 1240, 1264, 1377, 1378, 1435, 1444, 1605, 1622, 1761, 1877, 1879, 1880, 1886, 1899, 1900, 1902, 1903, 1905, 1911, 1913, 1917, 1922, 1923, 1931, 1932, 1934, 1940, 1942, 1948, 1949, 1953, 1955, 1956, 1959, 1962], "constant": [1, 20, 54, 55, 56, 60, 61, 63, 64, 740, 771, 817, 818, 951, 1057, 1114, 1115, 1116, 1198, 1201, 1205, 1216, 1248, 1273, 1359, 1360, 1361, 1378, 1381, 1388, 1443, 1465, 1482, 1485, 1530, 1533, 1571, 1622, 1673, 1689, 1694, 1697, 1843, 1878, 1880, 1899, 1905, 1911, 1915, 1918, 1921, 1934, 1952, 1955, 1956], "boolean": [1, 13, 29, 40, 54, 55, 62, 63, 398, 400, 885, 920, 922, 923, 925, 953, 977, 978, 980, 1079, 1145, 1157, 1190, 1191, 1192, 1193, 1194, 1197, 1225, 1273, 1289, 1294, 1335, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1583, 1623, 1626, 1721, 1816, 1817, 1840, 1863, 1864, 1879, 1881, 1905, 1936, 1937, 1939, 1940, 1941, 1942], "flag": [1, 2, 13, 23, 24, 30, 41, 43, 46, 49, 51, 54, 731, 869, 897, 899, 917, 926, 939, 940, 948, 1005, 1125, 1130, 1132, 1133, 1135, 1136, 1137, 1141, 1142, 1158, 1159, 1176, 1182, 1189, 1272, 1292, 1440, 1544, 1545, 1614, 1623, 1626, 1656, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1765, 1767, 1772, 1797, 1845, 1857, 1868, 1876, 1877, 1880, 1892, 1900, 1903, 1905, 1914, 1915, 1918, 1922, 1925, 1939, 1940, 1953, 1954, 1962, 1963], "inform": [1, 2, 3, 4, 7, 8, 9, 16, 17, 19, 20, 21, 23, 24, 27, 31, 32, 33, 36, 40, 41, 46, 48, 54, 190, 207, 253, 311, 319, 484, 494, 511, 513, 614, 676, 731, 899, 904, 905, 909, 910, 919, 1078, 1109, 1111, 1131, 1176, 1198, 1201, 1217, 1230, 1237, 1246, 1362, 1363, 1364, 1365, 1366, 1367, 1395, 1404, 1430, 1431, 1432, 1434, 1440, 1449, 1461, 1477, 1479, 1481, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1544, 1583, 1602, 1603, 1604, 1614, 1647, 1659, 1673, 1720, 1747, 1767, 1772, 1797, 1857, 1877, 1880, 1886, 1887, 1895, 1896, 1900, 1902, 1903, 1904, 1905, 1910, 1911, 1914, 1918, 1919, 1922, 1924, 1925, 1937, 1939, 1940, 1941, 1944, 1947, 1951, 1952, 1953, 1956, 1957, 1961, 1963, 1965], "well": [1, 3, 5, 7, 9, 13, 21, 23, 40, 46, 51, 52, 54, 613, 787, 818, 821, 857, 1017, 1135, 1136, 1201, 1205, 1211, 1216, 1236, 1237, 1238, 1240, 1246, 1259, 1264, 1310, 1352, 1353, 1354, 1370, 1404, 1434, 1473, 1554, 1555, 1614, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1721, 1877, 1880, 1887, 1893, 1895, 1899, 1900, 1903, 1905, 1906, 1908, 1911, 1913, 1915, 1918, 1922, 1925, 1928, 1930, 1932, 1934, 1938, 1939, 1942, 1949, 1952, 1954, 1959], "relat": [1, 6, 7, 9, 20, 23, 31, 45, 46, 51, 55, 56, 61, 63, 676, 1154, 1240, 1381, 1465, 1485, 1614, 1711, 1858, 1895, 1900, 1916, 1922, 1930, 1934, 1935, 1941, 1964], "mechan": [1, 8, 23, 34, 38, 40, 54, 875, 1078, 1176, 1201, 1434, 1583, 1659, 1767, 1836, 1876, 1892, 1895, 1904, 1905, 1910, 1911, 1928, 1930, 1931, 1948], "confus": [1, 8, 55, 1201, 1434, 1900, 1903, 1922, 1934, 1954, 1956], "receiv": [1, 7, 9, 20, 23, 27, 29, 51, 53, 1031, 1201, 1434, 1610, 1611, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1706, 1880, 1890, 1892, 1899, 1900, 1913, 1923, 1930, 1931, 1932, 1934, 1951, 1956, 1963], "initi": [1, 2, 3, 4, 8, 16, 17, 20, 21, 25, 27, 31, 33, 40, 41, 43, 46, 87, 492, 495, 576, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 741, 742, 752, 756, 760, 857, 858, 875, 955, 977, 985, 1006, 1011, 1012, 1015, 1016, 1041, 1075, 1076, 1077, 1148, 1177, 1199, 1201, 1213, 1214, 1272, 1273, 1290, 1352, 1353, 1354, 1355, 1357, 1365, 1366, 1367, 1371, 1377, 1378, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1442, 1449, 1451, 1473, 1483, 1524, 1605, 1614, 1616, 1617, 1621, 1623, 1626, 1654, 1668, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1761, 1762, 1763, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1876, 1878, 1879, 1880, 1890, 1895, 1898, 1900, 1903, 1904, 1905, 1910, 1917, 1918, 1921, 1922, 1923, 1929, 1930, 1931, 1948, 1956, 1961, 1962], "memori": [1, 2, 3, 5, 11, 21, 25, 27, 29, 30, 46, 50, 54, 149, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 238, 252, 265, 295, 323, 329, 335, 337, 338, 391, 442, 443, 444, 445, 446, 455, 460, 483, 495, 496, 520, 521, 576, 599, 613, 730, 759, 874, 876, 889, 895, 904, 905, 930, 945, 948, 975, 976, 979, 982, 983, 985, 999, 1000, 1009, 1010, 1013, 1017, 1019, 1020, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1038, 1039, 1040, 1044, 1074, 1075, 1076, 1077, 1125, 1126, 1127, 1129, 1130, 1131, 1136, 1138, 1142, 1201, 1218, 1246, 1272, 1309, 1310, 1311, 1319, 1378, 1404, 1405, 1434, 1477, 1478, 1479, 1481, 1583, 1601, 1614, 1621, 1647, 1659, 1666, 1668, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1730, 1731, 1733, 1734, 1735, 1736, 1836, 1857, 1868, 1874, 1876, 1877, 1888, 1892, 1894, 1895, 1900, 1905, 1913, 1918, 1923, 1924, 1925, 1930, 1934, 1936, 1937, 1938, 1940, 1941, 1948, 1952, 1953, 1955, 1960, 1962], "overlap": [1, 20, 21, 23, 27, 46, 54, 874, 904, 905, 1077, 1131, 1198, 1381, 1485, 1614, 1818, 1857, 1903, 1904, 1937, 1951, 1953, 1962], "dens": [1, 27, 217, 541, 542, 579, 580, 581, 582, 583, 584, 917, 926, 1158, 1159, 1220, 1273, 1692, 1793, 1796, 1799, 1800, 1803, 1804, 1805, 1806, 1808, 1809, 1814, 1823, 1857, 1895, 1915, 1934, 1937, 1951], "stride": [1, 11, 55, 60, 63, 137, 220, 252, 337, 442, 443, 444, 445, 446, 495, 516, 540, 577, 579, 580, 581, 583, 584, 613, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 764, 765, 768, 769, 770, 778, 779, 861, 874, 917, 926, 1075, 1077, 1087, 1092, 1110, 1128, 1129, 1158, 1159, 1165, 1201, 1210, 1214, 1220, 1271, 1287, 1305, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1446, 1485, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1527, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1601, 1614, 1665, 1726, 1727, 1730, 1732, 1733, 1734, 1736, 1737, 1744, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1842, 1847, 1849, 1866, 1873, 1878, 1881, 1893, 1918, 1920, 1930, 1934, 1936, 1937, 1939, 1940, 1941, 1950, 1951, 1952, 1958, 1963], "rowmajor": [1, 1614], "contigu": [1, 11, 21, 25, 329, 495, 516, 613, 1380, 1437, 1573, 1614, 1738, 1744, 1822, 1878, 1894, 1895, 1920, 1927, 1934, 1936, 1938], "create_graph": [1, 149, 889, 897, 898, 899, 900, 901, 902, 903, 1878, 1899], "preserv": [1, 20, 29, 46, 54, 495, 775, 781, 850, 872, 875, 1115, 1116, 1131, 1201, 1205, 1211, 1434, 1435, 1444, 1486, 1544, 1602, 1674, 1753, 1757, 1795, 1836, 1877, 1888, 1893, 1895, 1898, 1903, 1906, 1915, 1918, 1930, 1934, 1937, 1948, 1952], "preexist": [1, 1951, 1952], "behavior": [1, 2, 7, 13, 19, 21, 23, 24, 25, 27, 29, 30, 33, 38, 41, 46, 50, 51, 53, 54, 81, 252, 317, 468, 495, 509, 540, 613, 683, 781, 789, 822, 874, 888, 924, 930, 934, 947, 1069, 1074, 1075, 1076, 1077, 1119, 1126, 1127, 1131, 1201, 1211, 1214, 1216, 1246, 1253, 1257, 1270, 1271, 1272, 1287, 1295, 1302, 1371, 1374, 1395, 1404, 1434, 1449, 1473, 1486, 1498, 1533, 1601, 1602, 1605, 1606, 1614, 1615, 1658, 1660, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1715, 1721, 1737, 1744, 1786, 1822, 1843, 1857, 1875, 1877, 1881, 1882, 1884, 1886, 1893, 1895, 1901, 1903, 1905, 1906, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1926, 1927, 1930, 1935, 1938, 1952, 1954, 1956], "let": [1, 7, 8, 20, 21, 28, 29, 41, 51, 54, 483, 492, 943, 1154, 1201, 1220, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1434, 1614, 1621, 1836, 1884, 1893, 1894, 1900, 1903, 1904, 1905, 1906, 1911, 1913, 1914, 1915, 1916, 1917, 1922, 1931, 1932, 1934, 1939, 1948, 1949, 1952, 1954, 1955, 1956, 1957, 1962, 1963], "first": [1, 4, 5, 7, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 37, 40, 41, 46, 52, 54, 55, 63, 65, 215, 252, 288, 585, 606, 682, 685, 687, 690, 756, 789, 790, 810, 850, 853, 855, 870, 871, 880, 885, 886, 887, 888, 903, 904, 916, 920, 921, 923, 924, 925, 928, 930, 932, 946, 974, 977, 988, 1062, 1064, 1065, 1066, 1071, 1074, 1079, 1092, 1094, 1113, 1127, 1132, 1133, 1135, 1136, 1137, 1141, 1142, 1145, 1154, 1157, 1165, 1166, 1167, 1178, 1190, 1199, 1208, 1213, 1214, 1220, 1225, 1230, 1233, 1240, 1256, 1259, 1266, 1267, 1269, 1272, 1273, 1289, 1295, 1298, 1301, 1302, 1303, 1305, 1322, 1324, 1330, 1335, 1338, 1342, 1348, 1349, 1355, 1363, 1364, 1366, 1367, 1377, 1378, 1380, 1385, 1386, 1400, 1403, 1404, 1419, 1426, 1428, 1429, 1449, 1462, 1515, 1601, 1605, 1614, 1623, 1624, 1626, 1637, 1647, 1653, 1678, 1679, 1680, 1681, 1682, 1688, 1691, 1692, 1696, 1700, 1703, 1705, 1711, 1721, 1722, 1748, 1749, 1757, 1785, 1799, 1802, 1807, 1837, 1838, 1842, 1847, 1849, 1855, 1862, 1865, 1868, 1870, 1875, 1877, 1879, 1880, 1887, 1889, 1892, 1893, 1895, 1899, 1900, 1903, 1905, 1907, 1908, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1921, 1923, 1924, 1925, 1930, 1931, 1932, 1934, 1935, 1939, 1943, 1948, 1949, 1950, 1951, 1952, 1953, 1956, 1961, 1962, 1963, 1964], "accord": [1, 9, 31, 793, 857, 858, 876, 918, 930, 1072, 1164, 1261, 1294, 1324, 1342, 1378, 1605, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1697, 1703, 1722, 1786, 1810, 1837, 1869, 1880, 1890, 1894, 1895, 1898, 1911, 1915, 1917, 1922, 1932, 1941], "retain": [1, 9, 23, 689, 691, 692, 695, 870, 871, 876, 1205, 1222, 1253, 1257, 1270, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1330, 1331, 1332, 1661, 1719, 1722, 1753, 1816, 1817, 1821, 1846, 1847, 1848, 1849, 1863, 1864, 1892, 1913, 1934], "over": [1, 9, 20, 21, 23, 24, 28, 29, 31, 38, 41, 46, 47, 48, 49, 50, 51, 52, 54, 55, 58, 62, 63, 65, 478, 676, 693, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 888, 913, 935, 986, 1031, 1033, 1037, 1051, 1052, 1053, 1054, 1055, 1056, 1074, 1130, 1134, 1136, 1140, 1142, 1154, 1162, 1201, 1216, 1233, 1253, 1257, 1269, 1270, 1272, 1280, 1300, 1302, 1332, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1378, 1381, 1382, 1383, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1422, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1441, 1448, 1462, 1465, 1466, 1468, 1473, 1482, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1517, 1528, 1529, 1545, 1551, 1554, 1555, 1557, 1558, 1559, 1568, 1569, 1576, 1583, 1609, 1618, 1658, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1726, 1727, 1742, 1801, 1803, 1816, 1817, 1818, 1821, 1838, 1853, 1863, 1864, 1868, 1880, 1890, 1892, 1893, 1894, 1899, 1901, 1902, 1904, 1905, 1906, 1908, 1911, 1913, 1914, 1921, 1930, 1931, 1934, 1942, 1948, 1950, 1951, 1952, 1953, 1956, 1963], "time": [1, 3, 4, 7, 8, 9, 13, 20, 21, 23, 24, 25, 27, 29, 30, 31, 37, 40, 41, 42, 51, 53, 54, 87, 288, 311, 484, 489, 613, 676, 681, 682, 683, 684, 685, 686, 687, 690, 741, 742, 752, 756, 760, 764, 765, 795, 797, 820, 837, 873, 903, 909, 910, 914, 916, 928, 936, 938, 948, 959, 966, 977, 978, 980, 1020, 1033, 1052, 1055, 1066, 1088, 1089, 1095, 1096, 1097, 1103, 1114, 1115, 1116, 1124, 1127, 1136, 1137, 1138, 1141, 1142, 1190, 1198, 1201, 1208, 1213, 1216, 1217, 1221, 1226, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1245, 1246, 1247, 1250, 1252, 1256, 1259, 1261, 1263, 1264, 1272, 1273, 1295, 1305, 1312, 1323, 1324, 1326, 1336, 1344, 1345, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1378, 1381, 1382, 1383, 1386, 1397, 1398, 1399, 1404, 1406, 1420, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1446, 1447, 1449, 1470, 1473, 1485, 1486, 1487, 1488, 1498, 1501, 1502, 1528, 1529, 1573, 1574, 1575, 1591, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1621, 1622, 1624, 1626, 1660, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1699, 1709, 1710, 1721, 1743, 1749, 1799, 1813, 1818, 1819, 1838, 1868, 1876, 1879, 1880, 1881, 1886, 1888, 1892, 1898, 1900, 1902, 1904, 1905, 1907, 1908, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1931, 1932, 1934, 1939, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1956, 1959, 1960, 1962, 1963], "4": [1, 3, 11, 17, 18, 20, 21, 23, 25, 27, 29, 30, 31, 38, 40, 51, 54, 55, 56, 57, 60, 61, 62, 63, 64, 190, 207, 240, 252, 287, 309, 311, 313, 315, 319, 399, 400, 442, 443, 468, 480, 484, 489, 492, 495, 509, 513, 519, 533, 540, 552, 554, 556, 580, 581, 603, 613, 679, 680, 681, 682, 685, 687, 688, 689, 691, 692, 693, 695, 735, 737, 738, 739, 742, 744, 753, 756, 769, 770, 820, 861, 870, 871, 872, 876, 877, 878, 879, 880, 881, 883, 884, 895, 897, 900, 901, 902, 916, 919, 922, 926, 927, 928, 932, 934, 937, 938, 941, 942, 943, 946, 956, 961, 962, 963, 964, 974, 1054, 1057, 1064, 1066, 1068, 1069, 1072, 1073, 1074, 1077, 1079, 1089, 1090, 1092, 1094, 1102, 1108, 1110, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1140, 1141, 1142, 1143, 1144, 1145, 1154, 1157, 1161, 1162, 1163, 1164, 1166, 1167, 1171, 1175, 1178, 1190, 1192, 1198, 1207, 1212, 1214, 1221, 1222, 1223, 1224, 1225, 1226, 1230, 1232, 1233, 1239, 1241, 1243, 1244, 1245, 1248, 1250, 1253, 1255, 1257, 1259, 1261, 1263, 1266, 1267, 1268, 1270, 1271, 1274, 1276, 1277, 1282, 1284, 1285, 1287, 1289, 1294, 1295, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1322, 1323, 1324, 1332, 1333, 1334, 1335, 1342, 1347, 1358, 1359, 1360, 1363, 1364, 1366, 1367, 1375, 1377, 1378, 1379, 1381, 1385, 1386, 1404, 1405, 1430, 1431, 1437, 1439, 1441, 1446, 1447, 1449, 1455, 1456, 1457, 1458, 1459, 1473, 1485, 1486, 1487, 1488, 1489, 1490, 1498, 1500, 1509, 1512, 1524, 1525, 1533, 1544, 1568, 1571, 1574, 1575, 1601, 1602, 1603, 1604, 1605, 1614, 1621, 1626, 1637, 1649, 1650, 1652, 1654, 1660, 1661, 1662, 1664, 1666, 1668, 1675, 1688, 1693, 1694, 1700, 1704, 1705, 1706, 1710, 1714, 1715, 1718, 1719, 1721, 1722, 1724, 1728, 1730, 1732, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1743, 1744, 1748, 1749, 1750, 1752, 1753, 1757, 1770, 1777, 1779, 1780, 1785, 1786, 1788, 1790, 1795, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1818, 1821, 1824, 1825, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1855, 1856, 1857, 1862, 1865, 1866, 1867, 1868, 1869, 1870, 1874, 1877, 1878, 1879, 1880, 1881, 1887, 1892, 1894, 1895, 1898, 1900, 1901, 1903, 1904, 1905, 1911, 1913, 1916, 1917, 1918, 1922, 1923, 1925, 1927, 1930, 1934, 1935, 1937, 1938, 1939, 1940, 1941, 1948, 1950, 1951, 1953, 1956, 1958, 1961, 1963], "fact": [1, 3, 8, 46, 491, 917, 926, 960, 1154, 1158, 1159, 1236, 1237, 1264, 1877, 1905, 1908, 1918, 1931, 1934, 1948, 1952, 1957], "reset": [1, 756, 816, 821, 889, 975, 1023, 1025, 1038, 1039, 1040, 1201, 1386, 1434, 1450, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1711, 1728, 1823, 1890, 1918, 1929], "phase": [1, 21, 789, 1236, 1237, 1703, 1822, 1878, 1917, 1953, 1963], "recreat": [1, 1900, 1962], "valid": [1, 23, 29, 38, 40, 54, 79, 83, 87, 743, 744, 753, 787, 939, 951, 954, 1017, 1074, 1199, 1201, 1202, 1222, 1236, 1237, 1246, 1247, 1248, 1259, 1264, 1295, 1362, 1363, 1364, 1508, 1509, 1510, 1533, 1605, 1632, 1637, 1641, 1670, 1673, 1693, 1694, 1699, 1700, 1701, 1702, 1704, 1705, 1706, 1707, 1721, 1877, 1878, 1879, 1880, 1894, 1895, 1900, 1903, 1905, 1909, 1918, 1921, 1924, 1930, 1931, 1951, 1956, 1959, 1963], "altern": [1, 9, 20, 23, 54, 676, 810, 1134, 1135, 1163, 1208, 1272, 1462, 1479, 1481, 1552, 1614, 1666, 1692, 1764, 1857, 1874, 1875, 1881, 1900, 1909, 1911, 1914, 1915, 1917, 1953, 1961], "never": [1, 5, 7, 21, 23, 40, 41, 220, 221, 792, 875, 936, 948, 1198, 1247, 1248, 1259, 1272, 1614, 1647, 1900, 1903, 1905, 1922, 1923, 1930, 1941, 1948, 1951], "long": [1, 7, 9, 20, 40, 53, 730, 745, 747, 748, 749, 750, 752, 759, 777, 1131, 1177, 1301, 1306, 1330, 1357, 1370, 1378, 1404, 1405, 1441, 1517, 1670, 1720, 1833, 1837, 1847, 1849, 1854, 1876, 1880, 1887, 1892, 1893, 1894, 1900, 1901, 1903, 1905, 1907, 1913, 1915, 1918, 1922, 1924, 1929, 1936, 1937, 1939, 1940, 1953, 1961, 1963], "hard": [1, 7, 8, 23, 28, 41, 950, 1074, 1273, 1390, 1535, 1536, 1877, 1878, 1879, 1900, 1918, 1922, 1953, 1954], "matter": [1, 4, 23, 46, 893, 1062, 1074, 1208, 1211, 1216, 1614, 1895, 1900, 1922], "discourag": [1, 1043, 1047, 1900, 1930], "aggress": [1, 46, 1198, 1900, 1930, 1953], "buffer": [1, 4, 20, 21, 23, 46, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 876, 988, 1020, 1127, 1130, 1140, 1201, 1208, 1211, 1222, 1272, 1352, 1353, 1354, 1371, 1407, 1408, 1409, 1434, 1473, 1607, 1614, 1616, 1623, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644, 1654, 1656, 1669, 1689, 1691, 1753, 1795, 1840, 1879, 1896, 1900, 1904, 1905, 1911, 1916, 1918, 1923, 1953], "free": [1, 7, 23, 25, 29, 31, 40, 41, 46, 54, 55, 62, 63, 1026, 1044, 1204, 1216, 1273, 1888, 1898, 1900, 1903, 1905, 1907, 1913, 1917, 1918, 1934, 1951], "reus": [1, 23, 28, 54, 483, 1900, 1903, 1930, 1948, 1951, 1953, 1958, 1963], "effici": [1, 2, 3, 8, 11, 20, 29, 46, 47, 52, 149, 756, 889, 894, 903, 938, 1138, 1146, 1218, 1256, 1273, 1292, 1342, 1373, 1374, 1375, 1378, 1379, 1386, 1440, 1446, 1447, 1481, 1583, 1888, 1895, 1900, 1904, 1905, 1908, 1912, 1913, 1914, 1921, 1923, 1925, 1930, 1931, 1934, 1937, 1938, 1942], "few": [1, 7, 8, 21, 25, 31, 1074, 1131, 1378, 1614, 1875, 1880, 1900, 1903, 1905, 1907, 1909, 1914, 1917, 1918, 1921, 1923, 1925, 1928, 1934, 1938, 1940, 1942, 1951, 1953, 1955, 1956, 1957, 1961, 1963], "occas": [1, 7, 1900], "actual": [1, 8, 25, 31, 33, 46, 51, 54, 786, 959, 1092, 1110, 1212, 1216, 1365, 1366, 1367, 1533, 1614, 1638, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1875, 1879, 1880, 1893, 1900, 1903, 1904, 1905, 1908, 1913, 1917, 1918, 1925, 1930, 1936, 1941, 1951, 1952, 1953, 1955, 1956], "signific": [1, 3, 25, 1705, 1900, 1903, 1934, 1955, 1959], "amount": [1, 2, 3, 4, 7, 20, 23, 25, 31, 40, 54, 905, 999, 1025, 1027, 1031, 1198, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1381, 1422, 1437, 1485, 1516, 1631, 1632, 1634, 1635, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1894, 1900, 1902, 1903, 1906, 1907, 1909, 1930, 1934, 1951, 1957, 1961, 1963], "heavi": [1, 23, 1900, 1917, 1952], "pressur": [1, 46, 1900], "might": [1, 3, 4, 9, 13, 14, 17, 23, 25, 27, 28, 29, 40, 51, 53, 54, 80, 82, 149, 483, 540, 889, 974, 1216, 1217, 1533, 1614, 1615, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1875, 1877, 1890, 1895, 1900, 1902, 1903, 1904, 1905, 1908, 1910, 1915, 1918, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1938, 1940, 1941, 1945, 1948, 1951, 1952, 1953, 1954, 1955, 1956, 1962, 1963], "keep": [1, 3, 7, 20, 21, 25, 27, 31, 40, 46, 55, 978, 1272, 1352, 1353, 1354, 1358, 1377, 1397, 1398, 1399, 1443, 1473, 1533, 1544, 1614, 1633, 1674, 1742, 1875, 1876, 1877, 1892, 1894, 1895, 1900, 1903, 1904, 1906, 1907, 1908, 1913, 1919, 1921, 1925, 1930, 1931, 1932, 1951, 1952, 1956, 1961], "track": [1, 31, 55, 81, 333, 983, 1023, 1025, 1038, 1039, 1040, 1130, 1131, 1176, 1302, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1614, 1633, 1890, 1892, 1894, 1895, 1900, 1903, 1905, 1906, 1907, 1910, 1911, 1919, 1921, 1923, 1924, 1931, 1932, 1934, 1951, 1952, 1953, 1956, 1960], "save": [1, 5, 7, 11, 14, 21, 23, 25, 27, 46, 492, 833, 885, 886, 895, 1138, 1200, 1201, 1206, 1208, 1216, 1218, 1272, 1434, 1614, 1668, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1699, 1702, 1706, 1877, 1878, 1889, 1894, 1905, 1906, 1911, 1913, 1915, 1918, 1920, 1921, 1922, 1924, 1930, 1934, 1939, 1943, 1948, 1953, 1955], "afterward": [1, 1434, 1605, 1614, 1934], "start": [1, 3, 4, 8, 9, 20, 21, 23, 25, 31, 37, 39, 40, 41, 42, 46, 50, 53, 54, 400, 430, 431, 492, 534, 694, 861, 1023, 1025, 1036, 1038, 1039, 1096, 1097, 1113, 1127, 1199, 1213, 1226, 1271, 1287, 1333, 1334, 1342, 1347, 1348, 1349, 1378, 1380, 1427, 1428, 1429, 1435, 1437, 1525, 1571, 1614, 1628, 1632, 1634, 1647, 1675, 1697, 1703, 1737, 1768, 1791, 1804, 1805, 1806, 1808, 1809, 1875, 1876, 1878, 1879, 1884, 1887, 1892, 1894, 1900, 1901, 1903, 1904, 1907, 1911, 1912, 1913, 1917, 1918, 1921, 1924, 1930, 1931, 1932, 1934, 1947, 1951, 1953, 1958, 1960], "sure": [1, 7, 9, 20, 23, 25, 30, 32, 41, 43, 49, 54, 857, 858, 889, 1078, 1125, 1176, 1205, 1216, 1217, 1273, 1614, 1659, 1699, 1840, 1880, 1893, 1900, 1904, 1907, 1908, 1917, 1918, 1924, 1925, 1930, 1931, 1932, 1934, 1939, 1953, 1955, 1963], "longer": [1, 23, 42, 50, 51, 683, 886, 904, 905, 1198, 1205, 1614, 1658, 1661, 1890, 1900, 1903, 1930, 1932, 1948, 1963], "find": [1, 7, 13, 23, 40, 51, 54, 77, 1074, 1154, 1222, 1273, 1365, 1366, 1367, 1404, 1673, 1711, 1722, 1757, 1823, 1875, 1888, 1892, 1894, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1913, 1915, 1918, 1919, 1920, 1925, 1930, 1934, 1937, 1939, 1941, 1943, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1962, 1963, 1964], "quick": [1, 7, 49, 1887, 1911, 1946, 1961], "guid": [1, 8, 9, 20, 77, 78, 1212, 1658, 1876, 1903, 1906, 1922, 1925, 1956, 1961], "var": [1, 33, 38, 40, 43, 1352, 1353, 1354, 1388, 1389, 1397, 1398, 1399, 1406, 1473, 1530, 1725, 1864, 1878, 1880, 1893, 1920, 1951, 1956, 1958, 1963], "thing": [1, 3, 7, 8, 23, 51, 54, 1131, 1210, 1302, 1350, 1535, 1796, 1879, 1900, 1903, 1905, 1906, 1907, 1908, 1913, 1918, 1922, 1925, 1926, 1932, 1948, 1952, 1953, 1956, 1961, 1963], "detach": [1, 5, 221, 445, 455, 945, 1130, 1201, 1357, 1434, 1517, 1535, 1799, 1836, 1877, 1878, 1893, 1895, 1907, 1918, 1920, 1927, 1934, 1938, 1940, 1962], "register_hook": [1, 1893, 1900], "name": [1, 2, 3, 13, 21, 23, 28, 29, 31, 33, 34, 37, 38, 40, 42, 46, 54, 82, 676, 693, 743, 744, 753, 788, 810, 811, 812, 813, 820, 836, 850, 854, 913, 954, 976, 1003, 1130, 1140, 1199, 1201, 1202, 1208, 1211, 1216, 1217, 1231, 1236, 1237, 1243, 1244, 1246, 1247, 1248, 1249, 1259, 1260, 1262, 1264, 1265, 1272, 1434, 1484, 1607, 1612, 1613, 1614, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1655, 1656, 1658, 1668, 1670, 1672, 1673, 1753, 1763, 1858, 1860, 1862, 1875, 1876, 1877, 1878, 1880, 1881, 1884, 1886, 1889, 1890, 1892, 1898, 1900, 1903, 1904, 1905, 1908, 1910, 1911, 1918, 1920, 1922, 1923, 1924, 1930, 1931, 1936, 1939, 1941, 1942, 1943, 1944, 1949, 1950, 1953, 1956, 1957, 1960, 1962, 1963, 1964, 1965], "factori": [1, 2, 11, 29, 31, 34, 38, 51, 820, 1074, 1659, 1673, 1761, 1876, 1878, 1894, 1903, 1920, 1937, 1952], "ones": [1, 20, 23, 27, 29, 46, 51, 52, 53, 54, 55, 57, 60, 62, 63, 149, 252, 311, 400, 442, 443, 445, 511, 790, 855, 889, 898, 900, 901, 902, 903, 904, 918, 930, 948, 1057, 1065, 1087, 1130, 1137, 1138, 1141, 1176, 1198, 1201, 1212, 1221, 1247, 1263, 1272, 1351, 1377, 1381, 1388, 1389, 1406, 1434, 1438, 1439, 1441, 1443, 1485, 1524, 1583, 1601, 1605, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1638, 1651, 1653, 1656, 1666, 1670, 1725, 1742, 1760, 1791, 1839, 1843, 1860, 1871, 1878, 1880, 1882, 1893, 1894, 1900, 1901, 1903, 1905, 1912, 1914, 1915, 1918, 1920, 1921, 1922, 1925, 1930, 1932, 1935, 1937, 1940, 1953, 1957, 1962, 1963], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 20, 23, 24, 25, 27, 28, 29, 31, 33, 38, 40, 41, 42, 46, 51, 54, 70, 80, 81, 82, 787, 792, 796, 798, 816, 817, 818, 820, 821, 857, 858, 895, 948, 966, 1035, 1036, 1072, 1074, 1117, 1154, 1164, 1203, 1214, 1226, 1264, 1275, 1277, 1279, 1287, 1371, 1434, 1437, 1438, 1439, 1443, 1477, 1479, 1481, 1550, 1583, 1614, 1618, 1619, 1621, 1628, 1632, 1634, 1675, 1676, 1677, 1678, 1679, 1680, 1689, 1690, 1691, 1692, 1718, 1728, 1753, 1767, 1822, 1823, 1837, 1847, 1849, 1869, 1876, 1878, 1880, 1902, 1903, 1904, 1905, 1911, 1919, 1923, 1924, 1925, 1930, 1931, 1934, 1935, 1938, 1939, 1941, 1943, 1944, 1950, 1951, 1953, 1955, 1956], "static": [1, 3, 8, 13, 24, 29, 31, 46, 55, 60, 61, 63, 790, 811, 813, 822, 828, 853, 855, 857, 885, 886, 887, 888, 1214, 1477, 1614, 1797, 1877, 1878, 1879, 1880, 1903, 1910, 1919, 1923, 1926, 1930, 1936, 1948, 1950, 1951, 1956], "Then": [1, 23, 41, 54, 1381, 1485, 1623, 1673, 1858, 1900, 1901, 1904, 1905, 1906, 1914, 1915, 1918, 1921, 1922, 1930, 1931, 1943, 1948, 1954], "op": [1, 4, 23, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 81, 82, 149, 499, 520, 600, 753, 788, 789, 790, 819, 822, 850, 857, 858, 889, 895, 903, 938, 948, 981, 996, 998, 1002, 1003, 1017, 1018, 1043, 1047, 1049, 1131, 1151, 1202, 1214, 1216, 1217, 1272, 1278, 1450, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1709, 1768, 1845, 1876, 1880, 1884, 1886, 1887, 1888, 1890, 1893, 1894, 1902, 1903, 1904, 1905, 1913, 1919, 1922, 1924, 1925, 1926, 1927, 1928, 1934, 1936, 1938, 1940, 1944, 1948, 1949, 1952, 1953, 1954, 1955, 1956, 1958, 1962, 1963], "ctx": [1, 38, 55, 59, 885, 886, 887, 893, 894, 895, 896, 1899, 1905, 1906, 1918], "gradcheck": [1, 905, 1876, 1905], "extend": [1, 20, 23, 25, 29, 32, 42, 54, 857, 886, 888, 895, 1436, 1445, 1858, 1876, 1884, 1895, 1900, 1910, 1912, 1913, 1918, 1920, 1922, 1928, 1934, 1964], "staticmethod": [1, 55, 886, 888, 893, 894, 895, 896, 1880, 1899, 1905, 1918, 1930], "result": [1, 3, 4, 5, 7, 8, 9, 13, 17, 20, 21, 23, 25, 29, 31, 33, 38, 41, 46, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 80, 82, 152, 220, 221, 252, 253, 313, 333, 396, 492, 494, 495, 552, 579, 580, 581, 583, 584, 614, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 756, 789, 873, 875, 891, 892, 897, 898, 899, 900, 901, 902, 904, 905, 916, 919, 930, 934, 939, 945, 947, 948, 951, 962, 964, 987, 989, 991, 1017, 1018, 1031, 1053, 1054, 1055, 1056, 1057, 1069, 1074, 1092, 1095, 1101, 1110, 1117, 1119, 1122, 1126, 1127, 1130, 1131, 1132, 1135, 1136, 1141, 1142, 1146, 1162, 1163, 1165, 1178, 1192, 1201, 1204, 1205, 1212, 1216, 1217, 1219, 1221, 1222, 1226, 1240, 1242, 1244, 1245, 1253, 1257, 1259, 1261, 1262, 1263, 1270, 1280, 1281, 1288, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1329, 1332, 1371, 1373, 1374, 1375, 1379, 1381, 1386, 1400, 1404, 1434, 1440, 1449, 1477, 1478, 1479, 1480, 1481, 1485, 1515, 1533, 1544, 1598, 1601, 1602, 1614, 1621, 1623, 1656, 1659, 1660, 1661, 1662, 1673, 1703, 1709, 1711, 1718, 1719, 1722, 1728, 1741, 1747, 1762, 1790, 1800, 1802, 1803, 1814, 1816, 1817, 1818, 1821, 1822, 1823, 1832, 1836, 1837, 1842, 1843, 1845, 1846, 1848, 1860, 1863, 1864, 1868, 1877, 1878, 1879, 1880, 1887, 1888, 1893, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1918, 1919, 1921, 1923, 1924, 1926, 1927, 1930, 1931, 1934, 1937, 1939, 1940, 1941, 1944, 1945, 1949, 1952, 1956, 1957, 1960, 1961, 1962, 1963, 1964], "save_for_backward": [1, 886, 894, 896, 1899, 1900, 1905, 1906, 1918], "grad_output": [1, 55, 885, 893, 903, 905, 909, 910, 1201, 1434, 1610, 1611, 1878, 1900, 1903, 1905, 1906, 1911, 1958], "saved_tensor": [1, 894, 895, 896, 1899, 1900, 1905, 1906], "avail": [1, 2, 5, 8, 9, 13, 14, 20, 23, 31, 40, 41, 77, 78, 971, 997, 999, 1000, 1011, 1014, 1021, 1022, 1041, 1042, 1044, 1074, 1207, 1264, 1265, 1290, 1477, 1486, 1544, 1583, 1602, 1711, 1765, 1818, 1823, 1857, 1860, 1875, 1876, 1877, 1879, 1880, 1884, 1887, 1892, 1900, 1903, 1905, 1909, 1911, 1912, 1913, 1915, 1916, 1917, 1921, 1922, 1924, 1925, 1926, 1930, 1944, 1945, 1955, 1963, 1964], "cost": [1, 3, 4, 8, 9, 21, 46, 938, 948, 1256, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1761, 1903, 1915, 1926, 1931, 1937, 1959, 1963], "both": [1, 2, 3, 13, 20, 21, 23, 24, 25, 28, 29, 33, 38, 39, 40, 41, 46, 53, 54, 55, 62, 63, 96, 337, 725, 764, 765, 768, 769, 770, 789, 847, 888, 892, 898, 899, 900, 901, 902, 916, 953, 966, 998, 1069, 1090, 1120, 1121, 1122, 1130, 1144, 1146, 1154, 1161, 1178, 1191, 1192, 1198, 1201, 1214, 1222, 1223, 1271, 1287, 1295, 1301, 1315, 1316, 1347, 1348, 1352, 1353, 1354, 1359, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1389, 1395, 1397, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1427, 1428, 1429, 1434, 1440, 1473, 1481, 1485, 1486, 1489, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559, 1583, 1614, 1626, 1656, 1678, 1679, 1703, 1726, 1727, 1796, 1797, 1799, 1818, 1822, 1842, 1843, 1877, 1879, 1880, 1887, 1893, 1894, 1896, 1899, 1900, 1901, 1905, 1906, 1908, 1911, 1914, 1915, 1916, 1918, 1922, 1923, 1925, 1928, 1930, 1932, 1934, 1935, 1941, 1943, 1944, 1945, 1948, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1960, 1963], "cpu": [1, 4, 5, 13, 16, 20, 23, 25, 46, 55, 60, 63, 87, 118, 195, 287, 324, 333, 442, 443, 444, 445, 446, 455, 576, 585, 861, 876, 914, 917, 926, 964, 967, 968, 977, 987, 988, 989, 991, 1075, 1077, 1087, 1092, 1110, 1122, 1127, 1128, 1151, 1152, 1158, 1159, 1201, 1208, 1210, 1211, 1220, 1230, 1232, 1236, 1237, 1238, 1239, 1241, 1243, 1246, 1248, 1249, 1255, 1258, 1261, 1264, 1265, 1271, 1272, 1287, 1290, 1301, 1312, 1371, 1377, 1434, 1477, 1598, 1614, 1618, 1619, 1647, 1648, 1662, 1665, 1721, 1730, 1732, 1734, 1736, 1737, 1761, 1766, 1768, 1769, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1790, 1799, 1804, 1805, 1806, 1807, 1808, 1809, 1822, 1836, 1837, 1838, 1847, 1849, 1854, 1857, 1873, 1876, 1877, 1878, 1880, 1884, 1888, 1892, 1893, 1895, 1903, 1905, 1906, 1909, 1911, 1914, 1915, 1917, 1918, 1920, 1923, 1924, 1926, 1929, 1930, 1934, 1936, 1937, 1940, 1941, 1942, 1945, 1948, 1950, 1952, 1955, 1957, 1960, 1961, 1963], "There": [1, 5, 6, 7, 9, 13, 19, 23, 25, 28, 40, 47, 51, 52, 54, 79, 80, 82, 676, 730, 789, 886, 948, 1131, 1371, 1404, 1449, 1583, 1614, 1654, 1659, 1875, 1877, 1879, 1880, 1886, 1887, 1894, 1900, 1903, 1905, 1906, 1907, 1910, 1913, 1917, 1918, 1922, 1925, 1926, 1930, 1932, 1940, 1942, 1948, 1951, 1952, 1953, 1956, 1962, 1963], "moment": [1, 55, 61, 768, 769, 770, 962, 1678, 1679, 1680, 1682, 1688, 1692, 1888, 1892, 1895, 1924, 1930, 1956, 1960], "nvprof": [1, 4, 911, 1903], "regist": [1, 14, 21, 23, 27, 28, 29, 40, 42, 46, 54, 77, 78, 79, 80, 82, 484, 676, 788, 789, 850, 909, 910, 948, 1020, 1201, 1272, 1434, 1435, 1436, 1444, 1445, 1462, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1621, 1622, 1623, 1624, 1626, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1858, 1860, 1884, 1890, 1892, 1904, 1905, 1910, 1911, 1916, 1918, 1922, 1930, 1952, 1955, 1959], "activ": [1, 5, 7, 9, 42, 46, 52, 788, 790, 792, 799, 803, 837, 838, 847, 857, 858, 976, 985, 1000, 1013, 1031, 1130, 1132, 1142, 1273, 1346, 1373, 1374, 1375, 1379, 1389, 1406, 1433, 1435, 1452, 1463, 1477, 1479, 1481, 1526, 1563, 1586, 1614, 1624, 1625, 1626, 1656, 1661, 1868, 1876, 1888, 1892, 1903, 1905, 1906, 1911, 1918, 1921, 1923, 1924, 1925, 1926, 1927, 1930, 1934, 1943, 1944, 1948, 1952, 1958, 1963], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1924], "use_devic": 1, "record_shap": [1, 1924], "with_flop": [1, 1924], "profile_memori": [1, 1924], "with_stack": [1, 1924], "with_modul": [1, 1924], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1924], "hold": [1, 23, 38, 40, 42, 43, 46, 50, 53, 54, 533, 1273, 1381, 1435, 1436, 1444, 1445, 1485, 1605, 1614, 1616, 1617, 1623, 1633, 1647, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1804, 1805, 1806, 1807, 1808, 1809, 1901, 1903, 1905, 1907, 1910, 1913, 1921, 1924, 1930, 1931, 1932, 1934, 1936, 1937, 1939, 1940, 1951, 1956], "summari": [1, 3, 41, 1032, 1770, 1876, 1890, 1939, 1944, 1957, 1963], "hood": [1, 53, 1892, 1900, 1903, 1904, 1913, 1922, 1932, 1950, 1952, 1956], "just": [1, 2, 7, 13, 21, 23, 28, 29, 31, 38, 54, 585, 683, 693, 786, 819, 822, 885, 887, 913, 959, 960, 1216, 1217, 1255, 1258, 1263, 1264, 1290, 1373, 1374, 1375, 1379, 1614, 1626, 1627, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1761, 1846, 1847, 1848, 1849, 1858, 1875, 1877, 1892, 1899, 1900, 1905, 1906, 1908, 1910, 1911, 1912, 1916, 1922, 1923, 1930, 1931, 1934, 1937, 1938, 1940, 1944, 1948, 1949, 1950, 1951, 1952, 1953, 1956, 1962], "record": [1, 5, 27, 32, 33, 34, 38, 41, 53, 54, 442, 443, 444, 445, 446, 492, 815, 816, 817, 818, 821, 823, 861, 917, 926, 977, 978, 980, 1075, 1076, 1077, 1087, 1092, 1110, 1127, 1128, 1129, 1158, 1159, 1201, 1216, 1220, 1271, 1287, 1312, 1315, 1316, 1371, 1434, 1665, 1666, 1668, 1673, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1873, 1874, 1877, 1879, 1895, 1899, 1900, 1903, 1905, 1918, 1919, 1924, 1930, 1939, 1940, 1941, 1942, 1943, 1944, 1948, 1951, 1953, 1963], "event": [1, 26, 29, 31, 39, 42, 53, 913, 914, 915, 978, 980, 1031, 1034, 1216, 1217, 1278, 1315, 1316, 1583, 1876, 1890, 1892, 1903, 1924, 1939, 1961], "being": [1, 3, 5, 9, 20, 23, 25, 27, 29, 31, 33, 40, 41, 42, 46, 50, 51, 53, 54, 55, 63, 96, 400, 756, 789, 795, 888, 897, 903, 946, 978, 986, 1033, 1037, 1051, 1052, 1087, 1120, 1121, 1131, 1140, 1141, 1190, 1201, 1205, 1290, 1299, 1304, 1350, 1351, 1368, 1370, 1377, 1378, 1382, 1383, 1388, 1394, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1482, 1498, 1505, 1506, 1516, 1528, 1529, 1533, 1545, 1568, 1576, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1640, 1641, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1721, 1722, 1816, 1817, 1818, 1863, 1864, 1877, 1880, 1887, 1890, 1893, 1894, 1895, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1918, 1922, 1925, 1928, 1930, 1931, 1934, 1941, 1943, 1948, 1951, 1952, 1953, 1956, 1961, 1963, 1964], "those": [1, 2, 4, 5, 13, 20, 21, 23, 25, 27, 29, 46, 51, 53, 54, 820, 904, 989, 999, 1062, 1064, 1142, 1216, 1258, 1264, 1272, 1311, 1342, 1350, 1351, 1368, 1370, 1378, 1394, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1486, 1505, 1506, 1516, 1525, 1545, 1568, 1576, 1673, 1692, 1765, 1822, 1843, 1868, 1879, 1893, 1894, 1899, 1900, 1903, 1905, 1906, 1909, 1911, 1915, 1916, 1918, 1921, 1928, 1930, 1932, 1948, 1950, 1952, 1953, 1955, 1956, 1957, 1960, 1963], "report": [1, 3, 4, 17, 23, 33, 41, 53, 54, 79, 80, 82, 1031, 1134, 1135, 1137, 1899, 1903, 1923, 1934, 1953, 1957, 1960, 1963], "runtim": [1, 3, 5, 13, 23, 54, 823, 874, 913, 1072, 1074, 1164, 1201, 1216, 1434, 1616, 1617, 1674, 1717, 1857, 1869, 1880, 1893, 1894, 1900, 1903, 1905, 1913, 1918, 1953, 1959], "note": [1, 2, 3, 5, 8, 11, 13, 14, 17, 19, 20, 21, 23, 25, 27, 29, 30, 31, 38, 40, 42, 46, 50, 52, 53, 54, 55, 62, 63, 79, 80, 81, 82, 149, 220, 375, 495, 496, 509, 511, 513, 731, 737, 738, 739, 787, 789, 790, 791, 795, 837, 857, 861, 880, 889, 895, 897, 898, 899, 900, 901, 902, 903, 905, 938, 948, 974, 1049, 1057, 1062, 1074, 1095, 1125, 1127, 1142, 1143, 1154, 1176, 1188, 1198, 1199, 1201, 1202, 1207, 1273, 1295, 1315, 1316, 1350, 1351, 1357, 1365, 1366, 1367, 1368, 1370, 1377, 1378, 1386, 1388, 1394, 1400, 1401, 1404, 1425, 1426, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1448, 1449, 1465, 1466, 1473, 1477, 1482, 1486, 1505, 1506, 1516, 1524, 1525, 1533, 1544, 1545, 1568, 1571, 1576, 1577, 1590, 1605, 1614, 1615, 1661, 1669, 1670, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1695, 1697, 1703, 1705, 1721, 1728, 1803, 1804, 1805, 1806, 1808, 1809, 1814, 1818, 1822, 1843, 1857, 1858, 1860, 1868, 1875, 1877, 1878, 1881, 1887, 1892, 1895, 1896, 1900, 1901, 1902, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1924, 1926, 1928, 1929, 1931, 1932, 1934, 1938, 1939, 1951, 1954, 1961, 1962, 1963, 1965], "propag": [1, 25, 26, 29, 31, 40, 54, 55, 63, 509, 682, 685, 686, 687, 691, 692, 693, 694, 762, 763, 764, 765, 775, 778, 779, 781, 782, 783, 834, 836, 916, 1120, 1121, 1329, 1803, 1876, 1892, 1893, 1899, 1903, 1905, 1908, 1910, 1930, 1943, 1944, 1951, 1952, 1956, 1962], "async": [1, 23, 24, 53, 599, 1614, 1881, 1903, 1910, 1936], "task": [1, 3, 7, 21, 47, 52, 1204, 1219, 1397, 1398, 1399, 1880, 1902, 1910, 1911, 1913, 1917], "cuda": [1, 3, 4, 5, 13, 15, 19, 20, 21, 23, 25, 27, 46, 87, 149, 287, 311, 319, 333, 338, 511, 513, 520, 576, 861, 873, 875, 889, 903, 917, 919, 926, 948, 975, 976, 977, 978, 980, 981, 996, 998, 1009, 1075, 1076, 1077, 1087, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1128, 1158, 1159, 1201, 1220, 1222, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1255, 1258, 1261, 1262, 1264, 1265, 1271, 1272, 1287, 1290, 1306, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1404, 1434, 1449, 1473, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1544, 1571, 1583, 1602, 1603, 1604, 1605, 1614, 1616, 1617, 1618, 1619, 1660, 1662, 1665, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1721, 1730, 1732, 1734, 1736, 1737, 1761, 1765, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1800, 1804, 1805, 1806, 1807, 1808, 1809, 1822, 1836, 1838, 1847, 1849, 1854, 1857, 1873, 1876, 1878, 1884, 1893, 1895, 1905, 1906, 1911, 1914, 1918, 1920, 1921, 1923, 1924, 1929, 1930, 1934, 1936, 1937, 1940, 1941, 1942, 1945, 1952, 1953, 1955, 1960, 1963], "cudaev": 1, "approxim": [1, 3, 21, 27, 40, 54, 1138, 1154, 1264, 1273, 1342, 1384, 1448, 1463, 1470, 1531, 1576, 1586, 1622, 1675, 1692, 1711, 1823, 1843, 1878, 1880, 1903, 1904, 1905, 1908, 1918, 1958, 1965], "4u": 1, "shape": [1, 5, 8, 11, 21, 23, 29, 46, 48, 50, 52, 54, 55, 56, 57, 60, 61, 62, 65, 96, 170, 190, 207, 217, 398, 400, 442, 444, 446, 468, 493, 494, 509, 511, 513, 540, 562, 613, 676, 681, 683, 684, 693, 731, 741, 742, 752, 754, 756, 760, 762, 763, 764, 765, 768, 769, 770, 777, 792, 874, 880, 894, 898, 900, 901, 902, 913, 918, 919, 921, 924, 929, 931, 935, 936, 948, 961, 990, 1064, 1065, 1066, 1068, 1069, 1074, 1075, 1077, 1079, 1094, 1095, 1096, 1097, 1105, 1106, 1107, 1113, 1119, 1120, 1121, 1122, 1128, 1135, 1136, 1140, 1141, 1142, 1143, 1145, 1157, 1162, 1163, 1167, 1175, 1178, 1192, 1198, 1214, 1216, 1217, 1220, 1225, 1226, 1230, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1289, 1290, 1294, 1302, 1307, 1308, 1323, 1324, 1335, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1524, 1525, 1529, 1533, 1535, 1544, 1545, 1550, 1557, 1558, 1559, 1569, 1570, 1573, 1574, 1575, 1577, 1583, 1602, 1605, 1614, 1616, 1617, 1621, 1623, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1662, 1665, 1670, 1674, 1709, 1718, 1722, 1726, 1727, 1730, 1732, 1733, 1734, 1741, 1743, 1744, 1748, 1757, 1760, 1785, 1799, 1800, 1802, 1805, 1807, 1813, 1818, 1819, 1822, 1832, 1839, 1843, 1853, 1854, 1855, 1868, 1871, 1873, 1877, 1878, 1880, 1893, 1894, 1895, 1900, 1901, 1903, 1905, 1906, 1907, 1919, 1920, 1924, 1927, 1930, 1934, 1935, 1939, 1940, 1941, 1942, 1945, 1950, 1953, 1958, 1962, 1963], "about": [1, 8, 9, 16, 20, 23, 24, 27, 31, 33, 37, 39, 41, 47, 51, 54, 81, 253, 494, 614, 904, 905, 982, 983, 999, 1023, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1038, 1039, 1040, 1131, 1230, 1237, 1378, 1647, 1692, 1703, 1764, 1875, 1877, 1879, 1880, 1884, 1887, 1902, 1903, 1904, 1905, 1907, 1910, 1913, 1914, 1916, 1922, 1924, 1925, 1928, 1931, 1932, 1934, 1938, 1940, 1949, 1951, 1953, 1956, 1959, 1963], "dimens": [1, 11, 20, 23, 28, 29, 46, 51, 52, 54, 55, 60, 63, 65, 79, 217, 231, 252, 258, 311, 313, 315, 319, 430, 431, 469, 470, 471, 489, 509, 511, 513, 533, 539, 541, 542, 556, 579, 580, 581, 583, 584, 603, 613, 682, 688, 689, 691, 692, 693, 695, 731, 754, 775, 777, 781, 870, 871, 872, 873, 882, 883, 884, 888, 903, 927, 935, 938, 939, 940, 941, 942, 974, 989, 991, 1053, 1054, 1055, 1056, 1057, 1062, 1063, 1064, 1065, 1066, 1072, 1074, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1142, 1143, 1154, 1163, 1164, 1175, 1178, 1198, 1221, 1222, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1280, 1281, 1288, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1308, 1322, 1329, 1330, 1331, 1332, 1333, 1334, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1376, 1377, 1378, 1380, 1381, 1384, 1385, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1403, 1404, 1406, 1414, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1428, 1429, 1433, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1498, 1504, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1532, 1533, 1534, 1535, 1544, 1547, 1550, 1551, 1552, 1569, 1570, 1571, 1583, 1589, 1590, 1602, 1621, 1622, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1648, 1649, 1651, 1653, 1655, 1658, 1660, 1661, 1709, 1712, 1719, 1721, 1722, 1723, 1728, 1742, 1743, 1744, 1748, 1757, 1759, 1760, 1770, 1791, 1795, 1798, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1815, 1816, 1817, 1818, 1821, 1822, 1831, 1833, 1837, 1838, 1839, 1840, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1852, 1853, 1854, 1855, 1856, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1876, 1878, 1879, 1880, 1895, 1898, 1901, 1903, 1906, 1907, 1908, 1914, 1923, 1925, 1934, 1935, 1937, 1939, 1940, 1951, 1958], "collect": [1, 3, 7, 20, 24, 25, 27, 31, 40, 46, 53, 54, 795, 796, 820, 857, 858, 936, 1013, 1075, 1163, 1302, 1614, 1637, 1665, 1730, 1734, 1873, 1876, 1878, 1879, 1880, 1890, 1903, 1904, 1906, 1921, 1924, 1925, 1928, 1932, 1934, 1939, 1941, 1953, 1956, 1960, 1962, 1963], "group": [1, 3, 9, 20, 21, 24, 25, 27, 31, 37, 40, 41, 42, 43, 46, 49, 54, 606, 676, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 876, 913, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1389, 1410, 1411, 1412, 1413, 1414, 1415, 1473, 1508, 1509, 1510, 1511, 1512, 1513, 1534, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1855, 1875, 1876, 1878, 1880, 1892, 1898, 1903, 1904, 1918, 1921, 1922, 1924, 1930, 1939, 1949, 1953, 1958, 1963], "prof": [1, 37, 1924, 1953, 1961, 1963], "key_averag": [1, 1924], "group_by_input_shap": [1, 913, 1924], "skew": [1, 3, 4, 1252, 1621], "neglig": [1, 1213, 1765], "bottom": [1, 46, 1533, 1887, 1961], "But": [1, 7, 46, 53, 483, 1216, 1246, 1614, 1900, 1905, 1907, 1908, 1922, 1923, 1934, 1938, 1952, 1953, 1956, 1957, 1964], "total": [1, 3, 4, 7, 20, 21, 23, 37, 39, 40, 41, 46, 873, 914, 991, 1026, 1031, 1044, 1127, 1162, 1163, 1310, 1357, 1381, 1394, 1401, 1425, 1440, 1485, 1570, 1614, 1618, 1660, 1662, 1664, 1697, 1703, 1743, 1770, 1818, 1875, 1879, 1890, 1903, 1909, 1913, 1921, 1934], "artifici": [1, 1934], "estim": [1, 3, 20, 29, 962, 966, 1154, 1198, 1352, 1353, 1354, 1384, 1388, 1389, 1397, 1398, 1399, 1406, 1473, 1531, 1622, 1689, 1786, 1924], "flop": [1, 1924], "hardwar": [1, 8, 855, 857, 858, 1236, 1237, 1264, 1857, 1903, 1913, 1915, 1926, 1934, 1953, 1955, 1963], "matrix": [1, 2, 21, 23, 29, 190, 207, 682, 685, 686, 687, 756, 916, 918, 927, 928, 936, 938, 939, 940, 941, 948, 962, 966, 1057, 1061, 1062, 1064, 1074, 1142, 1146, 1150, 1165, 1221, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1270, 1273, 1281, 1290, 1292, 1295, 1305, 1324, 1326, 1377, 1378, 1386, 1404, 1485, 1524, 1525, 1621, 1626, 1655, 1661, 1709, 1710, 1711, 1721, 1765, 1793, 1796, 1799, 1800, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1814, 1822, 1823, 1838, 1841, 1843, 1845, 1846, 1847, 1848, 1849, 1862, 1868, 1876, 1880, 1893, 1894, 1895, 1898, 1902, 1903, 1905, 1908, 1911, 1914, 1924, 1934, 1939, 1940, 1953], "2d": [1, 25, 28, 29, 583, 584, 696, 699, 702, 731, 735, 738, 762, 764, 769, 775, 779, 781, 782, 783, 941, 962, 966, 1062, 1074, 1256, 1257, 1340, 1344, 1348, 1351, 1352, 1353, 1363, 1366, 1370, 1374, 1378, 1382, 1397, 1398, 1403, 1428, 1437, 1439, 1440, 1441, 1486, 1487, 1488, 1493, 1496, 1498, 1501, 1506, 1509, 1512, 1520, 1525, 1528, 1555, 1558, 1568, 1571, 1622, 1655, 1727, 1802, 1807, 1845, 1888, 1898, 1905, 1924, 1925, 1934], "alloc": [1, 4, 11, 17, 21, 25, 29, 31, 40, 46, 252, 329, 442, 443, 444, 445, 446, 483, 976, 978, 980, 982, 983, 985, 998, 999, 1000, 1023, 1025, 1027, 1029, 1030, 1031, 1032, 1039, 1040, 1044, 1075, 1077, 1309, 1310, 1311, 1319, 1669, 1730, 1734, 1736, 1761, 1836, 1892, 1895, 1900, 1904, 1909, 1913, 1918, 1924, 1937, 1947, 1948, 1951, 1952, 1961], "dealloc": [1, 54, 1127, 1892, 1903, 1907, 1909, 1924], "line": [1, 4, 17, 23, 54, 676, 913, 1074, 1131, 1176, 1201, 1211, 1434, 1498, 1533, 1770, 1797, 1877, 1880, 1881, 1895, 1901, 1905, 1908, 1909, 1915, 1917, 1918, 1924, 1934, 1947, 1950, 1953, 1955, 1956, 1957, 1960, 1963], "hierarchi": [1, 54, 836, 1205, 1678, 1679, 1881, 1905, 1924, 1925, 1951], "callstack": [1, 23, 1924], "A": [1, 2, 3, 5, 7, 8, 9, 13, 17, 20, 21, 23, 24, 25, 27, 28, 29, 31, 37, 40, 41, 42, 46, 47, 52, 53, 55, 56, 57, 60, 70, 80, 87, 556, 576, 579, 580, 581, 590, 620, 676, 688, 693, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 741, 742, 752, 757, 758, 759, 760, 761, 786, 788, 810, 854, 855, 857, 858, 915, 917, 926, 927, 929, 934, 939, 940, 947, 948, 950, 953, 954, 962, 966, 977, 978, 980, 988, 990, 991, 1059, 1074, 1079, 1087, 1088, 1089, 1101, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1145, 1154, 1157, 1158, 1159, 1163, 1191, 1192, 1193, 1194, 1197, 1199, 1201, 1204, 1208, 1211, 1213, 1216, 1217, 1221, 1225, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1270, 1273, 1281, 1289, 1290, 1291, 1292, 1296, 1335, 1351, 1355, 1357, 1370, 1377, 1378, 1387, 1388, 1396, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1424, 1433, 1434, 1440, 1462, 1467, 1469, 1477, 1482, 1483, 1498, 1504, 1516, 1524, 1535, 1545, 1552, 1563, 1583, 1589, 1590, 1605, 1614, 1615, 1616, 1617, 1621, 1623, 1626, 1648, 1649, 1652, 1668, 1669, 1670, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1686, 1688, 1689, 1690, 1691, 1692, 1696, 1697, 1699, 1702, 1703, 1705, 1711, 1721, 1723, 1724, 1725, 1726, 1727, 1738, 1744, 1750, 1753, 1786, 1795, 1797, 1798, 1801, 1813, 1817, 1818, 1822, 1823, 1840, 1845, 1846, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1864, 1868, 1871, 1875, 1877, 1878, 1879, 1880, 1884, 1887, 1888, 1893, 1894, 1898, 1899, 1902, 1903, 1905, 1906, 1907, 1913, 1914, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1939, 1940, 1944, 1948, 1949, 1952, 1953, 1955, 1956, 1958, 1961, 1962, 1963, 1964, 1965], "aten": [1, 2, 3, 13, 17, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 80, 1017, 1131, 1324, 1670, 1673, 1797, 1877, 1878, 1884, 1902, 1905, 1917, 1920, 1924, 1925, 1934, 1945, 1949, 1954, 1957, 1963], "torchscript": [1, 3, 8, 27, 54, 613, 1199, 1202, 1204, 1205, 1206, 1207, 1212, 1216, 1218, 1673, 1876, 1881, 1916, 1918, 1924, 1930], "eager": [1, 8, 948, 1049, 1199, 1202, 1212, 1769, 1880, 1903, 1924, 1926, 1928, 1948, 1951, 1953, 1954, 1955, 1960, 1963], "experiment": [1, 2, 21, 23, 27, 28, 46, 54, 55, 58, 62, 63, 65, 897, 899, 903, 948, 954, 1048, 1131, 1231, 1242, 1244, 1245, 1249, 1262, 1614, 1668, 1692, 1876, 1877, 1879, 1893, 1894, 1904, 1915, 1917, 1918, 1922, 1923, 1924, 1951, 1952, 1963], "kineto": [1, 1924], "_experimentalconfig": [1, 1924], "librari": [1, 2, 3, 4, 8, 9, 11, 13, 14, 20, 23, 30, 38, 42, 47, 50, 51, 52, 54, 676, 964, 978, 1001, 1005, 1017, 1125, 1213, 1244, 1290, 1790, 1890, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1917, 1918, 1922, 1924, 1925, 1930, 1953, 1964], "100": [1, 20, 23, 27, 29, 54, 55, 62, 63, 298, 734, 735, 738, 739, 1161, 1201, 1212, 1218, 1256, 1271, 1278, 1287, 1302, 1323, 1342, 1350, 1351, 1352, 1353, 1354, 1363, 1364, 1366, 1367, 1369, 1370, 1397, 1398, 1399, 1434, 1441, 1443, 1473, 1482, 1515, 1516, 1568, 1681, 1693, 1694, 1699, 1700, 1701, 1702, 1704, 1706, 1707, 1723, 1779, 1878, 1880, 1892, 1902, 1903, 1918, 1921, 1926, 1932, 1934, 1939, 1949, 1950, 1956, 1957], "realli": [1, 7, 54, 950, 1880, 1900, 1922, 1952], "y": [1, 11, 13, 20, 29, 37, 46, 51, 52, 54, 55, 58, 60, 61, 62, 63, 64, 65, 613, 616, 777, 880, 882, 883, 884, 891, 892, 895, 897, 898, 899, 900, 901, 902, 930, 936, 959, 966, 1017, 1018, 1057, 1068, 1074, 1078, 1130, 1132, 1135, 1136, 1137, 1141, 1142, 1176, 1207, 1212, 1216, 1269, 1278, 1279, 1302, 1350, 1351, 1352, 1353, 1354, 1355, 1368, 1370, 1389, 1394, 1395, 1397, 1398, 1399, 1401, 1406, 1421, 1425, 1426, 1437, 1438, 1439, 1441, 1443, 1465, 1466, 1473, 1476, 1482, 1483, 1504, 1533, 1550, 1573, 1605, 1626, 1659, 1668, 1725, 1743, 1745, 1746, 1767, 1799, 1813, 1839, 1843, 1844, 1868, 1871, 1877, 1878, 1879, 1880, 1893, 1894, 1898, 1900, 1901, 1902, 1903, 1906, 1908, 1909, 1912, 1918, 1922, 1925, 1930, 1932, 1935, 1939, 1942, 1943, 1944, 1948, 1949, 1951, 1955, 1956, 1962, 1963], "column": [1, 3, 21, 28, 190, 258, 580, 583, 946, 962, 966, 1057, 1087, 1115, 1116, 1166, 1236, 1237, 1240, 1256, 1259, 1264, 1268, 1273, 1324, 1443, 1485, 1524, 1525, 1621, 1711, 1721, 1802, 1804, 1805, 1806, 1808, 1809, 1822, 1843, 1847, 1849, 1862, 1898, 1908, 1934], "remov": [1, 3, 20, 21, 23, 25, 29, 41, 43, 46, 54, 484, 509, 542, 553, 693, 793, 811, 812, 813, 855, 909, 910, 938, 939, 1020, 1131, 1147, 1198, 1201, 1205, 1290, 1291, 1295, 1434, 1435, 1444, 1535, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1622, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1640, 1641, 1642, 1643, 1645, 1646, 1656, 1658, 1661, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1721, 1737, 1759, 1813, 1822, 1845, 1852, 1875, 1876, 1888, 1900, 1911, 1916, 1918, 1920, 1922, 1932, 1936, 1941, 1953, 1955, 1959, 1962], "breviti": [1, 54, 1918], "print": [1, 3, 17, 20, 23, 31, 32, 37, 38, 41, 46, 51, 53, 716, 724, 725, 730, 741, 742, 752, 760, 907, 909, 910, 1130, 1131, 1140, 1201, 1205, 1207, 1208, 1212, 1290, 1355, 1358, 1396, 1421, 1434, 1446, 1447, 1515, 1571, 1574, 1575, 1626, 1636, 1637, 1638, 1639, 1642, 1652, 1656, 1668, 1673, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1770, 1861, 1875, 1877, 1878, 1900, 1902, 1903, 1905, 1911, 1912, 1918, 1920, 1922, 1924, 1930, 1939, 1940, 1943, 1944, 1949, 1950, 1953, 1955, 1956, 1963], "tabl": [1, 3, 23, 54, 1377, 1524, 1878, 1880, 1905, 1921, 1922, 1924, 1925, 1930, 1934, 1941, 1952, 1954, 1957, 1960, 1963], "sort_bi": [1, 1924], "self_cpu_time_tot": [1, 1924], "avg": [1, 23, 1676], "mul": [1, 17, 54, 55, 58, 61, 62, 417, 743, 744, 753, 1178, 1325, 1877, 1878, 1880, 1893, 1895, 1905, 1918, 1920, 1927, 1931, 1934, 1937, 1943, 1949, 1951, 1958, 1962], "32": [1, 2, 21, 23, 87, 742, 1127, 1198, 1210, 1290, 1348, 1373, 1374, 1375, 1379, 1380, 1382, 1383, 1403, 1422, 1428, 1439, 1477, 1478, 1479, 1480, 1481, 1498, 1528, 1529, 1535, 1583, 1894, 1895, 1911, 1915, 1918, 1928, 1934, 1937, 1939, 1940, 1950, 1956, 1957], "048m": 1, "200": [1, 27, 1201, 1278, 1434, 1723, 1880, 1934, 1963], "27": [1, 613, 1268, 1696, 1718, 1862, 1918], "041m": 1, "powbackward0": 1, "9": [1, 7, 20, 21, 23, 30, 54, 55, 60, 86, 311, 313, 315, 319, 399, 400, 468, 509, 556, 577, 579, 693, 741, 742, 850, 932, 938, 942, 946, 966, 1057, 1072, 1075, 1096, 1097, 1106, 1107, 1117, 1120, 1121, 1124, 1125, 1154, 1164, 1230, 1232, 1253, 1255, 1257, 1268, 1270, 1333, 1334, 1340, 1341, 1344, 1345, 1358, 1377, 1378, 1430, 1431, 1446, 1447, 1456, 1459, 1524, 1525, 1571, 1574, 1575, 1661, 1662, 1676, 1678, 1679, 1680, 1681, 1682, 1688, 1691, 1692, 1693, 1697, 1703, 1705, 1706, 1710, 1714, 1750, 1757, 1766, 1770, 1780, 1785, 1795, 1802, 1810, 1836, 1837, 1841, 1843, 1852, 1862, 1869, 1877, 1881, 1887, 1907, 1911, 1916, 1917, 1918, 1920, 1921, 1922, 1930, 1934, 1935, 1937, 1941, 1950], "727m": 1, "55": [1, 1388, 1918], "483m": 1, "accumulategrad": [1, 1900], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 13, 32, 37, 54, 676, 1216, 1772, 1880, 1886, 1919, 1929, 1934], "nvtx": [1, 4, 1876], "program": [1, 3, 4, 8, 17, 20, 23, 32, 41, 43, 46, 54, 613, 959, 960, 1023, 1025, 1131, 1765, 1877, 1879, 1881, 1891, 1900, 1903, 1907, 1910, 1912, 1913, 1916, 1917, 1939, 1945, 1948, 1950, 1951, 1952, 1953, 1955, 1959, 1961, 1963], "off": [1, 5, 7, 8, 13, 23, 31, 46, 54, 917, 926, 1035, 1131, 1158, 1159, 1198, 1216, 1264, 1347, 1348, 1349, 1351, 1427, 1428, 1429, 1533, 1571, 1767, 1902, 1903, 1904, 1907, 1910, 1914, 1924, 1925, 1926, 1930, 1931, 1952, 1956, 1960], "o": [1, 21, 23, 24, 29, 41, 42, 43, 54, 1201, 1272, 1315, 1316, 1317, 1405, 1434, 1440, 1614, 1753, 1875, 1881, 1892, 1900, 1903, 1904, 1907, 1917, 1922, 1923, 1930], "trace_nam": 1, "regular": [1, 3, 4, 23, 31, 41, 46, 49, 54, 1017, 1018, 1130, 1248, 1249, 1357, 1372, 1373, 1374, 1375, 1379, 1419, 1433, 1434, 1435, 1436, 1444, 1445, 1526, 1563, 1605, 1616, 1617, 1656, 1679, 1880, 1894, 1895, 1905, 1906, 1910, 1911, 1918, 1922, 1925, 1928, 1930, 1934, 1935, 1942, 1944, 1956], "command": [1, 4, 23, 31, 38, 41, 54, 1903, 1909, 1913, 1917, 1923, 1924, 1931, 1957, 1960], "unfortun": [1, 9, 20, 1614, 1900, 1950, 1952], "wai": [1, 3, 5, 7, 8, 9, 13, 20, 21, 23, 25, 27, 29, 33, 37, 46, 48, 49, 53, 54, 149, 576, 676, 792, 815, 818, 821, 857, 858, 886, 889, 898, 900, 901, 902, 903, 904, 1095, 1097, 1131, 1154, 1201, 1230, 1231, 1246, 1261, 1350, 1378, 1397, 1398, 1399, 1404, 1416, 1417, 1418, 1434, 1462, 1479, 1481, 1525, 1577, 1614, 1624, 1654, 1692, 1696, 1703, 1877, 1879, 1880, 1884, 1886, 1887, 1890, 1892, 1893, 1894, 1900, 1902, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1925, 1930, 1931, 1934, 1938, 1940, 1944, 1948, 1949, 1951, 1952, 1953, 1956, 1961, 1962, 1963], "disk": [1, 20, 1272, 1753, 1900, 1911, 1922, 1939], "annot": [1, 33, 38, 54, 911, 1199, 1212, 1877, 1879, 1881, 1918, 1930, 1953, 1954, 1956], "wait": [1, 17, 23, 31, 38, 40, 53, 820, 973, 977, 978, 980, 1050, 1204, 1312, 1315, 1316, 1321, 1705, 1878, 1880, 1892, 1902, 1903, 1904, 1920, 1924, 1930, 1953, 1961], "either": [1, 8, 9, 13, 17, 20, 21, 23, 27, 28, 29, 31, 33, 38, 40, 41, 42, 46, 51, 53, 54, 153, 220, 311, 319, 509, 511, 613, 676, 728, 734, 735, 736, 741, 742, 752, 760, 775, 781, 787, 854, 886, 888, 895, 904, 905, 935, 948, 988, 1074, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1127, 1131, 1154, 1178, 1194, 1201, 1216, 1256, 1271, 1272, 1287, 1302, 1340, 1341, 1344, 1345, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1378, 1388, 1394, 1401, 1403, 1425, 1426, 1428, 1429, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1449, 1451, 1465, 1466, 1481, 1482, 1484, 1486, 1487, 1488, 1505, 1506, 1516, 1544, 1545, 1568, 1576, 1602, 1609, 1614, 1639, 1661, 1668, 1678, 1679, 1681, 1703, 1718, 1720, 1762, 1818, 1822, 1871, 1875, 1877, 1879, 1880, 1882, 1886, 1894, 1898, 1900, 1901, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1915, 1918, 1921, 1922, 1923, 1925, 1931, 1932, 1934, 1935, 1938, 1941, 1951, 1954, 1965], "nvidia": [1, 13, 23, 986, 999, 1027, 1033, 1037, 1051, 1052, 1857, 1876, 1903, 1907, 1909, 1915, 1917, 1925, 1934, 1942, 1945, 1960, 1961, 1963], "visual": [1, 54, 1302, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1911, 1917, 1924, 1939, 1953, 1961, 1963], "nvvp": 1, "timelin": [1, 4, 1315, 1316, 1924], "load_nvprof": 1, "repl": [1, 1955], "append": [1, 23, 53, 54, 55, 60, 228, 252, 603, 757, 759, 761, 1020, 1064, 1066, 1295, 1387, 1405, 1436, 1445, 1451, 1462, 1614, 1878, 1879, 1880, 1900, 1902, 1913, 1917, 1918, 1920, 1934, 1939, 1956, 1962], "size": [1, 2, 3, 7, 17, 20, 21, 23, 25, 29, 31, 40, 46, 49, 54, 55, 56, 61, 62, 63, 137, 207, 220, 240, 252, 253, 311, 313, 319, 337, 442, 443, 444, 446, 484, 489, 494, 495, 496, 509, 511, 513, 516, 519, 540, 541, 542, 562, 577, 579, 580, 581, 583, 584, 602, 603, 613, 614, 676, 686, 687, 689, 691, 692, 693, 695, 716, 724, 725, 731, 737, 738, 739, 741, 742, 752, 760, 762, 763, 764, 765, 775, 781, 782, 783, 792, 854, 861, 873, 874, 876, 888, 897, 898, 899, 900, 901, 902, 913, 916, 917, 919, 926, 928, 929, 930, 931, 932, 939, 940, 941, 942, 948, 966, 974, 976, 982, 988, 989, 991, 1031, 1055, 1056, 1062, 1065, 1072, 1074, 1075, 1076, 1077, 1080, 1091, 1092, 1093, 1095, 1096, 1097, 1099, 1100, 1103, 1104, 1105, 1106, 1107, 1109, 1110, 1111, 1127, 1128, 1129, 1136, 1137, 1142, 1143, 1158, 1159, 1163, 1164, 1175, 1178, 1198, 1201, 1222, 1231, 1240, 1245, 1253, 1257, 1261, 1264, 1266, 1267, 1268, 1270, 1271, 1273, 1281, 1287, 1288, 1290, 1291, 1295, 1298, 1300, 1301, 1302, 1303, 1306, 1307, 1308, 1309, 1310, 1324, 1326, 1329, 1332, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1377, 1378, 1380, 1381, 1382, 1383, 1386, 1388, 1389, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1446, 1447, 1449, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1473, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1506, 1511, 1512, 1513, 1516, 1517, 1524, 1525, 1528, 1529, 1533, 1544, 1551, 1557, 1558, 1559, 1568, 1569, 1571, 1574, 1575, 1577, 1583, 1602, 1603, 1604, 1605, 1614, 1637, 1647, 1648, 1649, 1650, 1651, 1653, 1655, 1658, 1660, 1662, 1665, 1666, 1681, 1690, 1709, 1710, 1711, 1712, 1714, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1743, 1748, 1757, 1760, 1779, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1815, 1816, 1817, 1818, 1821, 1822, 1823, 1836, 1837, 1838, 1843, 1845, 1853, 1854, 1855, 1856, 1863, 1864, 1866, 1867, 1868, 1869, 1873, 1874, 1876, 1877, 1878, 1880, 1888, 1890, 1893, 1894, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1915, 1916, 1918, 1920, 1923, 1924, 1925, 1927, 1930, 1934, 1936, 1937, 1939, 1940, 1948, 1950, 1951, 1952, 1953, 1957, 1958, 1961, 1963], "format": [1, 18, 21, 23, 25, 33, 42, 54, 154, 169, 171, 174, 177, 178, 179, 194, 205, 208, 238, 265, 295, 323, 329, 391, 495, 496, 521, 576, 579, 580, 581, 582, 583, 584, 676, 731, 756, 788, 789, 945, 1020, 1074, 1075, 1076, 1129, 1198, 1201, 1214, 1243, 1357, 1378, 1386, 1404, 1434, 1449, 1481, 1614, 1648, 1650, 1666, 1668, 1669, 1673, 1731, 1733, 1735, 1753, 1796, 1799, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1874, 1875, 1877, 1880, 1881, 1886, 1903, 1905, 1911, 1916, 1918, 1919, 1920, 1924, 1925, 1930, 1931, 1934, 1937, 1939, 1941, 1961, 1963], "arg0": [1, 23], "arg1": [1, 23, 38, 39, 41, 1669, 1918], "repres": [1, 8, 11, 20, 21, 29, 30, 31, 33, 34, 40, 42, 46, 54, 77, 756, 788, 789, 792, 885, 950, 954, 962, 966, 975, 1007, 1010, 1074, 1095, 1097, 1102, 1104, 1105, 1106, 1107, 1131, 1154, 1161, 1190, 1191, 1194, 1197, 1200, 1216, 1217, 1248, 1290, 1342, 1357, 1434, 1440, 1481, 1483, 1485, 1614, 1620, 1623, 1628, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1647, 1657, 1669, 1673, 1697, 1703, 1709, 1711, 1722, 1804, 1805, 1806, 1808, 1809, 1818, 1822, 1854, 1855, 1860, 1866, 1867, 1877, 1879, 1880, 1887, 1890, 1895, 1900, 1905, 1906, 1908, 1910, 1911, 1914, 1918, 1919, 1923, 1925, 1926, 1928, 1930, 1934, 1937, 1951, 1952, 1956, 1965], "order": [1, 3, 5, 23, 24, 25, 27, 29, 41, 46, 47, 52, 53, 54, 149, 190, 207, 311, 313, 315, 319, 329, 400, 484, 676, 788, 789, 798, 850, 872, 889, 890, 903, 909, 910, 927, 938, 978, 1020, 1031, 1062, 1065, 1066, 1074, 1092, 1094, 1095, 1101, 1113, 1114, 1115, 1116, 1132, 1142, 1154, 1201, 1220, 1231, 1237, 1239, 1246, 1253, 1256, 1257, 1264, 1265, 1268, 1270, 1273, 1302, 1308, 1322, 1324, 1342, 1351, 1357, 1371, 1434, 1435, 1444, 1461, 1462, 1498, 1506, 1533, 1557, 1558, 1559, 1583, 1605, 1614, 1623, 1633, 1647, 1648, 1649, 1650, 1661, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1703, 1709, 1712, 1722, 1757, 1760, 1785, 1795, 1822, 1840, 1847, 1849, 1854, 1857, 1862, 1868, 1875, 1876, 1877, 1878, 1880, 1881, 1884, 1892, 1893, 1894, 1895, 1898, 1901, 1903, 1904, 1905, 1906, 1908, 1911, 1914, 1916, 1918, 1921, 1922, 1923, 1925, 1927, 1930, 1931, 1932, 1934, 1935, 1937, 1941, 1944, 1948, 1949, 1951, 1953, 1957, 1961, 1963], "backend": [1, 13, 39, 43, 46, 737, 738, 739, 788, 789, 829, 851, 852, 855, 857, 858, 897, 903, 948, 954, 1000, 1031, 1074, 1131, 1214, 1244, 1246, 1264, 1315, 1316, 1317, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1533, 1571, 1583, 1614, 1673, 1674, 1765, 1858, 1860, 1876, 1878, 1879, 1884, 1888, 1891, 1902, 1903, 1905, 1914, 1915, 1918, 1926, 1928, 1934, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1960], "side": [1, 13, 23, 40, 42, 51, 54, 55, 58, 764, 765, 768, 769, 770, 1009, 1068, 1090, 1091, 1093, 1096, 1097, 1102, 1104, 1105, 1106, 1107, 1110, 1198, 1199, 1245, 1250, 1261, 1263, 1347, 1348, 1349, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1455, 1456, 1458, 1459, 1460, 1485, 1489, 1490, 1491, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559, 1571, 1697, 1726, 1727, 1757, 1818, 1845, 1875, 1877, 1878, 1880, 1899, 1900, 1903, 1905, 1908, 1930, 1948, 1956], "creation": [1, 2, 20, 23, 25, 54, 741, 742, 752, 760, 820, 977, 1131, 1614, 1615, 1628, 1877, 1881, 1890, 1892, 1900, 1903, 1930, 1932, 1934, 1940, 1951, 1956], "warmup": [1, 3, 1020, 1903, 1924, 1948, 1953, 1961], "correl": [1, 29, 41, 962, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1375, 1379], "view": [1, 7, 8, 11, 17, 20, 21, 25, 27, 31, 46, 54, 55, 63, 221, 252, 432, 493, 494, 495, 603, 614, 688, 693, 756, 874, 882, 883, 884, 892, 930, 942, 959, 960, 1064, 1065, 1072, 1113, 1114, 1115, 1116, 1131, 1164, 1176, 1201, 1256, 1267, 1316, 1378, 1386, 1404, 1434, 1449, 1485, 1486, 1487, 1488, 1525, 1570, 1610, 1611, 1614, 1618, 1712, 1744, 1748, 1749, 1753, 1759, 1760, 1791, 1810, 1821, 1832, 1837, 1841, 1853, 1866, 1867, 1869, 1876, 1877, 1878, 1892, 1894, 1895, 1901, 1905, 1920, 1927, 1930, 1932, 1934, 1936, 1937, 1940, 1951, 1952, 1958, 1960, 1962, 1963], "difficult": [1, 7, 9, 51, 1142, 1868, 1952, 1959, 1961, 1963], "eas": [1, 54, 1902, 1905, 1909, 1951, 1962], "sequenc": [1, 20, 25, 27, 28, 29, 46, 149, 562, 731, 756, 810, 876, 889, 903, 932, 934, 935, 938, 946, 980, 987, 988, 991, 1059, 1073, 1075, 1142, 1162, 1163, 1166, 1216, 1256, 1302, 1342, 1352, 1357, 1362, 1371, 1378, 1386, 1404, 1440, 1449, 1462, 1477, 1478, 1479, 1480, 1481, 1525, 1583, 1623, 1626, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1662, 1665, 1668, 1674, 1689, 1728, 1730, 1734, 1757, 1815, 1818, 1868, 1870, 1873, 1877, 1878, 1879, 1895, 1903, 1907, 1918, 1922, 1923, 1930, 1940, 1941, 1948, 1950, 1951, 1953, 1962, 1963], "gener": [1, 2, 3, 7, 8, 13, 20, 21, 23, 29, 33, 34, 41, 46, 47, 48, 55, 57, 60, 63, 79, 152, 153, 172, 256, 284, 375, 418, 451, 478, 604, 676, 905, 918, 948, 950, 1006, 1009, 1017, 1018, 1021, 1022, 1041, 1042, 1044, 1045, 1046, 1074, 1096, 1097, 1131, 1142, 1153, 1158, 1177, 1205, 1210, 1221, 1232, 1237, 1246, 1263, 1264, 1268, 1273, 1293, 1301, 1313, 1314, 1315, 1316, 1317, 1318, 1320, 1324, 1370, 1381, 1395, 1477, 1485, 1486, 1498, 1605, 1622, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1655, 1658, 1662, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1709, 1711, 1714, 1728, 1730, 1732, 1733, 1734, 1736, 1758, 1771, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1823, 1838, 1842, 1858, 1860, 1862, 1868, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1886, 1888, 1893, 1898, 1900, 1903, 1905, 1907, 1908, 1910, 1911, 1913, 1917, 1918, 1921, 1922, 1924, 1929, 1930, 1931, 1934, 1937, 1939, 1941, 1943, 1945, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1961, 1962, 1963, 1964], "seq": [1, 601, 756, 935, 947, 1302, 1386, 1404, 1440, 1449, 1477, 1479, 1481, 1650, 1852], "n": [1, 3, 23, 25, 28, 29, 31, 33, 38, 41, 54, 228, 258, 404, 462, 463, 682, 685, 686, 687, 731, 754, 756, 777, 873, 913, 916, 917, 919, 926, 928, 932, 938, 939, 940, 966, 967, 968, 969, 970, 971, 972, 973, 1055, 1056, 1066, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1134, 1137, 1142, 1154, 1158, 1159, 1163, 1198, 1201, 1212, 1216, 1217, 1220, 1221, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1273, 1281, 1290, 1295, 1297, 1302, 1305, 1326, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1416, 1417, 1418, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1443, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1465, 1467, 1468, 1469, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1498, 1504, 1516, 1517, 1525, 1529, 1533, 1568, 1571, 1573, 1583, 1614, 1621, 1632, 1641, 1660, 1709, 1710, 1711, 1716, 1721, 1722, 1728, 1734, 1736, 1749, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1800, 1816, 1817, 1818, 1822, 1823, 1837, 1838, 1843, 1847, 1849, 1862, 1863, 1864, 1865, 1868, 1878, 1880, 1884, 1893, 1894, 1898, 1900, 1903, 1905, 1907, 1908, 1913, 1922, 1924, 1925, 1926, 1934, 1935, 1939, 1940, 1941, 1956, 1958], "counter": [1, 23, 1013, 1031, 1176, 1371, 1890, 1892, 1900], "increment": [1, 23, 40, 1127, 1163, 1205, 1371, 1672, 1877, 1879, 1900, 1930, 1948], "stash": [1, 5, 1903, 1905, 1923], "associ": [1, 8, 9, 23, 25, 34, 891, 948, 983, 1034, 1036, 1162, 1163, 1201, 1250, 1261, 1263, 1272, 1357, 1434, 1444, 1517, 1614, 1622, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1779, 1781, 1877, 1880, 1886, 1893, 1894, 1900, 1908, 1911, 1914, 1916, 1922, 1923, 1924, 1930, 1931, 1937, 1940, 1952, 1953, 1956, 1963], "tell": [1, 7, 54, 492, 1202, 1208, 1272, 1674, 1877, 1887, 1900, 1905, 1906, 1922], "top": [1, 3, 7, 8, 20, 25, 28, 29, 33, 46, 50, 54, 743, 913, 1350, 1351, 1370, 1394, 1401, 1425, 1441, 1483, 1486, 1533, 1628, 1632, 1634, 1786, 1840, 1859, 1881, 1887, 1892, 1905, 1921, 1950, 1960, 1961], "m": [1, 4, 8, 21, 23, 28, 29, 37, 41, 54, 682, 685, 686, 687, 716, 724, 725, 734, 735, 736, 737, 738, 739, 741, 742, 752, 754, 760, 810, 856, 857, 858, 916, 928, 932, 936, 941, 1087, 1140, 1163, 1199, 1201, 1206, 1207, 1211, 1212, 1218, 1221, 1232, 1240, 1246, 1247, 1248, 1249, 1253, 1254, 1255, 1257, 1258, 1259, 1264, 1265, 1266, 1267, 1273, 1290, 1291, 1295, 1305, 1324, 1326, 1339, 1340, 1341, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1356, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1382, 1383, 1384, 1385, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1402, 1403, 1420, 1421, 1423, 1424, 1427, 1428, 1429, 1433, 1434, 1441, 1442, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1571, 1573, 1614, 1621, 1626, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1654, 1655, 1658, 1709, 1710, 1711, 1721, 1728, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1800, 1818, 1822, 1823, 1838, 1845, 1877, 1878, 1879, 1880, 1903, 1905, 1907, 1908, 1911, 1913, 1916, 1925, 1934, 1944, 1945, 1947], "By": [1, 2, 3, 5, 13, 20, 23, 32, 37, 46, 54, 442, 443, 444, 445, 446, 876, 948, 966, 980, 1023, 1025, 1057, 1069, 1092, 1094, 1095, 1096, 1097, 1105, 1106, 1107, 1132, 1133, 1135, 1136, 1142, 1154, 1162, 1163, 1205, 1253, 1264, 1272, 1301, 1306, 1328, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1388, 1394, 1397, 1398, 1399, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1473, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1658, 1711, 1722, 1743, 1797, 1843, 1868, 1875, 1879, 1884, 1887, 1900, 1903, 1905, 1907, 1911, 1913, 1914, 1916, 1918, 1921, 1929, 1930, 1934, 1941, 1950, 1953, 1957, 1959, 1963], "compar": [1, 3, 5, 13, 20, 46, 54, 80, 690, 861, 872, 903, 1031, 1078, 1079, 1102, 1103, 1104, 1108, 1109, 1110, 1111, 1120, 1121, 1145, 1157, 1176, 1190, 1225, 1289, 1299, 1304, 1335, 1440, 1614, 1659, 1767, 1880, 1890, 1903, 1905, 1908, 1914, 1917, 1925, 1926, 1930, 1934, 1939, 1941, 1943, 1944, 1948, 1954, 1960], "down": [1, 7, 13, 20, 29, 31, 38, 39, 41, 54, 775, 1031, 1069, 1116, 1122, 1210, 1246, 1544, 1722, 1750, 1905, 1910, 1913, 1918, 1930, 1932, 1934, 1939, 1957, 1963], "irrelev": [1, 3, 1881], "simpli": [1, 3, 13, 20, 29, 33, 41, 53, 54, 859, 1131, 1188, 1199, 1346, 1372, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1877, 1879, 1900, 1906, 1908, 1911, 1912, 1924, 1934, 1951, 1953, 1959], "hand": [1, 4, 23, 46, 51, 54, 1068, 1074, 1199, 1245, 1250, 1261, 1263, 1346, 1444, 1462, 1845, 1857, 1877, 1879, 1880, 1900, 1908, 1911, 1913, 1916, 1922, 1934, 1952, 1956], "underwai": [1, 1015, 1903], "up": [1, 6, 7, 8, 9, 13, 20, 21, 23, 27, 29, 31, 33, 37, 39, 40, 42, 43, 46, 49, 54, 775, 781, 886, 948, 1017, 1018, 1020, 1057, 1074, 1103, 1104, 1109, 1111, 1116, 1131, 1192, 1205, 1210, 1213, 1214, 1259, 1342, 1357, 1381, 1440, 1479, 1481, 1485, 1486, 1498, 1524, 1533, 1544, 1602, 1614, 1692, 1728, 1750, 1854, 1855, 1875, 1877, 1879, 1884, 1887, 1890, 1892, 1893, 1894, 1900, 1901, 1902, 1903, 1907, 1908, 1909, 1911, 1914, 1918, 1922, 1924, 1925, 1930, 1931, 1941, 1948, 1950, 1952, 1956, 1959, 1961, 1963], "nonzero": [1, 46, 1198, 1282, 1284, 1285, 1290, 1871, 1878, 1920, 1951, 1952, 1958], "themselv": [1, 9, 29, 40, 46, 789, 837, 1840, 1903, 1922, 1964], "origin": [1, 5, 11, 17, 20, 21, 23, 25, 33, 46, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 205, 208, 220, 483, 541, 599, 603, 613, 676, 756, 793, 834, 835, 850, 853, 854, 933, 938, 978, 1094, 1095, 1097, 1101, 1105, 1106, 1107, 1113, 1130, 1140, 1175, 1198, 1208, 1212, 1213, 1216, 1217, 1294, 1308, 1342, 1346, 1358, 1370, 1371, 1386, 1463, 1473, 1516, 1586, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1647, 1650, 1653, 1655, 1656, 1658, 1673, 1703, 1712, 1748, 1759, 1795, 1810, 1843, 1854, 1855, 1877, 1880, 1886, 1892, 1894, 1900, 1903, 1905, 1907, 1910, 1913, 1914, 1916, 1918, 1922, 1923, 1925, 1926, 1934, 1936, 1943, 1944, 1949, 1950, 1952, 1954, 1956, 1957, 1962, 1963, 1964], "did": [1, 7, 8, 23, 40, 1331, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1879, 1880, 1908, 1916, 1922, 1955, 1956], "relationship": [1, 9, 37, 54, 945, 1154, 1483, 1900, 1903, 1916, 1922, 1952, 1956], "conceptu": [1, 3, 1900, 1906, 1932], "tag": [1, 3, 7, 23, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 954, 1272, 1875, 1876, 1910, 1916, 1922, 1939], "eventu": [1, 7, 40, 46, 1875, 1923, 1951, 1952], "itt": [1, 1924], "intel": [1, 4, 1876, 1917, 1960], "r": [1, 29, 52, 149, 885, 887, 889, 903, 904, 936, 947, 962, 1074, 1132, 1134, 1137, 1142, 1143, 1146, 1154, 1212, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1273, 1377, 1378, 1387, 1446, 1447, 1465, 1524, 1525, 1574, 1575, 1621, 1690, 1721, 1868, 1877, 1878, 1879, 1900, 1902, 1905, 1908, 1917, 1934, 1937, 1939, 1956, 1963], "instrument": [1, 3, 21, 1316, 1876, 1910, 1944], "technologi": [1, 1876, 1945], "applic": [1, 2, 9, 29, 40, 795, 806, 807, 808, 809, 895, 948, 999, 1136, 1311, 1370, 1371, 1479, 1481, 1516, 1614, 1857, 1876, 1887, 1895, 1900, 1902, 1903, 1904, 1905, 1909, 1910, 1911, 1915, 1918, 1921, 1925, 1930, 1931, 1932, 1934, 1940, 1953], "across": [1, 8, 13, 20, 21, 23, 25, 27, 31, 41, 46, 51, 54, 613, 731, 815, 870, 914, 991, 1030, 1031, 1074, 1088, 1142, 1211, 1216, 1302, 1351, 1371, 1381, 1422, 1440, 1442, 1473, 1485, 1503, 1506, 1535, 1551, 1598, 1614, 1633, 1637, 1661, 1753, 1868, 1876, 1877, 1890, 1893, 1895, 1900, 1904, 1907, 1910, 1911, 1913, 1914, 1915, 1921, 1923, 1926, 1930, 1931, 1936, 1939, 1944, 1948, 1951, 1953, 1956, 1963], "tool": [1, 4, 8, 9, 17, 23, 41, 54, 857, 912, 1316, 1797, 1875, 1876, 1877, 1879, 1902, 1903, 1917, 1918, 1922, 1924, 1944, 1953, 1957, 1961, 1963], "With": [1, 17, 20, 23, 29, 46, 53, 735, 736, 737, 738, 739, 781, 1031, 1095, 1096, 1097, 1105, 1106, 1107, 1217, 1352, 1353, 1354, 1363, 1364, 1366, 1367, 1380, 1397, 1398, 1399, 1473, 1484, 1486, 1509, 1512, 1544, 1569, 1602, 1689, 1732, 1881, 1900, 1903, 1905, 1930, 1934, 1939, 1947, 1954, 1956, 1960, 1963], "abl": [1, 2, 7, 8, 17, 23, 25, 40, 51, 1131, 1199, 1211, 1477, 1614, 1877, 1884, 1893, 1900, 1905, 1906, 1916, 1918, 1922, 1925, 1930, 1934, 1941, 1949, 1951, 1952, 1953, 1954, 1959, 1963], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 11, 14, 333, 737, 738, 739, 893, 903, 1142, 1728, 1868, 1900, 1903, 1904, 1905, 1930, 1931, 1945, 1953], "traceback": [1, 17, 33, 41, 53, 54, 1176, 1186, 1797, 1879, 1880, 1881, 1892, 1895, 1905, 1915, 1934, 1941, 1963], "fail": [1, 7, 23, 29, 31, 32, 33, 38, 39, 40, 41, 43, 53, 54, 55, 60, 63, 68, 79, 904, 905, 978, 1031, 1202, 1208, 1211, 1230, 1259, 1264, 1272, 1273, 1290, 1670, 1880, 1882, 1892, 1900, 1903, 1905, 1913, 1914, 1917, 1918, 1922, 1930, 1949, 1950, 1951, 1953, 1954, 1956, 1963], "debug": [1, 2, 4, 5, 8, 20, 37, 676, 823, 824, 828, 839, 904, 905, 948, 950, 954, 975, 1008, 1048, 1149, 1230, 1608, 1609, 1610, 1611, 1764, 1772, 1876, 1879, 1886, 1900, 1902, 1903, 1904, 1909, 1910, 1911, 1915, 1917, 1918, 1919, 1922, 1943, 1951, 1953, 1954, 1955, 1959], "test": [1, 3, 13, 17, 23, 38, 40, 41, 54, 55, 62, 63, 689, 695, 948, 1091, 1093, 1094, 1099, 1100, 1105, 1106, 1107, 1109, 1111, 1187, 1188, 1192, 1193, 1195, 1196, 1673, 1787, 1876, 1877, 1881, 1890, 1892, 1900, 1908, 1915, 1918, 1921, 1939, 1944, 1952, 1963, 1964], "slow": [1, 904, 1210, 1214, 1230, 1231, 1618, 1619, 1654, 1854, 1908, 1913, 1939, 1952], "import": [1, 2, 3, 5, 7, 9, 13, 16, 17, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 34, 37, 38, 42, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 79, 220, 676, 730, 737, 738, 739, 768, 769, 770, 788, 856, 857, 858, 907, 909, 927, 934, 966, 1125, 1127, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1140, 1176, 1198, 1199, 1202, 1204, 1206, 1207, 1208, 1210, 1211, 1212, 1216, 1217, 1218, 1252, 1253, 1256, 1257, 1270, 1302, 1400, 1434, 1614, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1649, 1650, 1651, 1652, 1653, 1654, 1661, 1668, 1669, 1691, 1692, 1715, 1877, 1879, 1880, 1881, 1890, 1892, 1895, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1925, 1928, 1930, 1931, 1932, 1934, 1937, 1939, 1940, 1941, 1944, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1961, 1962, 1963, 1964], "myfunc": [1, 1906], "inp": [1, 20, 23, 54, 890, 891, 892, 1485, 1614, 1958, 1961, 1964], "clone": [1, 14, 20, 46, 55, 252, 445, 893, 896, 907, 909, 910, 930, 1205, 1377, 1601, 1836, 1845, 1878, 1892, 1895, 1916, 1920, 1924, 1934, 1936, 1937, 1941, 1958], "run_fn": [1, 5, 853, 859], "last": [1, 5, 6, 11, 20, 21, 24, 27, 28, 29, 40, 53, 54, 313, 613, 688, 756, 873, 917, 926, 932, 942, 1017, 1057, 1062, 1066, 1091, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1109, 1111, 1113, 1158, 1159, 1163, 1176, 1178, 1186, 1198, 1222, 1256, 1259, 1264, 1301, 1306, 1342, 1355, 1370, 1378, 1380, 1386, 1404, 1406, 1421, 1441, 1444, 1448, 1449, 1462, 1478, 1479, 1485, 1504, 1525, 1534, 1547, 1570, 1571, 1614, 1615, 1660, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1748, 1757, 1795, 1797, 1804, 1805, 1806, 1808, 1809, 1810, 1818, 1822, 1838, 1840, 1843, 1866, 1867, 1879, 1880, 1890, 1893, 1895, 1900, 1903, 1905, 1908, 1915, 1918, 1922, 1923, 1934, 1940, 1941, 1949, 1957, 1963], "stdin": [1, 1176, 1797, 1895, 1905, 1915, 1934], "instal": [1, 3, 13, 14, 23, 54, 1875, 1911, 1912, 1918, 1922, 1930, 1939, 1949, 1951, 1956, 1959], "_tensor": [1, 153], "py": [1, 4, 13, 17, 23, 27, 29, 32, 39, 41, 46, 54, 81, 856, 1614, 1875, 1877, 1880, 1886, 1904, 1908, 1910, 1913, 1918, 1922, 1925, 1931, 1947, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1957, 1960, 1962, 1963], "93": [1, 613], "retain_graph": [1, 149, 889, 903, 909, 910, 1142, 1868, 1878, 1899, 1900, 1930], "90": [1, 1058, 1707, 1749], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 13, 23, 38, 40, 1875, 1903, 1924, 1957], "53": [1, 478], "44": [1, 319, 442, 1077, 1349, 1429, 1654, 1950], "set_detect_anomali": 1, "behaviour": [1, 689, 690, 695, 974, 1533, 1571, 1703, 1772, 1875, 1914], "interpos": [1, 1905], "grad_fn": [1, 149, 333, 876, 889, 897, 898, 899, 900, 901, 902, 907, 909, 910, 1130, 1622, 1799, 1900, 1911, 1916], "node": [1, 23, 27, 31, 33, 39, 40, 46, 54, 77, 84, 85, 676, 815, 816, 817, 820, 821, 822, 1020, 1140, 1215, 1357, 1371, 1614, 1673, 1888, 1903, 1918, 1919, 1922, 1923, 1930, 1931, 1932, 1942, 1944, 1951, 1952, 1953, 1960, 1962, 1963], "grad_mod": [1, 1878], "least": [1, 5, 6, 8, 21, 25, 29, 39, 40, 46, 258, 400, 693, 919, 1062, 1064, 1065, 1074, 1115, 1116, 1154, 1162, 1163, 1198, 1223, 1246, 1273, 1295, 1328, 1342, 1614, 1648, 1875, 1880, 1894, 1898, 1900, 1901, 1903, 1907, 1923, 1926, 1932, 1934, 1935, 1936, 1941, 1953, 1955, 1963], "intermediari": [1, 13, 29, 895, 1900, 1908], "access": [1, 9, 17, 20, 23, 25, 46, 53, 553, 730, 895, 984, 1201, 1204, 1216, 1263, 1342, 1434, 1605, 1616, 1617, 1622, 1626, 1648, 1658, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1876, 1877, 1878, 1880, 1881, 1884, 1888, 1891, 1892, 1894, 1895, 1900, 1903, 1907, 1908, 1910, 1911, 1930, 1934, 1937, 1938, 1940, 1948, 1951, 1952, 1953, 1955, 1959, 1965], "isinst": [1, 20, 29, 54, 907, 909, 910, 1188, 1199, 1878, 1880, 1900, 1905, 1911, 1922, 1934, 1962, 1963], "dir": [1, 1017, 1673, 1875, 1880, 1922], "__call__": [1, 1201, 1434], "__class__": [1, 55, 57], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1881], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1881], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1880], "__ne__": 1, "__new__": [1, 1879, 1881], "__reduce__": [1, 1922], "__reduce_ex__": 1, "__repr__": [1, 3, 1905], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 54, 1878, 1880], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1900], "metadata": [1, 3, 25, 33, 34, 55, 62, 63, 1272, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1753, 1895, 1900, 1905, 1906, 1916, 1922, 1924, 1930, 1931, 1934, 1939, 1952, 1962], "next_funct": 1, "register_prehook": [1, 1900], "allclos": [1, 51, 52, 54, 904, 905, 1017, 1096, 1097, 1103, 1104, 1131, 1132, 1134, 1135, 1136, 1137, 1141, 1142, 1248, 1250, 1261, 1263, 1266, 1267, 1292, 1626, 1653, 1721, 1868, 1878, 1906, 1920, 1934], "pack": [1, 27, 734, 735, 736, 737, 738, 739, 741, 742, 756, 777, 1216, 1217, 1292, 1371, 1386, 1404, 1449, 1647, 1648, 1649, 1650, 1878, 1888, 1895, 1900, 1907, 1917, 1925], "unpack": [1, 55, 60, 61, 756, 892, 1216, 1248, 1292, 1371, 1650, 1652, 1659, 1674, 1880, 1881, 1900, 1905, 1907], "hook": [1, 24, 27, 46, 484, 744, 753, 895, 909, 910, 1020, 1201, 1371, 1434, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1655, 1658, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1876, 1896, 1904, 1905, 1910, 1922, 1925, 1950, 1952, 1953, 1954, 1956], "common": [1, 3, 8, 20, 31, 40, 51, 55, 81, 681, 789, 861, 921, 924, 929, 961, 1069, 1074, 1119, 1120, 1121, 1122, 1144, 1223, 1272, 1323, 1352, 1353, 1354, 1357, 1473, 1515, 1606, 1607, 1609, 1610, 1611, 1612, 1613, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1741, 1753, 1819, 1860, 1876, 1880, 1885, 1894, 1900, 1903, 1905, 1906, 1907, 1911, 1913, 1916, 1918, 1922, 1934, 1935, 1938, 1941, 1951, 1953, 1956, 1959, 1961, 1962, 1963], "trade": [1, 5, 8, 46, 1264, 1351, 1902, 1907, 1926], "leav": [1, 8, 31, 41, 149, 889, 1206, 1218, 1624, 1627, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1813, 1877, 1879, 1880, 1900, 1922, 1926, 1956], "especi": [1, 9, 11, 20, 23, 54, 252, 930, 948, 955, 1601, 1879, 1900, 1905, 1906, 1914, 1916, 1925, 1930, 1934, 1948, 1952, 1953, 1955, 1956], "notic": [1, 23, 685, 1094, 1108, 1295, 1305, 1350, 1486, 1550, 1694, 1695, 1700, 1701, 1707, 1876, 1877, 1900, 1934, 1957, 1959, 1961], "fit": [1, 9, 32, 50, 51, 495, 913, 1198, 1681, 1743, 1918, 1923, 1941, 1963], "evalu": [1, 4, 8, 9, 27, 28, 29, 49, 54, 689, 695, 794, 859, 904, 1031, 1137, 1138, 1201, 1342, 1346, 1352, 1353, 1354, 1372, 1389, 1397, 1398, 1399, 1406, 1434, 1448, 1452, 1473, 1576, 1598, 1624, 1681, 1697, 1728, 1880, 1881, 1905, 1911, 1934, 1942, 1945, 1950, 1951, 1952], "saved_tensors_hook": [1, 895, 1900], "pack_hook": [1, 1900], "unpack_hook": [1, 1900], "pair": [1, 23, 25, 28, 29, 40, 42, 613, 731, 861, 936, 966, 1108, 1214, 1264, 1302, 1426, 1435, 1440, 1444, 1573, 1690, 1737, 1879, 1880, 1886, 1893, 1900, 1903, 1923, 1930, 1931, 1932, 1939, 1941, 1944, 1953], "retriev": [1, 20, 21, 23, 27, 31, 40, 54, 533, 885, 886, 1377, 1381, 1485, 1524, 1614, 1648, 1673, 1797, 1895, 1900, 1910, 1918, 1922, 1923, 1930, 1931, 1932, 1956], "everytim": 1, "store": [1, 3, 5, 13, 17, 21, 25, 31, 41, 46, 54, 324, 330, 396, 682, 818, 821, 886, 928, 987, 989, 991, 1146, 1201, 1208, 1211, 1231, 1242, 1243, 1244, 1273, 1278, 1290, 1353, 1377, 1434, 1462, 1614, 1621, 1623, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1647, 1668, 1802, 1875, 1876, 1877, 1894, 1895, 1896, 1904, 1905, 1906, 1907, 1910, 1922, 1925, 1930, 1931, 1932, 1934, 1936, 1939, 1940, 1944, 1952, 1955, 1956], "content": [1, 3, 7, 25, 33, 54, 895, 1208, 1211, 1231, 1242, 1244, 1249, 1262, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1813, 1842, 1875, 1880, 1889, 1892, 1900, 1913, 1930, 1938, 1939, 1940, 1959, 1963], "equal": [1, 21, 23, 29, 40, 41, 42, 54, 258, 495, 541, 613, 676, 690, 691, 692, 735, 736, 737, 738, 739, 756, 764, 765, 816, 817, 818, 821, 857, 872, 917, 924, 926, 937, 938, 956, 966, 989, 991, 1044, 1063, 1079, 1118, 1132, 1133, 1145, 1158, 1159, 1161, 1162, 1163, 1186, 1190, 1225, 1246, 1259, 1263, 1266, 1267, 1290, 1291, 1302, 1319, 1335, 1339, 1340, 1341, 1343, 1344, 1345, 1350, 1351, 1357, 1363, 1364, 1366, 1367, 1371, 1378, 1381, 1382, 1383, 1386, 1388, 1404, 1439, 1440, 1448, 1449, 1485, 1501, 1502, 1506, 1509, 1512, 1524, 1525, 1528, 1529, 1535, 1614, 1648, 1651, 1709, 1722, 1779, 1780, 1785, 1810, 1818, 1837, 1853, 1858, 1871, 1878, 1881, 1887, 1893, 1894, 1895, 1900, 1901, 1908, 1914, 1920, 1921, 1923, 1935, 1939, 1941, 1962], "term": [1, 8, 9, 29, 40, 54, 554, 730, 759, 788, 938, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1105, 1106, 1107, 1110, 1122, 1232, 1342, 1350, 1388, 1395, 1404, 1405, 1439, 1448, 1465, 1530, 1542, 1576, 1587, 1614, 1621, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1741, 1786, 1876, 1880, 1899, 1900, 1905, 1906, 1907, 1908, 1913, 1918, 1922, 1925, 1931, 1934, 1945, 1951], "mulbackward0": [1, 898, 901, 902], "inplac": [1, 49, 51, 54, 55, 62, 63, 751, 754, 772, 774, 776, 787, 793, 810, 834, 835, 836, 853, 854, 859, 893, 1131, 1201, 1346, 1356, 1372, 1373, 1374, 1375, 1376, 1379, 1391, 1392, 1393, 1420, 1433, 1434, 1452, 1453, 1454, 1461, 1463, 1476, 1499, 1507, 1518, 1519, 1520, 1521, 1522, 1526, 1537, 1538, 1539, 1548, 1563, 1578, 1579, 1581, 1584, 1586, 1596, 1608, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1857, 1878, 1887, 1900, 1905, 1918, 1944, 1958, 1962], "lead": [1, 5, 7, 19, 23, 30, 46, 52, 54, 893, 897, 899, 903, 905, 950, 1125, 1142, 1231, 1404, 1449, 1465, 1813, 1868, 1880, 1894, 1895, 1900, 1902, 1904, 1905, 1906, 1913, 1914, 1917, 1921, 1922, 1925, 1930, 1934, 1939, 1940, 1948, 1954], "undefin": [1, 23, 30, 33, 46, 317, 468, 613, 874, 896, 904, 905, 924, 932, 1077, 1126, 1127, 1350, 1670, 1715, 1900, 1903, 1905, 1906, 1930], "recurs": [1, 29, 46, 54, 950, 953, 1066, 1201, 1212, 1214, 1434, 1695, 1879, 1905, 1911, 1922, 1930, 1950, 1953, 1954, 1956], "inner": [1, 3, 46, 47, 52, 811, 813, 897, 1057, 1132, 1136, 1141, 1843, 1878, 1920, 1930, 1944], "save_on_cpu": 1, "pin_memori": [1, 20, 55, 60, 63, 442, 443, 444, 445, 446, 1075, 1077, 1730, 1734, 1736, 1836, 1877, 1878, 1895, 1903, 1920, 1936, 1958], "within": [1, 5, 9, 20, 21, 23, 27, 28, 29, 40, 41, 42, 46, 53, 54, 87, 874, 904, 905, 948, 981, 1057, 1201, 1205, 1293, 1347, 1348, 1349, 1357, 1373, 1374, 1375, 1379, 1381, 1427, 1428, 1429, 1434, 1440, 1473, 1485, 1533, 1557, 1558, 1559, 1614, 1624, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1726, 1727, 1757, 1779, 1856, 1860, 1877, 1879, 1880, 1890, 1895, 1898, 1902, 1903, 1905, 1909, 1910, 1911, 1914, 1918, 1921, 1922, 1925, 1928, 1929, 1930, 1931, 1939, 1951, 1953, 1955, 1962, 1963], "move": [1, 5, 7, 8, 9, 13, 23, 25, 46, 54, 520, 585, 817, 1094, 1201, 1208, 1267, 1272, 1308, 1352, 1353, 1354, 1407, 1408, 1409, 1434, 1473, 1571, 1616, 1617, 1689, 1879, 1888, 1889, 1892, 1894, 1903, 1906, 1907, 1911, 1912, 1913, 1916, 1921, 1922, 1923, 1930, 1936, 1941, 1956, 1963], "copi": [1, 7, 11, 20, 21, 23, 25, 31, 38, 46, 50, 51, 54, 189, 195, 205, 208, 313, 400, 445, 455, 460, 468, 489, 495, 576, 577, 578, 579, 599, 613, 788, 810, 834, 835, 875, 876, 891, 937, 945, 948, 987, 988, 1113, 1114, 1115, 1116, 1118, 1131, 1201, 1212, 1272, 1273, 1334, 1371, 1381, 1434, 1444, 1485, 1614, 1647, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1738, 1744, 1750, 1836, 1845, 1851, 1877, 1878, 1892, 1895, 1900, 1901, 1903, 1905, 1913, 1920, 1922, 1923, 1924, 1925, 1930, 1934, 1936, 1937, 1938, 1940, 1944, 1952, 1955, 1962], "pin": [1, 208, 335, 442, 443, 444, 445, 446, 460, 576, 599, 1075, 1077, 1201, 1434, 1647, 1730, 1734, 1736, 1836, 1876, 1895, 1936], "asynchron": [1, 3, 4, 53, 195, 208, 576, 599, 1000, 1201, 1204, 1219, 1434, 1876, 1881, 1902, 1904, 1930, 1936, 1939, 1961], "prod_1": 1, "prod_2": 1, "del": [1, 1881, 1892, 1905, 1907], "illustr": [1, 1880, 1899, 1905, 1934, 1948, 1956, 1957], "aliv": [1, 20, 31, 40, 978, 1900, 1903, 1907, 1913, 1930, 1931, 1932], "live": [1, 27, 1017, 1020, 1201, 1434, 1877, 1903, 1907, 1930, 1932, 1948, 1952], "releas": [1, 7, 19, 23, 40, 42, 50, 54, 509, 683, 938, 939, 974, 975, 976, 982, 999, 1009, 1010, 1013, 1017, 1018, 1020, 1031, 1147, 1201, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1290, 1291, 1311, 1374, 1404, 1434, 1449, 1557, 1558, 1559, 1661, 1721, 1737, 1753, 1818, 1822, 1845, 1875, 1876, 1879, 1890, 1892, 1900, 1902, 1903, 1909, 1914, 1915, 1916, 1917, 1918, 1925, 1930, 1940, 1941, 1963], "delet": [1, 23, 54, 890, 975, 983, 1875, 1888, 1892, 1900, 1920, 1929, 1930, 1932, 1962], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 11, 14, 17, 23, 25, 27, 41, 44, 46, 47, 53, 55, 676, 685, 756, 764, 765, 897, 899, 903, 1048, 1212, 1295, 1305, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1352, 1367, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1386, 1387, 1397, 1404, 1405, 1440, 1449, 1451, 1468, 1477, 1479, 1481, 1482, 1483, 1484, 1501, 1502, 1519, 1520, 1521, 1526, 1528, 1529, 1550, 1614, 1711, 1857, 1876, 1877, 1879, 1880, 1881, 1884, 1886, 1894, 1895, 1900, 1905, 1907, 1908, 1915, 1918, 1919, 1924, 1925, 1930, 1934, 1939, 1945, 1954, 1955], "messag": [1, 2, 5, 17, 23, 33, 42, 51, 54, 55, 56, 78, 79, 620, 676, 1034, 1036, 1230, 1231, 1671, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1875, 1877, 1878, 1880, 1881, 1886, 1907, 1918, 1923, 1924, 1930, 1932, 1941, 1955, 1963], "get": [1, 8, 13, 20, 23, 24, 25, 40, 41, 42, 43, 46, 51, 53, 54, 87, 149, 333, 682, 730, 784, 785, 857, 858, 889, 892, 932, 1002, 1003, 1004, 1021, 1061, 1131, 1134, 1135, 1136, 1148, 1176, 1216, 1268, 1377, 1378, 1402, 1403, 1430, 1431, 1432, 1444, 1461, 1614, 1615, 1622, 1648, 1655, 1672, 1742, 1757, 1860, 1875, 1876, 1877, 1880, 1890, 1892, 1893, 1900, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1916, 1920, 1922, 1925, 1930, 1932, 1934, 1938, 1939, 1940, 1948, 1950, 1951, 1952, 1956, 1957, 1963, 1964], "register_multi_grad_hook": [1, 1900], "fn": [1, 31, 32, 33, 37, 42, 46, 54, 909, 910, 950, 951, 953, 1132, 1138, 1142, 1201, 1202, 1213, 1218, 1434, 1868, 1877, 1879, 1880, 1884, 1892, 1900, 1910, 1930, 1949, 1954, 1955, 1956, 1961, 1962, 1963], "multi": [1, 4, 31, 40, 756, 978, 1021, 1041, 1074, 1094, 1163, 1201, 1351, 1371, 1386, 1404, 1434, 1437, 1438, 1439, 1440, 1449, 1477, 1479, 1486, 1506, 1614, 1876, 1877, 1880, 1900, 1902, 1903, 1911, 1915, 1921, 1930, 1934, 1937, 1940, 1942], "specifi": [1, 2, 3, 5, 8, 13, 20, 21, 23, 27, 28, 29, 31, 33, 38, 39, 40, 41, 46, 54, 96, 149, 194, 257, 317, 329, 468, 478, 489, 493, 495, 496, 509, 511, 513, 533, 541, 542, 556, 576, 579, 580, 581, 583, 584, 599, 676, 731, 737, 738, 739, 764, 765, 789, 790, 791, 795, 810, 819, 822, 836, 850, 854, 855, 857, 874, 876, 888, 889, 903, 919, 942, 948, 965, 966, 974, 977, 978, 987, 988, 989, 991, 1006, 1009, 1020, 1045, 1055, 1056, 1057, 1061, 1062, 1064, 1074, 1077, 1088, 1091, 1093, 1094, 1096, 1097, 1099, 1100, 1101, 1103, 1104, 1105, 1106, 1107, 1109, 1111, 1132, 1133, 1136, 1142, 1143, 1154, 1162, 1163, 1201, 1205, 1216, 1217, 1243, 1253, 1255, 1257, 1258, 1267, 1270, 1272, 1273, 1283, 1300, 1302, 1308, 1328, 1329, 1332, 1348, 1349, 1350, 1351, 1357, 1366, 1368, 1370, 1371, 1377, 1378, 1381, 1388, 1394, 1395, 1400, 1401, 1404, 1425, 1426, 1431, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1501, 1502, 1505, 1506, 1516, 1517, 1524, 1525, 1530, 1533, 1545, 1552, 1568, 1569, 1576, 1583, 1589, 1590, 1614, 1619, 1621, 1622, 1625, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1658, 1661, 1668, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1686, 1688, 1689, 1690, 1691, 1692, 1697, 1702, 1703, 1711, 1719, 1728, 1744, 1749, 1750, 1753, 1770, 1798, 1800, 1801, 1802, 1804, 1805, 1806, 1807, 1808, 1809, 1813, 1816, 1817, 1821, 1837, 1839, 1843, 1853, 1854, 1855, 1856, 1860, 1862, 1863, 1864, 1868, 1875, 1877, 1879, 1880, 1884, 1886, 1887, 1889, 1890, 1893, 1894, 1900, 1903, 1905, 1909, 1911, 1913, 1917, 1918, 1921, 1922, 1923, 1924, 1925, 1929, 1930, 1934, 1935, 1936, 1937, 1939, 1941, 1949, 1951, 1962], "ignor": [1, 5, 7, 23, 27, 32, 38, 46, 54, 149, 495, 540, 682, 685, 686, 687, 731, 790, 791, 854, 857, 858, 870, 889, 903, 904, 905, 916, 938, 966, 969, 973, 1021, 1022, 1041, 1042, 1095, 1097, 1105, 1106, 1107, 1146, 1161, 1201, 1212, 1218, 1221, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1292, 1329, 1330, 1331, 1347, 1348, 1349, 1350, 1351, 1368, 1370, 1378, 1386, 1388, 1394, 1400, 1401, 1404, 1425, 1426, 1427, 1428, 1429, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1449, 1465, 1466, 1477, 1482, 1505, 1506, 1516, 1525, 1545, 1568, 1576, 1614, 1661, 1674, 1697, 1705, 1709, 1770, 1800, 1801, 1818, 1822, 1845, 1877, 1880, 1881, 1887, 1894, 1900, 1903, 1905, 1918, 1934, 1941, 1948, 1959, 1962], "rel": [1, 8, 9, 13, 21, 23, 29, 46, 54, 484, 690, 872, 904, 905, 909, 910, 966, 1190, 1255, 1258, 1482, 1483, 1498, 1533, 1674, 1678, 1679, 1705, 1887, 1890, 1902, 1903, 1910, 1918, 1922, 1941, 1956], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 54, 55, 62, 63, 793, 834, 835, 853, 854, 948, 1131, 1205, 1922, 1940, 1952, 1953], "_allowmutationonsavedcontext": 1, "purpos": [1, 21, 23, 54, 82, 468, 495, 756, 904, 1210, 1295, 1357, 1386, 1440, 1608, 1609, 1610, 1611, 1770, 1890, 1895, 1900, 1905, 1922, 1931, 1949, 1956, 1957, 1963], "clear": [1, 2, 8, 9, 42, 54, 955, 1201, 1434, 1435, 1444, 1673, 1875, 1900, 1903, 1911, 1916, 1920, 1921], "upon": [1, 2, 20, 24, 31, 33, 54, 948, 1614, 1623, 1626, 1892, 1900, 1903, 1918, 1925, 1932], "sin_": [1, 1878, 1893], "8415": [1, 1934], "sinbackward0": 1, "variou": [2, 5, 13, 20, 23, 54, 1273, 1858, 1860, 1884, 1887, 1892, 1895, 1905, 1911, 1913, 1921, 1925, 1927, 1934, 1945, 1952, 1964], "get_cpu_cap": 2, "capabl": [2, 8, 13, 14, 23, 1002, 1728, 1884, 1903, 1909, 1910, 1912, 1942], "string": [2, 3, 5, 12, 13, 20, 23, 31, 37, 38, 40, 54, 599, 810, 850, 954, 1000, 1017, 1018, 1074, 1131, 1201, 1208, 1211, 1272, 1362, 1363, 1364, 1434, 1435, 1444, 1477, 1479, 1481, 1508, 1509, 1510, 1637, 1668, 1721, 1753, 1761, 1763, 1859, 1860, 1875, 1878, 1879, 1880, 1881, 1894, 1900, 1905, 1910, 1911, 1916, 1918, 1922, 1924, 1930, 1936, 1937, 1939, 1944, 1949, 1953, 1956, 1963, 1964], "vsx": 2, "z": [2, 3, 10, 29, 46, 51, 55, 58, 62, 63, 613, 816, 873, 895, 939, 940, 956, 1074, 1078, 1302, 1387, 1533, 1626, 1659, 1660, 1668, 1715, 1745, 1746, 1877, 1878, 1879, 1894, 1900, 1902, 1903, 1908, 1909, 1918, 1922, 1928, 1930, 1932, 1948, 1951, 1962, 1963], "vector": [2, 11, 21, 29, 46, 47, 51, 252, 311, 313, 319, 685, 686, 687, 880, 889, 891, 897, 898, 899, 900, 901, 902, 903, 929, 930, 936, 947, 962, 966, 974, 1055, 1056, 1061, 1063, 1137, 1141, 1142, 1146, 1233, 1240, 1248, 1256, 1257, 1261, 1264, 1268, 1269, 1270, 1290, 1295, 1302, 1324, 1326, 1352, 1353, 1354, 1357, 1371, 1377, 1378, 1381, 1389, 1397, 1398, 1399, 1443, 1473, 1482, 1485, 1524, 1525, 1533, 1535, 1569, 1573, 1601, 1618, 1620, 1622, 1626, 1657, 1661, 1710, 1711, 1802, 1822, 1862, 1865, 1868, 1900, 1908, 1925, 1934, 1939, 1955], "NO": [2, 80, 82], "avx": [2, 1947], "avx2": [2, 1925, 1947], "avx512": [2, 1947], "is_built": [2, 1912], "built": [2, 3, 7, 8, 13, 21, 23, 28, 33, 49, 54, 949, 1000, 1210, 1483, 1697, 1876, 1895, 1900, 1902, 1903, 1905, 1909, 1911, 1912, 1913, 1927, 1949, 1950, 1956, 1963, 1964], "necessarili": [2, 21, 23, 29, 31, 40, 79, 468, 904, 1237, 1259, 1270, 1301, 1370, 1441, 1903, 1905], "machin": [2, 23, 31, 40, 46, 47, 52, 1205, 1210, 1246, 1470, 1909, 1910, 1911, 1912, 1913, 1915, 1918, 1919, 1922, 1929, 1930, 1931, 1945, 1947, 1955], "driver": [2, 1146, 1246, 1264, 1265, 1310, 1878, 1903, 1914, 1930, 1961, 1963], "would": [2, 3, 5, 8, 9, 11, 13, 20, 23, 29, 31, 33, 40, 41, 46, 48, 51, 54, 149, 442, 443, 444, 445, 446, 694, 756, 790, 850, 889, 893, 903, 938, 1075, 1077, 1095, 1135, 1136, 1199, 1201, 1202, 1206, 1208, 1216, 1217, 1315, 1316, 1347, 1348, 1349, 1350, 1351, 1386, 1400, 1404, 1427, 1428, 1429, 1434, 1444, 1449, 1533, 1544, 1605, 1614, 1615, 1647, 1659, 1692, 1730, 1734, 1736, 1747, 1757, 1836, 1837, 1842, 1877, 1879, 1880, 1893, 1894, 1895, 1896, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908, 1913, 1916, 1918, 1921, 1922, 1923, 1925, 1930, 1931, 1932, 1934, 1948, 1949, 1951, 1952, 1953, 1955, 1957, 1959, 1962, 1963], "allow_tf32": [2, 1765, 1878, 1903, 1914], "tensorfloat": 2, "core": [2, 3, 7, 8, 50, 948, 970, 1031, 1670, 1880, 1884, 1902, 1903, 1904, 1913, 1914, 1922, 1942, 1951, 1956, 1960], "amper": [2, 1934], "newer": [2, 13, 1037, 1655, 1902, 1903, 1916, 1919, 1921, 1922, 1926, 1955], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1903, 1914], "precis": [2, 3, 8, 11, 13, 21, 29, 46, 682, 685, 904, 905, 916, 928, 1020, 1117, 1150, 1246, 1264, 1270, 1295, 1305, 1347, 1348, 1349, 1351, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1405, 1421, 1427, 1428, 1429, 1486, 1544, 1583, 1614, 1750, 1765, 1770, 1876, 1880, 1890, 1896, 1900, 1911, 1922, 1925, 1926, 1928, 1935, 1937, 1939, 1940, 1960, 1965], "gemm": [2, 1902, 1918, 1953], "allow_bf16_reduced_precision_reduct": [2, 1903, 1914], "cufft_plan_cach": [2, 1903], "cufft": 2, "queri": [2, 23, 40, 54, 731, 977, 978, 980, 986, 1033, 1037, 1051, 1052, 1201, 1312, 1434, 1440, 1583, 1625, 1878, 1903, 1922, 1951, 1952, 1956], "specif": [2, 3, 7, 8, 9, 13, 23, 25, 27, 29, 31, 38, 40, 42, 46, 51, 54, 55, 81, 87, 509, 850, 857, 913, 980, 1065, 1094, 1163, 1198, 1205, 1210, 1214, 1216, 1217, 1301, 1381, 1406, 1583, 1608, 1609, 1628, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1688, 1689, 1690, 1691, 1692, 1760, 1799, 1858, 1875, 1877, 1879, 1880, 1882, 1884, 1886, 1890, 1894, 1896, 1900, 1903, 1905, 1909, 1913, 1915, 1918, 1921, 1922, 1924, 1925, 1926, 1928, 1930, 1932, 1939, 1940, 1947, 1951, 1952, 1953, 1955, 1956, 1960, 1962, 1963], "via": [2, 7, 13, 14, 20, 23, 25, 29, 38, 46, 50, 54, 513, 613, 904, 905, 935, 975, 1011, 1031, 1078, 1134, 1273, 1352, 1353, 1354, 1371, 1389, 1397, 1398, 1399, 1406, 1473, 1621, 1655, 1658, 1703, 1877, 1879, 1880, 1890, 1892, 1895, 1898, 1900, 1903, 1905, 1906, 1907, 1909, 1911, 1913, 1914, 1918, 1922, 1925, 1930, 1931, 1934, 1937, 1938, 1949, 1951, 1952, 1953, 1956, 1959, 1964], "readonli": 2, "show": [2, 4, 7, 12, 17, 20, 21, 23, 25, 30, 46, 54, 897, 903, 948, 1125, 1201, 1302, 1434, 1605, 1673, 1875, 1876, 1880, 1893, 1902, 1903, 1904, 1908, 1909, 1911, 1918, 1921, 1922, 1930, 1932, 1955, 1957, 1960, 1961, 1963], "max_siz": [2, 39, 41, 1903], "capac": [2, 1044, 1903, 1913], "preferred_linalg_librari": 2, "subject": [2, 3, 11, 17, 23, 27, 28, 46, 53, 54, 861, 1583, 1614, 1880, 1893, 1894, 1900, 1905, 1918, 1919, 1923, 1924, 1925, 1926, 1930, 1934, 1937, 1942, 1943, 1944, 1951, 1960], "algebra": [2, 9, 1074, 1258, 1876, 1885], "cusolv": [2, 1264, 1265, 1822], "magma": [2, 940, 1246, 1290, 1721, 1822, 1917, 1934], "decid": [2, 4, 7, 23, 40, 50, 1637, 1887, 1918, 1934, 1952, 1953, 1957], "heurist": [2, 13, 20, 40, 41, 54, 1074, 1957], "overrid": [2, 13, 21, 23, 24, 29, 33, 41, 46, 51, 54, 788, 789, 850, 886, 888, 1017, 1350, 1351, 1368, 1370, 1394, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1628, 1692, 1753, 1770, 1876, 1880, 1884, 1916, 1921, 1922, 1925, 1930, 1934, 1939, 1944, 1962], "wherev": [2, 9, 1893, 1956], "pick": [2, 23, 39, 41, 509, 948, 1900, 1930, 1950, 1951, 1957], "prefer": [2, 9, 20, 25, 31, 46, 858, 874, 899, 1199, 1241, 1254, 1258, 1266, 1273, 1441, 1583, 1757, 1818, 1836, 1877, 1900, 1903, 1922, 1934], "environ": [2, 3, 7, 13, 14, 17, 19, 21, 29, 31, 33, 38, 43, 54, 676, 1210, 1216, 1404, 1449, 1857, 1875, 1877, 1886, 1900, 1902, 1904, 1909, 1914, 1915, 1917, 1923, 1930, 1947, 1949, 1953, 1963], "variabl": [2, 3, 5, 13, 17, 19, 21, 29, 31, 33, 38, 43, 46, 51, 54, 55, 58, 62, 63, 445, 676, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 724, 725, 726, 727, 728, 730, 734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 795, 893, 962, 966, 1043, 1075, 1142, 1214, 1216, 1273, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1377, 1378, 1386, 1387, 1404, 1405, 1406, 1419, 1421, 1434, 1437, 1442, 1449, 1451, 1614, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1665, 1674, 1676, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1730, 1732, 1734, 1857, 1868, 1873, 1875, 1876, 1886, 1887, 1894, 1895, 1900, 1902, 1904, 1907, 1908, 1914, 1915, 1917, 1918, 1921, 1925, 1930, 1936, 1939, 1951, 1953, 1955, 1963], "torch_linalg_prefer_cusolv": 2, "global": [2, 3, 5, 8, 20, 23, 25, 27, 28, 29, 31, 41, 46, 51, 53, 54, 55, 58, 62, 63, 850, 857, 861, 869, 917, 926, 1026, 1033, 1075, 1077, 1087, 1092, 1110, 1128, 1131, 1158, 1159, 1182, 1189, 1201, 1204, 1216, 1220, 1271, 1287, 1434, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1633, 1637, 1665, 1730, 1732, 1734, 1737, 1761, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1873, 1877, 1880, 1881, 1896, 1899, 1905, 1910, 1911, 1913, 1915, 1916, 1925, 1930, 1931, 1932, 1934, 1937, 1939, 1950, 1952, 1953, 1954, 1962, 1963], "overridden": [2, 13, 54, 885, 886, 887, 1017, 1434, 1797, 1880, 1900, 1905, 1914, 1923, 1963, 1964], "achiev": [2, 20, 21, 23, 29, 41, 46, 1074, 1138, 1201, 1351, 1357, 1434, 1440, 1441, 1506, 1535, 1614, 1891, 1903, 1910, 1913, 1922, 1930, 1932, 1963], "better": [2, 3, 7, 8, 9, 13, 20, 23, 31, 50, 948, 1043, 1130, 1134, 1135, 1176, 1188, 1216, 1370, 1467, 1589, 1614, 1703, 1728, 1880, 1899, 1900, 1902, 1903, 1908, 1917, 1918, 1921, 1924, 1925, 1926, 1934, 1939, 1944, 1949, 1950, 1956, 1960], "select": [2, 5, 14, 18, 20, 23, 29, 31, 311, 313, 315, 319, 756, 938, 968, 969, 972, 981, 982, 986, 993, 994, 995, 996, 998, 1019, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1043, 1044, 1047, 1049, 1051, 1052, 1094, 1273, 1302, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1404, 1449, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1642, 1643, 1760, 1833, 1860, 1871, 1877, 1878, 1880, 1892, 1893, 1894, 1895, 1900, 1902, 1903, 1908, 1915, 1920, 1925, 1934, 1938, 1941, 1956, 1958, 1960], "incorrect": [2, 4, 5, 46, 54, 79, 80, 82, 252, 509, 552, 895, 904, 930, 1216, 1259, 1272, 1440, 1477, 1478, 1479, 1480, 1481, 1601, 1661, 1818, 1877, 1880, 1903, 1914, 1918], "linalg": [2, 404, 938, 939, 940, 941, 974, 1060, 1146, 1179, 1281, 1290, 1291, 1292, 1296, 1297, 1621, 1622, 1626, 1661, 1708, 1713, 1715, 1721, 1792, 1822, 1823, 1845, 1865, 1876], "inv": [2, 29, 940, 1179, 1232, 1236, 1242, 1258, 1262, 1266], "inv_ex": 2, "cholesky_ex": [2, 1230], "lu_factor": [2, 1249, 1250, 1290, 1291, 1292], "lu": [2, 10, 1242, 1248, 1249, 1250, 1291, 1292, 1878], "eigh": [2, 1230, 1236, 1239, 1258, 1264, 1914], "eighval": 2, "svdval": [2, 1232, 1246, 1255, 1264, 1822, 1914], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 23, 55, 792, 1905, 1918, 1925, 1930, 1956], "scale": [2, 7, 20, 29, 31, 39, 41, 96, 470, 472, 613, 681, 685, 686, 687, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 755, 766, 768, 769, 770, 771, 773, 776, 777, 791, 795, 798, 815, 816, 817, 818, 821, 916, 1088, 1089, 1092, 1110, 1141, 1142, 1287, 1346, 1372, 1377, 1378, 1379, 1395, 1406, 1461, 1486, 1487, 1488, 1524, 1525, 1526, 1542, 1544, 1583, 1584, 1589, 1676, 1697, 1723, 1724, 1725, 1726, 1727, 1800, 1801, 1819, 1868, 1876, 1878, 1894, 1898, 1903, 1907, 1911, 1925, 1926, 1928, 1935, 1953], "product": [2, 14, 23, 29, 40, 149, 682, 685, 686, 687, 756, 889, 891, 898, 900, 901, 902, 903, 916, 928, 934, 938, 962, 974, 986, 1033, 1037, 1051, 1052, 1055, 1071, 1074, 1137, 1141, 1142, 1178, 1221, 1233, 1240, 1266, 1267, 1269, 1295, 1302, 1305, 1326, 1386, 1387, 1404, 1405, 1532, 1583, 1621, 1709, 1710, 1719, 1838, 1853, 1865, 1868, 1876, 1877, 1893, 1900, 1908, 1910, 1914, 1922, 1934], "attent": [2, 7, 28, 731, 1351, 1440, 1477, 1479, 1481, 1506, 1583, 1876, 1917, 1938], "stai": [2, 7, 27, 138, 1371, 1903, 1913, 1925, 1930, 1934], "align": [2, 9, 21, 756, 775, 781, 816, 822, 948, 1074, 1154, 1256, 1349, 1357, 1370, 1386, 1400, 1404, 1428, 1429, 1449, 1486, 1516, 1517, 1544, 1545, 1602, 1621, 1661, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1695, 1843, 1876, 1893, 1900, 1908, 1918, 1928, 1935], "src": [2, 3, 23, 54, 195, 227, 311, 319, 468, 508, 509, 510, 511, 512, 513, 515, 534, 1065, 1131, 1324, 1477, 1480, 1481, 1670, 1754, 1755, 1756, 1760, 1791, 1832, 1857, 1878, 1922, 1958], "transform": [2, 3, 20, 25, 28, 46, 51, 777, 793, 834, 835, 853, 854, 939, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1130, 1131, 1132, 1136, 1141, 1198, 1210, 1355, 1389, 1397, 1398, 1399, 1406, 1421, 1462, 1478, 1479, 1480, 1481, 1498, 1504, 1533, 1550, 1569, 1605, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1786, 1818, 1876, 1906, 1923, 1925, 1934, 1939, 1944, 1945, 1955, 1956], "sdp_utils_cpp": 2, "h": [2, 4, 10, 13, 29, 484, 737, 738, 739, 756, 1230, 1237, 1240, 1250, 1264, 1340, 1341, 1348, 1349, 1351, 1353, 1354, 1358, 1363, 1364, 1366, 1374, 1375, 1377, 1379, 1386, 1387, 1398, 1399, 1404, 1405, 1406, 1417, 1418, 1428, 1429, 1446, 1447, 1449, 1451, 1468, 1484, 1487, 1488, 1498, 1506, 1533, 1568, 1574, 1575, 1621, 1622, 1655, 1670, 1822, 1878, 1893, 1894, 1900, 1903, 1904, 1905, 1907, 1908, 1918, 1938, 1939, 1940, 1951, 1960], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1583], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1583], "math_sdp_en": 2, "math": [2, 20, 54, 1084, 1250, 1252, 1545, 1583, 1711, 1728, 1823, 1876, 1877, 1879, 1880, 1914, 1934, 1935, 1941, 1963], "enable_math_sdp": [2, 1583], "sdp_kernel": [2, 1583], "enable_flash": 2, "enable_math": [2, 1583], "enable_mem_effici": 2, "temporarili": [2, 31, 1761, 1900, 1918, 1924, 1957], "previou": [2, 17, 23, 40, 46, 54, 552, 756, 948, 1009, 1119, 1154, 1211, 1271, 1287, 1386, 1404, 1449, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1673, 1728, 1818, 1888, 1900, 1903, 1905, 1911, 1917, 1925, 1932, 1953], "restor": [2, 5, 27, 54, 87, 955, 1119, 1271, 1287, 1658, 1748, 1770, 1911, 1916, 1950], "is_avail": [2, 16, 23, 1860, 1876, 1903, 1909, 1912, 1916, 1924], "determinist": [2, 3, 5, 19, 23, 29, 54, 79, 87, 509, 869, 1149, 1182, 1204, 1216, 1217, 1298, 1301, 1303, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1404, 1449, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1758, 1764, 1857, 1878, 1900, 1915, 1921, 1929], "algorithm": [2, 3, 7, 11, 18, 21, 24, 27, 29, 31, 46, 87, 756, 775, 781, 938, 1198, 1241, 1248, 1254, 1258, 1264, 1273, 1290, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1384, 1386, 1404, 1449, 1485, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1533, 1544, 1583, 1602, 1614, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1692, 1711, 1750, 1765, 1822, 1823, 1857, 1876, 1900, 1903, 1914, 1930, 1934], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 495, 869, 1075, 1076, 1077, 1182, 1764, 1915], "benchmark": [2, 1876, 1878, 1903, 1909, 1948, 1953, 1960], "fastest": [2, 873, 1614, 1660, 1678, 1679, 1908, 1915, 1921], "benchmark_limit": 2, "maximum": [2, 29, 40, 41, 495, 691, 693, 767, 791, 816, 817, 818, 821, 822, 870, 988, 1023, 1025, 1031, 1038, 1039, 1053, 1054, 1075, 1076, 1077, 1120, 1136, 1161, 1162, 1163, 1273, 1298, 1319, 1393, 1524, 1525, 1619, 1695, 1703, 1728, 1742, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1857, 1859, 1878, 1886, 1898, 1899, 1903, 1913, 1920, 1928, 1941, 1951, 1958], "try": [2, 3, 4, 7, 8, 23, 25, 28, 32, 33, 37, 40, 46, 50, 51, 77, 78, 948, 1044, 1127, 1136, 1142, 1206, 1207, 1216, 1319, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1477, 1478, 1480, 1486, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1868, 1875, 1877, 1880, 1881, 1900, 1903, 1905, 1907, 1908, 1913, 1918, 1921, 1922, 1925, 1926, 1930, 1934, 1949, 1951, 1952, 1953, 1955, 1963], "dispatch": [2, 23, 46, 54, 79, 80, 82, 1206, 1315, 1316, 1672, 1858, 1860, 1880, 1884, 1903, 1905, 1918, 1953, 1954, 1964], "v8": 2, "verbos": [2, 13, 23, 54, 676, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1875, 1886, 1894, 1918, 1919, 1939, 1963], "On": [2, 13, 19, 20, 23, 24, 29, 41, 46, 51, 54, 682, 685, 916, 928, 1248, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1402, 1403, 1404, 1405, 1421, 1444, 1449, 1462, 1614, 1678, 1679, 1688, 1691, 1876, 1877, 1887, 1900, 1902, 1903, 1905, 1914, 1922, 1930, 1931, 1932, 1934, 1948, 1951, 1952], "demand": [2, 20, 1011, 1879, 1910, 1913, 1930], "onemkl": 2, "easier": [2, 7, 20, 54, 1877, 1879, 1895, 1900, 1901, 1905, 1906, 1934, 1953, 1963], "dump": [2, 54, 975, 1904, 1917, 1953, 1956, 1963], "durat": [2, 23, 37, 40, 1315, 1316, 1890, 1918, 1924, 1953, 1963], "kernel": [2, 3, 4, 11, 13, 17, 23, 46, 53, 735, 736, 737, 738, 739, 768, 769, 770, 948, 973, 978, 980, 981, 1017, 1018, 1050, 1052, 1321, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1382, 1383, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1583, 1624, 1858, 1860, 1877, 1884, 1888, 1895, 1903, 1905, 1906, 1912, 1914, 1918, 1921, 1924, 1926, 1934, 1948, 1952, 1953, 1954, 1955, 1961, 1963], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 20, 23, 54, 676, 854, 964, 966, 1031, 1246, 1264, 1342, 1381, 1485, 1527, 1614, 1703, 1790, 1802, 1876, 1892, 1894, 1895, 1902, 1903, 1907, 1911, 1914, 1916, 1918, 1922, 1923, 1926, 1930, 1934, 1937, 1940, 1948, 1953, 1961, 1963], "moreov": [2, 46, 509, 1614, 1691], "investig": [2, 7, 23, 51, 1961], "singl": [2, 3, 5, 13, 21, 23, 25, 27, 28, 29, 31, 33, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 55, 62, 63, 252, 676, 691, 692, 762, 763, 764, 765, 768, 769, 770, 810, 890, 897, 898, 899, 900, 901, 902, 903, 917, 926, 930, 948, 962, 966, 1017, 1020, 1130, 1132, 1133, 1136, 1138, 1142, 1158, 1159, 1163, 1186, 1200, 1201, 1216, 1217, 1220, 1278, 1302, 1315, 1316, 1340, 1341, 1344, 1345, 1348, 1349, 1351, 1362, 1363, 1364, 1366, 1367, 1370, 1371, 1382, 1383, 1389, 1402, 1403, 1406, 1428, 1429, 1434, 1442, 1446, 1447, 1462, 1473, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1530, 1557, 1558, 1559, 1601, 1607, 1609, 1612, 1613, 1614, 1618, 1619, 1620, 1656, 1657, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1697, 1718, 1744, 1810, 1816, 1817, 1854, 1855, 1857, 1863, 1864, 1868, 1876, 1877, 1879, 1880, 1887, 1888, 1892, 1894, 1895, 1900, 1902, 1903, 1905, 1906, 1908, 1911, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1924, 1925, 1931, 1932, 1934, 1937, 1940, 1941, 1944, 1947, 1948, 1950, 1951, 1952, 1953, 1955, 1956, 1962, 1963], "enough": [2, 8, 21, 54, 1212, 1324, 1483, 1804, 1805, 1806, 1807, 1808, 1809, 1857, 1879, 1892, 1895, 1905, 1908, 1921, 1922, 1937, 1953, 1964], "scope": [2, 7, 42, 54, 1127, 1473, 1637, 1877, 1879, 1880, 1903, 1907, 1918, 1922, 1932, 1952, 1962], "second": [2, 5, 13, 17, 23, 27, 31, 33, 40, 42, 52, 54, 682, 685, 687, 690, 756, 790, 870, 871, 872, 880, 888, 904, 905, 916, 920, 921, 923, 924, 925, 928, 974, 986, 1033, 1037, 1051, 1052, 1062, 1064, 1065, 1071, 1079, 1120, 1121, 1132, 1135, 1136, 1137, 1141, 1142, 1144, 1145, 1154, 1157, 1165, 1166, 1167, 1178, 1190, 1223, 1225, 1233, 1269, 1272, 1278, 1279, 1289, 1295, 1299, 1301, 1302, 1304, 1305, 1330, 1335, 1338, 1342, 1348, 1349, 1355, 1363, 1364, 1366, 1367, 1377, 1378, 1385, 1386, 1400, 1403, 1404, 1422, 1426, 1428, 1429, 1449, 1462, 1515, 1517, 1551, 1605, 1637, 1672, 1678, 1679, 1682, 1688, 1692, 1703, 1749, 1799, 1807, 1842, 1847, 1849, 1862, 1865, 1868, 1879, 1880, 1900, 1903, 1905, 1906, 1907, 1908, 1911, 1915, 1918, 1924, 1930, 1935, 1939, 1948, 1956], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 14, 17, 20, 23, 31, 32, 33, 37, 46, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 80, 81, 82, 495, 676, 743, 890, 891, 892, 900, 1131, 1146, 1371, 1614, 1876, 1877, 1880, 1881, 1886, 1890, 1892, 1895, 1898, 1900, 1902, 1905, 1908, 1919, 1922, 1924, 1925, 1926, 1930, 1934, 1939, 1943, 1944, 1945, 1950, 1951, 1953, 1954, 1956, 1958, 1961, 1962, 1963, 1964], "verbose_off": 2, "dnn": [2, 1902], "onednn": [2, 851, 852, 855, 1203, 1209, 1925], "former": [2, 46, 1404, 1434, 1900], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 15, 16, 21, 29, 50, 53, 1533, 1614, 1875, 1876, 1891, 1905, 1911, 1921, 1928, 1930, 1939, 1942, 1949], "els": [2, 7, 20, 23, 25, 29, 31, 32, 40, 54, 55, 599, 756, 919, 1212, 1218, 1400, 1473, 1570, 1583, 1614, 1668, 1678, 1679, 1682, 1688, 1689, 1690, 1691, 1745, 1746, 1779, 1785, 1860, 1877, 1879, 1881, 1882, 1887, 1892, 1895, 1903, 1905, 1906, 1911, 1912, 1918, 1921, 1922, 1936, 1948, 1949, 1951, 1962], "einsum": [2, 1878, 1920], "readthedoc": [2, 1074], "io": [2, 7, 20, 25, 1074, 1208, 1211, 1272, 1404, 1405, 1481, 1583, 1669, 1753, 1917, 1925], "en": [2, 21, 1074, 1909, 1939, 1965], "path_find": [2, 1074], "html": [2, 3, 4, 7, 14, 41, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 948, 1074, 1483, 1857, 1860, 1901, 1909, 1911, 1915, 1922, 1939], "calcul": [2, 20, 23, 37, 756, 764, 765, 795, 798, 815, 816, 820, 936, 966, 1062, 1066, 1074, 1078, 1192, 1198, 1256, 1278, 1279, 1281, 1347, 1348, 1349, 1352, 1353, 1354, 1357, 1365, 1366, 1367, 1381, 1386, 1388, 1389, 1397, 1398, 1399, 1406, 1473, 1482, 1485, 1486, 1500, 1501, 1502, 1530, 1533, 1544, 1573, 1622, 1633, 1655, 1659, 1661, 1697, 1743, 1767, 1816, 1817, 1847, 1849, 1863, 1864, 1900, 1901, 1904, 1908, 1914, 1917, 1925, 1934, 1944], "path": [2, 3, 4, 8, 13, 23, 25, 38, 40, 42, 43, 46, 54, 730, 911, 912, 975, 976, 1074, 1201, 1434, 1450, 1481, 1668, 1673, 1875, 1878, 1879, 1900, 1903, 1905, 1909, 1916, 1922, 1924, 1934, 1943, 1948, 1955, 1956, 1957], "contract": [2, 1074, 1838, 1876, 1894, 1922, 1949, 1956], "left": [2, 20, 54, 457, 495, 810, 816, 861, 917, 921, 924, 926, 927, 932, 937, 1074, 1094, 1101, 1115, 1118, 1119, 1123, 1154, 1158, 1159, 1163, 1198, 1199, 1206, 1220, 1241, 1250, 1254, 1258, 1261, 1262, 1263, 1264, 1266, 1278, 1279, 1324, 1342, 1347, 1348, 1349, 1350, 1351, 1362, 1363, 1364, 1381, 1388, 1401, 1402, 1403, 1422, 1423, 1424, 1425, 1427, 1428, 1429, 1437, 1438, 1439, 1443, 1444, 1482, 1485, 1486, 1487, 1488, 1533, 1553, 1571, 1619, 1695, 1696, 1709, 1737, 1750, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1818, 1838, 1843, 1862, 1877, 1878, 1880, 1900, 1905, 1911, 1928, 1935, 1961], "strategi": [2, 3, 7, 20, 21, 23, 27, 33, 46, 897, 899, 1074, 1134, 1214, 1342, 1614, 1703, 1879, 1906, 1908, 1926, 1953], "auto": [2, 23, 47, 77, 78, 1074, 1350, 1351, 1880, 1918, 1939, 1952], "greedi": [2, 27, 1074], "doc": [2, 3, 4, 9, 14, 40, 41, 77, 81, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 836, 948, 1142, 1219, 1478, 1479, 1480, 1481, 1857, 1868, 1881, 1892, 1901, 1904, 1905, 1911, 1915, 1918, 1922, 1930, 1934, 1939, 1954, 1959], "timer": [3, 26, 1876], "stmt": [3, 1902], "setup": [3, 13, 21, 40, 41, 816, 817, 818, 821, 1142, 1614, 1868, 1902, 1903, 1912, 1930, 1931, 1949], "global_setup": 3, "perf_count": 3, "label": [3, 6, 7, 20, 27, 1074, 1342, 1351, 1357, 1368, 1370, 1394, 1426, 1437, 1438, 1517, 1648, 1696, 1904, 1913, 1915, 1939], "sub_label": 3, "descript": [3, 7, 12, 13, 20, 33, 40, 54, 730, 1172, 1173, 1174, 1246, 1273, 1498, 1721, 1879, 1880, 1903, 1905, 1908, 1910, 1911, 1918, 1945, 1954, 1965], "env": [3, 23, 29, 33, 38, 40, 41, 43, 54, 1031, 1668, 1669, 1904, 1914, 1918, 1930, 1953, 1963], "num_thread": [3, 1913], "languag": [3, 13, 33, 1212, 1342, 1477, 1532, 1907], "measur": [3, 29, 37, 977, 1023, 1025, 1232, 1312, 1350, 1351, 1368, 1394, 1401, 1425, 1426, 1482, 1483, 1505, 1506, 1564, 1705, 1876, 1903, 1910, 1911, 1921, 1934], "statement": [3, 29, 51, 54, 55, 60, 62, 63, 1202, 1216, 1881, 1900, 1905, 1913, 1916, 1918, 1922, 1928, 1930, 1949, 1956], "full": [3, 7, 8, 14, 20, 21, 23, 27, 29, 40, 43, 46, 47, 51, 54, 55, 60, 63, 509, 896, 917, 926, 948, 1102, 1103, 1104, 1108, 1109, 1111, 1129, 1141, 1142, 1158, 1159, 1205, 1238, 1239, 1246, 1247, 1248, 1259, 1264, 1265, 1273, 1290, 1351, 1357, 1388, 1448, 1477, 1508, 1509, 1510, 1517, 1530, 1576, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1770, 1822, 1823, 1868, 1875, 1877, 1878, 1879, 1880, 1882, 1894, 1899, 1903, 1904, 1905, 1908, 1911, 1914, 1915, 1920, 1922, 1925, 1928, 1931, 1938, 1941, 1950, 1953, 1956, 1957, 1958, 1963], "org": [3, 4, 7, 9, 10, 14, 21, 28, 29, 41, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 948, 1273, 1404, 1452, 1453, 1480, 1483, 1658, 1711, 1786, 1860, 1875, 1881, 1900, 1901, 1911, 1915, 1917, 1918, 1922, 1939, 1965], "timeit": [3, 1902], "sever": [3, 14, 20, 23, 28, 29, 46, 54, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 948, 1020, 1078, 1176, 1201, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1402, 1403, 1422, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1614, 1623, 1624, 1626, 1627, 1659, 1670, 1726, 1727, 1767, 1853, 1877, 1899, 1900, 1902, 1903, 1910, 1911, 1913, 1918, 1921, 1925, 1930], "kei": [3, 20, 25, 31, 38, 40, 41, 46, 54, 599, 676, 731, 850, 855, 913, 1040, 1130, 1140, 1201, 1216, 1217, 1272, 1434, 1435, 1440, 1444, 1477, 1478, 1479, 1480, 1481, 1583, 1640, 1656, 1858, 1860, 1876, 1878, 1879, 1880, 1884, 1903, 1905, 1910, 1911, 1916, 1918, 1920, 1921, 1924, 1925, 1928, 1930, 1931, 1936, 1939, 1941, 1943, 1945, 1954, 1956, 1960, 1961, 1962], "awar": [3, 7, 79, 483, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 834, 835, 851, 858, 859, 1481, 1583, 1614, 1826, 1827, 1828, 1829, 1830, 1894, 1900, 1903, 1922, 1928, 1931, 1934, 1960], "element": [3, 20, 23, 29, 51, 52, 54, 55, 61, 62, 63, 96, 118, 149, 153, 195, 215, 240, 252, 256, 284, 311, 313, 315, 317, 319, 350, 396, 398, 400, 432, 451, 468, 470, 471, 493, 495, 509, 511, 513, 516, 541, 542, 554, 556, 605, 606, 613, 677, 679, 680, 683, 684, 689, 690, 694, 695, 731, 754, 756, 766, 767, 768, 769, 770, 776, 780, 789, 870, 872, 873, 874, 877, 878, 879, 880, 881, 889, 897, 898, 900, 901, 902, 904, 905, 918, 927, 930, 937, 943, 947, 960, 962, 963, 964, 1017, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1063, 1064, 1065, 1069, 1071, 1074, 1077, 1079, 1080, 1084, 1104, 1108, 1109, 1111, 1113, 1118, 1120, 1121, 1123, 1127, 1132, 1133, 1135, 1136, 1137, 1141, 1142, 1143, 1144, 1145, 1146, 1154, 1157, 1160, 1161, 1162, 1163, 1178, 1186, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1220, 1222, 1223, 1225, 1242, 1244, 1248, 1259, 1263, 1274, 1275, 1277, 1280, 1282, 1283, 1284, 1285, 1289, 1290, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1322, 1324, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1346, 1347, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1381, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1400, 1401, 1404, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1420, 1423, 1425, 1426, 1427, 1428, 1429, 1433, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1472, 1473, 1474, 1475, 1476, 1477, 1482, 1483, 1485, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1518, 1522, 1525, 1526, 1531, 1532, 1536, 1537, 1538, 1539, 1542, 1545, 1546, 1548, 1553, 1557, 1558, 1559, 1563, 1564, 1568, 1569, 1571, 1574, 1575, 1576, 1577, 1578, 1579, 1583, 1584, 1585, 1586, 1587, 1589, 1591, 1593, 1594, 1595, 1596, 1601, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1640, 1641, 1647, 1648, 1650, 1651, 1660, 1661, 1662, 1664, 1674, 1714, 1715, 1718, 1719, 1726, 1727, 1729, 1740, 1743, 1744, 1748, 1750, 1752, 1770, 1773, 1775, 1787, 1788, 1790, 1791, 1795, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1816, 1817, 1821, 1832, 1834, 1835, 1839, 1840, 1841, 1843, 1845, 1846, 1847, 1848, 1849, 1851, 1853, 1854, 1855, 1857, 1863, 1864, 1865, 1868, 1871, 1878, 1880, 1887, 1895, 1898, 1901, 1902, 1905, 1908, 1914, 1916, 1918, 1921, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1952, 1955, 1964], "lazili": [3, 16, 25, 977, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1605, 1877, 1905, 1961], "threadpool": 3, "comparison": [3, 21, 23, 54, 1201, 1216, 1217, 1434, 1674, 1881, 1905, 1941, 1944, 1950], "appl": [3, 1891], "focu": [3, 1705, 1956], "replic": [3, 20, 28, 46, 81, 1154, 1211, 1362, 1363, 1364, 1371, 1381, 1410, 1411, 1412, 1458, 1459, 1460, 1485, 1571, 1598, 1923], "particularli": [3, 20, 21, 42, 1370, 1371, 1441, 1877, 1903, 1951, 1961], "variat": [3, 29, 1880, 1905, 1921, 1926, 1963], "confound": 3, "quantifi": [3, 1483], "nois": [3, 1878, 1915, 1963], "median": [3, 29, 172, 1330, 1857, 1878, 1893, 1920], "robust": [3, 1273, 1892, 1911], "deviat": [3, 29, 46, 375, 1346, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1473, 1662, 1780, 1785, 1816, 1817, 1898], "merg": [3, 6, 7, 9, 20, 23, 25, 41, 1435, 1440, 1444], "repeat": [3, 29, 51, 490, 966, 1074, 1264, 1290, 1430, 1431, 1432, 1505, 1506, 1711, 1743, 1802, 1822, 1823, 1839, 1878, 1880, 1920, 1924, 1927, 1934, 1958], "autorang": 3, "exact": [3, 13, 20, 31, 42, 80, 337, 737, 738, 739, 791, 870, 871, 872, 904, 905, 948, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1301, 1366, 1404, 1481, 1544, 1583, 1614, 1706, 1796, 1898, 1904, 1913, 1934, 1952, 1953, 1960, 1963, 1964], "discuss": [3, 5, 8, 9, 10, 29, 54, 1395, 1544, 1887, 1900, 1905, 1911, 1915, 1930, 1932, 1934, 1950], "docstr": [3, 13, 54, 857, 858, 1201, 1434, 1875, 1903], "adapt": [3, 762, 763, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1372, 1492, 1493, 1494, 1495, 1496, 1497, 1668, 1676, 1677, 1688, 1690, 1697, 1903, 1951], "field": [3, 7, 23, 27, 31, 33, 37, 38, 54, 822, 889, 1199, 1201, 1342, 1350, 1351, 1368, 1370, 1394, 1400, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1498, 1505, 1506, 1516, 1533, 1545, 1568, 1576, 1647, 1686, 1692, 1890, 1900, 1904, 1913, 1918, 1930, 1931, 1939, 1956, 1962, 1963], "displai": [3, 17, 1019, 1032, 1544, 1602, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1875, 1881, 1886, 1889, 1918, 1939, 1941, 1953, 1963], "instruct": [3, 4, 11, 13, 42, 53, 1877, 1880, 1914, 1918, 1925, 1941, 1947, 1952, 1956, 1963], "count": [3, 20, 29, 37, 54, 919, 965, 1013, 1127, 1162, 1163, 1199, 1238, 1239, 1647, 1854, 1855, 1878, 1890, 1903, 1920, 1924, 1930, 1932, 1934, 1956], "wall": [3, 1957], "callgrind": 3, "analog": [3, 54, 690, 1057, 1095, 1097, 1176, 1250, 1404, 1691, 1822, 1839, 1895, 1911, 1951, 1956], "constructor": [3, 13, 20, 21, 27, 46, 54, 55, 63, 820, 857, 858, 1342, 1439, 1444, 1445, 1462, 1487, 1488, 1614, 1654, 1797, 1876, 1877, 1880, 1881, 1903, 1904, 1911, 1930, 1934, 1936, 1937, 1940, 1965], "snippet": [3, 41, 1875, 1911, 1916, 1955, 1956], "loop": [3, 21, 42, 47, 51, 52, 54, 55, 60, 858, 859, 903, 1020, 1023, 1025, 1136, 1142, 1216, 1614, 1624, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1868, 1877, 1878, 1880, 1890, 1902, 1903, 1907, 1908, 1911, 1914, 1918, 1921, 1924, 1925, 1939, 1948, 1952, 1956, 1962], "callabl": [3, 5, 20, 21, 23, 27, 29, 31, 33, 38, 40, 42, 46, 53, 54, 67, 68, 69, 118, 396, 837, 948, 950, 1017, 1018, 1020, 1131, 1132, 1133, 1138, 1141, 1142, 1201, 1204, 1212, 1216, 1272, 1273, 1434, 1477, 1479, 1481, 1483, 1608, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1699, 1702, 1868, 1875, 1877, 1879, 1880, 1881, 1890, 1903, 1905, 1911, 1916, 1918, 1922, 1923, 1924, 1930, 1941, 1943, 1944, 1949, 1950, 1954, 1956, 1962, 1964], "present": [3, 9, 20, 23, 40, 46, 1199, 1290, 1342, 1404, 1444, 1647, 1670, 1818, 1875, 1889, 1892, 1893, 1894, 1899, 1900, 1903, 1905, 1908, 1911, 1916, 1918, 1922, 1931, 1934, 1937, 1954, 1959], "default_tim": 3, "summar": [3, 4, 41, 1770, 1880, 1895, 1934, 1956, 1963], "relu": [3, 21, 51, 52, 54, 696, 697, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 761, 788, 789, 810, 850, 856, 1017, 1132, 1142, 1212, 1434, 1449, 1451, 1462, 1470, 1477, 1479, 1481, 1580, 1581, 1605, 1673, 1868, 1877, 1878, 1888, 1894, 1895, 1898, 1900, 1911, 1916, 1918, 1920, 1925, 1927, 1928, 1949, 1955, 1958, 1961, 1962, 1963], "readabl": [3, 12, 20, 38, 54, 1019, 1032, 1836, 1918, 1921, 1963, 1964], "supplement": 3, "disambigu": [3, 38, 54, 1278, 1963], "ident": [3, 13, 20, 23, 29, 54, 784, 810, 904, 905, 1062, 1238, 1239, 1240, 1241, 1254, 1266, 1269, 1273, 1290, 1329, 1330, 1346, 1372, 1573, 1621, 1623, 1865, 1871, 1881, 1898, 1914, 1915, 1922, 1927, 1934, 1952, 1963], "easi": [3, 20, 25, 40, 1877, 1900, 1907, 1910, 1911, 1913, 1922, 1925, 1930, 1931, 1934, 1949, 1950, 1955, 1956, 1961], "differenti": [3, 29, 47, 52, 149, 350, 585, 798, 885, 887, 889, 891, 892, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 945, 1020, 1135, 1136, 1137, 1141, 1215, 1247, 1248, 1259, 1290, 1356, 1357, 1377, 1535, 1569, 1614, 1626, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1857, 1876, 1887, 1905, 1907, 1908, 1918, 1921, 1930, 1940], "distinguish": [3, 1925, 1934], "princip": [3, 1247, 1711], "signal": [3, 11, 25, 31, 40, 42, 734, 735, 736, 762, 763, 778, 779, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1198, 1263, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1382, 1383, 1402, 1403, 1422, 1427, 1428, 1429, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1508, 1511, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1818, 1876, 1892, 1913, 1924, 1930], "form": [3, 7, 9, 11, 20, 23, 29, 39, 40, 41, 46, 51, 54, 756, 775, 781, 939, 1062, 1102, 1104, 1201, 1240, 1243, 1248, 1259, 1264, 1340, 1341, 1344, 1345, 1357, 1382, 1383, 1386, 1404, 1434, 1449, 1485, 1486, 1517, 1528, 1529, 1532, 1544, 1571, 1602, 1626, 1672, 1691, 1709, 1838, 1875, 1877, 1881, 1895, 1900, 1905, 1911, 1918, 1922, 1925, 1934, 1939, 1950, 1955, 1962], "treat": [3, 29, 39, 49, 54, 55, 60, 61, 319, 468, 789, 904, 905, 1017, 1130, 1201, 1253, 1256, 1258, 1270, 1272, 1282, 1283, 1284, 1285, 1302, 1332, 1378, 1388, 1406, 1438, 1439, 1440, 1441, 1444, 1462, 1467, 1525, 1614, 1656, 1660, 1697, 1750, 1818, 1832, 1839, 1879, 1880, 1893, 1900, 1918, 1930, 1934, 1937, 1944, 1954, 1959, 1962], "distinct": [3, 1130, 1236, 1237, 1281, 1880, 1905, 1916, 1918, 1930, 1931], "workload": [3, 8, 20, 23, 46, 1020, 1903, 1910, 1914, 1930, 1947, 1961], "good": [3, 7, 8, 13, 54, 948, 1134, 1442, 1786, 1875, 1884, 1892, 1905, 1910, 1911, 1913, 1918, 1922, 1923, 1925, 1952, 1956, 1960], "intrins": [3, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 788, 789, 1926, 1927], "contrast": [3, 29, 31, 756, 1386, 1691, 1898, 1900, 1906, 1934, 1958], "blocked_autorang": 3, "callback": [3, 21, 40, 42, 53, 54, 1614, 1890, 1905, 1910, 1924, 1930], "min_run_tim": 3, "minimum": [3, 13, 21, 31, 40, 41, 692, 693, 767, 791, 816, 817, 818, 821, 822, 871, 919, 1054, 1121, 1161, 1162, 1163, 1303, 1357, 1393, 1483, 1695, 1696, 1703, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1878, 1898, 1900, 1908, 1920, 1928, 1937, 1958], "At": [3, 5, 6, 7, 14, 20, 1108, 1353, 1362, 1363, 1364, 1365, 1366, 1367, 1402, 1403, 1858, 1888, 1895, 1902, 1908, 1925, 1930, 1935, 1950, 1956, 1963], "high": [3, 4, 7, 8, 9, 10, 14, 21, 23, 29, 31, 37, 39, 41, 54, 118, 1357, 1480, 1732, 1733, 1765, 1878, 1890, 1892, 1905, 1908, 1909, 1911, 1912, 1913, 1921, 1925, 1926, 1930, 1934, 1939, 1940, 1941, 1944, 1947, 1948, 1956, 1958, 1963], "pseudo": [3, 87], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 23, 1216, 1264, 1435, 1444, 1728, 1902, 1918, 1928, 1934, 1951, 1963], "block": [3, 7, 8, 20, 23, 27, 40, 42, 46, 53, 54, 579, 580, 581, 927, 977, 1031, 1221, 1273, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1437, 1485, 1527, 1601, 1614, 1804, 1805, 1806, 1877, 1879, 1880, 1890, 1892, 1896, 1900, 1903, 1904, 1908, 1918, 1925, 1930, 1934, 1945, 1961], "qualiti": [3, 7, 21], "balanc": [3, 948], "compet": [3, 1913], "statist": [3, 21, 23, 29, 795, 796, 816, 817, 818, 820, 821, 986, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1051, 1052, 1278, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1890, 1900, 1907, 1921, 1923, 1925, 1928, 1953, 1963], "amort": 3, "invoc": [3, 5, 54, 837, 948, 1204, 1216, 1877, 1880, 1903, 1905, 1910, 1918, 1930, 1932, 1948, 1956, 1961], "less": [3, 6, 7, 13, 20, 21, 23, 29, 31, 42, 46, 362, 676, 897, 899, 904, 905, 966, 1027, 1044, 1074, 1118, 1122, 1127, 1130, 1225, 1237, 1273, 1289, 1290, 1342, 1395, 1448, 1465, 1471, 1650, 1741, 1847, 1849, 1875, 1878, 1880, 1895, 1903, 1905, 1913, 1914, 1920, 1923, 1925, 1953], "bias": [3, 21, 730, 756, 790, 1352, 1353, 1354, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1449, 1451, 1473], "trivial": [3, 31, 33, 731, 938, 1621, 1918, 1932, 1952], "low": [3, 7, 17, 21, 29, 46, 495, 900, 1146, 1357, 1711, 1728, 1732, 1733, 1750, 1823, 1878, 1890, 1892, 1903, 1913, 1924, 1941, 1957, 1958, 1964], "digit": [3, 1770, 1875, 1889, 1910, 1914], "microsecond": [3, 1903], "bia": [3, 9, 23, 55, 708, 709, 710, 711, 712, 713, 714, 715, 716, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 738, 739, 745, 747, 748, 749, 750, 752, 756, 757, 760, 761, 768, 769, 770, 777, 788, 1140, 1201, 1210, 1342, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1434, 1440, 1449, 1450, 1451, 1477, 1479, 1481, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1534, 1543, 1547, 1550, 1605, 1614, 1621, 1622, 1636, 1638, 1640, 1655, 1658, 1725, 1878, 1888, 1905, 1911, 1916, 1925, 1927, 1934, 1939, 1958], "period": [3, 9, 27, 40, 917, 926, 986, 1019, 1032, 1033, 1037, 1051, 1052, 1094, 1158, 1159, 1220, 1707, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1878, 1890, 1913], "until": [3, 7, 20, 21, 23, 27, 31, 40, 46, 53, 54, 483, 977, 978, 980, 1011, 1127, 1221, 1273, 1312, 1315, 1316, 1533, 1605, 1614, 1694, 1700, 1839, 1892, 1898, 1903, 1907, 1916, 1918, 1924, 1930, 1932, 1953], "overal": [3, 9, 20, 23, 40, 904, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1480, 1900, 1902, 1903, 1913, 1926, 1957], "main": [3, 7, 20, 21, 23, 24, 29, 31, 32, 33, 38, 40, 41, 42, 43, 54, 258, 492, 948, 1061, 1062, 1063, 1064, 1065, 1263, 1535, 1802, 1846, 1847, 1848, 1849, 1875, 1877, 1890, 1892, 1894, 1895, 1899, 1900, 1903, 1904, 1905, 1906, 1911, 1913, 1917, 1918, 1930, 1931, 1939, 1940, 1945, 1949, 1953, 1956, 1962], "repetit": [3, 1743, 1839], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1876], "tupl": [3, 5, 13, 20, 25, 31, 37, 38, 40, 46, 54, 317, 442, 444, 446, 493, 516, 533, 556, 579, 580, 581, 691, 692, 693, 731, 762, 763, 764, 765, 768, 769, 770, 775, 781, 782, 783, 789, 813, 814, 850, 857, 858, 874, 875, 882, 883, 884, 885, 886, 888, 897, 898, 899, 900, 901, 902, 903, 904, 905, 908, 909, 910, 931, 950, 954, 965, 987, 988, 991, 1002, 1020, 1026, 1053, 1054, 1072, 1075, 1077, 1091, 1093, 1094, 1096, 1097, 1099, 1100, 1101, 1103, 1104, 1106, 1107, 1109, 1111, 1114, 1124, 1128, 1130, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1146, 1162, 1164, 1201, 1207, 1212, 1216, 1217, 1222, 1231, 1236, 1237, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1253, 1257, 1259, 1260, 1262, 1264, 1267, 1270, 1288, 1290, 1292, 1298, 1300, 1302, 1303, 1306, 1308, 1329, 1332, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1371, 1381, 1382, 1383, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1440, 1444, 1455, 1456, 1457, 1458, 1459, 1460, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1496, 1497, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1544, 1557, 1558, 1559, 1569, 1571, 1602, 1603, 1604, 1609, 1610, 1611, 1614, 1626, 1637, 1650, 1656, 1660, 1661, 1665, 1668, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1711, 1712, 1721, 1730, 1732, 1734, 1744, 1748, 1749, 1795, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1813, 1816, 1817, 1821, 1822, 1823, 1836, 1837, 1838, 1839, 1840, 1845, 1852, 1853, 1854, 1855, 1863, 1864, 1868, 1869, 1871, 1873, 1877, 1878, 1881, 1892, 1895, 1900, 1903, 1905, 1906, 1911, 1916, 1918, 1921, 1922, 1925, 1930, 1934, 1939, 1941, 1944, 1956, 1962, 1964], "modulo": [3, 29, 1122, 1741], "determin": [3, 5, 8, 11, 13, 16, 17, 19, 20, 21, 23, 29, 31, 38, 40, 51, 54, 80, 81, 82, 819, 822, 897, 899, 904, 905, 917, 926, 933, 938, 1021, 1076, 1095, 1105, 1129, 1130, 1158, 1159, 1162, 1163, 1214, 1234, 1246, 1257, 1260, 1281, 1295, 1378, 1382, 1383, 1404, 1440, 1443, 1449, 1525, 1528, 1529, 1544, 1577, 1602, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1656, 1666, 1703, 1731, 1733, 1735, 1762, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1874, 1880, 1881, 1894, 1903, 1904, 1905, 1911, 1918, 1922, 1925, 1930, 1932, 1934, 1936, 1937, 1939, 1941, 1951, 1952, 1953, 1962, 1963], "itself": [3, 5, 7, 8, 23, 24, 46, 52, 54, 689, 695, 875, 966, 1135, 1136, 1201, 1212, 1216, 1434, 1467, 1589, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1877, 1892, 1911, 1913, 1915, 1918, 1922, 1930, 1934, 1938, 1949, 1952, 1956, 1963], "jitter": 3, "interpret": [3, 20, 23, 27, 29, 31, 40, 42, 70, 775, 781, 876, 903, 1030, 1095, 1096, 1097, 1102, 1104, 1105, 1106, 1107, 1127, 1151, 1163, 1201, 1206, 1212, 1216, 1253, 1273, 1374, 1533, 1544, 1545, 1602, 1762, 1768, 1875, 1879, 1880, 1892, 1902, 1903, 1918, 1934, 1936, 1938, 1956], "ideal": [3, 39, 41, 46, 1216, 1692, 1894, 1953], "analysi": [3, 21, 29, 54, 1220, 1711, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1881, 1911, 1919, 1944, 1949, 1950, 1952, 1957], "valgrind": 3, "degrad": [3, 13, 46, 1902, 1904, 1905, 1934], "amelior": 3, "suffici": [3, 13, 21, 29, 32, 40, 46, 1678, 1679, 1875, 1934, 1937, 1953], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 54, 775, 781, 932, 1154, 1359, 1360, 1361, 1455, 1456, 1457, 1458, 1459, 1460, 1486, 1489, 1490, 1491, 1544, 1602, 1697, 1703, 1757, 1878, 1904, 1922, 1923, 1930, 1953], "caller": [3, 31, 40, 54, 850, 1201, 1434, 1481, 1610, 1611, 1900, 1903, 1930, 1932], "structur": [3, 5, 9, 20, 21, 23, 30, 31, 33, 41, 46, 54, 55, 56, 60, 63, 888, 1125, 1137, 1142, 1216, 1434, 1633, 1637, 1674, 1711, 1823, 1868, 1876, 1879, 1881, 1887, 1890, 1895, 1903, 1904, 1905, 1906, 1913, 1916, 1917, 1918, 1919, 1921, 1922, 1930, 1939, 1940, 1941, 1942, 1944, 1951, 1954, 1959], "restrict": [3, 8, 20, 29, 46, 51, 52, 1272, 1295, 1370, 1879, 1880, 1881, 1894, 1895, 1900, 1903, 1908, 1923, 1925, 1951], "builtin": [3, 23, 54, 55, 63, 1213, 1272, 1737, 1877, 1879, 1881, 1930, 1932, 1953, 1963], "surpris": [3, 8, 46, 1875, 1908, 1914, 1952], "serial": [3, 14, 20, 23, 25, 27, 40, 1201, 1210, 1211, 1272, 1434, 1605, 1668, 1669, 1753, 1875, 1876, 1878, 1889, 1894, 1900, 1903, 1910, 1911, 1913, 1922, 1925, 1930, 1931], "subsequ": [3, 7, 13, 14, 23, 46, 54, 948, 978, 1201, 1212, 1216, 1362, 1363, 1364, 1365, 1366, 1367, 1434, 1462, 1610, 1611, 1903, 1915, 1918, 1930, 1934, 1948, 1953, 1956], "deseri": [3, 25, 1272, 1605, 1875, 1889, 1916, 1930], "globalsbridg": 3, "care": [3, 7, 13, 23, 29, 53, 54, 950, 1095, 1097, 1434, 1892, 1902, 1903, 1904, 1905, 1907, 1911, 1913, 1916, 1918, 1930, 1934, 1948, 1952, 1953, 1954], "reli": [3, 9, 13, 20, 21, 31, 33, 46, 54, 149, 889, 904, 950, 1074, 1371, 1692, 1900, 1902, 1904, 1905, 1915, 1916, 1934, 1938, 1952, 1953, 1954, 1957], "pickl": [3, 20, 21, 23, 1201, 1272, 1434, 1753, 1875, 1889, 1892, 1916, 1922, 1930], "transfer": [3, 20, 23, 46, 1888, 1892, 1903, 1909, 1911, 1922, 1930], "properli": [3, 7, 20, 21, 25, 27, 31, 40, 53, 1095, 1096, 1097, 1105, 1106, 1107, 1302, 1435, 1436, 1444, 1445, 1614, 1858, 1875, 1887, 1905, 1908, 1911, 1913, 1916, 1930, 1931, 1937], "profil": [3, 4, 37, 54, 948, 1214, 1608, 1609, 1610, 1611, 1770, 1876, 1920, 1930, 1945, 1953], "drive": [3, 9, 23, 1900, 1956], "facil": [3, 1272, 1892], "analyz": [3, 4, 17, 54, 1904, 1905, 1914, 1963], "manipul": [3, 46, 53, 1205, 1876, 1899, 1907, 1911, 1923, 1928, 1962], "1000000": [3, 1675], "mirror": [3, 138], "semant": [3, 9, 16, 23, 40, 41, 46, 54, 149, 790, 870, 871, 872, 889, 903, 930, 980, 1031, 1131, 1142, 1205, 1211, 1270, 1351, 1506, 1577, 1692, 1855, 1868, 1876, 1879, 1880, 1884, 1887, 1895, 1906, 1911, 1918, 1930, 1934], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 21, 1877], "consum": [3, 20, 25, 30, 42, 53, 432, 1074, 1892, 1903, 1913, 1918, 1919, 1939, 1956], "extrapol": 3, "sinc": [3, 7, 20, 21, 23, 28, 29, 33, 42, 46, 54, 313, 530, 743, 781, 789, 804, 805, 938, 950, 1023, 1025, 1027, 1074, 1114, 1115, 1116, 1130, 1198, 1201, 1206, 1211, 1214, 1290, 1350, 1377, 1430, 1431, 1432, 1434, 1486, 1498, 1533, 1535, 1602, 1605, 1608, 1637, 1656, 1661, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1695, 1696, 1697, 1703, 1818, 1877, 1878, 1879, 1880, 1886, 1888, 1890, 1895, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1916, 1917, 1918, 1920, 1922, 1923, 1924, 1925, 1929, 1930, 1931, 1932, 1934, 1935, 1937, 1938, 1940, 1941, 1948, 1953, 1956, 1959, 1962, 1963], "properti": [3, 20, 23, 24, 25, 29, 32, 37, 40, 46, 54, 788, 876, 908, 914, 1004, 1090, 1091, 1093, 1095, 1096, 1097, 1105, 1106, 1107, 1201, 1346, 1434, 1467, 1589, 1605, 1615, 1616, 1617, 1647, 1668, 1672, 1876, 1880, 1884, 1890, 1900, 1903, 1905, 1908, 1921, 1924, 1930, 1934, 1936, 1937, 1940, 1942, 1950, 1951, 1952, 1964, 1965], "significant_figur": 3, "figur": [3, 7, 8, 25, 54, 1902, 1904, 1905, 1918, 1923, 1932, 1939, 1944, 1953], "intend": [3, 40, 54, 886, 895, 982, 1220, 1498, 1608, 1609, 1610, 1611, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1692, 1880, 1895, 1898, 1900, 1911, 1922], "interquartil": 3, "mitig": [3, 55], "tail": [3, 20, 38], "645": 3, "conjunct": [3, 20, 23, 27, 46, 820, 1498, 1533, 1614, 1928, 1930], "trim_sigfig": 3, "human": [3, 12, 38, 1019, 1032, 1898, 1918, 1964], "raw": [3, 54, 1127, 1259, 1903, 1922], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 14, 20, 23, 25, 28, 29, 31, 38, 46, 53, 54, 492, 676, 756, 904, 1091, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1109, 1111, 1216, 1290, 1352, 1353, 1354, 1371, 1374, 1386, 1397, 1398, 1399, 1416, 1417, 1418, 1419, 1444, 1473, 1479, 1481, 1614, 1813, 1880, 1884, 1888, 1892, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1911, 1914, 1918, 1921, 1923, 1925, 1926, 1930, 1932, 1949, 1951, 1952, 1956, 1960, 1962], "functioncount": [3, 1876], "stat": [3, 49, 822, 832, 833, 1031, 1038, 1039, 1040, 1473, 1614, 1890, 1903, 1943, 1953, 1963], "as_standard": 3, "strip": [3, 1535, 1614, 1877, 1920, 1934], "prefix": [3, 23, 25, 40, 46, 744, 753, 1201, 1434, 1614, 1875, 1886, 1900, 1918, 1922, 1943], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 14, 17, 23, 29, 54, 676, 904, 1094, 1095, 1097, 1105, 1106, 1107, 1240, 1477, 1478, 1479, 1480, 1481, 1605, 1711, 1818, 1866, 1867, 1881, 1886, 1900, 1904, 1905, 1910, 1911, 1923, 1934, 1949, 1954, 1956, 1963], "locat": [3, 9, 13, 23, 29, 37, 82, 149, 153, 252, 509, 676, 930, 932, 989, 1053, 1054, 1222, 1272, 1298, 1303, 1306, 1324, 1371, 1381, 1468, 1485, 1498, 1533, 1598, 1601, 1614, 1626, 1722, 1757, 1779, 1800, 1803, 1857, 1875, 1877, 1889, 1903, 1916, 1918, 1922, 1924, 1930, 1932, 1934, 1939, 1943, 1948, 1952], "resembl": [3, 14], "23234231": 3, "first_build_dir": 3, "foo": [3, 13, 23, 37, 38, 53, 54, 55, 62, 63, 820, 850, 855, 948, 1130, 1131, 1140, 1199, 1204, 1208, 1211, 1212, 1215, 1216, 1656, 1858, 1860, 1875, 1877, 1879, 1880, 1884, 1905, 1911, 1918, 1922, 1941, 1948], "9823794": 3, "bar": [3, 7, 37, 54, 55, 62, 63, 850, 855, 966, 1130, 1204, 1211, 1816, 1817, 1863, 1864, 1875, 1877, 1879, 1889, 1911, 1918, 1922, 1941, 1956], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1198], "site": [3, 7], "denois": 3, "explan": [3, 9, 33, 858, 1201, 1434, 1876, 1904, 1905, 1911, 1953, 1960, 1963], "delta": [3, 29, 756, 1386, 1395, 1404, 1465, 1542, 1676, 1816, 1817, 1843, 1863, 1864, 1878, 1898], "inclus": [3, 29, 87, 509, 1161, 1163, 1271, 1287, 1293, 1732, 1733, 1815, 1929, 1941], "diff": [3, 7, 1877, 1878, 1920], "One": [3, 8, 13, 23, 25, 46, 49, 51, 54, 579, 927, 1131, 1142, 1192, 1486, 1570, 1621, 1624, 1692, 1697, 1705, 1732, 1733, 1853, 1868, 1877, 1879, 1880, 1894, 1895, 1901, 1902, 1903, 1905, 1910, 1923, 1932, 1939, 1949, 1950, 1951, 1952, 1961], "unit": [3, 11, 13, 29, 31, 41, 46, 54, 756, 757, 1092, 1110, 1346, 1356, 1376, 1379, 1384, 1385, 1386, 1387, 1452, 1453, 1463, 1498, 1522, 1526, 1531, 1532, 1578, 1586, 1630, 1631, 1635, 1638, 1640, 1643, 1845, 1891, 1900, 1902, 1908, 1922, 1947, 1948], "next": [3, 20, 23, 29, 40, 46, 54, 556, 756, 1205, 1338, 1387, 1405, 1451, 1614, 1649, 1892, 1899, 1900, 1902, 1905, 1906, 1911, 1913, 1923, 1924, 1930, 1931, 1934, 1937, 1939, 1950, 1951, 1953, 1956], "logic": [3, 5, 13, 20, 43, 46, 54, 920, 922, 923, 925, 1091, 1093, 1096, 1097, 1099, 1100, 1103, 1104, 1106, 1107, 1109, 1111, 1131, 1205, 1282, 1283, 1284, 1285, 1295, 1440, 1614, 1720, 1747, 1830, 1880, 1881, 1903, 1904, 1905, 1906, 1908, 1925, 1956], "question": [3, 10, 20, 54, 1658, 1876, 1900, 1945, 1952], "why": [3, 7, 20, 51, 54, 1074, 1205, 1583, 1876, 1887, 1906, 1952, 1961], "involv": [3, 5, 7, 9, 11, 20, 23, 46, 49, 51, 54, 1614, 1880, 1893, 1895, 1900, 1903, 1904, 1907, 1911, 1918, 1930, 1931, 1932, 1934, 1951, 1952], "look": [3, 4, 7, 8, 9, 14, 23, 29, 39, 40, 48, 51, 54, 858, 897, 899, 1201, 1295, 1342, 1434, 1524, 1639, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1804, 1805, 1806, 1808, 1809, 1877, 1879, 1893, 1899, 1900, 1903, 1906, 1910, 1911, 1913, 1917, 1918, 1922, 1925, 1930, 1931, 1944, 1948, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1960, 1962, 1963], "autom": [3, 8, 54, 1877, 1925, 1953, 1963], "easili": [3, 7, 8, 11, 21, 23, 1131, 1441, 1533, 1571, 1692, 1750, 1858, 1905, 1906, 1908, 1911, 1916, 1921, 1929, 1930, 1932, 1939, 1962, 1963], "exclus": [3, 20, 23, 29, 31, 40, 54, 731, 1163, 1614, 1732, 1733, 1736, 1900, 1941], "basi": [3, 9, 10, 29, 1273, 1697, 1903, 1910, 1925, 1930], "thought": [3, 37, 54, 1092, 1094, 1110], "path_and_function_nam": 3, "children": [3, 33, 46, 54, 787, 1201, 1434, 1892, 1911, 1922, 1932], "identifi": [3, 7, 9, 23, 31, 34, 37, 40, 41, 42, 54, 813, 1163, 1272, 1473, 1881, 1892, 1901, 1910, 1911, 1922, 1930, 1931, 1932, 1939, 1951, 1956, 1961], "hot": [3, 29, 1535, 1570, 1908, 1956], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 311, 560, 861, 1127, 1535, 1804, 1805, 1806, 1808, 1809, 1819, 1878, 1895, 1920, 1934], "index": [3, 14, 20, 21, 25, 29, 38, 54, 190, 207, 279, 310, 311, 312, 313, 314, 315, 317, 319, 320, 468, 469, 508, 509, 510, 511, 512, 513, 514, 515, 691, 692, 813, 850, 873, 888, 932, 993, 996, 1053, 1054, 1094, 1134, 1135, 1136, 1140, 1142, 1143, 1172, 1173, 1174, 1175, 1199, 1217, 1222, 1230, 1248, 1266, 1280, 1288, 1290, 1294, 1298, 1301, 1302, 1303, 1306, 1324, 1330, 1333, 1334, 1342, 1357, 1370, 1377, 1378, 1435, 1436, 1441, 1444, 1445, 1483, 1485, 1524, 1525, 1570, 1632, 1634, 1641, 1642, 1647, 1660, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1706, 1707, 1722, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1791, 1801, 1802, 1804, 1805, 1806, 1808, 1809, 1818, 1832, 1853, 1856, 1857, 1860, 1868, 1876, 1877, 1878, 1880, 1887, 1892, 1893, 1894, 1895, 1900, 1903, 1904, 1906, 1909, 1915, 1920, 1932, 1934, 1937, 1938, 1939, 1940, 1941, 1952, 1958, 1963], "cpython": [3, 54, 1945, 1950], "known": [3, 7, 9, 19, 23, 27, 34, 47, 50, 52, 1137, 1138, 1216, 1217, 1272, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1404, 1449, 1463, 1465, 1485, 1544, 1586, 1605, 1778, 1779, 1836, 1857, 1876, 1878, 1882, 1890, 1892, 1895, 1898, 1900, 1902, 1915, 1918, 1921, 1930, 1932, 1935, 1945, 1951, 1954, 1963], "quit": [3, 7, 54, 1880, 1905, 1907, 1922, 1930, 1961], "noisi": 3, "higher": [3, 7, 8, 21, 23, 46, 47, 52, 55, 60, 63, 149, 889, 890, 903, 980, 1020, 1031, 1066, 1132, 1138, 1142, 1161, 1178, 1331, 1370, 1426, 1441, 1583, 1722, 1823, 1868, 1876, 1903, 1905, 1906, 1908, 1910, 1916, 1925, 1926, 1930, 1937, 1951], "filter": [3, 540, 768, 769, 770, 1198, 1220, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1818, 1880, 1922, 1963], "rather": [3, 8, 9, 13, 23, 31, 33, 42, 46, 54, 55, 63, 775, 781, 913, 938, 1199, 1202, 1272, 1334, 1498, 1533, 1544, 1602, 1622, 1770, 1877, 1880, 1894, 1895, 1901, 1903, 1905, 1906, 1918, 1922, 1925, 1930, 1934, 1939, 1948, 1949, 1952, 1954, 1955, 1956], "unicod": [3, 1881], "dictionari": [3, 13, 20, 21, 29, 50, 54, 676, 788, 789, 790, 793, 811, 812, 813, 834, 835, 836, 850, 854, 860, 948, 1031, 1130, 1140, 1201, 1202, 1208, 1212, 1216, 1217, 1272, 1273, 1377, 1378, 1434, 1435, 1444, 1524, 1637, 1668, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1879, 1881, 1905, 1911, 1918, 1921, 1930, 1939, 1943, 1959, 1964], "lookup": [3, 25, 29, 1377, 1524, 1877, 1881, 1902, 1931, 1956, 1957], "map": [3, 13, 23, 29, 31, 37, 38, 40, 41, 46, 51, 52, 54, 55, 63, 680, 731, 788, 789, 793, 795, 810, 811, 813, 835, 836, 850, 851, 852, 853, 854, 860, 881, 929, 1131, 1142, 1154, 1163, 1208, 1211, 1272, 1273, 1365, 1366, 1367, 1373, 1374, 1375, 1379, 1381, 1430, 1431, 1432, 1435, 1444, 1519, 1520, 1521, 1526, 1621, 1637, 1672, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1722, 1724, 1854, 1855, 1868, 1881, 1894, 1896, 1900, 1904, 1905, 1906, 1912, 1917, 1922, 1925, 1928, 1930, 1931, 1932, 1936, 1941, 1952, 1956, 1962, 1964], "agnost": [3, 15, 40, 967, 968, 969, 970, 971, 972, 973, 1533, 1894], "reliabl": 3, "warrant": 3, "except": [3, 5, 7, 9, 13, 23, 24, 28, 29, 31, 32, 33, 37, 41, 46, 53, 54, 579, 583, 584, 613, 680, 689, 691, 692, 695, 756, 881, 904, 905, 935, 942, 946, 979, 989, 991, 1019, 1032, 1066, 1072, 1074, 1120, 1121, 1140, 1142, 1164, 1201, 1208, 1216, 1218, 1222, 1256, 1272, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1332, 1334, 1386, 1404, 1434, 1449, 1486, 1570, 1608, 1614, 1622, 1647, 1654, 1655, 1659, 1661, 1719, 1743, 1759, 1796, 1814, 1816, 1817, 1821, 1843, 1863, 1864, 1868, 1869, 1876, 1877, 1879, 1880, 1881, 1882, 1887, 1892, 1895, 1903, 1905, 1911, 1914, 1917, 1922, 1923, 1930, 1932, 1934, 1936, 1937, 1941, 1949, 1952, 1961, 1962], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 321, 326, 540, 610, 988, 1803, 1853, 1878, 1904, 1920, 1934, 1953, 1956], "finit": [4, 29, 904, 905, 1190, 1191, 1236, 1237, 1247, 1248, 1264, 1290, 1324, 1328, 1350, 1822, 1905, 1908, 1941], "natur": [4, 7, 8, 11, 23, 29, 46, 55, 57, 79, 904, 905, 1229, 1234, 1260, 1274, 1276, 1281, 1342, 1481, 1583, 1908, 1934, 1935], "against": [4, 5, 13, 23, 31, 40, 790, 861, 904, 905, 1102, 1103, 1104, 1108, 1109, 1111, 1143, 1192, 1201, 1216, 1217, 1434, 1440, 1673, 1875, 1880, 1922, 1944, 1960], "cprofil": 4, "mode": [4, 8, 20, 21, 23, 25, 29, 40, 42, 51, 52, 54, 220, 221, 742, 743, 768, 769, 770, 775, 781, 782, 783, 811, 813, 819, 822, 855, 856, 885, 887, 890, 891, 892, 897, 898, 899, 900, 904, 948, 975, 1008, 1048, 1049, 1078, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1131, 1134, 1135, 1136, 1137, 1140, 1141, 1149, 1176, 1184, 1185, 1199, 1201, 1202, 1205, 1216, 1218, 1259, 1272, 1302, 1315, 1316, 1352, 1353, 1354, 1362, 1363, 1364, 1378, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1450, 1473, 1486, 1487, 1508, 1509, 1510, 1525, 1533, 1544, 1571, 1602, 1603, 1604, 1615, 1622, 1626, 1659, 1697, 1705, 1721, 1764, 1766, 1767, 1857, 1876, 1878, 1888, 1893, 1898, 1903, 1904, 1906, 1907, 1911, 1920, 1924, 1926, 1927, 1928, 1930, 1942, 1950, 1951, 1952, 1953, 1954, 1955, 1963, 1964], "correct": [4, 6, 7, 21, 23, 24, 25, 29, 40, 204, 205, 208, 220, 551, 576, 599, 600, 611, 893, 905, 966, 1095, 1097, 1105, 1106, 1107, 1175, 1199, 1202, 1216, 1217, 1236, 1371, 1388, 1400, 1605, 1614, 1647, 1769, 1816, 1817, 1863, 1864, 1877, 1878, 1879, 1893, 1894, 1903, 1905, 1908, 1936, 1958, 1962], "launch": [4, 13, 20, 26, 31, 32, 33, 38, 39, 40, 43, 53, 978, 1614, 1876, 1900, 1902, 1903, 1904, 1905, 1930, 1948, 1955], "spent": [4, 23, 914, 1703, 1902, 1911, 1953, 1961, 1963], "appear": [4, 21, 23, 29, 54, 850, 1020, 1074, 1115, 1116, 1142, 1272, 1306, 1308, 1610, 1615, 1743, 1772, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1868, 1877, 1880, 1893, 1894, 1905, 1906, 1911, 1918, 1922, 1953], "extrem": [4, 1614, 1900, 1918, 1952, 1956], "expens": [4, 20, 29, 46, 1621, 1903, 1908, 1910, 1924, 1930, 1940, 1951, 1953, 1957, 1960, 1963], "bound": [4, 14, 21, 23, 46, 478, 791, 932, 943, 1088, 1089, 1201, 1347, 1348, 1349, 1427, 1428, 1429, 1434, 1452, 1533, 1705, 1736, 1757, 1880, 1881, 1898, 1900, 1922, 1925, 1935, 1951, 1952, 1963], "greater": [4, 23, 40, 55, 56, 290, 613, 676, 924, 937, 938, 943, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1145, 1157, 1255, 1319, 1350, 1482, 1533, 1544, 1570, 1583, 1602, 1622, 1655, 1857, 1878, 1900, 1903, 1915, 1920, 1934, 1935], "spend": [4, 7, 1273, 1957], "sens": [4, 29, 40, 54, 1637, 1854, 1855, 1880, 1900], "respons": [4, 7, 9, 23, 25, 27, 29, 31, 37, 42, 46, 53, 978, 1422, 1551, 1614, 1900, 1903, 1905, 1906, 1911, 1930, 1952], "Of": [4, 1660, 1875, 1904, 1905], "cours": [4, 54, 1875, 1904, 1905, 1930, 1956], "realiti": 4, "complic": [4, 21, 54, 789, 1884, 1894, 1901, 1922, 1930, 1932, 1952], "depend": [4, 5, 13, 20, 23, 27, 29, 31, 40, 41, 42, 46, 54, 313, 781, 874, 986, 1033, 1037, 1051, 1052, 1095, 1097, 1105, 1106, 1107, 1132, 1136, 1141, 1212, 1216, 1236, 1237, 1264, 1290, 1295, 1350, 1351, 1368, 1370, 1378, 1381, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1485, 1486, 1498, 1505, 1506, 1516, 1525, 1533, 1545, 1568, 1576, 1583, 1602, 1605, 1614, 1626, 1627, 1633, 1668, 1697, 1709, 1711, 1728, 1744, 1804, 1805, 1806, 1808, 1809, 1822, 1845, 1871, 1875, 1877, 1879, 1880, 1887, 1892, 1900, 1902, 1903, 1905, 1906, 1908, 1911, 1913, 1918, 1924, 1925, 1930, 1934, 1940, 1941, 1945, 1948, 1949, 1951, 1952, 1953, 1955, 1956, 1959, 1962], "could": [4, 5, 7, 8, 20, 23, 29, 31, 40, 46, 51, 53, 54, 579, 580, 581, 583, 584, 950, 1013, 1095, 1097, 1105, 1106, 1107, 1198, 1231, 1272, 1290, 1315, 1316, 1696, 1799, 1854, 1879, 1880, 1887, 1892, 1900, 1903, 1904, 1917, 1918, 1922, 1925, 1926, 1930, 1931, 1932, 1934, 1938, 1939, 1949, 1953, 1954, 1959, 1963], "account": [4, 38, 54, 1614, 1898, 1902, 1934, 1948], "heavili": [4, 1681, 1902, 1905, 1922], "similarli": [4, 7, 53, 54, 756, 786, 790, 854, 939, 1094, 1201, 1256, 1434, 1481, 1610, 1611, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1846, 1847, 1848, 1849, 1879, 1900, 1905, 1907, 1908, 1914, 1934, 1948, 1952, 1955], "platform": [4, 8, 9, 13, 23, 32, 33, 37, 1247, 1248, 1259, 1721, 1822, 1888, 1909, 1914, 1915, 1925], "startup": 4, "slower": [4, 13, 23, 872, 898, 1114, 1115, 1116, 1230, 1237, 1552, 1621, 1905, 1915, 1921, 1935, 1952], "rerun": [5, 23, 1903], "segment": [5, 1031, 1127, 1465, 1922, 1953, 1959], "persist": [5, 18, 25, 46, 756, 811, 812, 813, 1201, 1386, 1404, 1434, 1449, 1903, 1911, 1916, 1917, 1948, 1952, 1957], "rng": [5, 20, 1006, 1045, 1758, 1903, 1915, 1929], "advanc": [5, 14, 20, 21, 31, 1477, 1479, 1481, 1660, 1669, 1860, 1884, 1887, 1894, 1903, 1905, 1909, 1913, 1938, 1939, 1953], "juggl": 5, "dropout": [5, 54, 730, 731, 756, 1201, 1346, 1373, 1374, 1375, 1379, 1386, 1404, 1434, 1440, 1449, 1450, 1477, 1479, 1481, 1499, 1519, 1520, 1521, 1526, 1583, 1876, 1878, 1888, 1894, 1895, 1900, 1903, 1920, 1927], "moder": 5, "hit": [5, 8, 13, 1614, 1875, 1903, 1948, 1953, 1957, 1963], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1876], "omit": [5, 13, 23, 41, 1108, 1109, 1111, 1388, 1448, 1917, 1918, 1930, 1941, 1954], "exclud": [5, 9, 21, 40, 54, 954, 1163, 1378, 1525, 1573, 1673, 1846, 1847, 1848, 1849, 1900, 1909, 1922, 1931, 1950, 1953], "_infer_device_typ": 5, "remain": [5, 8, 29, 40, 54, 1308, 1377, 1378, 1524, 1525, 1605, 1614, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1722, 1744, 1890, 1892, 1899, 1907, 1911], "consequ": [5, 51, 1264, 1404, 1822, 1880, 1900, 1903, 1913, 1915], "random": [5, 29, 31, 40, 41, 47, 54, 79, 87, 153, 756, 888, 918, 1006, 1007, 1012, 1021, 1022, 1041, 1042, 1045, 1046, 1135, 1142, 1153, 1177, 1273, 1293, 1313, 1314, 1318, 1320, 1346, 1357, 1379, 1386, 1404, 1452, 1526, 1576, 1581, 1605, 1622, 1628, 1634, 1635, 1642, 1643, 1662, 1711, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1758, 1771, 1823, 1860, 1868, 1875, 1876, 1878, 1886, 1898, 1906, 1908, 1914, 1918, 1920, 1939, 1953, 1963], "gradient": [5, 11, 20, 21, 23, 27, 29, 46, 47, 50, 149, 220, 221, 288, 333, 484, 491, 509, 691, 692, 876, 885, 887, 889, 891, 892, 893, 894, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 909, 910, 919, 945, 1078, 1130, 1131, 1132, 1133, 1137, 1142, 1143, 1176, 1201, 1236, 1237, 1240, 1247, 1248, 1264, 1273, 1290, 1292, 1298, 1301, 1303, 1350, 1357, 1365, 1366, 1367, 1370, 1371, 1377, 1378, 1388, 1402, 1403, 1434, 1441, 1465, 1516, 1517, 1524, 1525, 1535, 1544, 1552, 1554, 1555, 1568, 1602, 1603, 1604, 1610, 1611, 1614, 1615, 1618, 1619, 1621, 1626, 1659, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1695, 1696, 1709, 1767, 1803, 1822, 1868, 1876, 1877, 1878, 1887, 1894, 1895, 1898, 1903, 1904, 1905, 1907, 1908, 1911, 1914, 1920, 1921, 1930, 1931, 1934, 1953, 1961], "among": [5, 20, 21, 23, 27, 29, 40, 987, 988, 991, 1163, 1371, 1662, 1880, 1913, 1952], "detect": [5, 13, 16, 17, 20, 23, 24, 31, 33, 46, 897, 898, 899, 900, 901, 902, 948, 1131, 1205, 1477, 1478, 1480, 1614, 1857, 1876, 1892, 1895, 1903, 1908, 1914, 1918, 1922, 1930, 1951, 1953, 1963], "priorit": [5, 1134, 1135, 1137, 1678, 1679, 1934], "defaultdevicetyp": 5, "anticip": 5, "belong": [5, 23, 25, 27, 29, 37, 54, 932, 980, 1693, 1875, 1903, 1921, 1956, 1962, 1964], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 54, 1372, 1628, 1843, 1896, 1911, 1921, 1923, 1925, 1947, 1956, 1963], "intermedi": [5, 13, 30, 51, 54, 929, 1125, 1131, 1138, 1290, 1378, 1477, 1479, 1481, 1525, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1877, 1880, 1903, 1905, 1906, 1907, 1914, 1944, 1951, 1952], "entir": [5, 7, 13, 20, 23, 31, 41, 54, 693, 904, 905, 1131, 1154, 1373, 1374, 1375, 1379, 1397, 1398, 1399, 1406, 1519, 1520, 1521, 1526, 1614, 1632, 1634, 1658, 1880, 1895, 1900, 1903, 1905, 1906, 1907, 1910, 1911, 1918, 1922, 1925, 1930, 1932, 1934, 1949, 1950, 1951, 1952, 1953, 1956, 1963], "graph": [5, 8, 23, 25, 29, 46, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 77, 78, 138, 149, 220, 221, 676, 743, 788, 789, 811, 812, 813, 819, 822, 889, 895, 903, 948, 950, 975, 1010, 1015, 1020, 1131, 1201, 1204, 1205, 1210, 1212, 1216, 1614, 1668, 1669, 1673, 1678, 1679, 1682, 1876, 1880, 1886, 1888, 1896, 1899, 1904, 1905, 1908, 1911, 1912, 1918, 1922, 1926, 1927, 1928, 1930, 1931, 1932, 1934, 1939, 1944, 1945, 1949, 1950, 1951, 1952, 1954, 1955, 1956, 1957, 1959, 1960], "recomput": [5, 895, 1486, 1544, 1658, 1921, 1951], "refer": [5, 13, 20, 21, 23, 24, 25, 27, 29, 32, 35, 36, 40, 41, 46, 47, 53, 79, 81, 252, 730, 731, 752, 760, 788, 789, 790, 815, 816, 817, 820, 821, 822, 855, 869, 874, 889, 930, 1013, 1018, 1077, 1127, 1149, 1150, 1182, 1189, 1201, 1204, 1212, 1219, 1232, 1253, 1257, 1270, 1273, 1357, 1388, 1434, 1483, 1498, 1506, 1515, 1533, 1544, 1601, 1614, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1711, 1728, 1764, 1786, 1823, 1857, 1875, 1876, 1878, 1892, 1893, 1895, 1896, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1911, 1913, 1915, 1918, 1921, 1926, 1927, 1930, 1931, 1934, 1937, 1938, 1939, 1942, 1945, 1949, 1955, 1956, 1959, 1963], "potenti": [5, 8, 23, 40, 42, 46, 79, 190, 207, 1210, 1246, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1614, 1857, 1879, 1887, 1892, 1900, 1903, 1905, 1922, 1934, 1938, 1951, 1953, 1956], "silent": [5, 1021, 1022, 1041, 1042, 1175, 1216, 1434, 1618, 1619, 1903, 1914, 1918], "consider": [5, 7, 880, 1198, 1378, 1614, 1880, 1902], "limit": [5, 8, 9, 20, 46, 47, 52, 1044, 1131, 1214, 1319, 1357, 1377, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1583, 1614, 1637, 1770, 1876, 1880, 1884, 1892, 1894, 1895, 1900, 1903, 1904, 1911, 1914, 1915, 1916, 1922, 1925, 1928, 1930, 1931, 1934, 1941, 1951, 1952, 1953, 1956, 1960, 1963], "reentrant": [5, 1614], "stop": [5, 29, 31, 40, 41, 42, 861, 1013, 1199, 1273, 1357, 1647, 1705, 1737, 1877, 1880, 1930, 1954], "soon": [5, 40, 46, 789, 1900, 1925, 1930, 1932, 1956], "set_checkpoint_early_stop": 5, "entireti": 5, "no_grad": [5, 857, 1078, 1132, 1136, 1141, 1176, 1201, 1377, 1434, 1440, 1481, 1615, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1898, 1900, 1911, 1942], "condit": [5, 18, 20, 51, 54, 55, 58, 62, 63, 613, 616, 620, 690, 756, 898, 904, 905, 1198, 1216, 1230, 1232, 1240, 1246, 1247, 1248, 1259, 1264, 1386, 1404, 1449, 1481, 1649, 1654, 1845, 1871, 1877, 1878, 1879, 1881, 1895, 1900, 1905, 1914, 1923, 1939, 1951, 1952, 1958], "unmet": 5, "particip": [5, 9, 20, 23, 24, 27, 40, 41, 1614, 1931, 1951], "wherea": [5, 1256, 1315, 1316, 1329, 1692, 1822, 1880, 1941, 1952], "know": [5, 7, 8, 13, 24, 30, 54, 483, 893, 898, 1125, 1131, 1211, 1614, 1877, 1880, 1887, 1899, 1900, 1903, 1905, 1908, 1918, 1922, 1930, 1931, 1932, 1934, 1948, 1951, 1952, 1953, 1956], "lstm": [5, 759, 1405, 1878, 1903, 1918, 1920, 1925, 1927, 1928, 1939], "hidden": [5, 756, 1140, 1386, 1387, 1404, 1405, 1449, 1451, 1615, 1903, 1939], "correctli": [5, 20, 23, 40, 46, 483, 1131, 1201, 1216, 1434, 1552, 1877, 1879, 1880, 1890, 1894, 1899, 1900, 1904, 1905, 1906, 1913, 1915, 1925, 1930], "entrant": 5, "futur": [5, 8, 9, 21, 23, 25, 31, 40, 41, 44, 51, 54, 288, 319, 509, 513, 553, 676, 683, 789, 811, 812, 813, 822, 857, 895, 938, 939, 948, 959, 960, 974, 975, 977, 978, 980, 1009, 1010, 1017, 1018, 1020, 1147, 1201, 1204, 1210, 1211, 1214, 1219, 1231, 1242, 1244, 1245, 1246, 1249, 1262, 1290, 1291, 1302, 1312, 1374, 1434, 1535, 1557, 1558, 1559, 1606, 1614, 1618, 1655, 1656, 1661, 1681, 1721, 1737, 1818, 1822, 1845, 1876, 1877, 1878, 1879, 1880, 1881, 1886, 1887, 1888, 1890, 1894, 1895, 1902, 1903, 1905, 1916, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1934, 1936, 1940, 1941, 1942, 1944, 1951, 1953, 1958], "turn": [5, 13, 20, 51, 54, 676, 869, 948, 1189, 1216, 1478, 1480, 1804, 1805, 1806, 1807, 1808, 1809, 1887, 1900, 1903, 1914, 1915, 1918, 1924, 1925, 1931, 1934, 1952, 1955, 1956, 1961], "open": [5, 8, 9, 13, 20, 29, 40, 47, 685, 911, 1124, 1208, 1272, 1295, 1305, 1550, 1877, 1887, 1892, 1895, 1909, 1917, 1918, 1922, 1925, 1930, 1934, 1935, 1953, 1961], "ran": [5, 17, 46, 1953, 1959, 1963], "sequenti": [5, 20, 27, 46, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 1142, 1201, 1210, 1380, 1434, 1473, 1484, 1623, 1637, 1706, 1868, 1877, 1892, 1895, 1903, 1911, 1918, 1921, 1923, 1925, 1944, 1953, 1961, 1963], "func": [5, 23, 28, 49, 51, 54, 55, 57, 858, 888, 890, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 905, 1176, 1204, 1216, 1217, 1656, 1860, 1868, 1876, 1880, 1899, 1930, 1932, 1964], "compris": [5, 41], "chunk": [5, 20, 23, 25, 46, 935, 991, 1136, 1371, 1614, 1810, 1877, 1878, 1893, 1920, 1921, 1923, 1930, 1934, 1938], "input_var": [5, 1371], "person": [6, 7, 9], "land": [6, 9, 10, 1960], "six": [6, 1364], "commit": [6, 7, 9, 13, 47, 1875, 1876, 1914, 1915, 1960], "repositori": [6, 9, 50, 54, 1875, 1913], "submit": [6, 9, 977, 978, 980, 1312, 1903, 1915, 1960], "month": [6, 9], "qualifi": [6, 23, 28, 37, 54, 676, 1201, 1434, 1672, 1886, 1922], "pr": [6, 7, 1711, 1823, 1944], "interest": [6, 7, 9, 1900, 1906, 1908, 1911, 1950, 1952, 1957, 1961], "merge_rul": 6, "vote": [6, 9], "decis": [6, 25, 31, 40, 42, 54, 1216, 1887, 1899, 1951], "criteria": [6, 9, 1273], "approv": [6, 9], "Not": [6, 41, 1332, 1481, 1877, 1879, 1880, 1881, 1905, 1920, 1925, 1930, 1956], "busi": [6, 9, 1957], "dai": [6, 7, 1952, 1960], "contributor": [6, 7, 8, 9], "seen": [6, 17, 29, 54, 220, 935, 948, 1302, 1365, 1366, 1367, 1465, 1557, 1558, 1559, 1705, 1877, 1887, 1900, 1903, 1918, 1934, 1956], "thumb": [6, 23], "acceler": [7, 21, 1352, 1353, 1354, 1473, 1675, 1909, 1945, 1948, 1953], "deep": [7, 9, 54, 1352, 1353, 1354, 1376, 1473, 1691, 1876, 1898, 1911, 1925, 1947, 1951, 1963], "neural": [7, 8, 14, 54, 1346, 1357, 1372, 1379, 1388, 1400, 1433, 1434, 1441, 1446, 1447, 1461, 1463, 1477, 1479, 1481, 1563, 1586, 1624, 1689, 1697, 1703, 1877, 1879, 1880, 1898, 1903, 1905, 1914, 1918, 1925, 1951], "tape": [7, 1948], "system": [7, 8, 13, 14, 16, 20, 41, 51, 54, 941, 955, 1154, 1208, 1232, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1261, 1262, 1263, 1267, 1272, 1291, 1319, 1477, 1479, 1481, 1614, 1624, 1626, 1766, 1845, 1881, 1886, 1890, 1900, 1902, 1903, 1910, 1911, 1913, 1917, 1922, 1930, 1951, 1961], "organ": [7, 1904, 1910, 1922, 1953, 1956], "govern": [7, 8, 1876, 1925], "technic": [7, 9, 40, 46, 54, 1201, 1434, 1610, 1611, 1900, 1907, 1913, 1922, 1951], "md": [7, 54, 788, 1922], "healthi": [7, 31, 40], "team": [7, 23, 47, 79, 80, 82, 1916, 1923], "commun": [7, 8, 9, 24, 25, 27, 31, 40, 42, 46, 676, 1614, 1900, 1904, 1930, 1931, 1953], "project": [7, 25, 1302, 1404, 1440, 1626, 1711, 1875, 1909, 1962], "ve": [7, 49, 50, 51, 54, 1205, 1860, 1887, 1892, 1900, 1906, 1931, 1939, 1952, 1953, 1956], "come": [7, 8, 9, 20, 28, 29, 30, 37, 40, 47, 51, 948, 1074, 1125, 1131, 1201, 1272, 1373, 1374, 1375, 1379, 1400, 1670, 1884, 1888, 1904, 1906, 1910, 1922, 1930, 1932, 1934, 1956, 1959], "peopl": [7, 1900, 1925, 1955], "scratch": [7, 1900, 1963], "itch": 7, "acquaint": 7, "tip": [7, 1903, 1953], "tracker": [7, 1273], "confirm": [7, 1875, 1877, 1905, 1918, 1930, 1932, 1959], "tend": [7, 899, 1857], "bootcamp": 7, "1hr": 7, "although": [7, 8, 29, 51, 54, 1365, 1366, 1367, 1434, 1442, 1614, 1876, 1880, 1899, 1905, 1914, 1923, 1925, 1961, 1962], "join": [7, 21, 23, 27, 40, 41, 53, 54, 1614, 1875, 1876, 1881, 1892, 1900, 1904, 1913, 1920, 1940], "u": [7, 8, 47, 52, 54, 55, 756, 897, 939, 940, 941, 1237, 1239, 1243, 1247, 1248, 1264, 1290, 1292, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1404, 1405, 1419, 1421, 1449, 1451, 1452, 1473, 1484, 1626, 1711, 1822, 1823, 1877, 1878, 1887, 1894, 1898, 1900, 1903, 1904, 1905, 1906, 1911, 1922, 1924, 1934, 1938, 1939, 1951, 1953, 1956, 1957, 1958, 1963], "dev": [7, 10, 32, 37, 1950, 1963], "happi": 7, "research": [7, 8, 9, 1614, 1875, 1900, 1908, 1916], "partner": [7, 1945], "speed": [7, 8, 13, 27, 46, 986, 1074, 1130, 1192, 1205, 1210, 1264, 1342, 1440, 1822, 1900, 1902, 1903, 1904, 1905, 1907, 1909, 1914, 1925, 1930, 1956], "reach": [7, 8, 9, 20, 21, 23, 24, 31, 40, 47, 1273, 1614, 1694, 1697, 1700, 1701, 1900, 1905, 1913, 1923, 1925, 1926, 1930, 1950], "design": [7, 9, 20, 29, 37, 40, 47, 50, 51, 52, 904, 905, 1201, 1220, 1434, 1668, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1833, 1875, 1876, 1890, 1903, 1905, 1909, 1911, 1922, 1950, 1951, 1953, 1955, 1958, 1963], "comment": [7, 54, 1658, 1761, 1880, 1881, 1905, 1937, 1939, 1957], "crack": 7, "usual": [7, 13, 20, 21, 25, 40, 41, 46, 54, 80, 83, 478, 827, 828, 829, 830, 837, 889, 897, 899, 903, 1142, 1373, 1374, 1375, 1379, 1394, 1397, 1398, 1399, 1400, 1605, 1614, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1868, 1877, 1880, 1895, 1899, 1900, 1902, 1903, 1905, 1907, 1910, 1921, 1926, 1928, 1930, 1939, 1947, 1952, 1957, 1964], "idea": [7, 47, 1074, 1342, 1614, 1903, 1910, 1918, 1931, 1953], "rfc": [7, 1900, 1925, 1931], "big": [7, 1678, 1679, 1682, 1688, 1689, 1804, 1805, 1806, 1807, 1808, 1809, 1921, 1925, 1952, 1957], "post": [7, 8, 24, 25, 27, 46, 852, 853, 857, 1201, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1876, 1884, 1900, 1904, 1905, 1907, 1917, 1934, 1950, 1952, 1963], "standard": [7, 13, 17, 21, 29, 33, 34, 38, 51, 54, 83, 350, 375, 585, 1094, 1346, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1400, 1406, 1473, 1479, 1481, 1662, 1711, 1734, 1780, 1785, 1816, 1817, 1879, 1881, 1895, 1898, 1902, 1903, 1913, 1914, 1918, 1919, 1922, 1935], "lot": [7, 13, 20, 1892, 1900, 1903, 1908, 1913, 1922, 1923, 1929, 1931, 1939, 1951, 1952, 1956, 1957], "boil": 7, "mostli": [7, 29, 1199, 1614, 1903, 1934, 1964], "evid": 7, "peer": [7, 23, 27, 40, 46, 984, 1614, 1903, 1930], "paper": [7, 9, 21, 29, 756, 1342, 1346, 1352, 1353, 1354, 1356, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1379, 1382, 1383, 1386, 1389, 1392, 1397, 1398, 1399, 1406, 1440, 1446, 1447, 1452, 1461, 1465, 1473, 1477, 1479, 1481, 1482, 1483, 1528, 1529, 1538, 1678, 1679, 1690, 1697, 1703, 1908, 1923], "framework": [7, 8, 9, 29, 37, 47, 53, 756, 982, 1310, 1386, 1614, 1621, 1691, 1770, 1876, 1912, 1923, 1925, 1931, 1932], "bit": [7, 54, 87, 328, 455, 757, 759, 761, 815, 816, 817, 818, 821, 823, 854, 921, 924, 959, 960, 1127, 1181, 1745, 1746, 1758, 1787, 1903, 1911, 1914, 1917, 1925, 1928, 1929, 1934, 1937, 1940, 1956, 1957, 1965], "accept": [7, 9, 20, 23, 25, 28, 46, 47, 48, 50, 52, 149, 509, 798, 885, 886, 887, 888, 889, 894, 903, 938, 1017, 1020, 1126, 1142, 1163, 1201, 1205, 1370, 1434, 1441, 1462, 1481, 1633, 1647, 1648, 1654, 1674, 1762, 1799, 1813, 1868, 1880, 1894, 1903, 1905, 1906, 1918, 1921, 1930, 1937, 1939, 1963], "overwhelm": [7, 1930, 1963], "newli": [7, 46, 54, 1088, 1089, 1377, 1378, 1723, 1724, 1884, 1956], "publish": [7, 9, 32, 37, 40, 1273, 1876], "ground": [7, 9, 1370, 1516, 1939], "break": [7, 29, 44, 49, 54, 676, 889, 948, 950, 1201, 1246, 1434, 1750, 1770, 1876, 1881, 1886, 1904, 1921, 1934, 1948, 1950, 1951, 1954, 1956, 1957, 1959], "becom": [7, 8, 9, 20, 23, 29, 54, 288, 756, 872, 1154, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1386, 1404, 1419, 1439, 1449, 1462, 1516, 1533, 1605, 1695, 1795, 1843, 1887, 1888, 1900, 1904, 1905, 1918, 1922, 1924, 1930, 1956, 1963], "refactor": [7, 54, 1917, 1925], "coordin": [7, 23, 25, 29, 31, 579, 582, 880, 1154, 1163, 1302, 1715, 1807, 1847, 1849, 1900, 1934, 1939, 1953, 1963], "pace": 7, "branch": [7, 54, 55, 58, 60, 62, 63, 1875, 1879, 1880, 1903, 1951, 1960], "fast": [7, 8, 20, 23, 904, 1376, 1397, 1398, 1399, 1465, 1481, 1583, 1703, 1709, 1728, 1750, 1765, 1876, 1902, 1903, 1905, 1909, 1921, 1930, 1934, 1937, 1938, 1945, 1952, 1955, 1957], "definit": [7, 8, 20, 23, 24, 29, 36, 54, 80, 939, 940, 941, 966, 1017, 1122, 1221, 1230, 1231, 1273, 1400, 1545, 1590, 1661, 1741, 1843, 1875, 1877, 1879, 1881, 1899, 1900, 1905, 1908, 1922, 1925, 1939, 1941, 1956], "fundament": [7, 51, 1879, 1911, 1930, 1934, 1952], "cut": [7, 1953], "guidanc": [7, 9, 14, 48, 1923, 1951], "stage": [7, 17, 21, 27, 37, 46, 53, 1876, 1887, 1895, 1923, 1932, 1963], "piec": [7, 1886, 1895, 1931, 1956], "advic": 7, "readi": [7, 13, 53, 857, 858, 917, 926, 1158, 1159, 1614, 1877, 1904, 1930, 1931, 1948], "draft": 7, "convert": [7, 20, 23, 28, 29, 30, 46, 50, 54, 77, 149, 576, 580, 581, 582, 583, 584, 731, 784, 785, 786, 788, 789, 790, 811, 812, 813, 834, 835, 850, 853, 854, 855, 875, 876, 934, 947, 1058, 1094, 1125, 1201, 1270, 1434, 1444, 1445, 1473, 1480, 1605, 1616, 1617, 1620, 1657, 1668, 1670, 1673, 1692, 1723, 1724, 1729, 1804, 1805, 1806, 1807, 1808, 1809, 1877, 1878, 1879, 1880, 1895, 1905, 1909, 1918, 1919, 1925, 1928, 1934, 1939, 1941, 1944, 1945, 1956, 1962, 1963], "press": [7, 54], "button": [7, 1960], "prepend": [7, 13, 20, 23, 27, 54, 228, 1066, 1201, 1295, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1839, 1878, 1901], "titl": [7, 1920, 1924], "wip": 7, "progress": [7, 23, 27, 31, 41, 43, 977, 1312, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1862, 1875, 1889], "ci": [7, 1876, 1960], "folk": 7, "who": [7, 8, 9, 11, 40, 55, 1922, 1956], "regularli": 7, "queue": [7, 31, 42, 1892, 1939], "everyth": [7, 20, 29, 50, 55, 1877, 1892, 1922, 1951, 1953, 1956, 1957, 1963], "happen": [7, 9, 23, 25, 27, 29, 31, 33, 40, 46, 51, 54, 83, 603, 787, 810, 1131, 1473, 1614, 1621, 1694, 1700, 1701, 1707, 1822, 1876, 1890, 1892, 1900, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1917, 1918, 1925, 1930, 1938, 1948, 1956], "subsystem": [7, 11, 47, 52, 950, 1876, 1905], "patch": [7, 48, 1381, 1485, 1858, 1954], "feel": [7, 1895, 1918, 1934], "ll": [7, 51, 54, 756, 816, 817, 857, 858, 939, 1020, 1230, 1386, 1387, 1404, 1405, 1887, 1900, 1903, 1905, 1906, 1913, 1918, 1925, 1931, 1949, 1952, 1957, 1961], "round": [7, 20, 23, 55, 57, 63, 504, 661, 662, 795, 798, 816, 861, 962, 964, 1031, 1069, 1095, 1096, 1097, 1101, 1105, 1106, 1107, 1122, 1246, 1259, 1486, 1544, 1721, 1722, 1741, 1790, 1878, 1880, 1893, 1903, 1920, 1925, 1928, 1934, 1935, 1958], "trip": [7, 54, 1095, 1096, 1097, 1101, 1105, 1106, 1107], "noth": [7, 13, 31, 54, 676, 1011, 1626, 1678, 1679, 1706, 1877, 1879, 1932], "accompani": [7, 78], "solut": [7, 8, 51, 1245, 1246, 1250, 1258, 1261, 1263, 1267, 1350, 1614, 1845, 1877, 1878, 1898, 1899, 1907, 1913], "think": [7, 9, 54, 55, 1692, 1877, 1879, 1900, 1921, 1922, 1932, 1952, 1954], "confid": [7, 1939, 1954], "ahead": [7, 1876, 1925, 1945, 1951, 1953], "search": [7, 11, 21, 815, 932, 1392, 1538, 1614, 1673, 1728, 1757, 1877, 1893, 1894, 1918, 1922, 1934, 1949, 1952, 1960], "repo": [7, 55, 1697, 1875, 1905, 1917], "unabl": [7, 51, 77, 1918, 1921], "similar": [7, 9, 20, 23, 29, 37, 46, 51, 53, 54, 489, 511, 708, 709, 710, 711, 712, 713, 716, 726, 727, 728, 729, 741, 742, 752, 760, 798, 873, 888, 929, 934, 947, 948, 1120, 1121, 1201, 1368, 1369, 1381, 1394, 1397, 1398, 1399, 1434, 1482, 1515, 1647, 1661, 1662, 1692, 1715, 1743, 1750, 1799, 1833, 1839, 1855, 1879, 1880, 1892, 1893, 1895, 1900, 1902, 1903, 1905, 1906, 1908, 1914, 1918, 1922, 1923, 1925, 1930, 1931, 1934, 1935, 1940, 1951, 1952, 1953, 1955, 1956, 1959, 1963, 1965], "reproduc": [7, 20, 51, 311, 319, 511, 513, 919, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1430, 1431, 1432, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1544, 1571, 1583, 1602, 1603, 1604, 1605, 1857, 1875, 1876, 1921, 1922, 1963], "problemat": [7, 20, 54, 1877, 1914, 1926], "insight": [7, 17], "individu": [7, 9, 13, 20, 21, 23, 25, 27, 46, 54, 78, 240, 676, 788, 834, 835, 939, 1040, 1092, 1110, 1201, 1357, 1434, 1473, 1614, 1668, 1880, 1893, 1899, 1900, 1903, 1905, 1910, 1914, 1915, 1918, 1928, 1930, 1941, 1948, 1955, 1960], "intent": [7, 38, 40, 46, 51, 1762, 1887, 1922, 1959], "lock": [7, 20, 23, 27, 29, 1900, 1903, 1913, 1922, 1931], "strike": 7, "convers": [7, 455, 576, 579, 789, 933, 1186, 1647, 1876, 1881, 1905, 1909, 1918, 1925, 1926, 1934, 1952, 1962], "medium": [7, 46, 1765], "prioriti": [7, 9, 10, 23, 676, 850, 980, 1879, 1916], "entranc": [7, 1903], "great": [7, 1900, 1908, 1948, 1951], "deal": [7, 8, 20, 31, 42, 1838, 1892, 1907, 1930, 1951, 1952, 1956, 1957], "welcom": [7, 1895, 1921, 1934], "aim": [7, 1906, 1934, 1945], "rare": [7, 1899, 1918, 1951, 1954, 1964], "typo": 7, "send": [7, 20, 23, 31, 42, 1013, 1605, 1614, 1892, 1904, 1913, 1917, 1920, 1924, 1930, 1931, 1932, 1942, 1944, 1952, 1955], "forum": [7, 9, 1907, 1913], "share": [7, 10, 13, 20, 24, 27, 29, 30, 40, 41, 46, 51, 220, 309, 338, 455, 480, 516, 520, 613, 855, 875, 876, 893, 904, 905, 948, 975, 977, 1009, 1013, 1125, 1126, 1127, 1171, 1248, 1333, 1334, 1371, 1614, 1624, 1662, 1739, 1753, 1813, 1836, 1842, 1856, 1878, 1899, 1900, 1902, 1913, 1916, 1917, 1918, 1930, 1934, 1936, 1938, 1943, 1948], "resolv": [7, 8, 9, 25, 29, 46, 54, 77, 78, 1201, 1365, 1366, 1367, 1381, 1431, 1434, 1879, 1880, 1881, 1917, 1922, 1936, 1951, 1964], "challeng": [7, 23, 1931, 1953], "feedback": [7, 17, 21, 46, 47, 1614, 1876, 1934], "direct": [7, 9, 11, 23, 756, 788, 1115, 1116, 1201, 1386, 1404, 1434, 1449, 1658, 1690, 1711, 1728, 1749, 1900, 1903, 1905, 1911, 1930, 1956, 1962], "yourself": [7, 49, 975, 1858, 1905, 1911, 1913, 1953, 1964], "problem": [7, 20, 23, 40, 51, 55, 1074, 1216, 1246, 1258, 1273, 1370, 1441, 1498, 1761, 1892, 1900, 1903, 1907, 1908, 1913, 1917, 1923, 1925, 1926, 1932, 1937, 1945, 1951, 1953, 1963], "area": [7, 9, 1544, 1911, 1925, 1935], "appreci": 7, "strive": 7, "respond": [7, 23], "quickli": [7, 8, 21, 40, 1955], "ey": [7, 29, 190, 207, 940, 1142, 1221, 1230, 1241, 1252, 1255, 1258, 1259, 1266, 1267, 1621, 1721, 1800, 1868, 1878, 1882, 1905, 1920], "everyon": [7, 31, 40], "touch": [7, 38, 54], "versu": [7, 1438], "write": [7, 8, 9, 15, 17, 20, 23, 25, 31, 33, 37, 38, 39, 40, 46, 51, 52, 77, 78, 252, 509, 693, 930, 950, 1126, 1142, 1178, 1211, 1231, 1242, 1243, 1244, 1248, 1249, 1262, 1601, 1669, 1753, 1845, 1857, 1868, 1876, 1879, 1890, 1894, 1903, 1906, 1907, 1908, 1921, 1922, 1934, 1939, 1945, 1951, 1953, 1955, 1957, 1963], "blog": [7, 8, 1884, 1904, 1905, 1925, 1934], "around": [7, 9, 11, 23, 29, 50, 51, 53, 54, 149, 620, 889, 903, 972, 975, 977, 978, 980, 1049, 1120, 1121, 1131, 1201, 1312, 1614, 1750, 1877, 1892, 1900, 1903, 1918, 1930, 1948, 1956], "internet": 7, "grow": [7, 8, 54, 1934], "market": [7, 9], "benefit": [7, 8, 23, 54, 843, 1705, 1892, 1903, 1925, 1934, 1963], "opinion": [7, 8, 1934], "isn": [7, 20, 54, 455, 1198, 1900, 1903, 1905, 1930, 1941, 1952], "categor": [7, 33, 1535, 1876, 1881, 1926, 1930, 1962], "aspect": [7, 23, 54, 1905, 1911], "seem": [7, 1918], "unusu": [7, 1952], "claim": [7, 1703, 1908], "wast": [7, 1903], "someon": [7, 9, 1199, 1894], "too": [7, 9, 13, 21, 25, 40, 51, 54, 1031, 1130, 1246, 1264, 1330, 1357, 1370, 1434, 1517, 1615, 1656, 1880, 1902, 1907, 1908, 1913, 1914, 1915, 1917, 1918, 1919, 1922, 1923, 1932, 1934, 1951, 1952, 1963], "advisori": 7, "fashion": [7, 20, 23, 42, 511, 1278, 1637, 1877], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 1963], "wrote": [7, 8], "implicitli": [7, 23, 33, 54, 1057, 1146, 1154, 1216, 1217, 1272, 1347, 1348, 1349, 1427, 1428, 1429, 1762, 1843, 1877, 1879, 1880, 1900, 1905, 1909], "lifetim": [7, 1903, 1930, 1952], "immedi": [7, 8, 9, 40, 41, 46, 53, 1201, 1204, 1434, 1880, 1911, 1916, 1921, 1930, 1932, 1951, 1952], "sai": [7, 54, 492, 1134, 1135, 1136, 1201, 1434, 1877, 1899, 1900, 1907, 1922, 1931, 1932, 1934, 1948, 1951, 1956, 1957, 1962], "bugfix": 7, "Or": [7, 31, 54, 876, 943, 1909, 1912, 1918, 1934, 1956], "motiv": [7, 8, 54, 731, 1911, 1931, 1963], "ye": [7, 1918, 1921, 1934], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1372, 1614], "ok": [7, 33, 38, 50, 948, 1206, 1932], "sometim": [7, 54, 900, 1031, 1216, 1381, 1485, 1511, 1512, 1513, 1626, 1876, 1880, 1892, 1900, 1903, 1906, 1907, 1911, 1913, 1922, 1937, 1940, 1951, 1952, 1957, 1964], "obvious": [7, 1952], "broken": [7, 20, 1031, 1918, 1922], "contrari": [7, 1902], "accident": 7, "put": [7, 9, 20, 23, 31, 50, 53, 54, 317, 1094, 1272, 1389, 1697, 1875, 1878, 1892, 1903, 1913, 1920, 1922, 1931, 1932, 1952, 1953, 1954], "difficulti": [7, 1898], "nonlinearli": 7, "sign": [7, 29, 339, 525, 880, 961, 1062, 1110, 1122, 1127, 1234, 1259, 1260, 1281, 1426, 1690, 1741, 1773, 1787, 1878, 1893, 1920, 1928, 1934, 1937, 1940, 1941, 1958], "split": [7, 20, 23, 54, 613, 768, 769, 770, 855, 857, 858, 935, 942, 1031, 1072, 1164, 1371, 1385, 1386, 1404, 1440, 1449, 1508, 1509, 1510, 1511, 1512, 1513, 1532, 1837, 1869, 1877, 1878, 1893, 1903, 1920, 1922, 1923, 1925, 1930, 1934, 1938, 1961], "shippabl": 7, "complet": [7, 13, 20, 23, 25, 31, 32, 38, 40, 42, 51, 53, 483, 676, 857, 950, 973, 977, 978, 980, 1050, 1130, 1131, 1204, 1212, 1214, 1219, 1231, 1259, 1312, 1315, 1316, 1321, 1498, 1614, 1623, 1656, 1721, 1876, 1879, 1880, 1881, 1886, 1892, 1899, 1900, 1903, 1906, 1909, 1915, 1922, 1923, 1930, 1931, 1947, 1954, 1956, 1960, 1961], "subtl": [7, 1397, 1398, 1399, 1905, 1952, 1953, 1963], "nuanc": [7, 1956], "extra": [7, 13, 20, 21, 23, 27, 29, 46, 54, 1074, 1131, 1142, 1201, 1208, 1211, 1246, 1272, 1434, 1441, 1621, 1818, 1868, 1879, 1894, 1900, 1902, 1904, 1905, 1907, 1910, 1922, 1924, 1934, 1941, 1942, 1952, 1956, 1957], "understand": [7, 8, 9, 23, 25, 31, 32, 55, 1131, 1258, 1884, 1898, 1900, 1903, 1909, 1916, 1924, 1939, 1945, 1949, 1950, 1951, 1952, 1953, 1955, 1956, 1963], "hack": 7, "answer": [7, 10, 54, 820, 1351, 1639, 1952, 1953], "regress": [7, 1350, 1915, 1948, 1959], "scrutini": 7, "undertak": 7, "rest": [7, 20, 21, 41, 46, 54, 789, 810, 1127, 1266, 1267, 1837, 1894, 1911, 1915, 1922, 1923, 1925, 1930, 1934, 1954, 1956, 1957, 1961], "chanc": [7, 25, 29, 1905, 1952, 1957], "unrel": [7, 955, 1140, 1899, 1905, 1922], "aid": [7, 54, 1900, 1963], "troubleshoot": [7, 23, 1945, 1953], "mayb": [7, 1138, 1860, 1952], "bracnh": 7, "rebas": 7, "latest": [7, 23, 27, 29, 1633, 1672, 1875, 1905, 1909, 1918], "statu": [7, 9, 31, 1290, 1876, 1881, 1892, 1925], "hud": 7, "risk": [7, 8, 46, 1623, 1626], "anyth": [7, 30, 33, 46, 53, 819, 822, 1212, 1692, 1877, 1884, 1895, 1911, 1922, 1951], "configur": [7, 12, 20, 21, 23, 31, 32, 37, 40, 41, 42, 46, 784, 785, 788, 789, 793, 810, 811, 812, 813, 819, 822, 834, 835, 836, 839, 841, 844, 854, 855, 856, 857, 858, 948, 1031, 1614, 1647, 1766, 1857, 1876, 1886, 1890, 1903, 1904, 1905, 1915, 1917, 1922, 1928, 1930, 1939, 1941, 1951, 1953, 1960, 1961, 1963], "riski": 7, "had": [7, 54, 1216, 1605, 1839, 1900, 1906, 1951, 1959], "beforehand": [7, 53, 1953], "hei": 7, "my": [7, 20, 1371, 1910, 1918, 1925], "member": [7, 9, 20, 23, 31, 40, 41, 54, 1201, 1388, 1434, 1530, 1877, 1879, 1880, 1890, 1907, 1924, 1930, 1941, 1942], "sphinx": 7, "folder": [7, 9, 13, 20, 54, 1668, 1673, 1875, 1939, 1955, 1963], "tree": [7, 33, 50, 948, 1434, 1477, 1673, 1918, 1922, 1924, 1932, 1945], "master": [7, 23, 43, 788, 1131, 1477, 1875, 1930], "doxygen": 7, "special": [7, 11, 33, 42, 51, 54, 55, 60, 62, 63, 737, 738, 739, 819, 822, 904, 948, 1067, 1081, 1082, 1083, 1085, 1086, 1095, 1097, 1168, 1169, 1170, 1214, 1272, 1286, 1327, 1371, 1481, 1615, 1616, 1617, 1660, 1692, 1716, 1774, 1785, 1789, 1872, 1876, 1881, 1886, 1894, 1903, 1905, 1908, 1910, 1918, 1922, 1925, 1938, 1939, 1950, 1951, 1952, 1956, 1959], "server": [7, 20, 23, 41, 1205, 1903, 1922, 1925, 1930, 1947], "cppdoc": [7, 14], "cpp": [7, 13, 23, 1324, 1904, 1951], "accomplish": [7, 25, 1911, 1953], "holist": 7, "concept": [7, 51, 54, 1884, 1905, 1906, 1911, 1937, 1954], "galleri": 7, "restructur": [7, 1922], "text": [7, 20, 29, 66, 71, 72, 73, 74, 75, 76, 152, 153, 172, 604, 613, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 690, 694, 741, 742, 752, 754, 756, 760, 764, 765, 766, 768, 769, 770, 776, 780, 816, 817, 861, 877, 878, 879, 880, 881, 916, 917, 918, 921, 924, 926, 928, 937, 943, 960, 961, 963, 964, 966, 1069, 1088, 1089, 1118, 1119, 1123, 1124, 1145, 1157, 1158, 1159, 1160, 1167, 1190, 1198, 1221, 1224, 1225, 1226, 1229, 1230, 1237, 1240, 1246, 1250, 1255, 1258, 1264, 1271, 1280, 1287, 1288, 1289, 1290, 1323, 1324, 1335, 1336, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1500, 1501, 1502, 1504, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1519, 1520, 1521, 1526, 1529, 1531, 1532, 1533, 1537, 1538, 1548, 1553, 1557, 1558, 1559, 1563, 1568, 1571, 1576, 1577, 1579, 1583, 1584, 1585, 1586, 1589, 1590, 1591, 1593, 1594, 1595, 1619, 1621, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1697, 1714, 1715, 1718, 1721, 1734, 1737, 1740, 1752, 1773, 1775, 1776, 1788, 1790, 1800, 1801, 1811, 1818, 1819, 1822, 1834, 1835, 1871, 1895, 1898, 1908, 1918, 1922, 1928, 1935, 1939, 1941, 1955], "rst": 7, "rebuild": [7, 21], "circleci": 7, "shard": [7, 20, 25, 27, 28, 46, 1614, 1953], "worker": [7, 13, 20, 21, 23, 24, 27, 31, 32, 33, 34, 40, 42, 43, 46, 1614, 1880, 1915, 1923, 1924, 1930, 1931, 1932], "40": [7, 1154, 1273, 1355, 1397, 1621, 1622, 1645, 1646, 1655, 1658, 1833, 1950], "minut": [7, 10, 23, 1939], "netlifi": 7, "noplot": 7, "render": [7, 23, 1939], "notebook": 7, "rebuilt": [7, 21, 27], "deploi": [7, 31, 40, 1876, 1910, 1916, 1922, 1947], "action": [7, 23, 29, 31, 34, 54, 1903, 1922, 1924, 1932], "document": [8, 9, 10, 16, 20, 23, 46, 47, 54, 676, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 869, 870, 871, 872, 933, 977, 978, 980, 1031, 1074, 1146, 1149, 1150, 1182, 1189, 1201, 1315, 1316, 1331, 1342, 1377, 1378, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1623, 1632, 1641, 1661, 1720, 1747, 1764, 1857, 1875, 1877, 1879, 1880, 1891, 1892, 1893, 1894, 1896, 1899, 1905, 1907, 1911, 1915, 1916, 1918, 1921, 1922, 1925, 1926, 1927, 1930, 1934, 1938, 1942, 1945, 1949, 1954, 1956, 1959, 1962], "develop": [8, 9, 10, 13, 21, 23, 54, 1879, 1880, 1887, 1891, 1900, 1905, 1910, 1911, 1915, 1922, 1925, 1926, 1930, 1934, 1955, 1958, 1963], "meant": [8, 24, 40, 42, 46, 1647, 1899, 1930], "rule": [8, 9, 13, 23, 29, 54, 55, 62, 63, 80, 81, 82, 149, 856, 888, 889, 932, 933, 1057, 1250, 1261, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1757, 1843, 1876, 1877, 1879, 1893, 1895, 1900, 1901, 1905, 1908, 1937, 1941, 1952], "concern": [8, 20, 46, 1892, 1903, 1918, 1961], "disagr": 8, "contribut": [8, 9, 25, 913, 1162, 1163, 1370, 1377, 1378, 1441, 1516, 1524, 1525, 1568, 1614, 1876, 1895, 1905, 1906, 1923], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": 8, "obsess": 8, "soumith": [8, 10], "goe": [8, 54, 1127, 1346, 1678, 1679, 1907, 1954, 1956], "depth": [8, 9, 775, 781, 1035, 1036, 1214, 1349, 1364, 1367, 1429, 1486, 1544, 1602, 1887, 1904, 1911, 1924, 1950], "primari": [8, 9, 23, 54, 1210, 1881, 1887, 1934, 1952], "goal": [8, 37, 50, 54, 1302, 1887, 1900, 1904, 1908, 1919, 1932, 1955], "secondari": 8, "abil": [8, 1753, 1887, 1910, 1918, 1922], "flexibl": [8, 21, 46, 50, 1257, 1614, 1887, 1903, 1905, 1911, 1956], "abstract": [8, 15, 20, 21, 24, 25, 29, 31, 40, 42, 906, 907, 908, 909, 910, 1628, 1880, 1904, 1925, 1930, 1948, 1956], "critic": [8, 40, 676, 1622, 1655, 1890, 1902, 1903, 1953, 1954, 1956], "concret": [8, 29, 43, 50, 54, 781, 796, 820, 837, 948, 1486, 1571, 1602, 1877, 1880, 1903, 1905, 1913, 1951, 1952, 1956], "manner": [8, 31, 509, 897, 899, 1894, 1896, 1901], "jump": [8, 556, 1937], "regim": 8, "ei": 8, "tradeoff": [8, 21, 1925, 1931, 1953, 1959], "temptat": 8, "impos": [8, 42, 52, 1761, 1892, 1899, 1937], "strict": [8, 897, 898, 899, 900, 901, 902, 1130, 1137, 1201, 1216, 1217, 1434, 1656, 1922, 1939, 1941], "upfront": [8, 1951], "simplifi": [8, 21, 53, 1208, 1424, 1622, 1692, 1887, 1900, 1908, 1911, 1921, 1931, 1951], "worth": [8, 9, 20, 21, 43, 1131, 1875, 1938, 1956, 1957], "friction": 8, "compel": 8, "narrow": [8, 1270, 1334, 1692, 1780, 1878, 1880, 1893, 1920, 1927, 1938, 1963], "subproblem": 8, "fragment": [8, 999, 1031, 1884, 1903, 1963], "ecosystem": [8, 1910, 1912], "incomprehens": 8, "seamlessli": [8, 1895], "softwar": [8, 1236, 1237, 1264, 1857, 1903, 1909, 1945], "experi": [8, 9, 11, 21, 52, 66, 71, 72, 73, 74, 75, 76, 1142, 1463, 1586, 1614, 1868, 1887, 1905, 1939, 1950], "rich": [8, 1880], "denomin": [8, 683, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1725], "subset": [8, 20, 23, 27, 41, 1212, 1692, 1877, 1879, 1880, 1905, 1918, 1928, 1958], "borrow": 8, "zen": 8, "implicit": [8, 81, 764, 765, 768, 769, 770, 1146, 1154, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1500, 1501, 1502, 1508, 1509, 1510, 1557, 1558, 1559, 1709, 1878, 1880, 1881, 1918, 1922, 1938, 1958], "concis": [8, 33, 1930], "interchang": [8, 29, 1689, 1842, 1879, 1909, 1919, 1945, 1954], "everydai": 8, "english": 8, "movement": [8, 1938], "worri": [8, 1930], "placement": [8, 28, 31, 855, 1605, 1925, 1930, 1953], "favor": [8, 23, 781, 782, 783, 939, 950, 1043, 1047, 1201, 1255, 1258, 1290, 1291, 1393, 1434, 1487, 1488, 1602, 1603, 1604, 1606, 1721, 1822, 1845, 1956], "practition": 8, "debugg": [8, 1206, 1908, 1953, 1963], "plug": 8, "ir": [8, 54, 756, 1204, 1205, 1386, 1387, 1673, 1877, 1880, 1918, 1919, 1945, 1951, 1952, 1953, 1963], "classic": [8, 1900], "sort": [8, 27, 31, 54, 586, 605, 872, 873, 894, 1074, 1161, 1322, 1342, 1648, 1649, 1660, 1722, 1757, 1840, 1854, 1878, 1880, 1905, 1907, 1920, 1934, 1951, 1956, 1958], "distribut": [8, 11, 20, 21, 24, 31, 32, 33, 34, 37, 38, 39, 40, 42, 43, 46, 53, 172, 256, 284, 375, 451, 478, 604, 676, 691, 692, 815, 918, 1048, 1324, 1342, 1346, 1370, 1371, 1372, 1373, 1374, 1375, 1379, 1384, 1388, 1400, 1448, 1452, 1473, 1516, 1518, 1519, 1520, 1521, 1526, 1530, 1531, 1535, 1545, 1576, 1614, 1662, 1714, 1728, 1730, 1731, 1732, 1733, 1734, 1735, 1876, 1880, 1894, 1895, 1898, 1899, 1903, 1923, 1924, 1926, 1932, 1935, 1939, 1942], "tldr": 8, "resourc": [8, 13, 20, 31, 36, 40, 54, 1880, 1892, 1913, 1934, 1953, 1960], "characterist": [8, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1823, 1906, 1911], "uniformli": [8, 29, 1732, 1733, 1941], "leak": [8, 889, 895, 1880, 1892, 1900], "smart": [8, 1905, 1922, 1930], "anywai": [8, 1900], "obviou": [8, 1907, 1932, 1952], "extens": [8, 13, 17, 23, 25, 28, 29, 1272, 1273, 1668, 1753, 1773, 1876, 1887, 1895, 1899, 1916, 1922, 1934, 1952, 1953, 1963], "unavoid": 8, "latenc": [8, 37, 1902, 1903, 1953, 1960], "caveat": [8, 46, 1605, 1654, 1887, 1892, 1903, 1911, 1916, 1949, 1959, 1963], "valuabl": 8, "certainli": [8, 1887], "heterogen": [8, 1879], "cluster": [8, 23, 25, 39, 40, 41, 1342, 1939], "focus": [8, 1879, 1880, 1905, 1963], "beaten": 8, "space": [8, 9, 20, 29, 768, 769, 770, 1057, 1092, 1094, 1096, 1097, 1103, 1110, 1154, 1163, 1216, 1217, 1271, 1287, 1342, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1400, 1410, 1411, 1412, 1413, 1414, 1415, 1428, 1429, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1545, 1843, 1878, 1896, 1900, 1908, 1911, 1916], "innov": 8, "ultim": [8, 9, 13, 33, 42, 1904, 1945], "evidenc": 8, "began": 8, "bind": [8, 13, 23, 54, 1011, 1880, 1881, 1905, 1922], "monolith": 8, "deepli": 8, "integr": [8, 20, 28, 34, 50, 153, 918, 920, 921, 922, 923, 924, 925, 966, 1057, 1162, 1201, 1224, 1268, 1269, 1333, 1434, 1728, 1740, 1843, 1895, 1905, 1910, 1911, 1921, 1923, 1925, 1935, 1937, 1941, 1949], "numpi": [8, 20, 51, 445, 489, 689, 690, 695, 873, 875, 876, 893, 1069, 1071, 1072, 1074, 1092, 1113, 1114, 1115, 1116, 1120, 1121, 1126, 1142, 1164, 1231, 1232, 1242, 1253, 1255, 1256, 1257, 1258, 1259, 1264, 1265, 1268, 1270, 1302, 1307, 1715, 1740, 1743, 1750, 1762, 1770, 1804, 1805, 1806, 1807, 1808, 1809, 1822, 1824, 1825, 1833, 1836, 1837, 1839, 1865, 1868, 1869, 1887, 1901, 1905, 1906, 1914, 1915, 1917, 1922, 1937, 1938, 1939, 1940, 1941, 1965], "scipi": [8, 936, 1247, 1248, 1573, 1715, 1922, 1933, 1935, 1939], "scikit": [8, 1544], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1917], "year": [8, 1934], "rewrot": 8, "frontend": [8, 14, 50, 54, 1919, 1953], "familiar": [8, 14, 54, 1030, 1877, 1900, 1906, 1922, 1925, 1931, 1932, 1953, 1962], "perhap": [8, 1906, 1956], "importantli": [8, 1956], "huge": [8, 1823, 1890], "scientif": [8, 1770], "pareto": [8, 1876], "close": [8, 14, 23, 40, 54, 55, 58, 62, 932, 1013, 1190, 1236, 1237, 1263, 1264, 1290, 1351, 1465, 1483, 1506, 1757, 1822, 1845, 1890, 1900, 1905, 1914, 1918, 1922, 1925, 1930, 1939, 1941], "curv": [8, 1939], "torchdynamo": [8, 55, 64, 676, 948, 950, 1667, 1876, 1886, 1945, 1949, 1951, 1953, 1955, 1956], "frame": [8, 54, 948, 1198, 1818, 1859, 1907, 1939, 1945, 1950, 1951, 1953, 1954, 1963], "torch_funct": [8, 1905], "torch_dispatch": 8, "torch": [8, 9, 11, 14, 17, 18, 21, 24, 27, 31, 32, 33, 34, 37, 38, 40, 42, 43, 46, 49, 55, 56, 57, 58, 59, 60, 61, 67, 68, 69, 70, 77, 79, 81, 86, 87, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 890, 967, 968, 975, 976, 977, 978, 980, 981, 996, 998, 1009, 1078, 1176, 1199, 1200, 1201, 1215, 1312, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1605, 1614, 1615, 1616, 1617, 1623, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1647, 1659, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1728, 1767, 1797, 1876, 1877, 1878, 1879, 1893, 1894, 1899, 1900, 1901, 1902, 1904, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1917, 1923, 1925, 1926, 1927, 1930, 1931, 1932, 1938, 1948, 1949, 1950, 1951, 1952, 1955, 1956, 1959, 1962, 1963], "fx": [8, 77, 676, 743, 811, 812, 813, 814, 856, 1131, 1876, 1919, 1926, 1927, 1949, 1950, 1951, 1952, 1953, 1956, 1962, 1963], "tracer": [8, 69, 1216, 1918, 1919, 1939, 1944, 1956], "functorch": [8, 47, 52, 55, 58, 62, 63, 65, 1949], "anchor": [8, 54, 1482, 1483, 1599, 1600, 1878, 1962], "hackabl": 8, "todai": [8, 47, 52, 948, 1925, 1951], "evolv": [8, 1672, 1904], "ai": [8, 1918, 1935], "adopt": [9, 23, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761], "hierarch": [9, 1939], "pull": [9, 10, 14, 54, 149, 889, 1918, 1922, 1952], "request": [9, 10, 11, 23, 25, 42, 685, 857, 875, 876, 1031, 1273, 1295, 1305, 1550, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1875, 1895, 1899, 1900, 1902, 1903, 1918, 1922, 1930, 1931, 1932, 1934, 1935, 1951], "overseen": 9, "catch": [9, 33, 1877, 1900, 1906, 1908, 1954], "maker": 9, "strong": 9, "toward": [9, 55, 1069, 1162, 1163, 1273, 1338, 1614, 1700, 1741, 1749, 1750, 1923], "philosophi": [9, 50, 1876], "beyond": [9, 21, 1319, 1370, 1678, 1679, 1688, 1748, 1907, 1911], "encourag": [9, 31, 1895, 1925, 1934, 1941], "propos": [9, 1675, 1695, 1696, 1887, 1908, 1921, 1931], "review": [9, 10, 21, 1922, 1955, 1956], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 54], "codebas": [9, 1905], "strictli": [9, 20, 149, 190, 207, 889, 932, 1163, 1201, 1205, 1434, 1900, 1935], "compani": 9, "bui": 9, "addition": [9, 20, 21, 23, 29, 46, 149, 509, 613, 889, 1131, 1135, 1136, 1205, 1264, 1342, 1397, 1398, 1399, 1799, 1907, 1942], "membership": [9, 31, 39, 40, 1881], "That": [9, 31, 38, 41, 48, 54, 1198, 1271, 1287, 1857, 1888, 1905, 1906, 1907, 1916, 1922, 1930, 1953], "seat": 9, "reserv": [9, 37, 1031, 1881, 1903, 1911], "emploi": [9, 1691, 1911, 1922, 1923], "directori": [9, 13, 23, 25, 38, 1673, 1875, 1889, 1910, 1922, 1924, 1939, 1953, 1963], "procedur": [9, 29, 855, 1216, 1217, 1273, 1797, 1930, 1963], "disput": 9, "made": [9, 25, 27, 28, 41, 54, 895, 905, 1201, 1434, 1479, 1481, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1738, 1879, 1887, 1900, 1917, 1922, 1939, 1941, 1948, 1951, 1956, 1963, 1964], "public": [9, 10, 1131, 1905, 1964], "relev": [9, 24, 31, 40, 53, 676, 1264, 1406, 1881, 1899, 1900, 1922, 1925, 1954, 1955, 1956], "resolut": [9, 1446, 1447, 1498, 1533, 1574, 1575, 1843, 1881, 1922, 1965], "conclus": 9, "publicli": [9, 1964], "vision": [9, 1210, 1370, 1516, 1875, 1876, 1955], "roadmap": [9, 10], "parti": [9, 40, 1875, 1876, 1877, 1903, 1906, 1911, 1922], "triag": [9, 10], "meet": [9, 10, 39, 1230, 1903, 1953], "Their": [9, 1066, 1905, 1952], "articul": 9, "cohes": 9, "negoti": [9, 1930], "contenti": 9, "broad": [9, 1911], "stakehold": 9, "power": [9, 39, 1037, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1117, 1224, 1254, 1268, 1402, 1403, 1554, 1555, 1622, 1655, 1675, 1704, 1718, 1742, 1862, 1881, 1903, 1934], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 29, 46, 1302, 1880, 1882, 1899, 1900, 1921, 1925, 1937, 1945, 1947, 1951], "merit": 9, "demonstr": [9, 41, 54, 55, 62, 63, 1357, 1877, 1911, 1916, 1923, 1930, 1950, 1953, 1955, 1961], "expertis": 9, "continu": [9, 20, 23, 29, 43, 46, 54, 400, 604, 815, 898, 1154, 1236, 1237, 1264, 1356, 1357, 1614, 1672, 1881, 1887, 1900, 1916, 1924, 1942, 1949, 1950, 1953, 1956], "light": [9, 1939], "mainten": [9, 40, 41], "emeritu": [9, 10], "inact": [9, 1031, 1903], "contact": 9, "item": [9, 20, 25, 55, 64, 579, 580, 581, 585, 788, 789, 790, 810, 811, 812, 813, 1201, 1370, 1434, 1435, 1444, 1626, 1770, 1875, 1877, 1878, 1879, 1880, 1893, 1903, 1918, 1920, 1922, 1930, 1939, 1940, 1948, 1951, 1952, 1956, 1958], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 20, 29, 54, 87, 400, 468, 541, 731, 853, 857, 859, 904, 917, 919, 926, 939, 940, 941, 1090, 1091, 1092, 1093, 1094, 1102, 1104, 1108, 1110, 1127, 1137, 1138, 1141, 1158, 1159, 1193, 1196, 1201, 1204, 1230, 1231, 1242, 1244, 1255, 1258, 1259, 1273, 1293, 1308, 1328, 1333, 1334, 1351, 1362, 1363, 1364, 1369, 1370, 1371, 1378, 1388, 1395, 1434, 1440, 1470, 1477, 1482, 1483, 1498, 1506, 1525, 1530, 1533, 1599, 1600, 1608, 1609, 1610, 1669, 1748, 1750, 1800, 1802, 1846, 1847, 1848, 1849, 1856, 1875, 1878, 1893, 1894, 1905, 1906, 1908, 1918, 1920, 1923, 1929, 1934, 1935, 1941, 1964, 1965], "neg": [9, 11, 13, 20, 23, 29, 42, 54, 87, 438, 440, 455, 657, 658, 694, 751, 776, 919, 924, 961, 964, 980, 996, 1002, 1003, 1031, 1043, 1090, 1091, 1092, 1093, 1094, 1095, 1109, 1110, 1111, 1117, 1127, 1191, 1193, 1195, 1254, 1281, 1293, 1315, 1316, 1324, 1328, 1333, 1334, 1342, 1351, 1379, 1388, 1420, 1427, 1428, 1429, 1437, 1441, 1443, 1448, 1465, 1482, 1483, 1526, 1530, 1533, 1535, 1544, 1548, 1557, 1558, 1559, 1568, 1576, 1599, 1600, 1602, 1714, 1715, 1746, 1750, 1785, 1787, 1790, 1801, 1838, 1846, 1847, 1848, 1849, 1856, 1877, 1878, 1893, 1895, 1898, 1900, 1905, 1906, 1918, 1919, 1920, 1929, 1934, 1935, 1951, 1958], "interact": [9, 14, 20, 28, 54, 858, 978, 1011, 1176, 1881, 1904, 1905, 1922, 1939, 1948, 1953, 1957], "final": [9, 23, 25, 27, 29, 31, 40, 46, 50, 51, 682, 685, 686, 756, 916, 934, 947, 1074, 1113, 1131, 1154, 1272, 1290, 1295, 1386, 1388, 1404, 1449, 1462, 1605, 1800, 1843, 1877, 1879, 1880, 1881, 1893, 1905, 1908, 1911, 1914, 1916, 1918, 1922, 1931, 1932, 1948, 1950, 1951, 1963], "declin": 9, "conflict": [9, 21, 41, 1922], "lack": [9, 11, 1236, 1237, 1264], "unfit": 9, "conduct": [9, 1614, 1711, 1823, 1930], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 913, 1878, 1922], "letter": [9, 1074], "befit": 9, "candidaci": 9, "behind": [9, 1876, 1916, 1931, 1952], "75": [9, 1162, 1422, 1533, 1551, 1675, 1722, 1878, 1935], "choos": [9, 14, 54, 888, 913, 1000, 1246, 1259, 1264, 1350, 1898, 1899, 1902, 1922, 1926, 1939], "unforeseen": 9, "circumst": [9, 40, 948, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1903], "perman": [9, 54, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1900, 1932], "unavail": [9, 1879], "rank": [9, 20, 21, 23, 24, 25, 27, 28, 29, 31, 38, 40, 41, 43, 46, 55, 63, 1246, 1247, 1248, 1255, 1290, 1426, 1473, 1614, 1626, 1711, 1823, 1878, 1904, 1913, 1918, 1923, 1930, 1931, 1951, 1963], "elect": 9, "invit": [9, 1875], "convinc": 9, "approach": [9, 21, 23, 54, 82, 936, 1142, 1797, 1868, 1877, 1892, 1895, 1903, 1905, 1908, 1925, 1930, 1953], "interview": 9, "talk": [9, 42, 1905, 1910], "gather": [9, 23, 40, 46, 509, 1833, 1857, 1878, 1905, 1907, 1910, 1920, 1922, 1958], "read": [9, 17, 20, 23, 25, 30, 31, 33, 40, 41, 46, 50, 54, 445, 1033, 1057, 1125, 1126, 1127, 1208, 1272, 1705, 1876, 1893, 1894, 1900, 1901, 1903, 1904, 1906, 1910, 1914, 1922, 1925, 1930, 1948, 1950, 1953, 1955, 1956], "attend": [9, 731, 1440, 1477], "confer": [9, 1388], "pipelin": [9, 54, 1876, 1930, 1953], "world": [9, 23, 27, 31, 38, 40, 41, 46, 1473, 1614, 1900, 1922, 1925, 1950, 1951], "cover": [9, 47, 54, 55, 1048, 1074, 1427, 1557, 1558, 1559, 1880, 1882, 1894, 1900, 1905, 1908, 1910, 1911, 1930, 1950, 1956, 1957], "push": [9, 32, 1036, 1142, 1266, 1868, 1924, 1956], "codeown": 9, "notifi": [9, 24, 41, 1932], "expert": 9, "strongli": [9, 23, 31, 41, 1373, 1374, 1375, 1379, 1818, 1875], "failur": [9, 23, 29, 31, 32, 33, 37, 38, 39, 40, 43, 676, 904, 905, 948, 1131, 1216, 1217, 1319, 1880, 1886, 1892, 1919, 1923, 1930, 1932, 1941, 1953, 1956, 1963], "revert": [9, 29, 46, 1470, 1591, 1932], "substanti": [9, 21, 1903, 1948], "syntact": [9, 33, 54], "establish": [9, 23, 40, 1900], "seri": [9, 54, 1357, 1397, 1915, 1918, 1948, 1959, 1964], "lf": 9, "llc": 9, "guidelin": [9, 1637, 1913, 1922, 1925, 1926], "trademark": 9, "www": [9, 1357, 1483, 1939], "lfproject": 9, "acknowledg": [9, 23, 1876, 1932, 1934], "copyright": [9, 1963], "holder": 9, "independ": [9, 20, 23, 40, 46, 53, 152, 153, 775, 781, 897, 898, 899, 900, 901, 902, 980, 1154, 1163, 1259, 1372, 1373, 1374, 1375, 1379, 1519, 1520, 1521, 1526, 1544, 1602, 1658, 1721, 1876, 1877, 1899, 1900, 1903, 1916, 1922], "authorship": 9, "claus": [9, 1907], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 21, 29, 428, 476, 754, 1146, 1221, 1237, 1240, 1259, 1301, 1331, 1400, 1440, 1621, 1709, 1711, 1721, 1722, 1823, 1877, 1878, 1905, 1908, 1915, 1918, 1934, 1935, 1952], "partli": [9, 1880], "domain": [9, 29, 33, 680, 822, 881, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1102, 1104, 1105, 1106, 1107, 1154, 1895, 1918, 1925], "absolut": [9, 11, 13, 54, 91, 677, 690, 904, 905, 1122, 1190, 1229, 1234, 1255, 1258, 1260, 1281, 1395, 1401, 1465, 1542, 1546, 1587, 1631, 1632, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1661, 1674, 1715, 1741, 1773, 1878, 1911, 1918, 1920, 1935, 1940, 1941], "health": 9, "success": [9, 25, 29, 31, 37, 54, 1231, 1242, 1244, 1290, 1633, 1804, 1805, 1806, 1808, 1809, 1903, 1911, 1918, 1919, 1934, 1963], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1918], "clearli": [9, 1887, 1922], "sponsorship": 9, "foundat": [9, 1919], "ptf": 9, "minor": [9, 1002, 1231, 1247, 1934], "committ": 9, "prior": [9, 21, 23, 25, 31, 896, 1273, 1479, 1481, 1583, 1637, 1901, 1903, 1905, 1921, 1925, 1948, 1953], "facebook": 9, "infrastructur": [9, 32, 1922, 1951], "employe": 9, "expand": [9, 29, 253, 489, 874, 896, 904, 905, 931, 1253, 1254, 1302, 1440, 1484, 1577, 1853, 1875, 1878, 1886, 1893, 1894, 1901, 1906, 1918, 1920, 1922, 1923, 1938, 1958], "deliv": [9, 1924], "offici": [9, 23, 82, 1342, 1925], "showcas": [9, 1430, 1903, 1913], "whenev": [9, 876, 1621, 1622, 1890, 1892, 1928, 1931, 1932, 1952, 1956, 1964], "fix": [10, 17, 20, 23, 28, 29, 31, 40, 48, 51, 54, 77, 78, 260, 791, 797, 1131, 1214, 1246, 1377, 1378, 1452, 1524, 1525, 1544, 1614, 1672, 1877, 1878, 1890, 1898, 1899, 1903, 1904, 1907, 1913, 1917, 1918, 1920, 1921, 1948, 1961, 1963], "plu": [10, 13, 25, 897, 1127, 1247, 1934], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1273], "ezyang": [10, 1905, 1938], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1711, 1823], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1905], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 24, 27, 29, 46, 1679, 1680, 1682, 1688, 1692, 1921], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 1963], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 1950], "ansel": [10, 1950], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1331, 1722, 1903], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 29], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1273], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1154], "robi": 10, "robieta": 10, "xu": [10, 46], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 23, 46, 54, 1807, 1879, 1894, 1918, 1948, 1959], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1860], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 1960], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1342], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 789], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 1924, 1953, 1963], "johnson": 10, "peterjc123": [10, 1917], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 29], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "express": [11, 25, 47, 51, 52, 54, 55, 62, 63, 317, 1199, 1202, 1658, 1818, 1881, 1888, 1895, 1900, 1905, 1951, 1953, 1963, 1964], "bj": 11, "j": [11, 23, 29, 311, 313, 319, 509, 511, 513, 688, 891, 897, 899, 956, 1074, 1090, 1091, 1098, 1104, 1108, 1109, 1143, 1198, 1201, 1236, 1237, 1248, 1264, 1273, 1280, 1288, 1290, 1295, 1373, 1374, 1375, 1379, 1434, 1437, 1519, 1520, 1521, 1526, 1715, 1722, 1801, 1818, 1822, 1865, 1879, 1898, 1900, 1905, 1908, 1916, 1939], "imaginari": [11, 309, 904, 956, 962, 1095, 1097, 1105, 1106, 1107, 1171, 1191, 1193, 1194, 1197, 1818, 1866, 1867, 1881, 1900, 1908, 1941], "satisfi": [11, 18, 21, 29, 613, 690, 756, 790, 898, 904, 905, 932, 1090, 1091, 1093, 1095, 1097, 1105, 1106, 1107, 1122, 1214, 1240, 1266, 1267, 1342, 1357, 1381, 1386, 1404, 1449, 1637, 1654, 1741, 1757, 1797, 1818, 1880, 1900, 1903, 1908, 1921, 1923, 1934, 1937], "equat": [11, 941, 1074, 1146, 1158, 1244, 1245, 1246, 1247, 1248, 1250, 1261, 1263, 1350, 1783, 1845, 1878, 1900, 1908, 1921, 1935], "frequent": [11, 25, 1342, 1876, 1913, 1914, 1916, 1934, 1945, 1955], "mathemat": [11, 54, 897, 898, 899, 900, 901, 902, 1122, 1154, 1350, 1352, 1353, 1354, 1397, 1398, 1399, 1400, 1473, 1552, 1590, 1614, 1661, 1741, 1799, 1800, 1880, 1900, 1914, 1935, 1942], "topic": [11, 1910, 1911, 1950], "tradition": 11, "torchaudio": [11, 1876], "mimick": 11, "assembli": 11, "lapack": [11, 940, 1146, 1231, 1242, 1243, 1244, 1246, 1249, 1262, 1721, 1822], "cubla": [11, 992, 1857, 1915, 1948], "spectral": [11, 1220, 1236, 1264, 1622, 1645, 1655, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1914], "fft": [11, 1876, 1903], "4621": 11, "0303j": 11, "2438": [11, 1246, 1524], "5874j": 11, "7706": 11, "1421j": 11, "2110": 11, "1918j": 11, "complex128": [11, 174, 956, 1117, 1126, 1180, 1201, 1230, 1231, 1236, 1237, 1238, 1239, 1240, 1241, 1362, 1363, 1364, 1434, 1508, 1509, 1510, 1670, 1715, 1762, 1936, 1937, 1940, 1941], "complex64": [11, 177, 956, 1091, 1093, 1094, 1099, 1100, 1126, 1180, 1232, 1255, 1258, 1362, 1363, 1364, 1508, 1509, 1510, 1670, 1715, 1762, 1936, 1937, 1940, 1941], "apart": [11, 1880, 1900], "linspac": [11, 919, 943, 1095, 1105, 1302, 1878, 1882, 1920], "logspac": [11, 1878, 1882, 1920], "arang": [11, 20, 23, 30, 509, 603, 687, 688, 689, 693, 695, 882, 883, 884, 930, 942, 946, 1057, 1072, 1090, 1094, 1102, 1108, 1110, 1114, 1115, 1116, 1117, 1124, 1125, 1164, 1221, 1222, 1226, 1229, 1253, 1256, 1257, 1270, 1334, 1455, 1456, 1457, 1458, 1459, 1486, 1487, 1488, 1570, 1661, 1662, 1710, 1718, 1722, 1737, 1744, 1749, 1770, 1802, 1810, 1821, 1837, 1838, 1840, 1841, 1843, 1869, 1878, 1887, 1895, 1916, 1920, 1935, 1939, 1940, 1948, 1955, 1958], "switch": [11, 20, 49, 53, 54, 1243, 1244, 1245, 1374, 1533, 1571, 1618, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1753, 1857, 1892, 1900, 1903, 1911, 1913, 1921, 1954], "view_as_r": [11, 1818, 1878, 1920, 1938], "6125": 11, "1681": 11, "3773": 11, "3487": 11, "0861": 11, "7981": 11, "1681j": 11, "3487j": 11, "7981j": 11, "mul_": [11, 1878, 1893, 1895, 1934], "2250": [11, 1257, 1661], "7546": [11, 941], "1722": 11, "x1": [11, 936, 1248, 1369, 1426, 1482, 1483, 1515, 1572, 1878], "3j": [11, 23, 694, 959, 960, 1745, 1746, 1762], "4j": [11, 23, 1773], "0000": [11, 29, 509, 861, 897, 899, 919, 939, 943, 962, 1055, 1061, 1062, 1063, 1088, 1089, 1092, 1094, 1095, 1101, 1102, 1105, 1110, 1122, 1123, 1124, 1154, 1160, 1163, 1167, 1226, 1229, 1230, 1231, 1243, 1244, 1247, 1252, 1253, 1257, 1259, 1271, 1287, 1329, 1377, 1378, 1486, 1487, 1489, 1490, 1524, 1525, 1661, 1715, 1721, 1726, 1727, 1728, 1737, 1741, 1742, 1766, 1773, 1775, 1776, 1778, 1781, 1782, 1783, 1784, 1800, 1845, 1846, 1848, 1871, 1887, 1895, 1903, 1934, 1935, 1940], "6569": [11, 1167], "5708": [11, 1058], "7854": 11, "complex_tensor": 11, "pt": [11, 21, 46, 1206, 1208, 1211, 1218, 1272, 1753, 1877, 1911, 1916, 1922, 1955], "conjug": [11, 328, 455, 688, 904, 941, 959, 960, 1181, 1230, 1231, 1237, 1240, 1243, 1250, 1264, 1269, 1273, 1621, 1709, 1745, 1818, 1822, 1865, 1908, 1921, 1940], "wirting": [11, 904, 1908], "deriv": [11, 23, 46, 149, 734, 735, 736, 737, 738, 739, 777, 796, 820, 889, 903, 904, 905, 1137, 1141, 1154, 1198, 1258, 1290, 1481, 1605, 1876, 1879, 1905, 1906, 1908, 1930, 1934, 1935], "steepest": [11, 1900], "descent": [11, 29, 1675, 1691, 1695, 1696, 1900, 1911], "box": [11, 23, 28, 41, 54, 1142, 1868, 1894, 1900, 1904, 1949, 1951, 1954, 1955], "fulli": [11, 13, 20, 23, 27, 28, 50, 54, 676, 1037, 1201, 1430, 1431, 1432, 1434, 1880, 1886, 1905, 1922, 1925, 1951, 1956, 1958], "quantiz": [11, 54, 218, 324, 336, 469, 470, 471, 472, 473, 475, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 913, 1059, 1088, 1089, 1723, 1724, 1725, 1726, 1727, 1857, 1876, 1920, 1937, 1940, 1941, 1943, 1944], "parallel_info": [12, 1876, 1902], "cppextens": [13, 1876], "setuptool": 13, "bare": 13, "buildextens": [13, 1876], "ext_modul": 13, "extra_compile_arg": [13, 1917], "cmdclass": 13, "build_ext": 13, "cudaextens": [13, 1876], "cuda_extens": 13, "extension_kernel": 13, "cu": 13, "cxx": 13, "nvcc": [13, 1005, 1963], "o2": 13, "compil": [13, 14, 46, 47, 54, 676, 976, 1001, 1005, 1017, 1018, 1131, 1199, 1201, 1202, 1205, 1206, 1212, 1213, 1214, 1216, 1217, 1218, 1434, 1876, 1877, 1879, 1880, 1881, 1882, 1886, 1899, 1902, 1904, 1910, 1917, 1918, 1930, 1942, 1947, 1948, 1949, 1950, 1951, 1952, 1955, 1957, 1958, 1959, 1960], "arch": 13, "card": [13, 1917], "visibl": [13, 23, 25, 37, 999, 1044, 1435, 1436, 1444, 1445, 1951, 1954], "ptx": 13, "road": 13, "recompil": [13, 54, 676, 948, 1214, 1886, 1909, 1950, 1951, 1956, 1959], "cc": [13, 23, 1903], "newest": [13, 50], "torch_cuda_arch_list": 13, "6": [13, 17, 20, 21, 23, 29, 38, 54, 55, 56, 60, 61, 62, 63, 311, 313, 315, 319, 399, 400, 468, 484, 495, 509, 513, 556, 603, 681, 682, 687, 693, 737, 738, 739, 741, 742, 754, 757, 759, 761, 897, 898, 900, 901, 902, 919, 927, 932, 938, 941, 942, 946, 966, 986, 1033, 1037, 1051, 1052, 1053, 1057, 1058, 1069, 1072, 1073, 1090, 1098, 1103, 1104, 1108, 1109, 1111, 1113, 1114, 1117, 1124, 1154, 1164, 1166, 1167, 1190, 1211, 1222, 1226, 1237, 1253, 1257, 1258, 1259, 1266, 1267, 1271, 1273, 1302, 1306, 1332, 1333, 1334, 1347, 1358, 1361, 1366, 1369, 1377, 1378, 1387, 1388, 1389, 1391, 1392, 1430, 1431, 1435, 1443, 1451, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1477, 1478, 1480, 1482, 1485, 1491, 1500, 1530, 1537, 1538, 1570, 1572, 1579, 1605, 1649, 1650, 1652, 1654, 1660, 1661, 1662, 1676, 1690, 1710, 1711, 1714, 1721, 1722, 1728, 1729, 1732, 1738, 1748, 1749, 1753, 1757, 1770, 1791, 1795, 1799, 1802, 1804, 1805, 1810, 1821, 1823, 1824, 1825, 1832, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1848, 1852, 1857, 1869, 1870, 1877, 1880, 1881, 1887, 1895, 1898, 1900, 1905, 1906, 1911, 1916, 1918, 1930, 1931, 1934, 1935, 1937, 1940, 1941, 1950, 1953, 1958, 1960, 1963, 1964], "build_my_extens": 13, "7": [13, 20, 21, 23, 29, 54, 55, 60, 258, 311, 313, 315, 319, 399, 400, 468, 509, 556, 603, 613, 681, 693, 741, 742, 900, 902, 924, 927, 932, 938, 942, 946, 1057, 1069, 1071, 1072, 1075, 1090, 1113, 1114, 1117, 1120, 1124, 1154, 1164, 1178, 1222, 1226, 1236, 1241, 1243, 1244, 1247, 1248, 1252, 1253, 1257, 1264, 1332, 1333, 1334, 1340, 1341, 1344, 1345, 1347, 1358, 1377, 1422, 1430, 1431, 1455, 1456, 1457, 1458, 1459, 1482, 1485, 1500, 1571, 1639, 1644, 1654, 1661, 1681, 1728, 1732, 1738, 1748, 1749, 1750, 1757, 1770, 1773, 1775, 1786, 1787, 1795, 1802, 1804, 1805, 1810, 1822, 1824, 1825, 1832, 1837, 1838, 1841, 1843, 1852, 1865, 1869, 1877, 1881, 1887, 1894, 1895, 1901, 1903, 1905, 1914, 1916, 1918, 1920, 1925, 1934, 1937, 1938, 1939, 1940, 1941, 1955, 1960], "older": [13, 1903, 1916, 1922], "modestli": [13, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692], "imag": [13, 20, 737, 738, 739, 857, 858, 956, 1340, 1344, 1345, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1381, 1382, 1383, 1398, 1406, 1441, 1446, 1447, 1468, 1485, 1487, 1488, 1498, 1509, 1510, 1512, 1513, 1527, 1528, 1533, 1544, 1601, 1602, 1746, 1876, 1878, 1895, 1908, 1920, 1923, 1938, 1939, 1951, 1953, 1954, 1958], "11": [13, 23, 319, 509, 676, 938, 942, 1020, 1072, 1164, 1221, 1257, 1271, 1287, 1342, 1358, 1383, 1431, 1529, 1661, 1662, 1673, 1795, 1837, 1869, 1877, 1881, 1887, 1894, 1903, 1916, 1917, 1918, 1920, 1934, 1935, 1950, 1963], "pars": [13, 23, 43, 911, 1880, 1922, 1930], "window": [13, 20, 23, 54, 349, 552, 917, 926, 1158, 1159, 1198, 1220, 1347, 1348, 1349, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1430, 1431, 1432, 1500, 1528, 1529, 1557, 1558, 1559, 1726, 1727, 1818, 1876, 1878, 1890, 1903, 1951], "workaround": [13, 20, 54, 1205, 1875, 1915, 1918, 1925, 1953], "pure": [13, 14, 51, 1204, 1877, 1905], "sigmoidalphablendforwardcuda": 13, "69460": 13, "facebookresearch": 13, "pytorch3d": 13, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 13, "relocat": 13, "link": [13, 14, 29, 54, 77, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1535, 1894, 1910, 1911, 1934], "symbol": [13, 19, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 78, 79, 82, 620, 813, 950, 1215, 1269, 1404, 1449, 1672, 1845, 1865, 1876, 1880, 1919, 1951, 1952, 1953], "rdc": 13, "dc": 13, "anymor": [13, 23, 46, 220], "dlto": 13, "dlink": 13, "protent": 13, "perf": [13, 676, 1925, 1956, 1957], "lib": [13, 1917], "nvshmem": 13, "ninja": [13, 1917], "dlink_librari": 13, "dlink_lib": 13, "std": [13, 31, 38, 87, 375, 451, 1088, 1089, 1120, 1121, 1122, 1662, 1715, 1741, 1780, 1785, 1817, 1855, 1878, 1893, 1898, 1903, 1910, 1917, 1920, 1958], "17": [13, 23, 681, 1198, 1253, 1431, 1795, 1877, 1918, 1920, 1934, 1953, 1963], "mix": [13, 21, 29, 46, 1020, 1614, 1876, 1900, 1902, 1925, 1934, 1950, 1951], "use_ninja": 13, "greatli": [13, 54, 1903, 1951], "fallback": [13, 23, 40, 49, 82, 1214, 1264, 1899, 1903, 1916, 1948, 1953, 1963], "distutil": 13, "max_job": 13, "extra_cflag": 13, "extra_cuda_cflag": 13, "extra_ldflag": 13, "extra_include_path": 13, "build_directori": 13, "with_cuda": [13, 1917], "is_python_modul": 13, "is_standalon": 13, "keep_intermedi": 13, "torch_extens": 13, "temporari": [13, 54, 819, 822, 1615, 1900, 1907, 1955], "torch_extensions_dir": 13, "subfold": [13, 1963], "o3": 13, "cuh": 13, "Such": [13, 20, 21, 53, 1862, 1934], "lib64": 13, "cudart": [13, 1917], "fine": [13, 23, 25, 27, 30, 854, 857, 1125, 1216, 1583, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1875, 1892, 1900, 1903, 1905, 1918, 1922, 1923, 1925, 1934, 1945, 1955, 1963], "cuda_hom": 13, "safest": 13, "pybind11": [13, 14, 1879], "union": [13, 20, 25, 28, 31, 34, 38, 41, 46, 54, 1212, 1272, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1434, 1477, 1479, 1481, 1484, 1626, 1668, 1670, 1672, 1753, 1860, 1878, 1879, 1880, 1916, 1918, 1922, 1936, 1941, 1944], "linker": 13, "workspac": [13, 948], "header": [13, 38, 1917, 1941], "automat": [13, 21, 23, 40, 41, 54, 81, 149, 585, 885, 887, 948, 1011, 1020, 1163, 1210, 1216, 1302, 1480, 1583, 1615, 1740, 1770, 1858, 1875, 1876, 1879, 1880, 1888, 1889, 1893, 1894, 1900, 1901, 1903, 1905, 1911, 1913, 1918, 1922, 1923, 1925, 1926, 1930, 1939, 1940, 1952, 1953, 1955, 1963], "construct": [13, 14, 20, 23, 25, 27, 28, 29, 40, 46, 48, 50, 51, 54, 55, 60, 61, 149, 445, 788, 789, 820, 874, 875, 889, 903, 956, 1061, 1077, 1142, 1163, 1201, 1212, 1216, 1217, 1224, 1231, 1271, 1272, 1287, 1302, 1377, 1378, 1434, 1524, 1605, 1614, 1616, 1617, 1647, 1654, 1668, 1711, 1715, 1762, 1797, 1804, 1805, 1806, 1807, 1808, 1809, 1823, 1836, 1839, 1868, 1876, 1877, 1890, 1903, 1904, 1911, 1913, 1916, 1922, 1925, 1930, 1932, 1937, 1939, 1940, 1941, 1956], "plain": [13, 1351, 1435, 1444, 1621, 1806, 1905, 1934, 1952], "standalon": [13, 39, 40, 41, 813, 1212, 1216, 1877, 1957], "torch_lib_path": 13, "load_inlin": [13, 1876], "cpp_sourc": 13, "cuda_sourc": 13, "with_pytorch_error_handl": 13, "behav": [13, 14, 23, 53, 54, 311, 319, 489, 511, 513, 837, 1141, 1216, 1430, 1431, 1432, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1879, 1880, 1887, 1900, 1906, 1911, 1915, 1922, 1930, 1934], "exactli": [13, 21, 23, 29, 42, 904, 905, 942, 987, 991, 1074, 1120, 1121, 1198, 1201, 1242, 1378, 1381, 1382, 1383, 1434, 1462, 1465, 1525, 1535, 1614, 1661, 1674, 1887, 1893, 1900, 1903, 1904, 1905, 1908, 1909, 1918, 1922, 1923, 1948, 1956], "filenam": [13, 20, 54, 1200, 1208, 1211, 1875, 1878, 1889, 1900, 1922, 1936, 1939, 1955], "typic": [13, 20, 21, 23, 29, 30, 31, 33, 40, 41, 42, 46, 54, 78, 966, 975, 1117, 1125, 1201, 1221, 1224, 1272, 1368, 1394, 1434, 1605, 1614, 1678, 1679, 1804, 1805, 1806, 1808, 1809, 1875, 1876, 1877, 1880, 1886, 1900, 1902, 1903, 1914, 1915, 1916, 1918, 1921, 1923, 1925, 1930, 1938, 1947, 1949, 1951, 1952, 1961, 1963, 1965], "inlin": [13, 53, 55, 57, 61, 1017, 1201, 1205, 1216, 1902, 1953], "concaten": [13, 20, 23, 28, 899, 935, 946, 989, 1073, 1166, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1378, 1404, 1517, 1525, 1618, 1626, 1815, 1870, 1878, 1881, 1918, 1920, 1934], "furthermor": [13, 38, 50, 1236, 1237, 1264, 1290, 1372, 1893, 1894, 1900, 1915, 1928, 1930], "cuda_runtim": 13, "se": 13, "warn": [13, 17, 21, 23, 27, 79, 80, 82, 676, 897, 903, 938, 986, 1033, 1037, 1048, 1051, 1052, 1142, 1182, 1216, 1258, 1302, 1440, 1477, 1478, 1479, 1480, 1481, 1623, 1626, 1764, 1772, 1857, 1868, 1875, 1886, 1890, 1901, 1905, 1920, 1922, 1929, 1956, 1963], "macro": [13, 1909], "pybind": 13, "_safe_foo": 13, "redirect": [13, 31, 38, 1942], "obscur": 13, "sin_add": 13, "sin": [13, 51, 52, 55, 59, 60, 62, 63, 528, 665, 666, 877, 948, 1017, 1132, 1134, 1135, 1136, 1138, 1141, 1159, 1252, 1302, 1715, 1778, 1784, 1878, 1893, 1900, 1920, 1934, 1935, 1939, 1949, 1953, 1955, 1958, 1961], "inline_extens": 13, "include_path": [13, 1876], "get_compiler_abi_compatibility_and_vers": [13, 1876], "abi": [13, 14], "alongsid": [13, 1201, 1434, 1905, 1956], "shell": 13, "torchvers": 13, "verify_ninja_avail": [13, 1876], "is_ninja_avail": [13, 1876], "export": [14, 17, 23, 30, 43, 55, 60, 63, 86, 676, 912, 977, 1204, 1206, 1212, 1218, 1648, 1649, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1876, 1877, 1879, 1880, 1905, 1919, 1920, 1924, 1925, 1930, 1951, 1961, 1962], "embed": [14, 54, 731, 742, 891, 1065, 1342, 1368, 1378, 1394, 1406, 1440, 1483, 1525, 1583, 1692, 1760, 1878, 1902, 1920, 1925, 1927, 1930, 1934, 1939, 1958], "modif": [14, 46, 54, 220, 776, 893, 1126, 1127, 1201, 1434, 1614, 1900, 1905, 1911, 1922, 1925, 1953], "submodul": [14, 46, 54, 787, 793, 810, 834, 835, 836, 854, 857, 858, 1140, 1201, 1205, 1211, 1212, 1371, 1434, 1435, 1436, 1462, 1612, 1877, 1879, 1880, 1888, 1911, 1916, 1922, 1925, 1930, 1944, 1949, 1962], "preprocess": [14, 492, 1201], "augment": [14, 1881, 1941], "walk": [14, 54, 1884, 1905, 1922, 1931, 1932, 1938, 1963], "interfac": [14, 21, 25, 30, 32, 37, 40, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 741, 742, 752, 757, 758, 759, 760, 761, 790, 1127, 1605, 1764, 1818, 1857, 1880, 1890, 1891, 1905, 1910, 1921, 1928, 1934, 1939, 1958], "opencv": [14, 1533, 1544], "struct": [14, 1141, 1142, 1868, 1888, 1910], "explain": [14, 23, 1692, 1875, 1880, 1899, 1903, 1906, 1913, 1934, 1953, 1963], "reshap": [14, 23, 29, 494, 495, 509, 540, 613, 688, 946, 1057, 1072, 1073, 1113, 1164, 1221, 1253, 1257, 1266, 1267, 1270, 1334, 1381, 1455, 1456, 1457, 1458, 1459, 1485, 1622, 1655, 1661, 1802, 1803, 1810, 1837, 1838, 1843, 1869, 1870, 1878, 1887, 1894, 1895, 1918, 1920, 1927, 1938, 1939, 1958], "classat_1_1_tensor": 14, "tensor_index": 14, "crucial": [14, 1884, 1955, 1956, 1957], "cpp_autograd": 14, "workflow": [14, 1875, 1905, 1925, 1926, 1942, 1945, 1951, 1952, 1957, 1959, 1960], "undesir": [14, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1905], "overview": [14, 23, 37, 1614, 1876, 1887, 1892, 1900, 1908, 1911, 1923, 1925, 1930, 1945, 1946, 1950], "cpp_frontend": 14, "library_root": 14, "libtorch": 14, "linux": [14, 23, 1875], "gcc": 14, "pre": [14, 23, 27, 46, 54, 903, 910, 1201, 1434, 1609, 1611, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1669, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1694, 1700, 1875, 1877, 1880, 1888, 1900, 1902, 1911, 1918, 1923, 1940, 1952, 1959, 1963], "cxx11": 14, "facilit": [15, 24, 29, 51, 967, 968, 969, 970, 971, 972, 973, 978, 1062, 1762, 1875, 1877, 1880, 1915], "prototyp": [17, 23, 44, 676, 897, 899, 903, 904, 905, 1210, 1481, 1876, 1886, 1887, 1890, 1894, 1895, 1911, 1916, 1928, 1930, 1934, 1937, 1943, 1944], "earli": [17, 21, 31, 53, 1373, 1374, 1375, 1379, 1876, 1925, 1926, 1943, 1944, 1952, 1956], "introduc": [17, 29, 51, 756, 1273, 1386, 1404, 1449, 1544, 1748, 1875, 1880, 1901, 1904, 1912, 1918, 1922, 1923, 1924, 1930, 1934, 1940, 1945, 1953, 1959, 1963], "race": [17, 23, 1900], "enable_cuda_sanit": 17, "torch_cuda_sanit": 17, "concurr": [17, 23, 27, 1902, 1903, 1913, 1930, 1931], "uniniti": [17, 442, 495, 1075, 1076, 1605, 1616, 1617, 1654, 1895, 1920], "overwrit": [17, 20, 23, 54, 1435, 1444, 1880, 1900, 1948], "commandlin": 17, "example_error": 17, "csan": 17, "pointer": [17, 138, 992, 1450, 1903, 1904, 1910, 1930, 1932, 1952], "139719969079296": 17, "94646435460352": 17, "_sanit": 17, "364": 17, "_handle_kernel_launch": 17, "stack_trac": [17, 54], "stacksummari": 17, "extract": [17, 54, 832, 1377, 1381, 1485, 1524, 1601, 1924, 1930, 1944, 1947, 1949, 1950, 1953, 1954], "10000": [17, 21, 690, 1703, 1750, 1907, 1911, 1934, 1939, 1955], "420": 17, "_handle_memory_alloc": 17, "incorrectli": [17, 46, 978, 1119, 1954], "id": [17, 20, 23, 27, 31, 39, 40, 41, 46, 54, 770, 820, 975, 1010, 1473, 1559, 1598, 1614, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1880, 1910, 1918, 1920, 1922, 1929, 1930, 1931, 1936, 1956, 1960, 1963], "faulti": [17, 23], "schema": [17, 23, 25, 80, 1877, 1878, 1880, 1884, 1918, 1958, 1962], "current_stream": [17, 977, 1876, 1903], "wait_stream": [17, 23, 978, 980, 1903], "default_stream": [17, 23, 1876], "begin": [17, 20, 21, 23, 24, 32, 40, 46, 54, 492, 676, 756, 780, 816, 817, 861, 917, 961, 975, 1023, 1025, 1094, 1154, 1160, 1221, 1256, 1268, 1349, 1350, 1351, 1368, 1370, 1376, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1401, 1404, 1405, 1420, 1425, 1428, 1429, 1441, 1442, 1449, 1452, 1465, 1471, 1476, 1483, 1516, 1537, 1538, 1614, 1621, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1695, 1697, 1703, 1770, 1773, 1776, 1818, 1843, 1854, 1871, 1880, 1899, 1900, 1903, 1905, 1908, 1910, 1915, 1918, 1921, 1928, 1935, 1953, 1963], "suspect": [17, 1692, 1903, 1963], "cudnn": [18, 19, 756, 1210, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1404, 1449, 1450, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1583, 1765, 1876, 1878, 1903, 1914, 1915, 1957], "float16": [18, 21, 25, 46, 295, 682, 685, 756, 819, 822, 830, 846, 847, 854, 916, 928, 1126, 1183, 1201, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1386, 1387, 1404, 1405, 1421, 1434, 1449, 1544, 1583, 1678, 1679, 1750, 1860, 1899, 1911, 1925, 1927, 1934, 1936, 1937, 1940, 1941, 1965], "v100": [18, 756, 1386, 1404, 1449, 1903], "packedsequ": [18, 756, 1386, 1404, 1449, 1648, 1649, 1650, 1652], "rnn": [19, 730, 756, 757, 758, 759, 761, 854, 1386, 1387, 1404, 1405, 1451, 1615, 1624, 1647, 1882, 1907, 1911, 1927, 1939], "enforc": [19, 21, 53, 791, 886, 1201, 1404, 1434, 1449, 1880, 1911, 1938], "cuda_launch_block": [19, 1404, 1449, 1903], "colon": [19, 1404, 1449, 1930], "cublas_workspace_config": [19, 1404, 1449, 1857, 1903, 1915], "16": [19, 23, 319, 613, 734, 735, 736, 737, 738, 739, 768, 1072, 1090, 1117, 1154, 1164, 1201, 1212, 1224, 1230, 1236, 1237, 1241, 1257, 1334, 1346, 1348, 1349, 1357, 1358, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1402, 1403, 1404, 1422, 1427, 1428, 1429, 1431, 1432, 1434, 1441, 1449, 1460, 1477, 1491, 1508, 1510, 1511, 1513, 1517, 1528, 1529, 1664, 1718, 1795, 1857, 1865, 1869, 1877, 1881, 1898, 1903, 1911, 1914, 1916, 1918, 1920, 1923, 1930, 1934, 1935, 1937, 1939, 1940, 1950, 1953, 1963], "4096": [19, 1404, 1449, 1857, 1903, 1918], "heart": [20, 1956], "dataload": [20, 492, 1614, 1696, 1697, 1703, 1903, 1907, 1913, 1917, 1921, 1939], "batch_siz": [20, 29, 50, 52, 888, 1132, 1140, 1142, 1440, 1647, 1649, 1650, 1652, 1868, 1878, 1906, 1907, 1915, 1918, 1939], "shuffl": [20, 1876, 1939], "batch_sampl": 20, "num_work": [20, 31, 1915, 1917], "drop_last": 20, "timeout": [20, 23, 40, 1892, 1930], "worker_init_fn": [20, 1907, 1915], "prefetch_factor": 20, "persistent_work": 20, "__getitem__": [20, 1857], "__len__": [20, 54, 1878], "protocol": [20, 25, 30, 40, 42, 876, 1125, 1127, 1669, 1753, 1905, 1917, 1918, 1930, 1964], "possibli": [20, 40, 46, 1201, 1216, 1243, 1248, 1434, 1614, 1877, 1884, 1915, 1922, 1952], "sampl": [20, 25, 29, 47, 52, 54, 87, 152, 153, 375, 451, 478, 604, 775, 918, 966, 986, 1020, 1033, 1037, 1051, 1052, 1092, 1110, 1132, 1142, 1154, 1198, 1217, 1290, 1324, 1346, 1350, 1351, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1388, 1394, 1397, 1398, 1399, 1400, 1401, 1419, 1421, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1452, 1465, 1466, 1473, 1482, 1498, 1505, 1506, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1530, 1533, 1535, 1543, 1544, 1545, 1568, 1576, 1614, 1622, 1662, 1696, 1711, 1714, 1728, 1730, 1732, 1734, 1736, 1800, 1816, 1817, 1818, 1863, 1864, 1868, 1876, 1890, 1898, 1899, 1903, 1910, 1911, 1922, 1925, 1926, 1939, 1963], "idx": [20, 54, 894, 1201, 1342, 1377, 1434, 1622, 1878, 1894], "th": [20, 153, 311, 313, 319, 756, 897, 899, 918, 938, 1061, 1066, 1175, 1198, 1222, 1240, 1248, 1254, 1290, 1324, 1373, 1374, 1375, 1379, 1386, 1394, 1404, 1449, 1519, 1520, 1521, 1526, 1722, 1818, 1905, 1917, 1935, 1937], "iterabledataset": [20, 1910], "__iter__": [20, 1881], "suitabl": [20, 29, 932, 1220, 1692, 1757, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1914, 1924, 1926, 1939, 1954], "improb": 20, "fetch": [20, 53, 54, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1670, 1930], "stream": [20, 23, 31, 38, 46, 53, 149, 483, 889, 903, 968, 969, 973, 975, 976, 977, 978, 981, 982, 983, 991, 994, 995, 1009, 1015, 1047, 1050, 1312, 1315, 1316, 1321, 1669, 1743, 1876, 1878, 1880, 1930, 1953], "databas": 20, "remot": [20, 23, 27, 31, 1614, 1923, 1930, 1931], "real": [20, 29, 54, 79, 682, 683, 684, 685, 686, 688, 694, 904, 916, 941, 956, 962, 1020, 1090, 1091, 1093, 1095, 1096, 1097, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1191, 1193, 1194, 1197, 1198, 1221, 1230, 1231, 1232, 1236, 1237, 1238, 1239, 1240, 1243, 1244, 1245, 1250, 1253, 1255, 1257, 1258, 1259, 1260, 1264, 1265, 1269, 1270, 1271, 1281, 1287, 1401, 1443, 1446, 1447, 1483, 1621, 1668, 1818, 1822, 1865, 1866, 1867, 1875, 1876, 1878, 1880, 1900, 1903, 1920, 1922, 1925, 1930, 1932, 1938, 1940, 1941, 1949, 1951, 1952, 1955, 1956, 1958, 1964], "replica": [20, 21, 23, 27, 38, 1371, 1614, 1904], "duplic": [20, 313, 317, 468, 540, 917, 926, 947, 1158, 1159, 1201, 1434, 1854, 1855, 1918, 1934], "yield": [20, 21, 46, 54, 1062, 1064, 1201, 1247, 1248, 1434, 1871, 1880, 1881, 1887, 1923, 1925, 1935], "stochast": [20, 29, 1382, 1383, 1528, 1529, 1675, 1677, 1678, 1680, 1691, 1695, 1696, 1911, 1921], "decent": 20, "randomli": [20, 741, 742, 752, 760, 905, 1346, 1372, 1373, 1374, 1375, 1379, 1452, 1518, 1519, 1520, 1521, 1526, 1634, 1895, 1910, 1911], "permut": [20, 55, 63, 1074, 1247, 1248, 1267, 1290, 1292, 1736, 1876, 1878, 1894, 1920, 1927, 1938, 1940, 1958], "mini": [20, 775, 781, 1352, 1353, 1354, 1377, 1378, 1389, 1394, 1397, 1398, 1399, 1406, 1426, 1437, 1439, 1473, 1482, 1524, 1525, 1544, 1602, 1923], "neither": [20, 23, 791, 892, 895, 1057, 1117, 1440, 1481, 1661, 1843, 1905, 1914, 1930], "nor": [20, 23, 31, 46, 791, 895, 1236, 1237, 1264, 1440, 1481, 1614, 1661, 1720, 1822, 1905, 1918, 1952], "notion": [20, 904, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1956], "collat": 20, "minibatch": [20, 764, 765, 768, 769, 770, 1290, 1342, 1350, 1351, 1368, 1370, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1486, 1500, 1501, 1502, 1505, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1516, 1545, 1557, 1558, 1559, 1568, 1576, 1923], "loader": [20, 1921], "essenti": [20, 23, 28, 31, 54, 1290, 1894, 1903, 1917, 1934, 1948], "dummi": [20, 27, 1669, 1884, 1900, 1905, 1918, 1963, 1964], "infinit": [20, 1193, 1273, 1350, 1357, 1517, 1715, 1905, 1914, 1930, 1952], "drop": [20, 50, 52, 54, 1020, 1206, 1259, 1264, 1346, 1656, 1818, 1877, 1894, 1913, 1956], "roughli": [20, 1400, 1904, 1961, 1962], "dataset_it": 20, "pad": [20, 21, 708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 731, 734, 735, 736, 737, 738, 739, 764, 765, 768, 769, 770, 775, 778, 779, 781, 948, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1198, 1347, 1348, 1349, 1357, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1437, 1438, 1440, 1455, 1456, 1457, 1458, 1459, 1460, 1480, 1481, 1485, 1489, 1490, 1491, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1524, 1525, 1527, 1533, 1544, 1557, 1558, 1559, 1560, 1561, 1562, 1601, 1602, 1648, 1650, 1651, 1653, 1726, 1727, 1818, 1876, 1878, 1895, 1907, 1918, 1920, 1925, 1939, 1951, 1958], "length": [20, 21, 23, 25, 29, 258, 311, 313, 319, 349, 430, 431, 579, 580, 581, 731, 756, 810, 889, 903, 947, 991, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1127, 1142, 1175, 1198, 1216, 1220, 1333, 1334, 1352, 1357, 1362, 1371, 1378, 1381, 1386, 1402, 1404, 1440, 1449, 1477, 1485, 1508, 1509, 1510, 1517, 1525, 1544, 1583, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1728, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1802, 1804, 1805, 1806, 1808, 1809, 1818, 1843, 1868, 1878, 1880, 1887, 1894, 1895, 1901, 1907, 1934, 1941, 1951, 1953, 1958, 1963], "certain": [20, 21, 23, 37, 38, 51, 53, 54, 79, 682, 685, 731, 916, 928, 999, 1062, 1176, 1198, 1201, 1208, 1272, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1405, 1421, 1434, 1440, 1485, 1534, 1545, 1547, 1660, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1880, 1887, 1894, 1900, 1901, 1903, 1905, 1910, 1911, 1914, 1918, 1923, 1924, 1930, 1931, 1934, 1952, 1953, 1956, 1957, 1963], "cheaper": [20, 53], "bulk": [20, 1952], "arrai": [20, 31, 445, 756, 816, 817, 875, 876, 919, 937, 962, 966, 1074, 1118, 1126, 1127, 1135, 1136, 1272, 1302, 1381, 1386, 1387, 1404, 1405, 1527, 1743, 1750, 1770, 1804, 1805, 1806, 1808, 1809, 1836, 1843, 1851, 1862, 1877, 1881, 1903, 1911, 1934, 1936, 1940, 1941], "untouch": 20, "slightli": [20, 23, 29, 46, 1661, 1711, 1823, 1875, 1903, 1905, 1908, 1914, 1922], "default_col": 20, "consist": [20, 23, 25, 28, 29, 40, 41, 54, 904, 939, 940, 1201, 1230, 1236, 1237, 1239, 1241, 1242, 1243, 1244, 1268, 1270, 1434, 1481, 1623, 1626, 1674, 1721, 1822, 1877, 1880, 1887, 1894, 1895, 1906, 1911, 1913, 1915, 1918, 1921, 1924, 1934, 1949, 1957, 1963], "channel": [20, 49, 469, 470, 471, 775, 781, 804, 818, 821, 829, 841, 849, 1088, 1352, 1353, 1354, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1381, 1389, 1397, 1398, 1399, 1406, 1410, 1411, 1412, 1413, 1414, 1415, 1422, 1442, 1468, 1473, 1485, 1486, 1487, 1488, 1503, 1519, 1520, 1521, 1526, 1543, 1544, 1551, 1577, 1602, 1632, 1633, 1634, 1641, 1642, 1658, 1723, 1894, 1896, 1898, 1900, 1925, 1926, 1928, 1939], "class_index": 20, "namedtupl": [20, 54, 892, 1053, 1054, 1146, 1201, 1212, 1222, 1242, 1292, 1298, 1301, 1303, 1306, 1330, 1342, 1434, 1711, 1721, 1795, 1822, 1840, 1845, 1877, 1879, 1880, 1925], "situat": [20, 29, 42, 54, 80, 82, 948, 962, 1626, 1892, 1905, 1906, 1913, 1914, 1922, 1925, 1932, 1951, 1952, 1953, 1964], "gil": [20, 23, 27, 1900, 1903, 1930], "integ": [20, 23, 29, 40, 87, 287, 442, 444, 446, 495, 541, 556, 562, 681, 682, 683, 684, 685, 686, 762, 763, 781, 783, 861, 888, 916, 917, 926, 937, 961, 978, 980, 996, 1002, 1003, 1031, 1069, 1072, 1074, 1075, 1076, 1077, 1117, 1118, 1119, 1120, 1121, 1122, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1144, 1158, 1159, 1162, 1163, 1164, 1211, 1214, 1223, 1224, 1231, 1242, 1244, 1254, 1273, 1323, 1342, 1357, 1362, 1363, 1364, 1406, 1492, 1493, 1494, 1495, 1496, 1497, 1604, 1647, 1662, 1665, 1699, 1702, 1706, 1711, 1723, 1724, 1730, 1732, 1733, 1734, 1736, 1741, 1750, 1762, 1810, 1819, 1823, 1837, 1838, 1851, 1857, 1869, 1873, 1879, 1880, 1881, 1893, 1906, 1908, 1923, 1926, 1928, 1934, 1935, 1937, 1940, 1941, 1951, 1965], "descriptor": [20, 23, 1482, 1483, 1881, 1918], "parent": [20, 33, 38, 42, 46, 676, 784, 785, 813, 1434, 1892, 1917, 1922, 1932, 1939], "simplest": [20, 25, 31, 54, 854, 1347, 1348, 1349, 1362, 1363, 1364, 1427, 1428, 1429, 1624, 1904, 1905, 1911, 1925, 1932, 1934, 1953, 1956], "refcount": [20, 1892, 1913], "panda": 20, "pyarrow": 20, "13246": 20, "enumer": [20, 29, 54, 1201, 1434, 1436, 1445, 1696, 1878, 1879, 1899, 1903, 1917, 1939, 1962], "get_worker_info": [20, 1930], "seed": [20, 87, 1012, 1021, 1022, 1042, 1177, 1293, 1314, 1711, 1728, 1823, 1860, 1876, 1878, 1907, 1913, 1915, 1929], "naiv": [20, 1923, 1948, 1951, 1953], "shut": [20, 1930], "garbag": [20, 1932], "subtleti": [20, 55, 1371, 1905, 1907], "multiprocess": [20, 21, 23, 24, 26, 31, 33, 41, 42, 1371, 1614, 1876, 1894, 1904, 1931], "unix": [20, 38, 976, 1892], "fork": [20, 38, 1219, 1614, 1880, 1902, 1903, 1907, 1910, 1913, 1917, 1929, 1930, 1932], "child": [20, 31, 33, 46, 787, 1201, 1434, 1633, 1892, 1911, 1917, 1932], "address": [20, 23, 40, 43, 51, 215, 904, 905, 983, 1887, 1892, 1903, 1930, 1931, 1948], "maco": [20, 23, 1892, 1912], "spawn": [20, 21, 24, 31, 32, 38, 42, 1204, 1614, 1876, 1899, 1904, 1913, 1917, 1931], "__name__": [20, 21, 23, 32, 33, 41, 1904, 1905, 1913, 1917, 1922, 1931], "__main__": [20, 21, 23, 32, 33, 41, 1901, 1904, 1913, 1917, 1931], "bytecod": [20, 676, 1886, 1922, 1949, 1950, 1953, 1956, 1963], "base_se": 20, "worker_id": [20, 42, 1915], "therebi": [20, 29, 1921, 1925], "mandatorili": 20, "faq": [20, 1371, 1650, 1876], "initial_se": [20, 87, 1876, 1915, 1929], "host": [20, 23, 31, 33, 39, 40, 41, 42, 195, 208, 576, 599, 873, 1201, 1434, 1614, 1626, 1660, 1903, 1923, 1930, 1931, 1936, 1948, 1952], "recogn": [20, 1880, 1930, 1934, 1952], "simplecustombatch": 20, "transposed_data": 20, "zip": [20, 25, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1875, 1878, 1879, 1889, 1903, 1910, 1934], "tgt": [20, 1477, 1478, 1479], "collate_wrapp": 20, "float32": [20, 21, 46, 55, 60, 63, 265, 576, 613, 815, 816, 817, 818, 821, 822, 876, 956, 1088, 1089, 1126, 1148, 1150, 1183, 1338, 1351, 1477, 1486, 1487, 1488, 1500, 1678, 1679, 1715, 1720, 1728, 1732, 1747, 1762, 1763, 1765, 1807, 1866, 1895, 1899, 1903, 1914, 1918, 1927, 1934, 1935, 1936, 1937, 1940, 1941, 1963, 1965], "tensordataset": 20, "batch_ndx": 20, "is_pin": [20, 1647, 1878, 1893, 1920, 1936], "multiprocessing_context": 20, "pin_memory_devic": 20, "reshuffl": 20, "draw": [20, 153, 918, 1037, 1324, 1728, 1939, 1961], "mutual": [20, 23, 31, 731, 1941], "subprocess": [20, 23, 38, 40, 42, 1907, 1913], "incomplet": [20, 897, 1882, 1935], "divis": [20, 579, 613, 683, 768, 769, 770, 942, 1069, 1119, 1122, 1211, 1244, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1389, 1401, 1425, 1443, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1569, 1741, 1810, 1837, 1880, 1899, 1903], "smaller": [20, 54, 495, 541, 966, 1404, 1614, 1705, 1720, 1810, 1903, 1916, 1922, 1949, 1965], "basecontext": 20, "randomsampl": 20, "prefetch": [20, 46], "unpickl": [20, 23, 1272, 1922], "practic": [20, 23, 29, 46, 1876, 1877, 1887, 1892, 1894, 1900, 1905, 1908, 1911, 1916, 1922, 1930, 1945, 1952, 1953], "len": [20, 23, 25, 54, 55, 60, 217, 541, 691, 692, 1093, 1097, 1100, 1104, 1107, 1111, 1141, 1205, 1267, 1288, 1300, 1329, 1332, 1371, 1571, 1632, 1634, 1650, 1696, 1703, 1807, 1810, 1816, 1817, 1821, 1862, 1863, 1864, 1877, 1878, 1880, 1905, 1920, 1934, 1939, 1962], "proper": [20, 31, 53, 54, 1065, 1760, 1879, 1900, 1903, 1905, 1913, 1917], "guess": 20, "trust": [20, 23, 1272, 1875, 1922], "inaccur": [20, 21, 1544], "kwd": 20, "__getitems__": 20, "speedup": [20, 21, 1440, 1481, 1945, 1948, 1956, 1960], "myiterabledataset": 20, "assert": [20, 21, 29, 48, 50, 51, 52, 54, 55, 61, 63, 620, 907, 909, 910, 1132, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1199, 1204, 1205, 1210, 1583, 1670, 1868, 1879, 1881, 1905, 1906, 1911, 1916, 1922, 1925, 1941, 1951, 1962, 1963], "worker_info": 20, "iter_start": 20, "iter_end": 20, "per_work": 20, "ceil": [20, 176, 629, 630, 764, 765, 1347, 1348, 1349, 1402, 1403, 1427, 1428, 1429, 1500, 1501, 1502, 1557, 1558, 1559, 1726, 1727, 1750, 1878, 1893, 1903, 1920, 1934, 1958], "min": [20, 23, 33, 40, 54, 115, 184, 185, 186, 187, 298, 691, 692, 693, 754, 766, 767, 776, 798, 815, 816, 817, 818, 821, 871, 943, 944, 1017, 1054, 1088, 1089, 1161, 1232, 1246, 1247, 1253, 1257, 1259, 1264, 1270, 1290, 1324, 1356, 1393, 1420, 1422, 1442, 1454, 1461, 1507, 1544, 1548, 1577, 1579, 1584, 1602, 1690, 1695, 1696, 1705, 1709, 1711, 1721, 1822, 1846, 1847, 1848, 1849, 1878, 1890, 1893, 1918, 1920, 1925, 1928, 1930, 1953, 1958, 1965], "mult": 20, "12": [20, 21, 23, 46, 319, 513, 613, 682, 737, 738, 739, 741, 742, 938, 942, 1072, 1090, 1164, 1205, 1220, 1259, 1342, 1358, 1366, 1381, 1382, 1383, 1431, 1446, 1447, 1468, 1477, 1485, 1528, 1529, 1569, 1574, 1575, 1622, 1655, 1710, 1721, 1770, 1785, 1795, 1837, 1853, 1869, 1875, 1877, 1878, 1881, 1887, 1903, 1912, 1916, 1918, 1920, 1934, 1941, 1950, 1960, 1961], "overall_start": 20, "overall_end": 20, "stackdataset": 20, "assembl": 20, "imagedataset": 20, "textdataset": 20, "tuple_stack": 20, "dict_stack": 20, "concatdataset": 20, "chaindataset": 20, "chain": [20, 21, 29, 53, 54, 149, 889, 938, 1256, 1378, 1462, 1693, 1706, 1880, 1900, 1903, 1905, 1908, 1911, 1921, 1962], "fly": [20, 1017, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1900], "whole": [20, 23, 25, 1142, 1201, 1434, 1462, 1473, 1614, 1868, 1900, 1904, 1913, 1914, 1922, 1952, 1954, 1956, 1959, 1960], "_util": [20, 1961], "collate_fn_map": 20, "registri": [20, 1672, 1876, 1916, 1918, 1919], "default_collate_fn_map": 20, "insert": [20, 23, 29, 46, 53, 54, 743, 788, 789, 857, 858, 1435, 1436, 1444, 1614, 1757, 1760, 1770, 1791, 1815, 1856, 1877, 1888, 1903, 1919, 1920, 1925, 1962], "collate_tensor_fn": 20, "custom_col": 20, "collate_map": 20, "outer": [20, 687, 897, 1074, 1132, 1136, 1141, 1147, 1878, 1880, 1920], "unchang": [20, 495, 509, 511, 731, 810, 1113, 1201, 1434, 1477, 1742, 1813, 1899, 1914, 1925], "byte": [20, 23, 29, 40, 240, 432, 554, 876, 982, 1023, 1025, 1027, 1029, 1127, 1200, 1272, 1309, 1310, 1670, 1681, 1753, 1879, 1880, 1881, 1893, 1916, 1922, 1934, 1936], "k": [20, 23, 25, 29, 41, 54, 284, 352, 502, 509, 511, 513, 586, 613, 756, 941, 1061, 1074, 1130, 1143, 1163, 1222, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1245, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1273, 1291, 1295, 1347, 1349, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1382, 1383, 1386, 1387, 1404, 1405, 1419, 1421, 1422, 1427, 1429, 1440, 1441, 1449, 1451, 1516, 1528, 1529, 1551, 1568, 1621, 1709, 1711, 1721, 1749, 1799, 1800, 1801, 1802, 1804, 1805, 1806, 1808, 1809, 1818, 1840, 1845, 1878, 1879, 1898, 1903, 1905, 1917, 1934, 1935, 1937, 1956, 1957, 1958, 1963], "v_i": [20, 1240], "v_1": 20, "v_2": 20, "v1_i": 20, "v2_i": 20, "v1_1": 20, "v1_2": 20, "v2_1": 20, "v2_2": 20, "elem": [20, 1878], "customtyp": 20, "collate_customtype_fn": 20, "custotyp": 20, "default_convert": 20, "np": [20, 936, 1069, 1074, 1114, 1115, 1116, 1573, 1715, 1906, 1915, 1918, 1939, 1940, 1941], "fraction": [20, 29, 1044, 1117, 1123, 1319, 1365, 1366, 1367, 1382, 1383, 1440, 1481, 1528, 1529, 1631, 1632, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1722, 1898, 1953], "workerinfo": [20, 1930], "random_split": 20, "floor": [20, 55, 57, 63, 269, 643, 644, 764, 765, 1069, 1119, 1211, 1347, 1348, 1349, 1402, 1403, 1427, 1428, 1429, 1500, 1501, 1502, 1557, 1558, 1559, 1726, 1727, 1741, 1750, 1818, 1878, 1880, 1893, 1913, 1916, 1920, 1934, 1958], "frac": [20, 29, 277, 375, 645, 646, 683, 756, 768, 769, 770, 861, 917, 926, 962, 966, 1069, 1119, 1154, 1158, 1159, 1220, 1232, 1236, 1237, 1240, 1252, 1264, 1271, 1287, 1342, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1358, 1362, 1363, 1364, 1365, 1366, 1367, 1370, 1372, 1381, 1386, 1387, 1388, 1389, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1419, 1421, 1422, 1423, 1424, 1427, 1428, 1429, 1437, 1438, 1439, 1441, 1449, 1451, 1452, 1464, 1466, 1467, 1469, 1470, 1472, 1473, 1474, 1485, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1553, 1569, 1571, 1573, 1583, 1585, 1589, 1591, 1593, 1594, 1676, 1677, 1680, 1682, 1688, 1695, 1696, 1725, 1737, 1740, 1752, 1773, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1801, 1816, 1817, 1818, 1822, 1843, 1863, 1864, 1878, 1893, 1898, 1900, 1908, 1920, 1934, 1935], "remaind": [20, 486, 1122, 1154, 1878, 1920, 1950, 1958], "robin": [20, 23], "generator1": 20, "manual_se": [20, 51, 87, 1876, 1878, 1893, 1911, 1913, 1915, 1918, 1920, 1929], "42": [20, 820, 926, 1323, 1777, 1903, 1911, 1950], "generator2": 20, "30": [20, 23, 29, 31, 40, 442, 613, 716, 724, 725, 752, 760, 1154, 1223, 1355, 1357, 1361, 1421, 1485, 1491, 1508, 1517, 1605, 1699, 1701, 1707, 1724, 1833, 1905, 1918, 1921, 1930, 1950], "data_sourc": 20, "accedingsequencelengthsampl": 20, "argsort": [20, 1833, 1878, 1906, 1920], "tolist": [20, 350, 1880, 1920, 1936], "accedingsequencelengthbatchsampl": 20, "sequentialsampl": 20, "num_sampl": [20, 418, 1324, 1878], "drawn": [20, 172, 256, 284, 1324, 1662, 1728, 1732, 1733, 1898, 1941, 1942], "subsetrandomsampl": 20, "weightedrandomsampl": 20, "probabl": [20, 46, 153, 756, 918, 1162, 1278, 1324, 1342, 1346, 1350, 1357, 1370, 1372, 1373, 1374, 1375, 1379, 1386, 1388, 1404, 1440, 1441, 1449, 1505, 1516, 1517, 1518, 1519, 1520, 1521, 1526, 1535, 1545, 1568, 1583, 1721, 1892, 1905, 1917, 1918, 1935, 1939, 1952, 1953, 1954, 1959], "row": [20, 21, 28, 29, 207, 311, 313, 319, 581, 584, 689, 695, 873, 897, 899, 936, 962, 966, 1057, 1087, 1115, 1116, 1136, 1142, 1163, 1222, 1248, 1256, 1259, 1264, 1288, 1290, 1298, 1300, 1301, 1303, 1306, 1324, 1330, 1331, 1332, 1524, 1525, 1573, 1621, 1660, 1719, 1722, 1742, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1821, 1840, 1843, 1847, 1849, 1862, 1868, 1870, 1878, 1908, 1934, 1939], "05": [20, 27, 54, 112, 342, 690, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 904, 905, 940, 1088, 1190, 1216, 1217, 1287, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1477, 1479, 1481, 1503, 1534, 1543, 1547, 1614, 1694, 1700, 1701, 1707, 1779, 1780, 1785, 1877, 1878, 1921, 1931, 1941], "batchsampl": 20, "distributedsampl": [20, 1614], "num_replica": 20, "world_siz": [20, 21, 23, 24, 27, 31, 40, 41, 43, 46, 1614, 1904, 1923, 1930, 1931], "evenli": [20, 579, 580, 581, 691, 692, 1072, 1164, 1271, 1287, 1869], "set_epoch": 20, "is_distribut": [20, 1878, 1920], "start_epoch": 20, "n_epoch": 20, "vanilla": [21, 1887], "allreduc": [21, 23, 1614, 1903, 1904, 1920], "besid": [21, 23, 1668, 1903, 1904, 1939, 1949], "register_comm_hook": [21, 27, 46, 1614], "mainli": [21, 29, 823, 1357, 1517, 1943], "bucket": [21, 27, 1342, 1614, 1878, 1904, 1920, 1953, 1963], "gradbucket": [21, 1614], "flatten": [21, 46, 54, 55, 61, 870, 871, 1063, 1163, 1257, 1270, 1485, 1661, 1668, 1674, 1722, 1738, 1743, 1748, 1853, 1854, 1855, 1878, 1893, 1894, 1898, 1918, 1920, 1927, 1938, 1951], "decompos": [21, 54, 1124, 1131, 1245, 1900, 1905, 1918, 1958], "get_per_parameter_tensor": 21, "wise": [21, 23, 29, 683, 684, 694, 754, 766, 767, 776, 780, 880, 960, 1074, 1079, 1120, 1121, 1144, 1145, 1157, 1166, 1223, 1225, 1282, 1283, 1284, 1285, 1289, 1299, 1302, 1304, 1335, 1356, 1367, 1374, 1376, 1390, 1391, 1392, 1393, 1395, 1420, 1423, 1433, 1442, 1452, 1453, 1454, 1461, 1463, 1464, 1465, 1470, 1472, 1474, 1475, 1507, 1522, 1531, 1532, 1536, 1537, 1538, 1539, 1542, 1546, 1548, 1553, 1563, 1564, 1577, 1578, 1579, 1584, 1585, 1586, 1587, 1591, 1593, 1594, 1595, 1802, 1870, 1902, 1905, 1934, 1935, 1938, 1960], "_distributed_c10d": [21, 23], "1d": [21, 28, 29, 46, 698, 701, 734, 737, 768, 778, 947, 962, 966, 1057, 1071, 1162, 1163, 1178, 1198, 1256, 1257, 1302, 1331, 1339, 1343, 1347, 1357, 1362, 1365, 1370, 1373, 1374, 1378, 1402, 1426, 1427, 1439, 1441, 1486, 1492, 1495, 1498, 1500, 1508, 1511, 1519, 1525, 1554, 1557, 1722, 1723, 1726, 1818, 1843, 1865], "is_last": 21, "set_buff": 21, "stateless": [21, 51, 1896, 1911], "ddp_comm_hook": [21, 27], "default_hook": 21, "allreduce_hook": 21, "process_group": [21, 24, 25, 27, 46, 1473, 1614], "aggreg": [21, 23, 25, 33, 46, 1378, 1525, 1614, 1637, 1890, 1923, 1953, 1963], "henc": [21, 27, 31, 39, 40, 43, 46, 53, 918, 1127, 1430, 1431, 1432, 1486, 1807, 1895, 1900, 1903, 1904, 1930, 1932, 1948], "unaffect": [21, 495, 496, 1388], "ddp_model": [21, 23, 1614, 1904], "fp16_compress_hook": 21, "compress": [21, 46, 207, 583, 584, 1096, 1097, 1106, 1107, 1614, 1804, 1805, 1806, 1808, 1809, 1842, 1876, 1960], "decompress": [21, 1875, 1889], "bf16_compress_hook": 21, "nccl": [21, 24, 25, 41, 46, 1614, 1909], "brain": [21, 1937, 1940], "wrapper": [21, 23, 28, 29, 46, 53, 54, 55, 620, 753, 786, 820, 972, 975, 977, 978, 980, 1047, 1049, 1120, 1121, 1140, 1201, 1312, 1371, 1877, 1879, 1880, 1890, 1892, 1903, 1904, 1918, 1923, 1948], "fp16_compress_wrapp": 21, "powersgdst": 21, "matrix_approximation_rank": 21, "start_powersgd_it": 21, "powersgd_hook": 21, "bf16_compress_wrapp": 21, "wikipedia": [21, 1570, 1900, 1908, 1965], "wiki": [21, 1965], "bfloat16_float": 21, "point_format": 21, "vogel": 21, "et": [21, 29, 46, 1357, 1446, 1447, 1482, 1483, 1691, 1786, 1823, 1898], "al": [21, 29, 46, 1357, 1446, 1447, 1482, 1483, 1691, 1786, 1823, 1898], "neurip": [21, 29], "2019": [21, 29, 1031], "bandwidth": [21, 23, 39, 41, 1925, 1930, 1955, 1957], "hyperparamet": [21, 46, 54, 1939], "1000": [21, 1089, 1094, 1120, 1121, 1342, 1377, 1483, 1723, 1750, 1770, 1836, 1900, 1916, 1918, 1939], "min_compression_r": 21, "use_error_feedback": 21, "warm_start": 21, "orthogonalization_epsilon": 21, "random_se": 21, "compression_stats_logging_frequ": 21, "batch_tensors_with_same_shap": 21, "tune": [21, 23, 27, 1031, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1900, 1903, 1912, 1925, 1963], "stronger": [21, 55], "threshold": [21, 54, 1255, 1258, 1395, 1465, 1470, 1591, 1597, 1705, 1770, 1878, 1899, 1903, 1920, 1939], "exponenti": [21, 256, 1084, 1252, 1278, 1279, 1280, 1288, 1356, 1376, 1522, 1876, 1880, 1920, 1921, 1935, 1942], "grid": [21, 1094, 1302, 1498, 1533, 1878, 1903, 1939, 1958], "satisfactori": 21, "nlp": [21, 1397, 1398, 1399, 1406, 1953], "appendix": [21, 1876], "defer": [21, 46, 1903, 1923], "hybrid": [21, 46, 217, 539, 579, 580, 581, 583, 584, 1165], "scheme": [21, 40, 475, 798, 815, 816, 817, 818, 821, 823, 1911], "sensit": [21, 1395, 1465, 1918, 1922, 1931, 1952], "suboptim": [21, 1955], "trajectori": 21, "irrecover": 21, "impact": [21, 23, 1031, 1765, 1888, 1890, 1900, 1925, 1938, 1953, 1959, 1963], "warm": [21, 27, 1020, 1695, 1696, 1903, 1924, 1948, 1953, 1961], "num_row": 21, "num_col": 21, "1e": [21, 54, 112, 342, 690, 708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 751, 904, 905, 939, 940, 1190, 1216, 1217, 1267, 1352, 1353, 1354, 1369, 1388, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1420, 1443, 1448, 1473, 1477, 1479, 1481, 1482, 1503, 1515, 1530, 1534, 1535, 1543, 1547, 1569, 1572, 1576, 1599, 1622, 1655, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1692, 1705, 1713, 1766, 1877, 1878, 1905, 1911, 1918, 1921, 1935, 1941], "orthogon": [21, 1237, 1240, 1259, 1264, 1273, 1709, 1721, 1898, 1900, 1911, 1934], "div": [21, 234, 1070, 1119, 1122, 1342, 1446, 1447, 1741, 1850, 1878, 1884, 1893, 1920, 1934, 1937, 1958, 1962], "batch": [21, 23, 29, 41, 43, 46, 47, 48, 51, 52, 54, 55, 62, 63, 579, 580, 581, 583, 584, 682, 698, 699, 700, 701, 702, 703, 731, 756, 775, 781, 903, 904, 905, 916, 928, 929, 936, 939, 940, 941, 948, 974, 1062, 1064, 1074, 1135, 1136, 1142, 1198, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1273, 1281, 1290, 1291, 1295, 1350, 1351, 1352, 1353, 1354, 1357, 1362, 1363, 1368, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1379, 1381, 1386, 1387, 1388, 1389, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1425, 1426, 1437, 1438, 1439, 1440, 1441, 1443, 1446, 1447, 1448, 1449, 1451, 1465, 1466, 1473, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1485, 1498, 1503, 1505, 1506, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1526, 1527, 1530, 1543, 1544, 1545, 1568, 1576, 1583, 1601, 1602, 1605, 1614, 1621, 1647, 1648, 1650, 1651, 1653, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1696, 1697, 1703, 1709, 1711, 1721, 1725, 1804, 1805, 1806, 1808, 1809, 1813, 1818, 1822, 1823, 1842, 1845, 1846, 1848, 1865, 1868, 1876, 1893, 1894, 1895, 1899, 1903, 1906, 1907, 1911, 1913, 1923, 1925, 1930, 1934, 1939, 1940, 1951, 1952, 1953, 1957, 1961, 1963], "epsilon": [21, 54, 815, 816, 817, 818, 821, 861, 1255, 1258, 1352, 1353, 1354, 1369, 1389, 1397, 1398, 1399, 1406, 1443, 1473, 1515, 1569, 1622, 1655, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1725, 1878, 1935], "bucket_cap_mb": [21, 1614, 1904], "footprint": [21, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1903, 1918, 1934, 1960], "bottleneck": [21, 1876, 1911, 1955], "memor": 21, "compens": 21, "apex": 21, "uncompress": [21, 1934], "p": [21, 25, 29, 46, 54, 153, 232, 284, 422, 423, 450, 487, 488, 604, 682, 685, 916, 918, 928, 936, 1068, 1221, 1232, 1238, 1239, 1247, 1248, 1290, 1292, 1295, 1305, 1327, 1346, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1400, 1402, 1403, 1439, 1443, 1445, 1482, 1483, 1499, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1554, 1555, 1565, 1569, 1572, 1573, 1599, 1618, 1624, 1626, 1632, 1641, 1661, 1691, 1742, 1799, 1878, 1879, 1899, 1900, 1903, 1907, 1908, 1913, 1924, 1934, 1935, 1957, 1958], "pq": 21, "mq": [21, 1925, 1944], "tp": [21, 28], "awai": [21, 54, 951, 1533, 1876, 1894, 1900, 1906, 1951], "config": [21, 46, 54, 788, 789, 790, 791, 855, 857, 948, 1904, 1917, 1928, 1950, 1951, 1953, 1955, 1956, 1957, 1959, 1963], "comm": [21, 23, 1904], "handler": [21, 23, 33, 34, 1633, 1890, 1910, 1922, 1964], "batched_powersgd_hook": 21, "destroi": [21, 40, 1371, 1900, 1930], "squar": [21, 29, 547, 735, 736, 737, 738, 775, 781, 790, 966, 1061, 1063, 1198, 1232, 1234, 1236, 1237, 1238, 1241, 1242, 1246, 1248, 1250, 1252, 1254, 1258, 1260, 1261, 1263, 1264, 1268, 1281, 1290, 1340, 1344, 1348, 1349, 1363, 1364, 1366, 1367, 1382, 1383, 1395, 1403, 1425, 1428, 1429, 1432, 1465, 1477, 1500, 1509, 1512, 1528, 1529, 1533, 1542, 1544, 1564, 1587, 1602, 1621, 1676, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1752, 1811, 1845, 1862, 1878, 1920, 1934], "truncat": [21, 1119, 1851, 1895, 1898, 1907, 1914], "impli": [21, 40, 46, 1892, 1900, 1918, 1923, 1928, 1930, 1952], "debugging_hook": 21, "noop_hook": 21, "noop": [21, 1614], "headroom": 21, "desynchron": [21, 23], "trainer": [21, 31, 33, 38, 41, 42, 1614, 1930], "restart": [21, 31, 39, 41, 43, 1695, 1696, 1892, 1939, 1950], "__setstate__": 21, "__getstate__": 21, "reload": [21, 27, 46, 1875], "sy": [21, 32, 41, 43, 1875, 1903, 1922], "tempfil": 21, "mp": [21, 23, 24, 42, 1312, 1614, 1876, 1904, 1905, 1913, 1925, 1931, 1936, 1937, 1944], "simplemodel": 21, "24": [21, 23, 29, 921, 1259, 1422, 1498, 1654, 1721, 1838, 1877, 1898, 1902, 1935, 1950], "fc2": [21, 1605, 1923], "master_addr": [21, 23, 31, 41, 43, 1904, 1923, 1930, 1931], "localhost": [21, 23, 40, 41, 1904, 1923, 1930, 1931], "master_port": [21, 23, 31, 41, 43, 1904, 1923, 1930, 1931], "12355": 21, "init_process_group": [21, 23, 24, 27, 31, 41, 43, 1614, 1903, 1904, 1930], "cleanup": 21, "destroy_process_group": 21, "run_demo": 21, "demo_fn": 21, "nproc": [21, 23, 38, 39, 41, 1892, 1904, 1931], "demo_seri": 21, "gettempdir": 21, "device_id": [21, 23, 24, 27, 41, 46, 1272, 1371, 1473, 1598, 1614, 1904], "powersgd_st": 21, "lr": [21, 24, 27, 46, 1605, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1903, 1904, 1911, 1913, 1921, 1931, 1939], "001": [21, 904, 905, 1210, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1704, 1904, 1918], "comm_hook": 21, "comm_hook_st": 21, "barrier": [21, 31, 40, 1920], "map_loc": [21, 1205, 1208, 1272, 1614, 1875, 1889, 1922], "new_ddp_model": 21, "n_gpu": 21, "device_count": [21, 23, 1860, 1876], "got": [21, 23, 887, 1860, 1905, 1941], "thank": [21, 29, 1905, 1923], "author": [21, 40, 41, 46, 1142, 1688, 1728, 1868, 1899, 1950, 1953, 1955, 1959, 1960, 1963], "thij": 21, "par": 21, "home": [22, 1903], "brief": [23, 1614, 1892, 1930], "introduct": [23, 29, 1009, 1614, 1876, 1877, 1881, 1893, 1901, 1911, 1918, 1930, 1934, 1939], "mpi": [23, 1614], "gloo": [23, 41, 1614, 1904, 1909, 1930], "recv": [23, 1614, 1920, 1931], "broadcast": [23, 27, 29, 46, 51, 96, 195, 396, 398, 399, 400, 509, 511, 513, 562, 681, 682, 683, 684, 685, 686, 687, 693, 731, 880, 916, 921, 924, 928, 929, 930, 931, 961, 988, 1017, 1068, 1069, 1074, 1079, 1119, 1120, 1121, 1122, 1143, 1145, 1157, 1167, 1225, 1226, 1233, 1246, 1250, 1255, 1256, 1258, 1261, 1269, 1289, 1294, 1295, 1305, 1323, 1326, 1335, 1338, 1351, 1369, 1388, 1440, 1506, 1515, 1577, 1614, 1674, 1710, 1718, 1741, 1743, 1819, 1838, 1843, 1871, 1876, 1880, 1893, 1894, 1895, 1904, 1918, 1920, 1935, 1953, 1958], "all_reduc": [23, 42, 1614], "all_gath": 23, "scatter": [23, 27, 46, 509, 511, 513, 1371, 1857, 1878, 1907, 1920, 1930], "reduce_scatt": [23, 1920], "all_to_al": 23, "v1": [23, 46, 1269, 1710, 1875, 1904, 1930], "init_method": [23, 1614, 1930], "adher": [23, 1880, 1934], "some_fil": 23, "machine_nam": 23, "share_folder_nam": 23, "tcpstore": [23, 40], "past": [23, 54, 986, 1033, 1037, 1051, 1052, 1614, 1907, 1955, 1957, 1960], "ask": [23, 50, 51, 1875, 1876, 1906, 1908, 1945], "infiniband": [23, 1614, 1930], "interconnect": 23, "gpudirect": 23, "ethernet": 23, "ip": [23, 40], "ib": 23, "upcom": [23, 1899], "nccl_socket_ifnam": 23, "eth0": 23, "gloo_socket_ifnam": 23, "comma": [23, 1074, 1880, 1886], "eth1": 23, "eth2": 23, "eth3": 23, "imper": 23, "nccl_debug": 23, "info": [23, 31, 34, 38, 676, 888, 977, 978, 980, 1231, 1242, 1244, 1245, 1249, 1262, 1290, 1315, 1316, 1670, 1876, 1878, 1886, 1904, 1905, 1906, 1918, 1922, 1950, 1951, 1952, 1963], "nccl_debug_subsi": 23, "coll": 23, "hang": [23, 24, 27, 1614, 1904], "topologi": [23, 25, 28, 31], "effort": [23, 1930, 1957], "socket": [23, 1892, 1930], "nccl_socket_nthread": 23, "nccl_nsocks_perthread": 23, "cloud": [23, 1934, 1939], "aw": [23, 32, 966], "gcp": [23, 1960], "primit": [23, 27, 40, 1272, 1877, 1879, 1881, 1902, 1912, 1918, 1930, 1958], "kind": [23, 34, 54, 676, 1220, 1615, 1673, 1720, 1785, 1875, 1884, 1905, 1913, 1918, 1922, 1925, 1935, 1937, 1956], "connect": [23, 31, 40, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1462, 1892, 1930, 1961], "advantag": [23, 40, 41, 1351, 1395, 1904, 1907, 1930, 1934, 1948], "redund": [23, 46, 1090, 1091, 1093, 1095, 1109, 1111, 1818], "averag": [23, 27, 731, 762, 763, 764, 765, 817, 818, 913, 915, 966, 1037, 1051, 1201, 1339, 1340, 1341, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1368, 1370, 1378, 1388, 1394, 1400, 1401, 1402, 1403, 1407, 1408, 1409, 1425, 1426, 1434, 1437, 1438, 1439, 1440, 1441, 1448, 1465, 1466, 1473, 1482, 1492, 1493, 1494, 1500, 1501, 1502, 1505, 1506, 1516, 1530, 1545, 1554, 1555, 1568, 1576, 1614, 1675, 1676, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1843, 1876, 1904, 1924], "elimin": [23, 54, 606, 1854, 1855, 1915, 1955, 1962], "thrash": 23, "recurr": [23, 756, 757, 1216, 1357, 1371, 1386, 1387, 1404, 1449, 1624, 1650, 1689, 1876, 1903], "use_distribut": 23, "datetim": [23, 1890], "timedelta": [23, 40, 1890], "1800": 23, "group_nam": [23, 37], "pg_option": 23, "url": [23, 40, 912, 1875, 1889, 1930], "discov": [23, 1930], "encod": [23, 31, 37, 40, 46, 54, 1248, 1272, 1315, 1316, 1350, 1351, 1477, 1478, 1479, 1480, 1481, 1614, 1804, 1805, 1806, 1808, 1809, 1877, 1880, 1881, 1905, 1916, 1922, 1931, 1934], "ucc": 23, "lowercas": 23, "deadlock": [23, 1614], "job": [23, 31, 33, 34, 36, 37, 39, 40, 41, 42, 1614, 1697, 1703, 1910, 1924, 1939], "exchang": [23, 40, 978, 1062, 1903, 1918], "nccl_blocking_wait": 23, "nccl_async_error_handl": [23, 1903], "throw": [23, 24, 28, 53, 54, 189, 321, 326, 541, 610, 1186, 1201, 1241, 1290, 1434, 1614, 1616, 1617, 1650, 1661, 1717, 1857, 1895, 1900, 1915, 1930, 1940, 1953, 1963], "abort": [23, 1903], "crash": [23, 33, 40, 1892, 1900, 1930, 1932, 1939], "caught": [23, 1614, 1892], "littl": [23, 1905, 1932, 1956], "watch": [23, 1950], "dog": 23, "deprec": [23, 31, 40, 41, 46, 50, 404, 509, 553, 599, 781, 782, 783, 789, 822, 903, 904, 938, 939, 1024, 1028, 1147, 1201, 1255, 1258, 1290, 1291, 1350, 1351, 1368, 1370, 1393, 1394, 1400, 1401, 1425, 1426, 1434, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1487, 1488, 1505, 1506, 1516, 1545, 1568, 1576, 1602, 1603, 1604, 1606, 1614, 1655, 1656, 1658, 1661, 1721, 1737, 1818, 1822, 1845, 1876, 1877, 1882, 1892, 1901, 1924, 1928, 1936, 1940, 1941, 1953], "processgroupopt": 23, "processgroupnccl": [23, 1904], "is_high_priority_stream": 23, "backend_nam": [23, 1860], "custom_backend": 23, "is_initi": [23, 1876], "is_mpi_avail": 23, "is_nccl_avail": 23, "is_gloo_avail": 23, "is_torchelastic_launch": 23, "elast": [23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 1876], "aka": [23, 55, 62, 63, 913, 1395, 1900, 1937, 1951], "torchelast": [23, 26, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43], "torchelastic_run_id": [23, 41], "proxi": [23, 25, 1925, 1930, 1956], "rendezv": [23, 26, 31, 37, 39, 43, 1904, 1930], "null": [23, 32, 34, 37, 55, 59], "discoveri": [23, 40, 1903, 1922], "reachabl": 23, "multicast": 23, "20": [23, 27, 29, 319, 681, 716, 724, 725, 730, 734, 735, 736, 737, 738, 739, 742, 752, 756, 757, 758, 759, 760, 761, 768, 1154, 1199, 1202, 1212, 1223, 1257, 1323, 1346, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1357, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1379, 1382, 1383, 1386, 1387, 1389, 1396, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1406, 1421, 1427, 1428, 1429, 1431, 1432, 1434, 1449, 1451, 1462, 1470, 1473, 1476, 1477, 1478, 1479, 1491, 1508, 1510, 1511, 1513, 1517, 1528, 1529, 1535, 1591, 1621, 1622, 1646, 1655, 1658, 1681, 1696, 1724, 1833, 1877, 1878, 1895, 1904, 1905, 1914, 1921, 1930, 1934, 1950, 1952, 1956], "23456": 23, "clean": [23, 31, 54, 955, 1013, 1875, 1892, 1922], "fcntl": 23, "nf": 23, "init": [23, 31, 33, 46, 1201, 1434, 1442, 1461, 1654, 1876, 1882, 1900, 1905, 1910, 1911, 1951], "brand": [23, 1905], "succe": [23, 28, 40, 51, 1903, 1905, 1917, 1963], "unexpect": [23, 30, 54, 974, 1125, 1127, 1130, 1201, 1434, 1656, 1674, 1813, 1877, 1900, 1905, 1914, 1952, 1953, 1956], "unsuccess": 23, "mnt": 23, "sharedfil": 23, "port": [23, 31, 39, 40, 41, 1909], "backend_str": 23, "uppercas": 23, "classmethod": [23, 40, 55, 57, 728, 734, 735, 736, 741, 742, 752, 760, 788, 789, 790, 811, 812, 813, 820, 850, 977, 1377, 1378, 1473, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1670, 1880, 1881, 1905, 1925, 1930, 1936, 1964], "register_backend": [23, 1930, 1949], "extended_api": 23, "instanti": [23, 27, 39, 40, 41, 46, 54, 837, 1078, 1176, 1378, 1525, 1623, 1647, 1654, 1659, 1875, 1877, 1879, 1880, 1903, 1905, 1911, 1918, 1936], "3rd": [23, 29, 40, 613, 1705, 1901], "processgroup": [23, 25, 27, 46, 1614], "four": [23, 1246, 1363, 1905, 1908, 1930, 1932], "c10d": [23, 31, 39, 41, 43, 1614, 1904, 1920], "distributedbackendopt": 23, "get_backend": [23, 40], "get_rank": [23, 46, 1473], "uniqu": [23, 31, 37, 40, 41, 42, 509, 513, 1192, 1236, 1237, 1241, 1247, 1248, 1250, 1259, 1261, 1263, 1264, 1301, 1308, 1799, 1822, 1855, 1875, 1877, 1886, 1889, 1905, 1922, 1924, 1930, 1931, 1932, 1934, 1939, 1948], "get_world_s": 23, "filestor": [23, 40], "hashstor": 23, "client": [23, 27, 40, 1031, 1922, 1953], "host_nam": 23, "hostnam": [23, 31, 40, 1924], "listen": 23, "is_mast": 23, "300": [23, 31, 1278, 1351, 1651, 1653, 1921], "wait_for_work": 23, "multi_ten": 23, "underli": [23, 25, 27, 29, 31, 46, 51, 54, 96, 309, 324, 375, 398, 400, 470, 471, 472, 473, 480, 495, 516, 520, 553, 554, 555, 609, 744, 753, 874, 977, 1171, 1175, 1201, 1272, 1333, 1576, 1739, 1842, 1856, 1877, 1880, 1895, 1903, 1907, 1909, 1923, 1930, 1936, 1938, 1945, 1952, 1956], "tcpserver": 23, "master_listen_fd": 23, "server_stor": 23, "127": [23, 790, 1894, 1925, 1939], "1234": [23, 40, 1178], "client_stor": 23, "first_kei": 23, "first_valu": 23, "hashmap": 23, "file_nam": [23, 1875, 1889, 1922], "store1": 23, "store2": 23, "prefixstor": 23, "old": [23, 30, 54, 850, 1125, 1374, 1658, 1666, 1705, 1753, 1874, 1876, 1877, 1900, 1903, 1905, 1917, 1925, 1939, 1952, 1956], "whose": [23, 29, 46, 54, 540, 855, 891, 938, 961, 1062, 1074, 1079, 1127, 1145, 1154, 1157, 1163, 1201, 1217, 1225, 1271, 1287, 1289, 1335, 1434, 1614, 1662, 1715, 1773, 1839, 1880, 1900, 1905, 1908, 1922, 1934, 1939, 1941, 1951, 1963], "quantiti": [23, 47, 52, 1236, 1237, 1264, 1400, 1631, 1632, 1634, 1635, 1637, 1640, 1641, 1642, 1643, 1705, 1906, 1908], "compare_set": 23, "arg2": 23, "expected_valu": 23, "desired_valu": 23, "second_valu": 23, "overload": [23, 54, 613, 1672, 1879, 1880, 1884, 1919], "bad_kei": 23, "num_kei": 23, "written": [23, 33, 51, 912, 1033, 1371, 1669, 1691, 1877, 1879, 1887, 1888, 1900, 1904, 1905, 1906, 1911, 1916, 1918, 1922, 1924, 1936, 1939, 1945, 1951, 1955, 1957, 1962, 1963], "destruct": [23, 1890, 1930, 1932], "delete_kei": 23, "successfulli": [23, 31, 37, 67, 68, 69, 1207, 1766, 1892, 1911, 1916, 1930, 1963], "set_timeout": 23, "grain": [23, 854, 857, 1583, 1900, 1918, 1934, 1945, 1955, 1963], "plai": 23, "new_group": [23, 46, 1473], "opaqu": [23, 30, 975, 1009, 1010, 1125, 1959], "pattern": [23, 25, 788, 789, 790, 792, 850, 857, 1017, 1371, 1650, 1800, 1877, 1880, 1900, 1903, 1905, 1907, 1909, 1916, 1926, 1927, 1934, 1948, 1951, 1952, 1962], "use_local_synchron": 23, "enqueu": [23, 53, 978, 980, 981, 1903, 1931], "significantli": [23, 46, 898, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1765, 1934, 1949], "taken": [23, 29, 53, 54, 55, 60, 861, 1095, 1097, 1120, 1121, 1357, 1370, 1378, 1441, 1517, 1525, 1770, 1802, 1898, 1900, 1902, 1903, 1905, 1907, 1910, 1916, 1918, 1922, 1924, 1963], "get_group_rank": 23, "global_rank": [23, 31], "translat": [23, 84, 85, 1154, 1900, 1932, 1956], "get_global_rank": 23, "group_rank": [23, 31, 41], "get_process_group_rank": 23, "dst": [23, 1875, 1922], "destin": [23, 25, 34, 37, 46, 208, 413, 414, 599, 989, 990, 1143, 1201, 1307, 1308, 1434, 1668, 1669, 1878, 1930, 1931, 1936], "unspecifi": [23, 478, 816, 817, 818, 821, 904, 905, 1467, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1801, 1887, 1934, 1939], "sender": [23, 1932], "isend": 23, "irecv": 23, "is_complet": 23, "finish": [23, 25, 31, 37, 38, 40, 42, 53, 1131, 1903, 1904, 1917, 1924, 1930, 1932], "batch_isend_irecv": 23, "p2p_op_list": 23, "p2pop": 23, "op_list": 23, "send_tensor": 23, "recv_tensor": 23, "send_op": 23, "recv_op": 23, "req": 23, "pg": [23, 1614], "set_devic": [23, 25, 46, 1614, 1761, 1876, 1930, 1937], "p2p": [23, 40], "async_op": 23, "onto": [23, 46, 54, 55, 57, 1036, 1208, 1211, 1272, 1626, 1858, 1875, 1892, 1903, 1906, 1907, 1911, 1924, 1956, 1962], "get_futur": [23, 1614], "regard": [23, 1365, 1366, 1367, 1377, 1378, 1524, 1525, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1877, 1932, 1934, 1957], "add_": [23, 49, 51, 220, 1131, 1878, 1893, 1901, 1934], "101": [23, 1342], "overwrot": 23, "sent": [23, 25, 1013, 1880, 1892, 1913, 1930, 1931, 1932], "broadcast_object_list": 23, "object_list": 23, "picklabl": [23, 1201, 1434, 1922], "current_devic": [23, 25, 46, 986, 994, 995, 1002, 1003, 1019, 1023, 1025, 1026, 1027, 1029, 1031, 1032, 1033, 1037, 1038, 1039, 1040, 1050, 1051, 1052, 1860, 1876, 1937], "insecur": [23, 1272], "malici": [23, 1272, 1922], "ineffici": [23, 46, 1903, 1925], "redoptyp": 23, "bitwis": [23, 920, 922, 923, 925, 1881, 1914, 1926, 1942], "reduceop": 23, "int64": [23, 79, 190, 207, 311, 319, 391, 861, 919, 932, 1075, 1088, 1089, 1126, 1516, 1647, 1732, 1736, 1737, 1757, 1804, 1805, 1806, 1808, 1809, 1903, 1934, 1936, 1937, 1940, 1965], "1j": [23, 694, 959, 960, 1197, 1745, 1746, 1865, 1900, 1908, 1916], "2j": [23, 694, 959, 960, 1745, 1746, 1773, 1865, 1900], "tensor_list": [23, 1895], "all_gather_into_tensor": 23, "output_tensor": 23, "input_tensor": [23, 1955], "accommod": [23, 1430, 1431, 1432], "ii": [23, 962, 1074, 1404, 1405], "tensor_in": 23, "tensor_out": 23, "tensor_out2": 23, "all_gather_object": 23, "obj": [23, 54, 876, 998, 1187, 1188, 1207, 1212, 1753, 1861, 1878, 1916, 1917, 1922], "pickabl": 23, "popul": [23, 29, 38, 46, 53, 54, 333, 491, 499, 500, 1301, 1330, 1903, 1905, 1952, 1962], "responsibl": 23, "gather_object": 23, "gather_list": 23, "object_gather_list": 23, "scatter_list": 23, "tensor_s": 23, "t_one": 23, "t_five": 23, "scatter_object_list": 23, "scatter_object_output_list": 23, "scatter_object_input_list": 23, "output_list": 23, "input_list": 23, "reduce_scatter_tensor": 23, "Its": [23, 54, 966, 989, 1201, 1248, 1266, 1267, 1292, 1434, 1661, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1865, 1880, 1904], "all_to_all_singl": 23, "output_split_s": 23, "input_split_s": 23, "dim": [23, 28, 29, 51, 52, 54, 55, 62, 63, 111, 113, 114, 115, 117, 133, 134, 135, 183, 203, 206, 209, 210, 211, 212, 213, 214, 228, 258, 262, 279, 310, 311, 312, 313, 314, 315, 319, 320, 352, 378, 390, 405, 407, 408, 409, 412, 426, 427, 428, 429, 433, 434, 450, 459, 467, 476, 487, 488, 490, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 533, 534, 537, 538, 540, 543, 548, 549, 551, 556, 561, 569, 574, 575, 579, 580, 581, 583, 584, 586, 601, 602, 605, 606, 607, 608, 611, 613, 689, 691, 692, 693, 695, 870, 871, 872, 899, 900, 902, 935, 942, 957, 965, 974, 989, 991, 1053, 1054, 1055, 1056, 1057, 1066, 1072, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1113, 1114, 1132, 1142, 1143, 1154, 1164, 1172, 1173, 1174, 1175, 1178, 1222, 1232, 1233, 1253, 1257, 1267, 1269, 1270, 1280, 1288, 1298, 1300, 1301, 1303, 1306, 1308, 1322, 1329, 1330, 1331, 1332, 1333, 1334, 1342, 1369, 1370, 1371, 1374, 1378, 1380, 1385, 1400, 1405, 1424, 1440, 1441, 1442, 1467, 1469, 1481, 1483, 1484, 1515, 1516, 1532, 1535, 1544, 1552, 1557, 1558, 1559, 1568, 1569, 1571, 1573, 1577, 1583, 1589, 1590, 1598, 1614, 1622, 1628, 1632, 1634, 1641, 1642, 1655, 1658, 1661, 1712, 1719, 1722, 1742, 1743, 1748, 1749, 1754, 1755, 1756, 1759, 1760, 1791, 1794, 1795, 1798, 1801, 1803, 1810, 1813, 1815, 1816, 1817, 1818, 1821, 1833, 1837, 1838, 1839, 1840, 1843, 1844, 1852, 1853, 1854, 1855, 1856, 1863, 1864, 1868, 1869, 1876, 1877, 1878, 1894, 1895, 1906, 1907, 1916, 1918, 1920, 1934, 1935, 1937, 1943, 1951, 1958], "13": [23, 871, 942, 1072, 1075, 1119, 1154, 1164, 1205, 1290, 1358, 1382, 1383, 1431, 1468, 1528, 1529, 1795, 1837, 1869, 1877, 1881, 1920, 1934, 1950, 1957, 1963], "14": [23, 55, 62, 63, 319, 513, 941, 1017, 1018, 1057, 1072, 1164, 1253, 1259, 1328, 1358, 1431, 1721, 1728, 1795, 1837, 1838, 1843, 1869, 1877, 1881, 1918, 1920, 1934, 1938, 1939, 1950], "15": [23, 54, 613, 1072, 1144, 1154, 1164, 1223, 1237, 1358, 1431, 1432, 1651, 1653, 1713, 1786, 1795, 1841, 1869, 1877, 1878, 1881, 1918, 1934], "uneven": [23, 24, 27, 1614], "18": [23, 319, 442, 681, 1075, 1154, 1198, 1273, 1431, 1672, 1877, 1918, 1920, 1934, 1950], "21": [23, 29, 681, 938, 1057, 1259, 1721, 1843, 1877, 1934], "22": [23, 29, 319, 613, 1273, 1605, 1651, 1653, 1877, 1915, 1934, 1950], "23": [23, 509, 1273, 1781, 1877, 1934, 1963], "31": [23, 924, 1349, 1429, 1605, 1781, 1918], "33": [23, 734, 735, 736, 737, 738, 739, 768, 1201, 1362, 1363, 1364, 1366, 1367, 1432, 1434, 1508, 1510, 1511, 1513, 1877, 1918], "34": [23, 1950, 1956, 1963], "35": [23, 1259, 1353, 1354, 1398, 1399, 1473, 1721], "36": [23, 319, 1117, 1154, 1950, 1956], "input_split": 23, "output_split": 23, "5j": 23, "6j": 23, "7j": 23, "8j": 23, "9j": 23, "10j": 23, "11j": 23, "12j": 23, "13j": 23, "14j": 23, "15j": 23, "16j": 23, "output_tensor_list": 23, "input_tensor_list": 23, "monitored_barri": [23, 1920], "wait_all_rank": 23, "band": 23, "bor": 23, "bxor": 23, "premul_sum": 23, "suppos": [23, 54, 1198, 1706, 1887, 1934, 1952, 1953, 1954], "_make_nccl_premul_sum": 23, "all_reduce_multigpu": 23, "__members__": 23, "reduce_op": 23, "mention": [23, 1875, 1879, 1880, 1894, 1900, 1903, 1911, 1918, 1934, 1938, 1945, 1956, 1957, 1963], "revisit": 23, "broadcast_multigpu": 23, "reduce_multigpu": 23, "all_gather_multigpu": 23, "reduce_scatter_multigpu": 23, "distributed_test": 23, "dev_idx": 23, "src_tensor": 23, "resid": [23, 46, 53, 195, 287, 335, 1272, 1614, 1903, 1923, 1930], "dst_tensor": 23, "cpp_extens": [23, 1876, 1905], "cpp_c10d_extens": 23, "torchrun": [23, 26, 32, 39, 43], "benefici": [23, 1911], "nproc_per_nod": [23, 32], "num_gpus_you_hav": 23, "your_training_script": [23, 39, 41], "arg3": 23, "192": [23, 613, 1918], "168": 23, "nnode": [23, 39, 41], "offer": [23, 46, 49, 1614, 1857, 1903, 1909, 1922, 1930, 1934, 1949, 1953, 1958], "local_process_rank": 23, "local_rank": [23, 31, 33, 38, 41, 43, 1473], "argpars": [23, 41, 1903], "parser": [23, 41, 1903], "argumentpars": [23, 41, 1903], "add_argu": [23, 41, 1903], "parse_arg": [23, 32, 41, 43, 1903, 1918], "output_devic": [23, 27, 41, 1371, 1473, 1598, 1614], "adjust": [23, 25, 27, 29, 46, 1876, 1902, 1926], "launcher": [23, 41], "filesystem": [23, 25, 976, 1875, 1922], "12042": 23, "imagenet": [23, 1898], "inconsist": [23, 46, 861, 1737, 1905], "suit": [23, 1877, 1879, 1880, 1918, 1926, 1930, 1960], "group_gloo": 23, "29501": 23, "monitoredbarri": 23, "transport": [23, 1930], "598": 23, "2401": 23, "db00": 23, "eef0": 23, "1100": 23, "3560": 23, "1c05": 23, "25d": 23, "8594": 23, "torch_cpp_log_level": 23, "twolinlayernet": 23, "ddp": [23, 24, 25, 27, 46, 1473, 1614, 1876, 1903, 1904, 1930, 1953], "i0607": 23, "739390": 23, "515217": 23, "logger": [23, 1667, 1943, 1944], "173": 23, "broadcast_buff": [23, 1614], "bucket_cap_byt": 23, "26214400": 23, "find_unused_paramet": [23, 1614, 1904], "gradient_as_bucket_view": [23, 1614], "is_multi_device_modul": 23, "num_parameter_tensor": 23, "total_parameter_size_byt": 23, "440": 23, "bucket_s": 23, "cuda_visible_devic": [23, 1043, 1614, 1903], "module_nam": [23, 54, 813, 850, 1922], "nccl_ib_timeout": 23, "nccl_nthread": 23, "58": [23, 1957], "085681": 23, "544067": 23, "344": 23, "unused_parameter_s": 23, "40838608": 23, "5983335": 23, "4326421": 23, "comp": [23, 29], "4207652": 23, "085693": 23, "544066": 23, "42850427": 23, "3885553": 23, "2357981": 23, "2234674": 23, "enhanc": [23, 46, 1614, 1951], "unus": [23, 27, 54, 903, 1013, 1027, 1206, 1212, 1396, 1614, 1674, 1877, 1879, 1880, 1903, 1904, 1909, 1922], "constraint": [23, 28, 46, 790, 791, 898, 1009, 1020, 1136, 1614, 1622, 1647, 1692, 1876, 1880, 1895, 1906, 1908, 1911, 1934, 1948, 1951], "went": [23, 54], "wasn": [23, 1272, 1877], "va": 23, "lue": 23, "indirectli": 23, "outstand": [23, 1930], "stuck": [23, 31, 42], "uninform": 23, "root": [23, 25, 33, 40, 41, 46, 54, 789, 1139, 1238, 1239, 1689, 1752, 1811, 1888, 1900, 1922, 1930, 1931, 1934, 1953], "nontrivi": [23, 1903, 1951], "reveal": [23, 1904], "default_pg": 23, "opt": [23, 27, 1212, 1693, 1694, 1700, 1704, 1706, 1877, 1908, 1951], "longtensor": [23, 133, 134, 135, 313, 315, 317, 449, 468, 509, 511, 513, 870, 871, 1143, 1175, 1222, 1324, 1377, 1378, 1437, 1524, 1525, 1570, 1660, 1757, 1795, 1807, 1832, 1840, 1871, 1937, 1940], "set_debug_level": 23, "set_debug_level_from_env": 23, "get_debug_level": 23, "torch_show_cpp_stacktrac": 23, "distbackenderror": 23, "thrown": [23, 28, 53, 613, 874, 876, 1031, 1072, 1164, 1201, 1231, 1240, 1242, 1244, 1247, 1248, 1259, 1434, 1618, 1869, 1922, 1956], "outlin": [24, 1923, 1931, 1953], "joinabl": [24, 27, 1614, 1876], "joinhook": [24, 1876], "throw_on_early_termin": [24, 1614], "shadow": [24, 27, 1614, 1943, 1944], "notify_join_context": 24, "zeroredundancyoptim": [24, 27, 1614, 1876], "01": [24, 27, 42, 751, 776, 817, 818, 1075, 1117, 1420, 1548, 1549, 1605, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1697, 1703, 1723, 1777, 1779, 1780, 1785, 1786, 1878, 1898, 1910, 1918, 1921, 1958], "yet": [24, 31, 46, 51, 53, 54, 77, 78, 977, 1048, 1204, 1206, 1218, 1306, 1614, 1628, 1632, 1634, 1876, 1879, 1880, 1886, 1894, 1895, 1903, 1918, 1920, 1925, 1930, 1932, 1934, 1935, 1937, 1948, 1952, 1953, 1956, 1959, 1963], "vacuou": 24, "inherit": [24, 1639, 1877, 1879, 1895, 1905, 1911, 1913], "join_hook": [24, 27, 1614], "join_devic": 24, "join_process_group": 24, "repeatedli": [24, 1903, 1934], "main_hook": 24, "post_hook": 24, "is_last_join": 24, "dcp": 25, "reshard": [25, 28, 46], "storag": [25, 46, 220, 309, 337, 340, 341, 432, 455, 480, 495, 516, 520, 554, 555, 580, 581, 583, 584, 874, 891, 893, 998, 1065, 1171, 1175, 1187, 1201, 1208, 1272, 1294, 1333, 1334, 1371, 1434, 1739, 1753, 1760, 1791, 1796, 1799, 1813, 1836, 1842, 1858, 1875, 1876, 1878, 1889, 1892, 1900, 1903, 1913, 1916, 1922, 1930, 1934, 1937, 1938, 1940, 1948, 1952], "entrypoint": [25, 28, 31, 33, 38, 41, 1892], "storage_read": 25, "coordinator_rank": 25, "no_dist": 25, "planner": 25, "spmd": 25, "style": [25, 28, 30, 54, 873, 1069, 1125, 1660, 1877, 1879, 1880, 1918, 1922, 1939, 1954], "fullfil": 25, "shardedtensor": [25, 46], "po": [25, 1918], "storageread": [25, 1876], "rank0": [25, 46], "my_model": [25, 1614, 1877, 1918, 1948, 1953, 1963], "mymodul": [25, 46, 54, 1205, 1206, 1207, 1211, 1212, 1218, 1435, 1436, 1444, 1445, 1877, 1879, 1880, 1907, 1916, 1930], "adagrad": [25, 1377, 1887, 1921, 1930], "model_state_dict": [25, 1668, 1918], "fs_storage_read": 25, "filesystemread": [25, 1876], "save_state_dict": [25, 1876], "storage_writ": 25, "fsdp": [25, 28, 46, 1876, 1953], "shardingstrategi": [25, 46, 1876], "hybrid_shard": [25, 46], "shard_group": 25, "storagewrit": [25, 1876], "fs_storage_writ": 25, "filesystemwrit": [25, 1876], "act": [25, 29, 31, 38, 51, 854, 1351, 1435, 1436, 1445, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1857, 1903, 1911, 1915, 1921, 1956], "told": [25, 1879], "role": [25, 31, 32, 40, 41, 1956], "read_metadata": 25, "set_up_storage_read": 25, "prepare_local_plan": 25, "prepare_global_plan": 25, "read_data": 25, "central": [25, 55, 1154, 1908, 1910], "loadplan": [25, 1876], "storage_data": 25, "loadplann": [25, 1876], "load_byt": 25, "bytesio": [25, 1208, 1211, 1272, 1753, 1918, 1925], "resolve_tensor": 25, "storagelay": 25, "schedul": [25, 31, 33, 39, 53, 676, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1886, 1904, 1910, 1924, 1953], "is_coordin": 25, "set_up_storage_writ": 25, "write_data": 25, "mark": [25, 40, 53, 54, 55, 60, 63, 822, 893, 894, 951, 1315, 1316, 1614, 1673, 1877, 1879, 1900, 1904, 1905, 1911, 1916, 1922, 1924, 1931, 1940, 1945, 1953, 1954], "recover": 25, "writeresult": 25, "saveplan": [25, 1876], "saveplann": [25, 1876], "resolve_data": 25, "assumpt": [25, 37, 41, 904, 951, 1357, 1388, 1900, 1904, 1908, 1930, 1931, 1934, 1951, 1953, 1959, 1963], "writeitem": [25, 1876], "tensor_data": 25, "set_up_plann": 25, "create_local_plan": 25, "create_global_plan": 25, "commit_tensor": 25, "defaultloadplann": [25, 1876], "rewrit": [25, 51, 55, 57, 62, 63, 77, 78, 1888, 1900, 1908, 1918, 1950], "requit": 25, "intrincaci": 25, "renameplann": 25, "original_state_dict": 25, "foo_": [25, 1131], "v": [25, 37, 50, 54, 484, 540, 891, 898, 900, 901, 902, 932, 1130, 1140, 1142, 1198, 1214, 1236, 1240, 1264, 1268, 1273, 1440, 1482, 1483, 1524, 1569, 1653, 1658, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1711, 1744, 1803, 1807, 1822, 1823, 1868, 1876, 1877, 1878, 1879, 1880, 1890, 1900, 1908, 1917, 1922, 1934, 1939, 1947], "read_item": 25, "dest_index": 25, "fqn": [25, 28, 1944], "metamodelmateri": 25, "defaultsaveplann": [25, 1876], "empty_lik": [25, 1857, 1878, 1882, 1893, 1895, 1920, 1934], "global_plan": 25, "finish_plan": 25, "central_plan": 25, "alia": [25, 29, 34, 90, 91, 110, 186, 187, 351, 404, 433, 434, 441, 519, 537, 678, 862, 863, 864, 865, 866, 867, 868, 885, 944, 957, 958, 1060, 1067, 1070, 1081, 1082, 1083, 1085, 1086, 1112, 1147, 1155, 1156, 1168, 1169, 1170, 1179, 1199, 1201, 1227, 1228, 1235, 1251, 1255, 1258, 1286, 1296, 1297, 1307, 1325, 1327, 1337, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1434, 1544, 1617, 1647, 1663, 1708, 1713, 1716, 1751, 1774, 1789, 1792, 1794, 1820, 1824, 1825, 1844, 1850, 1872, 1880, 1905, 1920, 1935, 1936, 1940, 1952, 1958], "readitem": [25, 1876], "planner_data": 25, "loaditemtyp": 25, "metadataindex": 25, "dest_offset": 25, "storage_index": 25, "storage_offset": [25, 137, 516, 613, 874, 1878, 1920, 1958], "tandem": 25, "fp16planner": 25, "write_item": 25, "writeitemtyp": 25, "byte_io": 25, "itertool": [25, 29, 934, 947], "islic": 25, "dataclass": [25, 1956, 1962], "ddploadbalancingplann": 25, "all_plan": 25, "saveextradataplann": 25, "merged_data": 25, "new_plan": 25, "idempot": [25, 1930, 1932], "hi": [25, 1404, 1405, 1877, 1879, 1908], "peak": [25, 27, 46, 1023, 1025, 1031, 1038, 1039, 1040, 1614, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1697, 1703, 1923, 1960], "late": [25, 40], "tensorwritedata": 25, "nonetyp": [25, 1878, 1880], "single_file_per_rank": 25, "sync_fil": 25, "thread_count": 25, "per_thread_copy_ahead": 25, "10000000": 25, "simplif": [25, 1951], "atom": [25, 40, 54, 1881], "distributedtensor": [25, 28], "flatten_state_dict": 25, "flatten_sharded_tensor": 25, "dedup_replicated_tensor": 25, "lookup_object": 25, "transform_object": 25, "lookup_tensor": 25, "transform_tensor": 25, "fault": [26, 31, 39, 40, 1127], "toler": [26, 31, 39, 40, 54, 690, 904, 905, 1190, 1216, 1217, 1255, 1258, 1273, 1674, 1681, 1877, 1941], "quickstart": 26, "agent": [26, 32, 33, 34, 37, 39, 41, 42, 1930], "expir": 26, "metric": [26, 1023, 1025, 1031, 1705, 1890, 1911, 1924, 1939, 1953, 1960], "kubernet": 26, "distributedoptim": [27, 1614, 1876, 1930, 1931], "rref": [27, 1614, 1876, 1880, 1923, 1931], "optimizer_class": 27, "params_rref": 27, "get_gradi": [27, 1920, 1930, 1931], "multithread": [27, 1903], "dist_autograd": [27, 1614, 1930, 1931], "rpc": [27, 53, 1614, 1876, 1880, 1923, 1931, 1932], "context_id": [27, 1614, 1930, 1931], "rref1": [27, 1930, 1931], "worker1": [27, 53, 1614, 1930, 1931], "rref2": [27, 1930, 1931], "to_her": [27, 1614, 1920, 1930, 1931, 1932], "dist_optim": [27, 1614, 1931], "postlocalsgdoptim": [27, 1876], "afer": 27, "modelaverag": 27, "localsgd": 27, "model_averag": 27, "post_localsgd_hook": 27, "postlocalsgdst": 27, "subgroup": 27, "start_localsgd_it": 27, "warmup_step": 27, "local_optim": 27, "periodicmodelaverag": 27, "intra": [27, 46, 1902, 1904, 1923], "unnecessari": [27, 1654, 1880, 1900, 1903, 1905, 1916, 1922, 1938], "parameters_as_bucket_view": 27, "overlap_with_ddp": 27, "consumpt": [27, 50, 1659, 1934, 1939, 1945], "partit": [27, 28, 1342, 1843, 1918, 1920, 1923, 1931, 1932, 1953, 1962], "registr": [27, 28, 53, 77, 1017, 1607, 1612, 1613, 1614, 1623, 1626, 1672, 1884, 1922, 1949], "offset": [27, 31, 224, 225, 226, 227, 337, 516, 554, 742, 874, 1062, 1063, 1064, 1065, 1127, 1235, 1378, 1525, 1614, 1723, 1724, 1802, 1847, 1849, 1878, 1880, 1950, 1956], "intact": [27, 1930], "ddp_zero_hook": 27, "disjointli": 27, "trail": [27, 1649, 1651, 1895, 1898, 1901, 1905], "wari": 27, "static_graph": [27, 1614, 1904], "third": [27, 29, 1073, 1074, 1290, 1342, 1349, 1364, 1367, 1429, 1703, 1876, 1877, 1903, 1906, 1911, 1922, 1924], "add_param_group": [27, 1626, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "param_group": [27, 46, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1688, 1689, 1690, 1691, 1692, 1699, 1702], "frozen": [27, 46, 1205, 1210, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1881, 1917], "trainabl": [27, 1020, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1688, 1689, 1690, 1691, 1692, 1905], "consolidate_state_dict": 27, "consolid": [27, 46, 1923], "pertain": 27, "preced": [27, 31, 46, 676, 1609, 1703, 1842, 1881, 1902, 1921, 1925], "dtensor": [28, 46], "rowwis": 28, "colwis": 28, "pairwis": [28, 29, 1394, 1443, 1482], "parallelize_modul": [28, 1876], "device_mesh": 28, "parallelize_plan": 28, "tp_mesh_dim": 28, "sub_modul": 28, "parallelstyl": 28, "devicemesh": 28, "mesh": [28, 1939], "prepar": [28, 46, 54, 793, 835, 837, 853, 855, 857, 858, 859, 1140, 1210, 1881, 1918, 1943, 1944], "pairwiseparallel": [28, 1876], "finer": [28, 1953], "granular": [28, 46, 1214, 1899, 1961], "rowwiseparallel": [28, 1876], "_prepare_input": 28, "make_input_shard_1d_last_dim": [28, 1876], "_prepare_output": 28, "make_output_tensor": [28, 1876], "colwiseparallel": [28, 1876], "make_input_replicate_1d": [28, 1876], "make_sharded_output_tensor": 28, "megatron": 28, "lm": 28, "arxiv": [28, 29, 1404, 1452, 1453, 1480, 1658, 1711, 1823, 1900], "ab": [28, 29, 89, 90, 621, 622, 678, 936, 1074, 1232, 1253, 1254, 1256, 1257, 1270, 1273, 1404, 1453, 1480, 1483, 1485, 1573, 1658, 1661, 1705, 1711, 1715, 1876, 1878, 1880, 1893, 1894, 1895, 1903, 1911, 1920, 1934, 1940, 1948, 1949, 1950, 1953, 1956, 1958, 1963], "1909": [28, 874], "08053": 28, "multihead": [28, 1440, 1479], "mlp": [28, 1605, 1925], "sequenceparallel": [28, 1876], "pdf": [28, 1357, 1452, 1786, 1900], "2205": 28, "05198": 28, "expectedli": 28, "make_input_reshard_repl": [28, 1876], "make_input_shard_1d": [28, 1876], "make_output_replicate_1d": [28, 1876], "make_output_reshard_tensor": [28, 1876], "make_output_shard_1d": [28, 1876], "multiheadattent": [28, 1477, 1479, 1481, 1925], "head": [28, 731, 1342, 1440, 1477, 1479, 1481], "fullyshardeddataparallel": [28, 1876], "enable_2d_with_fsdp": [28, 1876], "parameteriz": 29, "tensorflow": [29, 1689, 1900, 1939], "backpropag": [29, 905, 1690, 1721, 1907, 1945], "surrog": 29, "likelihood": [29, 1342, 1388, 1441, 1448, 1530, 1568, 1576], "ratio": [29, 31, 613, 1382, 1383, 1528, 1529, 1878, 1934, 1960], "reinforc": [29, 1463, 1586], "polici": [29, 31, 33, 46, 1697, 1703], "reparameter": [29, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644, 1645, 1646, 1658], "trick": [29, 900, 1351, 1535, 1900, 1908, 1910], "autoencod": 29, "whilst": [29, 1903], "densiti": [29, 299, 1162, 1163, 1786, 1878, 1935], "log_prob": [29, 1342, 1357, 1517, 1878], "theta": [29, 1498, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1878], "alpha": [29, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 150, 151, 310, 311, 550, 557, 558, 559, 560, 681, 682, 685, 686, 687, 740, 766, 771, 916, 1017, 1018, 1158, 1172, 1346, 1356, 1376, 1422, 1461, 1499, 1507, 1522, 1523, 1533, 1551, 1584, 1675, 1689, 1782, 1783, 1796, 1800, 1814, 1819, 1820, 1878, 1900, 1905, 1918, 1921, 1953, 1958], "partial": [29, 31, 40, 46, 49, 54, 837, 1020, 1064, 1141, 1154, 1247, 1248, 1249, 1291, 1430, 1431, 1432, 1560, 1561, 1562, 1614, 1633, 1802, 1880, 1881, 1894, 1900, 1905, 1908, 1918, 1932, 1941, 1959], "pi": [29, 172, 375, 694, 926, 1158, 1159, 1252, 1384, 1448, 1531, 1576, 1695, 1696, 1715, 1777, 1778, 1781, 1782, 1783, 1784, 1818, 1879, 1880, 1922, 1935], "reward": 29, "ascent": 29, "prob": [29, 1878], "policy_network": 29, "next_stat": 29, "rsampl": 29, "parameter": [29, 375, 451, 1207, 1896, 1934], "has_rsampl": 29, "batch_shap": 29, "event_shap": 29, "validate_arg": 29, "arg_constraint": 29, "cdf": 29, "cumul": [29, 1053, 1054, 1055, 1056, 1057, 1280, 1352, 1353, 1354, 1384, 1407, 1408, 1409, 1473, 1531], "mass": 29, "enumerate_support": 29, "discret": [29, 45, 478, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1109, 1111, 1535, 1786, 1939, 1942], "cardin": [29, 1302], "univari": 29, "singleton": [29, 252, 1406, 1856, 1901], "cartesian": [29, 934, 1302, 1715], "_instanc": 29, "icdf": 29, "perplex": 29, "sample_shap": 29, "sample_n": 29, "set_default_validate_arg": 29, "mimic": [29, 1703], "stddev": 29, "varianc": [29, 966, 1352, 1353, 1354, 1379, 1388, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1526, 1530, 1688, 1689, 1725, 1734, 1735, 1863, 1864, 1898, 1911], "exp_famili": 29, "famili": 29, "p_": [29, 938, 1292, 1691], "langl": 29, "rangl": 29, "denot": [29, 54, 966, 1221, 1240, 1246, 1259, 1269, 1362, 1363, 1400, 1623, 1626, 1691, 1804, 1805, 1806, 1808, 1809, 1865, 1908, 1928, 1931, 1934], "carrier": 29, "analyt": [29, 904, 905, 1524, 1934], "bregman": 29, "courtesi": 29, "frank": 29, "nielsen": 29, "richard": 29, "nock": 29, "logit": [29, 389, 1351, 1370, 1506, 1516, 1535, 1878, 1920, 1935], "70": [29, 1259, 1721, 1895], "odd": [29, 1095, 1096, 1097, 1105, 1106, 1107, 1508, 1509, 1510], "lower_bound": 29, "upper_bound": 29, "has_enumerate_support": 29, "param_shap": 29, "concentration1": 29, "concentration0": 29, "concentr": 29, "1046": 29, "1st": [29, 1901], "2nd": [29, 613, 1442, 1468, 1571, 1901], "greaterthan": 29, "total_count": 29, "71": 29, "trial": 29, "integergreaterthan": 29, "ldot": [29, 1232, 1240, 1271, 1287, 1302, 1406, 1427, 1428, 1429, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "dimension": [29, 509, 511, 876, 882, 883, 884, 927, 934, 946, 1062, 1064, 1065, 1074, 1090, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1108, 1109, 1111, 1113, 1115, 1116, 1127, 1154, 1163, 1164, 1165, 1233, 1238, 1239, 1240, 1241, 1266, 1271, 1287, 1295, 1302, 1342, 1359, 1360, 1361, 1370, 1371, 1377, 1378, 1406, 1424, 1441, 1455, 1456, 1457, 1458, 1459, 1460, 1467, 1469, 1473, 1489, 1490, 1491, 1516, 1568, 1571, 1603, 1604, 1621, 1660, 1728, 1804, 1805, 1806, 1807, 1808, 1809, 1818, 1833, 1836, 1837, 1843, 1880, 1895, 1898, 1901, 1908, 1914, 1934, 1936, 1937, 1940, 1942, 1951], "unnorm": [29, 1370, 1506, 1516, 1535], "likewis": [29, 1842], "25": [29, 492, 582, 583, 584, 936, 1162, 1268, 1273, 1380, 1437, 1439, 1442, 1605, 1614, 1651, 1653, 1681, 1703, 1722, 1862, 1877, 1934, 1935], "independentconstraint": 29, "simplex": 29, "loc": [29, 1272], "lorentz": 29, "3214": 29, "width": [29, 775, 781, 854, 1161, 1162, 1163, 1348, 1349, 1363, 1364, 1366, 1367, 1403, 1428, 1429, 1441, 1468, 1486, 1544, 1602, 1894, 1934], "df": 29, "chi": 29, "continuous_bernoulli": 29, "lim": [29, 1198], "499": 29, "501": 29, "2538": [29, 1232], "pervas": 29, "loaiza": 29, "ganem": 29, "cunningham": 29, "jp": 29, "1907": 29, "06845": 29, "8954": 29, "greaterthaneq": 29, "df1": 29, "df2": 29, "fisher": 29, "snedecor": 29, "2453": 29, "degre": [29, 966, 1051, 1058, 1201, 1238, 1239, 1434, 1443, 1482, 1614, 1729, 1749, 1816, 1817, 1863, 1864, 1878, 1908, 1920, 1934], "freedom": [29, 966, 1816, 1817, 1863, 1864, 1908], "0124": 29, "half_cauchi": 29, "half_norm": 29, "base_distribut": 29, "reinterpreted_batch_ndim": 29, "reinterpret": [29, 495, 1952], "diagon": [29, 51, 223, 258, 591, 592, 593, 594, 927, 962, 966, 1061, 1062, 1063, 1065, 1074, 1087, 1135, 1136, 1146, 1230, 1242, 1244, 1247, 1259, 1263, 1573, 1583, 1802, 1841, 1845, 1846, 1847, 1848, 1849, 1878, 1905, 1920, 1938], "multivari": [29, 1935], "multivariate_norm": 29, "mvn": 29, "scale_tril": 29, "diag": [29, 52, 1134, 1135, 1136, 1236, 1237, 1264, 1711, 1802, 1822, 1823, 1878, 1920], "diagn": 29, "1729": [29, 1911], "lkj_choleski": 29, "lkj": 29, "matric": [29, 258, 682, 685, 916, 928, 929, 938, 939, 940, 941, 1062, 1146, 1221, 1230, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1273, 1281, 1290, 1292, 1305, 1385, 1443, 1498, 1532, 1621, 1626, 1709, 1711, 1721, 1770, 1796, 1799, 1800, 1822, 1823, 1845, 1846, 1848, 1878, 1893, 1908, 1914, 1934, 1940], "eta": [29, 1675, 1677, 1690], "proport": [29, 1402, 1403, 1440, 1481], "det": [29, 1238, 1239, 1260, 1281, 1878, 1920], "l": [29, 731, 756, 917, 926, 932, 939, 940, 1074, 1158, 1159, 1201, 1220, 1230, 1231, 1236, 1237, 1238, 1239, 1243, 1247, 1248, 1290, 1292, 1347, 1350, 1351, 1352, 1362, 1370, 1373, 1374, 1381, 1386, 1394, 1395, 1397, 1400, 1401, 1404, 1416, 1425, 1427, 1434, 1436, 1440, 1441, 1449, 1465, 1482, 1483, 1485, 1583, 1632, 1641, 1649, 1651, 1681, 1757, 1818, 1878, 1880, 1900, 1939, 1963], "lkjcorr": 29, "onion": 29, "3x3": [29, 1057, 1843], "3516": 29, "9361": 29, "1899": [29, 1303], "4748": 29, "8593": 29, "vine": 29, "2009": [29, 1711, 1823], "lewandowski": 29, "dorota": 29, "kurowicka": 29, "harri": [29, 1786], "joe": 29, "journal": [29, 1728], "1016": 29, "jmva": 29, "04": [29, 1117, 1278, 1779, 1786], "008": 29, "corrcholeski": 29, "log_norm": [29, 1920], "lowrank_multivariate_norm": 29, "cov_factor": 29, "cov_diag": 29, "covari": [29, 929, 962, 966, 1352, 1353, 1354, 1473, 1711], "covariance_matrix": 29, "2102": 29, "5429": [29, 1845], "woodburi": 29, "lemma": 29, "formula": [29, 87, 764, 765, 885, 887, 917, 926, 1158, 1159, 1226, 1292, 1293, 1448, 1501, 1502, 1590, 1691, 1724, 1905, 1908, 1924, 1929, 1934, 1951], "capacit": 29, "precision_matrix": 29, "mixture_same_famili": 29, "mixture_distribut": 29, "component_distribut": 29, "rightmost": [29, 929, 1162, 1163, 1880], "gaussian": [29, 1384, 1388, 1463, 1530, 1531, 1586, 1785, 1935], "gmm": 29, "bivari": 29, "categori": [29, 33, 79, 1324, 1880, 1882, 1918, 1921, 1924, 1926, 1937, 1957, 1959], "innermost": [29, 54, 1154, 1163, 1757], "1338": 29, "mathbf": [29, 1221, 1622, 1655, 1658, 1690], "sigma": [29, 172, 375, 756, 1351, 1385, 1386, 1387, 1404, 1405, 1463, 1464, 1532, 1586, 1622, 1655, 1780, 1816, 1817, 1863, 1864, 1878], "triangular": [29, 939, 940, 941, 1230, 1231, 1237, 1239, 1247, 1248, 1255, 1258, 1259, 1261, 1263, 1573, 1697, 1721, 1845, 1846, 1847, 1848, 1849], "decomposit": [29, 54, 939, 1146, 1230, 1231, 1236, 1237, 1238, 1239, 1240, 1242, 1247, 1248, 1249, 1250, 1255, 1259, 1260, 1264, 1265, 1290, 1292, 1621, 1709, 1711, 1715, 1721, 1822, 1823, 1876, 1914, 1951, 1952, 1962], "positivedefinit": 29, "lowercholeski": 29, "negative_binomi": 29, "halfopeninterv": 29, "mu": [29, 375, 1689, 1691], "one_hot_categor": 29, "onehot": 29, "5623": 29, "nonneg": [29, 1483, 1711, 1823, 1935], "pmf": 29, "mathrm": [29, 918, 1238, 1239, 1240, 1241, 1252, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1443, 1448, 1473, 1621, 1678, 1679, 1680, 1690, 1725, 1900, 1935], "relaxed_bernoulli": 29, "temperatur": [29, 1535, 1876], "parametr": [29, 1130, 1623, 1630, 1655, 1656, 1658, 1896, 1905], "relax": [29, 1216, 1217, 1626, 1925, 1953], "reparametriz": 29, "99": [29, 1212, 1689, 1877], "2951": [29, 1300], "3442": 29, "8918": 29, "9021": 29, "maddison": 29, "2017": [29, 1477, 1479, 1481, 1803, 1917], "reparametr": [29, 1535, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1638, 1658], "jang": 29, "relaxed_categor": 29, "1294": [29, 939], "2324": [29, 1201, 1434], "3859": 29, "2523": 29, "student": 29, "transformed_distribut": 29, "composit": [29, 51, 1134, 1248, 1621, 1877, 1880, 1906, 1911, 1918], "basedistribut": 29, "dx": [29, 1057, 1350, 1843, 1878, 1905, 1906, 1935], "dy": 29, "logist": [29, 1463, 1466, 1586, 1935], "sigmoidtransform": 29, "affinetransform": 29, "invert": [29, 54, 941, 1192, 1232, 1241, 1242, 1248, 1254, 1261, 1263, 1266, 1267, 1281, 1430, 1431, 1432, 1845, 1878, 1914, 1930], "3418": 29, "upper": [29, 180, 181, 182, 590, 791, 927, 932, 939, 940, 941, 943, 1088, 1089, 1161, 1162, 1230, 1231, 1237, 1239, 1247, 1248, 1259, 1263, 1452, 1573, 1581, 1582, 1697, 1703, 1721, 1736, 1757, 1845, 1848, 1849, 1878, 1898, 1920, 1935, 1941], "von_mis": 29, "circular": [29, 1362, 1363, 1364, 1410, 1411, 1412, 1571], "von": 29, "mise": 29, "unconstrain": [29, 1626], "angl": [29, 751, 880, 1058, 1281, 1420, 1715, 1729, 1773, 1876, 1878, 1920, 1934], "9777": 29, "radian": [29, 694, 880, 1058, 1729, 1878, 1920], "nichola": 29, "simul": [29, 795, 797, 1925, 1928, 1951], "1979": 29, "152": [29, 613], "157": 29, "4784": [29, 1305], "symmetr": [29, 798, 816, 917, 926, 939, 940, 941, 1095, 1096, 1097, 1102, 1104, 1108, 1109, 1111, 1158, 1159, 1220, 1230, 1231, 1236, 1237, 1239, 1243, 1244, 1245, 1252, 1255, 1258, 1264, 1273, 1621, 1626, 1703, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1925, 1928], "x_ij": 29, "wu": [29, 1273], "chu": 29, "2018": [29, 1273, 1719], "sawyer": 29, "2007": 29, "anderson": 29, "w": [29, 52, 149, 756, 885, 887, 889, 895, 903, 917, 926, 966, 1132, 1143, 1158, 1159, 1198, 1240, 1340, 1341, 1348, 1349, 1351, 1353, 1354, 1358, 1363, 1364, 1370, 1374, 1375, 1377, 1378, 1379, 1386, 1398, 1399, 1406, 1417, 1418, 1428, 1429, 1439, 1440, 1441, 1446, 1447, 1468, 1484, 1485, 1487, 1488, 1498, 1506, 1524, 1525, 1533, 1568, 1574, 1575, 1622, 1655, 1658, 1878, 1893, 1894, 1898, 1900, 1905, 1908, 1921, 1922, 1939, 1961], "2003": 29, "ed": [29, 51, 1373, 1374, 1900, 1922, 1961, 1964], "odel": 29, "feiveson": 29, "1966": 29, "samplecovari": 29, "jasa": 29, "61": 29, "313": 29, "199": 29, "203": [29, 613], "ku": 29, "bloomfield": 29, "2010": [29, 1898], "ox": 29, "max_try_correct": 29, "bartlett": [29, 917], "singular": [29, 1232, 1246, 1247, 1253, 1255, 1257, 1258, 1264, 1265, 1273, 1281, 1290, 1622, 1626, 1711, 1822, 1823, 1914], "accordingli": [29, 54, 1210, 1404, 1626, 1895, 1930, 1959], "kl_diverg": 29, "kullback": [29, 1400, 1545], "leibler": [29, 1400, 1545], "notimplementederror": [29, 1922, 1956], "register_kl": 29, "type_p": 29, "type_q": 29, "kl_normal_norm": 29, "ambigu": [29, 54, 1186, 1365, 1366, 1367, 1381, 1430, 1431, 1432, 1486, 1880], "runtimewarn": 29, "basep": 29, "derivedq": 29, "kl_version1": 29, "derivedp": 29, "baseq": 29, "kl_version2": 29, "tie": 29, "abstransform": 29, "cache_s": [29, 1956], "event_dim": 29, "pointwis": [29, 948, 1135, 1136, 1278, 1279, 1400, 1893, 1901, 1952, 1955, 1957], "affin": [29, 46, 469, 470, 471, 472, 473, 745, 747, 748, 749, 798, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1498, 1903, 1911], "cattransform": 29, "tseq": 29, "functor": [29, 1017, 1018], "submatrix": 29, "x0": [29, 1955], "t0": [29, 1154, 1675, 1879], "exptransform": 29, "identity_transform": 29, "composetransform": 29, "compos": [29, 50, 54, 734, 735, 736, 737, 738, 739, 762, 763, 768, 769, 770, 778, 779, 939, 941, 1132, 1134, 1135, 1136, 1142, 1201, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1402, 1403, 1422, 1427, 1428, 1429, 1434, 1482, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1726, 1727, 1868, 1876, 1877, 1880, 1893, 1905, 1906, 1911, 1918, 1922, 1939, 1956, 1958, 1959], "corrcholeskytransform": 29, "uncontrain": 29, "euclidean": [29, 936, 1569], "x_i": [29, 51, 943, 1053, 1054, 1055, 1056, 1269, 1276, 1424, 1443, 1467, 1469, 1482, 1553, 1589, 1718, 1801, 1816, 1817, 1843, 1863, 1864, 1865, 1935], "stickbreakingtransform": 29, "r_i": 29, "tanh": [29, 573, 756, 761, 791, 881, 1384, 1386, 1387, 1404, 1405, 1433, 1449, 1451, 1475, 1531, 1563, 1595, 1878, 1893, 1894, 1898, 1920, 1927, 1934, 1958], "unsign": [29, 1928, 1937, 1940, 1941], "z_i": 29, "s_i": 29, "y_i": [29, 943, 1053, 1054, 1055, 1056, 1269, 1276, 1482, 1843, 1865, 1908], "sqrt": [29, 54, 375, 545, 669, 670, 756, 962, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1167, 1220, 1302, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1384, 1386, 1387, 1389, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1406, 1419, 1421, 1449, 1451, 1473, 1531, 1583, 1626, 1676, 1677, 1678, 1679, 1682, 1688, 1689, 1725, 1752, 1785, 1816, 1817, 1878, 1893, 1898, 1899, 1900, 1920, 1934, 1935, 1941, 1958], "cumulativedistributiontransform": 29, "copula": 29, "base_dist": 29, "independenttransform": 29, "base_transform": 29, "log_abs_det_jacobian": 29, "lowercholeskytransform": 29, "positivedefinitetransform": 29, "powertransform": 29, "expon": [29, 266, 267, 278, 465, 466, 1117, 1124, 1224, 1254, 1342, 1422, 1569, 1718, 1728, 1878, 1937, 1940, 1958], "reshapetransform": 29, "in_shap": 29, "out_shap": 29, "softplustransform": 29, "tanhtransform": 29, "softmaxtransform": 29, "biject": 29, "hmc": 29, "stacktransform": 29, "stick": 29, "aris": [29, 54, 1900, 1951], "primarili": [29, 53, 811, 812, 813, 819, 1334, 1890, 1925], "memoiz": [29, 1952], "_call": 29, "_invers": 29, "codomain": [29, 1900], "iff": [29, 1440], "weaker": [29, 1903], "pseudoinvers": [29, 1241, 1258, 1266], "monoton": [29, 1433, 1563, 1757], "forward_shap": 29, "inverse_shap": 29, "corr_choleski": 29, "greater_than": 29, "greater_than_eq": 29, "integer_interv": 29, "less_than": 29, "lower_choleski": 29, "lower_triangular": 29, "nonnegative_integ": 29, "one_hot": [29, 1878, 1920], "positive_integ": 29, "positive_semidefinit": 29, "positive_definit": 29, "real_vector": 29, "unit_interv": 29, "is_discret": 29, "constrain": [29, 1470, 1880, 1911], "_cat": 29, "dependent_properti": 29, "_dependentproperti": 29, "_greaterthan": 29, "_greaterthaneq": 29, "_independentconstraint": 29, "_integerinterv": 29, "_interv": 29, "half_open_interv": 29, "_halfopeninterv": 29, "_lessthan": 29, "_multinomi": 29, "_stack": [29, 1920], "constraintregistri": 29, "biject_to": 29, "transform_to": 29, "overparameter": 29, "rotat": [29, 1749, 1822], "hamiltonian": 29, "mont": 29, "carlo": 29, "invari": [29, 1647, 1797, 1804, 1805, 1806, 1807, 1808, 1809, 1932, 1934, 1948, 1962], "potential_energi": 29, "cheap": [29, 1342], "svi": 29, "fewer": [29, 51, 689, 691, 692, 695, 942, 1221, 1222, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1332, 1388, 1515, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1719, 1803, 1816, 1817, 1821, 1839, 1863, 1864, 1886, 1901, 1916, 1941], "my_constraint": 29, "my_transform": 29, "myconstraintclass": 29, "my_factori": 29, "mytransform": 29, "param1": [29, 1911], "param2": [29, 1911], "constraint_registri": 29, "my_registri": 29, "construct_transform": 29, "myconstraint": 29, "from_dlpack": [30, 876, 1876], "ext_tensor": [30, 1125], "extern": [30, 978, 1125, 1216, 1860, 1890, 1902, 1903, 1914, 1918, 1945], "immut": [30, 1125, 1880], "__dlpack__": [30, 1125], "capsul": [30, 876, 1125], "ndarrai": [30, 455, 875, 1125, 1126, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1918, 1939, 1941], "pycapsul": [30, 1125], "to_dlpack": [30, 1125, 1876], "t2": [30, 683, 684, 876, 1125, 1154, 1614, 1930, 1931, 1953, 1963], "dltensor": [30, 1125], "t3": [30, 1125, 1931], "legaci": [30, 41, 1535, 1924, 1937], "idiomat": 30, "inde": [30, 1877, 1887, 1922, 1932, 1956, 1959], "plane": [31, 40, 734, 735, 736, 737, 738, 739, 762, 763, 764, 765, 768, 769, 770, 778, 779, 1062, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1382, 1383, 1402, 1403, 1406, 1422, 1427, 1428, 1429, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1551, 1554, 1555, 1557, 1558, 1559, 1658, 1726, 1727, 1749], "monitor": [31, 41, 42, 81, 977, 1312, 1705, 1876, 1903, 1909], "unhealthi": 31, "tear": 31, "react": [31, 1959], "decentr": 31, "diagram": [31, 40, 1201, 1434, 1925, 1932, 1950, 1953, 1963], "elasticag": 31, "deploy": [31, 40, 1876, 1954], "quad": [31, 1350, 1351, 1370, 1401, 1425, 1441, 1483], "group_result": 31, "is_fail": [31, 32], "exit_cod": 31, "return_valu": [31, 32, 38, 1950], "get_worker_group": 31, "workergroup": [31, 41], "mutabl": [31, 1216, 1877, 1922, 1939], "implementor": 31, "defens": 31, "retri": [31, 33, 42, 1031, 1930, 1932], "max_restart": [31, 32, 41], "runresult": 31, "workerspec": [31, 32, 41, 42], "local_world_s": [31, 32, 41], "rdzv_handler": [31, 32, 40], "monitor_interv": [31, 32], "local_addr": [31, 40], "tee": [31, 38], "blueprint": 31, "spec": [31, 32, 42, 55, 83, 789, 790, 815, 816, 817, 820, 821, 822, 1927], "homogen": [31, 41], "rendezvoushandl": [31, 32, 40, 41], "rdzv": [31, 39, 41], "chose": [31, 1899, 1951], "consol": [31, 34, 37, 38, 41, 1939], "get_entrypoint_nam": 31, "__qualname__": 31, "workerst": 31, "unknown": [31, 1616, 1617, 1932], "unrecover": 31, "interrupt": [31, 1892, 1961], "succeed": [31, 40, 67, 69, 1290, 1953], "termin": [31, 40, 42, 54, 1681, 1892, 1930, 1955], "uncaught": [31, 33], "unhandl": 31, "recov": [31, 891, 1095, 1260, 1292, 1614, 1647, 1818, 1899, 1907, 1908, 1926], "is_run": 31, "role_rank": [31, 41], "role_world_s": [31, 41], "pid": [31, 33, 41, 42, 1473, 1907, 1924], "local_elastic_ag": 31, "localelasticag": [31, 32, 42], "start_method": [31, 32, 38, 42, 1892], "exit_barrier_timeout": 31, "log_dir": [31, 38, 1890, 1939], "inter": [31, 33, 46, 1151, 1768, 1902, 1904, 1923, 1930], "safeti": [31, 54, 950, 951, 1877, 1880, 1894, 1954], "advis": [31, 540, 613, 861, 1913], "pipe": [31, 42, 1876, 1930], "torchelastic_enable_file_tim": 31, "torchelastic_timer_fil": 31, "shared_queu": 31, "get_context": [31, 42, 1913], "nproc_per_process": 31, "foobar": [31, 33, 37, 38], "other_param": [31, 42], "usr": [31, 38, 40, 1903], "bin": [31, 38, 40, 298, 299, 815, 919, 1161, 1162, 1163, 1878, 1880, 1920, 1939, 1960], "simpleelasticag": 31, "scaffold": 31, "_assign_worker_rank": 31, "group_world_s": 31, "_exit_barri": 31, "guard": [31, 55, 60, 63, 676, 948, 1886, 1913, 1920, 1922, 1942, 1945, 1953, 1959, 1963, 1964], "_initialize_work": 31, "worker_group": 31, "fresh": [31, 1065, 1760, 1791, 1875], "start_work": 31, "_stop_work": 31, "optimist": 31, "deleg": 31, "_monitor_work": 31, "_rendezv": 31, "_restart_work": 31, "_shutdown": 31, "death_sig": 31, "sigterm": 31, "_start_work": 31, "gracefulli": [31, 41, 51, 1231, 1906], "meaning": [31, 33, 34, 1031, 1903, 1957], "canon": [31, 33, 1877, 1949, 1952], "meaningless": 31, "intention": [31, 1071, 1865, 1909, 1930], "ship": [32, 1131, 1902, 1930], "programmat": [32, 54, 1911], "my_launch": 32, "argv": [32, 43], "trainer_entrypoint_fn": 32, "fn_arg": 32, "run_result": 32, "ex": [32, 1614, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1890, 1962], "tricki": [32, 47, 52, 1900, 1911, 1932, 1948], "myrendezvoushandl": 32, "elastic_ag": 32, "servic": [32, 1904, 1951], "metrichandl": [32, 37], "mymetrichandl": 32, "metric_data": [32, 37], "metricdata": 32, "sink": [32, 37, 1890], "eventhandl": 32, "cloudwatch": 32, "nulleventhandl": 32, "myeventhandl": 32, "sub": [33, 46, 53, 55, 58, 62, 63, 558, 810, 857, 858, 1212, 1216, 1217, 1298, 1301, 1303, 1446, 1447, 1477, 1478, 1480, 1742, 1820, 1837, 1875, 1877, 1878, 1893, 1895, 1900, 1913, 1918, 1920, 1934, 1937, 1958, 1962], "invalid": [33, 38, 951, 1201, 1324, 1434, 1899, 1900, 1918, 1922, 1923, 1952, 1956], "infra": [33, 1919, 1962], "start_process": [33, 38, 1892], "torchelastic_error_fil": 33, "smallest": [33, 937, 1222, 1232, 1253, 1257, 1273, 1720, 1840, 1941, 1963, 1965], "timestamp": [33, 34, 37, 41, 1890, 1924, 1939, 1963], "error_handl": 33, "sugar": [33, 1879], "get_error_handl": 33, "childfailederror": 33, "get_first_failur": 33, "dump_error_fil": 33, "error_fil": [33, 38], "exitcod": [33, 41], "nanni": 33, "accur": [33, 977, 1154, 1276, 1312, 1376, 1728, 1843, 1903, 1931, 1945, 1952], "diagnost": [33, 66, 71, 72, 73, 74, 75, 76, 77, 78, 81, 676, 1668, 1671, 1876, 1877], "torchelastic_ag": 33, "trainer_0": 33, "trainer_1": 33, "json": [33, 38, 42, 1910, 1924, 1957, 1961], "trainer_n": 33, "errorhandl": 33, "record_except": 33, "processfailur": 33, "test_ev": 34, "eventsourc": 34, "get_logging_handl": 34, "millisecond": [34, 37, 977, 1312, 1890], "eventmetadatavalu": 34, "readm": [35, 36, 788, 1895], "telemetri": 37, "timeseri": 37, "metric_group": 37, "metric_nam": 37, "sensibl": 37, "my_modul": [37, 46, 54, 1877, 1922], "nullmetricshandl": 37, "consolemetricshandl": 37, "my_method": 37, "put_metr": 37, "calculate_lat": 37, "succinctli": 37, "baz": [37, 54, 850, 1922, 1941], "leaf_modul": 37, "classnam": [37, 1880], "threw": 37, "my_app": 37, "consolemetrichandl": 37, "toi": [37, 1963], "stdout": [37, 38, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1918], "stdoutmetrichandl": 37, "1574213883": 37, "4182858": 37, "my_metr": 37, "1574213940": 37, "5237644": 37, "nullmetrichandl": 37, "class_nam": [37, 54], "def_nam": 37, "leaf": [37, 149, 221, 333, 445, 499, 500, 787, 834, 836, 875, 889, 1140, 1673, 1836, 1895, 1899, 1900, 1918, 1944, 1952], "metric_valu": 37, "metric_group_nam": 37, "popen": 38, "stderr": [38, 1875, 1889], "err": 38, "echo": 38, "hello": [38, 51, 1879, 1918, 1922], "pcontext": 38, "multiprocesscontext": 38, "subprocesscontext": 38, "keyset": 38, "bitmask": 38, "mask": [38, 397, 398, 399, 400, 401, 540, 731, 904, 905, 1294, 1346, 1357, 1379, 1440, 1477, 1478, 1479, 1480, 1481, 1526, 1583, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1692, 1876, 1878, 1893, 1894, 1934], "miss": [38, 685, 1130, 1201, 1295, 1305, 1368, 1397, 1398, 1399, 1434, 1550, 1656, 1905, 1917, 1918, 1919, 1934, 1954, 1956], "bar0": 38, "bar1": 38, "file1": 38, "file2": 38, "caution": [38, 1954], "short": [38, 54, 730, 759, 1074, 1198, 1357, 1404, 1405, 1517, 1670, 1770, 1818, 1879, 1893, 1900, 1901, 1911, 1930, 1936, 1937, 1940], "ing": 38, "cmd": [38, 41], "forkserv": [38, 1614, 1892, 1913], "tee_stdout": 38, "tee_stderr": 38, "processcontext": [38, 1892], "superset": [38, 41], "runprocsresult": 38, "num_nod": [39, 41], "trainers_per_nod": 39, "num_allowed_failur": 39, "job_id": [39, 40, 41], "endpoint": [39, 40, 41], "host_node_addr": [39, 41], "min_siz": [39, 41], "num_allowed_failures_or_membership_chang": 39, "node1": [39, 41], "29400": [39, 41], "sidecar": [39, 40], "agre": [40, 1259, 1932], "resum": [40, 1697, 1703, 1705, 1930, 1932, 1939], "retryabl": 40, "announc": 40, "previous": [40, 46, 47, 50, 51, 52, 54, 220, 694, 788, 789, 1142, 1208, 1816, 1817, 1863, 1864, 1868, 1877, 1901, 1903, 1911, 1922, 1923, 1929, 1930, 1935, 1956, 1959], "lose": [40, 43, 46, 190, 207, 1894], "train_loop": [40, 858], "arriv": [40, 41, 1930, 1932], "dynamicrendezvoushandl": 40, "rendezvousbackend": 40, "c10drendezvousbackend": 40, "etcdrendezvousbackend": 40, "supersed": 40, "etcdrendezvoushandl": 40, "my_run_id": 40, "from_backend": 40, "run_id": [40, 41], "min_nod": 40, "max_nod": 40, "rendezvousparamet": 40, "admit": [40, 41, 1903], "get_as_bool": 40, "get_as_int": 40, "rendezvoushandlerregistri": 40, "create_handl": 40, "creator": [40, 1900, 1930, 1932], "get_run_id": 40, "is_clos": 40, "set_clos": 40, "next_rendezv": 40, "rendezvousclosederror": 40, "rendezvousconnectionerror": 40, "rendezvousstateerror": 40, "rendezvoustimeouterror": 40, "num_nodes_wait": 40, "shutdown": [40, 1930, 1931], "rendezvouserror": 40, "dynamic_rendezv": 40, "join_timeout": 40, "600": 40, "last_call_timeout": 40, "close_timeout": 40, "rendezvoustimeout": 40, "get_stat": [40, 87], "fenc": 40, "token": [40, 975, 1009, 1010, 1875, 1881, 1955], "set_stat": [40, 87], "condition": [40, 1767], "last_cal": 40, "heartbeat": 40, "keep_al": 40, "c10d_rendezvous_backend": 40, "create_backend": 40, "store_typ": 40, "tcp": [40, 41, 1930], "read_timeout": 40, "60": [40, 42, 1388, 1707, 1833, 1838, 1890, 1930], "is_host": 40, "cname": 40, "fqdn": [40, 41], "etcd_rendezvous_backend": 40, "ssl_cert": 40, "ssl": 40, "certif": 40, "ssl_cert_kei": 40, "privat": [40, 1903, 1905, 1922, 1948], "ca_cert": 40, "rool": 40, "key_prefix": 40, "ttl": 40, "hour": 40, "etcd_rendezv": 40, "rdzv_impl": 40, "etcdrendezv": 40, "etcd_address": 40, "min_work": 40, "max_work": 40, "noqa": 40, "w605": 40, "2379": [40, 1298], "etcd_prefix": 40, "etcdstor": 40, "etcd_stor": 40, "etcd_client": 40, "etcd_store_prefix": 40, "c10": [40, 1910, 1951], "piggyback": 40, "num": [40, 741, 742, 756, 1324, 1386, 1389, 1404, 1440, 1449, 1477, 1913], "lookuperror": 40, "override_timeout": 40, "etcdserv": 40, "cumbersom": [40, 1880], "highli": [40, 1342, 1614, 1875, 1912, 1918, 1934, 1941], "etcd_serv": 40, "data_dir": 40, "v3": [40, 41], "substitut": [40, 54, 1213, 1900, 1937], "torchelastic_etcd_binary_path": 40, "get_client": 40, "etcd_binary_path": 40, "entry_point": [41, 1949], "migrat": [41, 47, 1302, 1658, 1928], "train_script": 41, "aforment": 41, "suffic": [41, 54], "compliant": [41, 43], "num_train": 41, "wors": [41, 1857], "port_k": 41, "etcd": 41, "v2": [41, 1269, 1710, 1875], "revis": 41, "physic": [41, 1092, 1110, 1881, 1902, 1913, 1934, 1953], "localworkergroup": 41, "rdzv_id": 41, "rdzv_backend": [41, 43], "rdzv_endpoint": [41, 43], "max_nnod": 41, "torchelastic_restart_count": 41, "far": [41, 1210, 1533, 1951], "torchelastic_max_restart": 41, "python_exec": 41, "gang": 41, "departur": 41, "surviv": 41, "kill": [41, 42, 1892, 1907], "frequenc": [41, 919, 966, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1198, 1342, 1377, 1378, 1524, 1525, 1697, 1818, 1962], "ness": [41, 1952], "load_checkpoint": [41, 43], "checkpoint_path": [41, 43], "dataset": [41, 43, 55, 794, 1342, 1351, 1400, 1876, 1907, 1910, 1913, 1917, 1921, 1925, 1926, 1939], "train_step": 41, "should_checkpoint": 41, "save_checkpoint": [41, 43], "acquir": [42, 54, 1911, 1932, 1934], "deadlin": 42, "message_queu": 42, "localtimerserv": 42, "max_interv": 42, "trainer_func": 42, "localtimercli": 42, "expiri": 42, "timer_cli": 42, "countdown": 42, "timefram": [42, 1930], "elig": [42, 1932], "reap": 42, "timerserv": 42, "mp_queue": 42, "daemon": [42, 1892], "filetimerserv": 42, "file_path": 42, "log_ev": [42, 1890], "filetimercli": 42, "fifo": 42, "watchdog": 42, "filetimerrequest": 42, "sigkil": 42, "named_pip": 42, "mkfifo": 42, "timercli": 42, "timerrequest": 42, "scope_id": 42, "expiration_tim": 42, "acquisit": 42, "whatev": [42, 54, 445, 1614, 1761, 1845, 1880, 1906, 1952, 1953], "request_queu": 42, "entiti": [42, 54], "clear_tim": 42, "get_expired_tim": 42, "register_tim": 42, "timer_request": 42, "use_env": 43, "expositori": 43, "worst": [43, 1905], "total_num_epoch": 43, "visit": [43, 1918, 1956, 1957], "exportdb": [44, 1876], "sharding_strategi": 46, "cpu_offload": 46, "auto_wrap_polici": 46, "backward_prefetch": 46, "backwardprefetch": [46, 1876], "backward_pr": [46, 1201, 1434], "mixed_precis": [46, 1614], "ignored_modul": 46, "param_init_fn": 46, "sync_module_st": 46, "forward_prefetch": 46, "limit_all_gath": 46, "use_orig_param": 46, "ignored_st": 46, "inspir": [46, 1681, 1905, 1955], "deepspe": 46, "shorten": 46, "sharded_modul": 46, "0001": [46, 54, 1055, 1245, 1422, 1551, 1675, 1705, 1878, 1921], "stale": 46, "dev_id": 46, "no_sync": [46, 1614], "offload": 46, "ping": 46, "77724": 46, "isol": [46, 54, 1605, 1892, 1923, 1963], "decod": [46, 1272, 1477, 1478, 1479, 1614, 1922], "summon_full_param": 46, "illeg": [46, 1903, 1951], "shard_grad_op": 46, "unshard": 46, "full_shard": 46, "with_grad": 46, "reacquir": 46, "gap": [46, 861, 1737, 1876, 1925, 1961], "delai": [46, 1614, 1932, 1953], "cpuoffload": [46, 1876], "modulewrappolici": 46, "proceed": [46, 977, 1312, 1388, 1931, 1932], "nonwrapped_numel": 46, "travers": [46, 832, 1614, 1904, 1905, 1931, 1943, 1944, 1956], "subtre": 46, "size_based_auto_wrap_polici": 46, "exce": [46, 1278, 1903, 1913], "100m": 46, "numel": [46, 432, 441, 946, 966, 1105, 1186, 1878, 1893, 1900, 1920, 1934], "custom_auto_wrap_polici": 46, "min_num_param": 46, "1e8": 46, "my_auto_wrap_polici": 46, "functool": [46, 49, 55, 837, 1905, 1941], "1e5": 46, "mixedprecis": [46, 1876], "meta": [46, 50, 54, 334, 1884, 1918, 1930, 1939, 1941, 1951, 1952, 1954, 1955, 1962], "is_meta": [46, 1920], "reset_paramet": 46, "torchdistx": 46, "deferred_init": 46, "materialize_modul": 46, "my_init_fn": 46, "fsdp_model": 46, "fullstatedictconfig": [46, 1876], "named_paramet": [46, 48, 50, 1130, 1201, 1205, 1434, 1911, 1916], "flatparamet": 46, "unifi": [46, 1876, 1894], "norm_typ": [46, 741, 742, 1377, 1378, 1402, 1403, 1524, 1525, 1554, 1555, 1618, 1878], "infin": [46, 964, 1191, 1193, 1195, 1196, 1328, 1350, 1427, 1428, 1429, 1557, 1558, 1559, 1618, 1680, 1790, 1801, 1934, 1935], "no_shard": 46, "largest": [46, 586, 919, 1118, 1232, 1253, 1255, 1257, 1258, 1273, 1570, 1622, 1840, 1878, 1879, 1880, 1958, 1962, 1965], "promot": [46, 681, 921, 924, 933, 1017, 1069, 1117, 1119, 1120, 1121, 1122, 1323, 1373, 1374, 1375, 1379, 1515, 1720, 1740, 1741, 1747, 1762, 1819, 1880, 1919, 1937, 1941, 1952, 1958], "fp32": [46, 777, 790, 813, 1059, 1614, 1903, 1914, 1925, 1926, 1928, 1955], "flatten_sharded_optim_state_dict": 46, "sharded_optim_state_dict": 46, "shard_full_optim_state_dict": 46, "unflatten": [46, 1878, 1893, 1894, 1920, 1938], "fsdp_modul": 46, "root_onli": 46, "full_optim_state_dict": 46, "optim_input": 46, "rank0_onli": 46, "convent": [46, 54, 333, 937, 1074, 1092, 1094, 1118, 1140, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1750, 1753, 1851, 1875, 1889, 1895, 1900, 1908, 1911, 1916], "alias": [46, 891, 1131, 1142, 1544, 1868, 1879, 1880, 1884, 1905, 1952], "get_state_dict_typ": 46, "state_dict_typ": 46, "statedictset": [46, 1876], "optim_state_dict": 46, "assertionerror": [46, 54, 79, 730, 1673, 1941, 1963], "differen": 46, "named_buff": [46, 1201, 1434, 1911, 1916], "intercept": [46, 54, 1905, 1954], "occurr": [46, 400, 1199, 1301, 1647, 1854, 1855, 1951], "oom": [46, 1907], "statedicttyp": 46, "fulloptimstatedictconfig": [46, 1876], "set_state_dict_typ": 46, "full_state_dict": 46, "save_a_checkpoint": 46, "load_a_checkpoint": 46, "optim_state_dict_to_load": 46, "is_named_optim": 46, "load_directli": 46, "original_osd": 46, "namedoptim": 46, "keyedoptim": 46, "torchrec": [46, 1876], "gossipgrad": [46, 1614], "latter": [46, 683, 787, 1201, 1404, 1434, 1441, 1906, 1911, 1913, 1915], "rekey_optim_state_dict": 46, "optim_state_key_typ": 46, "loadabl": [46, 1875], "wrapped_model": 46, "wrapped_optim": 46, "full_osd": 46, "nonwrapped_model": 46, "nonwrapped_optim": 46, "rekeyed_osd": 46, "optimstatekeytyp": 46, "param_id": 46, "osd": 46, "param_nam": 46, "sharded_osd": 46, "scatter_full_optim_state_dict": 46, "new_model": 46, "new_optim": 46, "remap": [46, 87, 1205, 1208, 1272, 1293, 1875, 1889, 1929], "state_dict_config": 46, "optim_state_dict_config": 46, "descend": [46, 54, 135, 538, 872, 1201, 1264, 1265, 1434, 1795, 1822, 1878], "transpar": [46, 1904, 1923, 1930, 1932], "sharded_state_dict": 46, "shardedstatedictconfig": [46, 1876], "offload_to_cpu": 46, "optimstatedictconfig": [46, 1876], "param_state_dict": 46, "statedictconfig": [46, 1876], "writeback": 46, "summon": 46, "portion": [46, 1123, 1371, 1465, 1573, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1926, 1954, 1963], "discard": [46, 1198, 1258, 1624, 1875, 1879, 1890], "redundantli": [46, 1899], "materi": [46, 896, 959, 1616, 1617, 1692, 1745, 1746, 1905], "throughput": [46, 1877, 1902], "backward_post": 46, "altogeth": [46, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692], "contend": 46, "volum": [46, 1163], "_hybrid_shard_zero2": 46, "freed": [46, 149, 889, 903, 983, 1031, 1892, 1903, 1909, 1930, 1948], "param_dtyp": 46, "reduce_dtyp": 46, "buffer_dtyp": 46, "keep_low_precision_grad": 46, "cast_forward_input": 46, "cast_root_forward_input": 46, "_module_classes_to_ignor": 46, "batchnorm": [46, 696, 697, 1139, 1201, 1210, 1434, 1473, 1614, 1888, 1900, 1911, 1921, 1923, 1925, 1927, 1928], "_batchnorm": 46, "kept": [46, 50, 54, 693, 775, 781, 1352, 1353, 1354, 1397, 1398, 1399, 1473, 1544, 1602, 1880, 1892, 1928, 1934], "permit": [46, 1934], "thereaft": 46, "local_state_dict": 46, "upcast": 46, "recast": 46, "offload_param": 46, "use_dtensor": 46, "cfg": 46, "finetun": [46, 1201, 1434], "model_fn": 46, "my_checkpoint": 46, "localstatedictconfig": [46, 1876], "shardedoptimstatedictconfig": [46, 1876], "localoptimstatedictconfig": [46, 1876], "jax": [47, 50, 51, 52, 1900, 1906, 1953], "love": 47, "hear": 47, "vmap": [47, 49, 50, 54, 897, 899, 903, 904, 905, 1132, 1135, 1136, 1138, 1140, 1953], "arbitrarili": [47, 52, 509, 1204, 1498, 1880, 1900, 1905, 1906], "stock": [47, 52], "ensembl": [47, 50, 52, 1140], "maml": [47, 52], "vjp": [47, 50, 51, 885, 886, 1136, 1142, 1868, 1905, 1906], "whirlwind": 47, "tour": 47, "ux": [47, 52, 1956], "jacrev": [48, 50, 51, 899, 1134, 1135, 1906], "functional_cal": [48, 50, 1140, 1953], "running_mean": [49, 1139, 1201, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1503, 1543, 1878, 1911, 1916, 1958], "running_var": [49, 1139, 1201, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1503, 1543, 1878, 1916, 1958], "groupnorm": [49, 1534], "anywher": [49, 1899], "batchnorm2d": [49, 709, 712, 714, 719, 810, 1210, 1371, 1408, 1503, 1888, 1900, 1911, 1925, 1927], "track_running_stat": [49, 747, 748, 749, 1139, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1916], "64": [49, 50, 52, 948, 1135, 1136, 1140, 1339, 1340, 1341, 1343, 1344, 1345, 1351, 1462, 1583, 1758, 1859, 1895, 1917, 1918, 1925, 1929, 1934, 1937, 1939, 1940, 1955], "resnet": [49, 1875, 1877, 1879, 1911, 1922, 1939, 1943], "regnet": 49, "norm_lay": 49, "resnet18": [49, 54, 1875, 1877, 1879, 1889, 1922, 1955, 1961], "num_group": [49, 745, 1389, 1534, 1878], "attach": [49, 53, 54, 138, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 789, 834, 836, 860, 1605, 1875, 1877, 1879, 1893, 1900, 1905, 1925, 1931, 1943, 1951], "fragil": 49, "replace_all_batch_norm_modules_": 49, "upstream": [50, 1917], "reflect": [50, 455, 516, 552, 1126, 1127, 1130, 1198, 1362, 1363, 1364, 1410, 1411, 1412, 1455, 1456, 1457, 1533, 1571, 1656, 1706, 1818, 1877, 1878, 1907, 1938, 1948], "coupl": [50, 1877, 1910, 1931, 1948, 1962], "jvp": [50, 51, 886, 890, 891, 892, 896, 1138, 1905], "jacfwd": [50, 51, 899, 1134, 1906], "carefulli": [50, 53, 1906, 1922, 1952, 1954], "make_functional_with_buff": 50, "hurri": 50, "gist": [50, 789, 1908, 1956, 1957], "emul": [50, 795, 1881, 1905], "fmodel": 50, "compute_loss": [50, 52, 1130, 1132], "predict": [50, 1342, 1351, 1388, 1516, 1921, 1939], "And": [50, 793, 820, 1053, 1054, 1130, 1201, 1222, 1298, 1303, 1357, 1434, 1858, 1860, 1900, 1905, 1906, 1917, 1918, 1925, 1944, 1949, 1954, 1955, 1956], "argnum": [50, 1132, 1133, 1134, 1135, 1136], "stack_module_st": 50, "num_model": [50, 1140], "in_featur": [50, 716, 724, 725, 728, 729, 752, 760, 1140, 1201, 1342, 1419, 1421, 1434, 1605, 1621, 1622, 1654, 1655, 1658, 1911], "out_featur": [50, 716, 724, 725, 728, 729, 752, 760, 1140, 1201, 1355, 1419, 1421, 1434, 1605, 1621, 1622, 1654, 1655, 1658, 1911], "base_model": 50, "deepcopi": [50, 1925, 1944], "clearer": [50, 1257, 1692, 1905, 1919], "call_single_model": 50, "aotautograd": [50, 676, 1886, 1904, 1919, 1952, 1953, 1954, 1963], "stori": [50, 1908], "grad_x": [51, 1906], "has_aux": [51, 1132, 1133, 1135, 1136, 1137, 1141], "mental": [51, 1131], "absenc": 51, "unbind": [51, 1142, 1868, 1876, 1878, 1893, 1920, 1938], "presenc": [51, 54, 1210, 1329, 1913, 1922, 1934, 1959], "pop": [51, 1035, 1435, 1444, 1920, 1923, 1924, 1956], "lst": 51, "in_dim": [51, 52, 888, 1132, 1142, 1868, 1906], "batchedtensor": 51, "batched_tensor_input": 51, "unsupport": [51, 55, 57, 63, 77, 79, 82, 1877, 1881, 1894, 1919, 1930, 1934, 1956, 1959], "new_": [51, 1903, 1940], "new_zero": [51, 1878, 1920], "new_empti": [51, 1878, 1920], "diag_emb": [51, 1064, 1236, 1237, 1264, 1822, 1878, 1920], "vec": [51, 106, 107, 421, 686, 1326, 1657, 1878, 1934, 1958], "copy_": [51, 220, 1131, 1486, 1877, 1878, 1893, 1903, 1936], "arithmet": [51, 921, 924, 938, 1256, 1747, 1881, 1890, 1893, 1894, 1914, 1925, 1937], "extra_arg": 51, "theoret": 51, "custom_dot": 51, "lax": 51, "cond": [51, 55, 58, 63, 1914], "while_loop": 51, "is_nonzero": [51, 1878, 1920, 1934], "rag": 51, "unclear": [51, 613], "add_nois": 51, "prng": 51, "cos_x": [52, 1132], "co": [52, 55, 59, 60, 62, 63, 200, 631, 632, 679, 926, 948, 1017, 1132, 1135, 1136, 1141, 1158, 1159, 1252, 1368, 1369, 1372, 1695, 1696, 1703, 1715, 1777, 1778, 1781, 1782, 1783, 1784, 1786, 1804, 1805, 1806, 1808, 1809, 1878, 1893, 1920, 1921, 1934, 1939, 1941, 1949, 1955, 1958], "neg_sin_x": [52, 1132], "hide": [52, 1142, 1868, 1906], "lift": [52, 1142, 1868, 1894, 1920, 1952], "simpler": [52, 1142, 1868, 1877, 1900, 1905, 1908, 1911], "feature_s": [52, 1132, 1142, 1868], "feature_vec": [52, 1132, 1142, 1868], "mseloss": [52, 1132, 1395, 1465, 1564, 1903, 1904], "grad_weight_per_exampl": [52, 1132], "cotang": [52, 1141], "vjp_fn": [52, 1141], "out_tang": 52, "hessian0": 52, "hessian1": 52, "hess": [52, 1134], "encapsul": [53, 54, 1930, 1948], "rpc_async": [53, 1880, 1920, 1930, 1932], "add_done_callback": 53, "fut": [53, 1204, 1614, 1902, 1930], "set_result": [53, 1614, 1930], "haven": [53, 1911], "usabl": [53, 1880, 1918, 1950], "set_except": 53, "baseexcept": 53, "valueerror": [53, 55, 79, 1199, 1626, 1627, 1647, 1650, 1672, 1905, 1923, 1941, 1962], "slow_set_futur": 53, "sleep": 53, "cb1": 53, "cb2": 53, "dedic": [53, 1903], "pool": [53, 762, 763, 764, 765, 778, 779, 975, 1009, 1010, 1020, 1031, 1309, 1310, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1492, 1493, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1528, 1529, 1554, 1555, 1557, 1558, 1559, 1726, 1727, 1876, 1902, 1903, 1905, 1911, 1913, 1927, 1930, 1948], "didn": [53, 1905, 1917, 1921], "cb_fut": 53, "chain_cb_fut": 53, "cb": [53, 1930], "held": [53, 975, 999, 1027, 1311, 1899, 1955], "collect_al": [53, 1876], "fut0": 53, "fut1": [53, 1930], "fut_list": 53, "wait_al": [53, 1876], "toolkit": 54, "clamp": [54, 185, 186, 795, 798, 944, 1207, 1350, 1388, 1533, 1544, 1602, 1878, 1888, 1893, 1918, 1920, 1925, 1927, 1928, 1935, 1941, 1958], "symbolic_trac": 54, "num_us": 54, "placehold": [54, 66, 71, 72, 73, 74, 75, 76, 830, 1396, 1903, 1949, 1950, 1962], "get_attr": 54, "call_funct": [54, 77, 78, 1949, 1950, 1953, 1956, 1962, 1963], "call_modul": [54, 1962], "call_method": [54, 1949, 1950, 1956], "feed": [54, 1877, 1907, 1911, 1943, 1952], "fake": [54, 79, 708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 789, 795, 796, 806, 808, 834, 857, 858, 1088, 1089, 1668, 1918, 1922, 1925, 1928, 1945], "theses": 54, "callsit": 54, "constitut": 54, "tracer_class": 54, "gm": [54, 1949, 1950, 1952, 1956, 1962, 1963], "treatment": 54, "topk": [54, 1878, 1893, 1920, 1958], "print_tabular": [54, 1949, 1950, 1956], "opcod": [54, 1922, 1949, 1950, 1956], "linear_weight": 54, "add_1": [54, 55, 58, 60, 62, 63, 1131], "linear_1": 54, "relu_1": 54, "sum_1": [54, 1949, 1950], "topk_1": 54, "pose": [54, 1931], "explor": [54, 1875, 1900, 1911, 1922], "edit": [54, 1922, 1938], "lint": 54, "inserting_aft": [54, 1962], "new_nod": 54, "replace_all_uses_with": [54, 1962], "tediou": 54, "unwieldi": 54, "conv": [54, 698, 699, 700, 701, 702, 703, 704, 705, 706, 788, 789, 792, 810, 850, 856, 1201, 1210, 1216, 1217, 1362, 1363, 1364, 1365, 1366, 1367, 1434, 1435, 1441, 1888, 1898, 1903, 1914, 1918, 1925, 1926, 1927, 1928, 1957, 1959], "fusion": [54, 788, 810, 856, 857, 948, 1203, 1209, 1214, 1215, 1216, 1217, 1888, 1911, 1925, 1953, 1955, 1962, 1963], "machineri": [54, 1905], "imagin": [54, 1930, 1954], "requisit": 54, "relu_decomposit": 54, "decomposition_rul": 54, "constitu": [54, 1895], "new_graph": 54, "graphappendingtrac": 54, "proxy_arg": 54, "output_proxi": 54, "node_copi": 54, "ari": [54, 1918], "unari": [54, 1135, 1136, 1477, 1479, 1481, 1881, 1893], "organiz": 54, "shapeprop": 54, "mod": [54, 717, 718, 728, 734, 735, 736, 741, 742, 752, 760, 806, 807, 808, 809, 832, 833, 860, 1130, 1204, 1205, 1210, 1217, 1656, 1861, 1879, 1880, 1922, 1943, 1949, 1963], "named_modul": [54, 1201, 1434, 1911], "args_it": 54, "load_arg": 54, "map_arg": 54, "fetch_attr": 54, "target_atom": 54, "attr_itr": 54, "hasattr": [54, 1858, 1878, 1905, 1925, 1956], "referenc": [54, 978, 1201, 1434, 1845, 1879, 1900, 1918, 1930, 1956], "nonexist": [54, 1879, 1880], "getattr": [54, 1878, 1905, 1916, 1930, 1956], "elif": [54, 1207, 1400, 1668, 1879, 1880, 1909, 1956, 1962], "self_obj": 54, "encompass": 54, "prove": [54, 1892], "disprov": 54, "led": 54, "auxiliari": [54, 1132, 1133, 1135, 1136, 1137, 1141, 1875, 1910], "nondeterminist": [54, 311, 313, 319, 495, 511, 513, 919, 1075, 1076, 1077, 1222, 1357, 1362, 1363, 1364, 1365, 1366, 1367, 1430, 1431, 1432, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1525, 1533, 1544, 1571, 1583, 1602, 1603, 1604, 1764, 1857, 1949], "unord": [54, 1435, 1444], "nondetermin": [54, 905, 1915], "dedupl": [54, 1918], "straightforward": [54, 1887, 1895, 1911, 1921, 1934, 1949, 1956], "torchvis": [54, 1875, 1876, 1877, 1879, 1918, 1922, 1925, 1939, 1943, 1961], "transformed_resnet18": 54, "input_imag": 54, "224": [54, 857, 858, 1877, 1879, 1918, 1961], "margin": [54, 1368, 1394, 1426, 1437, 1439, 1482, 1483, 1514, 1541, 1556, 1565, 1599, 1600, 1878, 1939], "commut": 54, "toolbox": 54, "tradit": [54, 1481], "luckili": 54, "my_pass": 54, "my_module_transform": 54, "input_valu": 54, "prompt": [54, 1875, 1917], "set_trac": [54, 1206, 1212, 1218, 1877], "examin": [54, 1911, 1918, 1924], "undergon": 54, "subclassm": 54, "untrac": 54, "pre_trac": 54, "post_trac": 54, "sake": 54, "tabular": [54, 676, 1886], "transform_graph": 54, "session": 54, "luck": 54, "input_nod": 54, "stepwis": 54, "breakpoint": [54, 1880, 1962], "excel": [54, 1954], "onlin": [54, 1677], "realpython": 54, "pycharm": 54, "vscode": 54, "graphic": [54, 1891, 1917, 1961], "parlanc": 54, "func_to_trac": 54, "dyn": 54, "155": 54, "__bool__": [54, 1878, 1880], "to_bool": 54, "85": [54, 1437, 1703, 1957, 1961], "traceerror": [54, 1925], "architectur": [54, 1001, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1370, 1477, 1516, 1766, 1903, 1914, 1925, 1934, 1947], "hyper": [54, 1465, 1879, 1939], "do_activ": 54, "512": [54, 1477, 1478, 1479, 1480, 1481, 1903, 1947], "without_activ": 54, "with_activ": 54, "traced_without_activ": 54, "traced_with_activ": 54, "concrete_arg": 54, "truli": [54, 1918], "__torch_function__": [54, 1964], "161": 54, "len_1": 54, "sqrt_1": 54, "truediv": [54, 1949, 1950], "mycustomtrac": 54, "traced_graph": 54, "runnabl": [54, 1899, 1918, 1939, 1963], "myspecialsubmodul": 54, "submod": 54, "neg_1": 54, "is_leaf_modul": [54, 1944], "sparse_coo_tensor": [54, 540, 577, 1803, 1878, 1882, 1920, 1934], "traceabl": [54, 620, 813, 1877, 1925, 1951], "ones_lik": [54, 1135, 1136, 1141, 1878, 1895, 1903, 1906, 1911, 1920], "zeros_lik": [54, 894, 896, 1878, 1882, 1895, 1903, 1920, 1934], "viabl": [54, 1903], "torch_randn": 54, "gotcha": 54, "bake": [54, 55, 63, 1205, 1210, 1678, 1679, 1921], "dropoutrepro": 54, "assert_clos": [54, 1091, 1093, 1094, 1099, 1100, 1105, 1106, 1107, 1109, 1111, 1876, 1877, 1941], "greatest": [54, 1144, 1328, 1918, 1941], "6207983493804932": 54, "dropoutrepro2": 54, "pytre": [54, 55, 1906], "overspeci": [54, 948], "ph": 54, "shouldn": [54, 975, 1922, 1934, 1938], "fn_or_nam": 54, "callfunct": 54, "my_custom_funct": 54, "fn_to_be_trac": 54, "reassign": [54, 1903], "regener": 54, "unset": [54, 1914], "add_submodul": 54, "subpath": 54, "get_submodul": [54, 1201, 1434], "delete_all_unused_submodul": 54, "delete_submodul": 54, "print_read": 54, "print_output": 54, "date": [54, 1922], "pythoncod": 54, "fxmodul": 54, "pathlik": [54, 1272, 1753, 1922], "owning_modul": 54, "tracer_cl": 54, "tracer_extra": 54, "the_funct": 54, "type_expr": 54, "create_nod": 54, "method_nam": 54, "0th": [54, 1142, 1868], "inserting_befor": 54, "influenc": [54, 1667, 1918, 1934], "eliminate_dead_cod": 54, "dead": [54, 1962], "topolog": [54, 1918], "attr_1": 54, "is_impur": 54, "bad": [54, 55, 1892, 1918, 1922, 1925, 1952, 1961], "sound": [54, 950, 951, 1462, 1884, 1939, 1954], "erase_nod": 54, "to_eras": 54, "eras": [54, 55, 60, 61, 1951], "qualified_nam": 54, "graph_copi": 54, "val_map": 54, "return_output_nod": 54, "slice": [54, 55, 63, 64, 603, 691, 692, 1352, 1353, 1354, 1467, 1469, 1473, 1589, 1590, 1742, 1759, 1760, 1791, 1801, 1852, 1877, 1881, 1895, 1918, 1920, 1934, 1935, 1938, 1940, 1958], "memory_format": [54, 154, 169, 171, 174, 177, 178, 179, 188, 194, 205, 208, 238, 265, 295, 323, 329, 391, 495, 496, 521, 576, 945, 1075, 1076, 1129, 1201, 1434, 1614, 1666, 1731, 1733, 1735, 1874, 1876, 1878, 1941, 1958], "layout": [54, 55, 60, 63, 149, 190, 207, 340, 341, 432, 442, 443, 444, 445, 446, 455, 540, 577, 578, 579, 580, 581, 583, 584, 613, 685, 861, 889, 891, 917, 926, 990, 1075, 1076, 1077, 1087, 1092, 1110, 1128, 1129, 1158, 1159, 1220, 1271, 1287, 1295, 1305, 1334, 1550, 1665, 1666, 1692, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1842, 1847, 1849, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1882, 1895, 1903, 1920, 1922, 1934, 1939, 1940, 1941, 1958], "opoverload": [54, 1884], "companion": 54, "__exit__": [54, 1880, 1881, 1922], "arg_transform": 54, "value_remap": 54, "_node_list": 54, "doubli": 54, "on_generate_cod": 54, "make_transform": 54, "transformcodefunc": 54, "insert_pdb": 54, "bodi": [54, 55, 63, 65, 1212, 1877, 1879, 1880, 1881, 1963], "current_tran": 54, "stuff": [54, 1952], "default_valu": 54, "_not_": 54, "tabul": 54, "process_input": 54, "process_output": 54, "python_cod": 54, "root_modul": [54, 789, 1927], "set_codegen": 54, "codegen": [54, 1905, 1953, 1957, 1963], "return_typ": [54, 693, 1053, 1054, 1163, 1222, 1260, 1298, 1301, 1303, 1306, 1330, 1795, 1840, 1845], "printout": [54, 1019, 1032, 1950], "all_input_nod": 54, "format_nod": 54, "placeholder_nam": 54, "maybe_return_typenam": 54, "autogener": [54, 1906], "impur": 54, "normalized_argu": 54, "arg_typ": 54, "kwarg_typ": 54, "normalize_to_only_use_kwarg": 54, "vararg": 54, "argskwargspair": 54, "bx": 54, "ax": [54, 1232, 1246, 1250, 1261, 1262, 1263, 1291, 1302, 1442, 1452, 1845, 1918], "prev": [54, 1690], "replace_with": 54, "delete_user_cb": 54, "propagate_meta": 54, "replace_input_with": 54, "old_input": 54, "new_input": 54, "create_proxi": 54, "record_stack_trac": 54, "dynamo": [54, 676, 1886, 1919, 1949, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1963], "outputgraph": [54, 1956], "update_arg": 54, "update_kwarg": 54, "autowrap_modul": 54, "autowrap_funct": 54, "create_arg": 54, "create_args_for_root": 54, "root_fn": 54, "is_modul": 54, "introspect": [54, 950, 1953], "disallow": [54, 1922, 1930, 1937, 1953, 1954], "proxy_factory_fn": 54, "attr": [54, 55, 57, 149, 889, 1302, 1750], "attr_val": 54, "parameter_proxy_cach": 54, "module_qualified_nam": [54, 1944], "path_of_modul": 54, "some_hyperparamet": 54, "indexed_item": 54, "proxied_valu": 54, "garbage_collect_valu": 54, "run_nod": 54, "swap": [54, 613, 784, 785, 786, 789, 793, 860, 1290, 1482, 1483, 1599, 1600, 1842, 1878, 1881, 1903, 1925, 1934, 1936, 1943], "vice": [54, 455, 599, 1126, 1127, 1426, 1900, 1928, 1936, 1951], "versa": [54, 455, 599, 1126, 1127, 1426, 1900, 1928, 1936, 1951], "negsigmswapinterpret": 54, "call_self": 54, "args_tail": 54, "boxed_run": 54, "args_list": 54, "promptli": [54, 1273], "fetch_args_kwargs_from_env": 54, "map_nodes_to_valu": 54, "initial_env": 54, "enable_io_process": 54, "negsigmswapxform": 54, "nodes_map": [54, 1962], "subgraph_rewrit": [54, 1962], "w1": 54, "w2": 54, "m1": [54, 1866, 1867], "m2": [54, 1654, 1866, 1867, 1925], "traced_modul": [54, 1916, 1962], "despit": [54, 1216, 1217, 1908], "stack_1": 54, "stack_2": 54, "sum_2": 54, "max_1": 54, "max_2": 54, "add_2": [54, 55, 58, 60], "exhaust": [55, 1614], "wih": 55, "escap": [55, 1953], "hatch": [55, 1953], "_dynamo": [55, 64, 948, 1904, 1945, 1948, 1949, 1950, 1951, 1955, 1956, 1959, 1961, 1963], "assumeconstantresult": [55, 64], "burn": [55, 64, 1948], "tracabl": [55, 64], "get_item": [55, 64], "exportedprogram": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "graphmodul": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 855, 856, 857, 858, 1944, 1949, 1950, 1952, 1956, 1962, 1963], "arg0_1": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "f32": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "arg1_1": [55, 57, 58, 60, 61, 62, 63, 64, 65], "i64": [55, 60, 61, 64], "slice_1": [55, 63, 64], "exportgraphsignatur": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "user_input": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "user_output": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "inputs_to_paramet": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "inputs_to_buff": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "buffers_to_mut": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "backward_signatur": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "assertion_dep_token": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "myautogradfunct": 55, "autogradfunct": 55, "allow_in_graph": [55, 1953], "cl": [55, 57, 138, 1905, 1925, 1930, 1964], "arg2_1": [55, 58, 60, 61, 62, 63], "mul_1": [55, 61, 1949], "l__self___linear": 55, "control_flow": [55, 58, 62, 63, 65], "mysubmodul": [55, 62, 63], "condbranchclassmethod": [55, 62, 63], "true_fn": [55, 58, 62, 63], "false_fn": [55, 58, 62, 63], "pred": [55, 58, 62, 63, 1400, 1614, 1912, 1921, 1930, 1958], "subm": [55, 62, 63], "submodule_0": [55, 58, 62, 63, 65], "submodule_1": [55, 58, 62, 63], "higher_ord": [55, 58, 62, 63], "inner_true_fn": [55, 62, 63], "inner_false_fn": [55, 62, 63], "my_tensor_var": [55, 62, 63], "my_primitive_var": [55, 62, 63], "nonloc": [55, 58, 62, 63, 1881], "_tensor_constant0": [55, 62, 63], "lift_fresh_copi": [55, 62, 63, 1920], "sub_1": [55, 62, 63], "condclosedovervari": [55, 58, 62], "val": [55, 58, 62, 1017, 1207, 1878, 1880, 1898, 1952, 1956], "b8": [55, 58, 62], "_export": [55, 57, 62, 63, 1876], "dynamic_dim": [55, 57, 62, 63], "dynamic_constraint": [55, 57, 62, 63], "operand": [55, 62, 63, 924, 1074, 1880, 1881, 1905, 1934, 1937], "s0": [55, 62, 63, 1951, 1963], "sym_siz": [55, 62, 63, 1920, 1958], "sym": [55, 62, 63, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786], "gt": [55, 62, 63, 294, 1155, 1878, 1893, 1908, 1920, 1958], "rangeconstraint": [55, 62, 63], "min_val": [55, 62, 63, 774, 1393, 1539, 1540, 1878, 1958], "max_val": [55, 62, 63, 774, 1393, 1539, 1540, 1878, 1958], "oo": [55, 62, 63], "predic": [55, 60, 62, 63], "test_decor": 55, "x2": [55, 61, 936, 1248, 1426, 1482, 1483, 1515, 1572, 1878], "dynamicshapeifguard": [55, 60, 63], "map_impl": [55, 63, 65], "getitem": [55, 63, 65, 1962], "slice_2": [55, 63], "9223372036854775807": [55, 63, 1199, 1647, 1890], "new_x_shap": [55, 63], "pos0": [55, 61], "tuple0": [55, 61], "myarg": [55, 61], "mykw0": [55, 61], "mykwarg": [55, 61], "input0": [55, 61], "input1": [55, 61, 756, 1355, 1368, 1369, 1426, 1443, 1504, 1514, 1515, 1556, 1878, 1899, 1918], "arg3_1": [55, 61], "arg4_1": [55, 61], "arg5_1": [55, 61], "arg6_1": [55, 61], "arg7_1": [55, 61], "mul_2": [55, 61], "mul_3": [55, 61], "mul_4": [55, 61], "mul_5": [55, 61], "mul_6": [55, 61], "monkei": [55, 56, 61, 63, 1858], "cow": [55, 56, 61, 63], "pig": [55, 56, 61, 63], "contextlib": [55, 59], "nullcontext": [55, 59], "_pytre": 55, "tree_flatten": 55, "anim": 55, "moo": 55, "specializedattribut": 55, "staticforloop": [55, 60], "unrol": [55, 60, 1879, 1880, 1918, 1953], "ret": [55, 60, 1905, 1930], "add_3": [55, 60], "add_4": [55, 60], "add_5": [55, 60], "add_6": [55, 60], "add_7": [55, 60], "add_8": [55, 60], "add_9": [55, 60], "staticif": [55, 60], "setattr": [55, 57, 1880], "not_supported_yet": [55, 57, 63], "overli": [55, 57], "type_reflection_method_rewrit": [55, 57], "todo": [66, 71, 72, 73, 74, 75, 76, 77, 78, 822, 855, 857, 858, 1905, 1944, 1948, 1952, 1959], "onnx": [77, 79, 80, 81, 84, 85, 86, 676, 1648, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1876, 1894, 1925], "dynamo_export": [77, 1668, 1669, 1918], "disregard": [79, 80, 82], "indexerror": [79, 1632, 1634], "torchlib": 79, "typeerror": [79, 1637, 1905, 1923, 1941, 1964], "opschema": [79, 1919], "onnxfunct": [80, 82, 1672], "perfect": 80, "nearest": [80, 775, 781, 783, 1331, 1486, 1488, 1533, 1544, 1602, 1604, 1722, 1750, 1903], "highest": [80, 676, 1342, 1732, 1733, 1765, 1926, 1941], "stringent": 80, "op_level_debug": [80, 82, 1667], "elementwise_dtyp": 81, "_ref": 81, "_intern": [81, 1919, 1936], "type_promot": 81, "absent": [82, 1904], "signifi": 82, "opset_vers": [86, 1672, 1918, 1920], "g_cpu": 87, "g_cuda": 87, "bytetensor": [87, 1006, 1007, 1045, 1046, 1153, 1313, 1320, 1771, 1860, 1929, 1937, 1940], "2147483647": 87, "0x8000_0000_0000_0000": [87, 1293, 1929], "0xffff_ffff_ffff_ffff": [87, 1293, 1929], "random_devic": 87, "1516516984916": 87, "new_stat": [87, 1045, 1046, 1320, 1771, 1860, 1929], "void": [87, 976, 1018, 1903, 1910], "g_cpu_oth": 87, "abs_": [91, 1878, 1893, 1940], "acosh": [95, 121, 863, 1878, 1893, 1920, 1958], "batch1": [98, 99, 150, 151, 682, 916, 1878], "batch2": [98, 99, 150, 151, 168, 682, 916, 1878], "tensor1": [100, 101, 102, 103, 683, 684, 1295, 1747, 1878], "tensor2": [100, 101, 102, 103, 312, 402, 683, 684, 1295, 1747, 1878], "mat1": [104, 105, 550, 685, 1165, 1221, 1305, 1796, 1799, 1800, 1814, 1878, 1958], "mat2": [104, 105, 411, 550, 685, 928, 1165, 1221, 1305, 1796, 1799, 1800, 1814, 1878, 1958], "mat": [106, 107, 536, 686, 1326, 1728, 1793, 1796, 1814, 1878, 1939], "vec1": [108, 109, 687, 1878], "vec2": [108, 109, 286, 458, 687, 1147, 1710, 1878], "keepdim": [111, 113, 114, 115, 117, 133, 134, 352, 390, 405, 407, 408, 409, 412, 426, 427, 428, 429, 450, 467, 476, 551, 561, 611, 689, 691, 692, 693, 695, 870, 871, 1222, 1253, 1257, 1270, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1330, 1331, 1332, 1443, 1572, 1661, 1719, 1722, 1816, 1817, 1821, 1863, 1864, 1878, 1893, 1935, 1958], "rtol": [112, 342, 690, 904, 905, 1190, 1255, 1258, 1674, 1877, 1878, 1941], "atol": [112, 342, 690, 904, 905, 1190, 1255, 1258, 1267, 1674, 1877, 1878, 1905, 1941], "08": [112, 342, 690, 926, 1190, 1247, 1369, 1448, 1576, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1705, 1777, 1878], "equal_nan": [112, 342, 690, 1190, 1878, 1941], "arcco": [120, 1878, 1920, 1941], "acosh_": [122, 1878, 1893], "arccosh": [122, 1878, 1920], "arcsin": [124, 877, 1878, 1920, 1934], "arcsinh": [126, 1878, 1920], "atan2_": [129, 1878, 1893], "arctan2": [129, 1878, 1920], "arctan": [130, 1878, 1920], "arctanh": [132, 1878, 1920], "asinh": [142, 865, 1878, 1893, 1920, 1934, 1958], "atan": [146, 627, 628, 866, 1878, 1893, 1920, 1934, 1958], "atanh": [148, 868, 1878, 1893, 1920, 1934, 1958], "wrt": [149, 904, 905], "60521": [149, 889], "issuecom": [149, 889], "867061780": [149, 889], "nearli": [149, 889, 903, 1711, 1913, 1930, 1963], "texttt": [152, 153, 690, 1190, 1342, 1941], "bernoulli": [153, 756, 1346, 1372, 1373, 1374, 1375, 1379, 1386, 1404, 1518, 1519, 1520, 1521, 1526, 1876, 1878, 1893, 1920, 1942], "preserve_format": [154, 169, 171, 174, 177, 178, 179, 188, 205, 208, 238, 265, 295, 323, 391, 521, 576, 945, 1076, 1129, 1666, 1731, 1733, 1735, 1874, 1937], "minlength": [155, 919, 1878], "bitwise_and": [157, 1878, 1920, 1958], "bitwise_left_shift": [159, 1878, 1920], "bitwise_not": [161, 1878, 1893, 1920, 1958], "bitwise_or": [163, 1878, 1920, 1958], "bitwise_right_shift": [165, 1878, 1920], "bitwise_xor": [167, 1878, 1920, 1958], "uint8": [171, 240, 613, 689, 695, 1126, 1720, 1723, 1724, 1747, 1925, 1936, 1937, 1939, 1940, 1965], "cauchi": [172, 1876, 1900, 1908, 1920, 1942], "dfrac": [172, 375, 604, 1369, 1515, 1622, 1655, 1658], "complex32": [178, 1362, 1363, 1364, 1508, 1509, 1510, 1670, 1940, 1941], "int8": [179, 445, 725, 920, 921, 922, 923, 924, 925, 1126, 1282, 1283, 1284, 1285, 1925, 1928, 1934, 1936, 1937, 1940, 1965], "input2": [182, 456, 457, 513, 756, 941, 1355, 1368, 1369, 1426, 1443, 1504, 1514, 1515, 1556, 1878, 1899, 1918], "clamp_": [187, 1878, 1893], "uncoalesc": [189, 326, 1807], "coo": [189, 321, 326, 340, 610, 1165, 1796, 1799, 1804, 1805, 1806, 1807, 1808, 1809, 1876, 1887, 1937, 1941], "inttensor": [190, 207, 1175, 1290, 1291, 1377, 1937, 1940], "csr": [190, 207, 341, 579, 584, 1378, 1796, 1799, 1800, 1806, 1809, 1887, 1941], "sparse_csr": [190, 207, 579, 584, 1799, 1800, 1802, 1806, 1809, 1934], "nnz": [190, 540, 579, 580, 581, 583, 584, 904, 1334, 1797, 1799, 1800, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1934], "int32": [190, 207, 311, 319, 323, 444, 613, 932, 1076, 1088, 1089, 1124, 1126, 1127, 1231, 1242, 1243, 1244, 1262, 1290, 1357, 1720, 1757, 1925, 1934, 1936, 1937, 1940, 1965], "mkl": [190, 207, 1876, 1902, 1917, 1920, 1934], "routin": [190, 207, 872, 940, 1273, 1795, 1822, 1934], "downcast": [190, 207], "to_sparse_csr": [190, 207, 580, 581, 1799, 1800, 1878, 1920, 1934], "conj_phys": [193, 959, 1878, 1920, 1934, 1958], "contiguous_format": [194, 329, 495, 496, 1075, 1614, 1937], "non_block": [195, 208, 576, 599, 1201, 1434, 1647, 1878, 1903, 1936, 1958], "copysign": [197, 1878, 1920], "fweight": [204, 966, 1878], "aweight": [204, 966, 1878], "sparse_dim": [217, 541, 542, 1796, 1799, 1803, 1807, 1878, 1920, 1934], "resize_": [220, 496, 1131, 1222, 1857, 1877, 1878, 1879, 1893, 1927, 1936], "resize_as_": [220, 1878, 1893, 1934], "set_": [220, 495, 1878], "transpose_": [220, 1878, 1934], "zero_": [220, 1246, 1524, 1878, 1893, 1894, 1911, 1934], "dim1": [224, 226, 227, 565, 588, 589, 1062, 1064, 1065, 1235, 1825, 1842, 1878], "dim2": [224, 226, 227, 1062, 1064, 1065, 1235, 1878], "digamma": [230, 1878, 1893, 1920, 1935, 1958], "rounding_mod": [233, 234, 235, 236, 1069, 1070, 1119, 1122, 1741, 1850, 1878], "split_size_or_sect": [239, 300, 615, 1810], "eq": [242, 1878, 1893, 1920, 1958], "erf": [245, 635, 636, 1878, 1893, 1920, 1934, 1935, 1958], "erfc": [247, 637, 638, 1878, 1893, 1920, 1935, 1958], "front": [252, 948, 1273, 1437, 1894, 1906], "lambd": [256, 296, 1390, 1471, 1536, 1592, 1675, 1878], "fill_valu": [258, 443, 1128, 1129, 1357, 1878, 1903, 1958], "tall": [258, 1259, 1264, 1905], "start_dim": [261, 1113, 1380, 1878], "end_dim": [261, 1113, 1380, 1878], "float_pow": [267, 1878, 1920], "floor_divid": [271, 1069, 1878, 1920, 1934], "divisor": [274, 275, 485, 486, 764, 765, 1069, 1119, 1122, 1144, 1348, 1349, 1381, 1485, 1501, 1502, 1741, 1850], "fmod": [275, 1741, 1878, 1920, 1958], "mantissa": [278, 478, 1124, 1224, 1878, 1903, 1914], "gcd": [281, 1878, 1920, 1958], "ge": [283, 1156, 1294, 1391, 1392, 1537, 1538, 1878, 1893, 1920, 1958], "geometr": [284, 775, 781, 1533, 1544, 1602, 1862, 1876, 1920, 1942, 1960], "ordin": [287, 1804, 1805, 1806, 1808, 1809, 1937], "greater_equ": [292, 1878, 1920], "hypot": [302, 1878, 1920, 1958], "i0": [304, 1220, 1785, 1878, 1920, 1935], "igamma": [306, 1878, 1920, 1958], "igammac": [308, 1878, 1920, 1958], "3100": [309, 480, 1171, 1739], "3553j": [309, 480, 1171, 1739], "5445": [309, 480, 1171, 1739], "7896j": [309, 480, 1171, 1739], "6492": [309, 480, 1171, 1739], "0633j": [309, 480, 1171, 1739], "0638": [309, 480, 1171, 1739], "8119j": [309, 480, 1171, 1739], "3553": [309, 1171], "7896": [309, 1171], "0633": [309, 1171, 1247, 1895], "8119": [309, 1171], "index_add_": [310, 894, 1172, 1173, 1878, 1915], "index_copy_": [312, 1878], "index_fill_": [314, 1878, 1893], "index_put_": [316, 1878], "include_self": [319, 512, 513, 1174, 1756, 1878, 1958], "identit": 319, "amax": [319, 513, 692, 693, 1799, 1878, 1920, 1958], "amin": [319, 513, 691, 693, 1799, 1878, 1920, 1958], "fill_": [319, 1201, 1226, 1434, 1742, 1878, 1893, 1911, 1936], "72": [319, 613, 1154], "uint8_t": [324, 1670], "retain_grad": [333, 1878, 1900, 1920], "requires_grad_": [333, 445, 1201, 1357, 1434, 1517, 1799, 1836, 1878, 1893, 1900, 1940, 1963], "n_fft": [349, 552, 1198, 1818, 1878], "hop_length": [349, 552, 1198, 1818, 1878], "win_length": [349, 552, 1198, 1818, 1878], "center": [349, 552, 775, 781, 1094, 1198, 1498, 1533, 1544, 1602, 1689, 1711, 1779, 1818, 1878, 1900, 1920, 1939], "onesid": [349, 552, 1198, 1818, 1878, 1958], "return_complex": [349, 552, 1198, 1818, 1878], "element_s": [351, 432, 1878, 1893, 1920, 1936], "lcm": [354, 1878, 1920], "ldexp": [356, 1124, 1878, 1920], "le": [358, 1228, 1391, 1392, 1537, 1538, 1878, 1893, 1920, 1941, 1958], "lerp": [360, 1878, 1920], "lt": [361, 393, 1227, 1877, 1878, 1893, 1920, 1949, 1950, 1958], "less_equ": [364, 1878, 1920], "lgamma": [366, 647, 648, 1878, 1920, 1958], "ln": [375, 1229, 1935], "logical_and": [381, 1878, 1920, 1958], "logical_not": [383, 1583, 1878, 1893, 1895, 1920, 1958], "logical_or": [385, 1878, 1920, 1958], "logical_xor": [387, 1878, 1920, 1958], "pivot": [394, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1290, 1291, 1292, 1721, 1878], "get_info": [394, 1290], "lu_data": [395, 1291, 1292, 1878], "lu_pivot": [395, 1291, 1292, 1878], "masked_fill_": [397, 1583, 1878, 1893, 1894], "booltensor": [398, 400, 731, 1294, 1477, 1871, 1937, 1940], "masked_scatter_": [399, 1878], "mvlgamma": [423, 1878, 1920], "posinf": [424, 425, 1328, 1878], "neginf": [424, 425, 1328, 1878], "nan_to_num": [425, 1878, 1920], "interpol": [428, 476, 781, 782, 783, 815, 1226, 1331, 1486, 1487, 1488, 1498, 1533, 1602, 1603, 1604, 1722, 1857, 1878, 1927], "ne": [436, 1622, 1655, 1663, 1878, 1893, 1920, 1958], "8182e": 442, "5765e": 442, "41": [442, 1077, 1259, 1605, 1654, 1721], "0545e": 442, "0949e": 442, "4842e": [442, 1077], "0000e": [442, 1077, 1117, 1278, 1287, 1328, 1654, 1777, 1779, 1780, 1785, 1786], "00": [442, 1077, 1117, 1278, 1287, 1328, 1654, 1673, 1777, 1779, 1780, 1785, 1786, 1877, 1918], "141592": [443, 1128], "1416": [443, 1058, 1128, 1836], "from_numpi": [445, 875, 876, 1836], "array_lik": [445, 875, 1804, 1805, 1806, 1807, 1808, 1809, 1836, 1895], "nextaft": [448, 1878, 1920, 1958], "fro": [450, 1232, 1253, 1257, 1270, 1632, 1641, 1661, 1878], "not_equ": [453, 1878, 1920], "resolve_conj": [455, 959, 1878, 1920], "resolve_neg": [455, 1878, 1920], "shorthand": [455, 1220], "input3": [457, 1878], "transpos": [457, 589, 590, 613, 688, 737, 738, 739, 941, 1074, 1141, 1230, 1231, 1237, 1240, 1243, 1250, 1261, 1264, 1365, 1366, 1367, 1485, 1511, 1512, 1513, 1583, 1621, 1650, 1709, 1822, 1824, 1825, 1831, 1845, 1878, 1893, 1895, 1900, 1914, 1918, 1920, 1927, 1934, 1938, 1940, 1958], "polygamma": [463, 1878, 1920, 1935], "q_per_channel_axi": [470, 471, 1878, 1920], "zero_point": [471, 473, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 766, 768, 769, 770, 771, 773, 776, 777, 795, 798, 815, 816, 817, 818, 821, 848, 1088, 1089, 1723, 1724, 1725, 1726, 1727, 1878, 1925, 1926], "qtensor": [475, 1878], "uniform": [478, 604, 918, 1370, 1452, 1516, 1730, 1731, 1779, 1876, 1898, 1920, 1942, 1958], "queu": [483, 981, 1903], "life": [483, 978], "cycl": [483, 889, 978, 1697, 1703, 1900, 1924], "unexpectedli": [483, 1940], "maxnorm": [487, 488, 1742, 1878], "tile": [489, 1878, 1920, 1934, 1953], "repeat_interleav": [489, 1857, 1878, 1920, 1927], "output_s": [490, 737, 738, 739, 762, 763, 1339, 1340, 1341, 1343, 1344, 1345, 1366, 1381, 1382, 1383, 1430, 1431, 1432, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1527, 1528, 1529, 1560, 1561, 1562, 1743, 1878, 1895, 1958], "is_leaf": [491, 1878, 1893, 1895, 1920], "saved_weight": 492, "loaded_weight": 492, "5503": 492, "4926": [492, 1911], "1158": 492, "8303": 492, "1007": 492, "9853": 492, "2316": 492, "6606": 492, "resiz": [495, 496, 520, 541, 542, 1126, 1127, 1131, 1486, 1533, 1544, 1878, 1893, 1920, 1936, 1958], "shift": [501, 921, 924, 1094, 1101, 1346, 1352, 1353, 1354, 1379, 1473, 1526, 1748, 1878, 1881], "decim": [503, 504, 1750, 1878, 1914, 1965], "scatter_": [508, 511, 1754, 1878], "scatter_add_": [509, 510, 1755, 1857, 1878], "scatter_reduce_": [509, 512, 1756, 1878], "axi": [509, 511, 513, 818, 821, 958, 1073, 1088, 1114, 1143, 1166, 1723, 1743, 1748, 1749, 1870, 1878, 1906, 1918, 1923, 1925, 1958, 1962], "4600": 509, "2300": 509, "scatter_reduc": [513, 1857, 1878, 1920, 1958], "sgn": [518, 1123, 1775, 1878, 1893, 1895, 1920, 1934], "int16": [521, 1126, 1283, 1934, 1936, 1937, 1940, 1965], "dense_dim": [539, 541, 542, 579, 580, 581, 583, 584, 1807, 1878, 1920, 1934], "nse": [540, 1934], "randint": [540, 919, 966, 1117, 1306, 1357, 1483, 1516, 1517, 1803, 1878, 1882, 1894, 1920, 1939, 1942], "6550": 540, "2397": 540, "1611": 540, "0779": [540, 1237, 1718, 1871], "2326": 540, "0558": 540, "4711": 540, "9678": 540, "5138": 540, "0411": 540, "9417": 540, "5158": 540, "0793": 540, "0036": [540, 1298], "2569": 540, "1055": 540, "sparse_coo": [540, 579, 1334, 1799, 1802, 1803, 1807, 1934, 1937], "split_siz": [543, 1810, 1878], "squeez": [549, 689, 691, 692, 693, 695, 1222, 1288, 1298, 1300, 1301, 1303, 1306, 1329, 1332, 1515, 1719, 1803, 1816, 1817, 1821, 1863, 1864, 1878, 1893, 1918, 1920, 1927, 1938, 1958], "pad_mod": [552, 1818, 1878], "typedstorag": [553, 1876, 1916, 1936], "untypedstorag": [553, 609, 1876, 1916, 1936], "untyped_storag": 553, "compute_uv": [563, 1264, 1265, 1822, 1878], "axis0": [564, 1824, 1878], "axis1": [564, 1824, 1878], "dim0": [565, 588, 589, 1825, 1842, 1878], "indices_or_sect": [574, 1072, 1164, 1837, 1869], "5044": 576, "0005": [576, 1701, 1707], "3310": 576, "0584": [576, 1822], "cuda0": [576, 1903, 1909, 1940], "masked_grad": [577, 1878], "sparse_mask": [577, 1878, 1920], "mkldnn": [578, 1210, 1876, 1920], "sparsedim": 579, "blocksiz": [579, 580, 581, 1804, 1805, 1806, 1878, 1934], "sparse_csc": [579, 583, 1802, 1806, 1808, 1934], "sparse_bsr": [579, 581, 1805, 1806, 1934], "sparse_bsc": [579, 580, 1804, 1806, 1934], "bsr": [579, 581, 1805, 1806, 1941], "bsc": [579, 580, 1804, 1806, 1941], "csc": [579, 583, 1806, 1808, 1941], "minu": [579, 580, 581, 583, 584, 1935], "crow_indic": [579, 581, 584, 1797, 1799, 1800, 1802, 1805, 1806, 1809, 1878, 1920, 1934, 1941], "col_indic": [579, 581, 584, 1799, 1800, 1802, 1805, 1806, 1809, 1878, 1920, 1934, 1941], "sparsecsr": [579, 1842, 1934], "row_indic": [580, 583, 1804, 1808, 1878, 1920, 1934, 1941], "ccol_indic": [580, 583, 1804, 1808, 1878, 1920, 1934, 1941], "_nnz": [582, 583, 584, 1920], "012766935862600803": 585, "5415473580360413": 585, "08909505605697632": 585, "7729271650314331": 585, "unitriangular": [590, 1263, 1845, 1878], "tril": [592, 1583, 1878, 1920], "triu": [594, 1626, 1845, 1878, 1918, 1920], "trunc": [598, 673, 674, 683, 1069, 1112, 1119, 1122, 1750, 1878, 1893, 1920, 1934, 1958], "sizedim": 603, "return_invers": [605, 606, 1854, 1855, 1878], "return_count": [605, 606, 1854, 1855, 1878], "unsqueez": [608, 1094, 1221, 1261, 1377, 1453, 1626, 1839, 1878, 1905, 1920, 1927, 1934, 1938, 1939, 1958], "subspac": [613, 1264, 1440, 1711, 1822, 1823], "span": [613, 1035, 1036, 1370, 1822, 1924, 1930], "foral": 613, "proportion": [613, 781, 1486, 1602], "met": [613, 1240, 1247, 1248, 1259, 1273, 1481], "9482": [613, 1178], "0310": 613, "4999": 613, "5316": 613, "1520": 613, "7472": 613, "5617": 613, "8649": 613, "4724": [613, 1911], "0334": 613, "2976": 613, "8499": 613, "2109": 613, "9913": 613, "9607": 613, "6123": 613, "1064483442": 613, "1124191867": 613, "1069546515": 613, "1089989247": 613, "1105482831": 613, "1061112040": 613, "1057999968": 613, "1084397505": 613, "1071760287": 613, "1123489973": 613, "1097310419": 613, "1084649136": 613, "1101533110": 613, "1073668768": 613, "1082790149": 613, "1088634448": 613, "1000000000": 613, "0047": 613, "0310j": 613, "5316j": 613, "7472j": 613, "8649j": 613, "0334j": 613, "8499j": 613, "9913j": 613, "6123j": 613, "202": 613, "154": [613, 1917], "59": [613, 1847, 1849], "182": 613, "243": [613, 1198, 1822], "253": 613, "188": 613, "185": [613, 1963], "252": [613, 1917], "191": 613, "63": [613, 1917, 1925], "240": 613, "227": 613, "165": 613, "190": 613, "128": [613, 716, 724, 725, 752, 760, 790, 815, 816, 1355, 1369, 1396, 1421, 1443, 1482, 1483, 1515, 1583, 1894, 1895, 1925, 1927, 1928, 1930, 1934, 1937, 1940, 1961], "146": 613, "106": 613, "205": 613, "112": [613, 1963], "206": 613, "189": 613, "95": [613, 1699, 1702, 1703], "147": 613, "89": [613, 1729, 1957], "43": 613, "246": [613, 1963], "87": 613, "235": 613, "226": 613, "254": [613, 1917], "111": [613, 1673, 1918], "117": 613, "177": 613, "28": [613, 742, 1057, 1843, 1918, 1950, 1957], "xlogi": [618, 1878, 1920, 1935], "aot": [676, 950, 1886, 1945, 1953, 1954, 1963], "inductor": [676, 948, 1886, 1920, 1945, 1948, 1949, 1951, 1953, 1955, 1957, 1960, 1961, 1963], "aot_graph": [676, 1886], "aot_joint_graph": [676, 1886], "ddp_graph": [676, 1886], "graph_cod": [676, 1886], "graph_break": [676, 1886, 1948, 1953, 1954, 1961], "graph_siz": 676, "trace_sourc": 676, "trace_cal": 676, "output_cod": [676, 1886, 1950, 1955, 1963], "perf_hint": [676, 948], "onnx_diagnost": 676, "toggl": [676, 1903], "artifact": [676, 1886, 1910, 1922, 1961, 1963], "torch_log": [676, 948, 1886, 1951, 1963], "supress": 676, "silenc": 676, "lowest": [676, 938, 1328, 1631, 1632, 1640, 1641, 1732, 1733, 1905, 1941], "notset": 676, "torchinductor": [676, 1886, 1945, 1950, 1951, 1953, 1955], "joint": [676, 1886], "ddpoptim": [676, 1886], "hint": [676, 975, 1009, 1202, 1440, 1477, 1478, 1479, 1480, 1481, 1877, 1879, 1880, 1903, 1905, 1930, 1951, 1956], "unregist": [676, 1886, 1890, 1918], "cosin": [679, 680, 963, 964, 1368, 1369, 1515, 1695, 1696, 1703, 1781, 1921, 1953], "3348": 679, "5889": 679, "2005": [679, 1864, 1963], "1584": 679, "2294": [679, 1300], "2004": 679, "3690": 679, "7298": [679, 1740], "hyperbol": [680, 878, 881, 964, 1474, 1790, 1835], "uniform_": [680, 881, 918, 1876, 1878, 1893, 1898, 1905, 1935, 1942], "3192": 680, "9915": 680, "9674": 680, "7151": 680, "7791": 680, "3120": [680, 961], "2979": 680, "1341": 680, "_i": [681, 682, 683, 684, 685, 916, 918, 921, 924, 928, 943, 1069, 1119, 1224, 1226, 1323, 1482, 1714, 1718, 1737, 1773, 1819, 1871, 1935], "0202": 681, "0985": 681, "3506": [681, 1290], "6056": 681, "19": [681, 742, 941, 1431, 1877, 1918, 1934, 1957], "3944": 681, "9732": 681, "3497": 681, "6245": [681, 1232], "4022": [681, 1056, 1822], "3743": 681, "7724": 681, "5811": 681, "8017": 681, "7695": 681, "3930": 681, "3672": [681, 974, 1233], "1450": [681, 1803], "6971": 681, "0736": [681, 1911], "0994": 681, "3216": 681, "7845": 681, "1610": 681, "1868": 681, "4090": 681, "9902": [681, 974, 1233], "3667": [681, 961], "3925": 681, "6147": 681, "sum_": [682, 1198, 1252, 1269, 1347, 1348, 1349, 1362, 1363, 1364, 1370, 1402, 1403, 1422, 1437, 1441, 1443, 1816, 1817, 1818, 1838, 1843, 1863, 1864, 1865, 1935], "mathbin": [682, 685, 686, 916, 928, 1800], "doubletensor": [682, 683, 684, 685, 686, 916, 1763, 1937, 1940], "tensorfloat32": [682, 685, 916, 928, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1421, 1508, 1509, 1510, 1511, 1512, 1513, 1550, 1765, 1903, 1914], "rocm": [682, 685, 916, 928, 1295, 1305, 1362, 1363, 1364, 1365, 1366, 1367, 1387, 1405, 1421, 1876], "6311": 682, "0503": 682, "9768": [682, 1911], "0362": 682, "1653": 682, "8185": 682, "4255": [682, 1323], "6760": 682, "9453": 682, "5743": 682, "8202": 682, "3691": 682, "0943": 682, "1109": [682, 1388, 1786], "4730": [682, 1838], "histor": [683, 1031, 1374, 1902, 1911, 1916], "t1": [683, 684, 876, 1154, 1614, 1879, 1930, 1931], "2312": [683, 1803], "6496": 683, "1312": 683, "0428": 683, "4292": 683, "1030": 683, "5369": 683, "9829": 683, "0430": 683, "8635": 684, "6391": 684, "6174": 684, "7617": 684, "5879": 684, "7388": 684, "8353": 684, "6249": 684, "6511": 684, "8716": 685, "4671": 685, "3746": 685, "7573": 685, "9555": 685, "8681": 685, "3768": 686, "5565": 686, "otim": [687, 1221, 1385, 1532], "conj": [688, 960, 1090, 1091, 1093, 1095, 1102, 1104, 1108, 1109, 1111, 1230, 1231, 1237, 1239, 1258, 1745, 1746, 1878, 1905, 1908, 1920, 1940, 1958], "mh": [688, 939, 1237, 1822, 1878, 1920, 1938, 1940], "lvert": [690, 1190, 1482, 1569, 1941], "rvert": [690, 1190, 1941], "leq": [690, 917, 918, 961, 1092, 1094, 1190, 1221, 1225, 1240, 1246, 1357, 1376, 1437, 1439, 1441, 1517, 1568, 1571, 1776, 1818, 1898, 1935], "elementwis": [690, 961, 990, 1017, 1018, 1117, 1119, 1338, 1397, 1398, 1399, 1471, 1592, 1862, 1880, 1895, 1908, 1935], "07": [690, 815, 816, 817, 818, 821, 939, 940, 1077, 1238, 1241, 1246, 1258, 1259, 1265, 1288, 1291, 1621, 1674, 1681, 1780, 1785, 1822, 1918], "09": [690, 1681, 1693, 1905, 1941], "8177": 691, "4878": 691, "2491": 691, "9130": 691, "7158": 691, "1775": 691, "0992": 691, "4817": 691, "0053": 691, "0164": 691, "3738": 691, "0507": [691, 1918], "9700": 691, "1106": 691, "0318": 691, "0816": [691, 1290], "6451": 692, "4866": 692, "2987": 692, "3312": 692, "5744": 692, "2980": [692, 1895], "8397": 692, "2713": 692, "9128": 692, "9214": 692, "7268": 692, "2995": 692, "9023": [692, 1231], "4853": 692, "9075": 692, "6165": 692, "180": [694, 1058, 1729], "14159": [694, 1836], "135": 694, "45": [694, 1353, 1354, 1398, 1399, 1473, 1654, 1918], "ao": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 1925, 1926, 1927], "batch_norm": [696, 697, 1210, 1878, 1920], "fuse": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 788, 789, 798, 800, 801, 802, 810, 843, 855, 856, 948, 1214, 1215, 1583, 1678, 1679, 1888, 1893, 1918, 1921, 1925, 1926, 1927, 1928, 1953, 1955, 1962], "3d": [697, 700, 703, 731, 736, 739, 763, 765, 770, 775, 1302, 1341, 1345, 1349, 1352, 1354, 1364, 1367, 1374, 1375, 1381, 1383, 1397, 1399, 1429, 1440, 1486, 1494, 1497, 1498, 1502, 1510, 1513, 1521, 1527, 1529, 1544, 1559, 1571, 1602, 1895, 1914, 1925, 1934, 1939], "bn": [698, 699, 700, 701, 702, 703, 810, 856, 1074, 1210, 1916, 1921, 1925, 1926], "qat": [708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 726, 727, 728, 729, 788, 789, 842, 1925, 1926, 1927], "in_channel": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 1210, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415], "out_channel": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 1210, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415], "kernel_s": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 764, 765, 778, 779, 1201, 1210, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1382, 1383, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1485, 1500, 1501, 1502, 1511, 1512, 1513, 1527, 1528, 1529, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1601, 1726, 1727, 1878, 1939, 1958], "dilat": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 778, 779, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1410, 1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1485, 1508, 1509, 1510, 1511, 1512, 1513, 1527, 1557, 1558, 1559, 1601, 1726, 1727, 1878, 1918, 1958], "padding_mod": [708, 709, 710, 711, 712, 713, 714, 715, 721, 722, 723, 726, 727, 734, 735, 736, 737, 738, 739, 768, 769, 770, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1533, 1878, 1958], "ep": [708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 745, 747, 748, 749, 750, 791, 815, 816, 817, 818, 821, 822, 904, 905, 1210, 1286, 1338, 1352, 1353, 1354, 1369, 1388, 1389, 1397, 1398, 1399, 1406, 1407, 1408, 1409, 1416, 1417, 1418, 1443, 1448, 1473, 1477, 1479, 1481, 1482, 1503, 1515, 1530, 1534, 1535, 1543, 1547, 1569, 1572, 1576, 1599, 1622, 1655, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1692, 1705, 1725, 1878, 1905, 1908, 1935, 1958, 1965], "momentum": [708, 709, 710, 711, 712, 713, 719, 720, 732, 733, 747, 748, 749, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1473, 1503, 1543, 1682, 1689, 1691, 1697, 1703, 1705, 1878, 1911, 1913, 1921, 1958], "freeze_bn": [708, 709, 710, 711, 712, 713], "qconfig": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 784, 785, 787, 790, 791, 792, 793, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 857, 858, 1944], "batchnorm1d": [708, 711, 1407, 1473, 1503, 1916, 1927], "fakequant": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 729, 798, 858], "weight_fake_qu": [708, 709, 710, 711, 712, 713, 714, 715, 726, 727], "quant": [708, 709, 710, 711, 712, 713, 714, 715, 716, 726, 727, 728, 786, 788, 789, 834, 857, 858, 1088, 1089, 1925, 1926], "batchnorm3d": [710, 713, 715, 720, 1409, 1473, 1503, 1927], "num_featur": [719, 720, 732, 733, 747, 748, 749, 1201, 1352, 1353, 1354, 1397, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1434, 1473, 1535, 1911], "qint8": [724, 725, 752, 757, 760, 761, 768, 769, 770, 777, 788, 790, 795, 816, 837, 854, 855, 857, 858, 1670, 1723, 1724, 1925, 1927, 1928, 1936, 1940, 1941], "highlight": [726, 727, 1880], "from_float": [728, 734, 735, 736, 741, 742, 752, 760, 793, 813, 819, 822, 834, 1925], "qparams_dict": [728, 734, 735, 736, 760], "hidden_s": [730, 756, 757, 761, 1386, 1387, 1404, 1405, 1449, 1450, 1451, 1878], "num_lay": [730, 756, 1386, 1404, 1449, 1450, 1478, 1480, 1878, 1911], "batch_first": [730, 731, 756, 1386, 1404, 1440, 1449, 1450, 1477, 1479, 1481, 1648, 1650, 1651, 1653, 1878, 1907], "bidirect": [730, 756, 1386, 1404, 1449, 1450, 1878], "_lstmlayer": 730, "nnqa": 730, "h0": [730, 756, 758, 1386, 1404, 1449], "c0": [730, 758, 1404, 1963], "hn": [730, 756, 758, 1386, 1387, 1404, 1449], "cn": [730, 758, 1201, 1404], "weight_ih": [730, 1387, 1405, 1451], "weight_hh": [730, 1387, 1405, 1451], "embed_dim": [731, 1440], "num_head": [731, 1440, 1878], "add_bias_kv": [731, 1440], "add_zero_attn": [731, 1440, 1878], "kdim": [731, 1440], "vdim": [731, 1440], "dequant": [731, 784, 786, 788, 789, 795, 797, 857, 1878, 1920, 1926, 1928, 1941, 1943], "mha": [731, 1440], "conver": 731, "key_padding_mask": [731, 1440, 1878], "need_weight": [731, 1440, 1878], "attn_mask": [731, 1440, 1583, 1878], "average_attn_weight": [731, 1440, 1878], "is_caus": [731, 1440, 1480, 1481, 1583, 1878], "attn_output_weight": [731, 1440], "unmask": [731, 1477], "causal": [731, 1440, 1477, 1478, 1479, 1480, 1481, 1583], "attn_weight": [731, 1440, 1583], "attn_output": [731, 1440], "quint8": [734, 735, 736, 737, 738, 739, 741, 742, 752, 768, 769, 770, 777, 788, 790, 795, 815, 816, 817, 818, 821, 823, 855, 857, 1670, 1723, 1724, 1725, 1726, 1727, 1925, 1927, 1928, 1936, 1940, 1941], "learnabl": [734, 735, 736, 737, 738, 739, 741, 742, 752, 756, 760, 1352, 1353, 1354, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1386, 1387, 1389, 1397, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1442, 1449, 1451, 1473, 1525, 1577, 1911], "q_input": [734, 735, 736, 737, 738, 739, 768, 769, 770], "quantize_per_tensor": [734, 735, 736, 737, 738, 739, 752, 753, 754, 768, 769, 770, 1725, 1726, 1727, 1878, 1920, 1925], "unequ": [735, 736, 737, 738, 739, 1363, 1364, 1366, 1367], "50": [735, 737, 738, 739, 768, 820, 1256, 1306, 1348, 1349, 1357, 1362, 1363, 1364, 1366, 1367, 1382, 1383, 1402, 1403, 1427, 1428, 1429, 1484, 1510, 1511, 1513, 1517, 1528, 1529, 1690, 1833, 1895], "56": [736, 1934, 1957], "output_pad": [737, 738, 739, 1365, 1366, 1367, 1413, 1414, 1415, 1511, 1512, 1513, 1878, 1958], "qnnpack": [737, 738, 752, 760, 851, 852, 855, 857, 858, 1925, 1927], "convtranspose2d": [737, 1414, 1512, 1857, 1927], "nnq": [737, 738, 739, 784, 785, 786, 860, 1925], "downsampl": [737, 738, 739, 1366, 1486, 1498, 1533, 1544], "upsampl": [737, 738, 739, 775, 782, 783, 815, 1366, 1487, 1488, 1498, 1533, 1544, 1603, 1604], "fbgemm": [738, 739, 752, 760, 829, 851, 852, 855, 857, 858, 1925, 1926, 1953, 1954], "cubic": [739, 1383, 1529, 1533], "num_embed": [741, 742, 1377, 1378, 1525], "embedding_dim": [741, 742, 1377, 1378, 1406, 1524, 1525], "padding_idx": [741, 1377, 1378, 1524, 1525, 1878, 1958], "scale_grad_by_freq": [741, 742, 1377, 1378, 1524, 1525, 1878, 1958], "_weight": [741, 742, 1377, 1378, 1682, 1962], "overwritten": [741, 742, 752, 760, 793, 837, 857, 1900, 1905, 1941, 1948], "_embed": [741, 742], "_dim": [741, 742, 1377], "include_last_offset": [742, 1378, 1525, 1878], "embedding_bag": [742, 1878, 1920], "floatfunct": [743, 1925], "activation_post_process": [743, 795, 1925], "add_relu": [743, 744, 753, 1888, 1920, 1943], "add_scalar": [743, 744, 753, 1920, 1939, 1943], "mul_scalar": [743, 744, 753, 1920, 1943], "collector": 744, "f_add": 744, "num_channel": [745, 1389, 1894], "normalized_shap": [750, 1406, 1547, 1878, 1895, 1958], "elementwise_affin": [750, 1406], "negative_slop": [751, 776, 1420, 1548, 1549, 1878, 1898, 1958], "slope": [751, 776, 1420, 1465, 1898], "bias_": [752, 760], "_featur": [752, 760, 777, 1342, 1355, 1419, 1421, 1504, 1550], "from_refer": [752, 760], "ref_qlinear": [752, 760], "output_scal": [752, 755, 1725, 1878], "output_zero_point": [752, 755, 1725, 1878], "q_add": 753, "qint32": [753, 754, 1670, 1723, 1724, 1925, 1928, 1936, 1940, 1941], "x_0": [754, 1843], "gate": [756, 757, 1385, 1386, 1387, 1404, 1463, 1532, 1586], "r_t": [756, 1386, 1688], "w_": [756, 1340, 1341, 1344, 1345, 1348, 1349, 1351, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1370, 1382, 1383, 1386, 1387, 1403, 1404, 1405, 1428, 1429, 1431, 1432, 1441, 1446, 1447, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1486, 1487, 1488, 1489, 1490, 1491, 1529, 1533], "x_t": [756, 890, 892, 1352, 1353, 1354, 1386, 1397, 1398, 1399, 1404, 1449, 1473, 1676], "b_": [756, 1386, 1387, 1404, 1405, 1422, 1449, 1451, 1838, 1934], "hr": [756, 1386, 1387, 1404, 1908], "h_": [756, 1340, 1341, 1344, 1345, 1348, 1349, 1355, 1360, 1361, 1363, 1364, 1366, 1367, 1382, 1383, 1386, 1387, 1403, 1404, 1421, 1428, 1429, 1430, 1431, 1432, 1446, 1447, 1449, 1451, 1456, 1457, 1459, 1460, 1486, 1487, 1488, 1490, 1491, 1504, 1529, 1533], "z_t": [756, 1386], "iz": [756, 1386, 1387], "hz": [756, 986, 1386, 1387, 1939], "n_t": [756, 1386], "h_t": [756, 1386, 1404, 1449], "hadamard": [756, 1386, 1387, 1404, 1405], "multilay": [756, 1386, 1404], "_t": [756, 1386, 1404, 1689, 1691, 1905, 1921], "b_ih": [756, 1386, 1387, 1404, 1405, 1449, 1451, 1878], "b_hh": [756, 1386, 1387, 1404, 1405, 1449, 1451, 1878], "h_0": [756, 1386, 1404, 1405, 1449], "seq_len": [756, 1386, 1404, 1440, 1449], "pack_padded_sequ": [756, 1386, 1404, 1449, 1647, 1649, 1650, 1907], "num_direct": [756, 1386, 1404, 1449], "h_n": [756, 1386, 1404, 1449], "_size": [756, 1339, 1340, 1341, 1343, 1344, 1345, 1347, 1348, 1349, 1362, 1363, 1364, 1365, 1366, 1367, 1381, 1382, 1383, 1386, 1387, 1402, 1403, 1404, 1405, 1427, 1428, 1429, 1430, 1431, 1432, 1449, 1451, 1485, 1529], "_layer": [756, 1386, 1404, 1449], "_direct": 756, "output1": [756, 1342, 1899, 1918], "output2": [756, 1342], "weight_ih_l": [756, 1386, 1404, 1449], "w_ir": [756, 1386], "w_iz": [756, 1386], "w_in": [756, 1386], "weight_hh_l": [756, 1386, 1404, 1449], "w_hr": [756, 1386], "w_hz": [756, 1386], "w_hn": [756, 1386], "bias_ih_l": [756, 1386, 1404, 1449], "b_ir": [756, 1386], "b_iz": [756, 1386], "b_in": [756, 1386], "bias_hh_l": [756, 1386, 1404, 1449], "b_hr": [756, 1386], "b_hz": [756, 1386], "b_hn": [756, 1386], "mathcal": [756, 1355, 1362, 1363, 1364, 1365, 1366, 1367, 1377, 1378, 1386, 1387, 1404, 1405, 1419, 1421, 1449, 1451, 1452, 1473, 1734, 1898, 1908], "subtli": [756, 1386, 1691], "gru": [757, 1387, 1878, 1903, 1920, 1925, 1927], "cell": [757, 759, 761, 1386, 1387, 1404, 1405, 1449, 1451], "hx": [757, 759, 761, 1387, 1405, 1451, 1878], "cx": [759, 1405, 1878], "nonlinear": [761, 1350, 1368, 1394, 1449, 1451, 1461, 1876, 1898, 1934], "elman": [761, 1449, 1451], "adaptiveavgpool2d": [762, 1493, 1857, 1927], "adaptiveavgpool3d": [763, 1494, 1857, 1927], "ceil_mod": [764, 765, 778, 779, 1347, 1348, 1349, 1402, 1403, 1427, 1428, 1429, 1500, 1501, 1502, 1554, 1555, 1557, 1558, 1559, 1726, 1727, 1878, 1958], "count_include_pad": [764, 765, 1347, 1348, 1349, 1500, 1501, 1502, 1878, 1958], "divisor_overrid": [764, 765, 1348, 1349, 1501, 1502, 1878, 1958], "kh": [764, 765, 769, 770, 1348, 1349, 1382, 1383, 1428, 1429, 1501, 1502, 1509, 1510, 1512, 1513, 1528, 1529, 1558, 1559], "kw": [764, 765, 769, 770, 1348, 1349, 1382, 1383, 1428, 1429, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1528, 1529, 1557, 1558, 1559], "sh": [764, 765, 769, 770, 1501, 1502, 1509, 1510, 1512, 1513, 1558, 1559, 1963], "sw": [764, 765, 768, 769, 770, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559], "avgpool2d": [764, 1501, 1927], "_channel": [764, 765, 768, 769, 770, 1362, 1363, 1364, 1365, 1366, 1367, 1389, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559, 1930], "ih": [764, 765, 769, 770, 1449, 1451, 1501, 1502, 1509, 1510, 1512, 1513, 1558, 1559], "iw": [764, 765, 768, 769, 770, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513, 1557, 1558, 1559], "padh": [764, 765, 769, 770, 1501, 1502, 1509, 1510, 1512, 1513], "padw": [764, 765, 768, 769, 770, 1500, 1501, 1502, 1508, 1509, 1510, 1511, 1512, 1513], "kd": [765, 770, 1349, 1429], "sd": [765, 770], "padd": [765, 770], "formul": [766, 1356, 1376, 1390, 1424, 1470, 1471, 1552, 1569, 1583, 1908, 1934], "min_": [767, 1236, 1237, 1246, 1264, 1822], "max_": [767, 1427, 1428, 1429, 1622, 1655], "convolv": [768, 769, 770, 1362, 1363, 1364, 1365, 1366, 1367, 1410, 1411, 1412, 1413, 1414, 1415, 1508, 1509, 1510, 1511, 1512, 1513], "dw": [768, 769, 770, 1508, 1509, 1510, 1511, 1512, 1513], "qf": [768, 769, 770], "dtype_input": [768, 769, 770], "dtype_filt": [768, 769, 770], "q_filter": [768, 769, 770], "dh": [769, 770, 1509, 1510, 1512, 1513], "dd": 770, "scale_factor": [775, 781, 782, 783, 1486, 1487, 1488, 1544, 1583, 1602, 1603, 1604, 1878, 1958], "align_corn": [775, 781, 782, 1486, 1487, 1498, 1533, 1544, 1602, 1603, 1878, 1958], "height": [775, 781, 1348, 1349, 1363, 1364, 1366, 1367, 1403, 1428, 1429, 1441, 1468, 1486, 1544, 1602, 1894], "spatial": [775, 781, 782, 783, 936, 1094, 1353, 1381, 1406, 1446, 1447, 1468, 1485, 1486, 1487, 1488, 1498, 1533, 1544, 1573, 1574, 1575, 1602, 1603, 1604], "pixel": [775, 781, 783, 1363, 1370, 1373, 1374, 1375, 1379, 1441, 1446, 1447, 1486, 1498, 1533, 1544, 1602, 1604], "corner": [775, 781, 927, 1486, 1498, 1533, 1544, 1602], "edg": [775, 781, 1154, 1162, 1163, 1544, 1602, 1885, 1906, 1931, 1959], "leakyrelu": [776, 1435, 1548, 1911, 1927], "_slope": [776, 1420, 1548, 1898], "xa": [777, 1250, 1261, 1262, 1263, 1421, 1550], "return_indic": [778, 779, 1343, 1344, 1345, 1382, 1383, 1427, 1428, 1429, 1430, 1431, 1432, 1495, 1496, 1497, 1528, 1529, 1557, 1558, 1559, 1878], "maxpool1d": [778, 1430, 1557, 1560, 1927], "maxpool2d": [779, 1431, 1435, 1558, 1561, 1918, 1927], "linearli": [781, 1138, 1259, 1486, 1602, 1700, 1721, 1907, 1921, 1928], "neighbour": [783, 1422, 1544, 1604], "stub": [784, 785, 1922], "calibr": [784, 785, 793, 834, 835, 853, 855, 857, 1899, 1925, 1926, 1928, 1944], "quantstub": [786, 1925], "dequantstub": [786, 1925], "quantwrapp": 787, "backend_config": [788, 789, 790, 791, 792, 813, 814, 855, 856, 857, 858, 1944], "acycl": [788, 1900], "backendpatternconfig": [788, 857], "blob": [788, 1131, 1908, 1910, 1918, 1939, 1962], "dtypeconfig": [788, 789, 791, 857], "observationtyp": [788, 789, 857, 1927], "weighted_int8_dtype_config": [788, 857], "input_dtyp": [788, 790, 857, 1927], "output_dtyp": [788, 790, 857, 1927, 1958], "weight_dtyp": [788, 790, 857, 1927], "bias_dtyp": [788, 790, 1927], "fuse_conv2d_relu": 788, "is_qat": [788, 789], "convrelu2d": [788, 1927], "linear_config": 788, "set_observation_typ": [788, 789, 857], "output_use_different_observer_as_input": [788, 789, 792, 857, 1927], "add_dtype_config": [788, 789, 857], "set_root_modul": [788, 789], "set_qat_modul": [788, 789], "set_reference_quantized_modul": [788, 789], "conv_relu_config": 788, "set_fused_modul": [788, 789], "set_fuser_method": [788, 789], "fused_conv_relu_config": 788, "my_backend": [788, 1949], "set_backend_pattern_config": [788, 857], "from_dict": [788, 789, 790, 811, 812, 813, 850], "backend_config_dict": [788, 1925], "set_nam": 788, "to_dict": [788, 789, 790, 811, 812, 813, 850], "backendconfig": [789, 814, 855, 857, 1928], "dtype_config": [789, 1927], "backend_pattern_config_dict": 789, "observation_typ": [789, 1927], "qat_modul": [789, 1927], "reference_quantized_modul": 789, "fused_modul": [789, 1927], "fuser_method": [789, 810, 1927], "pattern_complex_format": 789, "set_dtype_config": 789, "fuser": [789, 1214, 1877], "fuse_linear_relu": 789, "linearrelu": [789, 1927], "8bea7180a8ba3c279f2c9b050f2a69a6": 789, "understood": [789, 935], "output_share_observer_with_input": [789, 792, 1927], "renam": [789, 1858, 1860, 1878, 1893, 1894, 1920, 1957], "quantdequantstub": 789, "set_pattern": 789, "is_dynam": [790, 822, 1927], "quant1": 790, "dequant1": 790, "fp32_linear": 790, "quant2": 790, "dequant2": 790, "bracket": [790, 1931], "dtype_config1": 790, "dtype_config2": 790, "dtypewithconstraint": [790, 1927], "quant_min_lower_bound": [790, 791, 1927], "quant_max_upper_bound": [790, 791, 1927], "255": [790, 798, 1088, 1089, 1127, 1533, 1544, 1602, 1925, 1927, 1939], "input_dtype_with_constraint": 790, "scale_min_lower_bound": [790, 791, 1927], "scale_max_upper_bound": [790, 791, 1927], "dtype_config_dict": 790, "bias_typ": [790, 857], "scale_exact_match": [791, 1927], "zero_point_exact_match": [791, 1927], "quant_min": [791, 795, 798, 815, 816, 817, 818, 821, 822, 1088, 1089, 1878, 1925], "quant_max": [791, 795, 798, 815, 816, 817, 818, 821, 822, 1088, 1089, 1878, 1925], "fixedqparamsobserv": 791, "fixedqparamsfakequant": 791, "input_output_not_observ": [792, 1927], "maxpool": [792, 1382, 1383, 1528, 1529, 1918], "remove_qconfig": 793, "is_refer": 793, "convert_custom_config_dict": [793, 811, 1925], "from_observ": [793, 811, 1925], "observed_to_quantized_custom_module_class": [793, 811, 1925], "observedcustommodul": [793, 811, 813, 834, 1925], "quantizedcustommodul": [793, 811], "calib_data": 794, "fake_quant": [795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 858, 1088, 1089, 1944], "movingaverageminmaxobserv": [795, 798, 818], "observer_kwarg": [795, 798], "x_out": [795, 798], "fake_quant_en": 795, "observer_en": 795, "calculate_qparam": [796, 815, 816, 820], "qscheme": [798, 815, 816, 817, 818, 821, 822, 823, 1878, 1920, 1925, 1928, 1941], "fake_qu": [799, 803, 804, 805, 1925], "default_fake_qu": 800, "default_per_channel_weight_fake_qu": 801, "default_weight_fake_qu": 802, "histogram": [803, 815, 827, 1161, 1163, 1878, 1920, 1939], "memoryless": [804, 805], "averaging_const": [804, 805, 817, 818, 1878], "modules_to_fus": 810, "fuser_func": 810, "fuse_known_modul": 810, "fuse_custom_config_dict": [810, 812], "convmodul": 810, "bnmodul": 810, "convbnmodul": 810, "additional_fuser_method_map": 810, "fuse_conv_bn": [810, 1927], "conv1": [810, 1212, 1434, 1462, 1877, 1925, 1939], "bn1": 810, "relu1": [810, 1462, 1605], "fused_m": 810, "custom_config": [811, 812, 813, 814], "convert_fx": [811, 1925, 1944], "convert_custom_config": [811, 855, 1925], "set_observed_to_quantized_map": 811, "set_preserved_attribut": [811, 812, 813], "attr1": [811, 812, 813, 1918], "attr2": [811, 812, 813, 1918], "floatcustommodul": [811, 813], "weight_onli": [811, 855, 1925], "preserved_attribut": [811, 812, 813], "observed_class": [811, 813], "quantized_class": 811, "quant_typ": [811, 813], "quanttyp": [811, 813], "fuse_fx": [812, 1925], "fuse_custom_config": [812, 856], "convertcustomconfig": [812, 855], "prepare_fx": [813, 836, 855, 858, 1925, 1944], "prepare_qat_fx": [813, 855, 1925], "prepare_custom_config": [813, 814, 857, 858, 1925], "set_standalone_module_nam": 813, "module1": [813, 850, 1903], "qconfig_map": [813, 814, 850, 851, 852, 855, 857, 858, 1925], "example_input": [813, 814, 857, 858, 1212, 1216, 1925, 1944, 1949, 1950, 1952, 1956], "child_prepare_custom_config": 813, "set_standalone_module_class": 813, "mystandalonemodul": 813, "set_float_to_observed_map": 813, "set_non_traceable_module_nam": 813, "module2": [813, 850, 1903], "module3": [813, 1903], "set_non_traceable_module_class": 813, "nontraceablemodule1": 813, "nontraceablemodule2": 813, "set_input_quantized_index": 813, "set_output_quantized_index": 813, "prepare_custom_config_dict": [813, 834, 836, 1925], "standalone_module_nam": 813, "standalone_module_class": 813, "module_class": 813, "float_to_observed_custom_module_class": [813, 834, 1925], "non_traceable_module_nam": 813, "non_traceable_module_class": 813, "input_quantized_idx": 813, "output_quantized_idx": 813, "float_class": 813, "qconfigmap": [814, 851, 852, 855, 857, 1925, 1928], "preparecustomconfig": [814, 857], "2048": [815, 1477, 1479, 1481, 1903], "upsample_r": 815, "per_tensor_affin": [815, 816, 817, 1724, 1725, 1726, 1727, 1925, 1928], "reduce_rang": [815, 816, 817, 818, 821, 823, 1878, 1925, 1926], "factory_kwarg": [815, 816, 821], "1920928955078125e": [815, 816, 817, 818, 821], "vari": [815, 1465, 1647, 1779, 1890, 1913, 1914, 1921, 1925, 1926, 1934, 1951, 1952, 1953, 1963], "finfo": [815, 816, 817, 818, 821, 1255, 1258, 1338, 1876, 1941], "minmaxobserv": [815, 817, 821, 837, 857, 858, 1928], "x_": [816, 817, 966, 1084, 1274, 1275, 1277, 1280, 1288, 1351, 1370, 1424, 1441, 1467, 1469, 1589, 1799, 1801, 1843, 1900, 1928, 1935], "q_": [816, 1928], "x_orig": 816, "reset_min_max_v": [816, 821], "ch_axi": [818, 821, 1878], "per_channel_affin": [818, 821, 1723, 1925, 1928], "custom_op_nam": [819, 822], "with_arg": [820, 837, 857, 858], "_callable_arg": 820, "_with_arg": 820, "foo_build": 820, "foo_instance1": 820, "foo_instance2": 820, "with_callable_arg": 820, "_with_callable_arg": 820, "cur_tim": 820, "get_time_func": 820, "dan": 820, "creation_tim": 820, "compute_dtyp": 822, "ptq": [827, 1925, 1926, 1928], "obs_dict": 833, "get_observer_state_dict": 833, "allow_list": [834, 1943], "observer_non_leaf_module_list": 834, "preemptiv": [834, 835, 1614], "custommodul": [834, 1925], "propagate_qconfig_": 836, "qconfig_dict": [836, 850], "my_qconfig": 837, "default_observ": 837, "default_qat_config": 843, "set_glob": [850, 855, 857, 1925], "set_object_typ": [850, 855, 857], "set_module_name_regex": 850, "regex": 850, "set_module_nam": [850, 855, 857], "set_module_name_object_type_ord": 850, "global_qconfig": 850, "qconfig1": 850, "qconfig2": 850, "qconfig3": 850, "object_typ": 850, "module_name_regex": 850, "module_name_object_type_ord": 850, "conv0": 850, "x86": [851, 852, 1766, 1925, 1927], "run_arg": [853, 859], "counterpart": [853, 860, 1270, 1614, 1880, 1888, 1942, 1943, 1951], "qconfig_spec": 854, "quantize_fx": [855, 856, 857, 858, 1925, 1944], "graph_modul": [855, 1962], "_remove_qconfig": 855, "qconfig_from_prepar": 855, "prepared_model": [855, 857, 858], "xnnpack": [855, 1888, 1925], "get_default_backend_config": [855, 857, 858], "quantized_model": 855, "fusion_pattern": 856, "fusecustomconfig": 856, "_equalization_config": 857, "get_default_qconfig_map": [857, 1925], "float_model": [857, 858, 1943], "data_load": [857, 858, 1697, 1703, 1913], "get_default_qconfig": [857, 858, 1925], "linear_pattern_config": 857, "suer": 857, "sample_inference_data": 857, "get_default_qat_qconfig_map": [858, 1925], "load_weight": 858, "train_data": 858, "get_default_qat_qconfig": [858, 1925], "custom_module_class_map": 860, "lceil": [861, 937], "rceil": [861, 937], "adjac": [861, 927, 1373, 1374, 1375, 1379, 1737, 1934], "set_default_tensor_typ": [861, 917, 926, 1075, 1077, 1087, 1092, 1110, 1128, 1148, 1158, 1159, 1220, 1271, 1287, 1665, 1730, 1732, 1734, 1736, 1737, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1804, 1805, 1806, 1807, 1808, 1809, 1847, 1849, 1873], "get_default_dtyp": [861, 1271, 1287, 1670, 1737, 1936, 1937, 1965], "5000": [861, 876, 882, 883, 884, 919, 943, 1092, 1094, 1095, 1102, 1105, 1110, 1120, 1122, 1123, 1124, 1154, 1160, 1163, 1226, 1252, 1271, 1329, 1331, 1359, 1360, 1378, 1486, 1722, 1726, 1727, 1728, 1737, 1741, 1935, 1940], "maxim": [870, 1298, 1430, 1431, 1432, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1689, 1690, 1691, 1692, 1934, 1953, 1963], "3398": 870, "2663": [870, 1903], "2686": 870, "2450": 870, "7401": 870, "8805": 870, "3402": 870, "1936": 870, "4907": [870, 1288], "3948": [870, 961], "0691": 870, "3132": 870, "6092": 870, "5419": 870, "2993": [870, 1821], "3195": 870, "1139": 871, "2254": 871, "1381": [871, 1821], "3687": 871, "0100": [871, 1254, 1723], "1975": [871, 1895], "0102": 871, "4732": 871, "9240": 871, "1207": [871, 1323], "7506": 871, "0213": 871, "7809": 871, "2960": 871, "9384": 871, "1438": 871, "ascend": [872, 1094, 1237, 1239, 1268, 1322, 1757, 1795, 1854], "0785": 872, "5267": 872, "8521": 872, "4065": 872, "1598": 872, "0788": 872, "0745": 872, "2700": 872, "2208": 872, "0722": 872, "7064": 872, "2564": 872, "0669": 872, "2318": 872, "8229": 872, "9280": 872, "lexicograph": [873, 1660, 1880, 1934], "9039": 874, "6291": 874, "0795": [874, 1722, 1911], "1586": 874, "1939": 874, "4900": 874, "7503": 874, "9355": 874, "histori": [875, 876, 1140, 1681, 1836, 1887, 1895, 1905, 1907, 1931], "dlpack": [876, 1125, 1876], "frombuff": 876, "data_ptr": [876, 1893, 1936, 1938], "addbackward0": [876, 1911, 1916], "__array_interface__": 876, "5962": 877, "4985": 877, "4396": 877, "4525": [877, 1895], "6387": 877, "4552": 877, "sine": [878, 1778, 1788, 1790], "1606": 878, "4267": 878, "0899": 878, "0250": 878, "1599": 878, "1534": 878, "9435": 878, "8990": [878, 1069], "arctang": [879, 880], "2341": 879, "2539": 879, "6256": 879, "6448": 879, "2299": 879, "2487": 879, "5591": [879, 901], "5727": 879, "quadrant": 880, "9041": [880, 936], "0196": [880, 936], "3108": [880, 936], "4423": [880, 936], "9833": 880, "0811": 880, "9743": 880, "4151": 880, "tangent": [881, 891, 892, 1137, 1138, 1474, 1834, 1835], "9385": 881, "2968": 881, "8591": 881, "1871": 881, "7253": 881, "3060": 881, "2899": 881, "1893": 881, "needs_input_grad": [885, 1905], "setup_context": [886, 1906], "save_for_forward": [886, 1906], "grad_input": [887, 894, 896, 909, 1201, 1434, 1610, 1905, 1911], "underneath": 888, "generate_vmap_rul": [888, 1906], "out_dim": [888, 1142, 1868, 1878, 1894, 1906], "grad_tensor": [889, 903, 1878, 1903], "grad_vari": 889, "forward_ad": 890, "dual": [890, 891, 892, 1659, 1906], "make_du": [890, 892], "your_fn": 890, "unpack_du": [890, 891], "grad_aft": 890, "dual_level": [891, 892], "primal": [892, 1133, 1137, 1138, 1141], "x_npy": 893, "once_differenti": [893, 894, 895, 896, 1905], "g1": [894, 896, 1903, 1932], "g2": [894, 896, 1903, 1932], "oppos": [895, 1906], "weren": 895, "grad_out": [895, 1878, 1908, 1958], "gx": 895, "gy": 895, "gz": 895, "simplefunc": 896, "induc": [896, 1533, 1571, 1898, 1951], "outer_jacobian_strategi": 897, "disconnect": [897, 898, 899, 900, 901, 902], "said": [897, 898, 899, 900, 901, 902, 1887, 1914], "cliff": [897, 899, 903], "_debug_only_display_vmap_fallback_warn": [897, 903], "pow_reduc": [897, 898, 901], "2265": 897, "8221": 897, "9456": [897, 918], "2550": 897, "viewbackward": [897, 899], "pow_adder_reduc": [897, 898, 901], "func_output": [898, 900, 901, 902], "1448": 898, "0239": 898, "6456": 898, "4988": 898, "4310": 898, "sumbackward0": [898, 901], "3030": 898, "vhp": 898, "batched_grad": 899, "exp_reduc": [899, 900, 902], "4917": 899, "4352": 899, "4369": 899, "3799": 899, "exp_add": 899, "8052": 899, "3963": 899, "3090": 900, "6742": 900, "9114": 900, "2106": 900, "sumbackward1": [900, 902], "squeezebackward1": 900, "adder": [900, 902], "2399": 900, "5005": 900, "0689": 901, "2431": 901, "0989": 901, "4456": 901, "8053": [901, 1752], "7817": 902, "2458": 902, "7830": 902, "7782": 902, "4458": 902, "3962": 902, "3042": [902, 1258], "6354": 902, "1288": [902, 1781], "0652": 902, "5483": 902, "5035": 902, "2046": [902, 961], "1292": 902, "1432": 902, "3059": 902, "3225": 902, "6652": 902, "7753": 902, "0152": 902, "4225": 902, "3340": 902, "only_input": 903, "allow_unus": [903, 1878], "is_grads_batch": 903, "materialize_grad": 903, "require_grad": [903, 1880, 1900], "06": [904, 905, 1241, 1246, 1247, 1258, 1259, 1264, 1388, 1443, 1482, 1485, 1530, 1599, 1676, 1690, 1822, 1878, 1941], "raise_except": [904, 905], "check_sparse_nnz": 904, "nondet_tol": [904, 905], "check_undefined_grad": [904, 905], "check_grad_dtyp": [904, 905], "check_batched_grad": [904, 905], "check_batched_forward_grad": 904, "check_forward_ad": 904, "check_backward_ad": 904, "fast_mod": [904, 905, 1908], "differenc": [904, 1905], "perturb": [904, 905, 1908], "sparsetensor": [904, 1807], "gradgradcheck": [904, 1905], "gen_non_contig_grad_output": 905, "check_fwd_over_rev": 905, "check_rev_over_rev": 905, "noncontigu": [905, 1017, 1941], "inaccuraci": 905, "clonebackward0": 907, "gi": [909, 910, 1911], "removablehandl": [909, 910, 1201, 1434, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1922], "eventlist": [912, 913], "chrome": [912, 1924, 1957, 1961], "group_by_stack_n": [913, 1924], "roof": 913, "functioneventavg": [913, 915], "window_length": [917, 926, 1158, 1159, 1220, 1878], "2n": [917, 1776, 1934], "trim": [917, 926, 1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1158, 1159, 1198], "_length": [917, 926, 1158, 1159, 1198, 1357, 1818], "sim": [918, 1448, 1576, 1714, 1734], "pseudorandom": [918, 1324, 1662, 1711, 1714, 1730, 1732, 1734, 1736, 1823], "1737": 918, "0950": [918, 1800], "3609": 918, "7148": 918, "0289": [918, 1846], "2676": 918, "8937": 918, "7202": 918, "2500": [919, 1092, 1094, 1095, 1105, 1110, 1271, 1486, 1728], "7500": [919, 1095, 1105, 1124, 1154, 1256, 1271, 1486, 1728, 1784], "AND": [920, 1282, 1880, 1900], "OR": [923, 1284, 1880], "xor": [925, 1285, 1880], "blackman": [926, 1786], "arrang": 927, "broadcast_tensor": [929, 1878, 1920], "out_int32": [932, 1757, 1878], "formal": [932, 1757, 1887, 1894], "eg": [932, 1750, 1757, 1962], "tensor_a": [934, 947], "tensor_b": 934, "6580": 935, "0969": 935, "4614": 935, "1034": [935, 1074], "5790": 935, "1497": 935, "compute_mod": 936, "use_mm_for_euclid_dist_if_necessari": 936, "distanc": [936, 1198, 1236, 1237, 1264, 1394, 1443, 1482, 1483, 1573, 1697, 1818, 1822, 1876], "infti": [936, 1198, 1252, 1350, 1402, 1403, 1465, 1573, 1688, 1935], "use_mm_for_euclid_dist": 936, "donot_use_mm_for_euclid_dist": 936, "minkowski": [936, 1573], "ham": [936, 1158, 1573, 1782], "closest": [936, 1573], "xn": [936, 1573], "4821": [936, 939], "059": 936, "0590": 936, "1763": [936, 1740], "4713": [936, 1740], "6986": [936, 1740], "3702": [936, 1740], "1193": [936, 1290], "0959": 936, "7138": 936, "8322": 936, "2830": [936, 1848], "3791": 936, "6341": 937, "4208": 937, "0900": 937, "5826": 937, "clr": [938, 1697], "3375": 938, "9790": 938, "1119": 938, "6577": 938, "5609": [938, 1524], "5095": 938, "2614": 938, "4038": 938, "3378": [938, 1848], "4982": 938, "2457": [938, 1303], "2561": 938, "4684": 938, "7163": 938, "9647": 938, "8917": [938, 1281], "3213": [938, 1277], "2284": [938, 1054], "8615": 938, "2816": 938, "tu": 939, "mt": [939, 940, 1230, 1237, 1239, 1243, 1244, 1245, 1250, 1259, 1721, 1822, 1878, 1887, 1920, 1938, 1940], "4112": 939, "7486": 939, "4551": 939, "3544": 939, "6724": 939, "5528": 939, "0592": [939, 1911], "9371": 939, "5487": 939, "7023": 939, "03": [939, 940, 1278, 1779, 1780, 1785], "3842e": [939, 1246], "dpotri": 940, "spotri": 940, "uu": 940, "9935": 940, "6353": 940, "5806": 940, "8769": 940, "7183": [940, 1252, 1911], "6618": 940, "9314": 940, "2251": [940, 974, 1233, 1275], "0889": 940, "4439": 940, "2122": 940, "1412": 940, "5894e": 940, "semidefinit": 941, "7747": 941, "9549": 941, "3086": 941, "4114": 941, "8733": 941, "6355": 941, "9891": 941, "1974": 941, "4706": 941, "4115": 941, "6225": 941, "1625": 941, "6097": 941, "8398": 941, "2387": [941, 962], "3771": [941, 1247], "4173": 941, "1626": [941, 974, 1233], "tensor_split": [942, 1072, 1164, 1869, 1878, 1920, 1938], "min_valu": [943, 1393], "max_valu": [943, 1393, 1878], "_valu": [943, 1342, 1619, 1807, 1905, 1920, 1934], "7120": 943, "1734": [943, 1175], "0478": [943, 1871], "0922": 943, "3333": [943, 1154, 1163, 1486, 1487, 1836], "horizont": [946, 1164, 1166, 1921, 1923, 1953], "hstack": [946, 1878, 1920, 1934], "with_replac": [947, 1878], "combinations_with_replac": 947, "fullgraph": [948, 1953, 1963], "cache_size_limit": [948, 1953, 1956, 1963], "subgraph": [948, 1673, 1900, 1904, 1918, 1922, 1944, 1952, 1963], "list_backend": [948, 1945, 1949, 1955], "autotun": [948, 1957], "cudagraph": [948, 1009, 1903, 1945, 1953, 1955, 1957, 1960], "realloc": [948, 1175], "leverag": [948, 1930, 1945, 1947, 1955], "triton": [948, 1906, 1945, 1948, 1950, 1953, 1955, 1963], "_inductor": [948, 1953, 1963], "list_mode_opt": 948, "notabl": [948, 1880], "epilogue_fus": 948, "templat": [948, 1017, 1018, 1921], "max_autotun": 948, "fallback_random": [948, 1953, 1963], "shape_pad": 948, "graph_diagram": 948, "pictur": 948, "list_opt": 948, "_glibcxx_use_cxx11_abi": 949, "bypass": [950, 1074, 1884, 1895, 1903, 1905, 1954], "exclude_tag": 954, "flip": [959, 1115, 1116, 1268, 1878, 1920, 1921, 1958], "lazi": [959, 1213, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1605, 1876, 1951], "writeabl": [959, 960], "is_conj": [959, 1745, 1878, 1920], "geq": [961, 1145, 1232, 1240, 1370, 1420, 1441, 1442, 1452, 1516, 1568, 1621, 1898, 1935], "signbit": [961, 1878, 1920, 1934, 1958], "2557": 961, "0026": 961, "5387": 961, "4740": 961, "9244": 961, "7079": 961, "2778": 961, "0249": [961, 1276], "5719": 961, "0059": 961, "2600": 961, "4475": 961, "9567": [961, 1236, 1821], "5757": 961, "1751": 961, "0742": 961, "2998": 961, "1054": 961, "2373": 961, "3190": [961, 1903], "1128": [961, 1258, 1404], "pearson": 962, "coeffici": [962, 1158, 1676, 1678, 1679, 1680, 1682, 1688, 1692, 1781, 1782, 1783, 1845], "r_": [962, 1838], "ij": [962, 1074, 1280, 1288, 1302, 1437, 1799], "c_": [962, 1362, 1363, 1364, 1365, 1366, 1367, 1404, 1446, 1447], "jj": 962, "hermitian": [962, 1090, 1091, 1093, 1095, 1096, 1097, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1230, 1231, 1236, 1237, 1239, 1243, 1244, 1245, 1255, 1258, 1264, 1878], "cov": [962, 1878, 1920], "2678": [962, 1377], "0908": 962, "3766": 962, "2780": 962, "5812": 962, "1535": [962, 1377], "2350": 962, "3582": 962, "4309": 963, "2706": 963, "8562": 963, "9796": [963, 1246], "1395": 963, "2957": 963, "6553": 963, "5574": 963, "1632": 964, "1835": 964, "6979": 964, "7325": [964, 1064], "0133": 964, "7860": 964, "2536": 964, "2805": 964, "sleef": [964, 1790], "unbias": [966, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1473, 1816, 1817, 1863, 1864, 1878, 1958], "_w": 966, "y_": [966, 1084, 1274, 1275, 1277, 1351, 1370, 1400, 1799, 1843, 1900, 1935], "w_i": [966, 1240], "mu_x": 966, "mu_i": [966, 1682], "whichev": [966, 1142, 1533, 1722, 1868, 1903], "w_ix_": 966, "bessel": [966, 1220, 1785, 1816, 1817, 1863, 1864, 1935], "corrcoef": [966, 1878, 1920], "6667": [966, 1163, 1486, 1487, 1742, 1776, 1916], "fw": 966, "4282": 966, "0255": [966, 1061], "4144": [966, 1903], "4169": 966, "streamcontext": [972, 1049, 1876], "abstractcontextmanag": 972, "3956": [974, 1233], "1455": [974, 1233, 1917], "6895": [974, 1233], "5849": [974, 1233], "3599": [974, 1233], "7180": [974, 1233], "0521": [974, 1233], "1339": [974, 1233], "0225": [974, 1233, 1246], "0257": [974, 1233], "4725": [974, 1233], "1479": [974, 1233], "7005": [974, 1233], "9757": [974, 1233], "3904": [974, 1233], "3726": [974, 1233], "1836": [974, 1233], "9688": [974, 1233], "7153": [974, 1233, 1935], "2159": [974, 1233], "0844": [974, 1233], "5281": [974, 1233], "6120": [974, 1233], "4490": [974, 1233], "5687": [974, 1233], "9792": [974, 1055, 1233], "8304": [974, 1233], "3037": [974, 1233, 1911], "5650": [974, 1233], "2329": [974, 1233], "9883": [974, 1233], "0551": [974, 1233], "capture_begin": [975, 1903], "make_graphed_cal": [975, 1903], "graph_pool_handl": [975, 1009], "other_graph_inst": [975, 1009], "capture_end": [975, 1903], "replai": [975, 1009, 1668, 1903, 1948, 1963], "debug_dump": 975, "debug_path": 975, "enable_debug_mod": 975, "path_to_so_fil": 976, "alloc_fn_nam": 976, "free_fn_nam": 976, "ctype": 976, "change_current_alloc": [976, 1903], "ssize_t": [976, 1903], "cudastream_t": [976, 978, 1903], "ptr": [976, 1903], "size_t": 976, "oss": 976, "enable_tim": [977, 1312, 1903], "interprocess": 977, "marker": [977, 1312], "elapsed_tim": [977, 1312, 1903], "end_ev": [977, 1312, 1903], "elaps": [977, 1312, 1890], "from_ipc_handl": 977, "reconstruct": [977, 1290, 1350, 1351, 1908, 1916, 1922], "ipc": [977, 1013], "ipc_handl": 977, "cudaeventsynchron": 977, "cudastreamwaitev": [977, 978, 980], "stream_ptr": 978, "record_ev": [978, 980], "cudastreamsynchron": [978, 980], "wait_ev": [978, 980], "interoper": 982, "caching_allocator_delet": 982, "mem_ptr": 983, "caching_allocator_alloc": 983, "peer_devic": 984, "_cudaalloc": 985, "clock": 986, "sm": 986, "hertz": 986, "smi": [986, 999, 1027, 1033, 1037, 1051, 1052, 1903, 1907, 1909], "buffer_s": 988, "10485760": 988, "chunk_siz": [991, 1136, 1142, 1868], "cublashandle_t": 992, "unoccupi": [999, 1311], "pytorch_cuda_alloc_conf": [1000, 1903], "cudamallocasync": [1000, 1031, 1903], "_cudadeviceproperti": 1004, "gencod": 1005, "eagerli": [1006, 1012, 1903, 1951], "cuda_graph": 1009, "ordinari": [1011, 1614, 1860, 1899], "code_str": [1017, 1018], "temp": 1017, "typenam": [1017, 1018], "my_kernel": [1017, 1018], "jitted_fn": [1017, 1018], "create_jit_fn": [1017, 1018], "util_fn": 1017, "gelu": [1017, 1463, 1477, 1479, 1481, 1586, 1878, 1895, 1920, 1958], "my_gelu": 1017, "my_lib": [1017, 1884, 1917], "impl": [1017, 1884], "num_output": 1018, "sample_arg": 1020, "num_warmup_it": 1020, "allow_unused_input": 1020, "datadistributedparallel": 1020, "amp": [1020, 1860, 1876, 1899, 1957, 1960, 1963], "autocast": [1020, 1440, 1876, 1903, 1905, 1963], "insuffici": [1021, 1951, 1963], "manual_seed_al": [1021, 1860], "occupi": [1023, 1027, 1038, 1309, 1422, 1551, 1903, 1909, 1965], "reset_peak_memory_stat": [1023, 1025, 1038, 1039], "max_memory_reserv": [1024, 1903, 1909], "cudamemgetinfo": 1026, "memory_reserv": [1028, 1903, 1909], "snapshot": [1030, 1880, 1903, 1909], "large_pool": 1031, "small_pool": 1031, "allocated_byt": 1031, "cudamalloc": [1031, 1903], "reserved_byt": 1031, "active_byt": 1031, "inactive_split": 1031, "inactive_split_byt": 1031, "octob": 1031, "1mb": 1031, "num_alloc_retri": 1031, "num_oom": 1031, "assist": [1031, 1904], "max_split_s": 1031, "oversize_alloc": 1031, "oversize_seg": 1031, "requested_byt": 1031, "abbrevi": 1032, "percent": [1033, 1052, 1957], "msg": [1034, 1036, 1924, 1941], "instantan": [1034, 1924], "ascii": [1034, 1036, 1272, 1880, 1924], "sensor": [1037, 1051], "mw": 1037, "milliwatt": 1037, "fermi": 1037, "max_memory_alloc": [1038, 1903, 1909], "max_memory_cach": 1039, "memory_stat": [1040, 1903, 1909], "seed_al": 1041, "environment": [1043, 1957], "total_memori": [1044, 1319], "debug_mod": [1048, 1764], "centigrad": 1051, "x_1": [1053, 1054, 1055, 1056, 1268, 1355, 1368, 1369, 1504, 1515, 1843], "x_2": [1053, 1054, 1055, 1056, 1268, 1355, 1368, 1369, 1504, 1515], "x_3": [1053, 1054, 1055, 1056, 1268], "3449": 1053, "5447": 1053, "0685": 1053, "5104": [1053, 1903], "1706": 1053, "2259": 1053, "4696": 1053, "3284": 1053, "9946": 1053, "8209": [1053, 1056], "6628": 1054, "0975": 1054, "2680": [1054, 1902], "3298": [1054, 1061], "4220": 1054, "3885": 1054, "1762": 1054, "9165": 1054, "6684": [1054, 1178], "6001": 1055, "2069": 1055, "1919": 1055, "6727": [1055, 1068], "0062": 1055, "4126": 1055, "2129": 1055, "4206": 1055, "1968": [1055, 1935], "1241": 1055, "0238": 1055, "0233": [1055, 1729], "0157": 1055, "0158": [1055, 1822], "0065": 1055, "0014": [1055, 1935], "0006": 1055, "8286": 1056, "4890": 1056, "5155": 1056, "8443": 1056, "1865": 1056, "1752": [1056, 1064], "0595": 1056, "1850": 1056, "1571": [1056, 1911, 1916], "4243": 1056, "3175": 1056, "8020": [1056, 1719], "0423": 1056, "2289": 1056, "0537": 1056, "0058": 1056, "9780": 1056, "trapezoid": [1057, 1844, 1878, 1920], "360": 1058, "2832": 1058, "diagflat": [1061, 1878, 1920], "5950": 1061, "0872": 1061, "4264": 1061, "1064": [1061, 1911], "8795": 1061, "2429": 1061, "1374": 1061, "1029": 1061, "6482": 1061, "6300": 1061, "5410": 1062, "2934": 1062, "1788": [1062, 1935], "5684": 1062, "0845": [1062, 1790, 1911], "3986": 1062, "2956": [1063, 1233], "9068": 1063, "1695": 1063, "2094": [1063, 1903], "3018": 1063, "1516": 1063, "9342": 1063, "0854": 1064, "1431": 1064, "8536": 1064, "0905": 1064, "0360": [1064, 1323], "6927": 1064, "3735": 1064, "4945": 1064, "2631": [1064, 1322, 1903], "3755": 1064, "5977": 1064, "8172": 1064, "1065": [1064, 1911], "0401": 1064, "2235": [1064, 1821], "7938": 1064, "3081": 1064, "6166": 1064, "2335": 1064, "0500": 1064, "7336": 1064, "3836": 1064, "1015": 1064, "emb": [1065, 1760, 1791], "5393": 1068, "8675": 1068, "5916": 1068, "6321": 1068, "0967": 1068, "0511": 1068, "6295": 1068, "8360": 1068, "6973": 1068, "6537": 1068, "dividend": [1069, 1119, 1122, 1741, 1850], "true_divid": [1069, 1878, 1920], "3810": [1069, 1162], "2774": 1069, "2972": 1069, "3719": 1069, "4637": 1069, "7620": 1069, "5548": 1069, "5944": 1069, "7438": 1069, "9274": 1069, "3711": 1069, "9353": 1069, "4605": 1069, "2917": 1069, "1815": [1069, 1281], "0111": [1069, 1779], "9805": 1069, "5923": 1069, "1062": 1069, "4581": [1069, 1240], "7759": 1069, "2344": 1069, "1830": 1069, "0313": 1069, "1908": 1069, "4757": 1069, "8032": 1069, "2930": 1069, "8113": 1069, "2308": 1069, "4620": [1069, 1871], "6051": 1069, "5676": 1069, "2639": 1069, "2260": 1069, "4509": [1069, 1254], "2086": 1069, "1322": 1069, "9764": 1069, "9564": 1069, "3484": 1069, "2278": 1069, "1068": [1069, 1175], "4678": 1069, "3938": [1069, 1831], "depthwis": [1072, 1073, 1362, 1363, 1364], "atleast_3d": [1073, 1878, 1920], "notat": [1074, 1400, 1770, 1881, 1911, 1940], "einstein": 1074, "summat": [1074, 1198, 1280, 1288, 1934], "subscript": [1074, 1881, 1913], "jk": [1074, 1957], "ik": [1074, 1273, 1799], "za": 1074, "alphabet": [1074, 1517, 1930], "arrow": [1074, 1932], "ki": 1074, "ellipsi": [1074, 1880, 1881, 1894], "fourth": 1074, "whitespac": [1074, 1881], "opt_einsum": [1074, 1876], "_the_": 1074, "disclaim": 1074, "sublist": [1074, 1963], "52": 1074, "op1": [1074, 1880], "sublist1": 1074, "op2": [1074, 1880], "sublist2": 1074, "subslist_out": 1074, "2104": 1074, "7952": 1074, "2433": 1074, "4545": 1074, "1156": 1074, "2897": [1074, 1911], "3918": 1074, "4963": 1074, "3744": 1074, "9381": 1074, "2685": 1074, "6070": 1074, "7208": 1074, "8058": 1074, "4419": 1074, "0936": 1074, "1713": 1074, "4291": 1074, "5802": 1074, "7350": [1074, 1935], "5704": 1074, "4290": 1074, "9323": 1074, "4480": 1074, "bij": 1074, "bjk": 1074, "bik": 1074, "0564": 1074, "5904": 1074, "2023": 1074, "1271": 1074, "6706": [1074, 1722], "8097": 1074, "8025": 1074, "1183": 1074, "2239": [1074, 1260], "3107": 1074, "5756": 1074, "2354": 1074, "4558": 1074, "3460": 1074, "5087": 1074, "8530": [1074, 1359, 1489], "8153": 1074, "8787": 1074, "3839": [1074, 1867], "2112": [1074, 1846], "3728": 1074, "1131": [1074, 1719], "0921": 1074, "8305": 1074, "ji": 1074, "anm": 1074, "bm": 1074, "ba": 1074, "3430": [1074, 1281], "2405": 1074, "4494": 1074, "3311": 1074, "5201": 1074, "0356": 1074, "4064e": 1075, "8000e": 1075, "3493e": 1075, "5751e": 1075, "1428e": 1075, "5955e": 1075, "9683e": 1077, "1239e": 1077, "0705e": 1077, "set_grad_en": [1078, 1878, 1920, 1942], "parenthesi": [1078, 1176, 1659], "doubler": [1078, 1659], "elsewher": [1079, 1087, 1145, 1157, 1191, 1193, 1194, 1197, 1225, 1289, 1335, 1800, 1875], "_max": [1088, 1089, 1925], "_min": [1088, 1089, 1925], "nearbi": [1088, 1089], "_int": [1088, 1089], "_point": [1088, 1089], "2525": 1088, "0466": 1088, "3491": [1088, 1254], "2168": [1088, 1838], "5906": [1088, 1935], "6258": 1088, "6444": 1088, "0542": 1088, "0475": [1088, 1935], "0486": 1088, "3405": 1088, "6134": [1088, 1303], "6323": 1088, "0552": 1089, "9730": 1089, "3973": 1089, "0780": 1089, "4000": [1089, 1092, 1101, 1110, 1486, 1725, 1776], "fourier": [1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1198, 1786, 1818, 1876], "rfft": [1090, 1095, 1105, 1109, 1110, 1111], "compact": [1090, 1091, 1093, 1243, 1245, 1248, 1905, 1918, 1925], "chalf": [1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1878, 1920, 1940], "sm53": [1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111], "ortho": [1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1273], "orthonorm": [1090, 1091, 1093, 1095, 1096, 1097, 1098, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1111, 1264, 1621, 1822], "ifft": [1090, 1094, 1095, 1099, 1100, 1102, 1103, 1104, 1105, 1106, 1107], "fftn": [1091, 1094, 1100, 1103, 1111], "rfft2": [1091, 1106], "ifft2": [1091, 1103], "two_fft": [1091, 1093, 1103, 1109, 1111], "check_strid": [1091, 1093, 1094, 1099, 1100, 1105, 1106, 1107, 1109, 1111, 1941], "nyquist": [1092, 1094, 1102, 1104, 1108, 1109, 1110, 1111], "i_1": [1093, 1111, 1221], "i_n": [1093, 1111, 1142, 1221, 1838, 1868], "rfftn": [1093, 1097, 1103, 1107, 1109], "ifftn": [1093, 1099, 1104], "reorder": [1094, 1256], "rearrang": [1094, 1101, 1358, 1446, 1447, 1574, 1575, 1894], "fftfreq": [1094, 1101, 1110], "9000": [1094, 1836], "8000": [1094, 1329, 1486, 1722, 1776], "uncent": 1094, "ifftshift": 1094, "x_center": 1094, "x_uncent": 1094, "fft_uncent": 1094, "fft_center": 1094, "x_centered_2": 1094, "ihfft": [1095, 1103, 1104], "irfft": [1095, 1107, 1108], "symmetri": [1095, 1097, 1818], "opposit": [1095, 1097, 1822, 1842], "transformed_dim_s": [1095, 1105], "0000j": [1095, 1102, 1105, 1230, 1231, 1236, 1237, 1239, 1715, 1773], "1250": [1095, 1322], "1720j": 1095, "0406j": 1095, "2809": 1095, "6250": [1095, 1105, 1124, 1486], "9691": 1095, "hfftn": [1096, 1104], "last_dim_s": [1096, 1097, 1106, 1107, 1958], "ihfft2": 1096, "roundtrip": [1096, 1097, 1105, 1106, 1107], "ihfftn": [1097, 1103], "irfftn": [1097, 1106, 1111], "fft2": [1099, 1109], "two_ifft": [1099, 1100, 1104], "fftshift": 1101, "hfft": 1102, "6882j": 1102, "1625j": 1102, "hfft2": 1103, "8602j": 1105, "2031j": 1105, "1562": 1105, "3511": 1105, "7812": 1105, "2114": 1105, "irfft2": 1109, "wider": [1117, 1877, 1880, 1921, 1934], "49": [1117, 1256, 1902], "2500e": 1117, "1000e": 1117, "7656e": 1117, "lfloor": [1118, 1123, 1342, 1347, 1348, 1349, 1362, 1363, 1364, 1381, 1402, 1403, 1427, 1428, 1429, 1485, 1486, 1487, 1488, 1502, 1571, 1737, 1818], "rfloor": [1118, 1123, 1342, 1347, 1348, 1349, 1362, 1363, 1364, 1381, 1402, 1403, 1427, 1428, 1429, 1485, 1486, 1487, 1488, 1502, 1571, 1737, 1818], "8166": 1118, "5308": 1118, "2530": 1118, "2091": 1118, "7000": [1120, 1378, 1775], "3000": [1121, 1377, 1775, 1903], "entrywis": [1122, 1741], "modulu": [1122, 1260, 1741], "operatornam": [1123, 1236, 1237, 1238, 1239, 1256, 1264, 1350, 1351, 1357, 1394, 1395, 1401, 1425, 1465, 1483, 1775], "8750": [1124, 1486], "char": [1127, 1670, 1893, 1936], "parameter_and_buffer_dict": 1130, "tie_weight": [1130, 1656], "submodule_nam": [1130, 1656], "parameter_nam": [1130, 1656], "ti": [1130, 1656, 1750, 1952], "ty": [1130, 1656], "foo_ti": [1130, 1656], "new_a": [1130, 1656], "mutlipl": 1130, "grad_weight": [1130, 1905], "detached_param": 1130, "parameters_and_buffer_dict": 1130, "reparamater": [1130, 1656], "paramat": 1130, "intermediate_upd": 1131, "mutations_and_view": 1131, "intermeid": 1131, "proxy_tensor": [1131, 1952, 1963], "make_fx": [1131, 1951, 1963], "inpt": 1131, "out1": [1131, 1878], "out2": [1131, 1878], "f_trace": 1131, "f_no_mutations_trac": 1131, "f_no_mutations_and_views_trac": 1131, "a_1": [1131, 1221], "view_1": 1131, "view_copi": [1131, 1878, 1920, 1942], "view_copy_1": 1131, "as_strid": [1131, 1878, 1920, 1938, 1958], "writ": 1131, "native_funct": [1131, 1905, 1958], "yaml": [1131, 1905, 1958], "aux": [1132, 1133, 1135, 1136, 1137, 1141], "my_loss_func": 1132, "y_pred": [1132, 1903], "loss_per_sampl": 1132, "y_true": 1132, "autodiff": [1135, 1136, 1137, 1259], "jacobian_f": [1135, 1136], "f_x": [1135, 1136], "jacboian": [1135, 1136], "expectedx": [1135, 1136], "expectedi": [1135, 1136], "_preallocate_and_copi": 1136, "stand": [1137, 1141, 1879, 1922, 1932], "jvp_out": 1137, "jvp_fn": 1138, "requr": 1138, "optimiz": [1140, 1877], "l1": [1140, 1394, 1395, 1465, 1542, 1587, 1631, 1640, 1911, 1916], "l2": [1140, 1395, 1425, 1465, 1675, 1676, 1677, 1678, 1680, 1682, 1688, 1689, 1691, 1899], "vjpfunc": 1141, "unsuccessfulli": [1142, 1868], "rummag": [1142, 1868], "batched_dot": [1142, 1868], "imposs": [1142, 1868, 1899], "jacobian_row": [1142, 1868], "get_vjp": [1142, 1868], "n1": [1142, 1743, 1868], "n0": [1142, 1868], "batched_pow": [1142, 1868], "autobatch": [1142, 1868], "sparse_grad": [1143, 1878, 1958], "tau": [1146, 1240, 1535, 1677, 1691, 1708, 1709, 1779, 1878], "elementari": [1146, 1900, 1908], "reflector": [1146, 1621, 1709], "household": [1146, 1240, 1621, 1709], "householder_product": [1146, 1621, 1708], "gel": [1146, 1246], "set_default_dtyp": 1148, "set_deterministic_debug_mod": [1149, 1857], "set_float32_matmul_precis": 1150, "edge_ord": [1154, 1878], "mathbb": [1154, 1230, 1232, 1236, 1237, 1238, 1239, 1240, 1241, 1246, 1247, 1250, 1252, 1259, 1261, 1263, 1264, 1370, 1441, 1621], "rightarrow": 1154, "closer": [1154, 1483, 1722, 1905, 1911, 1955, 1956, 1957], "interior": 1154, "theorem": 1154, "h_l": 1154, "h_r": 1154, "neighbor": [1154, 1198, 1486, 1488, 1818], "xi_1": 1154, "xi_2": 1154, "approx": [1154, 1823, 1908], "outermost": 1154, "80": [1154, 1256, 1701, 1770, 1903, 1921], "halv": 1154, "coord": 1154, "54": [1158, 1396, 1782], "46": [1158, 1781], "hann_window": [1158, 1818, 1878, 1882, 1920], "hann": [1159, 1782], "hist": [1162, 1163, 1878], "bin_edg": [1162, 1163, 1878], "9524": 1162, "leftmost": [1163, 1895], "leg": 1167, "triangl": [1167, 1939], "hypotenus": 1167, "4031": 1167, "gammainc": [1169, 1935], "gammaincc": [1170, 1935], "index_reduce_": [1174, 1878], "1427": 1175, "0231": 1175, "5414": 1175, "0009": 1175, "4664": [1175, 1838], "2647": 1175, "1228": 1175, "6571": 1175, "7230": 1175, "6004": 1175, "inferencemod": [1176, 1900], "bump": 1176, "_version": [1176, 1920], "multidimension": [1178, 1270, 1397], "8173": 1178, "0874": 1178, "1784": 1178, "3279": 1178, "7894": 1178, "4682": 1178, "7159": 1178, "1506": 1178, "4034": 1178, "3657": 1178, "0387": 1178, "9892": 1178, "1774": 1178, "3261": 1178, "3917": 1178, "4537": [1178, 1605], "7493": 1178, "1724": 1178, "2291": 1178, "5749": 1178, "2267": 1178, "7920": 1178, "3607": 1178, "3701": 1178, "3666": 1178, "5850": [1178, 1231], "7242": 1178, "9837": 1178, "1560": 1178, "2907": 1178, "6785": 1178, "5671": [1178, 1232], "5452": 1178, "6912": 1178, "5509": 1178, "1782": 1178, "9843": 1178, "7366": 1178, "5672": [1178, 1662], "5115": 1178, "4864": 1178, "2476": 1178, "4337": 1178, "6347": 1178, "1748": 1178, "3567": [1178, 1231], "6558": 1178, "2469": [1178, 1911], "5787": [1178, 1281], "typecheck": [1188, 1920], "mypi": [1188, 1879, 1880], "warn_alwai": 1189, "set_warn_alwai": 1189, "nonfinit": 1190, "test_el": [1192, 1878], "assume_uniqu": [1192, 1878], "0j": [1197, 1865], "nola": 1198, "envelop": 1198, "hop": [1198, 1818], "shorter": [1198, 1918, 1930], "griffin": 1198, "ieee": [1198, 1388, 1786, 1914], "tran": 1198, "assp": 1198, "vol": [1198, 1388, 1786], "pp": [1198, 1388, 1786], "236": 1198, "apr": 1198, "1984": 1198, "slide": [1198, 1347, 1348, 1349, 1381, 1427, 1428, 1429, 1485, 1527, 1557, 1558, 1559, 1601, 1726, 1727, 1818], "fft_size": 1198, "scriptmodul": [1199, 1200, 1205, 1208, 1210, 1211, 1212, 1216, 1217, 1674, 1877, 1879, 1888, 1918], "implic": [1199, 1216, 1905, 1930, 1934], "attributemodul": 1199, "names_ag": 1199, "get_debug_st": 1200, "graphexecutorst": 1200, "_extra_fil": [1200, 1201, 1208, 1211, 1910], "save_to_buff": 1200, "add_modul": [1201, 1434], "init_weight": [1201, 1434, 1911], "buf": [1201, 1434], "20l": [1201, 1434], "1l": [1201, 1434], "5l": [1201, 1434], "pretti": [1201, 1673, 1770, 1877, 1949, 1952, 1956], "syntax": [1201, 1877, 1880, 1922, 1954], "code_with_const": 1201, "constmap": 1201, "extra_repr": [1201, 1434, 1905], "get_buff": [1201, 1434], "attributeerror": [1201, 1434, 1905, 1925], "get_extra_st": [1201, 1434], "set_extra_st": [1201, 1434], "get_paramet": [1201, 1434], "net_b": [1201, 1434], "net_c": [1201, 1434], "transit": [1201, 1302, 1434, 1818, 1876, 1877, 1945, 1956], "inlined_graph": 1201, "ipu": [1201, 1434, 1916], "missing_kei": [1201, 1434], "unexpected_kei": [1201, 1434], "remove_dupl": [1201, 1434], "named_children": [1201, 1434, 1911], "conv4": [1201, 1434], "conv5": [1201, 1434], "memo": [1201, 1434, 1952], "register_backward_hook": [1201, 1434, 1610], "register_full_backward_hook": [1201, 1434, 1911], "register_buff": [1201, 1434, 1607, 1877, 1879, 1905, 1911], "register_forward_hook": [1201, 1434, 1608, 1911], "with_kwarg": [1201, 1434], "always_cal": [1201, 1434, 1608], "fire": [1201, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692, 1904, 1910, 1959], "register_module_forward_hook": [1201, 1434, 1911], "register_forward_pre_hook": [1201, 1371, 1434, 1609, 1911], "forward_pr": [1201, 1434], "register_module_forward_pre_hook": [1201, 1434, 1911], "register_module_full_backward_hook": [1201, 1434, 1606, 1900, 1911], "register_full_backward_pre_hook": [1201, 1434, 1911], "register_module_full_backward_pre_hook": [1201, 1434, 1911], "register_load_state_dict_post_hook": [1201, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "incompatible_kei": [1201, 1434], "register_modul": [1201, 1434, 1612], "register_paramet": [1201, 1434, 1613, 1905, 1911], "register_state_dict_pre_hook": [1201, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "keep_var": [1201, 1434], "gan": [1201, 1434, 1622, 1655], "witch": 1201, "share_memori": [1201, 1434, 1913], "share_memory_": [1201, 1434, 1892, 1936], "shallow": [1201, 1371, 1434, 1482, 1483, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "ordereddict": [1201, 1434, 1435, 1444, 1462, 1605, 1637, 1878, 1911, 1916, 1941, 1956], "channels_last": [1201, 1434, 1614, 1937], "4d": [1201, 1353, 1381, 1398, 1434, 1486, 1527, 1544, 1571, 1602, 1725], "1913": [1201, 1434], "3420": [1201, 1434], "5113": [1201, 1434, 1838], "2325": [1201, 1233, 1434], "gpu1": [1201, 1434], "1914": [1201, 1434], "5112": [1201, 1434, 1903], "3741": [1201, 1434], "2382": [1201, 1323, 1434], "5593": [1201, 1434], "4443": [1201, 1434], "6122": [1201, 1434], "1150": [1201, 1434], "to_empti": [1201, 1434], "dst_type": [1201, 1434], "set_to_non": [1201, 1434, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1687, 1688, 1689, 1690, 1691, 1692, 1903], "the_typ": 1202, "the_valu": 1202, "script_bar": 1204, "addmod": 1204, "preserved_attr": 1205, "optimize_numer": 1205, "optimize_for_infer": [1205, 1949], "run_frozen_optim": 1205, "scripted_modul": [1205, 1212, 1916], "frozen_modul": 1205, "modified_tensor": 1205, "mymodule2": 1205, "dump_alias_db": 1205, "pdb": [1206, 1212, 1218, 1877, 1879], "training_method": 1206, "target_typ": 1207, "refin": [1207, 1894], "testcod": [1207, 1879], "key1": 1207, "val1": 1207, "key2": 1207, "val2": 1207, "_restore_shap": 1208, "scriptfunct": [1208, 1212, 1213, 1216, 1918], "readlin": [1208, 1272, 1922], "seek": [1208, 1272, 1922, 1925], "retrac": 1208, "rb": [1208, 1272], "extra_fil": [1208, 1211], "txt": [1208, 1211, 1922, 1963], "other_method": 1210, "lesser": [1210, 1900, 1902], "extent": [1210, 1902, 1934], "frozen_mod": 1210, "offlin": 1211, "_frames_up": 1212, "_rcb": 1212, "scriptdict": 1212, "scriptlist": 1212, "test_sum": 1212, "scripted_fn": [1212, 1877], "conv2": [1212, 1434, 1462, 1877, 1925], "some_entry_point": 1212, "python_only_fn": 1212, "testnnmodul": 1212, "pdt_model": 1212, "scripted_model": [1212, 1922], "un": [1214, 1357, 1925], "unfus": 1214, "nb": 1214, "check_trac": [1216, 1217], "check_input": [1216, 1217, 1877], "check_toler": [1216, 1217], "_force_outplac": [1216, 1217], "_module_class": [1216, 1217], "_compilation_unit": [1216, 1217], "compilationunit": [1216, 1217], "example_kwarg_input": 1216, "_store_input": [1216, 1217], "trace_modul": [1216, 1877, 1880], "untrack": 1216, "checker": [1216, 1217, 1880, 1918], "diverg": [1216, 1217, 1400, 1545, 1876, 1880], "traced_foo": [1216, 1877], "example_weight": [1216, 1217], "example_forward_input": [1216, 1217], "example_inputs_is_kwarg": 1217, "method2": 1217, "example_method2_input": 1217, "weighted_kernel_sum": 1217, "use_memory_effici": 1218, "memory_effici": 1218, "scriptabl": 1218, "kaiser": [1220, 1477, 1479, 1481], "i_0": [1220, 1221, 1785, 1838, 1935], "zeroth": [1220, 1785, 1935], "out_i": 1220, "kroneck": 1221, "a_0": 1221, "a_n": 1221, "b_0": 1221, "b_1": 1221, "b_n": 1221, "k_0": [1221, 1838], "k_1": 1221, "k_n": 1221, "j_0": 1221, "j_1": 1221, "j_n": 1221, "k_t": 1221, "i_t": [1221, 1404, 1690], "b_t": 1221, "j_t": 1221, "bmatrix": 1221, "a_": [1221, 1292, 1422, 1838], "cdot": [1221, 1246, 1258, 1350, 1351, 1369, 1370, 1392, 1400, 1437, 1438, 1439, 1440, 1441, 1477, 1515, 1538, 1715, 1818, 1935, 1941], "vdot": [1221, 1268, 1269, 1878, 1920], "ddot": [1221, 1268], "kth": 1222, "full_lik": [1226, 1878, 1882, 1920], "logarithm": [1229, 1234, 1260, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1287, 1357, 1517, 1552, 1798, 1935], "gamma": [1229, 1352, 1353, 1354, 1389, 1397, 1398, 1399, 1406, 1473, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1691, 1693, 1697, 1698, 1701, 1706, 1707, 1725, 1876, 1878, 1918, 1920, 1921, 1935], "5724": [1229, 1935], "1208": [1229, 1935], "mathrlap": [1230, 1236, 1237, 1238, 1239, 1247, 1250, 1259, 1261, 1263, 1264, 1621], "qquad": [1230, 1232, 1236, 1237, 1238, 1239, 1240, 1247, 1250, 1259, 1261, 1263, 1264, 1621], "eigenvalu": [1230, 1236, 1237, 1238, 1239, 1252, 1255, 1258, 1263, 1264, 1273, 1711, 1878], "resp": [1230, 1237, 1239, 1263, 1264, 1281], "5266": 1230, "9586": 1230, "0626j": 1230, "4160": 1230, "5895": 1230, "2322": 1230, "2976j": 1230, "4928": [1230, 1838], "4692e": 1230, "8747e": 1230, "check_error": [1231, 1242, 1244, 1249, 1262, 1878], "opportun": [1231, 1877, 1931, 1952, 1953], "performantli": 1231, "3792": 1231, "9831j": 1231, "8757": 1231, "5425": 1231, "6374j": 1231, "kappa": 1232, "_p": [1232, 1443], "frobeniu": [1232, 1246, 1253, 1257, 1661], "nuc": [1232, 1253, 1257, 1270, 1632, 1641, 1661], "nuclear": [1232, 1253, 1257, 1661], "sigma_1": [1232, 1246, 1255, 1258], "sigma_n": 1232, "kappa_2": 1232, "kappa_": 1232, "4142": [1232, 1257, 1661, 1715], "1623": [1232, 1253], "2426": [1232, 1257, 1661], "7071": [1232, 1778], "5917": 1232, "9941": 1233, "5132": 1233, "5681": 1233, "4653": 1233, "4507": 1233, "4119": 1233, "6163": 1233, "1073": 1233, "3957": 1233, "9666": [1233, 1524], "0840": 1233, "3357": 1233, "2139": 1233, "slogdet": [1234, 1281, 1878, 1920], "0934": 1234, "1990": [1234, 1281], "4099": [1234, 1281], "7386": [1234, 1281], "diagonaliz": [1236, 1238], "eigenvector": [1236, 1237, 1273, 1878], "neq": [1236, 1237, 1240, 1264, 1335, 1437, 1439, 1676, 1677, 1678, 1680, 1682, 1688, 1689, 1691, 1695, 1822], "phi": [1236, 1237, 1264, 1384, 1531, 1822], "shall": [1236, 1237, 1264, 1623, 1627], "lambda_i": [1236, 1237, 1252], "lambda_j": [1236, 1237], "eigval": [1236, 1878], "9828": [1236, 1846, 1911], "3889j": 1236, "4617": 1236, "3010j": 1236, "1662": 1236, "7435j": 1236, "6139": 1236, "0562j": 1236, "1226": [1236, 1238], "5738j": [1236, 1238], "7537": [1236, 1238], "1286j": [1236, 1238], "9218": 1236, "1882": 1236, "2220j": 1236, "0270": 1236, "3867j": 1236, "7119e": 1236, "2841e": 1236, "uplo": [1237, 1239, 1878], "unitari": [1237, 1240, 1259, 1264, 1621, 1709], "eigvalsh": [1237, 1255], "9228": [1237, 1239], "2029": [1237, 1239], "0862j": [1237, 1239], "3464": [1237, 1239], "3277": [1237, 1239], "9415": [1237, 1239], "0846": 1237, "9964": 1237, "9170": 1237, "3898j": 1237, "0331j": 1237, "1062e": 1237, "5423e": 1237, "polynomi": [1238, 1239, 1704], "_n": [1238, 1239, 1241, 1621, 1905], "4576e": [1238, 1265], "5797": 1239, "4629": 1239, "1605": 1239, "3780": 1239, "1113": [1239, 1911], "7381": 1239, "h_1h_2": 1240, "h_k": 1240, "h_i": [1240, 1468], "_m": [1240, 1621], "tau_i": 1240, "8034": 1240, "4184j": 1240, "2588": 1240, "0174j": 1240, "6853": 1240, "7953j": 1240, "0790": 1240, "5620j": 1240, "6989j": 1240, "5360": 1240, "1193j": 1240, "3877": 1240, "6691j": 1240, "3512": 1240, "3024j": 1240, "4766": 1240, "5783j": 1240, "0361": [1240, 1911], "6587j": 1240, "6396": [1240, 1911], "1612j": 1240, "3693": 1240, "4481j": 1240, "aa": 1241, "pinv": [1241, 1246, 1713], "moor": [1241, 1258], "penros": [1241, 1258], "ainv": [1241, 1242, 1262, 1266], "1921e": 1241, "9073e": [1241, 1485], "5107e": 1241, "ldl": [1243, 1245], "indefinit": 1243, "ld": [1243, 1244, 1245, 1878], "sytrf": [1243, 1244], "ldl_solv": 1243, "ldl_factor_ex": [1243, 1245], "2079": [1243, 1244, 1935], "2414": [1243, 1244], "9428": [1243, 1244], "4554": [1243, 1244], "3264": [1243, 1244], "3823": [1243, 1244], "5884": [1243, 1244], "9595": [1243, 1244, 1778], "2695": [1243, 1244], "8513": [1243, 1244], "1633": [1243, 1244], "ldl_factor": 1244, "rcond": [1246, 1258, 1713, 1878], "_f": 1246, "gelsi": 1246, "gelsd": 1246, "gelss": 1246, "mind": [1246, 1264, 1377, 1900, 1906, 1908, 1956, 1961], "tridiagon": 1246, "sigma_i": [1246, 1264, 1822], "residu": [1246, 1273, 1878, 1911], "singular_valu": [1246, 1878], "lh": 1246, "rh": [1246, 1291], "0838": [1246, 1911], "2275": [1246, 1322], "3844": 1246, "5499": 1246, "1175": 1246, "9102": 1246, "0870": 1246, "6772": 1246, "7758": 1246, "5109": 1246, "4382": 1246, "3769": 1246, "1818": 1246, "3450": 1246, "0806": [1246, 1911], "3967": 1246, "3994": 1246, "1521": 1246, "1473": 1246, "9194": 1246, "0458": 1246, "6705": [1246, 1305], "1802": 1246, "4086": 1246, "5152e": 1246, "almost": [1247, 1248, 1917, 1952], "5007": 1247, "9755": 1247, "0489": 1247, "9644": [1247, 1300], "9605e": 1247, "0376e": 1247, "lu_factor_ex": [1248, 1290], "lu_unpack": [1248, 1290, 1878, 1920], "b1": 1248, "b2": [1248, 1903, 1909], "a_factor": 1248, "getrf": [1249, 1262], "adjoint": [1250, 1878, 1920, 1938, 1940], "_exp": 1252, "3891": 1252, "8660": 1252, "ord": [1253, 1257, 1270, 1661, 1878, 1880, 1920], "la": [1253, 1257, 1270, 1911], "2829": 1253, "2627": 1253, "0756": 1254, "4980": 1254, "6617": 1254, "4994": 1254, "9980": 1254, "2731": 1254, "8001": 1254, "2640": 1254, "4571": 1254, "5511": 1254, "0163": [1254, 1300], "5292": 1254, "4899": 1254, "0822": 1254, "2773": [1254, 1895], "varepsilon": [1255, 1258, 1482], "tol": [1255, 1273, 1878], "fewest": 1256, "nd": [1256, 1914], "bc": [1256, 1921], "75000": 1256, "26": [1256, 1696, 1950, 1963], "148": 1256, "vector_norm": [1257, 1661], "matrix_norm": [1257, 1270, 1622, 1661], "7460": [1257, 1661], "3485": 1257, "8570e": 1257, "8480": 1257, "2361": [1257, 1661, 1662], "7417": [1257, 1661], "computation": [1258, 1908], "5495": [1258, 1322], "0979": 1258, "4092": 1258, "4132": [1258, 1784], "1143": 1258, "3662": 1258, "6374": 1258, "9294": 1258, "3269": [1258, 1911], "5745": [1258, 1816, 1817, 1863, 1864], "0382": [1258, 1323], "5922": 1258, "6759": 1258, "0600": 1258, "1933": 1258, "2090": 1258, "0903": 1258, "0817": 1258, "4752": [1258, 1821], "7124": 1258, "1631": 1258, "2272": 1258, "1356": 1258, "3933": 1258, "5023": 1258, "0308": 1258, "1725": 1258, "5216": 1258, "apinv": 1258, "5633e": 1258, "0830e": 1258, "wide": [1259, 1264, 1621, 1780, 1902, 1905, 1911, 1921], "51": [1259, 1432, 1721], "167": [1259, 1721], "68": [1259, 1721, 1877, 1879], "8571": [1259, 1721], "3943": [1259, 1721], "3314": [1259, 1721], "4286": [1259, 1721], "9029": [1259, 1721], "0343": [1259, 1721], "2857": [1259, 1721], "1714": [1259, 1721, 1911], "9429": [1259, 1721], "175": [1259, 1721], "q2": 1259, "r2": [1259, 1473], "6099e": 1259, "2158e": 1259, "logabsdet": [1260, 1878], "0032": 1260, "1219": [1260, 1740], "6690": 1260, "1161": 1260, "4053": 1260, "6218": [1260, 1835], "9273": 1260, "0082": 1260, "7576": 1260, "logdet": [1260, 1878, 1920], "linalg_slogdet": [1260, 1878, 1920], "2776": 1260, "solve_triangular": [1261, 1845], "expand_a": [1261, 1878, 1905, 1920, 1938], "rectangular": [1263, 1264, 1292, 1898], "triu_": [1263, 1878], "tril_": [1263, 1878], "full_matric": [1264, 1265, 1626, 1822, 1878, 1958], "vh": [1264, 1626, 1822, 1878, 1958], "gesvdj": [1264, 1265, 1822], "jacobi": 1264, "gesvda": [1264, 1265], "gesvd": [1264, 1265, 1822], "u_k": 1264, "v_k": 1264, "sigma_j": [1264, 1822], "eigendecomposit": 1264, "0486e": 1264, "0957e": 1264, "5139": 1265, "1087": 1265, "1066": 1265, "ind": [1266, 1267, 1878, 1906], "tensorsolv": 1266, "ndim": [1266, 1267, 1893, 1895, 1934, 1940, 1950], "atensorinv": 1266, "movedim": [1267, 1307, 1878, 1906, 1920, 1938], "tensorinv": 1267, "vandermond": [1268, 1862], "pmatrix": 1268, "x_n": [1268, 1350, 1351, 1394, 1395, 1401, 1425, 1465, 1843, 1900], "125": [1268, 1452, 1862, 1878], "overlin": [1269, 1865], "3223": 1269, "2815": 1269, "1944": [1269, 1911], "4345": 1270, "pickle_modul": [1272, 1753], "weights_onli": [1272, 1875, 1889], "mmap": [1272, 1892], "pickle_load_arg": 1272, "register_packag": [1272, 1916], "binaryio": [1272, 1753, 1922], "mmape": 1272, "untrust": [1272, 1875, 1889, 1922], "unsaf": [1272, 1623, 1626, 1878, 1903, 1922], "tamper": [1272, 1922], "ram": [1272, 1903], "surg": 1272, "utf": [1272, 1918, 1922], "unicodedecodeerror": 1272, "codec": 1272, "0x": 1272, "latin1": 1272, "byte_arrai": 1272, "niter": [1273, 1711, 1823], "ortho_iparam": 1273, "ortho_fparam": 1273, "ortho_bparam": 1273, "knyazev": 1273, "knyazev2001": 1273, "stathopoulosetal2002": 1273, "converg": [1273, 1465, 1621, 1678, 1679, 1703, 1899, 1911, 1914], "precondition": 1273, "eigenpair": 1273, "criterion": [1273, 1350, 1351, 1368, 1370, 1395, 1401, 1425, 1426, 1437, 1438, 1439, 1465, 1466, 1482, 1483, 1516, 1696, 1728, 1907], "fep": 1273, "eigenproblem": 1273, "iparam": 1273, "fparam": 1273, "bparam": 1273, "ivar": 1273, "fvar": 1273, "bvar": 1273, "tvar": 1273, "istep": 1273, "converged_count": 1273, "rerr": 1273, "force_stop": 1273, "2001": 1273, "precondit": 1273, "eigensolv": 1273, "siam": 1273, "sci": 1273, "517": 1273, "541": 1273, "epub": 1273, "doi": [1273, 1388, 1786], "1137": 1273, "s1064827500366124": 1273, "andrea": 1273, "stathopoulo": 1273, "kesheng": 1273, "2002": [1273, 1786], "2165": 1273, "2182": 1273, "s1064827500370883": 1273, "duerschetal2018": 1273, "jed": 1273, "duersch": 1273, "meiyu": 1273, "shao": 1273, "chao": 1273, "ming": 1273, "gu": 1273, "c655": 1273, "c676": 1273, "17m1129830": 1273, "log_": [1274, 1275, 1276, 1277, 1878, 1893], "7767": 1274, "3234": 1274, "2156": 1274, "2411": 1274, "5739": 1274, "5637": 1274, "4640": 1274, "1952": 1274, "4226": 1274, "5204": [1274, 1730], "5224": 1275, "9354": 1275, "7257": 1275, "1301": 1275, "2820": 1275, "0290": 1275, "1392": 1275, "8857": 1275, "6476": 1275, "0090": [1276, 1336, 1717, 1935], "9923": 1276, "5372": 1276, "2492": 1276, "8653": 1276, "7055": 1276, "7705": 1276, "2225": 1276, "8419": 1277, "8003": [1277, 1915], "9971": 1277, "5287": 1277, "0490": 1277, "2483": 1277, "0042": 1277, "9196": 1277, "3504": [1277, 1838], "logsumexp": [1278, 1878, 1893, 1920, 1935], "3069": 1278, "6867": 1278, "8731": 1278, "30000": 1278, "1269e": 1278, "log_2": 1279, "logaddexp": [1279, 1878, 1920], "limits_": 1280, "42296738": 1280, "04462666": 1280, "86278635": 1280, "94622083": 1280, "05277811": 1280, "39202815": 1280, "83525007": 1280, "84492621": 1280, "06084887": 1280, "06844475": 1280, "2611": [1281, 1835], "9254": 1281, "6213": [1281, 1911], "6843": 1281, "3242": 1281, "9665": 1281, "4539": 1281, "0887": [1281, 1935], "1336": 1281, "4025": 1281, "7089": [1281, 1377], "9032": 1281, "3031": 1281, "2589": 1287, "1135": 1287, "5481": [1287, 1300, 1911], "9566": 1287, "sum_j": [1288, 1424, 1467, 1469, 1589, 1801, 1935], "0593": [1288, 1911], "5696": 1288, "6859e": 1288, "compute_pivot": 1290, "transposit": [1290, 1842, 1934], "perm": 1290, "a_lu": 1290, "5558": 1290, "1684": 1290, "1551": 1290, "1940": 1290, "6189": 1290, "5497": 1290, "4526": 1290, "2526": 1290, "3285": 1290, "7988": 1290, "7175": 1290, "9701": 1290, "2634": 1290, "9255": 1290, "3459": 1290, "00000e": 1291, "8312": 1291, "unpack_data": [1292, 1878], "unpack_pivot": [1292, 1878], "l_": [1292, 1339, 1343, 1347, 1351, 1362, 1363, 1364, 1365, 1402, 1427], "u_": [1292, 1676, 1680], "3552": [1294, 1525], "3825": 1294, "8297": 1294, "3477": 1294, "2035": [1294, 1816, 1817, 1863, 1864], "2252": [1294, 1935], "5002": 1294, "6248": [1294, 1303], "1307": 1294, "0608": [1294, 1795], "1244": 1294, "0139": 1294, "6763": 1298, "7445": 1298, "2369": 1298, "argmax": [1298, 1342, 1427, 1557, 1558, 1559, 1833, 1878, 1920, 1958], "max_indic": 1298, "2360": 1298, "2942": 1298, "1222": [1298, 1911], "8475": 1298, "1949": 1298, "1127": 1298, "6702": 1298, "5717": 1298, "9207": 1298, "1297": 1298, "8768": 1298, "6172": 1298, "6060": 1298, "2432": 1298, "3288": 1300, "3367": 1300, "nanmean": [1300, 1878, 1920], "3841": 1300, "6320": 1300, "4254": 1300, "7384": 1300, "0131": 1300, "6549": [1300, 1778], "4279": 1300, "3350": 1300, "7694": 1300, "5600": [1300, 1486], "0842": 1300, "9580": 1300, "3623": 1300, "2343": [1300, 1895], "5085": 1300, "4599": 1300, "1807": 1300, "5219": 1301, "5212": 1301, "2202": 1301, "2505": 1301, "3982": 1301, "9948": 1301, "3518": 1301, "3131": 1301, "3180": [1301, 1934], "6993": 1301, "0436": 1301, "0438": 1301, "2270": 1301, "2751": 1301, "7303": 1301, "2192": 1301, "3321": 1301, "2488": 1301, "0778": 1301, "9510": 1301, "7048": 1301, "4742": [1301, 1851, 1935], "7125": [1301, 1803], "plot": [1302, 1902, 1924, 1939], "t_0": [1302, 1696], "t_": [1302, 1383, 1529, 1695, 1696, 1878, 1934, 1952], "s_0": 1302, "s_": [1302, 1340, 1341, 1380, 1484], "g_0": 1302, "g_": [1302, 1680, 1690, 1691], "g_i": 1302, "t_i": 1302, "0d": [1302, 1426], "xy": 1302, "50276": 1302, "cartesian_prod": [1302, 1878, 1920], "grid_x": 1302, "grid_i": 1302, "dstack": [1302, 1878, 1920, 1934], "matplotlib": [1302, 1939], "pyplot": [1302, 1939], "plt": 1302, "plot_surfac": 1302, "6750": 1303, "0857": [1303, 1848], "7197": [1303, 1871], "argmin": [1303, 1878, 1920, 1958], "min_indic": [1303, 1878], "1334": 1303, "2803": 1303, "4644": [1303, 1816, 1817, 1863, 1864], "2635": [1303, 1911], "3651": 1303, "0384": 1303, "0128": 1303, "7015": 1303, "1153": 1303, "9849": 1303, "1458": [1303, 1935], "5788": 1303, "deduc": [1305, 1934], "4851": 1305, "5037": 1305, "3633": 1305, "0760": 1305, "3362": [1307, 1308], "8437": [1307, 1308], "9627": [1307, 1308], "1727": [1307, 1308], "5173": [1307, 1308], "1398": [1307, 1308], "mpsalloc": [1309, 1310], "metal": [1310, 1319, 1888, 1891, 1912], "mpsgraph": 1310, "wait_until_complet": [1315, 1316], "signpost": [1315, 1316, 1317], "xcode": 1316, "recommendedmaxworkingsets": 1319, "unlimit": [1319, 1903], "1321": 1322, "4370": [1322, 1934], "1289": 1322, "0527": 1322, "3077": [1322, 1812], "0881": 1322, "1259": 1322, "0284": 1322, "2015": [1323, 1898, 1911], "6087": 1323, "1494": 1323, "5491": 1323, "260": 1323, "8663": 1323, "3137": 1323, "0700": 1323, "8378": 1323, "5146": 1323, "1216": 1323, "5244": 1323, "5767": 1323, "1363": 1323, "5877": 1323, "5083": 1323, "1614": 1323, "1645": 1323, "7021": 1323, "0085": 1323, "0367": 1323, "1567": 1323, "4312": 1323, "1019": 1323, "4394": 1323, "8753": 1323, "_sampl": 1324, "thtensorrandom": 1324, "320": [1324, 1460], "0404": 1326, "6361": 1326, "multigammaln": [1327, 1935], "4028e": 1328, "38": [1328, 1950], "1400e": 1328, "isnan": [1329, 1878, 1920, 1934, 1958], "midpoint": [1331, 1722], "weakli": [1333, 1334, 1935], "to_spars": [1334, 1799, 1878, 1915, 1920, 1934], "2262": [1336, 1717], "0682": [1336, 1717], "2866": [1336, 1717], "3940": [1336, 1717], "5x7": [1340, 1344], "7x7": [1340, 1344], "10x7": [1340, 1344], "cube": [1341, 1345, 1728], "d_": [1341, 1345, 1349, 1361, 1364, 1367, 1429, 1432, 1457, 1460, 1486, 1491, 1533, 1846, 1847, 1848, 1849], "5x7x9": [1341, 1345], "7x7x7": [1341, 1345], "7x9x8": [1341, 1345], "n_class": 1342, "cutoff": [1342, 1898], "div_valu": 1342, "head_bia": 1342, "edouard": 1342, "grave": [1342, 1357], "armand": 1342, "joulin": 1342, "moustapha": 1342, "ciss\u00e9": 1342, "grangier": 1342, "herv\u00e9": 1342, "j\u00e9gou": 1342, "imbalanc": 1342, "zipf": 1342, "law": 1342, "102": [1342, 1957], "1001": 1342, "1002": 1342, "_class": 1342, "maxunpool1d": [1343, 1427, 1560, 1857], "maxunpool2d": [1344, 1382, 1428, 1561, 1857], "maxunpool3d": [1345, 1383, 1429, 1562, 1857], "selu": [1346, 1379, 1526, 1878, 1898, 1918, 1920], "n_i": [1347, 1348, 1349, 1362, 1363, 1364, 1427, 1428, 1429, 1482, 1483], "c_j": [1347, 1348, 1349, 1427, 1428, 1429], "size_averag": [1350, 1351, 1368, 1370, 1394, 1400, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1505, 1506, 1514, 1516, 1541, 1545, 1546, 1556, 1564, 1565, 1566, 1567, 1568, 1576, 1587, 1588, 1599, 1878], "unreduc": [1350, 1351, 1370, 1395, 1401, 1425, 1441, 1465, 1483], "ell": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1483], "l_1": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1483], "l_n": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1483], "w_n": [1350, 1351, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786], "y_n": [1350, 1351, 1370, 1394, 1395, 1401, 1425, 1441, 1465, 1843, 1900], "lim_": [1350, 1900], "secondli": 1350, "straight": [1350, 1535], "rescal": [1350, 1351, 1370, 1438, 1439, 1441, 1467, 1469, 1505, 1506, 1516, 1568, 1626, 1655], "nbatch": [1350, 1351], "meantim": [1350, 1351, 1368, 1370, 1394, 1401, 1425, 1426, 1437, 1438, 1439, 1441, 1448, 1465, 1466, 1482, 1505, 1506, 1516, 1545, 1568, 1576, 1963], "pos_weight": [1351, 1506, 1878], "recal": [1351, 1905, 1939, 1956], "classif": [1351, 1357, 1370, 1437, 1439, 1441, 1466, 1517, 1876, 1898, 1926], "ell_c": 1351, "l_c": 1351, "p_c": 1351, "pai": [1351, 1506, 1917, 1938], "spacial": [1351, 1506], "random_": [1351, 1370, 1441, 1506, 1878, 1893, 1942], "hat": [1352, 1353, 1354, 1397, 1398, 1399, 1473], "terminologi": [1352, 1353, 1354, 1473], "tempor": [1352, 1354, 1357, 1473, 1486, 1517, 1544, 1602], "5d": [1354, 1399, 1486, 1533, 1544, 1571, 1602], "volumetr": [1354, 1473, 1486, 1533, 1544, 1602, 1603, 1604], "spatio": [1354, 1473], "in1_featur": 1355, "in2_featur": 1355, "in1": [1355, 1504], "in2": [1355, 1504], "blank": [1357, 1517, 1878, 1881], "zero_infin": [1357, 1517, 1878], "connectionist": [1357, 1517], "unseg": 1357, "longest": [1357, 1648, 1650, 1651, 1907], "input_length": [1357, 1517, 1878, 1907], "target_length": [1357, 1517, 1878], "s_n": 1357, "target_n": 1357, "unbatch": [1357, 1370, 1381, 1386, 1397, 1404, 1440, 1449, 1477, 1527], "s_min": 1357, "toronto": 1357, "edu": [1357, 1728], "icml_2006": 1357, "256": [1357, 1718, 1903, 1918], "background": [1357, 1365, 1533, 1571, 1913, 1930], "channel_shuffl": [1358, 1878, 1920], "_left": [1359, 1360, 1361, 1455, 1456, 1457, 1458, 1459, 1460, 1489, 1490, 1491, 1571], "_right": [1359, 1360, 1361, 1455, 1456, 1457, 1458, 1459, 1460, 1489, 1490, 1491, 1571], "0491": [1359, 1489], "7152": [1359, 1489], "0749": [1359, 1489], "3287": [1359, 1489], "8966": [1359, 1489], "1466": [1359, 1489], "2771": [1359, 1489], "6616": [1359, 1489], "4523": [1359, 1489], "1255": [1359, 1489], "6372": [1359, 1489, 1822], "1182": [1359, 1489], "8652": [1359, 1489], "_top": [1360, 1361, 1456, 1457, 1459, 1460, 1490, 1491, 1571], "_bottom": [1360, 1361, 1456, 1457, 1459, 1460, 1490, 1491, 1571], "6585": 1360, "4320": [1360, 1831], "8701": 1360, "4649": 1360, "_front": [1361, 1457, 1460, 1491, 1571], "_back": [1361, 1457, 1460, 1491, 1571], "_j": [1362, 1363], "star": [1362, 1363, 1364, 1880], "\u00e0": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1485], "trou": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1485], "harder": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1428, 1429, 1485], "nice": [1362, 1363, 1364, 1365, 1366, 1367, 1381, 1427, 1428, 1429, 1485, 1894, 1900, 1922], "prod_": [1363, 1364, 1366, 1367, 1380, 1484, 1682], "out_j": 1364, "deconvolut": [1365, 1366, 1367, 1511, 1512, 1513], "_pad": [1365, 1366, 1367], "dissimilar": [1368, 1394], "semi": [1368, 1394, 1876, 1898], "supervis": [1368, 1394], "vert": [1369, 1443, 1515], "_2": [1369, 1515, 1622, 1655], "ast_1": [1369, 1385], "ast_2": [1369, 1385], "ignore_index": [1370, 1441, 1516, 1568, 1878], "label_smooth": [1370, 1516, 1878], "unbalanc": [1370, 1441], "d_1": [1370, 1441, 1516, 1568], "d_2": [1370, 1441, 1516, 1568], "d_k": [1370, 1441, 1516, 1568], "_index": [1370, 1441], "logsoftmax": [1370, 1441, 1467, 1552], "nllloss": [1370, 1467, 1568, 1589, 1857], "blend": 1370, "smooth": [1370, 1395, 1465, 1470, 1516, 1689], "w_c": 1370, "truth": [1370, 1516, 1887, 1939], "rethink": [1370, 1516], "incept": [1370, 1516], "spectral_norm": [1371, 1645], "neuron": 1372, "detector": 1372, "dropout1d": [1374, 1878], "_freez": 1377, "sparseadam": [1377, 1921], "0251": 1377, "6902": [1377, 1719], "7172": 1377, "6431": 1377, "0748": 1377, "6969": 1377, "4970": 1377, "3448": 1377, "9685": 1377, "3677": 1377, "7265": 1377, "1685": 1377, "4362": 1377, "4004": [1377, 1803], "9400": 1377, "9124": 1377, "3616": 1377, "1151": 1377, "0309": 1377, "9315": 1377, "1655": [1377, 1903], "9897": 1377, "0635": 1377, "7895": 1377, "0364": 1377, "6778": 1377, "5803": 1377, "from_pretrain": [1377, 1378, 1955], "bag": [1378, 1525], "per_sample_weight": [1378, 1525, 1878], "embedding_sum": 1378, "8861": 1378, "4350": 1378, "0523": 1378, "1306": 1378, "5798": 1378, "0044": 1378, "7082": [1378, 1525], "2145": [1378, 1525], "6251": [1378, 1525], "6500": 1378, "satur": [1379, 1526], "alphadropout": [1379, 1499], "160": [1380, 1921], "unfold": [1381, 1878, 1920, 1938], "prod_d": [1381, 1485], "neighborhood": [1381, 1485], "col2im": [1381, 1878, 1920, 1958], "fold_param": [1381, 1485], "input_on": [1381, 1485], "output_ratio": [1382, 1383, 1528, 1529, 1878], "_random_sampl": [1382, 1383, 1528, 1529, 1878], "ben": [1382, 1383, 1528, 1529], "graham": [1382, 1383, 1528, 1529], "oh": [1382, 1383, 1528, 1529], "ow": [1382, 1383, 1528, 1529], "_ratio": [1382, 1383, 1529], "13x12": [1382, 1528], "kt": [1383, 1502, 1510, 1513, 1529, 1559], "ot": [1383, 1529], "13x12x11": [1383, 1529], "044715": [1384, 1531], "pack_sequ": [1386, 1404, 1449, 1650, 1652], "bias_ih": [1387, 1405, 1451], "bias_hh": [1387, 1405, 1451], "const": [1388, 1910], "homoscedast": [1388, 1530], "heteroscedast": [1388, 1530], "nix": 1388, "weigend": 1388, "1994": 1388, "icnn": 1388, "94": 1388, "orlando": 1388, "fl": 1388, "usa": [1388, 1939], "374138": 1388, "instancenorm": [1389, 1927], "layernorm": [1389, 1397, 1398, 1399, 1477, 1479, 1481, 1547, 1895, 1927, 1963], "shrinkag": [1390, 1471, 1536, 1592], "mobilenetv3": [1392, 1538], "_val": 1393, "l1loss": [1395, 1465, 1546], "outlier": [1395, 1465, 1925, 1926], "huber": [1395, 1465], "smoothl1loss": [1395, 1587], "insensit": 1396, "unused_argument1": 1396, "unused_argument2": 1396, "ingredi": [1397, 1398, 1399], "styliz": [1397, 1398, 1399], "rgb": [1398, 1399, 1939], "color": [1399, 1879, 1880, 1939, 1954], "log_target": [1400, 1545, 1878], "kl": [1400, 1545, 1876], "summaris": 1400, "loss_pointwis": 1400, "batchmean": [1400, 1545], "kl_loss": 1400, "mae": 1401, "f_t": [1404, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "hf": [1404, 1405], "g_t": [1404, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "ig": [1404, 1405], "hg": [1404, 1405], "o_t": 1404, "ho": [1404, 1405], "c_t": 1404, "odot": 1404, "forget": [1404, 1879, 1880], "proj_siz": [1404, 1450], "1402": 1404, "c_0": [1404, 1405], "proj": 1404, "c_n": 1404, "w_ii": 1404, "w_if": 1404, "w_ig": 1404, "w_io": 1404, "w_hi": 1404, "w_hf": 1404, "w_hg": 1404, "w_ho": 1404, "b_ii": 1404, "b_if": 1404, "b_ig": 1404, "b_io": 1404, "b_hi": 1404, "b_hf": 1404, "b_hg": 1404, "b_ho": 1404, "weight_hr_l": 1404, "_revers": 1404, "h_1": 1405, "c_1": 1405, "time_step": 1405, "_shape": 1406, "sentence_length": 1406, "lazymodulemixin": [1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419], "cls_to_becom": [1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1617], "convtranspose1d": [1413, 1511, 1857, 1927], "convtranspose3d": [1415, 1513, 1857, 1927], "instancenorm1d": [1416, 1543, 1927], "instancenorm2d": [1417, 1543, 1927], "instancenorm3d": [1418, 1543, 1927], "uninitializedparamet": [1419, 1605, 1876], "lrn": 1422, "signal_2d": 1422, "signal_4d": 1422, "output_2d": 1422, "output_4d": 1422, "x_j": [1424, 1467, 1469, 1589, 1801, 1908, 1935], "80827": [1430, 1431, 1432], "unpool": [1430, 1431, 1432], "maxpool3d": [1432, 1559, 1562, 1857, 1927], "unpooled_output": 1432, "t_destin": 1434, "lrelu": [1435, 1911], "hing": [1437, 1439], "sum_i": [1438, 1439, 1466], "nelement": [1438, 1466], "jointli": 1440, "concat": [1440, 1878, 1920], "head_1": 1440, "head_h": 1440, "head_i": 1440, "qw_i": 1440, "kw_i": 1440, "vw_i": 1440, "scaled_dot_product_attent": [1440, 1878, 1920], "fastpath": [1440, 1952], "inference_mod": [1440, 1481], "nestedtensor": [1440, 1481, 1895], "multihead_attn": 1440, "e_q": 1440, "e_k": 1440, "e_v": 1440, "_head": [1440, 1477], "merge_mask": 1440, "mask_typ": 1440, "merged_mask": 1440, "nll": 1441, "crossentropyloss": [1441, 1516], "num_paramet": 1442, "nchannel": 1442, "decai": [1442, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1694, 1698, 1700, 1701, 1704, 1705, 1707, 1779, 1921], "legitim": [1442, 1533, 1906], "vert_p": 1443, "fromkei": 1444, "popitem": [1444, 1920], "setdefault": [1444, 1920], "upscale_factor": [1446, 1574, 1878], "upscal": 1446, "video": [1446, 1447, 1894, 1939, 1950], "shi": [1446, 1447], "2016": [1446, 1447, 1483], "_factor": [1446, 1447, 1486, 1487, 1488], "pixel_shuffl": [1446, 1878, 1920, 1927], "downscale_factor": [1447, 1575, 1878], "pixelshuffl": [1447, 1574, 1575, 1927], "downscal": 1447, "pixel_unshuffl": [1447, 1878, 1920, 1927], "log_input": [1448, 1576, 1878], "poisson": [1448, 1576, 1779, 1876, 1878, 1920], "stirl": [1448, 1576], "hh": [1449, 1451], "flatten_paramet": 1450, "3333333333333333": [1452, 1694, 1700, 1878], "leaki": [1452, 1581, 1898], "rectifi": [1452, 1453, 1578, 1898], "liner": 1452, "empir": 1452, "1505": 1452, "00853": 1452, "crelu": 1453, "1603": 1453, "05201": 1453, "480": 1460, "6732632423543772848170429916717": [1461, 1584], "0507009873554804934193349852946": [1461, 1584], "kaiming_norm": 1461, "kaiming_normal_": [1461, 1876, 1882, 1898], "initialis": 1461, "calculate_gain": [1461, 1876, 1882, 1898], "modulelist": [1462, 1911], "cascad": 1462, "relu2": [1462, 1605], "swish": [1463, 1586], "coin": [1463, 1586], "explod": 1465, "cnn": [1465, 1925], "ross": 1465, "girshick": 1465, "quadrat": [1465, 1907], "huberloss": [1465, 1542], "lie": [1467, 1469, 1589, 1801, 1935, 1939, 1952], "w_j": 1468, "soft": [1471, 1535, 1592], "softshrinkag": 1471, "convert_sync_batchnorm": 1473, "r1": 1473, "sync_bn_network": 1473, "ddp_sync_bn_network": 1473, "sync_bn_modul": 1473, "d_model": [1477, 1478, 1479, 1480, 1481], "nhead": [1477, 1478, 1479, 1480, 1481], "num_encoder_lay": 1477, "num_decoder_lay": 1477, "dim_feedforward": [1477, 1479, 1481], "custom_encod": 1477, "custom_decod": 1477, "layer_norm_ep": [1477, 1479, 1481], "norm_first": [1477, 1479, 1481], "ashish": [1477, 1479, 1481], "vaswani": [1477, 1479, 1481], "noam": [1477, 1479, 1481], "shazeer": [1477, 1479, 1481], "niki": [1477, 1479, 1481], "parmar": [1477, 1479, 1481], "jakob": [1477, 1479, 1481], "uszkoreit": [1477, 1479, 1481], "llion": [1477, 1479, 1481], "jone": [1477, 1479, 1481], "aidan": [1477, 1479, 1481], "gomez": [1477, 1479, 1481], "lukasz": [1477, 1479, 1481], "illia": [1477, 1479, 1481], "polosukhin": [1477, 1479, 1481], "6000": [1477, 1479, 1481, 1486, 1725, 1773, 1776], "6010": [1477, 1479, 1481], "feedforward": [1477, 1479, 1481, 1898], "transformer_model": 1477, "word_language_model": 1477, "src_mask": [1477, 1481], "tgt_mask": [1477, 1478, 1479], "memory_mask": [1477, 1478, 1479], "src_key_padding_mask": [1477, 1480, 1481], "tgt_key_padding_mask": [1477, 1478, 1479], "memory_key_padding_mask": [1477, 1478, 1479], "src_is_caus": 1477, "tgt_is_caus": [1477, 1478, 1479], "memory_is_caus": [1477, 1478, 1479], "_mask": [1477, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644], "_key_padding_mask": 1477, "generate_square_subsequent_mask": 1477, "sz": 1477, "decoder_lay": [1478, 1479], "transformerdecoderlay": 1478, "transformer_decod": 1478, "attn": [1479, 1481], "encoder_lay": [1480, 1481], "enable_nested_tensor": 1480, "mask_check": 1480, "bert": [1480, 1955], "1810": 1480, "04805": 1480, "transformerencoderlay": 1480, "transformer_encod": 1480, "flashattent": [1481, 1583], "triplet": [1482, 1483], "x3": 1482, "balnta": [1482, 1483], "riba": [1482, 1483], "a_i": [1482, 1483, 1781], "p_i": [1482, 1483], "rm": [1482, 1483], "bf": [1482, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "rvert_p": [1482, 1569], "tripletmarginwithdistanceloss": [1482, 1600], "triplet_loss": [1482, 1483], "distance_funct": [1483, 1600], "l_i": 1483, "tripletmarginloss": [1483, 1599], "l_p": [1483, 1569], "pairwisedist": [1483, 1572], "penal": [1483, 1911], "distant": 1483, "anchor_id": 1483, "positive_id": 1483, "negative_id": 1483, "l_infin": 1483, "bmva": 1483, "bmvc": 1483, "paper119": 1483, "unflattened_s": 1484, "namedtensor": 1484, "namedshap": 1484, "u_1": 1484, "u_n": 1484, "u_i": 1484, "im2col": [1485, 1878, 1920], "fold": [1485, 1823, 1878, 1888, 1918, 1928, 1934], "2x3": 1485, "3x4": 1485, "inp_unf": 1485, "out_unf": 1485, "recompute_scale_factor": [1486, 1544], "bicub": [1486, 1533, 1544, 1602, 1857], "trilinear": [1486, 1533, 1544, 1602, 1857], "input_3x3": 1486, "4375": 1486, "8125": 1486, "9375": 1486, "2400": [1486, 1838], "1200": [1486, 1750, 1903], "8800": 1486, "4400": [1486, 1838], "7200": 1486, "0400": 1486, "2800": [1486, 1773], "3600": 1486, "5200": 1486, "6400": 1486, "1678": 1490, "4418": 1490, "9466": [1490, 1935], "9604": 1490, "4219": 1490, "5241": 1490, "9162": 1490, "5436": [1490, 1838], "6446": 1490, "adaptiveavgpool1d": [1492, 1927], "tripl": [1494, 1497], "adaptivemaxpool1d": 1495, "adaptivemaxpool2d": [1496, 1857], "adaptivemaxpool3d": 1497, "ill": [1498, 1914], "avgpool1d": [1500, 1927], "st": [1502, 1510, 1513, 1559, 1963], "avgpool3d": [1502, 1857, 1927], "iT": [1502, 1510, 1513], "padt": [1502, 1510, 1513], "score": [1506, 1583, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641, 1876], "dt": [1510, 1513, 1935, 1963], "out_padw": [1511, 1512, 1513], "out_padh": [1512, 1513], "out_padt": 1513, "cosineembeddingloss": 1514, "ctcloss": [1517, 1857], "charact": [1517, 1770, 1877, 1880, 1894, 1930], "elu": [1523, 1878, 1918, 1920, 1927], "embedding_matrix": [1524, 1525], "8490": 1524, "9625": 1524, "6753": 1524, "7761": 1524, "6108": 1524, "6246": 1524, "9751": 1524, "3618": 1524, "4161": [1524, 1934], "2419": 1524, "7383": 1524, "0237": 1524, "7794": 1524, "0528": 1524, "3385": 1524, "8612": 1524, "1867": 1524, "5384": 1524, "8720": 1524, "6262": 1524, "7471": 1524, "embeddingbag": [1525, 1857, 1925, 1927, 1940], "3397": 1525, "5545": 1525, "5893": 1525, "4386": 1525, "5882": 1525, "featurealphadropout": 1526, "gaussiannllloss": 1530, "border": 1533, "affine_grid": [1533, 1878], "extrema": 1533, "pil": [1533, 1544], "overshoot": [1533, 1544, 1602], "gumbel": [1535, 1876], "y_hard": 1535, "y_soft": 1535, "hardtanh": [1540, 1878, 1888, 1920, 1927, 1958], "hingeembeddingloss": 1541, "use_input_stat": [1543, 1878], "antialia": 1544, "anti": 1544, "pillow": [1544, 1939], "buggi": 1544, "inter_nearest": 1544, "104157": 1544, "kldivloss": 1545, "batchsiz": [1545, 1804, 1805, 1806, 1808, 1809, 1934], "leaky_relu": [1549, 1878, 1898, 1920, 1927, 1958], "localresponsenorm": 1551, "_stacklevel": [1552, 1589, 1590, 1878], "lppool1d": 1554, "lppool2d": 1555, "marginrankingloss": 1556, "max_unpool1d": [1557, 1878], "multimarginloss": 1565, "multilabelmarginloss": 1566, "multilabelsoftmarginloss": 1567, "n_0": 1569, "n_": 1569, "n_k": 1569, "everywher": [1570, 1818, 1921], "circularpad2d": 1571, "constantpad2d": 1571, "reflectionpad2d": [1571, 1857], "replicationpad2d": [1571, 1857], "t4d": 1571, "p1d": 1571, "p2d": 1571, "p3d": 1571, "pixelunshuffl": [1575, 1927], "poissonnllloss": 1576, "rrelu": [1582, 1878, 1920], "dropout_p": [1583, 1878], "attn_bia": 1583, "temp_mask": 1583, "ev": 1583, "legend": 1583, "softmarginloss": 1588, "module_kwarg": 1598, "upsample_trilinear": 1603, "fo": 1603, "spatia": 1604, "mixin": [1605, 1876], "dry": 1605, "lazymlp": 1605, "lazylinear": 1605, "lazy_mlp": 1605, "8832e": 1605, "5636e": 1605, "1598e": 1605, "5637e": 1605, "8788e": 1605, "0042e": 1605, "0019": 1605, "lazymodul": 1605, "full_mlp": 1605, "3837": [1605, 1719], "0907": 1605, "6708": 1605, "5223": 1605, "9028": 1605, "2851": 1605, "6813": 1605, "5766": 1605, "8678": 1605, "1320": 1605, "2938": 1605, "0679": [1605, 1848], "2793": [1605, 1662], "1088": 1605, "1795": 1605, "2301": 1605, "2807": 1605, "2479": 1605, "1091": 1605, "has_uninitialized_param": 1605, "initialize_paramet": 1605, "register_backward_pre_hook": 1611, "check_reduct": 1614, "delay_all_reduce_named_param": 1614, "param_to_hook_all_reduc": 1614, "optimizer_param": 1614, "loss_func": [1614, 1930], "consume_prefix_in_state_dict_if_pres": 1614, "nccl2": 1614, "dictat": [1614, 1880], "megabyt": 1614, "mb": [1614, 1903], "detach_": [1614, 1878, 1893, 1927, 1934], "ddp_logging_data": 1614, "can_set_static_graph": 1614, "model_ddp": 1614, "_get_ddp_logging_data": 1614, "divide_by_initial_world_s": 1614, "syncbatchnorm": 1614, "deplet": 1614, "pariti": 1614, "discrep": [1614, 1728, 1908], "another_input": 1614, "predivid": 1614, "encode_and_decod": 1614, "encoded_tensor": 1614, "decoded_tensor": 1614, "error_if_nonfinit": 1618, "foreach": [1618, 1619, 1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1921], "clip_valu": 1619, "orthogonal_map": 1621, "use_trivi": 1621, "qq": 1621, "matrix_exp": [1621, 1878, 1920], "caylei": 1621, "thin": [1621, 1721], "manifold": 1621, "register_parametr": [1621, 1622, 1623, 1624, 1655, 1896], "orth_linear": 1621, "parametrizedlinear": [1621, 1622], "moduledict": [1621, 1622, 1879, 1911], "parametrizationlist": [1621, 1622, 1626], "_orthogon": 1621, "9332e": 1621, "n_power_iter": [1622, 1655], "sn": [1622, 1655], "discrimin": [1622, 1655], "adversari": [1622, 1655], "lipschitz": 1622, "reimplement": [1622, 1655], "_spectralnorm": 1622, "convtranspos": [1622, 1655], "snm": 1622, "0081": 1622, "amaxbackward0": 1622, "original0": [1623, 1626, 1658], "original1": [1623, 1626, 1658], "tensor_nam": [1623, 1625, 1626, 1627], "right_invers": [1623, 1626], "out_rnn": 1624, "rnn_cell": 1624, "simplic": [1626, 1930, 1931], "inbuilt": 1626, "unparametr": 1626, "rankon": 1626, "surject": 1626, "s0_sqrt": 1626, "linear_rank_on": 1626, "matrix_rank": 1626, "leave_parametr": 1627, "unparametris": 1627, "prune": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1934], "skeleton": 1628, "compute_mask": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635], "importance_scor": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1637, 1640, 1641], "apply_mask": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635], "pruned_tensor": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635], "default_mask": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635], "_orig": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1644], "undon": [1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1644], "unprun": [1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643], "basepruningmethod": [1633, 1639], "add_pruning_method": 1633, "pruning_typ": [1633, 1637], "unstructur": [1633, 1637], "ravel": [1633, 1878, 1920], "nonmask": 1633, "bias_mask": [1636, 1638], "pruning_method": 1637, "parameters_to_prun": 1637, "l1unstructur": 1637, "parameters_to_vector": 1637, "forward_pre_hook": [1639, 1911], "random_unstructur": [1639, 1644], "odict_kei": 1640, "weight_orig": 1640, "weight_mask": [1640, 1643], "columns_prun": 1642, "t_modul": [1645, 1646, 1655, 1658], "weight_norm": 1646, "sorted_indic": [1647, 1649, 1650, 1652], "unsorted_indic": [1647, 1649, 1650, 1652], "abc": [1647, 1880], "axbc": 1647, "throughout": [1647, 1908, 1911, 1925], "conform": [1647, 1911], "is_cuda": [1647, 1893, 1920, 1936], "enforce_sort": [1648, 1649, 1650], "unsort": [1648, 1649, 1757], "shortest": 1648, "uncondition": [1648, 1875, 1905, 1964], "pad_sequ": [1649, 1653, 1878, 1920], "padding_valu": [1650, 1651, 1878], "total_length": [1650, 1907], "seq_unpack": 1650, "lens_unpack": 1650, "packed_sequ": 1652, "unpacked_sequ": 1652, "padded_sequ": 1653, "unpad": 1653, "unstack": 1653, "as_tensor": [1653, 1836, 1878, 1895, 1905, 1920, 1939, 1940, 1941], "unpadded_sequ": 1653, "module_cl": [1654, 1930], "5846e": 1654, "29": [1654, 1786, 1918], "8307e": 1654, "5250e": 1654, "1210e": 1654, "4677e": 1654, "5915e": 1654, "4013e": 1654, "weight_u": 1655, "parameters_and_buff": 1656, "decoupl": [1658, 1679, 1682], "weight_g": [1658, 1878], "weight_v": 1658, "1602": 1658, "07868": 1658, "modern": [1658, 1914, 1947], "bother": 1658, "102999": 1658, "remove_parametr": 1658, "as_tupl": [1660, 1871], "complexfloat": [1661, 1670], "0425": 1662, "7969": 1662, "2925": 1662, "7229": 1662, "2134": 1662, "0505": 1662, "1408": 1662, "0563": 1662, "0566": 1662, "0732": [1662, 1838], "0687": 1662, "1177": 1662, "2303": 1662, "1552": 1662, "6148": 1662, "6535": 1662, "8318": 1662, "3987": 1662, "9544": [1662, 1729], "6048": 1662, "7909": 1662, "120": [1664, 1939], "dynamic_shap": [1667, 1918, 1960], "fake_context": [1667, 1668, 1918], "onnx_registri": 1667, "model_proto": [1668, 1669], "input_adapt": 1668, "output_adapt": 1668, "diagnostic_context": [1668, 1671], "adapt_torch_inputs_to_onnx": 1668, "model_arg": [1668, 1918], "model_kwarg": [1668, 1918], "xdoctest": [1668, 1669, 1918], "torch_doctest_onnx": [1668, 1669, 1918], "func_with_nested_input_structur": 1668, "x_dict": 1668, "y_tupl": 1668, "y1": [1668, 1799, 1948], "y2": [1668, 1799, 1948], "y3": 1668, "export_output": [1668, 1669, 1918], "adapt_torch_outputs_to_onnx": 1668, "model_output": 1668, "func_returning_tupl": 1668, "pt_output": 1668, "diagnosticcontext": 1668, "onnxfakecontext": [1668, 1918], "modelproto": [1668, 1669], "bufferediobas": [1668, 1669], "_initi": 1668, "suffix": [1668, 1939, 1940], "model_initi": 1668, "enable_fake_mod": [1668, 1918], "exportoutputseri": 1668, "protobuf": [1668, 1669, 1918], "exportoutput": [1669, 1918], "mymodel": [1669, 1880, 1899, 1913, 1918], "protobufexportoutputseri": 1669, "serializetostr": 1669, "exported_model": 1669, "from_valu": 1670, "onnx_typ": 1670, "tensorprotodatatyp": 1670, "torch_c_value_with_type_float": 1670, "from_dtyp": 1670, "jit_type_bas": 1670, "safer": [1670, 1887], "onnxexportererror": [1670, 1918], "symbolicvalueerror": 1670, "onnx_compat": 1670, "scalar_nam": 1670, "liter": [1670, 1878, 1881, 1894, 1922, 1962], "complexhalf": 1670, "complexdoubl": 1670, "torch_nam": 1670, "int8_t": 1670, "int64_t": 1670, "int16_t": 1670, "enclos": [1671, 1880], "opset": [1672, 1918, 1919, 1920, 1949, 1958], "get_op_funct": 1672, "op_nam": [1672, 1884], "is_registered_op": 1672, "register_op": 1672, "is_complex": [1672, 1878, 1920, 1934, 1937], "onnxscript": [1672, 1918], "tracedonnxfunct": 1672, "sctip": 1672, "verif": [1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1918], "input_arg": [1673, 1918], "params_dict": 1673, "export_opt": [1673, 1918], "_excluded_node_kind": 1673, "frozenset": [1673, 1880], "scalarimplicit": [1673, 1920], "prim": [1673, 1877, 1918, 1920], "listconstruct": [1673, 1877], "all_mismatch_leaf_graph_info": 1673, "essential_node_count": 1673, "essential_node_kind": 1673, "export_repro": 1673, "repro_dir": 1673, "repro": [1673, 1953, 1963], "test_": 1673, "test_data_set_0": 1673, "input_0": [1673, 1918], "pb": [1673, 1918], "input_1": [1673, 1918], "output_0": 1673, "output_1": 1673, "find_mismatch": [1673, 1918], "exhibit": [1673, 1918, 1951, 1963], "verificationopt": [1673, 1918], "find_partit": 1673, "has_mismatch": 1673, "pretty_print_mismatch": 1673, "pretty_print_tre": 1673, "graph_info": [1673, 1918], "__2": [1673, 1918], "__1": [1673, 1918], "__3": [1673, 1918], "110": [1673, 1918], "verify_export": 1673, "onnx_graph": 1673, "onnx_out": 1673, "pt_out": 1673, "ignore_non": 1674, "check_shap": 1674, "check_dtyp": [1674, 1941], "onnxbackend": 1674, "onnx_runtime_cpu": 1674, "remained_onnx_input_idx": 1674, "acceptable_error_percentag": 1674, "percentag": [1674, 1703, 1779], "weight_decai": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692, 1911], "1e6": 1675, "sizeof": [1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1936, 1956], "tensorlist": [1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "prohibit": [1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691, 1903, 1916], "impair": [1675, 1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "removeablehandl": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "register_load_state_dict_pre_hook": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "register_state_dict_post_hook": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "register_step_post_hook": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "register_step_pre_hook": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "new_arg": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "new_kwarg": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1688, 1689, 1690, 1691, 1692], "momentum_buff": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1685, 1688, 1689, 1690, 1691, 1692], "reevalu": [1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1686, 1688, 1689, 1690, 1691, 1692, 1921], "rho": 1676, "110mm": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "4pt": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "textbf": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "theta_0": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "v_0": [1676, 1678, 1679, 1682, 1688, 1689], "leftarrow": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "u_0": [1676, 1680], "hspace": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "5mm": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "nabla_": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "theta_": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "10mm": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "v_t": [1676, 1678, 1679, 1682, 1688, 1689], "v_": [1676, 1678, 1679, 1682, 1688, 1689, 1691], "2_t": [1676, 1677, 1678, 1679, 1682, 1688, 1689], "21mm": 1676, "u_t": [1676, 1680], "theta_t": [1676, 1677, 1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "lr_decai": 1677, "initial_accumulator_valu": 1677, "12mm": [1677, 1688], "_sum_0": 1677, "tild": [1677, 1689], "_sum_t": 1677, "_sum_": 1677, "subgradi": 1677, "999": [1678, 1679, 1680, 1682, 1688, 1692, 1916, 1921], "amsgrad": [1678, 1679], "beta_1": [1678, 1679, 1680, 1682, 1688], "beta_2": [1678, 1679, 1680, 1682, 1688], "13mm": [1678, 1679, 1680, 1682, 1688, 1689, 1690, 1691], "textit": [1678, 1679, 1682, 1691], "m_0": [1678, 1679, 1680, 1682, 1688], "widehat": [1678, 1679, 1682, 1688], "m_t": [1678, 1679, 1680, 1682, 1688], "m_": [1678, 1679, 1680, 1682, 1688, 1934], "ungraph": [1678, 1679, 1682], "002": [1680, 1682], "t_1": 1680, "2e": [1680, 1682], "max_it": 1681, "max_ev": 1681, "tolerance_grad": 1681, "tolerance_chang": 1681, "history_s": 1681, "line_search_fn": 1681, "bfg": 1681, "minfunc": 1681, "intens": [1681, 1914], "param_byt": 1681, "strong_wolf": 1681, "momentum_decai": 1682, "004": 1682, "decoupled_weight_decai": 1682, "gamma_t": 1682, "psi": [1682, 1935], "_decai": 1682, "mu_t": 1682, "96": 1682, "mu_": 1682, "11mm": 1682, "incorpor": [1682, 1925], "nesterov": [1682, 1691], "4e": 1682, "adamw": [1682, 1688, 1921], "nadamw": 1682, "weightdecai": 1688, "18mm": 1688, "rho_": 1688, "6mm": 1688, "rho_t": 1688, "t_2": 1688, "l_t": 1688, "_0": [1689, 1906, 1922], "av": 1689, "8mm": 1689, "3mm": 1689, "lectur": 1689, "hinton": 1689, "step_siz": [1690, 1707], "resili": [1690, 1914], "eta_": [1690, 1695, 1696], "etaplu": 1690, "etaminu": 1690, "gamma_": [1690, 1935], "0_": 1690, "eta_0": 1690, "i_": [1690, 1838], "15mm": [1690, 1691], "eta_t": [1690, 1695, 1696], "dampen": 1691, "sutskev": 1691, "veloc": 1691, "conflat": 1692, "is_spars": [1692, 1893, 1920, 1934, 1936], "maskedtensor": [1692, 1934], "outweigh": [1692, 1963], "gain": [1692, 1898, 1945, 1955, 1957], "rig": 1692, "insist": 1692, "lr_schedul": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1921], "chainabl": [1693, 1703], "081": 1693, "729": [1693, 1706], "6561": [1693, 1866], "59049": 1693, "scheduler1": [1693, 1706, 1921], "constantlr": [1693, 1706], "total_it": [1693, 1694, 1700, 1704, 1706], "scheduler2": [1693, 1706, 1921], "exponentiallr": [1693, 1706, 1921], "get_last_lr": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707], "print_lr": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707], "is_verbos": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707], "__dict__": [1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707], "last_epoch": [1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707], "mileston": [1694, 1700, 1701, 1706, 1921], "simultan": [1694, 1695, 1700, 1701, 1707, 1900, 1930], "025": [1694, 1700], "t_max": [1695, 1921], "eta_min": [1695, 1696], "anneal": [1695, 1696, 1703, 1921], "cur": [1695, 1696], "sgdr": [1695, 1696], "2k": 1695, "sole": 1695, "t_mult": 1696, "interleav": 1696, "base_lr": [1697, 1703], "max_lr": [1697, 1703], "step_size_up": 1697, "step_size_down": 1697, "scale_fn": 1697, "scale_mod": 1697, "cycle_momentum": [1697, 1703], "base_momentum": [1697, 1703], "max_momentum": [1697, 1703], "cyclic": 1697, "forth": [1697, 1862, 1875, 1924, 1948], "amplitud": [1697, 1703], "triangular2": 1697, "exp_rang": 1697, "bckenstler": 1697, "train_batch": [1697, 1703], "get_lr": 1697, "lr_lambda": [1699, 1702], "lambda1": 1699, "lambda2": 1699, "start_factor": 1700, "end_factor": 1700, "03125": 1700, "0375": 1700, "04375": 1700, "005": [1701, 1707], "lmbda": 1702, "total_step": 1703, "steps_per_epoch": 1703, "pct_start": 1703, "anneal_strategi": [1703, 1921], "div_factor": 1703, "final_div_factor": 1703, "three_phas": 1703, "1cycl": 1703, "fastai": 1703, "unpublish": 1703, "initial_lr": 1703, "min_lr": [1703, 1705], "1e4": 1703, "annihil": 1703, "00075": 1704, "00050": 1704, "00025": 1704, "patienc": 1705, "threshold_mod": 1705, "cooldown": 1705, "stagnat": 1705, "new_lr": 1705, "hasn": [1705, 1890, 1922], "optimum": 1705, "dynamic_threshold": 1705, "val_loss": 1705, "81": 1706, "mn": 1709, "pca": [1711, 1934], "overestim": [1711, 1823], "nathan": [1711, 1823], "halko": [1711, 1823], "gunnar": [1711, 1823], "martinsson": [1711, 1823], "tropp": [1711, 1823], "probabilist": [1711, 1823], "0909": [1711, 1823], "4061": [1711, 1823], "na": [1711, 1823], "cmath": [1715, 1878], "4142j": 1715, "4331": 1718, "2475": [1718, 1821], "6834": 1718, "2791": 1718, "1875": 1718, "5561": 1718, "4670": 1718, "5428": 1719, "5854": 1719, "5261": [1719, 1822], "1857": 1719, "2498": 1719, "1646": [1719, 1903], "0705": 1719, "0629": 1719, "2962": 1719, "0821": [1719, 1779], "1831": 1719, "type1": [1720, 1878], "type2": [1720, 1878], "2117": 1722, "9765": 1722, "1707": 1722, "4884": 1722, "5661": 1722, "5795": 1722, "5280": 1722, "9206": 1722, "quantization_schem": [1723, 1724, 1725, 1726, 1727], "int_repr": [1723, 1724, 1878, 1920], "nchw": [1725, 1939], "qx": [1725, 1726, 1727], "00001": 1725, "max_pool1d": [1726, 1878, 1920, 1927], "max_pool2d": [1727, 1878, 1920, 1927], "quasirandom": 1728, "scrambl": 1728, "sobol": 1728, "quasi": 1728, "21201": 1728, "web": 1728, "unsw": 1728, "au": [1728, 1922], "fkuo": 1728, "art": 1728, "owen": 1728, "niederreit": 1728, "xing": 1728, "466": 1728, "489": 1728, "decemb": 1728, "1998": 1728, "zh": 1728, "vychisl": 1728, "phy": 1728, "784": 1728, "802": 1728, "1967": 1728, "soboleng": 1728, "draw_base2": 1728, "base2": 1728, "fast_forward": 1728, "142": 1729, "283": 1729, "570": 1729, "359": 1729, "9894": 1729, "2503": 1730, "3525": 1730, "5673": 1730, "8237": 1730, "5781": 1730, "6879": 1730, "3816": 1730, "7249": 1730, "0998": 1730, "1436": 1734, "9966": 1734, "3426": 1734, "6366": 1734, "5954": 1734, "8929": 1734, "0923": 1734, "1719": 1734, "4709": 1734, "1996": 1734, "4595": 1740, "4314": 1740, "flat": [1743, 1786, 1878, 1895, 1918, 1934], "n2": 1743, "n3": 1743, "negat": [1746, 1830, 1880], "is_neg": [1746, 1878, 1920], "equidist": 1750, "inexact": 1750, "1234567": 1750, "1230": 1750, "vstack": [1751, 1878, 1920, 1934], "0370": 1752, "2970": 1752, "5420": 1752, "9105": 1752, "8351": 1752, "pickle_protocol": [1753, 1922], "default_protocol": 1753, "_use_new_zipfile_seri": 1753, "zipfil": [1753, 1922], "sorted_sequ": [1757, 1878], "sorter": [1757, 1878], "sorted_sequence_1d": 1757, "select_copi": [1759, 1878, 1920], "slight": [1761, 1934, 1937], "92701": [1761, 1937], "complaint": 1762, "bfloat16_3x": 1765, "denorm": [1766, 1914], "sse3": 1766, "323": 1766, "88131e": 1766, "324": 1766, "is_train": [1767, 1942], "interop": 1768, "intraop": 1769, "edgeitem": 1770, "linewidth": 1770, "sci_mod": 1770, "shamelessli": 1770, "repr": [1770, 1880], "sane": 1770, "_tensor_str": 1770, "_formatt": 1770, "12345": 1770, "1235": 1770, "excess": [1772, 1953], "24j": 1773, "8000j": 1773, "9600j": 1773, "4472": [1773, 1911], "8944j": 1773, "expit": [1774, 1935], "2222": [1776, 1836], "4444": 1776, "8889": 1776, "4901e": 1777, "4000e": 1777, "0077e": 1777, "4923e": 1777, "waveform": [1778, 1779, 1780], "1564": 1778, "4540": 1778, "8910": 1778, "9877": 1778, "1423": [1778, 1800], "4154": 1778, "8413": [1778, 1935], "0302": 1779, "2231": 1779, "6065": 1779, "5400e": 1779, "3546e": 1779, "4788e": 1779, "8316e": 1779, "02": [1779, 1780, 1785], "3534e": 1779, "0065e": [1780, 1785], "1875e": [1780, 1785], "3937e": [1780, 1785], "2465e": [1780, 1785], "8250e": [1780, 1785], "9858e": [1780, 1785], "1365e": [1780, 1785], "8659e": [1780, 1785], "4658e": [1780, 1785], "3941e": [1780, 1785], "5400": 1781, "3376": 1781, "4200": 1781, "9136": 1781, "wit": [1781, 1877], "0955": [1781, 1782, 1784], "3455": [1781, 1782, 1784], "6545": [1781, 1782, 1784], "9045": [1781, 1782, 1784], "0800": [1782, 1783], "1876": [1782, 1783], "4601": [1782, 1783], "7700": [1782, 1783], "9723": [1782, 1783], "1679": 1783, "3979": 1783, "6821": 1783, "9121": 1783, "1170": 1784, "9698": 1784, "36358": 1786, "z_n": [1786, 1900], "48917": 1786, "2z_n": 1786, "13659": 1786, "3z_n": 1786, "01064": 1786, "4z_n": 1786, "\u03c0": 1786, "sidelob": 1786, "transact": 1786, "acoust": 1786, "speech": 1786, "84": 1786, "91": 1786, "feb": 1786, "1981": 1786, "tassp": 1786, "1163506": 1786, "heinzel": 1786, "spectrum": [1786, 1914], "dft": 1786, "comprehens": [1786, 1880, 1881, 1894, 1903, 1909, 1925], "februari": 1786, "holomet": 1786, "fnal": 1786, "gov": 1786, "gh_fft": 1786, "nutal": 1786, "general_ham": 1786, "6280e": 1786, "2698e": 1786, "1052e": 1786, "9826e": 1786, "5461": [1788, 1911], "1347": 1788, "7266": 1788, "2746": 1788, "5194": 1788, "1343": 1788, "4032": 1788, "2711": 1788, "5380": 1790, "8632": 1790, "1265": 1790, "9399": 1790, "5644": 1790, "9744": 1790, "1268": 1790, "2162": 1795, "6719": 1795, "3332": 1795, "5793": [1795, 1911], "0061": 1795, "6058": 1795, "9497": 1795, "5071": 1795, "3343": 1795, "9553": 1795, "0960": 1795, "derivati": [1796, 1799], "sparsr": 1797, "run_my_model": 1797, "prev_checks_en": 1797, "check_invari": [1797, 1804, 1805, 1806, 1807, 1808, 1809, 1934], "sparse_csr_tensor": [1797, 1878, 1920, 1934], "z_": [1799, 1900, 1935], "bigoplus_": 1799, "kj": 1799, "bigoplu": 1799, "sparseaddmmbackward0": 1799, "sparsemmreduceimplbackward0": 1799, "sparsiti": [1800, 1876, 1887, 1898], "spy": 1800, "2847": 1800, "7805": 1800, "1900": [1800, 1915], "to_dens": [1800, 1802, 1878, 1920, 1934], "3903": 1800, "x_k": 1801, "6438": 1803, "6467": 1803, "3411": 1803, "0918": 1803, "5348": 1803, "0634": 1803, "0494": 1803, "0646": 1803, "1844": 1803, "1276": 1803, "1874": 1803, "6334": 1803, "9682": 1803, "5340": 1803, "7483": 1803, "4512": 1803, "4073": 1803, "8901": 1803, "3183": 1803, "7539": 1803, "6596": 1803, "ncolblock": [1804, 1934], "array_list": [1804, 1805, 1806, 1808, 1809], "nrow": [1804, 1805, 1806, 1808, 1809, 1934], "ncol": [1804, 1805, 1806, 1808, 1809, 1934], "denses": [1804, 1805, 1806, 1808, 1809, 1934], "check_sparse_tensor_invari": [1804, 1805, 1806, 1807, 1808, 1809, 1934], "nrowblock": [1805, 1934], "compressed_indic": [1806, 1878, 1934], "plain_indic": [1806, 1878, 1934], "compressed_dim_s": [1806, 1934], "rdinat": 1807, "_indic": [1807, 1920, 1934], "0755": [1811, 1812], "0226": [1811, 1812], "0831": [1811, 1812], "4806": [1811, 1812], "0112": 1811, "2883": 1811, "6933": 1811, "0457": 1812, "0069": 1812, "2310": 1812, "2959": [1816, 1817, 1863, 1864], "8101": [1816, 1817, 1863, 1864], "5027": [1816, 1817, 1863, 1864], "3270": [1816, 1817, 1863, 1864], "5905": [1816, 1817, 1863, 1864], "6538": [1816, 1817, 1863, 1864, 1911], "3330": [1816, 1817, 1863, 1864], "5596": [1816, 1817, 1863, 1864], "6548": [1816, 1817, 1863, 1864], "1264": [1816, 1817, 1863, 1864], "5080": [1816, 1817, 1822, 1863, 1864, 1911], "6420": [1816, 1817, 1863, 1864], "1992": [1816, 1817, 1863, 1864], "0311": [1816, 1935], "7477": 1816, "2204": 1816, "9087": 1816, "2620": 1817, "0028": [1817, 1842], "0957": 1817, "6038": 1817, "0645": [1817, 1864], "4485": [1817, 1864], "8707": [1817, 1864], "0665": [1817, 1864], "librosa": 1818, "omega": 1818, "win": [1818, 1900], "_fft": [1818, 1878], "dimnsion": 1818, "1133": 1821, "2958": 1821, "5475": 1821, "0569": 1821, "0737": 1821, "3429": 1821, "9138": 1821, "9337": 1821, "6864": [1821, 1846], "1132": 1821, "7892": 1821, "1003": 1821, "5688": 1821, "3637": 1821, "9906": 1821, "5197": 1821, "4598": 1821, "3708": 1821, "6217": 1821, "435": 1821, "1335": 1821, "3135": 1821, "gesdd": 1822, "conquer": 1822, "gesvdjbatch": 1822, "fortran": 1822, "\u00b9": 1822, "2364": 1822, "7752": 1822, "7201": 1822, "7394": 1822, "0504": 1822, "3371": 1822, "5296": 1822, "3550": 1822, "5569": 1822, "2445": 1822, "1414": 1822, "4027": 1822, "0287": 1822, "5434": 1822, "1946": 1822, "8833": 1822, "3679": 1822, "4296": 1822, "2890": 1822, "6604": 1822, "2717": 1822, "2618": 1822, "4234": 1822, "2481": 1822, "4733": 1822, "3289": [1822, 1916], "0315": 1822, "7806": 1822, "0199": 1822, "8766": 1822, "4809": 1822, "4054": 1822, "7600": 1822, "8611": 1822, "2594": 1822, "4373": 1822, "6531e": 1822, "a_big": 1822, "6503e": 1822, "swapax": [1825, 1878, 1920, 1938], "symint": [1826, 1827, 1828, 1829, 1830, 1942, 1952, 1958], "symfloat": [1826, 1827, 1942, 1951], "symbool": [1830, 1942, 1951], "1995": 1831, "4608": 1831, "7702": 1831, "4875": 1831, "9158": 1831, "5872": 1831, "6929": 1831, "6932": 1831, "take_along_axi": [1833, 1906], "max_idx": 1833, "sorted_idx": 1833, "2027": 1834, "7687": 1834, "4412": 1834, "3856": 1834, "5930": 1834, "9859": 1834, "4722": 1834, "3366": 1834, "8986": 1835, "7279": 1835, "1745": 1835, "7156": 1835, "8257": 1835, "2553": 1835, "11111": 1836, "222222": 1836, "3333333": 1836, "1111": 1836, "array_split": 1837, "i_d": 1838, "k_": 1838, "4532": 1838, "4874": 1838, "5018": 1838, "4796": [1838, 1915], "5162": 1838, "5306": 1838, "2922": 1838, "7556": 1838, "2741": 1838, "3161": 1838, "0704": 1838, "0187": 1838, "4079": 1838, "3126": 1838, "8744": 1838, "8223": 1838, "9445": 1838, "4117": 1838, "7780": 1838, "7193": 1838, "4867": 1838, "3204": 1838, "5513": 1838, "4737": [1838, 1867], "2850": 1838, "2573": 1838, "5997": 1838, "sparsebsr": 1842, "sparsecsc": 1842, "sparsebsc": 1842, "9893": 1842, "5809": 1842, "1669": 1842, "7299": 1842, "4942": [1842, 1911], "y_0": 1843, "y_1": 1843, "x_diff": 1843, "y_diff": 1843, "riemann": [1843, 1900, 1908, 1935], "badli": 1845, "cloned_coeffici": 1845, "1527": 1845, "0753": 1845, "7986": 1845, "0210": 1845, "3513": 1845, "5492": 1845, "7403": 1845, "0243": 1845, "7841": 1845, "9046": 1845, "5405": 1845, "9320": 1845, "9270": 1845, "2826": 1845, "lbrace": [1846, 1847, 1848, 1849], "rbrace": [1846, 1847, 1848, 1849], "0813": 1846, "8619": 1846, "7105": 1846, "0935": 1846, "1380": 1846, "3409": [1846, 1915], "2219": 1846, "5653": 1846, "2521": 1846, "2345": 1846, "2544": 1846, "3461": 1846, "4785": 1846, "4477": 1846, "6049": 1846, "6368": 1846, "8775": 1846, "7145": 1846, "1502": 1846, "2716": 1846, "1243": 1846, "5413": 1846, "3615": 1846, "0614": 1846, "7344": 1846, "3164": 1846, "7648": 1846, "4024": 1846, "0978": 1846, "col": [1847, 1849, 1878], "2309": 1848, "5207": 1848, "0049": 1848, "2072": 1848, "0680": 1848, "6602": 1848, "3480": 1848, "5211": 1848, "4573": 1848, "5876": 1848, "0794": [1848, 1935], "8373": 1848, "6654": 1848, "2604": 1848, "5235": 1848, "2447": 1848, "9556": 1848, "2919": 1848, "1768": 1848, "4333": 1848, "3146": [1848, 1911], "6576": 1848, "0432": 1848, "9348": [1848, 1935], "4410": 1848, "9888": 1848, "3337": 1848, "6556": 1848, "4798": 1848, "5466": 1851, "8008": 1851, "9079": 1851, "unique_consecut": [1854, 1878, 1920], "inverse_indic": [1854, 1855], "warn_onli": 1857, "alon": [1857, 1879, 1922], "put_": [1857, 1878], "index_add": [1857, 1878, 1920], "index_select": [1857, 1878, 1920, 1934, 1958], "empty_strid": [1857, 1878, 1882, 1920, 1951, 1958], "empty_permut": [1857, 1878, 1920, 1958], "fractionalmaxpool2d": 1857, "fractionalmaxpool3d": 1857, "reflectionpad1d": 1857, "reflectionpad3d": 1857, "replicationpad1d": 1857, "replicationpad3d": 1857, "histc": [1857, 1878, 1920], "bincount": [1857, 1878, 1920], "kthvalu": [1857, 1878, 1893, 1920], "cublasapi_reproduc": [1857, 1915], "avg_pool3d_backward_cuda": 1857, "for_tensor": 1858, "for_modul": 1858, "for_storag": 1858, "unsupported_dtyp": 1858, "privateuse1": [1858, 1860, 1929], "rename_privateuse1_backend": [1858, 1876], "is_foo": 1858, "frames_to_skip": [1859, 1919], "maximum_number_of_fram": 1859, "_register_device_modul": 1860, "backendmodul": 1860, "get_amp_supported_dtyp": 1860, "is_autocast_en": [1860, 1878, 1920], "get_autocast_dtyp": 1860, "set_autocast_dtyp": 1860, "set_autocast_en": 1860, "_is_in_bad_fork": 1860, "bad_fork": 1860, "get_rng_stat": [1860, 1876, 1929], "set_rng_stat": [1860, 1876, 1929], "extend_dispatch": 1860, "pytorch_open_registration_exampl": 1860, "nicer": 1861, "alexandr": 1862, "theophil": 1862, "0631": 1863, "5590": 1863, "4893": 1863, "8258": 1863, "5926": 1864, "0056": 1864, "3646": 1864, "vecdot": 1865, "mi": [1866, 1867], "6116": 1866, "5772": [1866, 1935], "4606": 1866, "9120": 1866, "0786": 1866, "7497": 1866, "6623": 1866, "5772j": 1866, "9120j": 1866, "7497j": 1866, "6623j": 1866, "3839j": 1867, "2098": 1867, "6699j": 1867, "3470": 1867, "9451j": 1867, "5174": 1867, "3136j": 1867, "6699": 1867, "9451": 1867, "3136": 1867, "vertic": [1869, 1870, 1921, 1923, 1939, 1953], "atleast_2d": [1870, 1878, 1920], "3139": 1871, "3898": 1871, "1657": 1871, "0383": 1871, "8785": 1871, "1089": 1871, "hubconf": 1875, "entrypoint_nam": 1875, "_resnet18": 1875, "smoother": [1875, 1887], "underscor": [1875, 1894, 1930, 1940], "load_state_dict_from_url": [1875, 1889], "2gb": 1875, "relative_path_to_checkpoint": 1875, "pth": [1875, 1889, 1916], "dirnam": 1875, "__file__": [1875, 1917, 1922, 1955], "5c106cde": [1875, 1889], "force_reload": 1875, "skip_valid": 1875, "trust_repo": 1875, "repo_own": 1875, "repo_nam": 1875, "ref": [1875, 1934, 1951, 1956, 1963], "torchhub": 1875, "owner": [1875, 1905, 1920, 1930, 1931], "github_token": 1875, "repo_or_dir": 1875, "mute": 1875, "resnet50": [1875, 1939, 1955], "resnet50_weight": 1875, "imagenet1k_v1": 1875, "download_url_to_fil": 1875, "hash_prefix": 1875, "temporary_fil": 1875, "sha256": [1875, 1889], "s3": [1875, 1889, 1917], "amazonaw": [1875, 1889, 1917], "model_dir": [1875, 1889], "check_hash": [1875, 1889], "hub_dir": [1875, 1889], "get_dir": [1875, 1889], "ext": [1875, 1889], "eight": [1875, 1889], "hash": [1875, 1878, 1880, 1889, 1920], "succinct": 1875, "set_dir": 1875, "path_to_hub_dir": 1875, "torch_hom": 1875, "xdg_cache_hom": [1875, 1903], "reiniti": 1875, "path_importer_cach": 1875, "subpackag": [1875, 1922], "offend": [1875, 1954], "classifi": [1876, 1880, 1918, 1921, 1925, 1939], "pypi": 1876, "conda": [1876, 1917], "hip": 1876, "javadoc": 1876, "uninitializedbuff": 1876, "anomali": 1876, "fallthrough_kernel": [1876, 1884], "can_device_access_p": 1876, "current_blas_handl": 1876, "device_of": 1876, "get_arch_list": 1876, "get_device_cap": 1876, "get_device_nam": 1876, "get_device_properti": 1876, "get_gencode_flag": 1876, "get_sync_debug_mod": 1876, "ipc_collect": 1876, "memory_usag": 1876, "set_stream": 1876, "set_sync_debug_mod": 1876, "power_draw": 1876, "clock_rat": 1876, "outofmemoryerror": 1876, "jiter": 1876, "sanit": 1876, "empty_cach": [1876, 1903, 1909], "set_per_process_memory_fract": 1876, "current_allocated_memori": 1876, "driver_allocated_memori": 1876, "openmp": [1876, 1902, 1917, 1950], "xeon": [1876, 1902, 1960], "pathwis": 1876, "exponentialfamili": 1876, "binomi": [1876, 1878, 1920], "chi2": 1876, "continuousbernoulli": 1876, "dirichlet": 1876, "fishersnedecor": 1876, "halfcauchi": 1876, "halfnorm": 1876, "kumaraswami": 1876, "lkjcholeski": 1876, "laplac": 1876, "lognorm": 1876, "lowrankmultivariatenorm": 1876, "mixturesamefamili": 1876, "multinomi": [1876, 1878, 1920], "multivariatenorm": 1876, "negativebinomi": 1876, "onehotcategor": 1876, "relaxedbernoulli": 1876, "logitrelaxedbernoulli": 1876, "relaxedonehotcategor": 1876, "studentt": 1876, "transformeddistribut": 1876, "vonmis": 1876, "weibul": 1876, "wishart": 1876, "hub": [1876, 1889, 1955], "solver": [1876, 1914], "misc": 1876, "normal_": [1876, 1878, 1893, 1898, 1903, 1942], "constant_": [1876, 1898], "ones_": [1876, 1898], "zeros_": [1876, 1898], "eye_": [1876, 1882, 1898], "dirac_": [1876, 1882, 1898], "xavier_uniform_": [1876, 1898], "xavier_normal_": [1876, 1898, 1911], "kaiming_uniform_": [1876, 1898], "trunc_normal_": [1876, 1898], "orthogonal_": [1876, 1882, 1898, 1911], "sparse_": [1876, 1898], "alexnet": 1876, "pitfal": [1876, 1953], "preview": 1876, "swa": 1876, "ema": 1876, "powersgd": 1876, "remotemodul": 1876, "fork_rng": [1876, 1929], "doublestorag": [1876, 1936], "floatstorag": [1876, 1936], "halfstorag": [1876, 1936], "longstorag": [1876, 1936], "intstorag": [1876, 1936], "shortstorag": [1876, 1936], "charstorag": [1876, 1936], "bytestorag": [1876, 1936], "boolstorag": [1876, 1936], "bfloat16storag": [1876, 1936], "complexdoublestorag": [1876, 1936], "complexfloatstorag": [1876, 1936], "quint8storag": [1876, 1936], "qint8storag": [1876, 1936], "qint32storag": [1876, 1936], "quint4x2storag": [1876, 1936], "quint2x4storag": [1876, 1936], "make_tensor": [1876, 1941], "assert_allclos": [1876, 1941], "generate_methods_for_privateuse1_backend": 1876, "get_cpp_backtrac": 1876, "set_modul": 1876, "sampler": 1876, "mobile_optim": 1876, "optimize_for_mobil": [1876, 1888], "model_zoo": 1876, "load_url": [1876, 1889], "tensorboard": [1876, 1890, 1924], "summarywrit": [1876, 1890, 1939], "iinfo": 1876, "__config__": [1876, 1902], "_log": [1876, 1880, 1963], "set_log": [1876, 1886, 1963], "torchdata": 1876, "torchserv": 1876, "torchtext": 1876, "xla": [1876, 1951], "disadvantag": 1877, "gentl": 1877, "beam": 1877, "traced_bar": 1877, "myscriptmodul": 1877, "103": [1877, 1879], "939": [1877, 1879], "116": [1877, 1879], "779": [1877, 1879], "123": [1877, 1879], "my_script_modul": [1877, 1879], "ins": 1877, "pytorch_jit": 1877, "traced_fn": 1877, "disable_jit_exampl": 1877, "printer": 1877, "rv": 1877, "rv0": 1877, "rv1": 1877, "ssa": 1877, "block0": 1877, "block1": 1877, "loop_in_traced_fn": 1877, "input_tupl": 1877, "fill_row_zero": 1877, "tracerwarn": 1877, "disjoint": 1877, "nr": 1877, "09115803241729736": 1877, "6782537698745728": 1877, "cpu_model": 1877, "gpu_model": 1877, "sample_input_cpu": 1877, "sample_input_gpu": 1877, "traced_cpu": 1877, "traced_gpu": 1877, "use_gpu": 1877, "__constants__": [1877, 1879], "my_module_inst": 1877, "redeclar": 1877, "nn_module_inst": 1877, "my_scripted_model": 1877, "pep": [1877, 1879, 1918, 1950], "526": [1877, 1879, 1918], "script_method": 1877, "implicitly_compiled_method": 1877, "another_forward": 1877, "unused_method": 1877, "some_fn": 1877, "ever": [1877, 1936], "some_fn2": 1877, "some_fn3": 1877, "some_fn4": 1877, "my_dict": [1877, 1879], "my_int": [1877, 1879], "my_const": 1877, "make_dict": 1877, "nnc": 1877, "nvfuser": 1877, "__and__": 1878, "__iand__": 1878, "__ilshift__": 1878, "__ior__": 1878, "__irshift__": 1878, "__ixor__": 1878, "__lshift__": 1878, "__or__": 1878, "__rshift__": 1878, "__xor__": 1878, "absolute_": 1878, "acos_": [1878, 1893], "addbmm_": 1878, "addcdiv_": 1878, "addcmul_": 1878, "addmv_": [1878, 1893], "addr_": 1878, "align_a": [1878, 1893, 1894, 1920], "align_to": [1878, 1893, 1894, 1920], "ellipsis_idx": 1878, "aminmax": [1878, 1920], "arccos_": 1878, "arccosh_": 1878, "arcsin_": [1878, 1934], "arcsinh_": 1878, "arctan2_": 1878, "arctan_": 1878, "arctanh_": 1878, "argwher": [1878, 1920], "as_strided_": 1878, "as_strided_scatt": [1878, 1920, 1958], "asin_": [1878, 1893, 1934], "asinh_": [1878, 1893], "atan_": [1878, 1893], "atanh_": [1878, 1893], "baddbmm_": 1878, "bernoulli_": [1878, 1893, 1942], "bitwise_and_": 1878, "bitwise_left_shift_": 1878, "bitwise_not_": [1878, 1893], "bitwise_or_": 1878, "bitwise_right_shift_": 1878, "bitwise_xor_": 1878, "broadcast_to": [1878, 1920], "cauchy_": [1878, 1893, 1942], "ceil_": [1878, 1893], "clamp_max": [1878, 1920], "clamp_max_": 1878, "clamp_min": [1878, 1920], "clamp_min_": 1878, "clip_": 1878, "conj_physical_": 1878, "copysign_": 1878, "cos_": [1878, 1893, 1900], "cosh_": [1878, 1893], "count_nonzero": [1878, 1920], "cummax": [1878, 1920], "cummin": [1878, 1920], "cumprod_": 1878, "cumsum_": 1878, "deg2rad": [1878, 1893, 1920, 1934], "deg2rad_": [1878, 1893, 1934], "outdim": 1878, "diagonal_scatt": [1878, 1920], "digamma_": [1878, 1893], "div_": [1878, 1893, 1934], "divide_": 1878, "dsplit": [1878, 1920], "eq_": 1878, "erf_": [1878, 1893], "erfc_": [1878, 1893], "erfinv_": [1878, 1893], "exp2": [1878, 1920, 1935, 1939, 1958], "exp2_": 1878, "exp_": [1878, 1893], "expm1_": [1878, 1893], "exponential_": [1878, 1893, 1942], "fill_diagonal_": 1878, "fix_": 1878, "fliplr": [1878, 1920], "flipud": [1878, 1920], "float_power_": 1878, "floor_": [1878, 1893], "floor_divide_": [1878, 1934], "fmax": [1878, 1920, 1958], "fmin": [1878, 1920, 1958], "fmod_": 1878, "frac_": [1878, 1893], "frexp": [1878, 1920], "gcd_": 1878, "ge_": 1878, "geometric_": [1878, 1942], "ger": [1878, 1920], "get_devic": [1878, 1893, 1920, 1934, 1936, 1937], "greater_": 1878, "greater_equal_": 1878, "gt_": 1878, "hardshrink": [1878, 1920], "heavisid": [1878, 1920], "heaviside_": 1878, "hsplit": [1878, 1920, 1938], "hypot_": 1878, "i0_": 1878, "igamma_": 1878, "igammac_": 1878, "index_fil": [1878, 1893, 1920], "index_reduc": [1878, 1920], "is_coalesc": [1878, 1920, 1934], "is_contigu": [1878, 1893, 1920, 1938], "is_floating_point": [1878, 1893, 1920, 1934, 1937], "is_infer": [1878, 1920], "is_same_s": [1878, 1920, 1934], "is_set_to": [1878, 1920], "is_sign": [1878, 1893, 1920, 1934], "isclos": [1878, 1920], "isfinit": [1878, 1914, 1920, 1958], "isinf": [1878, 1920, 1934, 1958], "isneginf": [1878, 1920, 1934], "isposinf": [1878, 1920, 1934], "isreal": [1878, 1920], "istft": [1878, 1920], "kron": [1878, 1920], "lcm_": 1878, "ldexp_": 1878, "le_": 1878, "lerp_": 1878, "less_": 1878, "less_equal_": 1878, "lgamma_": 1878, "log10_": [1878, 1893], "log1p_": [1878, 1893, 1934], "log2_": [1878, 1893], "log_normal_": [1878, 1893, 1942], "logaddexp2": [1878, 1920], "logcumsumexp": [1878, 1920], "logical_and_": 1878, "logical_not_": [1878, 1893], "logical_or_": 1878, "logical_xor_": 1878, "logit_": 1878, "lt_": 1878, "masked_fil": [1878, 1893, 1895, 1920, 1934], "masked_scatt": [1878, 1920], "masked_select": [1878, 1893, 1920], "matrix_pow": [1878, 1920], "moveaxi": [1878, 1920], "msort": [1878, 1920], "multiply_": 1878, "mvlgamma_": 1878, "nan_to_num_": 1878, "nanmedian": [1878, 1893, 1920], "nansum": [1878, 1920], "narrow_copi": [1878, 1920, 1934], "ne_": 1878, "neg_": [1878, 1893, 1934], "negative_": [1878, 1934], "new_empty_strid": [1878, 1920], "new_ful": [1878, 1903, 1920], "new_on": [1878, 1920], "nextafter_": 1878, "nonzero_stat": [1878, 1920], "not_equal_": 1878, "output_nr": [1878, 1920], "polygamma_": 1878, "pow_": [1878, 1893], "q_per_channel_scal": [1878, 1920], "q_per_channel_zero_point": [1878, 1920], "q_scale": [1878, 1920], "q_zero_point": [1878, 1920], "rad2deg": [1878, 1893, 1920, 1934], "rad2deg_": [1878, 1893, 1934], "reciprocal_": [1878, 1893], "record_stream": [1878, 1903, 1920], "refine_nam": [1878, 1893, 1894, 1920], "relu_": [1878, 1927], "remainder_": 1878, "rename_": [1878, 1893, 1894], "renorm_": 1878, "reshape_a": [1878, 1895, 1920, 1938], "resize_a": [1878, 1920], "the_templ": 1878, "resize_as_sparse_": 1878, "retains_grad": [1878, 1920], "roll": [1878, 1920], "rot90": [1878, 1920], "round_": [1878, 1893], "rsqrt_": [1878, 1893], "select_scatt": [1878, 1920], "sgn_": [1878, 1893], "sigmoid_": [1878, 1893, 1927], "sign_": [1878, 1893], "sinc_": 1878, "sinh_": [1878, 1893], "slice_scatt": [1878, 1920, 1958], "smm": [1878, 1920, 1934], "sparse_resize_": 1878, "sparse_resize_and_clear_": 1878, "split_with_s": [1878, 1920, 1938], "sqrt_": [1878, 1893], "square_": 1878, "squeeze_": [1878, 1927], "sspaddmm": [1878, 1920, 1934], "sub_": [1878, 1893, 1934], "subtract_": 1878, "sum_to_s": [1878, 1920], "swapaxes_": 1878, "swapdim": [1878, 1920, 1938], "swapdims_": 1878, "take_along_dim": [1878, 1920], "tan_": [1878, 1893], "tanh_": [1878, 1893, 1927], "tensor_indices_or_sect": 1878, "to_mkldnn": [1878, 1920], "to_padded_tensor": [1878, 1895, 1920], "to_sparse_bsc": [1878, 1920], "to_sparse_bsr": [1878, 1920, 1934], "to_sparse_csc": [1878, 1920, 1934], "true_divide_": 1878, "trunc_": [1878, 1893], "type_a": [1878, 1893, 1920], "out0": [1878, 1916], "unsafe_chunk": [1878, 1920], "unsafe_split": [1878, 1920], "unsafe_split_with_s": [1878, 1920], "unsqueeze_": [1878, 1927], "view_a": [1878, 1920, 1938], "vsplit": [1878, 1920, 1938], "xlogy_": 1878, "adaptive_avg_pool2d": [1878, 1905, 1920, 1927], "adaptive_max_pool1d_with_indic": [1878, 1905], "adaptive_max_pool2d_with_indic": 1878, "adaptive_max_pool3d_with_indic": 1878, "alpha_dropout": [1878, 1920], "assert_int_or_pair": 1878, "arg_nam": 1878, "binary_cross_entropi": [1878, 1920], "binary_cross_entropy_with_logit": [1878, 1920], "celu": [1878, 1920], "dropout2d": 1878, "dropout3d": 1878, "feature_alpha_dropout": [1878, 1920], "fractional_max_pool2d_with_indic": 1878, "fractional_max_pool3d_with_indic": 1878, "gaussian_nll_loss": 1878, "glu": [1878, 1920], "gumbel_softmax": 1878, "hardsigmoid": [1878, 1920, 1927], "hardswish": [1878, 1920, 1927], "huber_loss": [1878, 1920], "instance_norm": [1878, 1920, 1927], "local_response_norm": 1878, "lp_pool1d": 1878, "lp_pool2d": 1878, "max_pool1d_with_indic": [1878, 1920], "max_pool2d_with_indic": [1878, 1920, 1958], "max_pool3d_with_indic": [1878, 1920, 1958], "mish": [1878, 1920], "multi_head_attention_forward": 1878, "embed_dim_to_check": 1878, "in_proj_weight": 1878, "in_proj_bia": 1878, "bias_k": 1878, "bias_v": 1878, "out_proj_weight": 1878, "out_proj_bia": 1878, "use_separate_proj_weight": 1878, "q_proj_weight": 1878, "k_proj_weight": 1878, "v_proj_weight": 1878, "static_k": 1878, "static_v": 1878, "multilabel_soft_margin_loss": 1878, "relu6": [1878, 1920, 1927], "silu": [1878, 1895, 1920], "softsign": 1878, "tanhshrink": 1878, "adaptive_avg_pool1d": [1878, 1905, 1920, 1927], "adaptive_max_pool1d": [1878, 1905, 1920], "affine_grid_gener": [1878, 1920], "alias_copi": [1878, 1920], "align_tensor": [1878, 1920], "alpha_dropout_": 1878, "as_strided_copi": [1878, 1920], "atleast_1d": [1878, 1920], "avg_pool1d": [1878, 1920, 1927], "bartlett_window": [1878, 1882, 1920], "cudnn_en": 1878, "batch_norm_backward_elemt": 1878, "invstd": 1878, "sum_di": 1878, "sum_dy_xmu": 1878, "batch_norm_backward_reduc": 1878, "input_g": 1878, "bias_g": 1878, "out3": 1878, "batch_norm_elemt": [1878, 1920], "batch_norm_gather_stat": [1878, 1920], "batch_norm_gather_stats_with_count": [1878, 1920], "batch_norm_stat": [1878, 1920], "batch_norm_update_stat": [1878, 1920], "blackman_window": [1878, 1882, 1920], "block_diag": [1878, 1920], "can_cast": [1878, 1920], "ccol_indices_copi": [1878, 1920], "celu_": 1878, "choose_qparams_optim": [1878, 1920], "n_bin": 1878, "bit_width": 1878, "col_indices_copi": [1878, 1920], "column_stack": [1878, 1920], "constant_pad_nd": [1878, 1920, 1958], "conv_tbc": [1878, 1920], "crow_indices_copi": [1878, 1920], "cudnn_affine_grid_gener": [1878, 1920], "cudnn_batch_norm": [1878, 1920], "exponential_average_factor": 1878, "cudnn_convolut": [1878, 1920], "cudnn_convolution_add_relu": [1878, 1920], "cudnn_convolution_relu": [1878, 1920], "cudnn_convolution_transpos": [1878, 1920], "cudnn_grid_sampl": [1878, 1920], "cudnn_is_accept": [1878, 1920], "cumulative_trapezoid": [1878, 1920], "detach_copi": [1878, 1920, 1962], "diagonal_copi": [1878, 1920], "dropout_": [1878, 1888], "embedding_renorm_": 1878, "physical_layout": [1878, 1958], "empty_quant": [1878, 1920], "anyenumtyp": 1878, "expand_copi": [1878, 1920], "fake_quantize_per_channel_affin": [1878, 1920], "fbgemm_linear_fp16_weight": [1878, 1920], "packed_weight": 1878, "fbgemm_linear_fp16_weight_fp32_activ": [1878, 1920], "fbgemm_linear_int8_weight": [1878, 1920], "col_offset": 1878, "weight_scal": 1878, "weight_zero_point": 1878, "fbgemm_linear_int8_weight_fp32_activ": [1878, 1920], "fbgemm_linear_quantize_weight": [1878, 1920], "fbgemm_pack_gemm_matrix_fp16": [1878, 1920], "fbgemm_pack_quantized_matrix": [1878, 1920], "feature_alpha_dropout_": 1878, "feature_dropout": [1878, 1920], "feature_dropout_": 1878, "frobenius_norm": [1878, 1920], "from_fil": [1878, 1920, 1936], "fused_moving_avg_obs_fake_qu": [1878, 1920], "observer_on": 1878, "fake_quant_on": 1878, "running_min": 1878, "running_max": 1878, "per_row_fake_qu": 1878, "symmetric_qu": 1878, "interpolation_mod": [1878, 1958], "has_bias": 1878, "gru_cel": [1878, 1920], "w_ih": 1878, "w_hh": 1878, "hamming_window": [1878, 1882, 1920], "histogramdd": [1878, 1920], "hspmm": [1878, 1920, 1934], "indices_copi": [1878, 1920], "is_autocast_cpu_en": [1878, 1920], "is_grad_en": [1878, 1920], "is_vulkan_avail": [1878, 1920], "isin": [1878, 1920], "kaiser_window": [1878, 1920], "lstm_cell": [1878, 1920], "meshgrid": [1878, 1920], "miopen_batch_norm": [1878, 1920], "miopen_convolut": [1878, 1920], "miopen_convolution_add_relu": [1878, 1920], "miopen_convolution_relu": [1878, 1920], "miopen_convolution_transpos": [1878, 1920], "miopen_depthwise_convolut": [1878, 1920], "miopen_rnn": [1878, 1920], "weight_stride0": 1878, "dropout_st": 1878, "out4": 1878, "mkldnn_adaptive_avg_pool2d": [1878, 1920], "mkldnn_convolut": [1878, 1920], "mkldnn_linear_backward_weight": 1878, "bias_defin": 1878, "mkldnn_max_pool2d": [1878, 1920], "mkldnn_max_pool3d": [1878, 1920], "mkldnn_rnn_layer": [1878, 1920], "weight0": 1878, "weight1": 1878, "weight2": 1878, "weight3": 1878, "hx_": 1878, "cx_": 1878, "native_batch_norm": [1878, 1920, 1958], "save_mean": 1878, "save_invstd": 1878, "native_channel_shuffl": [1878, 1920], "native_dropout": [1878, 1920, 1958], "native_group_norm": [1878, 1920, 1958], "hxw": [1878, 1958], "native_layer_norm": [1878, 1920, 1958], "native_norm": [1878, 1920, 1934], "norm_except_dim": [1878, 1920], "nuclear_norm": [1878, 1920], "pairwise_dist": [1878, 1920], "permute_copi": [1878, 1920], "promote_typ": [1878, 1920, 1941], "quantize_per_channel": [1878, 1920, 1925], "quantize_per_tensor_dynam": [1878, 1920, 1925], "quantized_batch_norm": [1878, 1920], "quantized_gru_cel": [1878, 1920], "packed_ih": 1878, "packed_hh": 1878, "col_offsets_ih": 1878, "col_offsets_hh": 1878, "scale_ih": 1878, "scale_hh": 1878, "zero_point_ih": 1878, "zero_point_hh": 1878, "quantized_lstm_cel": [1878, 1920], "quantized_max_pool1d": [1878, 1920], "quantized_max_pool2d": [1878, 1920], "quantized_max_pool3d": [1878, 1920], "quantized_rnn_relu_cel": [1878, 1920], "quantized_rnn_tanh_cel": [1878, 1920], "rand_lik": [1878, 1882, 1903, 1920, 1942, 1948], "randint_lik": [1878, 1882, 1920, 1942], "randn_lik": [1878, 1882, 1895, 1920, 1942], "randperm": [1878, 1882, 1920, 1942], "result_typ": [1878, 1920], "scalar1": 1878, "scalar2": 1878, "rnn_relu": [1878, 1920], "rnn_relu_cel": [1878, 1920], "rnn_tanh": [1878, 1920], "rnn_tanh_cel": [1878, 1920], "row_indices_copi": [1878, 1920], "row_stack": [1878, 1920], "rrelu_": 1878, "rsub": [1878, 1920], "scalar_tensor": [1878, 1920, 1958], "searchsort": [1878, 1920], "segment_reduc": [1878, 1920], "selu_": 1878, "slice_copi": [1878, 1920], "sparse_bsc_tensor": [1878, 1920, 1934], "sparse_bsr_tensor": [1878, 1920, 1934], "sparse_compressed_tensor": [1878, 1920, 1934], "sparse_csc_tensor": [1878, 1920, 1934], "split_copi": [1878, 1920], "split_with_sizes_copi": [1878, 1920], "squeeze_copi": [1878, 1920], "std_mean": [1878, 1893, 1920], "sym_constrain_rang": [1878, 1920], "t_copi": [1878, 1920], "threshold_": 1878, "transpose_copi": [1878, 1920], "trapz": [1878, 1920], "tril_indic": [1878, 1882, 1920], "triu_indic": [1878, 1882, 1920], "unbind_copi": [1878, 1920], "unfold_copi": [1878, 1920], "unsqueeze_copi": [1878, 1920], "values_copi": [1878, 1920], "vander": [1878, 1882, 1920], "var_mean": [1878, 1893, 1920], "view_as_complex_copi": [1878, 1920], "view_as_real_copi": [1878, 1920], "_nn": 1878, "adaptive_max_pool2d": [1878, 1920], "avg_pool2d": [1878, 1920, 1927, 1958], "conv_depthwise3d": [1878, 1920], "cross_entropy_loss": [1878, 1920], "input_scal": 1878, "elu_": 1878, "flatten_dense_tensor": [1878, 1920], "random_sampl": 1878, "gelu_": 1878, "hardsigmoid_": [1878, 1927], "hardswish_": 1878, "hardtanh_": [1878, 1927], "leaky_relu_": 1878, "log_sigmoid": [1878, 1920], "mish_": 1878, "mkldnn_linear": [1878, 1920], "mkldnn_reorder_conv2d_weight": [1878, 1920], "mkldnn_reorder_conv3d_weight": [1878, 1920], "nll_loss2d": [1878, 1920], "nll_loss_nd": [1878, 1920], "reflection_pad3d": [1878, 1920], "relu6_": 1878, "rrelu_with_nois": [1878, 1920], "rrelu_with_noise_": 1878, "silu_": 1878, "slow_conv3d": [1878, 1920], "slow_conv_dilated2d": [1878, 1920], "slow_conv_dilated3d": [1878, 1920], "slow_conv_transpose2d": [1878, 1920], "slow_conv_transpose3d": [1878, 1920], "softshrink": [1878, 1920], "thnn_conv2d": [1878, 1920], "unflatten_dense_tensor": [1878, 1920], "upsample_bicubic2d": [1878, 1920], "scales_h": 1878, "scales_w": 1878, "upsample_bilinear2d": [1878, 1920, 1958], "upsample_linear1d": [1878, 1920], "upsample_nearest1d": [1878, 1920], "upsample_nearest2d": [1878, 1920, 1958], "upsample_nearest3d": [1878, 1920], "scales_d": 1878, "upsample_trilinear3d": [1878, 1920], "fft_fftfreq": [1878, 1920], "fft_fftshift": [1878, 1920], "fft_hfft2": [1878, 1920], "fft_hfftn": [1878, 1920], "fft_ifftshift": [1878, 1920], "fft_ihfft2": [1878, 1920], "fft_ihfftn": [1878, 1920], "fft_rfftfreq": [1878, 1920], "_linalg": 1878, "linalg_cross": [1878, 1920], "linalg_det": [1878, 1920], "linalg_diagon": [1878, 1920], "eigvec": 1878, "linalg_ldl_factor": [1878, 1920], "linalg_ldl_factor_ex": [1878, 1920], "linalg_ldl_solv": [1878, 1920], "linalg_lu": [1878, 1920], "linalg_lu_factor": [1878, 1920], "linalg_lu_factor_ex": [1878, 1920], "linalg_lu_solv": [1878, 1920], "linalg_matmul": [1878, 1920], "linalg_matrix_exp": [1878, 1920], "linalg_matrix_pow": [1878, 1920], "linalg_multi_dot": [1878, 1920], "linalg_norm": [1878, 1920], "linalg_pinv": [1878, 1920], "linalg_solve_ex": [1878, 1920], "linalg_solve_triangular": [1878, 1920], "linalg_vand": [1878, 1920], "linalg_vecdot": [1878, 1920], "linalg_vector_norm": [1878, 1920], "_nest": 1878, "nested_to_padded_tensor": [1878, 1920], "_spars": 1878, "sparse_sampled_addmm": [1878, 1920], "_special": 1878, "special_airy_ai": [1878, 1920], "special_bessel_j0": [1878, 1920], "special_bessel_j1": [1878, 1920], "special_bessel_y0": [1878, 1920], "special_bessel_y1": [1878, 1920], "special_chebyshev_polynomial_t": [1878, 1920], "special_chebyshev_polynomial_u": [1878, 1920], "special_chebyshev_polynomial_v": [1878, 1920], "special_chebyshev_polynomial_w": [1878, 1920], "special_digamma": [1878, 1920], "special_entr": [1878, 1920], "special_erf": [1878, 1920], "special_erfc": [1878, 1920], "special_erfcx": [1878, 1920], "special_erfinv": [1878, 1920], "special_exp2": [1878, 1920], "special_expit": [1878, 1920], "special_expm1": [1878, 1920], "special_gammainc": [1878, 1920], "special_gammaincc": [1878, 1920], "special_gammaln": [1878, 1920], "special_hermite_polynomial_h": [1878, 1920], "special_i0": [1878, 1920], "special_i1": [1878, 1920], "special_laguerre_polynomial_l": [1878, 1920], "special_legendre_polynomial_p": [1878, 1920], "special_log1p": [1878, 1920], "special_log_ndtr": [1878, 1920], "special_log_softmax": [1878, 1920], "special_logit": [1878, 1920], "special_logsumexp": [1878, 1920], "special_modified_bessel_i0": [1878, 1920], "special_modified_bessel_i1": [1878, 1920], "special_modified_bessel_k0": [1878, 1920], "special_modified_bessel_k1": [1878, 1920], "special_multigammaln": [1878, 1920], "special_ndtr": [1878, 1920], "special_ndtri": [1878, 1920], "special_polygamma": [1878, 1920], "special_psi": [1878, 1920], "special_round": [1878, 1920], "special_scaled_modified_bessel_k0": [1878, 1920], "special_scaled_modified_bessel_k1": [1878, 1920], "special_shifted_chebyshev_polynomial_t": [1878, 1920], "special_shifted_chebyshev_polynomial_u": [1878, 1920], "special_shifted_chebyshev_polynomial_v": [1878, 1920], "special_shifted_chebyshev_polynomial_w": [1878, 1920], "special_sinc": [1878, 1920], "special_softmax": [1878, 1920], "special_spherical_bessel_j0": [1878, 1920], "special_xlog1pi": [1878, 1920], "special_xlogi": [1878, 1920], "special_zeta": [1878, 1920], "tval": 1878, "is_accept": 1878, "rect": 1878, "magic": [1878, 1881, 1942, 1952], "__complex__": 1878, "__float__": 1878, "__int__": 1878, "hex": [1878, 1880, 1920], "__hex__": 1878, "oct": [1878, 1920], "__oct__": 1878, "divmod": [1878, 1880, 1920], "chr": [1878, 1880, 1920], "int_float": 1878, "float_int": 1878, "fab": [1878, 1920], "int_int": 1878, "float_float": 1878, "complex_complex": 1878, "int_complex": 1878, "complex_int": 1878, "float_complex": 1878, "complex_float": [1878, 1936], "scalar_scalar": 1878, "int_to_int": 1878, "modf": [1878, 1920], "mathremaind": [1878, 1920], "programm": [1879, 1880], "tn": 1879, "subtyp": 1879, "an_error": 1879, "noreturn": [1879, 1880], "classvar": [1879, 1880], "anystr": [1879, 1880], "nomin": 1879, "newtyp": [1879, 1880], "tup": [1879, 1880], "emptydatastructur": 1879, "my_list": 1879, "aug_add_x": 1879, "inc": [1879, 1880], "assign_x": [1879, 1880], "polymorph": 1879, "sum_pair": 1879, "red": [1879, 1880], "green": [1879, 1880, 1954], "enum_fn": [1879, 1880], "my_variable_nam": 1879, "top_level_method": 1879, "other_help": 1879, "ten": [1879, 1939], "my_paramet": 1879, "my_submodul": 1879, "tuple_or_list": 1879, "a_tupl": 1879, "de": [1879, 1922, 1925], "is_script": [1879, 1880, 1920], "unsupported_linear_op": 1879, "is_trac": [1879, 1880], "univers": 1879, "typing_extens": 1879, "a_dict": 1879, "some_dict": 1879, "delimit": [1880, 1881], "tstype": 1880, "tsmoduletyp": 1880, "tsalltyp": 1880, "tsmetatyp": 1880, "tsprimitivetyp": 1880, "tsstructuraltyp": 1880, "tsnominaltyp": 1880, "myclass": [1880, 1922], "printabl": [1880, 1922], "sortabl": 1880, "nevertheless": [1880, 1932], "inc_first_el": 1880, "cpufloattyp": 1880, "tstupl": 1880, "tsnamedtupl": 1880, "tslist": 1880, "tsdict": 1880, "tsoption": 1880, "tsunion": 1880, "tsfutur": 1880, "tsrref": 1880, "tsawait": 1880, "await": [1880, 1881, 1930], "keytyp": 1880, "tensortyp": [1880, 1962], "_await": 1880, "mytupl": 1880, "scripted_inc": 1880, "_annotatednamedtupl": 1880, "_namedtupleannot": 1880, "_unannotatednamedtupl": 1880, "mistak": [1880, 1907, 1952], "nameerror": 1880, "remedi": 1880, "tsbuiltinclass": 1880, "tscustomclass": 1880, "tsenum": 1880, "tstensor": 1880, "subtensor": [1880, 1905, 1964], "subwithtorchfunct": 1880, "script_g": 1880, "tsclassdef": 1880, "methoddefinit": 1880, "__torch__": [1880, 1918], "class2": 1880, "tsenumdef": 1880, "tsenumtyp": 1880, "memberidentifi": 1880, "intenum": 1880, "intflag": 1880, "basecolor": 1880, "compli": [1880, 1922], "classbodydefinit": 1880, "moduleobj": 1880, "testmodul": 1880, "dosometh": 1880, "strateg": 1880, "congruent": 1880, "python3": 1880, "unannot": 1880, "python3annot": 1880, "paramannot": 1880, "returnannot": 1880, "funcormethodbodi": 1880, "mypyannot": 1880, "localvarannot": 1880, "setval": 1880, "moduletyp": [1880, 1922], "classidentifi": 1880, "instanceattridentifi": 1880, "offset_": 1880, "tsstructualtyp": 1880, "grammar": 1880, "chapter": [1880, 1908], "floattyp": 1880, "inttyp": 1880, "stringtyp": 1880, "devicetyp": 1880, "bullet": 1880, "tupletyp": 1880, "listtyp": 1880, "enclosur": 1880, "parenth_form": 1880, "list_displai": 1880, "dict_displai": 1880, "legal": 1880, "stringliter": 1880, "floatnumb": 1880, "expression_list": 1880, "list_comprehens": 1880, "comp_for": 1880, "target_list": 1880, "or_expr": 1880, "key_datum_list": 1880, "dict_comprehens": 1880, "key_datum": 1880, "ongo": [1880, 1918, 1928, 1930], "datum": [1880, 1944], "attributeref": 1880, "slice_list": 1880, "slice_item": 1880, "proper_slic": 1880, "argument_list": 1880, "desugar": [1880, 1952], "u_expr": 1880, "tightli": [1880, 1911], "m_expr": 1880, "a_expr": 1880, "shift_expr": 1880, "and_expr": 1880, "xor_expr": 1880, "comp_oper": 1880, "__contains__": 1880, "or_test": 1880, "and_test": 1880, "not_test": 1880, "conditional_express": 1880, "starred_item": 1880, "expression_stmt": 1880, "starred_express": 1880, "assignment_express": 1880, "assignment_stmt": 1880, "augmented_assignment_stmt": 1880, "augtarget": 1880, "augop": 1880, "annotated_assignment_stmt": 1880, "raise_stmt": 1880, "assert_stmt": 1880, "return_stmt": 1880, "del_stmt": 1880, "pass_stmt": 1880, "print_stmt": 1880, "break_stmt": 1880, "continue_stmt": 1880, "if_stmt": 1880, "while_stmt": 1880, "for_stmt": 1880, "with_stmt": 1880, "with_item": 1880, "__enter__": 1880, "suppress": [1880, 1929], "tuple_stmt": 1880, "getattr_stmt": 1880, "hasattr_stmt": 1880, "zip_stmt": 1880, "iterable1": 1880, "iterable2": 1880, "enumerate_stmt": 1880, "add_stat_valu": 1880, "sugaredvalu": 1880, "unrecogn": 1880, "honor": 1880, "__abs__": 1880, "bytearrai": 1880, "delattr": 1880, "exec": 1880, "__index__": 1880, "isint": 1880, "issubclass": [1880, 1905], "ndigit": 1880, "__import__": [1880, 1922], "notimpl": [1880, 1881, 1905, 1952], "rpc_sync": [1880, 1920, 1930, 1931, 1932], "synonym": 1880, "_fork": [1880, 1902], "_wait": [1880, 1902], "lexic": 1881, "indent": 1881, "coroutin": 1881, "__del__": [1881, 1900], "__bytes__": 1881, "__slots__": 1881, "metaclass": 1881, "mro": 1881, "__r": 1881, "__": [1881, 1962], "bytesliter": 1881, "imagnumb": 1881, "parenthes": 1881, "ifs": 1881, "customiz": [1881, 1943, 1950], "compound": 1881, "exc_typ": 1881, "exc_valu": 1881, "adaptivelogsoftmaxwithloss": 1882, "enable_grad": [1882, 1942], "overload_nam": [1884, 1905], "handi": [1884, 1900, 1903], "spotti": 1884, "googl": 1884, "colab": [1884, 1922, 1952], "dispatch_kei": [1884, 1950], "keynam": 1884, "alias_analysi": 1884, "conserv": [1884, 1887, 1903, 1952], "fallthrough": 1884, "div_cpu": 1884, "off_by_default": 1886, "_registr": 1886, "spammi": [1886, 1950], "born": 1887, "citizen": 1887, "afterthought": 1887, "unlock": 1887, "intuit": [1887, 1955], "alik": 1887, "grai": 1887, "systemat": 1887, "onboard": 1887, "maskedarrai": 1887, "masked_tensor": 1887, "mobil": [1888, 1925, 1953], "blocklist": [1888, 1922], "mobileoptimizertyp": 1888, "conv_bn_fus": 1888, "correspondingli": 1888, "prepack": [1888, 1920], "insert_fold_prepack_op": 1888, "arm": [1888, 1925], "remove_dropout": 1888, "hoist": 1888, "hoist_conv_packed_param": 1888, "fuse_add_relu": 1888, "vulkan": 1888, "vulkan_automatic_gpu_transf": 1888, "freeze_modul": 1888, "script_modul": 1888, "optimization_blocklist": 1888, "preserved_method": 1888, "_mobileoptimizertyp": 1888, "recursivescriptmodul": [1888, 1916], "download": [1889, 1917, 1939, 1955], "infrequ": 1890, "window_s": 1890, "max_sampl": 1890, "cap": 1890, "_monitor": 1890, "data_value_t": 1890, "eventhandlerhandl": 1890, "register_event_handl": 1890, "unregister_event_handl": 1890, "tensorboardeventhandl": 1890, "writer": [1890, 1911, 1939], "shader": [1891, 1912], "processor": 1891, "metalperformanceshad": 1891, "shared_memori": 1892, "abruptli": 1892, "get_all_sharing_strategi": 1892, "get_sharing_strategi": 1892, "set_sharing_strategi": 1892, "new_strategi": 1892, "di": [1892, 1948, 1956], "abnorm": [1892, 1913], "fatal": [1892, 1913], "forev": [1892, 1904], "asap": 1892, "queue_2": 1892, "x_clone": 1892, "segfault": [1892, 1914, 1952], "shm_open": 1892, "prone": [1892, 1913, 1952], "destructor": [1892, 1932], "seriou": [1892, 1903, 1952], "torch_shm_manag": 1892, "unnot": 1892, "spawncontext": 1892, "has_nam": 1893, "is_shar": [1893, 1936], "is_sparse_csr": [1893, 1920, 1936], "is_tensor": [1893, 1934], "items": [1893, 1920], "unifies_names_from_input_tensor": 1893, "nbyte": [1893, 1920, 1936], "ndimens": 1893, "position": [1893, 1894], "unnam": [1893, 1894], "misalign": 1893, "inher": 1893, "collaps": [1893, 1920, 1958], "disappear": 1893, "img": [1894, 1939], "renamed_img": 1894, "coexist": 1894, "wildcard": [1894, 1922, 1962], "somewher": [1894, 1910, 1956], "scale_channel": 1894, "more_img": 1894, "named_tensor": 1894, "named_img": 1894, "flat_img": 1894, "named_flat_img": 1894, "unflattened_img": 1894, "unflattened_named_img": 1894, "grad_loss": 1894, "8107": 1894, "6357": 1894, "0783": 1894, "untest": 1894, "rename_map": 1894, "greedili": 1894, "unment": 1894, "49152": 1894, "datastructur": 1895, "seamless": 1895, "nested_tensor": 1895, "nt": 1895, "vein": 1895, "as_nested_tensor": 1895, "irregular": 1895, "indistinguish": 1895, "2286": 1895, "4842": 1895, "7827": 1895, "6745": [1895, 1935], "0658": 1895, "1247": 1895, "4078": 1895, "8083": 1895, "2871": 1895, "5559": 1895, "9885": 1895, "4074": 1895, "4855": 1895, "0733": 1895, "8285": 1895, "6858": 1895, "7030": 1895, "3481": 1895, "0236": 1895, "fake_grad": 1895, "6862": 1895, "1282": 1895, "1031": 1895, "0464": 1895, "3276": 1895, "9967": 1895, "0054": 1895, "8972": 1895, "9174": 1895, "4995": 1895, "8546": 1895, "7194": 1895, "2918": 1895, "1846": 1895, "8793": 1895, "5183": 1895, "6447": 1895, "8009": 1895, "8468": 1895, "9832": 1895, "5272": 1895, "pt_infer": 1895, "pt_larg": 1895, "pt_small": 1895, "bitwidth": [1896, 1911, 1925, 1934], "asymmetr": [1896, 1925, 1928], "sacrific": [1898, 1903], "dirac": 1898, "glorot": 1898, "bengio": 1898, "fan": 1898, "_in": 1898, "_out": [1898, 1908, 1958], "fan_in": 1898, "delv": 1898, "surpass": 1898, "he": 1898, "_mode": 1898, "fan_out": 1898, "redrawn": 1898, "sax": 1898, "2013": 1898, "marten": 1898, "walkthrough": 1899, "clip_grad_value_": 1899, "optimizer2": 1899, "batch_per_it": 1899, "iters_to_accumul": 1899, "num_proc": 1899, "grad_param": 1899, "grad_norm": 1899, "scaled_grad_param": 1899, "inv_scal": 1899, "proce": [1899, 1903, 1930, 1963], "optimizer0": 1899, "optimizer1": 1899, "output0": 1899, "model0": 1899, "model1": 1899, "loss0": 1899, "loss1": 1899, "hundr": [1899, 1910, 1963], "imped": 1899, "poor": [1899, 1900], "dp_model": 1899, "alter": [1899, 1905, 1959], "imported_funct": 1899, "mymm": 1899, "myfloat32func": 1899, "fwd_output": 1899, "cleaner": 1900, "mapsto": 1900, "educ": 1900, "_save": 1900, "_saved_self": 1900, "convex": 1900, "concav": 1900, "togglabl": 1900, "drawback": 1900, "0011": 1900, "dirti": 1900, "hogwild": 1900, "train_fn": 1900, "graphtask": 1900, "copyslic": 1900, "mutex": 1900, "gotten": 1900, "curiou": 1900, "\u2102": 1900, "yj": 1900, "holomorph": 1900, "fulfil": [1900, 1906, 1922, 1956], "theori": 1900, "homomorph": 1900, "mathematician": 1900, "im": 1900, "studi": [1900, 1924], "beauti": 1900, "somewhat": [1900, 1903, 1934], "counterintuit": 1900, "0906": 1900, "4835": 1900, "audio": [1900, 1939], "\u211d": 1900, "_output": 1900, "vj": 1900, "selfdeletingtempfil": 1900, "tmp_dir": 1900, "uuid": 1900, "uuid4": 1900, "temp_fil": 1900, "forbidden": 1900, "savedtensor": 1900, "_raw_saved_": 1900, "_raw_saved_self": 1900, "save_on_disk_threshold": 1900, "tensor_or_sctf": 1900, "_saved_oth": 1900, "4th": 1901, "backcompat": 1901, "broadcast_warn": 1901, "userwarn": 1901, "compute_z": 1902, "w_z": 1902, "w_y": 1902, "tbb": 1902, "aten_thread": 1902, "omp": 1902, "mkl_thread": 1902, "bla": 1902, "mkldnn_cpu_runtim": 1902, "use_mkldnn": 1902, "use_tbb": 1902, "use_openmp": 1902, "ON": [1902, 1909, 1910], "set_num_interop_thread": 1902, "get_num_interop_thread": 1902, "set_num_thread": [1902, 1913], "get_num_thread": 1902, "omp_num_thread": 1902, "mkl_num_thread": 1902, "1024": [1902, 1903], "e5": 1902, "oversubscript": 1902, "irrespect": 1903, "spread": 1903, "cuda2": [1903, 1909], "a_ful": 1903, "10240": 1903, "b_full": 1903, "ab_ful": 1903, "7277": 1903, "ab_tf32": 1903, "016": 1903, "ga100": 1903, "1747": 1903, "relative_error": 1903, "0022": 1903, "ab_fp32": 1903, "0031": 1903, "000039": 1903, "7x": 1903, "globalcontext": 1903, "setallowtf32cubla": 1903, "setallowtf32cudnn": 1903, "bench_gemm_transform": 1903, "allow_fp16_reduc": 1903, "4048": 1903, "1634": 1903, "1639": 1903, "4056": 1903, "1670": 1903, "1661": 1903, "4080": 1903, "1664": 1903, "1658": 1903, "1651": 1903, "4104": 1903, "1677": 1903, "1674": 1903, "4128": 1903, "1796": [1903, 1911], "2519": 1903, "5096": 1903, "2144": 1903, "2149": 1903, "2766": 1903, "5120": 1903, "2142": 1903, "9728": 1903, "3875": 1903, "5779": 1903, "16384": [1903, 1955], "6182": 1903, "9656": 1903, "setallowfp16reductioncubla": 1903, "instabl": 1903, "setallowbf16reductioncubla": 1903, "invis": [1903, 1953, 1963], "start_ev": 1903, "elapsed_time_m": 1903, "exploit": 1903, "paragraph": [1903, 1908], "initial_grad": 1903, "memory_alloc": [1903, 1909], "memory_snapshot": [1903, 1909], "memcheck": 1903, "pytorch_no_cuda_memory_cach": [1903, 1909], "option2": 1903, "value2": 1903, "max_split_size_mb": 1903, "borderlin": 1903, "memory_summari": 1903, "resort": [1903, 1908, 1922], "roundup_power2_divis": 1903, "cudacachingalloc": 1903, "1280": 1903, "1536": 1903, "1792": 1903, "256mb": 1903, "512mb": 1903, "1gb": [1903, 1961], "knob": [1903, 1951], "roundup_bypass_threshold_mb": 1903, "garbage_collection_threshold": 1903, "reclaim": [1903, 1948], "release_cached_block": 1903, "unfavor": 1903, "cuda_runtime_api": 1903, "iostream": 1903, "fpic": 1903, "my_malloc": 1903, "cout": 1903, "endl": [1903, 1910], "my_fre": 1903, "cudafre": 1903, "cudapluggablealloc": 1903, "new_alloc": 1903, "_cuda_clearcublasworkspac": 1903, "kib": 1903, "lru": 1903, "geometri": 1903, "1023": 1903, "zeta": [1903, 1920, 1935, 1958], "varieti": [1903, 1931], "use_pytorch_kernel_cach": 1903, "pytorch_kernel_cache_path": 1903, "store_tru": 1903, "disable_cuda": 1903, "assess": 1903, "cudagetdevicecount": 1903, "cuinit": 1903, "pytorch_nvml_based_cuda_check": 1903, "nvml": 1903, "nvmldevicegetcount_v2": 1903, "poison": 1903, "aforement": [1903, 1913], "train_load": [1903, 1913], "x_cpu": 1903, "x_gpu": 1903, "x_cpu_long": 1903, "y_cpu": 1903, "y_gpu": 1903, "y_cpu_long": 1903, "new_tensor": 1903, "overus": 1903, "principl": [1903, 1953], "cudagraphlaunch": 1903, "elid": 1903, "versatil": 1903, "static_input": 1903, "static_output": 1903, "realist": 1903, "sophist": [1903, 1921], "violat": [1903, 1906], "virtual": 1903, "d_in": 1903, "d_out": 1903, "640": 1903, "static_target": 1903, "static_y_pr": 1903, "static_loss": 1903, "real_input": [1903, 1952], "real_target": 1903, "refil": 1903, "dag": 1903, "rejoin": 1903, "cuda_work": 1903, "nsight": 1903, "reorgan": 1903, "graphabl": 1903, "needlessli": [1903, 1951], "econom": 1903, "static_out_1": 1903, "g1_workload": 1903, "static_in_1": 1903, "static_out_2": 1903, "g2_workload": 1903, "static_in_2": 1903, "real_data_1": 1903, "real_data_2": 1903, "occasion": [1903, 1934, 1952], "29500": [1904, 1923, 1930, 1931], "dive": [1904, 1908, 1922, 1956, 1957], "prerequisit": 1904, "grad0": 1904, "grad1": 1904, "bucket1": 1904, "bucket0": 1904, "hurt": 1904, "kick": [1904, 1930, 1931, 1960], "earliest": 1904, "unreadi": 1904, "perspect": [1904, 1914, 1931, 1956], "hpp": 1904, "processgroupgloo": 1904, "processgroupmpi": 1904, "_sync_param": 1904, "autograd_hook": 1904, "prepare_for_backward": 1904, "_after_": 1904, "log_level": [1904, 1950, 1963], "optimize_ddp": 1904, "mark_dirti": 1905, "mark_non_differenti": [1905, 1906], "set_materialize_grad": 1905, "linearfunct": 1905, "grad_bia": 1905, "mulconst": 1905, "mycub": [1905, 1906], "grad_dx": [1905, 1906], "my_cub": [1905, 1906], "input_featur": 1905, "output_featur": 1905, "duck": [1905, 1922], "__array_function__": 1905, "nep": 1905, "0018": 1905, "scalartensor": 1905, "handled_funct": 1905, "mandat": 1905, "update_wrapp": 1905, "ensure_tensor": 1905, "metadatatensor": 1905, "__add__": 1905, "subtensor2": 1905, "othersubtensor": 1905, "loggingtensor": 1905, "permiss": 1905, "_metadata": 1905, "ndata": 1905, "ministri": 1905, "silli": 1905, "superclass": 1905, "troublesom": 1905, "face": [1905, 1922, 1939, 1952], "_get_overridable_funct": 1905, "overriden": 1905, "get_overridable_funct": [1905, 1964], "func_dict": 1905, "nn_func": 1905, "labori": 1905, "_get_testing_overrid": 1905, "get_testing_overrid": [1905, 1964], "override_dict": 1905, "dummy_add": 1905, "get_ignored_funct": [1905, 1964], "__torch_dispatch__": [1905, 1934, 1952], "2020": 1905, "outdat": 1905, "redispatch": [1905, 1952], "dispatchkei": 1905, "zerotensor": 1905, "compositeimplicitautograd": 1905, "func_nam": [1905, 1930], "exot": 1905, "zoo": 1905, "subclass_zoo": [1905, 1952], "intro": 1905, "custom_vjp": 1906, "custom_jvp": 1906, "to_numpi": 1906, "numpysort": 1906, "ind_inv": 1906, "_1": [1906, 1922], "numpytak": 1906, "numpy_sort": 1906, "saniti": 1906, "ggx": 1906, "vmappabl": 1906, "x_bdim": 1906, "ind_bdim": 1906, "ind_inv_bdim": 1906, "expanded_x": 1906, "expanded_ind": 1906, "expanded_ind_inv": 1906, "new_dim": 1906, "logical_dim": 1906, "maybe_expand_bdim_at_front": 1906, "pseudocod": 1906, "rapidli": [1907, 1913], "fortun": [1907, 1963], "abridg": 1907, "total_loss": 1907, "extrud": 1907, "phenomenon": 1907, "plenti": 1907, "bptt": 1907, "repackag": 1907, "nm": 1907, "blow": 1907, "rememb": [1907, 1913, 1956], "elf": 1907, "grep": [1907, 1947], "run_model": 1907, "recoveri": 1907, "data_parallel": 1907, "pad_packed_sequ": 1907, "padded_input": 1907, "packed_input": 1907, "packed_output": 1907, "my_lstm": 1907, "dp_m": 1907, "padding_input": 1907, "ur": 1908, "ui": [1908, 1939, 1957, 1960], "rewritten": 1908, "j_f": 1908, "calculu": 1908, "cw": 1908, "bigger": 1908, "articl": 1908, "58eb23378f2a376565a66ac32c93a316c45b6131": 1908, "l99": 1908, "l105": 1908, "ds_dx": 1908, "compute_gradi": 1908, "ds_dy": 1908, "conj_w_d": 1908, "w_d": 1908, "d_idx": 1908, "albeit": 1908, "wonder": 1908, "amd": [1909, 1945], "dialect": 1909, "portabl": 1909, "rocmdoc": 1909, "programming_guid": 1909, "hip_api_guid": 1909, "cuda_vers": 1909, "cudaruntimegetvers": 1909, "cudadrivergetvers": 1909, "hip_vers": 1909, "hipruntimegetvers": 1909, "hipdrivergetvers": 1909, "11000": 1909, "use_rocm": 1909, "rocm_vers": 1909, "40300": 1909, "cmake": [1909, 1917], "drocm_force_enable_gpu_assert": 1909, "addglobalcallback": 1910, "recordfunct": 1910, "ivalu": 1910, "threadlocaldebuginfo": 1910, "debuginfoguard": 1910, "recordfunctioncallback": 1910, "onfunctionent": 1910, "onfunctionexit": 1910, "needsinput": 1910, "samplingprob": 1910, "enablerecordfunct": 1910, "cerr": 1910, "broader": [1910, 1942], "inject": 1910, "setapiusagehandl": 1910, "setapiusagelogg": 1910, "event_nam": 1910, "c10_log_api_usage_onc": 1910, "my_api": 1910, "_log_api_usage_onc": 1910, "archiv": 1910, "bundl": 1910, "akin": 1910, "jpeg": 1910, "camera": [1910, 1939], "setexportmoduleextrafileshook": 1910, "extrafilesmap": 1910, "producer_info": 1910, "getenv": 1910, "getsourc": 1910, "precompil": 1910, "pyc": 1910, "loos": 1910, "elabor": 1911, "tpu": 1911, "mylinear": 1911, "sample_input": 1911, "0413": 1911, "2057": 1911, "0597": 1911, "8247": 1911, "1045": 1911, "4299": 1911, "5457": 1911, "4793": 1911, "3634": 1911, "8525": 1911, "6749": 1911, "l0": [1911, 1916], "deeper": [1911, 1922, 1956], "bignet": 1911, "big_net": 1911, "dynamicnet": 1911, "dynamic_net": 1911, "2051": 1911, "7601": 1911, "1963": 1911, "4354": 1911, "6598": 1911, "4446": 1911, "4628": 1911, "8774": 1911, "6848": 1911, "5458": 1911, "4647": 1911, "5310": 1911, "0609": 1911, "0940": 1911, "1266": 1911, "0623": 1911, "3508": 1911, "0550": 1911, "5317": 1911, "5562": 1911, "4028": 1911, "6942": 1911, "0140": 1911, "0329": 1911, "1160": 1911, "0434": 1911, "3889": 1911, "1613": 1911, "6340": 1911, "3887": 1911, "9979": 1911, "0767": 1911, "3526": 1911, "8756": 1911, "5847": 1911, "6016": 1911, "1608": 1911, "0829": 1911, "6338": 1911, "9239": 1911, "6943": 1911, "5034": 1911, "0268": 1911, "4489": 1911, "9403": 1911, "2509": 1911, "5052": 1911, "3088": 1911, "4951": 1911, "3381": 1911, "5166": 1911, "boilerpl": [1911, 1922], "beginn": 1911, "examples_nn": 1911, "polynomial_modul": 1911, "teach": 1911, "0013": [1911, 1935], "0030": 1911, "0008": 1911, "modalmodul": 1911, "6614": 1911, "2669": 1911, "0617": 1911, "4519": 1911, "two_layer_net_optim": 1911, "blitz": 1911, "neural_networks_tutori": 1911, "autograd_tutori": 1911, "new_net": 1911, "runningmean": 1911, "1041": 1911, "0647": 1911, "1515": 1911, "m_load": 1911, "unserialized_th": 1911, "statefulmodul": 1911, "param3": 1911, "param_list": 1911, "parameterlist": 1911, "param_dict": 1911, "parameterdict": 1911, "buffer1": 1911, "buffer2": 1911, "buffer3": 1911, "0322": 1911, "9066": 1911, "1409": 1911, "4852": 1911, "6949": 1911, "2911": 1911, "1044": 1911, "4202": 1911, "1953": 1911, "5299": 1911, "8747": 1911, "6289": 1911, "4898": 1911, "6434": 1911, "5187": 1911, "0346": 1911, "4077": 1911, "4324": 1911, "7022": 1911, "3915": 1911, "6176": 1911, "6062": 1911, "5992": 1911, "4452": 1911, "2843": 1911, "3710": 1911, "3947": 1911, "saving_loading_model": 1911, "what_is_state_dict": 1911, "skip_init": 1911, "skip_param_init": 1911, "forward_hook": [1911, 1959], "backward_hook": [1911, 1959], "new_grad_input": 1911, "5059": 1911, "8158": 1911, "2390": 1911, "0043": 1911, "addmmbackward": 1911, "forward_pre_hook_handl": 1911, "5752": 1911, "7421": 1911, "forward_hook_handl": 1911, "0980": 1911, "4666": 1911, "0256": 1911, "4497": 1911, "5046": 1911, "combat": 1911, "mps_devic": 1912, "yourfavoritenet": 1912, "a3c": 1913, "set_start_method": 1913, "simplequeu": 1913, "cope": 1913, "eleg": 1913, "num_process": 1913, "inappropri": 1913, "vcpu": 1913, "htop": 1913, "exceed": 1913, "competit": 1913, "oversubscrib": 1913, "fairli": [1913, 1923, 1951, 1955], "mnist_hogwild": 1913, "dataloader_kwarg": 1913, "train_epoch": 1913, "30x": 1913, "boost": [1913, 1947], "754": 1914, "1e20": 1914, "4142e": 1914, "struggl": 1914, "benign": 1914, "v_dot2": 1914, "mfma": 1914, "fp64": 1914, "rocbla": 1914, "miopen": 1914, "rocblas_internal_fp16_alt_impl": 1914, "miopen_debug_convolution_attrib_fp16_alt_impl": 1914, "_convbackend": 1914, "slownd": 1914, "slownd_transpos": 1914, "slownd_dil": 1914, "slownd_dilated_transpos": 1914, "convbackend": 1914, "miopendepthwis": 1914, "miopentranspos": 1914, "svd_lowrank": [1915, 1934], "22modul": 1915, "20determin": 1915, "index_add_cuda_": 1915, "1509": 1915, "8027": 1915, "0333": 1915, "1444": 1915, "rese": 1915, "seed_work": 1915, "worker_se": 1915, "train_dataset": 1915, "tensor_dict": 1916, "loaded_numb": 1916, "loaded_even": 1916, "scene": [1916, 1939], "loaded_smal": 1916, "num_batches_track": 1916, "bn_state_dict": 1916, "new_bn": 1916, "out0_relu": 1916, "1400": 1916, "4563": 1916, "0271": 1916, "4406": 1916, "2827": 1916, "4588": 1916, "2031": 1916, "0300": 1916, "1316": 1916, "6533": 1916, "3413": 1916, "1112": 1916, "m_state_dict": 1916, "new_m": 1916, "original_nam": 1916, "controlflowmodul": 1916, "controlflowmodule_trac": 1916, "3793": 1916, "controlflowmodule_script": 1916, "tagger": 1916, "ipu_tag": 1916, "ipu_deseri": 1916, "startswith": [1916, 1920], "get_default_load_endian": 1916, "byteord": 1916, "loadendian": 1916, "default_load_endian": 1916, "set_default_load_endian": 1916, "endian": 1916, "rem": 1917, "7z": 1917, "curl": 1917, "ossci": 1917, "mkl_2020": 1917, "aoa": 1917, "omkl": 1917, "cuda_prefix": 1917, "cuda102": 1917, "magma_2": 1917, "4_": 1917, "omagma": 1917, "cmake_include_path": 1917, "cd": [1917, 1922, 1924, 1963], "magma_hom": 1917, "studio": 1917, "pip": [1917, 1918, 1939], "cmake_gener": 1917, "ffi": 1917, "create_extens": 1917, "_ext": 1917, "define_macro": 1917, "relative_to": 1917, "c99": 1917, "x86_x64": 1917, "packagesnotfounderror": 1917, "anaconda": 1917, "noarch": 1917, "continuum": 1917, "pkg": 1917, "pro": [1917, 1939], "msys2": 1917, "importerror": [1917, 1922], "dll": 1917, "vc2017": 1917, "redistribut": 1917, "vc": 1917, "vs2017_runtim": 1917, "mkl_fft": 1917, "intel_openmp": 1917, "vs2017": 1917, "openbla": 1917, "forg": 1917, "emerg": [1917, 1951], "bootstrap": 1917, "forgotten": 1917, "idiom": 1917, "freeze_support": 1917, "forkingpickl": 1917, "brokenpipeerror": 1917, "errno": 1917, "couldn": [1917, 1918], "torch_14808_1591070686": 1917, "thalloc": 1917, "tdr": 1917, "thcudacheck": 1917, "csrc": [1917, 1951], "storageshar": 1917, "dummy_input": 1918, "input_nam": 1918, "actual_input_1": 1918, "learned_": 1918, "output_nam": 1918, "learned_0": 1918, "learned_1": 1918, "learned_2": 1918, "learned_3": 1918, "learned_14": 1918, "learned_15": 1918, "kernel_shap": 1918, "9216": 1918, "transb": 1918, "check_model": 1918, "printable_graph": 1918, "onnxruntim": 1918, "ort": 1918, "ort_sess": 1918, "inferencesess": 1918, "astyp": 1918, "seq_length": 1918, "real_seq_length": 1918, "experienc": 1918, "new_data": 1918, "hope": [1918, 1957], "symbolic_opset": 1918, "symbolic_opset9": 1918, "_variablefunct": 1918, "pyi": 1918, "checkout": 1918, "___torch_mangle_0": 1918, "alpha_f": 1918, "myrelu": 1918, "value_t": 1918, "pythonop": [1918, 1920], "mylogexp": 1918, "operator_export_typ": 1918, "onnx_fallthrough": 1918, "onnx_aten_fallback": 1918, "onnx_opset": 1918, "opset15": 1918, "custom_opset": 1918, "67326": 1918, "alphax": 1918, "castlik": 1918, "gammax": 1918, "settyp": 1918, "custom_selu": 1918, "jit_util": 1918, "graphcontext": 1918, "onnxscript_op": 1918, "register_custom_op_symbol": 1918, "symbolic_nam": 1918, "symbolic_fn": 1918, "Be": [1918, 1960], "symbolic_help": 1918, "symbolic_foo_forward": 1918, "custom_domain": 1918, "attr1_f": 1918, "attr2_i": 1918, "custom_op": [1918, 1952], "foo_forward": 1918, "foomodel": 1918, "example_input1": 1918, "caffe2": [1918, 1939], "torch_script_graph": 1918, "unconvertible_op": 1918, "dynamic_ax": 1918, "export_param": 1918, "trainingmod": 1918, "operatorexporttyp": 1918, "do_constant_fold": 1918, "keep_initializers_as_input": 1918, "export_modules_as_funct": 1918, "autograd_inlin": 1918, "OF": 1918, "WITH": 1918, "input_i": 1918, "input_z": 1918, "fileno": 1918, "untrain": 1918, "doc_str": 1918, "onnx_aten": 1918, "build_caffe2": 1918, "summodul": 1918, "dim_valu": 1918, "my_custom_axis_nam": 1918, "dim_param": 1918, "sum_dynamic_axes_1": 1918, "deduplicate_initi": 1918, "predefin": 1918, "74765": 1918, "checkererror": 1918, "unsupportedoperatorerror": 1918, "export_to_pretty_str": 1918, "export_typ": 1918, "google_print": 1918, "add_node_nam": 1918, "nodeproto": 1918, "debugstr": 1918, "contrib": 1918, "test_aten_embedding_2": 1918, "test_oper": 1918, "unregister_custom_op_symbol": 1918, "select_model_mode_for_export": 1918, "is_in_onnx_export": 1918, "middl": 1918, "enable_log": 1918, "disable_log": 1918, "graphinfo": 1918, "incorrect_relu_symbolic_funct": 1918, "2328854203224182": 1918, "699536174352349": 1918, "rapid": 1918, "exportopt": 1918, "my_nn_modul": 1918, "my_nn_module_attribut": 1918, "faketensormod": [1918, 1951, 1952], "faketensor": [1918, 1952], "_subclass": [1918, 1951, 1952], "fake_tensor": [1918, 1951, 1952], "l870": 1918, "my_model_without_initi": 1918, "my_model_with_initi": 1918, "underdevelop": 1919, "parsabl": 1919, "sarif": 1919, "diagsys0001": 1919, "fxe0001": 1919, "fxe0002": 1919, "fxe0003": 1919, "fxe0004": 1919, "fxe0005": 1919, "fxe0006": 1919, "atenlib": 1919, "fxe0007": 1919, "fxe0008": 1919, "fxe0009": 1919, "fxe0010": 1919, "fxe0011": 1919, "fxe0012": 1919, "fxe0013": 1919, "fxe0014": 1919, "fxe0015": 1919, "fxe0016": 1919, "poe0001": 1919, "poe0002": 1919, "poe0003": 1919, "poe0004": 1919, "torchscriptonnxexportdiagnost": 1919, "cpp_stack": 1919, "record_cpp_call_stack": 1919, "constantchunk": 1920, "__and_": 1920, "__contains_": 1920, "__derive_index": 1920, "__getitem_": 1920, "__interpol": 1920, "__is_": 1920, "__isnot_": 1920, "__lshift_": 1920, "__not_": 1920, "__or_": 1920, "__range_length": 1920, "__rshift_": 1920, "__xor_": 1920, "_cast_byt": 1920, "_cast_char": 1920, "_cast_doubl": 1920, "_cast_float": 1920, "_cast_half": 1920, "_cast_int": 1920, "_cast_long": 1920, "_cast_short": 1920, "_conj": 1920, "_convolution_mod": 1920, "_dim_arang": 1920, "_log_softmax": [1920, 1958], "_pack_padded_sequ": 1920, "_pad_packed_sequ": 1920, "_reshape_from_tensor": 1920, "_sample_dirichlet": 1920, "_set_item": 1920, "_shape_as_tensor": 1920, "_standard_gamma": 1920, "_uniqu": 1920, "_unique2": 1920, "_weight_norm": 1920, "conv1d_relu": 1920, "conv2d_relu": 1920, "conv3d_relu": 1920, "embedding_renorm": 1920, "floordiv": [1920, 1927], "nonzero_numpi": 1920, "numpy_t": 1920, "unchecked_cast": 1920, "unique_dim": 1920, "_quantiz": 1920, "conv2d_prepack": 1920, "conv3d_prepack": 1920, "conv_transpose1d_prepack": 1920, "conv_transpose2d_prepack": 1920, "conv_transpose3d_prepack": 1920, "linear_dynam": 1920, "linear_prepack": 1920, "linear_prepack_fp16": 1920, "linear_prepack_fp16_legaci": 1920, "linear_prepack_legaci": 1920, "_test": 1920, "get_first": 1920, "compleximplicit": 1920, "floatimplicit": 1920, "intimplicit": 1920, "__iand_": 1920, "__ilshift_": 1920, "__ior_": 1920, "__irshift_": 1920, "__ixor_": 1920, "__round_to_zero_floordiv": 1920, "__upsampl": 1920, "__upsample_bilinear": 1920, "__upsample_nearest": 1920, "_adaptive_avg_pool2d": [1920, 1958], "_adaptive_avg_pool3d": 1920, "_add_batch_dim": 1920, "_add_relu": 1920, "_addmm_activ": 1920, "_aminmax": 1920, "_amp_foreach_non_finite_check_and_unscal": 1920, "_amp_update_scal": 1920, "_assert_async": 1920, "_assert_tensor_metadata": 1920, "_autocast_to_full_precis": 1920, "_autocast_to_reduced_precis": 1920, "_batch_norm_impl_index": 1920, "_cdist_forward": 1920, "_cholesky_solve_help": 1920, "_choose_qparams_per_tensor": 1920, "_coalesc": 1920, "_compute_linear_combin": 1920, "_conj_copi": 1920, "_conj_phys": 1920, "_conv_depthwise2d": 1920, "_convert_indices_from_coo_to_csr": 1920, "_convert_indices_from_csr_to_coo": 1920, "_copy_from": 1920, "_copy_from_and_res": 1920, "_ctc_loss": 1920, "_cudnn_ctc_loss": 1920, "_cudnn_init_dropout_st": 1920, "_cudnn_rnn": 1920, "_cudnn_rnn_flatten_weight": 1920, "_cufft_clear_plan_cach": 1920, "_cufft_get_plan_cache_max_s": 1920, "_cufft_get_plan_cache_s": 1920, "_cufft_set_plan_cache_max_s": 1920, "_cummax_help": 1920, "_cummin_help": 1920, "_debug_has_internal_overlap": 1920, "_dimi": 1920, "_dimv": 1920, "_dirichlet_grad": 1920, "_efficient_attention_forward": 1920, "_efficientzerotensor": 1920, "_embedding_bag": 1920, "_embedding_bag_forward_onli": 1920, "_empty_affine_quant": 1920, "_empty_per_channel_affine_quant": 1920, "_euclidean_dist": 1920, "_fake_quantize_learnable_per_channel_affin": 1920, "_fake_quantize_learnable_per_tensor_affin": 1920, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1920, "_fft_c2c": 1920, "_fft_c2r": 1920, "_fft_r2c": 1920, "_fill_mem_eff_dropout_mask": 1920, "_flash_attention_forward": 1920, "_foobar": [1920, 1963], "_foreach_ab": 1920, "_foreach_aco": 1920, "_foreach_add": 1920, "_foreach_addcdiv": 1920, "_foreach_addcmul": 1920, "_foreach_asin": 1920, "_foreach_atan": 1920, "_foreach_ceil": 1920, "_foreach_clamp_max": 1920, "_foreach_clamp_min": 1920, "_foreach_co": 1920, "_foreach_cosh": 1920, "_foreach_div": 1920, "_foreach_erf": 1920, "_foreach_erfc": 1920, "_foreach_exp": 1920, "_foreach_expm1": 1920, "_foreach_floor": 1920, "_foreach_frac": 1920, "_foreach_lerp": 1920, "_foreach_lgamma": 1920, "_foreach_log": 1920, "_foreach_log10": 1920, "_foreach_log1p": 1920, "_foreach_log2": 1920, "_foreach_maximum": 1920, "_foreach_minimum": 1920, "_foreach_mul": 1920, "_foreach_neg": 1920, "_foreach_norm": 1920, "_foreach_pow": 1920, "_foreach_reciproc": 1920, "_foreach_round": 1920, "_foreach_sigmoid": 1920, "_foreach_sign": 1920, "_foreach_sin": 1920, "_foreach_sinh": 1920, "_foreach_sqrt": 1920, "_foreach_sub": 1920, "_foreach_tan": 1920, "_foreach_tanh": 1920, "_foreach_trunc": 1920, "_foreach_zero": 1920, "_functional_assert_async": 1920, "_functional_sym_constrain_rang": 1920, "_fused_adam": 1920, "_fused_adamw": 1920, "_fused_dropout": 1920, "_fused_moving_avg_obs_fq_help": 1920, "_fused_moving_avg_obs_fq_helper_funct": 1920, "_fused_sdp_choic": 1920, "_fw_primal": 1920, "_fw_primal_copi": 1920, "_get_cpu_cap": 1920, "_get_tracing_st": 1920, "_grad_sum_to_s": 1920, "_has_compatible_shallow_copy_typ": 1920, "_has_same_storage_numel": 1920, "_histogramdd_bin_edg": 1920, "_histogramdd_from_bin_ct": 1920, "_histogramdd_from_bin_tensor": 1920, "_index_put_impl": 1920, "_indices_copi": 1920, "_infer_s": 1920, "_int_mm": 1920, "_is_all_tru": 1920, "_is_any_tru": 1920, "_is_zerotensor": 1920, "_linalg_check_error": 1920, "_linalg_det": 1920, "_linalg_eigh": 1920, "_linalg_slogdet": 1920, "_linalg_solve_ex": 1920, "_linalg_svd": 1920, "_list_to_tensor": 1920, "_local_scalar_dens": 1920, "_logcumsumexp": 1920, "_lstm_mp": 1920, "_make_dep_token": 1920, "_make_du": 1920, "_make_dual_copi": 1920, "_make_per_channel_quantized_tensor": 1920, "_make_per_tensor_quantized_tensor": 1920, "_masked_scal": 1920, "_masked_softmax": 1920, "_mkldnn_reshap": 1920, "_mkldnn_transpos": 1920, "_mps_convolut": 1920, "_mps_convolution_transpos": 1920, "_native_batch_norm_legit": [1920, 1958], "_native_batch_norm_legit_funct": 1920, "_native_batch_norm_legit_no_train": 1920, "_native_multi_head_attent": 1920, "_ncf_unsqueez": 1920, "_ncf_view": 1920, "_neg_view": 1920, "_neg_view_copi": 1920, "_nested_from_pad": 1920, "_nested_from_padded_and_nested_exampl": 1920, "_nested_tensor_from_mask": 1920, "_nested_tensor_from_mask_left_align": 1920, "_nested_tensor_from_tensor_list": 1920, "_nested_tensor_s": 1920, "_nested_tensor_softmax_with_shap": 1920, "_nested_tensor_storage_offset": 1920, "_nested_tensor_strid": 1920, "_nested_view_from_buff": 1920, "_nested_view_from_buffer_copi": 1920, "_new_zeros_with_same_feature_meta": 1920, "_nnpack_avail": 1920, "_nnpack_spatial_convolut": 1920, "_no_grad_embedding_renorm": 1920, "_no_grad_fil": 1920, "_no_grad_norm": 1920, "_no_grad_uniform": 1920, "_no_grad_zero": 1920, "_pack_sequ": 1920, "_pad_circular": 1920, "_pad_enum": 1920, "_pdist_forward": 1920, "_pin_memori": 1920, "_prelu_kernel": 1920, "_propagate_xla_data": 1920, "_remove_batch_dim": 1920, "_reshape_alia": 1920, "_reshape_alias_copi": 1920, "_reshape_copi": 1920, "_resize_output": 1920, "_rowwise_prun": 1920, "_saturate_weight_to_fp16": 1920, "_scaled_dot_product_attention_math": 1920, "_scaled_dot_product_efficient_attent": 1920, "_scaled_dot_product_flash_attent": 1920, "_size_if_not_equ": 1920, "_slow_conv2d_forward": 1920, "_sobol_engine_draw": 1920, "_sobol_engine_ff": 1920, "_sobol_engine_initialize_st": 1920, "_sobol_engine_scrambl": 1920, "_softmax": [1920, 1935, 1958], "_sparse_addmm": 1920, "_sparse_broadcast_to": 1920, "_sparse_broadcast_to_copi": 1920, "_sparse_bsc_tensor_unsaf": 1920, "_sparse_bsr_tensor_unsaf": 1920, "_sparse_compressed_tensor_unsaf": 1920, "_sparse_coo_tensor_unsaf": 1920, "_sparse_coo_tensor_with_dim": 1920, "_sparse_coo_tensor_with_dims_and_tensor": 1920, "_sparse_csc_tensor_unsaf": 1920, "_sparse_csr_prod": 1920, "_sparse_csr_sum": 1920, "_sparse_csr_tensor_unsaf": 1920, "_sparse_log_softmax": 1920, "_sparse_mask_project": 1920, "_sparse_mm": 1920, "_sparse_mm_reduce_impl": 1920, "_sparse_semi_structured_linear": 1920, "_sparse_softmax": 1920, "_sparse_sparse_matmul": 1920, "_sparse_sum": 1920, "_spdiag": 1920, "_standard_gamma_grad": 1920, "_tensor_to_list": 1920, "_test_ambiguous_default": 1920, "_test_autograd_multiple_dispatch": 1920, "_test_autograd_multiple_dispatch_view": 1920, "_test_autograd_multiple_dispatch_view_copi": 1920, "_test_check_tensor": 1920, "_test_functorch_fallback": 1920, "_test_optional_filled_intlist": 1920, "_test_optional_floatlist": 1920, "_test_optional_intlist": 1920, "_test_serialization_subcmul": 1920, "_test_string_default": 1920, "_test_warn_in_autograd": 1920, "_thnn_fused_gru_cel": 1920, "_thnn_fused_lstm_cel": 1920, "_to_copi": [1920, 1958], "_to_cpu": 1920, "_to_dens": 1920, "_to_spars": 1920, "_to_sparse_bsc": 1920, "_to_sparse_bsr": 1920, "_to_sparse_csc": 1920, "_to_sparse_csr": 1920, "_to_sparse_semi_structur": 1920, "_transform_bias_rescale_qkv": 1920, "_transformer_encoder_layer_fwd": 1920, "_trilinear": 1920, "_triton_multi_head_attent": 1920, "_triton_scaled_dot_attent": 1920, "_unpack_du": 1920, "_unsafe_index": 1920, "_unsafe_index_put": 1920, "_unsafe_view": 1920, "_unwrap_opt": 1920, "_upsample_bicubic2d_aa": 1920, "_upsample_bilinear2d_aa": 1920, "_upsample_nearest_exact1d": 1920, "_upsample_nearest_exact2d": 1920, "_upsample_nearest_exact3d": 1920, "_use_cudnn_ctc_loss": 1920, "_use_cudnn_rnn_flatten_weight": 1920, "_validate_compressed_sparse_indic": 1920, "_validate_sparse_bsc_tensor_arg": 1920, "_validate_sparse_bsr_tensor_arg": 1920, "_validate_sparse_compressed_tensor_arg": 1920, "_validate_sparse_coo_tensor_arg": 1920, "_validate_sparse_csc_tensor_arg": 1920, "_validate_sparse_csr_tensor_arg": 1920, "_values_copi": 1920, "_weight_norm_interfac": 1920, "capit": 1920, "confirmed_by_own": [1920, 1930], "convolution_overrid": 1920, "copy_sparse_to_spars": 1920, "endswith": 1920, "expandtab": 1920, "fake_quantize_per_channel_affine_cachemask": 1920, "fake_quantize_per_tensor_affine_cachemask": 1920, "fill_diagon": 1920, "glu_jvp": 1920, "has_torch_funct": [1920, 1964], "is_non_overlapping_and_dens": 1920, "is_own": [1920, 1930], "is_strides_like_format": 1920, "isalnum": 1920, "isalpha": 1920, "isdecim": 1920, "isdigit": 1920, "isidentifi": 1920, "islow": 1920, "isnumer": 1920, "isprint": 1920, "isspac": 1920, "istitl": 1920, "isupp": 1920, "lift_fresh": 1920, "ljust": 1920, "local_valu": [1920, 1923, 1930], "log_sigmoid_forward": 1920, "lstrip": 1920, "matrix_h": 1920, "nll_loss2d_forward": 1920, "nll_loss_forward": 1920, "normal_funct": 1920, "owner_nam": [1920, 1930], "percentformat": 1920, "quantized_gru": 1920, "quantized_lstm": 1920, "resize_as_spars": 1920, "rfind": 1920, "rindex": 1920, "rjust": 1920, "rpartit": 1920, "rsplit": 1920, "rstrip": 1920, "set_data": 1920, "slow_conv3d_forward": 1920, "sparse_res": 1920, "sparse_resize_and_clear": 1920, "splitlin": 1920, "swapcas": 1920, "sym_numel": [1920, 1958], "sym_storage_offset": [1920, 1958], "sym_strid": [1920, 1958], "unique_dim_consecut": 1920, "zfill": 1920, "_allgather_bas": 1920, "_reduce_scatter_bas": 1920, "allgath": 1920, "allgather_coalesc": 1920, "allgather_into_tensor_coalesc": 1920, "allreduce_coalesc": 1920, "alltoal": 1920, "alltoall_bas": 1920, "recv_any_sourc": 1920, "reduce_scatter_tensor_coalesc": 1920, "debugprim": 1920, "load_tensor": 1920, "_mm_plus_mm": 1920, "_mkl_linear": 1920, "_mkl_reorder_linear_weight": 1920, "_convolution_pointwis": 1920, "_convolution_transpose_pointwis": 1920, "_is_mkldnn_bf16_support": 1920, "_linear_pointwis": 1920, "_reorder_convolution_transpose_weight": 1920, "_reorder_convolution_weight": 1920, "_reorder_linear_weight": 1920, "_reorder_mkldnn_rnn_layer_weight": 1920, "mkldnn_prepack": 1920, "conv2d_run": 1920, "conv2d_clamp_prepack": 1920, "conv2d_clamp_run": 1920, "conv2d_transpose_clamp_prepack": 1920, "conv2d_transpose_clamp_run": 1920, "linear_clamp_prepack": 1920, "linear_clamp_run": 1920, "unpack_prepacked_sizes_conv2d": 1920, "unpack_prepacked_sizes_linear": 1920, "addstatvalu": 1920, "autogradadd": 1920, "autogradallnonzero": 1920, "autogradallzero": 1920, "autogradanynonzero": 1920, "autogradzero": 1920, "bailout": [1920, 1951], "bailouttempl": 1920, "broadcastmkldnntensor": 1920, "broadcasts": 1920, "chunksiz": 1920, "constantmkldnntensor": 1920, "differentiablegraph": 1920, "enumnam": 1920, "enumvalu": 1920, "fallbackgraph": 1920, "fusedconcat": 1920, "fusiongroup": 1920, "ifthenels": 1920, "ignoredpythonop": 1920, "mkldnnclamp": 1920, "mkldnnhardsigmoid": 1920, "mkldnnhardswish": 1920, "mkldnnhardtanh": 1920, "mkldnnlayernorm": 1920, "mkldnnscalarmul": 1920, "mmbatchsid": 1920, "mmtreereduc": 1920, "modulecontainerindex": 1920, "numtotensor": 1920, "raiseexcept": 1920, "reductions": 1920, "requiresgradcheck": 1920, "staticruntimecopyout": 1920, "staticsubgraph": 1920, "stringindex": 1920, "tensorexprdynamicgroup": 1920, "tensorexprdynamicguard": 1920, "tensorexprgroup": 1920, "timepoint": 1920, "tupleindex": 1920, "tupleunpack": 1920, "varconcat": 1920, "varstack": 1920, "awaitable_nowait": 1920, "awaitable_wait": 1920, "is_cpu": 1920, "is_ipu": 1920, "is_mkldnn": 1920, "is_mp": 1920, "is_nest": 1920, "is_ort": 1920, "is_quant": 1920, "is_vulkan": 1920, "is_xla": 1920, "is_xpu": 1920, "onednnfusiongroup": 1920, "onednnfusionguard": 1920, "profile_ivalu": 1920, "rangelist": 1920, "rpc_remot": 1920, "unchecked_unwrap_opt": 1920, "bessel_i0": [1920, 1958], "bessel_i1": [1920, 1958], "bessel_j0": [1920, 1935, 1958], "bessel_j1": [1920, 1935, 1958], "broadcast_in_dim": [1920, 1958], "cbrt": [1920, 1958], "collapse_view": [1920, 1958], "convert_element_typ": [1920, 1958], "copy_strid": [1920, 1958], "copy_to": [1920, 1958], "device_put": [1920, 1958], "erf_inv": [1920, 1958], "erfcx": [1920, 1935, 1958], "fft_c2c": [1920, 1958], "fft_c2r": [1920, 1958], "fft_r2c": [1920, 1958], "iota": [1920, 1958], "maximum_valu": [1920, 1958], "minimum_valu": [1920, 1958], "ndtri": [1920, 1935, 1958], "rev": [1920, 1958], "shift_left": [1920, 1958], "shift_right_arithmet": [1920, 1958], "slice_in_dim": [1920, 1958], "spherical_bessel_j0": [1920, 1935, 1958], "split_dim": [1920, 1958], "view_of": [1920, 1958], "xor_sum": [1920, 1958], "_call_end_callbacks_on_jit_fut": 1920, "_record_function_ent": 1920, "_record_function_enter_new": 1920, "_record_function_exit": 1920, "_bfloat16quantizedtofloat": 1920, "_floattobfloat16quant": 1920, "add_out": 1920, "add_relu_out": 1920, "add_scalar_out": 1920, "add_scalar_relu": 1920, "add_scalar_relu_out": 1920, "batch_norm1d": 1920, "batch_norm1d_relu": 1920, "batch_norm2d": 1920, "batch_norm2d_relu": 1920, "batch_norm3d": 1920, "batch_norm3d_relu": 1920, "batch_norm_relu": 1920, "cat_out": 1920, "cat_relu": 1920, "cat_relu_out": 1920, "conv1d_dynam": 1920, "conv1d_prepack": 1920, "conv1d_unpack": 1920, "conv2d_add": 1920, "conv2d_add_relu": 1920, "conv2d_dil": 1920, "conv2d_dynam": 1920, "conv2d_group": 1920, "conv2d_output_pad": 1920, "conv2d_pad": 1920, "conv2d_strid": 1920, "conv2d_transpos": 1920, "conv2d_unpack": 1920, "conv2d_unpack_s": 1920, "conv3d_dil": 1920, "conv3d_dynam": 1920, "conv3d_group": 1920, "conv3d_output_pad": 1920, "conv3d_pad": 1920, "conv3d_strid": 1920, "conv3d_transpos": 1920, "conv3d_unpack": 1920, "conv_prepack": 1920, "conv_transpose1d_dynam": 1920, "conv_transpose1d_unpack": 1920, "conv_transpose2d_dil": 1920, "conv_transpose2d_dynam": 1920, "conv_transpose2d_group": 1920, "conv_transpose2d_output_pad": 1920, "conv_transpose2d_pad": 1920, "conv_transpose2d_strid": 1920, "conv_transpose2d_transpos": 1920, "conv_transpose2d_unpack": 1920, "conv_transpose3d_dil": 1920, "conv_transpose3d_dynam": 1920, "conv_transpose3d_group": 1920, "conv_transpose3d_output_pad": 1920, "conv_transpose3d_pad": 1920, "conv_transpose3d_strid": 1920, "conv_transpose3d_transpos": 1920, "conv_transpose3d_unpack": 1920, "conv_unpack": 1920, "embedding_4bit": 1920, "embedding_bag_2bit_prepack": 1920, "embedding_bag_2bit_rowwise_offset": 1920, "embedding_bag_2bit_unpack": 1920, "embedding_bag_4bit": 1920, "embedding_bag_4bit_prepack": 1920, "embedding_bag_4bit_rowwise_offset": 1920, "embedding_bag_4bit_unpack": 1920, "embedding_bag_byt": 1920, "embedding_bag_byte_prepack": 1920, "embedding_bag_byte_rowwise_offset": 1920, "embedding_bag_byte_unpack": 1920, "embedding_bag_prepack": 1920, "embedding_bag_unpack": 1920, "embedding_byt": 1920, "linear_dynamic_fp16": 1920, "linear_leaky_relu": 1920, "linear_relu": [1920, 1927], "linear_relu_dynam": 1920, "linear_relu_dynamic_fp16": 1920, "linear_tanh": 1920, "linear_unpack": 1920, "linear_unpack_fp16": 1920, "linear_with_input_q_dq_qweight_dq_output_fp32": 1920, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1920, "make_quantized_cell_param": 1920, "make_quantized_cell_params_dynam": 1920, "make_quantized_cell_params_fp16": 1920, "mul_out": 1920, "mul_relu": 1920, "mul_relu_out": 1920, "mul_scalar_out": 1920, "mul_scalar_relu": 1920, "mul_scalar_relu_out": 1920, "quantized_gru_cell_dynam": 1920, "quantized_lstm_cell_dynam": 1920, "quantized_rnn_relu_cell_dynam": 1920, "quantized_rnn_tanh_cell_dynam": 1920, "rngprim": 1920, "philox_rand": 1920, "qlinear": 1920, "qlinear_dynam": 1920, "qlinear_prepack": 1920, "qlinear_relu": 1920, "qlinear_relu_dynam": 1920, "qlinear_unpack": 1920, "static_runtim": 1920, "vartupleunpack": 1920, "clamp_nan_to_num": 1920, "create_owned_ref": 1920, "dequantize_copi": 1920, "dict_unpack": 1920, "expand_dims_copi": 1920, "flatten_copi": 1920, "fused_equally_split": 1920, "reshape_copi": 1920, "select_tensor": 1920, "signed_log1p": 1920, "to_copi": 1920, "to_maybe_copy_out": 1920, "var1": 1921, "var2": 1921, "lbfg": 1921, "adadelta": 1921, "adamax": 1921, "asgd": 1921, "nadam": 1921, "radam": 1921, "rmsprop": 1921, "rprop": 1921, "reducelronplateau": 1921, "multisteplr": 1921, "upgrad": [1921, 1941], "swa_util": 1921, "averagedmodel": 1921, "swalr": 1921, "update_bn": 1921, "optima": 1921, "polyak": 1921, "averaged_model": 1921, "multi_avg_fn": 1921, "get_ema_multi_avg_fn": 1921, "textrm": 1921, "update_paramet": 1921, "avg_fn": 1921, "_foreach": 1921, "ema_model": 1921, "ema_avg": 1921, "averaged_model_paramet": 1921, "model_paramet": 1921, "num_averag": 1921, "swa_schedul": 1921, "anneal_epoch": 1921, "swa_lr": 1921, "swa_model": 1921, "cosineannealinglr": 1921, "swa_start": 1921, "test_input": 1921, "secur": 1922, "unpackag": 1922, "exercis": 1922, "unzip": 1922, "my_packag": 1922, "freeli": 1922, "94304870911616": 1922, "94304900784016": 1922, "extern_modul": 1922, "model_1": 1922, "pkl": 1922, "myzip": 1922, "file_byt": 1922, "writestr": 1922, "new_file_byt": 1922, "vim": 1922, "vimrc": 1922, "bufreadcmd": 1922, "brows": 1922, "amatch": 1922, "vi": 1922, "packageimport": 1922, "queryabl": 1922, "glob": 1922, "packageexport": 1922, "pe": 1922, "save_pickl": 1922, "has_fil": 1922, "importer_file_structur": 1922, "package_a": 1922, "get_rdep": 1922, "all_path": 1922, "dependency_graph_str": 1922, "save_text": 1922, "save_binari": 1922, "my_resourc": 1922, "config_stuff": 1922, "raw_data": 1922, "my_byt": 1922, "complementari": [1922, 1935], "load_pickl": 1922, "load_text": 1922, "load_binari": 1922, "my_tensor": 1922, "__reduce_package__": 1922, "my_str": 1922, "time_import": 1922, "time_export": 1922, "pickler": 1922, "persistent_id": 1922, "persistent_load": 1922, "generated_module_nam": 1922, "get_unique_id": 1922, "clock_gettim": 1922, "unpackage_foo": 1922, "depickl": 1922, "foo_1": 1922, "foo_2": 1922, "foo_packag": 1922, "foo_collect": 1922, "foo1": 1922, "foo2": 1922, "imported_foo": 1922, "9857706": 1922, "650140837": 1922, "652698385": 1922, "__torch_package__": 1922, "is_in_packag": 1922, "userexcept": 1922, "unpackageableexcept": 1922, "loaded_modul": 1922, "import_modul": 1922, "save_source_str": 1922, "save_modul": 1922, "textwrap": 1922, "dedent": 1922, "my_funct": 1922, "is_packag": 1922, "importlib": 1922, "my_pickl": 1922, "get_my_resourc": 1922, "read_text": 1922, "torch_package_import": 1922, "get_my_pickl": 1922, "is_from_packag": 1922, "stdlib": 1922, "my_test": 1922, "f2": [1922, 1923], "sys_import": 1922, "script_model": 1922, "mixed_model": 1922, "python_model_with_scripted_submodul": 1922, "loaded_script": 1922, "loaded_mix": 1922, "convention": 1922, "94286146172688": 1922, "94286146172784": 1922, "consult": [1922, 1951], "essai": 1922, "another_packag": 1922, "pickletool": 1922, "ast": 1922, "deni": 1922, "my_export": 1922, "my_interned_modul": 1922, "package_export": 1922, "my_externed_modul": 1922, "my_mocked_modul": 1922, "unwant": [1922, 1939], "hodg": 1922, "podg": 1922, "bazel": 1922, "buck": 1922, "my_class_inst": 1922, "imported_myclass": 1922, "okai": 1922, "torch_package_0": 1922, "handle_me_this_wai": 1922, "inadvert": 1922, "pun": 1922, "packagingerror": 1922, "dependency_graph": 1922, "emptymatcherror": 1922, "allow_empti": 1922, "_sysimport": 1922, "hermet": 1922, "scan": 1922, "orderedimport": 1922, "add_depend": 1922, "graphviz": 1922, "lang": 1922, "denied_modul": 1922, "my_subpackag": 1922, "digraph": 1922, "externed_modul": 1922, "interned_modul": 1922, "mocked_modul": 1922, "register_extern_hook": 1922, "register_intern_hook": 1922, "register_mock_hook": 1922, "myobject": 1922, "save_source_fil": 1922, "file_or_directori": 1922, "my_subsubpackag": 1922, "file_or_buff": 1922, "module_allow": 1922, "pytorchfileread": 1922, "python_vers": 1922, "is_dir": 1922, "gpipe": 1923, "suffer": 1923, "allevi": [1923, 1953], "microbatch": 1923, "bubbl": 1923, "except_last": 1923, "deferred_batch_norm": 1923, "torchgpip": 1923, "withdevic": 1923, "micro": 1923, "fc": [1923, 1925], "init_rpc": [1923, 1930, 1931], "output_rref": 1923, "fed": [1923, 1939], "nochunk": 1923, "resnext": 1923, "till": 1923, "skippabl": 1923, "perfectli": 1923, "1to3": 1923, "layer1": 1923, "f1": 1923, "layer2": 1923, "layer3": 1923, "skip_1to3": 1923, "f3": 1923, "alic": 1923, "bob": 1923, "carol": 1923, "stashstashpop": 1923, "f_alic": 1923, "f_bob": 1923, "verify_skipp": 1923, "unmatch": [1923, 1944], "fairscal": 1923, "_kinetoprofil": 1924, "profileract": 1924, "add_metadata": 1924, "add_metadata_json": 1924, "unaggreg": 1924, "export_chrome_trac": [1924, 1961], "export_memory_timelin": 1924, "gzip": 1924, "export_stack": 1924, "self_cuda_time_tot": 1924, "flamegraph": 1924, "brendangregg": 1924, "pl": 1924, "countnam": 1924, "perf_viz": 1924, "svg": 1924, "on_trace_readi": 1924, "record_and_sav": 1924, "tensorboard_trace_handl": 1924, "dir_nam": 1924, "logdir": [1924, 1939], "plugin": [1924, 1939, 1949], "code_to_profil": 1924, "row_limit": 1924, "trace_handl": 1924, "test_trace_": 1924, "step_num": 1924, "code_iteration_to_profil": 1924, "mtia": 1924, "skip_first": 1924, "worker_nam": [1924, 1930], "use_gzip": 1924, "range_push": 1924, "range_pop": 1924, "4x": 1925, "broadli": 1925, "domin": 1925, "previous_layer_fp32": 1925, "linear_fp32": 1925, "activation_fp32": 1925, "next_layer_fp32": 1925, "linear_weight_fp32": 1925, "linear_int8_w_fp32_inp": 1925, "linear_weight_int8": 1925, "ptdq": 1925, "model_fp32": 1925, "model_int8": 1925, "quantize_dynam": 1925, "input_fp32": 1925, "previous_layer_int8": 1925, "linear_with_activation_int8": 1925, "next_layer_int8": 1925, "ptsq": 1925, "minmax": 1925, "l2norm": 1925, "model_fp32_fus": 1925, "fuse_modul": [1925, 1926], "model_fp32_prepar": 1925, "fq": 1925, "prepare_qat": 1925, "training_loop": 1925, "requant": 1925, "linear1": 1925, "custom_qconfig": 1925, "fxptq": 1925, "model_fp": 1925, "usermodel": 1925, "model_to_quant": 1925, "default_dynamic_qconfig": 1925, "model_prepar": 1925, "model_quant": 1925, "model_fus": 1925, "per_tensor_symmetr": [1925, 1928], "per_channel_symmetr": [1925, 1928], "per_channel_scal": 1925, "per_channel_zero_point": 1925, "quantized_tensor": 1925, "qengin": 1925, "in4": 1925, "tensorrt": [1925, 1945, 1949, 1953], "fx2trt": 1925, "float_modul": [1925, 1943], "staticquantcustommodul": 1925, "observed_modul": 1925, "default_qconfig": [1925, 1944], "vnni": 1925, "test_quantized_op": 1925, "testquantizedop": 1925, "test_custom_module_lstm": 1925, "test_quantize_fx": 1925, "testquantizefx": 1925, "test_static_lstm": 1925, "some_oper": 1925, "e2": 1925, "thnn_conv2d_forward": 1925, "quantizedcpu": 1925, "some_qconfig": 1925, "linearpackedparam": 1925, "_modul": 1925, "prepare_orig": 1925, "quantized_orig": 1925, "scripted_quant": 1925, "fp32_op": 1926, "int8_op": 1926, "cooperlak": 1926, "audit": 1926, "op_fp32": 1926, "op_int8": 1926, "_numeric_suit": 1926, "_numeric_suite_fx": 1926, "0x7fb347af5ec0": 1927, "0x7fb333603160": 1927, "0x7fb3336031f0": 1927, "num_tensor_args_to_observation_typ": 1927, "convbn1d": 1927, "0x7fb3329aa550": 1927, "reference_quantized_module_for_root": 1927, "fuse_convtranspose_bn": 1927, "0x7fb3329aa700": 1927, "linearbn1d": 1927, "fuse_linear_bn": 1927, "0x7fb3329aa670": 1927, "convbn2d": 1927, "convbn3d": 1927, "bnrelu2d": 1927, "bnrelu3d": 1927, "input_type_to_index": 1927, "conv_fus": 1927, "convbnrelu1d": 1927, "convbnrelu2d": 1927, "convbnrelu3d": 1927, "convrelu1d": 1927, "convrelu3d": 1927, "0x7fb333603280": 1927, "0x7fb3336038b0": 1927, "quint4x2": [1927, 1936, 1940, 1941], "embedding_op": 1927, "0x7fb333605790": 1927, "00390625": 1927, "0x7fb3336050d0": 1927, "0x7fb333605280": 1927, "0x7fb333603790": 1927, "0x7fb333605670": 1927, "0x7fb333585280": 1927, "0x7fb333605700": 1927, "0x7fb333603a60": 1927, "linear_fus": 1927, "_sequential_wrapper2": 1927, "0x7fb34ec47430": 1927, "0x7fb333603670": 1927, "0x7fb330b030d0": 1927, "fuse_conv_bn_relu": 1927, "0x7fb3329aa5e0": 1927, "0x7fb330b03160": 1927, "0x7fb330b031f0": 1927, "0x7fb330b03280": 1927, "0x7fb330b03310": 1927, "0x7fb330b033a0": 1927, "0x7fb330b03430": 1927, "0x7fb330b034c0": 1927, "0x7fb330b03550": 1927, "0x7fb330b035e0": 1927, "0x7fb330b03670": 1927, "0x7fb333603820": 1927, "0078125": 1927, "customconfig": 1928, "custom_module_config": 1928, "_caller": 1929, "_devices_kw": 1929, "slowli": 1929, "unind": 1929, "deivce_typ": 1929, "shortcom": 1930, "stitch": 1930, "rpc_backend_opt": 1930, "trainer3": 1930, "parameterserver2": 1930, "dash": [1930, 1932], "backendtyp": 1930, "rpcbackendopt": 1930, "rpcagent": 1930, "transmit": 1930, "calle": [1930, 1932], "_set_rpc_timeout": 1930, "5678": 1930, "worker0": 1930, "my_script_add": 1930, "wire": 1930, "fut2": 1930, "meth": 1930, "grace": 1930, "pend": [1930, 1939, 1948], "userrref": [1930, 1932], "async_execut": 1930, "paus": 1930, "outmost": 1930, "async_add_chain": 1930, "worker2": 1930, "script_add": 1930, "async_add": 1930, "asyncexecutionclass": 1930, "static_async_add": 1930, "class_async_add": 1930, "ret_fut": 1930, "bound_async_add": 1930, "rpc_timeout": 1930, "incid": [1930, 1932], "nvlink": 1930, "multiplex": 1930, "tensorpiperpcbackendopt": 1930, "num_worker_thread": 1930, "device_map": 1930, "_transport": 1930, "tensorpipeag": 1930, "set_device_map": 1930, "intermitt": 1930, "pyrref": 1930, "type_hint": 1930, "_distributed_rpc": 1930, "dist_autograd_ctx_id": 1930, "ctx_id": 1930, "ownerrref": [1930, 1932], "remote_modul": 1930, "forward_async": 1930, "remote_devic": 1930, "workernam": 1930, "trainer0": 1930, "ps0": 1930, "remote_linear_modul": 1930, "get_module_rref": 1930, "remote_paramet": 1930, "my_add": [1931, 1964], "t4": 1931, "t5": 1931, "autograd_message_id": 1931, "autograd_context_id": 1931, "send1": 1931, "kickoff": 1931, "recv2": 1931, "heard": 1931, "send2": 1931, "recv1": 1931, "dist_autograd_simpl": 1931, "random_tensor": 1931, "_run_process": 1931, "dst_rank": 1931, "dst_name": 1931, "run_process": 1931, "rrefid": 1932, "transient": 1932, "udf": 1932, "deliveri": 1932, "knowledg": 1932, "danger": 1932, "ancestor": 1932, "trickier": 1932, "wouldn": [1932, 1952], "forkid": 1932, "ack": 1932, "solid": 1932, "gc": 1932, "followup": 1932, "lil": 1934, "stark": 1934, "9093": 1934, "1411": 1934, "7568": 1934, "9589": 1934, "2794": 1934, "catastroph": 1934, "9900": 1934, "sturctur": 1934, "metadata_mask": 1934, "rce": 1934, "rc": 1934, "62": 1934, "to_sparse_semi_structur": 1934, "1x4": 1934, "16x16": 1934, "a_spars": 1934, "sparsesemistructuredtensor": 1934, "000": 1934, "400": 1934, "s2": 1934, "plain_dim_s": 1934, "lp64": 1934, "280": 1934, "310": 1934, "sp": 1934, "9078": 1934, "conception": 1934, "sparsesemistructur": 1934, "lobpcg": 1934, "geneig": 1934, "pca_lowrank": 1934, "kindli": 1934, "airy_ai": 1935, "airi": 1935, "onward": 1935, "9635": 1935, "entr": 1935, "3466": 1935, "int_": 1935, "8427": 1935, "0561": 1935, "4769": 1935, "9213": 1935, "8858": 1935, "7683": 1935, "7481": 1935, "2920": 1935, "int_0": 1935, "gammaln": 1935, "a1": 1935, "a2": 1935, "3528": 1935, "5665": 1935, "6472": 1935, "4335": 1935, "2650": 1935, "2661": 1935, "2796": 1935, "8808": 1935, "3019": 1935, "4658": 1935, "3085": 1935, "2430": 1935, "2070": 1935, "i1": 1935, "5652": 1935, "9534": 1935, "7595": 1935, "2153": 1935, "log_ndtr": 1935, "_ndtr": 1935, "6077": 1935, "7832": 1935, "841": 1935, "6931": 1935, "1728": 1935, "023": 1935, "9331": 1935, "6486": 1935, "1523": 1935, "6516": 1935, "6352": 1935, "6131": 1935, "7169": 1935, "6261": 1935, "displaystyl": 1935, "undefiend": 1935, "6835": 1935, "8474": 1935, "1929": 1935, "7162": 1935, "4180": 1935, "3928": 1935, "4007": 1935, "7586": 1935, "3901": 1935, "5049": 1935, "ndtr": 1935, "0228": 1935, "1587": 1935, "9772": 1935, "9987": 1935, "2p": 1935, "64493": 1935, "4041": 1935, "8288": 1935, "4939": 1935, "97": 1935, "4091": 1935, "8863": 1935, "771": 1935, "scaled_modified_bessel_k0": 1935, "scaled_modified_bessel_k1": 1935, "2948": 1935, "0267": 1935, "1566": 1935, "9186": 1935, "8631": 1935, "0259": 1935, "1300": 1935, "spheric": 1935, "xlog1pi": 1935, "3863": 1935, "1972": 1935, "6094": 1935, "2189": 1935, "8283": 1935, "7726": 1935, "0986": 1935, "1589": 1935, "hurwitz": 1935, "6449": 1935, "0823": 1935, "untyp": 1936, "wrap_storag": 1936, "complex_doubl": 1936, "from_buff": 1936, "is_hpu": 1936, "pickle_storage_typ": 1936, "byteswap": 1936, "quint2x4": [1936, 1941], "twelv": 1937, "halftensor": [1937, 1940], "bfloat16tensor": [1937, 1940], "chartensor": [1937, 1940], "shorttensor": [1937, 1940], "binary16": [1937, 1940], "significand": [1937, 1940], "float_tensor": 1937, "double_tensor": 1937, "complex_float_tensor": 1937, "complex_double_tensor": 1937, "int_tensor": 1937, "long_tensor": 1937, "uint_tensor": 1937, "bool_tensor": 1937, "long_zerodim": 1937, "int_zerodim": 1937, "set_default_devic": 1937, "cuda1": 1937, "nhwc": [1937, 1939], "channels_last_3d": 1937, "ndhwc": 1937, "blogpost": 1938, "totensor": 1939, "trainset": 1939, "mnist": 1939, "mnist_train": 1939, "trainload": 1939, "grayscal": 1939, "make_grid": 1939, "add_imag": 1939, "add_graph": 1939, "clutter": 1939, "n_iter": 1939, "purge_step": 1939, "max_queu": 1939, "flush_sec": 1939, "filename_suffix": 1939, "current_datetime_hostnam": 1939, "exp1": 1939, "global_step": 1939, "purg": 1939, "event_file_writ": 1939, "eventfilewrit": 1939, "may04_22": 1939, "54_": 1939, "macbook": 1939, "my_experi": 1939, "lr_0": 1939, "1_batch_16": 1939, "locallr_0": 1939, "scalar_valu": 1939, "walltim": 1939, "new_styl": 1939, "double_precis": 1939, "blobnam": 1939, "simple_valu": 1939, "2x": [1939, 1957], "main_tag": 1939, "tag_scalar_dict": 1939, "run_14h": 1939, "xsinx": 1939, "xcosx": 1939, "tanx": 1939, "add_histogram": 1939, "max_bin": 1939, "fd": 1939, "img_tensor": 1939, "dataformat": 1939, "chw": 1939, "hwc": 1939, "hw": 1939, "wh": 1939, "3xhxw": 1939, "img_hwc": 1939, "my_imag": 1939, "my_image_hwc": 1939, "img_batch": 1939, "my_image_batch": 1939, "add_figur": 1939, "add_video": 1939, "vid_tensor": 1939, "fp": 1939, "moviepi": 1939, "add_audio": 1939, "snd_tensor": 1939, "sample_r": 1939, "44100": 1939, "add_text": 1939, "text_str": 1939, "input_to_model": 1939, "use_strict_trac": 1939, "add_embed": 1939, "label_img": 1939, "metadata_head": 1939, "projector": 1939, "kwlist": 1939, "add_pr_curv": 1939, "num_threshold": 1939, "pr_curv": 1939, "add_custom_scalar": 1939, "chart": 1939, "categorynam": 1939, "chartnam": 1939, "listofproperti": 1939, "multilin": 1939, "taiwan": 1939, "twse": 1939, "0050": 1939, "2330": 1939, "dow": 1939, "aaa": 1939, "bbb": 1939, "ccc": 1939, "nasdaq": 1939, "add_mesh": 1939, "config_dict": 1939, "threej": 1939, "vertex": 1939, "number_of_vertic": 1939, "vertices_tensor": 1939, "colors_tensor": 1939, "faces_tensor": 1939, "my_mesh": 1939, "add_hparam": 1939, "hparam_dict": 1939, "metric_dict": 1939, "hparam_domain_discret": 1939, "run_nam": 1939, "hparam": 1939, "bsize": 1939, "tini": [1940, 1941, 1957, 1965], "_like": 1940, "allow_subclass": 1941, "check_devic": 1941, "check_layout": 1941, "6e": 1941, "3e": 1941, "assert_equ": 1941, "000000000000001e": 1941, "1e0": 1941, "argh": 1941, "nfooter": 1941, "66": 1941, "footer": 1941, "exclude_zero": 1941, "1205": 1941, "2282": 1941, "6380": 1941, "default_gener": 1942, "click": [1942, 1960, 1961], "data_dependent_output": 1942, "dynamic_output_shap": 1942, "inplace_view": 1942, "nondeterministic_bitwis": 1942, "nondeterministic_seed": 1942, "compare_weight": 1943, "float_dict": 1943, "quantized_dict": 1943, "wt_compare_dict": 1943, "qmodel": 1943, "compute_error": 1943, "weight_dict": 1943, "get_logger_dict": 1943, "shadowlogg": 1943, "outputlogg": [1943, 1944], "target_dict": 1943, "q_modul": 1943, "logger_cl": [1943, 1944], "prepare_model_with_stub": 1943, "module_swap_list": 1943, "q_model": 1943, "ob_dict": 1943, "compare_model_stub": 1943, "quantizablebasicblock": 1943, "get_matching_activ": 1943, "act_dict": 1943, "prepare_model_output": 1943, "compare_model_output": 1943, "act_compare_dict": 1943, "weight_comparison": 1944, "extract_weight": 1944, "sqnr": 1944, "extend_logger_results_with_comparison": 1944, "compute_sqnr": 1944, "mp_n": 1944, "mq_n": 1944, "add_logg": 1944, "act_comparison": 1944, "extract_logger_info": 1944, "mp_shadows_mq": 1944, "add_shadow_logg": 1944, "shadow_act_comparison": 1944, "extract_shadow_logger_info": 1944, "ref_node_nam": 1944, "prev_node_nam": 1944, "model_nam": 1944, "ref_nam": 1944, "prev_node_target_typ": 1944, "ref_node_target_typ": 1944, "results_typ": 1944, "index_within_arg": 1944, "index_of_arg": 1944, "qconfig_str": 1944, "outputcomparisonlogg": 1944, "x_ref": 1944, "nstracer": 1944, "skipped_module_nam": 1944, "skipped_module_class": 1944, "model_name_a": 1944, "model_a": 1944, "model_name_b": 1944, "model_b": 1944, "base_name_to_sets_of_related_op": 1944, "unmatchable_types_map": 1944, "op_to_type_to_weight_extraction_fn": 1944, "nsresultstyp": 1944, "name_a": 1944, "name_b": 1944, "should_log_input": 1944, "model_a_with_logg": 1944, "model_b_with_logg": 1944, "model_name_to_use_for_layer_nam": 1944, "node_type_to_io_type_map": 1944, "model_a_shadows_b": 1944, "model_name_1": 1944, "model_name_2": 1944, "comparison_fn": 1944, "comparison_nam": 1944, "prepare_n_shadows_model": 1944, "qconfig_multi_map": 1944, "custom_prepare_fn": 1944, "custom_prepare_kwarg": 1944, "custom_trac": 1944, "args_kwargs_m": 1944, "op_m": 1944, "output_m": 1944, "op_m_n": 1944, "log_m_n": 1944, "log_m_0": 1944, "qconfig_n": 1944, "args_m": 1944, "op_m_prepared_with_qconfig_n": 1944, "out_m_n": 1944, "kwargs_m": 1944, "docblock": 1944, "loggers_set_en": 1944, "loggers_set_save_activ": 1944, "save_activ": 1944, "convert_n_shadows_model": 1944, "custom_convert_fn": 1944, "custom_convert_kwarg": 1944, "extract_results_n_shadows_model": 1944, "print_comparisons_n_shadows_model": 1944, "compute_normalized_l2_error": 1944, "compute_cosine_similar": 1944, "surfac": 1945, "openai": 1945, "onnxrt": 1945, "ipex": 1945, "tvm": 1945, "apach": 1945, "dashboard": [1945, 1950, 1957], "nnmodul": 1945, "simd": 1947, "slot": [1947, 1964], "isa": 1947, "amx": 1947, "collect_env": 1947, "avx512f": 1947, "avx512bw": 1947, "avx512_vnni": 1947, "amx_til": 1947, "amx_bf16": 1947, "amx_int8": 1947, "debut": 1948, "cachingalloc": 1948, "cudagraph_tre": 1948, "footgun": [1948, 1952], "my_custom_backend": 1949, "f_opt": 1949, "my_compil": [1949, 1950, 1956], "torch_dynamo_backend": 1949, "your_modul": 1949, "minifi": [1949, 1953], "aot_autograd": 1949, "fw_compil": 1949, "bw_compil": 1949, "make_boxed_func": 1949, "model_opt": 1949, "0x7f1a894649a8": 1949, "mockmodul": 1949, "optimized_mod": 1949, "toy_exampl": [1949, 1950, 1953, 1956, 1963], "abs_1": [1949, 1950], "0x7f8d259298a0": 1949, "superior": 1949, "optimize_for_inference_compil": 1949, "code_to_acceler": 1949, "trt_compil": 1949, "inductor_compil": 1949, "523": 1950, "tensor_match": 1950, "function_match": 1950, "recaptur": 1950, "__compiled_fn_0": 1950, "eval_with_kei": 1950, "0x7f9ca082f8a0": 1950, "load_fast": [1950, 1956], "load_glob": 1950, "load_method": 1950, "load_const": [1950, 1956], "binary_add": 1950, "binary_true_divid": 1950, "store_fast": 1950, "compare_op": 1950, "pop_jump_if_fals": 1950, "binary_multipli": [1950, 1956], "unpack_sequ": 1950, "__resume_at_30_1": 1950, "__resume_at_38_2": 1950, "__resume_at_": 1950, "jump_absolut": 1950, "resume_at": 1950, "symbolic_shap": 1951, "recognit": 1951, "jag": 1951, "induct": 1951, "pt2": [1951, 1952], "mark_dynam": 1951, "automatic_dynamic_shap": 1951, "proactiv": 1951, "shapeenv": [1951, 1952], "faithfulli": 1951, "sympi": 1951, "reusabl": 1951, "plumb": 1951, "symnodeimpl": 1951, "python_symnod": 1951, "_meta_registr": 1951, "decomp": [1951, 1952], "primtorch": [1951, 1952], "symnod": 1951, "apparatu": 1951, "precomput": 1951, "constrain_rang": 1951, "wherebi": 1951, "trash": 1952, "bunch": 1952, "from_real_tensor": 1952, "fakeifi": 1952, "dispatch_devic": 1952, "ly": 1952, "derefer": 1952, "backtrac": 1952, "in_kernel_invocation_manag": 1952, "unwrap": 1952, "test_fake_tensor": 1952, "fake_mod": 1952, "fake_x": 1952, "fake_i": 1952, "fake_z": 1952, "_guard": 1952, "detect_fake_mod": 1952, "fake_arg": 1952, "lifecycl": [1952, 1956], "maybe_disable_fake_tensor_mod": 1952, "nich": 1952, "faketensorprop": 1952, "fake_tensor_prop": 1952, "propagate_dont_convert_input": 1952, "fake_input": 1952, "real_tensor": 1952, "annoi": 1952, "somehow": 1952, "fakecopymod": 1952, "gave": 1952, "fakeif": 1952, "tension": 1952, "analys": 1952, "hopefulli": 1952, "impl_abstract": 1952, "hardcod": 1952, "metaconvert": 1952, "die": 1952, "unback": 1952, "saroufim": 1953, "evalfram": 1953, "usercod": 1953, "rob": 1953, "diminish": 1953, "vast": 1953, "nopython": [1953, 1956, 1963], "250k": 1953, "aitempl": 1953, "aot_eag": [1953, 1963], "compile_tim": [1953, 1961, 1963], "torch_compile_debug": [1953, 1955], "troubl": [1953, 1954, 1963], "compileprofil": [1953, 1963], "profiler_model": [1953, 1963], "traffic": 1953, "frozen_toy_exampl": 1953, "multiprocessor": 1953, "some_fun": [1953, 1963], "insurmount": [1953, 1963], "woo": [1953, 1963], "out_guard": [1953, 1963], "ops_per_graph": [1953, 1963], "builtinvari": [1953, 1963], "constantvari": [1953, 1956, 1963], "generic_jump": [1953, 1963], "torchdynamo_dynamic_shap": 1953, "cv": 1953, "app": 1953, "unnecessarili": 1953, "cold": [1953, 1960], "visibli": 1953, "torchdynamo_repro_level": [1953, 1963], "bisect": [1953, 1963], "torchdynamo_repro_aft": [1953, 1963], "dramat": [1953, 1963], "uncommon": 1953, "a_fn": [1953, 1954], "aa_fn": [1953, 1954], "ab_fn": [1953, 1954], "handel": 1954, "unblock": 1954, "nnthi": 1954, "black": 1954, "nnnote": 1954, "screen": [1954, 1961], "b_fn": 1954, "white": 1954, "new_fn": 1955, "famou": 1955, "crunch": 1955, "torchinductor_": 1955, "your_usernam": 1955, "size_hint": 1955, "i32": 1955, "instance_descriptor": 1955, "divisible_by_16": 1955, "equal_to_1": 1955, "in_ptr0": 1955, "out_ptr0": 1955, "xnumel": 1955, "xblock": 1955, "tl": 1955, "constexpr": 1955, "xoffset": 1955, "program_id": 1955, "xindex": 1955, "xmask": 1955, "tmp0": 1955, "tmp1": 1955, "tmp2": 1955, "tmp3": 1955, "v0": 1955, "opt_model": 1955, "timm": [1955, 1960], "huggingfac": [1955, 1960], "berttoken": 1955, "bertmodel": 1955, "uncas": 1955, "me": 1955, "encoded_input": 1955, "return_tensor": 1955, "trigonometri": 1955, "skim": 1955, "create_model": 1955, "resnext101_32x8d": 1955, "fn_foo": 1956, "grab": 1956, "dig": 1956, "hole": 1956, "neutral": 1956, "check_fn": 1956, "_pyinterpreterstate_setevalframefunc": 1956, "convert_fram": [1956, 1963], "convert_frame_assert": 1956, "gloss": 1956, "222": 1956, "compiler_fn": 1956, "one_graph": 1956, "_convert_frame_assert": 1956, "frametyp": 1956, "f_code": 1956, "needless": 1956, "evict": 1956, "transform_code_object": 1956, "output_instruct": 1956, "guardedcod": 1956, "symbolic_loc": 1956, "f_local": 1956, "variablebuild": 1956, "localsourc": 1956, "_wrap": 1956, "variabletrack": 1956, "make_guard": 1956, "pump": 1956, "cool": 1956, "get_instruct": 1956, "124": 1956, "opnam": 1956, "argval": 1956, "starts_lin": 1956, "is_jump_target": 1956, "inst": 1956, "unimpl": 1956, "dozen": 1956, "symbolic_convert": [1956, 1963], "spoken": 1956, "quiet": 1956, "replace_guard": 1956, "add_guard": 1956, "behalf": 1956, "python_typ": 1956, "as_proxi": 1956, "as_python_proxi": 1956, "bookkeep": 1956, "came": 1956, "flesh": 1956, "relianc": 1956, "build_tupl": 1956, "popn": 1956, "tuplevari": 1956, "pydoc": 1956, "tensorvari": 1956, "instructiontranslatorbas": 1956, "ctor": 1956, "guardsourc": 1956, "create_fn": 1956, "guard_sourc": 1956, "istyp": 1956, "guardbuild": 1956, "equals_match": 1956, "rangevari": 1956, "appar": 1956, "checkfunctionmanag": 1956, "compile_check_fn": 1956, "cacheentri": 1956, "create_cache_entri": 1956, "pyobject": 1956, "guarded_cod": 1956, "malloc": 1956, "debug_null_check": 1956, "pyobject_getattrstr": 1956, "null_check": 1956, "pycodeobject": 1956, "sort_kei": 1956, "guard_nn_modul": 1956, "is_nn_modul": 1956, "local_build": 1956, "global_build": 1956, "___guarded_cod": 1956, "___check_type_id": 1956, "94367738391392": 1956, "___check_tensor": 1956, "_eval_fram": 1956, "anew": 1956, "massiv": 1956, "weak": 1956, "moduleinvalid": 1956, "torchinductor_unique_kernel_nam": 1957, "triton_poi_fused_cat_155": 1957, "poi": 1957, "torchinductor_benchmark_kernel": 1957, "har": 1957, "torchinductor_max_autotun": 1957, "mixnet_l": 1957, "timm_model": 1957, "torchinductor_shunt": 1957, "qz": 1957, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 1957, "shunting314": 1957, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 1957, "48efc83b12ec3ead950052e4a0220b10": 1957, "compiled_module_profil": 1957, "browser": [1957, 1961], "zoom": [1957, 1961], "88": 1957, "distort": [1957, 1961], "densenet121": 1957, "69": 1957, "cutlass": 1957, "57": 1957, "ff": 1957, "justifi": 1957, "triton_red_fus": 1957, "__native_batch_norm_legit_functional_16": 1957, "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 1957, "_adaptive_avg_pool2d_backward": 1958, "half_to_float": 1958, "no_stat": 1958, "scalartyp": 1958, "memoryformat": 1958, "start_step": 1958, "avg_pool2d_backward": 1958, "convolution_backward": 1958, "bias_siz": 1958, "output_mask": 1958, "embedding_dense_backward": 1958, "num_weight": 1958, "max_pool2d_with_indices_backward": 1958, "native_group_norm_backward": 1958, "rstd": 1958, "native_layer_norm_backward": 1958, "tensor_scalar": 1958, "tensor_tensor": 1958, "dim_intlist": 1958, "broadcast_dimens": 1958, "start_indic": 1958, "limit_indic": 1958, "start_index": 1958, "limit_index": 1958, "outer_length": 1958, "constabl": 1959, "orchestr": 1959, "_forward_pre_hook": 1959, "_backward_pre_hook": 1959, "_backward_hook": 1959, "_state_dict_hook": 1959, "load_": 1959, "avoiabl": 1959, "skip_nnmodule_hook_guard": 1959, "pre_backward": 1959, "warn_onc": 1959, "hui": 1960, "nightli": 1960, "a100": [1960, 1963], "night": 1960, "40gb": [1960, 1963], "2ghz": 1960, "torchbench": 1960, "trend": 1960, "droplist": 1960, "with_cudagraph": 1960, "toosl": 1961, "ncu": 1961, "model_c": 1961, "fwd_bwd": 1961, "scroll": 1961, "shortcut": 1961, "compiledfunct": 1961, "compiledfunctionbackward": 1961, "ac2g": 1961, "dropdown": 1961, "525": 1961, "_init_for_cuda_graph": 1961, "warmup_compil": 1961, "fn_c": 1961, "record_funct": 1961, "trace_compil": 1961, "synthet": 1961, "modelwithbreak": 1961, "create_sequenti": 1961, "mod1": 1961, "mod2": 1961, "mod3": 1961, "mod4": 1961, "trace_break": 1961, "sit": 1962, "replace_add_with_mul": 1962, "insert_relu_after_add": 1962, "new_relu_nod": 1962, "replaceaddwithmul": 1962, "transformed_graph_modul": 1962, "replaceaddwithmulsub": 1962, "mul_r": 1962, "removedetachpass": 1962, "args_map": 1962, "_schema": 1962, "kwarg_onli": 1962, "scalartotensorpass": 1962, "try_coerc": 1962, "replace_pattern": 1962, "replaced_pattern": 1962, "replace_pattern_with_filt": 1962, "replacedpattern": 1962, "passmanag": 1962, "pass_manag": 1962, "pm": 1962, "replace_add_with_div": 1962, "replace_div_with_mul": 1962, "run_checks_after_each_pass": 1962, "suppress_check_failur": 1962, "graph_module_out": 1962, "set_check": 1962, "check_div_target": 1962, "add_check": 1962, "subgraphmatch": 1962, "matcher_util": 1962, "match_output": 1962, "match_placehold": 1962, "remove_overlapping_match": 1962, "ignore_liter": 1962, "largemodel": 1962, "_bia": 1962, "large_model_graph": 1962, "patternmodel": 1962, "_weight_1": 1962, "_bias_1": 1962, "pattern_graph": 1962, "subgraph_match": 1962, "match_result": 1962, "internalmatch": 1962, "default_factori": 1962, "placeholder_nod": 1962, "returning_nod": 1962, "capabilitybasedpartition": 1962, "l34": 1962, "operator_support": 1962, "operatorsupportbas": 1962, "allows_single_node_partit": 1962, "non_compute_op": 1962, "_oper": 1962, "allowed_single_node_partition_op": 1962, "ll28c1": 1962, "l28c1": 1962, "is_node_support": 1962, "operatorsuppportbas": 1962, "l150": 1962, "any_chain": 1962, "l164": 1962, "addmuloperatorsupport": 1962, "capability_partition": 1962, "op_support": 1962, "partition_list": 1962, "propose_partit": 1962, "fused_graph_modul": 1962, "fuse_partit": 1962, "lazo": 1963, "torchdynamo_verbos": 1963, "replay_record_en": 1963, "torchdynamo_debug_funct": 1963, "test_assertion_error": 1963, "compiled_test_assertion_error": 1963, "mlazo": 1963, "837": 1963, "build_map": 1963, "thousand": 1963, "test_backend_error": 1963, "compiled_test_backend_error": 1963, "decomp_fn": 1963, "810": 1963, "repro_aft": 1963, "minifier_launch": 1963, "base_dir": 1963, "rand_strid": 1963, "0a0": 1963, "gitfddfc44": 1963, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 1963, "2022": 1963, "thu_feb_10_18": 1963, "41_pst_2022": 1963, "v11": 1963, "cuda_11": 1963, "r11": 1963, "30978841_0": 1963, "sxm4": 1963, "compile_fx": 1963, "compile_fx_inn": 1963, "toy_compil": 1963, "debug_util": 1963, "run_fwd_maybe_bwd": 1963, "opt_mod": 1963, "rg": 1963, "test_model": 1963, "debug_dir_root": 1963, "torch_compile_debug_dir": 1963, "run_2023_03_01_08_20_52_143510": 1963, "pid_180167": 1963, "model__0_forward_1": 1963, "aot_model___0_debug": 1963, "fx_graph_read": 1963, "fx_graph_runn": 1963, "fx_graph_transform": 1963, "ir_post_fus": 1963, "ir_pre_fus": 1963, "fx_graph": 1963, "buf1": 1963, "schedulernod": 1963, "computedbuff": 1963, "memorydep": 1963, "unmet_depend": 1963, "buf0": 1963, "met_depend": 1963, "primals_2": 1963, "buf1_loop_bodi": 1963, "var_rang": 1963, "z0": 1963, "index0": 1963, "index1": 1963, "get_index": 1963, "get_index_1": 1963, "load_1": 1963, "get_index_2": 1963, "compiled_fun": 1963, "hinder": 1963, "break_reason": 1963, "explanation_verbos": 1963, "compiled_toi": 1963, "as_subclass": 1964, "resolve_nam": 1964, "handle_torch_funct": 1964, "public_api": 1964, "relevant_arg": 1964, "has_torch_function_unari": 1964, "is_tensor_lik": 1964, "notatensor": 1964, "tensorlik": 1964, "is_tensor_method_or_properti": 1964, "__get__": 1964, "__module__": 1964, "wrap_torch_funct": 1964, "smallest_norm": 1965, "subnorm": 1965, "denormal_numb": 1965}, "objects": {"": [[1942, 0, 0, "-", "torch"], [1877, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1936, 1, 1, "", "BFloat16Storage"], [1936, 1, 1, "", "BoolStorage"], [1936, 1, 1, "", "ByteStorage"], [1936, 1, 1, "", "CharStorage"], [1936, 1, 1, "", "ComplexDoubleStorage"], [1936, 1, 1, "", "ComplexFloatStorage"], [1936, 1, 1, "", "DoubleStorage"], [1936, 1, 1, "", "FloatStorage"], [87, 1, 1, "", "Generator"], [1936, 1, 1, "", "HalfStorage"], [1936, 1, 1, "", "IntStorage"], [1936, 1, 1, "", "LongStorage"], [1936, 1, 1, "", "QInt32Storage"], [1936, 1, 1, "", "QInt8Storage"], [1936, 1, 1, "", "QUInt2x4Storage"], [1936, 1, 1, "", "QUInt4x2Storage"], [1936, 1, 1, "", "QUInt8Storage"], [1936, 1, 1, "", "ShortStorage"], [1942, 1, 1, "", "SymBool"], [1942, 1, 1, "", "SymFloat"], [1942, 1, 1, "", "SymInt"], [1942, 1, 1, "", "Tag"], [1940, 1, 1, "", "Tensor"], [1936, 1, 1, "", "TypedStorage"], [1936, 1, 1, "", "UntypedStorage"], [12, 0, 0, "-", "__config__"], [620, 5, 1, "", "_assert"], [621, 5, 1, "", "_foreach_abs"], [622, 5, 1, "", "_foreach_abs_"], [623, 5, 1, "", "_foreach_acos"], [624, 5, 1, "", "_foreach_acos_"], [625, 5, 1, "", "_foreach_asin"], [626, 5, 1, "", "_foreach_asin_"], [627, 5, 1, "", "_foreach_atan"], [628, 5, 1, "", "_foreach_atan_"], [629, 5, 1, "", "_foreach_ceil"], [630, 5, 1, "", "_foreach_ceil_"], [631, 5, 1, "", "_foreach_cos"], [632, 5, 1, "", "_foreach_cos_"], [633, 5, 1, "", "_foreach_cosh"], [634, 5, 1, "", "_foreach_cosh_"], [635, 5, 1, "", "_foreach_erf"], [636, 5, 1, "", "_foreach_erf_"], [637, 5, 1, "", "_foreach_erfc"], [638, 5, 1, "", "_foreach_erfc_"], [639, 5, 1, "", "_foreach_exp"], [640, 5, 1, "", "_foreach_exp_"], [641, 5, 1, "", "_foreach_expm1"], [642, 5, 1, "", "_foreach_expm1_"], [643, 5, 1, "", "_foreach_floor"], [644, 5, 1, "", "_foreach_floor_"], [645, 5, 1, "", "_foreach_frac"], [646, 5, 1, "", "_foreach_frac_"], [647, 5, 1, "", "_foreach_lgamma"], [648, 5, 1, "", "_foreach_lgamma_"], [649, 5, 1, "", "_foreach_log"], [650, 5, 1, "", "_foreach_log10"], [651, 5, 1, "", "_foreach_log10_"], [652, 5, 1, "", "_foreach_log1p"], [653, 5, 1, "", "_foreach_log1p_"], [654, 5, 1, "", "_foreach_log2"], [655, 5, 1, "", "_foreach_log2_"], [656, 5, 1, "", "_foreach_log_"], [657, 5, 1, "", "_foreach_neg"], [658, 5, 1, "", "_foreach_neg_"], [659, 5, 1, "", "_foreach_reciprocal"], [660, 5, 1, "", "_foreach_reciprocal_"], [661, 5, 1, "", "_foreach_round"], [662, 5, 1, "", "_foreach_round_"], [663, 5, 1, "", "_foreach_sigmoid"], [664, 5, 1, "", "_foreach_sigmoid_"], [665, 5, 1, "", "_foreach_sin"], [666, 5, 1, "", "_foreach_sin_"], [667, 5, 1, "", "_foreach_sinh"], [668, 5, 1, "", "_foreach_sinh_"], [669, 5, 1, "", "_foreach_sqrt"], [670, 5, 1, "", "_foreach_sqrt_"], [671, 5, 1, "", "_foreach_tan"], [672, 5, 1, "", "_foreach_tan_"], [673, 5, 1, "", "_foreach_trunc"], [674, 5, 1, "", "_foreach_trunc_"], [675, 5, 1, "", "_foreach_zero_"], [1886, 0, 0, "-", "_logging"], [677, 5, 1, "", "abs"], [678, 5, 1, "", "absolute"], [679, 5, 1, "", "acos"], [680, 5, 1, "", "acosh"], [681, 5, 1, "", "add"], [682, 5, 1, "", "addbmm"], [683, 5, 1, "", "addcdiv"], [684, 5, 1, "", "addcmul"], [685, 5, 1, "", "addmm"], [686, 5, 1, "", "addmv"], [687, 5, 1, "", "addr"], [688, 5, 1, "", "adjoint"], [689, 5, 1, "", "all"], [690, 5, 1, "", "allclose"], [691, 5, 1, "", "amax"], [692, 5, 1, "", "amin"], [693, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [694, 5, 1, "", "angle"], [695, 5, 1, "", "any"], [1925, 0, 0, "-", "ao"], [861, 5, 1, "", "arange"], [862, 5, 1, "", "arccos"], [863, 5, 1, "", "arccosh"], [864, 5, 1, "", "arcsin"], [865, 5, 1, "", "arcsinh"], [866, 5, 1, "", "arctan"], [867, 5, 1, "", "arctan2"], [868, 5, 1, "", "arctanh"], [869, 5, 1, "", "are_deterministic_algorithms_enabled"], [870, 5, 1, "", "argmax"], [871, 5, 1, "", "argmin"], [872, 5, 1, "", "argsort"], [873, 5, 1, "", "argwhere"], [874, 5, 1, "", "as_strided"], [875, 5, 1, "", "as_tensor"], [876, 5, 1, "", "asarray"], [877, 5, 1, "", "asin"], [878, 5, 1, "", "asinh"], [879, 5, 1, "", "atan"], [880, 5, 1, "", "atan2"], [881, 5, 1, "", "atanh"], [882, 5, 1, "", "atleast_1d"], [883, 5, 1, "", "atleast_2d"], [884, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [916, 5, 1, "", "baddbmm"], [917, 5, 1, "", "bartlett_window"], [918, 5, 1, "", "bernoulli"], [919, 5, 1, "", "bincount"], [920, 5, 1, "", "bitwise_and"], [921, 5, 1, "", "bitwise_left_shift"], [922, 5, 1, "", "bitwise_not"], [923, 5, 1, "", "bitwise_or"], [924, 5, 1, "", "bitwise_right_shift"], [925, 5, 1, "", "bitwise_xor"], [926, 5, 1, "", "blackman_window"], [927, 5, 1, "", "block_diag"], [928, 5, 1, "", "bmm"], [929, 5, 1, "", "broadcast_shapes"], [930, 5, 1, "", "broadcast_tensors"], [931, 5, 1, "", "broadcast_to"], [932, 5, 1, "", "bucketize"], [933, 5, 1, "", "can_cast"], [934, 5, 1, "", "cartesian_prod"], [935, 5, 1, "", "cat"], [936, 5, 1, "", "cdist"], [937, 5, 1, "", "ceil"], [938, 5, 1, "", "chain_matmul"], [939, 5, 1, "", "cholesky"], [940, 5, 1, "", "cholesky_inverse"], [941, 5, 1, "", "cholesky_solve"], [942, 5, 1, "", "chunk"], [943, 5, 1, "", "clamp"], [944, 5, 1, "", "clip"], [945, 5, 1, "", "clone"], [946, 5, 1, "", "column_stack"], [947, 5, 1, "", "combinations"], [948, 5, 1, "", "compile"], [949, 5, 1, "", "compiled_with_cxx11_abi"], [1946, 0, 0, "-", "compiler"], [956, 5, 1, "", "complex"], [957, 5, 1, "", "concat"], [958, 5, 1, "", "concatenate"], [959, 5, 1, "", "conj"], [960, 5, 1, "", "conj_physical"], [1942, 0, 0, "-", "contrib"], [961, 5, 1, "", "copysign"], [962, 5, 1, "", "corrcoef"], [963, 5, 1, "", "cos"], [964, 5, 1, "", "cosh"], [965, 5, 1, "", "count_nonzero"], [966, 5, 1, "", "cov"], [15, 0, 0, "-", "cpu"], [974, 5, 1, "", "cross"], [16, 0, 0, "-", "cuda"], [1053, 5, 1, "", "cummax"], [1054, 5, 1, "", "cummin"], [1055, 5, 1, "", "cumprod"], [1056, 5, 1, "", "cumsum"], [1057, 5, 1, "", "cumulative_trapezoid"], [1058, 5, 1, "", "deg2rad"], [1059, 5, 1, "", "dequantize"], [1060, 5, 1, "", "det"], [1937, 1, 1, "", "device"], [1061, 5, 1, "", "diag"], [1062, 5, 1, "", "diag_embed"], [1063, 5, 1, "", "diagflat"], [1064, 5, 1, "", "diagonal"], [1065, 5, 1, "", "diagonal_scatter"], [1066, 5, 1, "", "diff"], [1067, 5, 1, "", "digamma"], [1068, 5, 1, "", "dist"], [23, 0, 0, "-", "distributed"], [29, 0, 0, "-", "distributions"], [1069, 5, 1, "", "div"], [1070, 5, 1, "", "divide"], [1071, 5, 1, "", "dot"], [1072, 5, 1, "", "dsplit"], [1073, 5, 1, "", "dstack"], [1937, 1, 1, "", "dtype"], [1074, 5, 1, "", "einsum"], [1075, 5, 1, "", "empty"], [1076, 5, 1, "", "empty_like"], [1077, 5, 1, "", "empty_strided"], [1078, 1, 1, "", "enable_grad"], [1079, 5, 1, "", "eq"], [1080, 5, 1, "", "equal"], [1081, 5, 1, "", "erf"], [1082, 5, 1, "", "erfc"], [1083, 5, 1, "", "erfinv"], [1084, 5, 1, "", "exp"], [1085, 5, 1, "", "exp2"], [1086, 5, 1, "", "expm1"], [1087, 5, 1, "", "eye"], [1088, 5, 1, "", "fake_quantize_per_channel_affine"], [1089, 5, 1, "", "fake_quantize_per_tensor_affine"], [45, 0, 0, "-", "fft"], [1112, 5, 1, "", "fix"], [1113, 5, 1, "", "flatten"], [1114, 5, 1, "", "flip"], [1115, 5, 1, "", "fliplr"], [1116, 5, 1, "", "flipud"], [1117, 5, 1, "", "float_power"], [1118, 5, 1, "", "floor"], [1119, 5, 1, "", "floor_divide"], [1120, 5, 1, "", "fmax"], [1121, 5, 1, "", "fmin"], [1122, 5, 1, "", "fmod"], [1123, 5, 1, "", "frac"], [1124, 5, 1, "", "frexp"], [1125, 5, 1, "", "from_dlpack"], [1126, 5, 1, "", "from_numpy"], [1127, 5, 1, "", "frombuffer"], [1128, 5, 1, "", "full"], [1129, 5, 1, "", "full_like"], [48, 0, 0, "-", "func"], [53, 0, 0, "-", "futures"], [54, 0, 0, "-", "fx"], [1143, 5, 1, "", "gather"], [1144, 5, 1, "", "gcd"], [1145, 5, 1, "", "ge"], [1146, 5, 1, "", "geqrf"], [1147, 5, 1, "", "ger"], [1148, 5, 1, "", "get_default_dtype"], [1149, 5, 1, "", "get_deterministic_debug_mode"], [1150, 5, 1, "", "get_float32_matmul_precision"], [1151, 5, 1, "", "get_num_interop_threads"], [1152, 5, 1, "", "get_num_threads"], [1153, 5, 1, "", "get_rng_state"], [1154, 5, 1, "", "gradient"], [1155, 5, 1, "", "greater"], [1156, 5, 1, "", "greater_equal"], [1157, 5, 1, "", "gt"], [1158, 5, 1, "", "hamming_window"], [1159, 5, 1, "", "hann_window"], [1160, 5, 1, "", "heaviside"], [1161, 5, 1, "", "histc"], [1162, 5, 1, "", "histogram"], [1163, 5, 1, "", "histogramdd"], [1164, 5, 1, "", "hsplit"], [1165, 5, 1, "", "hspmm"], [1166, 5, 1, "", "hstack"], [1875, 0, 0, "-", "hub"], [1167, 5, 1, "", "hypot"], [1168, 5, 1, "", "i0"], [1169, 5, 1, "", "igamma"], [1170, 5, 1, "", "igammac"], [1171, 5, 1, "", "imag"], [1172, 5, 1, "", "index_add"], [1173, 5, 1, "", "index_copy"], [1174, 5, 1, "", "index_reduce"], [1175, 5, 1, "", "index_select"], [1176, 1, 1, "", "inference_mode"], [1177, 5, 1, "", "initial_seed"], [1178, 5, 1, "", "inner"], [1179, 5, 1, "", "inverse"], [1180, 5, 1, "", "is_complex"], [1181, 5, 1, "", "is_conj"], [1182, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1183, 5, 1, "", "is_floating_point"], [1184, 5, 1, "", "is_grad_enabled"], [1185, 5, 1, "", "is_inference_mode_enabled"], [1186, 5, 1, "", "is_nonzero"], [1187, 5, 1, "", "is_storage"], [1188, 5, 1, "", "is_tensor"], [1189, 5, 1, "", "is_warn_always_enabled"], [1190, 5, 1, "", "isclose"], [1191, 5, 1, "", "isfinite"], [1192, 5, 1, "", "isin"], [1193, 5, 1, "", "isinf"], [1194, 5, 1, "", "isnan"], [1195, 5, 1, "", "isneginf"], [1196, 5, 1, "", "isposinf"], [1197, 5, 1, "", "isreal"], [1198, 5, 1, "", "istft"], [1877, 0, 0, "-", "jit"], [1220, 5, 1, "", "kaiser_window"], [1221, 5, 1, "", "kron"], [1222, 5, 1, "", "kthvalue"], [1937, 1, 1, "", "layout"], [1223, 5, 1, "", "lcm"], [1224, 5, 1, "", "ldexp"], [1225, 5, 1, "", "le"], [1226, 5, 1, "", "lerp"], [1227, 5, 1, "", "less"], [1228, 5, 1, "", "less_equal"], [1229, 5, 1, "", "lgamma"], [1885, 0, 0, "-", "linalg"], [1271, 5, 1, "", "linspace"], [1272, 5, 1, "", "load"], [1273, 5, 1, "", "lobpcg"], [1274, 5, 1, "", "log"], [1275, 5, 1, "", "log10"], [1276, 5, 1, "", "log1p"], [1277, 5, 1, "", "log2"], [1278, 5, 1, "", "logaddexp"], [1279, 5, 1, "", "logaddexp2"], [1280, 5, 1, "", "logcumsumexp"], [1281, 5, 1, "", "logdet"], [1282, 5, 1, "", "logical_and"], [1283, 5, 1, "", "logical_not"], [1284, 5, 1, "", "logical_or"], [1285, 5, 1, "", "logical_xor"], [1286, 5, 1, "", "logit"], [1287, 5, 1, "", "logspace"], [1288, 5, 1, "", "logsumexp"], [1289, 5, 1, "", "lt"], [1290, 5, 1, "", "lu"], [1291, 5, 1, "", "lu_solve"], [1292, 5, 1, "", "lu_unpack"], [1293, 5, 1, "", "manual_seed"], [1887, 0, 0, "-", "masked"], [1294, 5, 1, "", "masked_select"], [1295, 5, 1, "", "matmul"], [1296, 5, 1, "", "matrix_exp"], [1297, 5, 1, "", "matrix_power"], [1298, 5, 1, "", "max"], [1299, 5, 1, "", "maximum"], [1300, 5, 1, "", "mean"], [1301, 5, 1, "", "median"], [1937, 1, 1, "", "memory_format"], [1302, 5, 1, "", "meshgrid"], [1303, 5, 1, "", "min"], [1304, 5, 1, "", "minimum"], [1305, 5, 1, "", "mm"], [1306, 5, 1, "", "mode"], [1890, 0, 0, "-", "monitor"], [1307, 5, 1, "", "moveaxis"], [1308, 5, 1, "", "movedim"], [1891, 0, 0, "-", "mps"], [1322, 5, 1, "", "msort"], [1323, 5, 1, "", "mul"], [1324, 5, 1, "", "multinomial"], [1325, 5, 1, "", "multiply"], [1892, 0, 0, "-", "multiprocessing"], [1326, 5, 1, "", "mv"], [1327, 5, 1, "", "mvlgamma"], [1328, 5, 1, "", "nan_to_num"], [1329, 5, 1, "", "nanmean"], [1330, 5, 1, "", "nanmedian"], [1331, 5, 1, "", "nanquantile"], [1332, 5, 1, "", "nansum"], [1333, 5, 1, "", "narrow"], [1334, 5, 1, "", "narrow_copy"], [1335, 5, 1, "", "ne"], [1336, 5, 1, "", "neg"], [1337, 5, 1, "", "negative"], [1895, 0, 0, "-", "nested"], [1338, 5, 1, "", "nextafter"], [1896, 0, 0, "-", "nn"], [1659, 1, 1, "", "no_grad"], [1660, 5, 1, "", "nonzero"], [1661, 5, 1, "", "norm"], [1662, 5, 1, "", "normal"], [1663, 5, 1, "", "not_equal"], [1664, 5, 1, "", "numel"], [1665, 5, 1, "", "ones"], [1666, 5, 1, "", "ones_like"], [1918, 0, 0, "-", "onnx"], [1921, 0, 0, "-", "optim"], [1708, 5, 1, "", "orgqr"], [1709, 5, 1, "", "ormqr"], [1710, 5, 1, "", "outer"], [1922, 0, 0, "-", "package"], [1711, 5, 1, "", "pca_lowrank"], [1712, 5, 1, "", "permute"], [1713, 5, 1, "", "pinverse"], [1714, 5, 1, "", "poisson"], [1715, 5, 1, "", "polar"], [1716, 5, 1, "", "polygamma"], [1717, 5, 1, "", "positive"], [1718, 5, 1, "", "pow"], [1719, 5, 1, "", "prod"], [1924, 0, 0, "-", "profiler"], [1720, 5, 1, "", "promote_types"], [1721, 5, 1, "", "qr"], [1722, 5, 1, "", "quantile"], [1928, 0, 0, "-", "quantization"], [1723, 5, 1, "", "quantize_per_channel"], [1724, 5, 1, "", "quantize_per_tensor"], [1725, 5, 1, "", "quantized_batch_norm"], [1726, 5, 1, "", "quantized_max_pool1d"], [1727, 5, 1, "", "quantized_max_pool2d"], [1729, 5, 1, "", "rad2deg"], [1730, 5, 1, "", "rand"], [1731, 5, 1, "", "rand_like"], [1732, 5, 1, "", "randint"], [1733, 5, 1, "", "randint_like"], [1734, 5, 1, "", "randn"], [1735, 5, 1, "", "randn_like"], [1929, 0, 0, "-", "random"], [1736, 5, 1, "", "randperm"], [1737, 5, 1, "", "range"], [1738, 5, 1, "", "ravel"], [1739, 5, 1, "", "real"], [1740, 5, 1, "", "reciprocal"], [1741, 5, 1, "", "remainder"], [1742, 5, 1, "", "renorm"], [1743, 5, 1, "", "repeat_interleave"], [1744, 5, 1, "", "reshape"], [1745, 5, 1, "", "resolve_conj"], [1746, 5, 1, "", "resolve_neg"], [1747, 5, 1, "", "result_type"], [1748, 5, 1, "", "roll"], [1749, 5, 1, "", "rot90"], [1750, 5, 1, "", "round"], [1751, 5, 1, "", "row_stack"], [1752, 5, 1, "", "rsqrt"], [1753, 5, 1, "", "save"], [1754, 5, 1, "", "scatter"], [1755, 5, 1, "", "scatter_add"], [1756, 5, 1, "", "scatter_reduce"], [1757, 5, 1, "", "searchsorted"], [1758, 5, 1, "", "seed"], [1759, 5, 1, "", "select"], [1760, 5, 1, "", "select_scatter"], [1761, 5, 1, "", "set_default_device"], [1762, 5, 1, "", "set_default_dtype"], [1763, 5, 1, "", "set_default_tensor_type"], [1764, 5, 1, "", "set_deterministic_debug_mode"], [1765, 5, 1, "", "set_float32_matmul_precision"], [1766, 5, 1, "", "set_flush_denormal"], [1767, 1, 1, "", "set_grad_enabled"], [1768, 5, 1, "", "set_num_interop_threads"], [1769, 5, 1, "", "set_num_threads"], [1770, 5, 1, "", "set_printoptions"], [1771, 5, 1, "", "set_rng_state"], [1772, 5, 1, "", "set_warn_always"], [1773, 5, 1, "", "sgn"], [1774, 5, 1, "", "sigmoid"], [1775, 5, 1, "", "sign"], [1933, 0, 0, "-", "signal"], [1787, 5, 1, "", "signbit"], [1788, 5, 1, "", "sin"], [1789, 5, 1, "", "sinc"], [1790, 5, 1, "", "sinh"], [1791, 5, 1, "", "slice_scatter"], [1792, 5, 1, "", "slogdet"], [1793, 5, 1, "", "smm"], [1794, 5, 1, "", "softmax"], [1795, 5, 1, "", "sort"], [1934, 0, 0, "-", "sparse"], [1804, 5, 1, "", "sparse_bsc_tensor"], [1805, 5, 1, "", "sparse_bsr_tensor"], [1806, 5, 1, "", "sparse_compressed_tensor"], [1807, 5, 1, "", "sparse_coo_tensor"], [1808, 5, 1, "", "sparse_csc_tensor"], [1809, 5, 1, "", "sparse_csr_tensor"], [1935, 0, 0, "-", "special"], [1810, 5, 1, "", "split"], [1811, 5, 1, "", "sqrt"], [1812, 5, 1, "", "square"], [1813, 5, 1, "", "squeeze"], [1814, 5, 1, "", "sspaddmm"], [1815, 5, 1, "", "stack"], [1816, 5, 1, "", "std"], [1817, 5, 1, "", "std_mean"], [1818, 5, 1, "", "stft"], [1819, 5, 1, "", "sub"], [1820, 5, 1, "", "subtract"], [1821, 5, 1, "", "sum"], [1822, 5, 1, "", "svd"], [1823, 5, 1, "", "svd_lowrank"], [1824, 5, 1, "", "swapaxes"], [1825, 5, 1, "", "swapdims"], [1826, 5, 1, "", "sym_float"], [1827, 5, 1, "", "sym_int"], [1828, 5, 1, "", "sym_max"], [1829, 5, 1, "", "sym_min"], [1830, 5, 1, "", "sym_not"], [1831, 5, 1, "", "t"], [1832, 5, 1, "", "take"], [1833, 5, 1, "", "take_along_dim"], [1834, 5, 1, "", "tan"], [1835, 5, 1, "", "tanh"], [1836, 5, 1, "", "tensor"], [1837, 5, 1, "", "tensor_split"], [1838, 5, 1, "", "tensordot"], [1941, 0, 0, "-", "testing"], [1839, 5, 1, "", "tile"], [1840, 5, 1, "", "topk"], [1841, 5, 1, "", "trace"], [1842, 5, 1, "", "transpose"], [1843, 5, 1, "", "trapezoid"], [1844, 5, 1, "", "trapz"], [1845, 5, 1, "", "triangular_solve"], [1846, 5, 1, "", "tril"], [1847, 5, 1, "", "tril_indices"], [1848, 5, 1, "", "triu"], [1849, 5, 1, "", "triu_indices"], [1850, 5, 1, "", "true_divide"], [1851, 5, 1, "", "trunc"], [1852, 5, 1, "", "unbind"], [1853, 5, 1, "", "unflatten"], [1854, 5, 1, "", "unique"], [1855, 5, 1, "", "unique_consecutive"], [1856, 5, 1, "", "unsqueeze"], [1857, 5, 1, "", "use_deterministic_algorithms"], [1966, 0, 0, "-", "utils"], [1862, 5, 1, "", "vander"], [1863, 5, 1, "", "var"], [1864, 5, 1, "", "var_mean"], [1865, 5, 1, "", "vdot"], [1866, 5, 1, "", "view_as_complex"], [1867, 5, 1, "", "view_as_real"], [1868, 5, 1, "", "vmap"], [1869, 5, 1, "", "vsplit"], [1870, 5, 1, "", "vstack"], [1871, 5, 1, "", "where"], [1872, 5, 1, "", "xlogy"], [1873, 5, 1, "", "zeros"], [1874, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1936, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1936, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1936, 2, 1, "", "dtype"]], "torch.CharStorage": [[1936, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1936, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1936, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1936, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1936, 2, 1, "", "dtype"]], "torch.Generator": [[87, 2, 1, "", "device"], [87, 3, 1, "", "get_state"], [87, 3, 1, "", "initial_seed"], [87, 3, 1, "", "manual_seed"], [87, 3, 1, "", "seed"], [87, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1936, 2, 1, "", "dtype"]], "torch.IntStorage": [[1936, 2, 1, "", "dtype"]], "torch.LongStorage": [[1936, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1936, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1936, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1936, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1936, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1936, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1936, 2, 1, "", "dtype"]], "torch.Tag": [[1942, 4, 1, "", "name"]], "torch.Tensor": [[1940, 2, 1, "", "H"], [1940, 2, 1, "", "T"], [88, 3, 1, "", "abs"], [89, 3, 1, "", "abs_"], [90, 3, 1, "", "absolute"], [91, 3, 1, "", "absolute_"], [92, 3, 1, "", "acos"], [93, 3, 1, "", "acos_"], [94, 3, 1, "", "acosh"], [95, 3, 1, "", "acosh_"], [96, 3, 1, "", "add"], [97, 3, 1, "", "add_"], [98, 3, 1, "", "addbmm"], [99, 3, 1, "", "addbmm_"], [100, 3, 1, "", "addcdiv"], [101, 3, 1, "", "addcdiv_"], [102, 3, 1, "", "addcmul"], [103, 3, 1, "", "addcmul_"], [104, 3, 1, "", "addmm"], [105, 3, 1, "", "addmm_"], [106, 3, 1, "", "addmv"], [107, 3, 1, "", "addmv_"], [108, 3, 1, "", "addr"], [109, 3, 1, "", "addr_"], [110, 3, 1, "", "adjoint"], [1894, 3, 1, "", "align_as"], [1894, 3, 1, "", "align_to"], [111, 3, 1, "", "all"], [112, 3, 1, "", "allclose"], [113, 3, 1, "", "amax"], [114, 3, 1, "", "amin"], [115, 3, 1, "", "aminmax"], [116, 3, 1, "", "angle"], [117, 3, 1, "", "any"], [118, 3, 1, "", "apply_"], [119, 3, 1, "", "arccos"], [120, 3, 1, "", "arccos_"], [121, 3, 1, "", "arccosh"], [122, 3, 1, "", "arccosh_"], [123, 3, 1, "", "arcsin"], [124, 3, 1, "", "arcsin_"], [125, 3, 1, "", "arcsinh"], [126, 3, 1, "", "arcsinh_"], [127, 3, 1, "", "arctan"], [128, 3, 1, "", "arctan2"], [129, 3, 1, "", "arctan2_"], [130, 3, 1, "", "arctan_"], [131, 3, 1, "", "arctanh"], [132, 3, 1, "", "arctanh_"], [133, 3, 1, "", "argmax"], [134, 3, 1, "", "argmin"], [135, 3, 1, "", "argsort"], [136, 3, 1, "", "argwhere"], [137, 3, 1, "", "as_strided"], [138, 3, 1, "", "as_subclass"], [139, 3, 1, "", "asin"], [140, 3, 1, "", "asin_"], [141, 3, 1, "", "asinh"], [142, 3, 1, "", "asinh_"], [143, 3, 1, "", "atan"], [144, 3, 1, "", "atan2"], [145, 3, 1, "", "atan2_"], [146, 3, 1, "", "atan_"], [147, 3, 1, "", "atanh"], [148, 3, 1, "", "atanh_"], [149, 3, 1, "", "backward"], [150, 3, 1, "", "baddbmm"], [151, 3, 1, "", "baddbmm_"], [152, 3, 1, "", "bernoulli"], [153, 3, 1, "", "bernoulli_"], [154, 3, 1, "", "bfloat16"], [155, 3, 1, "", "bincount"], [156, 3, 1, "", "bitwise_and"], [157, 3, 1, "", "bitwise_and_"], [158, 3, 1, "", "bitwise_left_shift"], [159, 3, 1, "", "bitwise_left_shift_"], [160, 3, 1, "", "bitwise_not"], [161, 3, 1, "", "bitwise_not_"], [162, 3, 1, "", "bitwise_or"], [163, 3, 1, "", "bitwise_or_"], [164, 3, 1, "", "bitwise_right_shift"], [165, 3, 1, "", "bitwise_right_shift_"], [166, 3, 1, "", "bitwise_xor"], [167, 3, 1, "", "bitwise_xor_"], [168, 3, 1, "", "bmm"], [169, 3, 1, "", "bool"], [170, 3, 1, "", "broadcast_to"], [171, 3, 1, "", "byte"], [172, 3, 1, "", "cauchy_"], [173, 3, 1, "", "ccol_indices"], [174, 3, 1, "", "cdouble"], [175, 3, 1, "", "ceil"], [176, 3, 1, "", "ceil_"], [177, 3, 1, "", "cfloat"], [178, 3, 1, "", "chalf"], [179, 3, 1, "", "char"], [180, 3, 1, "", "cholesky"], [181, 3, 1, "", "cholesky_inverse"], [182, 3, 1, "", "cholesky_solve"], [183, 3, 1, "", "chunk"], [184, 3, 1, "", "clamp"], [185, 3, 1, "", "clamp_"], [186, 3, 1, "", "clip"], [187, 3, 1, "", "clip_"], [188, 3, 1, "", "clone"], [189, 3, 1, "", "coalesce"], [190, 3, 1, "", "col_indices"], [191, 3, 1, "", "conj"], [192, 3, 1, "", "conj_physical"], [193, 3, 1, "", "conj_physical_"], [194, 3, 1, "", "contiguous"], [195, 3, 1, "", "copy_"], [196, 3, 1, "", "copysign"], [197, 3, 1, "", "copysign_"], [198, 3, 1, "", "corrcoef"], [199, 3, 1, "", "cos"], [200, 3, 1, "", "cos_"], [201, 3, 1, "", "cosh"], [202, 3, 1, "", "cosh_"], [203, 3, 1, "", "count_nonzero"], [204, 3, 1, "", "cov"], [205, 3, 1, "", "cpu"], [206, 3, 1, "", "cross"], [207, 3, 1, "", "crow_indices"], [208, 3, 1, "", "cuda"], [209, 3, 1, "", "cummax"], [210, 3, 1, "", "cummin"], [211, 3, 1, "", "cumprod"], [212, 3, 1, "", "cumprod_"], [213, 3, 1, "", "cumsum"], [214, 3, 1, "", "cumsum_"], [215, 3, 1, "", "data_ptr"], [216, 3, 1, "", "deg2rad"], [217, 3, 1, "", "dense_dim"], [218, 3, 1, "", "dequantize"], [219, 3, 1, "", "det"], [220, 3, 1, "", "detach"], [221, 3, 1, "", "detach_"], [222, 2, 1, "", "device"], [223, 3, 1, "", "diag"], [224, 3, 1, "", "diag_embed"], [225, 3, 1, "", "diagflat"], [226, 3, 1, "", "diagonal"], [227, 3, 1, "", "diagonal_scatter"], [228, 3, 1, "", "diff"], [229, 3, 1, "", "digamma"], [230, 3, 1, "", "digamma_"], [231, 3, 1, "", "dim"], [232, 3, 1, "", "dist"], [233, 3, 1, "", "div"], [234, 3, 1, "", "div_"], [235, 3, 1, "", "divide"], [236, 3, 1, "", "divide_"], [237, 3, 1, "", "dot"], [238, 3, 1, "", "double"], [239, 3, 1, "", "dsplit"], [240, 3, 1, "", "element_size"], [241, 3, 1, "", "eq"], [242, 3, 1, "", "eq_"], [243, 3, 1, "", "equal"], [244, 3, 1, "", "erf"], [245, 3, 1, "", "erf_"], [246, 3, 1, "", "erfc"], [247, 3, 1, "", "erfc_"], [248, 3, 1, "", "erfinv"], [249, 3, 1, "", "erfinv_"], [250, 3, 1, "", "exp"], [251, 3, 1, "", "exp_"], [252, 3, 1, "", "expand"], [253, 3, 1, "", "expand_as"], [254, 3, 1, "", "expm1"], [255, 3, 1, "", "expm1_"], [256, 3, 1, "", "exponential_"], [257, 3, 1, "", "fill_"], [258, 3, 1, "", "fill_diagonal_"], [259, 3, 1, "", "fix"], [260, 3, 1, "", "fix_"], [261, 3, 1, "", "flatten"], [262, 3, 1, "", "flip"], [263, 3, 1, "", "fliplr"], [264, 3, 1, "", "flipud"], [265, 3, 1, "", "float"], [266, 3, 1, "", "float_power"], [267, 3, 1, "", "float_power_"], [268, 3, 1, "", "floor"], [269, 3, 1, "", "floor_"], [270, 3, 1, "", "floor_divide"], [271, 3, 1, "", "floor_divide_"], [272, 3, 1, "", "fmax"], [273, 3, 1, "", "fmin"], [274, 3, 1, "", "fmod"], [275, 3, 1, "", "fmod_"], [276, 3, 1, "", "frac"], [277, 3, 1, "", "frac_"], [278, 3, 1, "", "frexp"], [279, 3, 1, "", "gather"], [280, 3, 1, "", "gcd"], [281, 3, 1, "", "gcd_"], [282, 3, 1, "", "ge"], [283, 3, 1, "", "ge_"], [284, 3, 1, "", "geometric_"], [285, 3, 1, "", "geqrf"], [286, 3, 1, "", "ger"], [287, 3, 1, "", "get_device"], [288, 2, 1, "", "grad"], [289, 3, 1, "", "greater"], [290, 3, 1, "", "greater_"], [291, 3, 1, "", "greater_equal"], [292, 3, 1, "", "greater_equal_"], [293, 3, 1, "", "gt"], [294, 3, 1, "", "gt_"], [295, 3, 1, "", "half"], [296, 3, 1, "", "hardshrink"], [297, 3, 1, "", "heaviside"], [298, 3, 1, "", "histc"], [299, 3, 1, "", "histogram"], [300, 3, 1, "", "hsplit"], [301, 3, 1, "", "hypot"], [302, 3, 1, "", "hypot_"], [303, 3, 1, "", "i0"], [304, 3, 1, "", "i0_"], [305, 3, 1, "", "igamma"], [306, 3, 1, "", "igamma_"], [307, 3, 1, "", "igammac"], [308, 3, 1, "", "igammac_"], [309, 2, 1, "", "imag"], [310, 3, 1, "", "index_add"], [311, 3, 1, "", "index_add_"], [312, 3, 1, "", "index_copy"], [313, 3, 1, "", "index_copy_"], [314, 3, 1, "", "index_fill"], [315, 3, 1, "", "index_fill_"], [316, 3, 1, "", "index_put"], [317, 3, 1, "", "index_put_"], [318, 3, 1, "", "index_reduce"], [319, 3, 1, "", "index_reduce_"], [320, 3, 1, "", "index_select"], [321, 3, 1, "", "indices"], [322, 3, 1, "", "inner"], [323, 3, 1, "", "int"], [324, 3, 1, "", "int_repr"], [325, 3, 1, "", "inverse"], [326, 3, 1, "", "is_coalesced"], [327, 3, 1, "", "is_complex"], [328, 3, 1, "", "is_conj"], [329, 3, 1, "", "is_contiguous"], [330, 2, 1, "", "is_cuda"], [331, 3, 1, "", "is_floating_point"], [332, 3, 1, "", "is_inference"], [333, 2, 1, "", "is_leaf"], [334, 2, 1, "", "is_meta"], [335, 3, 1, "", "is_pinned"], [336, 2, 1, "", "is_quantized"], [337, 3, 1, "", "is_set_to"], [338, 3, 1, "", "is_shared"], [339, 3, 1, "", "is_signed"], [340, 2, 1, "", "is_sparse"], [341, 2, 1, "", "is_sparse_csr"], [342, 3, 1, "", "isclose"], [343, 3, 1, "", "isfinite"], [344, 3, 1, "", "isinf"], [345, 3, 1, "", "isnan"], [346, 3, 1, "", "isneginf"], [347, 3, 1, "", "isposinf"], [348, 3, 1, "", "isreal"], [349, 3, 1, "", "istft"], [350, 3, 1, "", "item"], [351, 2, 1, "", "itemsize"], [352, 3, 1, "", "kthvalue"], [353, 3, 1, "", "lcm"], [354, 3, 1, "", "lcm_"], [355, 3, 1, "", "ldexp"], [356, 3, 1, "", "ldexp_"], [357, 3, 1, "", "le"], [358, 3, 1, "", "le_"], [359, 3, 1, "", "lerp"], [360, 3, 1, "", "lerp_"], [361, 3, 1, "", "less"], [362, 3, 1, "", "less_"], [363, 3, 1, "", "less_equal"], [364, 3, 1, "", "less_equal_"], [365, 3, 1, "", "lgamma"], [366, 3, 1, "", "lgamma_"], [367, 3, 1, "", "log"], [368, 3, 1, "", "log10"], [369, 3, 1, "", "log10_"], [370, 3, 1, "", "log1p"], [371, 3, 1, "", "log1p_"], [372, 3, 1, "", "log2"], [373, 3, 1, "", "log2_"], [374, 3, 1, "", "log_"], [375, 3, 1, "", "log_normal_"], [376, 3, 1, "", "logaddexp"], [377, 3, 1, "", "logaddexp2"], [378, 3, 1, "", "logcumsumexp"], [379, 3, 1, "", "logdet"], [380, 3, 1, "", "logical_and"], [381, 3, 1, "", "logical_and_"], [382, 3, 1, "", "logical_not"], [383, 3, 1, "", "logical_not_"], [384, 3, 1, "", "logical_or"], [385, 3, 1, "", "logical_or_"], [386, 3, 1, "", "logical_xor"], [387, 3, 1, "", "logical_xor_"], [388, 3, 1, "", "logit"], [389, 3, 1, "", "logit_"], [390, 3, 1, "", "logsumexp"], [391, 3, 1, "", "long"], [392, 3, 1, "", "lt"], [393, 3, 1, "", "lt_"], [394, 3, 1, "", "lu"], [395, 3, 1, "", "lu_solve"], [1940, 2, 1, "", "mH"], [1940, 2, 1, "", "mT"], [396, 3, 1, "", "map_"], [397, 3, 1, "", "masked_fill"], [398, 3, 1, "", "masked_fill_"], [399, 3, 1, "", "masked_scatter"], [400, 3, 1, "", "masked_scatter_"], [401, 3, 1, "", "masked_select"], [402, 3, 1, "", "matmul"], [403, 3, 1, "", "matrix_exp"], [404, 3, 1, "", "matrix_power"], [405, 3, 1, "", "max"], [406, 3, 1, "", "maximum"], [407, 3, 1, "", "mean"], [408, 3, 1, "", "median"], [409, 3, 1, "", "min"], [410, 3, 1, "", "minimum"], [411, 3, 1, "", "mm"], [412, 3, 1, "", "mode"], [413, 3, 1, "", "moveaxis"], [414, 3, 1, "", "movedim"], [415, 3, 1, "", "msort"], [416, 3, 1, "", "mul"], [417, 3, 1, "", "mul_"], [418, 3, 1, "", "multinomial"], [419, 3, 1, "", "multiply"], [420, 3, 1, "", "multiply_"], [421, 3, 1, "", "mv"], [422, 3, 1, "", "mvlgamma"], [423, 3, 1, "", "mvlgamma_"], [1894, 2, 1, "", "names"], [424, 3, 1, "", "nan_to_num"], [425, 3, 1, "", "nan_to_num_"], [426, 3, 1, "", "nanmean"], [427, 3, 1, "", "nanmedian"], [428, 3, 1, "", "nanquantile"], [429, 3, 1, "", "nansum"], [430, 3, 1, "", "narrow"], [431, 3, 1, "", "narrow_copy"], [432, 2, 1, "", "nbytes"], [433, 2, 1, "", "ndim"], [434, 3, 1, "", "ndimension"], [435, 3, 1, "", "ne"], [436, 3, 1, "", "ne_"], [437, 3, 1, "", "neg"], [438, 3, 1, "", "neg_"], [439, 3, 1, "", "negative"], [440, 3, 1, "", "negative_"], [441, 3, 1, "", "nelement"], [442, 3, 1, "", "new_empty"], [443, 3, 1, "", "new_full"], [444, 3, 1, "", "new_ones"], [445, 3, 1, "", "new_tensor"], [446, 3, 1, "", "new_zeros"], [447, 3, 1, "", "nextafter"], [448, 3, 1, "", "nextafter_"], [449, 3, 1, "", "nonzero"], [450, 3, 1, "", "norm"], [451, 3, 1, "", "normal_"], [452, 3, 1, "", "not_equal"], [453, 3, 1, "", "not_equal_"], [454, 3, 1, "", "numel"], [455, 3, 1, "", "numpy"], [456, 3, 1, "", "orgqr"], [457, 3, 1, "", "ormqr"], [458, 3, 1, "", "outer"], [459, 3, 1, "", "permute"], [460, 3, 1, "", "pin_memory"], [461, 3, 1, "", "pinverse"], [462, 3, 1, "", "polygamma"], [463, 3, 1, "", "polygamma_"], [464, 3, 1, "", "positive"], [465, 3, 1, "", "pow"], [466, 3, 1, "", "pow_"], [467, 3, 1, "", "prod"], [468, 3, 1, "", "put_"], [469, 3, 1, "", "q_per_channel_axis"], [470, 3, 1, "", "q_per_channel_scales"], [471, 3, 1, "", "q_per_channel_zero_points"], [472, 3, 1, "", "q_scale"], [473, 3, 1, "", "q_zero_point"], [474, 3, 1, "", "qr"], [475, 3, 1, "", "qscheme"], [476, 3, 1, "", "quantile"], [477, 3, 1, "", "rad2deg"], [478, 3, 1, "", "random_"], [479, 3, 1, "", "ravel"], [480, 2, 1, "", "real"], [481, 3, 1, "", "reciprocal"], [482, 3, 1, "", "reciprocal_"], [483, 3, 1, "", "record_stream"], [1894, 3, 1, "", "refine_names"], [484, 3, 1, "", "register_hook"], [485, 3, 1, "", "remainder"], [486, 3, 1, "", "remainder_"], [1894, 3, 1, "", "rename"], [1894, 3, 1, "", "rename_"], [487, 3, 1, "", "renorm"], [488, 3, 1, "", "renorm_"], [489, 3, 1, "", "repeat"], [490, 3, 1, "", "repeat_interleave"], [491, 2, 1, "", "requires_grad"], [492, 3, 1, "", "requires_grad_"], [493, 3, 1, "", "reshape"], [494, 3, 1, "", "reshape_as"], [495, 3, 1, "", "resize_"], [496, 3, 1, "", "resize_as_"], [497, 3, 1, "", "resolve_conj"], [498, 3, 1, "", "resolve_neg"], [499, 3, 1, "", "retain_grad"], [500, 2, 1, "", "retains_grad"], [501, 3, 1, "", "roll"], [502, 3, 1, "", "rot90"], [503, 3, 1, "", "round"], [504, 3, 1, "", "round_"], [505, 3, 1, "", "row_indices"], [506, 3, 1, "", "rsqrt"], [507, 3, 1, "", "rsqrt_"], [508, 3, 1, "", "scatter"], [509, 3, 1, "", "scatter_"], [510, 3, 1, "", "scatter_add"], [511, 3, 1, "", "scatter_add_"], [512, 3, 1, "", "scatter_reduce"], [513, 3, 1, "", "scatter_reduce_"], [514, 3, 1, "", "select"], [515, 3, 1, "", "select_scatter"], [516, 3, 1, "", "set_"], [517, 3, 1, "", "sgn"], [518, 3, 1, "", "sgn_"], [519, 2, 1, "", "shape"], [520, 3, 1, "", "share_memory_"], [521, 3, 1, "", "short"], [522, 3, 1, "", "sigmoid"], [523, 3, 1, "", "sigmoid_"], [524, 3, 1, "", "sign"], [525, 3, 1, "", "sign_"], [526, 3, 1, "", "signbit"], [527, 3, 1, "", "sin"], [528, 3, 1, "", "sin_"], [529, 3, 1, "", "sinc"], [530, 3, 1, "", "sinc_"], [531, 3, 1, "", "sinh"], [532, 3, 1, "", "sinh_"], [533, 3, 1, "", "size"], [534, 3, 1, "", "slice_scatter"], [535, 3, 1, "", "slogdet"], [536, 3, 1, "", "smm"], [537, 3, 1, "", "softmax"], [538, 3, 1, "", "sort"], [539, 3, 1, "", "sparse_dim"], [540, 3, 1, "", "sparse_mask"], [541, 3, 1, "", "sparse_resize_"], [542, 3, 1, "", "sparse_resize_and_clear_"], [543, 3, 1, "", "split"], [544, 3, 1, "", "sqrt"], [545, 3, 1, "", "sqrt_"], [546, 3, 1, "", "square"], [547, 3, 1, "", "square_"], [548, 3, 1, "", "squeeze"], [549, 3, 1, "", "squeeze_"], [550, 3, 1, "", "sspaddmm"], [551, 3, 1, "", "std"], [552, 3, 1, "", "stft"], [553, 3, 1, "", "storage"], [554, 3, 1, "", "storage_offset"], [555, 3, 1, "", "storage_type"], [556, 3, 1, "", "stride"], [557, 3, 1, "", "sub"], [558, 3, 1, "", "sub_"], [559, 3, 1, "", "subtract"], [560, 3, 1, "", "subtract_"], [561, 3, 1, "", "sum"], [562, 3, 1, "", "sum_to_size"], [563, 3, 1, "", "svd"], [564, 3, 1, "", "swapaxes"], [565, 3, 1, "", "swapdims"], [566, 3, 1, "", "t"], [567, 3, 1, "", "t_"], [568, 3, 1, "", "take"], [569, 3, 1, "", "take_along_dim"], [570, 3, 1, "", "tan"], [571, 3, 1, "", "tan_"], [572, 3, 1, "", "tanh"], [573, 3, 1, "", "tanh_"], [574, 3, 1, "", "tensor_split"], [575, 3, 1, "", "tile"], [576, 3, 1, "", "to"], [577, 3, 1, "", "to_dense"], [578, 3, 1, "", "to_mkldnn"], [579, 3, 1, "", "to_sparse"], [580, 3, 1, "", "to_sparse_bsc"], [581, 3, 1, "", "to_sparse_bsr"], [582, 3, 1, "", "to_sparse_coo"], [583, 3, 1, "", "to_sparse_csc"], [584, 3, 1, "", "to_sparse_csr"], [585, 3, 1, "", "tolist"], [586, 3, 1, "", "topk"], [587, 3, 1, "", "trace"], [588, 3, 1, "", "transpose"], [589, 3, 1, "", "transpose_"], [590, 3, 1, "", "triangular_solve"], [591, 3, 1, "", "tril"], [592, 3, 1, "", "tril_"], [593, 3, 1, "", "triu"], [594, 3, 1, "", "triu_"], [595, 3, 1, "", "true_divide"], [596, 3, 1, "", "true_divide_"], [597, 3, 1, "", "trunc"], [598, 3, 1, "", "trunc_"], [599, 3, 1, "", "type"], [600, 3, 1, "", "type_as"], [601, 3, 1, "", "unbind"], [602, 3, 1, "", "unflatten"], [603, 3, 1, "", "unfold"], [604, 3, 1, "", "uniform_"], [605, 3, 1, "", "unique"], [606, 3, 1, "", "unique_consecutive"], [607, 3, 1, "", "unsqueeze"], [608, 3, 1, "", "unsqueeze_"], [609, 3, 1, "", "untyped_storage"], [610, 3, 1, "", "values"], [611, 3, 1, "", "var"], [612, 3, 1, "", "vdot"], [613, 3, 1, "", "view"], [614, 3, 1, "", "view_as"], [615, 3, 1, "", "vsplit"], [616, 3, 1, "", "where"], [617, 3, 1, "", "xlogy"], [618, 3, 1, "", "xlogy_"], [619, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1936, 3, 1, "", "bfloat16"], [1936, 3, 1, "", "bool"], [1936, 3, 1, "", "byte"], [1936, 3, 1, "", "char"], [1936, 3, 1, "", "clone"], [1936, 3, 1, "", "complex_double"], [1936, 3, 1, "", "complex_float"], [1936, 3, 1, "", "copy_"], [1936, 3, 1, "", "cpu"], [1936, 3, 1, "", "cuda"], [1936, 3, 1, "", "data_ptr"], [1936, 4, 1, "", "device"], [1936, 3, 1, "", "double"], [1936, 2, 1, "", "dtype"], [1936, 3, 1, "", "element_size"], [1936, 3, 1, "", "fill_"], [1936, 3, 1, "", "float"], [1936, 3, 1, "", "from_buffer"], [1936, 3, 1, "", "from_file"], [1936, 3, 1, "", "get_device"], [1936, 3, 1, "", "half"], [1936, 3, 1, "", "hpu"], [1936, 3, 1, "", "int"], [1936, 4, 1, "", "is_cuda"], [1936, 4, 1, "", "is_hpu"], [1936, 3, 1, "", "is_pinned"], [1936, 3, 1, "", "is_shared"], [1936, 2, 1, "", "is_sparse"], [1936, 3, 1, "", "long"], [1936, 3, 1, "", "nbytes"], [1936, 3, 1, "", "pickle_storage_type"], [1936, 3, 1, "", "pin_memory"], [1936, 3, 1, "", "resize_"], [1936, 3, 1, "", "share_memory_"], [1936, 3, 1, "", "short"], [1936, 3, 1, "", "size"], [1936, 3, 1, "", "tolist"], [1936, 3, 1, "", "type"], [1936, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1936, 3, 1, "", "bfloat16"], [1936, 3, 1, "", "bool"], [1936, 3, 1, "", "byte"], [1936, 3, 1, "", "byteswap"], [1936, 3, 1, "", "char"], [1936, 3, 1, "", "clone"], [1936, 3, 1, "", "complex_double"], [1936, 3, 1, "", "complex_float"], [1936, 3, 1, "", "copy_"], [1936, 3, 1, "", "cpu"], [1936, 3, 1, "", "cuda"], [1936, 3, 1, "", "data_ptr"], [1936, 2, 1, "", "device"], [1936, 3, 1, "", "double"], [1936, 3, 1, "", "element_size"], [1936, 3, 1, "", "fill_"], [1936, 3, 1, "", "float"], [1936, 3, 1, "", "from_buffer"], [1936, 3, 1, "", "from_file"], [1936, 3, 1, "", "get_device"], [1936, 3, 1, "", "half"], [1936, 3, 1, "", "hpu"], [1936, 3, 1, "", "int"], [1936, 4, 1, "", "is_cuda"], [1936, 4, 1, "", "is_hpu"], [1936, 3, 1, "", "is_pinned"], [1936, 3, 1, "", "is_shared"], [1936, 2, 1, "", "is_sparse"], [1936, 2, 1, "", "is_sparse_csr"], [1936, 3, 1, "", "long"], [1936, 3, 1, "", "mps"], [1936, 3, 1, "", "nbytes"], [1936, 3, 1, "", "new"], [1936, 3, 1, "", "pin_memory"], [1936, 3, 1, "", "resize_"], [1936, 3, 1, "", "share_memory_"], [1936, 3, 1, "", "short"], [1936, 3, 1, "", "size"], [1936, 3, 1, "", "tolist"], [1936, 3, 1, "", "type"], [1936, 3, 1, "", "untyped"]], "torch.__config__": [[12, 5, 1, "", "parallel_info"], [12, 5, 1, "", "show"]], "torch._logging": [[676, 5, 1, "", "set_logs"]], "torch.ao": [[1925, 0, 0, "-", "nn"], [1925, 0, 0, "-", "ns"], [1925, 0, 0, "-", "pruning"], [1925, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1928, 0, 0, "-", "intrinsic"], [1928, 0, 0, "-", "qat"], [1925, 0, 0, "-", "quantizable"], [1925, 0, 0, "-", "quantized"], [1925, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[696, 1, 1, "", "BNReLU2d"], [697, 1, 1, "", "BNReLU3d"], [698, 1, 1, "", "ConvBn1d"], [699, 1, 1, "", "ConvBn2d"], [700, 1, 1, "", "ConvBn3d"], [701, 1, 1, "", "ConvBnReLU1d"], [702, 1, 1, "", "ConvBnReLU2d"], [703, 1, 1, "", "ConvBnReLU3d"], [704, 1, 1, "", "ConvReLU1d"], [705, 1, 1, "", "ConvReLU2d"], [706, 1, 1, "", "ConvReLU3d"], [707, 1, 1, "", "LinearReLU"], [1928, 0, 0, "-", "modules"], [1928, 0, 0, "-", "qat"], [1928, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[708, 1, 1, "", "ConvBn1d"], [709, 1, 1, "", "ConvBn2d"], [710, 1, 1, "", "ConvBn3d"], [711, 1, 1, "", "ConvBnReLU1d"], [712, 1, 1, "", "ConvBnReLU2d"], [713, 1, 1, "", "ConvBnReLU3d"], [714, 1, 1, "", "ConvReLU2d"], [715, 1, 1, "", "ConvReLU3d"], [716, 1, 1, "", "LinearReLU"], [717, 1, 1, "", "freeze_bn_stats"], [1928, 0, 0, "-", "modules"], [718, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[719, 1, 1, "", "BNReLU2d"], [720, 1, 1, "", "BNReLU3d"], [721, 1, 1, "", "ConvReLU1d"], [722, 1, 1, "", "ConvReLU2d"], [723, 1, 1, "", "ConvReLU3d"], [724, 1, 1, "", "LinearReLU"], [1928, 0, 0, "-", "dynamic"], [1928, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[725, 1, 1, "", "LinearReLU"], [1928, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[726, 1, 1, "", "Conv2d"], [727, 1, 1, "", "Conv3d"], [728, 1, 1, "", "Linear"], [1928, 0, 0, "-", "dynamic"], [1928, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[728, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[729, 1, 1, "", "Linear"], [1928, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[730, 1, 1, "", "LSTM"], [731, 1, 1, "", "MultiheadAttention"], [1925, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[731, 3, 1, "", "dequantize"], [731, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[732, 1, 1, "", "BatchNorm2d"], [733, 1, 1, "", "BatchNorm3d"], [734, 1, 1, "", "Conv1d"], [735, 1, 1, "", "Conv2d"], [736, 1, 1, "", "Conv3d"], [737, 1, 1, "", "ConvTranspose1d"], [738, 1, 1, "", "ConvTranspose2d"], [739, 1, 1, "", "ConvTranspose3d"], [740, 1, 1, "", "ELU"], [741, 1, 1, "", "Embedding"], [742, 1, 1, "", "EmbeddingBag"], [743, 1, 1, "", "FXFloatFunctional"], [744, 1, 1, "", "FloatFunctional"], [745, 1, 1, "", "GroupNorm"], [746, 1, 1, "", "Hardswish"], [747, 1, 1, "", "InstanceNorm1d"], [748, 1, 1, "", "InstanceNorm2d"], [749, 1, 1, "", "InstanceNorm3d"], [750, 1, 1, "", "LayerNorm"], [751, 1, 1, "", "LeakyReLU"], [752, 1, 1, "", "Linear"], [753, 1, 1, "", "QFunctional"], [754, 1, 1, "", "ReLU6"], [755, 1, 1, "", "Sigmoid"], [1928, 0, 0, "-", "dynamic"], [1928, 0, 0, "-", "functional"], [1928, 0, 0, "-", "modules"], [1925, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[734, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[736, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[741, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[742, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[752, 3, 1, "", "from_float"], [752, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[756, 1, 1, "", "GRU"], [757, 1, 1, "", "GRUCell"], [758, 1, 1, "", "LSTM"], [759, 1, 1, "", "LSTMCell"], [760, 1, 1, "", "Linear"], [761, 1, 1, "", "RNNCell"], [1928, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[760, 3, 1, "", "from_float"], [760, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[762, 1, 1, "", "adaptive_avg_pool2d"], [763, 1, 1, "", "adaptive_avg_pool3d"], [764, 1, 1, "", "avg_pool2d"], [765, 1, 1, "", "avg_pool3d"], [766, 1, 1, "", "celu"], [767, 1, 1, "", "clamp"], [768, 1, 1, "", "conv1d"], [769, 1, 1, "", "conv2d"], [770, 1, 1, "", "conv3d"], [771, 1, 1, "", "elu"], [772, 1, 1, "", "hardsigmoid"], [773, 1, 1, "", "hardswish"], [774, 1, 1, "", "hardtanh"], [775, 1, 1, "", "interpolate"], [776, 1, 1, "", "leaky_relu"], [777, 1, 1, "", "linear"], [778, 1, 1, "", "max_pool1d"], [779, 1, 1, "", "max_pool2d"], [780, 1, 1, "", "threshold"], [781, 1, 1, "", "upsample"], [782, 1, 1, "", "upsample_bilinear"], [783, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1925, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1925, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1925, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1943, 0, 0, "-", "_numeric_suite"], [1944, 0, 0, "-", "_numeric_suite_fx"], [1925, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1943, 1, 1, "", "Logger"], [1943, 1, 1, "", "OutputLogger"], [1943, 1, 1, "", "Shadow"], [1943, 1, 1, "", "ShadowLogger"], [1943, 5, 1, "", "compare_model_outputs"], [1943, 5, 1, "", "compare_model_stub"], [1943, 5, 1, "", "compare_weights"], [1943, 5, 1, "", "get_logger_dict"], [1943, 5, 1, "", "get_matching_activations"], [1943, 5, 1, "", "prepare_model_outputs"], [1943, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1943, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1943, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1943, 3, 1, "", "add"], [1943, 3, 1, "", "add_relu"], [1943, 3, 1, "", "add_scalar"], [1943, 3, 1, "", "cat"], [1943, 3, 1, "", "forward"], [1943, 3, 1, "", "mul"], [1943, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1943, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1944, 1, 1, "", "NSTracer"], [1944, 1, 1, "", "OutputComparisonLogger"], [1944, 1, 1, "", "OutputLogger"], [1944, 5, 1, "", "add_loggers"], [1944, 5, 1, "", "add_shadow_loggers"], [1944, 5, 1, "", "convert_n_shadows_model"], [1944, 5, 1, "", "extend_logger_results_with_comparison"], [1944, 5, 1, "", "extract_logger_info"], [1944, 5, 1, "", "extract_results_n_shadows_model"], [1944, 5, 1, "", "extract_shadow_logger_info"], [1944, 5, 1, "", "extract_weights"], [1944, 5, 1, "", "loggers_set_enabled"], [1944, 5, 1, "", "loggers_set_save_activations"], [1944, 5, 1, "", "prepare_n_shadows_model"], [1944, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1944, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1944, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1944, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1944, 5, 1, "", "compute_cosine_similarity"], [1944, 5, 1, "", "compute_normalized_l2_error"], [1944, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1925, 0, 0, "-", "scheduler"], [1925, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[784, 1, 1, "", "DeQuantStub"], [785, 1, 1, "", "QuantStub"], [786, 1, 1, "", "QuantWrapper"], [787, 1, 1, "", "add_quant_dequant"], [1925, 0, 0, "-", "backend_config"], [793, 1, 1, "", "convert"], [794, 1, 1, "", "default_eval_fn"], [810, 1, 1, "", "fuse_modules"], [1925, 0, 0, "-", "fx"], [834, 1, 1, "", "prepare"], [835, 1, 1, "", "prepare_qat"], [836, 1, 1, "", "propagate_qconfig_"], [1928, 0, 0, "-", "pt2e"], [853, 1, 1, "", "quantize"], [854, 1, 1, "", "quantize_dynamic"], [859, 1, 1, "", "quantize_qat"], [1928, 0, 0, "-", "quantizer"], [860, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[788, 1, 1, "", "BackendConfig"], [789, 1, 1, "", "BackendPatternConfig"], [790, 1, 1, "", "DTypeConfig"], [791, 1, 1, "", "DTypeWithConstraints"], [792, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[788, 4, 1, "", "configs"], [788, 3, 1, "", "from_dict"], [788, 3, 1, "", "set_backend_pattern_config"], [788, 3, 1, "", "set_backend_pattern_configs"], [788, 3, 1, "", "set_name"], [788, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[789, 3, 1, "", "add_dtype_config"], [789, 3, 1, "", "from_dict"], [789, 3, 1, "", "set_dtype_configs"], [789, 3, 1, "", "set_fused_module"], [789, 3, 1, "", "set_fuser_method"], [789, 3, 1, "", "set_observation_type"], [789, 3, 1, "", "set_pattern"], [789, 3, 1, "", "set_qat_module"], [789, 3, 1, "", "set_reference_quantized_module"], [789, 3, 1, "", "set_root_module"], [789, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[790, 3, 1, "", "from_dict"], [790, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[792, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [792, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [792, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[795, 1, 1, "", "FakeQuantize"], [796, 1, 1, "", "FakeQuantizeBase"], [797, 1, 1, "", "FixedQParamsFakeQuantize"], [798, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [799, 2, 1, "", "default_fake_quant"], [800, 2, 1, "", "default_fused_act_fake_quant"], [801, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [802, 2, 1, "", "default_fused_wt_fake_quant"], [803, 2, 1, "", "default_histogram_fake_quant"], [804, 2, 1, "", "default_per_channel_weight_fake_quant"], [805, 2, 1, "", "default_weight_fake_quant"], [806, 1, 1, "", "disable_fake_quant"], [807, 1, 1, "", "disable_observer"], [808, 1, 1, "", "enable_fake_quant"], [809, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[811, 1, 1, "", "ConvertCustomConfig"], [812, 1, 1, "", "FuseCustomConfig"], [813, 1, 1, "", "PrepareCustomConfig"], [814, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[811, 3, 1, "", "from_dict"], [811, 3, 1, "", "set_observed_to_quantized_mapping"], [811, 3, 1, "", "set_preserved_attributes"], [811, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[812, 3, 1, "", "from_dict"], [812, 3, 1, "", "set_preserved_attributes"], [812, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[813, 3, 1, "", "from_dict"], [813, 3, 1, "", "set_float_to_observed_mapping"], [813, 3, 1, "", "set_input_quantized_indexes"], [813, 3, 1, "", "set_non_traceable_module_classes"], [813, 3, 1, "", "set_non_traceable_module_names"], [813, 3, 1, "", "set_output_quantized_indexes"], [813, 3, 1, "", "set_preserved_attributes"], [813, 3, 1, "", "set_standalone_module_class"], [813, 3, 1, "", "set_standalone_module_name"], [813, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[815, 1, 1, "", "HistogramObserver"], [816, 1, 1, "", "MinMaxObserver"], [817, 1, 1, "", "MovingAverageMinMaxObserver"], [818, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [819, 1, 1, "", "NoopObserver"], [820, 1, 1, "", "ObserverBase"], [821, 1, 1, "", "PerChannelMinMaxObserver"], [822, 1, 1, "", "PlaceholderObserver"], [823, 1, 1, "", "RecordingObserver"], [824, 2, 1, "", "default_debug_observer"], [825, 2, 1, "", "default_dynamic_quant_observer"], [826, 2, 1, "", "default_float_qparams_observer"], [827, 2, 1, "", "default_histogram_observer"], [828, 2, 1, "", "default_observer"], [829, 2, 1, "", "default_per_channel_weight_observer"], [830, 2, 1, "", "default_placeholder_observer"], [831, 2, 1, "", "default_weight_observer"], [832, 1, 1, "", "get_observer_state_dict"], [833, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[816, 3, 1, "", "calculate_qparams"], [816, 3, 1, "", "forward"], [816, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[820, 3, 1, "", "with_args"], [820, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[821, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1928, 0, 0, "-", "representation"]], "torch.ao.quantization.qconfig": [[837, 1, 1, "", "QConfig"], [838, 2, 1, "", "default_activation_only_qconfig"], [839, 2, 1, "", "default_debug_qconfig"], [840, 2, 1, "", "default_dynamic_qconfig"], [841, 2, 1, "", "default_per_channel_qconfig"], [842, 2, 1, "", "default_qat_qconfig"], [843, 2, 1, "", "default_qat_qconfig_v2"], [844, 2, 1, "", "default_qconfig"], [845, 2, 1, "", "default_weight_only_qconfig"], [846, 2, 1, "", "float16_dynamic_qconfig"], [847, 2, 1, "", "float16_static_qconfig"], [848, 2, 1, "", "float_qparams_weight_only_qconfig"], [849, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[850, 1, 1, "", "QConfigMapping"], [851, 1, 1, "", "get_default_qat_qconfig_mapping"], [852, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[850, 3, 1, "", "from_dict"], [850, 3, 1, "", "set_global"], [850, 3, 1, "", "set_module_name"], [850, 3, 1, "", "set_module_name_object_type_order"], [850, 3, 1, "", "set_module_name_regex"], [850, 3, 1, "", "set_object_type"], [850, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[855, 1, 1, "", "convert_fx"], [856, 1, 1, "", "fuse_fx"], [857, 1, 1, "", "prepare_fx"], [858, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [889, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [903, 5, 1, "", "grad"], [904, 5, 1, "", "gradcheck"], [905, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"]], "torch.autograd.Function": [[885, 3, 1, "", "backward"], [886, 3, 1, "", "forward"], [887, 3, 1, "", "jvp"], [888, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[890, 1, 1, "", "dual_level"], [891, 5, 1, "", "make_dual"], [892, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[893, 3, 1, "", "mark_dirty"], [894, 3, 1, "", "mark_non_differentiable"], [895, 3, 1, "", "save_for_backward"], [896, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[897, 5, 1, "", "hessian"], [898, 5, 1, "", "hvp"], [899, 5, 1, "", "jacobian"], [900, 5, 1, "", "jvp"], [901, 5, 1, "", "vhp"], [902, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[906, 3, 1, "", "metadata"], [907, 3, 1, "", "name"], [908, 4, 1, "", "next_functions"], [909, 3, 1, "", "register_hook"], [910, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [911, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[912, 3, 1, "", "export_chrome_trace"], [913, 3, 1, "", "key_averages"], [914, 4, 1, "", "self_cpu_time_total"], [915, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[950, 5, 1, "", "allow_in_graph"], [951, 5, 1, "", "assume_constant_result"], [952, 5, 1, "", "compile"], [953, 5, 1, "", "disable"], [954, 5, 1, "", "list_backends"], [955, 5, 1, "", "reset"]], "torch.cpu": [[967, 1, 1, "", "Stream"], [968, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [969, 5, 1, "", "current_stream"], [970, 5, 1, "", "device_count"], [971, 5, 1, "", "is_available"], [972, 5, 1, "", "stream"], [973, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[975, 1, 1, "", "CUDAGraph"], [976, 1, 1, "", "CUDAPluggableAllocator"], [977, 1, 1, "", "Event"], [978, 1, 1, "", "ExternalStream"], [979, 6, 1, "", "OutOfMemoryError"], [980, 1, 1, "", "Stream"], [981, 1, 1, "", "StreamContext"], [17, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [982, 5, 1, "", "caching_allocator_alloc"], [983, 5, 1, "", "caching_allocator_delete"], [984, 5, 1, "", "can_device_access_peer"], [985, 5, 1, "", "change_current_allocator"], [986, 5, 1, "", "clock_rate"], [992, 5, 1, "", "current_blas_handle"], [993, 5, 1, "", "current_device"], [994, 5, 1, "", "current_stream"], [995, 5, 1, "", "default_stream"], [996, 1, 1, "", "device"], [997, 5, 1, "", "device_count"], [998, 1, 1, "", "device_of"], [999, 5, 1, "", "empty_cache"], [1000, 5, 1, "", "get_allocator_backend"], [1001, 5, 1, "", "get_arch_list"], [1002, 5, 1, "", "get_device_capability"], [1003, 5, 1, "", "get_device_name"], [1004, 5, 1, "", "get_device_properties"], [1005, 5, 1, "", "get_gencode_flags"], [1006, 5, 1, "", "get_rng_state"], [1007, 5, 1, "", "get_rng_state_all"], [1008, 5, 1, "", "get_sync_debug_mode"], [1009, 1, 1, "", "graph"], [1010, 5, 1, "", "graph_pool_handle"], [1011, 5, 1, "", "init"], [1012, 5, 1, "", "initial_seed"], [1013, 5, 1, "", "ipc_collect"], [1014, 5, 1, "", "is_available"], [1015, 5, 1, "", "is_current_stream_capturing"], [1016, 5, 1, "", "is_initialized"], [1019, 5, 1, "", "list_gpu_processes"], [1020, 5, 1, "", "make_graphed_callables"], [1021, 5, 1, "", "manual_seed"], [1022, 5, 1, "", "manual_seed_all"], [1023, 5, 1, "", "max_memory_allocated"], [1024, 5, 1, "", "max_memory_cached"], [1025, 5, 1, "", "max_memory_reserved"], [1026, 5, 1, "", "mem_get_info"], [1027, 5, 1, "", "memory_allocated"], [1028, 5, 1, "", "memory_cached"], [1029, 5, 1, "", "memory_reserved"], [1030, 5, 1, "", "memory_snapshot"], [1031, 5, 1, "", "memory_stats"], [1032, 5, 1, "", "memory_summary"], [1033, 5, 1, "", "memory_usage"], [1037, 5, 1, "", "power_draw"], [1038, 5, 1, "", "reset_max_memory_allocated"], [1039, 5, 1, "", "reset_max_memory_cached"], [1040, 5, 1, "", "reset_peak_memory_stats"], [1041, 5, 1, "", "seed"], [1042, 5, 1, "", "seed_all"], [1043, 5, 1, "", "set_device"], [1044, 5, 1, "", "set_per_process_memory_fraction"], [1045, 5, 1, "", "set_rng_state"], [1046, 5, 1, "", "set_rng_state_all"], [1047, 5, 1, "", "set_stream"], [1048, 5, 1, "", "set_sync_debug_mode"], [1049, 5, 1, "", "stream"], [1050, 5, 1, "", "synchronize"], [1051, 5, 1, "", "temperature"], [1052, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[975, 3, 1, "", "capture_begin"], [975, 3, 1, "", "capture_end"], [975, 3, 1, "", "debug_dump"], [975, 3, 1, "", "enable_debug_mode"], [975, 3, 1, "", "pool"], [975, 3, 1, "", "replay"], [975, 3, 1, "", "reset"]], "torch.cuda.Event": [[977, 3, 1, "", "elapsed_time"], [977, 3, 1, "", "from_ipc_handle"], [977, 3, 1, "", "ipc_handle"], [977, 3, 1, "", "query"], [977, 3, 1, "", "record"], [977, 3, 1, "", "synchronize"], [977, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[978, 3, 1, "", "query"], [978, 3, 1, "", "record_event"], [978, 3, 1, "", "synchronize"], [978, 3, 1, "", "wait_event"], [978, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[980, 3, 1, "", "query"], [980, 3, 1, "", "record_event"], [980, 3, 1, "", "synchronize"], [980, 3, 1, "", "wait_event"], [980, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[17, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[987, 5, 1, "", "broadcast"], [988, 5, 1, "", "broadcast_coalesced"], [989, 5, 1, "", "gather"], [990, 5, 1, "", "reduce_add"], [991, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1017, 5, 1, "", "_create_jit_fn"], [1018, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1034, 5, 1, "", "mark"], [1035, 5, 1, "", "range_pop"], [1036, 5, 1, "", "range_push"]], "torch.distributed": [[23, 1, 1, "", "Backend"], [23, 1, 1, "", "DistBackendError"], [23, 1, 1, "", "FileStore"], [21, 1, 1, "", "GradBucket"], [23, 1, 1, "", "HashStore"], [23, 1, 1, "", "P2POp"], [23, 1, 1, "", "PrefixStore"], [23, 1, 1, "", "ReduceOp"], [23, 1, 1, "", "Store"], [23, 1, 1, "", "TCPStore"], [23, 0, 0, "-", "algorithms"], [23, 5, 1, "", "all_gather"], [23, 5, 1, "", "all_gather_into_tensor"], [23, 5, 1, "", "all_gather_multigpu"], [23, 5, 1, "", "all_gather_object"], [23, 5, 1, "", "all_reduce"], [23, 5, 1, "", "all_reduce_multigpu"], [23, 5, 1, "", "all_to_all"], [23, 5, 1, "", "all_to_all_single"], [1930, 0, 0, "-", "autograd"], [23, 5, 1, "", "barrier"], [23, 5, 1, "", "batch_isend_irecv"], [23, 5, 1, "", "broadcast"], [23, 5, 1, "", "broadcast_multigpu"], [23, 5, 1, "", "broadcast_object_list"], [25, 0, 0, "-", "checkpoint"], [23, 0, 0, "-", "elastic"], [46, 0, 0, "-", "fsdp"], [23, 5, 1, "", "gather"], [23, 5, 1, "", "gather_object"], [23, 5, 1, "", "get_backend"], [23, 5, 1, "", "get_global_rank"], [23, 5, 1, "", "get_group_rank"], [23, 5, 1, "", "get_process_group_ranks"], [23, 5, 1, "", "get_rank"], [23, 5, 1, "", "get_world_size"], [23, 5, 1, "", "init_process_group"], [23, 5, 1, "", "irecv"], [23, 5, 1, "", "is_available"], [23, 5, 1, "", "is_gloo_available"], [23, 5, 1, "", "is_initialized"], [23, 5, 1, "", "is_mpi_available"], [23, 5, 1, "", "is_nccl_available"], [23, 5, 1, "", "is_torchelastic_launched"], [23, 5, 1, "", "isend"], [23, 0, 0, "-", "launch"], [23, 0, 0, "-", "launcher"], [23, 5, 1, "", "monitored_barrier"], [23, 5, 1, "", "new_group"], [23, 0, 0, "-", "nn"], [27, 0, 0, "-", "optim"], [23, 0, 0, "-", "pipeline"], [23, 5, 1, "", "recv"], [23, 5, 1, "", "reduce"], [23, 5, 1, "", "reduce_multigpu"], [23, 1, 1, "", "reduce_op"], [23, 5, 1, "", "reduce_scatter"], [23, 5, 1, "", "reduce_scatter_multigpu"], [23, 5, 1, "", "reduce_scatter_tensor"], [1930, 0, 0, "-", "rpc"], [41, 0, 0, "-", "run"], [23, 5, 1, "", "scatter"], [23, 5, 1, "", "scatter_object_list"], [23, 5, 1, "", "send"], [23, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[23, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[21, 5, 1, "", "buffer"], [21, 5, 1, "", "gradients"], [21, 5, 1, "", "index"], [21, 5, 1, "", "is_last"], [21, 5, 1, "", "parameters"], [21, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[23, 5, 1, "", "add"], [23, 5, 1, "", "compare_set"], [23, 5, 1, "", "delete_key"], [23, 5, 1, "", "get"], [23, 5, 1, "", "num_keys"], [23, 5, 1, "", "set"], [23, 5, 1, "", "set_timeout"], [23, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[24, 1, 1, "", "Join"], [24, 1, 1, "", "JoinHook"], [24, 1, 1, "", "Joinable"], [23, 0, 0, "-", "ddp_comm_hooks"], [23, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[24, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[24, 3, 1, "", "main_hook"], [24, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[24, 4, 1, "", "join_device"], [24, 3, 1, "", "join_hook"], [24, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[21, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[21, 5, 1, "", "allreduce_hook"], [21, 5, 1, "", "bf16_compress_hook"], [21, 5, 1, "", "bf16_compress_wrapper"], [21, 5, 1, "", "fp16_compress_hook"], [21, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[21, 1, 1, "", "PowerSGDState"], [21, 5, 1, "", "batched_powerSGD_hook"], [21, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[21, 3, 1, "", "__getstate__"], [21, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1930, 5, 1, "", "backward"], [1930, 1, 1, "", "context"], [1930, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[25, 1, 1, "", "DefaultLoadPlanner"], [25, 1, 1, "", "DefaultSavePlanner"], [25, 1, 1, "", "FileSystemReader"], [25, 1, 1, "", "FileSystemWriter"], [25, 1, 1, "", "LoadPlan"], [25, 1, 1, "", "LoadPlanner"], [25, 1, 1, "", "ReadItem"], [25, 1, 1, "", "SavePlan"], [25, 1, 1, "", "SavePlanner"], [25, 1, 1, "", "StorageReader"], [25, 1, 1, "", "StorageWriter"], [25, 1, 1, "", "WriteItem"], [25, 5, 1, "", "load_state_dict"], [25, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[25, 3, 1, "", "lookup_tensor"], [25, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[25, 3, 1, "", "lookup_object"], [25, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[25, 3, 1, "", "commit_tensor"], [25, 3, 1, "", "create_global_plan"], [25, 3, 1, "", "create_local_plan"], [25, 3, 1, "", "finish_plan"], [25, 3, 1, "", "load_bytes"], [25, 3, 1, "", "resolve_tensor"], [25, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[25, 3, 1, "", "create_global_plan"], [25, 3, 1, "", "create_local_plan"], [25, 3, 1, "", "finish_plan"], [25, 3, 1, "", "resolve_data"], [25, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[25, 3, 1, "", "prepare_global_plan"], [25, 3, 1, "", "prepare_local_plan"], [25, 3, 1, "", "read_data"], [25, 3, 1, "", "read_metadata"], [25, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[25, 3, 1, "", "finish"], [25, 3, 1, "", "prepare_global_plan"], [25, 3, 1, "", "prepare_local_plan"], [25, 3, 1, "", "set_up_storage_writer"], [25, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[31, 0, 0, "-", "agent"], [34, 0, 0, "-", "events"], [37, 0, 0, "-", "metrics"], [38, 0, 0, "-", "multiprocessing"], [40, 0, 0, "-", "rendezvous"], [42, 0, 0, "-", "timer"], [23, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[31, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[31, 1, 1, "", "ElasticAgent"], [31, 1, 1, "", "SimpleElasticAgent"], [31, 1, 1, "", "Worker"], [31, 1, 1, "", "WorkerGroup"], [31, 1, 1, "", "WorkerSpec"], [31, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[31, 3, 1, "", "get_worker_group"], [31, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[31, 3, 1, "", "_assign_worker_ranks"], [31, 3, 1, "", "_exit_barrier"], [31, 3, 1, "", "_initialize_workers"], [31, 3, 1, "", "_monitor_workers"], [31, 3, 1, "", "_rendezvous"], [31, 3, 1, "", "_restart_workers"], [31, 3, 1, "", "_shutdown"], [31, 3, 1, "", "_start_workers"], [31, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[31, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[31, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[31, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[31, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[34, 1, 1, "", "Event"], [34, 2, 1, "", "EventMetadataValue"], [34, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[34, 5, 1, "", "get_logging_handler"], [34, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[37, 1, 1, "", "ConsoleMetricHandler"], [37, 1, 1, "", "MetricHandler"], [37, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[37, 5, 1, "", "configure"], [37, 5, 1, "", "prof"], [37, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[38, 1, 1, "", "MultiprocessContext"], [38, 1, 1, "", "PContext"], [38, 1, 1, "", "RunProcsResult"], [38, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[33, 0, 0, "-", "errors"], [38, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[33, 1, 1, "", "ChildFailedError"], [33, 1, 1, "", "ErrorHandler"], [33, 1, 1, "", "ProcessFailure"], [33, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[40, 1, 1, "", "RendezvousClosedError"], [40, 1, 1, "", "RendezvousConnectionError"], [40, 1, 1, "", "RendezvousError"], [40, 1, 1, "", "RendezvousHandler"], [40, 1, 1, "", "RendezvousHandlerRegistry"], [40, 1, 1, "", "RendezvousParameters"], [40, 1, 1, "", "RendezvousStateError"], [40, 1, 1, "", "RendezvousTimeoutError"], [40, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[40, 3, 1, "", "get_backend"], [40, 3, 1, "", "get_run_id"], [40, 3, 1, "", "is_closed"], [40, 3, 1, "", "next_rendezvous"], [40, 3, 1, "", "num_nodes_waiting"], [40, 3, 1, "", "set_closed"], [40, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[40, 3, 1, "", "create_handler"], [40, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[40, 3, 1, "", "get"], [40, 3, 1, "", "get_as_bool"], [40, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[40, 1, 1, "", "C10dRendezvousBackend"], [40, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[40, 1, 1, "", "DynamicRendezvousHandler"], [40, 1, 1, "", "RendezvousBackend"], [40, 1, 1, "", "RendezvousTimeout"], [40, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[40, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[40, 4, 1, "", "close"], [40, 4, 1, "", "heartbeat"], [40, 4, 1, "", "join"], [40, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[40, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[40, 1, 1, "", "EtcdRendezvousBackend"], [40, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[40, 3, 1, "", "get_state"], [40, 4, 1, "", "name"], [40, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[40, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[40, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[40, 3, 1, "", "add"], [40, 3, 1, "", "check"], [40, 3, 1, "", "get"], [40, 3, 1, "", "set"], [40, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[42, 1, 1, "", "FileTimerClient"], [42, 1, 1, "", "FileTimerServer"], [42, 1, 1, "", "LocalTimerClient"], [42, 1, 1, "", "LocalTimerServer"], [42, 1, 1, "", "TimerClient"], [42, 1, 1, "", "TimerRequest"], [42, 1, 1, "", "TimerServer"], [42, 5, 1, "", "configure"], [42, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[42, 3, 1, "", "acquire"], [42, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[42, 3, 1, "", "clear_timers"], [42, 3, 1, "", "get_expired_timers"], [42, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[23, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[46, 1, 1, "", "BackwardPrefetch"], [46, 1, 1, "", "CPUOffload"], [46, 1, 1, "", "FullyShardedDataParallel"], [46, 1, 1, "", "MixedPrecision"], [46, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[46, 3, 1, "", "apply"], [46, 3, 1, "", "clip_grad_norm_"], [46, 3, 1, "", "flatten_sharded_optim_state_dict"], [46, 3, 1, "", "forward"], [46, 3, 1, "", "fsdp_modules"], [46, 3, 1, "", "full_optim_state_dict"], [46, 3, 1, "", "get_state_dict_type"], [46, 4, 1, "", "module"], [46, 3, 1, "", "named_buffers"], [46, 3, 1, "", "named_parameters"], [46, 3, 1, "", "no_sync"], [46, 3, 1, "", "optim_state_dict"], [46, 3, 1, "", "optim_state_dict_to_load"], [46, 3, 1, "", "register_comm_hook"], [46, 3, 1, "", "rekey_optim_state_dict"], [46, 3, 1, "", "scatter_full_optim_state_dict"], [46, 3, 1, "", "set_state_dict_type"], [46, 3, 1, "", "shard_full_optim_state_dict"], [46, 3, 1, "", "sharded_optim_state_dict"], [46, 3, 1, "", "state_dict_type"], [46, 3, 1, "", "summon_full_params"]], "torch.distributed.fsdp.api": [[46, 1, 1, "", "FullOptimStateDictConfig"], [46, 1, 1, "", "FullStateDictConfig"], [46, 1, 1, "", "LocalOptimStateDictConfig"], [46, 1, 1, "", "LocalStateDictConfig"], [46, 1, 1, "", "OptimStateDictConfig"], [46, 1, 1, "", "ShardedOptimStateDictConfig"], [46, 1, 1, "", "ShardedStateDictConfig"], [46, 1, 1, "", "StateDictConfig"], [46, 1, 1, "", "StateDictSettings"]], "torch.distributed.nn": [[23, 0, 0, "-", "api"], [23, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1930, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1930, 3, 1, "", "get_module_rref"], [1930, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[23, 0, 0, "-", "templates"]], "torch.distributed.optim": [[27, 1, 1, "", "DistributedOptimizer"], [27, 1, 1, "", "PostLocalSGDOptimizer"], [27, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[27, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"], [27, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[27, 3, 1, "", "add_param_group"], [27, 3, 1, "", "consolidate_state_dict"], [27, 3, 1, "", "join_hook"], [27, 3, 1, "", "load_state_dict"], [27, 3, 1, "", "state_dict"], [27, 3, 1, "", "step"]], "torch.distributed.pipeline": [[23, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1923, 1, 1, "", "Pipe"], [23, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1923, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1923, 1, 1, "", "pop"], [1923, 5, 1, "", "skippable"], [1923, 1, 1, "", "stash"], [1923, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1930, 1, 1, "", "BackendType"], [1930, 1, 1, "", "PyRRef"], [1930, 1, 1, "", "RpcBackendOptions"], [1930, 1, 1, "", "TensorPipeRpcBackendOptions"], [1930, 1, 1, "", "WorkerInfo"], [1930, 5, 1, "", "get_worker_info"], [1930, 5, 1, "", "init_rpc"], [1930, 5, 1, "", "remote"], [1930, 5, 1, "", "rpc_async"], [1930, 5, 1, "", "rpc_sync"], [1930, 5, 1, "", "shutdown"]], "torch.distributed.rpc.PyRRef": [[1930, 3, 1, "", "backward"], [1930, 3, 1, "", "confirmed_by_owner"], [1930, 3, 1, "", "is_owner"], [1930, 3, 1, "", "local_value"], [1930, 3, 1, "", "owner"], [1930, 3, 1, "", "owner_name"], [1930, 3, 1, "", "remote"], [1930, 3, 1, "", "rpc_async"], [1930, 3, 1, "", "rpc_sync"], [1930, 3, 1, "", "to_here"]], "torch.distributed.rpc.RpcBackendOptions": [[1930, 4, 1, "", "init_method"], [1930, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1930, 4, 1, "", "device_maps"], [1930, 4, 1, "", "devices"], [1930, 4, 1, "", "init_method"], [1930, 4, 1, "", "num_worker_threads"], [1930, 4, 1, "", "rpc_timeout"], [1930, 3, 1, "", "set_device_map"], [1930, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1930, 4, 1, "", "id"], [1930, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1930, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[28, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[28, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel": [[28, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[28, 1, 1, "", "ColwiseParallel"], [28, 1, 1, "", "PairwiseParallel"], [28, 1, 1, "", "RowwiseParallel"], [28, 1, 1, "", "SequenceParallel"], [28, 5, 1, "", "make_input_replicate_1d"], [28, 5, 1, "", "make_input_reshard_replicate"], [28, 5, 1, "", "make_input_shard_1d"], [28, 5, 1, "", "make_input_shard_1d_last_dim"], [28, 5, 1, "", "make_output_replicate_1d"], [28, 5, 1, "", "make_output_reshard_tensor"], [28, 5, 1, "", "make_output_shard_1d"], [28, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[29, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.beta": [[29, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "concentration0"], [29, 4, 1, "", "concentration1"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.binomial": [[29, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.categorical": [[29, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[29, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.chi2": [[29, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "df"], [29, 3, 1, "", "expand"]], "torch.distributions": [[29, 0, 0, "-", "constraint_registry"], [29, 0, 0, "-", "constraints"], [29, 0, 0, "-", "kl"], [29, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[29, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[29, 3, 1, "", "register"]], "torch.distributions.constraints": [[29, 1, 1, "", "Constraint"], [29, 2, 1, "", "cat"], [29, 2, 1, "", "dependent_property"], [29, 2, 1, "", "greater_than"], [29, 2, 1, "", "greater_than_eq"], [29, 2, 1, "", "half_open_interval"], [29, 2, 1, "", "independent"], [29, 2, 1, "", "integer_interval"], [29, 2, 1, "", "interval"], [29, 2, 1, "", "less_than"], [29, 2, 1, "", "multinomial"], [29, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[29, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[29, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[29, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.distribution": [[29, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[29, 4, 1, "", "arg_constraints"], [29, 4, 1, "", "batch_shape"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 4, 1, "", "event_shape"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "perplexity"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 3, 1, "", "sample_n"], [29, 3, 1, "", "set_default_validate_args"], [29, 4, 1, "", "stddev"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[29, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[29, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[29, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[29, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.gamma": [[29, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.geometric": [[29, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[29, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[29, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[29, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.independent": [[29, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "has_enumerate_support"], [29, 4, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.kl": [[29, 5, 1, "", "kl_divergence"], [29, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[29, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.laplace": [[29, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[29, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"]], "torch.distributions.log_normal": [[29, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "loc"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "scale"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[29, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[29, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 4, 1, "", "component_distribution"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mixture_distribution"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[29, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"], [29, 2, 1, "", "total_count"], [29, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[29, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[29, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.normal": [[29, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "stddev"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[29, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "enumerate_support"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_enumerate_support"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.pareto": [[29, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.poisson": [[29, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[29, 1, 1, "", "LogitRelaxedBernoulli"], [29, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "param_shape"], [29, 4, 1, "", "probs"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "probs"], [29, 2, 1, "", "support"], [29, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[29, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 4, 1, "", "logits"], [29, 4, 1, "", "probs"], [29, 2, 1, "", "support"], [29, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[29, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[29, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 3, 1, "", "rsample"], [29, 3, 1, "", "sample"], [29, 4, 1, "", "support"]], "torch.distributions.transforms": [[29, 1, 1, "", "AbsTransform"], [29, 1, 1, "", "AffineTransform"], [29, 1, 1, "", "CatTransform"], [29, 1, 1, "", "ComposeTransform"], [29, 1, 1, "", "CorrCholeskyTransform"], [29, 1, 1, "", "CumulativeDistributionTransform"], [29, 1, 1, "", "ExpTransform"], [29, 1, 1, "", "IndependentTransform"], [29, 1, 1, "", "LowerCholeskyTransform"], [29, 1, 1, "", "PositiveDefiniteTransform"], [29, 1, 1, "", "PowerTransform"], [29, 1, 1, "", "ReshapeTransform"], [29, 1, 1, "", "SigmoidTransform"], [29, 1, 1, "", "SoftmaxTransform"], [29, 1, 1, "", "SoftplusTransform"], [29, 1, 1, "", "StackTransform"], [29, 1, 1, "", "StickBreakingTransform"], [29, 1, 1, "", "TanhTransform"], [29, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[29, 3, 1, "", "forward_shape"], [29, 4, 1, "", "inv"], [29, 3, 1, "", "inverse_shape"], [29, 3, 1, "", "log_abs_det_jacobian"], [29, 4, 1, "", "sign"]], "torch.distributions.uniform": [[29, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "cdf"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "icdf"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "stddev"], [29, 4, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[29, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 3, 1, "", "sample"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.weibull": [[29, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[29, 2, 1, "", "arg_constraints"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.distributions.wishart": [[29, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[29, 2, 1, "", "arg_constraints"], [29, 4, 1, "", "covariance_matrix"], [29, 3, 1, "", "entropy"], [29, 3, 1, "", "expand"], [29, 2, 1, "", "has_rsample"], [29, 3, 1, "", "log_prob"], [29, 4, 1, "", "mean"], [29, 4, 1, "", "mode"], [29, 4, 1, "", "precision_matrix"], [29, 3, 1, "", "rsample"], [29, 4, 1, "", "scale_tril"], [29, 2, 1, "", "support"], [29, 4, 1, "", "variance"]], "torch.fft": [[1090, 5, 1, "", "fft"], [1091, 5, 1, "", "fft2"], [1092, 5, 1, "", "fftfreq"], [1093, 5, 1, "", "fftn"], [1094, 5, 1, "", "fftshift"], [1095, 5, 1, "", "hfft"], [1096, 5, 1, "", "hfft2"], [1097, 5, 1, "", "hfftn"], [1098, 5, 1, "", "ifft"], [1099, 5, 1, "", "ifft2"], [1100, 5, 1, "", "ifftn"], [1101, 5, 1, "", "ifftshift"], [1102, 5, 1, "", "ihfft"], [1103, 5, 1, "", "ihfft2"], [1104, 5, 1, "", "ihfftn"], [1105, 5, 1, "", "irfft"], [1106, 5, 1, "", "irfft2"], [1107, 5, 1, "", "irfftn"], [1108, 5, 1, "", "rfft"], [1109, 5, 1, "", "rfft2"], [1110, 5, 1, "", "rfftfreq"], [1111, 5, 1, "", "rfftn"]], "torch.func": [[1130, 5, 1, "", "functional_call"], [1131, 5, 1, "", "functionalize"], [1132, 5, 1, "", "grad"], [1133, 5, 1, "", "grad_and_value"], [1134, 5, 1, "", "hessian"], [1135, 5, 1, "", "jacfwd"], [1136, 5, 1, "", "jacrev"], [1137, 5, 1, "", "jvp"], [1138, 5, 1, "", "linearize"], [1139, 5, 1, "", "replace_all_batch_norm_modules_"], [1140, 5, 1, "", "stack_module_state"], [1141, 5, 1, "", "vjp"], [1142, 5, 1, "", "vmap"]], "torch.futures": [[53, 1, 1, "", "Future"], [53, 5, 1, "", "collect_all"], [53, 5, 1, "", "wait_all"]], "torch.futures.Future": [[53, 3, 1, "", "add_done_callback"], [53, 3, 1, "", "done"], [53, 3, 1, "", "set_exception"], [53, 3, 1, "", "set_result"], [53, 3, 1, "", "then"], [53, 3, 1, "", "value"], [53, 3, 1, "", "wait"]], "torch.fx": [[54, 1, 1, "", "Graph"], [54, 1, 1, "", "GraphModule"], [54, 1, 1, "", "Interpreter"], [54, 1, 1, "", "Node"], [54, 1, 1, "", "Proxy"], [54, 1, 1, "", "Tracer"], [54, 1, 1, "", "Transformer"], [54, 0, 0, "-", "experimental"], [54, 0, 0, "-", "passes"], [54, 5, 1, "", "replace_pattern"], [54, 5, 1, "", "symbolic_trace"], [54, 5, 1, "", "wrap"]], "torch.fx.Graph": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_method"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "create_node"], [54, 3, 1, "", "eliminate_dead_code"], [54, 3, 1, "", "erase_node"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "graph_copy"], [54, 3, 1, "", "inserting_after"], [54, 3, 1, "", "inserting_before"], [54, 3, 1, "", "lint"], [54, 3, 1, "", "node_copy"], [54, 4, 1, "", "nodes"], [54, 3, 1, "", "on_generate_code"], [54, 3, 1, "", "output"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "print_tabular"], [54, 3, 1, "", "process_inputs"], [54, 3, 1, "", "process_outputs"], [54, 3, 1, "", "python_code"], [54, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[54, 3, 1, "", "__init__"], [54, 3, 1, "", "add_submodule"], [54, 4, 1, "", "code"], [54, 3, 1, "", "delete_all_unused_submodules"], [54, 3, 1, "", "delete_submodule"], [54, 4, 1, "", "graph"], [54, 3, 1, "", "print_readable"], [54, 3, 1, "", "recompile"], [54, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[54, 3, 1, "", "boxed_run"], [54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_method"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "fetch_args_kwargs_from_env"], [54, 3, 1, "", "fetch_attr"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "map_nodes_to_values"], [54, 3, 1, "", "output"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "run"], [54, 3, 1, "", "run_node"]], "torch.fx.Node": [[54, 4, 1, "", "all_input_nodes"], [54, 3, 1, "", "append"], [54, 4, 1, "", "args"], [54, 3, 1, "", "format_node"], [54, 3, 1, "", "is_impure"], [54, 4, 1, "", "kwargs"], [54, 4, 1, "", "next"], [54, 3, 1, "", "normalized_arguments"], [54, 3, 1, "", "prepend"], [54, 4, 1, "", "prev"], [54, 3, 1, "", "replace_all_uses_with"], [54, 3, 1, "", "replace_input_with"], [54, 4, 1, "", "stack_trace"], [54, 3, 1, "", "update_arg"], [54, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[54, 3, 1, "", "call_module"], [54, 3, 1, "", "create_arg"], [54, 3, 1, "", "create_args_for_root"], [54, 3, 1, "", "create_node"], [54, 3, 1, "", "create_proxy"], [54, 3, 1, "", "getattr"], [54, 3, 1, "", "is_leaf_module"], [54, 3, 1, "", "iter"], [54, 3, 1, "", "keys"], [54, 3, 1, "", "path_of_module"], [54, 3, 1, "", "proxy"], [54, 3, 1, "", "to_bool"], [54, 3, 1, "", "trace"]], "torch.fx.Transformer": [[54, 3, 1, "", "call_function"], [54, 3, 1, "", "call_module"], [54, 3, 1, "", "get_attr"], [54, 3, 1, "", "placeholder"], [54, 3, 1, "", "transform"]], "torch.fx.experimental": [[54, 0, 0, "-", "migrate_gradual_types"], [54, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[54, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[54, 0, 0, "-", "backends"], [54, 0, 0, "-", "dialect"], [54, 0, 0, "-", "infra"], [54, 0, 0, "-", "tests"], [54, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[54, 0, 0, "-", "common"]], "torch.hub": [[1875, 5, 1, "", "download_url_to_file"], [1875, 5, 1, "", "get_dir"], [1875, 5, 1, "", "help"], [1875, 5, 1, "", "list"], [1875, 5, 1, "", "load"], [1875, 5, 1, "", "load_state_dict_from_url"], [1875, 5, 1, "", "set_dir"]], "torch.jit": [[1199, 1, 1, "", "Attribute"], [1200, 1, 1, "", "ScriptFunction"], [1201, 1, 1, "", "ScriptModule"], [1202, 5, 1, "", "annotate"], [1203, 5, 1, "", "enable_onednn_fusion"], [1877, 5, 1, "", "export"], [1204, 5, 1, "", "fork"], [1205, 5, 1, "", "freeze"], [1206, 5, 1, "", "ignore"], [1879, 5, 1, "", "is_scripting"], [1879, 5, 1, "", "is_tracing"], [1207, 5, 1, "", "isinstance"], [1208, 5, 1, "", "load"], [1877, 0, 0, "-", "mobile"], [1209, 5, 1, "", "onednn_fusion_enabled"], [1210, 5, 1, "", "optimize_for_inference"], [1211, 5, 1, "", "save"], [1212, 5, 1, "", "script"], [1213, 5, 1, "", "script_if_tracing"], [1214, 5, 1, "", "set_fusion_strategy"], [1215, 1, 1, "", "strict_fusion"], [1878, 0, 0, "-", "supported_ops"], [1216, 5, 1, "", "trace"], [1217, 5, 1, "", "trace_module"], [1882, 0, 0, "-", "unsupported_tensor_ops"], [1218, 5, 1, "", "unused"], [1219, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1199, 3, 1, "", "count"], [1199, 3, 1, "", "index"], [1199, 2, 1, "", "type"], [1199, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1200, 3, 1, "", "get_debug_state"], [1200, 3, 1, "", "save"], [1200, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1201, 3, 1, "", "add_module"], [1201, 3, 1, "", "apply"], [1201, 3, 1, "", "bfloat16"], [1201, 3, 1, "", "buffers"], [1201, 3, 1, "", "children"], [1201, 4, 1, "", "code"], [1201, 4, 1, "", "code_with_constants"], [1201, 3, 1, "", "compile"], [1201, 3, 1, "", "cpu"], [1201, 3, 1, "", "cuda"], [1201, 3, 1, "", "double"], [1201, 3, 1, "", "eval"], [1201, 3, 1, "", "extra_repr"], [1201, 3, 1, "", "float"], [1201, 3, 1, "", "get_buffer"], [1201, 3, 1, "", "get_extra_state"], [1201, 3, 1, "", "get_parameter"], [1201, 3, 1, "", "get_submodule"], [1201, 4, 1, "", "graph"], [1201, 3, 1, "", "half"], [1201, 4, 1, "", "inlined_graph"], [1201, 3, 1, "", "ipu"], [1201, 3, 1, "", "load_state_dict"], [1201, 3, 1, "", "modules"], [1201, 3, 1, "", "named_buffers"], [1201, 3, 1, "", "named_children"], [1201, 3, 1, "", "named_modules"], [1201, 3, 1, "", "named_parameters"], [1201, 3, 1, "", "parameters"], [1201, 3, 1, "", "register_backward_hook"], [1201, 3, 1, "", "register_buffer"], [1201, 3, 1, "", "register_forward_hook"], [1201, 3, 1, "", "register_forward_pre_hook"], [1201, 3, 1, "", "register_full_backward_hook"], [1201, 3, 1, "", "register_full_backward_pre_hook"], [1201, 3, 1, "", "register_load_state_dict_post_hook"], [1201, 3, 1, "", "register_module"], [1201, 3, 1, "", "register_parameter"], [1201, 3, 1, "", "register_state_dict_pre_hook"], [1201, 3, 1, "", "requires_grad_"], [1201, 3, 1, "", "save"], [1201, 3, 1, "", "set_extra_state"], [1201, 3, 1, "", "share_memory"], [1201, 3, 1, "", "state_dict"], [1201, 3, 1, "", "to"], [1201, 3, 1, "", "to_empty"], [1201, 3, 1, "", "train"], [1201, 3, 1, "", "type"], [1201, 3, 1, "", "xpu"], [1201, 3, 1, "", "zero_grad"]], "torch.library": [[1884, 1, 1, "", "Library"], [1884, 5, 1, "", "fallthrough_kernel"]], "torch.library.Library": [[1884, 3, 1, "", "define"], [1884, 3, 1, "", "impl"]], "torch.linalg": [[1230, 5, 1, "", "cholesky"], [1231, 5, 1, "", "cholesky_ex"], [1232, 5, 1, "", "cond"], [1233, 5, 1, "", "cross"], [1234, 5, 1, "", "det"], [1235, 5, 1, "", "diagonal"], [1236, 5, 1, "", "eig"], [1237, 5, 1, "", "eigh"], [1238, 5, 1, "", "eigvals"], [1239, 5, 1, "", "eigvalsh"], [1240, 5, 1, "", "householder_product"], [1241, 5, 1, "", "inv"], [1242, 5, 1, "", "inv_ex"], [1243, 5, 1, "", "ldl_factor"], [1244, 5, 1, "", "ldl_factor_ex"], [1245, 5, 1, "", "ldl_solve"], [1246, 5, 1, "", "lstsq"], [1247, 5, 1, "", "lu"], [1248, 5, 1, "", "lu_factor"], [1249, 5, 1, "", "lu_factor_ex"], [1250, 5, 1, "", "lu_solve"], [1251, 5, 1, "", "matmul"], [1252, 5, 1, "", "matrix_exp"], [1253, 5, 1, "", "matrix_norm"], [1254, 5, 1, "", "matrix_power"], [1255, 5, 1, "", "matrix_rank"], [1256, 5, 1, "", "multi_dot"], [1257, 5, 1, "", "norm"], [1258, 5, 1, "", "pinv"], [1259, 5, 1, "", "qr"], [1260, 5, 1, "", "slogdet"], [1261, 5, 1, "", "solve"], [1262, 5, 1, "", "solve_ex"], [1263, 5, 1, "", "solve_triangular"], [1264, 5, 1, "", "svd"], [1265, 5, 1, "", "svdvals"], [1266, 5, 1, "", "tensorinv"], [1267, 5, 1, "", "tensorsolve"], [1268, 5, 1, "", "vander"], [1269, 5, 1, "", "vecdot"], [1270, 5, 1, "", "vector_norm"]], "torch.masked": [[1887, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1890, 1, 1, "", "Aggregation"], [1890, 1, 1, "", "Event"], [1890, 1, 1, "", "EventHandlerHandle"], [1890, 1, 1, "", "Stat"], [1890, 1, 1, "", "TensorboardEventHandler"], [1890, 1, 1, "", "data_value_t"], [1890, 5, 1, "", "log_event"], [1890, 5, 1, "", "register_event_handler"], [1890, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1890, 4, 1, "", "name"]], "torch.monitor.Event": [[1890, 3, 1, "", "__init__"], [1890, 4, 1, "", "data"], [1890, 4, 1, "", "name"], [1890, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1890, 3, 1, "", "__init__"], [1890, 3, 1, "", "add"], [1890, 4, 1, "", "count"], [1890, 3, 1, "", "get"], [1890, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1890, 3, 1, "", "__init__"]], "torch.mps": [[1309, 5, 1, "", "current_allocated_memory"], [1310, 5, 1, "", "driver_allocated_memory"], [1311, 5, 1, "", "empty_cache"], [1313, 5, 1, "", "get_rng_state"], [1314, 5, 1, "", "manual_seed"], [1318, 5, 1, "", "seed"], [1319, 5, 1, "", "set_per_process_memory_fraction"], [1320, 5, 1, "", "set_rng_state"], [1321, 5, 1, "", "synchronize"]], "torch.mps.event": [[1312, 1, 1, "", "Event"]], "torch.mps.event.Event": [[1312, 3, 1, "", "elapsed_time"], [1312, 3, 1, "", "query"], [1312, 3, 1, "", "record"], [1312, 3, 1, "", "synchronize"], [1312, 3, 1, "", "wait"]], "torch.mps.profiler": [[1315, 5, 1, "", "profile"], [1316, 5, 1, "", "start"], [1317, 5, 1, "", "stop"]], "torch.multiprocessing": [[1892, 1, 1, "", "SpawnContext"], [1892, 5, 1, "", "get_all_sharing_strategies"], [1892, 5, 1, "", "get_sharing_strategy"], [1892, 5, 1, "", "set_sharing_strategy"], [1892, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1892, 3, 1, "", "join"]], "torch.nested": [[1895, 5, 1, "", "as_nested_tensor"], [1895, 5, 1, "", "nested_tensor"], [1895, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1339, 1, 1, "", "AdaptiveAvgPool1d"], [1340, 1, 1, "", "AdaptiveAvgPool2d"], [1341, 1, 1, "", "AdaptiveAvgPool3d"], [1342, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1343, 1, 1, "", "AdaptiveMaxPool1d"], [1344, 1, 1, "", "AdaptiveMaxPool2d"], [1345, 1, 1, "", "AdaptiveMaxPool3d"], [1346, 1, 1, "", "AlphaDropout"], [1347, 1, 1, "", "AvgPool1d"], [1348, 1, 1, "", "AvgPool2d"], [1349, 1, 1, "", "AvgPool3d"], [1350, 1, 1, "", "BCELoss"], [1351, 1, 1, "", "BCEWithLogitsLoss"], [1352, 1, 1, "", "BatchNorm1d"], [1353, 1, 1, "", "BatchNorm2d"], [1354, 1, 1, "", "BatchNorm3d"], [1355, 1, 1, "", "Bilinear"], [1356, 1, 1, "", "CELU"], [1357, 1, 1, "", "CTCLoss"], [1358, 1, 1, "", "ChannelShuffle"], [1359, 1, 1, "", "ConstantPad1d"], [1360, 1, 1, "", "ConstantPad2d"], [1361, 1, 1, "", "ConstantPad3d"], [1362, 1, 1, "", "Conv1d"], [1363, 1, 1, "", "Conv2d"], [1364, 1, 1, "", "Conv3d"], [1365, 1, 1, "", "ConvTranspose1d"], [1366, 1, 1, "", "ConvTranspose2d"], [1367, 1, 1, "", "ConvTranspose3d"], [1368, 1, 1, "", "CosineEmbeddingLoss"], [1369, 1, 1, "", "CosineSimilarity"], [1370, 1, 1, "", "CrossEntropyLoss"], [1371, 1, 1, "", "DataParallel"], [1372, 1, 1, "", "Dropout"], [1373, 1, 1, "", "Dropout1d"], [1374, 1, 1, "", "Dropout2d"], [1375, 1, 1, "", "Dropout3d"], [1376, 1, 1, "", "ELU"], [1377, 1, 1, "", "Embedding"], [1378, 1, 1, "", "EmbeddingBag"], [1379, 1, 1, "", "FeatureAlphaDropout"], [1380, 1, 1, "", "Flatten"], [1381, 1, 1, "", "Fold"], [1382, 1, 1, "", "FractionalMaxPool2d"], [1383, 1, 1, "", "FractionalMaxPool3d"], [1384, 1, 1, "", "GELU"], [1385, 1, 1, "", "GLU"], [1386, 1, 1, "", "GRU"], [1387, 1, 1, "", "GRUCell"], [1388, 1, 1, "", "GaussianNLLLoss"], [1389, 1, 1, "", "GroupNorm"], [1390, 1, 1, "", "Hardshrink"], [1391, 1, 1, "", "Hardsigmoid"], [1392, 1, 1, "", "Hardswish"], [1393, 1, 1, "", "Hardtanh"], [1394, 1, 1, "", "HingeEmbeddingLoss"], [1395, 1, 1, "", "HuberLoss"], [1396, 1, 1, "", "Identity"], [1397, 1, 1, "", "InstanceNorm1d"], [1398, 1, 1, "", "InstanceNorm2d"], [1399, 1, 1, "", "InstanceNorm3d"], [1400, 1, 1, "", "KLDivLoss"], [1401, 1, 1, "", "L1Loss"], [1402, 1, 1, "", "LPPool1d"], [1403, 1, 1, "", "LPPool2d"], [1404, 1, 1, "", "LSTM"], [1405, 1, 1, "", "LSTMCell"], [1406, 1, 1, "", "LayerNorm"], [1407, 1, 1, "", "LazyBatchNorm1d"], [1408, 1, 1, "", "LazyBatchNorm2d"], [1409, 1, 1, "", "LazyBatchNorm3d"], [1410, 1, 1, "", "LazyConv1d"], [1411, 1, 1, "", "LazyConv2d"], [1412, 1, 1, "", "LazyConv3d"], [1413, 1, 1, "", "LazyConvTranspose1d"], [1414, 1, 1, "", "LazyConvTranspose2d"], [1415, 1, 1, "", "LazyConvTranspose3d"], [1416, 1, 1, "", "LazyInstanceNorm1d"], [1417, 1, 1, "", "LazyInstanceNorm2d"], [1418, 1, 1, "", "LazyInstanceNorm3d"], [1419, 1, 1, "", "LazyLinear"], [1420, 1, 1, "", "LeakyReLU"], [1421, 1, 1, "", "Linear"], [1422, 1, 1, "", "LocalResponseNorm"], [1423, 1, 1, "", "LogSigmoid"], [1424, 1, 1, "", "LogSoftmax"], [1425, 1, 1, "", "MSELoss"], [1426, 1, 1, "", "MarginRankingLoss"], [1427, 1, 1, "", "MaxPool1d"], [1428, 1, 1, "", "MaxPool2d"], [1429, 1, 1, "", "MaxPool3d"], [1430, 1, 1, "", "MaxUnpool1d"], [1431, 1, 1, "", "MaxUnpool2d"], [1432, 1, 1, "", "MaxUnpool3d"], [1433, 1, 1, "", "Mish"], [1434, 1, 1, "", "Module"], [1435, 1, 1, "", "ModuleDict"], [1436, 1, 1, "", "ModuleList"], [1437, 1, 1, "", "MultiLabelMarginLoss"], [1438, 1, 1, "", "MultiLabelSoftMarginLoss"], [1439, 1, 1, "", "MultiMarginLoss"], [1440, 1, 1, "", "MultiheadAttention"], [1441, 1, 1, "", "NLLLoss"], [1442, 1, 1, "", "PReLU"], [1443, 1, 1, "", "PairwiseDistance"], [1444, 1, 1, "", "ParameterDict"], [1445, 1, 1, "", "ParameterList"], [1446, 1, 1, "", "PixelShuffle"], [1447, 1, 1, "", "PixelUnshuffle"], [1448, 1, 1, "", "PoissonNLLLoss"], [1449, 1, 1, "", "RNN"], [1450, 1, 1, "", "RNNBase"], [1451, 1, 1, "", "RNNCell"], [1452, 1, 1, "", "RReLU"], [1453, 1, 1, "", "ReLU"], [1454, 1, 1, "", "ReLU6"], [1455, 1, 1, "", "ReflectionPad1d"], [1456, 1, 1, "", "ReflectionPad2d"], [1457, 1, 1, "", "ReflectionPad3d"], [1458, 1, 1, "", "ReplicationPad1d"], [1459, 1, 1, "", "ReplicationPad2d"], [1460, 1, 1, "", "ReplicationPad3d"], [1461, 1, 1, "", "SELU"], [1462, 1, 1, "", "Sequential"], [1463, 1, 1, "", "SiLU"], [1464, 1, 1, "", "Sigmoid"], [1465, 1, 1, "", "SmoothL1Loss"], [1466, 1, 1, "", "SoftMarginLoss"], [1467, 1, 1, "", "Softmax"], [1468, 1, 1, "", "Softmax2d"], [1469, 1, 1, "", "Softmin"], [1470, 1, 1, "", "Softplus"], [1471, 1, 1, "", "Softshrink"], [1472, 1, 1, "", "Softsign"], [1473, 1, 1, "", "SyncBatchNorm"], [1474, 1, 1, "", "Tanh"], [1475, 1, 1, "", "Tanhshrink"], [1476, 1, 1, "", "Threshold"], [1477, 1, 1, "", "Transformer"], [1478, 1, 1, "", "TransformerDecoder"], [1479, 1, 1, "", "TransformerDecoderLayer"], [1480, 1, 1, "", "TransformerEncoder"], [1481, 1, 1, "", "TransformerEncoderLayer"], [1482, 1, 1, "", "TripletMarginLoss"], [1483, 1, 1, "", "TripletMarginWithDistanceLoss"], [1484, 1, 1, "", "Unflatten"], [1485, 1, 1, "", "Unfold"], [1486, 1, 1, "", "Upsample"], [1487, 1, 1, "", "UpsamplingBilinear2d"], [1488, 1, 1, "", "UpsamplingNearest2d"], [1489, 1, 1, "", "ZeroPad1d"], [1490, 1, 1, "", "ZeroPad2d"], [1491, 1, 1, "", "ZeroPad3d"], [1896, 0, 0, "-", "backends"], [1928, 0, 0, "-", "intrinsic"], [1896, 0, 0, "-", "modules"], [1896, 0, 0, "-", "parallel"], [1928, 0, 0, "-", "qat"], [1928, 0, 0, "-", "quantizable"], [1928, 0, 0, "-", "quantized"], [1896, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1342, 3, 1, "", "log_prob"], [1342, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1377, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1378, 3, 1, "", "forward"], [1378, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1413, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1414, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1415, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1416, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1417, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1418, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1419, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1434, 3, 1, "", "add_module"], [1434, 3, 1, "", "apply"], [1434, 3, 1, "", "bfloat16"], [1434, 3, 1, "", "buffers"], [1434, 3, 1, "", "children"], [1434, 3, 1, "", "compile"], [1434, 3, 1, "", "cpu"], [1434, 3, 1, "", "cuda"], [1434, 3, 1, "", "double"], [1434, 3, 1, "", "eval"], [1434, 3, 1, "", "extra_repr"], [1434, 3, 1, "", "float"], [1434, 3, 1, "", "forward"], [1434, 3, 1, "", "get_buffer"], [1434, 3, 1, "", "get_extra_state"], [1434, 3, 1, "", "get_parameter"], [1434, 3, 1, "", "get_submodule"], [1434, 3, 1, "", "half"], [1434, 3, 1, "", "ipu"], [1434, 3, 1, "", "load_state_dict"], [1434, 3, 1, "", "modules"], [1434, 3, 1, "", "named_buffers"], [1434, 3, 1, "", "named_children"], [1434, 3, 1, "", "named_modules"], [1434, 3, 1, "", "named_parameters"], [1434, 3, 1, "", "parameters"], [1434, 3, 1, "", "register_backward_hook"], [1434, 3, 1, "", "register_buffer"], [1434, 3, 1, "", "register_forward_hook"], [1434, 3, 1, "", "register_forward_pre_hook"], [1434, 3, 1, "", "register_full_backward_hook"], [1434, 3, 1, "", "register_full_backward_pre_hook"], [1434, 3, 1, "", "register_load_state_dict_post_hook"], [1434, 3, 1, "", "register_module"], [1434, 3, 1, "", "register_parameter"], [1434, 3, 1, "", "register_state_dict_pre_hook"], [1434, 3, 1, "", "requires_grad_"], [1434, 3, 1, "", "set_extra_state"], [1434, 3, 1, "", "share_memory"], [1434, 3, 1, "", "state_dict"], [1434, 3, 1, "", "to"], [1434, 3, 1, "", "to_empty"], [1434, 3, 1, "", "train"], [1434, 3, 1, "", "type"], [1434, 3, 1, "", "xpu"], [1434, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1435, 3, 1, "", "clear"], [1435, 3, 1, "", "items"], [1435, 3, 1, "", "keys"], [1435, 3, 1, "", "pop"], [1435, 3, 1, "", "update"], [1435, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1436, 3, 1, "", "append"], [1436, 3, 1, "", "extend"], [1436, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1440, 3, 1, "", "forward"], [1440, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1444, 3, 1, "", "clear"], [1444, 3, 1, "", "copy"], [1444, 3, 1, "", "fromkeys"], [1444, 3, 1, "", "get"], [1444, 3, 1, "", "items"], [1444, 3, 1, "", "keys"], [1444, 3, 1, "", "pop"], [1444, 3, 1, "", "popitem"], [1444, 3, 1, "", "setdefault"], [1444, 3, 1, "", "update"], [1444, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1445, 3, 1, "", "append"], [1445, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1450, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1462, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1473, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1477, 3, 1, "", "forward"], [1477, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1478, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1479, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1480, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1481, 3, 1, "", "forward"]], "torch.nn.functional": [[1492, 5, 1, "", "adaptive_avg_pool1d"], [1493, 5, 1, "", "adaptive_avg_pool2d"], [1494, 5, 1, "", "adaptive_avg_pool3d"], [1495, 5, 1, "", "adaptive_max_pool1d"], [1496, 5, 1, "", "adaptive_max_pool2d"], [1497, 5, 1, "", "adaptive_max_pool3d"], [1498, 5, 1, "", "affine_grid"], [1499, 5, 1, "", "alpha_dropout"], [1500, 5, 1, "", "avg_pool1d"], [1501, 5, 1, "", "avg_pool2d"], [1502, 5, 1, "", "avg_pool3d"], [1503, 5, 1, "", "batch_norm"], [1504, 5, 1, "", "bilinear"], [1505, 5, 1, "", "binary_cross_entropy"], [1506, 5, 1, "", "binary_cross_entropy_with_logits"], [1507, 5, 1, "", "celu"], [1508, 5, 1, "", "conv1d"], [1509, 5, 1, "", "conv2d"], [1510, 5, 1, "", "conv3d"], [1511, 5, 1, "", "conv_transpose1d"], [1512, 5, 1, "", "conv_transpose2d"], [1513, 5, 1, "", "conv_transpose3d"], [1514, 5, 1, "", "cosine_embedding_loss"], [1515, 5, 1, "", "cosine_similarity"], [1516, 5, 1, "", "cross_entropy"], [1517, 5, 1, "", "ctc_loss"], [1518, 5, 1, "", "dropout"], [1519, 5, 1, "", "dropout1d"], [1520, 5, 1, "", "dropout2d"], [1521, 5, 1, "", "dropout3d"], [1522, 5, 1, "", "elu"], [1523, 5, 1, "", "elu_"], [1524, 5, 1, "", "embedding"], [1525, 5, 1, "", "embedding_bag"], [1526, 5, 1, "", "feature_alpha_dropout"], [1527, 5, 1, "", "fold"], [1528, 5, 1, "", "fractional_max_pool2d"], [1529, 5, 1, "", "fractional_max_pool3d"], [1530, 5, 1, "", "gaussian_nll_loss"], [1531, 5, 1, "", "gelu"], [1532, 5, 1, "", "glu"], [1533, 5, 1, "", "grid_sample"], [1534, 5, 1, "", "group_norm"], [1535, 5, 1, "", "gumbel_softmax"], [1536, 5, 1, "", "hardshrink"], [1537, 5, 1, "", "hardsigmoid"], [1538, 5, 1, "", "hardswish"], [1539, 5, 1, "", "hardtanh"], [1540, 5, 1, "", "hardtanh_"], [1541, 5, 1, "", "hinge_embedding_loss"], [1542, 5, 1, "", "huber_loss"], [1543, 5, 1, "", "instance_norm"], [1544, 5, 1, "", "interpolate"], [1545, 5, 1, "", "kl_div"], [1546, 5, 1, "", "l1_loss"], [1547, 5, 1, "", "layer_norm"], [1548, 5, 1, "", "leaky_relu"], [1549, 5, 1, "", "leaky_relu_"], [1550, 5, 1, "", "linear"], [1551, 5, 1, "", "local_response_norm"], [1552, 5, 1, "", "log_softmax"], [1553, 5, 1, "", "logsigmoid"], [1554, 5, 1, "", "lp_pool1d"], [1555, 5, 1, "", "lp_pool2d"], [1556, 5, 1, "", "margin_ranking_loss"], [1557, 5, 1, "", "max_pool1d"], [1558, 5, 1, "", "max_pool2d"], [1559, 5, 1, "", "max_pool3d"], [1560, 5, 1, "", "max_unpool1d"], [1561, 5, 1, "", "max_unpool2d"], [1562, 5, 1, "", "max_unpool3d"], [1563, 5, 1, "", "mish"], [1564, 5, 1, "", "mse_loss"], [1565, 5, 1, "", "multi_margin_loss"], [1566, 5, 1, "", "multilabel_margin_loss"], [1567, 5, 1, "", "multilabel_soft_margin_loss"], [1568, 5, 1, "", "nll_loss"], [1569, 5, 1, "", "normalize"], [1570, 5, 1, "", "one_hot"], [1571, 5, 1, "", "pad"], [1572, 5, 1, "", "pairwise_distance"], [1573, 5, 1, "", "pdist"], [1574, 5, 1, "", "pixel_shuffle"], [1575, 5, 1, "", "pixel_unshuffle"], [1576, 5, 1, "", "poisson_nll_loss"], [1577, 5, 1, "", "prelu"], [1578, 5, 1, "", "relu"], [1579, 5, 1, "", "relu6"], [1580, 5, 1, "", "relu_"], [1581, 5, 1, "", "rrelu"], [1582, 5, 1, "", "rrelu_"], [1583, 5, 1, "", "scaled_dot_product_attention"], [1584, 5, 1, "", "selu"], [1585, 5, 1, "", "sigmoid"], [1586, 5, 1, "", "silu"], [1587, 5, 1, "", "smooth_l1_loss"], [1588, 5, 1, "", "soft_margin_loss"], [1589, 5, 1, "", "softmax"], [1590, 5, 1, "", "softmin"], [1591, 5, 1, "", "softplus"], [1592, 5, 1, "", "softshrink"], [1593, 5, 1, "", "softsign"], [1594, 5, 1, "", "tanh"], [1595, 5, 1, "", "tanhshrink"], [1596, 5, 1, "", "threshold"], [1597, 5, 1, "", "threshold_"], [1599, 5, 1, "", "triplet_margin_loss"], [1600, 5, 1, "", "triplet_margin_with_distance_loss"], [1601, 5, 1, "", "unfold"], [1602, 5, 1, "", "upsample"], [1603, 5, 1, "", "upsample_bilinear"], [1604, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1898, 5, 1, "", "calculate_gain"], [1898, 5, 1, "", "constant_"], [1898, 5, 1, "", "dirac_"], [1898, 5, 1, "", "eye_"], [1898, 5, 1, "", "kaiming_normal_"], [1898, 5, 1, "", "kaiming_uniform_"], [1898, 5, 1, "", "normal_"], [1898, 5, 1, "", "ones_"], [1898, 5, 1, "", "orthogonal_"], [1898, 5, 1, "", "sparse_"], [1898, 5, 1, "", "trunc_normal_"], [1898, 5, 1, "", "uniform_"], [1898, 5, 1, "", "xavier_normal_"], [1898, 5, 1, "", "xavier_uniform_"], [1898, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1928, 0, 0, "-", "modules"], [1928, 0, 0, "-", "qat"], [1928, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1928, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1928, 0, 0, "-", "dynamic"], [1928, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1928, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1605, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1605, 3, 1, "", "has_uninitialized_params"], [1605, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1606, 5, 1, "", "register_module_backward_hook"], [1607, 5, 1, "", "register_module_buffer_registration_hook"], [1608, 5, 1, "", "register_module_forward_hook"], [1609, 5, 1, "", "register_module_forward_pre_hook"], [1610, 5, 1, "", "register_module_full_backward_hook"], [1611, 5, 1, "", "register_module_full_backward_pre_hook"], [1612, 5, 1, "", "register_module_module_registration_hook"], [1613, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1614, 1, 1, "", "DistributedDataParallel"], [1598, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1614, 3, 1, "", "join"], [1614, 3, 1, "", "join_hook"], [1614, 3, 1, "", "no_sync"], [1614, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1615, 1, 1, "", "Parameter"], [1616, 1, 1, "", "UninitializedBuffer"], [1617, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1617, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1928, 0, 0, "-", "dynamic"], [1928, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1928, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1928, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1928, 0, 0, "-", "dynamic"], [1928, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1928, 0, 0, "-", "modules"]], "torch.nn.utils": [[1618, 5, 1, "", "clip_grad_norm_"], [1619, 5, 1, "", "clip_grad_value_"], [1620, 5, 1, "", "parameters_to_vector"], [1645, 5, 1, "", "remove_spectral_norm"], [1646, 5, 1, "", "remove_weight_norm"], [1654, 5, 1, "", "skip_init"], [1655, 5, 1, "", "spectral_norm"], [1896, 0, 0, "-", "stateless"], [1657, 5, 1, "", "vector_to_parameters"], [1658, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1621, 5, 1, "", "orthogonal"], [1622, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1623, 1, 1, "", "ParametrizationList"], [1624, 5, 1, "", "cached"], [1625, 5, 1, "", "is_parametrized"], [1626, 5, 1, "", "register_parametrization"], [1627, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1623, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1628, 1, 1, "", "BasePruningMethod"], [1629, 1, 1, "", "CustomFromMask"], [1630, 1, 1, "", "Identity"], [1631, 1, 1, "", "L1Unstructured"], [1632, 1, 1, "", "LnStructured"], [1633, 1, 1, "", "PruningContainer"], [1634, 1, 1, "", "RandomStructured"], [1635, 1, 1, "", "RandomUnstructured"], [1636, 5, 1, "", "custom_from_mask"], [1637, 5, 1, "", "global_unstructured"], [1638, 5, 1, "", "identity"], [1639, 5, 1, "", "is_pruned"], [1640, 5, 1, "", "l1_unstructured"], [1641, 5, 1, "", "ln_structured"], [1642, 5, 1, "", "random_structured"], [1643, 5, 1, "", "random_unstructured"], [1644, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1628, 3, 1, "", "apply"], [1628, 3, 1, "", "apply_mask"], [1628, 3, 1, "", "compute_mask"], [1628, 3, 1, "", "prune"], [1628, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1629, 3, 1, "", "apply"], [1629, 3, 1, "", "apply_mask"], [1629, 3, 1, "", "prune"], [1629, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1630, 3, 1, "", "apply"], [1630, 3, 1, "", "apply_mask"], [1630, 3, 1, "", "prune"], [1630, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1631, 3, 1, "", "apply"], [1631, 3, 1, "", "apply_mask"], [1631, 3, 1, "", "prune"], [1631, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1632, 3, 1, "", "apply"], [1632, 3, 1, "", "apply_mask"], [1632, 3, 1, "", "compute_mask"], [1632, 3, 1, "", "prune"], [1632, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1633, 3, 1, "", "add_pruning_method"], [1633, 3, 1, "", "apply"], [1633, 3, 1, "", "apply_mask"], [1633, 3, 1, "", "compute_mask"], [1633, 3, 1, "", "prune"], [1633, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1634, 3, 1, "", "apply"], [1634, 3, 1, "", "apply_mask"], [1634, 3, 1, "", "compute_mask"], [1634, 3, 1, "", "prune"], [1634, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1635, 3, 1, "", "apply"], [1635, 3, 1, "", "apply_mask"], [1635, 3, 1, "", "prune"], [1635, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1647, 1, 1, "", "PackedSequence"], [1648, 5, 1, "", "pack_padded_sequence"], [1649, 5, 1, "", "pack_sequence"], [1650, 5, 1, "", "pad_packed_sequence"], [1651, 5, 1, "", "pad_sequence"], [1652, 5, 1, "", "unpack_sequence"], [1653, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1647, 2, 1, "", "batch_sizes"], [1647, 3, 1, "", "count"], [1647, 2, 1, "", "data"], [1647, 3, 1, "", "index"], [1647, 4, 1, "", "is_cuda"], [1647, 3, 1, "", "is_pinned"], [1647, 2, 1, "", "sorted_indices"], [1647, 3, 1, "", "to"], [1647, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1656, 5, 1, "", "functional_call"]], "torch.onnx": [[1667, 1, 1, "", "ExportOptions"], [1668, 1, 1, "", "ExportOutput"], [1669, 1, 1, "", "ExportOutputSerializer"], [1670, 1, 1, "", "JitScalarType"], [1671, 1, 1, "", "OnnxExporterError"], [1672, 1, 1, "", "OnnxRegistry"], [1918, 5, 1, "", "disable_log"], [1918, 5, 1, "", "dynamo_export"], [1918, 5, 1, "", "enable_fake_mode"], [1918, 5, 1, "", "enable_log"], [1918, 5, 1, "", "export"], [1918, 5, 1, "", "export_to_pretty_string"], [1918, 5, 1, "", "is_in_onnx_export"], [1918, 5, 1, "", "register_custom_op_symbolic"], [1918, 5, 1, "", "select_model_mode_for_export"], [1918, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1668, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1668, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1668, 4, 1, "", "diagnostic_context"], [1668, 4, 1, "", "fake_context"], [1668, 4, 1, "", "model_proto"], [1668, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1669, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1670, 3, 1, "", "dtype"], [1670, 3, 1, "", "from_dtype"], [1670, 3, 1, "", "from_value"], [1670, 3, 1, "", "onnx_compatible"], [1670, 3, 1, "", "onnx_type"], [1670, 3, 1, "", "scalar_name"], [1670, 3, 1, "", "torch_name"]], "torch.onnx.OnnxRegistry": [[1672, 3, 1, "", "get_op_functions"], [1672, 3, 1, "", "is_registered_op"], [1672, 4, 1, "", "opset_version"], [1672, 3, 1, "", "register_op"]], "torch.onnx._internal": [[1919, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1919, 1, 1, "", "TorchScriptOnnxExportDiagnostic"]], "torch.onnx._internal.diagnostics.TorchScriptOnnxExportDiagnostic": [[1919, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1673, 1, 1, "", "GraphInfo"], [1674, 1, 1, "", "VerificationOptions"], [1918, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1673, 3, 1, "", "all_mismatch_leaf_graph_info"], [1673, 3, 1, "", "clear"], [1673, 3, 1, "", "essential_node_count"], [1673, 3, 1, "", "essential_node_kinds"], [1673, 3, 1, "", "export_repro"], [1673, 3, 1, "", "find_mismatch"], [1673, 3, 1, "", "find_partition"], [1673, 3, 1, "", "has_mismatch"], [1673, 3, 1, "", "pretty_print_mismatch"], [1673, 3, 1, "", "pretty_print_tree"], [1673, 3, 1, "", "verify_export"]], "torch.optim": [[1675, 1, 1, "", "ASGD"], [1676, 1, 1, "", "Adadelta"], [1677, 1, 1, "", "Adagrad"], [1678, 1, 1, "", "Adam"], [1679, 1, 1, "", "AdamW"], [1680, 1, 1, "", "Adamax"], [1681, 1, 1, "", "LBFGS"], [1682, 1, 1, "", "NAdam"], [1921, 1, 1, "", "Optimizer"], [1688, 1, 1, "", "RAdam"], [1689, 1, 1, "", "RMSprop"], [1690, 1, 1, "", "Rprop"], [1691, 1, 1, "", "SGD"], [1692, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1675, 3, 1, "", "add_param_group"], [1675, 3, 1, "", "load_state_dict"], [1675, 3, 1, "", "register_load_state_dict_post_hook"], [1675, 3, 1, "", "register_load_state_dict_pre_hook"], [1675, 3, 1, "", "register_state_dict_post_hook"], [1675, 3, 1, "", "register_state_dict_pre_hook"], [1675, 3, 1, "", "register_step_post_hook"], [1675, 3, 1, "", "register_step_pre_hook"], [1675, 3, 1, "", "state_dict"], [1675, 3, 1, "", "step"], [1675, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1676, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1676, 3, 1, "", "register_load_state_dict_post_hook"], [1676, 3, 1, "", "register_load_state_dict_pre_hook"], [1676, 3, 1, "", "register_state_dict_post_hook"], [1676, 3, 1, "", "register_state_dict_pre_hook"], [1676, 3, 1, "", "register_step_post_hook"], [1676, 3, 1, "", "register_step_pre_hook"], [1676, 3, 1, "", "state_dict"], [1676, 3, 1, "", "step"], [1676, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1677, 3, 1, "", "add_param_group"], [1677, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "register_load_state_dict_post_hook"], [1677, 3, 1, "", "register_load_state_dict_pre_hook"], [1677, 3, 1, "", "register_state_dict_post_hook"], [1677, 3, 1, "", "register_state_dict_pre_hook"], [1677, 3, 1, "", "register_step_post_hook"], [1677, 3, 1, "", "register_step_pre_hook"], [1677, 3, 1, "", "state_dict"], [1677, 3, 1, "", "step"], [1677, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1678, 3, 1, "", "add_param_group"], [1678, 3, 1, "", "load_state_dict"], [1678, 3, 1, "", "register_load_state_dict_post_hook"], [1678, 3, 1, "", "register_load_state_dict_pre_hook"], [1678, 3, 1, "", "register_state_dict_post_hook"], [1678, 3, 1, "", "register_state_dict_pre_hook"], [1678, 3, 1, "", "register_step_post_hook"], [1678, 3, 1, "", "register_step_pre_hook"], [1678, 3, 1, "", "state_dict"], [1678, 3, 1, "", "step"], [1678, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1679, 3, 1, "", "add_param_group"], [1679, 3, 1, "", "load_state_dict"], [1679, 3, 1, "", "register_load_state_dict_post_hook"], [1679, 3, 1, "", "register_load_state_dict_pre_hook"], [1679, 3, 1, "", "register_state_dict_post_hook"], [1679, 3, 1, "", "register_state_dict_pre_hook"], [1679, 3, 1, "", "register_step_post_hook"], [1679, 3, 1, "", "register_step_pre_hook"], [1679, 3, 1, "", "state_dict"], [1679, 3, 1, "", "step"], [1679, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1680, 3, 1, "", "add_param_group"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "register_load_state_dict_post_hook"], [1680, 3, 1, "", "register_load_state_dict_pre_hook"], [1680, 3, 1, "", "register_state_dict_post_hook"], [1680, 3, 1, "", "register_state_dict_pre_hook"], [1680, 3, 1, "", "register_step_post_hook"], [1680, 3, 1, "", "register_step_pre_hook"], [1680, 3, 1, "", "state_dict"], [1680, 3, 1, "", "step"], [1680, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1681, 3, 1, "", "add_param_group"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "register_load_state_dict_post_hook"], [1681, 3, 1, "", "register_load_state_dict_pre_hook"], [1681, 3, 1, "", "register_state_dict_post_hook"], [1681, 3, 1, "", "register_state_dict_pre_hook"], [1681, 3, 1, "", "register_step_post_hook"], [1681, 3, 1, "", "register_step_pre_hook"], [1681, 3, 1, "", "state_dict"], [1681, 3, 1, "", "step"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_load_state_dict_post_hook"], [1682, 3, 1, "", "register_load_state_dict_pre_hook"], [1682, 3, 1, "", "register_state_dict_post_hook"], [1682, 3, 1, "", "register_state_dict_pre_hook"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "step"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1683, 3, 1, "", "add_param_group"], [1684, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "state_dict"], [1686, 3, 1, "", "step"], [1687, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1688, 3, 1, "", "add_param_group"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "register_load_state_dict_post_hook"], [1688, 3, 1, "", "register_load_state_dict_pre_hook"], [1688, 3, 1, "", "register_state_dict_post_hook"], [1688, 3, 1, "", "register_state_dict_pre_hook"], [1688, 3, 1, "", "register_step_post_hook"], [1688, 3, 1, "", "register_step_pre_hook"], [1688, 3, 1, "", "state_dict"], [1688, 3, 1, "", "step"], [1688, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1689, 3, 1, "", "add_param_group"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "register_load_state_dict_post_hook"], [1689, 3, 1, "", "register_load_state_dict_pre_hook"], [1689, 3, 1, "", "register_state_dict_post_hook"], [1689, 3, 1, "", "register_state_dict_pre_hook"], [1689, 3, 1, "", "register_step_post_hook"], [1689, 3, 1, "", "register_step_pre_hook"], [1689, 3, 1, "", "state_dict"], [1689, 3, 1, "", "step"], [1689, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1690, 3, 1, "", "add_param_group"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "register_load_state_dict_post_hook"], [1690, 3, 1, "", "register_load_state_dict_pre_hook"], [1690, 3, 1, "", "register_state_dict_post_hook"], [1690, 3, 1, "", "register_state_dict_pre_hook"], [1690, 3, 1, "", "register_step_post_hook"], [1690, 3, 1, "", "register_step_pre_hook"], [1690, 3, 1, "", "state_dict"], [1690, 3, 1, "", "step"], [1690, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1691, 3, 1, "", "add_param_group"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "register_load_state_dict_post_hook"], [1691, 3, 1, "", "register_load_state_dict_pre_hook"], [1691, 3, 1, "", "register_state_dict_post_hook"], [1691, 3, 1, "", "register_state_dict_pre_hook"], [1691, 3, 1, "", "register_step_post_hook"], [1691, 3, 1, "", "register_step_pre_hook"], [1691, 3, 1, "", "state_dict"], [1691, 3, 1, "", "step"], [1691, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1692, 3, 1, "", "add_param_group"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "register_load_state_dict_post_hook"], [1692, 3, 1, "", "register_load_state_dict_pre_hook"], [1692, 3, 1, "", "register_state_dict_post_hook"], [1692, 3, 1, "", "register_state_dict_pre_hook"], [1692, 3, 1, "", "register_step_post_hook"], [1692, 3, 1, "", "register_step_pre_hook"], [1692, 3, 1, "", "state_dict"], [1692, 3, 1, "", "step"], [1692, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1693, 1, 1, "", "ChainedScheduler"], [1694, 1, 1, "", "ConstantLR"], [1695, 1, 1, "", "CosineAnnealingLR"], [1696, 1, 1, "", "CosineAnnealingWarmRestarts"], [1697, 1, 1, "", "CyclicLR"], [1698, 1, 1, "", "ExponentialLR"], [1699, 1, 1, "", "LambdaLR"], [1700, 1, 1, "", "LinearLR"], [1701, 1, 1, "", "MultiStepLR"], [1702, 1, 1, "", "MultiplicativeLR"], [1703, 1, 1, "", "OneCycleLR"], [1704, 1, 1, "", "PolynomialLR"], [1705, 1, 1, "", "ReduceLROnPlateau"], [1706, 1, 1, "", "SequentialLR"], [1707, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "print_lr"], [1693, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"], [1696, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1697, 3, 1, "", "get_last_lr"], [1697, 3, 1, "", "get_lr"], [1697, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1698, 3, 1, "", "get_last_lr"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "print_lr"], [1698, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1699, 3, 1, "", "get_last_lr"], [1699, 3, 1, "", "load_state_dict"], [1699, 3, 1, "", "print_lr"], [1699, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1700, 3, 1, "", "get_last_lr"], [1700, 3, 1, "", "load_state_dict"], [1700, 3, 1, "", "print_lr"], [1700, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1701, 3, 1, "", "get_last_lr"], [1701, 3, 1, "", "load_state_dict"], [1701, 3, 1, "", "print_lr"], [1701, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1702, 3, 1, "", "get_last_lr"], [1702, 3, 1, "", "load_state_dict"], [1702, 3, 1, "", "print_lr"], [1702, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1703, 3, 1, "", "get_last_lr"], [1703, 3, 1, "", "load_state_dict"], [1703, 3, 1, "", "print_lr"], [1703, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1704, 3, 1, "", "get_last_lr"], [1704, 3, 1, "", "load_state_dict"], [1704, 3, 1, "", "print_lr"], [1704, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1706, 3, 1, "", "get_last_lr"], [1706, 3, 1, "", "load_state_dict"], [1706, 3, 1, "", "print_lr"], [1706, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1707, 3, 1, "", "get_last_lr"], [1707, 3, 1, "", "load_state_dict"], [1707, 3, 1, "", "print_lr"], [1707, 3, 1, "", "state_dict"]], "torch.overrides": [[1964, 5, 1, "", "get_ignored_functions"], [1964, 5, 1, "", "get_overridable_functions"], [1964, 5, 1, "", "get_testing_overrides"], [1964, 5, 1, "", "handle_torch_function"], [1964, 5, 1, "", "has_torch_function"], [1964, 5, 1, "", "is_tensor_like"], [1964, 5, 1, "", "is_tensor_method_or_property"], [1964, 5, 1, "", "resolve_name"], [1964, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1922, 1, 1, "", "Directory"], [1922, 1, 1, "", "EmptyMatchError"], [1922, 1, 1, "", "PackageExporter"], [1922, 1, 1, "", "PackageImporter"], [1922, 1, 1, "", "PackagingError"], [1922, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1922, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1922, 3, 1, "", "__init__"], [1922, 3, 1, "", "add_dependency"], [1922, 3, 1, "", "all_paths"], [1922, 3, 1, "", "close"], [1922, 3, 1, "", "denied_modules"], [1922, 3, 1, "", "deny"], [1922, 3, 1, "", "dependency_graph_string"], [1922, 3, 1, "", "extern"], [1922, 3, 1, "", "externed_modules"], [1922, 3, 1, "", "get_rdeps"], [1922, 3, 1, "", "get_unique_id"], [1922, 3, 1, "", "intern"], [1922, 3, 1, "", "interned_modules"], [1922, 3, 1, "", "mock"], [1922, 3, 1, "", "mocked_modules"], [1922, 3, 1, "", "register_extern_hook"], [1922, 3, 1, "", "register_intern_hook"], [1922, 3, 1, "", "register_mock_hook"], [1922, 3, 1, "", "save_binary"], [1922, 3, 1, "", "save_module"], [1922, 3, 1, "", "save_pickle"], [1922, 3, 1, "", "save_source_file"], [1922, 3, 1, "", "save_source_string"], [1922, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1922, 3, 1, "", "__init__"], [1922, 3, 1, "", "file_structure"], [1922, 3, 1, "", "id"], [1922, 3, 1, "", "import_module"], [1922, 3, 1, "", "load_binary"], [1922, 3, 1, "", "load_pickle"], [1922, 3, 1, "", "load_text"], [1922, 3, 1, "", "python_version"]], "torch.profiler": [[1924, 1, 1, "", "ProfilerAction"], [1924, 1, 1, "", "ProfilerActivity"], [1924, 1, 1, "", "_KinetoProfile"], [1924, 1, 1, "", "profile"], [1924, 5, 1, "", "schedule"], [1924, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1924, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1924, 3, 1, "", "add_metadata"], [1924, 3, 1, "", "add_metadata_json"], [1924, 3, 1, "", "events"], [1924, 3, 1, "", "export_chrome_trace"], [1924, 3, 1, "", "export_memory_timeline"], [1924, 3, 1, "", "export_stacks"], [1924, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1924, 5, 1, "", "is_available"], [1924, 5, 1, "", "mark"], [1924, 5, 1, "", "range_pop"], [1924, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1924, 3, 1, "", "step"]], "torch.quantization": [[1928, 0, 0, "-", "fx"]], "torch.quasirandom": [[1728, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1728, 3, 1, "", "draw"], [1728, 3, 1, "", "draw_base2"], [1728, 3, 1, "", "fast_forward"], [1728, 3, 1, "", "reset"]], "torch.random": [[1929, 5, 1, "", "fork_rng"], [1929, 5, 1, "", "get_rng_state"], [1929, 5, 1, "", "initial_seed"], [1929, 5, 1, "", "manual_seed"], [1929, 5, 1, "", "seed"], [1929, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1916, 5, 1, "", "get_default_load_endianness"], [1916, 5, 1, "", "register_package"], [1916, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1933, 0, 0, "-", "windows"]], "torch.signal.windows": [[1776, 5, 1, "", "bartlett"], [1777, 5, 1, "", "blackman"], [1778, 5, 1, "", "cosine"], [1779, 5, 1, "", "exponential"], [1780, 5, 1, "", "gaussian"], [1781, 5, 1, "", "general_cosine"], [1782, 5, 1, "", "general_hamming"], [1783, 5, 1, "", "hamming"], [1784, 5, 1, "", "hann"], [1785, 5, 1, "", "kaiser"], [1786, 5, 1, "", "nuttall"]], "torch.sparse": [[1796, 5, 1, "", "addmm"], [1797, 1, 1, "", "check_sparse_tensor_invariants"], [1798, 5, 1, "", "log_softmax"], [1799, 5, 1, "", "mm"], [1800, 5, 1, "", "sampled_addmm"], [1801, 5, 1, "", "softmax"], [1802, 5, 1, "", "spdiags"], [1803, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1797, 3, 1, "", "disable"], [1797, 3, 1, "", "enable"], [1797, 3, 1, "", "is_enabled"]], "torch.special": [[1935, 5, 1, "", "airy_ai"], [1935, 5, 1, "", "bessel_j0"], [1935, 5, 1, "", "bessel_j1"], [1935, 5, 1, "", "digamma"], [1935, 5, 1, "", "entr"], [1935, 5, 1, "", "erf"], [1935, 5, 1, "", "erfc"], [1935, 5, 1, "", "erfcx"], [1935, 5, 1, "", "erfinv"], [1935, 5, 1, "", "exp2"], [1935, 5, 1, "", "expit"], [1935, 5, 1, "", "expm1"], [1935, 5, 1, "", "gammainc"], [1935, 5, 1, "", "gammaincc"], [1935, 5, 1, "", "gammaln"], [1935, 5, 1, "", "i0"], [1935, 5, 1, "", "i0e"], [1935, 5, 1, "", "i1"], [1935, 5, 1, "", "i1e"], [1935, 5, 1, "", "log1p"], [1935, 5, 1, "", "log_ndtr"], [1935, 5, 1, "", "log_softmax"], [1935, 5, 1, "", "logit"], [1935, 5, 1, "", "logsumexp"], [1935, 5, 1, "", "multigammaln"], [1935, 5, 1, "", "ndtr"], [1935, 5, 1, "", "ndtri"], [1935, 5, 1, "", "polygamma"], [1935, 5, 1, "", "psi"], [1935, 5, 1, "", "round"], [1935, 5, 1, "", "scaled_modified_bessel_k0"], [1935, 5, 1, "", "scaled_modified_bessel_k1"], [1935, 5, 1, "", "sinc"], [1935, 5, 1, "", "softmax"], [1935, 5, 1, "", "spherical_bessel_j0"], [1935, 5, 1, "", "xlog1py"], [1935, 5, 1, "", "xlogy"], [1935, 5, 1, "", "zeta"]], "torch.testing": [[1941, 5, 1, "", "assert_allclose"], [1941, 5, 1, "", "assert_close"], [1941, 5, 1, "", "make_tensor"]], "torch.torch": [[1942, 2, 1, "", "default_generator"], [1965, 1, 1, "", "finfo"], [1965, 1, 1, "", "iinfo"]], "torch.utils": [[1942, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [20, 0, 0, "-", "data"], [1858, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1859, 5, 1, "", "get_cpp_backtrace"], [1942, 0, 0, "-", "hipify"], [1883, 0, 0, "-", "jit"], [1942, 0, 0, "-", "model_dump"], [1889, 0, 0, "-", "model_zoo"], [1860, 5, 1, "", "rename_privateuse1_backend"], [1861, 5, 1, "", "set_module"], [1939, 0, 0, "-", "tensorboard"], [1942, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[13, 5, 1, "", "BuildExtension"], [13, 5, 1, "", "CUDAExtension"], [13, 5, 1, "", "CppExtension"], [13, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [13, 5, 1, "", "include_paths"], [13, 5, 1, "", "is_ninja_available"], [13, 5, 1, "", "load"], [13, 5, 1, "", "load_inline"], [13, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[20, 1, 1, "", "BatchSampler"], [20, 1, 1, "", "ChainDataset"], [20, 1, 1, "", "ConcatDataset"], [20, 1, 1, "", "DataLoader"], [20, 1, 1, "", "Dataset"], [20, 1, 1, "", "IterableDataset"], [20, 1, 1, "", "RandomSampler"], [20, 1, 1, "", "Sampler"], [20, 1, 1, "", "SequentialSampler"], [20, 1, 1, "", "StackDataset"], [20, 1, 1, "", "Subset"], [20, 1, 1, "", "SubsetRandomSampler"], [20, 1, 1, "", "TensorDataset"], [20, 1, 1, "", "WeightedRandomSampler"], [20, 0, 0, "-", "datapipes"], [20, 5, 1, "", "default_collate"], [20, 5, 1, "", "default_convert"], [20, 5, 1, "", "get_worker_info"], [20, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[20, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[20, 0, 0, "-", "dataframe"], [20, 0, 0, "-", "iter"], [20, 0, 0, "-", "map"], [20, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[20, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[30, 5, 1, "", "from_dlpack"], [30, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1888, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1889, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1939, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1939, 3, 1, "", "__init__"], [1939, 3, 1, "", "add_audio"], [1939, 3, 1, "", "add_custom_scalars"], [1939, 3, 1, "", "add_embedding"], [1939, 3, 1, "", "add_figure"], [1939, 3, 1, "", "add_graph"], [1939, 3, 1, "", "add_histogram"], [1939, 3, 1, "", "add_hparams"], [1939, 3, 1, "", "add_image"], [1939, 3, 1, "", "add_images"], [1939, 3, 1, "", "add_mesh"], [1939, 3, 1, "", "add_pr_curve"], [1939, 3, 1, "", "add_scalar"], [1939, 3, 1, "", "add_scalars"], [1939, 3, 1, "", "add_text"], [1939, 3, 1, "", "add_video"], [1939, 3, 1, "", "close"], [1939, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 20, 1877, 1899, 1906], "mix": [0, 1877, 1899], "precis": [0, 1899, 1903, 1914], "packag": [0, 1, 14, 23, 1892, 1917, 1922], "torch": [0, 1, 2, 3, 4, 5, 10, 12, 13, 15, 16, 20, 22, 23, 25, 26, 28, 29, 30, 41, 44, 45, 47, 48, 50, 51, 52, 53, 54, 62, 63, 64, 65, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 969, 970, 971, 972, 973, 974, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1683, 1684, 1685, 1686, 1687, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1895, 1896, 1897, 1898, 1903, 1905, 1906, 1909, 1914, 1916, 1918, 1919, 1921, 1922, 1924, 1928, 1929, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1953, 1954, 1961, 1964, 1965, 1966], "amp": [0, 1903], "autocast": [0, 1899], "gradient": [0, 1, 52, 1154, 1899, 1900, 1906, 1942], "scale": [0, 1899, 1910], "op": [0, 79, 1882, 1899, 1918, 1942], "refer": [0, 17, 48, 54, 1877, 1879, 1880, 1881, 1890, 1894, 1909, 1919, 1922, 1924, 1925, 1928, 1932, 1940, 1946], "elig": 0, "cuda": [0, 2, 10, 16, 17, 208, 979, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1892, 1899, 1903, 1907, 1909, 1913, 1915, 1917, 1948, 1961], "specif": [0, 20, 1934], "behavior": [0, 20, 1900, 1908], "can": [0, 1900, 1907, 1960], "float16": 0, "float32": 0, "promot": [0, 7, 81], "widest": 0, "input": [0, 1893, 1899, 1908], "type": [0, 20, 81, 599, 1879, 1880, 1905, 1918, 1922, 1940, 1965], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1506], "over": [0, 8, 1879], "binary_cross_entropi": [0, 1505], "cpu": [0, 2, 10, 15, 205, 969, 970, 971, 972, 973, 1900, 1902, 1913, 1925, 1947], "bfloat16": [0, 154], "differenti": [1, 1900], "autograd": [1, 10, 11, 14, 51, 885, 886, 887, 888, 889, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 1894, 1899, 1900, 1905, 1906, 1918, 1930, 1931], "forward": [1, 886, 1905, 1931], "mode": [1, 41, 49, 412, 1306, 1900, 1905, 1908, 1918, 1925, 1931], "function": [1, 23, 29, 45, 47, 48, 50, 52, 54, 72, 77, 80, 84, 85, 885, 886, 887, 888, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 1131, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1877, 1878, 1879, 1880, 1882, 1885, 1887, 1893, 1895, 1896, 1897, 1899, 1900, 1906, 1908, 1916, 1918, 1928, 1934, 1935, 1953, 1964], "higher": 1, "level": [1, 10, 79, 1928], "api": [1, 10, 14, 17, 26, 34, 48, 51, 54, 1876, 1877, 1880, 1890, 1894, 1902, 1903, 1905, 1909, 1910, 1919, 1922, 1923, 1924, 1925, 1928, 1946, 1951, 1952, 1953, 1954], "local": [1, 1880, 1900, 1942, 1960, 1962], "disabl": [1, 20, 953, 1877, 1900, 1942, 1953, 1954], "comput": [1, 52, 1900, 1914, 1931, 1942], "default": [1, 20, 21, 1879, 1900, 1903, 1908, 1927], "layout": [1, 1937], "manual": 1, "In": [1, 8, 1900, 1901, 1942], "place": [1, 51, 1893, 1900, 1901, 1918, 1942], "oper": [1, 10, 21, 23, 51, 82, 86, 1879, 1880, 1885, 1887, 1893, 1894, 1895, 1900, 1905, 1910, 1917, 1918, 1920, 1925, 1934, 1940, 1942, 1952], "tensor": [1, 11, 14, 28, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 1836, 1878, 1882, 1885, 1892, 1893, 1894, 1895, 1900, 1905, 1916, 1918, 1925, 1928, 1934, 1937, 1938, 1940, 1942, 1952], "correct": [1, 54, 1900], "check": [1, 54, 1877, 1900, 1909, 1960], "variabl": [1, 23, 41, 1877, 1879, 1880, 1903, 1956, 1957], "deprec": 1, "context": [1, 24, 38, 59, 1931], "method": [1, 33, 34, 37, 42, 1878, 1879, 1882, 1918, 1928, 1934], "mixin": 1, "numer": [1, 1908, 1914, 1926], "profil": [1, 23, 911, 912, 913, 914, 915, 1315, 1316, 1317, 1891, 1910, 1911, 1924, 1957, 1961, 1963], "anomali": 1, "detect": 1, "graph": [1, 16, 54, 906, 907, 908, 909, 910, 1009, 1877, 1900, 1903, 1925, 1948, 1953, 1961, 1962, 1963], "backend": [2, 23, 40, 41, 1877, 1909, 1912, 1925, 1927, 1930, 1945, 1947, 1949, 1963], "cudnn": 2, "mp": [2, 10, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1891, 1912], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1915, 1957], "util": [3, 4, 5, 10, 13, 20, 23, 30, 48, 50, 1052, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1858, 1859, 1860, 1861, 1883, 1888, 1889, 1896, 1916, 1928, 1939, 1942, 1944, 1962, 1966], "bottleneck": 4, "checkpoint": [5, 21, 25], "pytorch": [6, 7, 8, 9, 10, 14, 22, 23, 51, 1876, 1877, 1878, 1882, 1900, 1903, 1905, 1915, 1916, 1918, 1923, 1928, 1945, 1948, 1959, 1960, 1963], "govern": [6, 9, 10], "build": [6, 7, 10, 1902, 1910, 1911, 1917], "ci": [6, 10], "how": [6, 21, 49, 1875, 1900, 1905, 1921, 1922, 1952, 1953, 1960], "add": [6, 9, 71, 96, 681], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1918], "guid": 7, "process": [7, 9, 20, 38, 1899], "get": [7, 26, 1918, 1945, 1953, 1955], "start": [7, 26, 38, 1316, 1945, 1955], "propos": 7, "featur": [7, 1910, 1911], "report": [7, 1907], "issu": [7, 1877, 1961], "implement": [7, 31, 40, 42, 1875, 1904, 1908, 1918, 1926, 1928, 1932, 1952], "fix": [7, 41, 49, 259, 1112], "bug": 7, "ad": [7, 1905, 1918], "tutori": [7, 10, 1922, 1923, 1930], "improv": [7, 1911], "document": [7, 26, 1876], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 54, 1877, 1903, 1922, 1953], "readabl": 7, "test": [7, 1880, 1905, 1922, 1941, 1960], "case": [7, 1877], "make": [7, 9, 75, 1948, 1956], "codebas": 7, "more": [7, 47, 1930, 1945], "robust": 7, "triag": 7, "about": [7, 1900, 1930, 1952], "sourc": [7, 1915, 1917, 1922], "develop": [7, 1876, 1918, 1945], "common": [7, 23, 54, 1910, 1925], "mistak": 7, "To": 7, "avoid": [7, 1913, 1915, 1918, 1922], "frequent": [7, 1877, 1907, 1918, 1925, 1953], "ask": [7, 1877, 1907, 1918, 1925, 1953], "question": [7, 1877, 1907, 1918, 1925, 1953], "On": [7, 21, 1879], "python": [7, 8, 51, 56, 57, 58, 59, 60, 61, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1905, 1915, 1918, 1956], "doc": [7, 10, 1909], "c": [7, 10, 14, 1900, 1905, 1909, 1916, 1918], "overview": [7, 17, 54, 1919, 1922, 1924, 1934, 1949, 1956], "design": [8, 1880, 1904, 1930, 1931, 1932], "philosophi": 8, "principl": [8, 9], "1": [8, 41, 49, 1877, 1906], "usabl": 8, "perform": [8, 10, 1911, 1916, 1952, 1960, 1961, 1963], "2": [8, 49, 1877, 1903, 1906, 1907, 1928, 1959, 1960, 1963], "simpl": [8, 1879, 1880, 1911, 1931], "easi": 8, "3": [8, 41, 49], "first": [8, 1922], "best": [8, 1903, 1913, 1925, 1947], "class": [8, 33, 54, 1877, 1879, 1880, 1882, 1918, 1921, 1922, 1940], "languag": [8, 1876, 1877, 1879, 1880, 1881], "interoper": 8, "mechan": [9, 1897, 1900, 1908], "summari": [9, 1925, 1956], "modul": [9, 10, 48, 50, 54, 1434, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1877, 1878, 1879, 1880, 1882, 1896, 1900, 1905, 1911, 1916, 1922, 1925, 1959], "core": [9, 10, 1958], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1880], "confirm": 9, "remov": [9, 1644, 1893], "The": [9, 54, 1880, 1900, 1951], "re": [9, 1922], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 41, 49, 1953], "controversi": 9, "gener": [9, 16, 24, 51, 54, 87, 1901, 1906, 1915, 1925, 1926, 1942], "polici": [9, 1951], "faq": [9, 1917], "respons": 10, "nn": [10, 48, 50, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1879, 1880, 1896, 1897, 1898, 1900, 1903, 1905, 1916, 1928, 1934, 1959], "optim": [10, 27, 1683, 1684, 1685, 1686, 1687, 1899, 1900, 1921, 1930, 1931, 1942], "compil": [10, 50, 948, 950, 951, 952, 953, 954, 955, 1903, 1945, 1946, 1953, 1954, 1961, 1963], "jit": [10, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1877, 1880, 1883], "torchscript": [10, 14, 1877, 1878, 1879, 1880, 1882, 1902, 1910, 1920, 1922], "fx": [10, 54, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 81, 1911, 1925, 1928, 1944], "torchdynamo": [10, 1904, 1918, 1948, 1950, 1954, 1963], "distribut": [10, 23, 25, 26, 27, 28, 29, 41, 1896, 1897, 1904, 1909, 1911, 1930, 1931, 1953], "rng": 10, "multiprocess": [10, 38, 1892, 1903, 1913, 1917], "dataload": [10, 1915], "linear": [10, 11, 728, 729, 752, 760, 777, 1138, 1421, 1550, 1896, 1897, 1914, 1934], "algebra": [10, 11, 1914, 1934], "linalg": [10, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1885, 1914], "spars": [10, 1796, 1798, 1799, 1800, 1801, 1802, 1803, 1896, 1897, 1934], "nestedtensor": 10, "nest": [10, 1895], "maskedtensor": [10, 1887], "mask": [10, 1887], "fast": [10, 45, 1908, 1931], "fourier": [10, 45], "transform": [10, 29, 45, 47, 48, 50, 52, 54, 1477, 1896, 1905, 1911, 1953, 1962], "fft": [10, 45, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111], "inductor": 10, "gpu": [10, 23, 1896, 1897, 1899, 1907, 1923, 1957], "triton": [10, 1957], "nvfuser": 10, "amd": [10, 1914], "rocm": [10, 1909], "hip": [10, 1909], "tool": [10, 16, 1926, 1934], "c10": 10, "dispatch": 10, "onnx": [10, 73, 74, 82, 83, 1918, 1919, 1920], "export": [10, 44, 1918, 1922, 1928, 1953], "mobil": 10, "edg": [10, 1877, 1922], "model": [10, 14, 1875, 1899, 1907, 1910, 1921, 1922, 1923, 1925, 1928, 1951, 1955, 1957], "compress": [10, 1934], "window": [10, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1917, 1933], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1876, 1884, 1915], "xla": 10, "torchserv": 10, "torchvis": [10, 49], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "complex": [11, 956, 1900, 1908], "number": [11, 16, 41, 1900, 1902, 1907, 1915, 1942], "creat": [11, 1877, 1894], "transit": [11, 41], "from": [11, 41, 50, 54, 1875, 1893, 1917, 1918, 1922], "old": 11, "represent": 11, "access": [11, 1879, 1922, 1963], "real": [11, 480, 1739, 1908], "imag": [11, 309, 1171], "angl": [11, 116, 694], "ab": [11, 88, 677], "serial": [11, 1916, 1942], "__config__": 12, "cpp_extens": 13, "extend": [14, 31, 1905, 1906], "extens": [14, 16, 1905, 1910, 1917], "author": [14, 54], "stream": [15, 16, 17, 967, 972, 980, 1049, 1903], "event": [15, 16, 32, 34, 977, 1312, 1891], "random": [16, 20, 51, 1907, 1915, 1929, 1942], "commun": [16, 21, 23, 1876], "collect": [16, 23], "beta": [16, 29], "memori": [16, 20, 1903, 1907, 1909, 1911], "manag": [16, 24, 59, 1892, 1903, 1909, 1922, 1962], "nvidia": [16, 1914], "nvtx": [16, 1034, 1035, 1036], "jiter": [16, 1017, 1018], "sanit": [16, 17], "prototyp": [16, 1925, 1926], "usag": [17, 26, 41, 1903, 1906, 1910, 1911, 1917, 1959], "data": [20, 51, 61, 1880, 1904, 1907, 1918, 1926, 1940], "dataset": 20, "map": [20, 65, 1909], "style": 20, "iter": [20, 1879], "load": [20, 1208, 1272, 1875, 1916, 1922, 1925], "order": [20, 1900], "sampler": 20, "batch": [20, 49, 1914, 1921], "non": [20, 54, 1896, 1897, 1900, 1903, 1914, 1922, 1925], "work": [20, 48, 1899, 1907, 1934, 1952, 1953, 1961], "collate_fn": 20, "singl": [20, 41, 1899], "multi": [20, 23, 41, 1896, 1897], "platform": 20, "pin": [20, 1903], "ddp": 21, "hook": [21, 1900, 1911, 1959], "us": [21, 23, 54, 1879, 1900, 1903, 1905, 1908, 1918, 1921, 1922, 1923, 1925, 1934, 1953, 1955, 1961, 1963], "what": [21, 47, 49, 52, 1887, 1900, 1922, 1950, 1953, 1960, 1961], "doe": [21, 1900, 1952, 1953], "powersgd": 21, "state": [21, 1911, 1922], "debug": [21, 23, 54, 79, 1877, 1925, 1926, 1949, 1963], "acknowledg": [21, 1923], "deploi": 22, "ha": 22, "been": 22, "move": 22, "multipi": 22, "come": [23, 1900], "which": [23, 1900, 1953], "environ": [23, 41, 1903, 1910, 1922, 1957], "choos": 23, "network": [23, 1903, 1907, 1911], "interfac": [23, 1909], "other": [23, 1896, 1915, 1922, 1934, 1942, 1952], "nccl": [23, 1903], "basic": [23, 1880, 1894, 1906, 1930, 1940, 1961], "initi": [23, 1896, 1911, 1940], "tcp": 23, "share": [23, 1892, 1903, 1922, 1932], "file": [23, 1892, 1922], "system": [23, 1880, 1892, 1906], "post": [23, 1925], "kei": [23, 1917], "valu": [23, 610, 1879, 1880, 1914, 1927, 1932], "store": [23, 40], "group": 23, "point": [23, 1910], "synchron": [23, 973, 1050, 1321], "asynchron": [23, 1880, 1903, 1913], "third": 23, "parti": 23, "launch": [23, 41, 1961], "spawn": [23, 1892], "applic": 23, "monitor": [23, 1890], "barrier": 23, "torch_distributed_debug": 23, "log": [23, 367, 1274, 1910], "join": [24, 1942], "elast": [26, 31, 41], "advanc": [26, 1911], "plugin": 26, "parallel": [28, 1598, 1903, 1904, 1907, 1923, 1942], "probabl": 29, "score": 29, "pathwis": 29, "deriv": [29, 1900], "exponentialfamili": 29, "bernoulli": [29, 152, 918], "binomi": 29, "categor": 29, "cauchi": 29, "chi2": 29, "continuousbernoulli": 29, "dirichlet": 29, "exponenti": [29, 1779], "fishersnedecor": 29, "gamma": 29, "geometr": 29, "gumbel": 29, "halfcauchi": 29, "halfnorm": 29, "independ": 29, "kumaraswami": 29, "lkjcholeski": 29, "laplac": 29, "lognorm": 29, "lowrankmultivariatenorm": 29, "mixturesamefamili": 29, "multinomi": [29, 418, 1324], "multivariatenorm": 29, "negativebinomi": 29, "normal": [29, 1569, 1662, 1896, 1921], "onehotcategor": 29, "pareto": 29, "poisson": [29, 1714], "relaxedbernoulli": 29, "logitrelaxedbernoulli": 29, "relaxedonehotcategor": 29, "studentt": 29, "transformeddistribut": 29, "uniform": 29, "vonmis": 29, "weibul": 29, "wishart": 29, "kl": 29, "diverg": [29, 1882], "constraint": [29, 1903], "registri": [29, 40, 82], "dlpack": 30, "agent": 31, "server": [31, 40, 42], "concept": 31, "watchdog": 31, "custom": [32, 42, 54, 84, 1880, 1899, 1903, 1905, 1906, 1911, 1918, 1921, 1922, 1925, 1949], "launcher": 32, "rendezv": [32, 40, 41], "handler": [32, 37, 40, 1907], "metric": [32, 37], "error": [33, 1907, 1917, 1925, 1926, 1963], "propag": [33, 1894], "object": [34, 1922], "exampl": [35, 54, 1899, 1904, 1905, 1906, 1918, 1931, 1949], "torchelast": 36, "kubernet": 36, "multipl": [38, 1899, 1903, 1905, 1923], "worker": [38, 41, 1907], "quickstart": 39, "except": [40, 1907], "dynam": [40, 51, 54, 63, 1925, 1928, 1951, 1952], "c10d": 40, "etcd": 40, "legaci": 40, "torchrun": 41, "node": [41, 71, 74, 78, 81, 83, 906, 907, 908, 909, 910, 1900], "stack": [41, 1815, 1925], "fault": 41, "toler": 41, "size": [41, 533, 1895], "failur": [41, 68], "min": [41, 409, 1303], "max": [41, 405, 1298], "4": [41, 49], "up": [41, 1953], "membership": [41, 1880], "note": [41, 1876, 1880, 1903, 1925, 1930], "definit": [41, 1880], "deploy": [41, 1910], "import": [41, 1875, 1917, 1922, 1952], "notic": [41, 1875], "expir": 42, "timer": 42, "client": 42, "write": [42, 54, 1900, 1905, 1918, 1962], "train": [43, 1899, 1911, 1913, 1925, 1953], "script": [43, 1212, 1877, 1917, 1918], "_export": 44, "helper": 45, "fullyshardeddataparallel": 46, "func": [47, 48, 50, 52, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1905, 1906, 1953], "ar": [47, 52, 1875, 1900, 1922, 1953], "compos": [47, 52, 1949], "why": [47, 52, 1903, 1908, 1922, 1934, 1953], "read": [47, 1918, 1945, 1960], "patch": [49, 1922], "norm": [49, 450, 1257, 1661], "": [49, 1922, 1953, 1960], "happen": 49, "option": [49, 1879, 1902, 1917, 1921], "batchnorm": 49, "paramet": [49, 1615, 1879, 1921], "functorch": [49, 50], "eval": [49, 1900], "migrat": [50, 1877], "make_funct": 50, "combine_state_for_ensembl": 50, "ux": 51, "limit": [51, 54, 1875, 1906, 1918, 1948, 1954, 1959], "vmap": [51, 52, 888, 1142, 1868, 1905, 1906], "mutat": [51, 1942], "arbitrari": [51, 1922], "structur": [51, 61, 1880, 1934], "out": [51, 1893, 1907], "depend": [51, 1922, 1931], "control": [51, 54, 60, 1915, 1954], "flow": [51, 54, 60, 1925], "item": [51, 350], "shape": [51, 63, 83, 519, 1918, 1951, 1952], "nonzero": [51, 449, 1660], "friend": 51, "whirlwind": 52, "tour": 52, "i": [52, 1887, 1900, 1922, 1950, 1952, 1953, 1960], "grad": [52, 288, 903, 1132, 1900, 1903], "auto": 52, "vector": 52, "vjp": [52, 902, 1141], "jacobian": [52, 899], "product": [52, 1885, 1953], "jvp": [52, 887, 900, 1137, 1906], "jacrev": [52, 1136], "jacfwd": [52, 1135], "hessian": [52, 897, 1134], "futur": 53, "A": [54, 1911], "quick": 54, "primer": 54, "manipul": [54, 1894], "direct": 54, "subgraph": [54, 1962], "rewrit": [54, 1962], "With": [54, 1882], "replace_pattern": 54, "proxi": 54, "retrac": 54, "interpret": [54, 1877], "pattern": [54, 1879, 1918, 1922], "introduct": [54, 1887, 1895, 1925], "pitfal": [54, 1918], "pdb": 54, "print": [54, 1879, 1880], "to_fold": 54, "graphmodul": 54, "avail": 54, "debugg": 54, "symbol": [54, 72, 77, 80, 84, 85, 1918, 1925, 1942], "trace": [54, 587, 1216, 1841, 1877, 1918, 1924, 1925, 1953, 1954, 1961], "static": [54, 1918, 1925], "tracer": [54, 67, 68, 1877], "leaf": 54, "miscellanea": 54, "exportdb": 55, "tag": [55, 1942], "support": [55, 86, 1878, 1880, 1887, 1893, 1894, 1895, 1906, 1918, 1920, 1925, 1934, 1953, 1959], "assume_constant_result": [55, 64, 951], "autograd_funct": 55, "class_method": 55, "cond_branch_class_method": [55, 62, 63], "cond_branch_nested_funct": [55, 62, 63], "cond_branch_nonlocal_vari": [55, 62, 63], "cond_closed_over_vari": [55, 58, 62], "cond_operand": [55, 62, 63], "cond_pred": [55, 62, 63], "decor": 55, "dictionari": [55, 61, 1880], "dynamic_shape_assert": [55, 56], "dynamic_shape_constructor": [55, 63], "dynamic_shape_if_guard": [55, 60, 63], "dynamic_shape_map": [55, 63, 65], "dynamic_shape_sl": [55, 63], "dynamic_shape_view": [55, 63], "fn_with_kwarg": [55, 61], "list_contain": [55, 56, 61, 63], "list_unpack": [55, 60, 61], "nested_funct": [55, 58], "null_context_manag": [55, 59], "pytree_flatten": 55, "scalar_output": [55, 63], "specialized_attribut": 55, "static_for_loop": [55, 60], "static_if": [55, 60], "tensor_setattr": [55, 57], "Not": [55, 1882], "yet": 55, "dynamic_shape_round": [55, 57, 63], "type_reflection_method": [55, 57], "assert": [56, 1880, 1909], "builtin": [57, 1878], "closur": [58, 1921], "cond": [62, 1232], "escap": 64, "hatch": 64, "diagsys0001": 66, "arg": 66, "format": [66, 1922], "too": 66, "verbos": 66, "fxe0001": 67, "success": 67, "fxe0002": 68, "fxe0003": 69, "frontend": [69, 75], "aotautograd": [69, 1949], "fxe0004": 70, "pass": [70, 76, 1880, 1903, 1913, 1925, 1931, 1962], "convert": [70, 793, 1952], "neg": [70, 437, 439, 1336, 1337], "sigmoid": [70, 522, 755, 1464, 1585, 1774], "fxe0005": 71, "ir": [71, 1958, 1962], "fxe0006": 72, "atenlib": [72, 73], "fxe0007": 73, "fxe0008": 74, "fxe0009": 75, "dynamo": [75, 1950], "fxe0010": 76, "fxe0011": 77, "call": [77, 1879, 1880, 1906, 1953], "fxe0012": 78, "unsupport": [78, 1879, 1880, 1882, 1918, 1920], "analysi": 78, "fxe0013": 79, "fxe0014": 80, "find": [80, 82, 1922, 1961], "opschema": 80, "match": [80, 1879, 1894], "fxe0015": 81, "insert": 81, "fxe0016": 82, "overload": 82, "poe0001": 83, "miss": [83, 84, 85], "infer": [83, 1894, 1900, 1902, 1916], "poe0002": 84, "poe0003": 85, "standard": 85, "poe0004": 86, "newer": 86, "opset": 86, "version": [86, 1916], "abs_": 89, "absolut": [90, 678], "absolute_": 91, "aco": [92, 679], "acos_": 93, "acosh": [94, 680], "acosh_": 95, "add_": 97, "addbmm": [98, 682], "addbmm_": 99, "addcdiv": [100, 683], "addcdiv_": 101, "addcmul": [102, 684], "addcmul_": 103, "addmm": [104, 685, 1796], "addmm_": 105, "addmv": [106, 686], "addmv_": 107, "addr": [108, 687], "addr_": 109, "adjoint": [110, 688], "all": [111, 689, 1905, 1918, 1921], "allclos": [112, 690], "amax": [113, 691], "amin": [114, 692], "aminmax": [115, 693], "ani": [117, 695, 1880, 1960], "apply_": 118, "arcco": [119, 862], "arccos_": 120, "arccosh": [121, 863], "arccosh_": 122, "arcsin": [123, 864], "arcsin_": 124, "arcsinh": [125, 865], "arcsinh_": 126, "arctan": [127, 866], "arctan2": [128, 867], "arctan2_": 129, "arctan_": 130, "arctanh": [131, 868], "arctanh_": 132, "argmax": [133, 870], "argmin": [134, 871], "argsort": [135, 872], "argwher": [136, 873], "as_strid": [137, 874], "as_subclass": 138, "asin": [139, 877], "asin_": 140, "asinh": [141, 878], "asinh_": 142, "atan": [143, 879], "atan2": [144, 880], "atan2_": 145, "atan_": 146, "atanh": [147, 881], "atanh_": 148, "backward": [149, 885, 889, 1900, 1901, 1903, 1908, 1931], "baddbmm": [150, 916], "baddbmm_": 151, "bernoulli_": 153, "bincount": [155, 919], "bitwise_and": [156, 920], "bitwise_and_": 157, "bitwise_left_shift": [158, 921], "bitwise_left_shift_": 159, "bitwise_not": [160, 922], "bitwise_not_": 161, "bitwise_or": [162, 923], "bitwise_or_": 163, "bitwise_right_shift": [164, 924], "bitwise_right_shift_": 165, "bitwise_xor": [166, 925], "bitwise_xor_": 167, "bmm": [168, 928], "bool": 169, "broadcast_to": [170, 931], "byte": 171, "cauchy_": 172, "ccol_indic": 173, "cdoubl": 174, "ceil": [175, 937], "ceil_": 176, "cfloat": 177, "chalf": 178, "char": 179, "choleski": [180, 939, 1230], "cholesky_invers": [181, 940], "cholesky_solv": [182, 941], "chunk": [183, 942], "clamp": [184, 767, 943], "clamp_": 185, "clip": [186, 944, 1899], "clip_": 187, "clone": [188, 945], "coalesc": 189, "col_indic": 190, "conj": [191, 959], "conj_phys": [192, 960], "conj_physical_": 193, "contigu": 194, "copy_": 195, "copysign": [196, 961], "copysign_": 197, "corrcoef": [198, 962], "co": [199, 963], "cos_": 200, "cosh": [201, 964], "cosh_": 202, "count_nonzero": [203, 965], "cov": [204, 966], "cross": [206, 974, 1233, 1900], "crow_indic": 207, "cummax": [209, 1053], "cummin": [210, 1054], "cumprod": [211, 1055], "cumprod_": 212, "cumsum": [213, 1056], "cumsum_": 214, "data_ptr": 215, "deg2rad": [216, 1058], "dense_dim": 217, "dequant": [218, 1059, 1925], "det": [219, 1060, 1234], "detach": 220, "detach_": 221, "devic": [222, 996, 1903, 1914, 1937], "diag": [223, 1061], "diag_emb": [224, 1062], "diagflat": [225, 1063], "diagon": [226, 1064, 1235], "diagonal_scatt": [227, 1065], "diff": [228, 1066], "digamma": [229, 1067], "digamma_": 230, "dim": [231, 1893], "dist": [232, 1068], "div": [233, 1069, 1916], "div_": 234, "divid": [235, 1070], "divide_": 236, "dot": [237, 1071], "doubl": 238, "dsplit": [239, 1072], "element_s": 240, "eq": [241, 1079], "eq_": 242, "equal": [243, 1080], "erf": [244, 1081], "erf_": 245, "erfc": [246, 1082], "erfc_": 247, "erfinv": [248, 1083], "erfinv_": 249, "exp": [250, 1084], "exp_": 251, "expand": 252, "expand_a": 253, "expm1": [254, 1086], "expm1_": 255, "exponential_": 256, "fill_": 257, "fill_diagonal_": 258, "fix_": 260, "flatten": [261, 1113, 1380], "flip": [262, 1114], "fliplr": [263, 1115], "flipud": [264, 1116], "float": [265, 1916], "float_pow": [266, 1117], "float_power_": 267, "floor": [268, 1118], "floor_": 269, "floor_divid": [270, 1119], "floor_divide_": 271, "fmax": [272, 1120], "fmin": [273, 1121], "fmod": [274, 1122], "fmod_": 275, "frac": [276, 1123], "frac_": 277, "frexp": [278, 1124], "gather": [279, 989, 1143], "gcd": [280, 1144], "gcd_": 281, "ge": [282, 1145], "ge_": 283, "geometric_": 284, "geqrf": [285, 1146], "ger": [286, 1147], "get_devic": 287, "greater": [289, 1155], "greater_": 290, "greater_equ": [291, 1156], "greater_equal_": 292, "gt": [293, 1157], "gt_": 294, "half": 295, "hardshrink": [296, 1390, 1536], "heavisid": [297, 1160], "histc": [298, 1161], "histogram": [299, 1162], "hsplit": [300, 1164], "hypot": [301, 1167], "hypot_": 302, "i0": [303, 1168], "i0_": 304, "igamma": [305, 1169], "igamma_": 306, "igammac": [307, 1170], "igammac_": 308, "index_add": [310, 1172], "index_add_": 311, "index_copi": [312, 1173], "index_copy_": 313, "index_fil": 314, "index_fill_": 315, "index_put": 316, "index_put_": 317, "index_reduc": [318, 1174], "index_reduce_": 319, "index_select": [320, 1175], "indic": [321, 1876], "inner": [322, 1178], "int": 323, "int_repr": 324, "invers": [325, 1179, 1885], "is_coalesc": 326, "is_complex": [327, 1180], "is_conj": [328, 1181], "is_contigu": 329, "is_cuda": 330, "is_floating_point": [331, 1183], "is_infer": 332, "is_leaf": 333, "is_meta": 334, "is_pin": 335, "is_quant": 336, "is_set_to": 337, "is_shar": 338, "is_sign": 339, "is_spars": 340, "is_sparse_csr": 341, "isclos": [342, 1190], "isfinit": [343, 1191], "isinf": [344, 1193], "isnan": [345, 1194], "isneginf": [346, 1195], "isposinf": [347, 1196], "isreal": [348, 1197], "istft": [349, 1198], "items": 351, "kthvalu": [352, 1222], "lcm": [353, 1223], "lcm_": 354, "ldexp": [355, 1224], "ldexp_": 356, "le": [357, 1225], "le_": 358, "lerp": [359, 1226], "lerp_": 360, "less": [361, 1227], "less_": 362, "less_equ": [363, 1228], "less_equal_": 364, "lgamma": [365, 1229], "lgamma_": 366, "log10": [368, 1275], "log10_": 369, "log1p": [370, 1276], "log1p_": 371, "log2": [372, 1277], "log2_": 373, "log_": 374, "log_normal_": 375, "logaddexp": [376, 1278], "logaddexp2": [377, 1279], "logcumsumexp": [378, 1280], "logdet": [379, 1281], "logical_and": [380, 1282], "logical_and_": 381, "logical_not": [382, 1283], "logical_not_": 383, "logical_or": [384, 1284], "logical_or_": 385, "logical_xor": [386, 1285], "logical_xor_": 387, "logit": [388, 1286], "logit_": 389, "logsumexp": [390, 1288], "long": 391, "lt": [392, 1289], "lt_": 393, "lu": [394, 1247, 1290], "lu_solv": [395, 1250, 1291], "map_": 396, "masked_fil": 397, "masked_fill_": 398, "masked_scatt": 399, "masked_scatter_": 400, "masked_select": [401, 1294], "matmul": [402, 1251, 1295], "matrix_exp": [403, 1252, 1296], "matrix_pow": [404, 1254, 1297], "maximum": [406, 1299], "mean": [407, 1300], "median": [408, 1301], "minimum": [410, 1304], "mm": [411, 1305, 1799], "moveaxi": [413, 1307], "movedim": [414, 1308], "msort": [415, 1322], "mul": [416, 1323], "mul_": 417, "multipli": [419, 1325], "multiply_": 420, "mv": [421, 1326], "mvlgamma": [422, 1327], "mvlgamma_": 423, "nan_to_num": [424, 1328], "nan_to_num_": 425, "nanmean": [426, 1329], "nanmedian": [427, 1330], "nanquantil": [428, 1331], "nansum": [429, 1332], "narrow": [430, 1333], "narrow_copi": [431, 1334], "nbyte": 432, "ndim": 433, "ndimens": 434, "ne": [435, 1335], "ne_": 436, "neg_": 438, "negative_": 440, "nelement": 441, "new_empti": 442, "new_ful": 443, "new_on": 444, "new_tensor": 445, "new_zero": 446, "nextaft": [447, 1338], "nextafter_": 448, "normal_": 451, "not_equ": [452, 1663], "not_equal_": 453, "numel": [454, 1664], "numpi": [455, 1918], "orgqr": [456, 1708], "ormqr": [457, 1709], "outer": [458, 1710], "permut": [459, 1712, 1893], "pin_memori": 460, "pinvers": [461, 1713], "polygamma": [462, 1716], "polygamma_": 463, "posit": [464, 1717], "pow": [465, 1718], "pow_": 466, "prod": [467, 1719], "put_": 468, "q_per_channel_axi": 469, "q_per_channel_scal": 470, "q_per_channel_zero_point": 471, "q_scale": 472, "q_zero_point": 473, "qr": [474, 1259, 1721], "qscheme": 475, "quantil": [476, 1722], "rad2deg": [477, 1729], "random_": 478, "ravel": [479, 1738], "reciproc": [481, 1740], "reciprocal_": 482, "record_stream": 483, "register_hook": [484, 909], "remaind": [485, 1741], "remainder_": 486, "renorm": [487, 1742], "renorm_": 488, "repeat": 489, "repeat_interleav": [490, 1743], "requires_grad": [491, 1900], "requires_grad_": 492, "reshap": [493, 1744], "reshape_a": 494, "resize_": 495, "resize_as_": 496, "resolve_conj": [497, 1745], "resolve_neg": [498, 1746], "retain_grad": 499, "retains_grad": 500, "roll": [501, 1748], "rot90": [502, 1749], "round": [503, 1750], "round_": 504, "row_indic": 505, "rsqrt": [506, 1752], "rsqrt_": 507, "scatter": [508, 991, 1754], "scatter_": 509, "scatter_add": [510, 1755], "scatter_add_": 511, "scatter_reduc": [512, 1756], "scatter_reduce_": 513, "select": [514, 1759, 1887], "select_scatt": [515, 1760], "set_": 516, "sgn": [517, 1773], "sgn_": 518, "share_memory_": 520, "short": 521, "sigmoid_": 523, "sign": [524, 1775], "sign_": 525, "signbit": [526, 1787], "sin": [527, 1788], "sin_": 528, "sinc": [529, 1789], "sinc_": 530, "sinh": [531, 1790], "sinh_": 532, "slice_scatt": [534, 1791], "slogdet": [535, 1260, 1792], "smm": [536, 1793], "softmax": [537, 1467, 1589, 1794, 1801], "sort": [538, 1795], "sparse_dim": 539, "sparse_mask": 540, "sparse_resize_": 541, "sparse_resize_and_clear_": 542, "split": [543, 1810], "sqrt": [544, 1811], "sqrt_": 545, "squar": [546, 1812], "square_": 547, "squeez": [548, 1813], "squeeze_": 549, "sspaddmm": [550, 1814], "std": [551, 1816], "stft": [552, 1818], "storag": [553, 1936], "storage_offset": 554, "storage_typ": 555, "stride": 556, "sub": [557, 1819], "sub_": 558, "subtract": [559, 1820], "subtract_": 560, "sum": [561, 1803, 1821, 1896], "sum_to_s": 562, "svd": [563, 1264, 1822], "swapax": [564, 1824], "swapdim": [565, 1825], "t": [566, 1831, 1880, 1907, 1953], "t_": 567, "take": [568, 1832, 1921], "take_along_dim": [569, 1833], "tan": [570, 1834], "tan_": 571, "tanh": [572, 1474, 1594, 1835], "tanh_": 573, "tensor_split": [574, 1837], "tile": [575, 1839], "to_dens": 577, "to_mkldnn": 578, "to_spars": 579, "to_sparse_bsc": 580, "to_sparse_bsr": 581, "to_sparse_coo": 582, "to_sparse_csc": 583, "to_sparse_csr": 584, "tolist": 585, "topk": [586, 1840], "transpos": [588, 1842], "transpose_": 589, "triangular_solv": [590, 1845], "tril": [591, 1846], "tril_": 592, "triu": [593, 1848], "triu_": 594, "true_divid": [595, 1850], "true_divide_": 596, "trunc": [597, 1851], "trunc_": 598, "type_a": 600, "unbind": [601, 1852, 1895], "unflatten": [602, 1484, 1853], "unfold": [603, 1485, 1601], "uniform_": 604, "uniqu": [605, 1854], "unique_consecut": [606, 1855], "unsqueez": [607, 1856], "unsqueeze_": 608, "untyped_storag": 609, "var": [611, 1863], "vdot": [612, 1865], "view": [613, 1887, 1916, 1938, 1961], "view_a": 614, "vsplit": [615, 1869], "where": [616, 1871, 1875], "xlogi": [617, 1872], "xlogy_": 618, "zero_": 619, "_assert": 620, "_foreach_ab": 621, "_foreach_abs_": 622, "_foreach_aco": 623, "_foreach_acos_": 624, "_foreach_asin": 625, "_foreach_asin_": 626, "_foreach_atan": 627, "_foreach_atan_": 628, "_foreach_ceil": 629, "_foreach_ceil_": 630, "_foreach_co": 631, "_foreach_cos_": 632, "_foreach_cosh": 633, "_foreach_cosh_": 634, "_foreach_erf": 635, "_foreach_erf_": 636, "_foreach_erfc": 637, "_foreach_erfc_": 638, "_foreach_exp": 639, "_foreach_exp_": 640, "_foreach_expm1": 641, "_foreach_expm1_": 642, "_foreach_floor": 643, "_foreach_floor_": 644, "_foreach_frac": 645, "_foreach_frac_": 646, "_foreach_lgamma": 647, "_foreach_lgamma_": 648, "_foreach_log": 649, "_foreach_log10": 650, "_foreach_log10_": 651, "_foreach_log1p": 652, "_foreach_log1p_": 653, "_foreach_log2": 654, "_foreach_log2_": 655, "_foreach_log_": 656, "_foreach_neg": 657, "_foreach_neg_": 658, "_foreach_reciproc": 659, "_foreach_reciprocal_": 660, "_foreach_round": 661, "_foreach_round_": 662, "_foreach_sigmoid": 663, "_foreach_sigmoid_": 664, "_foreach_sin": 665, "_foreach_sin_": 666, "_foreach_sinh": 667, "_foreach_sinh_": 668, "_foreach_sqrt": 669, "_foreach_sqrt_": 670, "_foreach_tan": 671, "_foreach_tan_": 672, "_foreach_trunc": 673, "_foreach_trunc_": 674, "_foreach_zero_": 675, "_log": [676, 1886], "set_log": 676, "bnrelu2d": [696, 719], "bnrelu3d": [697, 720], "convbn1d": [698, 708], "convbn2d": [699, 709], "convbn3d": [700, 710], "convbnrelu1d": [701, 711], "convbnrelu2d": [702, 712], "convbnrelu3d": [703, 713], "convrelu1d": [704, 721], "convrelu2d": [705, 714, 722], "convrelu3d": [706, 715, 723], "linearrelu": [707, 716, 724, 725], "freeze_bn_stat": 717, "update_bn_stat": 718, "conv2d": [726, 735, 769, 1363, 1509], "conv3d": [727, 736, 770, 1364, 1510], "lstm": [730, 758, 1404, 1915], "multiheadattent": [731, 1440], "batchnorm2d": [732, 1353], "batchnorm3d": [733, 1354], "conv1d": [734, 768, 1362, 1508], "convtranspose1d": [737, 1365], "convtranspose2d": [738, 1366], "convtranspose3d": [739, 1367], "elu": [740, 771, 1376, 1522], "embed": [741, 1377, 1524], "embeddingbag": [742, 1378], "fxfloatfunct": 743, "floatfunct": 744, "groupnorm": [745, 1389], "hardswish": [746, 773, 1392, 1538], "instancenorm1d": [747, 1397], "instancenorm2d": [748, 1398], "instancenorm3d": [749, 1399], "layernorm": [750, 1406], "leakyrelu": [751, 1420], "qfunction": 753, "relu6": [754, 1454, 1579], "gru": [756, 1386], "grucel": [757, 1387], "lstmcell": [759, 1405], "rnncell": [761, 1451], "adaptive_avg_pool2d": [762, 1493], "adaptive_avg_pool3d": [763, 1494], "avg_pool2d": [764, 1501], "avg_pool3d": [765, 1502], "celu": [766, 1356, 1507], "hardsigmoid": [772, 1391, 1537], "hardtanh": [774, 1393, 1539], "interpol": [775, 1544], "leaky_relu": [776, 1548], "max_pool1d": [778, 1557], "max_pool2d": [779, 1558], "threshold": [780, 1476, 1596], "upsampl": [781, 1486, 1602], "upsample_bilinear": [782, 1603], "upsample_nearest": [783, 1604], "dequantstub": 784, "quantstub": 785, "quantwrapp": 786, "add_quant_dequ": 787, "backendconfig": 788, "backendpatternconfig": 789, "dtypeconfig": 790, "dtypewithconstraint": 791, "observationtyp": 792, "default_eval_fn": 794, "fakequant": [795, 1925], "fakequantizebas": 796, "fixedqparamsfakequant": 797, "fusedmovingavgobsfakequant": 798, "default_fake_qu": 799, "default_fused_act_fake_qu": 800, "default_fused_per_channel_wt_fake_qu": 801, "default_fused_wt_fake_qu": 802, "default_histogram_fake_qu": 803, "default_per_channel_weight_fake_qu": 804, "default_weight_fake_qu": 805, "disable_fake_qu": 806, "disable_observ": 807, "enable_fake_qu": 808, "enable_observ": 809, "fuse_modul": 810, "convertcustomconfig": 811, "fusecustomconfig": 812, "preparecustomconfig": 813, "standalonemoduleconfigentri": 814, "histogramobserv": 815, "minmaxobserv": 816, "movingaverageminmaxobserv": 817, "movingaverageperchannelminmaxobserv": 818, "noopobserv": 819, "observerbas": 820, "perchannelminmaxobserv": 821, "placeholderobserv": 822, "recordingobserv": 823, "default_debug_observ": 824, "default_dynamic_quant_observ": 825, "default_float_qparams_observ": 826, "default_histogram_observ": 827, "default_observ": 828, "default_per_channel_weight_observ": 829, "default_placeholder_observ": 830, "default_weight_observ": 831, "get_observer_state_dict": 832, "load_observer_state_dict": 833, "prepar": [834, 1925, 1928], "prepare_qat": 835, "propagate_qconfig": 836, "qconfig": [837, 1925, 1928], "default_activation_only_qconfig": 838, "default_debug_qconfig": 839, "default_dynamic_qconfig": 840, "default_per_channel_qconfig": 841, "default_qat_qconfig": 842, "default_qat_qconfig_v2": 843, "default_qconfig": 844, "default_weight_only_qconfig": 845, "float16_dynamic_qconfig": 846, "float16_static_qconfig": 847, "float_qparams_weight_only_qconfig": 848, "per_channel_dynamic_qconfig": 849, "qconfigmap": 850, "get_default_qat_qconfig_map": 851, "get_default_qconfig_map": 852, "quantiz": [853, 1896, 1911, 1918, 1925, 1926, 1927, 1928], "quantize_dynam": 854, "convert_fx": 855, "fuse_fx": 856, "prepare_fx": 857, "prepare_qat_fx": 858, "quantize_qat": 859, "swap_modul": 860, "arang": 861, "are_deterministic_algorithms_en": 869, "as_tensor": 875, "asarrai": 876, "atleast_1d": 882, "atleast_2d": 883, "atleast_3d": 884, "dual_level": 890, "forward_ad": [891, 892], "make_du": 891, "unpack_du": 892, "functionctx": [893, 894, 895, 896], "mark_dirti": 893, "mark_non_differenti": 894, "save_for_backward": 895, "set_materialize_grad": 896, "hvp": 898, "vhp": 901, "gradcheck": [904, 1908], "gradgradcheck": [905, 1908], "metadata": [906, 1910], "name": [907, 1879, 1893, 1894], "next_funct": 908, "register_prehook": 910, "load_nvprof": 911, "export_chrome_trac": 912, "key_averag": 913, "self_cpu_time_tot": 914, "total_averag": 915, "bartlett_window": 917, "blackman_window": 926, "block_diag": 927, "broadcast_shap": 929, "broadcast_tensor": 930, "bucket": 932, "can_cast": 933, "cartesian_prod": 934, "cat": 935, "cdist": 936, "chain_matmul": 938, "column_stack": 946, "combin": [947, 1905], "compiled_with_cxx11_abi": 949, "allow_in_graph": [950, 1954], "list_backend": 954, "reset": 955, "concat": 957, "concaten": 958, "streamcontext": [968, 981], "current_stream": [969, 994], "device_count": [970, 997], "is_avail": [971, 1014], "cudagraph": [975, 1948], "cudapluggablealloc": 976, "externalstream": 978, "outofmemoryerror": 979, "caching_allocator_alloc": 982, "caching_allocator_delet": 983, "can_device_access_p": 984, "change_current_alloc": 985, "clock_rat": 986, "comm": [987, 988, 989, 990, 991], "broadcast": [987, 1901], "broadcast_coalesc": 988, "reduce_add": 990, "current_blas_handl": 992, "current_devic": 993, "default_stream": 995, "device_of": 998, "empty_cach": [999, 1311], "get_allocator_backend": 1000, "get_arch_list": 1001, "get_device_cap": 1002, "get_device_nam": 1003, "get_device_properti": 1004, "get_gencode_flag": 1005, "get_rng_stat": [1006, 1153, 1313], "get_rng_state_al": 1007, "get_sync_debug_mod": 1008, "graph_pool_handl": 1010, "init": [1011, 1898], "initial_se": [1012, 1177], "ipc_collect": 1013, "is_current_stream_captur": 1015, "is_initi": 1016, "_create_jit_fn": 1017, "_create_multi_output_jit_fn": 1018, "list_gpu_process": 1019, "make_graphed_cal": 1020, "manual_se": [1021, 1293, 1314], "manual_seed_al": 1022, "max_memory_alloc": 1023, "max_memory_cach": 1024, "max_memory_reserv": 1025, "mem_get_info": 1026, "memory_alloc": 1027, "memory_cach": 1028, "memory_reserv": 1029, "memory_snapshot": 1030, "memory_stat": 1031, "memory_summari": 1032, "memory_usag": 1033, "mark": 1034, "range_pop": 1035, "range_push": 1036, "power_draw": 1037, "reset_max_memory_alloc": 1038, "reset_max_memory_cach": 1039, "reset_peak_memory_stat": 1040, "seed": [1041, 1318, 1758], "seed_al": 1042, "set_devic": 1043, "set_per_process_memory_fract": [1044, 1319], "set_rng_stat": [1045, 1320, 1771], "set_rng_state_al": 1046, "set_stream": 1047, "set_sync_debug_mod": 1048, "temperatur": 1051, "cumulative_trapezoid": 1057, "dstack": 1073, "einsum": 1074, "empti": 1075, "empty_lik": 1076, "empty_strid": 1077, "enable_grad": 1078, "exp2": 1085, "ey": 1087, "fake_quantize_per_channel_affin": 1088, "fake_quantize_per_tensor_affin": 1089, "fft2": 1091, "fftfreq": 1092, "fftn": 1093, "fftshift": 1094, "hfft": 1095, "hfft2": 1096, "hfftn": 1097, "ifft": 1098, "ifft2": 1099, "ifftn": 1100, "ifftshift": 1101, "ihfft": 1102, "ihfft2": 1103, "ihfftn": 1104, "irfft": 1105, "irfft2": 1106, "irfftn": 1107, "rfft": 1108, "rfft2": 1109, "rfftfreq": 1110, "rfftn": 1111, "from_dlpack": 1125, "from_numpi": 1126, "frombuff": 1127, "full": [1128, 1916], "full_lik": 1129, "functional_cal": [1130, 1656], "grad_and_valu": 1133, "replace_all_batch_norm_modules_": 1139, "stack_module_st": 1140, "get_default_dtyp": 1148, "get_deterministic_debug_mod": 1149, "get_float32_matmul_precis": 1150, "get_num_interop_thread": 1151, "get_num_thread": 1152, "hamming_window": 1158, "hann_window": 1159, "histogramdd": 1163, "hspmm": 1165, "hstack": 1166, "inference_mod": 1176, "is_deterministic_algorithms_warn_only_en": 1182, "is_grad_en": 1184, "is_inference_mode_en": 1185, "is_nonzero": 1186, "is_storag": 1187, "is_tensor": 1188, "is_warn_always_en": 1189, "isin": 1192, "attribut": [1199, 1877, 1879, 1880, 1882, 1937], "scriptfunct": 1200, "scriptmodul": [1201, 1916], "annot": [1202, 1880], "enable_onednn_fus": 1203, "fork": 1204, "freez": 1205, "ignor": 1206, "isinst": 1207, "onednn_fusion_en": 1209, "optimize_for_infer": 1210, "save": [1211, 1753, 1875, 1900, 1910, 1916, 1925], "script_if_trac": 1213, "set_fusion_strategi": 1214, "strict_fus": 1215, "trace_modul": 1217, "unus": 1218, "wait": 1219, "kaiser_window": 1220, "kron": 1221, "cholesky_ex": 1231, "eig": 1236, "eigh": 1237, "eigval": 1238, "eigvalsh": 1239, "householder_product": 1240, "inv": 1241, "inv_ex": 1242, "ldl_factor": 1243, "ldl_factor_ex": 1244, "ldl_solv": 1245, "lstsq": 1246, "lu_factor": 1248, "lu_factor_ex": 1249, "matrix_norm": 1253, "matrix_rank": 1255, "multi_dot": 1256, "pinv": 1258, "solv": 1261, "solve_ex": 1262, "solve_triangular": 1263, "svdval": 1265, "tensorinv": 1266, "tensorsolv": 1267, "vander": [1268, 1862], "vecdot": 1269, "vector_norm": 1270, "linspac": 1271, "lobpcg": 1273, "logspac": 1287, "lu_unpack": 1292, "meshgrid": 1302, "current_allocated_memori": 1309, "driver_allocated_memori": 1310, "stop": 1317, "adaptiveavgpool1d": 1339, "adaptiveavgpool2d": 1340, "adaptiveavgpool3d": 1341, "adaptivelogsoftmaxwithloss": 1342, "adaptivemaxpool1d": 1343, "adaptivemaxpool2d": 1344, "adaptivemaxpool3d": 1345, "alphadropout": 1346, "avgpool1d": 1347, "avgpool2d": 1348, "avgpool3d": 1349, "bceloss": 1350, "bcewithlogitsloss": 1351, "batchnorm1d": 1352, "bilinear": [1355, 1504], "ctcloss": 1357, "channelshuffl": 1358, "constantpad1d": 1359, "constantpad2d": 1360, "constantpad3d": 1361, "cosineembeddingloss": 1368, "cosinesimilar": 1369, "crossentropyloss": 1370, "dataparallel": [1371, 1896, 1897, 1899, 1903], "dropout": [1372, 1518, 1896, 1897], "dropout1d": [1373, 1519], "dropout2d": [1374, 1520], "dropout3d": [1375, 1521], "featurealphadropout": 1379, "fold": [1381, 1527], "fractionalmaxpool2d": 1382, "fractionalmaxpool3d": 1383, "gelu": [1384, 1531], "glu": [1385, 1532], "gaussiannllloss": 1388, "hingeembeddingloss": 1394, "huberloss": 1395, "ident": [1396, 1630, 1638, 1880, 1907], "kldivloss": 1400, "l1loss": 1401, "lppool1d": 1402, "lppool2d": 1403, "lazybatchnorm1d": 1407, "lazybatchnorm2d": 1408, "lazybatchnorm3d": 1409, "lazyconv1d": 1410, "lazyconv2d": 1411, "lazyconv3d": 1412, "lazyconvtranspose1d": 1413, "lazyconvtranspose2d": 1414, "lazyconvtranspose3d": 1415, "lazyinstancenorm1d": 1416, "lazyinstancenorm2d": 1417, "lazyinstancenorm3d": 1418, "lazylinear": 1419, "localresponsenorm": 1422, "logsigmoid": [1423, 1553], "logsoftmax": 1424, "mseloss": 1425, "marginrankingloss": 1426, "maxpool1d": 1427, "maxpool2d": 1428, "maxpool3d": 1429, "maxunpool1d": 1430, "maxunpool2d": 1431, "maxunpool3d": 1432, "mish": [1433, 1563], "moduledict": [1435, 1880], "modulelist": [1436, 1879, 1880], "multilabelmarginloss": 1437, "multilabelsoftmarginloss": 1438, "multimarginloss": 1439, "nllloss": 1441, "prelu": [1442, 1577], "pairwisedist": 1443, "parameterdict": 1444, "parameterlist": 1445, "pixelshuffl": 1446, "pixelunshuffl": 1447, "poissonnllloss": 1448, "rnn": [1449, 1648, 1649, 1650, 1651, 1652, 1653, 1915], "rnnbase": 1450, "rrelu": [1452, 1581], "relu": [1453, 1578], "reflectionpad1d": 1455, "reflectionpad2d": 1456, "reflectionpad3d": 1457, "replicationpad1d": 1458, "replicationpad2d": 1459, "replicationpad3d": 1460, "selu": [1461, 1584], "sequenti": 1462, "silu": [1463, 1586], "smoothl1loss": 1465, "softmarginloss": 1466, "softmax2d": 1468, "softmin": [1469, 1590], "softplu": [1470, 1591], "softshrink": [1471, 1592], "softsign": [1472, 1593], "syncbatchnorm": 1473, "tanhshrink": [1475, 1595], "transformerdecod": 1478, "transformerdecoderlay": 1479, "transformerencod": 1480, "transformerencoderlay": 1481, "tripletmarginloss": 1482, "tripletmarginwithdistanceloss": 1483, "upsamplingbilinear2d": 1487, "upsamplingnearest2d": 1488, "zeropad1d": 1489, "zeropad2d": 1490, "zeropad3d": 1491, "adaptive_avg_pool1d": 1492, "adaptive_max_pool1d": 1495, "adaptive_max_pool2d": 1496, "adaptive_max_pool3d": 1497, "affine_grid": 1498, "alpha_dropout": 1499, "avg_pool1d": 1500, "batch_norm": 1503, "conv_transpose1d": 1511, "conv_transpose2d": 1512, "conv_transpose3d": 1513, "cosine_embedding_loss": 1514, "cosine_similar": 1515, "cross_entropi": 1516, "ctc_loss": 1517, "elu_": 1523, "embedding_bag": 1525, "feature_alpha_dropout": 1526, "fractional_max_pool2d": 1528, "fractional_max_pool3d": 1529, "gaussian_nll_loss": 1530, "grid_sampl": 1533, "group_norm": 1534, "gumbel_softmax": 1535, "hardtanh_": 1540, "hinge_embedding_loss": 1541, "huber_loss": 1542, "instance_norm": 1543, "kl_div": 1545, "l1_loss": 1546, "layer_norm": 1547, "leaky_relu_": 1549, "local_response_norm": 1551, "log_softmax": [1552, 1798], "lp_pool1d": 1554, "lp_pool2d": 1555, "margin_ranking_loss": 1556, "max_pool3d": 1559, "max_unpool1d": 1560, "max_unpool2d": 1561, "max_unpool3d": 1562, "mse_loss": 1564, "multi_margin_loss": 1565, "multilabel_margin_loss": 1566, "multilabel_soft_margin_loss": 1567, "nll_loss": 1568, "one_hot": 1570, "pad": [1571, 1896], "pairwise_dist": 1572, "pdist": 1573, "pixel_shuffl": 1574, "pixel_unshuffl": 1575, "poisson_nll_loss": 1576, "relu_": 1580, "rrelu_": 1582, "scaled_dot_product_attent": 1583, "smooth_l1_loss": 1587, "soft_margin_loss": 1588, "threshold_": 1597, "data_parallel": [1598, 1897], "triplet_margin_loss": 1599, "triplet_margin_with_distance_loss": 1600, "lazymodulemixin": 1605, "register_module_backward_hook": 1606, "register_module_buffer_registration_hook": 1607, "register_module_forward_hook": 1608, "register_module_forward_pre_hook": 1609, "register_module_full_backward_hook": 1610, "register_module_full_backward_pre_hook": 1611, "register_module_module_registration_hook": 1612, "register_module_parameter_registration_hook": 1613, "distributeddataparallel": [1614, 1899, 1903, 1904], "uninitializedbuff": 1616, "uninitializedparamet": 1617, "clip_grad_norm_": 1618, "clip_grad_value_": 1619, "parameters_to_vector": 1620, "parametr": [1621, 1622, 1624, 1625, 1626, 1627, 1911], "orthogon": 1621, "spectral_norm": [1622, 1655], "parametrizationlist": 1623, "cach": [1624, 1875, 1903, 1909, 1956], "is_parametr": 1625, "register_parametr": 1626, "remove_parametr": 1627, "basepruningmethod": 1628, "customfrommask": 1629, "l1unstructur": 1631, "lnstructur": 1632, "pruningcontain": 1633, "randomstructur": 1634, "randomunstructur": 1635, "prune": [1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1911], "custom_from_mask": 1636, "global_unstructur": 1637, "is_prun": 1639, "l1_unstructur": 1640, "ln_structur": 1641, "random_structur": 1642, "random_unstructur": 1643, "remove_spectral_norm": 1645, "remove_weight_norm": 1646, "packedsequ": 1647, "pack_padded_sequ": 1648, "pack_sequ": 1649, "pad_packed_sequ": 1650, "pad_sequ": 1651, "unpack_sequ": 1652, "unpad_sequ": 1653, "skip_init": 1654, "stateless": 1656, "vector_to_paramet": 1657, "weight_norm": 1658, "no_grad": 1659, "ones": 1665, "ones_lik": 1666, "exportopt": 1667, "exportoutput": 1668, "exportoutputseri": 1669, "jitscalartyp": 1670, "onnxexportererror": 1671, "onnxregistri": 1672, "graphinfo": 1673, "verificationopt": 1674, "asgd": 1675, "adadelta": 1676, "adagrad": 1677, "adam": 1678, "adamw": 1679, "adamax": 1680, "lbfg": 1681, "nadam": 1682, "add_param_group": 1683, "load_state_dict": 1684, "state_dict": [1685, 1959], "step": [1686, 1921, 1955], "zero_grad": 1687, "radam": 1688, "rmsprop": 1689, "rprop": 1690, "sgd": 1691, "sparseadam": 1692, "chainedschedul": 1693, "constantlr": 1694, "cosineannealinglr": 1695, "cosineannealingwarmrestart": 1696, "cycliclr": 1697, "exponentiallr": 1698, "lambdalr": 1699, "linearlr": 1700, "multisteplr": 1701, "multiplicativelr": 1702, "onecyclelr": 1703, "polynomiallr": 1704, "reducelronplateau": 1705, "sequentiallr": 1706, "steplr": 1707, "pca_lowrank": 1711, "polar": 1715, "promote_typ": 1720, "quantize_per_channel": 1723, "quantize_per_tensor": 1724, "quantized_batch_norm": 1725, "quantized_max_pool1d": 1726, "quantized_max_pool2d": 1727, "sobolengin": 1728, "rand": 1730, "rand_lik": 1731, "randint": 1732, "randint_lik": 1733, "randn": 1734, "randn_lik": 1735, "randperm": 1736, "rang": [1737, 1879], "result_typ": 1747, "row_stack": 1751, "searchsort": 1757, "set_default_devic": 1761, "set_default_dtyp": 1762, "set_default_tensor_typ": 1763, "set_deterministic_debug_mod": 1764, "set_float32_matmul_precis": 1765, "set_flush_denorm": 1766, "set_grad_en": 1767, "set_num_interop_thread": 1768, "set_num_thread": 1769, "set_printopt": 1770, "set_warn_alwai": 1772, "signal": [1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1933], "bartlett": 1776, "blackman": 1777, "cosin": 1778, "gaussian": 1780, "general_cosin": 1781, "general_ham": 1782, "ham": 1783, "hann": 1784, "kaiser": 1785, "nuttal": 1786, "check_sparse_tensor_invari": 1797, "sampled_addmm": 1800, "spdiag": 1802, "sparse_bsc_tensor": 1804, "sparse_bsr_tensor": 1805, "sparse_compressed_tensor": 1806, "sparse_coo_tensor": 1807, "sparse_csc_tensor": 1808, "sparse_csr_tensor": 1809, "std_mean": 1817, "svd_lowrank": 1823, "sym_float": 1826, "sym_int": 1827, "sym_max": 1828, "sym_min": 1829, "sym_not": 1830, "tensordot": 1838, "trapezoid": 1843, "trapz": 1844, "tril_indic": 1847, "triu_indic": 1849, "use_deterministic_algorithm": 1857, "generate_methods_for_privateuse1_backend": 1858, "get_cpp_backtrac": 1859, "rename_privateuse1_backend": 1860, "set_modul": 1861, "var_mean": 1864, "view_as_complex": 1866, "view_as_r": 1867, "vstack": 1870, "zero": 1873, "zeros_lik": 1874, "hub": 1875, "publish": 1875, "an": [1875, 1918, 1921, 1922], "entrypoint": 1875, "run": [1875, 1960], "my": [1875, 1900, 1907, 1922, 1953, 1960], "download": 1875, "logic": [1875, 1879], "known": [1875, 1877], "bind": 1876, "tabl": [1876, 1916], "built": [1877, 1878, 1880, 1918], "comparison": [1877, 1879, 1880, 1942, 1948], "inspect": 1877, "warn": 1877, "appendix": [1877, 1880], "recurs": 1877, "constant": [1877, 1879], "fusion": 1877, "math": [1878, 1942], "construct": [1879, 1880, 1882, 1895, 1921, 1934], "refin": [1879, 1880], "enum": [1879, 1880], "tupl": [1879, 1880], "express": [1879, 1880], "liter": [1879, 1880], "list": [1879, 1880, 1918], "dict": 1879, "arithmet": [1879, 1880], "subscript": [1879, 1880], "slice": [1879, 1880, 1914, 1942], "ternari": [1879, 1880], "cast": 1879, "statement": [1879, 1880], "assign": [1879, 1880], "If": 1879, "while": [1879, 1880], "loop": 1879, "For": 1879, "break": [1879, 1880, 1953, 1961, 1963], "continu": [1879, 1880], "return": [1879, 1880, 1907, 1932], "resolut": [1879, 1880], "lookup": 1879, "defin": [1879, 1905, 1906], "terminologi": 1880, "meta": 1880, "primit": 1880, "special": [1880, 1900, 1935], "instanc": 1880, "when": [1880, 1900, 1905, 1918, 1925, 1934, 1953], "signatur": 1880, "expr": 1880, "convers": [1880, 1895], "atom": 1880, "identifi": [1880, 1953, 1963], "parenthes": 1880, "form": 1880, "displai": 1880, "primari": 1880, "power": 1880, "unari": [1880, 1887, 1934], "bitwis": 1880, "binari": [1880, 1887], "shift": 1880, "boolean": 1880, "condit": 1880, "augment": 1880, "rais": 1880, "del": 1880, "compound": 1880, "els": 1880, "getattr": 1880, "hasattr": 1880, "zip": [1880, 1922], "enumer": 1880, "rule": [1880, 1894, 1906, 1919], "remot": [1880, 1932], "procedur": 1880, "execut": [1880, 1900, 1903, 1922, 1923], "program": 1880, "coverag": [1881, 1893, 1905], "properti": [1882, 1885], "correctli": 1882, "bound": 1882, "schema": 1882, "between": [1882, 1922, 1953], "matrix": [1885, 1925], "decomposit": 1885, "solver": 1885, "misc": 1885, "experiment": 1885, "motiv": [1887, 1951, 1952], "reduct": [1887, 1903, 1914, 1942], "mobile_optim": 1888, "model_zoo": 1889, "strategi": [1892, 1921], "descriptor": 1892, "file_descriptor": 1892, "file_system": 1892, "subprocess": 1892, "keep": [1893, 1922], "dimens": [1893, 1894], "unifi": 1893, "contract": 1893, "awai": 1893, "factori": 1893, "variant": 1893, "semant": [1894, 1901, 1903, 1909, 1916], "explicit": 1894, "align": 1894, "current": 1894, "subsystem": 1894, "constructor": 1895, "contain": 1896, "convolut": [1896, 1897, 1914, 1915], "layer": 1896, "pool": [1896, 1897], "activ": [1896, 1897], "weight": [1896, 1921], "nonlinear": 1896, "recurr": [1896, 1907], "distanc": [1896, 1897], "loss": [1896, 1897, 1899], "vision": [1896, 1897], "shuffl": 1896, "lazi": 1896, "attent": 1897, "typic": 1899, "unscal": 1899, "accumul": 1899, "penalti": 1899, "one": 1899, "per": [1899, 1921], "need": [1899, 1953], "particular": [1899, 1900], "dtype": [1899, 1916, 1928, 1937], "encod": 1900, "histori": 1900, "set": [1900, 1918], "No": 1900, "evalu": [1900, 1908, 1956], "multithread": 1900, "concurr": 1900, "determin": [1900, 1915], "retain": 1900, "thread": [1900, 1902], "safeti": 1900, "wirting": 1900, "calculu": 1900, "pictur": 1900, "conjug": 1900, "own": 1900, "formula": 1900, "domain": 1900, "regist": [1900, 1949], "whether": [1900, 1922], "fire": 1900, "differ": [1900, 1918, 1953], "modifi": 1900, "compat": 1901, "runtim": [1902, 1907, 1963], "tune": 1902, "tensorfloat": [1903, 1909, 1914], "32": [1903, 1909, 1914, 1917], "tf32": [1903, 1909, 1914], "amper": [1903, 1914], "reduc": [1903, 1914], "fp16": [1903, 1914], "gemm": [1903, 1914], "bf16": [1903, 1914], "bc": 1903, "alloc": [1903, 1907], "cubla": 1903, "workspac": 1903, "cufft": 1903, "plan": [1903, 1909], "just": 1903, "time": [1903, 1957, 1961], "practic": [1903, 1913, 1925, 1947], "agnost": 1903, "buffer": [1903, 1913], "instead": 1903, "whole": [1903, 1953], "captur": 1903, "partial": 1903, "9": 1903, "6": 1903, "across": [1903, 1916], "intern": [1904, 1918, 1922, 1950, 1951], "processgroup": 1904, "ddpoptim": 1904, "separ": 1905, "setup_context": 1905, "like": [1905, 1922], "subclass": [1905, 1952], "wrapper": 1905, "__torch_function__": 1905, "overrid": [1905, 1964], "nativ": [1905, 1925, 1927], "anoth": 1906, "specifi": 1906, "gotcha": 1906, "staticmethod": 1906, "isn": 1907, "freed": 1907, "properli": 1907, "loader": 1907, "doesn": 1907, "notat": 1908, "background": [1908, 1931, 1932, 1948], "inform": [1908, 1930, 1962], "analyt": 1908, "output": 1908, "u": 1908, "reus": [1909, 1913], "hipfft": 1909, "rocfft": 1909, "enabl": 1909, "kernel": [1909, 1925, 1957], "larg": 1910, "fleet": 1910, "wide": 1910, "attach": 1910, "consider": 1910, "block": 1911, "neural": 1911, "tip": [1913, 1926], "fight": 1913, "deadlock": 1913, "through": 1913, "queue": 1913, "e": 1913, "g": 1913, "hogwild": 1913, "oversubscript": 1913, "accuraci": [1914, 1925, 1926, 1963], "extrem": 1914, "finit": 1914, "instinct": 1914, "mi200": 1914, "reproduc": 1915, "nondeterminist": 1915, "algorithm": [1915, 1921, 1931], "content": [1916, 1922], "preserv": 1916, "them": [1916, 1922], "integ": 1916, "divis": 1916, "alwai": 1916, "includ": [1917, 1922], "compon": 1917, "speed": [1917, 1953], "One": [1917, 1962], "instal": 1917, "cffi": 1917, "cpp": 1917, "found": 1917, "win": 1917, "channel": 1917, "without": 1917, "claus": 1917, "protect": 1917, "broken": 1917, "pipe": [1917, 1923], "driver": 1917, "shut": 1917, "down": 1917, "ipc": 1917, "alexnet": 1918, "v": 1918, "index": [1918, 1942], "aten": [1918, 1958, 1962], "inlin": 1918, "discov": 1918, "unconvert": 1918, "onc": 1918, "preview": 1918, "diagnost": 1919, "base": [1921, 1962], "adjust": 1921, "learn": 1921, "rate": 1921, "averag": 1921, "swa": 1921, "ema": 1921, "schedul": 1921, "care": 1921, "put": 1921, "togeth": 1921, "your": 1922, "do": [1922, 1950, 1953], "see": [1922, 1953], "insid": [1922, 1953], "treat": 1922, "archiv": 1922, "file_structur": 1922, "given": 1922, "wa": 1922, "resourc": [1922, 1952], "later": 1922, "distinguish": 1922, "explan": 1922, "framework": [1922, 1930], "user": [1922, 1932, 1945], "analyz": 1922, "extern": 1922, "mock": 1922, "refactor": 1922, "sharp": 1922, "global": 1922, "isol": 1922, "each": [1922, 1952], "mangl": 1922, "pipelin": 1923, "skip": 1923, "connect": 1923, "intel": 1924, "instrument": 1924, "technologi": 1924, "eager": 1925, "awar": 1925, "engin": 1925, "observ": [1925, 1928], "hardwar": 1925, "configur": [1925, 1927], "insensit": 1926, "int8": 1926, "sensit": 1926, "ao": [1928, 1943, 1944], "top": 1928, "quantize_fx": 1928, "qconfig_map": 1928, "backend_config": 1928, "custom_config": 1928, "pt2e": 1928, "0": [1928, 1959, 1960, 1963], "relat": [1928, 1952], "fake_quant": 1928, "intrins": 1928, "qat": 1928, "scheme": 1928, "rpc": 1930, "tensorpip": 1930, "rref": [1930, 1932], "remotemodul": 1930, "record": 1931, "dure": 1931, "smart": 1931, "end": 1931, "protocol": 1932, "assumpt": 1932, "lifetim": 1932, "reason": 1932, "scenario": 1932, "owner": 1932, "argument": 1932, "sparsiti": 1934, "semi": 1934, "acceler": 1934, "coo": 1934, "hybrid": 1934, "uncoalesc": 1934, "csr": 1934, "csc": 1934, "bsr": 1934, "bsc": 1934, "memory_format": 1937, "tensorboard": 1939, "creation": 1942, "sampl": 1942, "quasi": 1942, "pointwis": 1942, "spectral": 1942, "bla": 1942, "lapack": 1942, "foreach": 1942, "n": [1943, 1944], "_numeric_suit": 1943, "_numeric_suite_fx": 1944, "deep": [1945, 1950], "dive": [1945, 1950], "howto": 1945, "vendor": 1945, "x86": 1947, "tree": 1948, "integr": 1948, "callabl": 1948, "previou": 1948, "after": 1949, "speedi": 1949, "guard": [1950, 1951, 1956], "abridg": 1951, "public": 1951, "overal": [1951, 1952], "architectur": [1951, 1952], "dimdynam": 1951, "unback": 1951, "symint": 1951, "fake": 1952, "bit": 1952, "detail": 1952, "individu": [1952, 1957], "characterist": 1952, "interact": 1952, "you": 1953, "still": 1953, "crash": 1953, "slow": 1953, "recompil": [1953, 1963], "am": 1953, "speedup": 1953, "caus": [1953, 1963], "didn": 1953, "incorrect": 1953, "result": 1953, "oom": 1953, "appli": 1953, "handl": 1953, "fine": [1953, 1954], "grain": [1953, 1954], "_dynamo": [1953, 1954], "disallow_in_graph": [1953, 1954], "_dynamo_skip": 1953, "pretrain": 1955, "next": 1955, "frame": 1956, "pep": 1956, "523": 1956, "instructiontransl": 1956, "torchinductor": [1957, 1960, 1963], "relev": 1957, "breakdown": 1957, "prim": 1958, "nnmodul": 1959, "__call__": 1959, "dashboard": 1960, "measur": 1960, "pr": 1960, "affect": 1960, "befor": 1960, "merg": 1960, "understand": 1961, "around": 1961, "overhead": 1961, "x": 1962, "none": 1962, "partition": 1962, "matcher": 1962, "capabl": 1962, "troubleshoot": 1963, "titl": 1963, "diagnos": 1963, "minifi": 1963, "torch_compile_debug": 1963, "excess": 1963, "info": 1965, "finfo": 1965, "iinfo": 1965}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.eq_": [[242, "torch-tensor-eq"]], "torch.Tensor.cos_": [[200, "torch-tensor-cos"]], "torch.Tensor.dense_dim": [[217, "torch-tensor-dense-dim"]], "torch.Tensor.copysign": [[196, "torch-tensor-copysign"]], "torch.Tensor.diag": [[223, "torch-tensor-diag"]], "torch.Tensor.element_size": [[240, "torch-tensor-element-size"]], "torch.Tensor.diff": [[228, "torch-tensor-diff"]], "torch.Tensor.cumsum_": [[214, "torch-tensor-cumsum"]], "torch.Tensor.diag_embed": [[224, "torch-tensor-diag-embed"]], "torch.Tensor.digamma": [[229, "torch-tensor-digamma"]], "torch.Tensor.count_nonzero": [[203, "torch-tensor-count-nonzero"]], "torch.Tensor.corrcoef": [[198, "torch-tensor-corrcoef"]], "torch.Tensor.cummax": [[209, "torch-tensor-cummax"]], "torch.Tensor.dsplit": [[239, "torch-tensor-dsplit"]], "torch.Tensor.copysign_": [[197, "torch-tensor-copysign"]], "torch.Tensor.diagflat": [[225, "torch-tensor-diagflat"]], "torch.Tensor.dot": [[237, "torch-tensor-dot"]], "torch.Tensor.detach_": [[221, "torch-tensor-detach"]], "torch.Tensor.cumsum": [[213, "torch-tensor-cumsum"]], "torch.Tensor.dequantize": [[218, "torch-tensor-dequantize"]], "torch.Tensor.cross": [[206, "torch-tensor-cross"]], "torch.Tensor.device": [[222, "torch-tensor-device"]], "torch.Tensor.diagonal": [[226, "torch-tensor-diagonal"]], "torch.Tensor.divide": [[235, "torch-tensor-divide"]], "torch.Tensor.div": [[233, "torch-tensor-div"]], "torch.Tensor.cos": [[199, "torch-tensor-cos"]], "torch.Tensor.cosh_": [[202, "torch-tensor-cosh"]], "torch.Tensor.cuda": [[208, "torch-tensor-cuda"]], "torch.Tensor.double": [[238, "torch-tensor-double"]], "torch.Tensor.equal": [[243, "torch-tensor-equal"]], "torch.Tensor.cosh": [[201, "torch-tensor-cosh"]], "torch.Tensor.div_": [[234, "torch-tensor-div"]], "torch.Tensor.deg2rad": [[216, "torch-tensor-deg2rad"]], "torch.Tensor.data_ptr": [[215, "torch-tensor-data-ptr"]], "torch.Tensor.digamma_": [[230, "torch-tensor-digamma"]], "torch.Tensor.detach": [[220, "torch-tensor-detach"]], "torch.Tensor.dim": [[231, "torch-tensor-dim"]], "torch.Tensor.diagonal_scatter": [[227, "torch-tensor-diagonal-scatter"]], "torch.Tensor.divide_": [[236, "torch-tensor-divide"]], "torch.Tensor.cpu": [[205, "torch-tensor-cpu"]], "torch.Tensor.eq": [[241, "torch-tensor-eq"]], "torch.Tensor.crow_indices": [[207, "torch-tensor-crow-indices"]], "torch.Tensor.cumprod": [[211, "torch-tensor-cumprod"]], "torch.Tensor.cumprod_": [[212, "torch-tensor-cumprod"]], "torch.Tensor.cummin": [[210, "torch-tensor-cummin"]], "torch.Tensor.dist": [[232, "torch-tensor-dist"]], "torch.Tensor.erf": [[244, "torch-tensor-erf"]], "torch.Tensor.cov": [[204, "torch-tensor-cov"]], "torch.Tensor.det": [[219, "torch-tensor-det"]], "torch.Tensor.addcmul": [[102, "torch-tensor-addcmul"]], "torch.Tensor.addr_": [[109, "torch-tensor-addr"]], "torch.Tensor.asinh_": [[142, "torch-tensor-asinh"]], "torch.Tensor.as_subclass": [[138, "torch-tensor-as-subclass"]], "torch.Tensor.arctan": [[127, "torch-tensor-arctan"]], "torch.Tensor.arctanh_": [[132, "torch-tensor-arctanh"]], "torch.Tensor.aminmax": [[115, "torch-tensor-aminmax"]], "torch.Tensor.amax": [[113, "torch-tensor-amax"]], "torch.Tensor.argmax": [[133, "torch-tensor-argmax"]], "torch.Tensor.atan": [[143, "torch-tensor-atan"]], "torch.Tensor.arccosh_": [[122, "torch-tensor-arccosh"]], "torch.Tensor.arccos_": [[120, "torch-tensor-arccos"]], "torch.Tensor.angle": [[116, "torch-tensor-angle"]], "torch.Tensor.addr": [[108, "torch-tensor-addr"]], "torch.Tensor.asin_": [[140, "torch-tensor-asin"]], "torch.Tensor.addcdiv": [[100, "torch-tensor-addcdiv"]], "torch.Tensor.argwhere": [[136, "torch-tensor-argwhere"]], "torch.Tensor.addcmul_": [[103, "torch-tensor-addcmul"]], "torch.Tensor.arcsinh_": [[126, "torch-tensor-arcsinh"]], "torch.Tensor.asinh": [[141, "torch-tensor-asinh"]], "torch.Tensor.addmm": [[104, "torch-tensor-addmm"]], "torch.Tensor.addmv_": [[107, "torch-tensor-addmv"]], "torch.Tensor.atan2_": [[145, "torch-tensor-atan2"]], "torch.Tensor.arctanh": [[131, "torch-tensor-arctanh"]], "torch.Tensor.as_strided": [[137, "torch-tensor-as-strided"]], "torch.Tensor.addmm_": [[105, "torch-tensor-addmm"]], "torch.Tensor.addcdiv_": [[101, "torch-tensor-addcdiv"]], "torch.Tensor.arcsin_": [[124, "torch-tensor-arcsin"]], "torch.Tensor.arcsinh": [[125, "torch-tensor-arcsinh"]], "torch.Tensor.asin": [[139, "torch-tensor-asin"]], "torch.Tensor.allclose": [[112, "torch-tensor-allclose"]], "torch.Tensor.apply_": [[118, "torch-tensor-apply"]], "torch.Tensor.adjoint": [[110, "torch-tensor-adjoint"]], "torch.Tensor.arcsin": [[123, "torch-tensor-arcsin"]], "torch.Tensor.argmin": [[134, "torch-tensor-argmin"]], "torch.Tensor.argsort": [[135, "torch-tensor-argsort"]], "torch.Tensor.amin": [[114, "torch-tensor-amin"]], "torch.Tensor.atan2": [[144, "torch-tensor-atan2"]], "torch.Tensor.addmv": [[106, "torch-tensor-addmv"]], "torch.Tensor.arctan_": [[130, "torch-tensor-arctan"]], "torch.Tensor.atan_": [[146, "torch-tensor-atan"]], "torch.Tensor.any": [[117, "torch-tensor-any"]], "torch.Tensor.addbmm": [[98, "torch-tensor-addbmm"]], "torch.Tensor.arctan2": [[128, "torch-tensor-arctan2"]], "torch.Tensor.addbmm_": [[99, "torch-tensor-addbmm"]], "torch.Tensor.arccosh": [[121, "torch-tensor-arccosh"]], "torch.Tensor.all": [[111, "torch-tensor-all"]], "torch.Tensor.arctan2_": [[129, "torch-tensor-arctan2"]], "torch.Tensor.arccos": [[119, "torch-tensor-arccos"]], "torch.Tensor.bitwise_and": [[156, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_and_": [[157, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_xor": [[166, "torch-tensor-bitwise-xor"]], "torch.Tensor.clip_": [[187, "torch-tensor-clip"]], "torch.Tensor.bitwise_left_shift": [[158, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.conj": [[191, "torch-tensor-conj"]], "torch.Tensor.atanh_": [[148, "torch-tensor-atanh"]], "torch.Tensor.backward": [[149, "torch-tensor-backward"]], "torch.Tensor.baddbmm": [[150, "torch-tensor-baddbmm"]], "torch.Tensor.bool": [[169, "torch-tensor-bool"]], "torch.Tensor.chunk": [[183, "torch-tensor-chunk"]], "torch.Tensor.bitwise_or_": [[163, "torch-tensor-bitwise-or"]], "torch.Tensor.coalesce": [[189, "torch-tensor-coalesce"]], "torch.Tensor.clamp": [[184, "torch-tensor-clamp"]], "torch.Tensor.baddbmm_": [[151, "torch-tensor-baddbmm"]], "torch.Tensor.conj_physical": [[192, "torch-tensor-conj-physical"]], "torch.Tensor.bincount": [[155, "torch-tensor-bincount"]], "torch.Tensor.cfloat": [[177, "torch-tensor-cfloat"]], "torch.Tensor.bitwise_not": [[160, "torch-tensor-bitwise-not"]], "torch.Tensor.clone": [[188, "torch-tensor-clone"]], "torch.Tensor.bitwise_right_shift": [[164, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.char": [[179, "torch-tensor-char"]], "torch.Tensor.bmm": [[168, "torch-tensor-bmm"]], "torch.Tensor.cholesky_solve": [[182, "torch-tensor-cholesky-solve"]], "torch.Tensor.broadcast_to": [[170, "torch-tensor-broadcast-to"]], "torch.Tensor.bitwise_left_shift_": [[159, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.ccol_indices": [[173, "torch-tensor-ccol-indices"]], "torch.Tensor.conj_physical_": [[193, "torch-tensor-conj-physical"]], "torch.Tensor.cholesky": [[180, "torch-tensor-cholesky"]], "torch.Tensor.ceil": [[175, "torch-tensor-ceil"]], "torch.Tensor.bernoulli": [[152, "torch-tensor-bernoulli"]], "torch.Tensor.clip": [[186, "torch-tensor-clip"]], "torch.Tensor.col_indices": [[190, "torch-tensor-col-indices"]], "torch.Tensor.bfloat16": [[154, "torch-tensor-bfloat16"]], "torch.Tensor.bitwise_not_": [[161, "torch-tensor-bitwise-not"]], "torch.Tensor.atanh": [[147, "torch-tensor-atanh"]], "torch.Tensor.chalf": [[178, "torch-tensor-chalf"]], "torch.Tensor.cholesky_inverse": [[181, "torch-tensor-cholesky-inverse"]], "torch.Tensor.ceil_": [[176, "torch-tensor-ceil"]], "torch.Tensor.bernoulli_": [[153, "torch-tensor-bernoulli"]], "torch.Tensor.clamp_": [[185, "torch-tensor-clamp"]], "torch.Tensor.copy_": [[195, "torch-tensor-copy"]], "torch.Tensor.bitwise_or": [[162, "torch-tensor-bitwise-or"]], "torch.Tensor.byte": [[171, "torch-tensor-byte"]], "torch.Tensor.cdouble": [[174, "torch-tensor-cdouble"]], "torch.Tensor.contiguous": [[194, "torch-tensor-contiguous"]], "torch.Tensor.cauchy_": [[172, "torch-tensor-cauchy"]], "torch.Tensor.bitwise_right_shift_": [[165, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bitwise_xor_": [[167, "torch-tensor-bitwise-xor"]], "torch.Tensor.expm1_": [[255, "torch-tensor-expm1"]], "torch.Tensor.float_power": [[266, "torch-tensor-float-power"]], "torch.Tensor.expm1": [[254, "torch-tensor-expm1"]], "torch.Tensor.floor_": [[269, "torch-tensor-floor"]], "torch.Tensor.frac_": [[277, "torch-tensor-frac"]], "torch.Tensor.erfc_": [[247, "torch-tensor-erfc"]], "torch.Tensor.frac": [[276, "torch-tensor-frac"]], "torch.Tensor.erfinv": [[248, "torch-tensor-erfinv"]], "torch.Tensor.exp": [[250, "torch-tensor-exp"]], "torch.Tensor.fix_": [[260, "torch-tensor-fix"]], "torch.Tensor.expand_as": [[253, "torch-tensor-expand-as"]], "torch.Tensor.greater": [[289, "torch-tensor-greater"]], "torch.Tensor.gcd_": [[281, "torch-tensor-gcd"]], "torch.Tensor.frexp": [[278, "torch-tensor-frexp"]], "torch.Tensor.geqrf": [[285, "torch-tensor-geqrf"]], "torch.Tensor.get_device": [[287, "torch-tensor-get-device"]], "torch.Tensor.ge": [[282, "torch-tensor-ge"]], "torch.Tensor.geometric_": [[284, "torch-tensor-geometric"]], "torch.Tensor.flatten": [[261, "torch-tensor-flatten"]], "torch.Tensor.expand": [[252, "torch-tensor-expand"]], "torch.Tensor.floor_divide_": [[271, "torch-tensor-floor-divide"]], "torch.Tensor.fill_diagonal_": [[258, "torch-tensor-fill-diagonal"]], "torch.Tensor.exponential_": [[256, "torch-tensor-exponential"]], "torch.Tensor.erfinv_": [[249, "torch-tensor-erfinv"]], "torch.Tensor.flipud": [[264, "torch-tensor-flipud"]], "torch.Tensor.fmax": [[272, "torch-tensor-fmax"]], "torch.Tensor.gather": [[279, "torch-tensor-gather"]], "torch.Tensor.greater_equal": [[291, "torch-tensor-greater-equal"]], "torch.Tensor.greater_equal_": [[292, "torch-tensor-greater-equal"]], "torch.Tensor.fill_": [[257, "torch-tensor-fill"]], "torch.Tensor.fix": [[259, "torch-tensor-fix"]], "torch.Tensor.gt": [[293, "torch-tensor-gt"]], "torch.Tensor.flip": [[262, "torch-tensor-flip"]], "torch.Tensor.ge_": [[283, "torch-tensor-ge"]], "torch.Tensor.floor": [[268, "torch-tensor-floor"]], "torch.Tensor.fmod_": [[275, "torch-tensor-fmod"]], "torch.Tensor.exp_": [[251, "torch-tensor-exp"]], "torch.Tensor.fmod": [[274, "torch-tensor-fmod"]], "torch.Tensor.erf_": [[245, "torch-tensor-erf"]], "torch.Tensor.fmin": [[273, "torch-tensor-fmin"]], "torch.Tensor.float": [[265, "torch-tensor-float"]], "torch.Tensor.gcd": [[280, "torch-tensor-gcd"]], "torch.Tensor.erfc": [[246, "torch-tensor-erfc"]], "torch.Tensor.fliplr": [[263, "torch-tensor-fliplr"]], "torch.Tensor.ger": [[286, "torch-tensor-ger"]], "torch.Tensor.floor_divide": [[270, "torch-tensor-floor-divide"]], "torch.Tensor.greater_": [[290, "torch-tensor-greater"]], "torch.Tensor.grad": [[288, "torch-tensor-grad"]], "torch.Tensor.float_power_": [[267, "torch-tensor-float-power"]], "torch.Tensor.histc": [[298, "torch-tensor-histc"]], "torch.Tensor.is_shared": [[338, "torch-tensor-is-shared"]], "torch.Tensor.i0_": [[304, "torch-tensor-i0"]], "torch.Tensor.is_contiguous": [[329, "torch-tensor-is-contiguous"]], "torch.Tensor.isclose": [[342, "torch-tensor-isclose"]], "torch.Tensor.is_sparse": [[340, "torch-tensor-is-sparse"]], "torch.Tensor.index_reduce": [[318, "torch-tensor-index-reduce"]], "torch.Tensor.is_inference": [[332, "torch-tensor-is-inference"]], "torch.Tensor.index_put_": [[317, "torch-tensor-index-put"]], "torch.Tensor.is_conj": [[328, "torch-tensor-is-conj"]], "torch.Tensor.index_select": [[320, "torch-tensor-index-select"]], "torch.Tensor.histogram": [[299, "torch-tensor-histogram"]], "torch.Tensor.igamma_": [[306, "torch-tensor-igamma"]], "torch.Tensor.int_repr": [[324, "torch-tensor-int-repr"]], "torch.Tensor.is_quantized": [[336, "torch-tensor-is-quantized"]], "torch.Tensor.index_reduce_": [[319, "torch-tensor-index-reduce"]], "torch.Tensor.index_copy_": [[313, "torch-tensor-index-copy"]], "torch.Tensor.is_sparse_csr": [[341, "torch-tensor-is-sparse-csr"]], "torch.Tensor.hypot": [[301, "torch-tensor-hypot"]], "torch.Tensor.index_add_": [[311, "torch-tensor-index-add"]], "torch.Tensor.index_fill": [[314, "torch-tensor-index-fill"]], "torch.Tensor.i0": [[303, "torch-tensor-i0"]], "torch.Tensor.is_cuda": [[330, "torch-tensor-is-cuda"]], "torch.Tensor.inner": [[322, "torch-tensor-inner"]], "torch.Tensor.igammac": [[307, "torch-tensor-igammac"]], "torch.Tensor.hypot_": [[302, "torch-tensor-hypot"]], "torch.Tensor.is_complex": [[327, "torch-tensor-is-complex"]], "torch.Tensor.half": [[295, "torch-tensor-half"]], "torch.Tensor.hardshrink": [[296, "torch-tensor-hardshrink"]], "torch.Tensor.index_put": [[316, "torch-tensor-index-put"]], "torch.Tensor.indices": [[321, "torch-tensor-indices"]], "torch.Tensor.igamma": [[305, "torch-tensor-igamma"]], "torch.Tensor.inverse": [[325, "torch-tensor-inverse"]], "torch.Tensor.heaviside": [[297, "torch-tensor-heaviside"]], "torch.Tensor.is_floating_point": [[331, "torch-tensor-is-floating-point"]], "torch.Tensor.igammac_": [[308, "torch-tensor-igammac"]], "torch.Tensor.index_fill_": [[315, "torch-tensor-index-fill"]], "torch.Tensor.is_leaf": [[333, "torch-tensor-is-leaf"]], "torch.Tensor.is_coalesced": [[326, "torch-tensor-is-coalesced"]], "torch.Tensor.is_set_to": [[337, "torch-tensor-is-set-to"]], "torch.Tensor.gt_": [[294, "torch-tensor-gt"]], "torch.Tensor.index_add": [[310, "torch-tensor-index-add"]], "torch.Tensor.is_signed": [[339, "torch-tensor-is-signed"]], "torch.Tensor.int": [[323, "torch-tensor-int"]], "torch.Tensor.hsplit": [[300, "torch-tensor-hsplit"]], "torch.Tensor.index_copy": [[312, "torch-tensor-index-copy"]], "torch.Tensor.is_meta": [[334, "torch-tensor-is-meta"]], "torch.Tensor.is_pinned": [[335, "torch-tensor-is-pinned"]], "torch.Tensor.imag": [[309, "torch-tensor-imag"]], "torch.Tensor.istft": [[349, "torch-tensor-istft"]], "torch.Tensor.log1p": [[370, "torch-tensor-log1p"]], "torch.Tensor.log_": [[374, "torch-tensor-log"]], "torch.Tensor.logical_or": [[384, "torch-tensor-logical-or"]], "torch.Tensor.item": [[350, "torch-tensor-item"]], "torch.Tensor.long": [[391, "torch-tensor-long"]], "torch.Tensor.ldexp": [[355, "torch-tensor-ldexp"]], "torch.Tensor.log10_": [[369, "torch-tensor-log10"]], "torch.Tensor.isposinf": [[347, "torch-tensor-isposinf"]], "torch.Tensor.lcm_": [[354, "torch-tensor-lcm"]], "torch.Tensor.log10": [[368, "torch-tensor-log10"]], "torch.Tensor.less_": [[362, "torch-tensor-less"]], "torch.Tensor.log2_": [[373, "torch-tensor-log2"]], "torch.Tensor.logsumexp": [[390, "torch-tensor-logsumexp"]], "torch.Tensor.less_equal_": [[364, "torch-tensor-less-equal"]], "torch.Tensor.isfinite": [[343, "torch-tensor-isfinite"]], "torch.Tensor.isreal": [[348, "torch-tensor-isreal"]], "torch.Tensor.ldexp_": [[356, "torch-tensor-ldexp"]], "torch.Tensor.lerp": [[359, "torch-tensor-lerp"]], "torch.Tensor.logical_not_": [[383, "torch-tensor-logical-not"]], "torch.Tensor.less_equal": [[363, "torch-tensor-less-equal"]], "torch.Tensor.le_": [[358, "torch-tensor-le"]], "torch.Tensor.less": [[361, "torch-tensor-less"]], "torch.Tensor.logaddexp2": [[377, "torch-tensor-logaddexp2"]], "torch.Tensor.logical_and": [[380, "torch-tensor-logical-and"]], "torch.Tensor.lgamma": [[365, "torch-tensor-lgamma"]], "torch.Tensor.logaddexp": [[376, "torch-tensor-logaddexp"]], "torch.Tensor.log": [[367, "torch-tensor-log"]], "torch.Tensor.logical_or_": [[385, "torch-tensor-logical-or"]], "torch.Tensor.logdet": [[379, "torch-tensor-logdet"]], "torch.Tensor.logical_not": [[382, "torch-tensor-logical-not"]], "torch.Tensor.isnan": [[345, "torch-tensor-isnan"]], "torch.Tensor.log_normal_": [[375, "torch-tensor-log-normal"]], "torch.Tensor.log2": [[372, "torch-tensor-log2"]], "torch.Tensor.lcm": [[353, "torch-tensor-lcm"]], "torch.Tensor.itemsize": [[351, "torch-tensor-itemsize"]], "torch.Tensor.logical_and_": [[381, "torch-tensor-logical-and"]], "torch.Tensor.log1p_": [[371, "torch-tensor-log1p"]], "torch.Tensor.kthvalue": [[352, "torch-tensor-kthvalue"]], "torch.Tensor.lerp_": [[360, "torch-tensor-lerp"]], "torch.Tensor.logcumsumexp": [[378, "torch-tensor-logcumsumexp"]], "torch.Tensor.lgamma_": [[366, "torch-tensor-lgamma"]], "torch.Tensor.logical_xor": [[386, "torch-tensor-logical-xor"]], "torch.Tensor.logical_xor_": [[387, "torch-tensor-logical-xor"]], "torch.Tensor.logit": [[388, "torch-tensor-logit"]], "torch.Tensor.isneginf": [[346, "torch-tensor-isneginf"]], "torch.Tensor.le": [[357, "torch-tensor-le"]], "torch.Tensor.logit_": [[389, "torch-tensor-logit"]], "torch.Tensor.isinf": [[344, "torch-tensor-isinf"]], "Profiling to understand torch.compile performance": [[1961, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[1961, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[1961, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[1961, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[1961, "understanding-compilation-time"]], "Finding graph breaks": [[1961, "finding-graph-breaks"]], "Launch overhead": [[1961, "launch-overhead"]], "torch.overrides": [[1964, "torch-overrides"]], "Functions": [[1964, "functions"], [1879, "functions"], [1877, "functions"], [1918, "functions"], [1935, "functions"]], "PyTorch 2.0 Performance Dashboard": [[1960, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[1960, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[1960, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[1960, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[1960, "how-can-i-run-any-performance-test-locally"]], "Type Info": [[1965, "type-info"]], "torch.finfo": [[1965, "torch-finfo"]], "torch.iinfo": [[1965, "torch-iinfo"]], "torch.utils": [[1966, "module-torch.utils"]], "PyTorch 2.0 Troubleshooting": [[1963, "pytorch-2-0-troubleshooting"]], "Title": [[1963, "id1"]], "Diagnosing Runtime Errors": [[1963, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[1963, "torchdynamo-errors"]], "Diagnosing TorchInductor Errors": [[1963, "diagnosing-torchinductor-errors"]], "Minifying TorchInductor Errors": [[1963, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[1963, "minifying-backend-compiler-errors"]], "Performance Profiling": [[1963, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[1963, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[1963, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[1963, "graph-breaks"], [1953, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[1963, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[1963, "excessive-recompilation"]], "Accuracy Debugging": [[1963, "accuracy-debugging"]], "Writing Graph Transformations on ATen IR": [[1962, "writing-graph-transformations-on-aten-ir"]], "Passes": [[1962, "passes"]], "Transformer": [[1962, "transformer"], [1477, "transformer"]], "One-to-One Pass": [[1962, "one-to-one-pass"]], "One-to-X Pass": [[1962, "one-to-x-pass"]], "One-to-None Pass": [[1962, "one-to-none-pass"]], "Utilizing Local Information": [[1962, "utilizing-local-information"]], "Subgraph Rewriter": [[1962, "subgraph-rewriter"]], "Pass Manager": [[1962, "pass-manager"]], "Partitioner": [[1962, "partitioner"]], "Subgraph Matcher": [[1962, "subgraph-matcher"]], "Capability Based Partitioner": [[1962, "capability-based-partitioner"]], "torch.swapaxes": [[1824, "torch-swapaxes"]], "torch.trace": [[1841, "torch-trace"]], "torch.triu_indices": [[1849, "torch-triu-indices"]], "torch.unique": [[1854, "torch-unique"]], "torch.take": [[1832, "torch-take"]], "torch.std_mean": [[1817, "torch-std-mean"]], "torch.trapz": [[1844, "torch-trapz"]], "torch.take_along_dim": [[1833, "torch-take-along-dim"]], "torch.trunc": [[1851, "torch-trunc"]], "torch.sym_float": [[1826, "torch-sym-float"]], "torch.utils.rename_privateuse1_backend": [[1860, "torch-utils-rename-privateuse1-backend"]], "torch.trapezoid": [[1843, "torch-trapezoid"]], "torch.unique_consecutive": [[1855, "torch-unique-consecutive"]], "torch.svd": [[1822, "torch-svd"]], "torch.subtract": [[1820, "torch-subtract"]], "torch.sub": [[1819, "torch-sub"]], "torch.t": [[1831, "torch-t"]], "torch.tensor": [[1836, "torch-tensor"]], "torch.triu": [[1848, "torch-triu"]], "torch.squeeze": [[1813, "torch-squeeze"]], "torch.sspaddmm": [[1814, "torch-sspaddmm"]], "torch.sym_min": [[1829, "torch-sym-min"]], "torch.tensor_split": [[1837, "torch-tensor-split"]], "torch.triangular_solve": [[1845, "torch-triangular-solve"]], "torch.true_divide": [[1850, "torch-true-divide"]], "torch.unflatten": [[1853, "torch-unflatten"]], "torch.sum": [[1821, "torch-sum"]], "torch.sym_max": [[1828, "torch-sym-max"]], "torch.tanh": [[1835, "torch-tanh"]], "torch.std": [[1816, "torch-std"]], "torch.tril_indices": [[1847, "torch-tril-indices"]], "torch.transpose": [[1842, "torch-transpose"]], "torch.use_deterministic_algorithms": [[1857, "torch-use-deterministic-algorithms"]], "torch.stack": [[1815, "torch-stack"]], "torch.unsqueeze": [[1856, "torch-unsqueeze"]], "torch.tan": [[1834, "torch-tan"]], "torch.tril": [[1846, "torch-tril"]], "torch.topk": [[1840, "torch-topk"]], "torch.sym_int": [[1827, "torch-sym-int"]], "torch.unbind": [[1852, "torch-unbind"]], "torch.utils.get_cpp_backtrace": [[1859, "torch-utils-get-cpp-backtrace"]], "torch.tensordot": [[1838, "torch-tensordot"]], "torch.swapdims": [[1825, "torch-swapdims"]], "torch.utils.set_module": [[1861, "torch-utils-set-module"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1858, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.tile": [[1839, "torch-tile"]], "torch.sym_not": [[1830, "torch-sym-not"]], "torch.svd_lowrank": [[1823, "torch-svd-lowrank"]], "torch.stft": [[1818, "torch-stft"]], "torch.quantized_max_pool1d": [[1726, "torch-quantized-max-pool1d"]], "torch.promote_types": [[1720, "torch-promote-types"]], "torch.result_type": [[1747, "torch-result-type"]], "torch.seed": [[1758, "torch-seed"]], "torch.select_scatter": [[1760, "torch-select-scatter"]], "torch.pow": [[1718, "torch-pow"]], "torch.reshape": [[1744, "torch-reshape"]], "torch.polygamma": [[1716, "torch-polygamma"]], "torch.set_default_tensor_type": [[1763, "torch-set-default-tensor-type"]], "torch.quantize_per_tensor": [[1724, "torch-quantize-per-tensor"]], "torch.rand_like": [[1731, "torch-rand-like"]], "torch.save": [[1753, "torch-save"]], "torch.positive": [[1717, "torch-positive"]], "torch.randint": [[1732, "torch-randint"]], "torch.randn_like": [[1735, "torch-randn-like"]], "torch.randperm": [[1736, "torch-randperm"]], "torch.ravel": [[1738, "torch-ravel"]], "torch.round": [[1750, "torch-round"]], "torch.rsqrt": [[1752, "torch-rsqrt"]], "torch.remainder": [[1741, "torch-remainder"]], "torch.scatter": [[1754, "torch-scatter"]], "torch.randint_like": [[1733, "torch-randint-like"]], "torch.resolve_neg": [[1746, "torch-resolve-neg"]], "torch.prod": [[1719, "torch-prod"]], "torch.randn": [[1734, "torch-randn"]], "torch.roll": [[1748, "torch-roll"]], "torch.set_default_device": [[1761, "torch-set-default-device"]], "torch.polar": [[1715, "torch-polar"]], "SobolEngine": [[1728, "sobolengine"]], "torch.real": [[1739, "torch-real"]], "torch.set_default_dtype": [[1762, "torch-set-default-dtype"]], "torch.resolve_conj": [[1745, "torch-resolve-conj"]], "torch.scatter_add": [[1755, "torch-scatter-add"]], "torch.renorm": [[1742, "torch-renorm"]], "torch.rad2deg": [[1729, "torch-rad2deg"]], "torch.qr": [[1721, "torch-qr"]], "torch.searchsorted": [[1757, "torch-searchsorted"]], "torch.repeat_interleave": [[1743, "torch-repeat-interleave"]], "torch.quantized_batch_norm": [[1725, "torch-quantized-batch-norm"]], "torch.quantile": [[1722, "torch-quantile"]], "torch.range": [[1737, "torch-range"]], "torch.scatter_reduce": [[1756, "torch-scatter-reduce"]], "torch.rand": [[1730, "torch-rand"]], "torch.row_stack": [[1751, "torch-row-stack"]], "torch.select": [[1759, "torch-select"]], "torch.quantized_max_pool2d": [[1727, "torch-quantized-max-pool2d"]], "torch.reciprocal": [[1740, "torch-reciprocal"]], "torch.rot90": [[1749, "torch-rot90"]], "torch.quantize_per_channel": [[1723, "torch-quantize-per-channel"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[70, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "torch.Tensor.acosh_": [[95, "torch-tensor-acosh"]], "DIAGSYS0001:arg-format-too-verbose": [[66, "diagsys0001-arg-format-too-verbose"]], "FXE0003:fx-frontend-aotautograd": [[69, "fxe0003-fx-frontend-aotautograd"]], "python.assert": [[56, "python-assert"]], "dynamic_shape_assert": [[56, "dynamic-shape-assert"], [55, "dynamic-shape-assert"]], "list_contains": [[56, "list-contains"], [61, "list-contains"], [63, "list-contains"], [55, "list-contains"]], "POE0004:operator-supported-in-newer-opset-version": [[86, "poe0004-operator-supported-in-newer-opset-version"]], "FXE0014:find-opschema-matched-symbolic-function": [[80, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.func Whirlwind Tour": [[52, "torch-func-whirlwind-tour"]], "What is torch.func?": [[52, "what-is-torch-func"]], "Why composable function transforms?": [[52, "why-composable-function-transforms"], [47, "why-composable-function-transforms"]], "What are the transforms?": [[52, "what-are-the-transforms"]], "grad() (gradient computation)": [[52, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[52, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[52, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[52, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[52, "jacrev-jacfwd-and-hessian"]], "torch.escape-hatch": [[64, "torch-escape-hatch"]], "assume_constant_result": [[64, "assume-constant-result"], [55, "assume-constant-result"]], "FXE0008:fx-node-to-onnx": [[74, "fxe0008-fx-node-to-onnx"]], "POE0001:node-missing-onnx-shape-inference": [[83, "poe0001-node-missing-onnx-shape-inference"]], "torch.Tensor.add_": [[97, "torch-tensor-add"]], "torch.map": [[65, "torch-map"]], "dynamic_shape_map": [[65, "dynamic-shape-map"], [63, "dynamic-shape-map"], [55, "dynamic-shape-map"]], "torch.futures": [[53, "torch-futures"]], "torch.fx": [[54, "torch-fx"]], "Overview": [[54, "module-torch.fx"], [17, "module-torch.cuda._sanitizer"], [1919, "overview"], [1949, "overview"], [1924, "module-torch.profiler"]], "Writing Transformations": [[54, "writing-transformations"]], "A Quick Primer on Graphs": [[54, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[54, "graph-manipulation"]], "Direct Graph Manipulation": [[54, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[54, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[54, "graph-manipulation-examples"]], "Proxy/Retracing": [[54, "proxy-retracing"]], "The Interpreter Pattern": [[54, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[54, "examples-of-the-interpreter-pattern"]], "Debugging": [[54, "debugging"], [1877, "debugging"]], "Introduction": [[54, "introduction"], [1887, "introduction"], [1895, "introduction"]], "Common Pitfalls in Transform Authoring": [[54, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[54, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[54, "debugging-the-generated-code"]], "Use pdb": [[54, "use-pdb"]], "Print the Generated Code": [[54, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[54, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[54, "debugging-the-transformation"]], "Available Debuggers": [[54, "available-debuggers"]], "Limitations of Symbolic Tracing": [[54, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[54, "dynamic-control-flow"]], "Static Control Flow": [[54, "static-control-flow"]], "Non-torch Functions": [[54, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[54, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[54, "leaf-modules"]], "Miscellanea": [[54, "miscellanea"]], "API Reference": [[54, "api-reference"], [1890, "module-torch.monitor"], [17, "api-reference"], [1922, "api-reference"], [1919, "api-reference"], [1924, "api-reference"]], "torch.Tensor.acos": [[92, "torch-tensor-acos"]], "FXE0011:no-symbolic-function-for-call-function": [[77, "fxe0011-no-symbolic-function-for-call-function"]], "FXE0006:atenlib-symbolic-function": [[72, "fxe0006-atenlib-symbolic-function"]], "POE0002:missing-custom-symbolic-function": [[84, "poe0002-missing-custom-symbolic-function"]], "FXE0005:fx-ir-add-node": [[71, "fxe0005-fx-ir-add-node"]], "FXE0010:fx-pass": [[76, "fxe0010-fx-pass"]], "FXE0015:fx-node-insert-type-promotion": [[81, "fxe0015-fx-node-insert-type-promotion"]], "python.control-flow": [[60, "python-control-flow"]], "dynamic_shape_if_guard": [[60, "dynamic-shape-if-guard"], [63, "dynamic-shape-if-guard"], [55, "dynamic-shape-if-guard"]], "list_unpack": [[60, "list-unpack"], [61, "list-unpack"], [55, "list-unpack"]], "static_for_loop": [[60, "static-for-loop"], [55, "static-for-loop"]], "static_if": [[60, "static-if"], [55, "static-if"]], "python.context-manager": [[59, "python-context-manager"]], "null_context_manager": [[59, "null-context-manager"], [55, "null-context-manager"]], "torch.Tensor.add": [[96, "torch-tensor-add"]], "python.data-structure": [[61, "python-data-structure"]], "dictionary": [[61, "dictionary"], [55, "dictionary"]], "fn_with_kwargs": [[61, "fn-with-kwargs"], [55, "fn-with-kwargs"]], "POE0003:missing-standard-symbolic-function": [[85, "poe0003-missing-standard-symbolic-function"]], "FXE0009:fx-frontend-dynamo-make-fx": [[75, "fxe0009-fx-frontend-dynamo-make-fx"]], "FXE0001:fx-tracer-success": [[67, "fxe0001-fx-tracer-success"]], "FXE0002:fx-tracer-failure": [[68, "fxe0002-fx-tracer-failure"]], "torch.Tensor.abs": [[88, "torch-tensor-abs"]], "Patching Batch Norm": [[49, "patching-batch-norm"]], "What\u2019s happening?": [[49, "what-s-happening"]], "How to fix": [[49, "how-to-fix"]], "Option 1: Change the BatchNorm": [[49, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[49, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[49, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[49, "option-4-eval-mode"]], "torch.Tensor.acos_": [[93, "torch-tensor-acos"]], "FXE0013:op-level-debugging": [[79, "fxe0013-op-level-debugging"]], "torch.Tensor.acosh": [[94, "torch-tensor-acosh"]], "Generator": [[87, "generator"]], "torch.dynamic-shape": [[63, "torch-dynamic-shape"]], "cond_branch_class_method": [[63, "cond-branch-class-method"], [62, "cond-branch-class-method"], [55, "cond-branch-class-method"]], "cond_branch_nested_function": [[63, "cond-branch-nested-function"], [62, "cond-branch-nested-function"], [55, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[63, "cond-branch-nonlocal-variables"], [62, "cond-branch-nonlocal-variables"], [55, "cond-branch-nonlocal-variables"]], "cond_operands": [[63, "cond-operands"], [62, "cond-operands"], [55, "cond-operands"]], "cond_predicate": [[63, "cond-predicate"], [62, "cond-predicate"], [55, "cond-predicate"]], "dynamic_shape_constructor": [[63, "dynamic-shape-constructor"], [55, "dynamic-shape-constructor"]], "dynamic_shape_round": [[63, "dynamic-shape-round"], [57, "dynamic-shape-round"], [55, "dynamic-shape-round"]], "dynamic_shape_slicing": [[63, "dynamic-shape-slicing"], [55, "dynamic-shape-slicing"]], "dynamic_shape_view": [[63, "dynamic-shape-view"], [55, "dynamic-shape-view"]], "scalar_output": [[63, "scalar-output"], [55, "scalar-output"]], "torch.Tensor.absolute_": [[91, "torch-tensor-absolute"]], "python.builtin": [[57, "python-builtin"]], "tensor_setattr": [[57, "tensor-setattr"], [55, "tensor-setattr"]], "type_reflection_method": [[57, "type-reflection-method"], [55, "type-reflection-method"]], "torch.Tensor.abs_": [[89, "torch-tensor-abs"]], "torch.cond": [[62, "torch-cond"]], "cond_closed_over_variable": [[62, "cond-closed-over-variable"], [55, "cond-closed-over-variable"], [58, "cond-closed-over-variable"]], "torch.Tensor.absolute": [[90, "torch-tensor-absolute"]], "ExportDB": [[55, "exportdb"]], "Tags": [[55, null]], "Supported": [[55, "supported"]], "autograd_function": [[55, "autograd-function"]], "class_method": [[55, "class-method"]], "decorator": [[55, "decorator"]], "nested_function": [[55, "nested-function"], [58, "nested-function"]], "pytree_flatten": [[55, "pytree-flatten"]], "specialized_attribute": [[55, "specialized-attribute"]], "Not Supported Yet": [[55, "not-supported-yet"]], "FXE0007:atenlib-fx-to-onnx": [[73, "fxe0007-atenlib-fx-to-onnx"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[82, "fxe0016-find-operator-overloads-in-onnx-registry"]], "UX Limitations": [[51, "ux-limitations"]], "General limitations": [[51, "general-limitations"]], "torch.autograd APIs": [[51, "torch-autograd-apis"]], "vmap limitations": [[51, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[51, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[51, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[51, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[51, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[51, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[51, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[51, "randomness"]], "python.closure": [[58, "python-closure"]], "FXE0012:unsupported-fx-node-analysis": [[78, "fxe0012-unsupported-fx-node-analysis"]], "Migrating from functorch to torch.func": [[50, "migrating-from-functorch-to-torch-func"]], "function transforms": [[50, "function-transforms"]], "NN module utilities": [[50, "nn-module-utilities"]], "functorch.make_functional": [[50, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[50, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[50, "functorch-compile"]], "torch.signal.windows.general_hamming": [[1782, "torch-signal-windows-general-hamming"]], "torch.sparse_csc_tensor": [[1808, "torch-sparse-csc-tensor"]], "torch.signal.windows.hamming": [[1783, "torch-signal-windows-hamming"]], "torch.signal.windows.nuttall": [[1786, "torch-signal-windows-nuttall"]], "torch.smm": [[1793, "torch-smm"]], "torch.set_warn_always": [[1772, "torch-set-warn-always"]], "torch.sgn": [[1773, "torch-sgn"]], "torch.sigmoid": [[1774, "torch-sigmoid"]], "torch.signal.windows.kaiser": [[1785, "torch-signal-windows-kaiser"]], "torch.signbit": [[1787, "torch-signbit"]], "torch.sign": [[1775, "torch-sign"]], "set_grad_enabled": [[1767, "set-grad-enabled"]], "torch.slogdet": [[1792, "torch-slogdet"]], "torch.split": [[1810, "torch-split"]], "torch.sparse_bsc_tensor": [[1804, "torch-sparse-bsc-tensor"]], "torch.sparse.log_softmax": [[1798, "torch-sparse-log-softmax"]], "torch.set_flush_denormal": [[1766, "torch-set-flush-denormal"]], "torch.sort": [[1795, "torch-sort"]], "torch.sparse.softmax": [[1801, "torch-sparse-softmax"]], "torch.set_printoptions": [[1770, "torch-set-printoptions"]], "torch.sqrt": [[1811, "torch-sqrt"]], "torch.sparse.spdiags": [[1802, "torch-sparse-spdiags"]], "torch.sparse_compressed_tensor": [[1806, "torch-sparse-compressed-tensor"]], "torch.signal.windows.exponential": [[1779, "torch-signal-windows-exponential"]], "torch.square": [[1812, "torch-square"]], "torch.signal.windows.blackman": [[1777, "torch-signal-windows-blackman"]], "torch.softmax": [[1794, "torch-softmax"]], "torch.sparse_bsr_tensor": [[1805, "torch-sparse-bsr-tensor"]], "torch.sparse_coo_tensor": [[1807, "torch-sparse-coo-tensor"]], "check_sparse_tensor_invariants": [[1797, "check-sparse-tensor-invariants"]], "torch.signal.windows.general_cosine": [[1781, "torch-signal-windows-general-cosine"]], "torch.signal.windows.hann": [[1784, "torch-signal-windows-hann"]], "torch.set_float32_matmul_precision": [[1765, "torch-set-float32-matmul-precision"]], "torch.set_num_interop_threads": [[1768, "torch-set-num-interop-threads"]], "torch.signal.windows.gaussian": [[1780, "torch-signal-windows-gaussian"]], "torch.sinh": [[1790, "torch-sinh"]], "torch.slice_scatter": [[1791, "torch-slice-scatter"]], "torch.sparse_csr_tensor": [[1809, "torch-sparse-csr-tensor"]], "torch.sparse.addmm": [[1796, "torch-sparse-addmm"]], "torch.sparse.mm": [[1799, "torch-sparse-mm"]], "torch.sparse.sampled_addmm": [[1800, "torch-sparse-sampled-addmm"]], "torch.sinc": [[1789, "torch-sinc"]], "torch.set_rng_state": [[1771, "torch-set-rng-state"]], "torch.set_deterministic_debug_mode": [[1764, "torch-set-deterministic-debug-mode"]], "torch.signal.windows.cosine": [[1778, "torch-signal-windows-cosine"]], "torch.set_num_threads": [[1769, "torch-set-num-threads"]], "torch.sin": [[1788, "torch-sin"]], "torch.signal.windows.bartlett": [[1776, "torch-signal-windows-bartlett"]], "torch.sparse.sum": [[1803, "torch-sparse-sum"]], "torch.nn.functional.upsample_nearest": [[1604, "torch-nn-functional-upsample-nearest"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1611, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.relu6": [[1579, "torch-nn-functional-relu6"]], "torch.nn.functional.silu": [[1586, "torch-nn-functional-silu"]], "torch.nn.functional.unfold": [[1601, "torch-nn-functional-unfold"]], "torch.nn.functional.threshold": [[1596, "torch-nn-functional-threshold"]], "torch.nn.functional.poisson_nll_loss": [[1576, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.modules.module.register_module_forward_hook": [[1608, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.functional.one_hot": [[1570, "torch-nn-functional-one-hot"]], "torch.nn.functional.soft_margin_loss": [[1588, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1598, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.tanhshrink": [[1595, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1600, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.rrelu_": [[1582, "torch-nn-functional-rrelu"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1610, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.functional.pad": [[1571, "torch-nn-functional-pad"]], "torch.nn.functional.relu_": [[1580, "torch-nn-functional-relu"]], "torch.nn.functional.threshold_": [[1597, "torch-nn-functional-threshold"]], "torch.nn.functional.relu": [[1578, "torch-nn-functional-relu"]], "torch.nn.functional.normalize": [[1569, "torch-nn-functional-normalize"]], "torch.nn.functional.upsample": [[1602, "torch-nn-functional-upsample"]], "UninitializedBuffer": [[1616, "uninitializedbuffer"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1613, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "DistributedDataParallel": [[1614, "distributeddataparallel"], [1904, "distributeddataparallel"]], "torch.nn.functional.softmin": [[1590, "torch-nn-functional-softmin"]], "torch.nn.modules.module.register_module_backward_hook": [[1606, "torch-nn-modules-module-register-module-backward-hook"]], "LazyModuleMixin": [[1605, "lazymodulemixin"]], "torch.nn.functional.softplus": [[1591, "torch-nn-functional-softplus"]], "Parameter": [[1615, "parameter"]], "torch.nn.functional.pairwise_distance": [[1572, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.pixel_shuffle": [[1574, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.prelu": [[1577, "torch-nn-functional-prelu"]], "torch.nn.functional.scaled_dot_product_attention": [[1583, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.triplet_margin_loss": [[1599, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1612, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.smooth_l1_loss": [[1587, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softsign": [[1593, "torch-nn-functional-softsign"]], "torch.nn.functional.sigmoid": [[1585, "torch-nn-functional-sigmoid"]], "torch.nn.functional.tanh": [[1594, "torch-nn-functional-tanh"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1609, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.pixel_unshuffle": [[1575, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.pdist": [[1573, "torch-nn-functional-pdist"]], "torch.nn.functional.rrelu": [[1581, "torch-nn-functional-rrelu"]], "torch.nn.functional.softmax": [[1589, "torch-nn-functional-softmax"]], "torch.nn.functional.selu": [[1584, "torch-nn-functional-selu"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1607, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.nll_loss": [[1568, "torch-nn-functional-nll-loss"]], "torch.nn.functional.upsample_bilinear": [[1603, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.softshrink": [[1592, "torch-nn-functional-softshrink"]], "BasePruningMethod": [[1628, "basepruningmethod"]], "CustomFromMask": [[1629, "customfrommask"]], "torch.nn.utils.clip_grad_norm_": [[1618, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.prune.remove": [[1644, "torch-nn-utils-prune-remove"]], "torch.nn.utils.remove_spectral_norm": [[1645, "torch-nn-utils-remove-spectral-norm"]], "torch.nn.utils.rnn.pad_sequence": [[1651, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.prune.is_pruned": [[1639, "torch-nn-utils-prune-is-pruned"]], "torch.normal": [[1662, "torch-normal"]], "torch.nn.utils.parametrizations.spectral_norm": [[1622, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.utils.stateless.functional_call": [[1656, "torch-nn-utils-stateless-functional-call"]], "torch.nn.utils.remove_weight_norm": [[1646, "torch-nn-utils-remove-weight-norm"]], "torch.nn.utils.parametrize.cached": [[1624, "torch-nn-utils-parametrize-cached"]], "UninitializedParameter": [[1617, "uninitializedparameter"]], "torch.nn.utils.prune.custom_from_mask": [[1636, "torch-nn-utils-prune-custom-from-mask"]], "no_grad": [[1659, "no-grad"]], "torch.nonzero": [[1660, "torch-nonzero"]], "torch.nn.utils.rnn.unpack_sequence": [[1652, "torch-nn-utils-rnn-unpack-sequence"]], "torch.numel": [[1664, "torch-numel"]], "torch.nn.utils.spectral_norm": [[1655, "torch-nn-utils-spectral-norm"]], "Identity": [[1630, "identity"], [1396, "identity"]], "torch.nn.utils.parametrize.register_parametrization": [[1626, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1650, "torch-nn-utils-rnn-pad-packed-sequence"]], "L1Unstructured": [[1631, "l1unstructured"]], "PruningContainer": [[1633, "pruningcontainer"]], "RandomStructured": [[1634, "randomstructured"]], "torch.nn.utils.parameters_to_vector": [[1620, "torch-nn-utils-parameters-to-vector"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1627, "torch-nn-utils-parametrize-remove-parametrizations"]], "ParametrizationList": [[1623, "parametrizationlist"]], "torch.nn.utils.clip_grad_value_": [[1619, "torch-nn-utils-clip-grad-value"]], "torch.nn.utils.parametrize.is_parametrized": [[1625, "torch-nn-utils-parametrize-is-parametrized"]], "torch.ones": [[1665, "torch-ones"]], "LnStructured": [[1632, "lnstructured"]], "torch.nn.utils.prune.random_unstructured": [[1643, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.parametrizations.orthogonal": [[1621, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.prune.global_unstructured": [[1637, "torch-nn-utils-prune-global-unstructured"]], "RandomUnstructured": [[1635, "randomunstructured"]], "torch.nn.utils.prune.ln_structured": [[1641, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.rnn.unpad_sequence": [[1653, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.weight_norm": [[1658, "torch-nn-utils-weight-norm"]], "torch.nn.utils.vector_to_parameters": [[1657, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.rnn.pack_sequence": [[1649, "torch-nn-utils-rnn-pack-sequence"]], "torch.norm": [[1661, "torch-norm"]], "torch.not_equal": [[1663, "torch-not-equal"]], "PackedSequence": [[1647, "packedsequence"]], "torch.nn.utils.prune.random_structured": [[1642, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.prune.identity": [[1638, "torch-nn-utils-prune-identity"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1648, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.prune.l1_unstructured": [[1640, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.skip_init": [[1654, "torch-nn-utils-skip-init"]], "torch.nn.functional.feature_alpha_dropout": [[1526, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.multilabel_margin_loss": [[1566, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.group_norm": [[1534, "torch-nn-functional-group-norm"]], "torch.nn.functional.embedding": [[1524, "torch-nn-functional-embedding"]], "torch.nn.functional.max_unpool2d": [[1561, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1567, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.hardsigmoid": [[1537, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.mse_loss": [[1564, "torch-nn-functional-mse-loss"]], "torch.nn.functional.grid_sample": [[1533, "torch-nn-functional-grid-sample"]], "torch.nn.functional.interpolate": [[1544, "torch-nn-functional-interpolate"]], "torch.nn.functional.dropout2d": [[1520, "torch-nn-functional-dropout2d"]], "torch.nn.functional.lp_pool2d": [[1555, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.fractional_max_pool2d": [[1528, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.leaky_relu": [[1548, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.gelu": [[1531, "torch-nn-functional-gelu"]], "torch.nn.functional.logsigmoid": [[1553, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.max_pool1d": [[1557, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.layer_norm": [[1547, "torch-nn-functional-layer-norm"]], "torch.nn.functional.leaky_relu_": [[1549, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.max_unpool1d": [[1560, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.log_softmax": [[1552, "torch-nn-functional-log-softmax"]], "torch.nn.functional.hinge_embedding_loss": [[1541, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.huber_loss": [[1542, "torch-nn-functional-huber-loss"]], "torch.nn.functional.gaussian_nll_loss": [[1530, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.fold": [[1527, "torch-nn-functional-fold"]], "torch.nn.functional.instance_norm": [[1543, "torch-nn-functional-instance-norm"]], "torch.nn.functional.multi_margin_loss": [[1565, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.max_unpool3d": [[1562, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.max_pool3d": [[1559, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.hardshrink": [[1536, "torch-nn-functional-hardshrink"]], "torch.nn.functional.glu": [[1532, "torch-nn-functional-glu"]], "torch.nn.functional.dropout3d": [[1521, "torch-nn-functional-dropout3d"]], "torch.nn.functional.gumbel_softmax": [[1535, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.local_response_norm": [[1551, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.lp_pool1d": [[1554, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.hardtanh_": [[1540, "torch-nn-functional-hardtanh"]], "torch.nn.functional.linear": [[1550, "torch-nn-functional-linear"]], "torch.nn.functional.hardtanh": [[1539, "torch-nn-functional-hardtanh"]], "torch.nn.functional.kl_div": [[1545, "torch-nn-functional-kl-div"]], "torch.nn.functional.mish": [[1563, "torch-nn-functional-mish"]], "torch.nn.functional.margin_ranking_loss": [[1556, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.dropout1d": [[1519, "torch-nn-functional-dropout1d"]], "torch.nn.functional.hardswish": [[1538, "torch-nn-functional-hardswish"]], "torch.nn.functional.l1_loss": [[1546, "torch-nn-functional-l1-loss"]], "torch.nn.functional.fractional_max_pool3d": [[1529, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.max_pool2d": [[1558, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.elu": [[1522, "torch-nn-functional-elu"]], "torch.nn.functional.embedding_bag": [[1525, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.elu_": [[1523, "torch-nn-functional-elu"]], "Threshold": [[1476, "threshold"]], "torch.nn.functional.conv3d": [[1510, "torch-nn-functional-conv3d"]], "TripletMarginLoss": [[1482, "tripletmarginloss"]], "TransformerEncoderLayer": [[1481, "transformerencoderlayer"]], "Unfold": [[1485, "unfold"]], "torch.nn.functional.conv_transpose1d": [[1511, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1494, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.dropout": [[1518, "torch-nn-functional-dropout"]], "UpsamplingBilinear2d": [[1487, "upsamplingbilinear2d"]], "torch.nn.functional.ctc_loss": [[1517, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.conv_transpose2d": [[1512, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.cross_entropy": [[1516, "torch-nn-functional-cross-entropy"]], "SyncBatchNorm": [[1473, "syncbatchnorm"]], "torch.nn.functional.adaptive_avg_pool1d": [[1492, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.celu": [[1507, "torch-nn-functional-celu"]], "Softplus": [[1470, "softplus"]], "torch.nn.functional.binary_cross_entropy": [[1505, "torch-nn-functional-binary-cross-entropy"]], "TripletMarginWithDistanceLoss": [[1483, "tripletmarginwithdistanceloss"]], "TransformerDecoderLayer": [[1479, "transformerdecoderlayer"]], "ZeroPad1d": [[1489, "zeropad1d"]], "torch.nn.functional.conv_transpose3d": [[1513, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.bilinear": [[1504, "torch-nn-functional-bilinear"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1506, "torch-nn-functional-binary-cross-entropy-with-logits"]], "Softsign": [[1472, "softsign"]], "torch.nn.functional.batch_norm": [[1503, "torch-nn-functional-batch-norm"]], "torch.nn.functional.conv1d": [[1508, "torch-nn-functional-conv1d"]], "torch.nn.functional.avg_pool1d": [[1500, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.avg_pool2d": [[1501, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.adaptive_max_pool1d": [[1495, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.cosine_embedding_loss": [[1514, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.adaptive_avg_pool2d": [[1493, "torch-nn-functional-adaptive-avg-pool2d"]], "ZeroPad2d": [[1490, "zeropad2d"]], "torch.nn.functional.affine_grid": [[1498, "torch-nn-functional-affine-grid"]], "Upsample": [[1486, "upsample"]], "torch.nn.functional.avg_pool3d": [[1502, "torch-nn-functional-avg-pool3d"]], "TransformerDecoder": [[1478, "transformerdecoder"]], "Tanhshrink": [[1475, "tanhshrink"]], "torch.nn.functional.adaptive_max_pool3d": [[1497, "torch-nn-functional-adaptive-max-pool3d"]], "Tanh": [[1474, "tanh"]], "torch.nn.functional.cosine_similarity": [[1515, "torch-nn-functional-cosine-similarity"]], "UpsamplingNearest2d": [[1488, "upsamplingnearest2d"]], "torch.nn.functional.adaptive_max_pool2d": [[1496, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.conv2d": [[1509, "torch-nn-functional-conv2d"]], "TransformerEncoder": [[1480, "transformerencoder"]], "torch.nn.functional.alpha_dropout": [[1499, "torch-nn-functional-alpha-dropout"]], "Softshrink": [[1471, "softshrink"]], "Unflatten": [[1484, "unflatten"]], "ZeroPad3d": [[1491, "zeropad3d"]], "AdamW": [[1679, "adamw"]], "OnnxExporterError": [[1671, "onnxexportererror"]], "LBFGS": [[1681, "lbfgs"]], "CosineAnnealingLR": [[1695, "cosineannealinglr"]], "VerificationOptions": [[1674, "verificationoptions"]], "torch.ones_like": [[1666, "torch-ones-like"]], "Adam": [[1678, "adam"]], "torch.optim.Optimizer.zero_grad": [[1687, "torch-optim-optimizer-zero-grad"]], "LinearLR": [[1700, "linearlr"]], "OneCycleLR": [[1703, "onecyclelr"]], "torch.poisson": [[1714, "torch-poisson"]], "CyclicLR": [[1697, "cycliclr"]], "torch.optim.Optimizer.add_param_group": [[1683, "torch-optim-optimizer-add-param-group"]], "torch.outer": [[1710, "torch-outer"]], "SGD": [[1691, "sgd"]], "MultiplicativeLR": [[1702, "multiplicativelr"]], "ReduceLROnPlateau": [[1705, "reducelronplateau"]], "ASGD": [[1675, "asgd"]], "Adagrad": [[1677, "adagrad"]], "ExportOptions": [[1667, "exportoptions"]], "torch.ormqr": [[1709, "torch-ormqr"]], "torch.orgqr": [[1708, "torch-orgqr"]], "CosineAnnealingWarmRestarts": [[1696, "cosineannealingwarmrestarts"]], "MultiStepLR": [[1701, "multisteplr"]], "StepLR": [[1707, "steplr"]], "torch.permute": [[1712, "torch-permute"]], "PolynomialLR": [[1704, "polynomiallr"]], "GraphInfo": [[1673, "graphinfo"]], "RMSprop": [[1689, "rmsprop"]], "ExportOutputSerializer": [[1669, "exportoutputserializer"]], "LambdaLR": [[1699, "lambdalr"]], "NAdam": [[1682, "nadam"]], "SequentialLR": [[1706, "sequentiallr"]], "Rprop": [[1690, "rprop"]], "torch.pinverse": [[1713, "torch-pinverse"]], "ExportOutput": [[1668, "exportoutput"]], "OnnxRegistry": [[1672, "onnxregistry"]], "JitScalarType": [[1670, "jitscalartype"]], "RAdam": [[1688, "radam"]], "torch.optim.Optimizer.state_dict": [[1685, "torch-optim-optimizer-state-dict"]], "ExponentialLR": [[1698, "exponentiallr"]], "torch.pca_lowrank": [[1711, "torch-pca-lowrank"]], "torch.optim.Optimizer.step": [[1686, "torch-optim-optimizer-step"]], "Adadelta": [[1676, "adadelta"]], "SparseAdam": [[1692, "sparseadam"]], "ConstantLR": [[1694, "constantlr"]], "Adamax": [[1680, "adamax"]], "ChainedScheduler": [[1693, "chainedscheduler"]], "torch.optim.Optimizer.load_state_dict": [[1684, "torch-optim-optimizer-load-state-dict"]], "torch.min": [[1303, "torch-min"]], "torch.moveaxis": [[1307, "torch-moveaxis"]], "torch.mps.synchronize": [[1321, "torch-mps-synchronize"]], "torch.logsumexp": [[1288, "torch-logsumexp"]], "torch.logical_not": [[1283, "torch-logical-not"]], "torch.mps.manual_seed": [[1314, "torch-mps-manual-seed"]], "torch.masked_select": [[1294, "torch-masked-select"]], "torch.logaddexp": [[1278, "torch-logaddexp"]], "torch.mps.profiler.start": [[1316, "torch-mps-profiler-start"]], "torch.logaddexp2": [[1279, "torch-logaddexp2"]], "torch.mps.empty_cache": [[1311, "torch-mps-empty-cache"]], "torch.maximum": [[1299, "torch-maximum"]], "torch.log2": [[1277, "torch-log2"]], "torch.mps.get_rng_state": [[1313, "torch-mps-get-rng-state"]], "torch.mps.profiler.profile": [[1315, "torch-mps-profiler-profile"]], "torch.mps.driver_allocated_memory": [[1310, "torch-mps-driver-allocated-memory"]], "torch.lu_unpack": [[1292, "torch-lu-unpack"]], "torch.logit": [[1286, "torch-logit"]], "torch.mps.set_per_process_memory_fraction": [[1319, "torch-mps-set-per-process-memory-fraction"]], "torch.logical_and": [[1282, "torch-logical-and"]], "torch.matmul": [[1295, "torch-matmul"]], "torch.mps.seed": [[1318, "torch-mps-seed"]], "torch.logspace": [[1287, "torch-logspace"]], "torch.matrix_power": [[1297, "torch-matrix-power"]], "torch.mean": [[1300, "torch-mean"]], "torch.log1p": [[1276, "torch-log1p"]], "torch.mps.set_rng_state": [[1320, "torch-mps-set-rng-state"]], "torch.mode": [[1306, "torch-mode"]], "torch.lu_solve": [[1291, "torch-lu-solve"]], "torch.logcumsumexp": [[1280, "torch-logcumsumexp"]], "torch.lt": [[1289, "torch-lt"]], "torch.meshgrid": [[1302, "torch-meshgrid"]], "torch.log10": [[1275, "torch-log10"]], "torch.max": [[1298, "torch-max"]], "torch.msort": [[1322, "torch-msort"]], "torch.movedim": [[1308, "torch-movedim"]], "torch.logical_xor": [[1285, "torch-logical-xor"]], "torch.mps.profiler.stop": [[1317, "torch-mps-profiler-stop"]], "torch.matrix_exp": [[1296, "torch-matrix-exp"]], "torch.logdet": [[1281, "torch-logdet"]], "torch.lu": [[1290, "torch-lu"]], "torch.mm": [[1305, "torch-mm"]], "torch.median": [[1301, "torch-median"]], "torch.logical_or": [[1284, "torch-logical-or"]], "torch.minimum": [[1304, "torch-minimum"]], "torch.log": [[1274, "torch-log"]], "torch.mps.current_allocated_memory": [[1309, "torch-mps-current-allocated-memory"]], "Event": [[1312, "event"], [977, "event"]], "torch.manual_seed": [[1293, "torch-manual-seed"]], "MaxUnpool2d": [[1431, "maxunpool2d"]], "Softmax2d": [[1468, "softmax2d"]], "MSELoss": [[1425, "mseloss"]], "Sequential": [[1462, "sequential"]], "ParameterDict": [[1444, "parameterdict"]], "ModuleList": [[1436, "modulelist"]], "Linear": [[1421, "linear"], [752, "linear"], [760, "linear"], [729, "linear"], [728, "linear"]], "PixelUnshuffle": [[1447, "pixelunshuffle"]], "LogSigmoid": [[1423, "logsigmoid"]], "ReLU6": [[1454, "relu6"], [754, "relu6"]], "RNNBase": [[1450, "rnnbase"]], "ReLU": [[1453, "relu"]], "ReplicationPad2d": [[1459, "replicationpad2d"]], "PixelShuffle": [[1446, "pixelshuffle"]], "LogSoftmax": [[1424, "logsoftmax"]], "MaxPool2d": [[1428, "maxpool2d"]], "MarginRankingLoss": [[1426, "marginrankingloss"]], "MaxUnpool3d": [[1432, "maxunpool3d"]], "SoftMarginLoss": [[1466, "softmarginloss"]], "SELU": [[1461, "selu"]], "RNN": [[1449, "rnn"]], "Module": [[1434, "module"]], "MaxPool3d": [[1429, "maxpool3d"]], "ReflectionPad2d": [[1456, "reflectionpad2d"]], "ReplicationPad1d": [[1458, "replicationpad1d"]], "Softmin": [[1469, "softmin"]], "ModuleDict": [[1435, "moduledict"]], "Softmax": [[1467, "softmax"]], "MultiLabelMarginLoss": [[1437, "multilabelmarginloss"]], "ParameterList": [[1445, "parameterlist"]], "RNNCell": [[1451, "rnncell"], [761, "rnncell"]], "PairwiseDistance": [[1443, "pairwisedistance"]], "SmoothL1Loss": [[1465, "smoothl1loss"]], "RReLU": [[1452, "rrelu"]], "MaxPool1d": [[1427, "maxpool1d"]], "NLLLoss": [[1441, "nllloss"]], "PoissonNLLLoss": [[1448, "poissonnllloss"]], "MultiMarginLoss": [[1439, "multimarginloss"]], "Sigmoid": [[1464, "sigmoid"], [755, "sigmoid"]], "MaxUnpool1d": [[1430, "maxunpool1d"]], "ReflectionPad3d": [[1457, "reflectionpad3d"]], "ReplicationPad3d": [[1460, "replicationpad3d"]], "MultiheadAttention": [[1440, "multiheadattention"], [731, "multiheadattention"]], "LocalResponseNorm": [[1422, "localresponsenorm"]], "Mish": [[1433, "mish"]], "ReflectionPad1d": [[1455, "reflectionpad1d"]], "SiLU": [[1463, "silu"]], "PReLU": [[1442, "prelu"]], "MultiLabelSoftMarginLoss": [[1438, "multilabelsoftmarginloss"]], "LazyInstanceNorm2d": [[1417, "lazyinstancenorm2d"]], "HingeEmbeddingLoss": [[1394, "hingeembeddingloss"]], "LazyConvTranspose1d": [[1413, "lazyconvtranspose1d"]], "ELU": [[1376, "elu"], [740, "elu"]], "Dropout3d": [[1375, "dropout3d"]], "GRUCell": [[1387, "grucell"], [757, "grucell"]], "EmbeddingBag": [[1378, "embeddingbag"], [742, "embeddingbag"]], "GroupNorm": [[1389, "groupnorm"], [745, "groupnorm"]], "LazyBatchNorm3d": [[1409, "lazybatchnorm3d"]], "LazyInstanceNorm3d": [[1418, "lazyinstancenorm3d"]], "GELU": [[1384, "gelu"]], "Embedding": [[1377, "embedding"], [741, "embedding"]], "LazyBatchNorm1d": [[1407, "lazybatchnorm1d"]], "GaussianNLLLoss": [[1388, "gaussiannllloss"]], "Hardswish": [[1392, "hardswish"], [746, "hardswish"]], "LazyLinear": [[1419, "lazylinear"]], "Hardsigmoid": [[1391, "hardsigmoid"]], "LazyConvTranspose3d": [[1415, "lazyconvtranspose3d"]], "LeakyReLU": [[1420, "leakyrelu"], [751, "leakyrelu"]], "InstanceNorm2d": [[1398, "instancenorm2d"], [748, "instancenorm2d"]], "LayerNorm": [[1406, "layernorm"], [750, "layernorm"]], "HuberLoss": [[1395, "huberloss"]], "LazyConv3d": [[1412, "lazyconv3d"]], "InstanceNorm3d": [[1399, "instancenorm3d"], [749, "instancenorm3d"]], "FractionalMaxPool2d": [[1382, "fractionalmaxpool2d"]], "GRU": [[1386, "gru"], [756, "gru"]], "FractionalMaxPool3d": [[1383, "fractionalmaxpool3d"]], "LPPool1d": [[1402, "lppool1d"]], "LazyConv2d": [[1411, "lazyconv2d"]], "GLU": [[1385, "glu"]], "Flatten": [[1380, "flatten"]], "LSTM": [[1404, "lstm"], [758, "lstm"], [730, "lstm"]], "LSTMCell": [[1405, "lstmcell"], [759, "lstmcell"]], "LazyConv1d": [[1410, "lazyconv1d"]], "LazyInstanceNorm1d": [[1416, "lazyinstancenorm1d"]], "Dropout": [[1372, "dropout"]], "Fold": [[1381, "fold"]], "Hardshrink": [[1390, "hardshrink"]], "InstanceNorm1d": [[1397, "instancenorm1d"], [747, "instancenorm1d"]], "L1Loss": [[1401, "l1loss"]], "Dropout2d": [[1374, "dropout2d"]], "LazyBatchNorm2d": [[1408, "lazybatchnorm2d"]], "KLDivLoss": [[1400, "kldivloss"]], "Dropout1d": [[1373, "dropout1d"]], "LPPool2d": [[1403, "lppool2d"]], "LazyConvTranspose2d": [[1414, "lazyconvtranspose2d"]], "FeatureAlphaDropout": [[1379, "featurealphadropout"]], "Hardtanh": [[1393, "hardtanh"]], "ChannelShuffle": [[1358, "channelshuffle"]], "ConstantPad1d": [[1359, "constantpad1d"]], "AdaptiveAvgPool3d": [[1341, "adaptiveavgpool3d"]], "DataParallel": [[1371, "dataparallel"]], "torch.nan_to_num": [[1328, "torch-nan-to-num"]], "BatchNorm3d": [[1354, "batchnorm3d"], [733, "batchnorm3d"]], "AvgPool2d": [[1348, "avgpool2d"]], "Bilinear": [[1355, "bilinear"]], "torch.mvlgamma": [[1327, "torch-mvlgamma"]], "AdaptiveAvgPool1d": [[1339, "adaptiveavgpool1d"]], "AdaptiveLogSoftmaxWithLoss": [[1342, "adaptivelogsoftmaxwithloss"]], "Conv2d": [[1363, "conv2d"], [735, "conv2d"], [726, "conv2d"]], "torch.nanquantile": [[1331, "torch-nanquantile"]], "AvgPool1d": [[1347, "avgpool1d"]], "torch.multinomial": [[1324, "torch-multinomial"]], "BatchNorm2d": [[1353, "batchnorm2d"], [732, "batchnorm2d"]], "CosineSimilarity": [[1369, "cosinesimilarity"]], "ConstantPad3d": [[1361, "constantpad3d"]], "torch.negative": [[1337, "torch-negative"]], "BCEWithLogitsLoss": [[1351, "bcewithlogitsloss"]], "CTCLoss": [[1357, "ctcloss"]], "BCELoss": [[1350, "bceloss"]], "torch.nansum": [[1332, "torch-nansum"]], "ConvTranspose1d": [[1365, "convtranspose1d"], [737, "convtranspose1d"]], "AdaptiveMaxPool2d": [[1344, "adaptivemaxpool2d"]], "ConvTranspose3d": [[1367, "convtranspose3d"], [739, "convtranspose3d"]], "torch.nanmean": [[1329, "torch-nanmean"]], "CosineEmbeddingLoss": [[1368, "cosineembeddingloss"]], "torch.mul": [[1323, "torch-mul"]], "AdaptiveAvgPool2d": [[1340, "adaptiveavgpool2d"]], "torch.multiply": [[1325, "torch-multiply"]], "ConvTranspose2d": [[1366, "convtranspose2d"], [738, "convtranspose2d"]], "BatchNorm1d": [[1352, "batchnorm1d"]], "ConstantPad2d": [[1360, "constantpad2d"]], "torch.narrow": [[1333, "torch-narrow"]], "torch.neg": [[1336, "torch-neg"]], "AdaptiveMaxPool1d": [[1343, "adaptivemaxpool1d"]], "Conv1d": [[1362, "conv1d"], [734, "conv1d"]], "torch.ne": [[1335, "torch-ne"]], "torch.nanmedian": [[1330, "torch-nanmedian"]], "torch.narrow_copy": [[1334, "torch-narrow-copy"]], "CrossEntropyLoss": [[1370, "crossentropyloss"]], "AvgPool3d": [[1349, "avgpool3d"]], "CELU": [[1356, "celu"]], "torch.mv": [[1326, "torch-mv"]], "AlphaDropout": [[1346, "alphadropout"]], "Conv3d": [[1364, "conv3d"], [736, "conv3d"], [727, "conv3d"]], "torch.nextafter": [[1338, "torch-nextafter"]], "AdaptiveMaxPool3d": [[1345, "adaptivemaxpool3d"]], "torch.linalg.matrix_power": [[1254, "torch-linalg-matrix-power"]], "torch.linalg.slogdet": [[1260, "torch-linalg-slogdet"]], "torch.linalg.solve_triangular": [[1263, "torch-linalg-solve-triangular"]], "torch.linalg.norm": [[1257, "torch-linalg-norm"]], "torch.linalg.svdvals": [[1265, "torch-linalg-svdvals"]], "torch.lerp": [[1226, "torch-lerp"]], "torch.linalg.inv": [[1241, "torch-linalg-inv"]], "torch.linalg.lstsq": [[1246, "torch-linalg-lstsq"]], "torch.linalg.lu_solve": [[1250, "torch-linalg-lu-solve"]], "torch.linalg.inv_ex": [[1242, "torch-linalg-inv-ex"]], "torch.linalg.lu": [[1247, "torch-linalg-lu"]], "torch.linalg.eig": [[1236, "torch-linalg-eig"]], "torch.linalg.det": [[1234, "torch-linalg-det"]], "torch.linalg.qr": [[1259, "torch-linalg-qr"]], "torch.linalg.solve": [[1261, "torch-linalg-solve"]], "torch.linspace": [[1271, "torch-linspace"]], "torch.load": [[1272, "torch-load"]], "torch.less": [[1227, "torch-less"]], "torch.linalg.lu_factor": [[1248, "torch-linalg-lu-factor"]], "torch.linalg.solve_ex": [[1262, "torch-linalg-solve-ex"]], "torch.less_equal": [[1228, "torch-less-equal"]], "torch.le": [[1225, "torch-le"]], "torch.linalg.eigvals": [[1238, "torch-linalg-eigvals"]], "torch.linalg.vecdot": [[1269, "torch-linalg-vecdot"]], "torch.linalg.tensorinv": [[1266, "torch-linalg-tensorinv"]], "torch.linalg.ldl_factor": [[1243, "torch-linalg-ldl-factor"]], "torch.linalg.pinv": [[1258, "torch-linalg-pinv"]], "torch.lobpcg": [[1273, "torch-lobpcg"]], "torch.lgamma": [[1229, "torch-lgamma"]], "torch.linalg.svd": [[1264, "torch-linalg-svd"]], "torch.linalg.matmul": [[1251, "torch-linalg-matmul"]], "torch.linalg.diagonal": [[1235, "torch-linalg-diagonal"]], "torch.linalg.cholesky_ex": [[1231, "torch-linalg-cholesky-ex"]], "torch.linalg.householder_product": [[1240, "torch-linalg-householder-product"]], "torch.linalg.tensorsolve": [[1267, "torch-linalg-tensorsolve"]], "torch.linalg.ldl_solve": [[1245, "torch-linalg-ldl-solve"]], "torch.linalg.cross": [[1233, "torch-linalg-cross"]], "torch.linalg.eigh": [[1237, "torch-linalg-eigh"]], "torch.linalg.matrix_exp": [[1252, "torch-linalg-matrix-exp"]], "torch.linalg.cond": [[1232, "torch-linalg-cond"]], "torch.linalg.ldl_factor_ex": [[1244, "torch-linalg-ldl-factor-ex"]], "torch.linalg.cholesky": [[1230, "torch-linalg-cholesky"]], "torch.linalg.matrix_rank": [[1255, "torch-linalg-matrix-rank"]], "torch.linalg.vector_norm": [[1270, "torch-linalg-vector-norm"]], "torch.linalg.multi_dot": [[1256, "torch-linalg-multi-dot"]], "torch.linalg.matrix_norm": [[1253, "torch-linalg-matrix-norm"]], "torch.linalg.eigvalsh": [[1239, "torch-linalg-eigvalsh"]], "torch.linalg.lu_factor_ex": [[1249, "torch-linalg-lu-factor-ex"]], "torch.linalg.vander": [[1268, "torch-linalg-vander"]], "ScriptModule": [[1201, "scriptmodule"]], "torch.jit.freeze": [[1205, "torch-jit-freeze"]], "torch.jit.load": [[1208, "torch-jit-load"]], "torch.isneginf": [[1195, "torch-isneginf"]], "torch.jit.save": [[1211, "torch-jit-save"]], "torch.is_complex": [[1180, "torch-is-complex"]], "torch.isinf": [[1193, "torch-isinf"]], "torch.jit.unused": [[1218, "torch-jit-unused"]], "torch.isposinf": [[1196, "torch-isposinf"]], "torch.is_grad_enabled": [[1184, "torch-is-grad-enabled"]], "torch.jit.set_fusion_strategy": [[1214, "torch-jit-set-fusion-strategy"]], "torch.jit.isinstance": [[1207, "torch-jit-isinstance"]], "torch.jit.wait": [[1219, "torch-jit-wait"]], "torch.jit.fork": [[1204, "torch-jit-fork"]], "ScriptFunction": [[1200, "scriptfunction"]], "torch.istft": [[1198, "torch-istft"]], "strict_fusion": [[1215, "strict-fusion"]], "torch.is_nonzero": [[1186, "torch-is-nonzero"]], "torch.is_conj": [[1181, "torch-is-conj"]], "torch.jit.trace": [[1216, "torch-jit-trace"]], "torch.jit.trace_module": [[1217, "torch-jit-trace-module"]], "torch.kron": [[1221, "torch-kron"]], "torch.jit.script_if_tracing": [[1213, "torch-jit-script-if-tracing"]], "torch.initial_seed": [[1177, "torch-initial-seed"]], "torch.kthvalue": [[1222, "torch-kthvalue"]], "torch.kaiser_window": [[1220, "torch-kaiser-window"]], "torch.is_inference_mode_enabled": [[1185, "torch-is-inference-mode-enabled"]], "torch.isclose": [[1190, "torch-isclose"]], "torch.isin": [[1192, "torch-isin"]], "torch.jit.annotate": [[1202, "torch-jit-annotate"]], "torch.inner": [[1178, "torch-inner"]], "torch.isfinite": [[1191, "torch-isfinite"]], "torch.jit.enable_onednn_fusion": [[1203, "torch-jit-enable-onednn-fusion"]], "torch.jit.script": [[1212, "torch-jit-script"]], "torch.is_warn_always_enabled": [[1189, "torch-is-warn-always-enabled"]], "torch.isnan": [[1194, "torch-isnan"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1182, "torch-is-deterministic-algorithms-warn-only-enabled"]], "Attribute": [[1199, "attribute"]], "torch.inverse": [[1179, "torch-inverse"]], "torch.is_tensor": [[1188, "torch-is-tensor"]], "torch.isreal": [[1197, "torch-isreal"]], "torch.is_floating_point": [[1183, "torch-is-floating-point"]], "torch.jit.onednn_fusion_enabled": [[1209, "torch-jit-onednn-fusion-enabled"]], "torch.jit.ignore": [[1206, "torch-jit-ignore"]], "torch.lcm": [[1223, "torch-lcm"]], "torch.is_storage": [[1187, "torch-is-storage"]], "torch.ldexp": [[1224, "torch-ldexp"]], "torch.jit.optimize_for_inference": [[1210, "torch-jit-optimize-for-inference"]], "inference_mode": [[1176, "inference-mode"]], "torch.view_as_real": [[1867, "torch-view-as-real"]], "TorchScript Language Reference": [[1879, "torchscript-language-reference"], [1880, "torchscript-language-reference"]], "Types": [[1879, "supported-type"], [1918, "types"]], "Unsupported Typing Constructs": [[1879, "unsupported-typing-constructs"], [1880, "unsupported-typing-constructs"]], "Default Types": [[1879, "default-types"]], "Optional Type Refinement": [[1879, "optional-type-refinement"]], "TorchScript Classes": [[1879, "id2"], [1877, "torchscript-classes"]], "TorchScript Enums": [[1879, "id4"]], "Named Tuples": [[1879, "named-tuples"]], "Iterables": [[1879, "iterables"]], "Expressions": [[1879, "expressions"], [1880, "expressions"]], "Literals": [[1879, "literals"], [1880, "literals"]], "List Construction": [[1879, "list-construction"]], "Tuple Construction": [[1879, "tuple-construction"]], "Dict Construction": [[1879, "dict-construction"]], "Variables": [[1879, "variables"], [1877, "variables"], [1956, "variables"]], "Arithmetic Operators": [[1879, "arithmetic-operators"]], "Comparison Operators": [[1879, "comparison-operators"]], "Logical Operators": [[1879, "logical-operators"]], "Subscripts and Slicing": [[1879, "subscripts-and-slicing"]], "Function Calls": [[1879, "function-calls"]], "Method Calls": [[1879, "method-calls"]], "Ternary Expressions": [[1879, "ternary-expressions"]], "Casts": [[1879, "casts"]], "Accessing Module Parameters": [[1879, "accessing-module-parameters"]], "Statements": [[1879, "statements"]], "Simple Assignments": [[1879, "simple-assignments"]], "Pattern Matching Assignments": [[1879, "pattern-matching-assignments"]], "Print Statements": [[1879, "print-statements"]], "If Statements": [[1879, "if-statements"]], "While Loops": [[1879, "while-loops"]], "For loops with range": [[1879, "for-loops-with-range"]], "For loops over tuples": [[1879, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1879, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1879, "break-and-continue"]], "Return": [[1879, "return"]], "Variable Resolution": [[1879, "variable-resolution"]], "Use of Python Values": [[1879, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1879, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1879, "python-defined-constants"]], "Module Attributes": [[1879, "module-attributes"]], "torch.mps": [[1891, "module-torch.mps"]], "MPS Profiler": [[1891, "mps-profiler"]], "MPS Event": [[1891, "mps-event"]], "torch.var": [[1863, "torch-var"]], "torch.utils.model_zoo": [[1889, "torch-utils-model-zoo"]], "torch.vstack": [[1870, "torch-vstack"]], "TorchScript Builtins": [[1878, "torchscript-builtins"]], "Supported Tensor Methods": [[1878, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1878, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1878, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1878, "python-built-in-functions"]], "math Module": [[1878, "math-module"]], "TorchScript": [[1877, "torchscript"]], "Creating TorchScript Code": [[1877, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1877, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1877, "torchscript-language"]], "Built-in Functions and Modules": [[1877, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1877, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1877, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1877, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1877, "disable-jit-for-debugging"]], "Inspecting Code": [[1877, "inspecting-code"]], "Interpreting Graphs": [[1877, "interpreting-graphs"]], "Tracer": [[1877, "tracer"]], "Tracing Edge Cases": [[1877, "tracing-edge-cases"]], "Automatic Trace Checking": [[1877, "automatic-trace-checking"]], "Tracer Warnings": [[1877, "tracer-warnings"]], "Frequently Asked Questions": [[1877, "frequently-asked-questions"], [1907, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1918, "frequently-asked-questions"], [1953, "frequently-asked-questions"], [1925, "frequently-asked-questions"]], "Known Issues": [[1877, "known-issues"]], "Appendix": [[1877, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1877, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1877, "modules"], [1911, "modules"]], "Attributes": [[1877, "attributes"]], "Constants": [[1877, "constants"]], "Fusion Backends": [[1877, "fusion-backends"]], "References": [[1877, "references"]], "Python Language Reference Coverage": [[1881, "python-language-reference-coverage"]], "CUDA Automatic Mixed Precision examples": [[1899, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1899, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1899, "working-with-unscaled-gradients"]], "Gradient clipping": [[1899, "gradient-clipping"]], "Working with Scaled Gradients": [[1899, "working-with-scaled-gradients"]], "Gradient accumulation": [[1899, "gradient-accumulation"]], "Gradient penalty": [[1899, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1899, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1899, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1899, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1899, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1899, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1899, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1899, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1899, "functions-that-need-a-particular-dtype"]], "torch.monitor": [[1890, "torch-monitor"]], "torch.zeros_like": [[1874, "torch-zeros-like"]], "HIP (ROCm) semantics": [[1909, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1909, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1909, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1909, "tensorfloat-32-tf32-on-rocm"]], "Memory management": [[1909, "memory-management"], [1903, "memory-management"], [16, "memory-management"]], "hipFFT/rocFFT plan cache": [[1909, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1909, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1909, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1909, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1909, "enabling-kernel-asserts"]], "torch.vander": [[1862, "torch-vander"]], "torch.masked": [[1887, "torch-masked"]], "Motivation": [[1887, "motivation"], [1951, "motivation"], [1952, "motivation"]], "What is a MaskedTensor?": [[1887, "what-is-a-maskedtensor"]], "Supported Operators": [[1887, "supported-operators"]], "Unary Operators": [[1887, "unary-operators"]], "Binary Operators": [[1887, "binary-operators"]], "Reductions": [[1887, "reductions"]], "View and select functions": [[1887, "view-and-select-functions"]], "torch.vsplit": [[1869, "torch-vsplit"]], "Multiprocessing package - torch.multiprocessing": [[1892, "module-torch.multiprocessing"]], "Strategy management": [[1892, "strategy-management"]], "Sharing CUDA tensors": [[1892, "sharing-cuda-tensors"]], "Sharing strategies": [[1892, "sharing-strategies"]], "File descriptor - file_descriptor": [[1892, "file-descriptor-file-descriptor"]], "File system - file_system": [[1892, "file-system-file-system"]], "Spawning subprocesses": [[1892, "spawning-subprocesses"]], "torch.zeros": [[1873, "torch-zeros"]], "torch._logging": [[1886, "torch-logging"]], "torch.where": [[1871, "torch-where"]], "torch.view_as_complex": [[1866, "torch-view-as-complex"]], "Features for large-scale deployments": [[1910, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1910, "fleet-wide-operator-profiling"]], "API usage logging": [[1910, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1910, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1910, "build-environment-considerations"]], "Common extension points": [[1910, "common-extension-points"]], "torch.nn.init": [[1898, "torch-nn-init"]], "torch.vmap": [[1868, "torch-vmap"]], "torch.linalg": [[1885, "torch-linalg"]], "Matrix Properties": [[1885, "matrix-properties"]], "Decompositions": [[1885, "decompositions"]], "Solvers": [[1885, "solvers"]], "Inverses": [[1885, "inverses"]], "Matrix Functions": [[1885, "matrix-functions"]], "Matrix Products": [[1885, "matrix-products"]], "Tensor Operations": [[1885, "tensor-operations"]], "Misc": [[1885, "misc"]], "Experimental Functions": [[1885, "experimental-functions"]], "torch.nn": [[1896, "module-torch.nn"], [1896, "id1"]], "Containers": [[1896, "containers"]], "Convolution Layers": [[1896, "convolution-layers"]], "Pooling layers": [[1896, "pooling-layers"]], "Padding Layers": [[1896, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1896, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1896, "non-linear-activations-other"]], "Normalization Layers": [[1896, "normalization-layers"]], "Recurrent Layers": [[1896, "recurrent-layers"]], "Transformer Layers": [[1896, "transformer-layers"]], "Linear Layers": [[1896, "linear-layers"]], "Dropout Layers": [[1896, "dropout-layers"]], "Sparse Layers": [[1896, "sparse-layers"]], "Distance Functions": [[1896, "distance-functions"]], "Loss Functions": [[1896, "loss-functions"]], "Vision Layers": [[1896, "vision-layers"]], "Shuffle Layers": [[1896, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1896, "module-torch.nn.parallel"]], "Utilities": [[1896, "module-torch.nn.utils"], [1942, "utilities"]], "Quantized Functions": [[1896, "quantized-functions"]], "Lazy Modules Initialization": [[1896, "lazy-modules-initialization"]], "CPU threading and TorchScript inference": [[1902, "cpu-threading-and-torchscript-inference"]], "Build options": [[1902, "build-options"]], "Runtime API": [[1902, "runtime-api"]], "Tuning the number of threads": [[1902, "tuning-the-number-of-threads"]], "CUDA semantics": [[1903, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1903, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1903, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1903, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1903, "asynchronous-execution"]], "CUDA streams": [[1903, "cuda-streams"]], "Stream semantics of backward passes": [[1903, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1903, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1903, "environment-variables"]], "Using custom memory allocators for CUDA": [[1903, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1903, "cublas-workspaces"]], "cuFFT plan cache": [[1903, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1903, "just-in-time-compilation"]], "Best practices": [[1903, "best-practices"]], "Device-agnostic code": [[1903, "device-agnostic-code"]], "Use pinned memory buffers": [[1903, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1903, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1903, "cuda-graphs"]], "Why CUDA Graphs?": [[1903, "why-cuda-graphs"]], "PyTorch API": [[1903, "pytorch-api"]], "Constraints": [[1903, "constraints"], [29, "module-torch.distributions.constraints"]], "Non-constraints": [[1903, "non-constraints"]], "Whole-network capture": [[1903, "whole-network-capture"]], "Partial-network capture": [[1903, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1903, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1903, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1903, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1903, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1903, "id5"]], "Graph memory management": [[1903, "graph-memory-management"]], "Sharing memory across captures": [[1903, "sharing-memory-across-captures"]], "Distributed Data Parallel": [[1904, "distributed-data-parallel"]], "Example": [[1904, "example"], [1905, "example"]], "Internal Design": [[1904, "internal-design"]], "Implementation": [[1904, "implementation"], [1932, "implementation"]], "ProcessGroup": [[1904, "processgroup"]], "TorchDynamo DDPOptimizer": [[1904, "id1"]], "Named Tensors": [[1894, "named-tensors"]], "Creating named tensors": [[1894, "creating-named-tensors"]], "Named dimensions": [[1894, "named-dimensions"]], "Name propagation semantics": [[1894, "name-propagation-semantics"]], "match semantics": [[1894, "match-semantics"]], "Basic name inference rules": [[1894, "basic-name-inference-rules"]], "Explicit alignment by names": [[1894, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1894, "manipulating-dimensions"]], "Autograd support": [[1894, "autograd-support"]], "Currently supported operations and subsystems": [[1894, "currently-supported-operations-and-subsystems"]], "Operators": [[1894, "operators"]], "Subsystems": [[1894, "subsystems"]], "Named tensor API reference": [[1894, "named-tensor-api-reference"]], "Extending torch.func with autograd.Function": [[1906, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1906, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1906, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1906, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1906, "limitations-and-gotchas"]], "torch.vmap() Support": [[1906, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1906, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1906, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1906, "torch-func-jvp-support"]], "Extending PyTorch": [[1905, "extending-pytorch"]], "Extending torch.autograd": [[1905, "extending-torch-autograd"]], "When to use": [[1905, "when-to-use"]], "When not to use": [[1905, "when-not-to-use"]], "How to use": [[1905, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1905, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1905, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1905, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1905, "extending-torch-nn"]], "Adding a Module": [[1905, "adding-a-module"]], "Extending torch Python API": [[1905, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1905, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1905, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1905, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1905, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1905, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1905, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1905, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1905, "writing-custom-c-extensions"]], "PyTorch documentation": [[1876, "pytorch-documentation"]], "Community": [[1876, null]], "Developer Notes": [[1876, null]], "Language Bindings": [[1876, null]], "Python API": [[1876, null]], "Libraries": [[1876, null]], "Indices and tables": [[1876, "indices-and-tables"]], "torch.xlogy": [[1872, "torch-xlogy"]], "JIT Utils - torch.utils.jit": [[1883, "module-torch.utils.jit"]], "torch.vdot": [[1865, "torch-vdot"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1907, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1907, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1907, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1907, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1907, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Gradcheck mechanics": [[1908, "gradcheck-mechanics"]], "Notations and background information": [[1908, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1908, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1908, "real-to-real-functions"]], "Default real input numerical evaluation": [[1908, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1908, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1908, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1908, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1908, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1908, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1908, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1908, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1908, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1908, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1908, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1908, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1908, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1908, "gradgradcheck-implementation"]], "torch.nn.functional": [[1897, "torch-nn-functional"]], "Convolution functions": [[1897, "convolution-functions"]], "Pooling functions": [[1897, "pooling-functions"]], "Attention Mechanisms": [[1897, "attention-mechanisms"]], "Non-linear activation functions": [[1897, "non-linear-activation-functions"]], "Linear functions": [[1897, "linear-functions"]], "Dropout functions": [[1897, "dropout-functions"]], "Sparse functions": [[1897, "sparse-functions"]], "Distance functions": [[1897, "distance-functions"]], "Loss functions": [[1897, "loss-functions"]], "Vision functions": [[1897, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1897, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1897, "data-parallel"]], "torch.hub": [[1875, "torch-hub"]], "Publishing models": [[1875, "publishing-models"]], "How to implement an entrypoint?": [[1875, "how-to-implement-an-entrypoint"]], "Important Notice": [[1875, "important-notice"]], "Loading models from Hub": [[1875, "loading-models-from-hub"]], "Running a loaded model:": [[1875, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1875, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1875, "caching-logic"]], "Known limitations:": [[1875, "known-limitations"]], "Terminology": [[1880, "terminology"]], "Type System": [[1880, "id1"]], "TorchScript Types": [[1880, "torchscript-types"]], "Meta Types": [[1880, "meta-types"]], "Any Type": [[1880, "any-type"]], "Operators Supported for Any Type": [[1880, "operators-supported-for-any-type"]], "Design Notes": [[1880, "design-notes"], [1930, "design-notes"]], "Primitive Types": [[1880, "primitive-types"]], "Structural Types": [[1880, "structural-types"]], "Nominal Types": [[1880, "nominal-types"]], "Built-in Class": [[1880, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1880, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1880, "custom-class"]], "Enum Type": [[1880, "enum-type"]], "TorchScript Module Class": [[1880, "torchscript-module-class"]], "Module Instance Class": [[1880, "module-instance-class"]], "Type Annotation": [[1880, "type-annotation"]], "When to Annotate Types": [[1880, "when-to-annotate-types"]], "Annotate Function Signature": [[1880, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1880, "annotate-variables-and-data-attributes"]], "Local Variables": [[1880, "local-variables"]], "Instance Data Attributes": [[1880, "instance-data-attributes"]], "Type Annotation APIs": [[1880, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1880, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1880, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1880, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1880, "arithmetic-conversions"]], "Atoms": [[1880, "atoms"]], "Identifiers": [[1880, "identifiers"]], "Parenthesized Forms": [[1880, "parenthesized-forms"]], "List and Dictionary Displays": [[1880, "list-and-dictionary-displays"]], "Primaries": [[1880, "primaries"]], "Attribute References": [[1880, "attribute-references"]], "Subscriptions": [[1880, "subscriptions"]], "Slicings": [[1880, "slicings"]], "Calls": [[1880, "calls"]], "Power Operator": [[1880, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1880, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1880, "binary-arithmetic-operations"]], "Shifting Operations": [[1880, "shifting-operations"]], "Binary Bitwise Operations": [[1880, "binary-bitwise-operations"]], "Comparisons": [[1880, "comparisons"], [1948, "comparisons"]], "Value Comparisons": [[1880, "value-comparisons"]], "Membership Test Operations": [[1880, "membership-test-operations"]], "Identity Comparisons": [[1880, "identity-comparisons"]], "Boolean Operations": [[1880, "boolean-operations"]], "Conditional Expressions": [[1880, "conditional-expressions"]], "Expression Lists": [[1880, "expression-lists"]], "Simple Statements": [[1880, "simple-statements"]], "Expression Statements": [[1880, "expression-statements"]], "Assignment Statements": [[1880, "assignment-statements"]], "Augmented Assignment Statements": [[1880, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1880, "annotated-assignment-statements"]], "The raise Statement": [[1880, "the-raise-statement"]], "The assert Statement": [[1880, "the-assert-statement"]], "The return Statement": [[1880, "the-return-statement"]], "The del Statement": [[1880, "the-del-statement"]], "The pass Statement": [[1880, "the-pass-statement"]], "The print Statement": [[1880, "the-print-statement"]], "The break Statement": [[1880, "the-break-statement"]], "The continue Statement:": [[1880, "the-continue-statement"]], "Compound Statements": [[1880, "compound-statements"]], "The if Statement": [[1880, "the-if-statement"]], "Basic if/else Statement": [[1880, "basic-if-else-statement"]], "Ternary if/else Statement": [[1880, "ternary-if-else-statement"]], "The while Statement": [[1880, "the-while-statement"]], "The for-in Statement": [[1880, "the-for-in-statement"]], "The with Statement": [[1880, "the-with-statement"]], "The tuple Statement": [[1880, "the-tuple-statement"]], "The getattr Statement": [[1880, "the-getattr-statement"]], "The hasattr Statement": [[1880, "the-hasattr-statement"]], "The zip Statement": [[1880, "the-zip-statement"]], "The enumerate Statement": [[1880, "the-enumerate-statement"]], "Python Values": [[1880, "python-values"]], "Resolution Rules": [[1880, "resolution-rules"]], "Python Built-in Functions Support": [[1880, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1880, "id5"]], "Python Built-in Values Support": [[1880, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1880, "id6"]], "torch.* APIs": [[1880, "torch-apis"]], "Remote Procedure Calls": [[1880, "remote-procedure-calls"]], "Asynchronous Execution": [[1880, "asynchronous-execution"]], "Type Annotations": [[1880, "type-annotations"]], "Meta Programming": [[1880, "meta-programming"]], "Type Refinement": [[1880, "type-refinement"]], "torch.utils.mobile_optimizer": [[1888, "torch-utils-mobile-optimizer"]], "Named Tensors operator coverage": [[1893, "named-tensors-operator-coverage"]], "Supported Operations": [[1893, "id1"]], "Keeps input names": [[1893, "keeps-input-names"]], "Removes dimensions": [[1893, "removes-dimensions"]], "Unifies names from inputs": [[1893, "unifies-names-from-inputs"]], "Permutes dimensions": [[1893, "permutes-dimensions"]], "Contracts away dims": [[1893, "contracts-away-dims"]], "Factory functions": [[1893, "factory-functions"]], "out function and in-place variants": [[1893, "out-function-and-in-place-variants"]], "torch.library": [[1884, "torch-library"]], "torch.nested": [[1895, "module-torch.nested"]], "Construction": [[1895, "construction"], [1934, "construction"]], "size": [[1895, "size"]], "unbind": [[1895, "unbind"]], "Nested tensor constructor and conversion functions": [[1895, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1895, "supported-operations"], [1934, "supported-operations"]], "Autograd mechanics": [[1900, "autograd-mechanics"]], "How autograd encodes the history": [[1900, "how-autograd-encodes-the-history"]], "Saved tensors": [[1900, "saved-tensors"]], "Gradients for non-differentiable functions": [[1900, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1900, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1942, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1900, "setting-requires-grad"]], "Grad Modes": [[1900, "grad-modes"]], "Default Mode (Grad Mode)": [[1900, "default-mode-grad-mode"]], "No-grad Mode": [[1900, "no-grad-mode"]], "Inference Mode": [[1900, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1900, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1900, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1900, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1900, "multithreaded-autograd"]], "Concurrency on CPU": [[1900, "concurrency-on-cpu"]], "Non-determinism": [[1900, "non-determinism"]], "Graph retaining": [[1900, "graph-retaining"]], "Thread Safety on Autograd Node": [[1900, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1900, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1900, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1900, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1900, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1900, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1900, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1900, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1900, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1900, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1900, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1900, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1900, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1900, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1900, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1900, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1900, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.var_mean": [[1864, "torch-var-mean"]], "Broadcasting semantics": [[1901, "broadcasting-semantics"]], "General semantics": [[1901, "general-semantics"]], "In-place semantics": [[1901, "in-place-semantics"]], "Backwards compatibility": [[1901, "backwards-compatibility"]], "TorchScript Unsupported PyTorch Constructs": [[1882, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1882, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1882, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1882, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1882, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1882, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1882, "pytorch-unsupported-modules-and-classes"]], "torch.func.vjp": [[1141, "torch-func-vjp"]], "torch.index_copy": [[1173, "torch-index-copy"]], "torch.greater": [[1155, "torch-greater"]], "torch.get_num_interop_threads": [[1151, "torch-get-num-interop-threads"]], "torch.i0": [[1168, "torch-i0"]], "torch.igammac": [[1170, "torch-igammac"]], "torch.full": [[1128, "torch-full"]], "torch.func.grad_and_value": [[1133, "torch-func-grad-and-value"]], "torch.func.hessian": [[1134, "torch-func-hessian"]], "torch.geqrf": [[1146, "torch-geqrf"]], "torch.get_deterministic_debug_mode": [[1149, "torch-get-deterministic-debug-mode"]], "torch.hypot": [[1167, "torch-hypot"]], "torch.frombuffer": [[1127, "torch-frombuffer"]], "torch.hstack": [[1166, "torch-hstack"]], "torch.index_select": [[1175, "torch-index-select"]], "torch.get_rng_state": [[1153, "torch-get-rng-state"]], "torch.hamming_window": [[1158, "torch-hamming-window"]], "torch.index_add": [[1172, "torch-index-add"]], "torch.histc": [[1161, "torch-histc"]], "torch.gradient": [[1154, "torch-gradient"]], "torch.index_reduce": [[1174, "torch-index-reduce"]], "torch.full_like": [[1129, "torch-full-like"]], "torch.func.jacfwd": [[1135, "torch-func-jacfwd"]], "torch.func.jacrev": [[1136, "torch-func-jacrev"]], "torch.func.jvp": [[1137, "torch-func-jvp"]], "torch.func.stack_module_state": [[1140, "torch-func-stack-module-state"]], "torch.greater_equal": [[1156, "torch-greater-equal"]], "torch.histogramdd": [[1163, "torch-histogramdd"]], "torch.hsplit": [[1164, "torch-hsplit"]], "torch.func.functional_call": [[1130, "torch-func-functional-call"]], "torch.gather": [[1143, "torch-gather"]], "torch.get_float32_matmul_precision": [[1150, "torch-get-float32-matmul-precision"]], "torch.get_num_threads": [[1152, "torch-get-num-threads"]], "torch.get_default_dtype": [[1148, "torch-get-default-dtype"]], "torch.func.grad": [[1132, "torch-func-grad"]], "torch.ge": [[1145, "torch-ge"]], "torch.histogram": [[1162, "torch-histogram"]], "torch.gcd": [[1144, "torch-gcd"]], "torch.func.vmap": [[1142, "torch-func-vmap"]], "torch.func.linearize": [[1138, "torch-func-linearize"]], "torch.ger": [[1147, "torch-ger"]], "torch.gt": [[1157, "torch-gt"]], "torch.hann_window": [[1159, "torch-hann-window"]], "torch.hspmm": [[1165, "torch-hspmm"]], "torch.imag": [[1171, "torch-imag"]], "torch.heaviside": [[1160, "torch-heaviside"]], "torch.func.functionalize": [[1131, "torch-func-functionalize"]], "torch.func.replace_all_batch_norm_modules_": [[1139, "torch-func-replace-all-batch-norm-modules"]], "torch.igamma": [[1169, "torch-igamma"]], "torch.fft.rfftn": [[1111, "torch-fft-rfftn"]], "torch.frac": [[1123, "torch-frac"]], "torch.fake_quantize_per_tensor_affine": [[1089, "torch-fake-quantize-per-tensor-affine"]], "torch.fft.hfftn": [[1097, "torch-fft-hfftn"]], "torch.fft.fftfreq": [[1092, "torch-fft-fftfreq"]], "torch.fft.irfftn": [[1107, "torch-fft-irfftn"]], "torch.fft.hfft": [[1095, "torch-fft-hfft"]], "torch.fft.rfft2": [[1109, "torch-fft-rfft2"]], "torch.fake_quantize_per_channel_affine": [[1088, "torch-fake-quantize-per-channel-affine"]], "torch.fft.ifftshift": [[1101, "torch-fft-ifftshift"]], "torch.erfinv": [[1083, "torch-erfinv"]], "torch.fft.fftn": [[1093, "torch-fft-fftn"]], "torch.fft.ifft": [[1098, "torch-fft-ifft"]], "torch.float_power": [[1117, "torch-float-power"]], "torch.fft.ifft2": [[1099, "torch-fft-ifft2"]], "torch.flatten": [[1113, "torch-flatten"]], "torch.fmin": [[1121, "torch-fmin"]], "torch.exp": [[1084, "torch-exp"]], "torch.fft.ihfft": [[1102, "torch-fft-ihfft"]], "torch.fft.ihfft2": [[1103, "torch-fft-ihfft2"]], "torch.fmax": [[1120, "torch-fmax"]], "torch.fft.fftshift": [[1094, "torch-fft-fftshift"]], "torch.floor_divide": [[1119, "torch-floor-divide"]], "torch.fft.rfftfreq": [[1110, "torch-fft-rfftfreq"]], "torch.fmod": [[1122, "torch-fmod"]], "torch.eye": [[1087, "torch-eye"]], "torch.frexp": [[1124, "torch-frexp"]], "torch.fft.irfft": [[1105, "torch-fft-irfft"]], "torch.from_dlpack": [[1125, "torch-from-dlpack"]], "torch.erfc": [[1082, "torch-erfc"]], "torch.fft.rfft": [[1108, "torch-fft-rfft"]], "torch.eq": [[1079, "torch-eq"]], "torch.fft.fft2": [[1091, "torch-fft-fft2"]], "torch.fft.ihfftn": [[1104, "torch-fft-ihfftn"]], "torch.fft.hfft2": [[1096, "torch-fft-hfft2"]], "torch.from_numpy": [[1126, "torch-from-numpy"]], "torch.exp2": [[1085, "torch-exp2"]], "torch.expm1": [[1086, "torch-expm1"]], "torch.floor": [[1118, "torch-floor"]], "torch.fft.irfft2": [[1106, "torch-fft-irfft2"]], "torch.fft.fft": [[1090, "torch-fft-fft"]], "torch.fliplr": [[1115, "torch-fliplr"]], "torch.fix": [[1112, "torch-fix"]], "torch.fft.ifftn": [[1100, "torch-fft-ifftn"]], "enable_grad": [[1078, "enable-grad"]], "torch.erf": [[1081, "torch-erf"]], "torch.flipud": [[1116, "torch-flipud"]], "torch.equal": [[1080, "torch-equal"]], "torch.flip": [[1114, "torch-flip"]], "torch.diag": [[1061, "torch-diag"]], "torch.cuda.nvtx.range_push": [[1036, "torch-cuda-nvtx-range-push"]], "torch.cuda.set_rng_state": [[1045, "torch-cuda-set-rng-state"]], "torch.cuda.memory_stats": [[1031, "torch-cuda-memory-stats"]], "torch.empty_strided": [[1077, "torch-empty-strided"]], "torch.deg2rad": [[1058, "torch-deg2rad"]], "torch.diagonal_scatter": [[1065, "torch-diagonal-scatter"]], "torch.cuda.set_device": [[1043, "torch-cuda-set-device"]], "torch.diff": [[1066, "torch-diff"]], "torch.digamma": [[1067, "torch-digamma"]], "torch.empty_like": [[1076, "torch-empty-like"]], "torch.cuda.memory_usage": [[1033, "torch-cuda-memory-usage"]], "torch.cuda.memory_summary": [[1032, "torch-cuda-memory-summary"]], "torch.cuda.stream": [[1049, "torch-cuda-stream"]], "torch.cuda.set_sync_debug_mode": [[1048, "torch-cuda-set-sync-debug-mode"]], "torch.diag_embed": [[1062, "torch-diag-embed"]], "torch.det": [[1060, "torch-det"]], "torch.cuda.memory_reserved": [[1029, "torch-cuda-memory-reserved"]], "torch.cuda.temperature": [[1051, "torch-cuda-temperature"]], "torch.cuda.power_draw": [[1037, "torch-cuda-power-draw"]], "torch.dist": [[1068, "torch-dist"]], "torch.einsum": [[1074, "torch-einsum"]], "torch.cuda.set_per_process_memory_fraction": [[1044, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.utilization": [[1052, "torch-cuda-utilization"]], "torch.diagflat": [[1063, "torch-diagflat"]], "torch.dequantize": [[1059, "torch-dequantize"]], "torch.diagonal": [[1064, "torch-diagonal"]], "torch.cummin": [[1054, "torch-cummin"]], "torch.dsplit": [[1072, "torch-dsplit"]], "torch.cuda.memory_snapshot": [[1030, "torch-cuda-memory-snapshot"]], "torch.cuda.reset_max_memory_cached": [[1039, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.set_stream": [[1047, "torch-cuda-set-stream"]], "torch.cuda.synchronize": [[1050, "torch-cuda-synchronize"]], "torch.cumsum": [[1056, "torch-cumsum"]], "torch.cumprod": [[1055, "torch-cumprod"]], "torch.cuda.reset_max_memory_allocated": [[1038, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.seed": [[1041, "torch-cuda-seed"]], "torch.cuda.reset_peak_memory_stats": [[1040, "torch-cuda-reset-peak-memory-stats"]], "torch.dot": [[1071, "torch-dot"]], "torch.cuda.seed_all": [[1042, "torch-cuda-seed-all"]], "torch.empty": [[1075, "torch-empty"]], "torch.cuda.nvtx.range_pop": [[1035, "torch-cuda-nvtx-range-pop"]], "torch.divide": [[1070, "torch-divide"]], "torch.div": [[1069, "torch-div"]], "torch.cumulative_trapezoid": [[1057, "torch-cumulative-trapezoid"]], "torch.dstack": [[1073, "torch-dstack"]], "torch.cuda.nvtx.mark": [[1034, "torch-cuda-nvtx-mark"]], "torch.cummax": [[1053, "torch-cummax"]], "torch.cuda.set_rng_state_all": [[1046, "torch-cuda-set-rng-state-all"]], "torch.cuda.is_initialized": [[1016, "torch-cuda-is-initialized"]], "torch.cuda.max_memory_reserved": [[1025, "torch-cuda-max-memory-reserved"]], "torch.cuda.can_device_access_peer": [[984, "torch-cuda-can-device-access-peer"]], "Stream": [[980, "stream"], [967, "stream"]], "torch.cuda.get_arch_list": [[1001, "torch-cuda-get-arch-list"]], "device": [[996, "device"]], "torch.cuda.current_device": [[993, "torch-cuda-current-device"]], "torch.cuda.jiterator._create_jit_fn": [[1017, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.comm.scatter": [[991, "torch-cuda-comm-scatter"]], "graph": [[1009, "graph"]], "torch.cuda.max_memory_cached": [[1024, "torch-cuda-max-memory-cached"]], "torch.cuda.get_device_capability": [[1002, "torch-cuda-get-device-capability"]], "torch.cuda.memory_allocated": [[1027, "torch-cuda-memory-allocated"]], "device_of": [[998, "device-of"]], "torch.cuda.get_device_name": [[1003, "torch-cuda-get-device-name"]], "torch.cuda.init": [[1011, "torch-cuda-init"]], "torch.cuda.comm.broadcast_coalesced": [[988, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.comm.broadcast": [[987, "torch-cuda-comm-broadcast"]], "torch.cuda.caching_allocator_alloc": [[982, "torch-cuda-caching-allocator-alloc"]], "torch.cuda.get_gencode_flags": [[1005, "torch-cuda-get-gencode-flags"]], "torch.cuda.device_count": [[997, "torch-cuda-device-count"]], "torch.cuda.empty_cache": [[999, "torch-cuda-empty-cache"]], "torch.cuda.get_rng_state_all": [[1007, "torch-cuda-get-rng-state-all"]], "torch.cuda.get_sync_debug_mode": [[1008, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.ipc_collect": [[1013, "torch-cuda-ipc-collect"]], "torch.cuda.max_memory_allocated": [[1023, "torch-cuda-max-memory-allocated"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1018, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.caching_allocator_delete": [[983, "torch-cuda-caching-allocator-delete"]], "torch.cuda.memory_cached": [[1028, "torch-cuda-memory-cached"]], "torch.cuda.get_device_properties": [[1004, "torch-cuda-get-device-properties"]], "torch.cuda.mem_get_info": [[1026, "torch-cuda-mem-get-info"]], "torch.cuda.graph_pool_handle": [[1010, "torch-cuda-graph-pool-handle"]], "torch.cuda.get_allocator_backend": [[1000, "torch-cuda-get-allocator-backend"]], "torch.cuda.initial_seed": [[1012, "torch-cuda-initial-seed"]], "torch.cuda.current_stream": [[994, "torch-cuda-current-stream"]], "torch.cuda.current_blas_handle": [[992, "torch-cuda-current-blas-handle"]], "torch.cuda.is_current_stream_capturing": [[1015, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.comm.gather": [[989, "torch-cuda-comm-gather"]], "torch.cuda.get_rng_state": [[1006, "torch-cuda-get-rng-state"]], "torch.cuda.manual_seed": [[1021, "torch-cuda-manual-seed"]], "torch.cuda.manual_seed_all": [[1022, "torch-cuda-manual-seed-all"]], "torch.cuda.default_stream": [[995, "torch-cuda-default-stream"]], "torch.cuda.change_current_allocator": [[985, "torch-cuda-change-current-allocator"]], "torch.cuda.list_gpu_processes": [[1019, "torch-cuda-list-gpu-processes"]], "StreamContext": [[981, "streamcontext"], [968, "streamcontext"]], "torch.cuda.is_available": [[1014, "torch-cuda-is-available"]], "torch.cuda.make_graphed_callables": [[1020, "torch-cuda-make-graphed-callables"]], "torch.cuda.clock_rate": [[986, "torch-cuda-clock-rate"]], "torch.cuda.comm.reduce_add": [[990, "torch-cuda-comm-reduce-add"]], "torch.cov": [[966, "torch-cov"]], "torch.compiler.assume_constant_result": [[951, "torch-compiler-assume-constant-result"]], "torch.count_nonzero": [[965, "torch-count-nonzero"]], "torch.conj": [[959, "torch-conj"]], "torch.clone": [[945, "torch-clone"]], "torch.cartesian_prod": [[934, "torch-cartesian-prod"]], "torch.cpu.is_available": [[971, "torch-cpu-is-available"]], "torch.cat": [[935, "torch-cat"]], "torch.corrcoef": [[962, "torch-corrcoef"]], "torch.combinations": [[947, "torch-combinations"]], "torch.complex": [[956, "torch-complex"]], "torch.cos": [[963, "torch-cos"]], "torch.cholesky_inverse": [[940, "torch-cholesky-inverse"]], "torch.chain_matmul": [[938, "torch-chain-matmul"]], "torch.bucketize": [[932, "torch-bucketize"]], "torch.cpu.device_count": [[970, "torch-cpu-device-count"]], "torch.compiler.list_backends": [[954, "torch-compiler-list-backends"]], "torch.cdist": [[936, "torch-cdist"]], "torch.cuda.OutOfMemoryError": [[979, "torch-cuda-outofmemoryerror"]], "torch.clamp": [[943, "torch-clamp"]], "torch.chunk": [[942, "torch-chunk"]], "torch.broadcast_to": [[931, "torch-broadcast-to"]], "torch.clip": [[944, "torch-clip"]], "torch.ceil": [[937, "torch-ceil"]], "torch.compiler.compile": [[952, "torch-compiler-compile"]], "torch.compiler.disable": [[953, "torch-compiler-disable"], [1954, "torch-compiler-disable"]], "torch.cpu.synchronize": [[973, "torch-cpu-synchronize"]], "torch.compile": [[948, "torch-compile"]], "torch.conj_physical": [[960, "torch-conj-physical"]], "torch.cpu.current_stream": [[969, "torch-cpu-current-stream"]], "torch.cholesky": [[939, "torch-cholesky"]], "torch.cross": [[974, "torch-cross"]], "torch.concat": [[957, "torch-concat"]], "torch.cosh": [[964, "torch-cosh"]], "torch.compiler.allow_in_graph": [[950, "torch-compiler-allow-in-graph"], [1954, "torch-compiler-allow-in-graph"]], "torch.can_cast": [[933, "torch-can-cast"]], "torch.column_stack": [[946, "torch-column-stack"]], "torch.cpu.stream": [[972, "torch-cpu-stream"]], "CUDAPluggableAllocator": [[976, "cudapluggableallocator"]], "torch.concatenate": [[958, "torch-concatenate"]], "ExternalStream": [[978, "externalstream"]], "torch.compiled_with_cxx11_abi": [[949, "torch-compiled-with-cxx11-abi"]], "torch.compiler.reset": [[955, "torch-compiler-reset"]], "torch.copysign": [[961, "torch-copysign"]], "torch.cholesky_solve": [[941, "torch-cholesky-solve"]], "CUDAGraph": [[975, "cudagraph"]], "torch.bmm": [[928, "torch-bmm"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[894, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.functional.jacobian": [[899, "torch-autograd-functional-jacobian"]], "torch.autograd.graph.Node.register_prehook": [[910, "torch-autograd-graph-node-register-prehook"]], "torch.bitwise_xor": [[925, "torch-bitwise-xor"]], "torch.autograd.backward": [[889, "torch-autograd-backward"]], "torch.baddbmm": [[916, "torch-baddbmm"]], "torch.bitwise_left_shift": [[921, "torch-bitwise-left-shift"]], "torch.autograd.graph.Node.metadata": [[906, "torch-autograd-graph-node-metadata"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[914, "torch-autograd-profiler-profile-self-cpu-time-total"]], "dual_level": [[890, "dual-level"]], "torch.autograd.Function.jvp": [[887, "torch-autograd-function-jvp"]], "torch.autograd.Function.backward": [[885, "torch-autograd-function-backward"]], "torch.autograd.forward_ad.unpack_dual": [[892, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.graph.Node.name": [[907, "torch-autograd-graph-node-name"]], "torch.autograd.profiler.profile.export_chrome_trace": [[912, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.broadcast_shapes": [[929, "torch-broadcast-shapes"]], "torch.autograd.forward_ad.make_dual": [[891, "torch-autograd-forward-ad-make-dual"]], "torch.block_diag": [[927, "torch-block-diag"]], "torch.atleast_3d": [[884, "torch-atleast-3d"]], "torch.blackman_window": [[926, "torch-blackman-window"]], "torch.autograd.profiler.profile.key_averages": [[913, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.functional.hessian": [[897, "torch-autograd-functional-hessian"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[895, "torch-autograd-function-functionctx-save-for-backward"]], "torch.bernoulli": [[918, "torch-bernoulli"]], "torch.autograd.gradcheck": [[904, "torch-autograd-gradcheck"]], "torch.autograd.gradgradcheck": [[905, "torch-autograd-gradgradcheck"]], "torch.bartlett_window": [[917, "torch-bartlett-window"]], "torch.autograd.profiler.load_nvprof": [[911, "torch-autograd-profiler-load-nvprof"]], "torch.autograd.Function.vmap": [[888, "torch-autograd-function-vmap"]], "torch.bitwise_not": [[922, "torch-bitwise-not"]], "torch.atleast_2d": [[883, "torch-atleast-2d"]], "torch.autograd.functional.vjp": [[902, "torch-autograd-functional-vjp"]], "torch.autograd.profiler.profile.total_average": [[915, "torch-autograd-profiler-profile-total-average"]], "torch.bitwise_or": [[923, "torch-bitwise-or"]], "torch.atleast_1d": [[882, "torch-atleast-1d"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[896, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.bitwise_and": [[920, "torch-bitwise-and"]], "torch.bincount": [[919, "torch-bincount"]], "torch.autograd.graph.Node.register_hook": [[909, "torch-autograd-graph-node-register-hook"]], "torch.bitwise_right_shift": [[924, "torch-bitwise-right-shift"]], "torch.autograd.graph.Node.next_functions": [[908, "torch-autograd-graph-node-next-functions"]], "torch.autograd.functional.hvp": [[898, "torch-autograd-functional-hvp"]], "torch.autograd.functional.jvp": [[900, "torch-autograd-functional-jvp"]], "torch.autograd.Function.forward": [[886, "torch-autograd-function-forward"]], "torch.autograd.grad": [[903, "torch-autograd-grad"]], "torch.autograd.functional.vhp": [[901, "torch-autograd-functional-vhp"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[893, "torch-autograd-function-functionctx-mark-dirty"]], "torch.broadcast_tensors": [[930, "torch-broadcast-tensors"]], "torch.arctan2": [[867, "torch-arctan2"]], "torch.asarray": [[876, "torch-asarray"]], "default_activation_only_qconfig": [[838, "default-activation-only-qconfig"]], "prepare_qat_fx": [[858, "prepare-qat-fx"]], "torch.asinh": [[878, "torch-asinh"]], "torch.atan": [[879, "torch-atan"]], "prepare": [[834, "prepare"]], "quantize": [[853, "quantize"]], "torch.arctanh": [[868, "torch-arctanh"]], "default_dynamic_qconfig": [[840, "default-dynamic-qconfig"]], "prepare_fx": [[857, "prepare-fx"]], "torch.asin": [[877, "torch-asin"]], "float16_dynamic_qconfig": [[846, "float16-dynamic-qconfig"]], "torch.argmin": [[871, "torch-argmin"]], "torch.as_tensor": [[875, "torch-as-tensor"]], "torch.argwhere": [[873, "torch-argwhere"]], "torch.arctan": [[866, "torch-arctan"]], "quantize_dynamic": [[854, "quantize-dynamic"]], "QConfigMapping": [[850, "qconfigmapping"]], "default_qat_qconfig_v2": [[843, "default-qat-qconfig-v2"]], "torch.arccosh": [[863, "torch-arccosh"]], "torch.argmax": [[870, "torch-argmax"]], "torch.arccos": [[862, "torch-arccos"]], "convert_fx": [[855, "convert-fx"]], "fuse_fx": [[856, "fuse-fx"]], "default_per_channel_qconfig": [[841, "default-per-channel-qconfig"]], "default_qconfig": [[844, "default-qconfig"]], "per_channel_dynamic_qconfig": [[849, "per-channel-dynamic-qconfig"]], "torch.argsort": [[872, "torch-argsort"]], "default_qat_qconfig": [[842, "default-qat-qconfig"]], "torch.atanh": [[881, "torch-atanh"]], "prepare_qat": [[835, "prepare-qat"]], "torch.arange": [[861, "torch-arange"]], "get_default_qat_qconfig_mapping": [[851, "get-default-qat-qconfig-mapping"]], "torch.arcsin": [[864, "torch-arcsin"]], "propagate_qconfig": [[836, "propagate-qconfig"]], "torch.atan2": [[880, "torch-atan2"]], "swap_module": [[860, "swap-module"]], "torch.as_strided": [[874, "torch-as-strided"]], "float16_static_qconfig": [[847, "float16-static-qconfig"]], "torch.arcsinh": [[865, "torch-arcsinh"]], "default_weight_only_qconfig": [[845, "default-weight-only-qconfig"]], "default_debug_qconfig": [[839, "default-debug-qconfig"]], "quantize_qat": [[859, "quantize-qat"]], "QConfig": [[837, "qconfig"], [1925, "qconfig"]], "float_qparams_weight_only_qconfig": [[848, "float-qparams-weight-only-qconfig"]], "torch.are_deterministic_algorithms_enabled": [[869, "torch-are-deterministic-algorithms-enabled"]], "get_default_qconfig_mapping": [[852, "get-default-qconfig-mapping"]], "load_observer_state_dict": [[833, "load-observer-state-dict"]], "Customization": [[32, "customization"]], "Launcher": [[32, "launcher"]], "Rendezvous Handler": [[32, "rendezvous-handler"]], "Metric Handler": [[32, "metric-handler"]], "Events Handler": [[32, "events-handler"]], "Complex Numbers": [[11, "complex-numbers"]], "Creating Complex Tensors": [[11, "creating-complex-tensors"]], "Transition from the old representation": [[11, "transition-from-the-old-representation"]], "Accessing real and imag": [[11, "accessing-real-and-imag"]], "Angle and abs": [[11, "angle-and-abs"]], "Linear Algebra": [[11, "linear-algebra"]], "Serialization": [[11, "serialization"], [1942, "serialization"]], "Autograd": [[11, "autograd"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [9, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[10, "core-maintainers"], [9, "core-maintainers"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "Expiration Timers": [[42, "module-torch.distributed.elastic.timer"]], "Client Methods": [[42, "client-methods"]], "Server/Client Implementations": [[42, "server-client-implementations"]], "Writing a custom timer server/client": [[42, "writing-a-custom-timer-server-client"]], "torch.utils.dlpack": [[30, "torch-utils-dlpack"]], "Error Propagation": [[33, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[33, "methods-and-classes"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [1956, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "CUDA Stream Sanitizer": [[17, "cuda-stream-sanitizer"]], "Usage": [[17, "usage"], [26, null], [41, "usage"]], "torch.cpu": [[15, "module-torch.cpu"]], "Streams and events": [[15, "streams-and-events"], [16, "streams-and-events"]], "TorchElastic Kubernetes": [[36, "torchelastic-kubernetes"]], "Examples": [[35, "examples"], [1949, "examples"]], "Torch Distributed Elastic": [[26, "torch-distributed-elastic"]], "Get Started": [[26, "get-started"]], "Documentation": [[26, "documentation"]], "API": [[26, null]], "Advanced": [[26, null]], "Plugins": [[26, null]], "Metrics": [[37, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[37, "metric-handlers"]], "Methods": [[37, "methods"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "torch.func": [[47, "torch-func"]], "What are composable function transforms?": [[47, "what-are-composable-function-transforms"]], "Read More": [[47, "read-more"], [1945, "read-more"]], "Probability distributions - torch.distributions": [[29, "module-torch.distributions"]], "Score function": [[29, "score-function"]], "Pathwise derivative": [[29, "pathwise-derivative"]], "Distribution": [[29, "distribution"]], "ExponentialFamily": [[29, "exponentialfamily"]], "Bernoulli": [[29, "bernoulli"]], "Beta": [[29, "beta"]], "Binomial": [[29, "binomial"]], "Categorical": [[29, "categorical"]], "Cauchy": [[29, "cauchy"]], "Chi2": [[29, "chi2"]], "ContinuousBernoulli": [[29, "continuousbernoulli"]], "Dirichlet": [[29, "dirichlet"]], "Exponential": [[29, "exponential"]], "FisherSnedecor": [[29, "fishersnedecor"]], "Gamma": [[29, "gamma"]], "Geometric": [[29, "geometric"]], "Gumbel": [[29, "gumbel"]], "HalfCauchy": [[29, "halfcauchy"]], "HalfNormal": [[29, "halfnormal"]], "Independent": [[29, "independent"]], "Kumaraswamy": [[29, "kumaraswamy"]], "LKJCholesky": [[29, "lkjcholesky"]], "Laplace": [[29, "laplace"]], "LogNormal": [[29, "lognormal"]], "LowRankMultivariateNormal": [[29, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[29, "mixturesamefamily"]], "Multinomial": [[29, "multinomial"]], "MultivariateNormal": [[29, "multivariatenormal"]], "NegativeBinomial": [[29, "negativebinomial"]], "Normal": [[29, "normal"]], "OneHotCategorical": [[29, "onehotcategorical"]], "Pareto": [[29, "pareto"]], "Poisson": [[29, "poisson"]], "RelaxedBernoulli": [[29, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[29, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[29, "relaxedonehotcategorical"]], "StudentT": [[29, "studentt"]], "TransformedDistribution": [[29, "transformeddistribution"]], "Uniform": [[29, "uniform"]], "VonMises": [[29, "vonmises"]], "Weibull": [[29, "weibull"]], "Wishart": [[29, "wishart"]], "KL Divergence": [[29, "module-torch.distributions.kl"]], "Transforms": [[29, "module-torch.distributions.transforms"]], "Constraint Registry": [[29, "module-torch.distributions.constraint_registry"]], "Multiprocessing": [[38, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[38, "starting-multiple-workers"]], "Process Context": [[38, "process-context"]], "torch._export.export": [[44, "torch-export-export"]], "torchrun (Elastic Launch)": [[41, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[41, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[41, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[41, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[41, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[41, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[41, "note-on-rendezvous-backend"]], "Definitions": [[41, "definitions"]], "Environment Variables": [[41, "environment-variables"]], "Deployment": [[41, "deployment"]], "Failure Modes": [[41, "failure-modes"]], "Membership Changes": [[41, "membership-changes"]], "Important Notices": [[41, "important-notices"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[28, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch.func API Reference": [[48, "module-torch.func"]], "Function Transforms": [[48, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[48, "utilities-for-working-with-torch-nn-modules"]], "torch.utils.cpp_extension": [[13, "torch-utils-cpp-extension"]], "torch.__config__": [[12, "module-torch.__config__"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [1955, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1923, "tutorials"], [1922, "tutorials"], [1930, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[25, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.utils.data": [[20, "module-torch.utils.data"]], "Dataset Types": [[20, "dataset-types"]], "Map-style datasets": [[20, "map-style-datasets"]], "Iterable-style datasets": [[20, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[20, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[20, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[20, "automatic-batching-default"]], "Disable automatic batching": [[20, "disable-automatic-batching"]], "Working with collate_fn": [[20, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[20, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[20, "single-process-data-loading-default"]], "Multi-process data loading": [[20, "multi-process-data-loading"]], "Platform-specific behaviors": [[20, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[20, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[20, "memory-pinning"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "C++": [[14, "c"]], "TorchScript C++ API": [[14, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[14, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[14, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[14, "authoring-models-in-c"]], "Packaging for C++": [[14, "packaging-for-c"]], "Distributed communication package - torch.distributed": [[23, "distributed-communication-package-torch-distributed"]], "Backends": [[23, "backends"], [1930, "backends"]], "Backends that come with PyTorch": [[23, "backends-that-come-with-pytorch"]], "Which backend to use?": [[23, "which-backend-to-use"]], "Common environment variables": [[23, "common-environment-variables"]], "Choosing the network interface to use": [[23, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[23, "other-nccl-environment-variables"]], "Basics": [[23, "basics"], [1930, "basics"]], "Initialization": [[23, "initialization"]], "TCP initialization": [[23, "tcp-initialization"]], "Shared file-system initialization": [[23, "shared-file-system-initialization"]], "Environment variable initialization": [[23, "environment-variable-initialization"]], "Post-Initialization": [[23, "post-initialization"]], "Distributed Key-Value Store": [[23, "distributed-key-value-store"]], "Groups": [[23, "groups"]], "Point-to-point communication": [[23, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[23, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[23, "collective-functions"]], "Profiling Collective Communication": [[23, "profiling-collective-communication"]], "Multi-GPU collective functions": [[23, "multi-gpu-collective-functions"]], "Third-party backends": [[23, "third-party-backends"]], "Launch utility": [[23, "launch-utility"]], "Spawn utility": [[23, "spawn-utility"]], "Debugging torch.distributed applications": [[23, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[23, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[23, "torch-distributed-debug"]], "Logging": [[23, "logging"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "Events": [[34, "module-torch.distributed.elastic.events"]], "API Methods": [[34, "api-methods"]], "Event Objects": [[34, "event-objects"]], "Rendezvous": [[40, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[40, "registry"]], "Handler": [[40, "handler"]], "Exceptions": [[40, "exceptions"]], "Implementations": [[40, "implementations"], [31, "implementations"]], "Dynamic Rendezvous": [[40, "dynamic-rendezvous"]], "C10d Backend": [[40, "c10d-backend"]], "Etcd Backend": [[40, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[40, "etcd-rendezvous-legacy"]], "Etcd Store": [[40, "etcd-store"]], "Etcd Server": [[40, "etcd-server"]], "Train script": [[43, "train-script"]], "Elastic Agent": [[31, "module-torch.distributed.elastic.agent"]], "Server": [[31, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[31, "concepts"]], "Extending the Agent": [[31, "extending-the-agent"]], "Watchdog in the Agent": [[31, "watchdog-in-the-agent"]], "torch.cuda": [[16, "module-torch.cuda"]], "Random Number Generator": [[16, "random-number-generator"]], "Communication collectives": [[16, "communication-collectives"]], "Graphs (beta)": [[16, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[16, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[16, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[16, "stream-sanitizer-prototype"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch::deploy has been moved to pytorch/multipy": [[22, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Quickstart": [[39, "quickstart"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "Generic Join Context Manager": [[24, "generic-join-context-manager"]], "Distributed Optimizers": [[27, "distributed-optimizers"]], "torch.fft": [[45, "torch-fft"]], "Fast Fourier Transforms": [[45, "fast-fourier-transforms"]], "Helper Functions": [[45, "helper-functions"]], "FullyShardedDataParallel": [[46, "module-torch.distributed.fsdp"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "DDP Communication Hooks": [[21, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[21, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[21, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[21, "default-communication-hooks"]], "PowerSGD Communication Hook": [[21, "powersgd-communication-hook"]], "PowerSGD State": [[21, "powersgd-state"]], "PowerSGD Hooks": [[21, "powersgd-hooks"]], "Debugging Communication Hooks": [[21, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[21, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[21, "acknowledgements"], [1923, "acknowledgements"]], "default_debug_observer": [[824, "default-debug-observer"]], "DeQuantStub": [[784, "dequantstub"]], "default_eval_fn": [[794, "default-eval-fn"]], "default_fused_per_channel_wt_fake_quant": [[801, "default-fused-per-channel-wt-fake-quant"]], "default_fused_wt_fake_quant": [[802, "default-fused-wt-fake-quant"]], "StandaloneModuleConfigEntry": [[814, "standalonemoduleconfigentry"]], "enable_fake_quant": [[808, "enable-fake-quant"]], "ConvertCustomConfig": [[811, "convertcustomconfig"]], "PerChannelMinMaxObserver": [[821, "perchannelminmaxobserver"]], "MovingAveragePerChannelMinMaxObserver": [[818, "movingaverageperchannelminmaxobserver"]], "default_per_channel_weight_observer": [[829, "default-per-channel-weight-observer"]], "default_per_channel_weight_fake_quant": [[804, "default-per-channel-weight-fake-quant"]], "DTypeWithConstraints": [[791, "dtypewithconstraints"]], "ObservationType": [[792, "observationtype"]], "FixedQParamsFakeQuantize": [[797, "fixedqparamsfakequantize"]], "HistogramObserver": [[815, "histogramobserver"]], "NoopObserver": [[819, "noopobserver"]], "default_float_qparams_observer": [[826, "default-float-qparams-observer"]], "default_weight_observer": [[831, "default-weight-observer"]], "add_quant_dequant": [[787, "add-quant-dequant"]], "default_weight_fake_quant": [[805, "default-weight-fake-quant"]], "default_placeholder_observer": [[830, "default-placeholder-observer"]], "PrepareCustomConfig": [[813, "preparecustomconfig"]], "default_fused_act_fake_quant": [[800, "default-fused-act-fake-quant"]], "BackendPatternConfig": [[789, "backendpatternconfig"]], "RecordingObserver": [[823, "recordingobserver"]], "enable_observer": [[809, "enable-observer"]], "FakeQuantize": [[795, "fakequantize"]], "PlaceholderObserver": [[822, "placeholderobserver"]], "ObserverBase": [[820, "observerbase"]], "disable_fake_quant": [[806, "disable-fake-quant"]], "QuantStub": [[785, "quantstub"]], "QuantWrapper": [[786, "quantwrapper"]], "default_histogram_fake_quant": [[803, "default-histogram-fake-quant"]], "fuse_modules": [[810, "fuse-modules"]], "FuseCustomConfig": [[812, "fusecustomconfig"]], "default_observer": [[828, "default-observer"]], "convert": [[793, "convert"]], "MovingAverageMinMaxObserver": [[817, "movingaverageminmaxobserver"]], "default_fake_quant": [[799, "default-fake-quant"]], "default_dynamic_quant_observer": [[825, "default-dynamic-quant-observer"]], "BackendConfig": [[788, "backendconfig"]], "disable_observer": [[807, "disable-observer"]], "MinMaxObserver": [[816, "minmaxobserver"]], "DTypeConfig": [[790, "dtypeconfig"]], "default_histogram_observer": [[827, "default-histogram-observer"]], "FusedMovingAvgObsFakeQuantize": [[798, "fusedmovingavgobsfakequantize"]], "get_observer_state_dict": [[832, "get-observer-state-dict"]], "FakeQuantizeBase": [[796, "fakequantizebase"]], "upsample_bilinear": [[782, "upsample-bilinear"]], "celu": [[766, "celu"]], "adaptive_avg_pool2d": [[762, "adaptive-avg-pool2d"]], "linear": [[777, "linear"]], "hardtanh": [[774, "hardtanh"]], "threshold": [[780, "threshold"]], "elu": [[771, "elu"]], "max_pool1d": [[778, "max-pool1d"]], "conv2d": [[769, "conv2d"]], "leaky_relu": [[776, "leaky-relu"]], "QFunctional": [[753, "qfunctional"]], "FXFloatFunctional": [[743, "fxfloatfunctional"]], "max_pool2d": [[779, "max-pool2d"]], "upsample": [[781, "upsample"]], "conv1d": [[768, "conv1d"]], "FloatFunctional": [[744, "floatfunctional"]], "hardsigmoid": [[772, "hardsigmoid"]], "clamp": [[767, "clamp"]], "hardswish": [[773, "hardswish"]], "conv3d": [[770, "conv3d"]], "upsample_nearest": [[783, "upsample-nearest"]], "adaptive_avg_pool3d": [[763, "adaptive-avg-pool3d"]], "avg_pool2d": [[764, "avg-pool2d"]], "interpolate": [[775, "interpolate"]], "avg_pool3d": [[765, "avg-pool3d"]], "LinearReLU": [[724, "linearrelu"], [716, "linearrelu"], [707, "linearrelu"], [725, "linearrelu"]], "ConvBn2d": [[699, "convbn2d"], [709, "convbn2d"]], "ConvBnReLU1d": [[711, "convbnrelu1d"], [701, "convbnrelu1d"]], "torch.amin": [[692, "torch-amin"]], "ConvReLU2d": [[722, "convrelu2d"], [714, "convrelu2d"], [705, "convrelu2d"]], "ConvBnReLU2d": [[712, "convbnrelu2d"], [702, "convbnrelu2d"]], "ConvBn1d": [[698, "convbn1d"], [708, "convbn1d"]], "ConvBnReLU3d": [[703, "convbnrelu3d"], [713, "convbnrelu3d"]], "BNReLU3d": [[697, "bnrelu3d"], [720, "bnrelu3d"]], "ConvReLU1d": [[704, "convrelu1d"], [721, "convrelu1d"]], "torch.aminmax": [[693, "torch-aminmax"]], "ConvBn3d": [[710, "convbn3d"], [700, "convbn3d"]], "torch.angle": [[694, "torch-angle"]], "torch.addmv": [[686, "torch-addmv"]], "update_bn_stats": [[718, "update-bn-stats"]], "torch.any": [[695, "torch-any"]], "torch.addr": [[687, "torch-addr"]], "ConvReLU3d": [[715, "convrelu3d"], [723, "convrelu3d"], [706, "convrelu3d"]], "torch.allclose": [[690, "torch-allclose"]], "torch.amax": [[691, "torch-amax"]], "freeze_bn_stats": [[717, "freeze-bn-stats"]], "BNReLU2d": [[719, "bnrelu2d"], [696, "bnrelu2d"]], "torch.all": [[689, "torch-all"]], "torch.adjoint": [[688, "torch-adjoint"]], "TorchDynamo APIs for fine-grained tracing": [[1954, "torchdynamo-apis-for-fine-grained-tracing"]], "TorchDynamo APIs to control fine-grained tracing": [[1954, "id1"]], "torch._dynamo.disallow_in_graph": [[1954, "torch-dynamo-disallow-in-graph"]], "Limitations": [[1954, "limitations"], [1918, "limitations"], [1948, "limitations"]], "torch.onnx": [[1918, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1918, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1918, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1918, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1918, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1918, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1918, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1918, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1918, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1918, "reads-gets"]], "Writes / Sets": [[1918, "writes-sets"]], "Adding support for operators": [[1918, "adding-support-for-operators"]], "ONNX exporter internals": [[1918, "onnx-exporter-internals"]], "ATen operators": [[1918, "aten-operators"]], "List of supported operators": [[1918, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1918, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1918, "torch-autograd-functions"]], "Static Symbolic Method": [[1918, "static-symbolic-method"]], "Inline Autograd Function": [[1918, "inline-autograd-function"]], "Custom operators": [[1918, "custom-operators"]], "ONNX-script functions": [[1918, "onnx-script-functions"]], "C++ Operators": [[1918, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1918, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1918, "contributing-developing"]], "Classes": [[1918, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1918, "preview-torch-onnx-torchdynamo-exporter"]], "Pipeline Parallelism": [[1923, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1923, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1923, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1923, "pipe-apis-in-pytorch"]], "Skip connections": [[1923, "skip-connections"]], "TorchDynamo Deep Dive": [[1950, "torchdynamo-deep-dive"]], "TorchDynamo Internals": [[1950, "torchdynamo-internals"]], "What is a guard?": [[1950, "what-is-a-guard"]], "What is Dynamo doing?": [[1950, "what-is-dynamo-doing"]], "Dynamic shapes": [[1951, "dynamic-shapes"]], "Abridged public API": [[1951, "abridged-public-api"]], "The Guard Model": [[1951, "the-guard-model"]], "Overall architecture": [[1951, "overall-architecture"], [1952, "overall-architecture"]], "Abridged internal API": [[1951, "abridged-internal-api"]], "DimDynamic policy": [[1951, "dimdynamic-policy"]], "Unbacked SymInts": [[1951, "unbacked-symints"]], "torch.ao.ns._numeric_suite_fx": [[1944, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1944, "torch-ao-ns-fx-utils"]], "CUDAGraph Trees": [[1948, "cudagraph-trees"]], "CUDAGraph Background": [[1948, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[1948, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[1948, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[1948, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[1948, "cudagraph-trees-integration"]], "torch": [[1942, "module-torch"]], "Tensors": [[1942, "tensors"]], "Creation Ops": [[1942, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1942, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1942, "generators"]], "Random sampling": [[1942, "random-sampling"]], "In-place random sampling": [[1942, "in-place-random-sampling"]], "Quasi-random sampling": [[1942, "quasi-random-sampling"]], "Parallelism": [[1942, "parallelism"]], "Math operations": [[1942, "math-operations"]], "Pointwise Ops": [[1942, "pointwise-ops"]], "Reduction Ops": [[1942, "reduction-ops"]], "Comparison Ops": [[1942, "comparison-ops"]], "Spectral Ops": [[1942, "spectral-ops"]], "Other Operations": [[1942, "other-operations"]], "BLAS and LAPACK Operations": [[1942, "blas-and-lapack-operations"]], "Foreach Operations": [[1942, "foreach-operations"]], "Symbolic Numbers": [[1942, "symbolic-numbers"]], "Optimizations": [[1942, "optimizations"]], "Operator Tags": [[1942, "operator-tags"]], "torch.package": [[1922, "torch-package"]], "Packaging your first model": [[1922, "packaging-your-first-model"]], "How do I\u2026": [[1922, "how-do-i"]], "See what is inside a package?": [[1922, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1922, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1922, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1922, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1922, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1922, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1922, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1922, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1922, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1922, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1922, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1922, "package-a-torchscript-module"]], "Explanation": [[1922, "explanation"]], "torch.package Format Overview": [[1922, "torch-package-format-overview"]], "Framework files": [[1922, "framework-files"]], "User files": [[1922, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1922, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1922, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1922, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1922, "dependency-management"]], "intern": [[1922, "intern"]], "extern": [[1922, "extern"]], "mock": [[1922, "mock"]], "Refactoring": [[1922, "refactoring"]], "Patterns": [[1922, "patterns"]], "torch.package sharp edges": [[1922, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1922, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1922, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1922, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1922, "mangling"]], "A Simple Custom Module": [[1911, "a-simple-custom-module"]], "Modules as Building Blocks": [[1911, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1911, "neural-network-training-with-modules"]], "Module State": [[1911, "module-state"]], "Module Initialization": [[1911, "module-initialization"]], "Module Hooks": [[1911, "module-hooks"]], "Advanced Features": [[1911, "advanced-features"]], "Distributed Training": [[1911, "distributed-training"]], "Profiling Performance": [[1911, "profiling-performance"]], "Improving Performance with Quantization": [[1911, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1911, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1911, "parametrizations"]], "Transforming Modules with FX": [[1911, "transforming-modules-with-fx"]], "Quantization Accuracy Debugging": [[1926, "quantization-accuracy-debugging"], [1925, "quantization-accuracy-debugging"]], "Data insensitive error": [[1926, "data-insensitive-error"]], "General tips": [[1926, "general-tips"]], "Int8 quantization tips": [[1926, "int8-quantization-tips"]], "Data sensitive error": [[1926, "data-sensitive-error"]], "Implementation error": [[1926, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1926, "numerical-debugging-tooling-prototype"]], "Remote Reference Protocol": [[1932, "remote-reference-protocol"]], "Background": [[1932, "background"], [1931, "background"]], "Assumptions": [[1932, "assumptions"]], "RRef Lifetime": [[1932, "rref-lifetime"]], "Design Reasoning": [[1932, "design-reasoning"]], "Protocol Scenarios": [[1932, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1932, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1932, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1932, "owner-share-rref-with-user"]], "User Share RRef with User": [[1932, "user-share-rref-with-user"]], "Does torch.compile support training?": [[1953, "does-torch-compile-support-training"]], "Do you support Distributed code?": [[1953, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[1953, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[1953, "why-is-my-code-crashing"]], "Why is compilation slow?": [[1953, "why-is-compilation-slow"]], "Why are you recompiling in production?": [[1953, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[1953, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[1953, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[1953, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[1953, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[1953, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[1953, "why-am-i-getting-ooms"]], "torch.func does not work with torch.compile": [[1953, "torch-func-does-not-work-with-torch-compile"]], "Applying a torch.func transform to a function handled with torch.compile": [[1953, "applying-a-torch-func-transform-to-a-function-handled-with-torch-compile"]], "Calling torch.func transform inside of a function handled with torch.compile": [[1953, "calling-torch-func-transform-inside-of-a-function-handled-with-torch-compile"]], "Which API to use for fine grain tracing?": [[1953, "which-api-to-use-for-fine-grain-tracing"]], "How do I graph break on a function?": [[1953, "how-do-i-graph-break-on-a-function"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo.disallow_in_graph": [[1953, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-disallow-in-graph"]], "What\u2019s the difference between torch._dynamo.disable and torch._dynamo_skip": [[1953, "what-s-the-difference-between-torch-dynamo-disable-and-torch-dynamo-skip"]], "Using a pretrained model": [[1955, "using-a-pretrained-model"]], "Next Steps": [[1955, "next-steps"]], "torch.Storage": [[1936, "torch-storage"]], "TorchInductor GPU Profiling": [[1957, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[1957, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[1957, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[1957, "benchmark-individual-triton-kernel"]], "torch.special": [[1935, "torch-special"]], "torch.Tensor": [[1940, "torch-tensor"]], "Data types": [[1940, "data-types"]], "Initializing and basic operations": [[1940, "initializing-and-basic-operations"]], "Tensor class reference": [[1940, "tensor-class-reference"]], "IRs": [[1958, "irs"]], "Core Aten IR": [[1958, "core-aten-ir"]], "Prims IR": [[1958, "prims-ir"]], "Quantization API Reference": [[1928, "quantization-api-reference"], [1925, "quantization-api-reference"]], "torch.ao.quantization": [[1928, "torch-ao-quantization"]], "Top level APIs": [[1928, "top-level-apis"]], "Preparing model for quantization": [[1928, "preparing-model-for-quantization"]], "Utility functions": [[1928, "utility-functions"], [1916, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1928, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1928, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1928, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1928, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1928, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1928, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1928, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1928, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1928, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1928, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1928, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1928, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1928, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1928, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1928, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1928, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1928, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1928, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1928, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1928, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1928, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1928, "quantized-dtypes-and-quantization-schemes"]], "torch.signal": [[1933, "module-torch.signal"]], "torch.signal.windows": [[1933, "module-torch.signal.windows"]], "Tensor Views": [[1938, "tensor-views"]], "Reproducibility": [[1915, "reproducibility"]], "Controlling sources of randomness": [[1915, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1915, "pytorch-random-number-generator"]], "Python": [[1915, "python"]], "Random number generators in other libraries": [[1915, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1915, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1915, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1915, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1915, "cuda-rnn-and-lstm"]], "DataLoader": [[1915, "dataloader"]], "Tensor Attributes": [[1937, "tensor-attributes"]], "torch.dtype": [[1937, "torch-dtype"]], "torch.device": [[1937, "torch-device"]], "torch.layout": [[1937, "torch-layout"]], "torch.memory_format": [[1937, "torch-memory-format"]], "MPS backend": [[1912, "mps-backend"]], "torch.onnx diagnostics": [[1919, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1919, "diagnostic-rules"]], "torch.utils.tensorboard": [[1939, "module-torch.utils.tensorboard"]], "torch.compiler": [[1945, "torch-compiler"]], "Getting Started for PyTorch Users": [[1945, null]], "Deep Dive for PyTorch Developers": [[1945, null]], "HowTo for PyTorch Backend Vendors": [[1945, null]], "Guards Overview": [[1956, "guards-overview"]], "Caching and Guards Overview": [[1956, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[1956, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[1956, "instructiontranslator"]], "Making Guards": [[1956, "making-guards"]], "Fake tensor": [[1952, "fake-tensor"]], "Related work": [[1952, "related-work"]], "API: the important bits": [[1952, "api-the-important-bits"]], "Details": [[1952, "details"]], "About the tensor subclass": [[1952, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[1952, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[1952, "how-does-the-converter-work"]], "Performance characteristics": [[1952, "performance-characteristics"]], "Fake tensor of fake tensor?": [[1952, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[1952, "interaction-with-dynamic-shapes"]], "Other resources": [[1952, "other-resources"]], "Best Practices for Backends": [[1947, "best-practices-for-backends"]], "x86 CPU": [[1947, "x86-cpu"]], "torch.compiler API reference": [[1946, "torch-compiler-api-reference"]], "ONNX supported TorchScript operators": [[1920, "onnx-supported-torchscript-operators"]], "Supported operators": [[1920, "supported-operators"]], "ONNX support for TorchScript operators": [[1920, "id1"]], "Unsupported operators": [[1920, "unsupported-operators"], [1920, "id2"]], "Distributed RPC Framework": [[1930, "distributed-rpc-framework"]], "RPC": [[1930, "rpc"]], "TensorPipe Backend": [[1930, "tensorpipe-backend"]], "RRef": [[1930, "rref"]], "More Information about RRef": [[1930, null]], "RemoteModule": [[1930, "remotemodule"]], "Distributed Autograd Framework": [[1930, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1930, null]], "Distributed Optimizer": [[1930, "distributed-optimizer"], [1931, "distributed-optimizer"]], "Distributed Autograd Design": [[1931, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1931, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1931, "distributed-autograd-context"]], "Distributed Backward Pass": [[1931, "distributed-backward-pass"]], "Computing dependencies": [[1931, "computing-dependencies"]], "FAST mode algorithm": [[1931, "fast-mode-algorithm"]], "SMART mode algorithm": [[1931, "smart-mode-algorithm"]], "Simple end to end example": [[1931, "simple-end-to-end-example"]], "Multiprocessing best practices": [[1913, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1913, "cuda-in-multiprocessing"]], "Best practices and tips": [[1913, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1913, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1913, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1913, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1913, "hogwild"]], "CPU in multiprocessing": [[1913, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1913, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1913, "avoid-cpu-oversubscription"]], "Serialization semantics": [[1916, "serialization-semantics"]], "Table of Contents": [[1916, "table-of-contents"]], "Saving and loading tensors": [[1916, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1916, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1916, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1916, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1916, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1916, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1916, "torch-full-always-inferring-a-float-dtype"]], "Custom Backends": [[1949, "custom-backends"]], "Registering Custom Backends": [[1949, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[1949, "custom-backends-after-aotautograd"]], "Debugging Backend": [[1949, "debugging-backend"]], "Speedy Backend": [[1949, "speedy-backend"]], "Composable Backends": [[1949, "composable-backends"]], "torch.random": [[1929, "module-torch.random"]], "torch.sparse": [[1934, "torch-sparse"]], "Why and when to use sparsity": [[1934, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1934, "functionality-overview"]], "Operator overview": [[1934, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1934, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1934, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1934, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1934, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1934, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1934, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1934, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1934, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1934, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1934, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1934, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1934, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1934, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1934, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1934, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1934, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1934, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1934, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1934, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1934, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1934, "linear-algebra-operations"]], "Tensor methods and sparse": [[1934, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1934, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1934, "other-functions"]], "Unary functions": [[1934, "unary-functions"]], "torch.profiler": [[1924, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1924, "intel-instrumentation-and-tracing-technology-apis"]], "Quantization Backend Configuration": [[1927, "quantization-backend-configuration"], [1925, "quantization-backend-configuration"]], "Default values for native configurations": [[1927, "default-values-for-native-configurations"]], "torch.ao.ns._numeric_suite": [[1943, "torch-ao-ns-numeric-suite"]], "Quantization": [[1925, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1925, "introduction-to-quantization"]], "Quantization API Summary": [[1925, "quantization-api-summary"]], "Eager Mode Quantization": [[1925, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1925, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1925, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1925, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1925, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1925, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1925, "quantization-stack"]], "Quantized Model": [[1925, "quantized-model"]], "Quantized Tensor": [[1925, "quantized-tensor"]], "Quantize and Dequantize": [[1925, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1925, "quantized-operators-modules"]], "Quantized Engine": [[1925, "quantized-engine"]], "Quantization Flow": [[1925, "quantization-flow"]], "Observer and FakeQuantize": [[1925, "observer-and-fakequantize"]], "General Quantization Flow": [[1925, "general-quantization-flow"]], "Quantization Support Matrix": [[1925, "quantization-support-matrix"]], "Quantization Mode Support": [[1925, "quantization-mode-support"]], "Quantization Flow Support": [[1925, "quantization-flow-support"]], "Backend/Hardware Support": [[1925, "backend-hardware-support"]], "Note for native CPU backends": [[1925, "note-for-native-cpu-backends"]], "Operator Support": [[1925, "operator-support"]], "Quantization Customizations": [[1925, "quantization-customizations"]], "Quantization Custom Module API": [[1925, "quantization-custom-module-api"]], "Best Practices": [[1925, "best-practices"]], "Common Errors": [[1925, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1925, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1925, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1925, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1925, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "PyTorch 2.0 NNModule Support": [[1959, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[1959, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[1959, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[1959, "state-dict-hooks"]], "Windows FAQ": [[1917, "windows-faq"]], "Building from source": [[1917, "building-from-source"]], "Include optional components": [[1917, "include-optional-components"]], "Speeding CUDA build for Windows": [[1917, "speeding-cuda-build-for-windows"]], "One key install script": [[1917, "one-key-install-script"]], "Extension": [[1917, "extension"]], "CFFI Extension": [[1917, "cffi-extension"]], "Cpp Extension": [[1917, "cpp-extension"]], "Installation": [[1917, "installation"]], "Package not found in win-32 channel.": [[1917, "package-not-found-in-win-32-channel"]], "Import error": [[1917, "import-error"]], "Usage (multiprocessing)": [[1917, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1917, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1917, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1917, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1917, "cuda-ipc-operations"]], "torch.testing": [[1941, "module-torch.testing"]], "Numerical accuracy": [[1914, "numerical-accuracy"]], "Batched computations or slice computations": [[1914, "batched-computations-or-slice-computations"]], "Extremal values": [[1914, "extremal-values"]], "Linear algebra (torch.linalg)": [[1914, "linear-algebra-torch-linalg"]], "Non-finite values": [[1914, "non-finite-values"]], "Extremal values in linalg": [[1914, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1914, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1914, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1914, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "torch.optim": [[1921, "module-torch.optim"]], "How to use an optimizer": [[1921, "how-to-use-an-optimizer"]], "Constructing it": [[1921, "constructing-it"]], "Per-parameter options": [[1921, "per-parameter-options"]], "Taking an optimization step": [[1921, "taking-an-optimization-step"]], "optimizer.step()": [[1921, "optimizer-step"]], "optimizer.step(closure)": [[1921, "optimizer-step-closure"]], "Base class": [[1921, "base-class"]], "Algorithms": [[1921, "algorithms"]], "How to adjust learning rate": [[1921, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1921, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1921, "constructing-averaged-models"]], "Custom averaging strategies": [[1921, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1921, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1921, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1921, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1921, "putting-it-all-together-ema"]], "torch._foreach_log1p": [[652, "torch-foreach-log1p"]], "torch._foreach_round": [[661, "torch-foreach-round"]], "torch._logging.set_logs": [[676, "torch-logging-set-logs"]], "torch.acos": [[679, "torch-acos"]], "torch._foreach_erfc": [[637, "torch-foreach-erfc"]], "torch._foreach_frac": [[645, "torch-foreach-frac"]], "torch._foreach_zero_": [[675, "torch-foreach-zero"]], "torch._foreach_sin": [[665, "torch-foreach-sin"]], "torch._foreach_lgamma": [[647, "torch-foreach-lgamma"]], "torch.add": [[681, "torch-add"]], "torch._foreach_log1p_": [[653, "torch-foreach-log1p"]], "torch._foreach_reciprocal_": [[660, "torch-foreach-reciprocal"]], "torch._foreach_trunc": [[673, "torch-foreach-trunc"]], "torch._foreach_tan": [[671, "torch-foreach-tan"]], "torch._foreach_log2": [[654, "torch-foreach-log2"]], "torch.acosh": [[680, "torch-acosh"]], "torch._foreach_expm1_": [[642, "torch-foreach-expm1"]], "torch._foreach_neg_": [[658, "torch-foreach-neg"]], "torch._foreach_expm1": [[641, "torch-foreach-expm1"]], "torch._foreach_frac_": [[646, "torch-foreach-frac"]], "torch._foreach_log": [[649, "torch-foreach-log"]], "torch._foreach_log_": [[656, "torch-foreach-log"]], "torch._foreach_erfc_": [[638, "torch-foreach-erfc"]], "torch._foreach_round_": [[662, "torch-foreach-round"]], "torch._foreach_sin_": [[666, "torch-foreach-sin"]], "torch._foreach_sqrt": [[669, "torch-foreach-sqrt"]], "torch._foreach_sigmoid": [[663, "torch-foreach-sigmoid"]], "torch._foreach_sigmoid_": [[664, "torch-foreach-sigmoid"]], "torch._foreach_log2_": [[655, "torch-foreach-log2"]], "torch._foreach_sinh": [[667, "torch-foreach-sinh"]], "torch.addbmm": [[682, "torch-addbmm"]], "torch.addcdiv": [[683, "torch-addcdiv"]], "torch._foreach_log10": [[650, "torch-foreach-log10"]], "torch._foreach_reciprocal": [[659, "torch-foreach-reciprocal"]], "torch._foreach_sinh_": [[668, "torch-foreach-sinh"]], "torch._foreach_tan_": [[672, "torch-foreach-tan"]], "torch._foreach_sqrt_": [[670, "torch-foreach-sqrt"]], "torch._foreach_lgamma_": [[648, "torch-foreach-lgamma"]], "torch._foreach_floor_": [[644, "torch-foreach-floor"]], "torch._foreach_exp": [[639, "torch-foreach-exp"]], "torch._foreach_neg": [[657, "torch-foreach-neg"]], "torch.addcmul": [[684, "torch-addcmul"]], "torch._foreach_exp_": [[640, "torch-foreach-exp"]], "torch._foreach_floor": [[643, "torch-foreach-floor"]], "torch.addmm": [[685, "torch-addmm"]], "torch._foreach_log10_": [[651, "torch-foreach-log10"]], "torch.absolute": [[678, "torch-absolute"]], "torch._foreach_trunc_": [[674, "torch-foreach-trunc"]], "torch.abs": [[677, "torch-abs"]], "torch.Tensor.tril": [[591, "torch-tensor-tril"]], "torch.Tensor.view": [[613, "torch-tensor-view"]], "torch.Tensor.unflatten": [[602, "torch-tensor-unflatten"]], "torch.Tensor.var": [[611, "torch-tensor-var"]], "torch._foreach_abs": [[621, "torch-foreach-abs"]], "torch.Tensor.unique": [[605, "torch-tensor-unique"]], "torch.Tensor.trunc": [[597, "torch-tensor-trunc"]], "torch._foreach_acos": [[623, "torch-foreach-acos"]], "torch._foreach_asin": [[625, "torch-foreach-asin"]], "torch._foreach_asin_": [[626, "torch-foreach-asin"]], "torch._foreach_cos_": [[632, "torch-foreach-cos"]], "torch.Tensor.transpose_": [[589, "torch-tensor-transpose"]], "torch._foreach_cosh": [[633, "torch-foreach-cosh"]], "torch.Tensor.zero_": [[619, "torch-tensor-zero"]], "torch.Tensor.true_divide": [[595, "torch-tensor-true-divide"]], "torch.Tensor.unsqueeze_": [[608, "torch-tensor-unsqueeze"]], "torch.Tensor.where": [[616, "torch-tensor-where"]], "torch.Tensor.uniform_": [[604, "torch-tensor-uniform"]], "torch._foreach_erf_": [[636, "torch-foreach-erf"]], "torch.Tensor.true_divide_": [[596, "torch-tensor-true-divide"]], "torch._foreach_atan": [[627, "torch-foreach-atan"]], "torch.Tensor.triangular_solve": [[590, "torch-tensor-triangular-solve"]], "torch.Tensor.unique_consecutive": [[606, "torch-tensor-unique-consecutive"]], "torch.Tensor.triu": [[593, "torch-tensor-triu"]], "torch.Tensor.unbind": [[601, "torch-tensor-unbind"]], "torch._foreach_cos": [[631, "torch-foreach-cos"]], "torch.Tensor.xlogy": [[617, "torch-tensor-xlogy"]], "torch.Tensor.view_as": [[614, "torch-tensor-view-as"]], "torch.Tensor.vsplit": [[615, "torch-tensor-vsplit"]], "torch.Tensor.unfold": [[603, "torch-tensor-unfold"]], "torch.Tensor.trunc_": [[598, "torch-tensor-trunc"]], "torch._foreach_cosh_": [[634, "torch-foreach-cosh"]], "torch._foreach_abs_": [[622, "torch-foreach-abs"]], "torch.Tensor.transpose": [[588, "torch-tensor-transpose"]], "torch.Tensor.tril_": [[592, "torch-tensor-tril"]], "torch._assert": [[620, "torch-assert"]], "torch.Tensor.type_as": [[600, "torch-tensor-type-as"]], "torch._foreach_ceil_": [[630, "torch-foreach-ceil"]], "torch.Tensor.type": [[599, "torch-tensor-type"]], "torch._foreach_erf": [[635, "torch-foreach-erf"]], "torch.Tensor.untyped_storage": [[609, "torch-tensor-untyped-storage"]], "torch._foreach_ceil": [[629, "torch-foreach-ceil"]], "torch._foreach_acos_": [[624, "torch-foreach-acos"]], "torch.Tensor.vdot": [[612, "torch-tensor-vdot"]], "torch.Tensor.values": [[610, "torch-tensor-values"]], "torch._foreach_atan_": [[628, "torch-foreach-atan"]], "torch.Tensor.unsqueeze": [[607, "torch-tensor-unsqueeze"]], "torch.Tensor.triu_": [[594, "torch-tensor-triu"]], "torch.Tensor.xlogy_": [[618, "torch-tensor-xlogy"]], "torch.Tensor.square_": [[547, "torch-tensor-square"]], "torch.Tensor.tan": [[570, "torch-tensor-tan"]], "torch.Tensor.sqrt_": [[545, "torch-tensor-sqrt"]], "torch.Tensor.sparse_resize_and_clear_": [[542, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.to_sparse_coo": [[582, "torch-tensor-to-sparse-coo"]], "torch.Tensor.tolist": [[585, "torch-tensor-tolist"]], "torch.Tensor.swapaxes": [[564, "torch-tensor-swapaxes"]], "torch.Tensor.swapdims": [[565, "torch-tensor-swapdims"]], "torch.Tensor.sqrt": [[544, "torch-tensor-sqrt"]], "torch.Tensor.sparse_mask": [[540, "torch-tensor-sparse-mask"]], "torch.Tensor.tanh": [[572, "torch-tensor-tanh"]], "torch.Tensor.trace": [[587, "torch-tensor-trace"]], "torch.Tensor.storage": [[553, "torch-tensor-storage"]], "torch.Tensor.storage_type": [[555, "torch-tensor-storage-type"]], "torch.Tensor.t": [[566, "torch-tensor-t"]], "torch.Tensor.to": [[576, "torch-tensor-to"]], "torch.Tensor.tanh_": [[573, "torch-tensor-tanh"]], "torch.Tensor.sub": [[557, "torch-tensor-sub"]], "torch.Tensor.split": [[543, "torch-tensor-split"]], "torch.Tensor.take": [[568, "torch-tensor-take"]], "torch.Tensor.stride": [[556, "torch-tensor-stride"]], "torch.Tensor.storage_offset": [[554, "torch-tensor-storage-offset"]], "torch.Tensor.sum_to_size": [[562, "torch-tensor-sum-to-size"]], "torch.Tensor.to_dense": [[577, "torch-tensor-to-dense"]], "torch.Tensor.sub_": [[558, "torch-tensor-sub"]], "torch.Tensor.squeeze_": [[549, "torch-tensor-squeeze"]], "torch.Tensor.subtract_": [[560, "torch-tensor-subtract"]], "torch.Tensor.svd": [[563, "torch-tensor-svd"]], "torch.Tensor.std": [[551, "torch-tensor-std"]], "torch.Tensor.t_": [[567, "torch-tensor-t"]], "torch.Tensor.tan_": [[571, "torch-tensor-tan"]], "torch.Tensor.stft": [[552, "torch-tensor-stft"]], "torch.Tensor.tile": [[575, "torch-tensor-tile"]], "torch.Tensor.to_sparse": [[579, "torch-tensor-to-sparse"]], "torch.Tensor.to_sparse_bsr": [[581, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.subtract": [[559, "torch-tensor-subtract"]], "torch.Tensor.squeeze": [[548, "torch-tensor-squeeze"]], "torch.Tensor.topk": [[586, "torch-tensor-topk"]], "torch.Tensor.sparse_dim": [[539, "torch-tensor-sparse-dim"]], "torch.Tensor.to_sparse_csc": [[583, "torch-tensor-to-sparse-csc"]], "torch.Tensor.sparse_resize_": [[541, "torch-tensor-sparse-resize"]], "torch.Tensor.tensor_split": [[574, "torch-tensor-tensor-split"]], "torch.Tensor.sum": [[561, "torch-tensor-sum"]], "torch.Tensor.to_sparse_csr": [[584, "torch-tensor-to-sparse-csr"]], "torch.Tensor.take_along_dim": [[569, "torch-tensor-take-along-dim"]], "torch.Tensor.to_sparse_bsc": [[580, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.square": [[546, "torch-tensor-square"]], "torch.Tensor.sspaddmm": [[550, "torch-tensor-sspaddmm"]], "torch.Tensor.to_mkldnn": [[578, "torch-tensor-to-mkldnn"]], "torch.Tensor.repeat_interleave": [[490, "torch-tensor-repeat-interleave"]], "torch.Tensor.sigmoid": [[522, "torch-tensor-sigmoid"]], "torch.Tensor.sigmoid_": [[523, "torch-tensor-sigmoid"]], "torch.Tensor.sign_": [[525, "torch-tensor-sign"]], "torch.Tensor.signbit": [[526, "torch-tensor-signbit"]], "torch.Tensor.slice_scatter": [[534, "torch-tensor-slice-scatter"]], "torch.Tensor.reshape": [[493, "torch-tensor-reshape"]], "torch.Tensor.set_": [[516, "torch-tensor-set"]], "torch.Tensor.select_scatter": [[515, "torch-tensor-select-scatter"]], "torch.Tensor.sin": [[527, "torch-tensor-sin"]], "torch.Tensor.sgn_": [[518, "torch-tensor-sgn"]], "torch.Tensor.row_indices": [[505, "torch-tensor-row-indices"]], "torch.Tensor.sign": [[524, "torch-tensor-sign"]], "torch.Tensor.slogdet": [[535, "torch-tensor-slogdet"]], "torch.Tensor.sort": [[538, "torch-tensor-sort"]], "torch.Tensor.scatter": [[508, "torch-tensor-scatter"]], "torch.Tensor.scatter_reduce": [[512, "torch-tensor-scatter-reduce"]], "torch.Tensor.scatter_": [[509, "torch-tensor-scatter"]], "torch.Tensor.select": [[514, "torch-tensor-select"]], "torch.Tensor.smm": [[536, "torch-tensor-smm"]], "torch.Tensor.rot90": [[502, "torch-tensor-rot90"]], "torch.Tensor.requires_grad_": [[492, "torch-tensor-requires-grad"]], "torch.Tensor.reshape_as": [[494, "torch-tensor-reshape-as"]], "torch.Tensor.resolve_conj": [[497, "torch-tensor-resolve-conj"]], "torch.Tensor.sin_": [[528, "torch-tensor-sin"]], "torch.Tensor.sinh_": [[532, "torch-tensor-sinh"]], "torch.Tensor.softmax": [[537, "torch-tensor-softmax"]], "torch.Tensor.sinc": [[529, "torch-tensor-sinc"]], "torch.Tensor.rsqrt_": [[507, "torch-tensor-rsqrt"]], "torch.Tensor.share_memory_": [[520, "torch-tensor-share-memory"]], "torch.Tensor.sgn": [[517, "torch-tensor-sgn"]], "torch.Tensor.resize_as_": [[496, "torch-tensor-resize-as"]], "torch.Tensor.retains_grad": [[500, "torch-tensor-retains-grad"]], "torch.Tensor.sinc_": [[530, "torch-tensor-sinc"]], "torch.Tensor.scatter_add_": [[511, "torch-tensor-scatter-add"]], "torch.Tensor.scatter_add": [[510, "torch-tensor-scatter-add"]], "torch.Tensor.shape": [[519, "torch-tensor-shape"]], "torch.Tensor.short": [[521, "torch-tensor-short"]], "torch.Tensor.scatter_reduce_": [[513, "torch-tensor-scatter-reduce"]], "torch.Tensor.size": [[533, "torch-tensor-size"]], "torch.Tensor.resolve_neg": [[498, "torch-tensor-resolve-neg"]], "torch.Tensor.resize_": [[495, "torch-tensor-resize"]], "torch.Tensor.roll": [[501, "torch-tensor-roll"]], "torch.Tensor.retain_grad": [[499, "torch-tensor-retain-grad"]], "torch.Tensor.round_": [[504, "torch-tensor-round"]], "torch.Tensor.requires_grad": [[491, "torch-tensor-requires-grad"]], "torch.Tensor.round": [[503, "torch-tensor-round"]], "torch.Tensor.rsqrt": [[506, "torch-tensor-rsqrt"]], "torch.Tensor.sinh": [[531, "torch-tensor-sinh"]], "torch.Tensor.outer": [[458, "torch-tensor-outer"]], "torch.Tensor.polygamma": [[462, "torch-tensor-polygamma"]], "torch.Tensor.register_hook": [[484, "torch-tensor-register-hook"]], "torch.Tensor.nelement": [[441, "torch-tensor-nelement"]], "torch.Tensor.pow": [[465, "torch-tensor-pow"]], "torch.Tensor.ravel": [[479, "torch-tensor-ravel"]], "torch.Tensor.new_ones": [[444, "torch-tensor-new-ones"]], "torch.Tensor.nextafter_": [[448, "torch-tensor-nextafter"]], "torch.Tensor.random_": [[478, "torch-tensor-random"]], "torch.Tensor.record_stream": [[483, "torch-tensor-record-stream"]], "torch.Tensor.q_per_channel_axis": [[469, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.polygamma_": [[463, "torch-tensor-polygamma"]], "torch.Tensor.qr": [[474, "torch-tensor-qr"]], "torch.Tensor.new_zeros": [[446, "torch-tensor-new-zeros"]], "torch.Tensor.q_scale": [[472, "torch-tensor-q-scale"]], "torch.Tensor.nonzero": [[449, "torch-tensor-nonzero"]], "torch.Tensor.remainder_": [[486, "torch-tensor-remainder"]], "torch.Tensor.normal_": [[451, "torch-tensor-normal"]], "torch.Tensor.qscheme": [[475, "torch-tensor-qscheme"]], "torch.Tensor.nextafter": [[447, "torch-tensor-nextafter"]], "torch.Tensor.real": [[480, "torch-tensor-real"]], "torch.Tensor.prod": [[467, "torch-tensor-prod"]], "torch.Tensor.new_full": [[443, "torch-tensor-new-full"]], "torch.Tensor.numpy": [[455, "torch-tensor-numpy"]], "torch.Tensor.q_per_channel_scales": [[470, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.renorm": [[487, "torch-tensor-renorm"]], "torch.Tensor.numel": [[454, "torch-tensor-numel"]], "torch.Tensor.q_per_channel_zero_points": [[471, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.new_empty": [[442, "torch-tensor-new-empty"]], "torch.Tensor.permute": [[459, "torch-tensor-permute"]], "torch.Tensor.pow_": [[466, "torch-tensor-pow"]], "torch.Tensor.pin_memory": [[460, "torch-tensor-pin-memory"]], "torch.Tensor.pinverse": [[461, "torch-tensor-pinverse"]], "torch.Tensor.rad2deg": [[477, "torch-tensor-rad2deg"]], "torch.Tensor.reciprocal": [[481, "torch-tensor-reciprocal"]], "torch.Tensor.norm": [[450, "torch-tensor-norm"]], "torch.Tensor.not_equal": [[452, "torch-tensor-not-equal"]], "torch.Tensor.q_zero_point": [[473, "torch-tensor-q-zero-point"]], "torch.Tensor.remainder": [[485, "torch-tensor-remainder"]], "torch.Tensor.ormqr": [[457, "torch-tensor-ormqr"]], "torch.Tensor.positive": [[464, "torch-tensor-positive"]], "torch.Tensor.new_tensor": [[445, "torch-tensor-new-tensor"]], "torch.Tensor.quantile": [[476, "torch-tensor-quantile"]], "torch.Tensor.not_equal_": [[453, "torch-tensor-not-equal"]], "torch.Tensor.reciprocal_": [[482, "torch-tensor-reciprocal"]], "torch.Tensor.repeat": [[489, "torch-tensor-repeat"]], "torch.Tensor.orgqr": [[456, "torch-tensor-orgqr"]], "torch.Tensor.put_": [[468, "torch-tensor-put"]], "torch.Tensor.renorm_": [[488, "torch-tensor-renorm"]], "torch.Tensor.matmul": [[402, "torch-tensor-matmul"]], "torch.Tensor.map_": [[396, "torch-tensor-map"]], "torch.Tensor.movedim": [[414, "torch-tensor-movedim"]], "torch.Tensor.nanmean": [[426, "torch-tensor-nanmean"]], "torch.Tensor.nbytes": [[432, "torch-tensor-nbytes"]], "torch.Tensor.nanquantile": [[428, "torch-tensor-nanquantile"]], "torch.Tensor.lt_": [[393, "torch-tensor-lt"]], "torch.Tensor.matrix_power": [[404, "torch-tensor-matrix-power"]], "torch.Tensor.narrow": [[430, "torch-tensor-narrow"]], "torch.Tensor.lu_solve": [[395, "torch-tensor-lu-solve"]], "torch.Tensor.mvlgamma": [[422, "torch-tensor-mvlgamma"]], "torch.Tensor.ne": [[435, "torch-tensor-ne"]], "torch.Tensor.neg_": [[438, "torch-tensor-neg"]], "torch.Tensor.maximum": [[406, "torch-tensor-maximum"]], "torch.Tensor.minimum": [[410, "torch-tensor-minimum"]], "torch.Tensor.lu": [[394, "torch-tensor-lu"]], "torch.Tensor.masked_select": [[401, "torch-tensor-masked-select"]], "torch.Tensor.max": [[405, "torch-tensor-max"]], "torch.Tensor.negative": [[439, "torch-tensor-negative"]], "torch.Tensor.multiply_": [[420, "torch-tensor-multiply"]], "torch.Tensor.masked_scatter": [[399, "torch-tensor-masked-scatter"]], "torch.Tensor.ne_": [[436, "torch-tensor-ne"]], "torch.Tensor.mul": [[416, "torch-tensor-mul"]], "torch.Tensor.msort": [[415, "torch-tensor-msort"]], "torch.Tensor.multiply": [[419, "torch-tensor-multiply"]], "torch.Tensor.matrix_exp": [[403, "torch-tensor-matrix-exp"]], "torch.Tensor.masked_fill": [[397, "torch-tensor-masked-fill"]], "torch.Tensor.nan_to_num_": [[425, "torch-tensor-nan-to-num"]], "torch.Tensor.mode": [[412, "torch-tensor-mode"]], "torch.Tensor.negative_": [[440, "torch-tensor-negative"]], "torch.Tensor.masked_fill_": [[398, "torch-tensor-masked-fill"]], "torch.Tensor.ndim": [[433, "torch-tensor-ndim"]], "torch.Tensor.masked_scatter_": [[400, "torch-tensor-masked-scatter"]], "torch.Tensor.ndimension": [[434, "torch-tensor-ndimension"]], "torch.Tensor.nansum": [[429, "torch-tensor-nansum"]], "torch.Tensor.lt": [[392, "torch-tensor-lt"]], "torch.Tensor.multinomial": [[418, "torch-tensor-multinomial"]], "torch.Tensor.moveaxis": [[413, "torch-tensor-moveaxis"]], "torch.Tensor.mvlgamma_": [[423, "torch-tensor-mvlgamma"]], "torch.Tensor.mm": [[411, "torch-tensor-mm"]], "torch.Tensor.median": [[408, "torch-tensor-median"]], "torch.Tensor.min": [[409, "torch-tensor-min"]], "torch.Tensor.mul_": [[417, "torch-tensor-mul"]], "torch.Tensor.nan_to_num": [[424, "torch-tensor-nan-to-num"]], "torch.Tensor.narrow_copy": [[431, "torch-tensor-narrow-copy"]], "torch.Tensor.mean": [[407, "torch-tensor-mean"]], "torch.Tensor.mv": [[421, "torch-tensor-mv"]], "torch.Tensor.nanmedian": [[427, "torch-tensor-nanmedian"]], "torch.Tensor.neg": [[437, "torch-tensor-neg"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [12, "module-torch.__config__"], [15, "module-torch.cpu"], [16, "module-torch.cuda"], [17, "module-torch.cuda._sanitizer"], [20, "module-torch.utils.data"], [20, "module-torch.utils.data.datapipes"], [20, "module-torch.utils.data.datapipes.dataframe"], [20, "module-torch.utils.data.datapipes.iter"], [20, "module-torch.utils.data.datapipes.map"], [20, "module-torch.utils.data.datapipes.utils"], [23, "module-torch.distributed"], [23, "module-torch.distributed.algorithms"], [23, "module-torch.distributed.algorithms.ddp_comm_hooks"], [23, "module-torch.distributed.algorithms.model_averaging"], [23, "module-torch.distributed.elastic"], [23, "module-torch.distributed.elastic.utils"], [23, "module-torch.distributed.elastic.utils.data"], [23, "module-torch.distributed.launch"], [23, "module-torch.distributed.launcher"], [23, "module-torch.distributed.nn"], [23, "module-torch.distributed.nn.api"], [23, "module-torch.distributed.nn.jit"], [23, "module-torch.distributed.nn.jit.templates"], [23, "module-torch.distributed.pipeline"], [23, "module-torch.distributed.pipeline.sync"], [23, "module-torch.distributed.pipeline.sync.skip"], [23, "module-torch.distributed.tensor"], [25, "module-torch.distributed.checkpoint"], [27, "module-torch.distributed.optim"], [28, "module-torch.distributed.tensor.parallel"], [29, "module-torch.distributions"], [29, "module-torch.distributions.constraint_registry"], [29, "module-torch.distributions.constraints"], [29, "module-torch.distributions.kl"], [29, "module-torch.distributions.transforms"], [31, "module-torch.distributed.elastic.agent"], [31, "module-torch.distributed.elastic.agent.server"], [33, "module-torch.distributed.elastic.multiprocessing.errors"], [34, "module-torch.distributed.elastic.events"], [37, "module-torch.distributed.elastic.metrics"], [38, "module-torch.distributed.elastic.multiprocessing"], [40, "module-torch.distributed.elastic.rendezvous"], [40, "module-torch.distributed.elastic.rendezvous.registry"], [41, "module-torch.distributed.run"], [42, "module-torch.distributed.elastic.timer"], [45, "module-torch.fft"], [46, "module-torch.distributed.fsdp"], [48, "module-torch.func"], [53, "module-torch.futures"], [54, "module-torch.fx"], [54, "module-torch.fx.experimental"], [54, "module-torch.fx.experimental.migrate_gradual_types"], [54, "module-torch.fx.experimental.unification"], [54, "module-torch.fx.experimental.unification.multipledispatch"], [54, "module-torch.fx.passes"], [54, "module-torch.fx.passes.backends"], [54, "module-torch.fx.passes.dialect"], [54, "module-torch.fx.passes.dialect.common"], [54, "module-torch.fx.passes.infra"], [54, "module-torch.fx.passes.tests"], [54, "module-torch.fx.passes.utils"], [1875, "module-torch.hub"], [1877, "module-torch.jit"], [1877, "module-torch.jit.mobile"], [1878, "module-torch.jit.supported_ops"], [1882, "module-torch.jit.unsupported_tensor_ops"], [1883, "module-torch.utils.jit"], [1885, "module-torch.linalg"], [1886, "module-torch._logging"], [1887, "module-torch.masked"], [1887, "module-torch.masked.maskedtensor"], [1889, "module-torch.utils.model_zoo"], [1890, "module-torch.monitor"], [1891, "module-torch.mps"], [1892, "module-torch.multiprocessing"], [1895, "module-torch.nested"], [1896, "module-torch.nn"], [1896, "module-torch.nn.backends"], [1896, "module-torch.nn.modules"], [1896, "module-torch.nn.parallel"], [1896, "module-torch.nn.utils"], [1896, "module-torch.nn.utils.stateless"], [1918, "module-torch.onnx"], [1919, "module-torch.onnx._internal.diagnostics"], [1921, "module-torch.optim"], [1922, "module-torch.package"], [1922, "module-torch.package.analyze"], [1924, "module-torch.profiler"], [1925, "module-torch.ao"], [1925, "module-torch.ao.nn"], [1925, "module-torch.ao.nn.quantizable"], [1925, "module-torch.ao.nn.quantizable.modules"], [1925, "module-torch.ao.nn.quantized"], [1925, "module-torch.ao.nn.quantized.reference"], [1925, "module-torch.ao.nn.quantized.reference.modules"], [1925, "module-torch.ao.nn.sparse"], [1925, "module-torch.ao.nn.sparse.quantized"], [1925, "module-torch.ao.nn.sparse.quantized.dynamic"], [1925, "module-torch.ao.ns"], [1925, "module-torch.ao.ns.fx"], [1925, "module-torch.ao.pruning"], [1925, "module-torch.ao.pruning.scheduler"], [1925, "module-torch.ao.pruning.sparsifier"], [1925, "module-torch.ao.quantization"], [1925, "module-torch.ao.quantization.backend_config"], [1925, "module-torch.ao.quantization.fx"], [1928, "module-torch.ao.nn.intrinsic"], [1928, "module-torch.ao.nn.intrinsic.modules"], [1928, "module-torch.ao.nn.intrinsic.qat"], [1928, "module-torch.ao.nn.intrinsic.qat.modules"], [1928, "module-torch.ao.nn.intrinsic.quantized"], [1928, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1928, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1928, "module-torch.ao.nn.intrinsic.quantized.modules"], [1928, "module-torch.ao.nn.qat"], [1928, "module-torch.ao.nn.qat.dynamic"], [1928, "module-torch.ao.nn.qat.dynamic.modules"], [1928, "module-torch.ao.nn.qat.modules"], [1928, "module-torch.ao.nn.quantized.dynamic"], [1928, "module-torch.ao.nn.quantized.dynamic.modules"], [1928, "module-torch.ao.nn.quantized.functional"], [1928, "module-torch.ao.nn.quantized.modules"], [1928, "module-torch.ao.quantization.pt2e"], [1928, "module-torch.ao.quantization.pt2e.representation"], [1928, "module-torch.ao.quantization.quantizer"], [1928, "module-torch.nn.intrinsic"], [1928, "module-torch.nn.intrinsic.modules"], [1928, "module-torch.nn.intrinsic.qat"], [1928, "module-torch.nn.intrinsic.qat.modules"], [1928, "module-torch.nn.intrinsic.quantized"], [1928, "module-torch.nn.intrinsic.quantized.dynamic"], [1928, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1928, "module-torch.nn.intrinsic.quantized.modules"], [1928, "module-torch.nn.qat"], [1928, "module-torch.nn.qat.dynamic"], [1928, "module-torch.nn.qat.dynamic.modules"], [1928, "module-torch.nn.qat.modules"], [1928, "module-torch.nn.quantizable"], [1928, "module-torch.nn.quantizable.modules"], [1928, "module-torch.nn.quantized"], [1928, "module-torch.nn.quantized.dynamic"], [1928, "module-torch.nn.quantized.dynamic.modules"], [1928, "module-torch.nn.quantized.modules"], [1928, "module-torch.quantization"], [1928, "module-torch.quantization.fx"], [1929, "module-torch.random"], [1930, "module-torch.distributed.autograd"], [1930, "module-torch.distributed.rpc"], [1933, "module-torch.signal"], [1933, "module-torch.signal.windows"], [1934, "module-torch.sparse"], [1935, "module-torch.special"], [1939, "module-torch.utils.tensorboard"], [1941, "module-torch.testing"], [1942, "module-torch"], [1942, "module-torch.contrib"], [1942, "module-torch.utils.backcompat"], [1942, "module-torch.utils.hipify"], [1942, "module-torch.utils.model_dump"], [1942, "module-torch.utils.viz"], [1943, "module-torch.ao.ns._numeric_suite"], [1944, "module-torch.ao.ns._numeric_suite_fx"], [1946, "module-torch.compiler"], [1966, "module-torch.utils"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "parallel_info() (in module torch.__config__)": [[12, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[12, "torch.__config__.show"]], "torch.__config__": [[12, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[13, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[15, "module-torch.cpu"]], "torch.cuda": [[16, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[17, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[17, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[20, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[20, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[20, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[20, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[20, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[20, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[20, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[20, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[20, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[20, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[20, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[20, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[20, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[20, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[20, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[20, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[20, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[20, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[20, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[20, "torch.utils.data.random_split"]], "torch.utils.data": [[20, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[20, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[20, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[20, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[20, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[20, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[21, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[21, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[21, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[23, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[23, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[23, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[23, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[23, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[23, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[23, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[23, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[23, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[23, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[23, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[23, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[23, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[23, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[23, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[23, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[23, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[23, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[23, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[23, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[23, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[23, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[23, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[23, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[23, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[23, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[23, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[23, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[23, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[23, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[23, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[23, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[23, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[23, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[23, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[23, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[23, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[23, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[23, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[23, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[23, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[23, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[23, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[23, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[23, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[23, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[23, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[23, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[23, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[23, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[23, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[23, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[23, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[23, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[23, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[23, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[23, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[23, "module-torch.distributed"]], "torch.distributed.algorithms": [[23, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[23, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[23, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[23, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[23, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[23, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[23, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[23, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[23, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[23, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[23, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[23, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[23, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[23, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[23, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[23, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[23, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[24, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[24, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[24, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[24, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[24, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[24, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[24, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[25, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[25, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[25, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[25, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[25, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[25, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[25, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[25, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[27, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[27, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[27, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[27, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[28, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[28, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[28, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[28, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[29, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[29, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[29, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[29, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[29, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[29, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[29, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[29, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[29, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[29, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[29, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[29, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[29, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[29, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[29, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[29, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[29, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[29, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[29, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[29, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[29, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[29, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[29, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[29, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[29, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[29, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[29, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[29, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[29, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[29, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[29, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[29, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[29, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[29, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[29, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[29, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[29, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[29, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[29, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[29, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[29, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[29, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[29, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[29, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[29, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[29, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[29, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[29, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[29, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[29, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[29, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[29, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[29, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[29, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[29, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[29, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[29, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[29, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[29, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[29, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[29, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[29, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[29, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[29, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[29, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[29, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[29, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[29, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[29, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[29, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[29, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[29, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[29, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[29, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[29, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[29, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[29, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[29, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[29, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[29, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[29, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[29, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[29, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[29, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[29, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[29, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[29, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[29, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[29, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[29, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[29, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[29, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[29, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[29, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[29, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[29, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[29, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[29, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[29, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[29, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[29, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[29, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[29, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[29, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[29, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[29, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[29, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[29, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[29, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[29, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[29, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[29, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[29, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[29, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[29, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[29, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[29, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[29, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[29, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[29, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[29, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[29, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[29, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[29, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[29, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[29, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[29, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[29, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[29, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[29, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[29, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[29, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[29, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[29, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[29, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[29, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[29, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[29, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[29, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[29, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[29, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[29, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[29, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[29, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[29, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[29, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[30, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[30, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[31, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[31, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[31, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[31, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[31, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[31, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[31, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[31, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[31, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[33, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[33, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[34, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[34, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[34, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[34, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[37, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[37, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[37, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[38, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[38, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[38, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[40, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[40, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[40, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[40, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[40, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[40, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[40, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[41, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[42, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[42, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[42, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[42, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[42, "module-torch.distributed.elastic.timer"]], "torch.fft": [[45, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[46, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp.api)": [[46, "torch.distributed.fsdp.api.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[46, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[46, "module-torch.distributed.fsdp"]], "torch.func": [[48, "module-torch.func"]], "future (class in torch.futures)": [[53, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[53, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[53, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[53, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[53, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[53, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[53, "torch.futures.Future.then"]], "torch.futures": [[53, "module-torch.futures"]], "value() (torch.futures.future method)": [[53, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[53, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[53, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[54, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[54, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[54, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[54, "torch.fx.Node"]], "proxy (class in torch.fx)": [[54, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[54, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[54, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[54, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[54, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[54, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[54, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[54, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[54, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[54, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[54, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[54, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[54, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[54, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[54, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[54, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[54, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[54, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[54, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[54, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[54, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[54, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[54, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[54, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[54, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[54, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[54, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[54, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[54, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[54, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[54, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[54, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[54, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[54, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[54, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[54, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[54, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[54, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[54, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[54, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[54, "module-torch.fx"]], "torch.fx.experimental": [[54, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[54, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[54, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[54, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[54, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[54, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[54, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[54, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[54, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[54, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[54, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[54, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[54, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[54, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[54, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[54, "torch.fx.wrap"]], "generator (class in torch)": [[87, "torch.Generator"]], "device (torch.generator attribute)": [[87, "torch.Generator.device"]], "get_state() (torch.generator method)": [[87, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[87, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[87, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[87, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[87, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[88, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[89, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[90, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[91, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[92, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[93, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[94, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[95, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[96, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[97, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[98, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[99, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[100, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[101, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[102, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[103, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[104, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[105, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[106, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[107, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[108, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[109, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[110, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[111, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[112, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[113, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[114, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[115, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[116, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[117, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[118, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[119, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[120, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[121, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[122, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[123, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[124, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[125, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[126, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[127, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[128, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[129, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[130, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[131, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[132, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[133, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[134, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[135, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[136, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[137, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[138, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[139, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[140, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[141, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[142, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[143, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[144, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[145, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[146, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[147, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[148, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[149, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[150, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[151, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[152, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[153, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[154, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[155, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[156, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[157, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[158, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[160, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[161, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[162, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[163, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[164, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[165, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[166, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[167, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[168, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[169, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[170, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[171, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[172, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[173, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[174, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[175, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[176, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[177, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[178, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[179, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[180, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[181, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[182, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[183, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[184, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[185, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[186, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[187, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[188, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[189, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[190, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[191, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[192, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[193, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[194, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[195, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[196, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[197, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[198, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[199, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[200, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[201, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[202, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[203, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[204, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[205, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[206, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[207, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[208, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[209, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[210, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[211, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[212, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[213, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[214, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[215, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[216, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[217, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[218, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[219, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[220, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[221, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[222, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[223, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[224, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[225, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[226, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[227, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[228, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[229, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[230, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[231, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[232, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[233, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[234, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[235, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[236, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[237, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[238, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[239, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[240, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[241, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[242, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[243, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[244, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[245, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[246, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[247, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[248, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[249, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[250, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[251, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[252, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[253, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[254, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[255, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[256, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[257, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[258, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[259, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[260, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[261, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[262, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[263, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[264, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[265, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[266, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[267, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[268, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[269, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[270, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[271, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[272, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[273, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[274, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[275, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[276, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[277, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[278, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[279, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[280, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[281, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[282, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[283, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[284, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[285, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[286, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[287, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[288, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[289, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[290, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[291, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[292, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[293, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[294, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[295, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[296, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[297, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[298, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[299, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[300, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[301, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[302, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[303, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[304, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[305, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[306, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[307, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[308, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[309, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[310, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[311, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[312, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[313, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[314, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[315, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[316, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[317, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[318, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[319, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[320, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[321, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[322, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[323, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[324, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[325, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[326, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[327, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[328, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[329, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[330, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[331, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[332, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[333, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[334, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[335, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[336, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[337, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[338, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[339, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[340, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[341, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[342, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[343, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[344, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[345, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[346, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[347, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[348, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[349, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[350, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[351, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[352, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[353, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[354, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[355, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[356, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[357, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[358, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[359, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[360, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[361, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[362, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[363, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[364, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[365, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[366, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[367, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[368, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[369, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[370, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[371, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[372, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[373, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[374, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[375, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[376, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[377, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[378, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[379, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[380, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[381, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[382, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[383, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[384, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[385, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[386, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[387, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[388, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[389, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[390, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[391, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[392, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[393, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[394, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[395, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[396, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[397, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[398, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[399, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[400, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[401, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[402, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[403, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[404, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[405, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[406, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[407, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[408, "torch.Tensor.median"]], "min() (torch.tensor method)": [[409, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[410, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[411, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[412, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[413, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[414, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[415, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[416, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[417, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[418, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[419, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[420, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[421, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[422, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[423, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[424, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[425, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[426, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[427, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[428, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[429, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[430, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[431, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[432, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[433, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[434, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[435, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[436, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[437, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[438, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[439, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[440, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[441, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[442, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[443, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[444, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[445, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[446, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[447, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[448, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[449, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[450, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[451, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[452, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[453, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[454, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[455, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[456, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[457, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[458, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[459, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[460, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[461, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[462, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[463, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[464, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[465, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[466, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[467, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[468, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[469, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[470, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[471, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[472, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[473, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[474, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[475, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[476, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[477, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[478, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[479, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[480, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[481, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[482, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[483, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[484, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[485, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[486, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[487, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[488, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[489, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[490, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[491, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[492, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[493, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[494, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[495, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[496, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[497, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[498, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[499, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[500, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[501, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[502, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[503, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[504, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[505, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[506, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[507, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[508, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[509, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[510, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[511, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[512, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[513, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[514, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[515, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[516, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[517, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[518, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[519, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[520, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[521, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[522, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[523, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[524, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[525, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[526, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[527, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[528, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[529, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[530, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[531, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[532, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[533, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[534, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[535, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[536, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[537, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[538, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[539, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[540, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[541, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[542, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[543, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[544, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[545, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[546, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[547, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[548, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[549, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[550, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[551, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[552, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[553, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[554, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[555, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[556, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[557, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[558, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[559, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[560, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[561, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[562, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[563, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[564, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[565, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[566, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[567, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[568, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[569, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[570, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[571, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[572, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[573, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[574, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[575, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[576, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[577, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[578, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[579, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[580, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[581, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[582, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[585, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[586, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[587, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[588, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[589, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[590, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[591, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[592, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[593, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[594, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[595, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[596, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[597, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[598, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[599, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[600, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[601, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[602, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[603, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[604, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[605, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[606, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[607, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[608, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[609, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[610, "torch.Tensor.values"]], "var() (torch.tensor method)": [[611, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[612, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[613, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[614, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[615, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[616, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[617, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[618, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[619, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[620, "torch._assert"]], "_foreach_abs() (in module torch)": [[621, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[622, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[623, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[624, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[625, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[626, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[627, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[628, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[629, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[630, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[631, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[632, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[633, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[634, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[635, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[636, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[637, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[638, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[639, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[640, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[641, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[642, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[643, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[644, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[645, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[646, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[647, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[648, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[649, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[650, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[651, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[652, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[653, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[654, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[655, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[656, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[657, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[658, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[659, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[660, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[661, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[662, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[663, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[664, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[665, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[666, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[667, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[668, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[669, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[670, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[671, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[672, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[673, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[674, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[675, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[676, "torch._logging.set_logs"]], "abs() (in module torch)": [[677, "torch.abs"]], "absolute() (in module torch)": [[678, "torch.absolute"]], "acos() (in module torch)": [[679, "torch.acos"]], "acosh() (in module torch)": [[680, "torch.acosh"]], "add() (in module torch)": [[681, "torch.add"]], "addbmm() (in module torch)": [[682, "torch.addbmm"]], "addcdiv() (in module torch)": [[683, "torch.addcdiv"]], "addcmul() (in module torch)": [[684, "torch.addcmul"]], "addmm() (in module torch)": [[685, "torch.addmm"]], "addmv() (in module torch)": [[686, "torch.addmv"]], "addr() (in module torch)": [[687, "torch.addr"]], "adjoint() (in module torch)": [[688, "torch.adjoint"]], "all() (in module torch)": [[689, "torch.all"]], "allclose() (in module torch)": [[690, "torch.allclose"]], "amax() (in module torch)": [[691, "torch.amax"]], "amin() (in module torch)": [[692, "torch.amin"]], "aminmax() (in module torch)": [[693, "torch.aminmax"]], "angle() (in module torch)": [[694, "torch.angle"]], "any() (in module torch)": [[695, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[696, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[708, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[719, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[720, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[721, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[725, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[726, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[727, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[728, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[728, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[729, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[730, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[731, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[731, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[731, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[732, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[734, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[735, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[736, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[741, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[742, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[752, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[752, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[756, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[757, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[758, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[760, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[760, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[762, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[784, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[785, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[786, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[787, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[788, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[788, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[788, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[789, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[790, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[790, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[790, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[792, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[793, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[794, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[795, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[810, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[811, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[814, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[815, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[816, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[820, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[820, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[821, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[834, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[835, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[836, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[837, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[850, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[851, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[852, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[853, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[854, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[855, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[856, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[857, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[858, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[859, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[860, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[861, "torch.arange"]], "arccos() (in module torch)": [[862, "torch.arccos"]], "arccosh() (in module torch)": [[863, "torch.arccosh"]], "arcsin() (in module torch)": [[864, "torch.arcsin"]], "arcsinh() (in module torch)": [[865, "torch.arcsinh"]], "arctan() (in module torch)": [[866, "torch.arctan"]], "arctan2() (in module torch)": [[867, "torch.arctan2"]], "arctanh() (in module torch)": [[868, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[869, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[870, "torch.argmax"]], "argmin() (in module torch)": [[871, "torch.argmin"]], "argsort() (in module torch)": [[872, "torch.argsort"]], "argwhere() (in module torch)": [[873, "torch.argwhere"]], "as_strided() (in module torch)": [[874, "torch.as_strided"]], "as_tensor() (in module torch)": [[875, "torch.as_tensor"]], "asarray() (in module torch)": [[876, "torch.asarray"]], "asin() (in module torch)": [[877, "torch.asin"]], "asinh() (in module torch)": [[878, "torch.asinh"]], "atan() (in module torch)": [[879, "torch.atan"]], "atan2() (in module torch)": [[880, "torch.atan2"]], "atanh() (in module torch)": [[881, "torch.atanh"]], "atleast_1d() (in module torch)": [[882, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[883, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[884, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[885, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[886, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[887, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[888, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[889, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[890, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[891, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[892, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[893, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[894, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[895, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[896, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[897, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[898, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[899, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[900, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[901, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[902, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[903, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[904, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[905, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[906, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[907, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[908, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[909, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[910, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[911, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[912, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[913, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[914, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[915, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[916, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[917, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[918, "torch.bernoulli"]], "bincount() (in module torch)": [[919, "torch.bincount"]], "bitwise_and() (in module torch)": [[920, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[921, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[922, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[923, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[924, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[925, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[926, "torch.blackman_window"]], "block_diag() (in module torch)": [[927, "torch.block_diag"]], "bmm() (in module torch)": [[928, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[929, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[930, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[931, "torch.broadcast_to"]], "bucketize() (in module torch)": [[932, "torch.bucketize"]], "can_cast() (in module torch)": [[933, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[934, "torch.cartesian_prod"]], "cat() (in module torch)": [[935, "torch.cat"]], "cdist() (in module torch)": [[936, "torch.cdist"]], "ceil() (in module torch)": [[937, "torch.ceil"]], "chain_matmul() (in module torch)": [[938, "torch.chain_matmul"]], "cholesky() (in module torch)": [[939, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[940, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[941, "torch.cholesky_solve"]], "chunk() (in module torch)": [[942, "torch.chunk"]], "clamp() (in module torch)": [[943, "torch.clamp"]], "clip() (in module torch)": [[944, "torch.clip"]], "clone() (in module torch)": [[945, "torch.clone"]], "column_stack() (in module torch)": [[946, "torch.column_stack"]], "combinations() (in module torch)": [[947, "torch.combinations"]], "compile() (in module torch)": [[948, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[949, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[950, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[951, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[952, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[953, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[954, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[955, "torch.compiler.reset"]], "complex() (in module torch)": [[956, "torch.complex"]], "concat() (in module torch)": [[957, "torch.concat"]], "concatenate() (in module torch)": [[958, "torch.concatenate"]], "conj() (in module torch)": [[959, "torch.conj"]], "conj_physical() (in module torch)": [[960, "torch.conj_physical"]], "copysign() (in module torch)": [[961, "torch.copysign"]], "corrcoef() (in module torch)": [[962, "torch.corrcoef"]], "cos() (in module torch)": [[963, "torch.cos"]], "cosh() (in module torch)": [[964, "torch.cosh"]], "count_nonzero() (in module torch)": [[965, "torch.count_nonzero"]], "cov() (in module torch)": [[966, "torch.cov"]], "stream (class in torch.cpu)": [[967, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[968, "torch.cpu.StreamContext"]], "current_stream() (in module torch.cpu)": [[969, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[970, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[971, "torch.cpu.is_available"]], "stream() (in module torch.cpu)": [[972, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[973, "torch.cpu.synchronize"]], "cross() (in module torch)": [[974, "torch.cross"]], "cudagraph (class in torch.cuda)": [[975, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[975, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[976, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[977, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[977, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[977, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[977, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[977, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[977, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[977, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[977, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[978, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[978, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[978, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[978, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[978, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[978, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[979, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[980, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[980, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[980, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[980, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[980, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[980, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[981, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[982, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[983, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[984, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[985, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[986, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[987, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[988, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[989, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[990, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[991, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[992, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[993, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[994, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[995, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[996, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[997, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[998, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[999, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1000, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1001, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1002, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1003, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1004, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1005, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1006, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1007, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1008, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1009, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1010, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1011, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1012, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1013, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1014, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1015, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1016, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1017, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1018, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1019, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1020, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1021, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1022, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1023, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1024, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1025, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1026, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1027, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1028, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1029, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1030, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1031, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1032, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1033, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1034, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1035, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1036, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1037, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1038, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1039, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1040, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1041, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1042, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1043, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1044, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1045, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1046, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1047, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1048, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1049, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1050, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1051, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1052, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1053, "torch.cummax"]], "cummin() (in module torch)": [[1054, "torch.cummin"]], "cumprod() (in module torch)": [[1055, "torch.cumprod"]], "cumsum() (in module torch)": [[1056, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1057, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1058, "torch.deg2rad"]], "dequantize() (in module torch)": [[1059, "torch.dequantize"]], "det() (in module torch)": [[1060, "torch.det"]], "diag() (in module torch)": [[1061, "torch.diag"]], "diag_embed() (in module torch)": [[1062, "torch.diag_embed"]], "diagflat() (in module torch)": [[1063, "torch.diagflat"]], "diagonal() (in module torch)": [[1064, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1065, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1066, "torch.diff"]], "digamma() (in module torch)": [[1067, "torch.digamma"]], "dist() (in module torch)": [[1068, "torch.dist"]], "div() (in module torch)": [[1069, "torch.div"]], "divide() (in module torch)": [[1070, "torch.divide"]], "dot() (in module torch)": [[1071, "torch.dot"]], "dsplit() (in module torch)": [[1072, "torch.dsplit"]], "dstack() (in module torch)": [[1073, "torch.dstack"]], "einsum() (in module torch)": [[1074, "torch.einsum"]], "empty() (in module torch)": [[1075, "torch.empty"]], "empty_like() (in module torch)": [[1076, "torch.empty_like"]], "empty_strided() (in module torch)": [[1077, "torch.empty_strided"]], "enable_grad (class in torch)": [[1078, "torch.enable_grad"]], "eq() (in module torch)": [[1079, "torch.eq"]], "equal() (in module torch)": [[1080, "torch.equal"]], "erf() (in module torch)": [[1081, "torch.erf"]], "erfc() (in module torch)": [[1082, "torch.erfc"]], "erfinv() (in module torch)": [[1083, "torch.erfinv"]], "exp() (in module torch)": [[1084, "torch.exp"]], "exp2() (in module torch)": [[1085, "torch.exp2"]], "expm1() (in module torch)": [[1086, "torch.expm1"]], "eye() (in module torch)": [[1087, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1088, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1089, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1090, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1091, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1092, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1093, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1094, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1095, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1096, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1097, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1098, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1099, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1100, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1101, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1102, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1103, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1104, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1105, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1106, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1107, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1108, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1109, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1110, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1111, "torch.fft.rfftn"]], "fix() (in module torch)": [[1112, "torch.fix"]], "flatten() (in module torch)": [[1113, "torch.flatten"]], "flip() (in module torch)": [[1114, "torch.flip"]], "fliplr() (in module torch)": [[1115, "torch.fliplr"]], "flipud() (in module torch)": [[1116, "torch.flipud"]], "float_power() (in module torch)": [[1117, "torch.float_power"]], "floor() (in module torch)": [[1118, "torch.floor"]], "floor_divide() (in module torch)": [[1119, "torch.floor_divide"]], "fmax() (in module torch)": [[1120, "torch.fmax"]], "fmin() (in module torch)": [[1121, "torch.fmin"]], "fmod() (in module torch)": [[1122, "torch.fmod"]], "frac() (in module torch)": [[1123, "torch.frac"]], "frexp() (in module torch)": [[1124, "torch.frexp"]], "from_dlpack() (in module torch)": [[1125, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1126, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1127, "torch.frombuffer"]], "full() (in module torch)": [[1128, "torch.full"]], "full_like() (in module torch)": [[1129, "torch.full_like"]], "functional_call() (in module torch.func)": [[1130, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1131, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1132, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1133, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1134, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1135, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1136, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1137, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1138, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1139, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1140, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1141, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1142, "torch.func.vmap"]], "gather() (in module torch)": [[1143, "torch.gather"]], "gcd() (in module torch)": [[1144, "torch.gcd"]], "ge() (in module torch)": [[1145, "torch.ge"]], "geqrf() (in module torch)": [[1146, "torch.geqrf"]], "ger() (in module torch)": [[1147, "torch.ger"]], "get_default_dtype() (in module torch)": [[1148, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1149, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1150, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1151, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1152, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1153, "torch.get_rng_state"]], "gradient() (in module torch)": [[1154, "torch.gradient"]], "greater() (in module torch)": [[1155, "torch.greater"]], "greater_equal() (in module torch)": [[1156, "torch.greater_equal"]], "gt() (in module torch)": [[1157, "torch.gt"]], "hamming_window() (in module torch)": [[1158, "torch.hamming_window"]], "hann_window() (in module torch)": [[1159, "torch.hann_window"]], "heaviside() (in module torch)": [[1160, "torch.heaviside"]], "histc() (in module torch)": [[1161, "torch.histc"]], "histogram() (in module torch)": [[1162, "torch.histogram"]], "histogramdd() (in module torch)": [[1163, "torch.histogramdd"]], "hsplit() (in module torch)": [[1164, "torch.hsplit"]], "hspmm() (in module torch)": [[1165, "torch.hspmm"]], "hstack() (in module torch)": [[1166, "torch.hstack"]], "hypot() (in module torch)": [[1167, "torch.hypot"]], "i0() (in module torch)": [[1168, "torch.i0"]], "igamma() (in module torch)": [[1169, "torch.igamma"]], "igammac() (in module torch)": [[1170, "torch.igammac"]], "imag() (in module torch)": [[1171, "torch.imag"]], "index_add() (in module torch)": [[1172, "torch.index_add"]], "index_copy() (in module torch)": [[1173, "torch.index_copy"]], "index_reduce() (in module torch)": [[1174, "torch.index_reduce"]], "index_select() (in module torch)": [[1175, "torch.index_select"]], "inference_mode (class in torch)": [[1176, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1177, "torch.initial_seed"]], "inner() (in module torch)": [[1178, "torch.inner"]], "inverse() (in module torch)": [[1179, "torch.inverse"]], "is_complex() (in module torch)": [[1180, "torch.is_complex"]], "is_conj() (in module torch)": [[1181, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1182, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1183, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1184, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1185, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1186, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1187, "torch.is_storage"]], "is_tensor() (in module torch)": [[1188, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1189, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1190, "torch.isclose"]], "isfinite() (in module torch)": [[1191, "torch.isfinite"]], "isin() (in module torch)": [[1192, "torch.isin"]], "isinf() (in module torch)": [[1193, "torch.isinf"]], "isnan() (in module torch)": [[1194, "torch.isnan"]], "isneginf() (in module torch)": [[1195, "torch.isneginf"]], "isposinf() (in module torch)": [[1196, "torch.isposinf"]], "isreal() (in module torch)": [[1197, "torch.isreal"]], "istft() (in module torch)": [[1198, "torch.istft"]], "attribute (class in torch.jit)": [[1199, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1199, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1199, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1199, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1199, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1200, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1200, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1200, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1200, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1201, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1201, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1201, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1201, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1201, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1201, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1202, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1203, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1204, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1205, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1206, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1207, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1208, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1209, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1210, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1211, "torch.jit.save"]], "script() (in module torch.jit)": [[1212, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1213, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1214, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1215, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1216, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1217, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1218, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1219, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1220, "torch.kaiser_window"]], "kron() (in module torch)": [[1221, "torch.kron"]], "kthvalue() (in module torch)": [[1222, "torch.kthvalue"]], "lcm() (in module torch)": [[1223, "torch.lcm"]], "ldexp() (in module torch)": [[1224, "torch.ldexp"]], "le() (in module torch)": [[1225, "torch.le"]], "lerp() (in module torch)": [[1226, "torch.lerp"]], "less() (in module torch)": [[1227, "torch.less"]], "less_equal() (in module torch)": [[1228, "torch.less_equal"]], "lgamma() (in module torch)": [[1229, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1230, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1231, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1232, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1233, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1234, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1235, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1236, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1237, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1238, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1239, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1240, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1241, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1242, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1243, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1244, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1245, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1246, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1247, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1248, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1249, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1250, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1251, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1252, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1253, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1254, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1255, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1256, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1257, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1258, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1259, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1260, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1261, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1262, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1263, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1264, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1265, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1266, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1267, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1268, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1269, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1270, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1271, "torch.linspace"]], "load() (in module torch)": [[1272, "torch.load"]], "lobpcg() (in module torch)": [[1273, "torch.lobpcg"]], "log() (in module torch)": [[1274, "torch.log"]], "log10() (in module torch)": [[1275, "torch.log10"]], "log1p() (in module torch)": [[1276, "torch.log1p"]], "log2() (in module torch)": [[1277, "torch.log2"]], "logaddexp() (in module torch)": [[1278, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1279, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1280, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1281, "torch.logdet"]], "logical_and() (in module torch)": [[1282, "torch.logical_and"]], "logical_not() (in module torch)": [[1283, "torch.logical_not"]], "logical_or() (in module torch)": [[1284, "torch.logical_or"]], "logical_xor() (in module torch)": [[1285, "torch.logical_xor"]], "logit() (in module torch)": [[1286, "torch.logit"]], "logspace() (in module torch)": [[1287, "torch.logspace"]], "logsumexp() (in module torch)": [[1288, "torch.logsumexp"]], "lt() (in module torch)": [[1289, "torch.lt"]], "lu() (in module torch)": [[1290, "torch.lu"]], "lu_solve() (in module torch)": [[1291, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1292, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1293, "torch.manual_seed"]], "masked_select() (in module torch)": [[1294, "torch.masked_select"]], "matmul() (in module torch)": [[1295, "torch.matmul"]], "matrix_exp() (in module torch)": [[1296, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1297, "torch.matrix_power"]], "max() (in module torch)": [[1298, "torch.max"]], "maximum() (in module torch)": [[1299, "torch.maximum"]], "mean() (in module torch)": [[1300, "torch.mean"]], "median() (in module torch)": [[1301, "torch.median"]], "meshgrid() (in module torch)": [[1302, "torch.meshgrid"]], "min() (in module torch)": [[1303, "torch.min"]], "minimum() (in module torch)": [[1304, "torch.minimum"]], "mm() (in module torch)": [[1305, "torch.mm"]], "mode() (in module torch)": [[1306, "torch.mode"]], "moveaxis() (in module torch)": [[1307, "torch.moveaxis"]], "movedim() (in module torch)": [[1308, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1309, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1310, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1311, "torch.mps.empty_cache"]], "event (class in torch.mps.event)": [[1312, "torch.mps.event.Event"]], "elapsed_time() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.elapsed_time"]], "query() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.query"]], "record() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.record"]], "synchronize() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.synchronize"]], "wait() (torch.mps.event.event method)": [[1312, "torch.mps.event.Event.wait"]], "get_rng_state() (in module torch.mps)": [[1313, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1314, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1315, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1316, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1317, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1318, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1319, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1320, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1321, "torch.mps.synchronize"]], "msort() (in module torch)": [[1322, "torch.msort"]], "mul() (in module torch)": [[1323, "torch.mul"]], "multinomial() (in module torch)": [[1324, "torch.multinomial"]], "multiply() (in module torch)": [[1325, "torch.multiply"]], "mv() (in module torch)": [[1326, "torch.mv"]], "mvlgamma() (in module torch)": [[1327, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1328, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1329, "torch.nanmean"]], "nanmedian() (in module torch)": [[1330, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1331, "torch.nanquantile"]], "nansum() (in module torch)": [[1332, "torch.nansum"]], "narrow() (in module torch)": [[1333, "torch.narrow"]], "narrow_copy() (in module torch)": [[1334, "torch.narrow_copy"]], "ne() (in module torch)": [[1335, "torch.ne"]], "neg() (in module torch)": [[1336, "torch.neg"]], "negative() (in module torch)": [[1337, "torch.negative"]], "nextafter() (in module torch)": [[1338, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1339, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1340, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1341, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1342, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1342, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1342, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1343, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1344, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1345, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1346, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1347, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1348, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1349, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1350, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1351, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1352, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1353, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1354, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1355, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1356, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1357, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1358, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1359, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1360, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1361, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1362, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1363, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1364, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1365, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1366, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1367, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1368, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1369, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1370, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1371, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1372, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1373, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1374, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1375, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1376, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1377, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1377, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1378, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1378, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1378, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1379, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1380, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1381, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1382, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1383, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1384, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1385, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1386, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1387, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1388, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1389, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1390, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1391, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1392, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1393, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1394, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1395, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1396, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1397, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1398, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1399, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1400, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1401, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1402, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1403, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1404, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1405, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1406, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1407, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1407, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1408, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1408, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1409, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1409, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1410, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1410, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1411, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1411, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1412, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1412, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1413, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1413, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1414, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1414, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1415, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1415, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1416, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1416, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1417, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1417, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1418, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1418, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1419, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1419, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1420, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1421, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1422, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1423, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1424, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1425, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1426, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1427, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1428, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1429, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1430, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1431, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1432, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1433, "torch.nn.Mish"]], "module (class in torch.nn)": [[1434, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1434, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1434, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1434, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1434, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1434, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1434, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1434, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1434, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1434, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1434, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1434, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1434, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1434, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1434, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1434, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1434, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1434, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1434, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1434, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1434, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1434, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1434, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1434, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1434, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1434, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1434, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1434, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1434, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1434, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1434, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1434, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1434, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1434, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1434, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1434, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1434, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1434, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1434, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1434, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1434, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1435, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1435, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1436, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1436, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1436, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1436, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1437, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1438, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1439, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1440, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1440, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1440, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1441, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1442, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1443, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1444, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1444, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1445, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1445, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1445, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1446, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1447, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1448, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1449, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1450, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1450, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1451, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1452, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1453, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1454, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1455, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1456, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1457, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1458, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1459, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1460, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1461, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1462, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1462, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1463, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1464, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1465, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1466, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1467, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1468, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1469, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1470, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1471, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1472, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1473, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1473, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1474, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1475, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1476, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1477, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1477, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1477, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1478, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1478, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1479, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1479, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1480, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1480, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1481, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1481, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1482, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1483, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1484, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1485, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1486, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1487, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1488, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1489, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1490, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1491, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1492, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1493, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1497, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1498, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1499, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1500, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1501, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1503, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1504, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1505, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1506, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1507, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1508, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1509, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1510, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1511, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1514, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1515, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1516, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1517, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1518, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1519, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1520, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1521, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1522, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1523, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1524, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1525, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1526, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1527, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1528, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1529, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1530, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1531, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1532, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1533, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1534, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1535, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1536, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1537, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1538, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1539, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1540, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1541, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1542, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1543, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1544, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1545, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1546, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1547, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1548, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1549, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1550, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1551, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1552, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1553, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1556, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1557, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1558, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1559, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1560, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1561, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1562, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1563, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1564, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1565, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1566, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1567, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1568, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1569, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1570, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1571, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1572, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1573, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1574, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1575, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1576, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1577, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1578, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1579, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1580, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1581, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1582, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1583, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1584, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1585, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1586, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1587, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1588, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1589, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1590, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1591, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1592, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1593, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1594, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1595, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1596, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1597, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1598, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1599, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1600, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1601, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1602, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1603, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1604, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1605, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1605, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1605, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1607, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1608, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1609, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1610, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1611, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1612, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1613, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1614, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1614, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1615, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1616, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1617, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1617, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1618, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1619, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1620, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1621, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1622, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1623, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1623, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1624, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1625, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1626, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1627, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1628, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1628, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1628, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1628, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1628, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1629, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1629, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1629, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1629, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1630, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1630, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1630, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1630, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1631, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1631, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1631, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1631, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1632, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1632, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1632, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1632, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1632, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1633, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1633, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1633, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1633, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1633, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1633, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1634, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1634, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1634, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1634, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1634, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1635, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1635, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1635, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1635, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1638, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1639, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1640, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1641, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1642, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1643, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1644, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1645, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1646, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1647, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1647, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1647, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1647, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1647, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1647, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1647, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1647, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1647, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1647, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1648, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1649, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1650, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1651, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1652, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1653, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1654, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1655, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1656, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1657, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1658, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1659, "torch.no_grad"]], "nonzero() (in module torch)": [[1660, "torch.nonzero"]], "norm() (in module torch)": [[1661, "torch.norm"]], "normal() (in module torch)": [[1662, "torch.normal"]], "not_equal() (in module torch)": [[1663, "torch.not_equal"]], "numel() (in module torch)": [[1664, "torch.numel"]], "ones() (in module torch)": [[1665, "torch.ones"]], "ones_like() (in module torch)": [[1666, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1667, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1668, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1668, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1668, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1668, "torch.onnx.ExportOutput.diagnostic_context"]], "fake_context (torch.onnx.exportoutput property)": [[1668, "torch.onnx.ExportOutput.fake_context"]], "model_proto (torch.onnx.exportoutput property)": [[1668, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1668, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1669, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1669, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1670, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1670, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1670, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1670, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1670, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1670, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1670, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1670, "torch.onnx.JitScalarType.torch_name"]], "onnxexportererror (class in torch.onnx)": [[1671, "torch.onnx.OnnxExporterError"]], "onnxregistry (class in torch.onnx)": [[1672, "torch.onnx.OnnxRegistry"]], "get_op_functions() (torch.onnx.onnxregistry method)": [[1672, "torch.onnx.OnnxRegistry.get_op_functions"]], "is_registered_op() (torch.onnx.onnxregistry method)": [[1672, "torch.onnx.OnnxRegistry.is_registered_op"]], "opset_version (torch.onnx.onnxregistry property)": [[1672, "torch.onnx.OnnxRegistry.opset_version"]], "register_op() (torch.onnx.onnxregistry method)": [[1672, "torch.onnx.OnnxRegistry.register_op"]], "graphinfo (class in torch.onnx.verification)": [[1673, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1673, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1674, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1675, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1675, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1676, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1676, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1677, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1677, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1678, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1678, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1678, "torch.optim.Adam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adam method)": [[1678, "torch.optim.Adam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adam method)": [[1678, "torch.optim.Adam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adam method)": [[1678, "torch.optim.Adam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adam method)": [[1678, "torch.optim.Adam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adam method)": [[1678, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1678, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1678, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1678, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1678, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1679, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1679, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1680, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1680, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1681, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1681, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1682, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1682, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1683, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1684, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1685, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1686, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1687, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1688, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1688, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1689, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1689, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1690, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1690, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1691, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1691, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1692, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.load_state_dict"]], "register_load_state_dict_post_hook() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.register_load_state_dict_post_hook"]], "register_load_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.register_load_state_dict_pre_hook"]], "register_state_dict_post_hook() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.register_state_dict_post_hook"]], "register_state_dict_pre_hook() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.register_state_dict_pre_hook"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1692, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1693, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1693, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1693, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1693, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1694, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1694, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1694, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1694, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1695, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1695, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1695, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1695, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1696, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1697, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1697, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1697, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1698, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1698, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1698, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1698, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1698, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1699, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1699, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1699, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1699, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1699, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1700, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1700, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1700, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1700, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1700, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1701, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1701, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1701, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1701, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1701, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1702, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1702, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1702, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1702, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1702, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1703, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1703, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1703, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1703, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1703, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1704, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1704, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1704, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1704, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1704, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1705, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1706, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1706, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1706, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1706, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1706, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1707, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1707, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1707, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1707, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1707, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1708, "torch.orgqr"]], "ormqr() (in module torch)": [[1709, "torch.ormqr"]], "outer() (in module torch)": [[1710, "torch.outer"]], "pca_lowrank() (in module torch)": [[1711, "torch.pca_lowrank"]], "permute() (in module torch)": [[1712, "torch.permute"]], "pinverse() (in module torch)": [[1713, "torch.pinverse"]], "poisson() (in module torch)": [[1714, "torch.poisson"]], "polar() (in module torch)": [[1715, "torch.polar"]], "polygamma() (in module torch)": [[1716, "torch.polygamma"]], "positive() (in module torch)": [[1717, "torch.positive"]], "pow() (in module torch)": [[1718, "torch.pow"]], "prod() (in module torch)": [[1719, "torch.prod"]], "promote_types() (in module torch)": [[1720, "torch.promote_types"]], "qr() (in module torch)": [[1721, "torch.qr"]], "quantile() (in module torch)": [[1722, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1723, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1724, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1725, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1726, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1727, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1728, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1728, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1728, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1728, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1728, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1729, "torch.rad2deg"]], "rand() (in module torch)": [[1730, "torch.rand"]], "rand_like() (in module torch)": [[1731, "torch.rand_like"]], "randint() (in module torch)": [[1732, "torch.randint"]], "randint_like() (in module torch)": [[1733, "torch.randint_like"]], "randn() (in module torch)": [[1734, "torch.randn"]], "randn_like() (in module torch)": [[1735, "torch.randn_like"]], "randperm() (in module torch)": [[1736, "torch.randperm"]], "range() (in module torch)": [[1737, "torch.range"]], "ravel() (in module torch)": [[1738, "torch.ravel"]], "real() (in module torch)": [[1739, "torch.real"]], "reciprocal() (in module torch)": [[1740, "torch.reciprocal"]], "remainder() (in module torch)": [[1741, "torch.remainder"]], "renorm() (in module torch)": [[1742, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1743, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1744, "torch.reshape"]], "resolve_conj() (in module torch)": [[1745, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1746, "torch.resolve_neg"]], "result_type() (in module torch)": [[1747, "torch.result_type"]], "roll() (in module torch)": [[1748, "torch.roll"]], "rot90() (in module torch)": [[1749, "torch.rot90"]], "round() (in module torch)": [[1750, "torch.round"]], "row_stack() (in module torch)": [[1751, "torch.row_stack"]], "rsqrt() (in module torch)": [[1752, "torch.rsqrt"]], "save() (in module torch)": [[1753, "torch.save"]], "scatter() (in module torch)": [[1754, "torch.scatter"]], "scatter_add() (in module torch)": [[1755, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1756, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1757, "torch.searchsorted"]], "seed() (in module torch)": [[1758, "torch.seed"]], "select() (in module torch)": [[1759, "torch.select"]], "select_scatter() (in module torch)": [[1760, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1761, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1762, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1763, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1764, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1765, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1766, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1767, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1768, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1769, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1770, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1771, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1772, "torch.set_warn_always"]], "sgn() (in module torch)": [[1773, "torch.sgn"]], "sigmoid() (in module torch)": [[1774, "torch.sigmoid"]], "sign() (in module torch)": [[1775, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1776, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1777, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1778, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1779, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1780, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1781, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1782, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1783, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1784, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1785, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1786, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1787, "torch.signbit"]], "sin() (in module torch)": [[1788, "torch.sin"]], "sinc() (in module torch)": [[1789, "torch.sinc"]], "sinh() (in module torch)": [[1790, "torch.sinh"]], "slice_scatter() (in module torch)": [[1791, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1792, "torch.slogdet"]], "smm() (in module torch)": [[1793, "torch.smm"]], "softmax() (in module torch)": [[1794, "torch.softmax"]], "sort() (in module torch)": [[1795, "torch.sort"]], "addmm() (in module torch.sparse)": [[1796, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1797, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1797, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1797, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1797, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1798, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1799, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1800, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1801, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1802, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1803, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1804, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1805, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1806, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1807, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1808, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1809, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1810, "torch.split"]], "sqrt() (in module torch)": [[1811, "torch.sqrt"]], "square() (in module torch)": [[1812, "torch.square"]], "squeeze() (in module torch)": [[1813, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1814, "torch.sspaddmm"]], "stack() (in module torch)": [[1815, "torch.stack"]], "std() (in module torch)": [[1816, "torch.std"]], "std_mean() (in module torch)": [[1817, "torch.std_mean"]], "stft() (in module torch)": [[1818, "torch.stft"]], "sub() (in module torch)": [[1819, "torch.sub"]], "subtract() (in module torch)": [[1820, "torch.subtract"]], "sum() (in module torch)": [[1821, "torch.sum"]], "svd() (in module torch)": [[1822, "torch.svd"]], "svd_lowrank() (in module torch)": [[1823, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1824, "torch.swapaxes"]], "swapdims() (in module torch)": [[1825, "torch.swapdims"]], "sym_float() (in module torch)": [[1826, "torch.sym_float"]], "sym_int() (in module torch)": [[1827, "torch.sym_int"]], "sym_max() (in module torch)": [[1828, "torch.sym_max"]], "sym_min() (in module torch)": [[1829, "torch.sym_min"]], "sym_not() (in module torch)": [[1830, "torch.sym_not"]], "t() (in module torch)": [[1831, "torch.t"]], "take() (in module torch)": [[1832, "torch.take"]], "take_along_dim() (in module torch)": [[1833, "torch.take_along_dim"]], "tan() (in module torch)": [[1834, "torch.tan"]], "tanh() (in module torch)": [[1835, "torch.tanh"]], "tensor() (in module torch)": [[1836, "torch.tensor"]], "tensor_split() (in module torch)": [[1837, "torch.tensor_split"]], "tensordot() (in module torch)": [[1838, "torch.tensordot"]], "tile() (in module torch)": [[1839, "torch.tile"]], "topk() (in module torch)": [[1840, "torch.topk"]], "trace() (in module torch)": [[1841, "torch.trace"]], "transpose() (in module torch)": [[1842, "torch.transpose"]], "trapezoid() (in module torch)": [[1843, "torch.trapezoid"]], "trapz() (in module torch)": [[1844, "torch.trapz"]], "triangular_solve() (in module torch)": [[1845, "torch.triangular_solve"]], "tril() (in module torch)": [[1846, "torch.tril"]], "tril_indices() (in module torch)": [[1847, "torch.tril_indices"]], "triu() (in module torch)": [[1848, "torch.triu"]], "triu_indices() (in module torch)": [[1849, "torch.triu_indices"]], "true_divide() (in module torch)": [[1850, "torch.true_divide"]], "trunc() (in module torch)": [[1851, "torch.trunc"]], "unbind() (in module torch)": [[1852, "torch.unbind"]], "unflatten() (in module torch)": [[1853, "torch.unflatten"]], "unique() (in module torch)": [[1854, "torch.unique"]], "unique_consecutive() (in module torch)": [[1855, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1856, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1857, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1858, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1859, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1860, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1861, "torch.utils.set_module"]], "vander() (in module torch)": [[1862, "torch.vander"]], "var() (in module torch)": [[1863, "torch.var"]], "var_mean() (in module torch)": [[1864, "torch.var_mean"]], "vdot() (in module torch)": [[1865, "torch.vdot"]], "view_as_complex() (in module torch)": [[1866, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1867, "torch.view_as_real"]], "vmap() (in module torch)": [[1868, "torch.vmap"]], "vsplit() (in module torch)": [[1869, "torch.vsplit"]], "vstack() (in module torch)": [[1870, "torch.vstack"]], "where() (in module torch)": [[1871, "torch.where"]], "xlogy() (in module torch)": [[1872, "torch.xlogy"]], "zeros() (in module torch)": [[1873, "torch.zeros"]], "zeros_like() (in module torch)": [[1874, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1875, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1875, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1875, "torch.hub.help"]], "list() (in module torch.hub)": [[1875, "torch.hub.list"]], "load() (in module torch.hub)": [[1875, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1875, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1875, "torch.hub.set_dir"]], "torch.hub": [[1875, "module-torch.hub"]], "pytorch_jit": [[1877, "envvar-PYTORCH_JIT"]], "environment variable": [[1877, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1877, "torch.jit.export"]], "torch.jit": [[1877, "module-torch.jit"]], "torch.jit.mobile": [[1877, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1878, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1879, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1879, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1882, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1883, "module-torch.utils.jit"]], "library (class in torch.library)": [[1884, "torch.library.Library"]], "define() (torch.library.library method)": [[1884, "torch.library.Library.define"]], "fallthrough_kernel() (in module torch.library)": [[1884, "torch.library.fallthrough_kernel"]], "impl() (torch.library.library method)": [[1884, "torch.library.Library.impl"]], "torch.linalg": [[1885, "module-torch.linalg"]], "torch._logging": [[1886, "module-torch._logging"]], "torch.masked": [[1887, "module-torch.masked"]], "torch.masked.maskedtensor": [[1887, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1888, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1889, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1889, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1890, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1890, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1890, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1890, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1890, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1890, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1890, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1890, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1890, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1890, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1890, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1890, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1890, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1890, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1890, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1890, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1890, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1890, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1890, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1890, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1890, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1891, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1892, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1892, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1892, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1892, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1892, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1892, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1892, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1894, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1894, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1894, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1894, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1894, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1894, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1895, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1895, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1895, "torch.nested.to_padded_tensor"]], "torch.nested": [[1895, "module-torch.nested"]], "torch.nn": [[1896, "module-torch.nn"]], "torch.nn.backends": [[1896, "module-torch.nn.backends"]], "torch.nn.modules": [[1896, "module-torch.nn.modules"]], "torch.nn.parallel": [[1896, "module-torch.nn.parallel"]], "torch.nn.utils": [[1896, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1896, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1898, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1898, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1898, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1898, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1898, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1898, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1898, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1898, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1898, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1898, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1898, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1898, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1898, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1898, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1898, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1916, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1916, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1916, "torch.serialization.set_default_load_endianness"]], "disable_log() (in module torch.onnx)": [[1918, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1918, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1918, "torch.onnx.enable_fake_mode"]], "enable_log() (in module torch.onnx)": [[1918, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1918, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1918, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1918, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1918, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1918, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1918, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1918, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1918, "torch.onnx.unregister_custom_op_symbolic"]], "torchscriptonnxexportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1919, "torch.onnx._internal.diagnostics.TorchScriptOnnxExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.torchscriptonnxexportdiagnostic method)": [[1919, "torch.onnx._internal.diagnostics.TorchScriptOnnxExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1919, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1921, "torch.optim.Optimizer"]], "torch.optim": [[1921, "module-torch.optim"]], "directory (class in torch.package)": [[1922, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1922, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1922, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1922, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1922, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1922, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1922, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1922, "torch.package.PackageExporter.save_text"]], "torch.package": [[1922, "module-torch.package"]], "torch.package.analyze": [[1922, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1923, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1923, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1923, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1923, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1923, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1923, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1924, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1924, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1924, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1924, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1924, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1924, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1924, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1924, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1924, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1924, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1924, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1924, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1924, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1924, "module-torch.profiler"]], "torch.ao": [[1925, "module-torch.ao"]], "torch.ao.nn": [[1925, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1925, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1925, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1925, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1925, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1925, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1925, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1925, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1925, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1925, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1925, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1925, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1925, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1925, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1925, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1925, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1925, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1928, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1928, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1928, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1928, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1928, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1928, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1928, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1928, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1928, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1928, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1928, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1928, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1928, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1928, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1928, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1928, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1928, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1928, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1928, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1928, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1928, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1928, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1928, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1928, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1928, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1928, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1928, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1928, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1928, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1928, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1928, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1928, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1928, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1928, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1928, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1928, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1928, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1928, "module-torch.quantization"]], "torch.quantization.fx": [[1928, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1929, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1929, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1929, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1929, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1929, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1929, "torch.random.set_rng_state"]], "torch.random": [[1929, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1930, "torch.distributed.rpc.BackendType"]], "pyrref (class in torch.distributed.rpc)": [[1930, "torch.distributed.rpc.PyRRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1930, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1930, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1930, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1930, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1930, "torch.distributed.autograd.backward"]], "backward() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.backward"]], "confirmed_by_owner() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.confirmed_by_owner"]], "context (class in torch.distributed.autograd)": [[1930, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1930, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1930, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1930, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1930, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1930, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1930, "torch.distributed.rpc.init_rpc"]], "is_owner() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.is_owner"]], "local_value() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.local_value"]], "name (torch.distributed.rpc.workerinfo property)": [[1930, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "owner() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.owner"]], "owner_name() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.owner_name"]], "remote() (in module torch.distributed.rpc)": [[1930, "torch.distributed.rpc.remote"]], "remote() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1930, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1930, "torch.distributed.rpc.rpc_async"]], "rpc_async() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1930, "torch.distributed.rpc.rpc_sync"]], "rpc_sync() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1930, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1930, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1930, "torch.distributed.rpc.shutdown"]], "to_here() (torch.distributed.rpc.pyrref method)": [[1930, "torch.distributed.rpc.PyRRef.to_here"]], "torch.distributed.autograd": [[1930, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1930, "module-torch.distributed.rpc"]], "torch.signal": [[1933, "module-torch.signal"]], "torch.signal.windows": [[1933, "module-torch.signal.windows"]], "torch.sparse": [[1934, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1935, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1935, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1935, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1935, "torch.special.digamma"]], "entr() (in module torch.special)": [[1935, "torch.special.entr"]], "erf() (in module torch.special)": [[1935, "torch.special.erf"]], "erfc() (in module torch.special)": [[1935, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1935, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1935, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1935, "torch.special.exp2"]], "expit() (in module torch.special)": [[1935, "torch.special.expit"]], "expm1() (in module torch.special)": [[1935, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1935, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1935, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1935, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1935, "torch.special.i0"]], "i0e() (in module torch.special)": [[1935, "torch.special.i0e"]], "i1() (in module torch.special)": [[1935, "torch.special.i1"]], "i1e() (in module torch.special)": [[1935, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1935, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1935, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1935, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1935, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1935, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1935, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1935, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1935, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1935, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1935, "torch.special.psi"]], "round() (in module torch.special)": [[1935, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1935, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1935, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1935, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1935, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1935, "torch.special.spherical_bessel_j0"]], "torch.special": [[1935, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1935, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1935, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1935, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1936, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1936, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1936, "torch.ByteStorage"]], "charstorage (class in torch)": [[1936, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1936, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1936, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1936, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1936, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1936, "torch.HalfStorage"]], "intstorage (class in torch)": [[1936, "torch.IntStorage"]], "longstorage (class in torch)": [[1936, "torch.LongStorage"]], "qint32storage (class in torch)": [[1936, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1936, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1936, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1936, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1936, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1936, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1936, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1936, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1936, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1936, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1936, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1936, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1936, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1936, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1936, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1936, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1936, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1936, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1936, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1936, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1936, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1936, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1936, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1936, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1936, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1936, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1936, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1936, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1936, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1936, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1936, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1936, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1936, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1936, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1936, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1936, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1936, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1936, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1936, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1936, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1936, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1936, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1936, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1936, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1936, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1936, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1936, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1936, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1936, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1936, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1936, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1936, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1936, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1936, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1936, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1936, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1936, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1936, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1936, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1936, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1936, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1936, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1936, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1936, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1936, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1936, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1936, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1936, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1936, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1936, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1936, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1936, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1937, "torch.device"]], "dtype (class in torch)": [[1937, "torch.dtype"]], "layout (class in torch)": [[1937, "torch.layout"]], "memory_format (class in torch)": [[1937, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1939, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1939, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1940, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1940, "torch.Tensor.T"]], "tensor (class in torch)": [[1940, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1940, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1940, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1941, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1941, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1941, "torch.testing.make_tensor"]], "torch.testing": [[1941, "module-torch.testing"]], "symbool (class in torch)": [[1942, "torch.SymBool"]], "symfloat (class in torch)": [[1942, "torch.SymFloat"]], "symint (class in torch)": [[1942, "torch.SymInt"]], "tag (class in torch)": [[1942, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1942, "torch.torch.default_generator"]], "name (torch.tag property)": [[1942, "torch.Tag.name"]], "torch": [[1942, "module-torch"]], "torch.contrib": [[1942, "module-torch.contrib"]], "torch.utils.backcompat": [[1942, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1942, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1942, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1942, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1943, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1943, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1943, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1943, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1943, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1943, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1944, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1944, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1944, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1944, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1944, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1944, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1944, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1944, "module-torch.ao.ns._numeric_suite_fx"]], "torch.compiler": [[1946, "module-torch.compiler"]], "get_ignored_functions() (in module torch.overrides)": [[1964, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1964, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1964, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1964, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1964, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1964, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1964, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1964, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1964, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1965, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1965, "torch.torch.iinfo"]], "torch.utils": [[1966, "module-torch.utils"]]}})