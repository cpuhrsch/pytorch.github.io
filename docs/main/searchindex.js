Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/cudagraph_trees", "compile/custom-backends", "compile/deep-dive", "compile/dynamic-shapes", "compile/fake-tensor", "compile/faq", "compile/fine_grained_apis", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/inductor_profiling", "compile/nn-module", "compile/performance-dashboard", "compile/profiling_torch_compile", "compile/technical-overview", "compile/torchfunc-and-torchcompile", "compile/transformations", "compile/troubleshooting", "compiler", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/cudagraph_trees.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/dynamic-shapes.rst", "compile/fake-tensor.rst", "compile/faq.rst", "compile/fine_grained_apis.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/inductor_profiling.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/profiling_torch_compile.rst", "compile/technical-overview.rst", "compile/torchfunc-and-torchcompile.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "compiler.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deeper Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs to control fine-grained tracing", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "TorchInductor GPU Profiling", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Technical Overview", "torch.func interaction with torch.compile", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.compiler", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch._export.export", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.escape-hatch", "torch.map", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 12, 14, 16, 17, 20, 21, 25, 26, 28, 29, 31, 33, 34, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 57, 59, 60, 61, 62, 65, 69, 72, 73, 167, 616, 693, 702, 748, 751, 752, 753, 758, 759, 761, 769, 770, 773, 777, 801, 802, 812, 813, 827, 837, 854, 871, 906, 915, 917, 918, 919, 945, 950, 953, 958, 959, 971, 984, 996, 1042, 1085, 1105, 1141, 1153, 1165, 1173, 1174, 1209, 1212, 1218, 1219, 1223, 1225, 1227, 1242, 1259, 1284, 1316, 1375, 1376, 1377, 1380, 1396, 1397, 1405, 1410, 1414, 1415, 1440, 1441, 1442, 1444, 1450, 1451, 1454, 1459, 1461, 1472, 1487, 1488, 1489, 1490, 1491, 1515, 1516, 1593, 1624, 1638, 1658, 1666, 1681, 1682, 1711, 1714, 1719, 1755, 1765, 1812, 1813, 1814, 1815, 1816, 1817, 1855, 1857, 1872, 1879, 1882, 1884, 1885, 1889, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1908, 1909, 1910, 1911, 1913, 1916, 1917, 1919, 1923, 1926, 1927, 1928, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1951], "conveni": [0, 3, 7, 11, 14, 20, 22, 26, 33, 56, 59, 60, 71, 1153, 1269, 1615, 1872, 1879, 1884, 1889, 1904, 1905, 1908, 1910, 1915, 1916, 1927, 1934], "method": [0, 3, 7, 9, 12, 13, 19, 20, 25, 29, 33, 34, 36, 39, 42, 43, 44, 46, 48, 49, 50, 51, 57, 59, 65, 72, 73, 74, 76, 81, 82, 238, 239, 339, 501, 502, 511, 512, 513, 534, 627, 806, 810, 812, 828, 829, 830, 851, 854, 867, 887, 888, 889, 906, 910, 911, 912, 913, 926, 927, 1022, 1136, 1165, 1210, 1212, 1213, 1215, 1216, 1217, 1222, 1223, 1227, 1228, 1229, 1257, 1275, 1276, 1283, 1284, 1341, 1344, 1352, 1360, 1387, 1444, 1445, 1446, 1454, 1455, 1472, 1543, 1615, 1624, 1632, 1633, 1636, 1638, 1640, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1660, 1665, 1678, 1679, 1684, 1685, 1686, 1688, 1698, 1730, 1811, 1826, 1830, 1879, 1880, 1882, 1885, 1886, 1893, 1895, 1897, 1898, 1899, 1903, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1916, 1918, 1921, 1924, 1926, 1927, 1930, 1932, 1935, 1937, 1941, 1942, 1944, 1945, 1947, 1950], "where": [0, 1, 2, 3, 4, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 25, 29, 31, 33, 34, 39, 40, 42, 46, 47, 48, 50, 52, 59, 60, 61, 62, 65, 67, 68, 70, 73, 100, 170, 240, 270, 416, 418, 501, 693, 706, 708, 709, 712, 748, 771, 773, 794, 833, 834, 846, 890, 909, 914, 916, 929, 935, 944, 950, 957, 958, 959, 966, 980, 984, 989, 991, 1000, 1002, 1064, 1065, 1068, 1072, 1090, 1101, 1102, 1104, 1107, 1108, 1110, 1111, 1113, 1114, 1115, 1117, 1118, 1120, 1122, 1146, 1147, 1148, 1152, 1153, 1156, 1168, 1169, 1170, 1171, 1201, 1202, 1204, 1205, 1208, 1209, 1210, 1213, 1225, 1231, 1232, 1233, 1236, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1283, 1284, 1289, 1292, 1299, 1300, 1301, 1302, 1306, 1309, 1311, 1312, 1313, 1314, 1317, 1334, 1339, 1340, 1342, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1514, 1516, 1526, 1527, 1534, 1539, 1541, 1542, 1560, 1561, 1578, 1580, 1581, 1584, 1585, 1587, 1593, 1596, 1624, 1626, 1627, 1631, 1658, 1659, 1660, 1661, 1670, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1703, 1704, 1705, 1717, 1727, 1729, 1730, 1750, 1751, 1787, 1793, 1794, 1799, 1803, 1807, 1808, 1809, 1812, 1813, 1814, 1815, 1816, 1817, 1824, 1825, 1826, 1829, 1830, 1844, 1853, 1854, 1855, 1856, 1857, 1862, 1863, 1867, 1868, 1869, 1870, 1871, 1872, 1881, 1882, 1883, 1885, 1886, 1891, 1892, 1894, 1897, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1916, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1933, 1935, 1937, 1939, 1940, 1942, 1944, 1949, 1950], "some": [0, 1, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 33, 38, 39, 40, 42, 44, 47, 48, 50, 52, 60, 61, 65, 68, 70, 71, 72, 73, 99, 492, 510, 580, 702, 761, 966, 1038, 1042, 1045, 1085, 1106, 1108, 1116, 1117, 1118, 1133, 1142, 1153, 1187, 1209, 1210, 1212, 1213, 1222, 1225, 1227, 1257, 1275, 1281, 1306, 1313, 1316, 1352, 1356, 1360, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1404, 1407, 1408, 1409, 1410, 1411, 1414, 1435, 1436, 1444, 1447, 1448, 1449, 1451, 1458, 1459, 1475, 1476, 1492, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1555, 1560, 1578, 1581, 1586, 1593, 1615, 1624, 1625, 1626, 1627, 1631, 1664, 1699, 1705, 1711, 1729, 1749, 1773, 1780, 1794, 1830, 1872, 1879, 1882, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1897, 1898, 1899, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1944], "oper": [0, 2, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 26, 27, 28, 29, 31, 34, 36, 39, 44, 48, 49, 56, 57, 59, 60, 66, 71, 72, 73, 96, 97, 98, 99, 100, 101, 102, 103, 270, 329, 337, 351, 368, 418, 460, 461, 462, 463, 464, 507, 510, 513, 527, 529, 531, 602, 693, 699, 702, 754, 755, 756, 760, 761, 770, 771, 781, 782, 792, 798, 805, 806, 808, 809, 812, 836, 839, 872, 874, 875, 878, 902, 904, 910, 912, 934, 935, 937, 939, 942, 944, 946, 948, 953, 956, 959, 963, 966, 973, 978, 989, 991, 1019, 1028, 1059, 1064, 1065, 1066, 1067, 1080, 1085, 1086, 1087, 1088, 1098, 1103, 1121, 1133, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1153, 1160, 1163, 1169, 1170, 1187, 1212, 1222, 1223, 1227, 1228, 1231, 1241, 1254, 1264, 1267, 1268, 1281, 1282, 1291, 1298, 1306, 1311, 1316, 1325, 1326, 1339, 1342, 1356, 1361, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1401, 1402, 1403, 1404, 1406, 1411, 1430, 1435, 1440, 1441, 1442, 1444, 1457, 1462, 1463, 1464, 1471, 1486, 1487, 1489, 1491, 1495, 1511, 1512, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1535, 1536, 1538, 1539, 1543, 1547, 1554, 1560, 1562, 1568, 1569, 1579, 1581, 1585, 1593, 1599, 1600, 1611, 1612, 1613, 1614, 1624, 1626, 1627, 1660, 1666, 1671, 1675, 1676, 1697, 1703, 1713, 1717, 1726, 1727, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1749, 1755, 1772, 1773, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1807, 1808, 1809, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1829, 1844, 1865, 1872, 1875, 1877, 1878, 1880, 1881, 1882, 1886, 1889, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1916, 1917, 1918, 1919, 1920, 1924, 1926, 1929, 1931, 1933, 1934, 1935, 1936, 1940, 1942, 1943, 1946], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 31, 33, 34, 35, 37, 39, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 65, 66, 68, 69, 70, 71, 72, 74, 76, 81, 82, 96, 97, 98, 100, 105, 114, 136, 167, 171, 208, 225, 335, 337, 351, 358, 359, 422, 450, 463, 473, 501, 502, 510, 513, 527, 531, 534, 557, 570, 596, 597, 598, 600, 601, 630, 693, 699, 702, 725, 726, 727, 728, 729, 730, 733, 742, 743, 744, 745, 746, 748, 761, 770, 773, 781, 782, 785, 786, 787, 792, 794, 798, 799, 800, 803, 806, 807, 808, 809, 812, 815, 820, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 844, 845, 846, 847, 850, 867, 871, 872, 874, 875, 878, 891, 892, 893, 902, 903, 904, 906, 907, 908, 909, 911, 912, 914, 915, 916, 917, 920, 921, 922, 926, 927, 930, 933, 934, 935, 936, 944, 946, 947, 954, 956, 958, 966, 969, 973, 977, 980, 982, 985, 986, 987, 988, 989, 991, 993, 994, 996, 999, 1009, 1010, 1013, 1014, 1020, 1024, 1028, 1030, 1031, 1032, 1034, 1036, 1037, 1042, 1043, 1052, 1054, 1055, 1061, 1066, 1067, 1068, 1077, 1085, 1086, 1088, 1098, 1099, 1100, 1103, 1105, 1113, 1115, 1119, 1121, 1128, 1130, 1133, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1157, 1158, 1162, 1163, 1165, 1169, 1170, 1171, 1172, 1186, 1187, 1199, 1209, 1210, 1212, 1213, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1231, 1233, 1235, 1243, 1247, 1248, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1264, 1265, 1266, 1268, 1269, 1275, 1276, 1277, 1281, 1282, 1283, 1284, 1289, 1292, 1298, 1301, 1302, 1305, 1306, 1311, 1312, 1313, 1316, 1322, 1334, 1339, 1341, 1342, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1430, 1431, 1432, 1437, 1438, 1439, 1440, 1441, 1444, 1446, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1475, 1477, 1480, 1483, 1491, 1492, 1493, 1494, 1496, 1499, 1500, 1501, 1508, 1510, 1511, 1512, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1543, 1545, 1552, 1554, 1555, 1562, 1567, 1568, 1569, 1579, 1581, 1587, 1593, 1597, 1599, 1600, 1608, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1658, 1659, 1660, 1664, 1665, 1666, 1668, 1669, 1671, 1672, 1675, 1678, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1708, 1709, 1711, 1712, 1714, 1715, 1717, 1727, 1729, 1730, 1731, 1734, 1735, 1736, 1738, 1740, 1742, 1744, 1745, 1751, 1758, 1761, 1766, 1767, 1769, 1770, 1771, 1773, 1775, 1776, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1803, 1805, 1806, 1808, 1809, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1829, 1830, 1831, 1844, 1848, 1851, 1855, 1857, 1862, 1864, 1865, 1869, 1872, 1877, 1879, 1880, 1881, 1882, 1883, 1885, 1886, 1887, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1907, 1909, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1929, 1931, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950], "float": [0, 1, 3, 14, 19, 28, 31, 39, 40, 42, 46, 48, 50, 53, 61, 65, 73, 170, 171, 236, 329, 331, 333, 337, 349, 416, 490, 496, 513, 527, 698, 700, 705, 707, 711, 745, 748, 751, 752, 753, 757, 758, 759, 761, 768, 769, 774, 775, 776, 777, 778, 783, 784, 785, 786, 787, 788, 790, 792, 793, 794, 798, 805, 806, 807, 812, 830, 832, 843, 851, 852, 865, 870, 871, 874, 875, 878, 893, 921, 922, 935, 936, 944, 951, 954, 958, 974, 979, 980, 984, 985, 1055, 1068, 1079, 1080, 1090, 1103, 1121, 1130, 1131, 1132, 1133, 1135, 1156, 1159, 1168, 1169, 1170, 1173, 1174, 1194, 1201, 1202, 1204, 1205, 1206, 1207, 1210, 1212, 1227, 1228, 1231, 1235, 1237, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1289, 1298, 1300, 1302, 1329, 1333, 1334, 1338, 1340, 1341, 1342, 1345, 1348, 1352, 1356, 1362, 1363, 1364, 1366, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1398, 1399, 1400, 1403, 1404, 1405, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1430, 1432, 1436, 1444, 1449, 1450, 1452, 1453, 1458, 1462, 1465, 1466, 1467, 1468, 1469, 1475, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1493, 1496, 1497, 1498, 1525, 1526, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1540, 1545, 1554, 1579, 1586, 1593, 1612, 1624, 1628, 1629, 1632, 1641, 1642, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1660, 1661, 1665, 1671, 1672, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1711, 1713, 1715, 1717, 1723, 1726, 1730, 1731, 1732, 1733, 1745, 1749, 1750, 1770, 1771, 1774, 1778, 1787, 1788, 1790, 1791, 1793, 1827, 1830, 1834, 1851, 1853, 1865, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1895, 1897, 1898, 1900, 1901, 1903, 1904, 1908, 1910, 1912, 1916, 1919, 1923, 1925, 1927, 1929, 1930, 1931, 1935, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1951], "datatyp": [0, 73, 893, 1209, 1212, 1444, 1626, 1627, 1773, 1919, 1923, 1939], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 16, 17, 18, 19, 20, 21, 25, 28, 29, 33, 34, 36, 39, 40, 43, 46, 48, 49, 50, 52, 56, 57, 59, 60, 65, 66, 68, 70, 71, 72, 73, 114, 115, 130, 146, 147, 150, 162, 163, 166, 167, 176, 177, 182, 183, 213, 214, 215, 224, 250, 255, 259, 260, 261, 271, 290, 291, 298, 299, 300, 301, 307, 308, 309, 310, 311, 312, 319, 320, 323, 324, 325, 326, 329, 331, 337, 340, 360, 368, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 394, 395, 410, 411, 424, 428, 453, 454, 465, 466, 470, 471, 502, 512, 534, 574, 575, 576, 577, 593, 596, 629, 630, 631, 634, 635, 693, 698, 707, 751, 752, 753, 754, 755, 756, 773, 827, 839, 874, 878, 884, 891, 892, 897, 903, 906, 907, 920, 921, 922, 926, 927, 933, 938, 939, 941, 942, 943, 945, 950, 966, 979, 985, 986, 989, 991, 993, 1000, 1010, 1031, 1073, 1079, 1080, 1081, 1082, 1089, 1090, 1091, 1105, 1112, 1130, 1131, 1132, 1133, 1136, 1142, 1143, 1144, 1145, 1148, 1152, 1154, 1155, 1156, 1166, 1167, 1168, 1177, 1178, 1180, 1181, 1186, 1187, 1189, 1201, 1210, 1212, 1216, 1223, 1232, 1234, 1235, 1236, 1238, 1239, 1244, 1262, 1264, 1267, 1268, 1281, 1289, 1290, 1291, 1293, 1295, 1296, 1299, 1300, 1306, 1309, 1310, 1314, 1315, 1319, 1322, 1333, 1335, 1345, 1348, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1381, 1391, 1396, 1398, 1410, 1444, 1445, 1454, 1472, 1487, 1491, 1495, 1518, 1519, 1520, 1545, 1554, 1593, 1612, 1615, 1624, 1628, 1629, 1647, 1669, 1673, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1708, 1709, 1715, 1717, 1745, 1749, 1765, 1770, 1773, 1775, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1827, 1828, 1844, 1850, 1854, 1856, 1869, 1870, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1893, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1923, 1926, 1930, 1931, 1935, 1936, 1937, 1940, 1944, 1945, 1946, 1950], "lower": [0, 1, 8, 16, 29, 40, 42, 48, 65, 806, 808, 872, 945, 950, 957, 958, 959, 961, 1099, 1100, 1172, 1173, 1241, 1248, 1250, 1258, 1259, 1266, 1269, 1274, 1312, 1334, 1341, 1352, 1462, 1518, 1519, 1520, 1591, 1592, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1711, 1713, 1728, 1730, 1750, 1765, 1773, 1810, 1853, 1854, 1855, 1881, 1882, 1883, 1885, 1901, 1903, 1905, 1916, 1921, 1925, 1930, 1940, 1946], "point": [0, 1, 7, 8, 9, 12, 13, 16, 18, 19, 20, 23, 28, 31, 39, 40, 43, 46, 50, 56, 59, 60, 65, 73, 105, 170, 171, 337, 349, 355, 496, 513, 711, 751, 752, 753, 754, 755, 756, 757, 762, 763, 764, 765, 766, 767, 768, 769, 772, 774, 775, 776, 777, 778, 788, 790, 792, 793, 794, 798, 808, 812, 832, 833, 834, 835, 838, 843, 865, 874, 875, 878, 893, 915, 917, 918, 919, 921, 922, 935, 936, 944, 966, 979, 980, 984, 1034, 1036, 1045, 1049, 1050, 1131, 1132, 1133, 1159, 1165, 1169, 1170, 1174, 1194, 1209, 1212, 1227, 1228, 1235, 1237, 1258, 1259, 1282, 1284, 1289, 1298, 1341, 1348, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1437, 1438, 1439, 1444, 1495, 1496, 1508, 1534, 1543, 1554, 1593, 1612, 1624, 1671, 1683, 1714, 1730, 1731, 1732, 1736, 1745, 1758, 1770, 1771, 1778, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1865, 1880, 1882, 1884, 1885, 1886, 1889, 1895, 1901, 1903, 1904, 1905, 1909, 1913, 1916, 1919, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1939, 1942, 1944, 1945, 1946, 1947, 1948, 1951], "lower_precision_fp": 0, "half": [0, 1, 10, 40, 48, 630, 974, 1099, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1212, 1274, 1280, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1393, 1395, 1444, 1538, 1539, 1542, 1680, 1705, 1758, 1826, 1898, 1916, 1919, 1939, 1941, 1942, 1945, 1947], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 33, 34, 39, 40, 42, 47, 48, 57, 59, 60, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 352, 602, 630, 773, 806, 854, 873, 891, 912, 921, 922, 935, 944, 968, 973, 1028, 1029, 1038, 1080, 1085, 1086, 1106, 1128, 1131, 1132, 1138, 1142, 1145, 1146, 1147, 1153, 1169, 1170, 1210, 1212, 1213, 1219, 1222, 1227, 1231, 1258, 1259, 1270, 1283, 1352, 1360, 1388, 1391, 1407, 1408, 1409, 1444, 1445, 1446, 1454, 1455, 1472, 1495, 1537, 1555, 1611, 1615, 1624, 1625, 1626, 1627, 1632, 1657, 1675, 1700, 1723, 1738, 1742, 1761, 1770, 1773, 1830, 1841, 1872, 1877, 1879, 1880, 1882, 1884, 1885, 1892, 1897, 1898, 1899, 1904, 1905, 1908, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921, 1922, 1923, 1926, 1928, 1929, 1930, 1933, 1935, 1936, 1939, 1941, 1942, 1946, 1947, 1949, 1950], "linear": [0, 2, 9, 25, 29, 40, 42, 43, 46, 48, 65, 67, 69, 71, 73, 74, 446, 487, 488, 489, 490, 491, 494, 724, 733, 741, 742, 778, 805, 806, 807, 809, 827, 867, 871, 872, 874, 875, 916, 959, 991, 1085, 1141, 1143, 1151, 1153, 1165, 1212, 1216, 1223, 1237, 1243, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1272, 1274, 1302, 1341, 1360, 1366, 1386, 1394, 1395, 1403, 1429, 1444, 1446, 1459, 1461, 1463, 1471, 1473, 1480, 1483, 1494, 1496, 1532, 1541, 1542, 1554, 1588, 1596, 1601, 1612, 1615, 1624, 1631, 1632, 1636, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1664, 1665, 1668, 1708, 1711, 1719, 1730, 1865, 1872, 1880, 1883, 1884, 1890, 1893, 1900, 1903, 1908, 1909, 1910, 1912, 1916, 1921, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1935], "layer": [0, 8, 16, 40, 42, 44, 46, 47, 65, 68, 747, 748, 773, 854, 871, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1383, 1384, 1385, 1389, 1396, 1397, 1399, 1407, 1408, 1409, 1414, 1415, 1416, 1429, 1431, 1437, 1438, 1439, 1450, 1451, 1459, 1461, 1472, 1483, 1487, 1488, 1489, 1490, 1491, 1557, 1624, 1631, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1880, 1903, 1908, 1910, 1912, 1915, 1916, 1921, 1923, 1926, 1928, 1930, 1931, 1933, 1939, 1949], "convolut": [0, 1, 2, 18, 751, 752, 753, 754, 755, 756, 785, 786, 787, 966, 1221, 1372, 1373, 1374, 1375, 1376, 1377, 1383, 1384, 1385, 1389, 1420, 1421, 1422, 1423, 1424, 1425, 1456, 1457, 1462, 1492, 1493, 1495, 1518, 1519, 1520, 1521, 1522, 1523, 1542, 1543, 1773, 1880, 1881, 1883, 1893, 1903, 1907, 1908, 1913, 1916, 1925, 1929, 1930, 1933], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 56, 57, 59, 60, 61, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 82, 96, 98, 99, 100, 105, 114, 167, 270, 335, 337, 351, 352, 355, 393, 418, 463, 486, 496, 501, 513, 527, 531, 557, 593, 602, 630, 693, 702, 703, 704, 710, 748, 769, 773, 774, 776, 777, 778, 792, 795, 796, 798, 799, 800, 805, 806, 807, 808, 809, 812, 827, 828, 829, 830, 832, 833, 834, 835, 838, 853, 867, 871, 872, 873, 874, 875, 878, 887, 888, 899, 900, 901, 903, 906, 912, 914, 915, 916, 917, 918, 919, 921, 922, 935, 944, 945, 947, 948, 950, 953, 959, 966, 974, 979, 980, 983, 984, 987, 988, 989, 991, 992, 994, 999, 1011, 1022, 1028, 1031, 1032, 1042, 1052, 1059, 1068, 1073, 1077, 1080, 1085, 1101, 1102, 1103, 1104, 1106, 1108, 1113, 1115, 1121, 1124, 1126, 1127, 1131, 1132, 1133, 1141, 1142, 1147, 1149, 1151, 1152, 1153, 1157, 1165, 1169, 1170, 1172, 1174, 1187, 1189, 1201, 1202, 1204, 1205, 1208, 1209, 1210, 1212, 1213, 1216, 1218, 1219, 1222, 1225, 1227, 1228, 1233, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1278, 1281, 1282, 1283, 1284, 1293, 1294, 1295, 1296, 1298, 1299, 1301, 1303, 1304, 1306, 1309, 1312, 1313, 1314, 1317, 1319, 1334, 1338, 1339, 1340, 1341, 1342, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1388, 1389, 1391, 1396, 1397, 1398, 1399, 1404, 1407, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1459, 1461, 1472, 1475, 1476, 1477, 1483, 1487, 1489, 1491, 1492, 1493, 1495, 1496, 1508, 1514, 1515, 1516, 1526, 1527, 1534, 1535, 1536, 1537, 1543, 1554, 1555, 1578, 1581, 1583, 1586, 1593, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1643, 1657, 1661, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1707, 1710, 1711, 1723, 1729, 1730, 1736, 1745, 1748, 1749, 1756, 1758, 1769, 1770, 1773, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1822, 1825, 1826, 1829, 1830, 1839, 1841, 1845, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1865, 1866, 1867, 1868, 1872, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951], "much": [0, 4, 7, 9, 14, 16, 20, 21, 34, 39, 40, 167, 906, 915, 920, 1042, 1247, 1248, 1275, 1284, 1388, 1624, 1647, 1711, 1882, 1905, 1908, 1913, 1916, 1921, 1927, 1928, 1935, 1936, 1939], "faster": [0, 2, 8, 16, 19, 23, 26, 31, 39, 40, 42, 65, 915, 921, 922, 1141, 1241, 1242, 1247, 1248, 1252, 1257, 1265, 1267, 1269, 1272, 1275, 1277, 1281, 1284, 1460, 1477, 1583, 1599, 1624, 1628, 1629, 1631, 1686, 1687, 1698, 1812, 1813, 1814, 1816, 1817, 1893, 1905, 1908, 1913, 1926, 1930, 1939, 1944], "reduct": [0, 2, 18, 22, 29, 42, 65, 337, 527, 531, 966, 1257, 1289, 1341, 1360, 1361, 1367, 1378, 1380, 1388, 1398, 1404, 1405, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1493, 1515, 1516, 1524, 1526, 1527, 1535, 1540, 1551, 1552, 1555, 1556, 1566, 1574, 1575, 1576, 1577, 1578, 1586, 1597, 1598, 1609, 1610, 1624, 1730, 1807, 1883, 1898, 1909, 1913, 1927, 1930], "often": [0, 2, 4, 7, 8, 15, 16, 21, 25, 29, 33, 39, 42, 48, 60, 68, 73, 167, 906, 920, 1227, 1258, 1259, 1268, 1317, 1387, 1407, 1408, 1409, 1508, 1516, 1534, 1543, 1615, 1631, 1678, 1713, 1885, 1905, 1908, 1912, 1915, 1916, 1918, 1919, 1920, 1927, 1935, 1944], "requir": [0, 1, 5, 8, 9, 11, 12, 13, 15, 16, 18, 19, 23, 25, 33, 34, 39, 40, 42, 43, 44, 46, 48, 50, 58, 59, 65, 68, 70, 72, 73, 136, 167, 238, 351, 473, 510, 527, 529, 531, 573, 806, 808, 836, 839, 893, 902, 906, 911, 914, 915, 916, 917, 918, 919, 920, 966, 985, 986, 1041, 1085, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1126, 1127, 1153, 1154, 1225, 1251, 1282, 1284, 1298, 1380, 1387, 1388, 1487, 1488, 1489, 1490, 1491, 1493, 1535, 1593, 1615, 1624, 1625, 1634, 1636, 1638, 1678, 1689, 1699, 1717, 1814, 1826, 1865, 1872, 1879, 1882, 1885, 1887, 1892, 1893, 1897, 1899, 1900, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1923, 1927, 1928, 1930, 1931, 1935, 1936, 1937, 1939, 1944, 1946, 1947, 1949, 1950], "dynam": [0, 13, 16, 18, 21, 24, 26, 29, 33, 34, 39, 74, 75, 76, 79, 80, 81, 84, 693, 742, 746, 773, 774, 775, 776, 777, 778, 807, 828, 839, 842, 857, 863, 864, 865, 866, 871, 872, 966, 987, 1219, 1225, 1227, 1283, 1631, 1880, 1884, 1885, 1886, 1903, 1908, 1916, 1919, 1923, 1926, 1927, 1931], "rang": [0, 1, 3, 12, 14, 20, 25, 29, 39, 42, 43, 46, 48, 59, 60, 62, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 317, 496, 697, 774, 776, 778, 808, 832, 833, 834, 835, 836, 838, 839, 840, 898, 936, 961, 1046, 1047, 1055, 1085, 1135, 1151, 1172, 1173, 1174, 1278, 1289, 1304, 1313, 1329, 1341, 1352, 1380, 1390, 1392, 1393, 1397, 1403, 1415, 1434, 1446, 1451, 1455, 1461, 1477, 1478, 1479, 1483, 1538, 1539, 1543, 1599, 1624, 1629, 1701, 1702, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1730, 1809, 1864, 1882, 1883, 1885, 1905, 1907, 1908, 1912, 1916, 1918, 1919, 1923, 1925, 1926, 1929, 1930, 1933, 1934, 1940, 1942, 1944, 1945, 1946, 1947], "tri": [0, 2, 3, 7, 15, 16, 39, 48, 52, 73, 593, 1212, 1444, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1884, 1885, 1897, 1912, 1923, 1927], "match": [0, 1, 3, 16, 20, 28, 42, 44, 46, 48, 59, 73, 74, 81, 82, 98, 167, 329, 331, 337, 488, 489, 513, 514, 593, 596, 706, 712, 792, 806, 807, 808, 867, 891, 906, 920, 921, 922, 985, 988, 1000, 1001, 1002, 1031, 1077, 1085, 1141, 1153, 1189, 1212, 1225, 1227, 1244, 1283, 1305, 1379, 1388, 1444, 1450, 1496, 1515, 1516, 1554, 1580, 1587, 1593, 1612, 1624, 1636, 1666, 1672, 1731, 1765, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1846, 1872, 1882, 1885, 1892, 1898, 1900, 1905, 1906, 1908, 1910, 1916, 1921, 1923, 1924, 1926, 1927, 1928, 1930, 1931, 1932, 1935, 1942, 1946, 1948], "each": [0, 1, 2, 5, 9, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 57, 60, 61, 62, 65, 66, 68, 70, 71, 73, 97, 100, 114, 136, 170, 171, 414, 418, 507, 527, 529, 531, 558, 620, 630, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 699, 706, 708, 709, 712, 748, 773, 805, 853, 854, 872, 874, 875, 878, 890, 899, 900, 901, 902, 904, 905, 906, 911, 920, 934, 937, 946, 950, 954, 955, 957, 960, 964, 966, 968, 984, 997, 998, 1002, 1031, 1034, 1036, 1042, 1044, 1048, 1051, 1057, 1062, 1063, 1064, 1065, 1068, 1069, 1080, 1083, 1085, 1102, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1126, 1127, 1129, 1134, 1138, 1143, 1144, 1148, 1152, 1153, 1154, 1165, 1171, 1173, 1174, 1175, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1212, 1227, 1228, 1233, 1265, 1283, 1284, 1299, 1301, 1309, 1311, 1312, 1313, 1314, 1317, 1319, 1325, 1326, 1334, 1340, 1342, 1352, 1357, 1360, 1361, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1396, 1397, 1399, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1424, 1425, 1429, 1431, 1435, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1458, 1459, 1461, 1472, 1475, 1476, 1478, 1483, 1486, 1492, 1493, 1495, 1513, 1515, 1516, 1521, 1522, 1523, 1526, 1527, 1529, 1530, 1531, 1534, 1535, 1536, 1540, 1543, 1553, 1555, 1578, 1579, 1581, 1583, 1586, 1593, 1606, 1615, 1620, 1621, 1624, 1657, 1658, 1660, 1670, 1671, 1672, 1678, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1722, 1726, 1727, 1730, 1737, 1745, 1750, 1751, 1756, 1760, 1765, 1778, 1789, 1795, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1829, 1830, 1845, 1847, 1848, 1851, 1862, 1863, 1866, 1872, 1873, 1879, 1884, 1885, 1891, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1926, 1928, 1929, 1930, 1935, 1936, 1937, 1939, 1940, 1942, 1944, 1945, 1946, 1948, 1949], "its": [0, 1, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 22, 23, 33, 34, 36, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 59, 60, 61, 65, 72, 73, 74, 76, 96, 97, 167, 473, 502, 518, 527, 529, 531, 596, 597, 598, 630, 693, 836, 839, 887, 888, 889, 891, 892, 893, 906, 909, 921, 926, 927, 933, 958, 959, 973, 974, 980, 984, 992, 1020, 1022, 1031, 1068, 1072, 1075, 1085, 1088, 1133, 1138, 1142, 1143, 1144, 1147, 1152, 1173, 1174, 1178, 1192, 1212, 1222, 1247, 1248, 1252, 1257, 1264, 1266, 1269, 1270, 1275, 1281, 1306, 1332, 1360, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1407, 1408, 1409, 1444, 1445, 1454, 1475, 1483, 1491, 1543, 1554, 1581, 1587, 1615, 1620, 1621, 1625, 1626, 1627, 1632, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1658, 1664, 1668, 1672, 1681, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1720, 1745, 1749, 1753, 1754, 1770, 1771, 1775, 1795, 1831, 1850, 1851, 1853, 1861, 1870, 1882, 1884, 1885, 1889, 1893, 1895, 1897, 1904, 1905, 1906, 1908, 1909, 1910, 1912, 1913, 1916, 1918, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1935, 1936, 1937, 1939, 1942, 1943, 1945, 1948, 1949], "appropri": [0, 7, 8, 9, 16, 20, 23, 42, 43, 48, 65, 72, 73, 907, 1031, 1227, 1885, 1886, 1889, 1899, 1913, 1918, 1921, 1928, 1930, 1933, 1935, 1936, 1937, 1941, 1950], "ordinarili": [0, 1904], "train": [0, 1, 11, 12, 16, 19, 21, 22, 24, 26, 29, 34, 39, 40, 42, 43, 45, 46, 50, 57, 58, 59, 60, 65, 68, 69, 73, 725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 746, 812, 814, 851, 852, 868, 869, 870, 872, 874, 875, 876, 1030, 1031, 1034, 1036, 1043, 1151, 1187, 1212, 1217, 1223, 1226, 1227, 1352, 1356, 1362, 1363, 1364, 1380, 1381, 1382, 1387, 1388, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1450, 1451, 1462, 1483, 1491, 1509, 1513, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1591, 1592, 1624, 1632, 1634, 1636, 1665, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1879, 1881, 1882, 1883, 1893, 1895, 1903, 1905, 1908, 1909, 1912, 1917, 1919, 1921, 1923, 1926, 1927, 1928, 1929, 1933, 1935, 1937, 1944], "gradscal": [0, 1904, 1908], "togeth": [0, 3, 9, 12, 15, 16, 23, 39, 42, 47, 48, 66, 71, 73, 773, 1028, 1085, 1141, 1143, 1147, 1151, 1152, 1157, 1251, 1396, 1414, 1459, 1554, 1624, 1628, 1851, 1893, 1904, 1910, 1911, 1912, 1915, 1916, 1930, 1935, 1936, 1937, 1939, 1944], "shown": [0, 12, 17, 40, 51, 60, 1028, 1038, 1416, 1636, 1681, 1711, 1778, 1882, 1885, 1904, 1908, 1910, 1912, 1916, 1928, 1930, 1939], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 33, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 69, 70, 71, 72, 74, 76, 81, 82, 104, 105, 208, 225, 258, 270, 276, 305, 327, 329, 331, 333, 337, 351, 368, 417, 418, 460, 461, 462, 463, 464, 486, 496, 498, 502, 507, 510, 513, 527, 529, 531, 550, 557, 571, 573, 593, 594, 596, 597, 598, 599, 600, 601, 602, 620, 630, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 733, 741, 742, 747, 751, 752, 753, 754, 755, 756, 758, 759, 761, 769, 770, 771, 773, 774, 775, 776, 777, 778, 785, 786, 787, 798, 805, 806, 807, 809, 810, 823, 824, 825, 826, 827, 828, 829, 830, 837, 851, 867, 872, 873, 874, 875, 878, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 924, 926, 927, 934, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 964, 965, 966, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1028, 1029, 1034, 1036, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1144, 1149, 1151, 1153, 1154, 1155, 1156, 1159, 1165, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1182, 1186, 1187, 1189, 1197, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1225, 1226, 1227, 1228, 1229, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1508, 1510, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1534, 1535, 1538, 1539, 1543, 1545, 1578, 1580, 1581, 1584, 1585, 1593, 1612, 1615, 1624, 1631, 1632, 1634, 1636, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1720, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1765, 1767, 1768, 1769, 1770, 1771, 1774, 1775, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1803, 1805, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1824, 1825, 1827, 1829, 1830, 1832, 1833, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1884, 1885, 1886, 1889, 1891, 1892, 1894, 1895, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1937, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950], "recip": [0, 3, 15, 46, 1444, 1624, 1638, 1904, 1916], "howev": [0, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 33, 34, 39, 40, 42, 46, 48, 50, 56, 65, 66, 67, 69, 70, 72, 73, 74, 79, 82, 98, 99, 100, 496, 558, 907, 914, 988, 1010, 1031, 1073, 1075, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1141, 1142, 1146, 1147, 1149, 1152, 1153, 1212, 1215, 1216, 1222, 1224, 1251, 1266, 1267, 1269, 1283, 1284, 1301, 1360, 1363, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1388, 1444, 1518, 1519, 1520, 1543, 1615, 1624, 1657, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1872, 1880, 1885, 1900, 1904, 1905, 1908, 1910, 1914, 1916, 1918, 1920, 1921, 1922, 1923, 1927, 1928, 1935, 1937, 1939], "modular": [0, 1904], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 18, 20, 22, 25, 27, 29, 33, 38, 39, 40, 42, 46, 48, 49, 50, 52, 56, 58, 59, 63, 65, 66, 70, 72, 73, 98, 213, 238, 270, 329, 337, 473, 529, 531, 569, 616, 630, 693, 702, 828, 829, 830, 874, 905, 912, 914, 916, 920, 921, 930, 937, 948, 960, 966, 977, 978, 980, 982, 985, 986, 988, 989, 997, 1010, 1020, 1021, 1022, 1028, 1029, 1031, 1042, 1044, 1048, 1062, 1063, 1085, 1124, 1128, 1133, 1136, 1138, 1145, 1146, 1148, 1174, 1209, 1212, 1215, 1216, 1221, 1222, 1224, 1225, 1227, 1233, 1242, 1243, 1247, 1248, 1249, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1267, 1269, 1270, 1273, 1274, 1275, 1281, 1283, 1284, 1289, 1306, 1316, 1329, 1352, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1410, 1414, 1440, 1441, 1442, 1444, 1451, 1459, 1489, 1491, 1496, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1535, 1543, 1545, 1554, 1560, 1581, 1593, 1611, 1612, 1613, 1614, 1615, 1624, 1631, 1633, 1634, 1636, 1671, 1700, 1705, 1729, 1749, 1752, 1770, 1773, 1780, 1798, 1810, 1826, 1830, 1853, 1865, 1879, 1880, 1882, 1884, 1885, 1889, 1891, 1892, 1893, 1895, 1899, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1916, 1919, 1920, 1921, 1922, 1923, 1927, 1929, 1930, 1931, 1933, 1935, 1937, 1939, 1941, 1947, 1950], "separ": [0, 1, 3, 9, 11, 29, 33, 39, 42, 46, 59, 60, 65, 66, 68, 71, 72, 73, 748, 773, 903, 1085, 1102, 1104, 1110, 1111, 1114, 1115, 1120, 1122, 1141, 1222, 1257, 1272, 1399, 1407, 1408, 1409, 1450, 1452, 1562, 1672, 1879, 1883, 1885, 1891, 1904, 1905, 1907, 1908, 1911, 1921, 1926, 1927, 1936, 1939, 1940, 1944], "desir": [0, 1, 3, 29, 39, 42, 48, 65, 73, 105, 172, 187, 189, 192, 195, 196, 197, 212, 223, 226, 256, 270, 283, 313, 341, 409, 460, 461, 462, 463, 464, 511, 513, 514, 534, 538, 557, 558, 559, 573, 593, 596, 616, 617, 630, 806, 878, 892, 935, 944, 963, 1032, 1033, 1056, 1057, 1066, 1067, 1086, 1087, 1088, 1098, 1103, 1121, 1138, 1139, 1140, 1169, 1170, 1212, 1231, 1282, 1298, 1304, 1311, 1324, 1330, 1339, 1341, 1342, 1360, 1361, 1444, 1494, 1516, 1562, 1599, 1600, 1615, 1657, 1671, 1675, 1676, 1720, 1727, 1730, 1731, 1732, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1829, 1844, 1855, 1857, 1877, 1878, 1898, 1899, 1900, 1904, 1905, 1908, 1911, 1914, 1916, 1921, 1928, 1934, 1935, 1940, 1941, 1942], "As": [0, 1, 8, 12, 17, 20, 27, 29, 40, 42, 44, 48, 65, 68, 69, 73, 270, 948, 1085, 1216, 1243, 1247, 1248, 1258, 1259, 1270, 1275, 1383, 1384, 1385, 1389, 1410, 1444, 1475, 1611, 1670, 1676, 1878, 1882, 1884, 1885, 1892, 1900, 1905, 1908, 1910, 1912, 1916, 1919, 1922, 1923, 1927, 1928, 1934, 1935, 1936, 1937, 1939, 1947], "section": [0, 1, 7, 12, 17, 20, 25, 27, 29, 39, 48, 50, 51, 69, 73, 100, 136, 1042, 1085, 1165, 1381, 1396, 1414, 1442, 1459, 1526, 1660, 1845, 1882, 1883, 1884, 1885, 1886, 1897, 1899, 1900, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1918, 1936, 1944], "infer": [0, 1, 2, 3, 5, 11, 14, 16, 19, 21, 24, 31, 34, 48, 59, 593, 630, 874, 875, 878, 892, 893, 1002, 1138, 1139, 1174, 1187, 1196, 1210, 1213, 1221, 1226, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1450, 1496, 1554, 1580, 1615, 1669, 1700, 1711, 1745, 1752, 1770, 1771, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1861, 1880, 1882, 1884, 1885, 1889, 1898, 1900, 1916, 1923, 1924, 1929, 1930, 1931, 1933, 1939], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 57, 59, 60, 65, 69, 70, 72, 73, 96, 97, 98, 136, 270, 327, 337, 339, 351, 368, 460, 461, 462, 463, 464, 473, 496, 501, 527, 529, 531, 570, 596, 597, 598, 600, 601, 627, 630, 708, 709, 748, 751, 752, 753, 754, 756, 785, 786, 787, 792, 798, 799, 800, 804, 806, 814, 827, 830, 833, 834, 837, 841, 855, 862, 871, 891, 907, 910, 911, 912, 913, 914, 916, 921, 935, 936, 944, 966, 987, 988, 989, 991, 998, 1000, 1002, 1028, 1029, 1031, 1052, 1082, 1086, 1088, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1131, 1132, 1136, 1137, 1142, 1153, 1165, 1169, 1170, 1174, 1182, 1193, 1201, 1210, 1212, 1215, 1216, 1223, 1227, 1228, 1231, 1242, 1247, 1248, 1250, 1251, 1252, 1253, 1255, 1257, 1258, 1259, 1260, 1270, 1272, 1273, 1275, 1276, 1283, 1284, 1301, 1306, 1352, 1375, 1376, 1377, 1380, 1381, 1387, 1388, 1391, 1414, 1444, 1447, 1449, 1450, 1452, 1460, 1483, 1491, 1495, 1496, 1526, 1535, 1537, 1543, 1554, 1581, 1611, 1612, 1615, 1618, 1619, 1620, 1621, 1624, 1626, 1627, 1637, 1657, 1658, 1659, 1671, 1678, 1682, 1686, 1687, 1689, 1700, 1703, 1707, 1710, 1711, 1713, 1717, 1729, 1738, 1742, 1744, 1746, 1769, 1773, 1774, 1776, 1780, 1807, 1811, 1821, 1826, 1830, 1844, 1855, 1857, 1862, 1863, 1865, 1869, 1870, 1871, 1872, 1879, 1883, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1933, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 48, 50, 56, 57, 59, 60, 62, 65, 66, 67, 69, 70, 71, 72, 73, 213, 238, 270, 305, 329, 331, 337, 351, 368, 486, 496, 507, 513, 527, 529, 531, 596, 602, 616, 630, 699, 700, 701, 702, 703, 706, 712, 747, 751, 752, 753, 754, 755, 756, 773, 805, 806, 807, 827, 871, 872, 905, 921, 934, 938, 940, 941, 943, 946, 955, 959, 966, 1020, 1034, 1036, 1042, 1066, 1067, 1068, 1085, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1129, 1151, 1153, 1154, 1165, 1174, 1189, 1212, 1222, 1223, 1225, 1227, 1228, 1243, 1247, 1248, 1251, 1254, 1255, 1256, 1257, 1259, 1268, 1269, 1271, 1275, 1284, 1291, 1299, 1306, 1312, 1316, 1352, 1356, 1360, 1361, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1387, 1388, 1390, 1391, 1396, 1398, 1405, 1410, 1414, 1416, 1444, 1447, 1448, 1449, 1450, 1458, 1459, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1480, 1494, 1495, 1499, 1500, 1501, 1516, 1518, 1519, 1520, 1543, 1554, 1579, 1581, 1593, 1601, 1615, 1620, 1621, 1624, 1634, 1657, 1658, 1659, 1661, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1713, 1758, 1767, 1805, 1815, 1821, 1830, 1845, 1847, 1851, 1859, 1870, 1871, 1872, 1879, 1880, 1882, 1885, 1887, 1889, 1891, 1892, 1893, 1895, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1950], "api": [0, 2, 3, 5, 8, 9, 11, 21, 26, 40, 42, 43, 47, 50, 51, 52, 56, 57, 58, 59, 60, 65, 66, 69, 72, 74, 79, 82, 813, 837, 874, 907, 908, 909, 917, 933, 955, 986, 1020, 1021, 1022, 1028, 1029, 1031, 1058, 1089, 1129, 1142, 1145, 1146, 1148, 1153, 1222, 1223, 1225, 1329, 1624, 1666, 1668, 1669, 1678, 1680, 1758, 1769, 1775, 1859, 1872, 1879, 1889, 1891, 1892, 1893, 1896, 1897, 1898, 1900, 1905, 1909, 1921, 1923, 1931, 1935, 1936, 1939, 1942, 1944, 1947, 1950], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 25, 28, 29, 31, 33, 34, 36, 39, 40, 42, 46, 47, 48, 49, 56, 59, 65, 69, 70, 71, 72, 73, 74, 81, 82, 171, 235, 238, 239, 270, 339, 527, 529, 531, 556, 627, 754, 755, 756, 773, 813, 827, 874, 893, 902, 903, 912, 935, 944, 958, 966, 971, 985, 1028, 1031, 1042, 1066, 1067, 1085, 1089, 1105, 1136, 1142, 1148, 1152, 1153, 1154, 1157, 1159, 1169, 1170, 1174, 1187, 1212, 1215, 1216, 1218, 1221, 1225, 1227, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1313, 1319, 1332, 1340, 1352, 1360, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1388, 1391, 1396, 1410, 1414, 1444, 1451, 1459, 1473, 1475, 1483, 1492, 1493, 1495, 1521, 1522, 1523, 1543, 1580, 1596, 1615, 1624, 1634, 1636, 1646, 1648, 1650, 1651, 1652, 1653, 1669, 1701, 1707, 1711, 1714, 1717, 1742, 1749, 1761, 1771, 1786, 1787, 1804, 1807, 1821, 1830, 1839, 1841, 1844, 1850, 1851, 1862, 1863, 1872, 1875, 1879, 1880, 1882, 1884, 1885, 1889, 1891, 1892, 1893, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1935, 1936, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950], "arg": [0, 1, 3, 4, 5, 12, 13, 15, 20, 28, 29, 33, 39, 40, 42, 46, 47, 48, 50, 51, 57, 58, 60, 61, 62, 65, 72, 73, 74, 79, 80, 81, 82, 104, 593, 616, 693, 745, 760, 762, 764, 765, 766, 767, 773, 775, 776, 837, 874, 903, 905, 910, 911, 970, 1031, 1141, 1145, 1146, 1147, 1153, 1212, 1215, 1301, 1360, 1361, 1378, 1380, 1396, 1404, 1406, 1411, 1414, 1433, 1435, 1436, 1444, 1447, 1448, 1449, 1451, 1458, 1459, 1472, 1474, 1475, 1476, 1478, 1482, 1483, 1484, 1485, 1492, 1515, 1516, 1526, 1555, 1578, 1586, 1615, 1624, 1638, 1643, 1657, 1664, 1666, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1831, 1863, 1869, 1872, 1879, 1883, 1885, 1886, 1897, 1899, 1905, 1908, 1909, 1910, 1911, 1918, 1923, 1924, 1927, 1928, 1935, 1936, 1937, 1941, 1949, 1950], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 96, 97, 98, 99, 100, 101, 104, 105, 114, 167, 170, 171, 172, 187, 189, 192, 195, 196, 197, 207, 208, 212, 213, 223, 225, 226, 235, 240, 256, 270, 271, 283, 306, 313, 327, 329, 331, 335, 337, 339, 341, 344, 345, 346, 347, 348, 349, 351, 352, 354, 356, 357, 358, 359, 368, 409, 416, 418, 422, 463, 473, 486, 487, 496, 498, 501, 502, 507, 509, 510, 511, 512, 513, 514, 517, 518, 527, 529, 531, 534, 537, 538, 550, 556, 557, 558, 570, 573, 593, 594, 596, 597, 598, 600, 601, 602, 616, 617, 620, 627, 630, 631, 633, 637, 693, 694, 696, 697, 699, 700, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 812, 814, 815, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 837, 839, 840, 846, 851, 852, 853, 870, 871, 872, 874, 875, 878, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 926, 927, 930, 933, 934, 935, 936, 937, 939, 942, 944, 946, 947, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 968, 969, 973, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 997, 998, 1000, 1002, 1005, 1006, 1007, 1009, 1013, 1014, 1017, 1020, 1021, 1022, 1024, 1025, 1026, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1165, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1177, 1178, 1182, 1186, 1187, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1215, 1216, 1217, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1231, 1232, 1233, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1294, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1332, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1475, 1476, 1477, 1479, 1480, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1508, 1511, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1540, 1541, 1542, 1543, 1545, 1554, 1555, 1560, 1562, 1564, 1565, 1567, 1568, 1569, 1578, 1579, 1581, 1583, 1584, 1585, 1586, 1587, 1593, 1596, 1599, 1600, 1608, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1657, 1658, 1659, 1660, 1661, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1736, 1738, 1739, 1740, 1742, 1743, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1760, 1761, 1765, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1796, 1798, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1821, 1822, 1824, 1825, 1826, 1829, 1830, 1831, 1832, 1833, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "equival": [0, 3, 5, 12, 20, 39, 40, 46, 47, 48, 52, 59, 60, 69, 70, 73, 96, 172, 187, 189, 192, 195, 196, 197, 256, 271, 283, 313, 335, 341, 409, 463, 473, 512, 514, 538, 617, 623, 630, 631, 633, 705, 757, 761, 768, 770, 772, 798, 799, 800, 889, 903, 947, 949, 952, 954, 957, 964, 965, 1073, 1077, 1080, 1083, 1084, 1085, 1087, 1102, 1104, 1107, 1110, 1111, 1114, 1115, 1117, 1120, 1122, 1140, 1142, 1145, 1147, 1153, 1175, 1177, 1189, 1211, 1212, 1222, 1227, 1228, 1231, 1243, 1264, 1268, 1276, 1281, 1313, 1318, 1332, 1339, 1352, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1387, 1388, 1399, 1405, 1407, 1408, 1409, 1410, 1414, 1416, 1444, 1475, 1483, 1495, 1497, 1562, 1583, 1593, 1612, 1613, 1614, 1624, 1676, 1700, 1736, 1739, 1743, 1767, 1773, 1781, 1803, 1809, 1822, 1832, 1833, 1839, 1844, 1863, 1872, 1873, 1874, 1878, 1882, 1884, 1885, 1905, 1923, 1927, 1931, 1939, 1940, 1942, 1945, 1946, 1950, 1951], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 26, 27, 28, 29, 31, 33, 34, 35, 36, 39, 40, 42, 44, 46, 47, 48, 49, 51, 52, 59, 60, 65, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 97, 100, 327, 337, 473, 596, 630, 698, 699, 700, 702, 706, 708, 709, 712, 742, 751, 752, 753, 785, 786, 787, 792, 798, 799, 800, 805, 806, 807, 808, 814, 830, 846, 872, 874, 875, 905, 907, 912, 921, 922, 934, 935, 939, 942, 944, 946, 958, 959, 966, 979, 985, 987, 1028, 1029, 1031, 1048, 1080, 1082, 1085, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1148, 1152, 1169, 1170, 1182, 1209, 1216, 1223, 1227, 1231, 1232, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1284, 1302, 1306, 1310, 1315, 1316, 1333, 1372, 1373, 1374, 1375, 1376, 1377, 1384, 1387, 1388, 1391, 1411, 1431, 1449, 1450, 1483, 1491, 1493, 1495, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1535, 1537, 1543, 1554, 1560, 1593, 1611, 1612, 1614, 1624, 1671, 1676, 1678, 1686, 1687, 1689, 1717, 1729, 1748, 1749, 1770, 1773, 1774, 1804, 1807, 1810, 1827, 1830, 1853, 1855, 1857, 1869, 1870, 1871, 1878, 1879, 1880, 1882, 1884, 1886, 1887, 1889, 1893, 1895, 1897, 1901, 1905, 1906, 1907, 1908, 1909, 1910, 1914, 1916, 1918, 1919, 1921, 1922, 1924, 1926, 1927, 1928, 1929, 1933, 1934, 1935, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950], "now": [0, 1, 11, 14, 15, 17, 19, 20, 22, 27, 28, 29, 42, 47, 49, 56, 60, 61, 65, 70, 73, 238, 510, 913, 920, 1000, 1028, 1049, 1050, 1136, 1159, 1209, 1210, 1216, 1227, 1261, 1441, 1460, 1496, 1615, 1636, 1647, 1668, 1689, 1770, 1821, 1826, 1882, 1892, 1898, 1899, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1916, 1917, 1923, 1927, 1930, 1936, 1937, 1939, 1947, 1950], "class": [0, 1, 2, 3, 12, 13, 14, 20, 23, 25, 28, 29, 34, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 53, 56, 57, 59, 61, 65, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 570, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 849, 850, 851, 852, 853, 854, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 907, 910, 911, 912, 913, 933, 986, 987, 988, 989, 991, 992, 1007, 1009, 1020, 1060, 1089, 1151, 1187, 1210, 1211, 1212, 1215, 1217, 1218, 1222, 1223, 1226, 1227, 1228, 1229, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1516, 1526, 1534, 1578, 1580, 1615, 1624, 1625, 1626, 1627, 1633, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1657, 1664, 1669, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1736, 1775, 1805, 1880, 1883, 1886, 1889, 1892, 1895, 1897, 1899, 1904, 1905, 1908, 1910, 1911, 1912, 1916, 1918, 1921, 1924, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1939, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950, 1951], "device_typ": [0, 1, 42, 1904, 1934], "dtype": [0, 1, 5, 13, 15, 29, 31, 36, 37, 39, 42, 44, 47, 65, 73, 74, 79, 81, 82, 99, 170, 171, 208, 225, 229, 230, 231, 232, 258, 327, 329, 331, 333, 335, 337, 425, 444, 447, 460, 461, 462, 463, 464, 468, 473, 485, 496, 498, 527, 529, 578, 593, 594, 616, 630, 700, 702, 705, 706, 710, 712, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 762, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 777, 778, 785, 786, 787, 807, 808, 812, 832, 833, 834, 835, 836, 837, 838, 839, 840, 854, 871, 872, 874, 875, 878, 892, 893, 910, 912, 914, 916, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 951, 958, 974, 977, 978, 984, 985, 1001, 1066, 1067, 1086, 1087, 1088, 1098, 1102, 1103, 1104, 1110, 1111, 1121, 1128, 1133, 1135, 1137, 1138, 1139, 1140, 1159, 1169, 1170, 1182, 1212, 1216, 1225, 1231, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1293, 1294, 1295, 1296, 1298, 1301, 1302, 1306, 1310, 1311, 1312, 1315, 1316, 1334, 1338, 1339, 1340, 1342, 1352, 1361, 1362, 1363, 1364, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1387, 1388, 1391, 1396, 1397, 1399, 1407, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1444, 1450, 1451, 1452, 1459, 1460, 1461, 1465, 1466, 1467, 1468, 1469, 1483, 1487, 1489, 1491, 1495, 1496, 1497, 1498, 1510, 1526, 1527, 1554, 1560, 1562, 1593, 1599, 1600, 1615, 1626, 1627, 1633, 1636, 1637, 1657, 1671, 1675, 1676, 1680, 1682, 1717, 1723, 1727, 1728, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1755, 1758, 1770, 1771, 1773, 1774, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1802, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1829, 1830, 1841, 1844, 1855, 1857, 1862, 1865, 1870, 1871, 1875, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1892, 1899, 1900, 1908, 1910, 1916, 1919, 1923, 1925, 1930, 1931, 1932, 1939, 1940, 1941, 1944, 1945, 1946, 1951], "none": [0, 1, 2, 3, 5, 12, 18, 20, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 56, 57, 59, 61, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 129, 131, 132, 133, 135, 151, 152, 155, 167, 170, 171, 173, 190, 202, 203, 204, 205, 221, 222, 224, 226, 229, 230, 231, 232, 246, 251, 252, 253, 254, 274, 302, 306, 317, 351, 367, 370, 393, 423, 425, 426, 427, 430, 436, 442, 443, 444, 445, 446, 447, 460, 461, 462, 463, 464, 468, 469, 485, 494, 496, 502, 508, 517, 527, 534, 550, 551, 565, 566, 568, 569, 578, 593, 594, 596, 601, 603, 616, 621, 622, 623, 628, 639, 641, 643, 645, 647, 649, 651, 653, 655, 657, 659, 661, 663, 665, 668, 670, 672, 673, 675, 677, 679, 681, 683, 685, 687, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 762, 763, 764, 765, 766, 767, 768, 779, 780, 781, 782, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 806, 807, 808, 810, 812, 827, 830, 832, 833, 834, 835, 838, 839, 851, 852, 853, 870, 871, 872, 873, 874, 875, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 891, 892, 893, 894, 895, 896, 897, 898, 902, 903, 904, 905, 906, 907, 908, 909, 912, 913, 915, 917, 918, 919, 920, 921, 922, 926, 927, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 950, 953, 955, 956, 957, 958, 959, 961, 962, 964, 966, 971, 974, 975, 976, 978, 979, 981, 982, 983, 984, 985, 986, 988, 989, 991, 992, 993, 997, 998, 1000, 1001, 1002, 1005, 1006, 1007, 1013, 1014, 1020, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1055, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1077, 1078, 1080, 1081, 1082, 1084, 1086, 1087, 1088, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1139, 1140, 1141, 1142, 1143, 1147, 1150, 1151, 1153, 1154, 1155, 1156, 1157, 1158, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1189, 1190, 1206, 1207, 1209, 1211, 1212, 1216, 1219, 1221, 1222, 1223, 1225, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1387, 1388, 1390, 1392, 1393, 1394, 1397, 1398, 1399, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1458, 1460, 1461, 1475, 1476, 1477, 1478, 1479, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1503, 1504, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1534, 1535, 1538, 1539, 1540, 1541, 1543, 1544, 1551, 1553, 1554, 1555, 1556, 1557, 1560, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1578, 1579, 1581, 1583, 1586, 1593, 1597, 1598, 1599, 1600, 1608, 1609, 1610, 1612, 1613, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1657, 1659, 1660, 1661, 1662, 1665, 1666, 1668, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1717, 1718, 1719, 1722, 1723, 1724, 1726, 1727, 1729, 1730, 1733, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1756, 1758, 1759, 1760, 1765, 1778, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1802, 1803, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1841, 1842, 1843, 1844, 1846, 1848, 1851, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1862, 1863, 1866, 1867, 1868, 1869, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1905, 1908, 1910, 1911, 1916, 1918, 1921, 1923, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1940, 1941, 1942, 1944, 1946, 1948, 1949, 1950], "enabl": [0, 1, 2, 5, 8, 12, 15, 16, 17, 18, 20, 21, 22, 25, 29, 36, 37, 39, 40, 42, 43, 44, 46, 47, 48, 50, 60, 65, 99, 517, 518, 693, 773, 825, 826, 907, 912, 933, 966, 986, 1031, 1085, 1089, 1187, 1195, 1196, 1214, 1220, 1325, 1326, 1396, 1414, 1459, 1460, 1490, 1593, 1624, 1633, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1669, 1699, 1774, 1775, 1778, 1805, 1865, 1885, 1891, 1892, 1893, 1896, 1900, 1904, 1905, 1906, 1907, 1908, 1910, 1915, 1917, 1919, 1920, 1923, 1928, 1929, 1934, 1935, 1936, 1939, 1947, 1949, 1950], "true": [0, 1, 2, 3, 5, 13, 14, 16, 18, 19, 20, 21, 23, 25, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 61, 65, 70, 71, 72, 73, 74, 81, 82, 167, 213, 226, 276, 335, 337, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 367, 412, 416, 418, 463, 473, 475, 486, 492, 502, 509, 510, 513, 518, 530, 531, 569, 580, 593, 594, 603, 607, 616, 622, 630, 693, 700, 705, 706, 707, 708, 709, 710, 712, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 759, 762, 767, 769, 773, 774, 777, 778, 781, 782, 792, 798, 799, 810, 827, 839, 872, 886, 888, 889, 893, 902, 905, 906, 907, 910, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 926, 927, 933, 935, 938, 941, 943, 944, 950, 951, 957, 958, 959, 965, 966, 969, 971, 977, 988, 1026, 1080, 1089, 1090, 1091, 1107, 1108, 1114, 1115, 1138, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1152, 1153, 1154, 1156, 1168, 1169, 1170, 1173, 1174, 1185, 1187, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1216, 1217, 1218, 1221, 1227, 1228, 1229, 1231, 1233, 1236, 1241, 1242, 1253, 1254, 1255, 1258, 1259, 1260, 1261, 1264, 1266, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1281, 1283, 1284, 1293, 1294, 1295, 1296, 1299, 1300, 1301, 1303, 1305, 1309, 1311, 1312, 1313, 1314, 1317, 1334, 1339, 1342, 1345, 1348, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1392, 1393, 1396, 1397, 1398, 1399, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1453, 1458, 1459, 1460, 1461, 1475, 1476, 1483, 1487, 1489, 1490, 1491, 1492, 1493, 1496, 1497, 1508, 1510, 1511, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1543, 1545, 1547, 1553, 1554, 1555, 1567, 1568, 1569, 1578, 1586, 1593, 1612, 1613, 1615, 1624, 1625, 1627, 1628, 1631, 1632, 1635, 1636, 1637, 1649, 1657, 1658, 1659, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1727, 1729, 1730, 1734, 1735, 1736, 1753, 1754, 1761, 1764, 1765, 1773, 1774, 1775, 1778, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1803, 1805, 1807, 1824, 1825, 1826, 1829, 1830, 1844, 1848, 1853, 1862, 1863, 1865, 1866, 1867, 1868, 1872, 1875, 1879, 1881, 1883, 1884, 1885, 1892, 1894, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1923, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1950], "cache_en": [0, 1031], "sourc": [0, 1, 2, 3, 4, 5, 9, 16, 17, 18, 20, 29, 32, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 61, 65, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 167, 213, 226, 328, 329, 337, 356, 367, 412, 417, 418, 431, 432, 468, 486, 502, 527, 529, 531, 534, 537, 560, 569, 570, 572, 599, 616, 619, 622, 623, 637, 693, 708, 709, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 849, 850, 851, 852, 853, 854, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 886, 899, 900, 901, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 928, 929, 930, 932, 933, 945, 947, 948, 952, 954, 956, 966, 967, 968, 969, 970, 971, 972, 973, 986, 987, 988, 989, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1085, 1089, 1136, 1138, 1154, 1160, 1161, 1164, 1183, 1184, 1185, 1187, 1188, 1193, 1198, 1199, 1200, 1210, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1283, 1284, 1304, 1313, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1508, 1509, 1513, 1515, 1516, 1517, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1540, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1562, 1564, 1565, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1586, 1588, 1589, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1671, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1719, 1736, 1761, 1766, 1769, 1770, 1771, 1772, 1773, 1775, 1778, 1779, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1805, 1811, 1818, 1826, 1831, 1834, 1835, 1836, 1837, 1838, 1846, 1865, 1879, 1882, 1883, 1884, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1912, 1914, 1915, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1934, 1935, 1936, 1941, 1944, 1946, 1947, 1948, 1949, 1950], "instanc": [0, 3, 11, 20, 28, 39, 42, 43, 44, 46, 48, 49, 50, 56, 59, 60, 61, 65, 70, 73, 156, 630, 693, 747, 761, 770, 806, 809, 837, 839, 854, 871, 986, 1085, 1136, 1210, 1212, 1223, 1227, 1284, 1387, 1388, 1391, 1407, 1408, 1409, 1416, 1444, 1454, 1488, 1490, 1491, 1495, 1553, 1624, 1632, 1643, 1657, 1665, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1815, 1845, 1882, 1884, 1886, 1891, 1893, 1897, 1899, 1904, 1905, 1908, 1909, 1910, 1912, 1916, 1920, 1927, 1930, 1935, 1936, 1937, 1939, 1941, 1946, 1950], "serv": [0, 7, 8, 12, 16, 34, 42, 1881, 1892, 1924, 1926, 1935, 1936], "context": [0, 2, 5, 14, 15, 20, 25, 39, 46, 50, 59, 60, 65, 73, 74, 167, 805, 902, 903, 904, 906, 907, 920, 921, 933, 971, 992, 1007, 1009, 1020, 1026, 1031, 1038, 1058, 1060, 1089, 1143, 1147, 1152, 1187, 1212, 1325, 1444, 1593, 1615, 1624, 1625, 1634, 1636, 1669, 1678, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1775, 1805, 1880, 1885, 1886, 1897, 1904, 1905, 1908, 1910, 1914, 1915, 1918, 1923, 1927, 1929, 1934, 1935, 1937, 1939, 1942, 1947], "manag": [0, 1, 2, 5, 7, 14, 15, 16, 20, 42, 46, 48, 50, 57, 59, 60, 61, 65, 73, 74, 105, 501, 907, 933, 971, 986, 987, 989, 992, 993, 994, 996, 1007, 1009, 1010, 1011, 1020, 1021, 1031, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1049, 1050, 1051, 1058, 1060, 1089, 1143, 1147, 1152, 1187, 1325, 1593, 1624, 1633, 1634, 1636, 1669, 1775, 1805, 1880, 1885, 1886, 1905, 1912, 1915, 1923, 1928, 1929, 1934, 1935, 1936, 1939, 1942, 1947], "decor": [0, 1, 12, 17, 26, 48, 52, 56, 60, 73, 83, 912, 968, 971, 1089, 1187, 1217, 1223, 1229, 1669, 1805, 1882, 1884, 1885, 1889, 1904, 1905, 1910, 1928, 1935, 1950], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 13, 14, 15, 16, 19, 20, 23, 28, 29, 31, 33, 34, 39, 40, 42, 43, 48, 50, 51, 59, 60, 65, 66, 68, 69, 70, 71, 73, 74, 76, 167, 527, 693, 748, 806, 810, 812, 837, 906, 908, 920, 921, 951, 965, 969, 1028, 1031, 1055, 1085, 1146, 1212, 1217, 1229, 1267, 1289, 1329, 1343, 1357, 1358, 1359, 1380, 1381, 1398, 1437, 1438, 1439, 1444, 1447, 1450, 1472, 1487, 1624, 1629, 1670, 1678, 1682, 1698, 1807, 1865, 1879, 1884, 1885, 1892, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1935, 1939, 1942, 1943, 1944, 1946], "region": [0, 3, 5, 15, 16, 18, 25, 48, 56, 781, 782, 966, 1357, 1358, 1359, 1392, 1393, 1403, 1405, 1437, 1438, 1439, 1511, 1512, 1538, 1539, 1568, 1569, 1882, 1897, 1904, 1908], "your": [0, 1, 2, 4, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 31, 33, 34, 35, 39, 42, 46, 47, 48, 51, 52, 56, 58, 59, 60, 61, 62, 65, 69, 70, 72, 73, 906, 912, 914, 915, 920, 966, 969, 1187, 1212, 1216, 1217, 1221, 1224, 1227, 1228, 1229, 1444, 1451, 1491, 1624, 1633, 1636, 1669, 1700, 1774, 1862, 1882, 1884, 1885, 1889, 1891, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1922, 1923, 1926, 1928, 1931, 1934, 1936, 1939, 1944, 1945, 1947, 1950], "script": [0, 4, 12, 19, 22, 24, 29, 36, 39, 42, 45, 50, 52, 58, 60, 61, 1213, 1215, 1216, 1217, 1218, 1221, 1222, 1224, 1226, 1227, 1229, 1879, 1880, 1884, 1885, 1893, 1907, 1915, 1917, 1921, 1927, 1930, 1935], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 33, 34, 36, 39, 40, 42, 43, 46, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 167, 805, 811, 830, 832, 833, 834, 835, 838, 870, 874, 875, 876, 906, 920, 921, 922, 966, 1030, 1031, 1142, 1147, 1153, 1187, 1212, 1213, 1215, 1216, 1219, 1221, 1223, 1225, 1227, 1228, 1257, 1283, 1284, 1312, 1362, 1363, 1364, 1381, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1472, 1483, 1593, 1615, 1624, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1773, 1777, 1809, 1855, 1857, 1865, 1872, 1880, 1882, 1885, 1893, 1895, 1896, 1897, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1933, 1934, 1935, 1936, 1937, 1939, 1944, 1947, 1948, 1949], "In": [0, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 34, 36, 39, 42, 44, 46, 48, 52, 59, 60, 61, 65, 67, 68, 69, 70, 72, 73, 98, 100, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 138, 140, 142, 144, 147, 148, 150, 158, 160, 163, 164, 166, 169, 171, 175, 177, 179, 181, 183, 185, 194, 203, 211, 215, 218, 220, 230, 232, 238, 248, 252, 254, 260, 263, 265, 267, 269, 273, 278, 285, 287, 289, 293, 295, 299, 301, 308, 310, 312, 320, 322, 324, 326, 372, 374, 376, 378, 380, 382, 384, 387, 389, 391, 392, 399, 401, 403, 405, 407, 411, 435, 438, 441, 443, 454, 456, 458, 466, 471, 481, 484, 500, 504, 506, 522, 525, 536, 540, 542, 545, 547, 549, 562, 564, 566, 575, 577, 584, 588, 590, 606, 609, 611, 613, 615, 625, 635, 693, 773, 813, 837, 867, 912, 942, 950, 966, 977, 978, 985, 1031, 1042, 1054, 1055, 1059, 1060, 1085, 1106, 1108, 1116, 1117, 1118, 1133, 1143, 1147, 1150, 1152, 1210, 1212, 1221, 1224, 1225, 1227, 1243, 1252, 1257, 1258, 1259, 1267, 1270, 1275, 1280, 1284, 1289, 1292, 1301, 1306, 1312, 1313, 1339, 1357, 1358, 1359, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1383, 1384, 1385, 1389, 1391, 1396, 1405, 1414, 1429, 1437, 1438, 1439, 1444, 1450, 1487, 1489, 1491, 1495, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1533, 1543, 1550, 1559, 1587, 1590, 1592, 1593, 1607, 1624, 1631, 1636, 1637, 1669, 1700, 1711, 1713, 1749, 1765, 1767, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1830, 1831, 1853, 1865, 1869, 1870, 1879, 1880, 1881, 1882, 1884, 1885, 1891, 1892, 1897, 1898, 1899, 1900, 1903, 1904, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1929, 1930, 1931, 1932, 1935, 1936, 1937, 1939, 1944, 1946], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 97, 99, 100, 105, 167, 171, 207, 238, 258, 270, 329, 331, 337, 339, 344, 351, 513, 527, 529, 531, 550, 558, 573, 620, 627, 630, 693, 700, 701, 748, 754, 755, 756, 769, 773, 778, 792, 798, 800, 802, 805, 809, 828, 830, 836, 839, 867, 874, 875, 877, 891, 892, 893, 902, 904, 905, 906, 908, 910, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 928, 929, 930, 937, 953, 963, 966, 977, 978, 980, 986, 988, 989, 991, 998, 999, 1000, 1001, 1002, 1020, 1021, 1028, 1029, 1031, 1043, 1045, 1055, 1059, 1060, 1070, 1083, 1085, 1087, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1125, 1128, 1136, 1138, 1141, 1142, 1145, 1146, 1147, 1149, 1151, 1153, 1154, 1157, 1165, 1173, 1174, 1175, 1209, 1210, 1212, 1215, 1216, 1219, 1222, 1223, 1225, 1227, 1228, 1229, 1230, 1241, 1242, 1247, 1248, 1253, 1255, 1257, 1260, 1261, 1265, 1268, 1270, 1273, 1274, 1281, 1283, 1284, 1301, 1303, 1306, 1312, 1329, 1334, 1343, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1392, 1393, 1396, 1404, 1408, 1409, 1412, 1413, 1414, 1416, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1461, 1463, 1472, 1475, 1477, 1478, 1479, 1483, 1488, 1490, 1491, 1492, 1495, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1518, 1519, 1520, 1521, 1522, 1523, 1528, 1534, 1535, 1537, 1538, 1539, 1543, 1554, 1561, 1562, 1564, 1565, 1567, 1568, 1569, 1593, 1597, 1612, 1614, 1615, 1618, 1624, 1628, 1629, 1630, 1631, 1634, 1635, 1636, 1643, 1660, 1667, 1669, 1671, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1729, 1734, 1735, 1736, 1755, 1757, 1761, 1769, 1772, 1781, 1787, 1807, 1810, 1811, 1815, 1818, 1823, 1826, 1830, 1844, 1845, 1861, 1862, 1863, 1865, 1870, 1871, 1872, 1873, 1878, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "chosen": [0, 16, 29, 70, 1073, 1233, 1593, 1778, 1803, 1848, 1900, 1904, 1908, 1910, 1918, 1923, 1930], "improv": [0, 1, 3, 9, 22, 23, 25, 29, 33, 37, 40, 42, 65, 73, 773, 817, 818, 819, 914, 916, 920, 980, 1165, 1382, 1396, 1414, 1459, 1490, 1593, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1713, 1880, 1882, 1904, 1909, 1910, 1911, 1919, 1920, 1924, 1930, 1931, 1935], "perform": [0, 1, 2, 3, 4, 5, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 50, 59, 60, 65, 69, 72, 73, 136, 223, 226, 473, 593, 616, 630, 699, 700, 701, 702, 703, 704, 773, 794, 817, 818, 819, 860, 871, 874, 907, 912, 914, 916, 917, 920, 921, 934, 946, 966, 977, 978, 987, 993, 1042, 1066, 1067, 1080, 1105, 1128, 1130, 1141, 1142, 1145, 1176, 1187, 1212, 1221, 1222, 1227, 1255, 1257, 1260, 1264, 1267, 1268, 1272, 1273, 1281, 1282, 1284, 1289, 1298, 1311, 1316, 1325, 1326, 1336, 1339, 1342, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1384, 1387, 1388, 1396, 1414, 1444, 1450, 1452, 1459, 1472, 1487, 1490, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1562, 1579, 1593, 1599, 1600, 1615, 1624, 1626, 1627, 1632, 1636, 1657, 1664, 1666, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1719, 1727, 1755, 1769, 1773, 1801, 1806, 1807, 1808, 1809, 1829, 1831, 1865, 1880, 1882, 1885, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1917, 1918, 1919, 1920, 1923, 1926, 1927, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1950], "while": [0, 2, 3, 5, 7, 8, 15, 16, 17, 19, 20, 22, 29, 31, 33, 39, 40, 42, 43, 44, 48, 61, 65, 70, 72, 73, 99, 708, 709, 748, 867, 897, 905, 989, 1060, 1142, 1174, 1212, 1215, 1227, 1228, 1284, 1340, 1352, 1368, 1405, 1407, 1408, 1409, 1414, 1444, 1450, 1462, 1475, 1483, 1487, 1491, 1562, 1624, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1671, 1765, 1886, 1891, 1892, 1899, 1900, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1916, 1918, 1920, 1921, 1923, 1926, 1928, 1930, 1933, 1935, 1937, 1939, 1940, 1943, 1944, 1945], "maintain": [0, 7, 8, 14, 15, 20, 21, 39, 40, 42, 48, 65, 69, 73, 1356, 1384, 1389, 1536, 1624, 1657, 1671, 1880, 1900, 1904, 1905, 1908, 1910, 1916, 1930], "accuraci": [0, 16, 18, 40, 966, 1275, 1593, 1880, 1895, 1904, 1916, 1944, 1948], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 25, 27, 28, 29, 33, 34, 35, 38, 39, 42, 43, 48, 51, 59, 60, 62, 65, 70, 71, 72, 73, 106, 110, 112, 114, 116, 118, 120, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 137, 139, 141, 143, 145, 146, 149, 151, 152, 153, 154, 155, 157, 159, 161, 162, 165, 167, 168, 170, 171, 172, 173, 174, 176, 178, 180, 182, 184, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 209, 210, 214, 216, 217, 219, 221, 222, 224, 227, 228, 229, 231, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 250, 251, 253, 255, 256, 257, 259, 261, 262, 264, 266, 268, 271, 272, 277, 279, 280, 281, 282, 283, 284, 286, 288, 290, 291, 292, 294, 296, 297, 298, 300, 303, 304, 307, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 329, 337, 338, 339, 340, 341, 343, 344, 350, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 375, 377, 379, 381, 383, 385, 386, 388, 390, 394, 395, 396, 397, 398, 400, 402, 404, 406, 408, 409, 410, 412, 413, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 442, 444, 445, 446, 447, 448, 449, 453, 455, 457, 465, 467, 468, 470, 472, 474, 475, 476, 477, 479, 480, 482, 483, 485, 492, 494, 495, 497, 499, 502, 503, 505, 507, 508, 509, 511, 512, 513, 515, 516, 519, 520, 521, 524, 529, 531, 532, 533, 535, 538, 539, 541, 543, 544, 546, 548, 551, 552, 553, 555, 556, 560, 561, 563, 565, 567, 568, 569, 574, 576, 578, 580, 581, 582, 583, 585, 586, 587, 589, 591, 592, 603, 604, 605, 607, 608, 610, 612, 614, 618, 619, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 693, 706, 708, 709, 712, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 758, 759, 761, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 787, 792, 793, 794, 795, 796, 797, 798, 806, 853, 872, 873, 874, 875, 878, 887, 888, 889, 892, 903, 905, 906, 907, 908, 909, 911, 912, 916, 920, 921, 926, 927, 930, 935, 937, 944, 946, 949, 963, 966, 970, 982, 986, 987, 988, 989, 991, 993, 994, 996, 1010, 1011, 1020, 1021, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1049, 1050, 1051, 1080, 1083, 1085, 1086, 1088, 1089, 1098, 1103, 1121, 1124, 1139, 1144, 1145, 1146, 1148, 1157, 1165, 1169, 1170, 1174, 1175, 1183, 1184, 1185, 1187, 1212, 1216, 1223, 1227, 1228, 1230, 1231, 1233, 1243, 1251, 1254, 1257, 1259, 1266, 1268, 1269, 1277, 1281, 1282, 1284, 1290, 1292, 1298, 1299, 1301, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1325, 1326, 1332, 1339, 1341, 1342, 1352, 1360, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1387, 1388, 1390, 1396, 1398, 1404, 1405, 1410, 1411, 1414, 1435, 1436, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1458, 1459, 1462, 1471, 1473, 1475, 1476, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1612, 1613, 1614, 1624, 1625, 1631, 1632, 1633, 1636, 1642, 1651, 1660, 1665, 1668, 1669, 1670, 1671, 1675, 1717, 1727, 1728, 1738, 1740, 1742, 1744, 1745, 1749, 1752, 1755, 1761, 1770, 1773, 1775, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1805, 1806, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1824, 1825, 1826, 1829, 1839, 1841, 1844, 1850, 1851, 1855, 1857, 1865, 1867, 1868, 1873, 1875, 1877, 1879, 1880, 1882, 1883, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1928, 1929, 1930, 1931, 1934, 1935, 1936, 1939, 1940, 1942, 1943, 1945, 1946, 1947, 1950, 1951], "detail": [0, 1, 2, 3, 7, 8, 20, 21, 24, 29, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 48, 50, 60, 65, 71, 73, 167, 339, 509, 627, 748, 751, 752, 753, 754, 755, 756, 773, 779, 780, 781, 784, 785, 786, 787, 792, 793, 795, 796, 797, 798, 806, 872, 873, 874, 875, 886, 903, 905, 906, 907, 908, 909, 912, 921, 949, 970, 982, 987, 991, 993, 994, 996, 1010, 1011, 1020, 1031, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1049, 1050, 1051, 1068, 1085, 1124, 1146, 1157, 1160, 1161, 1165, 1193, 1200, 1212, 1216, 1227, 1251, 1269, 1276, 1284, 1290, 1292, 1312, 1352, 1356, 1366, 1375, 1376, 1377, 1381, 1387, 1388, 1389, 1390, 1392, 1393, 1396, 1414, 1444, 1450, 1456, 1457, 1459, 1471, 1492, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1544, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1582, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1609, 1610, 1611, 1615, 1624, 1625, 1660, 1670, 1681, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1700, 1705, 1717, 1729, 1761, 1772, 1798, 1806, 1851, 1865, 1879, 1882, 1883, 1884, 1885, 1892, 1894, 1896, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1919, 1920, 1921, 1923, 1927, 1928, 1930, 1932, 1934, 1935, 1936, 1937, 1939, 1943, 1944, 1946, 1947, 1950], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 25, 28, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 65, 68, 70, 71, 72, 73, 96, 98, 99, 101, 114, 167, 208, 225, 276, 329, 337, 463, 502, 511, 512, 527, 529, 531, 557, 573, 593, 630, 693, 699, 702, 748, 781, 782, 792, 798, 804, 806, 837, 853, 871, 878, 890, 893, 906, 914, 915, 916, 917, 918, 919, 920, 921, 922, 926, 927, 934, 937, 946, 954, 957, 965, 966, 977, 978, 982, 988, 990, 1000, 1002, 1024, 1030, 1031, 1043, 1068, 1085, 1124, 1128, 1133, 1138, 1142, 1143, 1148, 1151, 1152, 1153, 1165, 1187, 1201, 1202, 1204, 1205, 1208, 1212, 1213, 1215, 1223, 1224, 1225, 1227, 1228, 1232, 1233, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1281, 1282, 1283, 1284, 1292, 1298, 1301, 1306, 1312, 1313, 1316, 1334, 1339, 1340, 1341, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1387, 1388, 1391, 1394, 1396, 1397, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1431, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1458, 1459, 1471, 1472, 1475, 1476, 1477, 1478, 1480, 1483, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1508, 1510, 1511, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1535, 1541, 1543, 1554, 1555, 1578, 1581, 1583, 1586, 1587, 1593, 1601, 1612, 1613, 1614, 1615, 1620, 1621, 1624, 1625, 1626, 1627, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1660, 1665, 1669, 1670, 1671, 1672, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1719, 1726, 1729, 1730, 1752, 1758, 1765, 1770, 1773, 1780, 1798, 1804, 1807, 1809, 1810, 1811, 1821, 1826, 1830, 1839, 1844, 1846, 1851, 1855, 1857, 1862, 1865, 1872, 1875, 1879, 1880, 1882, 1884, 1891, 1893, 1895, 1897, 1898, 1899, 1903, 1906, 1907, 1908, 1909, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1926, 1927, 1928, 1929, 1934, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1945, 1946], "enter": [0, 42, 907, 1187, 1910], "tensor": [0, 2, 5, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 21, 27, 28, 29, 33, 35, 36, 39, 40, 42, 43, 44, 46, 48, 49, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 105, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 733, 745, 747, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 763, 768, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 802, 803, 807, 811, 812, 813, 814, 815, 832, 833, 834, 835, 837, 838, 840, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 926, 927, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 998, 999, 1000, 1001, 1002, 1009, 1017, 1018, 1024, 1028, 1031, 1034, 1038, 1049, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1197, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1213, 1215, 1216, 1218, 1219, 1222, 1223, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1332, 1333, 1334, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1352, 1356, 1357, 1360, 1361, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1396, 1397, 1398, 1404, 1410, 1411, 1414, 1415, 1431, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1459, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1478, 1479, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1695, 1696, 1697, 1698, 1699, 1700, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1774, 1775, 1778, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1839, 1840, 1841, 1842, 1843, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1880, 1881, 1882, 1884, 1885, 1889, 1892, 1901, 1903, 1904, 1906, 1907, 1908, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1922, 1925, 1926, 1927, 1928, 1929, 1931, 1934, 1935, 1936, 1940, 1941, 1944, 1946, 1948, 1949, 1950], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 23, 25, 27, 28, 29, 31, 33, 36, 39, 40, 42, 43, 44, 46, 48, 50, 52, 53, 57, 58, 59, 60, 62, 65, 70, 72, 73, 167, 270, 513, 558, 630, 710, 771, 794, 805, 806, 807, 813, 823, 824, 825, 826, 828, 829, 830, 831, 836, 837, 839, 867, 878, 902, 903, 904, 906, 912, 914, 920, 921, 922, 942, 948, 952, 953, 977, 988, 1024, 1031, 1042, 1101, 1102, 1104, 1105, 1106, 1108, 1112, 1116, 1117, 1118, 1133, 1141, 1142, 1149, 1150, 1151, 1153, 1174, 1211, 1212, 1216, 1218, 1222, 1223, 1225, 1227, 1233, 1241, 1243, 1247, 1248, 1252, 1257, 1258, 1259, 1264, 1265, 1268, 1272, 1275, 1281, 1283, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1360, 1361, 1365, 1366, 1372, 1373, 1374, 1381, 1382, 1386, 1390, 1391, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1410, 1411, 1430, 1431, 1433, 1434, 1435, 1443, 1444, 1452, 1454, 1455, 1458, 1462, 1463, 1464, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1493, 1494, 1495, 1514, 1518, 1519, 1520, 1560, 1579, 1580, 1593, 1615, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1648, 1658, 1659, 1661, 1664, 1666, 1671, 1678, 1681, 1700, 1705, 1745, 1761, 1776, 1778, 1830, 1872, 1879, 1882, 1883, 1884, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1925, 1926, 1927, 1928, 1930, 1935, 1936, 1937, 1939, 1941, 1944, 1946, 1948, 1949, 1950], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 38, 39, 40, 42, 46, 47, 48, 50, 51, 56, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 82, 96, 97, 167, 270, 351, 463, 513, 693, 702, 747, 748, 761, 770, 794, 902, 903, 904, 905, 906, 911, 912, 914, 915, 916, 920, 948, 966, 986, 1009, 1020, 1022, 1031, 1032, 1052, 1085, 1141, 1142, 1145, 1146, 1147, 1148, 1153, 1187, 1212, 1216, 1217, 1224, 1227, 1228, 1229, 1257, 1275, 1283, 1306, 1313, 1316, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1414, 1440, 1441, 1442, 1444, 1449, 1450, 1451, 1459, 1478, 1487, 1489, 1491, 1496, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1554, 1560, 1593, 1611, 1612, 1615, 1624, 1632, 1658, 1666, 1668, 1669, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1711, 1729, 1752, 1761, 1769, 1812, 1813, 1814, 1816, 1817, 1821, 1872, 1879, 1882, 1884, 1885, 1887, 1889, 1892, 1893, 1895, 1897, 1898, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1950], "should": [0, 1, 3, 4, 5, 9, 12, 15, 16, 17, 19, 20, 22, 23, 25, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 65, 69, 70, 72, 73, 74, 79, 80, 82, 98, 136, 167, 171, 329, 337, 414, 418, 460, 461, 462, 463, 464, 502, 510, 527, 529, 531, 596, 597, 598, 600, 601, 699, 702, 703, 748, 773, 785, 786, 787, 806, 809, 813, 830, 837, 851, 852, 867, 868, 869, 872, 878, 902, 903, 904, 905, 906, 910, 911, 912, 913, 914, 915, 916, 920, 926, 927, 934, 935, 936, 937, 944, 957, 971, 984, 988, 991, 1001, 1002, 1020, 1022, 1031, 1076, 1086, 1087, 1088, 1098, 1103, 1106, 1107, 1108, 1116, 1117, 1118, 1121, 1136, 1138, 1139, 1140, 1142, 1143, 1147, 1151, 1152, 1153, 1169, 1170, 1173, 1174, 1209, 1210, 1212, 1213, 1217, 1221, 1223, 1224, 1227, 1228, 1229, 1231, 1256, 1281, 1282, 1283, 1289, 1298, 1301, 1302, 1303, 1352, 1360, 1361, 1365, 1378, 1380, 1381, 1383, 1384, 1385, 1388, 1389, 1410, 1436, 1444, 1450, 1451, 1452, 1471, 1492, 1496, 1508, 1514, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1535, 1543, 1593, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1662, 1664, 1675, 1676, 1679, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1729, 1731, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1752, 1768, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1830, 1844, 1853, 1872, 1877, 1878, 1879, 1880, 1882, 1884, 1885, 1889, 1891, 1892, 1894, 1895, 1897, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1916, 1918, 1919, 1920, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1937, 1939, 1943, 1944, 1946, 1947, 1950], "call": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 59, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 82, 89, 100, 167, 306, 339, 351, 473, 501, 502, 569, 593, 627, 630, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 794, 803, 810, 837, 870, 874, 875, 906, 910, 911, 912, 913, 914, 916, 917, 920, 926, 927, 949, 966, 971, 973, 986, 989, 991, 1020, 1022, 1032, 1033, 1042, 1049, 1050, 1052, 1053, 1083, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1141, 1142, 1153, 1157, 1175, 1187, 1197, 1212, 1215, 1217, 1222, 1223, 1224, 1231, 1267, 1275, 1279, 1281, 1283, 1284, 1313, 1356, 1362, 1363, 1364, 1381, 1382, 1383, 1384, 1385, 1387, 1389, 1391, 1429, 1440, 1441, 1442, 1444, 1451, 1452, 1472, 1483, 1495, 1521, 1522, 1523, 1529, 1530, 1531, 1536, 1554, 1593, 1612, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1633, 1636, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1659, 1665, 1666, 1668, 1669, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1742, 1769, 1776, 1777, 1805, 1824, 1825, 1826, 1846, 1865, 1867, 1868, 1872, 1873, 1879, 1882, 1886, 1889, 1895, 1897, 1899, 1900, 1901, 1904, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1950, 1951], "model": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 40, 42, 43, 44, 46, 47, 48, 58, 60, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 96, 97, 104, 805, 806, 807, 810, 811, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 837, 838, 839, 849, 850, 851, 852, 867, 870, 871, 872, 873, 874, 875, 876, 966, 1032, 1052, 1141, 1142, 1143, 1151, 1153, 1187, 1212, 1216, 1217, 1221, 1223, 1227, 1229, 1283, 1352, 1381, 1398, 1409, 1410, 1444, 1450, 1472, 1483, 1487, 1489, 1490, 1491, 1542, 1624, 1625, 1630, 1632, 1634, 1647, 1666, 1667, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1705, 1711, 1713, 1826, 1872, 1880, 1882, 1884, 1885, 1886, 1893, 1894, 1900, 1905, 1907, 1908, 1909, 1910, 1914, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1929, 1931, 1935, 1936, 1938, 1939, 1940, 1944, 1948, 1949], "": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 55, 56, 57, 59, 60, 65, 67, 69, 70, 72, 73, 100, 478, 496, 507, 510, 527, 557, 571, 594, 637, 693, 702, 707, 708, 709, 748, 773, 806, 807, 808, 828, 829, 830, 833, 836, 839, 867, 874, 875, 888, 890, 891, 892, 893, 909, 910, 911, 915, 916, 918, 922, 950, 952, 965, 977, 978, 979, 984, 986, 988, 992, 1007, 1011, 1020, 1022, 1027, 1028, 1031, 1032, 1033, 1052, 1053, 1054, 1060, 1077, 1080, 1082, 1083, 1085, 1099, 1100, 1102, 1103, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1119, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1138, 1139, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1151, 1153, 1157, 1165, 1173, 1174, 1175, 1199, 1201, 1209, 1210, 1212, 1216, 1222, 1223, 1227, 1242, 1243, 1253, 1254, 1255, 1257, 1260, 1264, 1266, 1268, 1269, 1273, 1274, 1275, 1276, 1281, 1283, 1284, 1299, 1306, 1311, 1313, 1316, 1318, 1319, 1325, 1326, 1329, 1338, 1339, 1342, 1344, 1350, 1351, 1352, 1360, 1361, 1362, 1363, 1364, 1367, 1381, 1387, 1398, 1444, 1445, 1450, 1454, 1460, 1472, 1475, 1477, 1483, 1487, 1489, 1491, 1497, 1498, 1515, 1516, 1527, 1540, 1543, 1554, 1555, 1560, 1593, 1599, 1612, 1615, 1620, 1621, 1624, 1625, 1636, 1647, 1660, 1664, 1671, 1672, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1717, 1719, 1723, 1730, 1745, 1748, 1749, 1752, 1753, 1754, 1756, 1758, 1765, 1772, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1824, 1825, 1826, 1829, 1830, 1831, 1832, 1833, 1841, 1845, 1847, 1853, 1867, 1868, 1869, 1872, 1873, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950], "wrap": [0, 1, 12, 16, 20, 26, 29, 34, 39, 40, 42, 46, 52, 61, 65, 69, 70, 73, 74, 276, 803, 804, 989, 1142, 1212, 1227, 1381, 1444, 1483, 1619, 1624, 1634, 1660, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1882, 1883, 1885, 1892, 1904, 1905, 1908, 1909, 1910, 1911, 1916, 1922, 1923, 1928, 1929, 1930, 1935, 1936, 1947, 1949, 1950], "forward": [0, 5, 7, 8, 11, 12, 16, 20, 22, 23, 25, 28, 29, 33, 40, 42, 43, 46, 48, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 167, 238, 239, 693, 748, 761, 770, 773, 813, 828, 829, 830, 833, 837, 874, 875, 902, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 916, 917, 920, 921, 933, 1031, 1077, 1089, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1142, 1144, 1145, 1146, 1148, 1151, 1187, 1212, 1215, 1216, 1217, 1218, 1222, 1223, 1227, 1228, 1229, 1356, 1360, 1363, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1396, 1414, 1429, 1440, 1441, 1442, 1444, 1445, 1446, 1450, 1451, 1454, 1455, 1459, 1472, 1487, 1488, 1489, 1490, 1491, 1529, 1530, 1531, 1536, 1581, 1615, 1618, 1619, 1620, 1621, 1624, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1665, 1668, 1669, 1736, 1775, 1804, 1865, 1880, 1881, 1882, 1884, 1885, 1891, 1893, 1897, 1899, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1912, 1913, 1915, 1916, 1919, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1935, 1947, 1948, 1949], "pass": [0, 1, 3, 5, 6, 7, 12, 15, 16, 18, 20, 21, 24, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 65, 67, 69, 70, 72, 73, 74, 81, 82, 100, 167, 270, 463, 527, 529, 531, 557, 573, 806, 807, 836, 839, 872, 874, 893, 902, 903, 904, 905, 906, 912, 920, 950, 966, 972, 986, 1020, 1031, 1075, 1106, 1107, 1108, 1116, 1117, 1118, 1124, 1138, 1141, 1142, 1146, 1147, 1148, 1151, 1152, 1174, 1210, 1212, 1213, 1216, 1221, 1223, 1227, 1228, 1256, 1272, 1274, 1283, 1329, 1352, 1353, 1354, 1355, 1363, 1381, 1387, 1388, 1392, 1393, 1444, 1449, 1450, 1472, 1488, 1489, 1490, 1491, 1496, 1508, 1538, 1539, 1543, 1554, 1555, 1581, 1593, 1615, 1618, 1619, 1620, 1621, 1624, 1634, 1636, 1638, 1643, 1657, 1660, 1664, 1666, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1761, 1765, 1769, 1830, 1879, 1882, 1886, 1889, 1893, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1909, 1910, 1911, 1913, 1915, 1916, 1919, 1923, 1924, 1926, 1927, 1928, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1946, 1949, 1950], "e": [0, 1, 2, 3, 5, 7, 11, 14, 15, 17, 20, 22, 25, 29, 31, 33, 34, 39, 40, 42, 43, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 65, 68, 70, 72, 73, 74, 81, 82, 105, 167, 274, 351, 393, 593, 630, 748, 761, 770, 773, 806, 807, 828, 830, 867, 871, 872, 874, 875, 893, 902, 906, 911, 921, 922, 945, 947, 950, 1017, 1031, 1056, 1085, 1095, 1136, 1142, 1147, 1151, 1162, 1187, 1191, 1192, 1194, 1197, 1209, 1212, 1218, 1219, 1227, 1247, 1248, 1263, 1275, 1283, 1284, 1285, 1287, 1289, 1306, 1317, 1360, 1361, 1362, 1363, 1364, 1367, 1372, 1373, 1374, 1380, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1396, 1399, 1404, 1407, 1408, 1409, 1410, 1411, 1414, 1416, 1417, 1418, 1419, 1435, 1444, 1445, 1450, 1451, 1453, 1454, 1458, 1459, 1475, 1483, 1487, 1491, 1492, 1493, 1495, 1518, 1519, 1520, 1527, 1529, 1530, 1531, 1534, 1535, 1536, 1543, 1554, 1586, 1593, 1612, 1614, 1615, 1620, 1624, 1625, 1626, 1627, 1632, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1658, 1664, 1668, 1671, 1678, 1679, 1686, 1687, 1722, 1733, 1751, 1758, 1765, 1769, 1776, 1781, 1826, 1830, 1879, 1882, 1884, 1885, 1886, 1889, 1892, 1893, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1919, 1921, 1923, 1926, 1927, 1929, 1930, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1946, 1950, 1951], "network": [0, 1, 7, 8, 14, 34, 46, 48, 59, 854, 1031, 1212, 1227, 1228, 1356, 1362, 1363, 1364, 1367, 1375, 1376, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1398, 1410, 1414, 1444, 1451, 1456, 1457, 1462, 1471, 1473, 1483, 1487, 1489, 1491, 1508, 1542, 1543, 1596, 1615, 1632, 1634, 1660, 1665, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1705, 1711, 1882, 1884, 1885, 1903, 1904, 1910, 1919, 1920, 1923, 1926, 1930, 1935, 1936, 1937], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 12, 13, 15, 16, 19, 23, 24, 25, 29, 33, 34, 39, 40, 42, 44, 56, 59, 60, 65, 73, 97, 337, 531, 596, 781, 782, 872, 874, 968, 1113, 1115, 1173, 1210, 1212, 1213, 1241, 1320, 1321, 1357, 1358, 1359, 1365, 1367, 1381, 1390, 1398, 1431, 1440, 1441, 1442, 1444, 1450, 1488, 1489, 1490, 1491, 1494, 1510, 1511, 1512, 1527, 1540, 1560, 1624, 1658, 1659, 1661, 1794, 1854, 1855, 1856, 1857, 1879, 1882, 1884, 1885, 1892, 1893, 1895, 1897, 1905, 1907, 1908, 1912, 1915, 1916, 1921, 1923, 1929, 1930, 1935, 1937, 1944, 1947, 1950], "loss": [0, 1, 40, 42, 43, 46, 48, 65, 1143, 1209, 1247, 1248, 1257, 1275, 1352, 1360, 1361, 1367, 1378, 1380, 1387, 1398, 1404, 1405, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1493, 1515, 1516, 1526, 1527, 1540, 1555, 1578, 1586, 1624, 1658, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1704, 1713, 1773, 1879, 1880, 1895, 1899, 1905, 1908, 1909, 1912, 1913, 1916, 1926, 1930, 1931, 1935, 1936, 1944], "comput": [0, 3, 5, 7, 8, 11, 14, 15, 16, 19, 28, 31, 33, 35, 39, 40, 42, 44, 48, 50, 52, 65, 66, 67, 69, 167, 306, 502, 509, 694, 696, 710, 711, 773, 781, 782, 813, 815, 832, 833, 834, 835, 837, 838, 902, 906, 907, 908, 910, 911, 914, 915, 916, 917, 918, 919, 920, 921, 922, 926, 927, 933, 938, 939, 940, 941, 942, 943, 954, 956, 957, 958, 965, 978, 980, 985, 1028, 1031, 1068, 1077, 1079, 1082, 1085, 1089, 1090, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1130, 1131, 1132, 1134, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1155, 1156, 1157, 1165, 1168, 1171, 1172, 1173, 1174, 1187, 1189, 1212, 1215, 1223, 1231, 1232, 1234, 1236, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1284, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1310, 1311, 1312, 1315, 1339, 1341, 1345, 1352, 1356, 1357, 1358, 1359, 1362, 1363, 1364, 1375, 1376, 1377, 1379, 1380, 1382, 1387, 1388, 1396, 1399, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1450, 1451, 1453, 1458, 1459, 1477, 1479, 1483, 1492, 1493, 1496, 1510, 1511, 1512, 1525, 1526, 1534, 1535, 1542, 1543, 1545, 1554, 1562, 1567, 1568, 1569, 1570, 1571, 1572, 1583, 1586, 1593, 1599, 1600, 1615, 1618, 1620, 1621, 1624, 1625, 1628, 1631, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1650, 1651, 1658, 1664, 1668, 1669, 1671, 1684, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1717, 1723, 1729, 1730, 1734, 1735, 1749, 1750, 1773, 1775, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1804, 1806, 1807, 1808, 1809, 1826, 1830, 1831, 1846, 1851, 1869, 1872, 1880, 1882, 1885, 1892, 1895, 1898, 1899, 1901, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1923, 1926, 1930, 1933, 1935, 1939, 1940, 1945, 1948], "backward": [0, 1, 5, 9, 11, 12, 16, 22, 23, 25, 28, 29, 42, 43, 44, 46, 48, 65, 69, 70, 73, 74, 306, 351, 502, 510, 517, 518, 527, 529, 531, 594, 693, 699, 702, 773, 828, 829, 830, 903, 908, 909, 910, 911, 912, 913, 915, 917, 920, 921, 926, 927, 933, 934, 946, 1031, 1089, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1141, 1142, 1212, 1284, 1292, 1306, 1316, 1360, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1387, 1396, 1397, 1398, 1411, 1414, 1415, 1431, 1435, 1436, 1444, 1450, 1451, 1458, 1459, 1488, 1489, 1490, 1491, 1492, 1493, 1515, 1516, 1526, 1527, 1543, 1554, 1578, 1581, 1616, 1620, 1621, 1624, 1636, 1669, 1678, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1717, 1729, 1804, 1807, 1811, 1830, 1865, 1879, 1880, 1883, 1885, 1891, 1899, 1900, 1903, 1904, 1909, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1926, 1927, 1929, 1930, 1935, 1939, 1940, 1945], "under": [0, 1, 3, 4, 5, 9, 14, 15, 16, 20, 25, 29, 39, 42, 59, 65, 66, 68, 70, 72, 101, 921, 929, 951, 1187, 1212, 1367, 1444, 1508, 1534, 1535, 1631, 1633, 1636, 1681, 1750, 1881, 1897, 1904, 1905, 1908, 1909, 1911, 1913, 1918, 1923, 1927, 1928, 1930, 1933, 1934, 1937, 1939, 1940, 1944, 1947, 1949], "recommend": [0, 1, 5, 16, 39, 40, 42, 44, 48, 50, 59, 60, 65, 69, 72, 73, 74, 98, 99, 105, 463, 906, 973, 977, 978, 985, 1106, 1107, 1108, 1116, 1117, 1118, 1199, 1215, 1257, 1284, 1329, 1352, 1381, 1555, 1624, 1736, 1862, 1879, 1882, 1894, 1897, 1899, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1916, 1918, 1919, 1921, 1923, 1927, 1930], "same": [0, 1, 3, 7, 11, 12, 14, 15, 16, 18, 20, 23, 25, 28, 29, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 48, 50, 56, 57, 59, 60, 61, 62, 65, 68, 70, 72, 73, 74, 81, 82, 156, 170, 212, 238, 271, 327, 329, 331, 335, 337, 355, 460, 461, 462, 463, 464, 486, 498, 511, 512, 514, 527, 529, 531, 534, 557, 593, 630, 631, 699, 702, 706, 708, 709, 710, 712, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 758, 759, 769, 771, 774, 775, 776, 777, 778, 792, 798, 801, 802, 806, 807, 809, 813, 815, 827, 832, 835, 837, 838, 872, 874, 891, 892, 893, 905, 908, 911, 914, 915, 916, 917, 918, 919, 921, 922, 934, 936, 937, 946, 948, 950, 953, 958, 960, 966, 969, 974, 985, 986, 988, 999, 1001, 1020, 1031, 1068, 1073, 1075, 1076, 1082, 1085, 1087, 1088, 1091, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1133, 1137, 1138, 1140, 1141, 1142, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1154, 1157, 1165, 1173, 1174, 1182, 1186, 1203, 1209, 1212, 1222, 1223, 1227, 1228, 1232, 1233, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1279, 1299, 1303, 1305, 1306, 1309, 1311, 1312, 1313, 1314, 1317, 1339, 1342, 1343, 1344, 1350, 1351, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1391, 1394, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1416, 1426, 1427, 1428, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1452, 1453, 1458, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1495, 1496, 1499, 1500, 1501, 1508, 1514, 1515, 1516, 1518, 1519, 1520, 1526, 1535, 1543, 1545, 1554, 1555, 1593, 1612, 1624, 1631, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1657, 1661, 1666, 1671, 1672, 1676, 1678, 1682, 1696, 1717, 1722, 1723, 1726, 1727, 1739, 1741, 1743, 1747, 1749, 1751, 1752, 1756, 1758, 1765, 1768, 1781, 1804, 1812, 1813, 1814, 1816, 1817, 1823, 1824, 1825, 1829, 1830, 1840, 1851, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1872, 1878, 1879, 1882, 1884, 1885, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1930, 1933, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950], "correspond": [0, 1, 7, 17, 24, 25, 29, 36, 39, 40, 42, 46, 47, 48, 59, 65, 73, 96, 488, 489, 527, 529, 531, 557, 558, 693, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 748, 806, 810, 849, 851, 870, 871, 872, 877, 893, 902, 904, 905, 906, 911, 914, 916, 921, 958, 979, 1031, 1051, 1080, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1165, 1174, 1201, 1212, 1228, 1242, 1247, 1248, 1253, 1256, 1275, 1282, 1284, 1298, 1313, 1334, 1381, 1387, 1414, 1444, 1450, 1490, 1534, 1543, 1580, 1620, 1624, 1632, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1665, 1671, 1700, 1705, 1722, 1723, 1733, 1756, 1765, 1781, 1824, 1825, 1830, 1861, 1864, 1867, 1868, 1879, 1882, 1883, 1885, 1889, 1895, 1898, 1899, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1920, 1923, 1927, 1929, 1930, 1935, 1936, 1939, 1940, 1941, 1944, 1946, 1948, 1949], "devic": [0, 1, 2, 5, 8, 11, 13, 15, 19, 24, 25, 29, 33, 36, 39, 40, 42, 43, 44, 47, 60, 61, 65, 69, 72, 73, 74, 79, 82, 105, 213, 223, 226, 305, 329, 337, 351, 460, 461, 462, 463, 464, 529, 531, 593, 699, 702, 736, 737, 738, 739, 740, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 762, 763, 764, 765, 766, 767, 768, 878, 890, 892, 893, 914, 916, 934, 935, 937, 944, 946, 987, 988, 989, 991, 992, 993, 994, 995, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1009, 1013, 1014, 1015, 1017, 1018, 1026, 1028, 1029, 1030, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1061, 1062, 1063, 1086, 1087, 1088, 1098, 1103, 1121, 1139, 1140, 1169, 1170, 1212, 1216, 1219, 1222, 1225, 1231, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1266, 1269, 1270, 1272, 1273, 1275, 1276, 1282, 1283, 1298, 1301, 1306, 1312, 1316, 1329, 1331, 1352, 1362, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1387, 1388, 1397, 1399, 1407, 1408, 1409, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1444, 1450, 1452, 1460, 1461, 1483, 1487, 1489, 1491, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1535, 1554, 1560, 1593, 1608, 1612, 1613, 1614, 1615, 1624, 1626, 1627, 1628, 1629, 1657, 1664, 1670, 1672, 1675, 1676, 1689, 1729, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1769, 1773, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1808, 1812, 1813, 1814, 1815, 1816, 1817, 1830, 1844, 1846, 1855, 1857, 1865, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1893, 1898, 1900, 1904, 1909, 1911, 1912, 1914, 1916, 1917, 1918, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1934, 1935, 1939, 1941, 1945, 1946], "creat": [0, 1, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18, 20, 26, 28, 29, 33, 39, 40, 42, 44, 46, 48, 50, 51, 57, 59, 60, 61, 62, 65, 72, 73, 74, 98, 99, 105, 167, 239, 270, 351, 593, 594, 596, 597, 598, 600, 601, 745, 751, 752, 753, 758, 759, 769, 777, 805, 806, 807, 827, 828, 829, 830, 832, 837, 867, 891, 892, 893, 906, 908, 920, 945, 947, 963, 964, 966, 979, 987, 996, 1028, 1029, 1038, 1073, 1088, 1137, 1138, 1139, 1209, 1212, 1215, 1224, 1230, 1235, 1241, 1242, 1248, 1250, 1269, 1282, 1298, 1313, 1334, 1360, 1378, 1387, 1388, 1391, 1405, 1411, 1435, 1436, 1444, 1447, 1448, 1449, 1472, 1475, 1476, 1483, 1492, 1493, 1495, 1624, 1636, 1657, 1664, 1669, 1680, 1681, 1700, 1768, 1799, 1810, 1815, 1844, 1851, 1880, 1885, 1886, 1889, 1893, 1897, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1916, 1917, 1918, 1921, 1923, 1926, 1927, 1929, 1930, 1935, 1936, 1937, 1939, 1941, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1951], "optim": [0, 1, 2, 7, 8, 11, 12, 14, 16, 18, 20, 26, 29, 31, 33, 34, 40, 42, 43, 44, 48, 65, 73, 832, 921, 930, 966, 969, 1085, 1151, 1212, 1216, 1221, 1223, 1227, 1228, 1267, 1284, 1362, 1363, 1364, 1380, 1387, 1407, 1408, 1409, 1444, 1447, 1448, 1449, 1450, 1476, 1483, 1491, 1593, 1615, 1624, 1631, 1636, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1719, 1880, 1882, 1884, 1893, 1899, 1903, 1907, 1908, 1909, 1910, 1912, 1913, 1916, 1918, 1923, 1929, 1930, 1939], "default": [0, 2, 3, 5, 9, 12, 14, 15, 16, 18, 21, 22, 23, 24, 28, 29, 31, 33, 36, 42, 43, 44, 46, 47, 48, 50, 51, 56, 57, 58, 59, 60, 62, 65, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 99, 167, 172, 187, 189, 192, 195, 196, 197, 212, 223, 226, 256, 283, 306, 313, 341, 347, 409, 460, 461, 462, 463, 464, 473, 510, 513, 514, 534, 538, 593, 594, 596, 693, 707, 710, 725, 726, 727, 728, 729, 730, 733, 743, 744, 745, 746, 748, 768, 771, 773, 781, 782, 783, 785, 786, 787, 792, 798, 806, 811, 816, 821, 822, 827, 830, 832, 833, 834, 835, 838, 841, 842, 843, 844, 845, 846, 847, 848, 854, 855, 856, 857, 858, 859, 861, 862, 867, 868, 869, 871, 878, 892, 893, 906, 907, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 935, 944, 950, 954, 957, 958, 959, 963, 966, 984, 985, 988, 991, 993, 997, 1000, 1001, 1002, 1005, 1006, 1013, 1014, 1017, 1028, 1030, 1031, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1055, 1056, 1059, 1061, 1062, 1063, 1066, 1067, 1068, 1073, 1074, 1075, 1076, 1077, 1080, 1085, 1086, 1087, 1088, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1153, 1157, 1159, 1165, 1169, 1170, 1173, 1174, 1201, 1203, 1209, 1212, 1213, 1216, 1223, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1298, 1301, 1303, 1309, 1311, 1312, 1313, 1317, 1338, 1339, 1341, 1342, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1458, 1459, 1461, 1462, 1463, 1464, 1471, 1475, 1476, 1480, 1481, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1540, 1542, 1543, 1545, 1547, 1554, 1555, 1562, 1567, 1568, 1569, 1578, 1579, 1581, 1586, 1593, 1599, 1600, 1608, 1612, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1658, 1659, 1661, 1663, 1664, 1665, 1666, 1668, 1670, 1671, 1675, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1719, 1727, 1729, 1730, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1751, 1757, 1758, 1761, 1765, 1769, 1770, 1771, 1772, 1773, 1778, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1824, 1825, 1826, 1829, 1830, 1831, 1844, 1845, 1851, 1853, 1855, 1857, 1862, 1863, 1865, 1866, 1867, 1868, 1872, 1877, 1878, 1879, 1880, 1882, 1885, 1889, 1891, 1893, 1894, 1897, 1900, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1914, 1916, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1934, 1935, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1951], "net": [0, 6, 34, 50, 68, 73, 1212, 1227, 1228, 1381, 1444, 1624, 1647, 1704, 1884, 1885, 1904, 1905, 1908, 1916, 1944], "sgd": [0, 39, 40, 46, 1387, 1615, 1624, 1705, 1711, 1713, 1904, 1908, 1909, 1916, 1918, 1926, 1935, 1936], "paramet": [0, 1, 2, 3, 5, 16, 18, 21, 27, 28, 31, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 53, 57, 59, 61, 65, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 167, 172, 187, 189, 192, 195, 196, 197, 212, 213, 223, 226, 256, 270, 271, 276, 283, 313, 329, 331, 333, 335, 337, 341, 347, 409, 416, 418, 460, 461, 462, 463, 464, 473, 486, 507, 510, 511, 512, 513, 514, 527, 529, 531, 534, 538, 550, 557, 558, 559, 573, 579, 596, 597, 598, 600, 601, 616, 617, 620, 630, 631, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 763, 768, 769, 771, 772, 773, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 804, 806, 808, 810, 812, 813, 814, 827, 832, 833, 834, 835, 836, 837, 838, 839, 840, 851, 852, 853, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 906, 914, 915, 916, 917, 918, 919, 920, 921, 922, 928, 929, 930, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963, 964, 965, 966, 968, 969, 971, 972, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1000, 1001, 1002, 1005, 1006, 1007, 1009, 1013, 1014, 1015, 1017, 1020, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1047, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1182, 1186, 1187, 1189, 1191, 1192, 1194, 1197, 1198, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1222, 1223, 1224, 1225, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1319, 1324, 1325, 1326, 1329, 1330, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1475, 1476, 1477, 1479, 1480, 1481, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1540, 1542, 1543, 1545, 1547, 1554, 1555, 1562, 1567, 1568, 1569, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1593, 1599, 1600, 1608, 1612, 1613, 1614, 1615, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1761, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1778, 1779, 1780, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1801, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1834, 1835, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1880, 1882, 1885, 1887, 1889, 1893, 1894, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1908, 1909, 1910, 1914, 1915, 1916, 1918, 1920, 1921, 1923, 1927, 1928, 1929, 1930, 1934, 1935, 1936, 1939, 1940, 1941, 1944, 1946, 1948, 1949, 1950], "target": [0, 12, 13, 14, 20, 28, 29, 33, 46, 65, 69, 71, 72, 73, 74, 513, 748, 779, 780, 805, 810, 872, 874, 875, 951, 1143, 1212, 1221, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1360, 1361, 1367, 1378, 1380, 1392, 1393, 1398, 1404, 1405, 1410, 1411, 1435, 1436, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1475, 1476, 1487, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1515, 1516, 1524, 1526, 1527, 1538, 1539, 1540, 1551, 1552, 1555, 1556, 1566, 1574, 1575, 1576, 1577, 1578, 1586, 1593, 1597, 1598, 1624, 1699, 1865, 1883, 1885, 1904, 1905, 1908, 1918, 1923, 1926, 1927, 1930, 1931, 1935, 1944, 1948], "data": [0, 1, 2, 3, 7, 14, 15, 16, 19, 20, 25, 27, 31, 36, 37, 40, 42, 44, 46, 48, 49, 50, 53, 56, 59, 61, 65, 69, 73, 74, 75, 79, 82, 156, 167, 212, 213, 342, 345, 349, 352, 357, 460, 463, 496, 507, 511, 513, 630, 751, 752, 753, 773, 785, 786, 787, 794, 805, 806, 807, 811, 832, 833, 834, 835, 836, 838, 840, 878, 892, 893, 903, 906, 935, 944, 950, 989, 1066, 1067, 1086, 1087, 1088, 1098, 1099, 1100, 1103, 1105, 1106, 1108, 1116, 1117, 1118, 1121, 1124, 1125, 1126, 1127, 1136, 1138, 1139, 1140, 1142, 1151, 1169, 1170, 1172, 1191, 1194, 1219, 1223, 1227, 1231, 1282, 1283, 1284, 1298, 1303, 1311, 1313, 1325, 1326, 1339, 1341, 1342, 1365, 1367, 1372, 1373, 1374, 1381, 1396, 1399, 1407, 1408, 1409, 1414, 1416, 1431, 1451, 1459, 1460, 1496, 1508, 1513, 1514, 1518, 1519, 1520, 1553, 1560, 1562, 1599, 1600, 1624, 1625, 1626, 1627, 1657, 1658, 1659, 1660, 1662, 1671, 1675, 1676, 1680, 1681, 1705, 1711, 1719, 1727, 1730, 1731, 1732, 1736, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1752, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1829, 1830, 1844, 1853, 1855, 1857, 1864, 1865, 1877, 1878, 1880, 1882, 1883, 1886, 1892, 1893, 1895, 1897, 1900, 1904, 1905, 1906, 1908, 1910, 1911, 1915, 1918, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1930, 1933, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1948, 1949], "zero_grad": [0, 1, 46, 1212, 1444, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1704, 1904, 1908, 1912, 1916, 1918, 1926], "output": [0, 1, 4, 5, 7, 11, 12, 13, 14, 15, 16, 19, 20, 22, 27, 28, 29, 36, 39, 40, 42, 46, 47, 48, 50, 56, 57, 69, 70, 71, 73, 74, 82, 156, 329, 337, 460, 461, 462, 464, 527, 531, 579, 630, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 733, 741, 742, 747, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 785, 786, 787, 788, 790, 792, 793, 794, 795, 796, 798, 799, 800, 805, 806, 807, 809, 812, 815, 827, 830, 871, 874, 875, 876, 878, 887, 888, 891, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 934, 936, 937, 938, 939, 940, 941, 942, 943, 946, 950, 953, 954, 955, 956, 957, 958, 959, 961, 964, 978, 979, 981, 982, 985, 998, 1000, 1001, 1002, 1028, 1029, 1031, 1041, 1042, 1064, 1065, 1066, 1067, 1069, 1072, 1073, 1075, 1077, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1090, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1139, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1165, 1168, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1186, 1189, 1206, 1207, 1209, 1212, 1216, 1223, 1227, 1228, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1534, 1535, 1537, 1538, 1539, 1540, 1543, 1545, 1554, 1555, 1560, 1562, 1567, 1568, 1569, 1578, 1579, 1583, 1584, 1585, 1586, 1593, 1608, 1612, 1613, 1614, 1618, 1620, 1621, 1624, 1632, 1633, 1634, 1637, 1658, 1660, 1661, 1665, 1668, 1670, 1671, 1672, 1675, 1676, 1678, 1681, 1682, 1700, 1704, 1717, 1718, 1726, 1727, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1753, 1754, 1758, 1760, 1765, 1773, 1778, 1781, 1783, 1795, 1796, 1798, 1803, 1807, 1808, 1810, 1811, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1841, 1842, 1843, 1848, 1851, 1853, 1854, 1856, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1872, 1874, 1875, 1877, 1878, 1879, 1882, 1883, 1885, 1891, 1893, 1898, 1899, 1900, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1916, 1919, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1936, 1939, 1940, 1942, 1943, 1944, 1946, 1948, 1949], "loss_fn": [0, 46, 1699, 1904, 1908, 1909, 1918, 1926], "exit": [0, 1, 2, 4, 20, 36, 42, 50, 59, 65, 72, 73, 907, 1624, 1885, 1897, 1905, 1910, 1918, 1923, 1937], "befor": [0, 1, 3, 6, 7, 11, 12, 14, 15, 17, 20, 23, 26, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 51, 56, 58, 59, 60, 61, 65, 73, 114, 167, 760, 773, 801, 802, 803, 906, 910, 912, 964, 973, 988, 1066, 1067, 1068, 1077, 1085, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1126, 1127, 1130, 1138, 1141, 1212, 1223, 1225, 1264, 1268, 1281, 1311, 1339, 1342, 1381, 1387, 1388, 1391, 1396, 1444, 1445, 1446, 1483, 1487, 1495, 1543, 1562, 1599, 1600, 1615, 1618, 1619, 1620, 1621, 1624, 1632, 1665, 1668, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1713, 1727, 1730, 1756, 1765, 1776, 1777, 1806, 1809, 1812, 1813, 1814, 1816, 1817, 1826, 1829, 1851, 1862, 1882, 1884, 1885, 1897, 1904, 1905, 1908, 1909, 1910, 1913, 1915, 1916, 1919, 1921, 1922, 1926, 1927, 1928, 1930, 1935, 1936, 1937, 1939, 1940, 1944, 1946], "step": [0, 1, 2, 4, 9, 16, 20, 22, 25, 29, 33, 39, 40, 42, 43, 44, 46, 48, 60, 65, 69, 73, 551, 620, 699, 781, 782, 870, 878, 907, 908, 909, 937, 961, 1171, 1259, 1282, 1283, 1284, 1298, 1301, 1313, 1392, 1393, 1414, 1511, 1512, 1538, 1539, 1624, 1657, 1678, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1736, 1745, 1799, 1881, 1882, 1883, 1899, 1904, 1905, 1908, 1909, 1910, 1912, 1916, 1918, 1920, 1922, 1923, 1927, 1929, 1930, 1935, 1936, 1939, 1944], "usag": [0, 1, 4, 7, 9, 14, 15, 16, 17, 18, 29, 34, 39, 42, 46, 48, 49, 50, 53, 56, 57, 59, 61, 65, 73, 74, 75, 761, 770, 805, 806, 807, 823, 824, 825, 826, 828, 829, 830, 867, 871, 903, 966, 1034, 1054, 1058, 1085, 1136, 1141, 1145, 1146, 1147, 1225, 1284, 1624, 1679, 1882, 1885, 1895, 1899, 1904, 1905, 1910, 1912, 1923, 1929, 1937, 1944, 1945, 1947, 1948, 1949], "along": [0, 33, 36, 39, 42, 48, 52, 59, 74, 80, 329, 331, 333, 337, 507, 527, 529, 531, 699, 710, 832, 888, 889, 953, 960, 983, 985, 1000, 1002, 1068, 1076, 1077, 1084, 1085, 1101, 1106, 1109, 1113, 1116, 1119, 1125, 1153, 1154, 1177, 1186, 1189, 1233, 1244, 1280, 1332, 1339, 1343, 1344, 1353, 1354, 1355, 1361, 1379, 1392, 1393, 1434, 1437, 1438, 1439, 1477, 1479, 1508, 1516, 1525, 1538, 1539, 1542, 1545, 1562, 1567, 1568, 1569, 1579, 1599, 1600, 1642, 1644, 1651, 1652, 1661, 1670, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1711, 1730, 1750, 1751, 1756, 1767, 1803, 1806, 1809, 1810, 1818, 1823, 1841, 1845, 1848, 1851, 1860, 1869, 1872, 1874, 1879, 1884, 1889, 1900, 1906, 1910, 1912, 1915, 1916, 1927, 1930, 1940], "more": [0, 1, 2, 3, 4, 5, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 31, 33, 34, 35, 38, 39, 40, 42, 43, 48, 49, 50, 51, 55, 58, 59, 60, 61, 65, 68, 69, 70, 71, 73, 97, 99, 100, 167, 270, 271, 329, 337, 502, 507, 509, 512, 527, 529, 531, 558, 631, 693, 748, 784, 793, 797, 806, 867, 872, 873, 874, 886, 899, 900, 901, 903, 905, 906, 912, 914, 916, 920, 921, 922, 926, 927, 937, 945, 948, 950, 956, 957, 958, 959, 966, 988, 989, 991, 993, 994, 1010, 1029, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1049, 1050, 1051, 1055, 1063, 1068, 1074, 1083, 1085, 1089, 1101, 1102, 1104, 1106, 1125, 1126, 1127, 1128, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1160, 1161, 1165, 1174, 1175, 1187, 1193, 1197, 1199, 1200, 1212, 1225, 1228, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1279, 1281, 1284, 1287, 1290, 1292, 1302, 1303, 1325, 1326, 1329, 1340, 1352, 1356, 1361, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1387, 1388, 1389, 1405, 1414, 1440, 1441, 1442, 1444, 1450, 1456, 1457, 1458, 1459, 1471, 1483, 1491, 1508, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1532, 1534, 1535, 1543, 1546, 1547, 1548, 1549, 1554, 1558, 1562, 1563, 1573, 1580, 1587, 1588, 1589, 1591, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1611, 1612, 1613, 1614, 1615, 1624, 1625, 1631, 1633, 1634, 1669, 1670, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1717, 1728, 1729, 1755, 1761, 1765, 1775, 1805, 1806, 1830, 1851, 1853, 1865, 1872, 1873, 1879, 1880, 1881, 1882, 1884, 1885, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1936, 1937, 1939, 1942, 1943, 1944, 1945, 1946, 1947, 1950, 1951], "complex": [0, 1, 3, 7, 8, 17, 19, 39, 40, 42, 73, 327, 345, 498, 513, 698, 705, 921, 922, 959, 977, 978, 1080, 1106, 1128, 1133, 1165, 1182, 1191, 1202, 1204, 1205, 1208, 1209, 1212, 1232, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1261, 1264, 1266, 1268, 1269, 1270, 1271, 1275, 1276, 1280, 1281, 1282, 1284, 1292, 1298, 1310, 1315, 1333, 1372, 1373, 1374, 1411, 1444, 1518, 1519, 1520, 1631, 1671, 1723, 1736, 1749, 1770, 1781, 1826, 1827, 1830, 1865, 1869, 1870, 1871, 1879, 1880, 1883, 1885, 1886, 1894, 1918, 1925, 1941, 1942, 1945, 1946, 1947], "scenario": [0, 16, 17, 39, 42, 59, 1679, 1680, 1908, 1913, 1918, 1923, 1929, 1935], "g": [0, 1, 2, 3, 5, 7, 12, 14, 15, 22, 25, 27, 29, 31, 33, 34, 39, 40, 42, 46, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 62, 65, 68, 70, 72, 73, 74, 81, 82, 593, 630, 761, 770, 773, 806, 807, 828, 830, 867, 872, 874, 875, 902, 911, 921, 922, 947, 1031, 1085, 1136, 1142, 1146, 1147, 1162, 1165, 1187, 1209, 1212, 1218, 1219, 1227, 1283, 1367, 1368, 1381, 1383, 1384, 1385, 1389, 1391, 1396, 1404, 1410, 1414, 1415, 1444, 1445, 1454, 1459, 1475, 1527, 1529, 1530, 1531, 1536, 1543, 1624, 1625, 1626, 1627, 1668, 1671, 1678, 1679, 1684, 1685, 1686, 1687, 1690, 1696, 1697, 1698, 1699, 1751, 1758, 1769, 1776, 1794, 1826, 1879, 1882, 1884, 1885, 1886, 1889, 1892, 1897, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1919, 1920, 1923, 1926, 1927, 1929, 1930, 1935, 1939, 1942, 1943, 1944, 1950], "penalti": [0, 23, 794, 1042, 1683, 1684, 1685, 1686, 1688, 1690, 1696, 1697, 1699, 1931], "multipl": [0, 1, 2, 3, 5, 11, 15, 16, 18, 28, 39, 40, 42, 43, 44, 48, 49, 52, 59, 60, 61, 65, 70, 72, 73, 208, 225, 331, 527, 699, 701, 702, 708, 709, 773, 854, 887, 888, 891, 920, 954, 956, 966, 980, 984, 1000, 1001, 1002, 1028, 1083, 1085, 1088, 1138, 1146, 1147, 1148, 1149, 1152, 1153, 1157, 1161, 1175, 1176, 1225, 1228, 1233, 1234, 1249, 1250, 1251, 1267, 1272, 1277, 1278, 1306, 1309, 1314, 1316, 1360, 1361, 1375, 1376, 1377, 1378, 1380, 1388, 1391, 1396, 1404, 1410, 1411, 1432, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1495, 1515, 1516, 1526, 1535, 1555, 1578, 1586, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1698, 1706, 1707, 1708, 1709, 1710, 1715, 1717, 1773, 1801, 1807, 1808, 1812, 1813, 1814, 1816, 1817, 1845, 1846, 1853, 1861, 1865, 1872, 1873, 1879, 1880, 1884, 1885, 1897, 1898, 1899, 1900, 1905, 1907, 1909, 1911, 1913, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1949], "custom": [0, 1, 3, 5, 15, 17, 18, 20, 26, 33, 34, 39, 42, 43, 44, 45, 46, 47, 52, 55, 56, 58, 65, 74, 76, 96, 97, 98, 99, 513, 806, 810, 827, 828, 829, 830, 851, 853, 872, 873, 874, 875, 912, 966, 968, 987, 996, 1060, 1212, 1444, 1487, 1491, 1492, 1493, 1638, 1647, 1664, 1705, 1880, 1886, 1889, 1891, 1897, 1898, 1905, 1915, 1920, 1921, 1922, 1924, 1933, 1934, 1948], "autograd": [0, 4, 5, 7, 8, 16, 17, 23, 29, 42, 46, 48, 65, 66, 69, 74, 156, 351, 460, 461, 462, 463, 464, 510, 702, 878, 892, 893, 907, 933, 935, 944, 963, 968, 1031, 1086, 1087, 1088, 1098, 1103, 1121, 1138, 1139, 1140, 1141, 1142, 1151, 1153, 1169, 1170, 1187, 1212, 1231, 1251, 1282, 1298, 1306, 1316, 1398, 1444, 1450, 1491, 1545, 1560, 1624, 1675, 1676, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1872, 1877, 1878, 1880, 1883, 1887, 1892, 1900, 1903, 1908, 1909, 1912, 1913, 1915, 1916, 1929, 1945, 1946, 1947, 1950], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 31, 33, 34, 35, 36, 38, 39, 43, 44, 46, 47, 49, 50, 52, 56, 57, 59, 60, 65, 68, 70, 72, 74, 76, 77, 81, 82, 84, 97, 98, 105, 136, 167, 212, 276, 305, 314, 337, 502, 507, 510, 531, 554, 569, 693, 702, 706, 707, 711, 712, 761, 770, 771, 773, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 805, 806, 810, 811, 813, 827, 828, 829, 830, 837, 839, 851, 854, 867, 870, 872, 874, 875, 876, 890, 891, 906, 907, 908, 909, 920, 921, 922, 926, 927, 930, 933, 935, 944, 946, 954, 956, 960, 963, 966, 968, 969, 970, 971, 973, 977, 978, 985, 986, 987, 989, 991, 993, 996, 1013, 1014, 1017, 1022, 1023, 1028, 1029, 1031, 1032, 1033, 1034, 1036, 1041, 1042, 1049, 1050, 1052, 1053, 1054, 1058, 1068, 1073, 1075, 1076, 1083, 1085, 1089, 1101, 1102, 1104, 1124, 1128, 1131, 1132, 1133, 1136, 1138, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1157, 1158, 1165, 1169, 1170, 1171, 1173, 1175, 1183, 1184, 1185, 1187, 1199, 1209, 1210, 1211, 1212, 1213, 1215, 1217, 1218, 1222, 1223, 1224, 1225, 1227, 1229, 1231, 1232, 1233, 1235, 1240, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1263, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1287, 1289, 1298, 1301, 1302, 1306, 1309, 1312, 1314, 1316, 1317, 1318, 1336, 1339, 1340, 1356, 1360, 1366, 1367, 1369, 1370, 1371, 1378, 1382, 1386, 1389, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1404, 1410, 1412, 1413, 1414, 1415, 1430, 1433, 1434, 1436, 1443, 1444, 1449, 1450, 1452, 1459, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1472, 1473, 1474, 1475, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1489, 1491, 1492, 1493, 1495, 1497, 1499, 1500, 1501, 1616, 1620, 1621, 1624, 1631, 1632, 1636, 1647, 1657, 1658, 1659, 1661, 1664, 1665, 1666, 1668, 1669, 1671, 1672, 1676, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1701, 1704, 1705, 1707, 1710, 1711, 1712, 1717, 1718, 1719, 1723, 1729, 1736, 1740, 1745, 1758, 1767, 1768, 1769, 1772, 1775, 1781, 1789, 1793, 1794, 1799, 1802, 1804, 1805, 1806, 1807, 1809, 1815, 1822, 1826, 1832, 1833, 1841, 1845, 1847, 1851, 1861, 1862, 1863, 1865, 1869, 1870, 1871, 1872, 1873, 1878, 1879, 1880, 1881, 1886, 1889, 1891, 1894, 1895, 1897, 1899, 1903, 1906, 1908, 1909, 1910, 1912, 1915, 1916, 1918, 1919, 1924, 1926, 1927, 1928, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1942, 1944, 1946, 1947, 1948, 1949], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 20, 25, 27, 28, 29, 34, 39, 40, 42, 43, 46, 47, 60, 65, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 314, 554, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 805, 806, 827, 867, 872, 873, 874, 875, 877, 1028, 1031, 1085, 1141, 1150, 1151, 1210, 1212, 1213, 1215, 1216, 1217, 1218, 1221, 1222, 1223, 1227, 1228, 1229, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1615, 1624, 1625, 1626, 1627, 1633, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1657, 1669, 1700, 1802, 1826, 1865, 1879, 1880, 1882, 1883, 1887, 1899, 1900, 1904, 1909, 1912, 1916, 1918, 1919, 1920, 1923, 1926, 1927, 1928, 1930, 1932, 1935, 1944, 1946, 1949], "modul": [0, 1, 3, 5, 6, 8, 12, 15, 16, 18, 21, 22, 25, 27, 28, 29, 31, 33, 36, 40, 42, 44, 46, 47, 51, 53, 56, 59, 60, 65, 66, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 502, 693, 699, 702, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 751, 752, 753, 758, 759, 760, 769, 774, 775, 776, 777, 778, 801, 802, 803, 804, 805, 806, 810, 812, 813, 815, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 851, 852, 853, 867, 870, 871, 872, 873, 874, 875, 877, 926, 927, 934, 946, 966, 1031, 1141, 1150, 1151, 1153, 1187, 1210, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1229, 1283, 1306, 1316, 1352, 1356, 1362, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1397, 1399, 1407, 1408, 1409, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1445, 1446, 1454, 1455, 1460, 1472, 1477, 1483, 1487, 1491, 1534, 1535, 1608, 1615, 1624, 1625, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1660, 1664, 1665, 1666, 1668, 1700, 1761, 1805, 1872, 1879, 1880, 1886, 1891, 1893, 1895, 1897, 1899, 1900, 1903, 1907, 1908, 1909, 1912, 1915, 1917, 1918, 1920, 1922, 1923, 1926, 1928, 1929, 1932, 1933, 1935, 1938, 1939, 1940, 1944, 1947, 1948, 1949, 1950], "def": [0, 1, 11, 12, 14, 16, 18, 19, 20, 21, 25, 27, 28, 29, 39, 40, 42, 43, 44, 48, 50, 51, 52, 56, 57, 60, 61, 62, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 414, 805, 806, 874, 875, 903, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 966, 1089, 1141, 1142, 1143, 1145, 1146, 1147, 1149, 1151, 1152, 1153, 1187, 1210, 1212, 1213, 1215, 1216, 1217, 1218, 1222, 1223, 1226, 1227, 1228, 1229, 1444, 1445, 1446, 1454, 1455, 1493, 1615, 1624, 1636, 1669, 1678, 1679, 1805, 1872, 1879, 1882, 1884, 1885, 1889, 1899, 1904, 1905, 1907, 1909, 1910, 1911, 1912, 1916, 1918, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1935, 1936, 1937, 1950], "self": [0, 1, 9, 12, 20, 25, 28, 29, 36, 39, 40, 42, 44, 47, 50, 51, 56, 61, 65, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 114, 156, 167, 170, 171, 172, 187, 189, 192, 195, 196, 197, 207, 208, 212, 213, 225, 233, 235, 249, 256, 270, 271, 274, 275, 283, 302, 306, 313, 327, 329, 331, 333, 335, 337, 339, 341, 342, 344, 345, 346, 347, 349, 357, 393, 409, 414, 416, 417, 418, 469, 486, 496, 498, 511, 512, 513, 514, 527, 529, 531, 534, 538, 550, 556, 557, 558, 559, 571, 573, 593, 594, 596, 597, 598, 600, 601, 617, 620, 621, 627, 630, 631, 633, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 874, 875, 931, 1141, 1142, 1151, 1182, 1210, 1211, 1212, 1215, 1216, 1217, 1218, 1222, 1223, 1227, 1228, 1229, 1352, 1356, 1389, 1443, 1444, 1445, 1446, 1450, 1454, 1455, 1471, 1473, 1483, 1489, 1491, 1573, 1596, 1615, 1633, 1634, 1636, 1642, 1644, 1657, 1666, 1679, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1726, 1747, 1881, 1882, 1883, 1884, 1885, 1889, 1895, 1898, 1899, 1903, 1905, 1906, 1907, 1910, 1912, 1916, 1921, 1923, 1927, 1928, 1930, 1935, 1941], "produc": [0, 7, 12, 14, 16, 19, 20, 23, 29, 33, 39, 42, 44, 49, 51, 53, 56, 61, 70, 71, 72, 73, 105, 745, 751, 752, 753, 758, 759, 769, 777, 805, 806, 937, 957, 1024, 1116, 1117, 1118, 1136, 1146, 1147, 1153, 1165, 1223, 1227, 1228, 1231, 1247, 1248, 1251, 1258, 1259, 1270, 1275, 1309, 1312, 1313, 1314, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425, 1450, 1527, 1535, 1543, 1554, 1612, 1613, 1614, 1671, 1700, 1729, 1736, 1745, 1830, 1865, 1872, 1882, 1884, 1885, 1897, 1898, 1904, 1905, 1906, 1908, 1910, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1939, 1943], "after": [0, 1, 7, 9, 11, 13, 16, 17, 18, 20, 23, 25, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 59, 61, 65, 72, 73, 74, 79, 80, 276, 773, 803, 870, 872, 874, 875, 906, 907, 910, 966, 973, 986, 988, 1024, 1031, 1084, 1142, 1197, 1212, 1216, 1267, 1283, 1306, 1348, 1381, 1396, 1429, 1444, 1447, 1487, 1489, 1491, 1508, 1543, 1615, 1618, 1624, 1636, 1638, 1642, 1644, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1711, 1713, 1769, 1826, 1851, 1874, 1879, 1884, 1885, 1895, 1897, 1903, 1904, 1905, 1908, 1909, 1910, 1912, 1913, 1915, 1916, 1918, 1919, 1923, 1926, 1927, 1929, 1930, 1935, 1936, 1937, 1938, 1940, 1942, 1944], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 28, 29, 31, 32, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 136, 170, 172, 187, 189, 192, 195, 196, 197, 207, 208, 212, 213, 223, 225, 226, 233, 235, 236, 238, 249, 256, 258, 270, 276, 283, 305, 313, 327, 335, 339, 341, 342, 344, 345, 346, 347, 349, 353, 355, 357, 368, 393, 409, 450, 460, 461, 462, 463, 464, 473, 487, 488, 489, 490, 491, 493, 498, 502, 510, 511, 512, 527, 529, 538, 550, 556, 557, 569, 570, 571, 572, 573, 593, 594, 595, 596, 602, 616, 617, 620, 622, 626, 627, 630, 697, 705, 706, 708, 709, 710, 711, 712, 748, 779, 780, 783, 784, 788, 789, 790, 791, 794, 797, 804, 805, 806, 807, 827, 828, 829, 830, 849, 853, 854, 867, 868, 869, 870, 872, 873, 874, 875, 876, 877, 878, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 930, 931, 932, 935, 936, 937, 944, 945, 947, 950, 952, 954, 955, 956, 957, 958, 959, 960, 961, 963, 965, 966, 967, 968, 969, 972, 977, 978, 980, 981, 982, 984, 985, 986, 988, 989, 991, 995, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1060, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1168, 1169, 1170, 1172, 1173, 1174, 1178, 1182, 1186, 1187, 1188, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1208, 1209, 1210, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1226, 1227, 1228, 1229, 1230, 1231, 1233, 1236, 1237, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1291, 1292, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1320, 1321, 1323, 1329, 1334, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1348, 1352, 1353, 1354, 1355, 1360, 1361, 1378, 1379, 1380, 1381, 1388, 1392, 1393, 1404, 1410, 1411, 1434, 1435, 1436, 1437, 1438, 1439, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1458, 1472, 1475, 1476, 1477, 1478, 1479, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1513, 1515, 1516, 1517, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1562, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1586, 1588, 1589, 1591, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1606, 1608, 1609, 1610, 1611, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1628, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1719, 1720, 1722, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1760, 1765, 1766, 1767, 1768, 1774, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1803, 1805, 1806, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1825, 1826, 1829, 1830, 1831, 1839, 1840, 1841, 1842, 1843, 1844, 1846, 1848, 1849, 1850, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1868, 1870, 1871, 1872, 1875, 1877, 1878, 1879, 1882, 1886, 1889, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "disabl": [0, 2, 5, 15, 16, 17, 18, 22, 24, 29, 43, 48, 65, 73, 823, 824, 933, 966, 1031, 1085, 1089, 1141, 1187, 1212, 1214, 1227, 1228, 1444, 1450, 1483, 1491, 1593, 1624, 1625, 1666, 1669, 1774, 1775, 1778, 1805, 1880, 1884, 1891, 1904, 1907, 1908, 1909, 1910, 1914, 1919, 1920, 1923, 1928, 1934, 1939, 1946], "them": [0, 1, 3, 5, 7, 8, 9, 14, 15, 16, 19, 20, 23, 24, 28, 29, 31, 33, 34, 39, 42, 44, 50, 51, 56, 59, 61, 65, 69, 70, 72, 73, 167, 238, 270, 747, 906, 912, 916, 948, 1031, 1070, 1073, 1085, 1212, 1233, 1242, 1253, 1267, 1279, 1283, 1311, 1342, 1368, 1387, 1444, 1477, 1479, 1599, 1643, 1658, 1661, 1701, 1809, 1811, 1829, 1879, 1884, 1885, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1914, 1915, 1916, 1920, 1922, 1926, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1940, 1944, 1945, 1948], "differ": [0, 1, 3, 5, 8, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 29, 33, 36, 39, 42, 44, 46, 47, 48, 50, 51, 52, 56, 57, 59, 60, 62, 65, 66, 69, 70, 71, 73, 213, 501, 507, 630, 693, 699, 702, 708, 709, 748, 773, 806, 809, 810, 835, 837, 838, 874, 875, 878, 892, 893, 921, 922, 934, 946, 947, 984, 1068, 1073, 1075, 1077, 1085, 1125, 1126, 1127, 1131, 1132, 1138, 1141, 1146, 1147, 1153, 1165, 1186, 1212, 1222, 1227, 1241, 1247, 1248, 1258, 1259, 1267, 1270, 1275, 1279, 1306, 1316, 1352, 1361, 1362, 1363, 1364, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1396, 1397, 1405, 1407, 1408, 1409, 1410, 1414, 1415, 1431, 1444, 1447, 1450, 1465, 1466, 1468, 1469, 1470, 1472, 1475, 1483, 1489, 1491, 1493, 1496, 1499, 1500, 1501, 1508, 1516, 1534, 1543, 1554, 1556, 1567, 1568, 1569, 1593, 1615, 1624, 1626, 1627, 1631, 1666, 1671, 1678, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1713, 1719, 1729, 1751, 1824, 1825, 1830, 1851, 1862, 1863, 1865, 1867, 1868, 1872, 1879, 1882, 1884, 1885, 1887, 1891, 1892, 1897, 1898, 1900, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1916, 1918, 1919, 1920, 1922, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1937, 1939, 1942, 1944, 1945, 1946, 1949], "caus": [0, 1, 2, 3, 5, 15, 17, 33, 36, 39, 42, 46, 52, 58, 59, 60, 70, 73, 98, 569, 630, 890, 893, 906, 969, 1138, 1223, 1227, 1247, 1248, 1275, 1329, 1554, 1555, 1612, 1615, 1624, 1670, 1682, 1769, 1780, 1826, 1865, 1882, 1885, 1897, 1906, 1908, 1910, 1912, 1918, 1920, 1922, 1923, 1927, 1930, 1931, 1937, 1939, 1942], "mismatch": [0, 42, 73, 99, 893, 1213, 1681, 1682, 1884, 1904, 1909, 1910, 1912, 1923, 1946], "error": [0, 1, 5, 8, 11, 15, 19, 27, 33, 35, 36, 39, 40, 42, 43, 45, 48, 57, 59, 60, 65, 68, 70, 72, 73, 74, 75, 96, 97, 98, 99, 207, 238, 329, 331, 337, 339, 344, 558, 569, 627, 630, 693, 832, 878, 891, 893, 912, 914, 915, 916, 917, 918, 919, 920, 996, 1031, 1042, 1055, 1059, 1083, 1141, 1145, 1146, 1148, 1153, 1175, 1212, 1217, 1226, 1241, 1242, 1251, 1253, 1255, 1258, 1259, 1260, 1270, 1273, 1283, 1301, 1329, 1334, 1360, 1361, 1394, 1405, 1411, 1435, 1444, 1473, 1475, 1541, 1552, 1574, 1593, 1596, 1597, 1624, 1626, 1627, 1628, 1666, 1671, 1681, 1682, 1725, 1765, 1772, 1821, 1826, 1865, 1872, 1873, 1879, 1880, 1882, 1884, 1885, 1891, 1892, 1897, 1898, 1899, 1900, 1904, 1905, 1908, 1910, 1911, 1913, 1914, 1920, 1923, 1927, 1933, 1935, 1940, 1945, 1946, 1948, 1949], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 29, 31, 33, 34, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 81, 82, 96, 97, 98, 99, 114, 167, 171, 212, 223, 226, 270, 331, 335, 337, 460, 461, 462, 463, 464, 473, 486, 496, 510, 513, 531, 534, 550, 558, 593, 594, 596, 597, 598, 600, 601, 616, 620, 630, 693, 699, 702, 703, 704, 706, 708, 709, 710, 712, 748, 769, 773, 777, 792, 794, 798, 807, 808, 830, 833, 834, 835, 838, 867, 871, 874, 878, 887, 888, 889, 890, 891, 892, 893, 902, 904, 905, 906, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 934, 935, 937, 944, 946, 947, 948, 950, 954, 956, 957, 958, 959, 960, 961, 968, 974, 977, 978, 979, 983, 984, 985, 988, 989, 991, 993, 996, 998, 1000, 1002, 1009, 1020, 1026, 1031, 1032, 1052, 1055, 1066, 1067, 1068, 1072, 1073, 1074, 1075, 1076, 1085, 1086, 1087, 1088, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1128, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1153, 1154, 1165, 1169, 1170, 1172, 1173, 1174, 1175, 1186, 1189, 1203, 1209, 1212, 1215, 1216, 1217, 1219, 1221, 1223, 1224, 1227, 1228, 1231, 1232, 1233, 1237, 1241, 1242, 1247, 1248, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1274, 1275, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1294, 1298, 1299, 1301, 1303, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1329, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1392, 1393, 1396, 1397, 1398, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1431, 1435, 1436, 1437, 1438, 1439, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1458, 1459, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1476, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1499, 1500, 1501, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1543, 1545, 1547, 1554, 1555, 1560, 1562, 1564, 1565, 1567, 1568, 1569, 1578, 1579, 1580, 1583, 1586, 1587, 1593, 1599, 1600, 1611, 1612, 1624, 1625, 1628, 1629, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1660, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1675, 1676, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1718, 1723, 1727, 1729, 1730, 1734, 1735, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1750, 1751, 1756, 1758, 1761, 1765, 1767, 1769, 1772, 1773, 1778, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1806, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1821, 1824, 1825, 1826, 1829, 1830, 1844, 1845, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1862, 1863, 1865, 1866, 1867, 1868, 1872, 1877, 1878, 1879, 1882, 1885, 1887, 1889, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1950], "so": [0, 1, 2, 3, 7, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 33, 35, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 52, 59, 60, 62, 65, 68, 69, 70, 72, 73, 351, 473, 510, 693, 872, 907, 912, 914, 915, 920, 963, 966, 987, 1010, 1073, 1075, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1136, 1138, 1141, 1145, 1146, 1148, 1149, 1199, 1209, 1212, 1215, 1216, 1221, 1223, 1225, 1267, 1269, 1279, 1284, 1289, 1301, 1322, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1388, 1391, 1398, 1444, 1460, 1477, 1479, 1495, 1508, 1518, 1519, 1520, 1543, 1599, 1600, 1615, 1624, 1670, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1795, 1809, 1821, 1826, 1830, 1850, 1862, 1866, 1882, 1884, 1885, 1891, 1893, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1930, 1934, 1935, 1939, 1940, 1942, 1944, 1945, 1947], "cast": [0, 6, 40, 57, 65, 100, 351, 616, 617, 951, 1066, 1067, 1212, 1264, 1268, 1281, 1311, 1339, 1342, 1444, 1562, 1599, 1600, 1671, 1727, 1806, 1809, 1815, 1829, 1834, 1835, 1882, 1904, 1919, 1923, 1940, 1941, 1942], "back": [0, 1, 2, 11, 17, 18, 19, 20, 33, 39, 40, 42, 44, 48, 59, 65, 70, 73, 74, 79, 82, 748, 850, 921, 963, 966, 1105, 1142, 1213, 1225, 1277, 1283, 1490, 1628, 1629, 1811, 1879, 1882, 1885, 1905, 1910, 1911, 1918, 1919, 1920, 1923, 1926, 1927, 1930, 1935, 1939, 1950], "from": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 24, 25, 27, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 56, 57, 59, 61, 62, 65, 66, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 84, 98, 105, 170, 171, 190, 213, 238, 239, 274, 302, 329, 331, 335, 337, 393, 418, 463, 469, 486, 488, 489, 496, 501, 502, 507, 513, 527, 529, 531, 557, 559, 573, 593, 620, 621, 623, 630, 693, 725, 726, 727, 728, 729, 730, 733, 741, 742, 745, 748, 751, 752, 753, 754, 755, 756, 758, 759, 769, 773, 777, 785, 786, 787, 794, 801, 802, 805, 806, 807, 810, 813, 828, 829, 830, 837, 839, 853, 867, 871, 873, 874, 875, 877, 878, 892, 893, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 926, 927, 935, 936, 944, 945, 950, 951, 963, 987, 988, 991, 1000, 1001, 1002, 1020, 1024, 1042, 1069, 1085, 1105, 1107, 1108, 1113, 1114, 1115, 1119, 1120, 1121, 1122, 1125, 1126, 1127, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1169, 1170, 1174, 1189, 1209, 1210, 1212, 1213, 1215, 1217, 1218, 1219, 1222, 1223, 1235, 1251, 1255, 1264, 1267, 1268, 1281, 1282, 1283, 1284, 1298, 1302, 1303, 1316, 1321, 1325, 1326, 1327, 1329, 1334, 1343, 1344, 1352, 1356, 1362, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1396, 1397, 1398, 1399, 1405, 1407, 1408, 1409, 1410, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1444, 1445, 1446, 1450, 1454, 1455, 1459, 1461, 1462, 1483, 1488, 1489, 1491, 1493, 1495, 1496, 1508, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1540, 1543, 1545, 1554, 1567, 1568, 1569, 1581, 1611, 1615, 1624, 1628, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1651, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1668, 1672, 1678, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1719, 1722, 1730, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1751, 1752, 1755, 1757, 1758, 1765, 1778, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1827, 1831, 1841, 1844, 1853, 1855, 1857, 1862, 1863, 1865, 1866, 1875, 1880, 1882, 1883, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1903, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1926, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1940, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950], "alreadi": [0, 1, 11, 15, 31, 39, 40, 42, 43, 59, 60, 65, 72, 73, 212, 223, 226, 478, 501, 537, 593, 616, 617, 805, 853, 867, 871, 892, 996, 1022, 1212, 1221, 1283, 1444, 1619, 1624, 1657, 1700, 1860, 1862, 1879, 1882, 1892, 1894, 1898, 1899, 1904, 1905, 1908, 1910, 1913, 1918, 1923, 1926, 1927, 1930, 1936, 1937, 1939, 1941, 1943], "incur": [0, 5, 40, 42, 65, 956, 1918, 1935], "addit": [0, 1, 3, 5, 7, 9, 11, 14, 16, 17, 23, 24, 29, 33, 34, 39, 42, 43, 44, 48, 53, 59, 60, 65, 72, 73, 74, 82, 351, 527, 620, 762, 764, 765, 766, 767, 771, 773, 794, 808, 827, 872, 1042, 1209, 1212, 1216, 1221, 1226, 1352, 1363, 1364, 1365, 1375, 1376, 1377, 1388, 1395, 1396, 1398, 1405, 1408, 1409, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1434, 1440, 1441, 1442, 1444, 1450, 1452, 1477, 1479, 1483, 1487, 1491, 1493, 1514, 1521, 1522, 1523, 1560, 1624, 1689, 1862, 1863, 1870, 1882, 1884, 1885, 1891, 1895, 1898, 1899, 1900, 1905, 1907, 1908, 1910, 1911, 1915, 1918, 1919, 1922, 1923, 1924, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1943, 1946], "overhead": [0, 1, 3, 4, 8, 11, 15, 16, 18, 19, 20, 22, 40, 42, 65, 794, 966, 1042, 1223, 1624, 1907, 1908, 1909, 1914, 1915, 1918, 1928, 1929, 1936, 1939, 1945], "here": [0, 1, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 29, 34, 36, 39, 40, 42, 43, 48, 58, 60, 67, 68, 69, 70, 72, 73, 99, 593, 806, 807, 982, 994, 1085, 1102, 1104, 1105, 1110, 1111, 1112, 1114, 1115, 1120, 1122, 1141, 1151, 1210, 1223, 1362, 1363, 1364, 1375, 1376, 1377, 1407, 1408, 1409, 1452, 1483, 1543, 1545, 1633, 1697, 1700, 1711, 1798, 1879, 1882, 1884, 1885, 1887, 1898, 1899, 1900, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1922, 1923, 1926, 1927, 1928, 1930, 1933, 1939, 1943, 1944, 1946], "assum": [0, 13, 14, 23, 31, 39, 42, 47, 48, 50, 52, 59, 60, 65, 68, 71, 73, 830, 1068, 1103, 1106, 1108, 1116, 1117, 1118, 1121, 1203, 1209, 1210, 1213, 1227, 1247, 1248, 1250, 1257, 1266, 1269, 1272, 1274, 1284, 1367, 1436, 1496, 1527, 1593, 1624, 1633, 1636, 1661, 1701, 1702, 1707, 1708, 1709, 1712, 1714, 1715, 1719, 1831, 1851, 1853, 1879, 1882, 1884, 1885, 1898, 1905, 1908, 1910, 1911, 1913, 1915, 1918, 1919, 1923, 1926, 1927, 1928, 1935, 1936, 1937, 1939], "a_float32": 0, "rand": [0, 1, 25, 36, 48, 73, 351, 706, 712, 914, 915, 916, 917, 918, 919, 984, 1028, 1029, 1102, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1122, 1143, 1218, 1223, 1227, 1228, 1229, 1285, 1286, 1288, 1360, 1410, 1487, 1488, 1489, 1490, 1491, 1515, 1534, 1535, 1593, 1624, 1636, 1669, 1722, 1733, 1734, 1735, 1739, 1881, 1882, 1883, 1884, 1885, 1887, 1898, 1899, 1923, 1925, 1928, 1930, 1935, 1936, 1939, 1940, 1943, 1944, 1947], "8": [0, 1, 13, 20, 29, 33, 38, 39, 40, 42, 48, 50, 74, 79, 329, 331, 333, 337, 417, 418, 486, 527, 531, 573, 620, 630, 698, 699, 710, 711, 758, 759, 774, 776, 778, 786, 787, 833, 834, 835, 838, 917, 937, 945, 956, 959, 960, 964, 1028, 1029, 1064, 1068, 1083, 1088, 1101, 1117, 1118, 1124, 1125, 1128, 1135, 1165, 1174, 1175, 1235, 1264, 1267, 1268, 1269, 1277, 1279, 1282, 1283, 1343, 1344, 1349, 1350, 1351, 1353, 1354, 1355, 1368, 1379, 1414, 1440, 1441, 1447, 1449, 1451, 1458, 1459, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1483, 1487, 1488, 1489, 1490, 1491, 1495, 1519, 1522, 1525, 1581, 1586, 1591, 1592, 1593, 1671, 1672, 1678, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1705, 1713, 1718, 1722, 1726, 1746, 1756, 1757, 1758, 1765, 1778, 1785, 1788, 1793, 1799, 1803, 1810, 1812, 1813, 1818, 1826, 1830, 1840, 1845, 1846, 1847, 1849, 1851, 1860, 1865, 1866, 1873, 1882, 1886, 1892, 1908, 1910, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1933, 1935, 1939, 1940, 1942, 1943, 1945], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 22, 958, 959, 1216, 1267, 1306, 1454, 1455, 1729, 1830, 1865, 1881, 1883, 1884, 1898, 1904, 1907, 1910, 1919, 1925, 1939], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 19, 20, 21, 22, 25, 28, 29, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 50, 59, 61, 65, 70, 72, 73, 74, 75, 79, 80, 81, 82, 97, 201, 257, 318, 460, 462, 464, 591, 596, 597, 598, 602, 632, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 805, 806, 811, 827, 828, 829, 830, 851, 867, 874, 892, 899, 900, 901, 948, 949, 952, 956, 960, 965, 966, 968, 972, 1012, 1018, 1070, 1083, 1085, 1086, 1125, 1139, 1151, 1165, 1175, 1212, 1216, 1218, 1223, 1225, 1227, 1228, 1311, 1313, 1342, 1381, 1387, 1416, 1444, 1446, 1455, 1472, 1483, 1494, 1534, 1608, 1624, 1625, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1671, 1675, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1707, 1709, 1710, 1711, 1713, 1714, 1732, 1734, 1735, 1738, 1742, 1757, 1794, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1824, 1825, 1829, 1844, 1845, 1846, 1862, 1863, 1865, 1867, 1868, 1873, 1877, 1879, 1882, 1883, 1886, 1887, 1891, 1893, 1895, 1898, 1899, 1900, 1910, 1914, 1916, 1919, 1920, 1921, 1925, 1926, 1927, 1928, 1929, 1930, 1935, 1936, 1939, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950], "No": [0, 9, 11, 62, 72, 913, 1624, 1669, 1884, 1908, 1923, 1933, 1943, 1946], "manual": [0, 11, 14, 24, 39, 42, 57, 59, 60, 62, 65, 73, 810, 851, 891, 920, 1174, 1216, 1360, 1361, 1380, 1448, 1449, 1451, 1472, 1491, 1515, 1516, 1526, 1578, 1636, 1657, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1882, 1885, 1897, 1904, 1908, 1910, 1911, 1912, 1913, 1916, 1922, 1923, 1930, 1931, 1944], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 15, 16, 17, 19, 20, 23, 31, 33, 39, 40, 42, 43, 44, 46, 50, 51, 52, 59, 60, 65, 72, 73, 502, 853, 903, 913, 926, 927, 968, 979, 988, 1003, 1030, 1043, 1085, 1131, 1132, 1153, 1212, 1242, 1381, 1444, 1491, 1493, 1543, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1749, 1795, 1831, 1872, 1879, 1895, 1897, 1899, 1908, 1910, 1911, 1912, 1913, 1918, 1923, 1927, 1930, 1935, 1937, 1946, 1947], "f_float16": 0, "g_float32": 0, "epoch": [0, 39, 52, 62, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1895, 1904, 1918, 1926, 1944], "eval": [0, 73, 827, 873, 874, 1151, 1212, 1216, 1221, 1227, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1450, 1483, 1491, 1632, 1885, 1893, 1916, 1923, 1930, 1949, 1950], "jit": [0, 12, 14, 19, 26, 27, 31, 33, 1028, 1029, 1060, 1162, 1210, 1211, 1212, 1226, 1680, 1681, 1776, 1777, 1880, 1884, 1887, 1893, 1899, 1907, 1915, 1921, 1923, 1930, 1935, 1944], "trace": [0, 1, 5, 12, 14, 15, 16, 18, 19, 20, 22, 23, 27, 29, 34, 36, 39, 40, 42, 52, 74, 77, 78, 79, 80, 86, 87, 88, 693, 928, 929, 930, 966, 1085, 1215, 1223, 1224, 1228, 1284, 1325, 1326, 1327, 1682, 1880, 1883, 1884, 1885, 1887, 1891, 1905, 1908, 1909, 1921, 1925, 1927, 1944], "testmodel": 0, "__init__": [0, 1, 12, 14, 25, 28, 29, 39, 40, 42, 48, 65, 73, 74, 79, 81, 82, 83, 874, 875, 1151, 1210, 1213, 1215, 1218, 1223, 1227, 1228, 1229, 1444, 1445, 1446, 1454, 1455, 1615, 1882, 1884, 1885, 1895, 1905, 1910, 1912, 1916, 1921, 1923, 1927, 1930, 1944], "input_s": [0, 747, 773, 774, 778, 1396, 1397, 1414, 1415, 1459, 1460, 1461, 1883], "num_class": [0, 19, 1580, 1883], "super": [0, 9, 12, 17, 25, 28, 29, 39, 40, 42, 44, 73, 74, 79, 81, 82, 83, 874, 875, 1151, 1210, 1215, 1218, 1223, 1227, 1228, 1229, 1444, 1445, 1446, 1454, 1455, 1456, 1457, 1615, 1711, 1882, 1884, 1885, 1886, 1905, 1910, 1916, 1921, 1923, 1927, 1930], "fc1": [0, 40, 1615, 1928], "x": [0, 1, 3, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 29, 31, 33, 39, 40, 42, 48, 50, 56, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 190, 270, 274, 302, 305, 327, 329, 331, 333, 337, 368, 393, 463, 498, 507, 513, 571, 573, 596, 620, 621, 630, 705, 771, 773, 783, 792, 793, 797, 798, 809, 812, 815, 833, 834, 874, 875, 891, 897, 899, 900, 901, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 948, 949, 950, 953, 954, 966, 977, 980, 983, 984, 1028, 1029, 1068, 1075, 1079, 1080, 1085, 1089, 1099, 1100, 1101, 1102, 1104, 1105, 1110, 1111, 1113, 1115, 1119, 1120, 1122, 1125, 1126, 1127, 1135, 1141, 1143, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1165, 1182, 1186, 1187, 1199, 1217, 1218, 1222, 1223, 1226, 1227, 1228, 1229, 1233, 1243, 1256, 1257, 1261, 1264, 1268, 1272, 1274, 1277, 1278, 1279, 1280, 1281, 1284, 1289, 1290, 1291, 1299, 1302, 1305, 1306, 1313, 1338, 1339, 1343, 1344, 1350, 1351, 1360, 1361, 1362, 1363, 1364, 1366, 1378, 1380, 1386, 1392, 1393, 1394, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1430, 1433, 1434, 1435, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1455, 1459, 1461, 1462, 1463, 1464, 1471, 1473, 1474, 1475, 1476, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1492, 1493, 1496, 1517, 1541, 1543, 1547, 1548, 1554, 1558, 1562, 1573, 1578, 1583, 1587, 1589, 1594, 1595, 1596, 1600, 1601, 1603, 1604, 1605, 1612, 1615, 1632, 1634, 1636, 1657, 1658, 1659, 1660, 1661, 1666, 1669, 1670, 1671, 1678, 1681, 1684, 1705, 1719, 1720, 1731, 1733, 1747, 1750, 1751, 1753, 1754, 1756, 1757, 1761, 1765, 1775, 1803, 1807, 1821, 1824, 1825, 1826, 1832, 1833, 1839, 1845, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1863, 1864, 1866, 1867, 1868, 1870, 1871, 1872, 1875, 1879, 1882, 1883, 1884, 1885, 1886, 1897, 1898, 1899, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1922, 1923, 1927, 1930, 1935, 1939, 1940, 1942, 1944, 1945, 1947, 1948, 1949], "2": [0, 1, 3, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 25, 28, 31, 33, 36, 37, 38, 39, 40, 42, 43, 46, 48, 49, 50, 52, 57, 59, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 190, 208, 225, 242, 250, 270, 276, 329, 331, 333, 337, 351, 393, 417, 418, 460, 461, 462, 463, 464, 496, 502, 507, 510, 513, 527, 529, 531, 557, 571, 573, 593, 594, 596, 597, 598, 600, 601, 602, 620, 630, 693, 694, 696, 697, 698, 699, 702, 703, 704, 705, 706, 708, 710, 711, 712, 747, 751, 752, 753, 754, 755, 756, 758, 759, 768, 771, 773, 775, 806, 809, 833, 878, 887, 888, 889, 890, 891, 892, 893, 897, 899, 900, 901, 903, 912, 914, 915, 916, 917, 918, 919, 926, 927, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 956, 957, 958, 959, 960, 964, 965, 974, 977, 978, 979, 980, 983, 984, 985, 1059, 1064, 1067, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1095, 1098, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1142, 1143, 1146, 1147, 1148, 1152, 1153, 1154, 1155, 1156, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1186, 1187, 1189, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1215, 1216, 1221, 1223, 1225, 1227, 1231, 1232, 1233, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1288, 1289, 1290, 1291, 1298, 1300, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1329, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1348, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1405, 1412, 1413, 1414, 1415, 1416, 1430, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1449, 1450, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1474, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1508, 1510, 1515, 1516, 1527, 1534, 1535, 1541, 1543, 1545, 1547, 1554, 1560, 1567, 1568, 1569, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1593, 1609, 1615, 1624, 1628, 1631, 1632, 1636, 1648, 1649, 1650, 1651, 1653, 1654, 1657, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1708, 1712, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1740, 1742, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1761, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1775, 1778, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1799, 1803, 1804, 1805, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1839, 1840, 1842, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1877, 1878, 1880, 1881, 1883, 1884, 1885, 1886, 1892, 1893, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1910, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1949], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 39, 40, 42, 44, 46, 47, 48, 49, 50, 59, 60, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 100, 510, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 792, 798, 801, 802, 804, 806, 807, 851, 870, 872, 874, 875, 878, 906, 907, 910, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 935, 944, 966, 985, 1042, 1085, 1103, 1105, 1106, 1107, 1108, 1115, 1120, 1121, 1122, 1136, 1145, 1146, 1148, 1153, 1165, 1169, 1170, 1186, 1210, 1212, 1215, 1216, 1223, 1225, 1227, 1267, 1270, 1275, 1283, 1284, 1303, 1334, 1352, 1360, 1361, 1410, 1444, 1496, 1543, 1545, 1554, 1612, 1619, 1624, 1631, 1633, 1642, 1644, 1647, 1651, 1652, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1702, 1708, 1713, 1730, 1872, 1879, 1880, 1882, 1884, 1885, 1887, 1889, 1892, 1893, 1897, 1898, 1899, 1900, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1942, 1944, 1947, 1948, 1949], "suggest": [0, 9, 22, 29, 40, 66, 96, 97, 98, 99, 1378, 1879, 1887, 1904, 1905, 1912, 1939], "issu": [0, 2, 3, 5, 9, 10, 11, 16, 17, 18, 21, 27, 31, 33, 38, 39, 42, 49, 65, 66, 68, 70, 73, 74, 98, 99, 914, 920, 966, 968, 969, 1136, 1147, 1149, 1153, 1257, 1301, 1313, 1410, 1414, 1440, 1441, 1442, 1459, 1496, 1554, 1555, 1668, 1769, 1872, 1879, 1880, 1885, 1887, 1892, 1897, 1898, 1899, 1900, 1904, 1905, 1908, 1910, 1918, 1919, 1920, 1922, 1923, 1927, 1930, 1931, 1935, 1939, 1940, 1942], "http": [0, 2, 3, 4, 7, 9, 18, 19, 22, 27, 28, 33, 34, 40, 41, 42, 47, 48, 59, 60, 65, 167, 693, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 805, 806, 906, 966, 1085, 1142, 1284, 1313, 1367, 1414, 1440, 1441, 1442, 1462, 1463, 1487, 1490, 1493, 1668, 1719, 1736, 1769, 1794, 1865, 1879, 1886, 1894, 1896, 1905, 1906, 1910, 1913, 1914, 1916, 1920, 1922, 1923, 1927, 1929, 1942, 1944, 1951], "github": [0, 7, 9, 16, 22, 27, 28, 29, 33, 41, 42, 55, 65, 66, 70, 167, 805, 806, 906, 920, 1142, 1313, 1440, 1441, 1442, 1487, 1668, 1705, 1769, 1879, 1887, 1892, 1910, 1913, 1920, 1923, 1929, 1930, 1939, 1940, 1942], "com": [0, 7, 22, 27, 28, 33, 41, 42, 58, 60, 65, 167, 805, 806, 906, 1142, 1313, 1440, 1441, 1442, 1487, 1668, 1769, 1865, 1879, 1894, 1896, 1910, 1913, 1914, 1920, 1922, 1923, 1929, 1942], "pytorch": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 18, 20, 21, 25, 26, 27, 28, 31, 32, 33, 35, 36, 39, 40, 44, 45, 46, 47, 48, 49, 50, 52, 59, 60, 65, 66, 69, 71, 73, 74, 96, 97, 98, 99, 100, 102, 103, 167, 527, 596, 693, 711, 743, 744, 745, 746, 758, 759, 769, 773, 774, 775, 776, 777, 778, 805, 806, 823, 824, 825, 826, 893, 906, 951, 956, 957, 966, 967, 985, 1010, 1011, 1022, 1027, 1085, 1130, 1136, 1142, 1143, 1147, 1152, 1153, 1158, 1198, 1199, 1222, 1242, 1253, 1255, 1256, 1257, 1260, 1273, 1282, 1298, 1301, 1302, 1313, 1360, 1361, 1367, 1396, 1410, 1440, 1441, 1442, 1487, 1516, 1593, 1624, 1657, 1665, 1666, 1668, 1671, 1678, 1682, 1729, 1761, 1769, 1770, 1780, 1826, 1830, 1853, 1865, 1872, 1879, 1881, 1884, 1885, 1889, 1891, 1892, 1894, 1895, 1899, 1900, 1901, 1906, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1922, 1926, 1927, 1929, 1930, 1931, 1932, 1935, 1936, 1939, 1940, 1942, 1943, 1944, 1950, 1951], "75956": 0, "_c": [0, 39, 40, 42, 72, 914, 920, 1211, 1223, 1680, 1883, 1885, 1895, 1908, 1915, 1919, 1922, 1923], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 11, 16, 17, 18, 20, 23, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 65, 68, 73, 74, 79, 81, 82, 129, 130, 131, 132, 133, 135, 151, 152, 153, 167, 198, 199, 200, 213, 226, 276, 317, 334, 335, 337, 344, 348, 351, 352, 354, 358, 359, 360, 367, 370, 408, 412, 423, 425, 426, 427, 430, 436, 444, 445, 446, 447, 460, 461, 462, 463, 464, 468, 473, 475, 485, 486, 494, 509, 510, 518, 531, 555, 568, 569, 578, 593, 607, 616, 622, 623, 628, 630, 693, 706, 707, 708, 709, 710, 712, 725, 726, 727, 728, 729, 730, 747, 748, 758, 759, 764, 765, 766, 768, 771, 773, 781, 782, 789, 791, 792, 793, 795, 796, 798, 810, 827, 832, 833, 834, 835, 837, 838, 839, 851, 852, 870, 871, 876, 878, 887, 888, 889, 893, 906, 907, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 930, 933, 935, 938, 941, 943, 944, 950, 951, 957, 958, 959, 965, 966, 977, 988, 1026, 1031, 1043, 1085, 1086, 1087, 1088, 1090, 1091, 1098, 1102, 1103, 1104, 1105, 1110, 1111, 1116, 1117, 1118, 1120, 1121, 1122, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1147, 1148, 1150, 1152, 1154, 1156, 1168, 1169, 1170, 1173, 1174, 1187, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1217, 1218, 1219, 1227, 1228, 1229, 1231, 1233, 1236, 1241, 1242, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1275, 1276, 1281, 1282, 1283, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1303, 1305, 1309, 1311, 1312, 1314, 1317, 1325, 1326, 1334, 1339, 1340, 1341, 1342, 1345, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1429, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1453, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1471, 1473, 1475, 1476, 1483, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1496, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1538, 1539, 1540, 1543, 1545, 1547, 1548, 1549, 1554, 1555, 1558, 1564, 1565, 1567, 1568, 1569, 1573, 1578, 1582, 1586, 1588, 1589, 1591, 1592, 1593, 1594, 1596, 1606, 1609, 1610, 1612, 1624, 1626, 1628, 1631, 1633, 1636, 1637, 1649, 1658, 1659, 1660, 1661, 1663, 1666, 1669, 1670, 1671, 1675, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1727, 1729, 1730, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1753, 1754, 1761, 1765, 1773, 1774, 1775, 1778, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1803, 1812, 1813, 1814, 1815, 1816, 1817, 1824, 1825, 1826, 1829, 1830, 1844, 1848, 1853, 1862, 1865, 1866, 1867, 1868, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1904, 1905, 1908, 1909, 1910, 1912, 1916, 1919, 1920, 1923, 1924, 1927, 1928, 1929, 1931, 1934, 1935, 1939, 1940, 1941, 1943, 1944, 1946, 1947, 1949, 1950], "randn": [0, 1, 11, 12, 16, 19, 20, 21, 25, 27, 29, 31, 42, 48, 67, 69, 70, 71, 73, 74, 76, 81, 82, 305, 327, 498, 557, 593, 597, 598, 599, 600, 601, 602, 630, 696, 697, 698, 699, 700, 701, 702, 703, 708, 709, 712, 733, 741, 742, 747, 751, 752, 753, 754, 755, 756, 769, 771, 773, 774, 775, 776, 777, 778, 785, 786, 787, 874, 875, 887, 888, 889, 891, 894, 895, 896, 897, 898, 934, 946, 953, 955, 956, 957, 958, 959, 961, 979, 980, 981, 982, 983, 985, 1064, 1065, 1066, 1067, 1072, 1073, 1074, 1075, 1079, 1085, 1099, 1100, 1129, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1182, 1186, 1189, 1223, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1287, 1291, 1292, 1299, 1301, 1302, 1303, 1305, 1306, 1309, 1311, 1312, 1314, 1316, 1317, 1318, 1319, 1332, 1333, 1336, 1346, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1470, 1471, 1473, 1474, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1492, 1494, 1495, 1499, 1500, 1501, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1538, 1539, 1545, 1578, 1584, 1585, 1674, 1678, 1720, 1725, 1726, 1727, 1729, 1730, 1743, 1747, 1748, 1760, 1796, 1798, 1803, 1808, 1811, 1819, 1820, 1829, 1830, 1839, 1842, 1843, 1846, 1850, 1853, 1854, 1856, 1859, 1861, 1865, 1870, 1871, 1872, 1875, 1881, 1883, 1884, 1885, 1887, 1898, 1899, 1900, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1916, 1920, 1921, 1923, 1925, 1927, 1930, 1935, 1939, 1940, 1942, 1944, 1947, 1949], "1": [0, 1, 3, 11, 12, 13, 14, 16, 17, 19, 20, 22, 25, 28, 29, 31, 33, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 59, 62, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 153, 168, 169, 190, 208, 222, 225, 242, 244, 245, 246, 258, 270, 274, 279, 302, 305, 327, 328, 329, 331, 333, 337, 368, 393, 417, 418, 460, 462, 463, 469, 486, 496, 498, 502, 507, 510, 513, 527, 529, 531, 550, 551, 555, 557, 567, 568, 569, 571, 573, 574, 575, 576, 577, 594, 596, 597, 598, 600, 601, 620, 621, 628, 630, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 743, 744, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 759, 764, 765, 766, 769, 770, 771, 773, 783, 785, 786, 787, 788, 791, 795, 796, 798, 809, 821, 822, 832, 833, 834, 835, 838, 840, 868, 874, 875, 878, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 903, 907, 910, 912, 913, 914, 915, 916, 917, 918, 919, 926, 927, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 964, 965, 967, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 997, 1028, 1029, 1044, 1048, 1055, 1059, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1182, 1183, 1186, 1187, 1189, 1197, 1199, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1216, 1222, 1223, 1227, 1228, 1231, 1232, 1233, 1235, 1236, 1237, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1257, 1258, 1259, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1317, 1318, 1319, 1329, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1486, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1508, 1510, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1532, 1533, 1534, 1535, 1537, 1538, 1539, 1541, 1542, 1543, 1545, 1547, 1549, 1550, 1551, 1552, 1553, 1561, 1563, 1567, 1568, 1569, 1575, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1587, 1591, 1592, 1593, 1594, 1595, 1597, 1599, 1600, 1601, 1603, 1608, 1609, 1610, 1611, 1612, 1615, 1624, 1631, 1632, 1636, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1722, 1723, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1765, 1768, 1769, 1770, 1771, 1772, 1774, 1775, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1798, 1799, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1881, 1883, 1884, 1885, 1886, 1889, 1892, 1893, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1932, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951], "freez": [0, 1212, 1221, 1387, 1388, 1444, 1905], "_": [0, 1, 3, 12, 20, 25, 29, 39, 40, 42, 43, 46, 52, 71, 73, 694, 696, 697, 711, 878, 894, 895, 896, 897, 898, 907, 913, 936, 955, 978, 979, 981, 982, 984, 1129, 1134, 1148, 1152, 1178, 1232, 1240, 1291, 1299, 1362, 1363, 1364, 1407, 1408, 1409, 1483, 1624, 1632, 1665, 1697, 1699, 1719, 1742, 1745, 1748, 1760, 1775, 1781, 1783, 1789, 1796, 1798, 1819, 1830, 1842, 1843, 1905, 1908, 1911, 1912, 1916, 1922, 1926, 1927, 1929, 1940], "3": [0, 1, 3, 4, 6, 9, 11, 13, 16, 17, 19, 20, 22, 24, 25, 27, 28, 29, 31, 36, 37, 39, 40, 42, 44, 46, 48, 49, 50, 52, 57, 59, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 208, 225, 270, 276, 305, 329, 331, 333, 337, 417, 418, 460, 461, 462, 463, 464, 486, 502, 507, 510, 513, 527, 529, 531, 550, 557, 571, 573, 594, 596, 597, 598, 600, 601, 620, 630, 693, 694, 698, 699, 700, 701, 702, 703, 704, 705, 706, 710, 711, 712, 747, 751, 752, 753, 754, 755, 756, 759, 761, 770, 773, 774, 775, 776, 778, 785, 786, 787, 798, 806, 837, 874, 875, 878, 888, 889, 891, 892, 893, 900, 901, 914, 915, 916, 917, 918, 919, 934, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 952, 953, 954, 956, 957, 958, 959, 960, 964, 965, 974, 977, 978, 983, 984, 985, 1028, 1029, 1031, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1098, 1101, 1106, 1109, 1113, 1119, 1124, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1143, 1148, 1149, 1151, 1153, 1154, 1155, 1156, 1165, 1168, 1171, 1172, 1173, 1174, 1175, 1177, 1178, 1186, 1187, 1189, 1197, 1199, 1201, 1203, 1212, 1216, 1218, 1221, 1223, 1227, 1228, 1232, 1233, 1234, 1235, 1236, 1237, 1241, 1243, 1244, 1245, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1289, 1292, 1294, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1357, 1358, 1359, 1360, 1361, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1380, 1387, 1388, 1391, 1392, 1393, 1394, 1396, 1397, 1399, 1401, 1402, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1447, 1449, 1451, 1456, 1457, 1459, 1461, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1477, 1478, 1479, 1483, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1508, 1510, 1515, 1516, 1519, 1520, 1522, 1523, 1526, 1534, 1535, 1538, 1539, 1541, 1543, 1547, 1548, 1554, 1562, 1578, 1580, 1581, 1584, 1585, 1591, 1592, 1599, 1600, 1612, 1624, 1632, 1646, 1648, 1650, 1651, 1652, 1653, 1657, 1659, 1660, 1661, 1662, 1665, 1670, 1671, 1672, 1674, 1675, 1676, 1678, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1708, 1711, 1712, 1714, 1718, 1720, 1722, 1726, 1727, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1742, 1744, 1745, 1746, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1761, 1765, 1769, 1770, 1771, 1778, 1781, 1783, 1785, 1787, 1788, 1789, 1793, 1794, 1795, 1803, 1805, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1821, 1829, 1830, 1832, 1833, 1839, 1840, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1869, 1872, 1873, 1874, 1875, 1877, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1913, 1916, 1917, 1921, 1922, 1923, 1926, 1927, 1930, 1932, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1945, 1946, 1947], "bug": [0, 16, 29, 33, 36, 42, 73, 1145, 1146, 1148, 1301, 1904, 1918, 1939], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 72, 73, 74, 76, 81, 82, 96, 97, 98, 99, 100, 101, 136, 167, 171, 212, 213, 223, 226, 238, 239, 240, 271, 276, 305, 306, 329, 337, 339, 351, 353, 356, 368, 460, 461, 462, 463, 464, 473, 501, 502, 507, 509, 510, 511, 512, 513, 514, 517, 518, 527, 529, 531, 537, 569, 579, 596, 597, 598, 600, 601, 602, 616, 617, 627, 630, 631, 693, 697, 699, 702, 706, 707, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 748, 749, 750, 757, 761, 762, 763, 764, 765, 766, 767, 768, 770, 772, 773, 788, 789, 790, 791, 792, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 812, 813, 815, 823, 824, 825, 826, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 867, 872, 874, 875, 887, 888, 889, 890, 891, 898, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 926, 927, 930, 933, 934, 937, 939, 942, 946, 947, 954, 956, 957, 960, 961, 963, 966, 968, 969, 970, 971, 973, 977, 978, 980, 985, 986, 987, 988, 989, 991, 992, 993, 996, 1007, 1009, 1012, 1013, 1014, 1016, 1017, 1020, 1021, 1022, 1023, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1038, 1041, 1042, 1043, 1049, 1050, 1052, 1053, 1054, 1058, 1059, 1060, 1066, 1067, 1068, 1073, 1075, 1076, 1080, 1083, 1084, 1085, 1089, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1136, 1138, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1155, 1157, 1158, 1159, 1165, 1169, 1175, 1177, 1187, 1199, 1209, 1210, 1212, 1213, 1215, 1217, 1218, 1219, 1221, 1222, 1223, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1287, 1289, 1292, 1301, 1302, 1306, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1318, 1325, 1326, 1336, 1339, 1340, 1341, 1342, 1344, 1352, 1356, 1360, 1361, 1362, 1363, 1364, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1392, 1393, 1396, 1397, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1429, 1431, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1450, 1451, 1454, 1456, 1459, 1460, 1472, 1475, 1477, 1480, 1483, 1489, 1490, 1491, 1492, 1495, 1496, 1497, 1498, 1508, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1543, 1545, 1547, 1554, 1560, 1562, 1567, 1568, 1569, 1579, 1581, 1583, 1593, 1599, 1600, 1608, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1657, 1658, 1659, 1660, 1661, 1664, 1665, 1666, 1668, 1669, 1671, 1672, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1708, 1709, 1711, 1713, 1715, 1717, 1718, 1719, 1723, 1727, 1729, 1736, 1740, 1745, 1749, 1751, 1758, 1765, 1767, 1768, 1769, 1771, 1772, 1773, 1775, 1778, 1780, 1781, 1799, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1822, 1824, 1825, 1826, 1829, 1830, 1832, 1833, 1839, 1841, 1845, 1847, 1851, 1853, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "what": [0, 1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 20, 21, 27, 29, 42, 47, 48, 52, 56, 57, 65, 67, 69, 70, 73, 74, 905, 1146, 1227, 1228, 1301, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1438, 1439, 1472, 1495, 1567, 1568, 1569, 1593, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1730, 1879, 1880, 1882, 1884, 1885, 1898, 1910, 1911, 1913, 1916, 1918, 1923, 1926, 1929, 1930, 1935, 1936, 1939], "observ": [0, 11, 16, 25, 29, 40, 50, 59, 769, 802, 803, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 821, 822, 824, 826, 828, 830, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 854, 872, 874, 875, 877, 980, 984, 1225, 1313, 1360, 1361, 1362, 1363, 1364, 1378, 1380, 1404, 1407, 1408, 1409, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1483, 1492, 1515, 1516, 1526, 1555, 1578, 1586, 1904, 1905, 1908, 1909, 1915, 1918, 1931, 1949], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 12, 15, 21, 24, 27, 29, 31, 34, 40, 42, 48, 51, 54, 55, 59, 60, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 100, 270, 271, 512, 527, 631, 702, 743, 744, 745, 746, 747, 748, 754, 755, 756, 758, 759, 769, 774, 775, 776, 777, 778, 874, 875, 905, 907, 908, 909, 914, 916, 917, 920, 948, 1068, 1141, 1145, 1146, 1147, 1148, 1149, 1153, 1212, 1275, 1306, 1316, 1367, 1375, 1410, 1444, 1543, 1554, 1555, 1560, 1581, 1593, 1611, 1624, 1665, 1666, 1668, 1707, 1769, 1872, 1887, 1892, 1898, 1899, 1900, 1901, 1904, 1905, 1910, 1911, 1914, 1919, 1920, 1922, 1923, 1926, 1927, 1930, 1933, 1935, 1936, 1939, 1940, 1942, 1943, 1944, 1946], "file": [0, 1, 3, 6, 7, 9, 12, 14, 16, 17, 22, 24, 25, 31, 33, 36, 39, 44, 50, 52, 57, 59, 61, 68, 70, 73, 914, 920, 928, 929, 987, 1024, 1145, 1146, 1148, 1149, 1187, 1219, 1222, 1283, 1681, 1761, 1805, 1879, 1882, 1885, 1886, 1887, 1894, 1898, 1899, 1900, 1905, 1908, 1910, 1915, 1918, 1920, 1921, 1922, 1923, 1929, 1933, 1936, 1939, 1941, 1944], "subregion": 0, "nest": [0, 1, 5, 33, 44, 65, 73, 74, 77, 81, 82, 602, 806, 828, 830, 907, 916, 1046, 1047, 1143, 1153, 1212, 1215, 1227, 1444, 1450, 1490, 1491, 1678, 1682, 1872, 1880, 1911, 1923, 1929, 1935], "local": [0, 13, 16, 20, 29, 42, 44, 46, 47, 50, 57, 59, 60, 61, 62, 65, 73, 933, 1028, 1089, 1142, 1187, 1212, 1284, 1383, 1384, 1385, 1389, 1391, 1432, 1444, 1495, 1537, 1561, 1611, 1624, 1625, 1669, 1775, 1805, 1879, 1880, 1884, 1897, 1904, 1908, 1909, 1912, 1923, 1927, 1928, 1932, 1935, 1936, 1937, 1944], "want": [0, 1, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 27, 28, 33, 39, 42, 47, 48, 56, 65, 67, 68, 69, 70, 72, 73, 74, 463, 510, 513, 794, 804, 851, 1024, 1141, 1142, 1224, 1227, 1228, 1313, 1392, 1393, 1496, 1538, 1539, 1554, 1612, 1624, 1625, 1666, 1669, 1686, 1687, 1700, 1761, 1879, 1889, 1892, 1904, 1905, 1907, 1908, 1910, 1911, 1913, 1916, 1923, 1926, 1927, 1930, 1939, 1944, 1945, 1948], "forc": [0, 1, 11, 13, 18, 33, 36, 65, 473, 893, 966, 1024, 1215, 1226, 1230, 1780, 1879, 1882, 1885, 1904, 1908, 1944, 1947], "particular": [0, 3, 7, 11, 15, 16, 17, 18, 29, 39, 44, 50, 56, 59, 60, 65, 73, 74, 79, 82, 573, 693, 874, 875, 966, 1059, 1153, 1212, 1306, 1381, 1444, 1678, 1872, 1882, 1884, 1892, 1900, 1908, 1910, 1912, 1915, 1916, 1919, 1923, 1926, 1939, 1941, 1947, 1950], "give": [0, 3, 4, 7, 9, 11, 14, 15, 17, 19, 21, 24, 29, 36, 39, 40, 44, 46, 58, 65, 73, 921, 922, 984, 1103, 1105, 1106, 1108, 1112, 1121, 1145, 1146, 1147, 1225, 1241, 1248, 1372, 1373, 1374, 1449, 1495, 1496, 1631, 1670, 1686, 1687, 1826, 1865, 1879, 1882, 1897, 1899, 1903, 1905, 1908, 1910, 1911, 1913, 1914, 1916, 1920, 1923, 1926, 1928, 1939, 1950], "explicit": [0, 8, 42, 65, 69, 73, 1020, 1165, 1199, 1555, 1769, 1846, 1879, 1880, 1881, 1885, 1886, 1898, 1904, 1908, 1910, 1927, 1942, 1943], "control": [0, 1, 2, 11, 12, 14, 19, 20, 33, 39, 40, 42, 43, 44, 48, 50, 55, 58, 59, 74, 80, 82, 768, 812, 871, 874, 889, 893, 907, 935, 944, 1072, 1073, 1074, 1075, 1076, 1169, 1170, 1223, 1224, 1225, 1227, 1242, 1248, 1250, 1253, 1255, 1258, 1260, 1264, 1270, 1273, 1275, 1281, 1301, 1352, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1430, 1438, 1439, 1495, 1593, 1624, 1717, 1773, 1774, 1788, 1803, 1805, 1810, 1826, 1830, 1848, 1854, 1855, 1856, 1857, 1880, 1882, 1891, 1905, 1907, 1908, 1909, 1916, 1918, 1919, 1921, 1923, 1926, 1930, 1937, 1939], "execut": [0, 1, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 18, 20, 22, 23, 26, 28, 29, 33, 34, 39, 42, 44, 46, 50, 51, 53, 60, 65, 70, 72, 73, 502, 926, 927, 966, 991, 1002, 1063, 1142, 1212, 1213, 1215, 1227, 1228, 1283, 1325, 1326, 1381, 1444, 1450, 1488, 1489, 1490, 1491, 1618, 1620, 1624, 1776, 1880, 1882, 1884, 1886, 1893, 1904, 1906, 1907, 1912, 1915, 1916, 1918, 1920, 1922, 1923, 1929, 1930, 1935, 1936, 1939], "surround": [0, 73, 803, 1884, 1904, 1908], "ensur": [0, 1, 4, 6, 7, 9, 11, 15, 16, 29, 39, 42, 43, 44, 46, 50, 59, 60, 62, 65, 72, 73, 496, 501, 748, 832, 910, 912, 973, 1142, 1212, 1356, 1437, 1444, 1447, 1448, 1487, 1543, 1567, 1568, 1569, 1593, 1624, 1777, 1879, 1882, 1884, 1892, 1894, 1897, 1904, 1905, 1908, 1910, 1911, 1913, 1918, 1920, 1927, 1930, 1931, 1935, 1936], "necessari": [0, 1, 3, 9, 16, 29, 33, 39, 44, 50, 59, 60, 65, 72, 105, 208, 225, 573, 602, 913, 1142, 1186, 1223, 1450, 1658, 1659, 1882, 1885, 1899, 1903, 1905, 1906, 1908, 1909, 1914, 1916, 1919, 1922, 1927, 1930, 1935, 1936, 1937, 1942], "becaus": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 19, 20, 25, 27, 29, 33, 39, 40, 42, 46, 48, 52, 65, 69, 70, 72, 73, 74, 81, 82, 510, 916, 921, 922, 1106, 1107, 1108, 1116, 1117, 1118, 1143, 1147, 1152, 1153, 1209, 1213, 1216, 1219, 1258, 1259, 1283, 1301, 1362, 1363, 1364, 1381, 1483, 1615, 1624, 1625, 1703, 1745, 1826, 1872, 1880, 1882, 1885, 1887, 1897, 1898, 1899, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1923, 1927, 1930, 1931, 1935, 1937, 1939, 1944, 1946, 1949, 1950], "wa": [0, 1, 3, 7, 15, 17, 19, 20, 21, 28, 36, 40, 42, 47, 57, 58, 59, 60, 65, 72, 73, 351, 501, 510, 693, 798, 805, 867, 956, 967, 988, 989, 1012, 1016, 1031, 1044, 1063, 1105, 1153, 1209, 1218, 1227, 1242, 1253, 1255, 1259, 1283, 1301, 1334, 1414, 1440, 1441, 1442, 1473, 1496, 1508, 1543, 1596, 1612, 1624, 1625, 1660, 1705, 1711, 1824, 1825, 1862, 1863, 1867, 1868, 1872, 1879, 1882, 1884, 1885, 1886, 1889, 1891, 1892, 1895, 1897, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1915, 1917, 1923, 1926, 1928, 1930, 1934, 1935, 1939, 1946], "f_float32": 0, "re": [0, 1, 4, 5, 7, 11, 14, 15, 16, 19, 21, 28, 29, 33, 39, 42, 46, 49, 56, 59, 65, 66, 67, 68, 69, 70, 72, 73, 946, 1136, 1212, 1216, 1444, 1599, 1625, 1660, 1756, 1809, 1882, 1885, 1892, 1897, 1904, 1905, 1908, 1910, 1911, 1913, 1918, 1930, 1936, 1937, 1940, 1950], "again": [0, 11, 14, 15, 20, 22, 36, 39, 42, 46, 50, 68, 1334, 1905, 1910, 1911, 1916], "regardless": [0, 16, 39, 58, 65, 978, 1216, 1221, 1862, 1904, 1908, 1921, 1935, 1946], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 25, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 65, 69, 70, 71, 72, 74, 81, 82, 86, 87, 88, 96, 97, 98, 99, 100, 105, 167, 208, 213, 225, 226, 238, 271, 306, 327, 329, 331, 335, 337, 414, 416, 417, 418, 463, 473, 498, 501, 502, 507, 509, 512, 513, 527, 529, 531, 550, 557, 596, 616, 630, 631, 693, 697, 700, 701, 702, 703, 707, 708, 709, 710, 748, 761, 770, 773, 779, 780, 781, 782, 785, 786, 787, 792, 793, 795, 796, 798, 799, 800, 805, 806, 807, 808, 812, 815, 828, 830, 832, 833, 834, 835, 838, 840, 850, 851, 867, 872, 877, 890, 891, 893, 897, 898, 902, 903, 905, 906, 907, 908, 909, 914, 915, 917, 918, 919, 920, 921, 922, 926, 927, 929, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 951, 952, 958, 965, 969, 971, 974, 980, 984, 987, 988, 994, 1001, 1017, 1028, 1029, 1031, 1032, 1033, 1042, 1055, 1056, 1057, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1085, 1086, 1090, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1133, 1135, 1136, 1137, 1138, 1139, 1142, 1145, 1148, 1151, 1152, 1153, 1156, 1157, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1178, 1182, 1186, 1189, 1209, 1212, 1215, 1217, 1219, 1222, 1223, 1225, 1227, 1228, 1231, 1232, 1236, 1237, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1257, 1258, 1259, 1261, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1274, 1275, 1276, 1278, 1281, 1283, 1284, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1312, 1320, 1321, 1324, 1325, 1326, 1329, 1330, 1334, 1340, 1343, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1387, 1388, 1389, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1434, 1435, 1436, 1437, 1438, 1439, 1444, 1447, 1449, 1451, 1458, 1459, 1461, 1462, 1472, 1473, 1475, 1483, 1486, 1487, 1492, 1493, 1495, 1496, 1508, 1511, 1512, 1526, 1527, 1534, 1535, 1536, 1538, 1539, 1542, 1543, 1545, 1554, 1555, 1567, 1568, 1569, 1578, 1581, 1593, 1596, 1612, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1650, 1651, 1654, 1660, 1664, 1665, 1668, 1670, 1671, 1672, 1678, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1719, 1720, 1723, 1726, 1729, 1734, 1735, 1736, 1738, 1740, 1742, 1747, 1749, 1751, 1753, 1754, 1756, 1758, 1761, 1768, 1769, 1770, 1771, 1778, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1805, 1807, 1808, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1824, 1825, 1826, 1830, 1831, 1840, 1846, 1847, 1848, 1850, 1851, 1854, 1855, 1856, 1857, 1864, 1865, 1866, 1867, 1868, 1870, 1872, 1875, 1879, 1882, 1883, 1884, 1886, 1887, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1951], "state": [0, 1, 2, 5, 9, 11, 13, 14, 15, 16, 23, 27, 39, 42, 44, 46, 48, 50, 52, 59, 62, 65, 73, 105, 761, 773, 849, 973, 1017, 1018, 1022, 1027, 1031, 1041, 1056, 1057, 1142, 1151, 1164, 1212, 1215, 1227, 1284, 1323, 1330, 1396, 1397, 1414, 1415, 1444, 1459, 1461, 1491, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1736, 1779, 1805, 1893, 1904, 1905, 1908, 1909, 1910, 1914, 1918, 1921, 1923, 1926, 1934, 1948], "thread": [0, 1, 3, 13, 39, 42, 44, 50, 61, 65, 72, 933, 988, 1089, 1162, 1163, 1187, 1381, 1669, 1775, 1776, 1777, 1880, 1882, 1895, 1904, 1908, 1915, 1918, 1935, 1937, 1947], "new": [0, 1, 5, 8, 11, 13, 14, 16, 20, 28, 29, 33, 36, 39, 41, 42, 44, 48, 50, 59, 60, 65, 66, 69, 70, 71, 72, 73, 100, 238, 270, 327, 463, 498, 502, 510, 513, 557, 593, 596, 630, 693, 697, 773, 804, 827, 832, 867, 892, 894, 895, 896, 897, 898, 908, 926, 927, 949, 950, 953, 955, 964, 968, 979, 981, 982, 989, 991, 1069, 1073, 1095, 1099, 1100, 1126, 1127, 1129, 1142, 1151, 1153, 1182, 1186, 1187, 1201, 1202, 1205, 1208, 1212, 1218, 1223, 1225, 1285, 1286, 1287, 1288, 1305, 1343, 1346, 1362, 1363, 1364, 1396, 1407, 1408, 1409, 1444, 1445, 1450, 1454, 1483, 1494, 1496, 1554, 1617, 1620, 1621, 1622, 1623, 1624, 1632, 1636, 1638, 1642, 1643, 1644, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1661, 1665, 1668, 1669, 1686, 1687, 1713, 1737, 1747, 1748, 1752, 1753, 1754, 1760, 1761, 1765, 1770, 1771, 1781, 1783, 1794, 1796, 1798, 1819, 1820, 1823, 1840, 1842, 1843, 1859, 1861, 1864, 1865, 1870, 1871, 1872, 1879, 1882, 1884, 1885, 1889, 1892, 1893, 1897, 1898, 1899, 1900, 1901, 1905, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1926, 1927, 1929, 1930, 1933, 1937, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1949], "must": [0, 3, 5, 6, 9, 11, 12, 14, 17, 20, 28, 29, 33, 39, 42, 44, 46, 48, 49, 50, 57, 60, 61, 65, 68, 70, 72, 73, 74, 81, 82, 105, 114, 156, 170, 171, 213, 276, 329, 331, 337, 414, 416, 418, 527, 557, 558, 579, 596, 597, 598, 600, 601, 630, 699, 700, 701, 702, 703, 704, 710, 761, 770, 785, 786, 787, 806, 828, 830, 872, 873, 891, 897, 902, 903, 904, 905, 907, 913, 915, 917, 918, 919, 921, 922, 934, 936, 938, 939, 940, 941, 942, 943, 946, 950, 953, 974, 984, 987, 988, 998, 999, 1000, 1002, 1028, 1029, 1031, 1073, 1075, 1076, 1077, 1079, 1082, 1083, 1085, 1106, 1107, 1108, 1113, 1115, 1116, 1117, 1118, 1119, 1126, 1127, 1136, 1138, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1165, 1174, 1175, 1178, 1189, 1209, 1212, 1222, 1227, 1234, 1237, 1266, 1267, 1268, 1269, 1275, 1277, 1278, 1281, 1284, 1302, 1304, 1305, 1306, 1312, 1319, 1334, 1340, 1343, 1344, 1348, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1387, 1388, 1391, 1398, 1399, 1405, 1437, 1444, 1447, 1450, 1475, 1481, 1496, 1516, 1525, 1527, 1535, 1554, 1567, 1568, 1569, 1587, 1624, 1647, 1657, 1658, 1664, 1666, 1671, 1679, 1709, 1711, 1718, 1719, 1722, 1723, 1726, 1734, 1735, 1756, 1765, 1768, 1777, 1793, 1804, 1807, 1808, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1831, 1841, 1845, 1846, 1850, 1855, 1857, 1861, 1865, 1869, 1870, 1872, 1873, 1875, 1882, 1883, 1884, 1885, 1892, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1914, 1918, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1946, 1950], "invok": [0, 2, 8, 11, 15, 17, 20, 27, 34, 36, 39, 42, 57, 59, 60, 72, 73, 914, 916, 1028, 1029, 1212, 1215, 1221, 1381, 1444, 1617, 1619, 1622, 1623, 1668, 1705, 1711, 1882, 1885, 1886, 1893, 1904, 1907, 1908, 1909, 1910, 1911, 1915, 1916, 1927, 1935, 1936], "affect": [0, 1, 2, 7, 9, 23, 25, 36, 38, 49, 65, 238, 239, 798, 933, 989, 991, 1089, 1136, 1159, 1187, 1212, 1325, 1326, 1414, 1444, 1459, 1496, 1612, 1625, 1669, 1769, 1772, 1773, 1775, 1904, 1905, 1908, 1913, 1916, 1919, 1920, 1941], "dataparallel": [0, 42, 1608, 1624, 1660, 1880, 1905, 1912, 1918, 1935], "parallel": [0, 16, 32, 33, 39, 40, 42, 43, 44, 46, 59, 60, 65, 1162, 1163, 1215, 1381, 1450, 1483, 1543, 1624, 1776, 1777, 1880, 1885, 1904, 1905, 1907, 1918, 1922, 1935, 1937], "distributeddataparallel": [0, 39, 40, 42, 43, 46, 60, 65, 1381, 1483, 1918, 1928, 1935], "than": [0, 3, 4, 5, 6, 8, 9, 11, 12, 15, 16, 19, 22, 23, 25, 29, 31, 33, 39, 40, 42, 43, 44, 48, 49, 50, 52, 56, 59, 60, 61, 65, 70, 73, 74, 75, 82, 167, 270, 513, 558, 630, 693, 706, 712, 792, 798, 906, 915, 916, 930, 937, 948, 955, 956, 960, 961, 1000, 1038, 1042, 1055, 1073, 1074, 1125, 1126, 1127, 1129, 1133, 1138, 1149, 1156, 1168, 1172, 1186, 1197, 1209, 1210, 1213, 1223, 1232, 1233, 1236, 1241, 1242, 1248, 1252, 1257, 1265, 1266, 1268, 1269, 1272, 1277, 1283, 1287, 1300, 1303, 1309, 1312, 1314, 1317, 1329, 1334, 1344, 1360, 1361, 1372, 1373, 1374, 1381, 1387, 1388, 1405, 1436, 1450, 1458, 1475, 1481, 1491, 1492, 1493, 1508, 1518, 1519, 1520, 1534, 1535, 1543, 1554, 1580, 1593, 1611, 1612, 1615, 1624, 1631, 1632, 1633, 1634, 1660, 1665, 1671, 1686, 1687, 1711, 1713, 1727, 1728, 1749, 1750, 1778, 1811, 1812, 1813, 1814, 1816, 1817, 1847, 1855, 1857, 1865, 1879, 1881, 1882, 1884, 1885, 1887, 1899, 1900, 1901, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1916, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1930, 1931, 1935, 1939, 1940, 1942, 1944, 1945, 1946], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 24, 26, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 56, 59, 61, 62, 65, 69, 70, 71, 72, 73, 74, 79, 81, 82, 86, 88, 96, 97, 98, 99, 167, 238, 270, 368, 418, 501, 527, 534, 558, 573, 710, 761, 770, 806, 867, 868, 869, 893, 899, 905, 906, 907, 908, 910, 916, 937, 948, 950, 960, 964, 968, 989, 991, 996, 998, 1002, 1029, 1052, 1063, 1074, 1085, 1089, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1121, 1124, 1128, 1131, 1132, 1133, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1165, 1174, 1175, 1187, 1191, 1194, 1197, 1216, 1221, 1225, 1231, 1232, 1242, 1243, 1253, 1256, 1257, 1259, 1264, 1268, 1270, 1272, 1275, 1281, 1282, 1298, 1306, 1310, 1315, 1334, 1340, 1352, 1357, 1360, 1361, 1362, 1363, 1364, 1367, 1372, 1375, 1376, 1377, 1388, 1392, 1393, 1398, 1407, 1408, 1409, 1411, 1412, 1413, 1423, 1424, 1425, 1435, 1444, 1448, 1450, 1483, 1491, 1496, 1508, 1518, 1521, 1522, 1523, 1538, 1539, 1540, 1545, 1580, 1593, 1611, 1615, 1624, 1625, 1630, 1632, 1633, 1637, 1647, 1658, 1667, 1668, 1669, 1670, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1707, 1709, 1710, 1711, 1731, 1732, 1749, 1765, 1773, 1775, 1778, 1781, 1821, 1830, 1845, 1850, 1851, 1853, 1861, 1864, 1865, 1872, 1880, 1882, 1885, 1889, 1891, 1893, 1895, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1935, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946], "gpu": [0, 1, 2, 3, 4, 7, 11, 15, 16, 18, 19, 21, 24, 25, 26, 29, 33, 35, 37, 39, 40, 44, 50, 60, 61, 65, 72, 213, 226, 305, 348, 616, 773, 966, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1008, 1009, 1010, 1017, 1023, 1024, 1030, 1032, 1033, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1062, 1063, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1133, 1212, 1221, 1258, 1283, 1312, 1320, 1321, 1322, 1325, 1326, 1352, 1381, 1396, 1414, 1444, 1459, 1460, 1483, 1608, 1624, 1657, 1830, 1880, 1882, 1893, 1896, 1908, 1910, 1914, 1916, 1917, 1919, 1920, 1922, 1930, 1935, 1939, 1941, 1945, 1947], "per": [0, 14, 18, 33, 39, 40, 42, 43, 44, 46, 47, 49, 50, 52, 58, 60, 61, 65, 66, 71, 487, 488, 489, 747, 748, 814, 821, 832, 835, 838, 846, 858, 866, 905, 914, 916, 966, 992, 1068, 1099, 1143, 1153, 1284, 1360, 1361, 1362, 1363, 1364, 1378, 1380, 1381, 1388, 1399, 1404, 1407, 1408, 1409, 1410, 1411, 1416, 1435, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1475, 1476, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1515, 1516, 1526, 1555, 1578, 1586, 1624, 1668, 1672, 1689, 1705, 1711, 1719, 1731, 1778, 1780, 1831, 1847, 1851, 1872, 1895, 1899, 1901, 1907, 1908, 1909, 1911, 1915, 1928, 1930, 1931, 1933, 1936, 1939, 1944], "process": [0, 1, 3, 14, 16, 20, 25, 29, 31, 33, 40, 42, 43, 44, 48, 50, 51, 52, 53, 59, 60, 61, 62, 65, 73, 98, 100, 988, 1024, 1030, 1055, 1212, 1222, 1284, 1321, 1329, 1360, 1361, 1378, 1380, 1387, 1388, 1404, 1411, 1435, 1436, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1483, 1487, 1489, 1491, 1492, 1515, 1516, 1526, 1555, 1578, 1586, 1624, 1708, 1714, 1780, 1794, 1879, 1880, 1882, 1895, 1897, 1898, 1899, 1905, 1907, 1908, 1909, 1910, 1915, 1916, 1918, 1920, 1922, 1923, 1927, 1928, 1929, 1930, 1933, 1935, 1937, 1939, 1941, 1948], "work": [0, 1, 2, 3, 5, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 29, 31, 33, 34, 35, 42, 43, 44, 46, 47, 48, 49, 50, 59, 60, 61, 62, 65, 66, 70, 73, 74, 81, 82, 136, 167, 368, 460, 461, 462, 463, 464, 501, 600, 601, 834, 874, 875, 906, 920, 966, 986, 988, 989, 991, 1020, 1031, 1032, 1052, 1086, 1088, 1105, 1125, 1126, 1127, 1142, 1212, 1216, 1223, 1224, 1247, 1248, 1275, 1276, 1284, 1381, 1441, 1444, 1460, 1477, 1581, 1599, 1624, 1681, 1711, 1738, 1742, 1744, 1770, 1776, 1841, 1844, 1879, 1882, 1885, 1886, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1918, 1921, 1922, 1923, 1927, 1928, 1930, 1933, 1935, 1936, 1945, 1947, 1950], "str": [0, 1, 2, 3, 5, 16, 18, 20, 28, 29, 33, 39, 40, 42, 44, 46, 47, 48, 50, 53, 57, 59, 61, 65, 73, 337, 527, 531, 616, 792, 798, 805, 806, 807, 828, 829, 830, 867, 914, 916, 924, 928, 929, 954, 966, 972, 987, 998, 999, 1000, 1002, 1011, 1012, 1014, 1015, 1016, 1028, 1029, 1030, 1042, 1043, 1045, 1047, 1059, 1080, 1085, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1141, 1142, 1146, 1151, 1153, 1161, 1210, 1211, 1212, 1213, 1215, 1216, 1218, 1221, 1257, 1270, 1275, 1276, 1283, 1284, 1313, 1325, 1326, 1341, 1360, 1361, 1367, 1372, 1373, 1374, 1378, 1380, 1388, 1394, 1398, 1404, 1405, 1410, 1411, 1420, 1421, 1422, 1435, 1436, 1444, 1445, 1447, 1448, 1449, 1451, 1454, 1458, 1461, 1472, 1475, 1476, 1487, 1489, 1491, 1492, 1493, 1494, 1496, 1515, 1516, 1526, 1527, 1535, 1540, 1543, 1554, 1555, 1578, 1586, 1612, 1624, 1631, 1632, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1665, 1666, 1668, 1678, 1681, 1689, 1705, 1711, 1713, 1730, 1761, 1765, 1772, 1773, 1807, 1826, 1872, 1879, 1881, 1882, 1883, 1884, 1885, 1886, 1893, 1894, 1895, 1897, 1899, 1903, 1905, 1921, 1923, 1925, 1927, 1928, 1929, 1934, 1935, 1941, 1944, 1946, 1948, 1949, 1950], "whether": [0, 1, 2, 7, 16, 18, 20, 29, 33, 39, 40, 42, 43, 44, 47, 48, 50, 58, 59, 65, 73, 335, 337, 486, 531, 630, 693, 706, 708, 709, 712, 887, 888, 893, 902, 910, 913, 914, 916, 921, 922, 933, 935, 944, 957, 958, 959, 965, 966, 967, 969, 971, 1027, 1043, 1141, 1153, 1169, 1170, 1187, 1209, 1212, 1219, 1220, 1228, 1233, 1241, 1242, 1248, 1250, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1266, 1268, 1269, 1272, 1273, 1274, 1275, 1283, 1299, 1301, 1309, 1311, 1312, 1314, 1317, 1334, 1339, 1340, 1341, 1342, 1367, 1378, 1404, 1410, 1444, 1453, 1458, 1493, 1505, 1506, 1507, 1527, 1555, 1586, 1624, 1631, 1633, 1636, 1649, 1663, 1666, 1671, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1705, 1717, 1727, 1730, 1774, 1775, 1824, 1825, 1826, 1829, 1830, 1848, 1853, 1862, 1863, 1865, 1867, 1868, 1872, 1879, 1885, 1891, 1892, 1894, 1900, 1904, 1908, 1910, 1914, 1923, 1928, 1930, 1935, 1939, 1941, 1943, 1944, 1949], "bool": [0, 1, 2, 3, 5, 14, 18, 28, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 53, 59, 61, 65, 72, 73, 167, 213, 226, 261, 276, 335, 337, 344, 345, 346, 347, 349, 350, 355, 357, 460, 461, 462, 463, 464, 473, 486, 510, 531, 594, 616, 693, 706, 707, 708, 709, 710, 712, 748, 771, 792, 793, 798, 807, 827, 878, 887, 888, 889, 893, 906, 914, 915, 916, 917, 918, 919, 920, 921, 922, 933, 935, 938, 940, 941, 943, 944, 950, 951, 957, 958, 959, 965, 966, 988, 995, 1025, 1031, 1043, 1086, 1087, 1088, 1091, 1098, 1103, 1121, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 1146, 1147, 1148, 1152, 1154, 1169, 1170, 1173, 1174, 1187, 1197, 1201, 1203, 1209, 1212, 1216, 1218, 1219, 1227, 1228, 1231, 1233, 1241, 1242, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1264, 1266, 1268, 1269, 1272, 1273, 1274, 1275, 1281, 1282, 1283, 1284, 1293, 1294, 1295, 1296, 1298, 1299, 1301, 1303, 1309, 1311, 1312, 1314, 1317, 1325, 1326, 1334, 1339, 1340, 1341, 1342, 1343, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1435, 1436, 1437, 1438, 1439, 1444, 1447, 1448, 1449, 1450, 1451, 1453, 1458, 1461, 1462, 1463, 1464, 1471, 1475, 1476, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1496, 1508, 1515, 1516, 1526, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1540, 1543, 1545, 1547, 1554, 1555, 1578, 1586, 1593, 1612, 1624, 1625, 1628, 1629, 1631, 1633, 1635, 1636, 1637, 1658, 1659, 1660, 1661, 1663, 1666, 1671, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1719, 1725, 1727, 1729, 1730, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1765, 1770, 1774, 1775, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1803, 1812, 1813, 1814, 1815, 1816, 1817, 1824, 1825, 1826, 1829, 1830, 1838, 1844, 1848, 1853, 1862, 1863, 1865, 1866, 1867, 1868, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1894, 1895, 1897, 1898, 1899, 1900, 1914, 1921, 1923, 1925, 1927, 1928, 1929, 1934, 1935, 1939, 1941, 1942, 1944, 1945, 1946, 1947, 1949, 1950], "option": [0, 1, 3, 5, 16, 17, 18, 19, 20, 21, 24, 28, 29, 33, 39, 42, 46, 47, 48, 50, 53, 57, 58, 59, 61, 62, 65, 73, 97, 105, 167, 172, 187, 189, 192, 195, 196, 197, 212, 223, 226, 256, 283, 313, 341, 347, 409, 460, 461, 462, 463, 464, 502, 513, 514, 527, 534, 538, 550, 573, 593, 594, 596, 597, 598, 600, 601, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 748, 771, 792, 793, 798, 805, 807, 812, 831, 867, 872, 875, 878, 889, 891, 892, 893, 894, 895, 896, 897, 898, 905, 906, 914, 915, 916, 917, 918, 919, 920, 921, 922, 925, 926, 927, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 946, 950, 953, 955, 956, 957, 958, 959, 961, 963, 964, 965, 966, 971, 972, 978, 979, 981, 982, 983, 984, 985, 986, 988, 989, 991, 993, 997, 998, 1000, 1001, 1002, 1005, 1006, 1013, 1014, 1017, 1020, 1028, 1029, 1030, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1055, 1056, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1084, 1085, 1086, 1087, 1088, 1090, 1095, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1139, 1140, 1141, 1142, 1145, 1146, 1147, 1154, 1155, 1156, 1157, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1176, 1177, 1178, 1186, 1189, 1201, 1203, 1206, 1207, 1209, 1210, 1212, 1213, 1216, 1218, 1225, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1325, 1326, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1350, 1351, 1352, 1354, 1355, 1356, 1358, 1359, 1360, 1361, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1398, 1401, 1402, 1403, 1404, 1405, 1410, 1411, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1435, 1436, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1458, 1462, 1463, 1464, 1471, 1475, 1476, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1497, 1498, 1508, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1534, 1535, 1538, 1539, 1540, 1543, 1545, 1554, 1555, 1562, 1567, 1568, 1569, 1578, 1579, 1586, 1593, 1599, 1600, 1612, 1620, 1621, 1624, 1625, 1631, 1632, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1663, 1665, 1666, 1668, 1670, 1671, 1672, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1696, 1697, 1698, 1699, 1700, 1704, 1717, 1718, 1719, 1722, 1726, 1727, 1729, 1730, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1758, 1760, 1765, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1841, 1842, 1843, 1844, 1845, 1848, 1850, 1853, 1854, 1855, 1856, 1857, 1859, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1874, 1875, 1877, 1878, 1879, 1882, 1883, 1885, 1887, 1889, 1891, 1893, 1894, 1895, 1900, 1903, 1908, 1910, 1911, 1912, 1915, 1916, 1920, 1921, 1923, 1927, 1929, 1930, 1935, 1939, 1940, 1942, 1944, 1946, 1949], "torch_dtyp": 0, "weight": [0, 16, 39, 42, 48, 65, 71, 73, 74, 173, 317, 377, 378, 510, 725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 758, 759, 762, 764, 765, 766, 767, 769, 773, 774, 776, 777, 778, 785, 786, 787, 794, 805, 806, 807, 821, 822, 846, 848, 854, 858, 862, 863, 864, 865, 866, 871, 872, 874, 875, 937, 984, 1141, 1143, 1151, 1153, 1173, 1174, 1212, 1216, 1221, 1223, 1228, 1237, 1334, 1360, 1361, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1387, 1388, 1396, 1397, 1399, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1444, 1448, 1449, 1450, 1451, 1452, 1459, 1461, 1473, 1487, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1534, 1535, 1544, 1553, 1557, 1560, 1575, 1577, 1578, 1587, 1596, 1615, 1624, 1631, 1632, 1634, 1636, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1664, 1665, 1666, 1668, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1699, 1733, 1872, 1879, 1880, 1881, 1883, 1884, 1885, 1893, 1894, 1899, 1900, 1903, 1910, 1912, 1916, 1921, 1930, 1931, 1932, 1933, 1939, 1944, 1948, 1949], "cach": [0, 2, 3, 11, 16, 18, 22, 25, 29, 48, 73, 501, 966, 973, 1010, 1011, 1028, 1031, 1036, 1038, 1040, 1042, 1050, 1055, 1320, 1321, 1322, 1625, 1636, 1668, 1897, 1912], "insid": [0, 1, 7, 15, 17, 20, 29, 39, 59, 65, 70, 72, 73, 910, 911, 912, 913, 994, 1031, 1143, 1147, 1152, 1223, 1624, 1882, 1884, 1885, 1893, 1904, 1908, 1910, 1911, 1915, 1923, 1939, 1948], "custom_fwd": [0, 1904], "fwd": [0, 22], "cast_input": [0, 1904], "helper": [0, 3, 5, 28, 42, 69, 73, 1483, 1879, 1880, 1884, 1908, 1909, 1923, 1927, 1935, 1950], "subclass": [0, 1, 13, 20, 33, 39, 44, 48, 52, 70, 73, 156, 550, 902, 903, 904, 1210, 1213, 1222, 1444, 1625, 1638, 1643, 1664, 1882, 1885, 1886, 1892, 1904, 1916, 1923, 1924, 1935, 1939, 1950], "page": [0, 6, 7, 9, 24, 39, 43, 60, 62, 1284, 1487, 1489, 1491, 1908, 1909, 1916, 1925, 1935], "incom": [0, 42, 61, 794, 832, 833, 834, 835, 838, 1365, 1431, 1514, 1560, 1897, 1905], "non": [0, 1, 3, 5, 11, 14, 15, 16, 17, 18, 19, 25, 28, 33, 38, 40, 42, 43, 44, 47, 48, 50, 52, 59, 61, 62, 65, 72, 74, 83, 98, 105, 167, 351, 518, 527, 531, 558, 711, 747, 752, 753, 754, 755, 756, 758, 759, 769, 773, 777, 778, 785, 786, 787, 851, 878, 890, 902, 904, 906, 911, 913, 921, 922, 937, 950, 953, 966, 977, 978, 983, 1042, 1131, 1132, 1138, 1142, 1147, 1153, 1189, 1212, 1215, 1224, 1227, 1228, 1247, 1248, 1255, 1259, 1260, 1273, 1275, 1284, 1294, 1301, 1306, 1311, 1334, 1339, 1340, 1344, 1357, 1358, 1359, 1373, 1374, 1376, 1377, 1380, 1390, 1396, 1413, 1414, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1449, 1451, 1459, 1461, 1475, 1526, 1545, 1573, 1578, 1620, 1621, 1624, 1670, 1700, 1722, 1765, 1766, 1781, 1793, 1807, 1808, 1812, 1813, 1814, 1815, 1816, 1817, 1846, 1862, 1872, 1879, 1880, 1882, 1884, 1885, 1887, 1897, 1900, 1903, 1906, 1910, 1911, 1912, 1916, 1920, 1923, 1928, 1929, 1934, 1935, 1937, 1939, 1940, 1942, 1943, 1944, 1946, 1950], "intern": [0, 3, 8, 9, 16, 20, 21, 29, 33, 39, 40, 42, 44, 48, 50, 56, 65, 70, 73, 986, 1020, 1041, 1142, 1212, 1248, 1250, 1266, 1269, 1292, 1362, 1363, 1364, 1398, 1483, 1518, 1519, 1520, 1543, 1633, 1680, 1773, 1815, 1865, 1886, 1904, 1905, 1907, 1908, 1913, 1919, 1920, 1936, 1937, 1941, 1943], "current": [0, 1, 2, 3, 5, 6, 7, 9, 14, 15, 16, 20, 23, 24, 29, 31, 33, 39, 42, 44, 46, 47, 48, 50, 52, 59, 60, 65, 66, 72, 73, 105, 167, 226, 238, 501, 511, 512, 513, 754, 756, 794, 806, 808, 830, 872, 874, 875, 878, 892, 903, 906, 907, 914, 915, 916, 921, 935, 944, 986, 987, 988, 989, 991, 996, 997, 1000, 1001, 1003, 1004, 1005, 1006, 1009, 1010, 1011, 1013, 1014, 1017, 1019, 1020, 1023, 1025, 1026, 1030, 1031, 1032, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1052, 1054, 1056, 1058, 1061, 1062, 1063, 1086, 1088, 1098, 1103, 1121, 1137, 1139, 1159, 1160, 1161, 1169, 1170, 1195, 1196, 1212, 1216, 1227, 1231, 1282, 1284, 1298, 1313, 1320, 1322, 1384, 1387, 1391, 1444, 1483, 1491, 1495, 1537, 1543, 1554, 1593, 1611, 1612, 1614, 1624, 1637, 1641, 1642, 1643, 1644, 1645, 1650, 1651, 1652, 1653, 1675, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1729, 1738, 1740, 1742, 1744, 1745, 1769, 1773, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1805, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1855, 1857, 1862, 1877, 1880, 1882, 1884, 1885, 1886, 1887, 1889, 1892, 1895, 1897, 1900, 1904, 1905, 1908, 1909, 1914, 1915, 1916, 1917, 1918, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1930, 1933, 1935, 1936, 1939, 1941, 1942, 1944, 1945, 1948, 1950], "outsid": [0, 5, 9, 23, 27, 39, 52, 65, 70, 697, 808, 898, 1141, 1143, 1147, 1152, 1213, 1543, 1624, 1702, 1703, 1708, 1709, 1715, 1884, 1885, 1903, 1905, 1908, 1911, 1912, 1946], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 29, 31, 33, 34, 35, 37, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 56, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 105, 167, 213, 226, 271, 276, 351, 460, 461, 462, 463, 464, 488, 489, 510, 512, 557, 593, 594, 616, 617, 631, 693, 702, 706, 708, 709, 710, 712, 748, 773, 792, 794, 798, 800, 804, 810, 851, 853, 860, 871, 877, 887, 888, 890, 902, 905, 906, 908, 910, 916, 921, 922, 936, 954, 957, 958, 968, 977, 978, 979, 985, 988, 989, 991, 996, 1024, 1027, 1028, 1073, 1075, 1089, 1121, 1133, 1141, 1142, 1145, 1146, 1149, 1153, 1165, 1174, 1175, 1186, 1209, 1212, 1216, 1219, 1222, 1223, 1224, 1227, 1232, 1233, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1265, 1266, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1278, 1279, 1283, 1292, 1299, 1301, 1306, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1339, 1340, 1341, 1342, 1360, 1361, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1382, 1388, 1391, 1392, 1393, 1396, 1399, 1404, 1407, 1408, 1409, 1414, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1448, 1449, 1450, 1451, 1452, 1459, 1475, 1477, 1483, 1491, 1495, 1496, 1508, 1518, 1519, 1520, 1526, 1535, 1538, 1539, 1543, 1554, 1578, 1580, 1581, 1583, 1587, 1593, 1599, 1612, 1614, 1615, 1618, 1619, 1624, 1631, 1633, 1635, 1638, 1642, 1644, 1647, 1657, 1658, 1665, 1666, 1670, 1672, 1678, 1681, 1683, 1686, 1687, 1703, 1704, 1705, 1707, 1711, 1713, 1717, 1727, 1729, 1730, 1731, 1732, 1749, 1751, 1761, 1773, 1795, 1808, 1809, 1810, 1821, 1823, 1824, 1825, 1826, 1829, 1830, 1847, 1853, 1867, 1868, 1872, 1882, 1884, 1885, 1891, 1892, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1944, 1945, 1946, 1947], "effect": [0, 3, 7, 11, 33, 39, 40, 42, 48, 61, 70, 73, 74, 77, 213, 226, 616, 748, 792, 798, 1020, 1068, 1153, 1212, 1254, 1255, 1256, 1257, 1313, 1352, 1367, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1389, 1444, 1450, 1496, 1554, 1581, 1612, 1618, 1624, 1625, 1643, 1697, 1705, 1805, 1810, 1830, 1851, 1872, 1879, 1882, 1893, 1903, 1904, 1905, 1908, 1910, 1930, 1933, 1941, 1942, 1944], "custom_bwd": [0, 1904], "bwd": 0, "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 20, 22, 28, 29, 31, 33, 36, 39, 40, 43, 44, 46, 48, 50, 51, 53, 56, 57, 59, 60, 65, 67, 70, 72, 73, 74, 76, 79, 82, 105, 118, 119, 120, 121, 136, 167, 171, 238, 251, 252, 253, 254, 270, 275, 276, 288, 289, 315, 327, 329, 331, 332, 333, 334, 335, 337, 339, 342, 368, 415, 416, 434, 435, 437, 438, 486, 496, 498, 513, 527, 529, 531, 550, 557, 573, 596, 597, 598, 600, 601, 612, 613, 693, 694, 697, 700, 701, 704, 708, 709, 710, 748, 769, 777, 783, 784, 792, 797, 798, 800, 806, 808, 809, 812, 815, 832, 833, 834, 835, 838, 839, 840, 867, 872, 878, 887, 888, 889, 893, 898, 902, 904, 906, 908, 909, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 935, 936, 937, 942, 944, 950, 954, 959, 961, 971, 979, 980, 983, 989, 1019, 1028, 1029, 1042, 1055, 1064, 1065, 1068, 1076, 1077, 1090, 1099, 1100, 1102, 1104, 1106, 1107, 1108, 1113, 1115, 1116, 1117, 1118, 1119, 1128, 1133, 1139, 1141, 1142, 1143, 1144, 1148, 1149, 1151, 1152, 1154, 1156, 1160, 1161, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1182, 1197, 1202, 1203, 1204, 1205, 1208, 1209, 1210, 1212, 1213, 1215, 1218, 1219, 1227, 1230, 1232, 1233, 1236, 1240, 1241, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1257, 1261, 1264, 1266, 1268, 1269, 1271, 1275, 1276, 1281, 1282, 1283, 1284, 1287, 1292, 1298, 1300, 1301, 1304, 1309, 1311, 1312, 1314, 1317, 1329, 1332, 1334, 1338, 1339, 1340, 1341, 1344, 1345, 1348, 1352, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1386, 1387, 1388, 1389, 1391, 1398, 1399, 1400, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1429, 1430, 1431, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1458, 1472, 1475, 1477, 1478, 1479, 1480, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1493, 1495, 1496, 1515, 1516, 1518, 1519, 1520, 1525, 1526, 1535, 1536, 1540, 1543, 1545, 1554, 1555, 1556, 1567, 1568, 1569, 1578, 1579, 1580, 1581, 1583, 1586, 1593, 1606, 1607, 1612, 1614, 1615, 1617, 1619, 1622, 1623, 1624, 1629, 1631, 1632, 1633, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1650, 1651, 1657, 1660, 1661, 1664, 1666, 1670, 1671, 1675, 1676, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1705, 1711, 1719, 1723, 1726, 1730, 1732, 1733, 1745, 1747, 1749, 1750, 1751, 1756, 1757, 1758, 1765, 1768, 1778, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1803, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1830, 1831, 1841, 1845, 1848, 1851, 1854, 1855, 1856, 1857, 1859, 1862, 1863, 1864, 1865, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1892, 1894, 1895, 1897, 1900, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1920, 1921, 1923, 1925, 1926, 1927, 1929, 1930, 1933, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1949], "small": [0, 3, 7, 9, 11, 15, 17, 18, 22, 25, 29, 39, 40, 42, 48, 59, 878, 921, 922, 966, 999, 1042, 1274, 1275, 1287, 1289, 1352, 1379, 1453, 1458, 1472, 1496, 1525, 1579, 1586, 1624, 1702, 1708, 1717, 1830, 1882, 1884, 1885, 1908, 1910, 1912, 1916, 1919, 1921, 1923, 1927, 1930, 1931, 1939, 1940, 1946], "magnitud": [0, 979, 1668, 1781, 1903, 1904, 1908], "represent": [0, 3, 14, 16, 29, 33, 39, 42, 44, 57, 73, 496, 771, 839, 989, 1101, 1102, 1104, 1128, 1157, 1212, 1251, 1254, 1256, 1259, 1338, 1444, 1450, 1678, 1717, 1880, 1882, 1885, 1900, 1910, 1919, 1923, 1927, 1930, 1939, 1946, 1951], "These": [0, 1, 2, 3, 8, 11, 14, 16, 20, 23, 29, 33, 34, 39, 42, 43, 48, 66, 68, 71, 73, 807, 893, 984, 1085, 1149, 1209, 1212, 1254, 1319, 1352, 1444, 1615, 1632, 1880, 1882, 1883, 1884, 1885, 1895, 1898, 1899, 1901, 1904, 1905, 1908, 1909, 1910, 1916, 1919, 1921, 1923, 1927, 1933, 1935, 1936, 1942, 1947, 1950], "flush": [0, 1, 44, 1042, 1222, 1761, 1774, 1919, 1944], "zero": [0, 1, 2, 15, 40, 42, 43, 46, 48, 61, 65, 70, 73, 167, 276, 331, 527, 529, 557, 558, 597, 598, 600, 601, 636, 692, 704, 711, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 757, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 777, 781, 782, 785, 786, 787, 788, 790, 793, 794, 808, 812, 832, 833, 834, 835, 838, 843, 890, 899, 900, 901, 906, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 936, 937, 957, 958, 959, 964, 979, 983, 1031, 1042, 1046, 1047, 1076, 1080, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1133, 1138, 1141, 1149, 1171, 1172, 1175, 1197, 1209, 1212, 1223, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1284, 1292, 1293, 1294, 1295, 1296, 1301, 1302, 1334, 1338, 1342, 1356, 1357, 1358, 1359, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1396, 1397, 1399, 1412, 1413, 1414, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1450, 1453, 1456, 1457, 1458, 1459, 1461, 1481, 1495, 1496, 1499, 1500, 1501, 1510, 1511, 1512, 1521, 1522, 1523, 1525, 1527, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1543, 1564, 1565, 1579, 1580, 1581, 1641, 1642, 1643, 1644, 1659, 1666, 1670, 1674, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1717, 1729, 1731, 1732, 1733, 1749, 1758, 1768, 1795, 1799, 1808, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1830, 1844, 1845, 1847, 1853, 1878, 1882, 1883, 1885, 1887, 1895, 1897, 1898, 1899, 1900, 1903, 1905, 1908, 1910, 1916, 1919, 1922, 1923, 1925, 1927, 1929, 1930, 1933, 1939, 1940, 1942, 1944, 1945, 1946, 1947], "underflow": [0, 1410, 1904], "updat": [0, 9, 11, 28, 31, 39, 40, 44, 46, 50, 59, 65, 68, 69, 73, 100, 238, 527, 529, 773, 812, 813, 837, 1141, 1150, 1212, 1362, 1363, 1364, 1381, 1387, 1388, 1396, 1407, 1408, 1409, 1444, 1445, 1454, 1483, 1534, 1535, 1632, 1636, 1666, 1683, 1689, 1694, 1696, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1879, 1882, 1893, 1904, 1905, 1908, 1909, 1910, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1935, 1936, 1937, 1944], "lost": [0, 50, 60, 62, 1381, 1440, 1441, 1442], "To": [0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 14, 15, 16, 18, 20, 21, 25, 27, 28, 29, 33, 34, 39, 40, 42, 43, 46, 47, 48, 50, 51, 57, 58, 60, 61, 65, 70, 73, 96, 97, 100, 351, 513, 570, 747, 907, 920, 963, 966, 987, 1032, 1052, 1073, 1075, 1085, 1113, 1115, 1119, 1130, 1212, 1213, 1215, 1216, 1222, 1223, 1257, 1279, 1284, 1312, 1352, 1361, 1384, 1410, 1440, 1441, 1442, 1444, 1497, 1498, 1516, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1668, 1711, 1719, 1730, 1769, 1777, 1831, 1879, 1882, 1884, 1885, 1889, 1897, 1898, 1899, 1901, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1935, 1936, 1937, 1939, 1942, 1943, 1944, 1945], "prevent": [0, 7, 8, 11, 15, 17, 20, 39, 40, 42, 43, 50, 65, 73, 513, 748, 912, 988, 1066, 1067, 1209, 1311, 1339, 1342, 1382, 1450, 1475, 1562, 1599, 1600, 1615, 1624, 1727, 1806, 1809, 1829, 1855, 1857, 1865, 1897, 1904, 1905, 1908, 1909, 1912, 1916, 1927, 1929, 1937, 1939, 1940], "multipli": [0, 16, 42, 329, 337, 438, 527, 698, 699, 700, 701, 702, 703, 704, 773, 792, 798, 799, 800, 934, 946, 1055, 1068, 1085, 1165, 1176, 1235, 1247, 1248, 1252, 1265, 1267, 1269, 1275, 1277, 1306, 1316, 1329, 1333, 1336, 1360, 1372, 1373, 1374, 1377, 1396, 1414, 1496, 1497, 1498, 1554, 1612, 1613, 1614, 1636, 1702, 1708, 1710, 1717, 1801, 1804, 1807, 1808, 1822, 1826, 1827, 1830, 1851, 1883, 1898, 1908, 1913, 1916, 1919, 1925, 1939, 1940], "factor": [0, 3, 16, 40, 48, 73, 702, 703, 704, 812, 832, 934, 957, 958, 959, 1254, 1255, 1256, 1259, 1261, 1301, 1302, 1303, 1382, 1405, 1432, 1456, 1457, 1584, 1585, 1593, 1697, 1698, 1699, 1701, 1702, 1704, 1706, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1729, 1787, 1808, 1830, 1903, 1904, 1930, 1939], "flow": [0, 11, 12, 14, 19, 20, 25, 74, 80, 82, 963, 1224, 1227, 1508, 1543, 1624, 1882, 1903, 1905, 1908, 1910, 1921, 1923, 1937], "through": [0, 5, 7, 9, 11, 12, 14, 15, 16, 17, 20, 26, 28, 29, 34, 39, 42, 44, 48, 52, 65, 70, 72, 73, 74, 77, 79, 510, 805, 853, 867, 874, 875, 912, 921, 922, 993, 1031, 1112, 1145, 1153, 1210, 1213, 1215, 1227, 1228, 1230, 1247, 1248, 1269, 1275, 1292, 1451, 1488, 1489, 1490, 1491, 1545, 1615, 1624, 1636, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1729, 1872, 1879, 1880, 1884, 1885, 1889, 1891, 1895, 1897, 1898, 1899, 1905, 1908, 1910, 1912, 1913, 1915, 1916, 1922, 1923, 1927, 1928, 1930, 1933, 1935, 1936, 1937, 1939, 1943, 1947, 1949, 1951], "word": [0, 1, 8, 42, 59, 60, 68, 72, 73, 950, 1352, 1372, 1373, 1374, 1387, 1388, 1487, 1534, 1535, 1554, 1612, 1624, 1631, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1884, 1905, 1912, 1927, 1936], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 39, 42, 43, 44, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 73, 74, 81, 82, 98, 105, 170, 171, 238, 239, 329, 331, 337, 351, 414, 418, 463, 473, 486, 501, 502, 517, 527, 529, 531, 534, 557, 630, 693, 702, 706, 708, 709, 710, 712, 828, 830, 854, 893, 902, 906, 914, 916, 926, 927, 935, 936, 944, 953, 954, 966, 969, 984, 991, 1000, 1001, 1031, 1042, 1076, 1084, 1091, 1105, 1115, 1120, 1122, 1136, 1141, 1142, 1153, 1154, 1155, 1169, 1170, 1173, 1174, 1186, 1187, 1209, 1211, 1212, 1215, 1216, 1219, 1221, 1223, 1224, 1225, 1226, 1227, 1228, 1233, 1234, 1243, 1247, 1248, 1264, 1271, 1272, 1275, 1277, 1283, 1292, 1294, 1299, 1306, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1334, 1339, 1340, 1342, 1344, 1352, 1356, 1360, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1387, 1388, 1392, 1393, 1398, 1403, 1407, 1408, 1409, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1491, 1493, 1525, 1534, 1535, 1538, 1539, 1543, 1560, 1578, 1580, 1583, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1628, 1629, 1631, 1633, 1636, 1660, 1664, 1669, 1671, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1727, 1753, 1754, 1768, 1781, 1804, 1807, 1811, 1812, 1813, 1814, 1816, 1817, 1824, 1825, 1826, 1829, 1830, 1841, 1845, 1851, 1853, 1865, 1867, 1868, 1870, 1872, 1874, 1879, 1882, 1883, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1934, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1950], "larger": [0, 9, 20, 22, 24, 25, 28, 42, 48, 73, 270, 513, 922, 937, 1042, 1142, 1266, 1269, 1352, 1381, 1387, 1388, 1436, 1493, 1496, 1534, 1535, 1905, 1908, 1912, 1913, 1915, 1919, 1921, 1939, 1944], "thei": [0, 1, 3, 5, 7, 9, 11, 14, 15, 16, 17, 18, 19, 23, 27, 29, 31, 35, 36, 39, 42, 44, 48, 49, 59, 65, 68, 69, 72, 73, 98, 337, 351, 352, 699, 702, 703, 710, 813, 828, 829, 830, 837, 854, 867, 872, 903, 912, 922, 934, 966, 1031, 1089, 1136, 1141, 1151, 1187, 1201, 1202, 1209, 1212, 1219, 1224, 1233, 1247, 1248, 1254, 1275, 1283, 1305, 1309, 1312, 1314, 1317, 1334, 1357, 1358, 1359, 1375, 1376, 1377, 1391, 1429, 1437, 1438, 1439, 1444, 1450, 1460, 1472, 1495, 1543, 1545, 1615, 1624, 1625, 1628, 1631, 1633, 1634, 1657, 1660, 1669, 1707, 1710, 1769, 1775, 1826, 1830, 1865, 1866, 1879, 1882, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1908, 1909, 1910, 1911, 1914, 1916, 1918, 1919, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1935, 1939, 1944, 1946, 1947, 1948, 1950], "don": [0, 1, 4, 7, 9, 14, 15, 16, 17, 20, 21, 31, 42, 58, 66, 68, 70, 73, 167, 798, 808, 906, 907, 920, 1059, 1141, 1227, 1305, 1407, 1408, 1409, 1496, 1612, 1615, 1624, 1672, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1772, 1879, 1882, 1886, 1897, 1898, 1899, 1905, 1908, 1910, 1912, 1916, 1918, 1922, 1923, 1926, 1927, 1928, 1930, 1935, 1936, 1939, 1950], "t": [0, 1, 2, 3, 4, 7, 8, 9, 14, 15, 17, 19, 20, 21, 25, 29, 31, 39, 40, 42, 44, 48, 49, 52, 56, 58, 59, 66, 68, 70, 71, 72, 73, 74, 76, 167, 329, 331, 337, 473, 550, 584, 700, 701, 710, 773, 794, 798, 808, 836, 839, 890, 891, 892, 893, 902, 904, 906, 907, 910, 912, 915, 920, 957, 958, 959, 964, 984, 986, 989, 1010, 1028, 1029, 1059, 1083, 1101, 1106, 1107, 1108, 1109, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1136, 1137, 1138, 1141, 1142, 1143, 1153, 1154, 1165, 1175, 1209, 1210, 1212, 1213, 1215, 1218, 1219, 1223, 1225, 1227, 1230, 1232, 1241, 1242, 1248, 1250, 1251, 1254, 1261, 1269, 1270, 1275, 1283, 1284, 1292, 1305, 1318, 1319, 1332, 1341, 1361, 1365, 1367, 1372, 1373, 1374, 1381, 1387, 1388, 1396, 1405, 1407, 1408, 1409, 1410, 1414, 1431, 1444, 1459, 1475, 1477, 1487, 1495, 1496, 1514, 1518, 1519, 1520, 1527, 1534, 1535, 1555, 1560, 1579, 1599, 1612, 1615, 1618, 1619, 1624, 1625, 1631, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1658, 1660, 1661, 1672, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1703, 1713, 1719, 1725, 1729, 1746, 1771, 1772, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1804, 1807, 1826, 1830, 1831, 1841, 1844, 1850, 1853, 1872, 1873, 1879, 1881, 1882, 1883, 1884, 1886, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1915, 1916, 1918, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1950], "grad": [0, 1, 5, 23, 27, 42, 48, 66, 69, 70, 73, 167, 351, 473, 502, 509, 510, 517, 518, 594, 893, 902, 906, 907, 913, 914, 916, 921, 922, 926, 927, 1031, 1089, 1141, 1142, 1144, 1148, 1152, 1153, 1187, 1195, 1212, 1284, 1444, 1624, 1669, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1775, 1807, 1865, 1872, 1880, 1882, 1883, 1898, 1899, 1900, 1904, 1909, 1910, 1911, 1913, 1916, 1918, 1925, 1935, 1936, 1939, 1945], "attribut": [0, 1, 20, 28, 31, 39, 40, 42, 43, 49, 73, 74, 167, 306, 509, 510, 740, 751, 752, 753, 754, 755, 756, 758, 759, 769, 777, 804, 815, 828, 829, 830, 851, 852, 853, 871, 872, 902, 906, 908, 912, 1136, 1211, 1212, 1213, 1215, 1216, 1222, 1223, 1284, 1381, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1444, 1487, 1624, 1625, 1635, 1636, 1637, 1658, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1880, 1883, 1886, 1900, 1904, 1905, 1908, 1910, 1911, 1916, 1921, 1923, 1927, 1930, 1935, 1945, 1946, 1950, 1951], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 11, 19, 20, 27, 29, 33, 42, 46, 48, 50, 52, 56, 58, 59, 61, 65, 68, 69, 70, 72, 73, 74, 167, 270, 351, 450, 473, 596, 630, 693, 708, 709, 761, 770, 773, 803, 807, 874, 893, 933, 946, 1022, 1026, 1076, 1085, 1089, 1138, 1141, 1153, 1186, 1211, 1213, 1216, 1222, 1227, 1237, 1242, 1254, 1255, 1259, 1260, 1267, 1273, 1275, 1281, 1284, 1301, 1305, 1306, 1312, 1316, 1320, 1336, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1384, 1387, 1388, 1391, 1396, 1397, 1407, 1408, 1409, 1414, 1415, 1417, 1418, 1419, 1426, 1427, 1428, 1438, 1439, 1445, 1451, 1454, 1459, 1461, 1483, 1495, 1526, 1578, 1624, 1625, 1633, 1636, 1640, 1666, 1669, 1671, 1676, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1714, 1718, 1723, 1765, 1768, 1769, 1773, 1775, 1799, 1804, 1830, 1850, 1853, 1865, 1872, 1878, 1879, 1880, 1882, 1884, 1885, 1887, 1893, 1897, 1898, 1899, 1900, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1916, 1918, 1919, 1920, 1923, 1927, 1928, 1930, 1935, 1937, 1939, 1942, 1946], "interfer": [0, 16, 1895, 1908, 1923], "learn": [0, 7, 8, 12, 14, 20, 34, 48, 58, 73, 100, 1365, 1378, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1404, 1429, 1431, 1452, 1473, 1492, 1493, 1596, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1880, 1889, 1901, 1903, 1914, 1916, 1917, 1923, 1927, 1930, 1935, 1937], "rate": [0, 8, 24, 40, 48, 1383, 1384, 1385, 1389, 1490, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1722, 1880, 1915, 1944], "fp16": [0, 2, 742, 1624, 1930, 1931], "everi": [0, 1, 2, 8, 9, 14, 15, 16, 18, 20, 24, 25, 28, 29, 39, 40, 42, 44, 46, 48, 50, 65, 70, 73, 496, 502, 623, 693, 794, 832, 910, 926, 927, 966, 1068, 1085, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1142, 1165, 1174, 1212, 1243, 1257, 1267, 1270, 1301, 1356, 1382, 1383, 1384, 1385, 1389, 1437, 1444, 1477, 1479, 1483, 1529, 1530, 1531, 1536, 1567, 1568, 1569, 1583, 1600, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1632, 1665, 1668, 1669, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1769, 1830, 1863, 1885, 1891, 1895, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1917, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1941, 1942, 1944, 1946], "most": [0, 1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 34, 39, 42, 44, 46, 48, 49, 50, 51, 58, 59, 61, 62, 70, 71, 72, 73, 74, 513, 806, 910, 911, 912, 917, 921, 930, 966, 1054, 1068, 1085, 1142, 1187, 1197, 1210, 1213, 1317, 1352, 1491, 1543, 1593, 1624, 1636, 1694, 1805, 1851, 1879, 1882, 1884, 1885, 1887, 1892, 1897, 1899, 1900, 1905, 1908, 1910, 1918, 1919, 1920, 1926, 1929, 1930, 1936, 1937, 1939, 1942, 1944, 1946], "bf16": [0, 2], "pretrain": [0, 19, 875, 1387, 1388, 1879, 1905, 1923], "cannot": [0, 3, 8, 9, 11, 19, 39, 40, 42, 48, 49, 52, 59, 65, 66, 70, 71, 72, 73, 74, 102, 103, 239, 270, 537, 558, 893, 1106, 1108, 1116, 1117, 1118, 1124, 1141, 1209, 1217, 1334, 1367, 1387, 1496, 1527, 1593, 1624, 1680, 1831, 1879, 1882, 1883, 1884, 1885, 1886, 1887, 1895, 1899, 1900, 1905, 1909, 1910, 1921, 1922, 1923, 1930, 1935, 1937, 1939, 1941, 1942, 1950], "numer": [0, 16, 29, 39, 48, 66, 71, 700, 806, 921, 922, 950, 1216, 1227, 1228, 1243, 1247, 1248, 1252, 1257, 1265, 1266, 1269, 1272, 1275, 1277, 1299, 1301, 1361, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1477, 1480, 1483, 1534, 1555, 1562, 1593, 1599, 1601, 1632, 1665, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1733, 1765, 1830, 1880, 1885, 1886, 1890, 1893, 1908, 1910, 1911, 1923, 1930, 1940, 1945, 1951], "max": [0, 15, 18, 21, 22, 39, 42, 50, 52, 58, 59, 61, 65, 73, 133, 202, 203, 204, 205, 316, 708, 709, 710, 771, 783, 784, 793, 795, 796, 815, 832, 833, 834, 835, 838, 887, 937, 954, 961, 962, 966, 1064, 1099, 1100, 1172, 1223, 1243, 1257, 1264, 1266, 1268, 1269, 1281, 1353, 1354, 1355, 1366, 1367, 1378, 1379, 1388, 1392, 1393, 1398, 1403, 1404, 1412, 1413, 1430, 1432, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1448, 1449, 1452, 1463, 1464, 1471, 1492, 1493, 1495, 1505, 1506, 1507, 1517, 1525, 1535, 1538, 1539, 1554, 1558, 1567, 1568, 1569, 1579, 1583, 1587, 1589, 1594, 1612, 1628, 1660, 1686, 1687, 1688, 1698, 1703, 1704, 1713, 1734, 1735, 1807, 1836, 1837, 1865, 1881, 1882, 1883, 1892, 1895, 1900, 1906, 1908, 1912, 1925, 1930, 1933, 1951], "65504": 0, "overflow": [0, 1066, 1067, 1311, 1339, 1342, 1562, 1599, 1600, 1727, 1758, 1806, 1809, 1829, 1855, 1857, 1908, 1919, 1940], "instead": [0, 1, 3, 5, 8, 9, 11, 12, 14, 15, 16, 17, 20, 23, 28, 29, 33, 39, 40, 42, 44, 47, 48, 50, 56, 59, 60, 65, 68, 69, 70, 73, 74, 76, 82, 238, 422, 473, 513, 527, 761, 770, 781, 782, 806, 830, 839, 893, 903, 914, 915, 916, 917, 920, 921, 950, 956, 1120, 1122, 1146, 1147, 1148, 1149, 1152, 1153, 1158, 1199, 1210, 1212, 1213, 1217, 1241, 1242, 1248, 1250, 1266, 1269, 1275, 1281, 1283, 1312, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1378, 1380, 1381, 1383, 1384, 1385, 1389, 1396, 1404, 1410, 1411, 1412, 1413, 1414, 1435, 1436, 1437, 1438, 1439, 1444, 1447, 1448, 1449, 1451, 1458, 1459, 1471, 1475, 1476, 1477, 1483, 1492, 1510, 1511, 1512, 1515, 1516, 1526, 1536, 1543, 1555, 1567, 1568, 1569, 1578, 1586, 1599, 1624, 1666, 1668, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1711, 1734, 1735, 1745, 1765, 1769, 1811, 1826, 1830, 1865, 1872, 1882, 1884, 1885, 1892, 1899, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1913, 1914, 1918, 1920, 1921, 1922, 1923, 1926, 1927, 1929, 1930, 1933, 1936, 1939, 1946, 1947, 1949, 1950], "case": [0, 1, 3, 4, 8, 9, 14, 15, 16, 17, 20, 23, 25, 28, 29, 31, 33, 34, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 59, 61, 62, 65, 66, 68, 69, 70, 71, 72, 73, 74, 98, 167, 171, 213, 368, 510, 513, 693, 773, 797, 804, 807, 833, 834, 836, 839, 871, 878, 906, 914, 916, 920, 935, 937, 942, 979, 985, 1010, 1032, 1033, 1052, 1053, 1054, 1085, 1106, 1108, 1116, 1117, 1118, 1133, 1143, 1147, 1152, 1171, 1197, 1210, 1213, 1221, 1224, 1225, 1227, 1241, 1243, 1247, 1248, 1252, 1257, 1258, 1259, 1261, 1267, 1270, 1275, 1277, 1281, 1283, 1284, 1289, 1292, 1301, 1312, 1334, 1352, 1357, 1358, 1359, 1360, 1361, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1383, 1384, 1385, 1386, 1388, 1389, 1391, 1400, 1401, 1402, 1403, 1404, 1405, 1411, 1412, 1413, 1430, 1435, 1437, 1438, 1439, 1450, 1451, 1452, 1462, 1475, 1481, 1486, 1491, 1493, 1495, 1508, 1526, 1535, 1543, 1547, 1548, 1578, 1580, 1587, 1624, 1626, 1627, 1631, 1633, 1636, 1637, 1670, 1671, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1711, 1749, 1752, 1765, 1767, 1781, 1784, 1830, 1831, 1861, 1865, 1875, 1879, 1885, 1890, 1897, 1898, 1899, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1916, 1918, 1919, 1921, 1923, 1926, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1950, 1951], "decreas": [0, 48, 1042, 1257, 1383, 1384, 1385, 1389, 1457, 1658, 1659, 1698, 1705, 1713, 1891, 1893, 1918, 1920, 1939, 1942], "attempt": [0, 1, 8, 14, 15, 16, 18, 29, 33, 42, 59, 60, 70, 99, 960, 966, 969, 980, 1216, 1222, 1301, 1593, 1626, 1627, 1686, 1687, 1865, 1882, 1885, 1898, 1899, 1904, 1908, 1910, 1922, 1926, 1927, 1935], "bring": [0, 22, 24, 66, 73, 1106, 1508, 1543, 1928], "number": [0, 1, 2, 3, 4, 5, 7, 11, 14, 15, 16, 19, 24, 29, 33, 39, 40, 42, 46, 47, 48, 50, 57, 58, 59, 62, 65, 66, 68, 71, 73, 74, 79, 99, 105, 171, 190, 235, 249, 270, 329, 368, 393, 414, 418, 450, 461, 486, 488, 489, 496, 507, 511, 513, 527, 529, 531, 556, 558, 559, 571, 596, 597, 598, 600, 601, 602, 621, 630, 698, 699, 700, 701, 702, 703, 704, 711, 771, 773, 781, 782, 785, 786, 787, 794, 832, 878, 890, 903, 921, 934, 936, 937, 942, 946, 948, 952, 960, 961, 965, 979, 983, 984, 991, 993, 999, 1008, 1017, 1018, 1029, 1031, 1032, 1033, 1042, 1052, 1053, 1056, 1057, 1077, 1080, 1082, 1085, 1086, 1090, 1098, 1128, 1130, 1133, 1138, 1140, 1154, 1156, 1162, 1163, 1164, 1168, 1172, 1173, 1174, 1186, 1188, 1209, 1210, 1212, 1225, 1232, 1235, 1236, 1243, 1257, 1266, 1275, 1279, 1284, 1289, 1300, 1304, 1312, 1323, 1324, 1328, 1330, 1333, 1334, 1338, 1342, 1345, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1367, 1368, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1414, 1415, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1458, 1459, 1461, 1462, 1463, 1464, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1510, 1511, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1534, 1535, 1538, 1539, 1544, 1554, 1555, 1557, 1560, 1567, 1568, 1569, 1578, 1580, 1586, 1587, 1593, 1615, 1624, 1632, 1636, 1641, 1642, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1661, 1665, 1670, 1671, 1672, 1674, 1675, 1681, 1689, 1702, 1703, 1704, 1705, 1708, 1709, 1711, 1712, 1713, 1719, 1722, 1726, 1736, 1738, 1739, 1740, 1742, 1743, 1744, 1749, 1751, 1752, 1755, 1756, 1757, 1758, 1766, 1770, 1774, 1776, 1777, 1778, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1804, 1808, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1845, 1846, 1847, 1855, 1857, 1862, 1863, 1866, 1867, 1868, 1869, 1870, 1871, 1877, 1880, 1883, 1884, 1885, 1886, 1887, 1892, 1895, 1897, 1900, 1903, 1906, 1908, 1910, 1913, 1916, 1918, 1919, 1921, 1923, 1926, 1927, 1928, 1929, 1931, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1951], "expect": [0, 1, 3, 5, 7, 9, 12, 15, 16, 22, 23, 29, 39, 40, 42, 44, 46, 50, 57, 59, 61, 65, 70, 71, 73, 693, 710, 773, 867, 914, 915, 916, 917, 918, 919, 1031, 1106, 1108, 1125, 1126, 1127, 1146, 1147, 1186, 1209, 1212, 1227, 1228, 1256, 1277, 1278, 1312, 1363, 1364, 1380, 1396, 1397, 1398, 1399, 1408, 1409, 1410, 1414, 1415, 1416, 1426, 1427, 1428, 1444, 1450, 1451, 1459, 1461, 1477, 1483, 1487, 1489, 1491, 1496, 1534, 1540, 1554, 1578, 1586, 1587, 1599, 1612, 1613, 1614, 1615, 1624, 1658, 1714, 1770, 1839, 1870, 1879, 1880, 1887, 1905, 1908, 1909, 1912, 1913, 1916, 1923, 1926, 1927, 1930, 1931, 1932, 1939, 1944, 1946], "alwai": [0, 5, 7, 11, 14, 15, 18, 33, 35, 39, 40, 42, 57, 61, 65, 69, 73, 356, 463, 473, 807, 893, 911, 914, 920, 935, 944, 954, 960, 966, 1031, 1042, 1072, 1080, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1116, 1117, 1118, 1119, 1121, 1124, 1128, 1169, 1170, 1212, 1222, 1227, 1242, 1247, 1248, 1249, 1250, 1252, 1253, 1265, 1268, 1269, 1270, 1271, 1275, 1277, 1340, 1360, 1362, 1363, 1364, 1381, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1480, 1483, 1615, 1624, 1657, 1753, 1754, 1780, 1826, 1830, 1862, 1865, 1885, 1886, 1897, 1900, 1905, 1906, 1907, 1908, 1909, 1910, 1913, 1915, 1916, 1927, 1928, 1934, 1935, 1937, 1939, 1942, 1945, 1946], "abov": [0, 1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 29, 34, 42, 48, 52, 59, 61, 65, 66, 71, 73, 74, 76, 96, 630, 693, 805, 806, 893, 935, 944, 959, 1042, 1068, 1072, 1073, 1074, 1075, 1076, 1085, 1157, 1169, 1170, 1212, 1213, 1232, 1243, 1247, 1248, 1266, 1268, 1269, 1272, 1275, 1278, 1281, 1284, 1360, 1391, 1444, 1472, 1480, 1495, 1593, 1615, 1672, 1705, 1729, 1740, 1741, 1773, 1778, 1791, 1810, 1851, 1854, 1855, 1856, 1857, 1879, 1882, 1884, 1885, 1892, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1916, 1918, 1920, 1921, 1923, 1927, 1930, 1935, 1936, 1937, 1939, 1940, 1946], "our": [0, 3, 7, 8, 11, 14, 15, 16, 19, 20, 21, 22, 28, 29, 42, 55, 58, 59, 60, 62, 69, 70, 71, 73, 910, 1105, 1142, 1360, 1905, 1910, 1913, 1918, 1923, 1926, 1930, 1936, 1939], "NOT": [0, 39, 42, 50, 59, 60, 61, 73, 940, 1294, 1384, 1624, 1625, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1669, 1678, 1680, 1686, 1687, 1700, 1905, 1937, 1939], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 16, 17, 19, 21, 22, 23, 26, 28, 29, 33, 34, 39, 40, 42, 44, 45, 47, 48, 50, 51, 56, 59, 60, 61, 62, 65, 69, 70, 73, 74, 83, 156, 239, 510, 792, 798, 874, 875, 906, 957, 958, 959, 988, 989, 991, 1073, 1089, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1125, 1126, 1127, 1187, 1212, 1216, 1221, 1222, 1241, 1242, 1254, 1255, 1256, 1284, 1360, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1405, 1444, 1454, 1491, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1543, 1545, 1554, 1593, 1612, 1624, 1631, 1647, 1664, 1669, 1707, 1770, 1803, 1812, 1813, 1814, 1816, 1817, 1848, 1865, 1879, 1882, 1884, 1885, 1889, 1895, 1897, 1898, 1900, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1916, 1918, 1920, 1922, 1923, 1924, 1926, 1927, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1942, 1944, 1948, 1950], "guarante": [0, 1, 5, 9, 14, 18, 39, 42, 44, 46, 48, 59, 61, 70, 72, 73, 74, 889, 966, 1212, 1221, 1381, 1444, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1803, 1865, 1905, 1907, 1908, 1919, 1920, 1927, 1929, 1931, 1935, 1937], "encount": [0, 5, 12, 16, 20, 23, 25, 29, 42, 70, 72, 73, 693, 1624, 1882, 1885, 1887, 1891, 1907, 1919, 1927, 1930], "nan": [0, 1, 48, 442, 443, 513, 697, 699, 702, 703, 704, 707, 710, 711, 894, 898, 934, 950, 1131, 1132, 1133, 1172, 1201, 1202, 1204, 1205, 1251, 1258, 1271, 1274, 1287, 1292, 1310, 1311, 1315, 1338, 1339, 1340, 1341, 1342, 1543, 1628, 1723, 1760, 1765, 1819, 1853, 1865, 1883, 1892, 1904, 1905, 1911, 1919, 1940, 1946], "verifi": [0, 19, 27, 42, 73, 921, 1068, 1681, 1682, 1700, 1851, 1879, 1882, 1894, 1910, 1913, 1923, 1928], "compat": [0, 1, 33, 39, 44, 48, 50, 63, 65, 69, 70, 73, 74, 511, 512, 616, 630, 693, 828, 829, 830, 903, 947, 977, 978, 1212, 1217, 1229, 1242, 1253, 1266, 1269, 1444, 1450, 1488, 1489, 1490, 1491, 1554, 1668, 1678, 1680, 1752, 1879, 1880, 1884, 1885, 1891, 1897, 1898, 1904, 1910, 1921, 1927, 1929, 1930, 1933, 1935, 1939, 1941], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 13, 14, 16, 19, 20, 21, 22, 25, 28, 31, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 171, 173, 190, 201, 208, 225, 241, 242, 243, 244, 245, 270, 276, 279, 305, 314, 316, 327, 329, 331, 333, 337, 368, 417, 418, 442, 443, 460, 463, 464, 469, 496, 498, 502, 510, 521, 522, 527, 529, 531, 534, 551, 556, 557, 560, 569, 571, 573, 591, 593, 594, 596, 597, 598, 600, 601, 602, 608, 609, 610, 611, 618, 620, 621, 630, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 739, 740, 743, 744, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 764, 765, 766, 768, 769, 770, 771, 773, 781, 782, 783, 785, 786, 787, 788, 791, 793, 795, 796, 798, 807, 809, 812, 815, 830, 833, 834, 835, 838, 867, 869, 878, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 911, 914, 915, 916, 918, 921, 922, 924, 926, 927, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 950, 953, 954, 955, 956, 957, 958, 959, 960, 961, 964, 975, 976, 979, 980, 981, 982, 983, 984, 985, 991, 1000, 1002, 1028, 1029, 1055, 1059, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1083, 1085, 1087, 1088, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1119, 1120, 1121, 1122, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1143, 1144, 1145, 1146, 1147, 1151, 1152, 1153, 1154, 1155, 1165, 1169, 1171, 1172, 1173, 1174, 1175, 1178, 1182, 1186, 1189, 1197, 1208, 1209, 1210, 1212, 1216, 1218, 1219, 1223, 1231, 1232, 1233, 1234, 1235, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1257, 1258, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1301, 1305, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1329, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1348, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1432, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1475, 1477, 1478, 1479, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1493, 1495, 1496, 1499, 1500, 1501, 1508, 1509, 1510, 1511, 1512, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1543, 1546, 1547, 1548, 1551, 1552, 1553, 1554, 1558, 1559, 1561, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1589, 1593, 1594, 1597, 1599, 1602, 1608, 1609, 1610, 1611, 1612, 1615, 1624, 1628, 1631, 1632, 1636, 1641, 1642, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1657, 1658, 1660, 1661, 1663, 1664, 1665, 1666, 1668, 1670, 1671, 1672, 1676, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1720, 1722, 1723, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1760, 1761, 1765, 1767, 1768, 1769, 1772, 1774, 1778, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1799, 1803, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1832, 1833, 1839, 1840, 1842, 1843, 1844, 1845, 1846, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1870, 1871, 1872, 1873, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1892, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1950, 1951], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 13, 16, 17, 25, 28, 29, 31, 33, 36, 37, 39, 40, 42, 48, 57, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 171, 208, 225, 276, 305, 314, 329, 331, 333, 337, 417, 418, 460, 486, 513, 527, 529, 531, 550, 557, 571, 573, 597, 598, 599, 600, 601, 620, 698, 699, 703, 710, 747, 752, 753, 754, 755, 756, 758, 759, 773, 775, 786, 787, 874, 875, 878, 893, 899, 900, 901, 914, 917, 919, 934, 937, 944, 945, 946, 950, 952, 956, 959, 960, 961, 964, 979, 983, 1064, 1066, 1068, 1075, 1077, 1079, 1080, 1083, 1084, 1085, 1088, 1101, 1103, 1105, 1106, 1112, 1113, 1116, 1121, 1124, 1125, 1128, 1131, 1133, 1134, 1135, 1143, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1155, 1165, 1171, 1173, 1175, 1177, 1178, 1189, 1197, 1201, 1218, 1222, 1223, 1232, 1233, 1234, 1237, 1240, 1241, 1258, 1261, 1264, 1267, 1268, 1269, 1270, 1275, 1276, 1279, 1281, 1282, 1284, 1285, 1286, 1287, 1288, 1294, 1298, 1305, 1306, 1312, 1313, 1317, 1341, 1343, 1344, 1346, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1361, 1362, 1363, 1364, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1398, 1399, 1400, 1405, 1407, 1408, 1409, 1410, 1411, 1414, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1432, 1435, 1440, 1441, 1444, 1451, 1454, 1458, 1459, 1465, 1466, 1467, 1468, 1469, 1472, 1475, 1481, 1483, 1487, 1489, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1509, 1510, 1518, 1519, 1521, 1522, 1526, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1538, 1539, 1541, 1543, 1546, 1554, 1578, 1580, 1586, 1602, 1612, 1613, 1614, 1624, 1636, 1646, 1649, 1651, 1652, 1654, 1659, 1660, 1662, 1664, 1670, 1671, 1672, 1674, 1675, 1678, 1681, 1696, 1698, 1700, 1702, 1708, 1712, 1718, 1720, 1722, 1723, 1725, 1726, 1729, 1730, 1733, 1734, 1735, 1736, 1740, 1745, 1746, 1749, 1750, 1756, 1757, 1758, 1765, 1778, 1785, 1787, 1788, 1789, 1790, 1793, 1794, 1803, 1808, 1810, 1811, 1812, 1813, 1815, 1818, 1826, 1829, 1830, 1831, 1832, 1833, 1840, 1842, 1844, 1845, 1846, 1848, 1849, 1851, 1860, 1861, 1865, 1866, 1872, 1873, 1874, 1877, 1882, 1883, 1884, 1885, 1886, 1892, 1899, 1900, 1903, 1904, 1905, 1906, 1908, 1910, 1912, 1913, 1916, 1917, 1921, 1922, 1923, 1926, 1928, 1930, 1935, 1939, 1940, 1942, 1944, 1945, 1946], "growth_interv": 0, "2000": [0, 42, 46, 1103, 1105, 1112, 1121, 1134, 1289, 1496, 1705, 1733, 1783, 1784, 1844], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 33, 34, 36, 39, 42, 46, 48, 49, 50, 52, 53, 56, 57, 59, 60, 65, 73, 74, 81, 82, 368, 602, 637, 693, 794, 893, 914, 915, 916, 917, 918, 919, 921, 922, 952, 953, 965, 966, 968, 1022, 1028, 1029, 1031, 1080, 1085, 1103, 1105, 1133, 1138, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1188, 1210, 1212, 1213, 1215, 1216, 1217, 1222, 1223, 1227, 1283, 1445, 1446, 1454, 1455, 1593, 1624, 1723, 1745, 1749, 1769, 1770, 1805, 1872, 1879, 1889, 1891, 1896, 1897, 1899, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1915, 1918, 1921, 1922, 1927, 1930, 1934, 1935, 1936, 1937, 1942, 1945, 1946, 1950], "contain": [0, 1, 2, 3, 5, 12, 15, 20, 22, 24, 28, 29, 31, 33, 34, 39, 42, 43, 46, 47, 48, 50, 52, 53, 57, 60, 65, 72, 73, 74, 75, 80, 82, 97, 105, 167, 171, 208, 212, 225, 306, 327, 329, 331, 335, 337, 486, 498, 557, 616, 620, 699, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 773, 827, 850, 854, 890, 905, 906, 914, 915, 916, 917, 918, 919, 920, 930, 934, 935, 936, 944, 946, 950, 968, 979, 980, 984, 987, 998, 999, 1000, 1001, 1002, 1031, 1085, 1119, 1120, 1122, 1128, 1148, 1149, 1152, 1153, 1169, 1170, 1173, 1174, 1182, 1186, 1203, 1210, 1212, 1213, 1218, 1219, 1222, 1227, 1228, 1231, 1242, 1248, 1249, 1250, 1251, 1253, 1255, 1257, 1258, 1274, 1283, 1301, 1305, 1312, 1334, 1340, 1352, 1361, 1380, 1381, 1387, 1388, 1391, 1396, 1397, 1399, 1404, 1414, 1415, 1436, 1444, 1445, 1446, 1451, 1454, 1459, 1461, 1472, 1476, 1483, 1495, 1526, 1534, 1535, 1537, 1608, 1615, 1618, 1619, 1624, 1632, 1633, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1664, 1665, 1668, 1670, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1719, 1722, 1747, 1761, 1765, 1825, 1826, 1830, 1846, 1853, 1855, 1857, 1862, 1863, 1868, 1872, 1880, 1882, 1884, 1885, 1886, 1892, 1895, 1899, 1900, 1904, 1905, 1909, 1910, 1911, 1912, 1913, 1915, 1916, 1919, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1935, 1937, 1939, 1941, 1942, 1944, 1945, 1947, 1948, 1949, 1950], "backoff": [0, 1935], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 14, 20, 28, 36, 39, 40, 42, 44, 46, 47, 48, 50, 53, 56, 57, 59, 60, 62, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 105, 233, 235, 249, 258, 270, 329, 331, 333, 337, 452, 459, 460, 462, 464, 472, 487, 491, 507, 511, 513, 527, 529, 531, 534, 550, 556, 558, 559, 571, 573, 579, 596, 597, 598, 600, 601, 620, 630, 693, 706, 708, 709, 710, 712, 768, 769, 788, 790, 792, 793, 798, 799, 800, 832, 887, 888, 889, 891, 905, 912, 925, 935, 937, 944, 951, 953, 960, 965, 983, 984, 985, 987, 989, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1013, 1014, 1015, 1017, 1019, 1023, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1054, 1055, 1056, 1059, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1086, 1088, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1124, 1138, 1139, 1143, 1144, 1145, 1146, 1147, 1153, 1154, 1160, 1162, 1163, 1165, 1169, 1170, 1172, 1173, 1174, 1175, 1186, 1188, 1209, 1210, 1212, 1213, 1215, 1218, 1223, 1231, 1233, 1243, 1244, 1264, 1265, 1268, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1291, 1298, 1299, 1304, 1309, 1311, 1312, 1314, 1317, 1319, 1320, 1321, 1324, 1334, 1339, 1340, 1341, 1342, 1343, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1387, 1388, 1390, 1391, 1392, 1393, 1395, 1397, 1399, 1407, 1408, 1409, 1412, 1413, 1415, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1431, 1432, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1446, 1449, 1451, 1452, 1455, 1456, 1457, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1477, 1479, 1480, 1483, 1487, 1489, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1525, 1526, 1527, 1534, 1535, 1542, 1545, 1554, 1562, 1578, 1579, 1580, 1584, 1585, 1599, 1600, 1608, 1612, 1613, 1614, 1624, 1632, 1641, 1642, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1658, 1660, 1665, 1668, 1671, 1672, 1674, 1675, 1678, 1680, 1681, 1682, 1689, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1719, 1720, 1727, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1740, 1741, 1742, 1744, 1750, 1751, 1752, 1755, 1756, 1757, 1758, 1761, 1766, 1767, 1768, 1772, 1776, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1803, 1806, 1809, 1810, 1811, 1818, 1821, 1823, 1824, 1825, 1826, 1829, 1831, 1835, 1841, 1845, 1846, 1848, 1850, 1851, 1854, 1855, 1856, 1857, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1872, 1873, 1877, 1881, 1882, 1883, 1884, 1885, 1886, 1895, 1897, 1898, 1900, 1903, 1908, 1911, 1918, 1921, 1923, 1925, 1928, 1929, 1930, 1934, 1935, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1951], "interv": [0, 48, 61, 878, 980, 1135, 1325, 1326, 1714, 1738, 1739, 1787, 1895, 1908, 1929], "get_scal": [0, 1904], "sync": [0, 11, 15, 42, 46, 65, 72, 73, 1624, 1908, 1909, 1928], "is_en": [0, 1805, 1812, 1813, 1814, 1815, 1816, 1817], "indic": [0, 1, 2, 3, 17, 20, 29, 39, 40, 42, 43, 47, 48, 59, 97, 98, 208, 225, 238, 329, 331, 333, 334, 335, 337, 486, 527, 529, 531, 557, 585, 586, 596, 627, 708, 709, 748, 758, 759, 887, 888, 889, 890, 891, 911, 921, 922, 950, 957, 958, 971, 986, 988, 989, 991, 1025, 1064, 1065, 1088, 1143, 1144, 1146, 1147, 1148, 1152, 1153, 1154, 1165, 1186, 1210, 1212, 1217, 1225, 1228, 1229, 1233, 1242, 1253, 1255, 1266, 1269, 1283, 1291, 1299, 1301, 1303, 1309, 1312, 1314, 1317, 1334, 1340, 1344, 1352, 1353, 1354, 1355, 1380, 1387, 1388, 1392, 1393, 1438, 1439, 1440, 1441, 1442, 1447, 1449, 1450, 1505, 1506, 1507, 1526, 1534, 1535, 1538, 1539, 1555, 1570, 1571, 1572, 1580, 1593, 1608, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1650, 1651, 1670, 1671, 1709, 1711, 1730, 1765, 1803, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1840, 1841, 1845, 1848, 1854, 1855, 1856, 1857, 1862, 1863, 1865, 1872, 1875, 1881, 1882, 1883, 1885, 1889, 1898, 1899, 1910, 1918, 1921, 1923, 1925, 1935, 1939, 1943, 1944, 1946], "load_state_dict": [0, 40, 44, 46, 65, 1212, 1283, 1444, 1615, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1879, 1880, 1916, 1921, 1930], "state_dict": [0, 40, 44, 46, 65, 849, 850, 1212, 1444, 1615, 1650, 1668, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1879, 1894, 1909, 1916, 1918, 1921, 1923, 1930, 1948], "load": [0, 1, 18, 19, 22, 25, 29, 31, 33, 34, 40, 44, 46, 65, 850, 875, 929, 966, 987, 1216, 1222, 1227, 1388, 1615, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1761, 1880, 1882, 1893, 1894, 1899, 1905, 1908, 1915, 1916, 1920, 1922, 1923, 1944], "scaler": [0, 1904, 1908], "dict": [0, 3, 5, 18, 23, 28, 39, 40, 42, 43, 44, 46, 47, 48, 50, 53, 57, 61, 65, 67, 69, 73, 693, 805, 806, 807, 828, 829, 830, 849, 867, 923, 966, 1028, 1029, 1042, 1051, 1141, 1151, 1153, 1210, 1211, 1212, 1213, 1218, 1223, 1227, 1228, 1283, 1284, 1381, 1391, 1444, 1445, 1454, 1495, 1615, 1624, 1647, 1666, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1872, 1879, 1882, 1883, 1885, 1886, 1894, 1895, 1910, 1916, 1921, 1923, 1925, 1926, 1935, 1936, 1944, 1948, 1949, 1950], "object": [0, 1, 3, 5, 6, 8, 12, 13, 15, 18, 20, 23, 28, 33, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 59, 61, 65, 72, 73, 74, 76, 89, 105, 223, 226, 616, 806, 807, 867, 874, 893, 903, 904, 905, 930, 932, 966, 1009, 1020, 1060, 1085, 1124, 1136, 1138, 1143, 1144, 1146, 1147, 1148, 1152, 1198, 1199, 1212, 1218, 1219, 1222, 1223, 1227, 1228, 1243, 1264, 1268, 1281, 1283, 1284, 1304, 1381, 1383, 1384, 1385, 1389, 1407, 1408, 1409, 1444, 1454, 1483, 1624, 1634, 1649, 1658, 1659, 1662, 1663, 1664, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1692, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1761, 1834, 1835, 1838, 1879, 1884, 1885, 1886, 1889, 1893, 1894, 1897, 1901, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1915, 1918, 1920, 1921, 1922, 1923, 1926, 1930, 1932, 1933, 1934, 1935, 1937, 1941, 1942, 1944, 1946, 1950, 1951], "unmodifi": [0, 26, 42], "iter": [0, 1, 2, 3, 7, 16, 20, 28, 29, 40, 42, 43, 44, 46, 48, 60, 62, 65, 73, 74, 79, 998, 999, 1000, 1001, 1002, 1031, 1034, 1036, 1057, 1212, 1284, 1444, 1445, 1446, 1454, 1455, 1624, 1625, 1628, 1629, 1630, 1632, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1665, 1667, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1703, 1704, 1705, 1708, 1719, 1789, 1831, 1883, 1885, 1886, 1897, 1899, 1904, 1905, 1906, 1908, 1909, 1910, 1913, 1916, 1926, 1929, 1934, 1944, 1950], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 19, 20, 22, 26, 28, 29, 35, 36, 39, 40, 42, 43, 44, 47, 48, 50, 52, 56, 57, 58, 59, 60, 61, 65, 67, 69, 70, 71, 72, 73, 74, 98, 105, 167, 213, 488, 489, 527, 529, 531, 557, 570, 902, 903, 904, 905, 906, 910, 933, 968, 971, 973, 977, 978, 1002, 1007, 1013, 1014, 1032, 1033, 1052, 1053, 1061, 1108, 1137, 1142, 1145, 1153, 1154, 1173, 1209, 1212, 1213, 1218, 1222, 1244, 1248, 1252, 1255, 1257, 1259, 1260, 1265, 1269, 1270, 1272, 1273, 1275, 1277, 1280, 1281, 1283, 1284, 1292, 1352, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1391, 1438, 1439, 1440, 1441, 1442, 1444, 1451, 1472, 1475, 1495, 1497, 1545, 1555, 1599, 1617, 1618, 1619, 1622, 1623, 1624, 1632, 1633, 1636, 1657, 1660, 1661, 1669, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1717, 1736, 1749, 1765, 1775, 1781, 1788, 1809, 1861, 1872, 1879, 1884, 1885, 1895, 1897, 1899, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1926, 1927, 1928, 1930, 1935, 1936, 1937, 1939, 1940, 1941, 1943, 1947], "five": [0, 1885, 1921], "entri": [0, 3, 12, 14, 20, 42, 43, 46, 48, 57, 59, 60, 331, 748, 871, 872, 930, 1028, 1029, 1075, 1126, 1127, 1186, 1212, 1232, 1387, 1388, 1444, 1450, 1534, 1535, 1620, 1621, 1642, 1643, 1651, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1809, 1882, 1885, 1886, 1892, 1900, 1905, 1909, 1910, 1913, 1916, 1933, 1939, 1944, 1948], "_growth_track": 0, "recent": [0, 1, 7, 8, 24, 29, 62, 72, 1187, 1197, 1805, 1884, 1885, 1900, 1910, 1919, 1920, 1939, 1946], "consecut": [0, 42, 623, 1659, 1701, 1851, 1862, 1863, 1899, 1923], "unskip": 0, "empti": [0, 3, 14, 15, 25, 42, 44, 50, 57, 65, 70, 73, 337, 527, 529, 550, 558, 830, 936, 937, 947, 953, 1085, 1087, 1210, 1213, 1237, 1257, 1258, 1263, 1270, 1293, 1294, 1295, 1296, 1303, 1361, 1380, 1388, 1451, 1516, 1535, 1581, 1664, 1676, 1680, 1815, 1830, 1844, 1878, 1881, 1882, 1883, 1884, 1885, 1887, 1893, 1898, 1899, 1900, 1903, 1906, 1908, 1910, 1923, 1925, 1927, 1939, 1940, 1947], "wish": [0, 1148, 1821, 1904, 1908, 1910, 1911], "checkpoint": [0, 11, 46, 60, 62, 65, 929, 1283, 1624, 1879, 1880, 1894, 1912, 1921, 1928, 1937], "kwarg": [0, 1, 5, 12, 13, 28, 29, 33, 39, 42, 43, 46, 59, 65, 73, 74, 80, 593, 616, 760, 773, 775, 776, 834, 835, 837, 840, 903, 970, 989, 991, 1028, 1029, 1141, 1152, 1153, 1212, 1215, 1217, 1275, 1301, 1396, 1406, 1414, 1433, 1444, 1459, 1474, 1478, 1482, 1484, 1485, 1615, 1620, 1624, 1638, 1643, 1647, 1657, 1664, 1666, 1669, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1761, 1863, 1872, 1879, 1885, 1886, 1910, 1911, 1916, 1924, 1926, 1935, 1941, 1949, 1950], "carri": [0, 69, 352, 810, 851, 852, 870, 871, 1906, 1930], "out": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 25, 28, 31, 34, 36, 39, 42, 44, 47, 48, 56, 57, 60, 66, 69, 73, 74, 78, 80, 328, 330, 332, 334, 415, 417, 463, 510, 526, 528, 530, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 769, 773, 777, 785, 786, 787, 792, 794, 798, 810, 849, 851, 852, 870, 871, 878, 879, 880, 881, 882, 883, 884, 885, 890, 894, 895, 896, 897, 898, 907, 908, 909, 912, 921, 934, 936, 937, 938, 939, 940, 941, 942, 943, 946, 950, 953, 955, 956, 957, 958, 959, 961, 962, 964, 966, 974, 975, 976, 978, 979, 981, 982, 985, 990, 998, 1000, 1002, 1029, 1030, 1042, 1043, 1055, 1059, 1064, 1065, 1066, 1067, 1069, 1072, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1138, 1139, 1142, 1143, 1145, 1146, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1166, 1167, 1168, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1179, 1180, 1181, 1183, 1184, 1185, 1186, 1187, 1189, 1190, 1206, 1207, 1212, 1223, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1329, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 1353, 1354, 1355, 1357, 1358, 1359, 1365, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1387, 1389, 1392, 1393, 1396, 1397, 1412, 1413, 1414, 1429, 1431, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1456, 1457, 1459, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1487, 1488, 1489, 1490, 1491, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1514, 1518, 1519, 1520, 1521, 1522, 1523, 1529, 1530, 1531, 1536, 1539, 1543, 1554, 1560, 1579, 1581, 1612, 1624, 1641, 1642, 1643, 1644, 1670, 1671, 1672, 1673, 1675, 1676, 1700, 1717, 1718, 1722, 1723, 1724, 1726, 1729, 1730, 1736, 1737, 1738, 1740, 1742, 1744, 1745, 1748, 1749, 1750, 1754, 1758, 1759, 1760, 1762, 1763, 1764, 1765, 1781, 1782, 1783, 1795, 1796, 1797, 1798, 1803, 1807, 1808, 1819, 1820, 1822, 1823, 1824, 1825, 1827, 1828, 1830, 1841, 1842, 1843, 1846, 1848, 1850, 1853, 1854, 1856, 1858, 1859, 1865, 1867, 1868, 1869, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1882, 1883, 1885, 1892, 1895, 1897, 1899, 1900, 1905, 1906, 1908, 1909, 1910, 1911, 1916, 1918, 1923, 1926, 1927, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1940, 1942, 1944, 1945, 1949, 1950], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 25, 29, 31, 33, 34, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 56, 57, 58, 59, 60, 65, 67, 69, 70, 73, 74, 76, 81, 82, 96, 97, 98, 502, 630, 693, 773, 792, 798, 805, 806, 807, 813, 827, 828, 829, 830, 832, 833, 834, 835, 837, 838, 867, 874, 875, 902, 903, 904, 908, 926, 927, 950, 955, 1028, 1042, 1085, 1103, 1105, 1129, 1138, 1151, 1165, 1212, 1213, 1221, 1225, 1232, 1243, 1254, 1264, 1267, 1268, 1281, 1284, 1303, 1306, 1352, 1361, 1367, 1380, 1388, 1391, 1396, 1414, 1444, 1459, 1475, 1491, 1495, 1562, 1593, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1631, 1671, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1708, 1711, 1719, 1730, 1758, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1805, 1806, 1807, 1808, 1815, 1826, 1851, 1859, 1865, 1879, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1945, 1946, 1950, 1951], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 25, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 50, 56, 57, 59, 60, 65, 69, 70, 73, 98, 99, 596, 597, 598, 600, 601, 620, 630, 693, 705, 707, 773, 806, 900, 903, 916, 921, 954, 956, 995, 1034, 1036, 1064, 1065, 1073, 1082, 1085, 1091, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1131, 1132, 1141, 1151, 1173, 1175, 1201, 1210, 1212, 1222, 1225, 1232, 1235, 1237, 1242, 1244, 1247, 1248, 1253, 1254, 1259, 1264, 1267, 1268, 1270, 1271, 1273, 1275, 1280, 1283, 1306, 1309, 1312, 1314, 1317, 1341, 1358, 1360, 1361, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1391, 1396, 1404, 1405, 1411, 1413, 1414, 1435, 1436, 1438, 1444, 1447, 1448, 1449, 1451, 1452, 1458, 1459, 1475, 1476, 1491, 1492, 1493, 1495, 1515, 1516, 1526, 1545, 1555, 1562, 1578, 1586, 1593, 1631, 1636, 1658, 1668, 1670, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1707, 1711, 1730, 1745, 1758, 1810, 1815, 1830, 1846, 1850, 1851, 1853, 1869, 1873, 1879, 1881, 1882, 1884, 1885, 1889, 1891, 1892, 1898, 1899, 1900, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1916, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1931, 1935, 1936, 1937, 1939, 1940, 1944, 1945, 1946, 1948, 1949], "unscale_": [0, 1904], "unless": [0, 1, 4, 7, 14, 40, 42, 61, 65, 66, 73, 167, 513, 853, 871, 910, 937, 1141, 1212, 1255, 1260, 1273, 1283, 1312, 1398, 1444, 1491, 1619, 1647, 1666, 1694, 1700, 1765, 1865, 1885, 1891, 1905, 1908, 1920, 1923, 1927, 1931], "explicitli": [0, 8, 14, 33, 42, 47, 52, 65, 100, 1022, 1073, 1075, 1085, 1174, 1252, 1265, 1269, 1277, 1319, 1554, 1612, 1711, 1826, 1882, 1884, 1885, 1886, 1891, 1908, 1910, 1913, 1915, 1921, 1923, 1927, 1928, 1934, 1935, 1939], "earlier": [0, 1, 6, 17, 1830, 1905, 1908, 1912, 1915, 1921, 1923, 1929], "part": [0, 1, 3, 4, 5, 6, 7, 9, 12, 15, 16, 17, 25, 28, 29, 33, 34, 36, 39, 40, 42, 44, 48, 59, 60, 65, 69, 70, 73, 96, 97, 854, 920, 974, 1085, 1202, 1204, 1205, 1208, 1212, 1222, 1224, 1227, 1228, 1242, 1248, 1250, 1259, 1266, 1269, 1444, 1483, 1593, 1624, 1634, 1703, 1730, 1811, 1851, 1854, 1855, 1856, 1857, 1879, 1880, 1882, 1884, 1885, 1893, 1894, 1904, 1905, 1908, 1910, 1912, 1913, 1916, 1921, 1923, 1927, 1928, 1930, 1935, 1936, 1937, 1939, 1944, 1946], "check": [0, 4, 5, 13, 14, 15, 16, 17, 20, 21, 22, 28, 29, 31, 33, 39, 42, 43, 48, 50, 59, 65, 74, 75, 80, 82, 238, 356, 513, 707, 874, 910, 912, 913, 921, 922, 968, 988, 989, 991, 995, 1024, 1042, 1199, 1209, 1212, 1227, 1228, 1241, 1242, 1247, 1248, 1250, 1253, 1255, 1260, 1266, 1269, 1273, 1275, 1276, 1301, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1444, 1615, 1624, 1633, 1636, 1649, 1659, 1681, 1682, 1805, 1812, 1813, 1814, 1815, 1816, 1817, 1879, 1880, 1884, 1885, 1886, 1898, 1899, 1904, 1908, 1910, 1911, 1912, 1915, 1916, 1917, 1920, 1923, 1926, 1927, 1928, 1929, 1935, 1939, 1944, 1946, 1950], "inf": [0, 29, 48, 65, 697, 699, 702, 703, 704, 898, 934, 950, 1201, 1202, 1204, 1206, 1207, 1243, 1258, 1264, 1268, 1271, 1281, 1292, 1338, 1434, 1477, 1487, 1593, 1628, 1642, 1651, 1671, 1758, 1765, 1904, 1905, 1911, 1919, 1940, 1946], "found": [0, 7, 12, 15, 19, 22, 24, 28, 34, 36, 59, 73, 97, 99, 100, 950, 985, 1064, 1065, 1212, 1216, 1233, 1309, 1312, 1314, 1317, 1340, 1356, 1366, 1389, 1444, 1471, 1765, 1879, 1882, 1885, 1900, 1904, 1910, 1913, 1916, 1918, 1923, 1927, 1929, 1930, 1935, 1944, 1950], "otherwis": [0, 1, 3, 5, 7, 9, 31, 33, 39, 42, 43, 49, 52, 65, 66, 70, 73, 105, 226, 337, 344, 348, 352, 354, 358, 359, 509, 518, 573, 593, 594, 596, 616, 630, 693, 699, 700, 701, 702, 703, 706, 708, 709, 710, 712, 748, 773, 781, 782, 797, 807, 830, 833, 834, 874, 875, 878, 905, 908, 916, 921, 934, 950, 1026, 1085, 1091, 1124, 1136, 1203, 1209, 1212, 1215, 1218, 1224, 1233, 1257, 1272, 1281, 1283, 1284, 1299, 1304, 1309, 1311, 1312, 1314, 1316, 1317, 1339, 1342, 1358, 1359, 1378, 1380, 1383, 1384, 1385, 1389, 1396, 1400, 1401, 1402, 1403, 1405, 1414, 1430, 1444, 1448, 1449, 1450, 1451, 1452, 1454, 1459, 1460, 1462, 1475, 1481, 1483, 1486, 1487, 1489, 1491, 1492, 1493, 1511, 1512, 1545, 1547, 1548, 1552, 1587, 1597, 1624, 1631, 1636, 1657, 1661, 1669, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1694, 1696, 1697, 1698, 1699, 1717, 1719, 1727, 1729, 1736, 1745, 1752, 1765, 1773, 1781, 1824, 1825, 1826, 1829, 1861, 1862, 1863, 1867, 1868, 1875, 1879, 1882, 1884, 1885, 1892, 1893, 1898, 1904, 1910, 1911, 1918, 1923, 1930, 1931, 1933, 1934, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1950], "skip": [0, 14, 17, 20, 59, 872, 968, 1085, 1138, 1241, 1242, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1799, 1882, 1904, 1905, 1908, 1909, 1910, 1916, 1926, 1929], "avoid": [0, 5, 8, 9, 14, 15, 16, 17, 18, 20, 39, 42, 48, 57, 60, 65, 73, 74, 81, 82, 105, 208, 225, 463, 794, 878, 906, 947, 966, 1042, 1212, 1257, 1283, 1379, 1410, 1411, 1435, 1444, 1453, 1458, 1495, 1525, 1555, 1579, 1586, 1624, 1632, 1700, 1751, 1780, 1826, 1844, 1862, 1880, 1895, 1899, 1905, 1907, 1908, 1912, 1913, 1916, 1928, 1935, 1936, 1943, 1944, 1945], "corrupt": [0, 42, 59, 1381, 1908, 1918], "param": [0, 1, 46, 48, 51, 59, 65, 67, 69, 73, 777, 808, 1141, 1151, 1212, 1230, 1444, 1450, 1454, 1455, 1623, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1695, 1696, 1697, 1698, 1699, 1700, 1713, 1754, 1883, 1893, 1903, 1904, 1908, 1909, 1926, 1950], "appli": [0, 1, 3, 5, 8, 11, 13, 17, 28, 40, 44, 46, 47, 48, 50, 52, 59, 65, 69, 70, 71, 73, 74, 83, 96, 97, 136, 337, 414, 487, 527, 531, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 748, 751, 752, 753, 754, 755, 756, 771, 773, 779, 780, 781, 782, 783, 784, 785, 786, 787, 793, 794, 795, 796, 797, 823, 824, 825, 826, 853, 871, 910, 912, 913, 921, 933, 939, 942, 968, 979, 1073, 1075, 1080, 1089, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1133, 1141, 1142, 1149, 1152, 1153, 1212, 1216, 1261, 1284, 1301, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1386, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1458, 1459, 1462, 1463, 1464, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1538, 1539, 1540, 1541, 1544, 1546, 1547, 1548, 1549, 1553, 1554, 1555, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1573, 1578, 1586, 1587, 1588, 1589, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1615, 1620, 1621, 1624, 1631, 1632, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1658, 1665, 1666, 1668, 1669, 1671, 1684, 1696, 1700, 1713, 1726, 1731, 1732, 1733, 1734, 1735, 1775, 1806, 1807, 1809, 1826, 1862, 1863, 1864, 1872, 1882, 1885, 1892, 1897, 1899, 1904, 1905, 1908, 1909, 1910, 1911, 1913, 1916, 1919, 1923, 1926, 1927, 1928, 1930, 1933, 1936, 1939, 1940], "argument": [0, 1, 3, 4, 5, 8, 9, 11, 15, 22, 28, 33, 36, 39, 42, 43, 44, 46, 48, 50, 57, 60, 62, 65, 69, 70, 72, 73, 74, 80, 81, 82, 98, 105, 167, 213, 226, 329, 337, 460, 461, 462, 463, 464, 502, 527, 531, 573, 593, 594, 596, 597, 598, 600, 601, 616, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 747, 751, 752, 753, 754, 755, 756, 806, 807, 812, 832, 833, 834, 837, 838, 839, 854, 870, 871, 874, 876, 878, 893, 894, 895, 896, 897, 898, 902, 903, 904, 905, 906, 910, 911, 912, 915, 917, 918, 919, 920, 921, 926, 927, 933, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 946, 950, 953, 955, 956, 957, 958, 959, 961, 963, 964, 970, 974, 978, 979, 981, 982, 984, 985, 1007, 1009, 1013, 1014, 1020, 1028, 1029, 1031, 1054, 1058, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1082, 1083, 1084, 1086, 1087, 1088, 1090, 1095, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1186, 1189, 1206, 1207, 1209, 1212, 1215, 1223, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1362, 1363, 1364, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1388, 1391, 1394, 1396, 1403, 1406, 1407, 1408, 1409, 1410, 1414, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1440, 1441, 1442, 1444, 1445, 1450, 1451, 1452, 1459, 1483, 1491, 1495, 1497, 1498, 1541, 1543, 1579, 1615, 1618, 1619, 1620, 1621, 1624, 1635, 1636, 1638, 1642, 1643, 1647, 1651, 1657, 1666, 1670, 1672, 1675, 1676, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1705, 1717, 1718, 1722, 1723, 1726, 1727, 1729, 1730, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1758, 1760, 1765, 1769, 1775, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1803, 1805, 1807, 1808, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1841, 1842, 1843, 1844, 1846, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1862, 1865, 1867, 1868, 1872, 1873, 1874, 1875, 1877, 1878, 1879, 1883, 1884, 1885, 1887, 1889, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1920, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1939, 1940, 1941, 1942, 1944, 1946, 1950, 1951], "keyword": [0, 1, 5, 39, 42, 43, 46, 65, 70, 73, 74, 80, 98, 105, 329, 337, 460, 461, 462, 463, 464, 594, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 709, 710, 711, 712, 874, 878, 893, 894, 895, 896, 897, 898, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 946, 950, 953, 955, 957, 958, 959, 961, 963, 964, 974, 978, 979, 981, 982, 984, 985, 998, 1000, 1002, 1028, 1029, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1077, 1080, 1082, 1084, 1086, 1087, 1088, 1090, 1095, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1138, 1139, 1140, 1141, 1154, 1155, 1156, 1157, 1165, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1176, 1177, 1178, 1186, 1189, 1206, 1207, 1212, 1215, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1332, 1333, 1334, 1336, 1338, 1339, 1340, 1341, 1342, 1344, 1345, 1346, 1348, 1381, 1403, 1406, 1444, 1618, 1619, 1624, 1636, 1638, 1643, 1647, 1666, 1670, 1672, 1675, 1676, 1678, 1717, 1718, 1722, 1723, 1726, 1727, 1729, 1730, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1750, 1751, 1758, 1760, 1765, 1781, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1798, 1803, 1805, 1808, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1822, 1823, 1824, 1825, 1827, 1829, 1830, 1841, 1842, 1843, 1844, 1848, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1865, 1867, 1868, 1869, 1874, 1875, 1877, 1878, 1879, 1885, 1886, 1899, 1900, 1910, 1919, 1923, 1926, 1935, 1939, 1940, 1944, 1947, 1950], "closur": [0, 17, 46, 74, 81, 82, 968, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700], "divid": [0, 5, 40, 42, 46, 254, 596, 597, 598, 1002, 1080, 1083, 1103, 1121, 1130, 1174, 1175, 1222, 1360, 1361, 1367, 1368, 1378, 1404, 1405, 1411, 1435, 1436, 1447, 1448, 1449, 1458, 1475, 1476, 1492, 1493, 1515, 1516, 1526, 1527, 1555, 1578, 1586, 1624, 1830, 1873, 1883, 1925], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 23, 25, 29, 33, 34, 39, 40, 42, 43, 44, 46, 47, 48, 51, 52, 57, 59, 60, 62, 65, 67, 68, 70, 73, 74, 99, 100, 167, 270, 486, 509, 513, 596, 693, 747, 748, 832, 833, 834, 837, 838, 839, 854, 871, 902, 906, 910, 911, 920, 947, 948, 956, 1022, 1031, 1038, 1073, 1075, 1085, 1106, 1108, 1128, 1141, 1212, 1305, 1334, 1380, 1387, 1440, 1441, 1442, 1444, 1450, 1487, 1489, 1491, 1518, 1519, 1520, 1611, 1624, 1636, 1638, 1642, 1644, 1672, 1700, 1746, 1751, 1765, 1823, 1851, 1880, 1882, 1884, 1885, 1892, 1893, 1897, 1899, 1900, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1915, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1933, 1935, 1936, 1937, 1939, 1941, 1942, 1946, 1947, 1949, 1950], "modifi": [0, 1, 13, 14, 15, 16, 23, 26, 29, 36, 39, 40, 42, 43, 44, 46, 65, 73, 74, 276, 502, 804, 851, 852, 853, 910, 912, 913, 926, 927, 968, 977, 978, 1165, 1209, 1212, 1215, 1216, 1231, 1387, 1444, 1487, 1489, 1491, 1534, 1535, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1628, 1629, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1703, 1711, 1793, 1882, 1885, 1898, 1904, 1908, 1910, 1911, 1916, 1921, 1927, 1928, 1930, 1935, 1940, 1943, 1945, 1949], "inspect": [0, 1, 16, 19, 22, 42, 65, 73, 929, 1212, 1223, 1904, 1910, 1915, 1927, 1931, 1942, 1950], "between": [0, 1, 2, 3, 7, 11, 16, 17, 18, 20, 25, 29, 35, 36, 40, 42, 48, 49, 59, 60, 61, 65, 72, 73, 213, 527, 596, 597, 598, 600, 601, 620, 630, 702, 703, 704, 708, 709, 773, 785, 786, 787, 815, 870, 878, 897, 906, 908, 915, 917, 918, 919, 921, 922, 954, 966, 984, 988, 995, 997, 1044, 1048, 1062, 1063, 1068, 1085, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1136, 1165, 1172, 1209, 1212, 1223, 1247, 1248, 1270, 1275, 1341, 1360, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1380, 1383, 1384, 1385, 1389, 1391, 1396, 1405, 1411, 1420, 1421, 1422, 1423, 1424, 1425, 1435, 1437, 1438, 1439, 1444, 1447, 1448, 1449, 1453, 1472, 1475, 1476, 1477, 1492, 1493, 1495, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1542, 1567, 1568, 1569, 1583, 1599, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1711, 1713, 1722, 1730, 1734, 1735, 1740, 1741, 1745, 1770, 1823, 1824, 1825, 1826, 1830, 1850, 1851, 1867, 1868, 1882, 1884, 1885, 1886, 1892, 1897, 1900, 1904, 1905, 1907, 1908, 1909, 1913, 1914, 1916, 1918, 1920, 1921, 1923, 1926, 1928, 1930, 1931, 1935, 1937, 1939, 1941, 1944, 1948], "dure": [0, 1, 5, 11, 12, 16, 19, 20, 24, 25, 28, 29, 33, 36, 40, 42, 44, 50, 51, 53, 59, 65, 72, 73, 74, 97, 98, 351, 517, 518, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 806, 840, 902, 903, 912, 1030, 1031, 1043, 1044, 1063, 1222, 1224, 1225, 1227, 1283, 1356, 1362, 1363, 1364, 1381, 1382, 1387, 1388, 1407, 1408, 1409, 1462, 1483, 1489, 1491, 1528, 1534, 1535, 1615, 1624, 1626, 1627, 1664, 1678, 1681, 1714, 1811, 1855, 1857, 1884, 1891, 1892, 1893, 1895, 1898, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1919, 1920, 1923, 1927, 1929, 1930, 1933, 1935, 1937, 1946], "simpl": [0, 15, 19, 20, 34, 36, 40, 52, 59, 69, 71, 73, 984, 1042, 1143, 1151, 1152, 1153, 1212, 1216, 1223, 1362, 1363, 1364, 1387, 1417, 1418, 1419, 1444, 1483, 1534, 1679, 1786, 1872, 1879, 1882, 1886, 1900, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1923, 1927, 1935, 1939], "clip": [0, 65, 980, 1628, 1629, 1883, 1911, 1923, 1925], "util": [0, 7, 14, 16, 21, 25, 29, 35, 60, 65, 66, 72, 73, 74, 745, 748, 751, 752, 753, 758, 759, 769, 773, 777, 803, 811, 1002, 1136, 1212, 1396, 1414, 1444, 1459, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1633, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1657, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1705, 1711, 1834, 1835, 1836, 1837, 1838, 1880, 1885, 1895, 1904, 1906, 1907, 1908, 1910, 1912, 1913, 1915, 1916, 1918, 1923, 1926, 1927, 1928], "clip_grad_norm_": [0, 65, 1904], "max_norm": [0, 65, 758, 759, 1387, 1388, 1534, 1535, 1628, 1883, 1904], "own": [0, 7, 9, 15, 19, 42, 43, 46, 48, 51, 59, 61, 65, 73, 693, 1020, 1119, 1138, 1174, 1212, 1283, 1372, 1373, 1374, 1375, 1376, 1377, 1444, 1633, 1636, 1885, 1901, 1904, 1908, 1927, 1930, 1931, 1935, 1937, 1939], "onc": [0, 1, 7, 9, 11, 13, 16, 20, 22, 24, 34, 39, 40, 42, 43, 44, 46, 48, 49, 51, 52, 59, 65, 68, 70, 72, 73, 96, 910, 911, 912, 914, 916, 1085, 1212, 1216, 1283, 1381, 1444, 1624, 1634, 1636, 1668, 1709, 1713, 1729, 1776, 1780, 1882, 1885, 1893, 1895, 1897, 1904, 1905, 1907, 1908, 1910, 1913, 1915, 1916, 1926, 1927, 1939, 1944], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 33, 34, 36, 39, 40, 42, 43, 44, 46, 48, 50, 52, 56, 57, 58, 59, 60, 61, 62, 65, 68, 70, 71, 72, 73, 89, 105, 167, 276, 329, 331, 337, 351, 501, 527, 529, 531, 559, 573, 620, 623, 630, 693, 699, 700, 705, 707, 711, 712, 748, 773, 804, 806, 807, 827, 853, 867, 871, 874, 887, 890, 902, 903, 904, 906, 907, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 930, 931, 932, 936, 945, 947, 952, 953, 957, 960, 961, 965, 966, 968, 973, 983, 988, 989, 991, 992, 1000, 1001, 1010, 1018, 1022, 1028, 1032, 1033, 1041, 1042, 1049, 1050, 1052, 1053, 1057, 1059, 1061, 1102, 1103, 1104, 1105, 1108, 1111, 1112, 1115, 1118, 1120, 1122, 1138, 1141, 1142, 1148, 1149, 1151, 1152, 1154, 1174, 1177, 1208, 1209, 1212, 1219, 1222, 1223, 1226, 1227, 1247, 1274, 1283, 1299, 1301, 1309, 1311, 1314, 1322, 1331, 1339, 1340, 1341, 1342, 1352, 1359, 1361, 1365, 1367, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1387, 1388, 1391, 1396, 1397, 1398, 1399, 1404, 1410, 1411, 1414, 1415, 1431, 1435, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1459, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1483, 1487, 1489, 1491, 1492, 1495, 1500, 1501, 1508, 1514, 1516, 1534, 1535, 1540, 1545, 1564, 1565, 1593, 1599, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1628, 1631, 1636, 1643, 1647, 1657, 1661, 1669, 1670, 1671, 1672, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1705, 1708, 1709, 1712, 1713, 1714, 1715, 1727, 1805, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1823, 1824, 1825, 1826, 1829, 1845, 1847, 1854, 1855, 1856, 1857, 1860, 1863, 1867, 1868, 1870, 1874, 1879, 1882, 1883, 1884, 1885, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1927, 1928, 1929, 1930, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950], "assign": [0, 1, 7, 9, 10, 39, 42, 50, 59, 60, 70, 73, 693, 851, 852, 853, 1210, 1212, 1213, 1352, 1380, 1444, 1451, 1454, 1455, 1625, 1636, 1882, 1886, 1904, 1910, 1911, 1912, 1923, 1930, 1936, 1937, 1943, 1944], "been": [0, 1, 5, 9, 11, 12, 16, 23, 29, 31, 39, 40, 42, 43, 46, 47, 48, 50, 52, 59, 62, 65, 68, 69, 73, 98, 693, 773, 910, 989, 991, 996, 1024, 1027, 1084, 1089, 1142, 1215, 1216, 1221, 1226, 1283, 1396, 1403, 1414, 1459, 1508, 1543, 1624, 1633, 1638, 1642, 1644, 1664, 1665, 1678, 1683, 1703, 1704, 1705, 1711, 1713, 1729, 1826, 1874, 1891, 1895, 1897, 1898, 1899, 1904, 1905, 1907, 1908, 1913, 1914, 1916, 1918, 1920, 1922, 1923, 1926, 1927, 1935, 1937, 1939, 1944], "accumul": [0, 1, 2, 14, 16, 29, 65, 167, 306, 329, 334, 335, 337, 486, 699, 906, 920, 1281, 1624, 1684, 1685, 1865, 1882, 1883, 1895, 1905, 1908, 1909, 1912, 1919, 1926, 1931, 1935, 1936, 1939], "twice": [0, 15, 72, 630, 915, 1149, 1904, 1905, 1912, 1913], "given": [0, 1, 2, 3, 7, 9, 15, 16, 18, 20, 28, 29, 33, 39, 40, 42, 43, 44, 46, 47, 48, 50, 57, 59, 61, 65, 71, 72, 73, 89, 167, 236, 329, 331, 333, 337, 342, 393, 414, 418, 487, 488, 489, 490, 491, 493, 527, 529, 531, 597, 598, 617, 620, 693, 706, 708, 709, 711, 712, 748, 773, 792, 798, 805, 806, 807, 808, 812, 813, 815, 833, 837, 850, 853, 867, 871, 878, 889, 902, 904, 906, 908, 910, 912, 914, 915, 916, 917, 918, 919, 922, 936, 937, 940, 948, 952, 953, 959, 960, 965, 966, 978, 980, 983, 984, 985, 988, 989, 991, 992, 993, 997, 1005, 1006, 1009, 1013, 1014, 1030, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1060, 1061, 1062, 1063, 1070, 1072, 1077, 1085, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1125, 1141, 1151, 1152, 1178, 1209, 1212, 1219, 1227, 1228, 1233, 1237, 1247, 1249, 1250, 1259, 1261, 1267, 1275, 1284, 1291, 1293, 1294, 1295, 1296, 1299, 1309, 1311, 1313, 1314, 1317, 1342, 1352, 1360, 1361, 1367, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1381, 1387, 1388, 1392, 1393, 1396, 1404, 1414, 1436, 1440, 1441, 1442, 1444, 1446, 1448, 1449, 1451, 1453, 1455, 1459, 1472, 1478, 1492, 1493, 1496, 1497, 1498, 1508, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1534, 1535, 1538, 1539, 1543, 1554, 1578, 1593, 1608, 1612, 1613, 1614, 1618, 1619, 1620, 1632, 1657, 1664, 1665, 1668, 1671, 1672, 1681, 1707, 1710, 1712, 1714, 1717, 1722, 1727, 1730, 1731, 1732, 1745, 1751, 1756, 1767, 1768, 1799, 1803, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1821, 1823, 1826, 1829, 1831, 1840, 1841, 1846, 1848, 1850, 1860, 1865, 1879, 1880, 1882, 1885, 1889, 1891, 1892, 1894, 1897, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1920, 1921, 1923, 1926, 1929, 1930, 1935, 1936, 1939, 1940, 1941, 1944, 1946, 1949, 1950], "trigger": [0, 7, 9, 11, 13, 16, 23, 24, 29, 42, 59, 65, 72, 98, 99, 238, 1059, 1778, 1904, 1908, 1909, 1910, 1915, 1921, 1935], "runtimeerror": [0, 1, 33, 42, 46, 70, 73, 98, 105, 596, 710, 910, 947, 1133, 1187, 1197, 1212, 1241, 1242, 1243, 1251, 1252, 1253, 1255, 1259, 1265, 1272, 1277, 1278, 1304, 1334, 1444, 1680, 1767, 1805, 1865, 1882, 1884, 1885, 1898, 1900, 1904, 1906, 1912, 1920, 1922, 1923, 1930, 1934, 1939, 1942], "spars": [0, 1, 14, 31, 207, 208, 225, 235, 238, 339, 344, 358, 359, 450, 556, 557, 558, 559, 594, 596, 597, 598, 599, 600, 601, 627, 702, 758, 759, 921, 922, 1059, 1154, 1176, 1197, 1284, 1306, 1316, 1344, 1387, 1388, 1477, 1534, 1535, 1560, 1700, 1719, 1767, 1801, 1805, 1812, 1813, 1814, 1815, 1816, 1817, 1822, 1831, 1850, 1865, 1880, 1883, 1887, 1892, 1903, 1919, 1920, 1925, 1932, 1942, 1943, 1946], "place": [0, 3, 7, 14, 15, 20, 24, 27, 28, 31, 39, 40, 42, 44, 49, 50, 65, 68, 69, 73, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 138, 140, 142, 144, 147, 148, 150, 158, 160, 163, 164, 166, 169, 175, 177, 179, 181, 183, 185, 194, 203, 211, 215, 218, 220, 230, 232, 238, 239, 248, 252, 254, 260, 263, 265, 267, 269, 270, 273, 276, 278, 285, 287, 289, 293, 295, 299, 301, 308, 310, 312, 320, 322, 324, 326, 328, 330, 332, 334, 372, 374, 376, 378, 380, 382, 384, 387, 389, 391, 392, 399, 401, 403, 405, 407, 411, 415, 417, 435, 438, 441, 443, 454, 456, 458, 466, 471, 481, 484, 500, 502, 504, 506, 510, 513, 522, 525, 526, 528, 530, 536, 540, 542, 545, 547, 549, 562, 564, 566, 575, 577, 584, 588, 590, 606, 609, 611, 613, 615, 616, 625, 635, 771, 806, 810, 827, 851, 852, 870, 871, 910, 912, 926, 927, 948, 998, 999, 1001, 1002, 1022, 1085, 1136, 1141, 1142, 1150, 1212, 1256, 1274, 1334, 1356, 1366, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1401, 1402, 1403, 1430, 1444, 1461, 1462, 1463, 1464, 1471, 1486, 1528, 1529, 1530, 1531, 1533, 1534, 1535, 1536, 1547, 1550, 1559, 1590, 1592, 1607, 1611, 1615, 1620, 1621, 1624, 1628, 1629, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1666, 1700, 1756, 1758, 1762, 1763, 1764, 1810, 1846, 1880, 1882, 1884, 1885, 1892, 1899, 1904, 1908, 1910, 1915, 1926, 1927, 1928, 1935, 1936, 1941, 1943, 1945], "replac": [0, 1, 12, 14, 19, 28, 33, 39, 40, 42, 44, 58, 60, 65, 67, 68, 69, 70, 71, 73, 96, 98, 99, 136, 436, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 760, 827, 852, 871, 957, 1031, 1085, 1141, 1142, 1217, 1219, 1229, 1301, 1302, 1334, 1338, 1475, 1486, 1615, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1666, 1668, 1729, 1826, 1830, 1853, 1882, 1883, 1885, 1893, 1908, 1910, 1911, 1913, 1915, 1918, 1922, 1923, 1925, 1927, 1930, 1946], "were": [0, 1, 2, 3, 11, 15, 16, 23, 28, 29, 36, 42, 50, 59, 62, 65, 70, 72, 73, 167, 337, 351, 486, 867, 902, 904, 906, 920, 1031, 1142, 1153, 1219, 1283, 1508, 1624, 1628, 1633, 1643, 1660, 1696, 1765, 1769, 1840, 1847, 1872, 1884, 1892, 1904, 1908, 1910, 1921, 1923, 1927], "reduc": [0, 2, 3, 11, 14, 16, 18, 23, 29, 33, 40, 42, 43, 44, 46, 65, 337, 527, 530, 531, 699, 706, 708, 709, 710, 712, 832, 833, 834, 835, 838, 840, 887, 888, 966, 999, 1010, 1042, 1185, 1264, 1268, 1270, 1275, 1281, 1299, 1309, 1311, 1312, 1314, 1317, 1339, 1340, 1341, 1342, 1360, 1361, 1362, 1363, 1364, 1378, 1380, 1388, 1404, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1483, 1492, 1515, 1516, 1524, 1526, 1535, 1551, 1554, 1555, 1556, 1566, 1574, 1575, 1576, 1577, 1578, 1579, 1586, 1597, 1598, 1609, 1612, 1624, 1632, 1669, 1689, 1713, 1727, 1729, 1730, 1764, 1807, 1811, 1824, 1825, 1829, 1830, 1851, 1865, 1867, 1868, 1881, 1883, 1897, 1898, 1905, 1907, 1909, 1910, 1916, 1918, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1930, 1939, 1950], "occur": [0, 14, 16, 19, 23, 25, 29, 31, 39, 42, 52, 53, 59, 65, 70, 96, 98, 213, 331, 1045, 1085, 1209, 1215, 1225, 1255, 1367, 1483, 1527, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1884, 1895, 1899, 1904, 1905, 1908, 1912, 1919, 1923, 1929, 1935, 1937, 1943, 1946, 1950], "increas": [0, 1, 3, 7, 11, 16, 22, 40, 42, 48, 56, 65, 693, 867, 911, 950, 1010, 1042, 1085, 1173, 1174, 1352, 1361, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1456, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1584, 1585, 1593, 1698, 1704, 1705, 1709, 1711, 1713, 1765, 1773, 1851, 1866, 1883, 1891, 1896, 1907, 1908, 1914, 1918, 1931, 1939], "set": [0, 1, 2, 3, 5, 8, 9, 13, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 32, 33, 38, 39, 40, 42, 43, 44, 46, 48, 50, 52, 57, 59, 60, 61, 62, 65, 68, 69, 72, 73, 74, 105, 167, 171, 270, 346, 460, 461, 462, 463, 464, 473, 510, 513, 534, 593, 594, 693, 748, 754, 756, 773, 792, 798, 805, 806, 807, 810, 828, 829, 830, 833, 834, 835, 838, 839, 854, 867, 871, 872, 874, 875, 878, 891, 903, 905, 906, 913, 914, 915, 916, 917, 918, 919, 920, 933, 945, 950, 961, 965, 966, 978, 996, 1011, 1020, 1032, 1033, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1086, 1088, 1141, 1150, 1159, 1174, 1192, 1193, 1212, 1216, 1219, 1221, 1223, 1225, 1227, 1228, 1247, 1248, 1251, 1257, 1264, 1266, 1268, 1269, 1281, 1282, 1283, 1284, 1298, 1301, 1304, 1324, 1328, 1329, 1330, 1352, 1356, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1389, 1396, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1429, 1431, 1435, 1436, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1454, 1458, 1459, 1475, 1476, 1483, 1492, 1493, 1508, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1536, 1543, 1547, 1554, 1555, 1564, 1565, 1578, 1580, 1586, 1593, 1612, 1624, 1626, 1627, 1632, 1637, 1666, 1678, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1729, 1736, 1738, 1742, 1744, 1745, 1753, 1754, 1765, 1766, 1769, 1770, 1771, 1772, 1773, 1775, 1776, 1777, 1778, 1779, 1780, 1795, 1810, 1824, 1825, 1844, 1854, 1855, 1856, 1857, 1865, 1867, 1868, 1879, 1881, 1882, 1884, 1885, 1886, 1889, 1891, 1893, 1894, 1895, 1897, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1944, 1946, 1948, 1949, 1950], "directli": [0, 1, 3, 7, 9, 14, 15, 16, 19, 22, 28, 29, 33, 34, 39, 40, 42, 44, 48, 49, 50, 58, 65, 69, 73, 570, 745, 760, 903, 912, 968, 1068, 1136, 1142, 1149, 1151, 1157, 1242, 1450, 1477, 1496, 1554, 1599, 1658, 1851, 1882, 1884, 1885, 1895, 1905, 1908, 1909, 1910, 1911, 1913, 1915, 1916, 1917, 1918, 1921, 1927, 1929, 1930, 1935, 1939, 1944, 1946], "fill": [0, 15, 20, 42, 171, 190, 274, 275, 276, 302, 333, 337, 393, 416, 460, 461, 462, 464, 469, 496, 621, 636, 937, 1073, 1086, 1088, 1139, 1140, 1242, 1253, 1255, 1388, 1487, 1535, 1581, 1675, 1676, 1738, 1739, 1740, 1741, 1742, 1743, 1830, 1877, 1878, 1881, 1883, 1889, 1899, 1900, 1903, 1908, 1910, 1921, 1925, 1939, 1946], "later": [0, 1, 3, 7, 20, 23, 38, 40, 42, 65, 72, 73, 758, 759, 769, 777, 929, 1020, 1283, 1414, 1437, 1438, 1439, 1459, 1473, 1567, 1568, 1569, 1596, 1624, 1830, 1882, 1905, 1907, 1908, 1909, 1916, 1921, 1936, 1937], "chang": [0, 1, 2, 3, 7, 11, 14, 15, 17, 18, 19, 20, 21, 23, 24, 29, 31, 36, 40, 42, 44, 46, 47, 48, 50, 58, 63, 65, 66, 69, 70, 72, 73, 156, 238, 270, 337, 473, 510, 513, 531, 534, 569, 630, 693, 832, 890, 921, 922, 966, 977, 978, 985, 986, 987, 996, 1007, 1009, 1020, 1021, 1028, 1029, 1031, 1073, 1121, 1141, 1159, 1165, 1186, 1209, 1212, 1222, 1223, 1242, 1253, 1255, 1256, 1257, 1260, 1273, 1313, 1384, 1387, 1405, 1414, 1444, 1475, 1496, 1508, 1543, 1567, 1568, 1569, 1593, 1615, 1616, 1624, 1626, 1627, 1633, 1636, 1637, 1666, 1670, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1705, 1708, 1709, 1711, 1713, 1715, 1729, 1769, 1773, 1810, 1821, 1824, 1825, 1826, 1850, 1867, 1868, 1879, 1880, 1882, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1916, 1918, 1919, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949], "further": [0, 1, 4, 9, 14, 25, 29, 33, 40, 42, 65, 72, 1157, 1216, 1251, 1352, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1624, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1717, 1881, 1885, 1892, 1916, 1918, 1927, 1929, 1937, 1944, 1949], "floattensor": [0, 42, 337, 502, 699, 700, 701, 702, 703, 748, 921, 922, 934, 1159, 1387, 1388, 1447, 1487, 1771, 1942, 1945], "end": [0, 7, 8, 9, 11, 15, 29, 39, 40, 42, 48, 52, 56, 68, 73, 377, 378, 551, 773, 797, 810, 833, 834, 878, 935, 979, 986, 1046, 1075, 1085, 1124, 1138, 1165, 1171, 1172, 1209, 1212, 1232, 1237, 1267, 1277, 1279, 1282, 1284, 1298, 1343, 1344, 1359, 1360, 1361, 1378, 1380, 1386, 1390, 1396, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1411, 1414, 1415, 1430, 1435, 1438, 1439, 1444, 1446, 1451, 1452, 1455, 1459, 1462, 1472, 1475, 1481, 1486, 1493, 1526, 1535, 1547, 1548, 1624, 1631, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1703, 1708, 1745, 1778, 1781, 1784, 1799, 1851, 1862, 1863, 1875, 1881, 1882, 1883, 1884, 1885, 1897, 1904, 1905, 1908, 1909, 1910, 1912, 1913, 1919, 1922, 1923, 1926, 1929, 1930, 1933, 1935, 1940], "reason": [0, 3, 8, 9, 12, 14, 15, 16, 20, 22, 29, 39, 42, 44, 65, 70, 693, 854, 1106, 1108, 1212, 1227, 1228, 1247, 1248, 1275, 1312, 1360, 1384, 1444, 1545, 1593, 1620, 1621, 1636, 1761, 1882, 1884, 1885, 1891, 1905, 1909, 1911, 1919, 1921, 1923, 1935, 1942, 1950], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 17, 18, 20, 21, 23, 24, 27, 28, 29, 31, 33, 34, 39, 40, 42, 46, 47, 49, 50, 52, 59, 60, 61, 65, 66, 67, 70, 71, 72, 73, 98, 509, 527, 529, 531, 771, 836, 839, 876, 905, 907, 912, 921, 952, 965, 966, 1031, 1064, 1065, 1066, 1067, 1136, 1138, 1147, 1154, 1174, 1187, 1199, 1209, 1215, 1223, 1227, 1257, 1275, 1284, 1291, 1301, 1303, 1312, 1334, 1344, 1356, 1366, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1401, 1402, 1403, 1430, 1462, 1463, 1464, 1471, 1486, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1545, 1547, 1562, 1615, 1624, 1672, 1680, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1717, 1723, 1865, 1879, 1880, 1882, 1883, 1885, 1887, 1889, 1897, 1898, 1899, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1929, 1930, 1931, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1946], "synchron": [0, 3, 4, 16, 35, 36, 40, 44, 46, 50, 59, 65, 72, 890, 988, 989, 991, 999, 1019, 1059, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1266, 1269, 1272, 1273, 1275, 1276, 1284, 1483, 1624, 1670, 1672, 1751, 1880, 1907, 1908, 1909, 1914, 1918, 1928, 1935], "fall": [0, 2, 7, 18, 33, 39, 808, 921, 966, 1174, 1225, 1283, 1405, 1475, 1552, 1597, 1628, 1629, 1879, 1923, 1930], "below": [0, 1, 5, 9, 12, 14, 16, 17, 19, 20, 21, 22, 23, 25, 29, 33, 39, 40, 42, 48, 50, 51, 56, 59, 60, 61, 62, 73, 74, 81, 82, 693, 747, 761, 770, 808, 827, 1028, 1072, 1073, 1074, 1075, 1076, 1085, 1113, 1115, 1119, 1157, 1165, 1212, 1228, 1268, 1269, 1274, 1281, 1313, 1375, 1376, 1377, 1396, 1398, 1405, 1414, 1416, 1440, 1441, 1442, 1444, 1459, 1475, 1496, 1526, 1552, 1597, 1624, 1636, 1670, 1700, 1770, 1810, 1841, 1851, 1854, 1855, 1856, 1857, 1882, 1884, 1885, 1887, 1891, 1892, 1897, 1898, 1904, 1905, 1908, 1909, 1910, 1913, 1914, 1916, 1918, 1920, 1921, 1923, 1926, 1927, 1928, 1930, 1932, 1935, 1936, 1937, 1940, 1943, 1946], "someth": [0, 3, 7, 12, 14, 16, 19, 20, 28, 29, 67, 73, 74, 76, 914, 916, 1085, 1212, 1227, 1444, 1887, 1895, 1897, 1898, 1905, 1914, 1922, 1923, 1935, 1950], "wrong": [0, 19, 42, 73, 98, 910, 1210, 1213, 1909, 1918, 1922, 1923, 1926], "incompat": [0, 9, 33, 70, 947, 1209, 1906, 1927], "due": [0, 3, 4, 5, 7, 16, 20, 23, 29, 40, 42, 48, 58, 65, 70, 73, 74, 76, 98, 501, 893, 914, 915, 920, 980, 1224, 1247, 1248, 1275, 1301, 1384, 1398, 1487, 1496, 1554, 1593, 1664, 1678, 1700, 1831, 1882, 1900, 1908, 1909, 1913, 1914, 1920, 1923, 1930, 1931, 1935, 1937], "float64": [0, 31, 256, 461, 464, 593, 893, 974, 1128, 1137, 1159, 1194, 1212, 1241, 1247, 1248, 1250, 1252, 1268, 1444, 1593, 1686, 1687, 1723, 1731, 1770, 1771, 1774, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1870, 1875, 1916, 1919, 1939, 1941, 1942, 1945, 1946, 1951], "variant": [0, 5, 23, 28, 40, 871, 1242, 1253, 1266, 1269, 1341, 1344, 1686, 1687, 1688, 1700, 1853, 1880, 1881, 1915, 1933, 1945], "suppli": [0, 5, 7, 16, 29, 33, 34, 42, 1020, 1450, 1682, 1885, 1908, 1939], "won": [0, 8, 15, 16, 20, 25, 29, 40, 44, 59, 68, 473, 1212, 1223, 1444, 1579, 1618, 1619, 1879, 1905, 1910, 1935, 1947], "go": [0, 1, 7, 12, 14, 15, 16, 20, 21, 34, 39, 42, 56, 61, 69, 73, 513, 514, 573, 911, 926, 1284, 1357, 1358, 1359, 1437, 1438, 1439, 1884, 1885, 1892, 1897, 1898, 1899, 1905, 1907, 1908, 1910, 1911, 1915, 1916, 1918, 1922, 1923, 1927, 1942, 1944], "addmm": [0, 28, 74, 123, 1822, 1881, 1883, 1898, 1919, 1925, 1939], "b": [0, 1, 3, 12, 13, 16, 19, 20, 28, 29, 31, 39, 42, 44, 48, 57, 73, 74, 77, 99, 276, 351, 414, 630, 698, 699, 761, 770, 794, 837, 893, 910, 912, 913, 924, 926, 927, 934, 945, 946, 948, 952, 954, 956, 959, 964, 979, 985, 1028, 1029, 1077, 1080, 1084, 1085, 1130, 1131, 1132, 1133, 1138, 1142, 1155, 1177, 1189, 1209, 1215, 1222, 1223, 1231, 1232, 1234, 1243, 1244, 1252, 1256, 1257, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1272, 1273, 1274, 1277, 1278, 1281, 1284, 1293, 1295, 1296, 1302, 1310, 1315, 1317, 1333, 1361, 1365, 1387, 1388, 1395, 1431, 1514, 1516, 1535, 1542, 1560, 1631, 1658, 1659, 1660, 1661, 1662, 1663, 1671, 1678, 1697, 1699, 1730, 1736, 1749, 1752, 1768, 1780, 1799, 1807, 1812, 1813, 1814, 1816, 1817, 1821, 1826, 1827, 1829, 1836, 1837, 1846, 1853, 1854, 1856, 1869, 1874, 1881, 1882, 1883, 1884, 1885, 1898, 1899, 1900, 1903, 1904, 1906, 1908, 1910, 1912, 1913, 1914, 1919, 1921, 1929, 1930, 1936, 1937, 1939, 1940, 1943, 1944, 1949], "c": [0, 1, 3, 8, 9, 14, 15, 16, 19, 20, 26, 28, 29, 33, 39, 42, 48, 57, 68, 73, 99, 276, 351, 513, 534, 630, 698, 834, 890, 893, 912, 945, 956, 959, 980, 1022, 1028, 1062, 1077, 1080, 1085, 1131, 1132, 1133, 1142, 1143, 1147, 1152, 1155, 1165, 1212, 1222, 1234, 1241, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1267, 1268, 1270, 1272, 1274, 1275, 1333, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1380, 1383, 1384, 1385, 1389, 1391, 1392, 1393, 1399, 1407, 1408, 1409, 1412, 1413, 1415, 1416, 1426, 1427, 1428, 1432, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1448, 1449, 1451, 1456, 1457, 1465, 1466, 1467, 1468, 1469, 1470, 1478, 1483, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1508, 1516, 1526, 1527, 1539, 1543, 1578, 1584, 1585, 1593, 1631, 1659, 1661, 1662, 1663, 1670, 1671, 1717, 1733, 1749, 1787, 1807, 1821, 1826, 1846, 1863, 1880, 1881, 1882, 1883, 1884, 1885, 1889, 1898, 1899, 1907, 1908, 1909, 1911, 1913, 1915, 1922, 1924, 1927, 1936, 1937, 1939, 1940, 1943, 1944, 1950], "addmm_": [0, 1883, 1898, 1939], "d": [0, 1, 15, 16, 19, 25, 29, 31, 39, 40, 42, 47, 48, 66, 73, 329, 337, 351, 486, 527, 529, 531, 557, 596, 630, 699, 703, 878, 893, 912, 934, 935, 937, 944, 945, 946, 950, 956, 1072, 1074, 1084, 1085, 1098, 1102, 1103, 1104, 1105, 1110, 1111, 1114, 1115, 1120, 1121, 1122, 1125, 1126, 1127, 1153, 1154, 1169, 1170, 1177, 1186, 1209, 1213, 1217, 1254, 1255, 1305, 1316, 1336, 1351, 1359, 1360, 1364, 1374, 1378, 1379, 1383, 1384, 1385, 1387, 1389, 1391, 1396, 1398, 1409, 1414, 1416, 1428, 1439, 1453, 1459, 1483, 1492, 1493, 1495, 1508, 1543, 1554, 1560, 1587, 1611, 1612, 1632, 1665, 1670, 1671, 1698, 1718, 1736, 1745, 1757, 1765, 1770, 1821, 1826, 1839, 1840, 1846, 1849, 1854, 1855, 1856, 1857, 1866, 1872, 1874, 1879, 1883, 1892, 1898, 1899, 1900, 1903, 1905, 1908, 1910, 1911, 1913, 1914, 1921, 1923, 1935, 1936, 1939, 1940, 1944, 1945], "best": [0, 1, 7, 16, 18, 22, 26, 34, 36, 39, 42, 48, 60, 65, 68, 874, 875, 930, 953, 966, 1227, 1228, 1257, 1450, 1700, 1713, 1880, 1882, 1884, 1897, 1903, 1904, 1905, 1910, 1912, 1927, 1935, 1939], "stabil": [0, 16, 29, 1243, 1299, 1361, 1362, 1363, 1364, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1480, 1483, 1540, 1601, 1632, 1665, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1733, 1911], "respect": [0, 1, 5, 8, 15, 22, 42, 43, 46, 48, 57, 59, 65, 71, 72, 73, 213, 226, 502, 593, 616, 702, 703, 704, 773, 808, 832, 854, 898, 904, 906, 920, 922, 926, 927, 961, 984, 1073, 1075, 1076, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1152, 1165, 1212, 1243, 1247, 1248, 1257, 1267, 1270, 1272, 1275, 1284, 1316, 1338, 1360, 1367, 1375, 1376, 1377, 1381, 1396, 1398, 1414, 1444, 1445, 1459, 1489, 1491, 1492, 1493, 1494, 1496, 1534, 1543, 1620, 1621, 1638, 1642, 1644, 1666, 1668, 1699, 1713, 1804, 1807, 1830, 1846, 1899, 1904, 1905, 1908, 1910, 1913, 1916, 1917, 1928, 1933, 1939, 1940, 1941, 1946], "describ": [0, 5, 7, 8, 9, 17, 23, 39, 40, 44, 46, 47, 50, 51, 57, 59, 65, 73, 527, 805, 806, 807, 828, 829, 830, 854, 872, 951, 1011, 1028, 1045, 1085, 1165, 1232, 1272, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1392, 1393, 1399, 1402, 1405, 1407, 1408, 1409, 1411, 1416, 1435, 1437, 1438, 1439, 1450, 1451, 1458, 1462, 1475, 1483, 1491, 1492, 1493, 1495, 1526, 1538, 1539, 1548, 1581, 1711, 1851, 1880, 1882, 1884, 1885, 1903, 1904, 1905, 1908, 1909, 1912, 1913, 1915, 1916, 1921, 1923, 1927, 1929, 1930, 1933, 1936, 1937, 1946], "expos": [0, 1, 8, 21, 42, 46, 65, 72, 73, 808, 1138, 1905, 1908, 1915, 1927, 1930, 1950], "namespac": [0, 17, 73, 1059, 1882, 1886, 1889, 1910, 1916, 1923, 1928, 1933, 1950], "defin": [0, 1, 2, 3, 5, 9, 11, 12, 15, 20, 24, 33, 34, 39, 40, 42, 43, 44, 47, 48, 50, 51, 57, 59, 60, 65, 70, 73, 450, 460, 462, 464, 531, 579, 805, 810, 812, 851, 872, 873, 874, 875, 902, 903, 904, 905, 1042, 1068, 1085, 1086, 1105, 1133, 1139, 1155, 1157, 1171, 1173, 1174, 1201, 1212, 1234, 1241, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1264, 1268, 1269, 1270, 1272, 1274, 1275, 1281, 1317, 1381, 1386, 1400, 1401, 1402, 1403, 1410, 1412, 1413, 1444, 1450, 1462, 1477, 1479, 1484, 1486, 1508, 1543, 1593, 1599, 1615, 1624, 1642, 1644, 1651, 1652, 1672, 1675, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1705, 1708, 1711, 1729, 1738, 1740, 1742, 1749, 1778, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1807, 1809, 1851, 1854, 1855, 1856, 1857, 1875, 1877, 1879, 1882, 1885, 1887, 1889, 1897, 1898, 1900, 1905, 1908, 1909, 1913, 1914, 1916, 1918, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1933, 1935, 1939, 1940, 1945, 1946, 1947, 1950], "still": [0, 1, 2, 7, 8, 15, 19, 20, 21, 23, 29, 39, 42, 47, 48, 50, 59, 72, 73, 807, 812, 911, 916, 1216, 1221, 1229, 1411, 1435, 1624, 1625, 1626, 1627, 1713, 1761, 1881, 1882, 1885, 1897, 1898, 1899, 1900, 1904, 1905, 1908, 1909, 1910, 1912, 1914, 1921, 1922, 1923, 1926, 1927, 1928, 1930, 1935, 1936, 1937, 1939], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 39, 40, 43, 44, 46, 47, 48, 49, 50, 52, 57, 58, 59, 60, 61, 65, 69, 70, 72, 73, 74, 81, 82, 105, 167, 305, 329, 331, 333, 335, 337, 351, 487, 501, 502, 513, 527, 529, 531, 550, 573, 617, 620, 630, 637, 697, 710, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 773, 777, 794, 803, 804, 810, 812, 832, 836, 839, 851, 867, 870, 871, 872, 874, 889, 893, 898, 905, 906, 907, 908, 914, 915, 916, 917, 918, 919, 920, 926, 927, 930, 937, 950, 953, 956, 960, 966, 968, 982, 983, 984, 985, 986, 991, 998, 999, 1000, 1001, 1002, 1013, 1014, 1015, 1042, 1044, 1049, 1050, 1061, 1063, 1068, 1072, 1073, 1074, 1075, 1076, 1085, 1101, 1106, 1109, 1113, 1116, 1119, 1124, 1125, 1126, 1127, 1128, 1133, 1136, 1141, 1142, 1145, 1146, 1147, 1148, 1149, 1153, 1154, 1157, 1174, 1186, 1197, 1203, 1209, 1210, 1212, 1213, 1215, 1221, 1222, 1223, 1227, 1244, 1247, 1248, 1257, 1261, 1263, 1264, 1267, 1268, 1272, 1274, 1275, 1277, 1280, 1281, 1283, 1289, 1305, 1312, 1317, 1334, 1340, 1343, 1344, 1350, 1351, 1352, 1354, 1355, 1356, 1358, 1359, 1362, 1363, 1364, 1367, 1373, 1374, 1376, 1377, 1380, 1381, 1388, 1395, 1396, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1416, 1430, 1434, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1449, 1450, 1472, 1475, 1477, 1479, 1483, 1492, 1493, 1525, 1542, 1543, 1545, 1555, 1562, 1580, 1581, 1599, 1600, 1608, 1615, 1624, 1631, 1633, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1666, 1668, 1671, 1679, 1680, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1719, 1731, 1745, 1749, 1751, 1752, 1756, 1758, 1765, 1769, 1778, 1780, 1798, 1803, 1806, 1807, 1809, 1810, 1818, 1821, 1845, 1850, 1851, 1854, 1855, 1856, 1857, 1861, 1862, 1864, 1865, 1872, 1879, 1882, 1884, 1885, 1887, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1920, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "unlist": 0, "downstream": [0, 3, 16, 17, 20, 29, 1895], "stabl": [0, 1, 2, 42, 48, 59, 60, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 889, 1085, 1247, 1248, 1252, 1257, 1265, 1269, 1272, 1275, 1277, 1284, 1361, 1803, 1880, 1883, 1903, 1906, 1920, 1935], "believ": [0, 8, 27], "unstabl": [0, 48, 1247, 1248, 1275, 1292, 1301, 1562, 1830, 1940], "__matmul__": 0, "addbmm": [0, 117, 934, 1883, 1919, 1925], "addmv": [0, 125, 1883, 1898, 1925], "addr": [0, 42, 127, 1883, 1925], "baddbmm": [0, 169, 1883, 1919, 1925], "bmm": [0, 1865, 1881, 1883, 1898, 1900, 1919, 1920, 1925, 1939], "chain_matmul": [0, 1883, 1925], "multi_dot": [0, 956], "conv1d": [0, 721, 725, 728, 738, 754, 1375, 1383, 1420, 1865, 1883, 1925, 1930, 1932], "conv2d": [0, 722, 726, 729, 731, 739, 755, 805, 827, 1212, 1221, 1223, 1227, 1228, 1376, 1384, 1421, 1444, 1445, 1451, 1472, 1495, 1651, 1865, 1882, 1883, 1893, 1923, 1925, 1930, 1932, 1933, 1944, 1949], "conv3d": [0, 723, 727, 730, 732, 740, 756, 1377, 1385, 1422, 1865, 1883, 1925, 1930, 1932], "conv_transpose1d": [0, 1883, 1925, 1932], "conv_transpose2d": [0, 1883, 1925, 1932], "conv_transpose3d": [0, 1883, 1925, 1932], "grucel": [0, 1919, 1930, 1932, 1933], "lstmcell": [0, 1919, 1930, 1932, 1933], "matmul": [0, 2, 11, 18, 31, 946, 966, 1152, 1316, 1495, 1719, 1729, 1773, 1830, 1883, 1898, 1900, 1908, 1919, 1925, 1932, 1939], "mv": [0, 31, 1223, 1865, 1883, 1898, 1925, 1939], "prelu": [0, 1445, 1883, 1925, 1932], "rnncell": [0, 1930, 1932, 1933], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 111, 640, 641, 879, 1881, 1883, 1898, 1925, 1946], "asin": [0, 158, 642, 643, 881, 1881, 1883, 1898, 1925, 1939], "cosh": [0, 220, 650, 651, 697, 1881, 1883, 1898, 1925], "cosine_embedding_loss": [0, 1883, 1925], "cdist": [0, 1908, 1925], "cosine_similar": [0, 1493, 1883, 1925], "cross_entropi": [0, 1883], "cumprod": [0, 230, 1883, 1898, 1925], "cumsum": [0, 232, 1068, 1865, 1883, 1898, 1925], "dist": [0, 40, 42, 43, 46, 48, 60, 65, 957, 958, 1241, 1247, 1248, 1249, 1251, 1252, 1253, 1257, 1258, 1269, 1270, 1273, 1275, 1276, 1299, 1302, 1453, 1483, 1624, 1631, 1830, 1883, 1909, 1925, 1935, 1937], "erfinv": [0, 267, 1883, 1898, 1925, 1939, 1940], "exp": [0, 1, 48, 269, 656, 657, 783, 916, 917, 919, 1128, 1271, 1291, 1299, 1361, 1366, 1380, 1386, 1410, 1433, 1434, 1448, 1458, 1471, 1474, 1476, 1477, 1479, 1480, 1484, 1517, 1563, 1586, 1594, 1595, 1599, 1601, 1604, 1631, 1726, 1787, 1788, 1809, 1826, 1881, 1883, 1898, 1905, 1923, 1925, 1940], "expm1": [0, 273, 658, 659, 1881, 1883, 1898, 1925, 1939, 1940], "group_norm": [0, 1883, 1925, 1932], "hinge_embedding_loss": [0, 1883, 1925], "kl_div": [0, 1883, 1925], "l1_loss": [0, 1883, 1925], "layer_norm": [0, 1416, 1883, 1925, 1932], "log": [0, 13, 16, 17, 20, 22, 24, 25, 29, 33, 39, 40, 48, 50, 52, 53, 56, 57, 61, 392, 393, 666, 673, 693, 1095, 1287, 1289, 1291, 1292, 1299, 1326, 1352, 1360, 1361, 1380, 1398, 1410, 1433, 1434, 1448, 1451, 1458, 1476, 1477, 1480, 1540, 1545, 1555, 1562, 1563, 1578, 1586, 1599, 1601, 1624, 1880, 1881, 1883, 1891, 1895, 1898, 1905, 1908, 1910, 1923, 1925, 1929, 1940, 1944, 1947, 1948, 1949], "log_softmax": [0, 1367, 1410, 1527, 1578, 1599, 1883, 1899, 1925, 1940], "log10": [0, 387, 667, 668, 1881, 1883, 1898, 1925], "log1p": [0, 389, 669, 670, 1881, 1883, 1898, 1925, 1939, 1940], "log2": [0, 391, 671, 672, 1881, 1883, 1898, 1925, 1940], "margin_ranking_loss": [0, 1883, 1925], "mse_loss": [0, 69, 1141, 1883, 1925], "multilabel_margin_loss": [0, 1883, 1925], "multi_margin_loss": [0, 1883, 1925], "nll_loss": [0, 1883, 1925], "norm": [0, 48, 65, 67, 73, 715, 716, 717, 718, 719, 720, 954, 1079, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1243, 1247, 1256, 1257, 1264, 1269, 1281, 1387, 1388, 1435, 1453, 1488, 1489, 1490, 1491, 1492, 1534, 1535, 1579, 1583, 1628, 1632, 1641, 1642, 1647, 1650, 1651, 1665, 1668, 1688, 1750, 1883, 1887, 1904, 1905, 1913, 1916, 1919, 1925], "normal": [0, 1, 40, 46, 59, 65, 73, 96, 352, 367, 393, 469, 569, 984, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1173, 1209, 1212, 1217, 1247, 1289, 1356, 1362, 1363, 1364, 1383, 1384, 1385, 1389, 1399, 1407, 1408, 1409, 1416, 1426, 1427, 1428, 1432, 1471, 1483, 1487, 1488, 1489, 1490, 1491, 1513, 1543, 1544, 1553, 1557, 1561, 1587, 1628, 1629, 1632, 1647, 1655, 1656, 1665, 1668, 1697, 1713, 1733, 1742, 1743, 1750, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1826, 1865, 1879, 1880, 1881, 1882, 1883, 1887, 1898, 1900, 1903, 1905, 1908, 1911, 1923, 1925, 1927, 1932, 1935, 1940, 1944, 1946, 1947, 1951], "pdist": [0, 1453, 1883, 1925], "poisson_nll_loss": [0, 1883, 1925], "pow": [0, 1, 484, 510, 914, 915, 918, 1128, 1881, 1883, 1885, 1898, 1904, 1905, 1925, 1939, 1945], "prod": [0, 56, 337, 531, 1102, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1122, 1277, 1278, 1387, 1391, 1495, 1865, 1881, 1883, 1898, 1925, 1939], "reciproc": [0, 500, 676, 677, 1760, 1881, 1883, 1898, 1925], "rsqrt": [0, 525, 1881, 1883, 1898, 1925], "sinh": [0, 549, 684, 685, 895, 1881, 1883, 1898, 1925, 1939], "smooth_l1_loss": [0, 1883, 1925], "soft_margin_loss": [0, 1883, 1925], "softmax": [0, 48, 809, 1352, 1380, 1410, 1434, 1478, 1526, 1545, 1555, 1562, 1593, 1600, 1806, 1883, 1898, 1899, 1900, 1908, 1925, 1932, 1939, 1940], "softmin": [0, 1883], "softplu": [0, 48, 1443, 1573, 1883, 1925], "sum": [0, 1, 11, 12, 13, 16, 20, 25, 27, 29, 39, 42, 43, 46, 48, 50, 65, 70, 71, 73, 510, 531, 579, 759, 906, 914, 915, 916, 917, 918, 919, 920, 926, 927, 931, 984, 1000, 1001, 1002, 1067, 1068, 1085, 1145, 1146, 1147, 1152, 1189, 1243, 1264, 1268, 1281, 1289, 1290, 1291, 1299, 1334, 1342, 1360, 1361, 1367, 1377, 1378, 1380, 1381, 1388, 1391, 1398, 1404, 1405, 1410, 1411, 1412, 1413, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1477, 1479, 1492, 1493, 1495, 1515, 1516, 1526, 1527, 1535, 1540, 1545, 1555, 1564, 1565, 1578, 1586, 1599, 1600, 1624, 1647, 1652, 1653, 1671, 1705, 1751, 1789, 1807, 1809, 1849, 1851, 1865, 1880, 1881, 1883, 1885, 1889, 1895, 1898, 1904, 1905, 1908, 1909, 1910, 1911, 1916, 1919, 1923, 1925, 1935, 1936, 1939, 1940, 1945], "renorm": [0, 506, 1387, 1388, 1534, 1535, 1883, 1925], "tan": [0, 588, 688, 689, 896, 1881, 1883, 1898, 1925, 1939, 1944], "triplet_margin_loss": [0, 1883, 1925], "take": [0, 1, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 25, 28, 33, 39, 40, 42, 44, 46, 48, 50, 58, 59, 60, 61, 65, 67, 68, 70, 71, 72, 73, 74, 81, 82, 773, 806, 811, 827, 833, 839, 875, 914, 915, 916, 917, 918, 919, 921, 922, 959, 985, 1022, 1073, 1075, 1076, 1101, 1103, 1106, 1109, 1113, 1114, 1116, 1119, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1244, 1266, 1269, 1352, 1361, 1388, 1392, 1393, 1396, 1414, 1438, 1439, 1440, 1441, 1442, 1444, 1452, 1459, 1487, 1497, 1498, 1538, 1539, 1556, 1580, 1593, 1624, 1669, 1697, 1701, 1726, 1853, 1872, 1879, 1882, 1883, 1885, 1892, 1893, 1897, 1898, 1899, 1900, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1916, 1920, 1921, 1922, 1923, 1925, 1927, 1929, 1930, 1935, 1936, 1937, 1939, 1942, 1943, 1944, 1948], "addcdiv": [0, 119, 1883, 1925], "addcmul": [0, 121, 1883, 1925], "atan2": [0, 163, 884, 1881, 1883, 1898, 1925], "bilinear": [0, 792, 798, 799, 1085, 1496, 1497, 1543, 1554, 1612, 1613, 1865, 1883, 1925], "cross": [0, 7, 8, 20, 44, 48, 50, 1360, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1515, 1516, 1526, 1883, 1908, 1922, 1925], "dot": [0, 2, 33, 70, 71, 630, 915, 917, 918, 919, 1064, 1065, 1066, 1067, 1143, 1153, 1189, 1232, 1279, 1280, 1306, 1360, 1361, 1380, 1391, 1404, 1411, 1435, 1450, 1451, 1493, 1593, 1826, 1869, 1870, 1871, 1872, 1883, 1898, 1913, 1925, 1927], "grid_sampl": [0, 1508, 1865, 1883, 1925], "index_put": [0, 1865, 1883, 1925], "scatter_add": [0, 1881, 1883, 1925], "tensordot": [0, 1189, 1277, 1278, 1887, 1908, 1925], "binari": [0, 2, 33, 34, 40, 48, 50, 52, 57, 59, 73, 171, 748, 936, 1305, 1360, 1361, 1450, 1515, 1516, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1679, 1681, 1880, 1886, 1898, 1899, 1915, 1923, 1927, 1944], "add": [0, 1, 3, 7, 11, 12, 13, 14, 17, 22, 25, 28, 29, 34, 35, 39, 42, 44, 46, 56, 59, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 96, 100, 115, 306, 329, 527, 529, 699, 700, 701, 704, 760, 761, 770, 803, 806, 851, 872, 874, 875, 1001, 1031, 1042, 1085, 1142, 1212, 1223, 1352, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425, 1444, 1446, 1450, 1451, 1455, 1458, 1545, 1586, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1822, 1879, 1881, 1882, 1883, 1884, 1885, 1889, 1893, 1895, 1898, 1900, 1904, 1906, 1907, 1910, 1911, 1914, 1915, 1916, 1918, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1939, 1942, 1943, 1944, 1948, 1949, 1950], "nativ": [0, 2, 31, 40, 47, 65, 73, 1011, 1142, 1222, 1628, 1629, 1773, 1882, 1885, 1897, 1908, 1921, 1926, 1927, 1935], "without": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 16, 19, 29, 33, 36, 39, 40, 42, 43, 44, 46, 48, 52, 59, 65, 66, 71, 72, 73, 74, 75, 270, 630, 963, 989, 991, 1026, 1106, 1107, 1108, 1116, 1117, 1118, 1209, 1210, 1212, 1213, 1258, 1259, 1274, 1281, 1334, 1362, 1363, 1364, 1384, 1388, 1407, 1408, 1409, 1441, 1444, 1452, 1483, 1491, 1535, 1615, 1624, 1648, 1664, 1705, 1736, 1752, 1769, 1770, 1860, 1879, 1884, 1885, 1892, 1893, 1895, 1897, 1899, 1904, 1905, 1906, 1908, 1909, 1910, 1913, 1914, 1916, 1918, 1920, 1921, 1923, 1927, 1928, 1930, 1934, 1935, 1939, 1944, 1949, 1951], "intervent": [0, 8, 1935], "mixtur": [0, 48, 1380, 1526], "bceloss": [0, 1361, 1515], "aren": [0, 8, 70, 73, 1142, 1898, 1905, 1936, 1950], "mean": [0, 2, 3, 5, 7, 8, 14, 15, 16, 20, 22, 23, 24, 34, 36, 39, 40, 42, 44, 46, 48, 59, 61, 65, 66, 68, 71, 72, 73, 270, 337, 351, 393, 469, 509, 531, 771, 773, 794, 807, 809, 874, 875, 934, 947, 984, 1141, 1143, 1222, 1312, 1329, 1334, 1339, 1343, 1344, 1350, 1351, 1352, 1354, 1355, 1356, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1378, 1380, 1382, 1386, 1388, 1389, 1390, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1414, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1430, 1431, 1433, 1434, 1435, 1436, 1443, 1447, 1448, 1449, 1451, 1452, 1458, 1459, 1462, 1463, 1464, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1492, 1493, 1494, 1514, 1515, 1516, 1524, 1526, 1527, 1535, 1536, 1540, 1551, 1552, 1555, 1556, 1560, 1566, 1574, 1575, 1576, 1577, 1578, 1586, 1597, 1598, 1609, 1610, 1624, 1672, 1700, 1733, 1742, 1743, 1787, 1807, 1824, 1825, 1831, 1865, 1867, 1868, 1879, 1881, 1882, 1883, 1884, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1908, 1909, 1910, 1912, 1913, 1916, 1922, 1923, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1935, 1936, 1937, 1939], "doesn": [0, 1, 2, 7, 8, 15, 29, 31, 39, 42, 44, 68, 70, 72, 73, 836, 839, 893, 910, 920, 989, 1010, 1142, 1153, 1219, 1225, 1251, 1275, 1283, 1292, 1372, 1373, 1374, 1381, 1410, 1477, 1518, 1519, 1520, 1555, 1599, 1624, 1625, 1647, 1689, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1804, 1807, 1872, 1881, 1882, 1885, 1886, 1898, 1900, 1905, 1906, 1908, 1910, 1911, 1915, 1918, 1922, 1926, 1928, 1936, 1939], "help": [0, 1, 4, 7, 8, 15, 17, 19, 20, 22, 25, 29, 31, 33, 39, 40, 42, 56, 59, 65, 70, 73, 921, 922, 930, 1010, 1042, 1142, 1143, 1153, 1212, 1213, 1231, 1313, 1325, 1326, 1383, 1384, 1385, 1389, 1444, 1631, 1780, 1872, 1879, 1885, 1892, 1898, 1899, 1904, 1905, 1906, 1908, 1909, 1911, 1914, 1916, 1919, 1923, 1924, 1927, 1935, 1936, 1939, 1947], "revers": [0, 48, 71, 73, 527, 747, 806, 914, 916, 1103, 1105, 1125, 1145, 1147, 1152, 1279, 1414, 1457, 1585, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1853, 1866, 1883, 1884, 1885, 1905, 1909, 1911, 1925, 1945], "therefor": [0, 3, 5, 17, 20, 39, 40, 42, 48, 49, 57, 65, 68, 74, 79, 80, 100, 463, 557, 920, 935, 944, 968, 1031, 1119, 1136, 1138, 1141, 1169, 1170, 1224, 1227, 1257, 1270, 1387, 1388, 1495, 1534, 1535, 1543, 1666, 1705, 1885, 1904, 1905, 1908, 1910, 1912, 1915, 1923, 1937, 1939], "rais": [0, 1, 5, 7, 15, 20, 27, 28, 29, 33, 42, 46, 48, 50, 52, 59, 65, 70, 72, 73, 74, 105, 329, 331, 337, 710, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 947, 956, 990, 1055, 1128, 1133, 1210, 1212, 1217, 1219, 1227, 1229, 1241, 1243, 1251, 1252, 1255, 1259, 1260, 1265, 1272, 1273, 1277, 1278, 1283, 1304, 1329, 1444, 1593, 1636, 1637, 1642, 1644, 1647, 1657, 1680, 1681, 1767, 1865, 1879, 1886, 1892, 1897, 1905, 1908, 1910, 1912, 1919, 1923, 1927, 1928, 1934, 1935, 1946, 1950], "mani": [0, 3, 7, 12, 14, 15, 16, 19, 20, 22, 23, 28, 29, 31, 33, 39, 40, 42, 48, 59, 65, 69, 70, 73, 105, 418, 693, 902, 904, 914, 916, 1085, 1224, 1367, 1700, 1799, 1847, 1854, 1855, 1856, 1857, 1882, 1884, 1898, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1915, 1916, 1919, 1923, 1926, 1930, 1937, 1939, 1942, 1944, 1945, 1947], "sigmoid": [0, 48, 73, 540, 680, 681, 773, 808, 1360, 1361, 1387, 1396, 1397, 1414, 1415, 1473, 1515, 1542, 1596, 1881, 1883, 1898, 1899, 1903, 1924, 1925, 1932, 1940], "right": [0, 2, 7, 9, 15, 16, 21, 25, 26, 42, 44, 48, 65, 73, 833, 878, 935, 942, 944, 945, 950, 955, 1079, 1085, 1126, 1129, 1130, 1134, 1165, 1169, 1170, 1174, 1178, 1209, 1231, 1256, 1261, 1272, 1274, 1275, 1283, 1289, 1290, 1334, 1352, 1357, 1358, 1359, 1360, 1361, 1372, 1373, 1374, 1391, 1398, 1411, 1412, 1413, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1447, 1448, 1449, 1453, 1454, 1460, 1492, 1495, 1496, 1497, 1498, 1543, 1563, 1581, 1629, 1636, 1689, 1703, 1704, 1745, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1826, 1846, 1851, 1853, 1866, 1879, 1883, 1885, 1897, 1898, 1899, 1905, 1910, 1913, 1923, 1926, 1933, 1937, 1940], "entropi": [0, 48, 1360, 1380, 1448, 1515, 1516, 1526, 1940], "combin": [0, 3, 12, 20, 39, 40, 42, 59, 71, 72, 630, 702, 725, 726, 727, 728, 729, 730, 731, 732, 806, 867, 903, 1042, 1114, 1115, 1120, 1122, 1174, 1306, 1316, 1361, 1391, 1405, 1450, 1491, 1495, 1537, 1560, 1643, 1882, 1883, 1884, 1904, 1908, 1911, 1923, 1925, 1926, 1928, 1930, 1933, 1935], "bcewithlogitsloss": [0, 1516], "bcewithlogit": 0, "safe": [0, 11, 16, 17, 20, 29, 42, 59, 72, 73, 99, 1032, 1033, 1052, 1053, 1624, 1686, 1687, 1882, 1885, 1904, 1905, 1908, 1911, 1915, 1935], "_convolut": [0, 1925], "avg_pool3d": [0, 1883, 1925, 1932], "grid_sampler_2d": [0, 1881, 1883, 1925], "_grid_sampler_2d_cpu_fallback": [0, 1925], "grid_sampler_3d": [0, 1883, 1925], "polar": [0, 48, 1271, 1883, 1925], "quantil": [0, 1312, 1341, 1883, 1925, 1940], "nanquantil": [0, 1883, 1925], "stft": [0, 935, 944, 1169, 1170, 1209, 1231, 1883, 1925], "view_as_complex": [0, 31, 1883, 1925], "choleski": [0, 2, 48, 958, 959, 1242, 1248, 1284, 1883, 1925], "cholesky_invers": [0, 2, 1883, 1925], "cholesky_solv": [0, 2, 1883, 1925], "invers": [0, 48, 696, 697, 895, 898, 953, 958, 959, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1209, 1252, 1253, 1265, 1269, 1272, 1277, 1278, 1375, 1376, 1377, 1387, 1388, 1391, 1440, 1441, 1442, 1495, 1534, 1535, 1570, 1571, 1572, 1633, 1636, 1660, 1705, 1711, 1861, 1880, 1883, 1885, 1919, 1925, 1940], "lu_solv": [0, 2, 1259, 1883, 1925], "orgqr": [0, 1883, 1925], "ormqr": [0, 1157, 1251, 1883, 1925], "pinvers": [0, 1257, 1883, 1925], "max_pool3d": [0, 1883, 1925, 1932], "max_unpool2d": [0, 1538, 1568, 1883, 1925], "max_unpool3d": [0, 1539, 1569, 1883, 1925], "adaptive_avg_pool3d": [0, 1883, 1910, 1925, 1932], "reflection_pad1d": [0, 1883, 1925], "reflection_pad2d": [0, 1881, 1883, 1925], "replication_pad1d": [0, 1883, 1925], "replication_pad2d": [0, 1881, 1883, 1925], "replication_pad3d": [0, 1881, 1883, 1925], "ctc_loss": [0, 1367, 1883, 1925], "fft_fft": [0, 1883, 1925], "fft_ifft": [0, 1883, 1925], "fft_fft2": [0, 1883, 1925], "fft_ifft2": [0, 1883, 1925], "fft_fftn": [0, 1883, 1925], "fft_ifftn": [0, 1883, 1925], "fft_rfft": [0, 1883, 1925], "fft_irfft": [0, 1883, 1925], "fft_rfft2": [0, 1883, 1925], "fft_irfft2": [0, 1883, 1925], "fft_rfftn": [0, 1883, 1925], "fft_irfftn": [0, 1883, 1925], "fft_hfft": [0, 1883, 1925], "fft_ihfft": [0, 1883, 1925], "linalg_matrix_norm": [0, 1883, 1925], "linalg_cond": [0, 1883, 1925], "linalg_matrix_rank": [0, 1883, 1925], "linalg_solv": [0, 1883, 1925], "linalg_choleski": [0, 1883, 1925], "linalg_svdv": [0, 1883, 1925], "linalg_eigv": [0, 1883, 1925], "linalg_eigvalsh": [0, 1883, 1925], "linalg_inv": [0, 1883, 1925], "linalg_householder_product": [0, 1883, 1925], "linalg_tensorinv": [0, 1883, 1925], "linalg_tensorsolv": [0, 1883, 1925], "fake_quantize_per_tensor_affin": [0, 1883, 1925], "eig": [0, 1248, 1249, 1275, 1919], "geqrf": [0, 1251, 1717, 1883, 1925], "lstsq": [0, 1157, 1243, 1269], "_lu_with_info": [0, 1925], "qr": [0, 2, 1157, 1247, 1248, 1251, 1257, 1275, 1631, 1717, 1883, 1925], "solv": [0, 7, 16, 21, 31, 959, 1157, 1165, 1243, 1252, 1254, 1255, 1258, 1259, 1261, 1265, 1273, 1274, 1278, 1284, 1302, 1853, 1905, 1913, 1919, 1922], "svd": [0, 2, 31, 1247, 1248, 1257, 1269, 1276, 1292, 1636, 1719, 1831, 1881, 1883, 1919, 1925, 1939], "symeig": 0, "triangular_solv": [0, 1883, 1925], "fractional_max_pool2d": [0, 1883, 1925], "fractional_max_pool3d": [0, 1883, 1925], "adaptive_max_pool3d": [0, 1883, 1925], "multilabel_margin_loss_forward": [0, 1925], "linalg_qr": [0, 1883, 1925], "linalg_cholesky_ex": [0, 1883, 1925], "linalg_svd": [0, 1883, 1925], "linalg_eig": [0, 1883, 1925], "linalg_eigh": [0, 1883, 1925], "linalg_lstsq": [0, 1883, 1925], "linalg_inv_ex": [0, 1883, 1925], "cat": [0, 14, 42, 48, 73, 557, 760, 761, 770, 806, 809, 975, 976, 1313, 1463, 1811, 1823, 1881, 1882, 1883, 1898, 1923, 1925, 1927, 1930, 1932, 1939, 1948], "stack": [0, 8, 13, 15, 16, 17, 20, 21, 29, 36, 39, 40, 42, 48, 52, 69, 70, 73, 773, 930, 953, 964, 1046, 1047, 1084, 1151, 1153, 1177, 1313, 1367, 1396, 1414, 1415, 1459, 1488, 1490, 1661, 1872, 1874, 1880, 1883, 1900, 1908, 1909, 1912, 1924, 1925, 1927, 1929, 1932, 1939], "index_copi": [0, 1865, 1883, 1925], "implement": [1, 2, 5, 8, 11, 14, 20, 23, 35, 39, 40, 42, 43, 44, 46, 47, 48, 51, 56, 57, 60, 65, 70, 73, 74, 76, 82, 98, 167, 527, 529, 531, 700, 751, 752, 753, 754, 755, 756, 773, 792, 794, 798, 806, 813, 832, 833, 834, 837, 838, 839, 891, 893, 906, 915, 921, 922, 982, 1085, 1128, 1133, 1138, 1145, 1146, 1148, 1149, 1212, 1219, 1221, 1222, 1225, 1267, 1270, 1283, 1284, 1312, 1352, 1367, 1381, 1396, 1412, 1413, 1444, 1450, 1456, 1463, 1480, 1489, 1491, 1543, 1581, 1593, 1601, 1624, 1628, 1629, 1631, 1632, 1636, 1647, 1660, 1664, 1665, 1668, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1703, 1705, 1711, 1729, 1736, 1749, 1758, 1761, 1798, 1807, 1830, 1831, 1846, 1862, 1865, 1884, 1885, 1886, 1889, 1892, 1897, 1900, 1901, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1926, 1927, 1928, 1930, 1933, 1935, 1936, 1939, 1940, 1943, 1945, 1947, 1950], "arbitrari": [1, 3, 16, 23, 29, 42, 46, 74, 77, 81, 270, 903, 1068, 1275, 1283, 1381, 1387, 1411, 1435, 1495, 1515, 1516, 1534, 1555, 1581, 1657, 1830, 1851, 1885, 1891, 1905, 1911, 1915, 1916, 1926, 1928, 1930, 1939, 1947, 1950], "scalar": [1, 15, 28, 42, 48, 74, 82, 114, 167, 171, 276, 329, 461, 602, 700, 701, 751, 752, 753, 754, 755, 756, 892, 893, 906, 914, 915, 918, 920, 939, 942, 950, 980, 984, 1080, 1085, 1100, 1133, 1139, 1165, 1172, 1189, 1203, 1236, 1237, 1306, 1313, 1341, 1352, 1360, 1361, 1367, 1378, 1380, 1381, 1398, 1404, 1405, 1410, 1411, 1416, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1493, 1545, 1587, 1670, 1675, 1676, 1680, 1713, 1726, 1728, 1730, 1748, 1749, 1765, 1813, 1814, 1815, 1816, 1817, 1844, 1862, 1863, 1875, 1877, 1878, 1881, 1883, 1884, 1885, 1895, 1900, 1903, 1905, 1910, 1913, 1923, 1935, 1939, 1942, 1944, 1946, 1947], "minim": [1, 7, 8, 16, 29, 832, 888, 1314, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1697, 1698, 1699, 1700, 1713, 1879, 1895, 1904, 1908, 1916, 1918, 1921, 1923, 1928, 1930, 1947], "exist": [1, 7, 8, 9, 11, 12, 15, 17, 25, 31, 33, 39, 42, 43, 44, 48, 50, 52, 57, 59, 60, 65, 69, 73, 74, 96, 97, 270, 513, 805, 867, 891, 914, 915, 916, 917, 918, 919, 920, 921, 1026, 1212, 1216, 1227, 1247, 1252, 1258, 1259, 1284, 1341, 1444, 1445, 1454, 1805, 1823, 1879, 1881, 1882, 1889, 1892, 1897, 1898, 1900, 1901, 1905, 1906, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1919, 1921, 1923, 1927, 1928, 1929, 1930, 1935, 1937, 1939, 1943, 1945, 1947], "code": [1, 3, 4, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 39, 40, 42, 48, 50, 60, 61, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 136, 693, 966, 968, 1028, 1029, 1042, 1142, 1187, 1212, 1216, 1217, 1222, 1223, 1224, 1227, 1228, 1229, 1242, 1253, 1255, 1283, 1460, 1472, 1624, 1777, 1879, 1880, 1884, 1885, 1891, 1899, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1921, 1922, 1923, 1926, 1934, 1935, 1936, 1937, 1939, 1942, 1943, 1947, 1950], "declar": [1, 9, 33, 39, 60, 1884, 1885, 1886, 1910, 1923, 1927, 1928, 1947], "requires_grad": [1, 5, 13, 15, 25, 48, 71, 351, 460, 461, 462, 463, 464, 502, 510, 878, 893, 910, 912, 913, 921, 922, 924, 926, 927, 935, 944, 1031, 1086, 1087, 1088, 1089, 1098, 1103, 1121, 1138, 1139, 1140, 1143, 1153, 1169, 1170, 1187, 1212, 1231, 1282, 1298, 1360, 1361, 1380, 1387, 1388, 1398, 1410, 1411, 1435, 1436, 1444, 1450, 1451, 1458, 1491, 1492, 1515, 1516, 1526, 1578, 1624, 1625, 1626, 1627, 1664, 1669, 1675, 1676, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1775, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1865, 1872, 1877, 1878, 1881, 1883, 1887, 1898, 1899, 1900, 1908, 1910, 1911, 1916, 1921, 1923, 1925, 1935, 1936, 1945, 1946, 1947], "type": [1, 2, 3, 5, 12, 13, 14, 18, 19, 20, 28, 33, 34, 35, 40, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 57, 59, 60, 61, 65, 70, 72, 73, 74, 76, 79, 80, 82, 99, 105, 167, 208, 213, 225, 342, 345, 349, 357, 460, 461, 462, 463, 464, 496, 572, 617, 693, 698, 699, 700, 701, 702, 703, 747, 748, 751, 752, 753, 762, 764, 765, 766, 767, 769, 777, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 794, 797, 805, 806, 807, 810, 828, 829, 830, 832, 833, 834, 835, 836, 838, 840, 853, 867, 868, 869, 870, 871, 872, 873, 874, 875, 878, 892, 902, 903, 904, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 926, 927, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 950, 951, 952, 953, 954, 956, 965, 966, 972, 995, 997, 1004, 1005, 1006, 1008, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1023, 1025, 1028, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1048, 1060, 1062, 1063, 1066, 1067, 1080, 1085, 1086, 1087, 1088, 1098, 1099, 1100, 1103, 1121, 1128, 1130, 1131, 1132, 1133, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1149, 1150, 1151, 1153, 1155, 1159, 1160, 1161, 1164, 1169, 1170, 1172, 1173, 1174, 1188, 1191, 1194, 1197, 1208, 1209, 1210, 1212, 1213, 1215, 1218, 1221, 1223, 1225, 1227, 1228, 1230, 1231, 1234, 1243, 1247, 1264, 1268, 1275, 1281, 1282, 1283, 1284, 1298, 1301, 1304, 1311, 1313, 1320, 1321, 1323, 1333, 1339, 1342, 1352, 1356, 1372, 1373, 1374, 1381, 1388, 1434, 1444, 1445, 1446, 1450, 1454, 1455, 1472, 1477, 1478, 1479, 1487, 1488, 1489, 1490, 1491, 1503, 1504, 1508, 1509, 1513, 1515, 1516, 1517, 1518, 1519, 1520, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1540, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1561, 1562, 1564, 1565, 1566, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1586, 1588, 1589, 1591, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1606, 1608, 1609, 1610, 1611, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1666, 1668, 1670, 1671, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1719, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1748, 1749, 1751, 1754, 1755, 1758, 1765, 1766, 1769, 1770, 1771, 1773, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1826, 1827, 1829, 1830, 1831, 1844, 1853, 1855, 1857, 1862, 1863, 1865, 1866, 1872, 1875, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1893, 1894, 1895, 1898, 1900, 1903, 1904, 1905, 1907, 1908, 1913, 1914, 1915, 1916, 1919, 1921, 1922, 1924, 1925, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1939, 1940, 1941, 1942, 1944, 1946, 1947, 1948, 1949, 1950], "doubl": [1, 3, 50, 496, 502, 630, 762, 764, 765, 766, 767, 769, 779, 780, 794, 910, 912, 917, 921, 922, 951, 958, 974, 985, 1031, 1100, 1128, 1165, 1212, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1292, 1293, 1294, 1295, 1296, 1302, 1388, 1444, 1503, 1506, 1535, 1615, 1680, 1717, 1723, 1812, 1813, 1814, 1816, 1817, 1830, 1844, 1853, 1875, 1885, 1898, 1908, 1910, 1911, 1919, 1923, 1927, 1941, 1942, 1945, 1947], "bfloat16": [1, 40, 65, 1194, 1212, 1263, 1280, 1444, 1680, 1686, 1687, 1773, 1898, 1908, 1939, 1941, 1942, 1945, 1946, 1947, 1951], "cfloat": [1, 31, 42, 327, 498, 630, 958, 985, 1182, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1302, 1717, 1747, 1830, 1853, 1871, 1942, 1945, 1947], "cdoubl": [1, 31, 958, 985, 1212, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1302, 1444, 1717, 1830, 1853, 1942, 1945, 1947], "beta": [1, 2, 31, 66, 72, 116, 117, 122, 123, 124, 125, 126, 127, 168, 169, 337, 531, 567, 699, 702, 703, 704, 934, 986, 1020, 1021, 1028, 1029, 1031, 1169, 1231, 1306, 1316, 1362, 1363, 1364, 1399, 1405, 1407, 1408, 1409, 1416, 1432, 1475, 1480, 1483, 1560, 1561, 1593, 1597, 1601, 1686, 1687, 1688, 1690, 1696, 1700, 1733, 1791, 1793, 1804, 1808, 1822, 1880, 1881, 1883, 1893, 1908, 1923, 1930, 1935, 1939, 1942, 1947], "even": [1, 8, 11, 14, 15, 17, 18, 19, 20, 39, 40, 42, 47, 50, 65, 72, 73, 557, 593, 828, 829, 830, 906, 966, 984, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1116, 1117, 1118, 1121, 1152, 1197, 1224, 1241, 1243, 1247, 1248, 1249, 1250, 1264, 1268, 1270, 1271, 1275, 1276, 1281, 1306, 1312, 1381, 1483, 1518, 1519, 1520, 1581, 1624, 1631, 1669, 1671, 1711, 1758, 1769, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1830, 1870, 1882, 1885, 1886, 1895, 1900, 1904, 1905, 1908, 1910, 1912, 1914, 1916, 1918, 1919, 1920, 1921, 1926, 1927, 1928, 1937, 1942], "though": [1, 15, 42, 73, 74, 77, 167, 807, 903, 906, 916, 1101, 1102, 1104, 1210, 1213, 1306, 1671, 1882, 1886, 1899, 1900, 1905, 1910, 1911, 1918, 1919, 1926, 1930], "signatur": [1, 19, 20, 39, 52, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 414, 502, 569, 926, 927, 987, 1212, 1444, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1636, 1657, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1826, 1908, 1910, 1911, 1923, 1927, 1928, 1935, 1939, 1950], "veri": [1, 4, 7, 8, 15, 16, 17, 19, 20, 21, 28, 29, 36, 39, 40, 42, 69, 71, 73, 968, 982, 1143, 1151, 1153, 1274, 1407, 1408, 1409, 1624, 1625, 1631, 1689, 1711, 1717, 1794, 1798, 1853, 1872, 1884, 1897, 1905, 1910, 1912, 1913, 1914, 1916, 1918, 1919, 1922, 1926, 1927, 1934, 1935, 1936, 1939], "unlik": [1, 3, 7, 14, 17, 48, 65, 71, 507, 1082, 1121, 1124, 1128, 1187, 1247, 1248, 1267, 1270, 1275, 1279, 1309, 1312, 1314, 1416, 1626, 1627, 1748, 1770, 1869, 1884, 1885, 1897, 1900, 1908, 1918, 1920, 1942, 1947], "coverag": [1, 7, 19, 66, 73, 1145, 1146, 1880, 1882, 1887, 1899, 1930, 1939, 1950], "plan": [1, 2, 7, 9, 14, 28, 29, 42, 44, 47, 907, 1624, 1729, 1900, 1905, 1910, 1927, 1939], "consid": [1, 5, 8, 14, 28, 40, 42, 50, 59, 65, 70, 72, 73, 707, 792, 798, 807, 914, 916, 917, 921, 959, 984, 1072, 1073, 1074, 1075, 1076, 1106, 1141, 1201, 1205, 1208, 1212, 1252, 1254, 1255, 1256, 1257, 1265, 1266, 1269, 1274, 1277, 1380, 1391, 1444, 1447, 1495, 1508, 1543, 1554, 1612, 1625, 1631, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1666, 1699, 1767, 1787, 1821, 1854, 1855, 1856, 1857, 1879, 1882, 1885, 1889, 1892, 1904, 1905, 1906, 1910, 1912, 1913, 1916, 1919, 1927, 1929, 1931, 1936, 1937, 1939, 1942, 1945, 1946, 1950], "ad": [1, 3, 9, 12, 15, 16, 19, 23, 28, 33, 39, 40, 42, 46, 48, 56, 65, 68, 70, 71, 72, 73, 238, 239, 329, 335, 486, 529, 693, 699, 700, 701, 702, 703, 704, 748, 907, 908, 909, 914, 915, 916, 917, 921, 933, 934, 1085, 1089, 1145, 1146, 1148, 1187, 1212, 1225, 1289, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1450, 1451, 1453, 1458, 1472, 1483, 1487, 1495, 1521, 1522, 1523, 1540, 1567, 1568, 1569, 1593, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1636, 1643, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1669, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1733, 1734, 1735, 1775, 1804, 1808, 1822, 1879, 1880, 1881, 1882, 1884, 1889, 1895, 1899, 1904, 1911, 1913, 1915, 1916, 1927, 1930, 1933, 1939, 1944, 1947], "tutori": [1, 3, 9, 15, 19, 21, 34, 42, 43, 46, 73, 907, 908, 909, 912, 1880, 1882, 1889, 1892, 1901, 1910, 1915, 1916, 1918, 1921, 1923, 1930], "how": [1, 3, 5, 7, 8, 9, 14, 17, 19, 20, 21, 22, 27, 34, 35, 39, 42, 44, 47, 51, 59, 60, 61, 65, 66, 67, 69, 70, 73, 74, 81, 82, 502, 798, 805, 806, 809, 854, 872, 874, 875, 907, 908, 909, 912, 926, 927, 1068, 1089, 1142, 1151, 1165, 1187, 1212, 1222, 1283, 1391, 1444, 1495, 1496, 1581, 1612, 1624, 1657, 1669, 1749, 1773, 1775, 1788, 1799, 1880, 1882, 1884, 1885, 1889, 1892, 1894, 1897, 1898, 1899, 1901, 1904, 1907, 1909, 1911, 1912, 1913, 1916, 1918, 1920, 1921, 1923, 1928, 1930, 1933, 1935, 1936, 1937, 1939, 1944], "major": [1, 6, 7, 8, 9, 14, 16, 19, 22, 1013, 1830, 1880, 1885, 1926], "build": [1, 8, 9, 11, 19, 29, 33, 34, 42, 48, 73, 1212, 1221, 1444, 1490, 1508, 1543, 1880, 1882, 1892, 1901, 1905, 1923, 1928, 1930, 1936, 1944, 1945], "basic": [1, 3, 7, 9, 16, 20, 44, 59, 73, 74, 75, 1145, 1146, 1147, 1218, 1284, 1624, 1705, 1880, 1886, 1901, 1906, 1908, 1909, 1913, 1927, 1936, 1943, 1944], "jacobian": [1, 48, 66, 67, 69, 70, 906, 908, 914, 917, 919, 920, 921, 922, 1146, 1147, 1148, 1152, 1153, 1872, 1905, 1910, 1913], "hessian": [1, 66, 69, 70, 915, 918, 1146, 1147, 1903, 1911], "etc": [1, 3, 5, 11, 13, 17, 20, 27, 31, 39, 40, 42, 48, 50, 59, 60, 65, 872, 873, 874, 968, 1209, 1212, 1380, 1444, 1624, 1678, 1751, 1879, 1884, 1885, 1892, 1910, 1911, 1912, 1916, 1918, 1923, 1926, 1927, 1930, 1935, 1939, 1941, 1944, 1947], "user": [1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 29, 31, 34, 39, 40, 42, 43, 44, 47, 48, 49, 50, 52, 56, 59, 60, 62, 65, 66, 69, 70, 72, 73, 74, 98, 167, 351, 745, 751, 752, 753, 758, 759, 769, 777, 807, 810, 812, 851, 867, 874, 875, 906, 912, 920, 989, 1022, 1136, 1141, 1142, 1212, 1283, 1444, 1487, 1489, 1490, 1491, 1593, 1619, 1624, 1633, 1647, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1879, 1880, 1882, 1884, 1885, 1889, 1892, 1897, 1899, 1900, 1904, 1905, 1906, 1908, 1910, 1913, 1914, 1915, 1916, 1918, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1935, 1936, 1939, 1943, 1944, 1946, 1950], "input": [1, 2, 3, 5, 9, 11, 14, 15, 18, 25, 27, 28, 29, 31, 34, 37, 39, 40, 42, 43, 46, 47, 48, 49, 52, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 98, 99, 100, 105, 167, 276, 296, 317, 417, 498, 513, 531, 622, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 733, 741, 742, 747, 748, 751, 752, 753, 754, 755, 756, 758, 759, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 815, 827, 830, 832, 850, 851, 852, 853, 870, 871, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 888, 889, 890, 891, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 910, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 930, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 954, 955, 957, 958, 959, 960, 961, 962, 963, 965, 966, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 1001, 1028, 1029, 1031, 1064, 1065, 1066, 1067, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1085, 1087, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1153, 1154, 1155, 1156, 1157, 1158, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1190, 1191, 1192, 1194, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1212, 1215, 1216, 1218, 1219, 1223, 1225, 1227, 1228, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1299, 1300, 1302, 1304, 1305, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1622, 1623, 1624, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1657, 1658, 1659, 1661, 1666, 1669, 1670, 1671, 1673, 1674, 1676, 1678, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1704, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1739, 1741, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1762, 1763, 1764, 1767, 1768, 1770, 1781, 1782, 1783, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1839, 1840, 1841, 1842, 1843, 1845, 1847, 1848, 1849, 1850, 1853, 1854, 1856, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1892, 1893, 1899, 1900, 1901, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1919, 1920, 1921, 1923, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1935, 1936, 1939, 1940, 1942, 1943, 1946, 1948, 1949, 1950], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 96, 97, 98, 99, 100, 167, 171, 270, 339, 351, 473, 502, 527, 529, 558, 627, 630, 693, 700, 742, 754, 755, 756, 761, 770, 771, 773, 781, 782, 785, 786, 787, 798, 804, 805, 806, 807, 810, 812, 827, 833, 836, 837, 839, 850, 854, 867, 871, 872, 874, 875, 876, 892, 893, 902, 903, 904, 906, 907, 908, 909, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 926, 927, 929, 933, 936, 953, 959, 966, 969, 972, 977, 986, 988, 998, 1000, 1002, 1009, 1010, 1028, 1030, 1034, 1036, 1038, 1042, 1043, 1068, 1085, 1086, 1089, 1090, 1103, 1105, 1106, 1107, 1108, 1121, 1124, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1151, 1152, 1153, 1156, 1157, 1165, 1168, 1173, 1174, 1187, 1203, 1209, 1210, 1212, 1213, 1215, 1216, 1218, 1222, 1223, 1225, 1227, 1228, 1233, 1236, 1243, 1251, 1254, 1258, 1259, 1264, 1267, 1270, 1271, 1275, 1281, 1283, 1300, 1301, 1303, 1313, 1322, 1341, 1343, 1344, 1345, 1350, 1351, 1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1381, 1382, 1386, 1387, 1388, 1389, 1392, 1393, 1396, 1401, 1402, 1403, 1405, 1411, 1413, 1414, 1417, 1418, 1419, 1430, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1449, 1450, 1451, 1453, 1454, 1455, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1471, 1472, 1475, 1480, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1496, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1538, 1539, 1554, 1567, 1568, 1569, 1587, 1593, 1612, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1636, 1657, 1658, 1664, 1669, 1671, 1675, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1708, 1709, 1711, 1715, 1717, 1726, 1730, 1738, 1742, 1752, 1758, 1761, 1773, 1775, 1776, 1778, 1803, 1805, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1824, 1825, 1826, 1830, 1844, 1848, 1851, 1853, 1861, 1864, 1867, 1868, 1872, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "lambda": [1, 39, 44, 48, 68, 71, 72, 73, 74, 81, 82, 274, 502, 926, 927, 954, 1143, 1148, 1152, 1153, 1247, 1248, 1249, 1250, 1283, 1400, 1481, 1493, 1583, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1699, 1705, 1707, 1710, 1872, 1886, 1905, 1910, 1911, 1926, 1927, 1935, 1946, 1950], "captur": [1, 11, 13, 14, 16, 20, 25, 27, 29, 34, 73, 74, 77, 81, 82, 693, 986, 988, 1020, 1026, 1031, 1215, 1686, 1687, 1882, 1886, 1891, 1910, 1911, 1914, 1923, 1927, 1930, 1949], "f": [1, 10, 12, 14, 20, 27, 28, 40, 42, 48, 50, 51, 56, 57, 66, 67, 70, 71, 72, 73, 74, 75, 190, 274, 302, 351, 393, 908, 909, 1103, 1105, 1112, 1121, 1142, 1143, 1145, 1146, 1147, 1148, 1152, 1153, 1165, 1212, 1219, 1222, 1223, 1283, 1410, 1412, 1413, 1415, 1444, 1493, 1510, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1527, 1534, 1535, 1538, 1539, 1545, 1578, 1580, 1581, 1593, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1761, 1872, 1882, 1884, 1885, 1898, 1899, 1905, 1908, 1910, 1912, 1913, 1914, 1916, 1922, 1923, 1927, 1928, 1939, 1944, 1946, 1950], "three": [1, 2, 6, 9, 24, 42, 46, 47, 65, 67, 70, 73, 901, 1083, 1085, 1165, 1174, 1255, 1258, 1259, 1260, 1275, 1303, 1359, 1374, 1377, 1416, 1439, 1593, 1631, 1671, 1705, 1773, 1885, 1905, 1908, 1909, 1910, 1923, 1927, 1928, 1930, 1935, 1937, 1939, 1944], "anoth": [1, 5, 7, 11, 12, 16, 20, 23, 28, 39, 40, 42, 44, 48, 49, 50, 61, 65, 73, 501, 973, 986, 988, 989, 991, 1136, 1221, 1247, 1248, 1251, 1275, 1387, 1388, 1445, 1454, 1615, 1632, 1769, 1882, 1884, 1885, 1891, 1904, 1905, 1907, 1908, 1910, 1916, 1918, 1922, 1927, 1928, 1936, 1937, 1939, 1945, 1947], "constant": [1, 15, 19, 20, 39, 73, 74, 75, 79, 80, 82, 83, 757, 788, 834, 835, 969, 1068, 1125, 1126, 1127, 1209, 1212, 1216, 1227, 1259, 1284, 1369, 1370, 1371, 1388, 1391, 1398, 1453, 1475, 1495, 1540, 1543, 1581, 1632, 1681, 1697, 1702, 1705, 1851, 1883, 1885, 1904, 1910, 1916, 1920, 1923, 1926, 1939], "boolean": [1, 33, 48, 59, 73, 74, 81, 82, 416, 418, 902, 938, 940, 941, 943, 971, 988, 989, 991, 1090, 1156, 1168, 1201, 1202, 1203, 1204, 1205, 1208, 1236, 1284, 1300, 1305, 1345, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1483, 1593, 1633, 1636, 1729, 1824, 1825, 1848, 1867, 1868, 1884, 1886, 1910, 1941, 1942, 1944, 1945, 1946, 1947], "flag": [1, 2, 16, 17, 18, 28, 29, 33, 42, 43, 49, 60, 62, 65, 68, 70, 73, 748, 886, 914, 916, 933, 935, 944, 957, 958, 966, 1016, 1136, 1141, 1143, 1144, 1146, 1147, 1148, 1152, 1153, 1169, 1170, 1187, 1193, 1200, 1283, 1303, 1450, 1554, 1555, 1624, 1633, 1636, 1666, 1686, 1687, 1773, 1775, 1780, 1805, 1853, 1865, 1872, 1880, 1882, 1885, 1897, 1905, 1908, 1910, 1919, 1920, 1923, 1927, 1930, 1944, 1945], "inform": [1, 2, 3, 4, 7, 8, 9, 14, 15, 20, 22, 25, 29, 35, 36, 38, 39, 40, 42, 43, 46, 50, 51, 52, 55, 59, 60, 65, 67, 73, 208, 225, 271, 329, 337, 502, 512, 529, 531, 631, 693, 748, 916, 921, 922, 926, 927, 937, 1089, 1120, 1122, 1142, 1187, 1209, 1212, 1228, 1241, 1248, 1257, 1372, 1373, 1374, 1375, 1376, 1377, 1405, 1414, 1440, 1441, 1442, 1444, 1450, 1459, 1471, 1487, 1489, 1491, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1535, 1554, 1593, 1612, 1613, 1614, 1624, 1657, 1669, 1681, 1728, 1755, 1775, 1780, 1805, 1865, 1882, 1885, 1891, 1892, 1900, 1901, 1905, 1907, 1908, 1909, 1910, 1915, 1916, 1919, 1923, 1924, 1927, 1929, 1930, 1942, 1944, 1945, 1946, 1949, 1951], "well": [1, 3, 5, 7, 9, 12, 15, 17, 21, 23, 33, 40, 42, 59, 65, 70, 71, 73, 630, 804, 835, 838, 874, 1028, 1146, 1147, 1212, 1216, 1222, 1227, 1247, 1248, 1249, 1251, 1257, 1270, 1275, 1321, 1362, 1363, 1364, 1380, 1414, 1444, 1483, 1564, 1565, 1624, 1681, 1729, 1882, 1885, 1892, 1898, 1900, 1904, 1905, 1908, 1910, 1911, 1913, 1916, 1918, 1920, 1923, 1927, 1930, 1933, 1935, 1937, 1939, 1943, 1944, 1947], "relat": [1, 6, 7, 9, 39, 42, 50, 64, 65, 70, 74, 75, 80, 82, 693, 1165, 1251, 1391, 1475, 1495, 1624, 1719, 1900, 1905, 1921, 1927, 1935, 1939, 1940, 1946, 1950], "mechan": [1, 8, 11, 42, 53, 57, 59, 73, 892, 1089, 1187, 1212, 1444, 1593, 1669, 1775, 1844, 1880, 1897, 1900, 1909, 1910, 1915, 1916, 1933, 1935, 1936], "confus": [1, 8, 17, 20, 74, 1212, 1444, 1905, 1908, 1927, 1939], "receiv": [1, 7, 9, 14, 20, 29, 39, 42, 46, 48, 70, 72, 1042, 1212, 1444, 1620, 1621, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1714, 1885, 1895, 1897, 1904, 1905, 1918, 1928, 1935, 1936, 1937, 1939], "initi": [1, 3, 4, 8, 11, 20, 25, 28, 35, 36, 39, 40, 44, 46, 50, 52, 59, 60, 62, 65, 105, 510, 513, 593, 725, 726, 727, 728, 729, 730, 733, 743, 744, 745, 746, 758, 759, 769, 773, 777, 874, 875, 892, 973, 988, 996, 1017, 1022, 1023, 1026, 1027, 1052, 1159, 1188, 1210, 1212, 1224, 1225, 1283, 1284, 1301, 1362, 1363, 1364, 1365, 1367, 1375, 1376, 1377, 1381, 1387, 1388, 1396, 1397, 1399, 1407, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1444, 1452, 1459, 1461, 1483, 1493, 1534, 1615, 1624, 1626, 1627, 1631, 1633, 1636, 1664, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1769, 1770, 1771, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1880, 1883, 1884, 1885, 1895, 1900, 1903, 1905, 1908, 1909, 1910, 1915, 1922, 1923, 1926, 1927, 1928, 1934, 1935, 1936], "memori": [1, 2, 3, 5, 11, 15, 16, 18, 19, 21, 24, 28, 31, 40, 44, 46, 48, 49, 65, 69, 73, 167, 172, 187, 189, 192, 195, 196, 197, 212, 223, 226, 256, 270, 283, 313, 341, 347, 353, 355, 356, 409, 460, 461, 462, 463, 464, 473, 478, 501, 513, 514, 537, 538, 593, 616, 630, 747, 776, 891, 893, 906, 912, 921, 922, 948, 963, 966, 986, 987, 990, 993, 994, 996, 1010, 1011, 1020, 1021, 1024, 1028, 1030, 1031, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1049, 1050, 1051, 1055, 1085, 1086, 1087, 1088, 1136, 1137, 1138, 1140, 1141, 1142, 1147, 1149, 1153, 1212, 1229, 1257, 1283, 1320, 1321, 1322, 1329, 1388, 1414, 1415, 1444, 1487, 1488, 1489, 1491, 1593, 1611, 1624, 1631, 1657, 1669, 1676, 1678, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1738, 1739, 1741, 1742, 1743, 1744, 1844, 1865, 1872, 1878, 1880, 1882, 1893, 1897, 1899, 1900, 1905, 1910, 1918, 1923, 1928, 1929, 1930, 1935, 1939, 1941, 1942, 1943, 1945, 1946], "overlap": [1, 14, 16, 28, 39, 40, 42, 46, 65, 73, 891, 921, 922, 1088, 1142, 1209, 1391, 1495, 1624, 1826, 1865, 1908, 1909, 1942], "dens": [1, 14, 46, 235, 558, 559, 596, 597, 598, 599, 600, 601, 935, 944, 1169, 1170, 1231, 1284, 1700, 1801, 1804, 1807, 1808, 1811, 1812, 1813, 1814, 1816, 1817, 1822, 1831, 1865, 1900, 1920, 1939, 1942], "stride": [1, 13, 14, 15, 29, 31, 74, 79, 82, 155, 238, 270, 355, 460, 461, 462, 463, 464, 513, 534, 557, 594, 596, 597, 598, 600, 601, 630, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 781, 782, 785, 786, 787, 795, 796, 878, 891, 935, 944, 1086, 1088, 1098, 1103, 1121, 1139, 1140, 1169, 1170, 1176, 1212, 1221, 1225, 1231, 1282, 1298, 1316, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1412, 1413, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1456, 1495, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1537, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1611, 1624, 1675, 1734, 1735, 1738, 1740, 1741, 1742, 1744, 1745, 1752, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1850, 1855, 1857, 1870, 1877, 1881, 1883, 1886, 1898, 1923, 1925, 1935, 1939, 1941, 1942, 1944, 1945, 1946], "thu": [1, 31, 39, 42, 48, 60, 65, 73, 798, 835, 838, 867, 1085, 1106, 1275, 1306, 1384, 1496, 1612, 1624, 1686, 1687, 1697, 1815, 1882, 1885, 1892, 1893, 1905, 1907, 1910, 1912, 1913, 1915, 1916, 1923, 1930, 1935, 1939, 1943, 1945, 1946], "rowmajor": [1, 1624], "contigu": [1, 31, 40, 44, 347, 513, 534, 630, 1390, 1447, 1583, 1624, 1746, 1752, 1830, 1883, 1899, 1900, 1925, 1932, 1939, 1941, 1943], "create_graph": [1, 167, 906, 914, 915, 916, 917, 918, 919, 920, 1883, 1904], "preserv": [1, 11, 15, 39, 48, 65, 73, 513, 792, 798, 867, 889, 892, 1126, 1127, 1142, 1212, 1216, 1222, 1444, 1445, 1454, 1496, 1554, 1612, 1682, 1761, 1765, 1803, 1844, 1882, 1893, 1898, 1900, 1903, 1908, 1911, 1920, 1923, 1935, 1939, 1942], "preexist": [1, 14, 15], "behavior": [1, 2, 7, 15, 17, 20, 29, 33, 38, 40, 42, 43, 44, 46, 48, 49, 52, 57, 60, 65, 69, 70, 72, 73, 100, 270, 335, 486, 513, 527, 557, 630, 700, 798, 806, 839, 891, 905, 942, 948, 952, 965, 1080, 1085, 1088, 1130, 1137, 1138, 1142, 1212, 1222, 1225, 1227, 1257, 1264, 1268, 1281, 1282, 1283, 1298, 1306, 1313, 1381, 1384, 1405, 1414, 1444, 1459, 1483, 1496, 1508, 1543, 1611, 1612, 1615, 1616, 1624, 1625, 1668, 1670, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1723, 1729, 1745, 1752, 1794, 1830, 1851, 1865, 1879, 1882, 1886, 1887, 1889, 1891, 1898, 1900, 1906, 1908, 1910, 1911, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1931, 1932, 1935, 1940, 1943], "let": [1, 7, 8, 11, 12, 15, 19, 20, 22, 28, 29, 39, 40, 47, 48, 60, 70, 73, 501, 510, 961, 1165, 1212, 1231, 1241, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1270, 1272, 1274, 1275, 1444, 1624, 1631, 1844, 1889, 1898, 1899, 1905, 1908, 1909, 1910, 1911, 1916, 1918, 1919, 1920, 1921, 1922, 1927, 1936, 1937, 1939, 1944], "first": [1, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 20, 25, 28, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 52, 56, 59, 60, 65, 71, 73, 74, 82, 84, 233, 270, 306, 602, 623, 699, 702, 704, 707, 773, 806, 807, 827, 867, 870, 872, 887, 888, 897, 902, 903, 904, 905, 920, 921, 934, 938, 939, 941, 942, 943, 946, 948, 950, 964, 985, 988, 999, 1073, 1075, 1076, 1077, 1082, 1085, 1090, 1103, 1105, 1124, 1138, 1143, 1144, 1146, 1147, 1148, 1152, 1153, 1156, 1165, 1168, 1176, 1177, 1178, 1189, 1201, 1210, 1219, 1224, 1225, 1231, 1236, 1241, 1244, 1251, 1267, 1270, 1277, 1278, 1280, 1283, 1284, 1300, 1306, 1309, 1312, 1313, 1314, 1316, 1332, 1334, 1340, 1345, 1348, 1352, 1358, 1359, 1365, 1373, 1374, 1376, 1377, 1387, 1388, 1390, 1395, 1396, 1410, 1413, 1414, 1429, 1436, 1438, 1439, 1459, 1472, 1525, 1611, 1615, 1624, 1633, 1634, 1636, 1647, 1657, 1663, 1686, 1687, 1688, 1689, 1690, 1696, 1699, 1700, 1704, 1708, 1711, 1713, 1719, 1729, 1730, 1756, 1757, 1765, 1793, 1807, 1810, 1815, 1845, 1846, 1850, 1855, 1857, 1863, 1866, 1869, 1872, 1874, 1879, 1882, 1884, 1885, 1892, 1894, 1897, 1898, 1900, 1904, 1905, 1908, 1910, 1912, 1913, 1916, 1918, 1919, 1920, 1921, 1922, 1923, 1926, 1928, 1929, 1930, 1935, 1936, 1937, 1939, 1940, 1944, 1948, 1950], "accord": [1, 9, 29, 50, 810, 874, 875, 893, 936, 948, 1083, 1175, 1272, 1305, 1334, 1352, 1388, 1615, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1705, 1711, 1730, 1794, 1818, 1845, 1873, 1885, 1895, 1899, 1900, 1903, 1916, 1920, 1922, 1927, 1937, 1946], "retain": [1, 9, 42, 706, 708, 709, 712, 887, 888, 893, 1216, 1233, 1264, 1268, 1281, 1299, 1309, 1311, 1312, 1314, 1317, 1339, 1340, 1341, 1342, 1671, 1727, 1730, 1761, 1824, 1825, 1829, 1854, 1855, 1856, 1857, 1867, 1868, 1897, 1918, 1939], "over": [1, 9, 11, 14, 15, 16, 20, 21, 29, 39, 40, 42, 43, 47, 48, 50, 57, 60, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77, 81, 82, 84, 496, 693, 710, 751, 752, 753, 754, 755, 756, 779, 780, 785, 786, 787, 795, 796, 905, 930, 953, 997, 1042, 1044, 1048, 1062, 1063, 1064, 1065, 1066, 1067, 1085, 1141, 1145, 1147, 1151, 1153, 1165, 1173, 1212, 1227, 1244, 1264, 1268, 1280, 1281, 1283, 1291, 1311, 1313, 1342, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1388, 1391, 1392, 1393, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1416, 1432, 1435, 1436, 1437, 1438, 1439, 1444, 1447, 1448, 1449, 1451, 1458, 1472, 1475, 1476, 1478, 1483, 1492, 1495, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1527, 1538, 1539, 1555, 1561, 1564, 1565, 1567, 1568, 1569, 1578, 1579, 1586, 1593, 1619, 1628, 1668, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1734, 1735, 1750, 1809, 1811, 1824, 1825, 1826, 1829, 1846, 1861, 1867, 1868, 1872, 1885, 1895, 1897, 1898, 1899, 1904, 1906, 1907, 1909, 1910, 1911, 1913, 1916, 1918, 1919, 1926, 1935, 1936, 1939, 1947], "time": [1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 26, 28, 29, 33, 39, 40, 42, 43, 44, 46, 48, 49, 50, 56, 59, 60, 61, 70, 72, 73, 105, 306, 329, 502, 507, 630, 693, 698, 699, 700, 701, 702, 703, 704, 707, 758, 759, 769, 773, 777, 781, 782, 812, 814, 837, 854, 890, 920, 926, 927, 931, 934, 946, 954, 956, 966, 977, 984, 988, 989, 991, 1031, 1044, 1063, 1066, 1077, 1100, 1106, 1107, 1108, 1114, 1125, 1126, 1127, 1135, 1138, 1147, 1148, 1149, 1152, 1153, 1201, 1209, 1212, 1219, 1224, 1227, 1228, 1232, 1237, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1256, 1257, 1258, 1261, 1263, 1267, 1270, 1272, 1274, 1275, 1283, 1284, 1306, 1316, 1333, 1334, 1336, 1346, 1354, 1355, 1357, 1358, 1359, 1361, 1362, 1363, 1364, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1388, 1391, 1392, 1393, 1396, 1407, 1408, 1409, 1414, 1416, 1430, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1456, 1457, 1459, 1480, 1483, 1495, 1496, 1497, 1498, 1508, 1511, 1512, 1538, 1539, 1583, 1584, 1585, 1601, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1631, 1632, 1634, 1636, 1670, 1686, 1687, 1707, 1717, 1718, 1729, 1751, 1757, 1807, 1821, 1826, 1827, 1846, 1872, 1880, 1884, 1885, 1886, 1891, 1893, 1897, 1903, 1905, 1907, 1909, 1910, 1912, 1913, 1915, 1916, 1918, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1935, 1936, 1937, 1939, 1944, 1949], "4": [1, 3, 11, 13, 14, 16, 17, 20, 25, 29, 31, 36, 37, 39, 40, 42, 44, 46, 48, 49, 50, 57, 59, 70, 73, 74, 75, 76, 79, 80, 81, 82, 83, 208, 225, 258, 270, 305, 327, 329, 331, 333, 337, 417, 418, 460, 461, 486, 498, 502, 507, 510, 513, 527, 531, 550, 557, 569, 571, 573, 597, 598, 620, 630, 696, 697, 698, 699, 702, 704, 705, 706, 708, 709, 710, 712, 752, 754, 755, 756, 759, 761, 770, 773, 786, 787, 837, 878, 887, 888, 889, 893, 894, 895, 896, 897, 898, 900, 901, 912, 914, 917, 918, 919, 934, 937, 940, 944, 945, 946, 950, 952, 955, 956, 959, 960, 961, 964, 974, 979, 980, 981, 982, 985, 1065, 1068, 1075, 1077, 1079, 1080, 1083, 1084, 1085, 1088, 1090, 1100, 1101, 1103, 1105, 1113, 1119, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1135, 1136, 1138, 1141, 1143, 1151, 1152, 1153, 1154, 1155, 1156, 1165, 1168, 1172, 1173, 1174, 1175, 1177, 1178, 1182, 1186, 1189, 1201, 1203, 1209, 1218, 1223, 1225, 1232, 1233, 1234, 1235, 1236, 1237, 1241, 1243, 1244, 1250, 1252, 1254, 1255, 1256, 1259, 1261, 1264, 1266, 1268, 1270, 1272, 1274, 1277, 1278, 1279, 1281, 1282, 1285, 1287, 1288, 1293, 1295, 1296, 1298, 1300, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1332, 1333, 1334, 1342, 1343, 1344, 1345, 1352, 1357, 1368, 1369, 1370, 1373, 1374, 1376, 1377, 1385, 1387, 1388, 1389, 1391, 1395, 1396, 1414, 1415, 1440, 1441, 1447, 1449, 1451, 1456, 1457, 1459, 1465, 1466, 1467, 1468, 1469, 1483, 1495, 1496, 1497, 1498, 1499, 1500, 1508, 1510, 1519, 1522, 1534, 1535, 1543, 1554, 1578, 1581, 1584, 1585, 1611, 1612, 1613, 1614, 1615, 1624, 1631, 1636, 1647, 1659, 1660, 1662, 1664, 1670, 1671, 1672, 1674, 1676, 1678, 1683, 1696, 1701, 1702, 1708, 1712, 1713, 1714, 1718, 1722, 1723, 1726, 1727, 1729, 1730, 1732, 1736, 1738, 1740, 1742, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1756, 1757, 1758, 1760, 1761, 1765, 1778, 1785, 1787, 1788, 1793, 1794, 1796, 1798, 1803, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1826, 1829, 1832, 1833, 1840, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1851, 1854, 1855, 1856, 1857, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1869, 1870, 1871, 1872, 1873, 1874, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1892, 1897, 1899, 1900, 1903, 1905, 1906, 1908, 1909, 1910, 1916, 1918, 1921, 1922, 1923, 1927, 1928, 1930, 1932, 1935, 1939, 1940, 1942, 1943, 1944, 1945, 1946], "fact": [1, 3, 8, 11, 15, 22, 65, 509, 935, 944, 978, 1165, 1169, 1170, 1247, 1248, 1275, 1882, 1910, 1913, 1923, 1936, 1939], "reset": [1, 773, 833, 838, 906, 986, 1034, 1036, 1049, 1050, 1051, 1212, 1396, 1444, 1460, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1719, 1736, 1831, 1895, 1923, 1934], "phase": [1, 16, 29, 40, 806, 1247, 1248, 1711, 1830, 1883, 1922], "recreat": [1, 28, 1905], "valid": [1, 14, 20, 23, 29, 42, 48, 57, 59, 73, 98, 101, 760, 761, 770, 804, 957, 969, 972, 1028, 1085, 1210, 1212, 1213, 1233, 1247, 1248, 1257, 1258, 1259, 1270, 1275, 1306, 1372, 1373, 1374, 1518, 1519, 1520, 1543, 1615, 1642, 1647, 1651, 1680, 1681, 1701, 1702, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1729, 1882, 1883, 1884, 1885, 1899, 1900, 1905, 1908, 1910, 1914, 1923, 1926, 1929, 1935, 1936], "altern": [1, 9, 16, 25, 39, 42, 73, 693, 827, 1145, 1146, 1174, 1219, 1283, 1472, 1489, 1491, 1562, 1624, 1676, 1700, 1772, 1865, 1878, 1879, 1886, 1905, 1914, 1916, 1919, 1920, 1922], "never": [1, 5, 7, 11, 14, 40, 42, 59, 60, 238, 239, 809, 892, 954, 1209, 1258, 1259, 1270, 1283, 1624, 1657, 1905, 1908, 1910, 1927, 1928, 1935, 1946], "long": [1, 7, 9, 16, 25, 29, 39, 59, 72, 747, 762, 764, 765, 766, 767, 769, 776, 794, 1142, 1188, 1312, 1317, 1340, 1367, 1380, 1388, 1414, 1415, 1451, 1527, 1680, 1728, 1841, 1845, 1855, 1857, 1862, 1880, 1885, 1892, 1897, 1898, 1899, 1905, 1906, 1908, 1910, 1912, 1918, 1920, 1923, 1927, 1929, 1934, 1941, 1942, 1944, 1945], "hard": [1, 7, 8, 16, 17, 19, 42, 47, 60, 968, 1085, 1284, 1400, 1545, 1546, 1882, 1883, 1884, 1905, 1923, 1927], "matter": [1, 4, 42, 65, 910, 1073, 1085, 1219, 1222, 1227, 1624, 1900, 1905, 1927], "discourag": [1, 1054, 1058, 1905, 1935], "aggress": [1, 16, 1209, 1905, 1935], "buffer": [1, 4, 16, 39, 40, 42, 65, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 893, 999, 1031, 1138, 1141, 1151, 1212, 1219, 1222, 1233, 1283, 1362, 1363, 1364, 1381, 1417, 1418, 1419, 1444, 1483, 1617, 1624, 1626, 1633, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654, 1664, 1666, 1679, 1697, 1699, 1761, 1803, 1848, 1884, 1901, 1905, 1909, 1910, 1916, 1921, 1923, 1928], "free": [1, 7, 14, 42, 44, 48, 50, 59, 60, 65, 73, 74, 81, 82, 1037, 1055, 1215, 1227, 1284, 1893, 1903, 1905, 1908, 1910, 1912, 1918, 1922, 1923, 1939], "reus": [1, 11, 14, 16, 29, 42, 47, 73, 501, 1881, 1905, 1908, 1935], "effici": [1, 2, 3, 8, 31, 39, 48, 65, 66, 71, 167, 773, 906, 911, 920, 956, 1149, 1157, 1229, 1267, 1284, 1303, 1352, 1383, 1384, 1385, 1388, 1389, 1396, 1450, 1456, 1457, 1491, 1593, 1893, 1900, 1905, 1909, 1910, 1913, 1917, 1918, 1919, 1926, 1928, 1930, 1935, 1936, 1939, 1942, 1943, 1947], "few": [1, 7, 8, 14, 16, 19, 20, 21, 22, 25, 29, 40, 44, 50, 1085, 1142, 1388, 1624, 1879, 1885, 1905, 1908, 1910, 1912, 1914, 1919, 1922, 1923, 1926, 1928, 1930, 1933, 1939, 1943, 1945, 1947], "occas": [1, 7, 1905], "actual": [1, 8, 14, 15, 16, 19, 20, 21, 27, 44, 50, 52, 65, 70, 73, 803, 977, 1103, 1121, 1223, 1227, 1375, 1376, 1377, 1543, 1624, 1648, 1678, 1700, 1705, 1879, 1884, 1885, 1898, 1905, 1908, 1909, 1910, 1913, 1918, 1922, 1930, 1935, 1941, 1946], "signific": [1, 3, 19, 23, 44, 1713, 1905, 1908, 1939], "amount": [1, 2, 3, 4, 7, 14, 22, 25, 29, 39, 42, 44, 50, 59, 73, 922, 1010, 1036, 1038, 1042, 1209, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1391, 1432, 1447, 1495, 1526, 1641, 1642, 1644, 1645, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1899, 1905, 1907, 1908, 1911, 1912, 1914, 1935, 1939], "heavi": [1, 15, 42, 1905, 1922], "pressur": [1, 1905], "might": [1, 3, 4, 9, 11, 14, 15, 16, 17, 19, 20, 28, 29, 33, 34, 36, 42, 44, 46, 48, 59, 70, 72, 73, 99, 167, 501, 557, 906, 985, 1227, 1228, 1543, 1624, 1625, 1879, 1882, 1895, 1900, 1905, 1907, 1908, 1909, 1910, 1913, 1915, 1920, 1923, 1927, 1928, 1930, 1935, 1936, 1937, 1939, 1943, 1945, 1946], "keep": [1, 3, 7, 14, 15, 20, 25, 39, 40, 44, 46, 50, 59, 65, 74, 989, 1283, 1362, 1363, 1364, 1368, 1387, 1407, 1408, 1409, 1453, 1483, 1543, 1554, 1624, 1643, 1682, 1750, 1879, 1880, 1882, 1897, 1899, 1900, 1905, 1908, 1909, 1911, 1912, 1913, 1918, 1924, 1926, 1930, 1935, 1936, 1937], "track": [1, 14, 15, 16, 20, 24, 27, 50, 74, 100, 351, 994, 1034, 1036, 1049, 1050, 1051, 1141, 1142, 1187, 1313, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1624, 1643, 1895, 1897, 1899, 1900, 1905, 1908, 1910, 1911, 1912, 1915, 1916, 1924, 1926, 1928, 1929, 1936, 1937, 1939], "save": [1, 5, 7, 11, 16, 31, 34, 40, 42, 44, 46, 65, 510, 850, 902, 903, 912, 1149, 1211, 1212, 1217, 1219, 1227, 1229, 1283, 1444, 1624, 1678, 1679, 1701, 1707, 1710, 1714, 1882, 1883, 1894, 1899, 1910, 1911, 1916, 1918, 1920, 1923, 1925, 1926, 1927, 1929, 1939, 1944, 1948], "afterward": [1, 1444, 1615, 1624, 1939], "start": [1, 3, 4, 8, 9, 14, 16, 21, 24, 39, 40, 42, 44, 50, 56, 58, 59, 60, 61, 65, 69, 72, 73, 418, 448, 449, 510, 551, 711, 878, 1034, 1036, 1047, 1049, 1050, 1107, 1108, 1124, 1138, 1210, 1224, 1237, 1282, 1298, 1343, 1344, 1352, 1357, 1358, 1359, 1388, 1390, 1437, 1438, 1439, 1445, 1447, 1535, 1581, 1624, 1638, 1642, 1644, 1657, 1683, 1705, 1711, 1745, 1776, 1799, 1812, 1813, 1814, 1816, 1817, 1879, 1880, 1881, 1883, 1884, 1889, 1892, 1897, 1899, 1905, 1906, 1908, 1909, 1912, 1916, 1917, 1918, 1922, 1923, 1926, 1929, 1935, 1936, 1937, 1939], "sure": [1, 7, 9, 16, 19, 29, 39, 42, 44, 49, 51, 60, 62, 68, 73, 874, 875, 906, 1089, 1136, 1187, 1216, 1227, 1228, 1284, 1624, 1669, 1707, 1848, 1885, 1898, 1905, 1909, 1912, 1913, 1922, 1923, 1929, 1930, 1935, 1936, 1937, 1939, 1944], "longer": [1, 11, 29, 42, 61, 69, 70, 700, 903, 921, 922, 1209, 1216, 1624, 1668, 1671, 1895, 1905, 1908, 1935, 1937], "find": [1, 7, 14, 15, 16, 17, 20, 21, 22, 28, 29, 33, 42, 59, 70, 73, 96, 1085, 1165, 1233, 1284, 1375, 1376, 1377, 1414, 1681, 1719, 1730, 1765, 1831, 1879, 1893, 1897, 1899, 1905, 1907, 1908, 1909, 1910, 1912, 1913, 1918, 1920, 1923, 1924, 1925, 1930, 1935, 1939, 1942, 1944, 1946, 1948, 1950], "quick": [1, 7, 25, 68, 1892, 1916], "guid": [1, 8, 9, 20, 21, 25, 27, 39, 96, 97, 1223, 1668, 1880, 1908, 1911, 1927, 1930], "var": [1, 14, 20, 29, 52, 57, 59, 62, 1362, 1363, 1364, 1398, 1399, 1407, 1408, 1409, 1416, 1483, 1540, 1733, 1868, 1881, 1883, 1885, 1898, 1925], "thing": [1, 3, 7, 8, 11, 15, 16, 20, 22, 25, 27, 29, 42, 70, 73, 1142, 1221, 1313, 1360, 1545, 1804, 1884, 1905, 1908, 1910, 1911, 1912, 1913, 1918, 1923, 1927, 1930, 1931, 1937], "detach": [1, 5, 28, 239, 463, 473, 963, 1141, 1212, 1367, 1444, 1527, 1545, 1807, 1844, 1882, 1883, 1898, 1900, 1912, 1923, 1925, 1932, 1939, 1943, 1945], "register_hook": [1, 1898, 1905], "name": [1, 2, 3, 12, 13, 16, 20, 22, 24, 28, 29, 33, 40, 42, 47, 48, 50, 52, 53, 56, 57, 59, 61, 65, 73, 693, 710, 760, 761, 770, 805, 827, 828, 829, 830, 837, 853, 867, 871, 930, 972, 987, 1014, 1141, 1151, 1210, 1212, 1213, 1219, 1222, 1227, 1228, 1242, 1247, 1248, 1254, 1255, 1257, 1258, 1259, 1260, 1270, 1271, 1273, 1275, 1276, 1283, 1444, 1494, 1617, 1622, 1623, 1624, 1631, 1632, 1633, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1665, 1666, 1668, 1680, 1681, 1761, 1771, 1866, 1879, 1880, 1882, 1883, 1885, 1886, 1889, 1891, 1894, 1895, 1897, 1903, 1905, 1908, 1909, 1910, 1913, 1915, 1916, 1923, 1925, 1927, 1928, 1929, 1935, 1936, 1941, 1944, 1946, 1947, 1948, 1949, 1950, 1951], "factori": [1, 2, 15, 31, 48, 50, 53, 57, 70, 837, 1085, 1669, 1681, 1769, 1880, 1883, 1899, 1908, 1925, 1942], "ones": [1, 16, 18, 22, 28, 29, 39, 42, 46, 48, 65, 70, 71, 72, 73, 74, 76, 79, 81, 82, 167, 270, 329, 418, 460, 461, 463, 529, 807, 872, 906, 915, 917, 918, 919, 920, 921, 936, 948, 966, 1068, 1076, 1098, 1141, 1148, 1149, 1152, 1187, 1209, 1212, 1223, 1232, 1258, 1274, 1283, 1361, 1387, 1391, 1398, 1399, 1416, 1444, 1448, 1449, 1451, 1453, 1495, 1534, 1593, 1611, 1615, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1661, 1663, 1666, 1676, 1680, 1733, 1750, 1768, 1799, 1847, 1851, 1875, 1883, 1885, 1887, 1898, 1899, 1905, 1906, 1908, 1910, 1917, 1919, 1920, 1923, 1925, 1926, 1927, 1930, 1935, 1937, 1940, 1942, 1945], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 16, 18, 19, 20, 33, 34, 39, 42, 43, 44, 46, 47, 48, 50, 52, 57, 59, 60, 61, 65, 70, 73, 89, 99, 100, 804, 809, 813, 815, 833, 834, 835, 837, 838, 874, 875, 912, 933, 966, 984, 1046, 1047, 1083, 1085, 1128, 1165, 1175, 1214, 1225, 1237, 1275, 1286, 1288, 1290, 1298, 1381, 1444, 1447, 1448, 1449, 1453, 1487, 1489, 1491, 1560, 1593, 1624, 1628, 1629, 1631, 1638, 1642, 1644, 1683, 1684, 1685, 1686, 1687, 1688, 1697, 1698, 1699, 1700, 1726, 1736, 1761, 1775, 1830, 1831, 1845, 1855, 1857, 1873, 1880, 1883, 1885, 1907, 1908, 1909, 1910, 1916, 1924, 1928, 1929, 1930, 1935, 1936, 1939, 1940, 1943, 1944, 1946, 1948, 1949], "static": [1, 3, 8, 11, 13, 14, 18, 20, 33, 43, 48, 50, 65, 74, 79, 80, 82, 807, 828, 830, 839, 845, 870, 872, 874, 902, 903, 904, 905, 966, 1225, 1487, 1624, 1805, 1882, 1883, 1884, 1885, 1908, 1915, 1924, 1928, 1931, 1935, 1941], "Then": [1, 11, 17, 42, 60, 73, 1391, 1495, 1633, 1681, 1905, 1906, 1909, 1910, 1911, 1919, 1920, 1923, 1926, 1927, 1935, 1936, 1948], "op": [1, 4, 11, 12, 15, 16, 17, 18, 19, 20, 22, 28, 29, 42, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 100, 167, 517, 537, 617, 770, 805, 806, 807, 836, 839, 867, 874, 875, 906, 912, 920, 956, 966, 992, 1007, 1009, 1013, 1014, 1028, 1029, 1054, 1058, 1060, 1142, 1162, 1213, 1225, 1227, 1228, 1283, 1289, 1460, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1717, 1776, 1853, 1880, 1881, 1885, 1889, 1891, 1892, 1893, 1895, 1898, 1899, 1907, 1908, 1909, 1910, 1918, 1924, 1927, 1929, 1930, 1931, 1932, 1933, 1939, 1941, 1943, 1945, 1949], "ctx": [1, 57, 74, 78, 902, 903, 904, 910, 911, 912, 913, 1904, 1910, 1911, 1923], "gradcheck": [1, 922, 1880, 1910], "extend": [1, 39, 42, 44, 48, 51, 61, 73, 874, 903, 905, 912, 1446, 1455, 1880, 1889, 1900, 1905, 1915, 1917, 1918, 1923, 1925, 1927, 1933, 1939, 1950], "staticmethod": [1, 74, 903, 905, 910, 911, 912, 913, 1885, 1904, 1910, 1923, 1935], "result": [1, 3, 4, 5, 7, 8, 9, 12, 15, 18, 20, 21, 24, 25, 28, 29, 33, 36, 39, 40, 42, 44, 48, 50, 52, 57, 60, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 99, 170, 238, 239, 270, 271, 331, 351, 414, 510, 512, 513, 569, 596, 597, 598, 600, 601, 631, 699, 700, 701, 702, 703, 706, 708, 709, 710, 712, 773, 806, 890, 892, 908, 909, 914, 915, 916, 917, 918, 919, 921, 922, 934, 937, 948, 952, 957, 963, 965, 966, 969, 980, 982, 998, 1000, 1002, 1028, 1029, 1042, 1064, 1065, 1066, 1067, 1068, 1080, 1085, 1103, 1106, 1112, 1121, 1128, 1130, 1133, 1137, 1138, 1141, 1142, 1143, 1146, 1147, 1152, 1153, 1157, 1173, 1174, 1176, 1189, 1203, 1212, 1215, 1216, 1223, 1227, 1228, 1230, 1232, 1233, 1237, 1251, 1253, 1255, 1256, 1264, 1268, 1270, 1272, 1273, 1274, 1281, 1291, 1292, 1299, 1309, 1311, 1312, 1313, 1314, 1316, 1317, 1339, 1342, 1381, 1383, 1384, 1385, 1389, 1391, 1396, 1410, 1414, 1444, 1450, 1459, 1488, 1489, 1490, 1491, 1495, 1525, 1543, 1554, 1608, 1611, 1612, 1624, 1631, 1633, 1666, 1669, 1670, 1671, 1672, 1681, 1711, 1717, 1719, 1726, 1727, 1730, 1736, 1749, 1755, 1770, 1798, 1808, 1810, 1811, 1822, 1824, 1825, 1826, 1829, 1830, 1831, 1840, 1844, 1845, 1850, 1851, 1853, 1854, 1856, 1867, 1868, 1872, 1882, 1883, 1884, 1885, 1892, 1893, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1923, 1924, 1926, 1928, 1929, 1931, 1932, 1935, 1936, 1939, 1942, 1944, 1945, 1946, 1949, 1950], "save_for_backward": [1, 903, 911, 913, 1904, 1905, 1910, 1911, 1923], "grad_output": [1, 74, 902, 910, 920, 922, 926, 927, 1212, 1444, 1620, 1621, 1881, 1883, 1905, 1908, 1910, 1911, 1916], "saved_tensor": [1, 911, 912, 913, 1904, 1905, 1910, 1911], "avail": [1, 2, 5, 8, 9, 16, 19, 21, 29, 33, 34, 39, 42, 50, 59, 60, 96, 97, 1008, 1010, 1011, 1022, 1025, 1032, 1033, 1052, 1053, 1055, 1085, 1218, 1275, 1276, 1301, 1487, 1496, 1554, 1593, 1612, 1719, 1773, 1826, 1831, 1865, 1879, 1880, 1882, 1884, 1885, 1889, 1892, 1897, 1905, 1908, 1910, 1914, 1916, 1917, 1918, 1920, 1921, 1922, 1926, 1927, 1929, 1930, 1931, 1935, 1949, 1950], "cost": [1, 3, 4, 8, 9, 18, 23, 29, 40, 65, 956, 966, 1267, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1769, 1908, 1920, 1931, 1936, 1942], "both": [1, 2, 3, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 26, 29, 33, 39, 40, 42, 43, 44, 47, 48, 52, 57, 58, 59, 60, 65, 72, 73, 74, 81, 82, 114, 355, 742, 781, 782, 785, 786, 787, 806, 864, 905, 909, 915, 916, 917, 918, 919, 934, 971, 984, 1009, 1080, 1101, 1131, 1132, 1133, 1141, 1155, 1157, 1165, 1172, 1189, 1202, 1203, 1209, 1212, 1225, 1233, 1234, 1282, 1298, 1306, 1312, 1325, 1326, 1357, 1358, 1362, 1363, 1364, 1369, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1399, 1405, 1407, 1408, 1409, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1437, 1438, 1439, 1444, 1450, 1483, 1491, 1495, 1496, 1499, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1567, 1568, 1569, 1593, 1624, 1636, 1666, 1686, 1687, 1711, 1734, 1735, 1804, 1805, 1807, 1826, 1830, 1850, 1851, 1882, 1884, 1885, 1892, 1898, 1899, 1901, 1904, 1905, 1906, 1910, 1911, 1913, 1916, 1919, 1920, 1921, 1923, 1927, 1928, 1930, 1933, 1935, 1937, 1939, 1940, 1946, 1948, 1949], "cpu": [1, 4, 5, 11, 15, 19, 22, 24, 25, 26, 29, 33, 35, 39, 42, 44, 65, 74, 79, 82, 105, 136, 213, 305, 342, 351, 460, 461, 462, 463, 464, 473, 593, 602, 878, 893, 931, 935, 944, 982, 988, 998, 999, 1000, 1002, 1086, 1088, 1098, 1103, 1121, 1133, 1138, 1139, 1162, 1163, 1169, 1170, 1212, 1219, 1221, 1222, 1231, 1241, 1243, 1247, 1248, 1249, 1250, 1252, 1254, 1257, 1259, 1260, 1266, 1269, 1272, 1275, 1276, 1282, 1283, 1298, 1301, 1312, 1381, 1387, 1444, 1487, 1608, 1624, 1628, 1629, 1657, 1658, 1672, 1675, 1729, 1738, 1740, 1742, 1744, 1745, 1769, 1774, 1776, 1777, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1798, 1807, 1812, 1813, 1814, 1815, 1816, 1817, 1830, 1844, 1845, 1846, 1855, 1857, 1862, 1865, 1877, 1880, 1882, 1883, 1885, 1889, 1893, 1897, 1898, 1900, 1908, 1910, 1911, 1914, 1916, 1919, 1920, 1922, 1923, 1925, 1928, 1929, 1931, 1934, 1935, 1939, 1941, 1942, 1945, 1946, 1947], "There": [1, 5, 6, 7, 9, 11, 14, 15, 16, 18, 20, 21, 22, 28, 29, 33, 38, 42, 44, 59, 66, 70, 71, 73, 98, 99, 693, 747, 806, 903, 966, 1142, 1381, 1414, 1459, 1593, 1624, 1664, 1669, 1879, 1882, 1884, 1885, 1891, 1892, 1899, 1905, 1908, 1910, 1911, 1912, 1915, 1918, 1922, 1923, 1927, 1930, 1931, 1935, 1937, 1945, 1947], "moment": [1, 20, 24, 74, 80, 785, 786, 787, 980, 1686, 1687, 1688, 1690, 1696, 1700, 1893, 1897, 1900, 1929, 1935], "nvprof": [1, 4, 928, 1908], "regist": [1, 15, 18, 19, 23, 34, 40, 42, 46, 47, 48, 59, 61, 65, 73, 96, 97, 98, 99, 502, 693, 805, 806, 867, 926, 927, 966, 1031, 1212, 1283, 1444, 1445, 1446, 1454, 1455, 1472, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1631, 1632, 1633, 1634, 1636, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1889, 1895, 1897, 1909, 1910, 1915, 1916, 1921, 1923, 1927, 1935], "activ": [1, 5, 7, 9, 11, 15, 29, 61, 65, 71, 805, 807, 809, 816, 820, 854, 855, 864, 874, 875, 987, 996, 1011, 1024, 1042, 1141, 1143, 1153, 1284, 1356, 1383, 1384, 1385, 1389, 1399, 1416, 1443, 1445, 1462, 1473, 1487, 1489, 1491, 1536, 1573, 1596, 1624, 1634, 1635, 1636, 1666, 1671, 1872, 1880, 1881, 1893, 1897, 1908, 1910, 1911, 1916, 1923, 1926, 1928, 1929, 1930, 1931, 1932, 1935, 1939, 1948, 1949], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1929], "use_devic": 1, "record_shap": [1, 1929], "with_flop": [1, 1929], "profile_memori": [1, 1929], "with_stack": [1, 1929], "with_modul": [1, 1929], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1929], "hold": [1, 14, 20, 42, 57, 59, 61, 62, 65, 69, 72, 73, 550, 1284, 1391, 1445, 1446, 1454, 1455, 1495, 1615, 1624, 1626, 1627, 1633, 1643, 1657, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1812, 1813, 1814, 1815, 1816, 1817, 1906, 1908, 1910, 1912, 1915, 1918, 1926, 1929, 1935, 1936, 1937, 1939, 1941, 1942, 1944, 1945], "summari": [1, 3, 17, 22, 29, 60, 1043, 1778, 1880, 1895, 1944, 1949], "hood": [1, 15, 20, 72, 1897, 1905, 1908, 1909, 1918, 1927, 1937, 1939], "just": [1, 2, 7, 11, 12, 13, 14, 15, 16, 17, 20, 26, 28, 33, 40, 42, 47, 48, 50, 57, 73, 602, 700, 710, 803, 836, 839, 902, 904, 930, 977, 978, 1227, 1228, 1266, 1269, 1274, 1275, 1301, 1383, 1384, 1385, 1389, 1624, 1636, 1637, 1701, 1769, 1854, 1855, 1856, 1857, 1879, 1882, 1897, 1904, 1905, 1910, 1911, 1913, 1915, 1916, 1917, 1921, 1927, 1928, 1935, 1936, 1939, 1942, 1943, 1945, 1949], "record": [1, 5, 11, 14, 16, 29, 46, 51, 52, 53, 57, 60, 72, 73, 460, 461, 462, 463, 464, 510, 832, 833, 834, 835, 838, 840, 878, 935, 944, 988, 989, 991, 1086, 1087, 1088, 1098, 1103, 1121, 1138, 1139, 1140, 1169, 1170, 1212, 1227, 1231, 1282, 1298, 1325, 1326, 1381, 1444, 1675, 1676, 1678, 1681, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1877, 1878, 1882, 1884, 1900, 1904, 1905, 1908, 1910, 1923, 1924, 1929, 1935, 1944, 1945, 1946, 1947, 1948, 1949], "event": [1, 25, 45, 48, 50, 58, 61, 72, 930, 931, 932, 989, 991, 1042, 1045, 1227, 1228, 1289, 1325, 1326, 1593, 1880, 1895, 1897, 1908, 1929, 1944], "being": [1, 3, 5, 9, 11, 14, 15, 16, 19, 20, 25, 27, 29, 39, 42, 44, 46, 48, 50, 52, 59, 60, 61, 65, 69, 70, 72, 73, 74, 82, 114, 418, 773, 806, 812, 905, 914, 920, 964, 989, 997, 1044, 1048, 1062, 1063, 1098, 1131, 1132, 1142, 1151, 1152, 1201, 1212, 1216, 1301, 1310, 1315, 1360, 1361, 1378, 1380, 1387, 1388, 1392, 1393, 1398, 1404, 1411, 1435, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1475, 1476, 1492, 1508, 1515, 1516, 1526, 1538, 1539, 1543, 1555, 1578, 1586, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1650, 1651, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1729, 1730, 1824, 1825, 1826, 1867, 1868, 1882, 1885, 1892, 1895, 1898, 1899, 1900, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1916, 1918, 1919, 1923, 1927, 1930, 1933, 1935, 1936, 1939, 1946, 1948, 1950], "those": [1, 2, 4, 5, 11, 13, 15, 16, 19, 20, 22, 24, 29, 33, 39, 40, 42, 44, 46, 48, 65, 70, 72, 73, 837, 921, 1000, 1010, 1073, 1075, 1153, 1227, 1269, 1275, 1283, 1322, 1352, 1360, 1361, 1378, 1380, 1388, 1404, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1496, 1515, 1516, 1526, 1535, 1555, 1578, 1586, 1681, 1700, 1773, 1830, 1851, 1872, 1884, 1898, 1899, 1904, 1905, 1908, 1910, 1911, 1914, 1916, 1920, 1921, 1923, 1926, 1933, 1935, 1937], "report": [1, 3, 4, 16, 22, 24, 29, 36, 42, 52, 60, 72, 73, 98, 99, 1042, 1145, 1146, 1148, 1904, 1908, 1928, 1939], "runtim": [1, 3, 5, 16, 23, 33, 42, 73, 840, 891, 930, 1083, 1085, 1175, 1212, 1227, 1444, 1626, 1627, 1682, 1725, 1865, 1873, 1885, 1898, 1899, 1905, 1908, 1910, 1918, 1923], "note": [1, 2, 3, 5, 8, 14, 16, 17, 18, 19, 22, 25, 28, 29, 31, 33, 34, 36, 38, 39, 40, 42, 44, 46, 47, 48, 49, 50, 57, 59, 61, 65, 69, 71, 72, 73, 74, 81, 82, 98, 99, 100, 167, 238, 393, 513, 514, 527, 529, 531, 748, 754, 755, 756, 804, 806, 807, 808, 812, 854, 874, 878, 897, 906, 912, 914, 915, 916, 917, 918, 919, 920, 922, 956, 966, 985, 1060, 1068, 1073, 1085, 1106, 1136, 1138, 1153, 1154, 1165, 1187, 1199, 1209, 1210, 1212, 1213, 1218, 1284, 1306, 1325, 1326, 1360, 1361, 1367, 1375, 1376, 1377, 1378, 1380, 1387, 1388, 1396, 1398, 1404, 1410, 1411, 1414, 1435, 1436, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1454, 1455, 1458, 1459, 1475, 1476, 1483, 1487, 1492, 1496, 1515, 1516, 1526, 1534, 1535, 1543, 1554, 1555, 1578, 1581, 1586, 1587, 1600, 1615, 1624, 1625, 1671, 1679, 1680, 1697, 1703, 1705, 1711, 1713, 1729, 1736, 1811, 1812, 1813, 1814, 1816, 1817, 1822, 1826, 1830, 1851, 1865, 1872, 1879, 1882, 1883, 1886, 1892, 1897, 1900, 1901, 1905, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1929, 1931, 1933, 1934, 1936, 1937, 1939, 1943, 1944, 1951], "propag": [1, 14, 15, 20, 28, 44, 45, 48, 50, 59, 73, 74, 82, 527, 699, 702, 703, 704, 708, 709, 710, 711, 779, 780, 781, 782, 792, 795, 796, 798, 799, 800, 851, 853, 934, 1131, 1132, 1339, 1811, 1880, 1897, 1898, 1904, 1908, 1910, 1913, 1915, 1935, 1948, 1949], "async": [1, 42, 43, 72, 616, 1624, 1886, 1908, 1915, 1941], "task": [1, 3, 7, 40, 66, 71, 1215, 1230, 1407, 1408, 1409, 1885, 1907, 1915, 1916, 1918, 1922], "cuda": [1, 3, 4, 5, 15, 16, 18, 19, 21, 24, 29, 33, 38, 39, 40, 42, 44, 46, 65, 105, 167, 305, 329, 337, 351, 356, 529, 531, 537, 593, 878, 890, 892, 906, 920, 935, 937, 944, 966, 986, 987, 988, 989, 991, 992, 1007, 1009, 1020, 1086, 1087, 1088, 1098, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1139, 1169, 1170, 1212, 1231, 1233, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1266, 1269, 1272, 1273, 1275, 1276, 1282, 1283, 1298, 1301, 1317, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1387, 1414, 1444, 1459, 1483, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1535, 1543, 1554, 1581, 1593, 1612, 1613, 1614, 1615, 1624, 1626, 1627, 1628, 1629, 1670, 1672, 1675, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1729, 1738, 1740, 1742, 1744, 1745, 1769, 1773, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1808, 1812, 1813, 1814, 1815, 1816, 1817, 1830, 1844, 1846, 1855, 1857, 1862, 1865, 1877, 1880, 1883, 1889, 1898, 1900, 1910, 1911, 1916, 1919, 1923, 1925, 1926, 1928, 1929, 1934, 1935, 1939, 1941, 1942, 1945, 1946, 1947], "cudaev": 1, "approxim": [1, 3, 40, 46, 59, 73, 1149, 1165, 1275, 1284, 1352, 1394, 1458, 1473, 1480, 1541, 1586, 1596, 1632, 1683, 1700, 1719, 1831, 1851, 1881, 1883, 1885, 1908, 1909, 1910, 1913, 1923, 1951], "4u": 1, "shape": [1, 5, 8, 13, 16, 18, 21, 28, 29, 31, 40, 42, 48, 65, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 114, 188, 208, 225, 235, 416, 418, 460, 462, 464, 486, 511, 512, 527, 529, 531, 557, 579, 630, 693, 698, 700, 701, 710, 748, 758, 759, 769, 771, 773, 777, 779, 780, 781, 782, 785, 786, 787, 794, 809, 891, 897, 911, 915, 917, 918, 919, 930, 936, 937, 939, 942, 947, 949, 953, 954, 966, 979, 1001, 1075, 1076, 1077, 1079, 1080, 1085, 1086, 1088, 1090, 1105, 1106, 1107, 1108, 1116, 1117, 1118, 1124, 1130, 1131, 1132, 1133, 1139, 1146, 1147, 1151, 1152, 1153, 1154, 1156, 1168, 1173, 1174, 1178, 1186, 1189, 1203, 1209, 1225, 1227, 1228, 1231, 1236, 1237, 1241, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1300, 1301, 1305, 1313, 1318, 1319, 1333, 1334, 1345, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1534, 1535, 1539, 1543, 1545, 1554, 1555, 1560, 1567, 1568, 1569, 1579, 1580, 1583, 1584, 1585, 1587, 1593, 1612, 1615, 1624, 1626, 1627, 1631, 1633, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1672, 1675, 1680, 1682, 1717, 1726, 1730, 1734, 1735, 1738, 1740, 1741, 1742, 1749, 1751, 1752, 1756, 1765, 1768, 1793, 1807, 1808, 1810, 1813, 1815, 1821, 1826, 1827, 1830, 1840, 1847, 1851, 1861, 1862, 1863, 1872, 1875, 1877, 1880, 1881, 1882, 1883, 1885, 1898, 1899, 1900, 1905, 1906, 1908, 1910, 1911, 1912, 1924, 1925, 1929, 1932, 1935, 1939, 1940, 1944, 1945, 1946, 1947], "about": [1, 8, 9, 12, 14, 16, 17, 20, 21, 23, 29, 35, 39, 42, 43, 46, 50, 52, 56, 58, 60, 66, 70, 73, 100, 271, 512, 631, 921, 922, 993, 994, 1010, 1034, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1049, 1050, 1051, 1142, 1241, 1248, 1388, 1657, 1700, 1711, 1772, 1879, 1882, 1884, 1885, 1889, 1892, 1907, 1908, 1909, 1910, 1912, 1915, 1918, 1919, 1921, 1927, 1929, 1930, 1933, 1936, 1937, 1939, 1943, 1945], "dimens": [1, 14, 31, 39, 42, 47, 48, 65, 70, 71, 73, 74, 79, 82, 84, 98, 235, 249, 270, 276, 329, 331, 333, 337, 448, 449, 487, 488, 489, 507, 527, 529, 531, 550, 556, 558, 559, 573, 596, 597, 598, 600, 601, 620, 630, 699, 705, 706, 708, 709, 710, 712, 748, 771, 792, 794, 798, 887, 888, 889, 890, 899, 900, 901, 905, 920, 945, 953, 956, 957, 958, 959, 960, 985, 1000, 1002, 1064, 1065, 1066, 1067, 1068, 1073, 1074, 1075, 1076, 1077, 1083, 1085, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1153, 1154, 1165, 1174, 1175, 1186, 1189, 1209, 1232, 1233, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1291, 1292, 1299, 1302, 1306, 1309, 1311, 1312, 1313, 1314, 1317, 1319, 1332, 1339, 1340, 1341, 1342, 1343, 1344, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1384, 1386, 1387, 1388, 1390, 1391, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1414, 1416, 1424, 1425, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1443, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1462, 1463, 1464, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1489, 1491, 1492, 1493, 1494, 1495, 1508, 1514, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1542, 1543, 1544, 1545, 1554, 1557, 1560, 1561, 1562, 1579, 1580, 1581, 1593, 1599, 1600, 1612, 1631, 1632, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1658, 1659, 1661, 1663, 1665, 1668, 1670, 1671, 1717, 1720, 1727, 1729, 1730, 1731, 1736, 1750, 1751, 1752, 1756, 1765, 1767, 1768, 1778, 1799, 1803, 1806, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1821, 1823, 1824, 1825, 1826, 1829, 1830, 1839, 1841, 1845, 1846, 1847, 1848, 1850, 1851, 1853, 1854, 1855, 1856, 1857, 1860, 1861, 1862, 1863, 1864, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1880, 1881, 1883, 1884, 1885, 1900, 1903, 1906, 1908, 1911, 1912, 1913, 1919, 1928, 1930, 1939, 1940, 1942, 1944, 1945], "collect": [1, 3, 7, 16, 20, 24, 28, 29, 39, 43, 44, 46, 50, 59, 65, 72, 73, 812, 813, 837, 874, 875, 954, 1024, 1086, 1174, 1313, 1624, 1647, 1675, 1738, 1742, 1877, 1880, 1883, 1884, 1885, 1895, 1908, 1909, 1911, 1926, 1929, 1930, 1933, 1937, 1939, 1944, 1946], "group": [1, 3, 9, 12, 16, 29, 39, 40, 43, 44, 46, 50, 56, 59, 60, 61, 62, 65, 68, 73, 623, 693, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 785, 786, 787, 893, 930, 1368, 1372, 1373, 1374, 1375, 1376, 1377, 1399, 1420, 1421, 1422, 1423, 1424, 1425, 1483, 1518, 1519, 1520, 1521, 1522, 1523, 1544, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1863, 1879, 1880, 1881, 1883, 1885, 1897, 1903, 1908, 1909, 1923, 1926, 1927, 1929, 1935, 1944], "prof": [1, 16, 25, 29, 56, 1929], "key_averag": [1, 1929], "group_by_input_shap": [1, 930, 1929], "skew": [1, 3, 4, 1263, 1631], "neglig": [1, 1224, 1773], "bottom": [1, 25, 1543, 1892], "But": [1, 7, 15, 17, 20, 22, 65, 72, 501, 1227, 1257, 1624, 1905, 1910, 1912, 1913, 1927, 1928, 1939, 1943, 1950], "total": [1, 3, 4, 7, 39, 40, 42, 56, 58, 59, 60, 65, 890, 931, 1002, 1037, 1042, 1055, 1138, 1173, 1174, 1321, 1367, 1391, 1404, 1411, 1435, 1450, 1495, 1580, 1624, 1628, 1670, 1672, 1674, 1705, 1711, 1751, 1778, 1826, 1879, 1884, 1895, 1908, 1914, 1918, 1926, 1939], "artifici": [1, 1939], "estim": [1, 3, 39, 48, 980, 984, 1165, 1209, 1362, 1363, 1364, 1394, 1398, 1399, 1407, 1408, 1409, 1416, 1483, 1541, 1632, 1697, 1794, 1929], "flop": [1, 1929], "hardwar": [1, 8, 16, 29, 872, 874, 875, 1247, 1248, 1275, 1865, 1908, 1918, 1920, 1931, 1939], "matrix": [1, 2, 16, 18, 40, 42, 48, 208, 225, 699, 702, 703, 704, 773, 934, 936, 945, 946, 954, 956, 957, 958, 959, 966, 980, 984, 1068, 1072, 1073, 1075, 1085, 1153, 1157, 1161, 1176, 1232, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1277, 1279, 1281, 1284, 1292, 1301, 1303, 1306, 1316, 1334, 1336, 1387, 1388, 1396, 1414, 1495, 1534, 1535, 1631, 1636, 1665, 1671, 1717, 1718, 1719, 1729, 1773, 1801, 1804, 1807, 1808, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1822, 1830, 1831, 1846, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1866, 1872, 1880, 1885, 1898, 1899, 1900, 1903, 1907, 1908, 1910, 1913, 1916, 1919, 1929, 1939, 1944, 1945], "2d": [1, 44, 47, 48, 600, 601, 713, 716, 719, 748, 752, 755, 779, 781, 786, 792, 796, 798, 799, 800, 959, 980, 984, 1073, 1085, 1267, 1268, 1350, 1354, 1358, 1361, 1362, 1363, 1373, 1376, 1380, 1384, 1388, 1392, 1407, 1408, 1413, 1438, 1447, 1449, 1450, 1451, 1496, 1497, 1498, 1503, 1506, 1508, 1511, 1516, 1519, 1522, 1530, 1535, 1538, 1565, 1568, 1578, 1581, 1632, 1665, 1735, 1810, 1815, 1853, 1893, 1903, 1910, 1929, 1930, 1939], "alloc": [1, 4, 11, 14, 15, 25, 31, 36, 40, 44, 48, 50, 59, 270, 347, 460, 461, 462, 463, 464, 501, 987, 989, 991, 993, 994, 996, 1009, 1010, 1011, 1034, 1036, 1038, 1040, 1041, 1042, 1043, 1050, 1051, 1055, 1086, 1088, 1320, 1321, 1322, 1329, 1679, 1738, 1742, 1744, 1769, 1844, 1897, 1900, 1905, 1909, 1914, 1918, 1929, 1942], "dealloc": [1, 73, 1138, 1897, 1908, 1912, 1914, 1929], "line": [1, 4, 16, 19, 20, 21, 22, 24, 26, 29, 36, 42, 73, 693, 930, 1085, 1142, 1187, 1212, 1222, 1444, 1508, 1543, 1778, 1805, 1882, 1885, 1886, 1900, 1906, 1910, 1913, 1914, 1920, 1922, 1923, 1929, 1939], "hierarchi": [1, 14, 73, 853, 1216, 1686, 1687, 1886, 1910, 1929, 1930], "callstack": [1, 42, 1929], "A": [1, 2, 3, 5, 7, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 25, 27, 28, 29, 33, 36, 39, 40, 42, 43, 44, 46, 47, 48, 50, 56, 59, 60, 61, 65, 66, 71, 72, 74, 75, 76, 79, 89, 99, 105, 573, 593, 596, 597, 598, 607, 637, 693, 705, 710, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 758, 759, 769, 774, 775, 776, 777, 778, 803, 805, 827, 871, 872, 874, 875, 932, 935, 944, 945, 947, 952, 957, 958, 965, 966, 968, 971, 972, 980, 984, 988, 989, 991, 999, 1001, 1002, 1070, 1085, 1090, 1098, 1099, 1100, 1112, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1153, 1156, 1165, 1168, 1169, 1170, 1174, 1202, 1203, 1204, 1205, 1208, 1210, 1212, 1215, 1219, 1222, 1224, 1227, 1228, 1232, 1236, 1241, 1242, 1243, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1284, 1292, 1300, 1301, 1302, 1303, 1307, 1345, 1361, 1365, 1367, 1380, 1387, 1388, 1397, 1398, 1406, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1434, 1443, 1444, 1450, 1472, 1477, 1479, 1487, 1492, 1493, 1508, 1514, 1526, 1534, 1545, 1555, 1562, 1573, 1593, 1599, 1600, 1615, 1624, 1625, 1626, 1627, 1631, 1633, 1636, 1658, 1659, 1662, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1707, 1710, 1711, 1713, 1719, 1729, 1731, 1732, 1733, 1734, 1735, 1746, 1752, 1758, 1761, 1794, 1803, 1805, 1806, 1809, 1821, 1825, 1826, 1830, 1831, 1848, 1853, 1854, 1855, 1856, 1857, 1861, 1862, 1863, 1864, 1865, 1868, 1872, 1875, 1879, 1881, 1882, 1883, 1884, 1885, 1889, 1892, 1893, 1898, 1899, 1903, 1904, 1907, 1908, 1910, 1911, 1912, 1918, 1919, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1945, 1949, 1950, 1951], "aten": [1, 2, 3, 12, 17, 21, 22, 29, 33, 36, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 99, 1028, 1142, 1334, 1680, 1681, 1805, 1880, 1882, 1883, 1889, 1907, 1910, 1922, 1925, 1929, 1930, 1939], "torchscript": [1, 3, 8, 19, 46, 73, 630, 1210, 1213, 1215, 1216, 1217, 1218, 1223, 1227, 1229, 1681, 1880, 1886, 1921, 1923, 1929, 1935], "eager": [1, 8, 11, 14, 16, 17, 18, 19, 24, 29, 966, 1060, 1210, 1213, 1223, 1777, 1885, 1908, 1929, 1931, 1933], "experiment": [1, 2, 14, 15, 18, 21, 29, 40, 42, 46, 47, 65, 73, 74, 77, 81, 82, 84, 914, 916, 920, 966, 972, 1059, 1142, 1242, 1253, 1255, 1256, 1260, 1273, 1624, 1678, 1700, 1880, 1882, 1884, 1898, 1899, 1909, 1920, 1922, 1923, 1927, 1928, 1929], "kineto": [1, 1929], "_experimentalconfig": [1, 1929], "librari": [1, 2, 3, 4, 8, 9, 16, 19, 21, 31, 33, 34, 39, 42, 49, 57, 61, 66, 69, 70, 71, 73, 693, 982, 989, 1012, 1016, 1028, 1136, 1224, 1255, 1301, 1798, 1895, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1922, 1923, 1927, 1929, 1930, 1935, 1950], "100": [1, 12, 20, 22, 39, 42, 46, 48, 73, 74, 81, 82, 316, 751, 752, 755, 756, 1172, 1212, 1223, 1229, 1267, 1282, 1289, 1298, 1313, 1333, 1352, 1360, 1361, 1362, 1363, 1364, 1373, 1374, 1376, 1377, 1379, 1380, 1407, 1408, 1409, 1444, 1451, 1453, 1483, 1492, 1525, 1526, 1578, 1689, 1701, 1702, 1707, 1708, 1709, 1710, 1712, 1714, 1715, 1731, 1787, 1883, 1885, 1897, 1907, 1908, 1923, 1926, 1931, 1937, 1939, 1944], "realli": [1, 7, 15, 17, 73, 968, 1885, 1905, 1927], "y": [1, 11, 12, 14, 19, 20, 28, 29, 31, 33, 39, 48, 56, 65, 70, 71, 73, 74, 77, 79, 80, 81, 82, 83, 84, 630, 633, 794, 897, 899, 900, 901, 908, 909, 912, 914, 915, 916, 917, 918, 919, 948, 954, 977, 984, 1028, 1029, 1068, 1079, 1085, 1089, 1141, 1143, 1146, 1147, 1148, 1152, 1153, 1187, 1218, 1223, 1227, 1280, 1289, 1290, 1313, 1360, 1361, 1362, 1363, 1364, 1365, 1378, 1380, 1399, 1404, 1405, 1407, 1408, 1409, 1411, 1416, 1431, 1435, 1436, 1447, 1448, 1449, 1451, 1453, 1475, 1476, 1483, 1486, 1492, 1493, 1514, 1543, 1560, 1583, 1615, 1636, 1669, 1678, 1733, 1751, 1753, 1754, 1775, 1807, 1821, 1847, 1851, 1852, 1872, 1875, 1882, 1883, 1884, 1885, 1898, 1899, 1903, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1917, 1923, 1927, 1930, 1935, 1937, 1940, 1944, 1947, 1948, 1949], "column": [1, 3, 40, 47, 208, 276, 597, 600, 964, 980, 984, 1068, 1098, 1126, 1127, 1177, 1247, 1248, 1251, 1267, 1270, 1275, 1279, 1284, 1334, 1453, 1495, 1534, 1535, 1631, 1719, 1729, 1810, 1812, 1813, 1814, 1816, 1817, 1830, 1851, 1855, 1857, 1866, 1903, 1913, 1939], "remov": [1, 3, 16, 17, 19, 23, 28, 39, 40, 42, 44, 48, 60, 62, 65, 73, 502, 527, 559, 570, 710, 810, 828, 829, 830, 872, 926, 927, 956, 957, 1031, 1142, 1158, 1209, 1212, 1216, 1301, 1302, 1306, 1444, 1445, 1454, 1545, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1632, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1650, 1651, 1652, 1653, 1655, 1656, 1666, 1668, 1671, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1729, 1745, 1767, 1821, 1830, 1853, 1860, 1879, 1880, 1893, 1905, 1916, 1921, 1923, 1925, 1927, 1937, 1941, 1946], "breviti": [1, 73, 1923], "print": [1, 3, 12, 16, 20, 29, 36, 39, 42, 50, 51, 56, 57, 60, 65, 70, 72, 733, 741, 742, 747, 758, 759, 769, 777, 924, 926, 927, 1141, 1142, 1151, 1212, 1216, 1218, 1219, 1223, 1301, 1365, 1368, 1406, 1431, 1444, 1456, 1457, 1525, 1581, 1584, 1585, 1636, 1646, 1647, 1648, 1649, 1652, 1662, 1666, 1678, 1681, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1778, 1879, 1882, 1883, 1905, 1907, 1908, 1910, 1916, 1917, 1923, 1925, 1927, 1929, 1935, 1944, 1945, 1948, 1949], "tabl": [1, 3, 15, 17, 22, 24, 29, 42, 73, 1387, 1534, 1883, 1885, 1910, 1926, 1927, 1929, 1930, 1935, 1939, 1946], "sort_bi": [1, 1929], "self_cpu_time_tot": [1, 1929], "avg": [1, 42, 1684], "mul": [1, 12, 14, 28, 36, 73, 74, 77, 80, 81, 435, 760, 761, 770, 1189, 1335, 1881, 1882, 1883, 1885, 1898, 1900, 1910, 1923, 1925, 1932, 1936, 1939, 1942, 1948], "32": [1, 2, 13, 20, 22, 40, 42, 759, 1138, 1209, 1221, 1301, 1358, 1383, 1384, 1385, 1389, 1390, 1392, 1393, 1413, 1432, 1438, 1449, 1487, 1488, 1489, 1490, 1491, 1508, 1538, 1539, 1545, 1593, 1899, 1900, 1916, 1920, 1923, 1933, 1939, 1942, 1944, 1945], "048m": 1, "200": [1, 29, 46, 1212, 1289, 1444, 1731, 1885, 1939], "27": [1, 630, 1279, 1704, 1726, 1866, 1923], "041m": 1, "powbackward0": 1, "9": [1, 7, 13, 39, 40, 42, 49, 73, 74, 79, 104, 329, 331, 333, 337, 417, 418, 486, 527, 573, 594, 596, 710, 758, 759, 867, 950, 956, 960, 964, 984, 1068, 1083, 1086, 1107, 1108, 1117, 1118, 1128, 1131, 1132, 1135, 1136, 1165, 1175, 1241, 1243, 1264, 1266, 1268, 1279, 1281, 1343, 1344, 1350, 1351, 1354, 1355, 1368, 1387, 1388, 1440, 1441, 1456, 1457, 1466, 1469, 1534, 1535, 1581, 1584, 1585, 1671, 1672, 1684, 1686, 1687, 1688, 1689, 1690, 1696, 1699, 1700, 1701, 1705, 1711, 1713, 1714, 1718, 1722, 1758, 1765, 1774, 1778, 1788, 1793, 1803, 1810, 1818, 1844, 1845, 1849, 1851, 1860, 1866, 1873, 1882, 1886, 1892, 1912, 1916, 1921, 1922, 1923, 1925, 1926, 1927, 1935, 1939, 1940, 1942, 1946], "727m": 1, "55": [1, 1398, 1923], "483m": 1, "accumulategrad": [1, 1905], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 33, 51, 56, 73, 693, 1227, 1780, 1885, 1891, 1924, 1934, 1939], "nvtx": [1, 4, 1880], "program": [1, 3, 4, 8, 11, 14, 15, 16, 19, 21, 23, 25, 26, 29, 36, 39, 42, 51, 60, 62, 65, 73, 630, 977, 978, 1034, 1036, 1142, 1773, 1882, 1884, 1886, 1896, 1905, 1908, 1912, 1915, 1917, 1918, 1921, 1922, 1944], "off": [1, 5, 7, 8, 15, 20, 24, 33, 42, 50, 65, 73, 933, 935, 944, 1046, 1142, 1169, 1170, 1209, 1227, 1275, 1357, 1358, 1359, 1361, 1437, 1438, 1439, 1543, 1581, 1775, 1907, 1908, 1909, 1912, 1915, 1919, 1929, 1930, 1931, 1935, 1936], "o": [1, 29, 40, 42, 43, 48, 60, 61, 62, 73, 1212, 1283, 1325, 1326, 1327, 1415, 1444, 1450, 1624, 1761, 1879, 1886, 1897, 1905, 1908, 1909, 1912, 1922, 1927, 1928, 1935], "trace_nam": 1, "regular": [1, 3, 4, 20, 42, 50, 60, 65, 68, 73, 1028, 1029, 1141, 1259, 1260, 1367, 1382, 1383, 1384, 1385, 1389, 1429, 1443, 1444, 1445, 1446, 1454, 1455, 1536, 1573, 1615, 1626, 1627, 1666, 1687, 1885, 1899, 1900, 1910, 1911, 1915, 1916, 1923, 1927, 1930, 1933, 1935, 1939, 1940, 1947, 1949], "command": [1, 4, 22, 24, 42, 50, 57, 60, 73, 1908, 1914, 1918, 1922, 1928, 1929, 1936], "unfortun": [1, 9, 13, 15, 39, 1624, 1905], "wai": [1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 20, 25, 28, 29, 33, 39, 40, 42, 44, 46, 48, 52, 56, 65, 67, 68, 72, 73, 167, 593, 693, 809, 832, 835, 838, 874, 875, 903, 906, 915, 917, 918, 919, 920, 921, 1106, 1108, 1142, 1165, 1212, 1241, 1242, 1257, 1272, 1360, 1388, 1407, 1408, 1409, 1414, 1426, 1427, 1428, 1444, 1472, 1489, 1491, 1535, 1587, 1624, 1634, 1664, 1700, 1704, 1711, 1882, 1884, 1885, 1889, 1891, 1892, 1895, 1897, 1898, 1899, 1905, 1907, 1910, 1911, 1912, 1913, 1916, 1918, 1919, 1922, 1923, 1924, 1926, 1927, 1930, 1935, 1936, 1939, 1943, 1945, 1949], "disk": [1, 39, 1283, 1761, 1905, 1916, 1927, 1944], "annot": [1, 17, 19, 20, 27, 52, 57, 73, 928, 1210, 1223, 1882, 1884, 1886, 1923, 1935], "wait": [1, 16, 21, 25, 36, 42, 50, 57, 59, 72, 837, 988, 989, 991, 1061, 1215, 1325, 1326, 1331, 1713, 1883, 1885, 1897, 1907, 1908, 1909, 1925, 1929, 1935], "either": [1, 8, 9, 14, 16, 17, 18, 19, 21, 33, 36, 39, 40, 42, 46, 47, 48, 50, 52, 57, 59, 60, 61, 65, 70, 72, 73, 171, 238, 329, 337, 527, 529, 630, 693, 745, 751, 752, 753, 758, 759, 769, 777, 792, 798, 804, 871, 903, 905, 912, 921, 922, 953, 966, 999, 1085, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1138, 1142, 1165, 1189, 1205, 1212, 1227, 1267, 1282, 1283, 1298, 1313, 1350, 1351, 1354, 1355, 1358, 1359, 1360, 1361, 1372, 1373, 1374, 1376, 1377, 1378, 1380, 1388, 1398, 1404, 1411, 1413, 1435, 1436, 1438, 1439, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1459, 1461, 1475, 1476, 1491, 1492, 1494, 1496, 1497, 1498, 1515, 1516, 1526, 1554, 1555, 1578, 1586, 1612, 1619, 1624, 1649, 1671, 1686, 1687, 1689, 1711, 1726, 1728, 1770, 1826, 1830, 1875, 1879, 1882, 1884, 1885, 1887, 1891, 1899, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1918, 1920, 1923, 1926, 1927, 1928, 1930, 1936, 1937, 1939, 1940, 1943, 1946, 1951], "nvidia": [1, 24, 25, 29, 33, 42, 997, 1010, 1038, 1044, 1048, 1062, 1063, 1865, 1880, 1908, 1912, 1914, 1920, 1922, 1930, 1939, 1947], "visual": [1, 16, 25, 29, 73, 1313, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1437, 1438, 1439, 1495, 1916, 1922, 1929, 1944], "nvvp": 1, "timelin": [1, 4, 1325, 1326, 1929], "load_nvprof": 1, "repl": [1, 19], "append": [1, 20, 28, 42, 72, 73, 74, 79, 246, 270, 620, 774, 776, 778, 1031, 1075, 1077, 1306, 1397, 1415, 1446, 1455, 1461, 1472, 1624, 1883, 1884, 1885, 1905, 1907, 1918, 1922, 1923, 1925, 1939, 1944], "size": [1, 2, 3, 7, 11, 13, 14, 15, 16, 18, 22, 25, 29, 36, 39, 40, 42, 44, 48, 50, 59, 65, 68, 73, 74, 75, 80, 81, 82, 155, 225, 238, 258, 270, 271, 329, 331, 337, 355, 460, 461, 462, 464, 502, 507, 512, 513, 514, 527, 529, 531, 534, 557, 558, 559, 579, 594, 596, 597, 598, 600, 601, 619, 620, 630, 631, 693, 703, 704, 706, 708, 709, 710, 712, 733, 741, 742, 748, 754, 755, 756, 758, 759, 769, 777, 779, 780, 781, 782, 792, 798, 799, 800, 809, 871, 878, 890, 891, 893, 905, 914, 915, 916, 917, 918, 919, 930, 934, 935, 937, 944, 946, 947, 948, 949, 950, 957, 958, 959, 960, 966, 984, 985, 987, 993, 999, 1000, 1002, 1042, 1066, 1067, 1073, 1076, 1083, 1085, 1086, 1087, 1088, 1091, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1114, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1138, 1139, 1140, 1147, 1148, 1153, 1154, 1169, 1170, 1174, 1175, 1186, 1189, 1209, 1212, 1233, 1242, 1251, 1256, 1264, 1268, 1272, 1275, 1277, 1278, 1279, 1281, 1282, 1284, 1292, 1298, 1299, 1301, 1302, 1306, 1309, 1311, 1312, 1313, 1314, 1317, 1318, 1319, 1320, 1321, 1334, 1336, 1339, 1342, 1344, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1387, 1388, 1390, 1391, 1392, 1393, 1396, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1459, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1483, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1516, 1521, 1522, 1523, 1526, 1527, 1534, 1535, 1538, 1539, 1543, 1554, 1561, 1567, 1568, 1569, 1578, 1579, 1581, 1584, 1585, 1587, 1593, 1612, 1613, 1614, 1615, 1624, 1647, 1657, 1658, 1659, 1660, 1661, 1663, 1665, 1668, 1670, 1672, 1675, 1676, 1689, 1698, 1717, 1718, 1719, 1720, 1722, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1751, 1756, 1765, 1768, 1787, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1821, 1823, 1824, 1825, 1826, 1829, 1830, 1831, 1844, 1845, 1846, 1851, 1853, 1861, 1862, 1863, 1864, 1867, 1868, 1870, 1871, 1872, 1873, 1877, 1878, 1880, 1881, 1882, 1883, 1885, 1893, 1895, 1898, 1899, 1904, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1920, 1921, 1923, 1925, 1928, 1929, 1930, 1932, 1939, 1941, 1942, 1944, 1945], "format": [1, 25, 29, 37, 40, 42, 44, 52, 61, 73, 172, 187, 189, 192, 195, 196, 197, 212, 223, 226, 256, 283, 313, 341, 347, 409, 513, 514, 538, 593, 596, 597, 598, 599, 600, 601, 693, 748, 773, 805, 806, 963, 1031, 1085, 1086, 1087, 1140, 1209, 1212, 1225, 1254, 1367, 1388, 1396, 1414, 1444, 1459, 1491, 1624, 1658, 1660, 1676, 1678, 1679, 1681, 1739, 1741, 1743, 1761, 1804, 1807, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1878, 1879, 1882, 1885, 1886, 1891, 1908, 1910, 1916, 1921, 1923, 1924, 1925, 1929, 1930, 1935, 1936, 1939, 1942, 1944, 1946], "arg0": [1, 42], "arg1": [1, 42, 57, 58, 60], "repres": [1, 8, 14, 15, 20, 31, 39, 40, 48, 49, 50, 52, 53, 59, 61, 65, 73, 96, 773, 805, 806, 809, 902, 968, 972, 980, 984, 986, 1018, 1021, 1085, 1106, 1108, 1113, 1115, 1116, 1117, 1118, 1142, 1165, 1172, 1201, 1202, 1205, 1208, 1211, 1227, 1228, 1259, 1301, 1352, 1367, 1444, 1450, 1491, 1493, 1495, 1624, 1630, 1633, 1638, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1657, 1667, 1679, 1681, 1705, 1711, 1717, 1719, 1730, 1812, 1813, 1814, 1816, 1817, 1826, 1830, 1862, 1863, 1870, 1871, 1882, 1884, 1885, 1892, 1895, 1900, 1905, 1910, 1911, 1913, 1915, 1916, 1919, 1923, 1924, 1928, 1930, 1931, 1933, 1935, 1939, 1942, 1951], "order": [1, 3, 5, 11, 12, 14, 16, 22, 25, 26, 29, 42, 43, 44, 46, 48, 60, 65, 66, 71, 72, 73, 167, 208, 225, 329, 331, 333, 337, 347, 418, 502, 693, 805, 806, 815, 867, 889, 906, 907, 920, 926, 927, 945, 956, 989, 1031, 1042, 1073, 1076, 1077, 1085, 1103, 1105, 1106, 1112, 1124, 1125, 1126, 1127, 1143, 1153, 1165, 1212, 1231, 1242, 1248, 1250, 1257, 1264, 1267, 1268, 1275, 1276, 1279, 1281, 1284, 1313, 1319, 1332, 1334, 1352, 1361, 1367, 1381, 1444, 1445, 1454, 1471, 1472, 1508, 1516, 1543, 1567, 1568, 1569, 1593, 1615, 1624, 1633, 1643, 1657, 1658, 1659, 1660, 1671, 1689, 1711, 1717, 1720, 1730, 1765, 1768, 1793, 1803, 1830, 1848, 1855, 1857, 1862, 1865, 1866, 1872, 1879, 1880, 1882, 1883, 1885, 1886, 1897, 1898, 1899, 1900, 1903, 1906, 1908, 1909, 1910, 1911, 1913, 1916, 1919, 1921, 1923, 1926, 1927, 1928, 1930, 1932, 1935, 1936, 1937, 1939, 1940, 1942, 1946, 1949], "backend": [1, 13, 16, 17, 18, 20, 21, 22, 24, 26, 33, 58, 62, 65, 754, 755, 756, 805, 806, 846, 868, 869, 872, 874, 875, 914, 920, 966, 972, 1011, 1042, 1085, 1142, 1225, 1255, 1257, 1275, 1325, 1326, 1327, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1543, 1581, 1593, 1624, 1681, 1682, 1773, 1880, 1881, 1883, 1884, 1889, 1893, 1896, 1907, 1908, 1910, 1919, 1920, 1923, 1931, 1933, 1939], "side": [1, 11, 20, 33, 42, 59, 61, 70, 73, 74, 77, 781, 782, 785, 786, 787, 1020, 1079, 1101, 1102, 1104, 1107, 1108, 1113, 1115, 1116, 1117, 1118, 1121, 1209, 1210, 1256, 1261, 1272, 1274, 1357, 1358, 1359, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1465, 1466, 1468, 1469, 1470, 1495, 1499, 1500, 1501, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1567, 1568, 1569, 1581, 1705, 1734, 1735, 1765, 1826, 1853, 1879, 1882, 1883, 1885, 1904, 1905, 1908, 1910, 1913, 1935], "creation": [1, 2, 14, 20, 39, 42, 44, 73, 758, 759, 769, 777, 837, 988, 1142, 1624, 1625, 1638, 1882, 1886, 1895, 1897, 1905, 1908, 1935, 1937, 1939, 1945], "warmup": [1, 3, 11, 16, 25, 1031, 1908, 1929], "correl": [1, 48, 60, 980, 1372, 1373, 1374, 1375, 1376, 1377, 1383, 1384, 1385, 1389], "view": [1, 7, 8, 14, 15, 24, 28, 29, 31, 36, 39, 40, 44, 46, 50, 65, 73, 74, 82, 239, 270, 450, 511, 512, 513, 620, 631, 705, 710, 773, 891, 899, 900, 901, 909, 948, 960, 977, 978, 1075, 1076, 1083, 1124, 1125, 1126, 1127, 1142, 1175, 1187, 1212, 1267, 1278, 1326, 1388, 1396, 1414, 1444, 1459, 1495, 1496, 1497, 1498, 1535, 1580, 1620, 1621, 1624, 1628, 1720, 1752, 1756, 1757, 1761, 1767, 1768, 1799, 1818, 1829, 1840, 1845, 1849, 1861, 1870, 1871, 1873, 1880, 1881, 1882, 1883, 1897, 1899, 1900, 1906, 1910, 1925, 1932, 1937, 1939, 1941, 1942, 1945], "difficult": [1, 7, 9, 15, 16, 23, 25, 29, 70, 1153, 1872], "eas": [1, 14, 28, 73, 1907, 1910, 1914], "sequenc": [1, 11, 14, 16, 26, 28, 29, 39, 44, 46, 47, 48, 65, 167, 579, 748, 773, 827, 893, 906, 920, 950, 952, 953, 956, 964, 991, 998, 999, 1002, 1070, 1084, 1086, 1153, 1173, 1174, 1177, 1227, 1267, 1313, 1352, 1362, 1367, 1372, 1381, 1388, 1396, 1414, 1450, 1459, 1472, 1487, 1488, 1489, 1490, 1491, 1535, 1593, 1633, 1636, 1643, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1672, 1675, 1678, 1682, 1697, 1736, 1738, 1742, 1765, 1823, 1826, 1872, 1874, 1877, 1882, 1883, 1884, 1900, 1908, 1912, 1923, 1927, 1928, 1935, 1945, 1946], "gener": [1, 2, 3, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 33, 39, 40, 42, 48, 52, 53, 60, 65, 66, 67, 74, 76, 79, 82, 98, 170, 171, 190, 274, 302, 393, 436, 469, 496, 621, 693, 922, 936, 966, 968, 1017, 1020, 1028, 1029, 1032, 1033, 1052, 1053, 1055, 1056, 1057, 1085, 1107, 1108, 1142, 1153, 1164, 1169, 1188, 1216, 1221, 1232, 1243, 1248, 1257, 1274, 1275, 1279, 1284, 1304, 1312, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1334, 1380, 1391, 1405, 1487, 1495, 1496, 1508, 1615, 1632, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1665, 1668, 1672, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1717, 1719, 1722, 1736, 1738, 1740, 1741, 1742, 1744, 1766, 1779, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1831, 1846, 1850, 1866, 1872, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1893, 1898, 1903, 1905, 1908, 1910, 1912, 1913, 1915, 1916, 1918, 1922, 1923, 1926, 1927, 1929, 1934, 1935, 1936, 1939, 1942, 1944, 1946, 1948, 1950], "seq": [1, 618, 773, 953, 965, 1313, 1396, 1414, 1450, 1459, 1487, 1489, 1491, 1660, 1860], "n": [1, 3, 20, 42, 44, 47, 48, 50, 52, 57, 60, 73, 246, 276, 422, 480, 481, 699, 702, 703, 704, 748, 771, 773, 794, 890, 930, 934, 935, 937, 944, 946, 950, 956, 957, 958, 984, 1066, 1067, 1077, 1098, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1145, 1148, 1153, 1165, 1169, 1170, 1174, 1209, 1212, 1223, 1227, 1228, 1231, 1232, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1284, 1292, 1301, 1306, 1308, 1313, 1316, 1336, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1404, 1405, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1426, 1427, 1428, 1432, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1447, 1448, 1449, 1450, 1451, 1453, 1459, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1475, 1477, 1478, 1479, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1508, 1514, 1526, 1527, 1535, 1539, 1543, 1578, 1581, 1583, 1593, 1624, 1631, 1642, 1651, 1670, 1717, 1718, 1719, 1724, 1729, 1730, 1736, 1742, 1744, 1757, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1808, 1824, 1825, 1826, 1830, 1831, 1845, 1846, 1851, 1855, 1857, 1866, 1867, 1868, 1869, 1872, 1881, 1883, 1885, 1889, 1898, 1899, 1903, 1905, 1908, 1910, 1912, 1913, 1918, 1927, 1929, 1930, 1931, 1939, 1940, 1944, 1945, 1946], "counter": [1, 42, 1024, 1042, 1187, 1381, 1895, 1897, 1905], "increment": [1, 11, 42, 59, 1138, 1174, 1216, 1381, 1882, 1884, 1905, 1935], "stash": [1, 5, 1908, 1910, 1928], "associ": [1, 8, 9, 15, 16, 18, 20, 29, 42, 44, 53, 908, 966, 994, 1045, 1047, 1173, 1174, 1212, 1261, 1272, 1274, 1283, 1367, 1444, 1454, 1527, 1624, 1632, 1678, 1787, 1789, 1882, 1885, 1891, 1898, 1899, 1905, 1913, 1916, 1919, 1921, 1927, 1928, 1929, 1935, 1936, 1942, 1945], "tell": [1, 7, 73, 510, 1213, 1219, 1283, 1682, 1882, 1892, 1905, 1910, 1911, 1927], "top": [1, 3, 7, 8, 13, 24, 25, 39, 44, 47, 48, 52, 65, 69, 73, 760, 930, 1360, 1361, 1380, 1404, 1411, 1435, 1451, 1493, 1496, 1543, 1638, 1642, 1644, 1794, 1848, 1886, 1892, 1897, 1910, 1926], "m": [1, 4, 8, 19, 40, 42, 47, 48, 56, 60, 73, 699, 702, 703, 704, 733, 741, 742, 751, 752, 753, 754, 755, 756, 758, 759, 769, 771, 777, 827, 873, 874, 875, 934, 946, 950, 954, 959, 1098, 1151, 1174, 1210, 1212, 1217, 1218, 1222, 1223, 1229, 1232, 1243, 1251, 1257, 1258, 1259, 1260, 1264, 1265, 1266, 1268, 1269, 1270, 1275, 1276, 1277, 1278, 1284, 1301, 1302, 1306, 1316, 1334, 1336, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1392, 1393, 1394, 1395, 1399, 1400, 1401, 1402, 1403, 1406, 1407, 1408, 1409, 1412, 1413, 1430, 1431, 1433, 1434, 1437, 1438, 1439, 1443, 1444, 1451, 1452, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1581, 1583, 1624, 1631, 1636, 1646, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1664, 1665, 1668, 1717, 1718, 1719, 1729, 1736, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1808, 1826, 1830, 1831, 1846, 1853, 1882, 1883, 1884, 1885, 1908, 1910, 1912, 1913, 1916, 1918, 1921, 1930, 1939, 1949], "By": [1, 2, 3, 5, 13, 16, 22, 23, 27, 29, 33, 39, 42, 51, 56, 73, 460, 461, 462, 463, 464, 893, 984, 991, 1034, 1036, 1068, 1080, 1103, 1105, 1106, 1107, 1108, 1116, 1117, 1118, 1143, 1144, 1146, 1147, 1153, 1165, 1173, 1174, 1216, 1264, 1275, 1283, 1312, 1317, 1338, 1360, 1361, 1362, 1363, 1364, 1378, 1380, 1398, 1404, 1407, 1408, 1409, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1483, 1492, 1515, 1516, 1526, 1555, 1578, 1586, 1668, 1719, 1730, 1751, 1805, 1851, 1872, 1879, 1884, 1889, 1892, 1905, 1908, 1910, 1912, 1916, 1918, 1919, 1921, 1923, 1926, 1934, 1935, 1939, 1946], "compar": [1, 3, 5, 11, 17, 24, 33, 39, 65, 73, 99, 707, 878, 889, 920, 1042, 1089, 1090, 1113, 1114, 1115, 1119, 1120, 1121, 1122, 1131, 1132, 1156, 1168, 1187, 1201, 1236, 1300, 1310, 1315, 1345, 1450, 1624, 1669, 1775, 1885, 1895, 1908, 1910, 1913, 1919, 1922, 1930, 1931, 1935, 1939, 1944, 1946, 1948, 1949], "down": [1, 7, 22, 29, 33, 39, 48, 50, 57, 58, 60, 65, 73, 792, 1042, 1080, 1127, 1133, 1221, 1257, 1554, 1730, 1758, 1910, 1915, 1918, 1923, 1935, 1937, 1939, 1944], "irrelev": [1, 3, 1886], "simpli": [1, 3, 14, 16, 23, 33, 39, 48, 52, 60, 72, 73, 876, 1142, 1199, 1210, 1356, 1382, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1882, 1884, 1905, 1911, 1913, 1916, 1917, 1929, 1939], "hand": [1, 4, 15, 20, 42, 65, 70, 73, 1079, 1085, 1210, 1256, 1261, 1272, 1274, 1356, 1454, 1472, 1853, 1865, 1882, 1884, 1885, 1905, 1913, 1916, 1918, 1921, 1927, 1939], "underwai": [1, 1026, 1908], "up": [1, 6, 7, 8, 9, 11, 13, 15, 18, 19, 20, 21, 23, 25, 29, 33, 39, 40, 42, 46, 48, 50, 52, 56, 58, 59, 61, 62, 68, 73, 792, 798, 903, 966, 1028, 1029, 1031, 1068, 1085, 1114, 1115, 1120, 1122, 1127, 1142, 1203, 1216, 1221, 1224, 1225, 1270, 1352, 1367, 1391, 1450, 1489, 1491, 1495, 1496, 1508, 1534, 1543, 1554, 1612, 1624, 1700, 1736, 1758, 1862, 1863, 1879, 1882, 1884, 1889, 1892, 1895, 1897, 1898, 1899, 1905, 1906, 1907, 1908, 1912, 1913, 1914, 1916, 1919, 1923, 1927, 1929, 1930, 1935, 1936, 1946], "nonzero": [1, 14, 15, 65, 1209, 1293, 1295, 1296, 1301, 1875, 1881, 1883, 1925], "themselv": [1, 9, 48, 59, 65, 806, 854, 1848, 1908, 1927, 1950], "origin": [1, 5, 12, 13, 15, 16, 17, 20, 22, 28, 29, 31, 36, 39, 40, 42, 44, 52, 65, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 223, 226, 238, 501, 558, 616, 620, 630, 693, 773, 810, 851, 852, 867, 870, 871, 951, 956, 989, 1105, 1106, 1108, 1112, 1116, 1117, 1118, 1124, 1141, 1151, 1186, 1209, 1219, 1223, 1224, 1227, 1228, 1305, 1319, 1352, 1356, 1368, 1380, 1381, 1396, 1473, 1483, 1526, 1596, 1631, 1632, 1633, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1660, 1663, 1665, 1666, 1668, 1681, 1711, 1720, 1756, 1767, 1803, 1818, 1851, 1862, 1863, 1882, 1885, 1891, 1897, 1899, 1905, 1908, 1910, 1912, 1915, 1918, 1919, 1921, 1923, 1927, 1928, 1930, 1931, 1939, 1941, 1948, 1949, 1950], "did": [1, 7, 8, 19, 20, 42, 59, 1341, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1884, 1885, 1913, 1921, 1927], "relationship": [1, 9, 15, 20, 56, 73, 963, 1165, 1493, 1905, 1908, 1921, 1927], "conceptu": [1, 3, 1905, 1911, 1937], "tag": [1, 3, 7, 42, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 972, 1283, 1879, 1880, 1915, 1921, 1927, 1944], "eventu": [1, 7, 14, 15, 59, 65, 1879, 1928], "itt": [1, 1929], "intel": [1, 4, 24, 1880, 1922], "r": [1, 20, 29, 48, 71, 167, 902, 904, 906, 920, 921, 954, 965, 980, 1085, 1143, 1145, 1148, 1153, 1154, 1157, 1165, 1223, 1241, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1270, 1272, 1274, 1275, 1284, 1387, 1388, 1397, 1456, 1457, 1475, 1534, 1535, 1584, 1585, 1631, 1698, 1729, 1872, 1882, 1883, 1884, 1905, 1907, 1910, 1913, 1922, 1939, 1942, 1944], "instrument": [1, 3, 40, 1326, 1880, 1915, 1949], "technologi": [1, 1880], "applic": [1, 2, 9, 16, 18, 48, 59, 812, 823, 824, 825, 826, 912, 966, 1010, 1147, 1322, 1380, 1381, 1489, 1491, 1526, 1624, 1865, 1880, 1892, 1900, 1905, 1907, 1908, 1909, 1910, 1914, 1915, 1916, 1920, 1923, 1926, 1930, 1935, 1936, 1937, 1939, 1945], "across": [1, 8, 11, 14, 16, 20, 29, 33, 39, 40, 42, 44, 46, 50, 60, 65, 70, 73, 630, 748, 832, 887, 931, 1002, 1041, 1042, 1085, 1099, 1153, 1222, 1227, 1313, 1361, 1381, 1391, 1432, 1450, 1452, 1483, 1495, 1513, 1516, 1545, 1561, 1608, 1624, 1643, 1647, 1671, 1761, 1872, 1880, 1882, 1895, 1898, 1900, 1905, 1909, 1912, 1915, 1916, 1918, 1919, 1920, 1926, 1928, 1931, 1935, 1936, 1941, 1944, 1949], "tool": [1, 4, 8, 9, 16, 19, 21, 22, 25, 29, 36, 42, 60, 73, 874, 929, 1326, 1805, 1879, 1880, 1882, 1884, 1907, 1908, 1922, 1923, 1927, 1929, 1949], "With": [1, 16, 17, 20, 24, 29, 36, 39, 42, 48, 65, 72, 752, 753, 754, 755, 756, 798, 1042, 1106, 1107, 1108, 1116, 1117, 1118, 1228, 1362, 1363, 1364, 1373, 1374, 1376, 1377, 1390, 1407, 1408, 1409, 1483, 1494, 1496, 1519, 1522, 1554, 1579, 1612, 1697, 1740, 1886, 1905, 1908, 1910, 1935, 1939, 1944], "abl": [1, 2, 7, 8, 12, 14, 15, 16, 17, 23, 29, 36, 42, 44, 59, 70, 1142, 1210, 1222, 1487, 1624, 1882, 1889, 1898, 1905, 1910, 1911, 1921, 1923, 1927, 1930, 1935, 1939, 1946], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 16, 31, 34, 351, 754, 755, 756, 910, 920, 1153, 1736, 1872, 1880, 1905, 1908, 1909, 1910, 1935, 1936], "traceback": [1, 29, 36, 52, 60, 72, 73, 1187, 1197, 1805, 1884, 1885, 1886, 1897, 1900, 1910, 1920, 1939, 1946], "fail": [1, 7, 12, 13, 14, 16, 17, 20, 21, 29, 42, 48, 50, 51, 52, 57, 58, 59, 60, 62, 72, 73, 74, 79, 82, 87, 98, 921, 922, 989, 1042, 1213, 1219, 1222, 1241, 1270, 1275, 1283, 1284, 1301, 1680, 1885, 1887, 1897, 1905, 1908, 1910, 1918, 1919, 1922, 1923, 1927, 1935], "debug": [1, 2, 4, 5, 8, 14, 16, 17, 18, 23, 39, 56, 693, 840, 841, 845, 856, 921, 922, 966, 968, 972, 986, 1019, 1059, 1160, 1241, 1618, 1619, 1620, 1621, 1772, 1780, 1880, 1884, 1891, 1905, 1907, 1908, 1909, 1914, 1915, 1916, 1920, 1922, 1923, 1924, 1927, 1948], "test": [1, 3, 15, 16, 18, 29, 33, 36, 42, 47, 57, 59, 60, 73, 74, 81, 82, 706, 712, 966, 1102, 1104, 1105, 1110, 1111, 1116, 1117, 1118, 1120, 1122, 1198, 1199, 1203, 1204, 1206, 1207, 1681, 1795, 1880, 1882, 1886, 1895, 1897, 1905, 1913, 1920, 1923, 1926, 1944, 1949, 1950], "slow": [1, 15, 921, 1221, 1225, 1241, 1242, 1628, 1629, 1664, 1862, 1913, 1918, 1944], "import": [1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 16, 19, 20, 21, 25, 27, 28, 29, 33, 35, 36, 39, 40, 42, 43, 44, 46, 47, 48, 49, 51, 53, 56, 57, 61, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 238, 693, 747, 754, 755, 756, 785, 786, 787, 805, 873, 874, 875, 924, 926, 945, 952, 984, 1136, 1138, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1151, 1187, 1209, 1210, 1213, 1215, 1217, 1218, 1219, 1221, 1222, 1223, 1227, 1228, 1229, 1263, 1264, 1267, 1268, 1281, 1313, 1410, 1444, 1624, 1634, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1659, 1660, 1661, 1662, 1663, 1664, 1671, 1678, 1699, 1700, 1723, 1882, 1884, 1885, 1886, 1895, 1897, 1900, 1904, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1916, 1918, 1919, 1920, 1921, 1923, 1930, 1933, 1935, 1936, 1937, 1939, 1942, 1944, 1945, 1946, 1949, 1950], "myfunc": [1, 1911], "inp": [1, 25, 39, 42, 73, 907, 908, 909, 1495, 1624, 1881, 1950], "clone": [1, 34, 39, 65, 74, 270, 463, 910, 913, 924, 926, 927, 948, 1216, 1387, 1611, 1844, 1853, 1881, 1883, 1897, 1900, 1921, 1925, 1929, 1939, 1941, 1942, 1946], "run_fn": [1, 5, 870, 876], "10": [1, 11, 12, 13, 16, 19, 20, 21, 25, 29, 38, 39, 40, 42, 43, 48, 49, 59, 61, 74, 79, 81, 82, 329, 337, 351, 486, 527, 573, 594, 596, 597, 598, 698, 699, 710, 747, 758, 759, 773, 774, 775, 776, 778, 934, 946, 956, 958, 959, 960, 964, 984, 1064, 1065, 1066, 1067, 1068, 1083, 1085, 1102, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1122, 1128, 1136, 1155, 1165, 1175, 1201, 1217, 1222, 1223, 1229, 1234, 1237, 1264, 1266, 1267, 1282, 1284, 1286, 1291, 1293, 1294, 1295, 1296, 1298, 1306, 1317, 1334, 1350, 1351, 1352, 1354, 1355, 1361, 1364, 1367, 1368, 1371, 1374, 1377, 1387, 1388, 1396, 1397, 1398, 1399, 1409, 1414, 1415, 1416, 1441, 1445, 1446, 1451, 1454, 1455, 1459, 1461, 1483, 1487, 1488, 1489, 1490, 1491, 1495, 1501, 1520, 1523, 1527, 1534, 1535, 1545, 1615, 1624, 1647, 1655, 1669, 1672, 1681, 1685, 1705, 1711, 1713, 1731, 1732, 1740, 1765, 1778, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1794, 1803, 1818, 1830, 1831, 1841, 1845, 1846, 1849, 1851, 1865, 1873, 1879, 1882, 1883, 1884, 1885, 1886, 1892, 1905, 1908, 1909, 1916, 1919, 1920, 1921, 1922, 1923, 1925, 1939, 1940, 1942, 1944, 1945, 1946, 1951], "last": [1, 5, 6, 12, 22, 29, 31, 39, 40, 43, 46, 47, 48, 59, 72, 73, 331, 630, 705, 773, 890, 935, 944, 950, 960, 1028, 1068, 1073, 1077, 1102, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1122, 1124, 1169, 1170, 1174, 1187, 1189, 1197, 1209, 1233, 1267, 1270, 1275, 1312, 1317, 1352, 1365, 1380, 1388, 1390, 1396, 1414, 1416, 1431, 1451, 1454, 1458, 1459, 1472, 1488, 1489, 1495, 1514, 1535, 1544, 1557, 1580, 1581, 1624, 1625, 1670, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1756, 1765, 1803, 1805, 1812, 1813, 1814, 1816, 1817, 1818, 1826, 1830, 1846, 1848, 1851, 1870, 1871, 1884, 1885, 1895, 1898, 1900, 1905, 1908, 1910, 1913, 1920, 1923, 1927, 1928, 1939, 1945, 1946], "stdin": [1, 1187, 1805, 1900, 1910, 1920, 1939], "instal": [1, 3, 12, 14, 20, 23, 33, 34, 42, 73, 1879, 1916, 1917, 1923, 1927, 1935, 1944], "_tensor": [1, 171], "py": [1, 4, 12, 13, 14, 15, 16, 19, 20, 22, 24, 28, 29, 33, 36, 42, 46, 48, 51, 58, 60, 65, 73, 100, 873, 1624, 1879, 1882, 1885, 1891, 1909, 1913, 1915, 1918, 1923, 1927, 1930, 1936], "93": [1, 630], "retain_graph": [1, 167, 906, 920, 926, 927, 1153, 1872, 1883, 1904, 1905, 1935], "90": [1, 1069, 1715, 1757], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 22, 33, 42, 57, 59, 1879, 1908, 1929], "53": [1, 496], "44": [1, 13, 337, 460, 1088, 1359, 1439, 1664], "set_detect_anomali": 1, "behaviour": [1, 706, 707, 712, 985, 1543, 1581, 1711, 1780, 1879, 1919], "interpos": [1, 1910], "grad_fn": [1, 167, 351, 893, 906, 914, 915, 916, 917, 918, 919, 924, 926, 927, 1141, 1632, 1807, 1905, 1916, 1921], "node": [1, 14, 15, 16, 24, 28, 29, 42, 46, 50, 52, 58, 59, 65, 73, 96, 102, 103, 832, 833, 834, 837, 838, 839, 1031, 1151, 1226, 1367, 1381, 1624, 1681, 1893, 1908, 1923, 1924, 1927, 1928, 1935, 1936, 1937, 1947, 1949], "grad_mod": [1, 1883], "least": [1, 5, 6, 8, 16, 29, 40, 44, 48, 58, 59, 65, 276, 418, 710, 937, 1073, 1075, 1076, 1085, 1126, 1127, 1165, 1173, 1174, 1209, 1234, 1257, 1284, 1306, 1338, 1352, 1624, 1658, 1879, 1885, 1899, 1903, 1905, 1906, 1908, 1912, 1928, 1931, 1937, 1939, 1940, 1941, 1946], "intermediari": [1, 33, 48, 912, 1905, 1913], "access": [1, 9, 11, 14, 15, 16, 19, 23, 36, 39, 42, 44, 65, 72, 570, 747, 912, 995, 1212, 1215, 1227, 1274, 1352, 1444, 1615, 1626, 1627, 1632, 1636, 1658, 1668, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1880, 1882, 1883, 1885, 1886, 1889, 1893, 1896, 1897, 1899, 1900, 1905, 1908, 1912, 1913, 1915, 1916, 1935, 1939, 1942, 1943, 1945, 1951], "isinst": [1, 28, 29, 39, 48, 73, 924, 926, 927, 1199, 1210, 1883, 1885, 1905, 1910, 1916, 1927, 1939], "dir": [1, 1028, 1681, 1879, 1885, 1927], "__call__": [1, 1212, 1444], "__class__": [1, 74, 76], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1886], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1886], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1885], "__ne__": 1, "__new__": [1, 1884, 1886], "__reduce__": [1, 1927], "__reduce_ex__": 1, "__repr__": [1, 3, 1910], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 73, 1883, 1885], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1905], "metadata": [1, 3, 15, 28, 44, 52, 53, 74, 81, 82, 1283, 1761, 1900, 1905, 1910, 1911, 1921, 1927, 1929, 1935, 1936, 1939, 1944], "next_funct": 1, "register_prehook": [1, 1905], "allclos": [1, 70, 71, 73, 921, 922, 1028, 1107, 1108, 1114, 1115, 1142, 1143, 1145, 1146, 1147, 1148, 1152, 1153, 1259, 1261, 1272, 1274, 1277, 1278, 1303, 1636, 1663, 1729, 1872, 1883, 1911, 1925, 1939], "pack": [1, 46, 751, 752, 753, 754, 755, 756, 758, 759, 773, 794, 1227, 1228, 1303, 1381, 1396, 1414, 1459, 1657, 1658, 1659, 1660, 1883, 1893, 1900, 1905, 1912, 1922, 1930], "unpack": [1, 74, 79, 80, 773, 909, 1227, 1259, 1303, 1381, 1660, 1662, 1669, 1682, 1885, 1886, 1905, 1910, 1912], "hook": [1, 15, 16, 17, 20, 26, 43, 46, 65, 502, 761, 770, 912, 926, 927, 1031, 1212, 1381, 1444, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1665, 1668, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1880, 1901, 1909, 1910, 1915, 1927, 1930], "common": [1, 3, 8, 14, 20, 23, 25, 27, 28, 29, 39, 50, 59, 70, 74, 100, 698, 806, 878, 939, 942, 947, 979, 1080, 1085, 1130, 1131, 1132, 1133, 1155, 1234, 1283, 1333, 1362, 1363, 1364, 1367, 1483, 1525, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1749, 1761, 1827, 1880, 1885, 1890, 1899, 1905, 1908, 1910, 1911, 1912, 1916, 1918, 1921, 1923, 1927, 1939, 1940, 1943, 1946], "trade": [1, 5, 8, 65, 1275, 1361, 1907, 1912, 1931], "leav": [1, 8, 20, 50, 60, 167, 906, 1217, 1229, 1634, 1637, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1821, 1882, 1884, 1885, 1905, 1927, 1931], "especi": [1, 9, 11, 15, 16, 18, 19, 20, 31, 39, 42, 73, 270, 948, 966, 973, 1611, 1884, 1905, 1910, 1911, 1919, 1921, 1930, 1935, 1939], "notic": [1, 23, 25, 42, 702, 1105, 1119, 1306, 1316, 1360, 1496, 1560, 1702, 1703, 1708, 1709, 1715, 1880, 1882, 1905, 1939], "fit": [1, 9, 29, 51, 69, 70, 513, 930, 1209, 1689, 1751, 1928, 1946], "evalu": [1, 4, 8, 9, 14, 15, 17, 26, 46, 47, 48, 68, 73, 706, 712, 811, 876, 921, 1042, 1148, 1149, 1212, 1352, 1356, 1362, 1363, 1364, 1382, 1399, 1407, 1408, 1409, 1416, 1444, 1458, 1462, 1483, 1586, 1608, 1634, 1689, 1705, 1736, 1885, 1886, 1910, 1916, 1939, 1947], "saved_tensors_hook": [1, 912, 1905], "pack_hook": [1, 1905], "unpack_hook": [1, 1905], "pair": [1, 16, 42, 44, 47, 48, 59, 61, 630, 748, 878, 954, 984, 1119, 1225, 1275, 1313, 1436, 1445, 1450, 1454, 1583, 1698, 1745, 1884, 1885, 1891, 1898, 1905, 1908, 1928, 1935, 1936, 1937, 1944, 1946, 1949], "retriev": [1, 20, 39, 40, 42, 46, 50, 59, 73, 550, 902, 903, 1387, 1391, 1495, 1534, 1624, 1658, 1681, 1805, 1900, 1905, 1915, 1923, 1927, 1928, 1935, 1936, 1937], "everytim": 1, "store": [1, 3, 5, 15, 19, 20, 33, 36, 40, 44, 50, 60, 65, 73, 342, 348, 414, 699, 835, 838, 903, 946, 998, 1000, 1002, 1157, 1212, 1219, 1222, 1242, 1253, 1254, 1255, 1284, 1289, 1301, 1363, 1387, 1444, 1472, 1624, 1631, 1633, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1657, 1810, 1879, 1880, 1882, 1899, 1900, 1901, 1909, 1910, 1911, 1912, 1915, 1927, 1930, 1935, 1936, 1937, 1939, 1941, 1944, 1945, 1949], "content": [1, 3, 7, 23, 29, 44, 52, 73, 912, 1219, 1222, 1242, 1253, 1255, 1260, 1273, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1821, 1850, 1879, 1885, 1894, 1897, 1905, 1918, 1935, 1943, 1944, 1945], "equal": [1, 28, 40, 42, 48, 59, 60, 61, 73, 276, 513, 558, 630, 693, 707, 708, 709, 752, 753, 754, 755, 756, 773, 781, 782, 833, 834, 835, 838, 874, 889, 935, 942, 944, 955, 956, 974, 984, 1000, 1002, 1055, 1074, 1090, 1129, 1143, 1144, 1156, 1169, 1170, 1172, 1173, 1174, 1197, 1201, 1236, 1257, 1270, 1274, 1277, 1278, 1301, 1302, 1313, 1329, 1345, 1349, 1350, 1351, 1353, 1354, 1355, 1360, 1361, 1367, 1373, 1374, 1376, 1377, 1381, 1388, 1391, 1392, 1393, 1396, 1398, 1414, 1449, 1450, 1458, 1459, 1495, 1511, 1512, 1516, 1519, 1522, 1534, 1535, 1538, 1539, 1545, 1624, 1658, 1661, 1717, 1730, 1787, 1788, 1793, 1818, 1826, 1845, 1861, 1875, 1883, 1886, 1892, 1898, 1899, 1900, 1905, 1906, 1913, 1919, 1925, 1926, 1928, 1940, 1944, 1946], "term": [1, 8, 9, 14, 48, 59, 73, 571, 747, 776, 805, 956, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1116, 1117, 1118, 1121, 1133, 1243, 1352, 1360, 1398, 1405, 1414, 1415, 1449, 1458, 1475, 1540, 1552, 1586, 1597, 1624, 1631, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1749, 1794, 1880, 1885, 1904, 1905, 1910, 1911, 1912, 1913, 1918, 1923, 1927, 1930, 1936, 1939], "mulbackward0": [1, 915, 918, 919], "inplac": [1, 28, 68, 70, 73, 74, 81, 82, 768, 771, 789, 791, 793, 804, 810, 827, 851, 852, 853, 870, 871, 876, 910, 1142, 1212, 1356, 1366, 1382, 1383, 1384, 1385, 1386, 1389, 1401, 1402, 1403, 1430, 1443, 1444, 1462, 1463, 1464, 1471, 1473, 1486, 1509, 1517, 1528, 1529, 1530, 1531, 1532, 1536, 1547, 1548, 1549, 1558, 1573, 1588, 1589, 1591, 1594, 1596, 1606, 1618, 1865, 1881, 1883, 1892, 1905, 1910, 1923, 1949], "lead": [1, 5, 7, 11, 17, 38, 42, 49, 65, 71, 73, 910, 914, 916, 920, 922, 968, 1136, 1153, 1242, 1414, 1459, 1475, 1821, 1872, 1885, 1899, 1900, 1905, 1907, 1909, 1910, 1911, 1918, 1919, 1922, 1926, 1927, 1930, 1939, 1944, 1945], "undefin": [1, 42, 49, 52, 65, 335, 486, 630, 891, 913, 921, 922, 942, 950, 1088, 1137, 1138, 1360, 1680, 1723, 1905, 1908, 1910, 1911], "recurs": [1, 13, 17, 20, 48, 65, 73, 968, 971, 1077, 1212, 1223, 1225, 1444, 1703, 1884, 1910, 1916, 1927, 1935], "inner": [1, 3, 65, 66, 71, 828, 830, 914, 1068, 1143, 1147, 1152, 1851, 1883, 1925, 1935, 1949], "save_on_cpu": 1, "pin_memori": [1, 39, 74, 79, 82, 460, 461, 462, 463, 464, 1086, 1088, 1738, 1742, 1744, 1844, 1881, 1882, 1883, 1900, 1908, 1925, 1941], "within": [1, 5, 9, 14, 16, 18, 19, 28, 29, 39, 40, 42, 46, 47, 48, 59, 60, 61, 65, 72, 73, 105, 891, 921, 922, 966, 992, 1068, 1212, 1216, 1304, 1357, 1358, 1359, 1367, 1383, 1384, 1385, 1389, 1391, 1437, 1438, 1439, 1444, 1450, 1483, 1495, 1543, 1567, 1568, 1569, 1624, 1634, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1734, 1735, 1765, 1787, 1864, 1882, 1884, 1885, 1895, 1900, 1903, 1907, 1908, 1910, 1914, 1915, 1916, 1919, 1923, 1926, 1927, 1930, 1933, 1934, 1935, 1936, 1944], "move": [1, 5, 7, 8, 9, 17, 20, 29, 33, 42, 44, 65, 73, 537, 602, 834, 1105, 1212, 1219, 1278, 1283, 1319, 1362, 1363, 1364, 1417, 1418, 1419, 1444, 1483, 1581, 1626, 1627, 1697, 1884, 1893, 1894, 1897, 1899, 1908, 1911, 1912, 1916, 1917, 1918, 1921, 1926, 1927, 1928, 1935, 1941, 1946], "copi": [1, 7, 15, 18, 19, 28, 31, 39, 40, 42, 44, 50, 57, 65, 69, 70, 73, 207, 213, 223, 226, 331, 418, 463, 473, 478, 486, 507, 513, 593, 594, 595, 596, 616, 630, 805, 827, 851, 852, 892, 893, 908, 955, 963, 966, 998, 999, 1124, 1125, 1126, 1127, 1129, 1142, 1212, 1223, 1283, 1284, 1344, 1381, 1391, 1444, 1454, 1495, 1624, 1657, 1746, 1752, 1758, 1844, 1853, 1859, 1882, 1883, 1897, 1900, 1905, 1906, 1908, 1910, 1918, 1925, 1927, 1928, 1929, 1930, 1935, 1939, 1941, 1942, 1943, 1945, 1949], "pin": [1, 226, 353, 460, 461, 462, 463, 464, 478, 593, 616, 1086, 1088, 1212, 1444, 1657, 1738, 1742, 1744, 1844, 1880, 1900, 1941], "asynchron": [1, 3, 4, 25, 72, 213, 226, 593, 616, 1011, 1212, 1215, 1230, 1444, 1880, 1886, 1907, 1909, 1935, 1941, 1944], "prod_1": 1, "prod_2": 1, "del": [1, 1886, 1897, 1910, 1912], "illustr": [1, 11, 20, 22, 1885, 1904, 1910, 1939], "aliv": [1, 39, 50, 59, 989, 1905, 1908, 1912, 1918, 1935, 1936, 1937], "live": [1, 11, 15, 46, 1028, 1031, 1212, 1444, 1882, 1908, 1912, 1935, 1937], "releas": [1, 7, 29, 38, 42, 59, 61, 69, 73, 527, 700, 956, 957, 985, 986, 987, 993, 1010, 1020, 1021, 1024, 1028, 1029, 1031, 1042, 1158, 1212, 1242, 1253, 1255, 1256, 1257, 1260, 1273, 1301, 1302, 1322, 1384, 1414, 1444, 1459, 1567, 1568, 1569, 1671, 1729, 1745, 1761, 1826, 1830, 1853, 1879, 1880, 1884, 1895, 1897, 1905, 1907, 1908, 1914, 1919, 1920, 1921, 1922, 1923, 1930, 1935, 1945, 1946], "delet": [1, 28, 42, 73, 907, 986, 994, 1879, 1893, 1897, 1905, 1925, 1934, 1935, 1937], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 17, 19, 21, 31, 34, 36, 42, 44, 46, 60, 63, 66, 72, 74, 693, 702, 773, 781, 782, 914, 916, 920, 1059, 1223, 1306, 1316, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1362, 1377, 1382, 1383, 1384, 1385, 1389, 1392, 1393, 1396, 1397, 1407, 1414, 1415, 1450, 1459, 1461, 1478, 1487, 1489, 1491, 1492, 1493, 1494, 1511, 1512, 1529, 1530, 1531, 1536, 1538, 1539, 1560, 1624, 1719, 1865, 1880, 1882, 1884, 1885, 1886, 1889, 1891, 1899, 1900, 1905, 1910, 1912, 1913, 1920, 1923, 1924, 1929, 1930, 1935, 1939, 1944], "messag": [1, 2, 5, 29, 36, 42, 52, 61, 70, 73, 74, 75, 97, 98, 637, 693, 1045, 1047, 1241, 1242, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1879, 1882, 1883, 1885, 1886, 1891, 1912, 1923, 1928, 1929, 1935, 1937, 1946], "get": [1, 8, 11, 14, 15, 20, 21, 22, 26, 27, 29, 33, 39, 42, 43, 44, 59, 60, 61, 62, 65, 70, 72, 73, 105, 167, 351, 699, 747, 801, 802, 874, 875, 906, 909, 950, 1013, 1014, 1015, 1032, 1072, 1142, 1145, 1146, 1147, 1159, 1187, 1227, 1279, 1387, 1388, 1412, 1413, 1440, 1441, 1442, 1454, 1471, 1624, 1625, 1632, 1658, 1665, 1750, 1765, 1879, 1880, 1882, 1885, 1895, 1897, 1898, 1905, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1917, 1921, 1925, 1927, 1930, 1935, 1937, 1939, 1943, 1944, 1945, 1950], "register_multi_grad_hook": [1, 1905], "fn": [1, 12, 17, 19, 20, 21, 25, 28, 29, 50, 51, 52, 56, 61, 65, 73, 926, 927, 968, 969, 971, 1143, 1149, 1153, 1212, 1213, 1224, 1229, 1444, 1872, 1882, 1884, 1885, 1889, 1897, 1905, 1915, 1935], "multi": [1, 4, 47, 50, 59, 773, 989, 1032, 1052, 1085, 1105, 1174, 1212, 1361, 1381, 1396, 1414, 1444, 1447, 1448, 1449, 1450, 1459, 1487, 1489, 1496, 1516, 1624, 1880, 1882, 1885, 1905, 1907, 1908, 1916, 1920, 1926, 1935, 1939, 1942, 1945, 1947], "specifi": [1, 2, 3, 5, 8, 12, 14, 18, 28, 33, 39, 40, 42, 46, 47, 48, 50, 52, 57, 58, 59, 60, 65, 73, 114, 167, 212, 275, 335, 347, 486, 496, 507, 511, 513, 514, 527, 529, 531, 550, 558, 559, 573, 593, 596, 597, 598, 600, 601, 616, 693, 748, 754, 755, 756, 781, 782, 806, 807, 808, 812, 827, 836, 839, 853, 867, 871, 872, 874, 891, 893, 905, 906, 920, 937, 960, 966, 983, 984, 985, 988, 989, 998, 999, 1000, 1002, 1017, 1020, 1031, 1056, 1066, 1067, 1068, 1072, 1073, 1075, 1085, 1088, 1099, 1102, 1104, 1105, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1120, 1122, 1143, 1144, 1147, 1153, 1154, 1165, 1173, 1174, 1212, 1216, 1227, 1228, 1254, 1264, 1266, 1268, 1269, 1278, 1281, 1283, 1284, 1294, 1311, 1313, 1319, 1338, 1339, 1342, 1358, 1359, 1360, 1361, 1367, 1376, 1378, 1380, 1381, 1387, 1388, 1391, 1398, 1404, 1405, 1410, 1411, 1414, 1435, 1436, 1441, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1475, 1476, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1497, 1498, 1511, 1512, 1515, 1516, 1526, 1527, 1534, 1535, 1540, 1543, 1555, 1562, 1578, 1579, 1586, 1593, 1599, 1600, 1624, 1629, 1631, 1632, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1668, 1671, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1694, 1696, 1697, 1698, 1699, 1700, 1705, 1710, 1711, 1719, 1727, 1736, 1752, 1757, 1758, 1761, 1778, 1806, 1808, 1809, 1810, 1812, 1813, 1814, 1815, 1816, 1817, 1821, 1824, 1825, 1829, 1845, 1847, 1851, 1861, 1862, 1863, 1864, 1866, 1867, 1868, 1872, 1879, 1882, 1884, 1885, 1889, 1891, 1892, 1894, 1895, 1898, 1899, 1905, 1908, 1910, 1914, 1916, 1918, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1934, 1935, 1939, 1940, 1941, 1942, 1944, 1946], "ignor": [1, 5, 7, 11, 23, 28, 42, 46, 51, 57, 65, 73, 167, 513, 557, 699, 702, 703, 704, 748, 807, 808, 871, 874, 875, 887, 906, 920, 921, 922, 934, 956, 984, 1032, 1033, 1052, 1053, 1106, 1108, 1116, 1117, 1118, 1157, 1172, 1212, 1223, 1229, 1232, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1280, 1281, 1303, 1339, 1340, 1341, 1357, 1358, 1359, 1360, 1361, 1378, 1380, 1388, 1396, 1398, 1404, 1410, 1411, 1414, 1435, 1436, 1437, 1438, 1439, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1459, 1475, 1476, 1487, 1492, 1515, 1516, 1526, 1535, 1555, 1578, 1586, 1624, 1671, 1682, 1705, 1713, 1717, 1778, 1808, 1809, 1826, 1830, 1853, 1882, 1885, 1886, 1892, 1899, 1905, 1908, 1910, 1923, 1939, 1946], "rel": [1, 8, 9, 20, 33, 40, 42, 48, 65, 73, 502, 707, 889, 921, 922, 926, 927, 984, 1201, 1266, 1269, 1492, 1493, 1508, 1543, 1682, 1686, 1687, 1713, 1892, 1895, 1907, 1908, 1915, 1923, 1927, 1946], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 15, 16, 18, 27, 73, 74, 81, 82, 810, 851, 852, 870, 871, 966, 1142, 1216, 1927, 1945], "version": [1, 2, 5, 8, 17, 25, 29, 33, 38, 40, 42, 44, 48, 60, 65, 68, 69, 73, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 138, 140, 142, 144, 147, 148, 150, 158, 160, 163, 164, 166, 169, 175, 177, 179, 181, 183, 185, 194, 203, 211, 215, 218, 220, 230, 232, 248, 252, 254, 260, 263, 265, 267, 269, 273, 278, 285, 287, 289, 293, 295, 299, 301, 308, 310, 312, 320, 322, 324, 326, 328, 330, 332, 334, 372, 374, 376, 378, 380, 382, 384, 387, 389, 391, 392, 399, 401, 403, 405, 407, 411, 415, 417, 435, 438, 441, 443, 454, 456, 458, 466, 471, 481, 484, 500, 504, 506, 522, 525, 526, 528, 530, 536, 540, 542, 545, 547, 549, 562, 564, 566, 569, 575, 577, 584, 588, 590, 606, 609, 611, 613, 615, 625, 635, 748, 749, 750, 762, 763, 764, 765, 766, 767, 788, 789, 790, 791, 793, 797, 798, 817, 818, 819, 852, 860, 868, 869, 871, 1031, 1141, 1169, 1187, 1209, 1212, 1215, 1216, 1219, 1222, 1241, 1254, 1255, 1259, 1260, 1273, 1306, 1343, 1361, 1414, 1444, 1445, 1459, 1496, 1508, 1533, 1543, 1550, 1559, 1590, 1592, 1607, 1608, 1612, 1616, 1636, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1665, 1666, 1697, 1699, 1700, 1762, 1763, 1764, 1821, 1824, 1825, 1826, 1830, 1850, 1865, 1867, 1868, 1879, 1898, 1899, 1905, 1906, 1908, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1920, 1922, 1923, 1924, 1926, 1927, 1929, 1933, 1939, 1946, 1947], "_allowmutationonsavedcontext": 1, "purpos": [1, 12, 19, 20, 22, 29, 40, 42, 73, 486, 513, 773, 921, 1221, 1306, 1367, 1396, 1450, 1618, 1619, 1620, 1621, 1778, 1895, 1900, 1905, 1910, 1927, 1936], "clear": [1, 2, 8, 9, 61, 73, 973, 1212, 1444, 1445, 1454, 1681, 1879, 1905, 1908, 1916, 1921, 1925, 1926], "upon": [1, 2, 39, 43, 50, 52, 73, 1624, 1633, 1636, 1897, 1905, 1908, 1923, 1930, 1937], "sin_": [1, 1883, 1898], "8415": [1, 1939], "sinbackward0": 1, "variou": [2, 5, 15, 33, 39, 42, 73, 1284, 1889, 1892, 1897, 1900, 1910, 1916, 1918, 1926, 1930, 1932, 1939, 1950], "get_cpu_cap": 2, "capabl": [2, 8, 33, 34, 42, 1013, 1736, 1889, 1908, 1914, 1915, 1917, 1947], "string": [2, 3, 5, 12, 16, 20, 29, 32, 33, 39, 42, 50, 56, 57, 59, 73, 616, 827, 867, 972, 1011, 1028, 1029, 1085, 1142, 1212, 1219, 1222, 1283, 1372, 1373, 1374, 1444, 1445, 1454, 1487, 1489, 1491, 1518, 1519, 1520, 1647, 1729, 1761, 1769, 1771, 1879, 1883, 1884, 1885, 1886, 1899, 1905, 1910, 1915, 1916, 1921, 1923, 1927, 1929, 1935, 1941, 1942, 1944, 1949, 1950], "possibl": [2, 9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 29, 33, 34, 36, 42, 44, 48, 69, 70, 73, 511, 512, 593, 630, 871, 892, 893, 960, 966, 995, 1133, 1145, 1212, 1225, 1252, 1265, 1268, 1269, 1272, 1277, 1283, 1361, 1367, 1444, 1450, 1534, 1535, 1554, 1587, 1612, 1636, 1637, 1749, 1752, 1767, 1818, 1826, 1844, 1882, 1884, 1885, 1897, 1898, 1903, 1905, 1907, 1908, 1909, 1910, 1913, 1918, 1919, 1920, 1922, 1927, 1930, 1935, 1937, 1942, 1946], "vsx": 2, "z": [2, 3, 10, 11, 14, 28, 29, 48, 65, 70, 74, 77, 81, 82, 630, 833, 890, 912, 957, 958, 974, 1085, 1089, 1313, 1397, 1543, 1636, 1669, 1670, 1678, 1723, 1753, 1754, 1882, 1883, 1884, 1899, 1905, 1907, 1908, 1913, 1914, 1923, 1927, 1933, 1935, 1937], "vector": [2, 19, 31, 40, 48, 65, 66, 70, 270, 329, 331, 337, 702, 703, 704, 897, 906, 908, 914, 915, 916, 917, 918, 919, 920, 947, 948, 954, 965, 980, 984, 985, 1066, 1067, 1072, 1074, 1148, 1152, 1153, 1157, 1244, 1251, 1259, 1267, 1268, 1272, 1275, 1279, 1280, 1281, 1301, 1306, 1313, 1334, 1336, 1362, 1363, 1364, 1367, 1381, 1387, 1388, 1391, 1399, 1407, 1408, 1409, 1453, 1483, 1492, 1495, 1534, 1535, 1543, 1545, 1579, 1583, 1611, 1628, 1630, 1632, 1636, 1667, 1671, 1718, 1719, 1810, 1830, 1866, 1869, 1872, 1905, 1913, 1930, 1939, 1944], "NO": [2, 99], "avx": 2, "avx2": [2, 1930], "avx512": 2, "is_built": [2, 1917], "built": [2, 3, 7, 8, 12, 13, 20, 29, 33, 40, 42, 47, 52, 68, 73, 967, 1011, 1221, 1493, 1705, 1880, 1900, 1905, 1907, 1908, 1910, 1914, 1916, 1917, 1918, 1932, 1950], "necessarili": [2, 40, 42, 48, 50, 59, 98, 486, 921, 1248, 1270, 1281, 1312, 1380, 1451, 1908, 1910], "machin": [2, 42, 50, 59, 65, 66, 71, 1216, 1221, 1257, 1480, 1914, 1915, 1916, 1917, 1918, 1920, 1923, 1924, 1927, 1934, 1935, 1936], "driver": [2, 25, 29, 1157, 1257, 1275, 1276, 1321, 1883, 1908, 1919, 1935], "would": [2, 3, 5, 8, 9, 11, 12, 14, 15, 16, 19, 22, 23, 28, 29, 31, 33, 39, 42, 48, 50, 52, 59, 60, 65, 67, 70, 73, 167, 460, 461, 462, 463, 464, 711, 773, 807, 867, 906, 910, 920, 956, 1086, 1088, 1106, 1146, 1147, 1210, 1212, 1213, 1217, 1219, 1227, 1228, 1325, 1326, 1357, 1358, 1359, 1360, 1361, 1396, 1410, 1414, 1437, 1438, 1439, 1444, 1454, 1459, 1543, 1554, 1615, 1624, 1625, 1657, 1669, 1700, 1738, 1742, 1744, 1755, 1765, 1844, 1845, 1850, 1882, 1884, 1885, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1918, 1921, 1923, 1926, 1927, 1928, 1930, 1935, 1936, 1937, 1939], "allow_tf32": [2, 1773, 1883, 1908, 1919], "tensorfloat": 2, "core": [2, 3, 7, 8, 14, 18, 20, 21, 24, 69, 966, 1042, 1680, 1885, 1889, 1907, 1908, 1909, 1918, 1919, 1927, 1947], "amper": [2, 21, 1939], "newer": [2, 19, 33, 1048, 1665, 1907, 1908, 1921, 1924, 1926, 1927, 1931], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1908, 1919], "precis": [2, 3, 8, 24, 31, 33, 40, 48, 65, 699, 702, 921, 922, 934, 946, 1031, 1128, 1161, 1257, 1275, 1281, 1306, 1316, 1357, 1358, 1359, 1361, 1372, 1373, 1374, 1375, 1376, 1377, 1397, 1415, 1431, 1437, 1438, 1439, 1496, 1554, 1593, 1624, 1758, 1773, 1778, 1880, 1885, 1895, 1901, 1905, 1916, 1927, 1930, 1931, 1933, 1940, 1942, 1944, 1945, 1951], "gemm": [2, 16, 1907, 1923], "allow_bf16_reduced_precision_reduct": [2, 1908, 1919], "cufft_plan_cach": [2, 1908], "cufft": 2, "queri": [2, 14, 15, 20, 42, 59, 73, 748, 988, 989, 991, 997, 1044, 1048, 1062, 1063, 1212, 1444, 1450, 1593, 1635, 1883, 1908, 1927], "specif": [2, 3, 7, 8, 9, 14, 15, 17, 19, 20, 24, 28, 29, 33, 42, 44, 46, 48, 50, 57, 59, 61, 65, 70, 73, 74, 100, 105, 527, 867, 874, 930, 991, 1076, 1105, 1174, 1209, 1216, 1221, 1225, 1227, 1228, 1312, 1391, 1416, 1593, 1618, 1619, 1638, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1768, 1807, 1879, 1882, 1884, 1885, 1887, 1889, 1891, 1895, 1899, 1901, 1905, 1908, 1910, 1914, 1918, 1920, 1923, 1926, 1927, 1929, 1930, 1931, 1933, 1935, 1937, 1944, 1945], "via": [2, 7, 12, 14, 15, 16, 20, 23, 27, 33, 34, 39, 42, 44, 48, 57, 65, 69, 73, 531, 630, 921, 922, 953, 986, 1022, 1042, 1089, 1145, 1284, 1362, 1363, 1364, 1381, 1399, 1407, 1408, 1409, 1416, 1483, 1631, 1665, 1668, 1711, 1882, 1884, 1885, 1895, 1897, 1900, 1903, 1905, 1908, 1910, 1911, 1912, 1914, 1916, 1918, 1919, 1923, 1927, 1930, 1935, 1936, 1939, 1942, 1943, 1950], "readonli": 2, "show": [2, 4, 7, 18, 21, 22, 24, 25, 29, 32, 36, 39, 40, 42, 44, 49, 65, 73, 914, 920, 966, 1136, 1212, 1313, 1444, 1615, 1681, 1879, 1880, 1885, 1898, 1907, 1908, 1909, 1913, 1914, 1916, 1923, 1926, 1927, 1935, 1937], "max_siz": [2, 58, 60, 1908], "capac": [2, 1055, 1908, 1918], "preferred_linalg_librari": 2, "subject": [2, 3, 14, 21, 24, 31, 36, 42, 46, 47, 65, 72, 73, 878, 1593, 1624, 1885, 1898, 1899, 1905, 1910, 1923, 1924, 1928, 1929, 1930, 1931, 1935, 1939, 1942, 1947, 1948, 1949], "algebra": [2, 9, 1085, 1269, 1880, 1890], "cusolv": [2, 1275, 1276, 1830], "magma": [2, 958, 1257, 1301, 1729, 1830, 1922, 1939], "decid": [2, 4, 7, 15, 16, 17, 22, 42, 59, 69, 1647, 1892, 1923, 1939], "heurist": [2, 16, 22, 29, 33, 39, 59, 60, 73, 1085], "overrid": [2, 28, 33, 40, 42, 43, 48, 52, 60, 65, 70, 73, 805, 806, 867, 903, 905, 1028, 1360, 1361, 1378, 1380, 1404, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1515, 1516, 1526, 1555, 1578, 1586, 1638, 1700, 1761, 1778, 1880, 1885, 1889, 1921, 1926, 1927, 1930, 1935, 1939, 1944, 1949], "wherev": [2, 9, 20, 1898], "pick": [2, 13, 14, 18, 22, 42, 58, 60, 527, 966, 1905, 1935], "prefer": [2, 9, 39, 44, 50, 65, 875, 891, 916, 1210, 1252, 1265, 1269, 1277, 1284, 1451, 1593, 1765, 1826, 1844, 1882, 1905, 1908, 1927, 1939], "achiev": [2, 29, 39, 40, 42, 48, 60, 65, 1085, 1149, 1212, 1361, 1367, 1444, 1450, 1451, 1516, 1545, 1624, 1896, 1908, 1915, 1918, 1927, 1935, 1937], "better": [2, 3, 7, 8, 9, 12, 13, 16, 18, 20, 24, 29, 33, 39, 42, 50, 69, 966, 1054, 1141, 1145, 1146, 1187, 1199, 1227, 1380, 1477, 1599, 1624, 1711, 1736, 1885, 1904, 1905, 1907, 1908, 1913, 1922, 1923, 1926, 1929, 1930, 1931, 1939, 1944, 1949], "select": [2, 5, 20, 24, 34, 37, 39, 42, 48, 50, 329, 331, 333, 337, 773, 956, 992, 993, 997, 1004, 1005, 1006, 1007, 1009, 1030, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1054, 1055, 1058, 1060, 1062, 1063, 1105, 1284, 1313, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1396, 1414, 1459, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1652, 1653, 1768, 1841, 1875, 1881, 1882, 1883, 1885, 1897, 1898, 1899, 1900, 1905, 1907, 1908, 1913, 1920, 1925, 1930, 1939, 1943, 1946], "incorrect": [2, 4, 5, 65, 73, 98, 99, 270, 527, 569, 912, 921, 948, 1227, 1270, 1283, 1450, 1488, 1489, 1490, 1491, 1611, 1671, 1826, 1882, 1885, 1908, 1919, 1923], "linalg": [2, 422, 956, 957, 958, 959, 985, 1071, 1157, 1190, 1292, 1301, 1302, 1303, 1307, 1308, 1631, 1632, 1636, 1671, 1716, 1721, 1723, 1729, 1800, 1830, 1831, 1853, 1869, 1880], "inv": [2, 48, 958, 1190, 1243, 1247, 1253, 1269, 1273, 1277], "inv_ex": 2, "cholesky_ex": [2, 1241], "lu_factor": [2, 1260, 1261, 1301, 1302, 1303], "lu": [2, 10, 1253, 1259, 1260, 1261, 1302, 1303, 1883], "eigh": [2, 1241, 1247, 1250, 1269, 1275, 1919], "eighval": 2, "svdval": [2, 1243, 1257, 1266, 1275, 1830, 1919], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 20, 42, 74, 809, 1910, 1923, 1930, 1935], "scale": [2, 7, 16, 39, 48, 50, 58, 60, 114, 488, 490, 630, 698, 702, 703, 704, 751, 752, 753, 754, 755, 756, 757, 762, 763, 764, 765, 766, 767, 768, 769, 772, 783, 785, 786, 787, 788, 790, 793, 794, 808, 812, 815, 832, 833, 834, 835, 838, 934, 1099, 1100, 1103, 1121, 1152, 1153, 1298, 1356, 1382, 1387, 1388, 1389, 1405, 1416, 1471, 1496, 1497, 1498, 1534, 1535, 1536, 1552, 1554, 1593, 1594, 1599, 1684, 1705, 1731, 1732, 1733, 1734, 1735, 1808, 1809, 1827, 1872, 1880, 1883, 1899, 1903, 1908, 1912, 1916, 1930, 1931, 1933, 1940], "product": [2, 21, 34, 42, 48, 59, 167, 699, 702, 703, 704, 773, 906, 908, 915, 917, 918, 919, 920, 934, 946, 952, 956, 980, 985, 997, 1044, 1048, 1062, 1063, 1066, 1082, 1085, 1148, 1152, 1153, 1189, 1232, 1244, 1251, 1277, 1278, 1280, 1306, 1313, 1316, 1336, 1396, 1397, 1414, 1415, 1542, 1593, 1631, 1717, 1718, 1727, 1846, 1861, 1869, 1872, 1880, 1882, 1898, 1905, 1913, 1915, 1919, 1927, 1939], "attent": [2, 7, 47, 748, 1361, 1450, 1487, 1489, 1491, 1516, 1593, 1880, 1922, 1943], "stai": [2, 7, 46, 156, 1381, 1908, 1918, 1930, 1935, 1939], "align": [2, 9, 18, 40, 773, 792, 798, 833, 839, 966, 1085, 1165, 1267, 1359, 1367, 1380, 1396, 1410, 1414, 1438, 1439, 1459, 1496, 1526, 1527, 1554, 1555, 1612, 1631, 1671, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1703, 1851, 1880, 1898, 1905, 1913, 1923, 1933, 1940], "src": [2, 3, 42, 73, 213, 245, 329, 337, 486, 526, 527, 528, 529, 530, 531, 533, 551, 1076, 1142, 1334, 1487, 1490, 1491, 1680, 1762, 1763, 1764, 1768, 1799, 1840, 1865, 1881, 1883, 1927], "transform": [2, 3, 19, 20, 21, 39, 44, 47, 65, 70, 794, 810, 851, 852, 870, 871, 957, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1141, 1142, 1143, 1147, 1152, 1209, 1221, 1365, 1399, 1407, 1408, 1409, 1416, 1431, 1472, 1488, 1489, 1490, 1491, 1508, 1514, 1543, 1560, 1579, 1615, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1794, 1826, 1880, 1911, 1928, 1930, 1939, 1944, 1949], "sdp_utils_cpp": 2, "h": [2, 4, 10, 14, 24, 33, 48, 502, 754, 755, 756, 773, 1241, 1248, 1251, 1261, 1275, 1350, 1351, 1358, 1359, 1361, 1363, 1364, 1368, 1373, 1374, 1376, 1384, 1385, 1387, 1389, 1396, 1397, 1408, 1409, 1414, 1415, 1416, 1427, 1428, 1438, 1439, 1456, 1457, 1459, 1461, 1478, 1494, 1497, 1498, 1508, 1516, 1543, 1578, 1584, 1585, 1631, 1632, 1665, 1680, 1830, 1883, 1898, 1899, 1905, 1908, 1909, 1910, 1912, 1913, 1923, 1943, 1944, 1945], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1593], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1593], "math_sdp_en": 2, "math": [2, 29, 39, 73, 1095, 1261, 1263, 1555, 1593, 1719, 1736, 1831, 1880, 1882, 1884, 1885, 1919, 1939, 1940, 1946], "enable_math_sdp": [2, 1593], "sdp_kernel": [2, 1593], "enable_flash": 2, "enable_math": [2, 1593], "enable_mem_effici": 2, "temporarili": [2, 22, 50, 1769, 1905, 1923, 1929], "previou": [2, 16, 18, 36, 42, 59, 65, 73, 569, 773, 966, 1020, 1130, 1165, 1222, 1282, 1298, 1396, 1414, 1459, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1681, 1736, 1826, 1893, 1905, 1908, 1910, 1916, 1922, 1930, 1937], "restor": [2, 5, 13, 46, 73, 105, 973, 1130, 1282, 1298, 1668, 1756, 1778, 1916, 1921], "is_avail": [2, 35, 42, 1880, 1908, 1914, 1917, 1921, 1929], "determinist": [2, 3, 5, 38, 42, 48, 73, 98, 105, 527, 886, 1160, 1193, 1215, 1227, 1228, 1309, 1312, 1314, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1414, 1459, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1766, 1772, 1865, 1883, 1905, 1920, 1926, 1934], "algorithm": [2, 3, 7, 31, 37, 40, 43, 46, 48, 50, 65, 105, 773, 792, 798, 956, 1209, 1252, 1259, 1265, 1269, 1275, 1284, 1301, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1394, 1396, 1414, 1459, 1495, 1496, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1543, 1554, 1593, 1612, 1624, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1700, 1719, 1758, 1773, 1830, 1831, 1865, 1880, 1905, 1908, 1919, 1935, 1939], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 513, 886, 1193, 1772, 1920], "benchmark": [2, 11, 16, 21, 22, 24, 1880, 1883, 1908, 1914], "fastest": [2, 890, 1624, 1670, 1686, 1687, 1913, 1920, 1926], "benchmark_limit": 2, "maximum": [2, 14, 48, 59, 60, 513, 708, 710, 784, 808, 833, 834, 835, 838, 839, 887, 999, 1034, 1036, 1042, 1049, 1050, 1064, 1065, 1131, 1147, 1172, 1173, 1174, 1284, 1309, 1329, 1403, 1534, 1535, 1629, 1703, 1711, 1736, 1750, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1865, 1881, 1883, 1891, 1903, 1904, 1908, 1918, 1925, 1933, 1946], "try": [2, 3, 4, 7, 8, 12, 14, 15, 16, 18, 19, 29, 42, 44, 51, 52, 56, 59, 65, 69, 70, 96, 97, 966, 1055, 1138, 1147, 1153, 1217, 1218, 1227, 1329, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1488, 1490, 1496, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1872, 1879, 1882, 1885, 1886, 1905, 1908, 1910, 1912, 1913, 1918, 1923, 1926, 1927, 1930, 1931, 1935, 1939], "dispatch": [2, 16, 17, 42, 65, 73, 98, 99, 1217, 1325, 1326, 1885, 1889, 1908, 1910, 1923, 1950], "v8": 2, "verbos": [2, 16, 29, 33, 42, 73, 693, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1879, 1891, 1899, 1923, 1924, 1944], "On": [2, 11, 14, 15, 33, 38, 39, 42, 43, 48, 60, 65, 70, 73, 699, 702, 934, 946, 1259, 1306, 1316, 1372, 1373, 1374, 1375, 1376, 1377, 1397, 1412, 1413, 1414, 1415, 1431, 1454, 1459, 1472, 1624, 1686, 1687, 1696, 1699, 1880, 1882, 1892, 1905, 1907, 1908, 1910, 1919, 1927, 1935, 1936, 1937, 1939], "demand": [2, 39, 1022, 1884, 1915, 1918, 1935], "onemkl": 2, "easier": [2, 7, 16, 29, 39, 73, 1882, 1884, 1900, 1905, 1906, 1910, 1911, 1939], "dump": [2, 16, 20, 29, 73, 986, 1909, 1922], "durat": [2, 16, 29, 42, 56, 59, 1325, 1326, 1895, 1929], "kernel": [2, 3, 4, 11, 15, 16, 17, 18, 19, 22, 25, 29, 31, 33, 36, 42, 65, 72, 752, 753, 754, 755, 756, 785, 786, 787, 966, 989, 991, 992, 1028, 1029, 1061, 1063, 1331, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1392, 1393, 1412, 1413, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1440, 1441, 1442, 1495, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1593, 1634, 1882, 1889, 1893, 1900, 1908, 1910, 1911, 1917, 1919, 1923, 1926, 1929, 1931, 1939], "environ": [2, 3, 7, 12, 16, 22, 29, 33, 34, 36, 38, 40, 48, 50, 52, 57, 62, 73, 693, 1221, 1227, 1414, 1459, 1865, 1879, 1882, 1891, 1905, 1907, 1909, 1914, 1919, 1920, 1922, 1928, 1935], "variabl": [2, 3, 5, 14, 16, 19, 22, 29, 33, 36, 38, 40, 48, 50, 52, 57, 62, 65, 70, 73, 74, 77, 81, 82, 463, 693, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 741, 742, 743, 744, 745, 747, 751, 752, 753, 754, 755, 756, 758, 759, 769, 773, 777, 812, 910, 980, 984, 1054, 1086, 1153, 1225, 1227, 1284, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1387, 1388, 1396, 1397, 1414, 1415, 1416, 1429, 1431, 1444, 1447, 1452, 1459, 1461, 1624, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1675, 1682, 1684, 1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1738, 1740, 1742, 1865, 1872, 1877, 1879, 1880, 1891, 1892, 1899, 1900, 1905, 1907, 1909, 1912, 1913, 1919, 1920, 1922, 1923, 1926, 1930, 1935, 1941, 1944], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 11, 16, 25, 29, 39, 42, 73, 105, 693, 871, 982, 984, 1042, 1257, 1275, 1352, 1391, 1495, 1537, 1624, 1711, 1798, 1810, 1880, 1897, 1899, 1900, 1907, 1908, 1912, 1916, 1919, 1921, 1923, 1927, 1928, 1931, 1935, 1939, 1942, 1945], "moreov": [2, 65, 527, 1624, 1699], "investig": [2, 7, 25, 42, 70], "singl": [2, 3, 5, 11, 14, 15, 16, 18, 19, 20, 21, 26, 28, 29, 33, 40, 42, 44, 46, 47, 48, 50, 52, 58, 59, 65, 66, 68, 69, 70, 71, 72, 73, 74, 81, 82, 270, 693, 708, 709, 779, 780, 781, 782, 785, 786, 787, 827, 907, 914, 915, 916, 917, 918, 919, 920, 935, 944, 948, 966, 980, 984, 1028, 1031, 1141, 1143, 1144, 1147, 1149, 1153, 1169, 1170, 1174, 1197, 1211, 1212, 1227, 1228, 1231, 1289, 1313, 1325, 1326, 1350, 1351, 1354, 1355, 1358, 1359, 1361, 1372, 1373, 1374, 1376, 1377, 1380, 1381, 1392, 1393, 1399, 1412, 1413, 1416, 1438, 1439, 1444, 1452, 1456, 1457, 1472, 1483, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1540, 1567, 1568, 1569, 1611, 1617, 1619, 1622, 1623, 1624, 1628, 1629, 1630, 1666, 1667, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1705, 1726, 1752, 1818, 1824, 1825, 1862, 1863, 1865, 1867, 1868, 1872, 1880, 1882, 1884, 1885, 1892, 1893, 1897, 1899, 1900, 1905, 1907, 1908, 1910, 1911, 1913, 1916, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1939, 1942, 1945, 1946, 1949], "enough": [2, 8, 17, 40, 73, 1223, 1334, 1493, 1812, 1813, 1814, 1815, 1816, 1817, 1865, 1884, 1897, 1900, 1910, 1913, 1926, 1927, 1942, 1950], "scope": [2, 7, 15, 28, 61, 73, 1138, 1483, 1647, 1882, 1884, 1885, 1908, 1912, 1923, 1927, 1937], "second": [2, 5, 11, 20, 33, 36, 42, 46, 50, 52, 59, 61, 71, 73, 699, 702, 704, 707, 773, 807, 887, 888, 889, 897, 905, 921, 922, 934, 938, 939, 941, 942, 943, 946, 985, 997, 1044, 1048, 1062, 1063, 1073, 1075, 1076, 1082, 1090, 1131, 1132, 1143, 1146, 1147, 1148, 1152, 1153, 1155, 1156, 1165, 1168, 1176, 1177, 1178, 1189, 1201, 1234, 1236, 1244, 1280, 1283, 1289, 1290, 1300, 1306, 1310, 1312, 1313, 1315, 1316, 1340, 1345, 1348, 1352, 1358, 1359, 1365, 1373, 1374, 1376, 1377, 1387, 1388, 1395, 1396, 1410, 1413, 1414, 1432, 1436, 1438, 1439, 1459, 1472, 1525, 1527, 1561, 1615, 1647, 1686, 1687, 1690, 1696, 1700, 1711, 1757, 1807, 1815, 1850, 1855, 1857, 1866, 1869, 1872, 1884, 1885, 1905, 1908, 1910, 1911, 1912, 1913, 1916, 1920, 1923, 1929, 1935, 1940, 1944], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 14, 16, 17, 20, 25, 26, 28, 29, 34, 36, 39, 42, 50, 51, 52, 56, 65, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 99, 100, 513, 693, 760, 907, 908, 909, 917, 1142, 1157, 1381, 1624, 1880, 1881, 1882, 1885, 1886, 1891, 1895, 1897, 1900, 1903, 1905, 1907, 1910, 1913, 1924, 1927, 1929, 1930, 1931, 1935, 1939, 1944, 1948, 1949, 1950], "verbose_off": 2, "dnn": [2, 1907], "onednn": [2, 868, 869, 872, 1214, 1220, 1930], "former": [2, 65, 1414, 1444, 1905], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 12, 35, 40, 48, 69, 72, 1543, 1624, 1879, 1880, 1896, 1910, 1916, 1926, 1933, 1935, 1944, 1947], "els": [2, 7, 11, 12, 14, 28, 39, 42, 44, 48, 50, 51, 59, 73, 74, 616, 773, 937, 1223, 1229, 1410, 1483, 1580, 1593, 1624, 1678, 1686, 1687, 1696, 1697, 1698, 1699, 1753, 1754, 1787, 1793, 1882, 1884, 1886, 1887, 1892, 1897, 1900, 1908, 1910, 1911, 1916, 1917, 1923, 1926, 1927, 1941], "einsum": [2, 1883, 1925], "readthedoc": [2, 1085], "io": [2, 7, 39, 44, 1085, 1219, 1222, 1283, 1414, 1415, 1491, 1593, 1679, 1761, 1922, 1930], "en": [2, 40, 1085, 1914, 1944, 1951], "path_find": [2, 1085], "html": [2, 3, 4, 7, 18, 34, 60, 693, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 966, 1085, 1493, 1865, 1906, 1914, 1916, 1920, 1927, 1944], "calcul": [2, 39, 42, 56, 773, 781, 782, 812, 815, 832, 833, 837, 954, 984, 1073, 1077, 1085, 1089, 1203, 1209, 1267, 1289, 1290, 1292, 1357, 1358, 1359, 1362, 1363, 1364, 1367, 1375, 1376, 1377, 1391, 1396, 1398, 1399, 1407, 1408, 1409, 1416, 1483, 1495, 1496, 1510, 1511, 1512, 1540, 1543, 1554, 1583, 1632, 1643, 1665, 1669, 1671, 1705, 1751, 1775, 1824, 1825, 1855, 1857, 1867, 1868, 1905, 1906, 1909, 1913, 1919, 1922, 1930, 1939, 1949], "path": [2, 3, 4, 8, 11, 16, 20, 22, 33, 42, 44, 57, 59, 61, 62, 65, 73, 747, 928, 929, 986, 987, 1085, 1212, 1444, 1460, 1491, 1681, 1879, 1883, 1884, 1905, 1908, 1910, 1914, 1921, 1927, 1929, 1939, 1948], "contract": [2, 12, 20, 1085, 1846, 1880, 1899, 1927], "left": [2, 25, 39, 73, 475, 513, 827, 833, 878, 935, 939, 942, 944, 945, 950, 955, 1085, 1105, 1112, 1126, 1129, 1130, 1134, 1165, 1169, 1170, 1174, 1209, 1210, 1217, 1231, 1252, 1261, 1265, 1269, 1272, 1273, 1274, 1275, 1277, 1289, 1290, 1334, 1352, 1357, 1358, 1359, 1360, 1361, 1372, 1373, 1374, 1391, 1398, 1411, 1412, 1413, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1447, 1448, 1449, 1453, 1454, 1492, 1495, 1496, 1497, 1498, 1543, 1563, 1581, 1629, 1703, 1704, 1717, 1745, 1758, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1826, 1846, 1851, 1866, 1882, 1883, 1885, 1905, 1910, 1916, 1933, 1940], "strategi": [2, 3, 7, 16, 39, 40, 42, 46, 52, 65, 914, 916, 1085, 1145, 1225, 1352, 1624, 1711, 1884, 1911, 1913, 1931], "auto": [2, 15, 42, 65, 66, 96, 97, 1085, 1360, 1361, 1885, 1923, 1944], "greedi": [2, 46, 1085], "doc": [2, 3, 4, 9, 17, 18, 23, 34, 59, 60, 96, 100, 693, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 853, 966, 1153, 1230, 1488, 1489, 1490, 1491, 1865, 1872, 1886, 1897, 1906, 1909, 1910, 1916, 1920, 1923, 1927, 1939, 1944], "timer": [3, 45, 1880], "stmt": [3, 1907], "setup": [3, 12, 33, 40, 59, 60, 833, 834, 835, 838, 1153, 1624, 1872, 1907, 1908, 1917, 1935, 1936], "global_setup": 3, "perf_count": 3, "global": [3, 5, 8, 13, 15, 16, 17, 27, 28, 29, 39, 42, 44, 46, 47, 48, 50, 60, 65, 70, 72, 73, 74, 77, 81, 82, 867, 874, 878, 886, 935, 944, 1037, 1044, 1086, 1088, 1098, 1103, 1121, 1139, 1142, 1169, 1170, 1193, 1200, 1212, 1215, 1227, 1231, 1282, 1298, 1444, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1643, 1647, 1675, 1738, 1740, 1742, 1745, 1769, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1877, 1882, 1885, 1886, 1901, 1904, 1910, 1915, 1916, 1918, 1920, 1921, 1930, 1935, 1936, 1937, 1939, 1942, 1944], "label": [3, 6, 7, 39, 46, 1085, 1352, 1361, 1367, 1378, 1380, 1404, 1436, 1447, 1448, 1527, 1658, 1704, 1909, 1918, 1920, 1944], "sub_label": 3, "descript": [3, 7, 17, 29, 32, 33, 39, 52, 59, 73, 747, 1183, 1184, 1185, 1257, 1284, 1508, 1729, 1884, 1885, 1908, 1910, 1913, 1915, 1916, 1923, 1951], "env": [3, 16, 29, 42, 48, 52, 57, 59, 60, 62, 73, 1042, 1678, 1909, 1919, 1935], "num_thread": [3, 1918], "languag": [3, 33, 52, 1223, 1352, 1487, 1542, 1912], "measur": [3, 48, 56, 988, 1034, 1036, 1243, 1360, 1361, 1378, 1404, 1411, 1435, 1436, 1492, 1493, 1515, 1516, 1574, 1713, 1880, 1908, 1915, 1916, 1926, 1939], "statement": [3, 12, 20, 48, 70, 73, 74, 79, 81, 82, 1213, 1227, 1886, 1905, 1910, 1918, 1921, 1923, 1927, 1933, 1935], "full": [3, 7, 8, 13, 16, 18, 20, 21, 22, 29, 34, 39, 40, 42, 46, 48, 59, 62, 65, 66, 70, 73, 74, 79, 82, 527, 913, 935, 944, 966, 1113, 1114, 1115, 1119, 1120, 1122, 1140, 1152, 1153, 1169, 1170, 1216, 1249, 1250, 1257, 1258, 1259, 1270, 1275, 1276, 1284, 1301, 1361, 1367, 1398, 1458, 1487, 1518, 1519, 1520, 1527, 1540, 1586, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1778, 1830, 1831, 1872, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1899, 1904, 1908, 1909, 1910, 1913, 1916, 1919, 1920, 1925, 1927, 1930, 1933, 1936, 1943, 1946], "org": [3, 4, 7, 9, 10, 18, 34, 40, 47, 48, 60, 693, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 966, 1284, 1414, 1462, 1463, 1490, 1493, 1668, 1719, 1794, 1879, 1886, 1905, 1906, 1916, 1920, 1922, 1923, 1927, 1944, 1951], "timeit": [3, 1907], "sever": [3, 18, 34, 39, 42, 47, 48, 65, 73, 751, 752, 753, 754, 755, 756, 779, 780, 785, 786, 787, 795, 796, 966, 1031, 1089, 1187, 1212, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1393, 1412, 1413, 1432, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1561, 1564, 1565, 1567, 1568, 1569, 1624, 1633, 1634, 1636, 1637, 1669, 1680, 1734, 1735, 1775, 1861, 1882, 1904, 1905, 1907, 1908, 1915, 1916, 1918, 1923, 1926, 1930, 1935], "kei": [3, 17, 19, 20, 24, 25, 28, 39, 44, 50, 57, 59, 60, 65, 73, 616, 693, 748, 867, 872, 930, 1051, 1141, 1151, 1212, 1227, 1228, 1283, 1444, 1445, 1450, 1454, 1487, 1488, 1489, 1490, 1491, 1593, 1650, 1666, 1880, 1883, 1884, 1885, 1889, 1908, 1910, 1915, 1916, 1921, 1923, 1925, 1926, 1929, 1930, 1933, 1935, 1936, 1941, 1944, 1946, 1948], "awar": [3, 7, 24, 98, 501, 725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 746, 851, 852, 868, 875, 876, 1491, 1593, 1624, 1834, 1835, 1836, 1837, 1838, 1899, 1905, 1908, 1927, 1933, 1936, 1939], "element": [3, 15, 19, 39, 42, 48, 70, 71, 73, 74, 80, 81, 82, 114, 136, 167, 171, 213, 233, 258, 270, 274, 302, 329, 331, 333, 335, 337, 368, 414, 416, 418, 450, 469, 486, 488, 489, 511, 513, 527, 529, 531, 534, 558, 559, 571, 573, 622, 623, 630, 694, 696, 697, 700, 701, 706, 707, 711, 712, 748, 771, 773, 783, 784, 785, 786, 787, 793, 797, 806, 887, 889, 890, 891, 894, 895, 896, 897, 898, 906, 914, 915, 917, 918, 919, 921, 922, 936, 945, 948, 955, 961, 965, 978, 980, 981, 982, 1028, 1064, 1065, 1066, 1067, 1068, 1069, 1072, 1074, 1075, 1076, 1080, 1082, 1085, 1088, 1090, 1091, 1095, 1115, 1119, 1120, 1122, 1124, 1129, 1131, 1132, 1134, 1138, 1143, 1144, 1146, 1147, 1148, 1152, 1153, 1154, 1155, 1156, 1157, 1165, 1168, 1171, 1172, 1173, 1174, 1189, 1197, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1231, 1233, 1234, 1236, 1253, 1255, 1259, 1270, 1274, 1285, 1286, 1288, 1291, 1293, 1294, 1295, 1296, 1300, 1301, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1332, 1334, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1356, 1357, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1391, 1396, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1410, 1411, 1414, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1430, 1433, 1435, 1436, 1437, 1438, 1439, 1443, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1454, 1455, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1492, 1493, 1495, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1528, 1532, 1535, 1536, 1541, 1542, 1546, 1547, 1548, 1549, 1552, 1555, 1556, 1558, 1563, 1567, 1568, 1569, 1573, 1574, 1578, 1579, 1581, 1584, 1585, 1586, 1587, 1588, 1589, 1593, 1594, 1595, 1596, 1597, 1599, 1601, 1603, 1604, 1605, 1606, 1611, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1650, 1651, 1657, 1658, 1660, 1661, 1670, 1671, 1672, 1674, 1682, 1722, 1723, 1726, 1727, 1734, 1735, 1737, 1748, 1751, 1752, 1756, 1758, 1760, 1778, 1781, 1783, 1795, 1796, 1798, 1799, 1803, 1809, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1824, 1825, 1829, 1840, 1842, 1843, 1847, 1848, 1849, 1851, 1853, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1865, 1867, 1868, 1869, 1872, 1875, 1883, 1885, 1892, 1900, 1903, 1906, 1907, 1910, 1913, 1919, 1921, 1923, 1926, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1950], "lazili": [3, 25, 35, 44, 988, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1615, 1882, 1910], "threadpool": 3, "comparison": [3, 26, 40, 42, 73, 1212, 1227, 1228, 1444, 1682, 1886, 1910, 1946, 1949], "appl": [3, 1896], "focu": [3, 16, 20, 1713], "replic": [3, 39, 47, 65, 100, 1165, 1222, 1372, 1373, 1374, 1381, 1391, 1420, 1421, 1422, 1468, 1469, 1470, 1495, 1581, 1608, 1928], "particularli": [3, 14, 25, 39, 40, 61, 1380, 1381, 1451, 1882, 1908], "variat": [3, 29, 48, 1885, 1910, 1926, 1931], "confound": 3, "quantifi": [3, 1493], "nois": [3, 29, 1883, 1920], "median": [3, 48, 190, 1340, 1865, 1883, 1898, 1925], "robust": [3, 1284, 1897, 1916], "deviat": [3, 48, 393, 1356, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1483, 1672, 1788, 1793, 1824, 1825, 1903], "merg": [3, 6, 7, 9, 39, 42, 44, 60, 1445, 1450, 1454], "repeat": [3, 48, 70, 508, 984, 1085, 1275, 1301, 1440, 1441, 1442, 1515, 1516, 1719, 1751, 1810, 1830, 1831, 1847, 1881, 1883, 1885, 1925, 1929, 1932, 1939], "autorang": 3, "exact": [3, 15, 16, 18, 24, 29, 33, 39, 50, 61, 99, 355, 754, 755, 756, 808, 887, 888, 889, 921, 922, 966, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1312, 1376, 1414, 1491, 1554, 1593, 1624, 1714, 1804, 1903, 1909, 1918, 1939, 1950], "discuss": [3, 5, 8, 9, 10, 16, 17, 26, 48, 73, 1405, 1554, 1892, 1905, 1910, 1916, 1920, 1935, 1937, 1939], "docstr": [3, 33, 73, 874, 875, 1212, 1444, 1879, 1908], "adapt": [3, 14, 779, 780, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1382, 1502, 1503, 1504, 1505, 1506, 1507, 1678, 1684, 1685, 1696, 1698, 1705, 1908], "field": [3, 7, 20, 28, 29, 42, 46, 50, 52, 56, 57, 73, 839, 906, 1210, 1212, 1352, 1360, 1361, 1378, 1380, 1404, 1410, 1411, 1435, 1436, 1444, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1508, 1515, 1516, 1526, 1543, 1555, 1578, 1586, 1657, 1694, 1700, 1895, 1905, 1909, 1918, 1923, 1935, 1936, 1944], "displai": [3, 16, 29, 36, 1030, 1043, 1554, 1612, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1879, 1886, 1891, 1894, 1923, 1944, 1946], "instruct": [3, 4, 15, 16, 20, 29, 31, 33, 61, 72, 1882, 1885, 1919, 1923, 1930, 1946], "count": [3, 20, 39, 48, 56, 73, 937, 983, 1024, 1138, 1173, 1174, 1210, 1249, 1250, 1657, 1862, 1863, 1883, 1895, 1908, 1925, 1929, 1935, 1937, 1939], "wall": [3, 22], "callgrind": 3, "analog": [3, 14, 20, 73, 707, 1068, 1106, 1108, 1187, 1261, 1414, 1699, 1830, 1847, 1900, 1916], "constructor": [3, 33, 39, 40, 46, 65, 73, 74, 82, 837, 874, 875, 1352, 1449, 1454, 1455, 1472, 1497, 1498, 1624, 1664, 1805, 1880, 1882, 1885, 1886, 1908, 1909, 1916, 1935, 1939, 1941, 1942, 1945, 1951], "snippet": [3, 20, 60, 1879, 1916, 1921], "loop": [3, 11, 15, 20, 21, 28, 40, 61, 66, 70, 71, 73, 74, 79, 875, 876, 920, 1031, 1034, 1036, 1147, 1153, 1227, 1624, 1634, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1872, 1882, 1883, 1885, 1895, 1907, 1908, 1912, 1913, 1916, 1919, 1923, 1926, 1929, 1930, 1944], "callabl": [3, 5, 12, 17, 18, 20, 28, 39, 40, 42, 46, 48, 50, 52, 57, 59, 61, 65, 72, 73, 86, 87, 88, 136, 414, 854, 966, 968, 1028, 1029, 1031, 1142, 1143, 1144, 1149, 1152, 1153, 1212, 1215, 1223, 1227, 1283, 1284, 1444, 1487, 1489, 1491, 1493, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1707, 1710, 1872, 1879, 1882, 1884, 1885, 1886, 1895, 1908, 1910, 1916, 1921, 1923, 1927, 1928, 1929, 1935, 1946, 1948, 1949, 1950], "present": [3, 9, 17, 23, 39, 42, 59, 65, 1210, 1301, 1352, 1414, 1454, 1657, 1680, 1826, 1879, 1894, 1897, 1898, 1899, 1904, 1905, 1908, 1910, 1913, 1916, 1921, 1923, 1927, 1936, 1939, 1942], "default_tim": 3, "summar": [3, 4, 20, 29, 60, 1778, 1885, 1900, 1939], "relu": [3, 12, 19, 25, 28, 29, 40, 70, 71, 73, 713, 714, 718, 719, 720, 721, 722, 723, 724, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 778, 805, 806, 827, 867, 873, 1028, 1143, 1153, 1223, 1444, 1459, 1461, 1472, 1480, 1487, 1489, 1491, 1590, 1591, 1615, 1681, 1872, 1881, 1882, 1883, 1893, 1899, 1900, 1903, 1905, 1916, 1921, 1923, 1925, 1930, 1932, 1933], "readabl": [3, 29, 32, 39, 57, 73, 1030, 1043, 1844, 1923, 1926, 1950], "supplement": 3, "disambigu": [3, 29, 57, 73, 1289], "ident": [3, 15, 29, 33, 39, 42, 48, 73, 801, 827, 921, 922, 1073, 1249, 1250, 1251, 1252, 1265, 1277, 1280, 1284, 1301, 1339, 1340, 1356, 1382, 1583, 1631, 1633, 1869, 1875, 1886, 1903, 1919, 1920, 1927, 1932, 1939], "easi": [3, 12, 20, 25, 26, 29, 39, 44, 59, 1882, 1905, 1912, 1915, 1916, 1918, 1927, 1930, 1935, 1936, 1939], "differenti": [3, 48, 66, 71, 167, 368, 602, 815, 902, 904, 906, 908, 909, 911, 914, 915, 916, 917, 918, 919, 920, 921, 922, 963, 1031, 1146, 1147, 1148, 1152, 1226, 1258, 1259, 1270, 1301, 1366, 1367, 1387, 1545, 1579, 1624, 1636, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1865, 1880, 1892, 1910, 1912, 1913, 1923, 1926, 1935, 1945, 1947], "distinguish": [3, 1930, 1939], "princip": [3, 1258, 1719], "signal": [3, 17, 31, 44, 50, 59, 61, 751, 752, 753, 779, 780, 795, 796, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1209, 1274, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1372, 1373, 1374, 1392, 1393, 1412, 1413, 1432, 1437, 1438, 1439, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1518, 1521, 1538, 1539, 1561, 1564, 1565, 1567, 1568, 1569, 1826, 1880, 1897, 1918, 1929, 1935], "form": [3, 7, 9, 13, 28, 31, 39, 42, 48, 58, 59, 60, 65, 70, 73, 773, 792, 798, 957, 1073, 1113, 1115, 1212, 1251, 1254, 1259, 1270, 1275, 1350, 1351, 1354, 1355, 1367, 1392, 1393, 1396, 1414, 1444, 1459, 1495, 1496, 1527, 1538, 1539, 1542, 1554, 1581, 1612, 1636, 1699, 1717, 1846, 1879, 1882, 1886, 1900, 1905, 1910, 1916, 1923, 1927, 1930, 1939, 1944], "treat": [3, 17, 23, 28, 48, 58, 68, 73, 74, 79, 80, 337, 486, 806, 921, 922, 1028, 1141, 1264, 1267, 1269, 1281, 1283, 1293, 1294, 1295, 1296, 1313, 1342, 1388, 1398, 1416, 1448, 1449, 1450, 1451, 1454, 1472, 1477, 1535, 1624, 1666, 1670, 1705, 1758, 1826, 1840, 1847, 1884, 1885, 1898, 1905, 1935, 1939, 1942, 1949], "distinct": [3, 1141, 1247, 1248, 1292, 1885, 1910, 1921, 1935, 1936], "workload": [3, 8, 25, 39, 42, 65, 1031, 1908, 1915, 1919, 1935], "good": [3, 7, 8, 15, 18, 20, 24, 33, 65, 73, 105, 966, 1145, 1452, 1794, 1879, 1889, 1897, 1910, 1915, 1916, 1918, 1923, 1927, 1928, 1930], "intrins": [3, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 805, 806, 1931, 1932], "contrast": [3, 48, 50, 773, 1396, 1699, 1881, 1903, 1905, 1911, 1939], "blocked_autorang": 3, "callback": [3, 40, 59, 61, 72, 73, 1624, 1895, 1910, 1915, 1929, 1935], "min_run_tim": 3, "minimum": [3, 33, 40, 50, 59, 60, 709, 710, 784, 808, 833, 834, 835, 838, 839, 888, 937, 1065, 1132, 1172, 1173, 1174, 1314, 1367, 1403, 1493, 1703, 1704, 1711, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1881, 1883, 1903, 1905, 1913, 1925, 1933, 1942], "At": [3, 5, 6, 7, 13, 16, 20, 29, 34, 39, 1119, 1363, 1372, 1373, 1374, 1375, 1376, 1377, 1412, 1413, 1893, 1900, 1907, 1913, 1930, 1935, 1940], "high": [3, 4, 7, 8, 9, 10, 11, 16, 20, 21, 29, 34, 40, 42, 48, 50, 56, 58, 60, 73, 136, 1367, 1490, 1740, 1741, 1773, 1881, 1883, 1895, 1897, 1910, 1913, 1914, 1916, 1917, 1918, 1926, 1930, 1931, 1935, 1939, 1944, 1945, 1946, 1949], "pseudo": [3, 105], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 14, 16, 29, 42, 1227, 1275, 1445, 1454, 1736, 1907, 1923, 1933, 1939], "block": [3, 7, 8, 25, 39, 42, 46, 47, 59, 61, 72, 73, 596, 597, 598, 945, 988, 1042, 1232, 1284, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1420, 1421, 1422, 1423, 1424, 1425, 1447, 1495, 1537, 1611, 1624, 1812, 1813, 1814, 1882, 1884, 1885, 1895, 1897, 1901, 1905, 1908, 1909, 1913, 1923, 1930, 1935, 1939], "qualiti": [3, 7, 40], "balanc": [3, 18, 105, 966], "compet": [3, 1918], "statist": [3, 16, 29, 40, 42, 48, 812, 813, 833, 834, 835, 837, 838, 997, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1062, 1063, 1289, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1895, 1905, 1912, 1926, 1928, 1930, 1933], "amort": 3, "invoc": [3, 5, 11, 18, 20, 25, 73, 854, 966, 1215, 1227, 1882, 1885, 1908, 1910, 1915, 1923, 1935, 1937], "less": [3, 6, 7, 16, 33, 39, 40, 42, 48, 50, 61, 380, 693, 914, 916, 921, 922, 984, 1038, 1055, 1085, 1129, 1133, 1138, 1141, 1236, 1248, 1284, 1300, 1301, 1352, 1405, 1458, 1475, 1481, 1660, 1749, 1855, 1857, 1879, 1883, 1885, 1900, 1908, 1910, 1918, 1919, 1925, 1928, 1930], "bias": [3, 40, 747, 773, 807, 1362, 1363, 1364, 1396, 1397, 1399, 1407, 1408, 1409, 1414, 1415, 1416, 1459, 1461, 1483], "trivial": [3, 15, 50, 52, 748, 956, 1631, 1923, 1937], "low": [3, 7, 22, 36, 40, 48, 65, 513, 917, 1157, 1367, 1719, 1736, 1740, 1741, 1758, 1831, 1881, 1883, 1895, 1897, 1908, 1918, 1929, 1946, 1950], "digit": [3, 1778, 1879, 1894, 1915, 1919], "microsecond": [3, 1908], "bia": [3, 9, 42, 47, 74, 725, 726, 727, 728, 729, 730, 731, 732, 733, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 762, 764, 765, 766, 767, 769, 773, 774, 777, 778, 785, 786, 787, 794, 805, 1151, 1212, 1221, 1352, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1396, 1397, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1444, 1450, 1459, 1460, 1461, 1513, 1514, 1518, 1519, 1520, 1521, 1522, 1523, 1544, 1553, 1557, 1560, 1615, 1624, 1631, 1632, 1646, 1648, 1650, 1665, 1668, 1733, 1881, 1883, 1893, 1910, 1916, 1921, 1930, 1932, 1939, 1944], "period": [3, 9, 46, 59, 935, 944, 997, 1030, 1043, 1044, 1048, 1062, 1063, 1105, 1169, 1170, 1231, 1715, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1883, 1895, 1918], "until": [3, 7, 16, 39, 40, 42, 46, 50, 59, 65, 72, 73, 501, 988, 989, 991, 1022, 1138, 1232, 1284, 1325, 1326, 1543, 1615, 1624, 1702, 1708, 1847, 1897, 1903, 1908, 1912, 1921, 1923, 1929, 1935, 1937], "overal": [3, 9, 22, 39, 42, 59, 921, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1490, 1905, 1907, 1908, 1918, 1931], "main": [3, 7, 12, 16, 20, 28, 39, 40, 42, 43, 48, 50, 51, 52, 57, 59, 60, 61, 62, 73, 276, 510, 1072, 1073, 1074, 1075, 1076, 1274, 1545, 1810, 1854, 1855, 1856, 1857, 1879, 1882, 1895, 1897, 1899, 1900, 1904, 1905, 1908, 1909, 1910, 1911, 1916, 1918, 1922, 1935, 1936, 1944, 1945], "repetit": [3, 1751, 1847], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1880], "tupl": [3, 5, 20, 28, 33, 39, 44, 50, 56, 57, 59, 65, 73, 335, 460, 462, 464, 511, 534, 550, 573, 596, 597, 598, 708, 709, 710, 748, 779, 780, 781, 782, 785, 786, 787, 792, 798, 799, 800, 806, 830, 831, 867, 874, 875, 891, 892, 899, 900, 901, 902, 903, 905, 914, 915, 916, 917, 918, 919, 920, 921, 922, 925, 926, 927, 949, 968, 972, 983, 998, 999, 1002, 1013, 1031, 1037, 1064, 1065, 1083, 1086, 1088, 1102, 1104, 1105, 1107, 1108, 1110, 1111, 1112, 1114, 1115, 1117, 1118, 1120, 1122, 1125, 1135, 1139, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1152, 1153, 1157, 1173, 1175, 1212, 1218, 1223, 1227, 1228, 1233, 1242, 1247, 1248, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1264, 1268, 1270, 1271, 1273, 1275, 1278, 1281, 1299, 1301, 1303, 1309, 1311, 1313, 1314, 1317, 1319, 1339, 1342, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1381, 1391, 1392, 1393, 1412, 1413, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1450, 1454, 1465, 1466, 1467, 1468, 1469, 1470, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1503, 1504, 1506, 1507, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1554, 1567, 1568, 1569, 1579, 1581, 1612, 1613, 1614, 1619, 1620, 1621, 1624, 1636, 1647, 1660, 1666, 1670, 1671, 1675, 1678, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1719, 1720, 1729, 1738, 1740, 1742, 1752, 1756, 1757, 1803, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1821, 1824, 1825, 1829, 1830, 1831, 1844, 1845, 1846, 1847, 1848, 1853, 1860, 1861, 1862, 1863, 1867, 1868, 1872, 1873, 1875, 1877, 1882, 1883, 1886, 1897, 1900, 1905, 1908, 1910, 1911, 1916, 1921, 1923, 1926, 1927, 1930, 1935, 1939, 1944, 1946, 1949, 1950], "modulo": [3, 48, 1133, 1749], "determin": [3, 5, 8, 14, 15, 16, 28, 29, 31, 33, 35, 36, 38, 39, 40, 42, 48, 50, 57, 59, 65, 70, 73, 99, 100, 836, 839, 914, 916, 921, 922, 935, 944, 951, 956, 1032, 1087, 1106, 1116, 1140, 1141, 1169, 1170, 1173, 1174, 1225, 1245, 1257, 1268, 1271, 1292, 1306, 1388, 1392, 1393, 1414, 1450, 1453, 1459, 1535, 1538, 1539, 1554, 1587, 1612, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1666, 1676, 1711, 1739, 1741, 1743, 1770, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1878, 1885, 1886, 1899, 1908, 1909, 1910, 1916, 1923, 1927, 1930, 1935, 1937, 1939, 1941, 1942, 1944, 1946], "itself": [3, 5, 7, 8, 12, 15, 20, 29, 42, 43, 65, 71, 73, 706, 712, 892, 984, 1146, 1147, 1212, 1223, 1227, 1444, 1477, 1599, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1882, 1897, 1916, 1918, 1920, 1923, 1927, 1935, 1939, 1943], "jitter": 3, "interpret": [3, 20, 39, 42, 46, 48, 50, 59, 61, 89, 792, 798, 893, 920, 1041, 1106, 1107, 1108, 1113, 1115, 1116, 1117, 1118, 1138, 1162, 1174, 1212, 1217, 1223, 1227, 1264, 1284, 1384, 1543, 1554, 1555, 1612, 1770, 1776, 1879, 1884, 1885, 1897, 1907, 1908, 1923, 1939, 1941, 1943], "ideal": [3, 16, 58, 60, 1227, 1700, 1899], "analysi": [3, 12, 15, 26, 40, 48, 73, 1231, 1719, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1886, 1916, 1924, 1949], "valgrind": 3, "degrad": [3, 33, 1907, 1909, 1910, 1939], "amelior": 3, "suffici": [3, 16, 29, 33, 40, 48, 51, 59, 65, 1686, 1687, 1879, 1939, 1942], "obtain": [3, 25, 39, 42, 48, 52, 72, 73, 510, 931, 1157, 1329, 1367, 1451, 1527, 1624, 1719, 1736, 1831, 1885, 1897, 1898, 1907, 1920, 1923, 1926, 1929, 1930], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 16, 73, 792, 798, 950, 1165, 1369, 1370, 1371, 1465, 1466, 1467, 1468, 1469, 1470, 1496, 1499, 1500, 1501, 1554, 1612, 1705, 1711, 1765, 1883, 1909, 1927, 1928, 1935], "caller": [3, 50, 59, 73, 867, 1212, 1444, 1491, 1620, 1621, 1905, 1908, 1935, 1937], "structur": [3, 5, 9, 14, 17, 23, 39, 40, 42, 49, 50, 52, 60, 65, 73, 74, 75, 79, 82, 905, 1136, 1148, 1153, 1227, 1444, 1643, 1647, 1682, 1719, 1831, 1872, 1880, 1884, 1886, 1892, 1895, 1900, 1908, 1909, 1910, 1911, 1918, 1921, 1922, 1923, 1924, 1926, 1927, 1935, 1944, 1945, 1946, 1947, 1949], "restrict": [3, 8, 14, 39, 48, 65, 70, 71, 1283, 1306, 1380, 1884, 1885, 1886, 1899, 1900, 1905, 1908, 1913, 1928, 1930], "builtin": [3, 16, 29, 42, 73, 74, 82, 1224, 1283, 1745, 1882, 1884, 1886, 1935, 1937], "surpris": [3, 8, 15, 65, 1879, 1913, 1919], "serial": [3, 34, 39, 42, 44, 46, 59, 1212, 1221, 1222, 1283, 1444, 1615, 1678, 1679, 1761, 1879, 1880, 1883, 1894, 1899, 1905, 1908, 1915, 1916, 1918, 1927, 1930, 1936], "subsequ": [3, 7, 11, 16, 18, 20, 33, 34, 42, 73, 966, 989, 1212, 1223, 1227, 1372, 1373, 1374, 1375, 1376, 1377, 1444, 1472, 1620, 1621, 1908, 1920, 1923, 1935, 1939], "deseri": [3, 44, 1283, 1615, 1879, 1894, 1921], "globalsbridg": 3, "care": [3, 7, 11, 15, 16, 17, 29, 33, 42, 48, 65, 72, 73, 968, 1106, 1108, 1444, 1897, 1907, 1908, 1909, 1910, 1912, 1916, 1918, 1921, 1923, 1935, 1939], "reli": [3, 9, 15, 16, 17, 22, 33, 39, 40, 50, 52, 65, 73, 167, 906, 921, 968, 1085, 1381, 1700, 1905, 1907, 1909, 1910, 1920, 1921, 1939, 1943], "pickl": [3, 39, 40, 42, 1212, 1283, 1444, 1761, 1879, 1894, 1897, 1921, 1927], "transfer": [3, 39, 42, 1893, 1897, 1908, 1914, 1916, 1927, 1935], "properli": [3, 7, 39, 40, 44, 46, 50, 59, 72, 1106, 1107, 1108, 1116, 1117, 1118, 1313, 1445, 1446, 1454, 1455, 1624, 1879, 1892, 1910, 1913, 1916, 1918, 1921, 1935, 1936, 1942], "profil": [3, 4, 16, 18, 56, 73, 966, 1225, 1618, 1619, 1620, 1621, 1778, 1880, 1925, 1935], "drive": [3, 9, 20, 42, 1905], "facil": [3, 1283, 1897], "analyz": [3, 4, 29, 36, 73, 1909, 1910, 1919], "manipul": [3, 28, 65, 72, 1216, 1880, 1904, 1912, 1916, 1928, 1933], "1000000": [3, 1683], "mirror": [3, 156], "semant": [3, 9, 35, 42, 59, 60, 65, 73, 167, 807, 887, 888, 889, 906, 920, 948, 991, 1042, 1142, 1153, 1216, 1222, 1281, 1361, 1516, 1587, 1700, 1863, 1872, 1880, 1884, 1885, 1889, 1892, 1900, 1911, 1916, 1923, 1939], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 40, 1882], "consum": [3, 20, 39, 44, 49, 61, 72, 450, 1085, 1897, 1908, 1918, 1923, 1924, 1944], "extrapol": 3, "sinc": [3, 7, 11, 16, 20, 23, 28, 29, 39, 40, 42, 47, 48, 52, 61, 65, 73, 331, 547, 760, 798, 806, 821, 822, 956, 968, 1034, 1036, 1038, 1085, 1125, 1126, 1127, 1141, 1209, 1212, 1217, 1222, 1225, 1301, 1360, 1387, 1440, 1441, 1442, 1444, 1496, 1508, 1543, 1545, 1612, 1615, 1618, 1647, 1666, 1671, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1703, 1704, 1705, 1711, 1826, 1882, 1883, 1884, 1885, 1891, 1893, 1895, 1900, 1904, 1905, 1908, 1910, 1911, 1912, 1913, 1915, 1916, 1921, 1922, 1923, 1925, 1927, 1928, 1929, 1930, 1934, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1945, 1946], "properti": [3, 13, 14, 15, 39, 42, 43, 44, 48, 51, 56, 59, 65, 73, 805, 893, 925, 931, 1015, 1101, 1102, 1104, 1106, 1107, 1108, 1116, 1117, 1118, 1212, 1356, 1444, 1477, 1599, 1615, 1625, 1626, 1627, 1657, 1678, 1880, 1885, 1889, 1895, 1905, 1908, 1910, 1913, 1926, 1929, 1935, 1939, 1941, 1942, 1945, 1947, 1950, 1951], "significant_figur": 3, "figur": [3, 7, 8, 16, 44, 73, 1907, 1909, 1910, 1923, 1928, 1937, 1944, 1949], "intend": [3, 59, 73, 903, 912, 993, 1231, 1508, 1618, 1619, 1620, 1621, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1700, 1885, 1900, 1903, 1905, 1916, 1927], "interquartil": 3, "mitig": [3, 74], "tail": [3, 39, 57], "645": 3, "conjunct": [3, 39, 42, 46, 65, 837, 1508, 1543, 1624, 1933, 1935], "trim_sigfig": 3, "human": [3, 32, 57, 1030, 1043, 1903, 1923, 1950], "raw": [3, 73, 1138, 1270, 1908, 1927], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 12, 14, 15, 20, 24, 28, 34, 39, 42, 44, 47, 48, 50, 57, 65, 72, 73, 510, 693, 773, 921, 1102, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1122, 1227, 1301, 1362, 1363, 1364, 1381, 1384, 1396, 1407, 1408, 1409, 1426, 1427, 1428, 1429, 1454, 1483, 1489, 1491, 1624, 1821, 1885, 1889, 1893, 1897, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1916, 1919, 1923, 1926, 1928, 1930, 1931, 1935, 1937], "functioncount": [3, 1880], "stat": [3, 16, 29, 68, 839, 849, 850, 1042, 1049, 1050, 1051, 1483, 1624, 1895, 1908, 1948], "as_standard": 3, "strip": [3, 1545, 1624, 1882, 1925, 1939], "prefix": [3, 42, 44, 59, 65, 761, 770, 1212, 1444, 1624, 1879, 1891, 1905, 1923, 1927, 1948], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 12, 17, 20, 29, 34, 36, 42, 48, 73, 693, 921, 1105, 1106, 1108, 1116, 1117, 1118, 1251, 1487, 1488, 1489, 1490, 1491, 1615, 1719, 1826, 1870, 1871, 1886, 1891, 1905, 1909, 1910, 1915, 1916, 1928, 1939], "locat": [3, 9, 11, 15, 16, 33, 42, 48, 56, 167, 171, 270, 527, 948, 950, 1000, 1064, 1065, 1233, 1283, 1309, 1314, 1317, 1334, 1381, 1391, 1478, 1495, 1508, 1543, 1608, 1611, 1624, 1636, 1730, 1765, 1787, 1808, 1811, 1865, 1879, 1882, 1894, 1908, 1921, 1923, 1927, 1929, 1935, 1937, 1939, 1944, 1948], "resembl": [3, 34], "23234231": 3, "first_build_dir": 3, "foo": [3, 11, 18, 33, 42, 56, 57, 72, 73, 74, 81, 82, 837, 867, 872, 966, 1141, 1142, 1151, 1210, 1215, 1219, 1222, 1223, 1226, 1227, 1666, 1879, 1882, 1884, 1885, 1889, 1910, 1916, 1923, 1927, 1946], "9823794": 3, "bar": [3, 7, 20, 56, 73, 74, 81, 82, 867, 872, 984, 1141, 1215, 1222, 1824, 1825, 1867, 1868, 1879, 1882, 1884, 1894, 1916, 1923, 1927, 1946], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1209], "site": [3, 7], "denois": 3, "explan": [3, 9, 16, 17, 24, 29, 52, 875, 1212, 1444, 1880, 1909, 1910, 1916], "delta": [3, 48, 773, 1396, 1405, 1414, 1475, 1552, 1684, 1824, 1825, 1851, 1867, 1868, 1883, 1903], "inclus": [3, 48, 105, 527, 1172, 1174, 1282, 1298, 1304, 1740, 1741, 1823, 1934, 1946], "diff": [3, 7, 1882, 1883, 1925], "One": [3, 8, 12, 14, 15, 22, 25, 33, 42, 44, 65, 68, 70, 73, 596, 945, 1142, 1153, 1203, 1496, 1580, 1631, 1634, 1700, 1705, 1713, 1740, 1741, 1861, 1872, 1882, 1884, 1885, 1899, 1900, 1906, 1907, 1908, 1910, 1915, 1928, 1937, 1944], "unit": [3, 11, 31, 33, 48, 50, 60, 65, 73, 773, 774, 1103, 1121, 1356, 1366, 1386, 1389, 1394, 1395, 1396, 1397, 1462, 1463, 1473, 1508, 1532, 1536, 1541, 1542, 1588, 1596, 1640, 1641, 1645, 1648, 1650, 1653, 1853, 1896, 1905, 1907, 1913, 1927], "next": [3, 13, 14, 16, 19, 20, 27, 39, 42, 48, 59, 65, 73, 573, 773, 1216, 1348, 1397, 1415, 1461, 1624, 1659, 1897, 1904, 1905, 1907, 1910, 1911, 1916, 1918, 1928, 1929, 1935, 1936, 1939, 1942, 1944], "logic": [3, 5, 20, 33, 39, 47, 62, 65, 73, 938, 940, 941, 943, 1102, 1104, 1107, 1108, 1110, 1111, 1114, 1115, 1117, 1118, 1120, 1122, 1142, 1216, 1293, 1294, 1295, 1296, 1306, 1450, 1624, 1728, 1755, 1838, 1885, 1886, 1908, 1909, 1910, 1911, 1913, 1930], "question": [3, 10, 15, 21, 39, 73, 1668, 1880, 1905], "why": [3, 7, 15, 25, 39, 65, 70, 73, 1085, 1216, 1593, 1880, 1892, 1911], "involv": [3, 5, 7, 9, 14, 15, 21, 31, 39, 42, 65, 68, 70, 73, 1624, 1885, 1898, 1900, 1905, 1908, 1909, 1912, 1916, 1923, 1935, 1936, 1937, 1939], "look": [3, 4, 7, 8, 9, 11, 12, 14, 16, 17, 20, 22, 24, 28, 29, 34, 42, 48, 58, 59, 67, 70, 73, 875, 914, 916, 1212, 1306, 1352, 1444, 1534, 1649, 1700, 1812, 1813, 1814, 1816, 1817, 1882, 1884, 1898, 1904, 1905, 1908, 1911, 1915, 1916, 1918, 1922, 1923, 1927, 1930, 1935, 1936, 1949], "autom": [3, 8, 16, 29, 73, 1882, 1930], "easili": [3, 7, 8, 19, 28, 29, 31, 40, 42, 1142, 1451, 1543, 1581, 1700, 1758, 1910, 1911, 1913, 1916, 1921, 1926, 1934, 1937, 1944], "exclus": [3, 39, 42, 48, 50, 59, 73, 748, 1174, 1624, 1740, 1741, 1744, 1905, 1946], "basi": [3, 9, 10, 48, 1284, 1705, 1908, 1915, 1930, 1935], "thought": [3, 56, 73, 1103, 1105, 1121], "path_and_function_nam": 3, "children": [3, 52, 65, 73, 804, 1212, 1444, 1897, 1916, 1927, 1937], "identifi": [3, 7, 9, 14, 20, 25, 42, 50, 53, 56, 59, 60, 61, 73, 830, 1174, 1283, 1483, 1886, 1897, 1906, 1915, 1916, 1927, 1935, 1936, 1937, 1944], "hot": [3, 20, 48, 1545, 1580, 1913], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 329, 577, 878, 1138, 1545, 1812, 1813, 1814, 1816, 1817, 1827, 1883, 1900, 1925, 1939], "index": [3, 15, 29, 34, 39, 40, 44, 48, 57, 73, 208, 225, 297, 328, 329, 330, 331, 332, 333, 335, 337, 338, 486, 487, 526, 527, 528, 529, 530, 531, 532, 533, 708, 709, 830, 867, 890, 905, 950, 1004, 1007, 1064, 1065, 1105, 1145, 1146, 1147, 1151, 1153, 1154, 1183, 1184, 1185, 1186, 1210, 1228, 1233, 1241, 1259, 1277, 1291, 1299, 1301, 1305, 1309, 1312, 1313, 1314, 1317, 1334, 1340, 1343, 1344, 1352, 1367, 1380, 1387, 1388, 1445, 1446, 1451, 1454, 1455, 1493, 1495, 1534, 1535, 1580, 1642, 1644, 1651, 1652, 1657, 1670, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1714, 1715, 1730, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1799, 1809, 1810, 1812, 1813, 1814, 1816, 1817, 1826, 1840, 1861, 1864, 1865, 1872, 1880, 1881, 1882, 1883, 1885, 1892, 1897, 1898, 1899, 1900, 1905, 1908, 1909, 1911, 1914, 1920, 1925, 1937, 1939, 1942, 1943, 1944, 1945, 1946], "cpython": [3, 26, 73], "known": [3, 7, 9, 14, 17, 29, 38, 42, 46, 53, 66, 69, 71, 1148, 1149, 1227, 1228, 1283, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1414, 1459, 1473, 1475, 1495, 1554, 1596, 1615, 1786, 1787, 1844, 1865, 1880, 1883, 1887, 1895, 1897, 1900, 1903, 1905, 1907, 1920, 1923, 1926, 1937, 1940], "quit": [3, 7, 22, 25, 73, 1885, 1910, 1912, 1927, 1935], "noisi": 3, "higher": [3, 7, 8, 14, 40, 42, 65, 66, 71, 74, 79, 82, 167, 906, 907, 920, 991, 1031, 1042, 1077, 1143, 1149, 1153, 1172, 1189, 1341, 1380, 1436, 1451, 1593, 1730, 1831, 1872, 1880, 1908, 1910, 1911, 1913, 1915, 1921, 1930, 1931, 1935, 1942], "filter": [3, 29, 557, 785, 786, 787, 1209, 1231, 1372, 1373, 1374, 1375, 1376, 1377, 1518, 1519, 1520, 1521, 1522, 1523, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1826, 1885, 1927], "rather": [3, 8, 9, 11, 12, 15, 19, 20, 33, 42, 50, 52, 61, 73, 74, 82, 792, 798, 930, 956, 1210, 1213, 1283, 1344, 1508, 1543, 1554, 1612, 1632, 1778, 1882, 1885, 1899, 1900, 1906, 1908, 1910, 1911, 1923, 1927, 1930, 1935, 1939, 1944], "unicod": [3, 1886], "dictionari": [3, 18, 23, 33, 39, 40, 48, 69, 73, 693, 805, 806, 807, 810, 828, 829, 830, 851, 852, 853, 867, 871, 877, 966, 1042, 1141, 1151, 1212, 1213, 1219, 1223, 1227, 1228, 1283, 1284, 1387, 1388, 1444, 1445, 1454, 1534, 1647, 1884, 1886, 1910, 1916, 1923, 1926, 1935, 1944, 1948, 1950], "lookup": [3, 20, 22, 44, 48, 1387, 1534, 1882, 1886, 1907, 1936], "map": [3, 15, 20, 28, 33, 42, 48, 50, 56, 57, 59, 60, 65, 70, 71, 73, 74, 82, 697, 748, 805, 806, 810, 812, 827, 828, 830, 852, 853, 867, 868, 869, 870, 871, 877, 898, 947, 1142, 1153, 1165, 1174, 1219, 1222, 1283, 1284, 1375, 1376, 1377, 1383, 1384, 1385, 1389, 1391, 1440, 1441, 1442, 1445, 1454, 1529, 1530, 1531, 1536, 1631, 1647, 1730, 1732, 1862, 1863, 1872, 1886, 1899, 1901, 1905, 1909, 1910, 1911, 1917, 1922, 1927, 1930, 1933, 1935, 1936, 1937, 1941, 1946, 1950], "agnost": [3, 59, 1543, 1899], "reliabl": [3, 21], "warrant": 3, "except": [3, 5, 7, 9, 12, 15, 25, 28, 33, 42, 43, 47, 48, 50, 51, 52, 56, 60, 65, 72, 73, 596, 600, 601, 630, 697, 706, 708, 709, 712, 773, 898, 921, 922, 953, 960, 964, 990, 1000, 1002, 1030, 1043, 1077, 1083, 1085, 1131, 1132, 1151, 1153, 1175, 1219, 1227, 1229, 1233, 1267, 1283, 1299, 1309, 1311, 1312, 1314, 1317, 1339, 1342, 1344, 1396, 1414, 1459, 1496, 1580, 1624, 1632, 1657, 1664, 1665, 1669, 1671, 1727, 1751, 1767, 1804, 1822, 1824, 1825, 1829, 1851, 1867, 1868, 1872, 1873, 1880, 1882, 1884, 1885, 1886, 1887, 1892, 1897, 1900, 1908, 1910, 1916, 1919, 1922, 1927, 1928, 1935, 1937, 1939, 1941, 1942, 1946], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 16, 20, 339, 344, 557, 627, 999, 1811, 1861, 1883, 1909, 1925, 1939], "finit": [4, 48, 921, 922, 1201, 1202, 1247, 1248, 1258, 1259, 1275, 1301, 1334, 1338, 1360, 1830, 1910, 1913, 1946], "natur": [4, 7, 8, 31, 42, 48, 65, 74, 76, 98, 921, 922, 1240, 1245, 1271, 1285, 1287, 1292, 1352, 1491, 1593, 1913, 1939, 1940], "against": [4, 5, 24, 33, 42, 50, 59, 807, 878, 921, 922, 1113, 1114, 1115, 1119, 1120, 1122, 1154, 1203, 1212, 1227, 1228, 1444, 1450, 1681, 1879, 1885, 1927, 1949], "cprofil": 4, "mode": [4, 8, 13, 14, 15, 16, 17, 18, 19, 21, 29, 39, 40, 42, 44, 48, 59, 61, 70, 71, 73, 238, 239, 759, 760, 785, 786, 787, 792, 798, 799, 800, 828, 830, 836, 839, 872, 873, 902, 904, 907, 908, 909, 914, 915, 916, 917, 921, 933, 966, 986, 1019, 1059, 1060, 1089, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1142, 1145, 1146, 1147, 1148, 1151, 1152, 1160, 1187, 1195, 1196, 1210, 1212, 1213, 1216, 1227, 1229, 1270, 1283, 1313, 1325, 1326, 1362, 1363, 1364, 1372, 1373, 1374, 1388, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1460, 1483, 1496, 1497, 1518, 1519, 1520, 1535, 1543, 1554, 1581, 1612, 1613, 1614, 1625, 1632, 1636, 1669, 1705, 1713, 1729, 1772, 1774, 1775, 1865, 1880, 1883, 1893, 1898, 1903, 1908, 1909, 1911, 1912, 1916, 1925, 1929, 1931, 1932, 1933, 1935, 1947, 1950], "correct": [4, 6, 7, 28, 40, 42, 43, 44, 48, 59, 222, 223, 226, 238, 568, 593, 616, 617, 628, 910, 922, 984, 1106, 1108, 1116, 1117, 1118, 1186, 1210, 1213, 1227, 1228, 1247, 1381, 1398, 1410, 1615, 1624, 1657, 1777, 1824, 1825, 1867, 1868, 1881, 1882, 1883, 1884, 1898, 1899, 1908, 1910, 1913, 1941], "launch": [4, 11, 19, 33, 39, 45, 50, 51, 52, 57, 58, 59, 62, 72, 989, 1624, 1880, 1905, 1907, 1908, 1909, 1910, 1935], "spent": [4, 16, 25, 29, 42, 931, 1711, 1907, 1916], "appear": [4, 27, 40, 42, 48, 73, 867, 1031, 1085, 1126, 1127, 1153, 1283, 1317, 1319, 1620, 1625, 1751, 1780, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1872, 1882, 1885, 1898, 1899, 1910, 1911, 1916, 1923, 1927], "extrem": [4, 15, 20, 1624, 1905, 1923], "expens": [4, 14, 16, 22, 24, 29, 39, 48, 65, 1631, 1908, 1913, 1915, 1929, 1935, 1945], "bound": [4, 14, 15, 29, 34, 40, 42, 65, 496, 808, 950, 961, 1099, 1100, 1212, 1357, 1358, 1359, 1437, 1438, 1439, 1444, 1462, 1543, 1713, 1744, 1765, 1885, 1886, 1903, 1905, 1927, 1930, 1940], "greater": [4, 42, 59, 74, 75, 308, 630, 693, 942, 955, 956, 961, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1156, 1168, 1266, 1329, 1360, 1492, 1543, 1554, 1580, 1593, 1612, 1632, 1665, 1865, 1883, 1905, 1908, 1920, 1925, 1939, 1940], "spend": [4, 7, 22, 1284], "sens": [4, 17, 48, 59, 73, 1647, 1862, 1863, 1885, 1905], "respons": [4, 7, 9, 15, 42, 44, 46, 48, 50, 56, 61, 65, 72, 989, 1432, 1561, 1624, 1905, 1908, 1910, 1911, 1916, 1935], "Of": [4, 1670, 1879, 1909, 1910], "cours": [4, 16, 20, 73, 1879, 1909, 1910, 1935], "realiti": 4, "complic": [4, 15, 40, 73, 806, 1889, 1899, 1906, 1927, 1935, 1937], "depend": [4, 5, 11, 12, 14, 15, 16, 19, 20, 23, 27, 28, 33, 39, 42, 46, 48, 50, 59, 60, 61, 65, 73, 331, 798, 891, 997, 1044, 1048, 1062, 1063, 1106, 1108, 1116, 1117, 1118, 1143, 1147, 1152, 1223, 1227, 1247, 1248, 1275, 1301, 1306, 1360, 1361, 1378, 1380, 1388, 1391, 1404, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1495, 1496, 1508, 1515, 1516, 1526, 1535, 1543, 1555, 1578, 1586, 1593, 1612, 1615, 1624, 1636, 1637, 1643, 1678, 1705, 1717, 1719, 1736, 1752, 1812, 1813, 1814, 1816, 1817, 1830, 1853, 1875, 1879, 1882, 1884, 1885, 1892, 1897, 1905, 1907, 1908, 1910, 1911, 1913, 1916, 1918, 1923, 1929, 1930, 1935, 1939, 1945, 1946], "could": [4, 5, 7, 8, 12, 16, 17, 23, 29, 39, 42, 48, 50, 59, 70, 72, 73, 596, 597, 598, 600, 601, 968, 1024, 1106, 1108, 1116, 1117, 1118, 1209, 1242, 1283, 1301, 1325, 1326, 1704, 1807, 1862, 1884, 1885, 1892, 1897, 1905, 1908, 1909, 1922, 1923, 1927, 1930, 1931, 1935, 1936, 1937, 1939, 1943, 1944], "account": [4, 11, 57, 73, 1624, 1903, 1907, 1939], "heavili": [4, 1689, 1907, 1910, 1927], "similarli": [4, 7, 11, 15, 19, 72, 73, 773, 803, 807, 871, 957, 1105, 1212, 1267, 1444, 1491, 1620, 1621, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1854, 1855, 1856, 1857, 1884, 1905, 1910, 1912, 1913, 1919, 1939], "platform": [4, 8, 9, 33, 42, 51, 52, 56, 1258, 1259, 1270, 1729, 1830, 1893, 1914, 1919, 1920, 1930], "startup": 4, "slower": [4, 15, 33, 42, 889, 915, 1125, 1126, 1127, 1241, 1248, 1562, 1631, 1910, 1920, 1926, 1940], "rerun": [5, 42, 1908], "segment": [5, 16, 23, 1042, 1138, 1475, 1927], "persist": [5, 11, 15, 22, 37, 44, 65, 773, 828, 829, 830, 1212, 1396, 1414, 1444, 1459, 1908, 1916, 1921, 1922], "rng": [5, 39, 1017, 1056, 1766, 1908, 1920, 1934], "advanc": [5, 16, 34, 39, 40, 50, 1487, 1489, 1491, 1670, 1679, 1889, 1892, 1899, 1908, 1910, 1914, 1918, 1943, 1944], "juggl": 5, "dropout": [5, 47, 73, 747, 748, 773, 1212, 1356, 1383, 1384, 1385, 1389, 1396, 1414, 1444, 1450, 1459, 1460, 1487, 1489, 1491, 1509, 1529, 1530, 1531, 1536, 1593, 1880, 1883, 1893, 1899, 1900, 1905, 1908, 1925, 1932], "moder": 5, "hit": [5, 8, 11, 16, 22, 29, 33, 1624, 1879, 1908], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1880], "omit": [5, 33, 42, 60, 1119, 1120, 1122, 1398, 1458, 1922, 1923, 1935, 1946], "exclud": [5, 9, 13, 40, 59, 73, 972, 1174, 1388, 1535, 1583, 1681, 1854, 1855, 1856, 1857, 1914, 1927, 1936], "_infer_device_typ": 5, "remain": [5, 8, 48, 59, 73, 1319, 1387, 1388, 1534, 1535, 1615, 1624, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1730, 1752, 1895, 1897, 1904, 1912, 1916], "consequ": [5, 70, 1275, 1414, 1830, 1885, 1905, 1908, 1918, 1920], "random": [5, 16, 29, 48, 50, 59, 60, 66, 73, 98, 105, 171, 773, 905, 936, 1017, 1018, 1023, 1032, 1033, 1052, 1053, 1056, 1057, 1146, 1153, 1164, 1188, 1284, 1304, 1323, 1324, 1328, 1330, 1356, 1367, 1389, 1396, 1414, 1462, 1536, 1586, 1591, 1615, 1632, 1638, 1644, 1645, 1652, 1653, 1672, 1719, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1766, 1779, 1831, 1872, 1879, 1880, 1883, 1891, 1903, 1911, 1913, 1919, 1923, 1925, 1944], "gradient": [5, 16, 25, 31, 39, 40, 42, 46, 48, 65, 66, 69, 167, 238, 239, 306, 351, 502, 509, 527, 708, 709, 893, 902, 904, 906, 908, 909, 910, 911, 912, 914, 915, 916, 917, 918, 919, 920, 921, 922, 926, 927, 937, 963, 1089, 1141, 1142, 1143, 1144, 1148, 1153, 1154, 1187, 1212, 1247, 1248, 1251, 1258, 1259, 1275, 1284, 1301, 1303, 1309, 1312, 1314, 1360, 1367, 1375, 1376, 1377, 1380, 1381, 1387, 1388, 1398, 1412, 1413, 1444, 1451, 1475, 1526, 1527, 1534, 1535, 1545, 1554, 1562, 1564, 1565, 1578, 1612, 1613, 1614, 1620, 1621, 1624, 1625, 1628, 1629, 1631, 1636, 1669, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1704, 1717, 1775, 1811, 1830, 1872, 1880, 1882, 1883, 1892, 1899, 1900, 1903, 1908, 1909, 1910, 1912, 1913, 1916, 1919, 1925, 1926, 1935, 1936, 1939], "among": [5, 15, 39, 40, 42, 46, 48, 59, 998, 999, 1002, 1174, 1381, 1672, 1885, 1918], "detect": [5, 14, 16, 29, 33, 35, 36, 39, 42, 43, 50, 52, 65, 914, 915, 916, 917, 918, 919, 1142, 1216, 1488, 1490, 1624, 1865, 1880, 1897, 1900, 1908, 1913, 1919, 1923, 1927, 1935], "priorit": [5, 1145, 1146, 1148, 1686, 1687, 1939], "defaultdevicetyp": 5, "anticip": 5, "belong": [5, 20, 28, 42, 44, 46, 48, 56, 73, 950, 991, 1701, 1879, 1908, 1926, 1950], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 20, 29, 73, 1382, 1638, 1851, 1901, 1916, 1926, 1928, 1930], "intermedi": [5, 14, 15, 33, 49, 70, 73, 947, 1136, 1142, 1149, 1301, 1388, 1487, 1489, 1491, 1535, 1882, 1885, 1908, 1910, 1911, 1912, 1919, 1949], "entir": [5, 7, 12, 13, 14, 15, 16, 20, 21, 29, 33, 39, 42, 50, 60, 73, 710, 921, 922, 1142, 1165, 1383, 1384, 1385, 1389, 1407, 1408, 1409, 1416, 1529, 1530, 1531, 1536, 1624, 1642, 1644, 1668, 1885, 1900, 1905, 1908, 1910, 1911, 1912, 1915, 1916, 1923, 1927, 1930, 1935, 1937, 1939], "graph": [5, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 42, 44, 48, 65, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 96, 97, 156, 167, 238, 239, 693, 760, 805, 806, 828, 829, 830, 836, 839, 906, 912, 920, 966, 968, 986, 1021, 1026, 1031, 1142, 1212, 1215, 1216, 1221, 1223, 1227, 1624, 1679, 1681, 1686, 1687, 1880, 1885, 1891, 1893, 1901, 1904, 1909, 1910, 1913, 1916, 1917, 1923, 1927, 1931, 1932, 1933, 1935, 1936, 1937, 1939, 1944, 1949], "recomput": [5, 14, 912, 1496, 1554, 1668, 1926], "refer": [5, 12, 20, 21, 23, 29, 33, 39, 40, 42, 43, 44, 46, 48, 51, 54, 55, 59, 60, 65, 66, 72, 98, 100, 270, 747, 748, 769, 777, 805, 806, 807, 832, 833, 834, 837, 838, 839, 872, 886, 891, 906, 948, 1024, 1029, 1088, 1138, 1160, 1161, 1193, 1200, 1212, 1215, 1223, 1230, 1243, 1264, 1268, 1281, 1284, 1367, 1398, 1444, 1493, 1508, 1516, 1525, 1543, 1554, 1611, 1624, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1719, 1736, 1772, 1794, 1831, 1865, 1879, 1880, 1883, 1897, 1898, 1900, 1901, 1904, 1905, 1908, 1909, 1910, 1911, 1912, 1913, 1916, 1918, 1920, 1923, 1926, 1931, 1932, 1935, 1936, 1939, 1942, 1943, 1944, 1947], "potenti": [5, 8, 14, 16, 20, 42, 59, 61, 98, 208, 225, 1221, 1257, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1624, 1865, 1884, 1892, 1897, 1905, 1908, 1910, 1927, 1939, 1943], "silent": [5, 19, 1032, 1033, 1052, 1053, 1186, 1227, 1444, 1628, 1629, 1908, 1919, 1923], "consider": [5, 7, 897, 1209, 1388, 1624, 1885, 1907], "limit": [5, 8, 9, 14, 15, 16, 17, 19, 20, 24, 29, 39, 47, 65, 66, 71, 1055, 1142, 1225, 1329, 1367, 1387, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1593, 1624, 1647, 1778, 1880, 1885, 1889, 1897, 1899, 1900, 1905, 1908, 1909, 1916, 1919, 1920, 1921, 1927, 1930, 1933, 1935, 1936, 1939, 1946], "reentrant": [5, 1624], "stop": [5, 17, 48, 50, 59, 60, 61, 878, 1024, 1210, 1284, 1367, 1657, 1713, 1745, 1882, 1885, 1935], "soon": [5, 20, 29, 59, 65, 806, 1905, 1930, 1935, 1937], "set_checkpoint_early_stop": 5, "entireti": 5, "no_grad": [5, 874, 1089, 1143, 1147, 1152, 1187, 1212, 1387, 1444, 1450, 1491, 1625, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1903, 1905, 1916, 1947], "condit": [5, 14, 15, 37, 39, 70, 73, 74, 81, 82, 630, 633, 637, 707, 773, 915, 921, 922, 1209, 1227, 1241, 1243, 1251, 1257, 1258, 1259, 1270, 1275, 1396, 1414, 1459, 1491, 1659, 1664, 1853, 1875, 1881, 1882, 1883, 1884, 1886, 1900, 1905, 1910, 1919, 1928, 1944], "unmet": 5, "particip": [5, 9, 14, 39, 42, 43, 46, 59, 60, 1624, 1936], "wherea": [5, 15, 1267, 1325, 1326, 1339, 1700, 1830, 1885, 1946], "know": [5, 7, 8, 11, 14, 15, 16, 20, 33, 43, 49, 73, 501, 910, 915, 1136, 1142, 1222, 1624, 1882, 1885, 1892, 1904, 1905, 1908, 1910, 1913, 1923, 1927, 1935, 1936, 1937, 1939], "lstm": [5, 776, 1415, 1883, 1908, 1923, 1925, 1930, 1932, 1933, 1944], "hidden": [5, 773, 1151, 1396, 1397, 1414, 1415, 1459, 1461, 1625, 1908, 1944], "correctli": [5, 19, 39, 42, 59, 65, 501, 1142, 1212, 1227, 1444, 1562, 1882, 1884, 1885, 1895, 1899, 1904, 1905, 1909, 1910, 1911, 1918, 1920, 1930, 1935], "entrant": 5, "futur": [5, 8, 9, 14, 16, 18, 40, 42, 44, 50, 59, 60, 63, 70, 73, 306, 337, 527, 531, 570, 693, 700, 806, 828, 829, 830, 839, 874, 912, 956, 957, 966, 977, 978, 985, 986, 988, 989, 991, 1020, 1021, 1028, 1029, 1031, 1158, 1212, 1215, 1221, 1222, 1225, 1230, 1242, 1253, 1255, 1256, 1257, 1260, 1273, 1301, 1302, 1313, 1384, 1444, 1545, 1567, 1568, 1569, 1616, 1624, 1628, 1665, 1666, 1671, 1689, 1729, 1745, 1826, 1830, 1853, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1891, 1892, 1893, 1895, 1899, 1900, 1907, 1908, 1910, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1932, 1935, 1939, 1941, 1945, 1946, 1947, 1949], "turn": [5, 15, 18, 19, 20, 25, 33, 39, 70, 73, 693, 886, 966, 1200, 1227, 1488, 1490, 1812, 1813, 1814, 1815, 1816, 1817, 1892, 1905, 1908, 1919, 1920, 1923, 1929, 1930, 1936, 1939], "open": [5, 8, 9, 16, 25, 33, 39, 48, 59, 66, 702, 928, 1135, 1219, 1283, 1306, 1316, 1560, 1882, 1892, 1897, 1900, 1914, 1922, 1923, 1927, 1930, 1935, 1939, 1940], "ran": [5, 16, 23, 29, 36, 65], "sequenti": [5, 16, 25, 29, 39, 46, 65, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 806, 1153, 1212, 1221, 1390, 1444, 1483, 1494, 1633, 1647, 1714, 1872, 1882, 1897, 1900, 1908, 1916, 1923, 1926, 1928, 1930, 1949], "func": [5, 42, 47, 68, 70, 73, 74, 76, 875, 905, 907, 911, 912, 913, 914, 915, 916, 917, 918, 919, 921, 922, 1187, 1215, 1227, 1228, 1666, 1872, 1880, 1885, 1904, 1935, 1937, 1950], "compris": [5, 60], "chunk": [5, 39, 42, 44, 65, 953, 1002, 1147, 1381, 1624, 1818, 1882, 1883, 1898, 1925, 1926, 1928, 1935, 1939, 1943], "input_var": [5, 1381], "person": [6, 7, 9], "land": [6, 9, 10, 24], "six": [6, 1374], "commit": [6, 7, 9, 24, 33, 66, 1879, 1880, 1919, 1920], "repositori": [6, 9, 69, 73, 1879, 1918], "submit": [6, 9, 24, 988, 989, 991, 1908, 1920], "month": [6, 9], "qualifi": [6, 42, 47, 56, 73, 693, 1212, 1444, 1891, 1927], "pr": [6, 7, 1719, 1831, 1949], "interest": [6, 7, 9, 13, 15, 17, 19, 21, 22, 25, 1905, 1911, 1913, 1916], "merge_rul": 6, "vote": [6, 9], "decis": [6, 14, 44, 50, 59, 61, 73, 1227, 1892, 1904], "criteria": [6, 9, 1284], "approv": [6, 9], "Not": [6, 20, 60, 1342, 1491, 1882, 1884, 1885, 1886, 1910, 1925, 1930, 1935], "busi": [6, 9, 22], "dai": [6, 7, 15, 24], "contributor": [6, 7, 8, 9], "seen": [6, 18, 20, 36, 48, 73, 238, 953, 966, 1313, 1375, 1376, 1377, 1475, 1567, 1568, 1569, 1713, 1882, 1892, 1905, 1908, 1923, 1939], "thumb": [6, 42], "acceler": [7, 11, 16, 40, 1362, 1363, 1364, 1483, 1683, 1914], "deep": [7, 9, 14, 16, 26, 29, 73, 1362, 1363, 1364, 1386, 1483, 1699, 1880, 1903, 1916, 1930], "neural": [7, 8, 14, 34, 73, 1356, 1367, 1382, 1389, 1398, 1410, 1443, 1444, 1451, 1456, 1457, 1471, 1473, 1487, 1489, 1491, 1573, 1596, 1634, 1697, 1705, 1711, 1882, 1884, 1885, 1903, 1908, 1910, 1919, 1923, 1930], "tape": [7, 11], "system": [7, 8, 14, 25, 33, 34, 35, 39, 60, 70, 73, 959, 973, 1165, 1219, 1243, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1272, 1273, 1274, 1278, 1283, 1302, 1329, 1487, 1489, 1491, 1624, 1634, 1636, 1774, 1853, 1886, 1891, 1895, 1905, 1907, 1908, 1915, 1916, 1918, 1922, 1927, 1935], "organ": [7, 16, 20, 1909, 1915, 1927], "govern": [7, 8, 1880, 1930], "technic": [7, 9, 14, 21, 59, 73, 1212, 1444, 1620, 1621, 1880, 1905, 1912, 1918, 1927], "md": [7, 73, 805, 1927], "healthi": [7, 50, 59], "team": [7, 42, 66, 98, 99, 1921, 1928], "commun": [7, 8, 9, 16, 19, 21, 43, 44, 46, 50, 59, 61, 65, 693, 1624, 1905, 1909, 1935, 1936], "project": [7, 28, 44, 1313, 1414, 1450, 1636, 1719, 1879, 1914], "ve": [7, 15, 16, 20, 21, 68, 69, 70, 73, 1216, 1892, 1897, 1905, 1911, 1936, 1944], "come": [7, 8, 9, 18, 20, 23, 39, 47, 48, 49, 56, 59, 66, 70, 966, 1085, 1136, 1142, 1283, 1383, 1384, 1385, 1389, 1410, 1680, 1889, 1893, 1909, 1911, 1915, 1927, 1935, 1937, 1939], "peopl": [7, 19, 22, 1905, 1930], "scratch": [7, 29, 1905], "itch": 7, "acquaint": 7, "tip": [7, 16, 1908], "tracker": [7, 1284], "confirm": [7, 16, 23, 1879, 1882, 1910, 1923, 1935, 1937], "tend": [7, 916, 1865], "bootcamp": 7, "1hr": 7, "although": [7, 8, 25, 28, 47, 48, 70, 73, 1375, 1376, 1377, 1444, 1452, 1624, 1880, 1885, 1904, 1910, 1919, 1928, 1930], "join": [7, 40, 42, 46, 59, 60, 72, 73, 1624, 1879, 1880, 1886, 1897, 1905, 1909, 1918, 1925, 1945], "u": [7, 8, 14, 16, 20, 22, 29, 66, 71, 73, 74, 773, 914, 957, 958, 959, 1248, 1250, 1254, 1258, 1259, 1275, 1301, 1303, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1396, 1397, 1414, 1415, 1429, 1431, 1459, 1461, 1462, 1483, 1494, 1636, 1719, 1830, 1831, 1881, 1882, 1883, 1892, 1899, 1903, 1905, 1908, 1909, 1910, 1911, 1916, 1927, 1929, 1939, 1943, 1944], "dev": [7, 10, 26, 29, 51, 56], "happi": 7, "research": [7, 8, 9, 1624, 1879, 1905, 1913, 1921], "partner": 7, "speed": [7, 8, 20, 21, 33, 46, 997, 1085, 1141, 1203, 1216, 1221, 1275, 1352, 1450, 1830, 1905, 1907, 1908, 1909, 1910, 1912, 1914, 1919, 1930, 1935], "reach": [7, 8, 9, 13, 39, 40, 42, 43, 50, 59, 66, 1284, 1624, 1702, 1705, 1708, 1709, 1905, 1910, 1918, 1928, 1930, 1931, 1935], "design": [7, 9, 14, 16, 19, 26, 29, 39, 48, 56, 59, 66, 69, 70, 71, 921, 922, 1212, 1231, 1444, 1678, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1841, 1879, 1880, 1881, 1895, 1908, 1910, 1914, 1916, 1927], "comment": [7, 22, 73, 1668, 1769, 1885, 1886, 1910, 1942, 1944], "crack": 7, "usual": [7, 15, 22, 33, 39, 40, 44, 59, 60, 73, 99, 101, 496, 844, 845, 846, 847, 854, 906, 914, 916, 920, 1153, 1383, 1384, 1385, 1389, 1404, 1407, 1408, 1409, 1410, 1615, 1624, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1872, 1882, 1885, 1900, 1904, 1905, 1907, 1908, 1910, 1912, 1915, 1926, 1931, 1933, 1935, 1944, 1950], "idea": [7, 16, 29, 66, 1085, 1352, 1624, 1908, 1915, 1923, 1936], "rfc": [7, 1905, 1930, 1936], "big": [7, 15, 22, 1686, 1687, 1690, 1696, 1697, 1812, 1813, 1814, 1815, 1816, 1817, 1926, 1930], "post": [7, 8, 15, 26, 29, 43, 44, 46, 65, 869, 870, 874, 1212, 1444, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1880, 1889, 1905, 1909, 1910, 1912, 1922, 1939], "standard": [7, 33, 36, 40, 48, 52, 53, 57, 70, 73, 101, 368, 393, 602, 1105, 1356, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1410, 1416, 1483, 1489, 1491, 1672, 1719, 1742, 1788, 1793, 1824, 1825, 1884, 1886, 1900, 1903, 1907, 1908, 1918, 1919, 1923, 1924, 1927, 1940], "lot": [7, 14, 15, 19, 20, 21, 22, 33, 39, 1897, 1905, 1908, 1913, 1918, 1927, 1928, 1934, 1936, 1944], "boil": 7, "mostli": [7, 48, 1210, 1624, 1908, 1939, 1950], "evid": 7, "peer": [7, 42, 46, 59, 65, 995, 1624, 1908, 1935], "paper": [7, 9, 40, 48, 773, 1352, 1356, 1362, 1363, 1364, 1366, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1386, 1389, 1392, 1393, 1396, 1399, 1402, 1407, 1408, 1409, 1416, 1450, 1456, 1457, 1462, 1471, 1475, 1483, 1487, 1489, 1491, 1492, 1493, 1538, 1539, 1548, 1686, 1687, 1698, 1705, 1711, 1913, 1928], "framework": [7, 8, 9, 48, 56, 66, 72, 773, 993, 1321, 1396, 1624, 1631, 1699, 1778, 1880, 1917, 1928, 1930, 1936, 1937], "bit": [7, 19, 20, 22, 73, 105, 346, 473, 774, 776, 778, 832, 833, 834, 835, 838, 840, 871, 939, 942, 977, 978, 1138, 1192, 1753, 1754, 1766, 1795, 1908, 1916, 1919, 1922, 1930, 1933, 1934, 1939, 1942, 1945, 1951], "accept": [7, 9, 29, 39, 42, 44, 47, 66, 67, 69, 71, 167, 527, 815, 902, 903, 904, 905, 906, 911, 920, 956, 1028, 1031, 1137, 1153, 1174, 1212, 1216, 1380, 1444, 1451, 1472, 1491, 1643, 1657, 1658, 1664, 1682, 1770, 1807, 1821, 1872, 1885, 1899, 1908, 1910, 1911, 1923, 1926, 1935, 1942, 1944], "overwhelm": [7, 16, 29, 1935], "newli": [7, 20, 65, 73, 1099, 1100, 1387, 1388, 1731, 1732, 1889], "publish": [7, 9, 51, 56, 59, 1284, 1880], "ground": [7, 9, 1380, 1526, 1944], "break": [7, 11, 13, 14, 17, 18, 20, 22, 23, 48, 63, 68, 73, 693, 906, 966, 968, 1212, 1257, 1444, 1758, 1778, 1880, 1886, 1891, 1909, 1926, 1939], "becom": [7, 8, 9, 16, 20, 29, 39, 42, 48, 73, 306, 773, 889, 1165, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1396, 1414, 1429, 1449, 1459, 1472, 1526, 1543, 1615, 1703, 1803, 1851, 1892, 1893, 1905, 1909, 1910, 1923, 1927, 1929, 1935], "refactor": [7, 17, 73, 1922, 1930], "coordin": [7, 16, 29, 42, 44, 48, 50, 596, 599, 897, 1165, 1174, 1313, 1723, 1815, 1855, 1857, 1905, 1939, 1944], "pace": 7, "branch": [7, 14, 24, 73, 74, 77, 79, 81, 82, 1879, 1884, 1885, 1908], "fast": [7, 8, 15, 19, 22, 39, 42, 921, 1386, 1407, 1408, 1409, 1475, 1491, 1593, 1711, 1717, 1736, 1758, 1773, 1880, 1907, 1908, 1910, 1914, 1926, 1935, 1939, 1942, 1943], "definit": [7, 8, 20, 39, 42, 43, 48, 55, 73, 99, 957, 958, 959, 984, 1028, 1133, 1232, 1241, 1242, 1284, 1410, 1555, 1600, 1671, 1749, 1851, 1879, 1882, 1884, 1886, 1904, 1905, 1910, 1913, 1927, 1930, 1944, 1946], "fundament": [7, 15, 70, 1884, 1916, 1935, 1939], "cut": [7, 16], "guidanc": [7, 9, 14, 34, 67, 1928], "stage": [7, 29, 36, 40, 46, 56, 65, 72, 1880, 1892, 1900, 1928, 1937], "piec": [7, 20, 1891, 1900, 1936], "advic": 7, "readi": [7, 11, 21, 33, 72, 874, 875, 935, 944, 1169, 1170, 1624, 1882, 1909, 1935, 1936], "draft": 7, "convert": [7, 20, 28, 29, 39, 42, 47, 48, 49, 65, 69, 73, 96, 167, 593, 597, 598, 599, 600, 601, 748, 801, 802, 803, 805, 806, 807, 828, 829, 830, 851, 852, 867, 870, 871, 872, 892, 893, 952, 965, 1069, 1105, 1136, 1212, 1281, 1444, 1454, 1455, 1483, 1490, 1615, 1626, 1627, 1630, 1667, 1678, 1680, 1681, 1700, 1731, 1732, 1737, 1812, 1813, 1814, 1815, 1816, 1817, 1882, 1883, 1884, 1885, 1900, 1910, 1914, 1923, 1924, 1930, 1933, 1939, 1944, 1946, 1949], "press": [7, 73], "button": [7, 24], "prepend": [7, 33, 39, 42, 46, 73, 246, 1077, 1212, 1306, 1444, 1847, 1883, 1906], "titl": [7, 1925, 1929], "wip": 7, "progress": [7, 42, 46, 50, 60, 62, 988, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1866, 1879, 1894], "ci": [7, 24, 1880], "folk": 7, "who": [7, 8, 9, 20, 21, 31, 59, 74, 1927], "regularli": 7, "queue": [7, 50, 61, 1897, 1944], "everyth": [7, 14, 16, 20, 22, 29, 39, 48, 69, 74, 1882, 1897, 1927], "happen": [7, 9, 11, 20, 21, 42, 44, 46, 48, 50, 52, 59, 65, 70, 73, 101, 620, 804, 827, 1142, 1483, 1624, 1631, 1702, 1708, 1709, 1715, 1830, 1880, 1895, 1897, 1905, 1908, 1909, 1910, 1911, 1912, 1917, 1918, 1922, 1923, 1930, 1935, 1943], "subsystem": [7, 31, 66, 71, 968, 1880, 1910], "patch": [7, 17, 67, 1391, 1495], "feel": [7, 1900, 1923, 1939], "ll": [7, 12, 15, 22, 25, 70, 73, 773, 833, 834, 874, 875, 957, 1031, 1241, 1396, 1397, 1414, 1415, 1892, 1905, 1908, 1910, 1911, 1918, 1923, 1930, 1936], "round": [7, 39, 42, 74, 76, 82, 522, 678, 679, 812, 815, 833, 878, 980, 982, 1042, 1080, 1106, 1107, 1108, 1112, 1116, 1117, 1118, 1133, 1257, 1270, 1496, 1554, 1729, 1730, 1749, 1798, 1881, 1883, 1885, 1898, 1908, 1925, 1930, 1933, 1939, 1940], "trip": [7, 73, 1106, 1107, 1108, 1112, 1116, 1117, 1118], "noth": [7, 33, 50, 73, 693, 1022, 1636, 1686, 1687, 1714, 1882, 1884, 1937], "accompani": [7, 97], "solut": [7, 8, 70, 1256, 1257, 1261, 1269, 1272, 1274, 1278, 1360, 1624, 1853, 1882, 1883, 1903, 1904, 1912, 1918], "think": [7, 9, 15, 16, 17, 73, 74, 1700, 1882, 1884, 1905, 1926, 1927, 1937], "confid": [7, 17, 1944], "ahead": [7, 14, 16, 1880, 1930], "search": [7, 12, 15, 24, 29, 31, 40, 832, 950, 1402, 1548, 1624, 1681, 1736, 1765, 1882, 1898, 1899, 1923, 1927, 1939], "repo": [7, 74, 1705, 1879, 1910, 1922], "unabl": [7, 27, 29, 70, 96, 1923, 1926], "similar": [7, 9, 14, 15, 16, 20, 23, 29, 39, 42, 48, 56, 65, 70, 72, 73, 507, 529, 725, 726, 727, 728, 729, 730, 733, 743, 744, 745, 746, 758, 759, 769, 777, 815, 890, 905, 947, 952, 965, 1131, 1132, 1212, 1378, 1379, 1391, 1404, 1407, 1408, 1409, 1444, 1492, 1525, 1657, 1671, 1672, 1700, 1723, 1751, 1758, 1807, 1841, 1847, 1863, 1884, 1885, 1897, 1898, 1900, 1905, 1907, 1908, 1910, 1911, 1913, 1919, 1923, 1927, 1928, 1930, 1935, 1936, 1939, 1940, 1945, 1951], "reproduc": [7, 16, 29, 39, 70, 329, 337, 529, 531, 937, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1440, 1441, 1442, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1535, 1543, 1554, 1581, 1593, 1612, 1613, 1614, 1615, 1865, 1879, 1880, 1926, 1927], "problemat": [7, 39, 73, 1882, 1919, 1931], "insight": [7, 36], "individu": [7, 9, 11, 19, 22, 24, 33, 39, 40, 42, 44, 46, 65, 73, 97, 258, 693, 805, 851, 852, 957, 1051, 1103, 1121, 1212, 1367, 1444, 1483, 1624, 1678, 1885, 1898, 1904, 1905, 1908, 1910, 1915, 1919, 1920, 1923, 1933, 1935, 1946], "intent": [7, 23, 57, 59, 70, 1770, 1892, 1927], "lock": [7, 39, 42, 46, 48, 1905, 1908, 1918, 1927, 1936], "strike": 7, "convers": [7, 15, 28, 473, 593, 596, 806, 951, 1197, 1657, 1880, 1886, 1910, 1914, 1923, 1930, 1931, 1939], "medium": [7, 65, 1773], "prioriti": [7, 9, 10, 42, 693, 867, 991, 1884, 1921], "entranc": [7, 1908], "great": [7, 11, 14, 1905, 1913], "deal": [7, 8, 14, 15, 20, 22, 39, 50, 61, 1846, 1897, 1912, 1935], "welcom": [7, 1900, 1926, 1939], "aim": [7, 1911, 1939], "rare": [7, 14, 17, 1904, 1923, 1950], "typo": 7, "send": [7, 15, 19, 39, 42, 50, 61, 1024, 1615, 1624, 1897, 1909, 1918, 1922, 1925, 1929, 1935, 1936, 1937, 1947, 1949], "forum": [7, 9, 1912, 1918], "share": [7, 10, 11, 17, 18, 33, 39, 43, 46, 48, 49, 59, 60, 65, 70, 238, 327, 356, 473, 498, 534, 537, 630, 872, 892, 893, 910, 921, 922, 966, 986, 988, 1020, 1024, 1136, 1137, 1138, 1182, 1259, 1343, 1344, 1381, 1624, 1634, 1672, 1747, 1761, 1821, 1844, 1850, 1864, 1883, 1904, 1905, 1907, 1918, 1921, 1922, 1923, 1935, 1939, 1941, 1943, 1948], "resolv": [7, 8, 9, 14, 44, 48, 73, 96, 97, 1212, 1375, 1376, 1377, 1391, 1441, 1444, 1884, 1885, 1886, 1922, 1927, 1941, 1950], "challeng": [7, 16, 42, 1936], "feedback": [7, 29, 36, 40, 65, 66, 1624, 1880, 1939], "direct": [7, 9, 20, 28, 31, 42, 773, 805, 1126, 1127, 1212, 1396, 1414, 1444, 1459, 1668, 1698, 1719, 1736, 1757, 1905, 1908, 1910, 1916, 1935], "yourself": [7, 16, 68, 986, 1910, 1916, 1918, 1950], "problem": [7, 14, 16, 21, 29, 39, 42, 59, 70, 74, 1085, 1227, 1257, 1269, 1284, 1380, 1451, 1508, 1769, 1897, 1905, 1908, 1912, 1913, 1918, 1922, 1928, 1930, 1931, 1937, 1942], "area": [7, 9, 1554, 1916, 1930, 1940], "appreci": 7, "strive": 7, "respond": [7, 42], "quickli": [7, 8, 19, 40, 59], "ey": [7, 48, 208, 225, 958, 1153, 1232, 1241, 1252, 1263, 1266, 1269, 1270, 1277, 1278, 1631, 1729, 1808, 1872, 1883, 1887, 1910, 1925], "everyon": [7, 50, 59], "touch": [7, 57, 73], "versu": [7, 1448], "write": [7, 8, 9, 14, 16, 19, 21, 22, 29, 36, 39, 42, 44, 47, 50, 52, 56, 57, 58, 59, 65, 70, 71, 96, 97, 270, 527, 710, 948, 968, 1137, 1153, 1189, 1222, 1242, 1253, 1254, 1255, 1259, 1260, 1273, 1611, 1679, 1761, 1853, 1865, 1872, 1880, 1884, 1895, 1899, 1908, 1911, 1912, 1913, 1926, 1927, 1939, 1944], "blog": [7, 8, 1889, 1909, 1910, 1930, 1939], "around": [7, 9, 11, 20, 27, 29, 31, 42, 48, 69, 70, 72, 73, 167, 637, 906, 920, 986, 988, 989, 991, 1060, 1131, 1132, 1142, 1212, 1624, 1758, 1882, 1897, 1905, 1908, 1923, 1935], "internet": 7, "grow": [7, 8, 19, 73, 1939], "market": [7, 9], "benefit": [7, 8, 29, 42, 73, 860, 1713, 1897, 1908, 1930, 1939], "opinion": [7, 8, 1939], "isn": [7, 15, 39, 73, 473, 1209, 1905, 1908, 1910, 1935, 1946], "categor": [7, 28, 52, 1545, 1880, 1886, 1931, 1935], "aspect": [7, 42, 73, 1910, 1916], "seem": [7, 1923], "unusu": [7, 15], "claim": [7, 1711, 1913], "wast": [7, 1908], "someon": [7, 9, 1210, 1899], "too": [7, 9, 14, 15, 21, 29, 33, 40, 44, 59, 65, 70, 73, 1042, 1141, 1257, 1275, 1340, 1367, 1380, 1444, 1527, 1625, 1666, 1885, 1907, 1912, 1913, 1918, 1919, 1920, 1922, 1924, 1927, 1928, 1937, 1939], "advisori": 7, "fashion": [7, 39, 42, 61, 529, 1289, 1647, 1882], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 29], "wrote": [7, 8], "implicitli": [7, 42, 52, 65, 73, 1068, 1157, 1165, 1227, 1228, 1283, 1357, 1358, 1359, 1437, 1438, 1439, 1770, 1851, 1882, 1884, 1885, 1905, 1910, 1914], "lifetim": [7, 15, 1908, 1935], "immedi": [7, 8, 9, 14, 15, 59, 60, 65, 72, 1212, 1215, 1444, 1885, 1916, 1921, 1926, 1935, 1937], "sai": [7, 11, 14, 20, 22, 28, 73, 510, 1145, 1146, 1147, 1212, 1444, 1882, 1904, 1905, 1912, 1927, 1936, 1937, 1939], "bugfix": 7, "Or": [7, 20, 50, 73, 961, 1914, 1917, 1923, 1939], "motiv": [7, 8, 16, 29, 73, 748, 1916, 1936], "ye": [7, 1923, 1926, 1939], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1382, 1624], "ok": [7, 18, 52, 57, 69, 966, 1217, 1937], "sometim": [7, 14, 15, 22, 73, 917, 1042, 1227, 1391, 1495, 1521, 1522, 1523, 1636, 1880, 1885, 1897, 1905, 1908, 1911, 1912, 1916, 1918, 1927, 1942, 1945, 1950], "obvious": [7, 15, 19], "broken": [7, 39, 1042, 1923, 1927], "contrari": [7, 1907], "accident": 7, "put": [7, 9, 15, 17, 27, 39, 42, 50, 69, 72, 73, 335, 1105, 1283, 1399, 1705, 1879, 1883, 1897, 1908, 1918, 1925, 1927, 1936, 1937], "difficulti": [7, 1903], "nonlinearli": 7, "sign": [7, 48, 357, 542, 897, 979, 1073, 1121, 1133, 1138, 1245, 1270, 1271, 1292, 1436, 1698, 1749, 1781, 1795, 1881, 1883, 1898, 1925, 1933, 1939, 1942, 1945, 1946], "split": [7, 25, 39, 42, 73, 630, 785, 786, 787, 872, 874, 875, 953, 960, 1042, 1083, 1175, 1381, 1395, 1396, 1414, 1450, 1459, 1518, 1519, 1520, 1521, 1522, 1523, 1542, 1845, 1873, 1882, 1883, 1898, 1908, 1925, 1927, 1928, 1930, 1935, 1939, 1943], "shippabl": 7, "complet": [7, 17, 20, 24, 25, 27, 33, 39, 42, 44, 50, 51, 57, 59, 61, 70, 72, 501, 693, 874, 968, 988, 989, 991, 1061, 1141, 1142, 1215, 1223, 1225, 1230, 1242, 1270, 1325, 1326, 1331, 1508, 1624, 1633, 1666, 1729, 1880, 1884, 1885, 1886, 1891, 1897, 1904, 1905, 1908, 1911, 1914, 1920, 1927, 1928, 1935, 1936], "subtl": [7, 15, 16, 29, 1407, 1408, 1409, 1910], "nuanc": [7, 20, 21], "extra": [7, 15, 20, 22, 33, 39, 40, 42, 46, 48, 65, 73, 1085, 1142, 1153, 1212, 1219, 1222, 1257, 1283, 1444, 1451, 1631, 1826, 1872, 1884, 1899, 1905, 1907, 1909, 1910, 1912, 1915, 1927, 1929, 1939, 1946, 1947], "understand": [7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 29, 42, 44, 50, 51, 74, 1142, 1269, 1880, 1889, 1903, 1905, 1908, 1914, 1921, 1929, 1944], "hack": 7, "answer": [7, 10, 15, 73, 837, 1361, 1649], "regress": [7, 11, 23, 1360, 1920], "scrutini": 7, "undertak": 7, "rest": [7, 17, 20, 22, 25, 39, 40, 60, 73, 806, 827, 1138, 1277, 1278, 1845, 1899, 1916, 1920, 1927, 1928, 1930, 1935, 1939], "chanc": [7, 15, 22, 44, 48, 1910], "unrel": [7, 973, 1151, 1904, 1910, 1927], "aid": [7, 29, 73, 1905], "troubleshoot": [7, 42, 1880], "mayb": [7, 15, 1149], "bracnh": 7, "rebas": 7, "latest": [7, 42, 46, 48, 1643, 1879, 1910, 1914, 1923], "statu": [7, 9, 50, 1301, 1880, 1886, 1897, 1930], "hud": 7, "risk": [7, 8, 65, 1633, 1636], "anyth": [7, 14, 49, 52, 72, 836, 839, 1223, 1700, 1882, 1889, 1900, 1916, 1927], "configur": [7, 14, 16, 18, 24, 25, 29, 32, 39, 40, 42, 50, 51, 56, 59, 60, 61, 65, 801, 802, 805, 806, 810, 827, 828, 829, 830, 836, 839, 851, 852, 853, 856, 858, 861, 871, 872, 873, 874, 875, 966, 1042, 1624, 1657, 1774, 1865, 1880, 1891, 1895, 1908, 1909, 1910, 1920, 1922, 1927, 1933, 1935, 1944, 1946], "riski": 7, "had": [7, 14, 19, 23, 73, 1227, 1615, 1847, 1905, 1911], "beforehand": [7, 16, 72], "hei": 7, "my": [7, 39, 1381, 1915, 1923, 1930], "member": [7, 9, 39, 42, 50, 59, 60, 73, 1212, 1398, 1444, 1540, 1882, 1884, 1885, 1895, 1912, 1929, 1935, 1946, 1947], "sphinx": 7, "folder": [7, 9, 19, 29, 33, 39, 73, 1681, 1879, 1944], "tree": [7, 18, 52, 69, 966, 1444, 1487, 1681, 1880, 1923, 1927, 1929, 1937], "master": [7, 18, 42, 62, 805, 966, 1142, 1487, 1879, 1935], "doxygen": 7, "special": [7, 13, 14, 15, 18, 20, 23, 31, 52, 61, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 754, 755, 756, 836, 839, 921, 966, 1078, 1092, 1093, 1094, 1096, 1097, 1106, 1108, 1179, 1180, 1181, 1225, 1283, 1297, 1337, 1381, 1491, 1625, 1626, 1627, 1670, 1700, 1724, 1782, 1793, 1797, 1876, 1880, 1886, 1891, 1899, 1908, 1910, 1913, 1915, 1923, 1927, 1930, 1943, 1944], "server": [7, 39, 42, 60, 1216, 1908, 1927, 1930, 1935], "cppdoc": [7, 34], "cpp": [7, 14, 33, 42, 1334, 1909], "accomplish": [7, 16, 44, 1916], "holist": 7, "concept": [7, 17, 70, 73, 1889, 1910, 1911, 1916, 1942], "galleri": 7, "restructur": [7, 1927], "text": [7, 19, 39, 48, 85, 90, 91, 92, 93, 94, 95, 170, 171, 190, 621, 630, 694, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 711, 758, 759, 769, 771, 773, 777, 781, 782, 783, 785, 786, 787, 793, 797, 833, 834, 878, 894, 895, 896, 897, 898, 934, 935, 936, 939, 942, 944, 946, 955, 961, 978, 979, 981, 982, 984, 1080, 1099, 1100, 1129, 1130, 1134, 1135, 1156, 1168, 1169, 1170, 1171, 1178, 1201, 1209, 1232, 1235, 1236, 1237, 1240, 1241, 1248, 1251, 1257, 1261, 1266, 1269, 1275, 1282, 1291, 1298, 1299, 1300, 1301, 1333, 1334, 1345, 1346, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1447, 1448, 1449, 1450, 1451, 1452, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1510, 1511, 1512, 1514, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1526, 1529, 1530, 1531, 1536, 1539, 1541, 1542, 1543, 1547, 1548, 1558, 1563, 1567, 1568, 1569, 1573, 1578, 1581, 1586, 1587, 1589, 1593, 1594, 1595, 1596, 1599, 1600, 1601, 1603, 1604, 1605, 1629, 1631, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1705, 1722, 1723, 1726, 1729, 1742, 1745, 1748, 1760, 1781, 1783, 1784, 1796, 1798, 1808, 1809, 1819, 1826, 1827, 1830, 1842, 1843, 1875, 1900, 1903, 1913, 1923, 1927, 1933, 1940, 1944, 1946], "rst": 7, "rebuild": [7, 40], "circleci": 7, "shard": [7, 16, 39, 44, 46, 47, 65, 1624], "worker": [7, 33, 39, 40, 42, 43, 46, 50, 51, 52, 53, 59, 61, 62, 65, 1624, 1885, 1920, 1928, 1929, 1935, 1936, 1937], "40": [7, 13, 1165, 1284, 1365, 1407, 1631, 1632, 1655, 1656, 1665, 1668, 1841], "minut": [7, 10, 42, 1944], "netlifi": 7, "noplot": 7, "render": [7, 42, 1944], "notebook": 7, "rebuilt": [7, 40, 46], "deploi": [7, 50, 59, 1880, 1915, 1921, 1927], "action": [7, 42, 48, 50, 53, 73, 1908, 1927, 1929, 1937], "document": [8, 9, 10, 12, 16, 20, 22, 23, 28, 35, 39, 42, 65, 66, 73, 693, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 886, 887, 888, 889, 951, 988, 989, 991, 1042, 1085, 1157, 1160, 1161, 1193, 1200, 1212, 1325, 1326, 1341, 1352, 1387, 1388, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1444, 1633, 1642, 1651, 1671, 1728, 1755, 1772, 1865, 1879, 1882, 1884, 1885, 1896, 1897, 1898, 1899, 1901, 1904, 1910, 1912, 1916, 1920, 1921, 1923, 1926, 1927, 1930, 1931, 1932, 1935, 1939, 1943, 1947], "develop": [8, 9, 10, 21, 29, 33, 40, 42, 73, 1881, 1884, 1885, 1892, 1896, 1905, 1910, 1915, 1916, 1920, 1927, 1930, 1931, 1935, 1939], "meant": [8, 43, 59, 61, 1657, 1904, 1935], "rule": [8, 9, 15, 33, 42, 48, 73, 74, 81, 82, 99, 100, 167, 873, 905, 906, 950, 951, 1068, 1261, 1272, 1362, 1363, 1364, 1407, 1408, 1409, 1483, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1765, 1851, 1880, 1882, 1884, 1898, 1900, 1905, 1906, 1910, 1913, 1942, 1946], "concern": [8, 25, 39, 1897, 1908, 1923], "disagr": 8, "contribut": [8, 9, 44, 930, 1173, 1174, 1380, 1387, 1388, 1451, 1526, 1534, 1535, 1578, 1624, 1880, 1900, 1910, 1911, 1928], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 19], "obsess": 8, "soumith": [8, 10], "goe": [8, 17, 20, 73, 1138, 1356, 1686, 1687, 1912], "depth": [8, 9, 792, 798, 1046, 1047, 1225, 1359, 1374, 1377, 1439, 1496, 1554, 1612, 1892, 1909, 1916, 1929], "primari": [8, 9, 15, 42, 73, 1221, 1886, 1892, 1939], "goal": [8, 19, 56, 69, 73, 1313, 1892, 1905, 1909, 1913, 1924, 1937], "secondari": 8, "abil": [8, 1761, 1892, 1915, 1927], "flexibl": [8, 20, 40, 65, 69, 1268, 1624, 1892, 1908, 1910, 1916], "abstract": [8, 11, 20, 39, 40, 43, 44, 48, 50, 59, 61, 923, 924, 925, 926, 927, 1638, 1885, 1909, 1930, 1935], "critic": [8, 16, 17, 20, 59, 693, 1632, 1665, 1895, 1907, 1908], "concret": [8, 14, 15, 18, 20, 48, 62, 69, 73, 798, 813, 837, 854, 966, 1496, 1581, 1612, 1882, 1885, 1908, 1910, 1918], "manner": [8, 50, 527, 914, 916, 1899, 1901, 1906], "jump": [8, 573, 1942], "regim": 8, "ei": 8, "tradeoff": [8, 16, 23, 40, 1930, 1936], "temptat": 8, "impos": [8, 61, 71, 1769, 1897, 1904, 1942], "strict": [8, 914, 915, 916, 917, 918, 919, 1141, 1148, 1212, 1227, 1228, 1444, 1666, 1927, 1944, 1946], "upfront": [8, 14], "simplifi": [8, 14, 40, 72, 1219, 1434, 1632, 1700, 1892, 1905, 1913, 1916, 1926, 1936], "worth": [8, 9, 20, 22, 39, 40, 62, 1142, 1879, 1943], "friction": 8, "compel": 8, "narrow": [8, 16, 29, 1281, 1344, 1700, 1788, 1883, 1885, 1898, 1925, 1932, 1943], "subproblem": 8, "fragment": [8, 29, 1010, 1042, 1889, 1908], "ecosystem": [8, 19, 1915, 1917], "incomprehens": 8, "seamlessli": [8, 1900], "softwar": [8, 1247, 1248, 1275, 1865, 1908, 1914], "experi": [8, 9, 17, 21, 26, 29, 31, 40, 71, 85, 90, 91, 92, 93, 94, 95, 1153, 1473, 1596, 1624, 1872, 1892, 1910, 1944], "rich": [8, 1885], "denomin": [8, 700, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1733], "subset": [8, 39, 42, 46, 60, 1223, 1700, 1881, 1882, 1884, 1885, 1910, 1923, 1933], "borrow": 8, "zen": 8, "implicit": [8, 100, 781, 782, 785, 786, 787, 1157, 1165, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1437, 1438, 1439, 1495, 1510, 1511, 1512, 1518, 1519, 1520, 1567, 1568, 1569, 1717, 1881, 1883, 1885, 1886, 1923, 1927, 1943], "concis": [8, 52, 1935], "interchang": [8, 48, 1697, 1850, 1884, 1914, 1924], "everydai": 8, "english": 8, "movement": [8, 1943], "worri": [8, 1935], "placement": [8, 16, 47, 50, 872, 1615, 1930, 1935], "favor": [8, 20, 42, 798, 799, 800, 957, 968, 1054, 1058, 1212, 1266, 1269, 1301, 1302, 1403, 1444, 1497, 1498, 1612, 1613, 1614, 1616, 1729, 1830, 1853], "practition": 8, "debugg": [8, 16, 29, 1217, 1913], "plug": 8, "ir": [8, 14, 15, 16, 21, 29, 73, 773, 1215, 1216, 1396, 1397, 1681, 1880, 1882, 1885, 1923, 1924], "classic": [8, 1905], "sort": [8, 14, 20, 46, 50, 73, 603, 622, 889, 890, 911, 1085, 1172, 1332, 1352, 1658, 1659, 1670, 1730, 1765, 1848, 1862, 1881, 1883, 1885, 1910, 1912, 1925, 1939], "distribut": [8, 21, 31, 39, 40, 43, 50, 51, 52, 53, 56, 57, 58, 59, 61, 62, 65, 72, 190, 274, 302, 393, 469, 496, 621, 693, 708, 709, 832, 936, 1059, 1334, 1352, 1356, 1380, 1381, 1382, 1383, 1384, 1385, 1389, 1394, 1398, 1410, 1458, 1462, 1483, 1526, 1528, 1529, 1530, 1531, 1536, 1540, 1541, 1545, 1555, 1586, 1624, 1672, 1722, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1880, 1885, 1899, 1900, 1903, 1904, 1908, 1928, 1929, 1931, 1937, 1940, 1944, 1947], "tldr": 8, "resourc": [8, 16, 24, 33, 39, 50, 55, 59, 73, 1885, 1897, 1918, 1939], "characterist": [8, 1831, 1911, 1916], "uniformli": [8, 48, 1740, 1741, 1946], "leak": [8, 906, 912, 1885, 1897, 1905], "smart": [8, 1910, 1927, 1935], "anywai": [8, 1905], "obviou": [8, 15, 1912, 1937], "extens": [8, 15, 16, 29, 33, 36, 42, 44, 47, 48, 1283, 1284, 1761, 1781, 1880, 1892, 1900, 1904, 1921, 1927, 1939], "unavoid": 8, "latenc": [8, 16, 24, 56, 1907, 1908], "caveat": [8, 12, 23, 29, 65, 1615, 1664, 1892, 1897, 1908, 1916, 1921], "valuabl": 8, "certainli": [8, 1892], "heterogen": [8, 1884], "cluster": [8, 42, 44, 58, 59, 60, 1352, 1944], "focus": [8, 29, 1884, 1885, 1910], "beaten": 8, "space": [8, 9, 39, 48, 785, 786, 787, 1068, 1103, 1105, 1107, 1108, 1114, 1121, 1165, 1174, 1227, 1228, 1282, 1298, 1352, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1410, 1420, 1421, 1422, 1423, 1424, 1425, 1438, 1439, 1495, 1518, 1519, 1520, 1521, 1522, 1523, 1555, 1851, 1883, 1901, 1905, 1913, 1916, 1921], "innov": 8, "ultim": [8, 9, 33, 52, 61, 65, 1909], "evidenc": 8, "began": 8, "bind": [8, 33, 42, 73, 1022, 1885, 1886, 1910, 1927], "monolith": 8, "deepli": 8, "integr": [8, 12, 39, 47, 53, 69, 171, 936, 938, 939, 940, 941, 942, 943, 984, 1068, 1173, 1212, 1235, 1279, 1280, 1343, 1444, 1736, 1748, 1851, 1900, 1910, 1915, 1916, 1926, 1928, 1930, 1940, 1942, 1946], "numpi": [8, 39, 70, 463, 507, 706, 707, 712, 890, 892, 893, 910, 1080, 1082, 1083, 1085, 1103, 1124, 1125, 1126, 1127, 1131, 1132, 1137, 1153, 1175, 1242, 1243, 1253, 1264, 1266, 1267, 1268, 1269, 1270, 1275, 1276, 1279, 1281, 1313, 1318, 1723, 1748, 1751, 1758, 1770, 1778, 1812, 1813, 1814, 1815, 1816, 1817, 1830, 1832, 1833, 1841, 1844, 1845, 1847, 1869, 1872, 1873, 1892, 1906, 1910, 1911, 1919, 1920, 1922, 1927, 1942, 1943, 1944, 1945, 1946, 1951], "scipi": [8, 954, 1258, 1259, 1583, 1723, 1927, 1938, 1940, 1944], "scikit": [8, 1554], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1922], "year": [8, 1939], "rewrot": 8, "frontend": [8, 16, 34, 69, 73, 1924], "familiar": [8, 16, 28, 34, 73, 1041, 1882, 1905, 1911, 1927, 1930, 1936, 1937], "perhap": [8, 20, 1911], "importantli": [8, 20], "huge": [8, 1831, 1895], "scientif": [8, 1778], "pareto": [8, 1880], "close": [8, 34, 42, 59, 73, 74, 77, 81, 950, 1024, 1201, 1247, 1248, 1274, 1275, 1301, 1361, 1475, 1493, 1516, 1765, 1830, 1853, 1895, 1905, 1910, 1919, 1923, 1927, 1930, 1935, 1944, 1946], "curv": [8, 1944], "torchdynamo": [8, 12, 14, 18, 19, 20, 26, 74, 83, 693, 966, 968, 1677, 1880, 1891], "frame": [8, 13, 14, 16, 17, 18, 26, 29, 73, 966, 1209, 1826, 1912, 1944], "torch_funct": [8, 1910], "torch_dispatch": 8, "torch": [8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 26, 28, 29, 31, 34, 36, 37, 40, 43, 46, 50, 51, 52, 53, 56, 57, 59, 61, 62, 65, 68, 74, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 96, 98, 100, 104, 105, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 907, 933, 986, 987, 988, 989, 991, 992, 1007, 1009, 1020, 1089, 1187, 1210, 1211, 1212, 1226, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1615, 1624, 1625, 1626, 1627, 1633, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1657, 1669, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1736, 1775, 1805, 1882, 1883, 1884, 1898, 1899, 1904, 1905, 1906, 1907, 1909, 1912, 1913, 1915, 1916, 1917, 1918, 1920, 1922, 1928, 1930, 1931, 1932, 1935, 1936, 1937, 1943], "fx": [8, 12, 13, 14, 15, 16, 19, 20, 26, 28, 29, 96, 760, 828, 829, 830, 831, 873, 1142, 1880, 1924, 1931, 1932], "tracer": [8, 20, 88, 1227, 1923, 1924, 1944, 1949], "functorch": [8, 12, 27, 66, 71, 74, 77, 81, 82, 84], "anchor": [8, 28, 73, 1492, 1493, 1609, 1610, 1883], "hackabl": 8, "todai": [8, 14, 17, 18, 27, 66, 71, 966, 1930], "evolv": [8, 1909], "ai": [8, 1923, 1940], "adopt": [9, 42, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778], "hierarch": [9, 1944], "pull": [9, 10, 15, 34, 73, 167, 906, 1923, 1927], "request": [9, 10, 14, 31, 42, 44, 61, 702, 874, 892, 893, 1042, 1284, 1306, 1316, 1560, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1879, 1900, 1904, 1905, 1907, 1908, 1923, 1927, 1935, 1936, 1937, 1939, 1940], "overseen": 9, "catch": [9, 17, 52, 1882, 1905, 1911, 1913], "maker": 9, "strong": 9, "toward": [9, 74, 1080, 1173, 1174, 1284, 1348, 1624, 1708, 1749, 1757, 1758, 1928], "philosophi": [9, 69, 1880], "beyond": [9, 40, 1329, 1380, 1686, 1687, 1696, 1756, 1912, 1916], "encourag": [9, 50, 1900, 1930, 1939, 1946], "propos": [9, 1683, 1703, 1704, 1892, 1913, 1926, 1936], "review": [9, 10, 20, 40, 1927], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 73], "codebas": [9, 1910], "strictli": [9, 39, 167, 208, 225, 906, 950, 1174, 1212, 1216, 1444, 1905, 1940], "compani": 9, "bui": 9, "addition": [9, 39, 40, 42, 48, 65, 167, 527, 630, 906, 1142, 1146, 1147, 1216, 1275, 1352, 1407, 1408, 1409, 1807, 1912, 1947], "membership": [9, 50, 58, 59, 1886], "That": [9, 27, 50, 57, 60, 67, 73, 1209, 1282, 1298, 1865, 1893, 1910, 1911, 1912, 1921, 1927, 1935], "seat": 9, "reserv": [9, 56, 1042, 1886, 1908, 1916], "emploi": [9, 1699, 1916, 1927, 1928], "directori": [9, 16, 17, 29, 33, 42, 44, 57, 1681, 1879, 1894, 1915, 1927, 1929, 1944], "procedur": [9, 29, 48, 872, 1227, 1228, 1284, 1805, 1935], "disput": 9, "made": [9, 11, 14, 20, 29, 44, 46, 47, 60, 73, 912, 922, 1212, 1444, 1489, 1491, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1746, 1884, 1892, 1905, 1922, 1927, 1944, 1946, 1950], "public": [9, 10, 1142, 1910, 1950], "relev": [9, 17, 19, 20, 22, 43, 50, 59, 65, 72, 693, 1275, 1886, 1904, 1905, 1927, 1930], "resolut": [9, 1456, 1457, 1508, 1543, 1584, 1585, 1851, 1886, 1927, 1951], "conclus": 9, "publicli": [9, 1950], "vision": [9, 19, 1221, 1380, 1526, 1879, 1880], "roadmap": [9, 10], "parti": [9, 59, 1879, 1880, 1882, 1908, 1911, 1916, 1927], "triag": [9, 10], "meet": [9, 10, 58, 1241, 1908], "Their": [9, 15, 1077, 1910], "articul": 9, "cohes": 9, "negoti": [9, 1935], "contenti": 9, "broad": [9, 1916], "stakehold": 9, "power": [9, 21, 58, 1048, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1128, 1235, 1265, 1279, 1412, 1413, 1564, 1565, 1632, 1665, 1683, 1712, 1726, 1750, 1866, 1886, 1908, 1939], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 14, 19, 48, 65, 1313, 1885, 1887, 1904, 1905, 1926, 1930, 1942], "merit": 9, "demonstr": [9, 19, 25, 60, 73, 74, 81, 82, 1367, 1882, 1916, 1921, 1928, 1935], "expertis": 9, "continu": [9, 12, 13, 17, 20, 39, 42, 48, 62, 65, 73, 418, 621, 832, 915, 1165, 1247, 1248, 1275, 1366, 1367, 1624, 1886, 1892, 1905, 1921, 1929, 1947], "light": [9, 1944], "mainten": [9, 59, 60], "emeritu": [9, 10], "inact": [9, 1042, 1908], "contact": 9, "item": [9, 11, 14, 15, 20, 39, 44, 74, 83, 596, 597, 598, 602, 805, 806, 807, 827, 828, 829, 830, 1212, 1380, 1444, 1445, 1454, 1636, 1778, 1879, 1881, 1882, 1883, 1884, 1885, 1898, 1908, 1923, 1925, 1927, 1935, 1944, 1945], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 39, 48, 73, 105, 418, 486, 558, 748, 870, 874, 876, 921, 935, 937, 944, 957, 958, 959, 1101, 1102, 1103, 1104, 1105, 1113, 1115, 1119, 1121, 1138, 1148, 1149, 1152, 1169, 1170, 1204, 1207, 1212, 1215, 1241, 1242, 1253, 1255, 1266, 1269, 1270, 1284, 1304, 1319, 1338, 1343, 1344, 1361, 1372, 1373, 1374, 1379, 1380, 1381, 1388, 1398, 1405, 1444, 1450, 1480, 1487, 1492, 1493, 1508, 1516, 1535, 1540, 1543, 1609, 1610, 1618, 1619, 1620, 1756, 1758, 1808, 1810, 1854, 1855, 1856, 1857, 1864, 1879, 1883, 1898, 1899, 1910, 1911, 1913, 1923, 1925, 1928, 1934, 1939, 1940, 1946, 1950, 1951], "neg": [9, 14, 31, 33, 39, 42, 48, 61, 73, 105, 456, 458, 473, 674, 675, 711, 768, 793, 937, 942, 979, 982, 991, 1007, 1013, 1014, 1042, 1054, 1101, 1102, 1103, 1104, 1105, 1106, 1120, 1121, 1122, 1128, 1138, 1202, 1204, 1206, 1265, 1292, 1304, 1325, 1326, 1334, 1338, 1343, 1344, 1352, 1361, 1389, 1398, 1430, 1437, 1438, 1439, 1447, 1451, 1453, 1458, 1475, 1492, 1493, 1536, 1540, 1543, 1545, 1554, 1558, 1567, 1568, 1569, 1578, 1586, 1609, 1610, 1612, 1722, 1723, 1754, 1758, 1793, 1795, 1798, 1809, 1846, 1854, 1855, 1856, 1857, 1864, 1881, 1882, 1883, 1898, 1900, 1903, 1905, 1910, 1911, 1923, 1924, 1925, 1934, 1939, 1940], "interact": [9, 11, 16, 22, 34, 39, 47, 73, 875, 989, 1022, 1187, 1880, 1886, 1909, 1910, 1927, 1944], "final": [9, 11, 13, 14, 29, 42, 44, 46, 48, 50, 59, 69, 70, 699, 702, 703, 773, 934, 952, 965, 1085, 1124, 1142, 1165, 1283, 1301, 1306, 1396, 1398, 1414, 1459, 1472, 1615, 1808, 1851, 1882, 1884, 1885, 1886, 1898, 1910, 1913, 1916, 1919, 1921, 1923, 1927, 1936, 1937], "declin": 9, "conflict": [9, 40, 60, 1927], "lack": [9, 31, 1247, 1248, 1275], "unfit": 9, "conduct": [9, 1624, 1719, 1831, 1935], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 930, 1883, 1927], "letter": [9, 1085], "befit": 9, "candidaci": 9, "behind": [9, 15, 1880, 1921, 1936], "75": [9, 1173, 1432, 1543, 1561, 1683, 1730, 1883, 1940], "choos": [9, 34, 73, 905, 930, 1011, 1257, 1270, 1275, 1360, 1903, 1904, 1907, 1927, 1931, 1944], "unforeseen": 9, "circumst": [9, 18, 59, 966, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1908], "perman": [9, 73, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1905, 1937], "unavail": [9, 1884], "rank": [9, 14, 29, 39, 40, 42, 43, 44, 46, 47, 48, 50, 57, 59, 60, 62, 65, 74, 82, 1257, 1258, 1259, 1266, 1301, 1436, 1483, 1624, 1636, 1719, 1831, 1883, 1909, 1918, 1923, 1928, 1935, 1936], "elect": 9, "invit": [9, 1879], "convinc": 9, "approach": [9, 16, 27, 40, 42, 73, 954, 1153, 1805, 1872, 1882, 1897, 1900, 1908, 1910, 1913, 1930, 1935], "interview": 9, "talk": [9, 61, 1910, 1915], "gather": [9, 42, 59, 65, 527, 1841, 1865, 1881, 1883, 1910, 1912, 1915, 1925, 1927], "read": [9, 11, 16, 19, 20, 26, 29, 36, 39, 42, 44, 49, 50, 52, 59, 60, 65, 69, 73, 463, 1044, 1068, 1136, 1137, 1138, 1219, 1283, 1713, 1880, 1898, 1899, 1905, 1906, 1908, 1909, 1911, 1915, 1919, 1927, 1930, 1935], "attend": [9, 748, 1450, 1487], "confer": [9, 1398], "pipelin": [9, 16, 73, 1880, 1935], "world": [9, 14, 17, 21, 26, 42, 46, 50, 57, 59, 60, 65, 1483, 1624, 1905, 1927, 1930], "cover": [9, 13, 20, 22, 66, 73, 74, 1059, 1085, 1437, 1567, 1568, 1569, 1885, 1887, 1899, 1905, 1910, 1913, 1915, 1916, 1935], "push": [9, 20, 51, 1047, 1153, 1277, 1872, 1929], "codeown": 9, "notifi": [9, 43, 60, 1937], "expert": 9, "strongli": [9, 42, 50, 60, 1383, 1384, 1385, 1389, 1826, 1879], "failur": [9, 16, 18, 20, 29, 42, 48, 50, 51, 52, 56, 57, 58, 59, 62, 693, 921, 922, 966, 1142, 1227, 1228, 1329, 1885, 1891, 1897, 1924, 1928, 1935, 1937, 1946], "revert": [9, 48, 65, 1480, 1601, 1937], "substanti": [9, 11, 40, 1908], "syntact": [9, 52, 73], "establish": [9, 42, 59, 1905], "seri": [9, 11, 23, 73, 1367, 1407, 1920, 1923, 1950], "lf": 9, "llc": 9, "guidelin": [9, 1647, 1918, 1927, 1930, 1931], "trademark": 9, "www": [9, 1367, 1493, 1944], "lfproject": 9, "acknowledg": [9, 42, 1880, 1937, 1939], "copyright": [9, 29], "holder": 9, "independ": [9, 39, 42, 59, 65, 72, 170, 171, 792, 798, 914, 915, 916, 917, 918, 919, 991, 1165, 1174, 1270, 1382, 1383, 1384, 1385, 1389, 1529, 1530, 1531, 1536, 1554, 1612, 1668, 1729, 1880, 1882, 1904, 1905, 1908, 1921, 1927], "authorship": 9, "claus": [9, 1912], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 15, 40, 48, 446, 494, 771, 1157, 1232, 1248, 1251, 1270, 1312, 1341, 1410, 1450, 1593, 1631, 1717, 1719, 1729, 1730, 1831, 1882, 1883, 1910, 1913, 1920, 1923, 1939, 1940], "partli": [9, 1885], "domain": [9, 48, 52, 697, 839, 898, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1113, 1115, 1116, 1117, 1118, 1165, 1900, 1923, 1930], "absolut": [9, 31, 33, 73, 109, 694, 707, 921, 922, 1133, 1201, 1240, 1245, 1266, 1269, 1271, 1292, 1405, 1411, 1475, 1552, 1556, 1597, 1641, 1642, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1671, 1682, 1723, 1749, 1781, 1883, 1916, 1923, 1925, 1940, 1945, 1946], "health": 9, "success": [9, 29, 44, 48, 50, 56, 73, 1242, 1253, 1255, 1301, 1643, 1812, 1813, 1814, 1816, 1817, 1908, 1916, 1923, 1924, 1939], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1923], "clearli": [9, 1892, 1927], "sponsorship": 9, "foundat": [9, 1924], "ptf": 9, "minor": [9, 1013, 1242, 1258, 1939], "committ": 9, "prior": [9, 11, 16, 40, 42, 44, 50, 913, 1284, 1489, 1491, 1593, 1647, 1906, 1908, 1910, 1926, 1930], "facebook": 9, "infrastructur": [9, 14, 51, 1927], "employe": 9, "expand": [9, 48, 271, 507, 891, 913, 921, 922, 949, 1264, 1265, 1313, 1450, 1494, 1587, 1861, 1879, 1881, 1883, 1891, 1898, 1899, 1906, 1911, 1923, 1925, 1927, 1928, 1943], "deliv": [9, 1929], "offici": [9, 42, 1352, 1930], "showcas": [9, 1440, 1908, 1918], "whenev": [9, 15, 20, 893, 1631, 1632, 1895, 1897, 1933, 1936, 1937, 1950], "fix": [10, 11, 16, 25, 29, 36, 39, 42, 47, 48, 50, 59, 65, 67, 70, 73, 96, 97, 278, 808, 814, 1142, 1225, 1257, 1387, 1388, 1462, 1534, 1535, 1554, 1624, 1882, 1883, 1895, 1903, 1904, 1908, 1909, 1912, 1918, 1922, 1923, 1925, 1926], "plu": [10, 33, 44, 914, 1138, 1258, 1939], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1284], "ezyang": [10, 1910, 1943], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1719, 1831], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1910], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 43, 46, 48, 65, 1687, 1688, 1690, 1696, 1700, 1926], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 29], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 13], "ansel": [10, 13], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1341, 1730, 1908], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 48], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1284], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1165], "robi": 10, "robieta": 10, "xu": [10, 65], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 11, 23, 42, 65, 73, 1815, 1884, 1899, 1923], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": 10, "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 24], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1352], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 806], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 16, 29, 1929], "johnson": 10, "peterjc123": [10, 1922], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 48], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "debut": 11, "encapsul": [11, 72, 73, 1935], "henc": [11, 40, 46, 50, 58, 59, 62, 65, 72, 936, 1138, 1440, 1441, 1442, 1496, 1815, 1900, 1905, 1908, 1909, 1935, 1937], "speedup": [11, 19, 20, 21, 24, 39, 40, 1450, 1491], "address": [11, 39, 42, 59, 62, 70, 233, 921, 922, 994, 1892, 1897, 1908, 1935, 1936], "host": [11, 15, 39, 42, 50, 52, 58, 59, 60, 61, 213, 226, 593, 616, 890, 1212, 1444, 1624, 1636, 1670, 1908, 1928, 1935, 1936, 1941], "essenti": [11, 39, 42, 47, 50, 73, 1301, 1899, 1908, 1922, 1939], "wrapper": [11, 40, 42, 47, 48, 65, 72, 73, 74, 637, 770, 803, 837, 986, 988, 989, 991, 1058, 1060, 1131, 1132, 1151, 1212, 1381, 1882, 1884, 1885, 1895, 1897, 1908, 1909, 1923, 1928], "coupl": [11, 27, 28, 69, 1882, 1915, 1936], "tricki": [11, 51, 66, 71, 1905, 1916, 1937], "cachingalloc": 11, "pool": [11, 72, 779, 780, 781, 782, 795, 796, 986, 1020, 1021, 1031, 1042, 1320, 1321, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1392, 1393, 1412, 1413, 1437, 1438, 1439, 1440, 1441, 1442, 1445, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1538, 1539, 1564, 1565, 1567, 1568, 1569, 1734, 1735, 1880, 1907, 1908, 1910, 1916, 1918, 1932, 1935], "freed": [11, 65, 167, 906, 920, 994, 1042, 1897, 1908, 1914, 1935], "exactli": [11, 20, 33, 40, 42, 48, 61, 921, 922, 960, 998, 1002, 1085, 1131, 1132, 1209, 1212, 1253, 1388, 1391, 1444, 1472, 1475, 1535, 1545, 1624, 1671, 1682, 1892, 1898, 1905, 1908, 1909, 1910, 1913, 1914, 1923, 1927, 1928], "replai": [11, 16, 29, 986, 1020, 1678, 1908], "advantag": [11, 42, 59, 60, 1361, 1405, 1909, 1912, 1935, 1939], "overwrit": [11, 36, 39, 42, 73, 1445, 1454, 1885, 1905], "burn": [11, 74, 83], "forth": [11, 1705, 1866, 1879, 1929], "cudagraph_tre": 11, "reclaim": [11, 1908], "compil": [11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 26, 33, 34, 65, 66, 73, 693, 987, 1012, 1016, 1028, 1029, 1142, 1210, 1212, 1213, 1216, 1217, 1223, 1224, 1225, 1227, 1228, 1229, 1444, 1881, 1882, 1884, 1885, 1886, 1887, 1891, 1904, 1907, 1909, 1915, 1922, 1923, 1947], "ab": [11, 12, 13, 16, 20, 29, 47, 48, 107, 108, 638, 639, 695, 954, 1085, 1243, 1264, 1265, 1267, 1268, 1281, 1284, 1414, 1463, 1490, 1493, 1495, 1583, 1668, 1671, 1713, 1719, 1723, 1880, 1881, 1883, 1885, 1898, 1899, 1900, 1908, 1916, 1925, 1939, 1945], "_dynamo": [11, 12, 13, 14, 16, 17, 18, 19, 20, 23, 25, 26, 29, 74, 83, 966, 1909], "graph_break": [11, 17, 25, 693, 1891], "rand_lik": [11, 1883, 1887, 1908, 1925, 1947], "warm": [11, 16, 25, 40, 46, 1031, 1703, 1704, 1908, 1929], "cubla": [11, 31, 1003, 1865, 1920], "triton": [11, 16, 18, 19, 22, 26, 29, 966, 1911], "arang": [11, 19, 31, 39, 42, 49, 527, 620, 704, 705, 706, 710, 712, 899, 900, 901, 948, 960, 964, 1068, 1083, 1101, 1105, 1113, 1119, 1121, 1125, 1126, 1127, 1128, 1135, 1136, 1175, 1232, 1233, 1237, 1240, 1264, 1267, 1268, 1281, 1344, 1465, 1466, 1467, 1468, 1469, 1496, 1497, 1498, 1580, 1671, 1672, 1718, 1726, 1730, 1745, 1752, 1757, 1778, 1810, 1818, 1829, 1845, 1846, 1848, 1849, 1851, 1873, 1881, 1883, 1892, 1900, 1921, 1925, 1940, 1944, 1945], "invari": [11, 28, 48, 1657, 1805, 1812, 1813, 1814, 1815, 1816, 1817, 1937, 1939], "overwritten": [11, 758, 759, 769, 777, 810, 854, 874, 1905, 1910, 1946], "constraint": [11, 14, 42, 47, 807, 808, 915, 1020, 1031, 1147, 1624, 1632, 1657, 1700, 1880, 1885, 1900, 1911, 1913, 1916, 1939], "pattern": [11, 14, 15, 28, 42, 44, 805, 806, 807, 809, 867, 874, 1028, 1381, 1660, 1808, 1882, 1885, 1905, 1908, 1910, 1912, 1914, 1921, 1931, 1932, 1939], "di": [11, 20, 1897], "yet": [11, 15, 16, 20, 21, 23, 27, 29, 43, 50, 65, 70, 72, 73, 96, 97, 988, 1059, 1215, 1217, 1229, 1317, 1624, 1638, 1642, 1644, 1880, 1884, 1885, 1891, 1899, 1900, 1908, 1923, 1925, 1930, 1935, 1937, 1939, 1940, 1942], "privat": [11, 59, 1908, 1910, 1927], "reflect": [11, 69, 473, 534, 569, 1137, 1138, 1141, 1209, 1372, 1373, 1374, 1420, 1421, 1422, 1465, 1466, 1467, 1543, 1581, 1666, 1714, 1826, 1882, 1883, 1912, 1943], "fallback": [11, 16, 29, 33, 42, 59, 68, 1225, 1275, 1904, 1908, 1921], "inductor": [11, 12, 14, 18, 19, 21, 22, 24, 25, 29, 693, 966, 1891], "my_model": [11, 16, 29, 44, 1624, 1882, 1923], "y1": [11, 1678, 1807], "y2": [11, 1678, 1807], "naiv": [11, 14, 16, 39, 1928], "pend": [11, 1935, 1944], "todo": [11, 15, 23, 85, 90, 91, 92, 93, 94, 95, 96, 97, 839, 872, 874, 875, 1910, 1949], "storag": [11, 15, 44, 65, 238, 327, 355, 358, 359, 450, 473, 498, 513, 534, 537, 571, 572, 597, 598, 600, 601, 891, 908, 910, 1009, 1076, 1182, 1186, 1198, 1212, 1219, 1283, 1305, 1343, 1344, 1381, 1444, 1747, 1761, 1768, 1799, 1804, 1807, 1821, 1844, 1850, 1879, 1880, 1883, 1894, 1897, 1905, 1908, 1918, 1921, 1927, 1935, 1939, 1942, 1943, 1945], "footgun": [11, 15], "uniqu": [11, 42, 50, 56, 59, 60, 61, 527, 531, 1203, 1247, 1248, 1252, 1258, 1259, 1261, 1270, 1272, 1274, 1275, 1312, 1319, 1807, 1830, 1863, 1879, 1882, 1891, 1894, 1910, 1927, 1929, 1935, 1936, 1937, 1939, 1944], "straightforward": [12, 20, 73, 1892, 1900, 1916, 1926, 1939], "gm": [12, 15, 20, 28, 29, 73], "graphmodul": [12, 15, 20, 28, 29, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 872, 873, 874, 875, 1949], "example_input": [12, 15, 20, 830, 831, 874, 875, 1223, 1227, 1930, 1949], "my_custom_backend": 12, "f_opt": 12, "register_backend": [12, 42, 1935], "my_compil": [12, 13, 20], "besid": [12, 40, 42, 1908, 1909, 1944], "plugin": [12, 1929, 1944], "entry_point": [12, 60], "torch_dynamo_backend": 12, "your_modul": 12, "submodul": [12, 28, 34, 65, 73, 804, 810, 827, 851, 852, 853, 871, 874, 875, 1151, 1212, 1216, 1222, 1223, 1381, 1444, 1445, 1446, 1472, 1622, 1882, 1884, 1885, 1893, 1916, 1921, 1927, 1930, 1935, 1949], "registr": [12, 46, 47, 72, 96, 1028, 1617, 1622, 1623, 1624, 1633, 1636, 1889, 1927], "minifi": [12, 16], "typic": [12, 14, 15, 25, 29, 33, 39, 40, 42, 48, 49, 50, 52, 59, 60, 61, 65, 73, 97, 984, 986, 1128, 1136, 1212, 1232, 1235, 1283, 1378, 1404, 1444, 1615, 1624, 1686, 1687, 1812, 1813, 1814, 1816, 1817, 1879, 1880, 1882, 1885, 1891, 1905, 1907, 1908, 1919, 1920, 1921, 1923, 1926, 1928, 1930, 1935, 1943, 1951], "consist": [12, 16, 22, 29, 39, 42, 44, 47, 48, 59, 60, 73, 921, 957, 958, 1212, 1241, 1247, 1248, 1250, 1252, 1253, 1254, 1255, 1279, 1281, 1444, 1491, 1633, 1636, 1682, 1729, 1830, 1882, 1885, 1892, 1899, 1900, 1911, 1916, 1918, 1920, 1923, 1926, 1929, 1939], "canon": [12, 15, 50, 52, 1882], "opset": [12, 1881, 1923, 1924, 1925], "significantli": [12, 42, 915, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1773, 1939], "smaller": [12, 39, 73, 513, 558, 984, 1624, 1713, 1728, 1818, 1908, 1921, 1927, 1951], "aot_autograd": 12, "fw_compil": 12, "bw_compil": 12, "box": [12, 14, 17, 19, 31, 42, 47, 60, 73, 1153, 1872, 1899, 1905, 1909], "make_boxed_func": 12, "my_backend": [12, 805], "model_opt": 12, "pretti": [12, 15, 20, 1212, 1681, 1778, 1882], "extract": [12, 17, 26, 27, 36, 73, 849, 1387, 1391, 1495, 1534, 1611, 1929, 1935, 1949], "dynamo": [12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 29, 73, 693, 966, 1891, 1924], "bytecod": [12, 13, 16, 20, 26, 27, 29, 39, 693, 1891, 1927], "print_tabular": [12, 20, 73], "co": [12, 18, 19, 21, 71, 74, 78, 79, 81, 82, 218, 648, 649, 696, 944, 966, 1028, 1143, 1146, 1147, 1152, 1169, 1170, 1263, 1378, 1379, 1382, 1703, 1704, 1711, 1723, 1785, 1786, 1789, 1790, 1791, 1792, 1794, 1812, 1813, 1814, 1816, 1817, 1881, 1883, 1898, 1925, 1926, 1939, 1944, 1946], "sin": [12, 18, 19, 21, 25, 27, 33, 70, 71, 74, 78, 79, 81, 82, 545, 682, 683, 894, 966, 1028, 1143, 1145, 1146, 1147, 1149, 1152, 1170, 1263, 1313, 1723, 1786, 1792, 1881, 1883, 1898, 1905, 1925, 1939, 1940, 1944], "opcod": [12, 13, 20, 73, 1927], "placehold": [12, 13, 28, 73, 85, 90, 91, 92, 93, 94, 95, 847, 1406, 1908], "call_funct": [12, 13, 16, 20, 28, 29, 73, 96, 97], "0x7f1a894649a8": 12, "mockmodul": 12, "mod": [12, 29, 73, 734, 735, 745, 751, 752, 753, 758, 759, 769, 777, 823, 824, 825, 826, 849, 850, 877, 1141, 1215, 1216, 1221, 1228, 1666, 1884, 1885, 1927, 1948], "optimized_mod": 12, "toy_exampl": [12, 13, 16, 20, 29], "abs_1": [12, 13], "0x7f8d259298a0": 12, "truediv": [12, 13, 73], "call_method": [12, 13, 20, 73], "sum_1": [12, 13, 73], "lt": [12, 13, 379, 411, 1238, 1881, 1882, 1883, 1898, 1925], "mul_1": 12, "nondeterminist": [12, 73, 329, 331, 337, 513, 529, 531, 937, 1233, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1440, 1441, 1442, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1535, 1543, 1554, 1581, 1593, 1612, 1613, 1614, 1772, 1865], "offer": [12, 16, 42, 65, 68, 1624, 1865, 1881, 1908, 1914, 1927, 1939], "superior": 12, "real": [12, 14, 15, 19, 20, 21, 39, 48, 73, 98, 699, 700, 701, 702, 703, 705, 711, 921, 934, 959, 974, 980, 1031, 1101, 1102, 1104, 1106, 1107, 1108, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1202, 1204, 1205, 1208, 1209, 1232, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1256, 1261, 1264, 1266, 1268, 1269, 1270, 1271, 1275, 1276, 1280, 1281, 1282, 1292, 1298, 1411, 1453, 1456, 1457, 1493, 1631, 1826, 1830, 1869, 1870, 1871, 1879, 1880, 1881, 1883, 1885, 1905, 1908, 1925, 1927, 1930, 1935, 1937, 1943, 1945, 1946, 1950], "optimize_for_infer": [12, 1216], "optimize_for_inference_compil": 12, "And": [12, 17, 19, 20, 69, 810, 837, 1064, 1065, 1141, 1212, 1233, 1309, 1314, 1367, 1444, 1905, 1910, 1911, 1922, 1923, 1930, 1949], "code_to_acceler": 12, "list_backend": [12, 18, 19, 21, 966], "trt_compil": 12, "tensorrt": [12, 16, 19, 1930], "inductor_compil": 12, "author": [13, 16, 19, 23, 24, 29, 40, 59, 60, 65, 1153, 1696, 1736, 1872, 1904], "tensor_match": 13, "function_match": 13, "recaptur": 13, "recompil": [13, 14, 18, 20, 21, 23, 33, 73, 693, 966, 1225, 1891, 1914], "dispatch_kei": [13, 1889], "ndim": [13, 1277, 1278, 1898, 1900, 1939, 1945], "config": [13, 14, 16, 18, 19, 20, 22, 23, 29, 40, 65, 73, 805, 806, 807, 808, 872, 874, 966, 1909, 1922, 1933], "log_level": [13, 16, 29, 1909], "info": [13, 14, 15, 16, 29, 42, 50, 53, 57, 693, 905, 988, 989, 991, 1242, 1253, 1255, 1256, 1260, 1273, 1301, 1325, 1326, 1680, 1880, 1883, 1891, 1909, 1910, 1911, 1923, 1927], "output_cod": [13, 29, 693, 1891], "spammi": [13, 1891], "printout": [13, 73, 1030, 1043], "__compiled_fn_0": 13, "eval_with_kei": 13, "0x7f9ca082f8a0": 13, "load_fast": [13, 20], "load_glob": 13, "load_method": 13, "6": [13, 16, 17, 24, 29, 33, 36, 39, 40, 42, 48, 57, 73, 74, 75, 79, 80, 81, 82, 329, 331, 333, 337, 417, 418, 486, 502, 513, 527, 531, 573, 620, 698, 699, 704, 710, 754, 755, 756, 758, 759, 771, 774, 776, 778, 914, 915, 917, 918, 919, 937, 945, 950, 956, 959, 960, 964, 984, 997, 1044, 1048, 1062, 1063, 1064, 1068, 1069, 1080, 1083, 1084, 1101, 1109, 1114, 1115, 1119, 1120, 1122, 1124, 1125, 1128, 1135, 1165, 1175, 1177, 1178, 1201, 1222, 1233, 1237, 1248, 1264, 1268, 1269, 1270, 1277, 1278, 1282, 1284, 1313, 1317, 1342, 1343, 1344, 1357, 1368, 1371, 1376, 1379, 1387, 1388, 1397, 1398, 1399, 1401, 1402, 1440, 1441, 1445, 1453, 1461, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1487, 1488, 1490, 1495, 1501, 1510, 1540, 1547, 1548, 1580, 1582, 1589, 1615, 1659, 1660, 1662, 1664, 1670, 1671, 1672, 1684, 1698, 1718, 1719, 1722, 1729, 1730, 1736, 1737, 1740, 1746, 1756, 1757, 1761, 1765, 1778, 1799, 1803, 1807, 1810, 1812, 1813, 1818, 1829, 1831, 1832, 1833, 1840, 1845, 1846, 1847, 1848, 1849, 1851, 1854, 1856, 1860, 1865, 1873, 1874, 1881, 1882, 1885, 1886, 1892, 1900, 1903, 1905, 1910, 1911, 1916, 1921, 1923, 1935, 1936, 1939, 1940, 1942, 1945, 1946, 1950], "load_const": [13, 20], "12": [13, 24, 25, 39, 40, 42, 65, 337, 531, 630, 699, 754, 755, 756, 758, 759, 956, 960, 1083, 1101, 1175, 1216, 1231, 1270, 1352, 1368, 1376, 1391, 1392, 1393, 1441, 1456, 1457, 1478, 1487, 1495, 1538, 1539, 1579, 1584, 1585, 1632, 1665, 1718, 1729, 1778, 1793, 1803, 1845, 1861, 1873, 1879, 1882, 1883, 1886, 1892, 1908, 1917, 1921, 1923, 1925, 1939, 1946], "binary_add": 13, "14": [13, 42, 74, 81, 82, 337, 531, 959, 1028, 1029, 1068, 1083, 1175, 1264, 1270, 1338, 1368, 1441, 1729, 1736, 1803, 1845, 1846, 1851, 1873, 1882, 1886, 1923, 1925, 1939, 1943, 1944], "binary_true_divid": 13, "16": [13, 16, 29, 38, 42, 337, 630, 751, 752, 753, 754, 755, 756, 785, 1083, 1101, 1128, 1165, 1175, 1212, 1223, 1235, 1241, 1247, 1248, 1252, 1268, 1344, 1356, 1358, 1359, 1367, 1368, 1371, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1385, 1389, 1392, 1393, 1412, 1413, 1414, 1432, 1437, 1438, 1439, 1441, 1442, 1444, 1451, 1459, 1470, 1487, 1501, 1518, 1520, 1521, 1523, 1527, 1538, 1539, 1674, 1726, 1803, 1865, 1869, 1873, 1882, 1886, 1903, 1908, 1916, 1919, 1921, 1923, 1925, 1928, 1935, 1939, 1940, 1942, 1944, 1945], "store_fast": 13, "11": [13, 29, 33, 42, 337, 527, 956, 960, 1031, 1083, 1175, 1232, 1268, 1282, 1298, 1352, 1368, 1393, 1441, 1539, 1671, 1672, 1681, 1803, 1845, 1873, 1882, 1886, 1892, 1899, 1908, 1921, 1922, 1923, 1925, 1939, 1940], "18": [13, 42, 337, 460, 698, 1086, 1165, 1209, 1284, 1441, 1882, 1923, 1925, 1939], "20": [13, 15, 20, 42, 46, 48, 337, 698, 733, 741, 742, 747, 751, 752, 753, 754, 755, 756, 759, 769, 773, 774, 775, 776, 777, 778, 785, 1165, 1210, 1213, 1223, 1234, 1268, 1333, 1356, 1358, 1359, 1361, 1362, 1363, 1364, 1365, 1367, 1371, 1372, 1373, 1374, 1376, 1377, 1382, 1383, 1384, 1385, 1389, 1392, 1393, 1396, 1397, 1399, 1406, 1407, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1431, 1437, 1438, 1439, 1441, 1442, 1444, 1459, 1461, 1472, 1480, 1483, 1486, 1487, 1488, 1489, 1501, 1518, 1520, 1521, 1523, 1527, 1538, 1539, 1545, 1601, 1631, 1632, 1656, 1665, 1668, 1689, 1704, 1732, 1841, 1882, 1883, 1900, 1909, 1910, 1919, 1926, 1935, 1939], "22": [13, 42, 48, 337, 630, 1284, 1615, 1661, 1663, 1882, 1920, 1939], "24": [13, 40, 42, 48, 939, 1270, 1432, 1508, 1664, 1729, 1846, 1882, 1903, 1907, 1940], "26": [13, 29, 1267, 1704], "compare_op": 13, "28": [13, 22, 630, 759, 1068, 1851, 1923], "pop_jump_if_fals": 13, "38": [13, 1338], "30": [13, 21, 39, 42, 48, 50, 59, 460, 630, 733, 741, 742, 769, 777, 1165, 1234, 1365, 1367, 1371, 1431, 1495, 1501, 1518, 1527, 1615, 1707, 1709, 1715, 1732, 1841, 1910, 1923, 1926, 1935], "34": [13, 20, 29, 42], "binary_multipli": [13, 20], "36": [13, 20, 42, 337, 1128, 1165], "13": [13, 22, 29, 42, 888, 960, 1083, 1086, 1130, 1165, 1175, 1216, 1301, 1368, 1392, 1393, 1441, 1478, 1538, 1539, 1803, 1845, 1873, 1882, 1886, 1925, 1939], "42": [13, 39, 837, 944, 1333, 1785, 1908, 1916], "return_valu": [13, 50, 51, 57], "unpack_sequ": 13, "__resume_at_30_1": 13, "__resume_at_38_2": 13, "offset": [13, 20, 46, 50, 242, 243, 244, 245, 355, 534, 571, 759, 891, 1073, 1074, 1075, 1076, 1138, 1246, 1388, 1535, 1624, 1731, 1732, 1810, 1855, 1857, 1883, 1885], "__resume_at_": 13, "jump_absolut": 13, "resume_at": 13, "remaind": [13, 39, 504, 1133, 1165, 1881, 1883, 1925], "restart": [13, 40, 50, 58, 60, 62, 1703, 1704, 1897, 1944], "symbolic_shap": 14, "assumpt": [14, 16, 23, 29, 44, 56, 60, 921, 969, 1367, 1398, 1905, 1909, 1913, 1935, 1936, 1939], "situat": [14, 15, 16, 18, 19, 39, 48, 61, 73, 99, 966, 980, 1636, 1897, 1910, 1911, 1918, 1919, 1927, 1930, 1937, 1950], "insuffici": [14, 29, 1032], "batch": [14, 15, 16, 18, 22, 25, 29, 40, 42, 48, 60, 62, 66, 67, 70, 71, 73, 74, 81, 82, 596, 597, 598, 600, 601, 699, 715, 716, 717, 718, 719, 720, 748, 773, 792, 798, 920, 921, 922, 934, 946, 947, 954, 957, 958, 959, 966, 985, 1073, 1075, 1085, 1146, 1147, 1153, 1209, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1279, 1280, 1281, 1284, 1292, 1301, 1302, 1306, 1360, 1361, 1362, 1363, 1364, 1367, 1372, 1373, 1378, 1380, 1381, 1383, 1384, 1385, 1387, 1388, 1389, 1391, 1396, 1397, 1398, 1399, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1414, 1415, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1435, 1436, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1461, 1475, 1476, 1483, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1495, 1508, 1513, 1515, 1516, 1526, 1527, 1529, 1530, 1531, 1534, 1535, 1536, 1537, 1540, 1553, 1554, 1555, 1578, 1586, 1593, 1611, 1612, 1615, 1624, 1631, 1657, 1658, 1660, 1661, 1663, 1704, 1705, 1711, 1717, 1719, 1729, 1733, 1812, 1813, 1814, 1816, 1817, 1821, 1826, 1830, 1831, 1850, 1853, 1854, 1856, 1869, 1872, 1880, 1898, 1899, 1900, 1904, 1908, 1911, 1912, 1916, 1918, 1928, 1930, 1935, 1939, 1944, 1945], "length": [14, 16, 29, 39, 40, 42, 44, 48, 276, 329, 331, 337, 367, 448, 449, 596, 597, 598, 748, 773, 827, 906, 920, 965, 1002, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1138, 1153, 1186, 1209, 1227, 1231, 1343, 1344, 1362, 1367, 1372, 1381, 1388, 1391, 1396, 1412, 1414, 1450, 1459, 1487, 1495, 1518, 1519, 1520, 1527, 1535, 1554, 1593, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1736, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1810, 1812, 1813, 1814, 1816, 1817, 1826, 1851, 1872, 1881, 1883, 1885, 1892, 1899, 1900, 1906, 1912, 1939, 1946], "vari": [14, 15, 16, 29, 832, 1475, 1657, 1787, 1895, 1918, 1919, 1926, 1930, 1931, 1939], "servic": [14, 51, 1909], "window": [14, 33, 39, 42, 73, 367, 569, 935, 944, 1169, 1170, 1209, 1231, 1357, 1358, 1359, 1392, 1393, 1412, 1413, 1437, 1438, 1439, 1440, 1441, 1442, 1510, 1538, 1539, 1567, 1568, 1569, 1734, 1735, 1826, 1880, 1883, 1895, 1908], "pad": [14, 18, 39, 40, 725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 748, 751, 752, 753, 754, 755, 756, 781, 782, 785, 786, 787, 792, 795, 796, 798, 966, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1209, 1357, 1358, 1359, 1367, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1387, 1388, 1391, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1440, 1441, 1442, 1447, 1448, 1450, 1465, 1466, 1467, 1468, 1469, 1470, 1490, 1491, 1495, 1499, 1500, 1501, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1534, 1535, 1537, 1543, 1554, 1567, 1568, 1569, 1570, 1571, 1572, 1611, 1612, 1658, 1660, 1661, 1663, 1734, 1735, 1826, 1880, 1881, 1883, 1900, 1912, 1923, 1925, 1930, 1944], "exhibit": [14, 29, 1681, 1923], "imag": [14, 16, 17, 29, 33, 39, 754, 755, 756, 874, 875, 974, 1350, 1354, 1355, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1391, 1392, 1393, 1408, 1416, 1451, 1456, 1457, 1478, 1495, 1497, 1498, 1508, 1519, 1520, 1522, 1523, 1537, 1538, 1543, 1554, 1611, 1612, 1754, 1880, 1881, 1883, 1900, 1913, 1925, 1928, 1943, 1944], "recognit": 14, "jag": 14, "chose": [14, 50, 1904], "whose": [14, 29, 42, 48, 65, 73, 557, 872, 908, 956, 979, 1073, 1085, 1090, 1138, 1156, 1165, 1168, 1174, 1212, 1228, 1236, 1282, 1298, 1300, 1345, 1444, 1624, 1672, 1723, 1781, 1847, 1885, 1905, 1910, 1913, 1927, 1939, 1944, 1946], "dimension": [14, 48, 527, 529, 893, 899, 900, 901, 945, 952, 964, 1073, 1075, 1076, 1085, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1119, 1120, 1122, 1124, 1126, 1127, 1138, 1165, 1174, 1175, 1176, 1244, 1249, 1250, 1251, 1252, 1277, 1282, 1298, 1306, 1313, 1352, 1369, 1370, 1371, 1380, 1381, 1387, 1388, 1416, 1434, 1451, 1465, 1466, 1467, 1468, 1469, 1470, 1477, 1479, 1483, 1499, 1500, 1501, 1526, 1578, 1581, 1613, 1614, 1631, 1670, 1736, 1812, 1813, 1814, 1815, 1816, 1817, 1826, 1841, 1844, 1845, 1851, 1885, 1900, 1903, 1906, 1913, 1919, 1939, 1941, 1942, 1945, 1947], "induct": 14, "symbol": [14, 15, 27, 33, 38, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 97, 98, 637, 830, 968, 1226, 1280, 1414, 1459, 1853, 1869, 1880, 1885, 1924], "pt2": [14, 15, 17], "mark_dynam": 14, "dim": [14, 42, 47, 48, 70, 71, 73, 74, 81, 82, 129, 131, 132, 133, 135, 151, 152, 153, 201, 221, 224, 227, 228, 229, 230, 231, 232, 246, 276, 280, 297, 328, 329, 330, 331, 332, 333, 337, 338, 370, 396, 408, 423, 425, 426, 427, 430, 444, 445, 446, 447, 451, 452, 468, 477, 485, 494, 505, 506, 508, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533, 550, 551, 554, 555, 557, 560, 565, 566, 568, 573, 578, 586, 591, 596, 597, 598, 600, 601, 603, 618, 619, 622, 623, 624, 625, 628, 630, 706, 708, 709, 710, 712, 887, 888, 889, 916, 917, 919, 953, 960, 975, 983, 985, 1000, 1002, 1064, 1065, 1066, 1067, 1068, 1077, 1083, 1101, 1102, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1125, 1143, 1153, 1154, 1165, 1175, 1183, 1184, 1185, 1186, 1189, 1233, 1243, 1244, 1264, 1268, 1278, 1280, 1281, 1291, 1299, 1309, 1311, 1312, 1314, 1317, 1319, 1332, 1339, 1340, 1341, 1342, 1343, 1344, 1352, 1379, 1380, 1381, 1384, 1388, 1390, 1395, 1410, 1415, 1434, 1450, 1451, 1452, 1477, 1479, 1491, 1493, 1494, 1525, 1526, 1542, 1545, 1554, 1562, 1567, 1568, 1569, 1578, 1579, 1581, 1583, 1587, 1593, 1599, 1600, 1608, 1624, 1632, 1638, 1642, 1644, 1651, 1652, 1665, 1668, 1671, 1720, 1727, 1730, 1750, 1751, 1756, 1757, 1762, 1763, 1764, 1767, 1768, 1799, 1802, 1803, 1806, 1809, 1811, 1818, 1821, 1823, 1824, 1825, 1826, 1829, 1841, 1845, 1846, 1847, 1848, 1851, 1852, 1860, 1861, 1862, 1863, 1864, 1867, 1868, 1872, 1873, 1880, 1881, 1882, 1883, 1899, 1900, 1911, 1912, 1921, 1923, 1925, 1939, 1940, 1942, 1948], "integ": [14, 39, 42, 48, 59, 305, 460, 462, 464, 513, 558, 573, 579, 698, 699, 700, 701, 702, 703, 779, 780, 798, 800, 878, 905, 934, 935, 944, 955, 979, 989, 991, 1007, 1013, 1014, 1042, 1080, 1083, 1085, 1086, 1128, 1129, 1130, 1131, 1132, 1133, 1138, 1139, 1143, 1144, 1145, 1146, 1147, 1155, 1169, 1170, 1173, 1174, 1175, 1222, 1225, 1234, 1235, 1242, 1253, 1255, 1265, 1284, 1333, 1352, 1367, 1372, 1373, 1374, 1416, 1502, 1503, 1504, 1505, 1506, 1507, 1614, 1657, 1672, 1675, 1707, 1710, 1714, 1719, 1731, 1732, 1738, 1740, 1741, 1742, 1744, 1749, 1758, 1770, 1818, 1827, 1831, 1845, 1846, 1859, 1865, 1873, 1877, 1884, 1885, 1886, 1898, 1911, 1913, 1928, 1931, 1933, 1939, 1940, 1942, 1945, 1946, 1951], "opt": [14, 42, 46, 1223, 1701, 1702, 1708, 1712, 1714, 1882, 1913], "automatic_dynamic_shap": 14, "proactiv": 14, "torch_log": [14, 18, 693, 966, 1891], "torchinductor": [14, 19, 26, 693, 1880, 1891], "decomposit": [14, 15, 28, 48, 73, 957, 1157, 1241, 1242, 1247, 1248, 1249, 1250, 1251, 1253, 1258, 1259, 1260, 1261, 1266, 1270, 1271, 1275, 1276, 1301, 1303, 1631, 1717, 1719, 1723, 1729, 1830, 1831, 1880, 1919], "written": [14, 19, 22, 28, 29, 42, 52, 70, 929, 1044, 1381, 1679, 1699, 1882, 1884, 1892, 1893, 1905, 1909, 1910, 1911, 1916, 1921, 1923, 1927, 1929, 1941, 1944], "fulli": [14, 20, 31, 33, 39, 42, 46, 47, 69, 73, 693, 1048, 1212, 1440, 1441, 1442, 1444, 1881, 1885, 1891, 1910, 1927, 1930], "hint": [14, 20, 693, 986, 1020, 1213, 1450, 1488, 1489, 1490, 1491, 1882, 1884, 1885, 1908, 1910], "consult": [14, 1927], "greatli": [14, 33, 73, 1908], "formula": [14, 48, 105, 781, 782, 902, 904, 935, 944, 1169, 1170, 1237, 1303, 1304, 1458, 1511, 1512, 1600, 1699, 1732, 1910, 1913, 1929, 1934, 1939], "flatten": [14, 40, 65, 73, 74, 80, 887, 888, 1074, 1174, 1268, 1281, 1495, 1671, 1678, 1682, 1730, 1746, 1751, 1756, 1861, 1862, 1863, 1883, 1898, 1899, 1903, 1923, 1925, 1932, 1943], "awai": [14, 40, 73, 969, 1543, 1880, 1899, 1905, 1911], "bailout": [14, 1925], "express": [14, 16, 29, 31, 44, 66, 70, 71, 73, 74, 81, 82, 335, 1210, 1213, 1668, 1826, 1886, 1893, 1900, 1905, 1910, 1950], "meta": [14, 15, 17, 19, 28, 65, 69, 73, 352, 1889, 1935, 1944, 1946], "workflow": [14, 15, 22, 23, 24, 34, 1879, 1910, 1930, 1931, 1947], "shapeenv": [14, 15], "attach": [14, 68, 72, 73, 156, 725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 746, 806, 851, 853, 877, 1615, 1879, 1882, 1884, 1898, 1905, 1910, 1930, 1936, 1948], "faketensormod": [14, 15], "knob": [14, 1908], "faithfulli": 14, "export": [14, 21, 25, 28, 34, 36, 42, 49, 62, 74, 79, 80, 82, 104, 929, 988, 1215, 1217, 1223, 1229, 1658, 1659, 1677, 1678, 1679, 1681, 1682, 1880, 1882, 1884, 1885, 1910, 1924, 1925, 1929, 1930, 1935], "sympi": 14, "induc": [14, 913, 1543, 1581, 1903], "simplif": [14, 44], "assert": [14, 28, 29, 39, 40, 48, 67, 69, 70, 71, 73, 74, 80, 82, 637, 924, 926, 927, 1143, 1145, 1146, 1147, 1148, 1151, 1152, 1153, 1210, 1215, 1216, 1221, 1680, 1872, 1884, 1886, 1910, 1911, 1916, 1921, 1927, 1930, 1946], "s0": [14, 29, 74, 81, 82], "occurr": [14, 65, 418, 1210, 1312, 1657, 1862, 1863], "reusabl": 14, "c10": [14, 59, 1915], "symfloat": [14, 1834, 1835, 1947], "symbool": [14, 1838, 1947], "plumb": 14, "symnodeimpl": 14, "csrc": [14, 1922], "python_symnod": 14, "init": [14, 42, 50, 52, 65, 1212, 1444, 1452, 1471, 1664, 1880, 1887, 1905, 1910, 1915, 1916], "_subclass": [14, 15], "fake_tensor": [14, 15], "_meta_registr": 14, "decomp": [14, 15], "primtorch": [14, 15, 19], "ref": [14, 20, 29, 1879, 1939], "visibl": [14, 17, 33, 42, 44, 56, 1010, 1055, 1445, 1446, 1454, 1455], "simul": [14, 48, 812, 814, 1930, 1933], "counterpart": [14, 870, 877, 1281, 1624, 1885, 1893, 1947, 1948], "symnod": 14, "eras": [14, 73, 74, 79, 80], "mix": [14, 26, 33, 40, 48, 65, 1031, 1624, 1880, 1905, 1907, 1930, 1939], "xla": [14, 1880], "far": [14, 60, 1221, 1543], "vice": [14, 73, 473, 616, 1137, 1138, 1436, 1905, 1933, 1941], "versa": [14, 73, 473, 616, 1137, 1138, 1436, 1905, 1933, 1941], "fairli": [14, 1918, 1928], "apparatu": 14, "traceabl": [14, 19, 73, 637, 830, 1882, 1930], "make_fx": [14, 29, 1142], "aka": [14, 42, 74, 81, 82, 930, 1405, 1905, 1942], "aris": [14, 48, 73, 1905], "emerg": [14, 1922], "illeg": [14, 65, 1908], "enhanc": [14, 42, 65, 1624], "precomput": 14, "empty_strid": [14, 1881, 1883, 1887, 1925], "eagerli": [14, 1017, 1023, 1908], "needlessli": [14, 1908], "nontrivi": [14, 42, 1908], "lazi": [14, 977, 1224, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1615, 1880], "constrain_rang": 14, "wherebi": 14, "trash": 15, "bad": [15, 25, 73, 74, 1897, 1923, 1927, 1930], "accur": [15, 21, 52, 988, 1165, 1287, 1386, 1736, 1851, 1908, 1936], "suppos": [15, 17, 19, 42, 73, 1209, 1714, 1892, 1939], "val": [15, 20, 74, 77, 81, 1028, 1218, 1883, 1885, 1903], "stuff": [15, 73], "probabl": [15, 16, 17, 23, 39, 65, 171, 773, 936, 1173, 1289, 1334, 1352, 1356, 1360, 1367, 1380, 1382, 1383, 1384, 1385, 1389, 1396, 1398, 1414, 1450, 1451, 1459, 1515, 1526, 1527, 1528, 1529, 1530, 1531, 1536, 1545, 1555, 1578, 1593, 1729, 1897, 1910, 1922, 1923, 1940, 1944], "wouldn": [15, 1937], "alias": [15, 65, 908, 1142, 1153, 1554, 1872, 1884, 1885, 1889, 1910], "almost": [15, 1258, 1259, 1922], "subclass_zoo": [15, 1910], "subgraph": [15, 18, 29, 966, 1681, 1905, 1909, 1923, 1927, 1949], "possibli": [15, 39, 59, 65, 1212, 1227, 1254, 1259, 1444, 1624, 1882, 1889, 1920, 1927], "bunch": 15, "from_real_tensor": 15, "memo": [15, 1212, 1444], "fakeifi": 15, "alia": [15, 44, 48, 53, 108, 109, 128, 204, 205, 369, 422, 451, 452, 459, 554, 695, 879, 880, 881, 882, 883, 884, 885, 902, 962, 975, 976, 1071, 1078, 1081, 1092, 1093, 1094, 1096, 1097, 1123, 1158, 1166, 1167, 1179, 1180, 1181, 1190, 1210, 1212, 1238, 1239, 1246, 1262, 1266, 1269, 1297, 1307, 1308, 1318, 1335, 1337, 1347, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1444, 1554, 1627, 1657, 1673, 1716, 1721, 1724, 1759, 1782, 1797, 1800, 1802, 1828, 1832, 1833, 1852, 1858, 1876, 1881, 1885, 1910, 1925, 1940, 1941, 1945], "faketensor": 15, "automat": [15, 16, 19, 29, 33, 40, 42, 47, 59, 60, 73, 100, 167, 602, 902, 904, 1022, 1031, 1174, 1221, 1227, 1313, 1490, 1593, 1625, 1748, 1778, 1879, 1880, 1884, 1885, 1893, 1894, 1898, 1899, 1905, 1906, 1908, 1910, 1916, 1918, 1923, 1927, 1928, 1930, 1931, 1935, 1944, 1945, 1947], "__torch_dispatch__": [15, 1910, 1939], "dispatch_devic": 15, "lie": [15, 1477, 1479, 1599, 1809, 1940, 1944], "prone": [15, 1897, 1918], "earli": [15, 20, 36, 40, 50, 72, 1383, 1384, 1385, 1389, 1880, 1930, 1931, 1948, 1949], "ly": 15, "whatev": [15, 16, 61, 73, 463, 1624, 1769, 1853, 1885, 1911], "derefer": 15, "pointer": [15, 36, 156, 1003, 1460, 1908, 1909, 1915, 1935, 1937], "segfault": [15, 1897, 1919], "backtrac": 15, "unexpect": [15, 16, 20, 42, 49, 73, 985, 1136, 1138, 1141, 1212, 1444, 1666, 1682, 1821, 1882, 1905, 1910, 1919], "reinterpret": [15, 48, 513], "magic": [15, 1883, 1886, 1947], "in_kernel_invocation_manag": 15, "underli": [15, 20, 42, 44, 46, 48, 50, 65, 70, 73, 114, 327, 342, 393, 416, 418, 488, 489, 490, 491, 498, 513, 534, 537, 570, 571, 572, 626, 761, 770, 891, 988, 1182, 1186, 1212, 1283, 1343, 1586, 1747, 1850, 1864, 1882, 1885, 1900, 1908, 1912, 1914, 1928, 1935, 1941, 1943], "unwrap": 15, "promot": [15, 65, 698, 939, 942, 951, 1028, 1080, 1128, 1130, 1131, 1132, 1133, 1333, 1383, 1384, 1385, 1389, 1525, 1728, 1748, 1749, 1755, 1770, 1827, 1881, 1885, 1924, 1942, 1946], "test_fake_tensor": 15, "fake_mod": 15, "fake_x": 15, "fake_i": 15, "fake_z": 15, "pre": [15, 23, 29, 34, 42, 46, 65, 73, 920, 927, 1212, 1444, 1619, 1621, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1679, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1702, 1708, 1879, 1882, 1885, 1893, 1905, 1907, 1916, 1923, 1928, 1945], "aotautograd": [15, 16, 17, 19, 29, 69, 693, 1891, 1909, 1924], "_guard": 15, "detect_fake_mod": 15, "fake_arg": 15, "lifecycl": [15, 20], "proxy_tensor": [15, 29, 1142], "maybe_disable_fake_tensor_mod": 15, "nich": 15, "faketensorprop": 15, "fake_tensor_prop": 15, "real_input": [15, 1908], "popul": [15, 28, 42, 48, 57, 65, 72, 73, 351, 509, 517, 518, 1312, 1340, 1908, 1910], "propagate_dont_convert_input": 15, "fake_input": 15, "real_tensor": 15, "t_": [15, 1313, 1393, 1539, 1703, 1704, 1883, 1939], "opportun": [15, 16, 1242, 1882, 1936], "conserv": [15, 1889, 1892, 1908], "annoi": 15, "practic": [15, 16, 39, 42, 48, 65, 1880, 1882, 1892, 1897, 1899, 1905, 1910, 1913, 1916, 1921, 1927, 1935], "feed": [15, 73, 1882, 1912, 1916, 1948], "somehow": 15, "fakecopymod": 15, "gave": 15, "fakeif": 15, "face": [15, 1910, 1927, 1944], "invalid": [15, 20, 52, 57, 969, 1212, 1334, 1444, 1904, 1905, 1923, 1927, 1928], "old": [15, 20, 42, 49, 73, 867, 1136, 1384, 1668, 1676, 1713, 1761, 1878, 1880, 1882, 1905, 1908, 1910, 1922, 1930, 1944], "tension": 15, "seriou": [15, 1897, 1908], "analys": 15, "occasion": [15, 1908, 1939], "mistak": [15, 1885, 1912], "redispatch": [15, 1910], "lift": [15, 71, 1153, 1872, 1899, 1925], "recogn": [15, 39, 1885, 1935, 1939], "notimpl": [15, 1885, 1886, 1910], "hopefulli": 15, "desugar": [15, 1885], "plain": [15, 33, 1361, 1445, 1454, 1631, 1814, 1910, 1939], "infinit": [15, 39, 1204, 1284, 1360, 1367, 1527, 1723, 1910, 1919, 1935], "fastpath": [15, 1450], "certain": [15, 16, 20, 22, 29, 39, 40, 42, 56, 57, 70, 72, 73, 98, 699, 702, 748, 934, 946, 1010, 1073, 1187, 1209, 1212, 1219, 1283, 1306, 1316, 1372, 1373, 1374, 1375, 1376, 1377, 1397, 1415, 1431, 1444, 1450, 1495, 1544, 1555, 1557, 1670, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1885, 1892, 1899, 1905, 1906, 1908, 1910, 1915, 1916, 1919, 1923, 1928, 1929, 1935, 1936, 1939], "custom_op": [15, 1923], "impl_abstract": 15, "hardcod": 15, "nor": [15, 39, 42, 50, 65, 808, 912, 1247, 1248, 1275, 1450, 1491, 1624, 1671, 1728, 1830, 1910, 1923], "sensit": [15, 40, 1405, 1475, 1923, 1927, 1936], "carefulli": [15, 17, 69, 72, 1911, 1927], "leaf": [15, 56, 167, 239, 351, 463, 517, 518, 804, 851, 853, 892, 906, 1151, 1681, 1844, 1900, 1904, 1905, 1923, 1949], "ness": [15, 60], "whole": [15, 20, 23, 24, 39, 42, 44, 1153, 1212, 1444, 1472, 1483, 1624, 1872, 1905, 1909, 1918, 1919, 1927], "bulk": [15, 39], "metaconvert": 15, "pointwis": [15, 18, 19, 22, 48, 966, 1146, 1147, 1289, 1290, 1410, 1898, 1906], "impli": [15, 40, 59, 65, 1897, 1905, 1923, 1928, 1933, 1935], "ti": [15, 1141, 1666, 1758], "die": 15, "unback": 15, "symint": [15, 1834, 1835, 1836, 1837, 1838, 1881, 1947], "memoiz": [15, 48], "colab": [15, 1889, 1927], "mark": [16, 17, 44, 59, 72, 73, 74, 79, 82, 839, 910, 911, 969, 1325, 1326, 1624, 1681, 1882, 1884, 1905, 1909, 1910, 1916, 1921, 1927, 1929, 1936, 1945], "saroufim": 16, "evalfram": 16, "min": [16, 39, 42, 52, 59, 73, 133, 202, 203, 204, 205, 316, 708, 709, 710, 771, 783, 784, 793, 815, 832, 833, 834, 835, 838, 888, 961, 962, 1028, 1065, 1099, 1100, 1172, 1243, 1257, 1258, 1264, 1268, 1270, 1275, 1281, 1301, 1334, 1366, 1403, 1430, 1432, 1452, 1464, 1471, 1517, 1554, 1558, 1587, 1589, 1594, 1612, 1698, 1703, 1704, 1713, 1717, 1719, 1729, 1830, 1854, 1855, 1856, 1857, 1881, 1883, 1895, 1898, 1923, 1925, 1930, 1933, 1935, 1951], "partit": [16, 28, 46, 47, 1352, 1851, 1923, 1925, 1928, 1936, 1937], "usercod": 16, "ddp": [16, 42, 43, 44, 46, 65, 1483, 1624, 1880, 1908, 1909, 1935], "unrol": [16, 74, 79, 1884, 1885, 1923], "fsdp": [16, 44, 47, 65, 1880], "modif": [16, 19, 34, 65, 73, 238, 793, 910, 1137, 1138, 1212, 1444, 1624, 1905, 1910, 1916, 1927, 1930], "delai": [16, 1624, 1937], "outlin": [16, 43, 1928, 1936], "bucket": [16, 29, 40, 46, 1352, 1624, 1883, 1909, 1925], "broadcast": [16, 42, 46, 48, 65, 70, 114, 213, 414, 416, 417, 418, 527, 529, 531, 579, 698, 699, 700, 701, 702, 703, 704, 710, 748, 897, 934, 939, 942, 946, 947, 948, 949, 979, 999, 1028, 1079, 1080, 1085, 1090, 1130, 1131, 1132, 1133, 1154, 1156, 1168, 1178, 1236, 1237, 1244, 1257, 1261, 1266, 1267, 1269, 1272, 1280, 1300, 1305, 1306, 1316, 1333, 1336, 1345, 1348, 1361, 1379, 1398, 1450, 1516, 1525, 1587, 1624, 1682, 1718, 1726, 1749, 1751, 1827, 1846, 1851, 1875, 1880, 1881, 1885, 1898, 1899, 1900, 1909, 1923, 1925, 1940], "fraction": [16, 39, 48, 1055, 1128, 1134, 1329, 1375, 1376, 1377, 1392, 1393, 1450, 1491, 1538, 1539, 1641, 1642, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1730, 1903], "rob": 16, "fusion": [16, 18, 19, 28, 29, 73, 805, 827, 873, 874, 966, 1214, 1220, 1225, 1226, 1227, 1228, 1893, 1916, 1930], "diminish": 16, "vast": 16, "nopython": [16, 19, 20, 29], "250k": 16, "aitempl": 16, "fuse": [16, 18, 19, 28, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 805, 806, 815, 817, 818, 819, 827, 860, 872, 873, 966, 1225, 1226, 1593, 1686, 1687, 1893, 1898, 1923, 1926, 1930, 1931, 1932, 1933], "mobil": [16, 1893, 1930], "fine": [16, 33, 42, 44, 46, 49, 871, 874, 1136, 1227, 1593, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1879, 1880, 1897, 1905, 1908, 1910, 1923, 1927, 1928, 1930, 1939], "succeed": [16, 50, 59, 86, 88, 1301], "aot_eag": [16, 29], "warn": [16, 17, 20, 21, 29, 33, 36, 40, 42, 46, 65, 98, 99, 693, 914, 920, 956, 997, 1044, 1048, 1059, 1062, 1063, 1153, 1193, 1227, 1269, 1313, 1450, 1488, 1489, 1490, 1491, 1633, 1636, 1772, 1780, 1865, 1872, 1879, 1891, 1895, 1906, 1910, 1925, 1927, 1934], "torchdynamo_debug_funct": [16, 29], "desired_function_nam": 16, "replay_record_en": [16, 29], "hundr": [16, 29, 1904, 1915], "thousand": [16, 29], "highli": [16, 59, 1352, 1624, 1879, 1917, 1923, 1939, 1946], "tini": [16, 22, 1945, 1946, 1951], "torchdynamo_repro_aft": [16, 29], "aot": [16, 17, 29, 693, 968, 1891], "your_model": 16, "quickest": 16, "repro": [16, 29, 1681], "torchdynamo_repro_dir": 16, "nvfuser": [16, 19, 29, 1882], "leverag": [16, 18, 966, 1935], "compile_tim": [16, 25, 29], "torch_compile_debug": [16, 19], "_inductor": [16, 18, 21, 29, 966], "diagram": [16, 29, 50, 59, 1212, 1444, 1930, 1937], "guard": [16, 18, 23, 26, 29, 50, 74, 79, 82, 693, 966, 1880, 1891, 1918, 1925, 1927, 1947, 1950], "cache_size_limit": [16, 18, 20, 29, 966], "troubl": [16, 17, 29], "compileprofil": [16, 29], "profiler_model": [16, 29], "upcom": [16, 29, 42, 65, 1904], "tune": [16, 29, 40, 42, 46, 1042, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1905, 1908, 1917, 1930], "traffic": 16, "frozen_toy_exampl": 16, "vertic": [16, 1873, 1874, 1926, 1928, 1944], "cosin": [16, 696, 697, 981, 982, 1378, 1379, 1525, 1703, 1704, 1711, 1789, 1926], "horizont": [16, 964, 1175, 1177, 1926, 1928], "simplest": [16, 20, 21, 39, 44, 50, 73, 871, 1357, 1358, 1359, 1372, 1373, 1374, 1437, 1438, 1439, 1634, 1909, 1910, 1916, 1930, 1937, 1939], "schedul": [16, 44, 50, 52, 58, 65, 72, 693, 1697, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1891, 1909, 1915, 1929], "physic": [16, 60, 1103, 1121, 1886, 1907, 1918, 1939], "principl": [16, 1908], "stream": [16, 39, 42, 50, 57, 65, 72, 167, 501, 906, 920, 986, 987, 988, 989, 992, 993, 994, 1002, 1005, 1006, 1020, 1026, 1058, 1061, 1325, 1326, 1331, 1679, 1751, 1880, 1883, 1885, 1935], "multiprocessor": 16, "tile": [16, 507, 1883, 1925, 1939], "some_fun": [16, 29], "insurmount": [16, 29], "invis": [16, 29, 1908], "introduc": [16, 21, 23, 29, 36, 48, 70, 773, 1284, 1396, 1414, 1459, 1554, 1756, 1879, 1885, 1906, 1909, 1917, 1923, 1927, 1928, 1929, 1935, 1939, 1945], "maxim": [16, 29, 887, 1309, 1440, 1441, 1442, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1697, 1698, 1699, 1700, 1939], "explain": [16, 29, 34, 42, 1700, 1879, 1885, 1904, 1908, 1911, 1918, 1939], "aggreg": [16, 29, 40, 42, 44, 52, 65, 1388, 1535, 1624, 1647, 1895, 1928], "woo": [16, 29], "out_guard": [16, 29], "ops_per_graph": [16, 29], "builtinvari": [16, 29], "constantvari": [16, 20, 29], "t2": [16, 29, 49, 700, 701, 893, 1136, 1165, 1624, 1935, 1936], "generic_jump": [16, 29], "17": [16, 29, 33, 42, 698, 1209, 1264, 1441, 1803, 1882, 1923, 1925, 1939], "throw": [16, 19, 29, 42, 43, 47, 72, 73, 207, 339, 344, 558, 627, 1197, 1212, 1252, 1301, 1444, 1624, 1626, 1627, 1660, 1671, 1725, 1865, 1900, 1905, 1920, 1935, 1945], "fullgraph": [16, 18, 29, 966], "went": [16, 42, 73], "torchdynamo_dynamic_shap": 16, "cv": 16, "nlp": [16, 40, 1407, 1408, 1409, 1416], "client": [16, 42, 46, 59, 1042, 1927], "app": 16, "unnecessarili": 16, "cold": [16, 24], "metric": [16, 24, 45, 1034, 1036, 1042, 1713, 1895, 1916, 1929, 1944], "visibli": 16, "torchdynamo_repro_level": [16, 29], "bisect": [16, 29], "codegen": [16, 22, 29, 73, 1910], "dramat": [16, 29], "impact": [16, 23, 29, 40, 42, 1042, 1773, 1893, 1895, 1905, 1930, 1943], "fallback_random": [16, 18, 29, 966], "alpha": [16, 48, 114, 115, 116, 117, 122, 123, 124, 125, 126, 127, 168, 169, 328, 329, 567, 574, 575, 576, 577, 698, 699, 702, 703, 704, 757, 783, 788, 934, 1028, 1029, 1169, 1183, 1356, 1366, 1386, 1432, 1471, 1509, 1517, 1532, 1533, 1543, 1561, 1594, 1683, 1697, 1790, 1791, 1804, 1808, 1822, 1827, 1828, 1881, 1883, 1905, 1910, 1923, 1926], "root": [16, 42, 44, 52, 59, 60, 65, 73, 806, 1150, 1249, 1250, 1697, 1760, 1819, 1893, 1905, 1927, 1935, 1936, 1939], "allevi": [16, 1928], "cudagraph": [16, 18, 19, 22, 24, 966, 1020, 1880, 1908], "amen": 17, "portion": [17, 29, 65, 1134, 1381, 1475, 1583, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1931], "usecas": 17, "disallow_in_graph": 17, "allow_in_graph": [17, 74], "excel": [17, 73], "unblock": 17, "friendli": 17, "disallow": [17, 73, 1927, 1935, 1942], "nnthi": 17, "suitabl": [17, 39, 48, 950, 1231, 1700, 1765, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1919, 1929, 1931, 1944], "fbgemm": [17, 755, 756, 769, 777, 846, 868, 869, 872, 874, 875, 1930, 1931], "black": 17, "nnnote": 17, "screen": [17, 25], "deploy": [17, 50, 59, 1880], "tl": [17, 19], "dr": 17, "intercept": [17, 65, 73, 1910], "a_fn": 17, "b_fn": 17, "aa_fn": 17, "ab_fn": 17, "green": [17, 1884, 1885], "color": [17, 1409, 1884, 1885, 1944], "white": 17, "offend": [17, 1879], "syntax": [17, 1212, 1882, 1885, 1927], "style": [17, 44, 47, 49, 73, 890, 1080, 1136, 1670, 1882, 1884, 1885, 1923, 1927, 1944], "miss": [17, 20, 57, 65, 702, 1141, 1212, 1306, 1316, 1378, 1407, 1408, 1409, 1444, 1560, 1666, 1910, 1922, 1923, 1924, 1939], "incorrectli": [17, 36, 65, 989, 1130], "cautiou": 17, "switch": [17, 31, 39, 68, 72, 73, 1254, 1255, 1256, 1384, 1543, 1581, 1628, 1761, 1865, 1897, 1905, 1908, 1916, 1918, 1926], "safeti": [17, 50, 73, 968, 969, 1882, 1885, 1899], "bypass": [17, 968, 1085, 1889, 1900, 1908, 1910], "sound": [17, 73, 968, 969, 1472, 1889, 1944], "faq": [17, 39, 1381, 1660, 1880], "inlin": [17, 33, 72, 74, 76, 80, 1028, 1212, 1216, 1227, 1907], "begin": [17, 29, 36, 39, 40, 42, 43, 51, 59, 65, 73, 510, 693, 773, 797, 833, 834, 878, 935, 979, 986, 1034, 1036, 1105, 1165, 1171, 1232, 1267, 1279, 1359, 1360, 1361, 1378, 1380, 1386, 1396, 1397, 1400, 1401, 1402, 1403, 1404, 1405, 1411, 1414, 1415, 1430, 1435, 1438, 1439, 1451, 1452, 1459, 1462, 1475, 1481, 1486, 1493, 1526, 1547, 1548, 1624, 1631, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1703, 1705, 1711, 1778, 1781, 1784, 1826, 1851, 1862, 1875, 1885, 1904, 1905, 1908, 1910, 1913, 1915, 1920, 1923, 1926, 1933, 1940], "deprec": [17, 42, 50, 59, 60, 65, 69, 422, 527, 570, 616, 798, 799, 800, 806, 839, 920, 921, 956, 957, 1035, 1039, 1158, 1212, 1266, 1269, 1301, 1302, 1360, 1361, 1378, 1380, 1403, 1404, 1410, 1411, 1435, 1436, 1444, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1497, 1498, 1515, 1516, 1526, 1555, 1578, 1586, 1612, 1613, 1614, 1616, 1624, 1665, 1666, 1668, 1671, 1729, 1745, 1826, 1830, 1853, 1880, 1882, 1887, 1897, 1906, 1929, 1933, 1941, 1945, 1946], "finer": [17, 47], "wishlist": 17, "cc": [17, 33, 42, 1908], "skipfiles_inline_module_allowlist": 17, "breadcrumb": 17, "forgot": 17, "64": [18, 19, 68, 69, 71, 966, 1146, 1147, 1151, 1349, 1350, 1351, 1353, 1354, 1355, 1361, 1472, 1593, 1766, 1900, 1922, 1923, 1930, 1934, 1939, 1942, 1944, 1945], "front": [18, 270, 966, 1284, 1447, 1899, 1911], "overspeci": [18, 73, 966], "autotun": [18, 21, 22, 966], "workspac": [18, 33, 966], "realloc": [18, 966, 1186], "perf_hint": [18, 693, 966], "list_mode_opt": [18, 21, 966], "notabl": [18, 966, 1885], "epilogue_fus": [18, 966], "templat": [18, 966, 1028, 1029, 1926], "max_autotun": [18, 966], "shape_pad": [18, 966], "graph_diagram": [18, 966], "pictur": [18, 966], "list_opt": [18, 21, 966], "checkout": [19, 1923], "new_fn": 19, "input_tensor": [19, 42], "10000": [19, 36, 40, 707, 1711, 1758, 1912, 1916, 1939, 1944], "Its": [19, 42, 73, 984, 1000, 1212, 1259, 1277, 1278, 1303, 1444, 1671, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1693, 1696, 1697, 1698, 1699, 1700, 1869, 1885, 1909], "famou": 19, "suboptim": [19, 40], "crucial": [19, 20, 21, 22, 34, 1889], "bottleneck": [19, 40, 1880, 1916], "bandwidth": [19, 22, 40, 42, 58, 60, 1930, 1935], "crunch": 19, "elimin": [19, 28, 42, 73, 623, 1862, 1863, 1920], "trig": 19, "size_hint": 19, "16384": [19, 1908], "filenam": [19, 33, 39, 73, 1211, 1219, 1222, 1879, 1883, 1894, 1905, 1927, 1941, 1944], "__file__": [19, 1879, 1922, 1927], "fp32": [19, 65, 794, 807, 830, 1070, 1624, 1908, 1919, 1930, 1931, 1933], "i32": 19, "instance_descriptor": 19, "divisible_by_16": 19, "equal_to_1": 19, "in_ptr0": 19, "out_ptr0": 19, "xnumel": 19, "xblock": 19, "constexpr": 19, "xoffset": 19, "program_id": 19, "xindex": 19, "xmask": 19, "x0": [19, 48], "tmp0": 19, "tmp1": 19, "tmp2": 19, "tmp3": 19, "temporari": [19, 33, 73, 836, 839, 1625, 1905, 1912], "held": [19, 72, 986, 1010, 1038, 1322, 1904], "resnet50": [19, 1879, 1944], "hub": [19, 1880, 1894], "v0": 19, "resnet18": [19, 25, 68, 73, 1879, 1882, 1884, 1894, 1927], "opt_model": 19, "inspir": [19, 65, 1689, 1910], "frequent": [19, 21, 31, 44, 1352, 1880, 1918, 1919, 1921, 1939], "timm": [19, 21, 24], "download": [19, 1894, 1922, 1944], "huggingfac": [19, 21, 24], "berttoken": 19, "bertmodel": 19, "past": [19, 22, 24, 42, 73, 997, 1044, 1048, 1062, 1063, 1624, 1912], "bert": [19, 1490], "uncas": 19, "token": [19, 59, 986, 1020, 1021, 1879, 1886], "from_pretrain": [19, 1387, 1388], "me": 19, "encoded_input": 19, "return_tensor": 19, "pt": [19, 31, 40, 1217, 1219, 1222, 1229, 1283, 1761, 1882, 1916, 1921, 1927], "trigonometri": 19, "skim": 19, "create_model": 19, "resnext101_32x8d": 19, "7": [19, 24, 33, 39, 40, 42, 48, 73, 74, 79, 276, 329, 331, 333, 337, 417, 418, 486, 527, 573, 620, 630, 698, 710, 758, 759, 917, 919, 942, 945, 950, 956, 960, 964, 1068, 1080, 1082, 1083, 1086, 1101, 1124, 1125, 1128, 1131, 1135, 1165, 1175, 1189, 1233, 1237, 1247, 1252, 1254, 1255, 1258, 1259, 1263, 1264, 1268, 1275, 1342, 1343, 1344, 1350, 1351, 1354, 1355, 1357, 1368, 1387, 1432, 1440, 1441, 1465, 1466, 1467, 1468, 1469, 1495, 1510, 1581, 1649, 1654, 1664, 1671, 1689, 1736, 1740, 1746, 1756, 1757, 1758, 1765, 1778, 1781, 1783, 1794, 1795, 1803, 1810, 1812, 1813, 1818, 1830, 1832, 1833, 1840, 1845, 1846, 1849, 1851, 1860, 1869, 1873, 1882, 1886, 1892, 1899, 1900, 1906, 1908, 1910, 1919, 1921, 1923, 1925, 1930, 1939, 1942, 1943, 1944, 1945, 1946], "highest": [19, 99, 693, 1352, 1740, 1741, 1773, 1931, 1946], "aot_ts_nvfus": 19, "nvprims_nvfus": 19, "onnxrt": 19, "ipex": 19, "tvm": 19, "apach": 19, "symbolic_trac": [19, 73], "partial": [19, 23, 48, 50, 59, 65, 68, 73, 854, 1031, 1075, 1152, 1165, 1258, 1259, 1260, 1302, 1440, 1441, 1442, 1570, 1571, 1572, 1624, 1643, 1810, 1885, 1886, 1899, 1905, 1910, 1913, 1923, 1937, 1946], "smoother": [19, 1879, 1892], "transit": [19, 20, 1212, 1313, 1444, 1826, 1880, 1882], "ux": [20, 66, 71], "perspect": [20, 1909, 1919, 1936], "fn_foo": 20, "grab": 20, "dig": 20, "hole": 20, "perf": [20, 22, 33, 693, 1930], "neutral": 20, "referenc": [20, 73, 989, 1212, 1444, 1853, 1884, 1905, 1923, 1935], "previous": [20, 23, 59, 65, 66, 69, 70, 71, 73, 238, 711, 805, 806, 1153, 1219, 1824, 1825, 1867, 1868, 1872, 1882, 1906, 1908, 1916, 1927, 1928, 1934, 1935, 1940], "translat": [20, 42, 102, 103, 1165, 1905, 1937], "check_fn": 20, "thrown": [20, 42, 47, 65, 72, 630, 891, 893, 1042, 1083, 1175, 1212, 1242, 1251, 1253, 1255, 1258, 1259, 1270, 1444, 1628, 1873, 1927], "_pyinterpreterstate_setevalframefunc": 20, "convert_fram": [20, 29], "convert_frame_assert": 20, "gloss": 20, "proxi": [20, 42, 44, 1930], "222": 20, "compiler_fn": 20, "one_graph": 20, "_convert_frame_assert": 20, "frametyp": 20, "cache_s": [20, 48], "f_code": 20, "unsupport": [20, 23, 70, 74, 76, 80, 82, 96, 98, 1882, 1886, 1899, 1924, 1935, 1939], "drop": [20, 39, 69, 71, 73, 1031, 1217, 1270, 1275, 1356, 1666, 1826, 1882, 1899, 1918], "needless": 20, "evict": 20, "alongsid": [20, 33, 1212, 1444, 1910], "transform_code_object": 20, "output_instruct": 20, "rememb": [20, 1912, 1918], "guardedcod": 20, "symbolic_loc": 20, "f_local": 20, "travers": [20, 65, 849, 1624, 1909, 1910, 1936, 1948, 1949], "ordereddict": [20, 1212, 1444, 1445, 1454, 1472, 1615, 1647, 1883, 1916, 1921, 1946], "k": [20, 22, 29, 39, 42, 44, 48, 60, 73, 302, 370, 520, 527, 529, 531, 603, 630, 773, 959, 1072, 1085, 1141, 1154, 1174, 1233, 1241, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1256, 1257, 1258, 1261, 1263, 1270, 1272, 1274, 1275, 1284, 1302, 1306, 1357, 1359, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1392, 1393, 1396, 1397, 1414, 1415, 1429, 1431, 1432, 1437, 1439, 1450, 1451, 1459, 1461, 1526, 1538, 1539, 1561, 1578, 1593, 1631, 1717, 1719, 1729, 1757, 1807, 1808, 1809, 1810, 1812, 1813, 1814, 1816, 1817, 1826, 1848, 1853, 1881, 1883, 1884, 1903, 1908, 1910, 1922, 1939, 1940, 1942], "variablebuild": 20, "localsourc": 20, "_wrap": 20, "construct": [20, 33, 34, 39, 42, 44, 46, 47, 48, 59, 65, 67, 69, 70, 73, 74, 79, 80, 167, 463, 805, 806, 837, 891, 892, 906, 920, 974, 1072, 1088, 1153, 1174, 1212, 1223, 1227, 1228, 1235, 1242, 1282, 1283, 1298, 1313, 1387, 1388, 1444, 1534, 1615, 1624, 1626, 1627, 1657, 1664, 1678, 1719, 1723, 1770, 1805, 1812, 1813, 1814, 1815, 1816, 1817, 1831, 1844, 1847, 1872, 1880, 1882, 1895, 1908, 1909, 1916, 1918, 1921, 1927, 1930, 1935, 1937, 1942, 1944, 1945, 1946], "variabletrack": 20, "make_guard": 20, "outputgraph": [20, 73], "mention": [20, 22, 29, 42, 65, 1879, 1884, 1885, 1899, 1905, 1908, 1916, 1923, 1939, 1943], "recal": [20, 1361, 1910, 1944], "heart": [20, 39], "pump": 20, "cool": 20, "get_instruct": 20, "124": 20, "opnam": 20, "argval": 20, "starts_lin": 20, "is_jump_target": 20, "littl": [20, 42, 1910, 1937], "hasattr": [20, 73, 1883, 1910, 1930], "inst": 20, "unimpl": 20, "getattr": [20, 73, 1883, 1910, 1921], "inde": [20, 23, 49, 1882, 1892, 1927, 1937], "onto": [20, 28, 42, 65, 73, 74, 76, 1047, 1219, 1222, 1283, 1636, 1879, 1897, 1908, 1911, 1912, 1916, 1929], "dozen": 20, "symbolic_convert": [20, 29], "spoken": 20, "quiet": 20, "closer": [20, 22, 1165, 1493, 1730, 1910, 1916], "mind": [20, 21, 25, 1257, 1275, 1387, 1905, 1911, 1913], "replace_guard": 20, "add_guard": 20, "visit": [20, 22, 62, 1923], "act": [20, 44, 48, 50, 57, 70, 871, 1361, 1445, 1446, 1455, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1648, 1650, 1651, 1652, 1653, 1654, 1865, 1908, 1916, 1920, 1926], "behalf": 20, "python_typ": 20, "as_proxi": 20, "as_python_proxi": 20, "bookkeep": 20, "came": 20, "somewher": [20, 1899, 1915], "flesh": 20, "notimplementederror": [20, 48, 1927], "relianc": 20, "fulfil": [20, 1905, 1911, 1927], "build_tupl": 20, "gist": [20, 22, 69, 806, 1913], "notion": [20, 39, 921, 1362, 1363, 1364, 1407, 1408, 1409, 1483], "popn": 20, "tuplevari": 20, "pydoc": 20, "tensorvari": 20, "instructiontranslatorbas": 20, "pop": [20, 70, 1046, 1445, 1454, 1925, 1928, 1929], "dataclass": [20, 28, 44], "ctor": 20, "guardsourc": 20, "create_fn": 20, "kind": [20, 42, 53, 73, 693, 1231, 1625, 1681, 1728, 1793, 1879, 1889, 1910, 1918, 1923, 1927, 1930, 1940, 1942], "guard_sourc": 20, "elif": [20, 28, 73, 1218, 1410, 1678, 1884, 1885, 1914], "istyp": 20, "guardbuild": 20, "equals_match": 20, "rangevari": 20, "appar": 20, "checkfunctionmanag": 20, "compile_check_fn": 20, "cacheentri": 20, "create_cache_entri": 20, "pyobject": 20, "guarded_cod": 20, "malloc": [20, 65], "sizeof": [20, 1941], "debug_null_check": 20, "pyobject_getattrstr": 20, "null_check": 20, "pycodeobject": 20, "compos": [20, 23, 48, 69, 73, 751, 752, 753, 754, 755, 756, 779, 780, 785, 786, 787, 795, 796, 957, 959, 1143, 1145, 1146, 1147, 1153, 1212, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1393, 1412, 1413, 1432, 1437, 1438, 1439, 1444, 1492, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1561, 1564, 1565, 1567, 1568, 1569, 1734, 1735, 1872, 1880, 1881, 1882, 1885, 1898, 1910, 1911, 1916, 1923, 1927, 1944], "sort_kei": 20, "guard_nn_modul": 20, "is_nn_modul": 20, "local_build": 20, "global_build": 20, "___guarded_cod": 20, "___check_type_id": 20, "94367738391392": 20, "___check_tensor": 20, "id": [20, 24, 29, 36, 39, 42, 46, 50, 58, 59, 60, 65, 73, 787, 837, 986, 1021, 1483, 1569, 1608, 1624, 1681, 1885, 1915, 1923, 1925, 1927, 1934, 1935, 1936, 1941], "deeper": [20, 26, 1880, 1916, 1927], "dive": [20, 22, 26, 1880, 1909, 1913, 1927], "_eval_fram": 20, "anew": 20, "massiv": 20, "role": [20, 44, 50, 51, 59, 60], "weak": 20, "moduleinvalid": 20, "2x": [21, 22, 1944], "compress": [21, 24, 40, 65, 225, 600, 601, 1107, 1108, 1117, 1118, 1624, 1812, 1813, 1814, 1816, 1817, 1850, 1880], "varieti": [21, 1908, 1936], "announc": [21, 59], "compiled_fn": 21, "set_float32_matmul_precis": [21, 1161], "simpler": [21, 71, 1153, 1872, 1882, 1905, 1910, 1913, 1916], "bench_al": 21, "IF": 21, "odd": [21, 48, 1106, 1107, 1108, 1116, 1117, 1118, 1518, 1519, 1520], "quirk": 21, "ask": [21, 42, 69, 70, 1879, 1880, 1911, 1913], "overview": [21, 34, 42, 56, 1624, 1880, 1892, 1897, 1905, 1913, 1916, 1928, 1930, 1935], "nnmodul": 21, "torchinductor_unique_kernel_nam": 22, "triton_": 22, "envvar": 22, "meaning": [22, 50, 52, 53, 1042, 1908], "triton_poi_fused_cat_155": 22, "categori": [22, 23, 48, 52, 98, 1334, 1885, 1887, 1923, 1926, 1929, 1931, 1942], "poi": 22, "torchinductor_benchmark_kernel": 22, "har": 22, "torchinductor_max_autotun": 22, "hope": [22, 1923], "breakdown": 22, "mixnet_l": 22, "timm_model": 22, "amp": [22, 24, 29, 1031, 1880, 1904], "dashboard": [22, 26, 1880], "torchinductor_shunt": 22, "qz": 22, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 22, "shunting314": 22, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 22, "48efc83b12ec3ead950052e4a0220b10": 22, "p": [22, 40, 44, 48, 65, 73, 171, 250, 302, 440, 441, 468, 505, 506, 621, 699, 702, 934, 936, 946, 954, 1079, 1232, 1243, 1249, 1250, 1258, 1259, 1301, 1303, 1306, 1316, 1337, 1356, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1410, 1412, 1413, 1449, 1453, 1455, 1492, 1493, 1509, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1564, 1565, 1575, 1579, 1582, 1583, 1609, 1628, 1634, 1636, 1642, 1651, 1671, 1699, 1750, 1807, 1881, 1883, 1884, 1904, 1905, 1908, 1912, 1913, 1918, 1929, 1939, 1940], "8243734a38b5733ea78479209c0ae893": 22, "chrome": [22, 25, 929, 1929], "compiled_module_profil": 22, "json": [22, 25, 52, 57, 61, 1915, 1929], "browser": [22, 25], "ui": [22, 24, 1913, 1944], "zoom": [22, 25], "percent": [22, 1044, 1063], "regard": [22, 42, 1375, 1376, 1377, 1387, 1388, 1534, 1535, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1882, 1937, 1939], "102": [22, 1352], "88": 22, "distort": [22, 25], "densenet121": 22, "69": 22, "58": [22, 42], "85": [22, 25, 73, 1447, 1711], "89": [22, 630, 1737], "cutlass": [22, 1939], "cudnn": [22, 37, 38, 773, 1221, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1396, 1414, 1459, 1460, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1773, 1880, 1883, 1908, 1919, 1920], "conv": [22, 23, 73, 715, 716, 717, 718, 719, 720, 721, 722, 723, 805, 806, 809, 827, 867, 873, 1212, 1221, 1227, 1228, 1372, 1373, 1374, 1375, 1376, 1377, 1444, 1445, 1451, 1893, 1903, 1908, 1919, 1923, 1930, 1931, 1932, 1933], "56": [22, 753, 1939], "57": 22, "gain": [22, 1700, 1903], "effort": [22, 42, 1935], "nice": [22, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1437, 1438, 1439, 1495, 1899, 1905, 1927], "triton_red_fused__native_batch_norm_legit_functional_16": 22, "19": [22, 698, 759, 959, 1441, 1882, 1923, 1939], "jk": [22, 1085], "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 22, "renam": [22, 806, 1883, 1898, 1899, 1925], "96a0afef9dce53d6357bf1633094f358": 22, "standalon": [22, 33, 58, 59, 60, 830, 1223, 1227, 1882], "constabl": 23, "edg": [23, 792, 798, 1165, 1173, 1174, 1554, 1612, 1890, 1911, 1936], "orchestr": 23, "_forward_pre_hook": 23, "forward_hook": [23, 1916], "_backward_pre_hook": 23, "_backward_hook": 23, "_state_dict_hook": 23, "load_": 23, "alter": [23, 1904, 1910], "backward_hook": [23, 1916], "avoiabl": 23, "fire": [23, 1212, 1444, 1909, 1915], "presenc": [23, 70, 73, 1221, 1339, 1918, 1927, 1939], "opaqu": [23, 42, 49, 986, 1020, 1021, 1136], "skip_nnmodule_hook_guard": 23, "react": [23, 50], "pre_backward": 23, "accordingli": [23, 48, 73, 1221, 1414, 1636, 1900, 1935], "warn_onc": 23, "bin": [24, 50, 57, 59, 316, 317, 832, 937, 1172, 1173, 1174, 1883, 1885, 1925, 1944], "hui": 24, "nightli": 24, "gcp": [24, 42], "a100": [24, 29], "night": 24, "40gb": [24, 29], "2ghz": 24, "xeon": [24, 1880, 1907], "suit": [24, 42, 1882, 1884, 1885, 1923, 1931, 1935], "torchbench": 24, "trend": 24, "droplist": 24, "geometr": [24, 302, 792, 798, 1543, 1554, 1612, 1866, 1880, 1925, 1947], "peak": [24, 44, 46, 65, 1034, 1036, 1042, 1049, 1050, 1051, 1624, 1705, 1711, 1928], "footprint": [24, 40, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1908, 1939], "ratio": [24, 48, 50, 630, 1392, 1393, 1538, 1539, 1883, 1939], "click": [24, 25, 1947], "with_cudagraph": 24, "dynamic_shap": [24, 1677], "kick": [24, 1909, 1935, 1936], "Be": [24, 1923], "wise": [24, 40, 42, 48, 700, 701, 711, 771, 783, 784, 793, 797, 897, 978, 1085, 1090, 1131, 1132, 1155, 1156, 1168, 1177, 1234, 1236, 1293, 1294, 1295, 1296, 1300, 1310, 1313, 1315, 1345, 1366, 1377, 1384, 1386, 1400, 1401, 1402, 1403, 1405, 1430, 1433, 1443, 1452, 1462, 1463, 1464, 1471, 1473, 1474, 1475, 1480, 1482, 1484, 1485, 1517, 1532, 1541, 1542, 1546, 1547, 1548, 1549, 1552, 1556, 1558, 1563, 1573, 1574, 1587, 1588, 1589, 1594, 1595, 1596, 1597, 1601, 1603, 1604, 1605, 1810, 1874, 1907, 1910, 1939, 1940, 1943], "granular": [25, 47, 65, 1225, 1904], "toosl": 25, "ncu": 25, "export_chrome_trac": [25, 1929], "artifact": [25, 29, 693, 1891, 1915, 1927], "torchvis": [25, 73, 1879, 1880, 1882, 1884, 1923, 1927, 1930, 1944, 1948], "224": [25, 73, 874, 875, 1882, 1884, 1923], "model_c": 25, "fwd_bwd": 25, "w": [25, 48, 71, 167, 773, 902, 904, 906, 912, 920, 935, 944, 984, 1143, 1154, 1169, 1170, 1209, 1251, 1350, 1351, 1358, 1359, 1361, 1363, 1364, 1368, 1373, 1374, 1380, 1384, 1385, 1387, 1388, 1389, 1396, 1408, 1409, 1416, 1427, 1428, 1438, 1439, 1449, 1450, 1451, 1456, 1457, 1478, 1494, 1495, 1497, 1498, 1508, 1516, 1534, 1535, 1543, 1578, 1584, 1585, 1632, 1665, 1668, 1883, 1898, 1899, 1903, 1905, 1910, 1913, 1926, 1927, 1944], "scroll": 25, "shortcut": 25, "compiledfunct": 25, "compiledfunctionbackward": 25, "draw": [25, 39, 171, 936, 1048, 1334, 1736, 1944], "connect": [25, 42, 50, 59, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425, 1472, 1897, 1935], "ac2g": 25, "dropdown": 25, "525": 25, "_util": [25, 39], "_init_for_cuda_graph": 25, "ed": [25, 48, 70, 1383, 1384, 1905, 1927, 1950], "1gb": [25, 1908], "roughli": [25, 28, 39, 1410, 1909], "graphic": [25, 73, 1896, 1922], "warmup_compil": 25, "fn_c": 25, "record_funct": 25, "trace_compil": 25, "interrupt": [25, 50, 1897], "synthet": 25, "modelwithbreak": 25, "create_sequenti": 25, "128": [25, 630, 733, 741, 742, 769, 777, 807, 832, 833, 1365, 1379, 1406, 1431, 1453, 1492, 1493, 1525, 1593, 1899, 1900, 1930, 1932, 1933, 1935, 1939, 1942, 1945], "mod1": 25, "mod2": 25, "mod3": 25, "mod4": 25, "trace_break": 25, "gap": [25, 878, 1745, 1880, 1930], "pep": [26, 1882, 1884, 1923], "523": 26, "rewrit": [26, 44, 70, 74, 76, 81, 82, 96, 97, 1893, 1905, 1913, 1923], "customiz": [26, 1886, 1948], "usabl": [26, 29, 72, 1885, 1923], "openmp": [26, 1880, 1907, 1922], "video": [26, 1456, 1457, 1899, 1944], "topic": [26, 31, 1915, 1916], "vmap": [27, 66, 68, 69, 73, 914, 916, 920, 921, 922, 1143, 1146, 1147, 1149, 1151], "jacrev": [27, 67, 69, 70, 916, 1145, 1146, 1911], "100320": 27, "escap": [27, 74], "hatch": [27, 74], "introspect": [27, 73, 968], "jax": [27, 66, 69, 70, 71, 1905, 1911], "promis": 27, "pure": [27, 33, 34, 70, 1215, 1882, 1910], "relax": [27, 48, 1227, 1228, 1636, 1930], "pitfal": [27, 1880], "functional_cal": [27, 67, 69, 1151], "sit": 28, "replace_add_with_mul": 28, "insert": [28, 39, 42, 48, 65, 72, 73, 760, 805, 806, 874, 875, 1445, 1446, 1454, 1624, 1765, 1768, 1778, 1799, 1823, 1864, 1882, 1893, 1908, 1924, 1925, 1930], "insert_relu_after_add": 28, "inserting_aft": [28, 73], "new_relu_nod": 28, "replace_all_uses_with": [28, 73], "axi": [28, 527, 529, 531, 835, 838, 976, 1084, 1099, 1125, 1154, 1177, 1731, 1751, 1756, 1757, 1874, 1881, 1883, 1911, 1923, 1928, 1930], "eg": [28, 950, 1758, 1765], "dead": [28, 73], "frequenc": [28, 60, 937, 984, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1209, 1352, 1387, 1388, 1534, 1535, 1705, 1826], "replaceaddwithmul": 28, "transformed_graph_modul": 28, "graph_modul": [28, 872], "replaceaddwithmulsub": 28, "mul_r": 28, "sub": [28, 52, 65, 72, 74, 77, 81, 82, 575, 827, 874, 875, 1223, 1227, 1228, 1309, 1312, 1314, 1456, 1457, 1487, 1488, 1490, 1750, 1828, 1845, 1879, 1881, 1882, 1883, 1898, 1900, 1905, 1918, 1923, 1925, 1939, 1942], "removedetachpass": 28, "detach_copi": [28, 1883, 1925], "len": [28, 39, 42, 44, 73, 74, 79, 235, 558, 708, 709, 1104, 1108, 1111, 1115, 1118, 1122, 1152, 1216, 1278, 1299, 1311, 1339, 1342, 1381, 1581, 1642, 1644, 1660, 1704, 1711, 1815, 1818, 1824, 1825, 1829, 1866, 1867, 1868, 1882, 1883, 1885, 1910, 1925, 1939, 1944], "args_map": 28, "schema": [28, 36, 42, 44, 99, 1881, 1882, 1883, 1885, 1889, 1923], "enumer": [28, 39, 48, 73, 1212, 1444, 1446, 1455, 1704, 1883, 1884, 1904, 1908, 1922, 1944], "_schema": 28, "kwarg_onli": 28, "scalartotensorpass": 28, "breakpoint": [28, 73, 1885], "try_coerc": 28, "tensortyp": [28, 1885], "wildcard": [28, 1899, 1927], "subgraph_rewrit": [28, 73], "replace_pattern": 28, "replaced_pattern": 28, "replace_pattern_with_filt": 28, "traced_modul": [28, 73, 1921], "replacedpattern": 28, "nodes_map": [28, 73], "passmanag": 28, "blob": [28, 805, 1142, 1913, 1915, 1944], "infra": [28, 29, 52, 1924], "pass_manag": 28, "__": [28, 1886], "pm": 28, "replace_add_with_div": 28, "replace_div_with_mul": 28, "run_checks_after_each_pass": 28, "suppress_check_failur": 28, "graph_module_out": 28, "set_check": 28, "check_div_target": 28, "div": [28, 40, 252, 1081, 1130, 1133, 1352, 1456, 1457, 1749, 1858, 1881, 1883, 1889, 1898, 1925, 1939, 1942], "valueerror": [28, 72, 74, 98, 1210, 1636, 1637, 1657, 1660, 1910, 1928, 1946], "add_check": 28, "subgraphmatch": 28, "matcher_util": 28, "match_output": 28, "match_placehold": 28, "remove_overlapping_match": 28, "ignore_liter": 28, "liter": [28, 1680, 1883, 1886, 1899, 1927], "largemodel": 28, "_weight": [28, 758, 759, 1387, 1388], "_bia": 28, "large_model_graph": 28, "patternmodel": 28, "_weight_1": 28, "_bias_1": 28, "pattern_graph": 28, "subgraph_match": 28, "match_result": 28, "internalmatch": 28, "default_factori": 28, "placeholder_nod": 28, "returning_nod": 28, "largest": [28, 65, 603, 937, 1129, 1243, 1264, 1266, 1268, 1269, 1284, 1580, 1632, 1848, 1881, 1883, 1884, 1885, 1951], "capabilitybasedpartition": 28, "l34": 28, "operator_support": 28, "operatorsupportbas": 28, "allows_single_node_partit": 28, "non_compute_op": 28, "ex": [28, 51, 1624, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1895], "_oper": 28, "getitem": [28, 74, 82, 84], "allowed_single_node_partition_op": 28, "ll28c1": 28, "l28c1": 28, "is_node_support": 28, "chain": [28, 39, 40, 48, 72, 73, 167, 906, 956, 1267, 1388, 1472, 1701, 1714, 1885, 1905, 1908, 1910, 1913, 1916, 1926], "operatorsuppportbas": 28, "l150": 28, "any_chain": 28, "l164": 28, "addmuloperatorsupport": 28, "capability_partition": 28, "op_support": 28, "partition_list": 28, "propose_partit": 28, "call_modul": [28, 73], "fused_graph_modul": 28, "fuse_partit": 28, "lazo": 29, "meantim": [29, 1360, 1361, 1378, 1380, 1404, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1515, 1516, 1526, 1555, 1578, 1586], "_log": [29, 1880, 1885], "set_log": [29, 1880, 1891], "smallest": [29, 52, 955, 1233, 1243, 1264, 1268, 1284, 1728, 1848, 1946, 1951], "suspect": [29, 36, 1700, 1908], "taken": [29, 42, 48, 65, 72, 73, 74, 79, 878, 1106, 1108, 1131, 1132, 1367, 1380, 1388, 1451, 1527, 1535, 1778, 1810, 1903, 1905, 1907, 1908, 1910, 1912, 1915, 1921, 1923, 1927, 1929], "proce": [29, 1904, 1908, 1935], "sampl": [29, 39, 44, 48, 66, 71, 73, 105, 170, 171, 393, 469, 496, 621, 792, 936, 984, 997, 1031, 1044, 1048, 1062, 1063, 1103, 1121, 1143, 1153, 1165, 1209, 1228, 1301, 1334, 1356, 1360, 1361, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1398, 1404, 1407, 1408, 1409, 1410, 1411, 1429, 1431, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1462, 1475, 1476, 1483, 1492, 1508, 1515, 1516, 1526, 1528, 1529, 1530, 1531, 1534, 1535, 1536, 1540, 1543, 1545, 1553, 1554, 1555, 1578, 1586, 1624, 1632, 1672, 1704, 1719, 1722, 1736, 1738, 1740, 1742, 1744, 1808, 1824, 1825, 1826, 1867, 1868, 1872, 1880, 1895, 1903, 1904, 1908, 1915, 1916, 1927, 1930, 1931, 1944], "test_assertion_error": 29, "compiled_test_assertion_error": 29, "mlazo": 29, "837": 29, "build_map": 29, "assertionerror": [29, 65, 73, 98, 747, 1681, 1946], "fortun": [29, 1912], "isol": [29, 73, 1615, 1897, 1928], "test_backend_error": 29, "_foobar": [29, 1925], "dummi": [29, 39, 46, 1905, 1910, 1950], "compiled_test_backend_error": 29, "246": [29, 630], "185": [29, 630], "decomp_fn": 29, "810": 29, "repro_aft": 29, "nearli": [29, 167, 906, 920, 1719, 1918, 1935], "minifier_launch": 29, "base_dir": 29, "successfulli": [29, 42, 50, 56, 86, 87, 88, 1218, 1774, 1897, 1916, 1921, 1935], "runnabl": [29, 73, 1904, 1923, 1944], "rand_strid": 29, "0a0": 29, "gitfddfc44": 29, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 29, "nvcc": [29, 33, 1016], "2005": [29, 696, 1868], "2022": 29, "thu_feb_10_18": 29, "23": [29, 42, 527, 1284, 1789, 1882, 1939], "41_pst_2022": 29, "v11": 29, "112": [29, 630], "cuda_11": 29, "r11": 29, "30978841_0": 29, "sxm4": 29, "float32": [29, 39, 40, 74, 79, 82, 283, 593, 630, 832, 833, 834, 835, 838, 839, 893, 974, 1099, 1100, 1137, 1159, 1161, 1194, 1348, 1361, 1496, 1497, 1498, 1510, 1686, 1687, 1723, 1728, 1736, 1740, 1755, 1770, 1771, 1773, 1815, 1870, 1900, 1904, 1908, 1919, 1923, 1932, 1939, 1940, 1941, 1942, 1945, 1946, 1951], "compile_fx": 29, "compile_fx_inn": 29, "walk": [29, 34, 73, 1889, 1910, 1927, 1936, 1937, 1943], "toi": [29, 56], "toy_compil": 29, "debug_util": 29, "run_fwd_maybe_bwd": 29, "opt_mod": 29, "sh": [29, 781, 782, 786, 787, 1511, 1512, 1519, 1520, 1522, 1523, 1568, 1569], "st": [29, 1512, 1520, 1523, 1569], "dt": [29, 1520, 1523, 1940], "requires_grad_": [29, 351, 463, 1212, 1367, 1444, 1527, 1807, 1844, 1883, 1898, 1905, 1945], "rg": 29, "autocast": [29, 1031, 1450, 1880, 1908, 1910], "test_model": 29, "layernorm": [29, 1399, 1407, 1408, 1409, 1487, 1491, 1557, 1900, 1932], "overridden": [29, 33, 73, 902, 903, 904, 1028, 1444, 1805, 1885, 1905, 1910, 1919, 1928, 1950], "debug_dir_root": 29, "torch_compile_debug_dir": 29, "timestamp": [29, 52, 53, 56, 60, 1895, 1929, 1944], "cd": [29, 1922, 1927, 1929], "l": [29, 48, 748, 773, 935, 944, 950, 957, 958, 1085, 1169, 1170, 1212, 1231, 1241, 1242, 1247, 1248, 1249, 1250, 1254, 1258, 1259, 1301, 1303, 1357, 1360, 1361, 1362, 1372, 1380, 1383, 1384, 1391, 1396, 1404, 1405, 1407, 1410, 1411, 1414, 1426, 1435, 1437, 1444, 1446, 1450, 1451, 1459, 1475, 1492, 1493, 1495, 1593, 1642, 1651, 1659, 1661, 1689, 1765, 1826, 1883, 1885, 1905, 1944], "run_2023_03_01_08_20_52_143510": 29, "pid_180167": 29, "subfold": [29, 33], "model__0_forward_1": 29, "aot_model___0_debug": 29, "fx_graph_read": 29, "fx_graph_runn": 29, "fx_graph_transform": 29, "ir_post_fus": 29, "txt": [29, 1219, 1222, 1927], "ir_pre_fus": 29, "fx_graph": 29, "buf1": 29, "schedulernod": 29, "computedbuff": 29, "memorydep": 29, "unmet_depend": 29, "buf0": 29, "c0": [29, 747, 775, 1414], "met_depend": 29, "primals_2": 29, "buf1_loop_bodi": 29, "var_rang": 29, "z0": 29, "index0": 29, "index1": 29, "bodi": [29, 73, 74, 82, 84, 1223, 1882, 1884, 1885, 1886], "get_index": 29, "get_index_1": 29, "load_1": 29, "get_index_2": 29, "compiled_fun": 29, "hinder": 29, "break_reason": 29, "explanation_verbos": 29, "sublist": [29, 1085], "succe": [29, 42, 47, 59, 70, 1908, 1910, 1922], "compiled_toi": 29, "outweigh": [29, 1700], "readm": [29, 54, 55, 805, 1900], "verify_instal": 29, "log_fil": 29, "bj": 31, "j": [31, 42, 48, 329, 331, 337, 527, 529, 531, 705, 908, 914, 916, 974, 1085, 1101, 1102, 1109, 1115, 1119, 1120, 1154, 1209, 1212, 1247, 1248, 1259, 1275, 1284, 1291, 1299, 1301, 1306, 1383, 1384, 1385, 1389, 1444, 1447, 1529, 1530, 1531, 1536, 1723, 1730, 1809, 1826, 1830, 1869, 1884, 1903, 1905, 1910, 1913, 1921, 1944], "imaginari": [31, 327, 921, 974, 980, 1106, 1108, 1116, 1117, 1118, 1182, 1202, 1204, 1205, 1208, 1826, 1870, 1871, 1886, 1905, 1913, 1946], "satisfi": [31, 37, 40, 48, 630, 707, 773, 807, 915, 921, 922, 950, 1101, 1102, 1104, 1106, 1108, 1116, 1117, 1118, 1133, 1225, 1251, 1277, 1278, 1352, 1367, 1391, 1396, 1414, 1459, 1647, 1664, 1749, 1765, 1805, 1826, 1885, 1905, 1908, 1913, 1926, 1928, 1939, 1942], "equat": [31, 959, 1085, 1157, 1169, 1255, 1256, 1257, 1258, 1259, 1261, 1272, 1274, 1360, 1791, 1853, 1883, 1905, 1913, 1926, 1940], "mathemat": [31, 47, 73, 914, 915, 916, 917, 918, 919, 1133, 1165, 1360, 1362, 1363, 1364, 1407, 1408, 1409, 1410, 1483, 1562, 1600, 1624, 1671, 1749, 1807, 1808, 1885, 1905, 1919, 1940, 1947], "tradition": 31, "torchaudio": [31, 1880], "mimick": 31, "assembli": 31, "lapack": [31, 958, 1157, 1242, 1253, 1254, 1255, 1257, 1260, 1273, 1729, 1830], "spectral": [31, 1231, 1247, 1275, 1632, 1655, 1665, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1919], "fft": [31, 1880, 1908], "4621": 31, "0303j": 31, "2438": [31, 1257, 1534], "5874j": 31, "7706": 31, "1421j": 31, "2110": 31, "1918j": 31, "complex128": [31, 192, 974, 1128, 1137, 1191, 1212, 1241, 1242, 1247, 1248, 1249, 1250, 1251, 1252, 1372, 1373, 1374, 1444, 1518, 1519, 1520, 1680, 1723, 1770, 1941, 1942, 1945, 1946], "complex64": [31, 195, 974, 1102, 1104, 1105, 1110, 1111, 1137, 1191, 1243, 1266, 1269, 1372, 1373, 1374, 1518, 1519, 1520, 1680, 1723, 1770, 1941, 1942, 1945, 1946], "apart": [31, 1885, 1905], "linspac": [31, 937, 961, 1106, 1116, 1313, 1883, 1887, 1925], "logspac": [31, 1883, 1887, 1925], "view_as_r": [31, 1826, 1883, 1925, 1943], "6125": 31, "1681": 31, "3773": 31, "3487": 31, "0861": 31, "7981": 31, "1681j": 31, "3487j": 31, "7981j": 31, "mul_": [31, 1883, 1898, 1900, 1939], "2250": [31, 1268, 1671], "7546": [31, 959], "1722": 31, "x1": [31, 954, 1259, 1379, 1436, 1492, 1493, 1525, 1582, 1883], "3j": [31, 42, 711, 977, 978, 1753, 1754, 1770], "4j": [31, 42, 1781], "0000": [31, 48, 527, 878, 914, 916, 937, 957, 961, 980, 1066, 1072, 1073, 1074, 1099, 1100, 1103, 1105, 1106, 1112, 1113, 1116, 1121, 1133, 1134, 1135, 1165, 1171, 1174, 1178, 1237, 1240, 1241, 1242, 1254, 1255, 1258, 1263, 1264, 1268, 1270, 1282, 1298, 1339, 1387, 1388, 1496, 1497, 1499, 1500, 1534, 1535, 1671, 1723, 1729, 1734, 1735, 1736, 1745, 1749, 1750, 1774, 1781, 1783, 1784, 1786, 1789, 1790, 1791, 1792, 1808, 1853, 1854, 1856, 1875, 1892, 1900, 1908, 1939, 1940, 1945], "6569": [31, 1178], "5708": [31, 1069], "7854": 31, "complex_tensor": 31, "conjug": [31, 346, 473, 705, 921, 959, 977, 978, 1192, 1241, 1242, 1248, 1251, 1254, 1261, 1275, 1280, 1284, 1631, 1717, 1753, 1826, 1830, 1869, 1913, 1926, 1945], "wirting": [31, 921, 1913], "deriv": [31, 42, 65, 167, 751, 752, 753, 754, 755, 756, 794, 813, 837, 906, 920, 921, 922, 1148, 1152, 1165, 1209, 1269, 1301, 1491, 1615, 1880, 1884, 1910, 1911, 1913, 1935, 1939, 1940], "steepest": [31, 1905], "descent": [31, 48, 1683, 1699, 1703, 1704, 1905, 1916], "quantiz": [31, 73, 236, 342, 354, 487, 488, 489, 490, 491, 493, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 930, 1070, 1099, 1100, 1731, 1732, 1733, 1734, 1735, 1865, 1880, 1925, 1942, 1945, 1946, 1948, 1949], "parallel_info": [32, 1880, 1907], "cppextens": [33, 1880], "setuptool": 33, "bare": 33, "buildextens": [33, 1880], "ext_modul": 33, "extra_compile_arg": [33, 1922], "cmdclass": 33, "build_ext": 33, "cudaextens": [33, 1880], "cuda_extens": 33, "extension_kernel": 33, "cu": 33, "cxx": 33, "o2": 33, "arch": 33, "card": [33, 1922], "ptx": 33, "road": 33, "newest": [33, 69], "torch_cuda_arch_list": 33, "build_my_extens": 33, "older": [33, 1908, 1921, 1927], "modestli": [33, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700], "pars": [33, 42, 62, 928, 1885, 1927, 1935], "workaround": [33, 39, 73, 1216, 1879, 1920, 1923, 1930], "sigmoidalphablendforwardcuda": 33, "69460": 33, "facebookresearch": 33, "pytorch3d": 33, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 33, "relocat": 33, "link": [33, 34, 48, 73, 96, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1437, 1438, 1439, 1495, 1545, 1899, 1915, 1916, 1939], "rdc": 33, "dc": 33, "anymor": [33, 42, 65, 238], "dlto": 33, "dlink": 33, "protent": 33, "lib": [33, 1922], "nvshmem": 33, "ninja": [33, 1922], "dlink_librari": 33, "dlink_lib": 33, "std": [33, 50, 57, 105, 393, 469, 1099, 1100, 1131, 1132, 1133, 1672, 1723, 1749, 1788, 1793, 1825, 1863, 1881, 1883, 1898, 1903, 1908, 1915, 1922, 1925], "use_ninja": 33, "distutil": 33, "max_job": 33, "extra_cflag": 33, "extra_cuda_cflag": 33, "extra_ldflag": 33, "extra_include_path": 33, "build_directori": 33, "with_cuda": [33, 1922], "is_python_modul": 33, "is_standalon": 33, "keep_intermedi": 33, "torch_extens": 33, "torch_extensions_dir": 33, "o3": 33, "cuh": 33, "Such": [33, 39, 40, 72, 1866, 1939], "lib64": 33, "cudart": [33, 1922], "cuda_hom": 33, "safest": 33, "pybind11": [33, 34, 1884], "union": [33, 39, 44, 47, 50, 53, 57, 60, 65, 73, 1223, 1283, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1392, 1393, 1412, 1413, 1437, 1438, 1439, 1444, 1487, 1489, 1491, 1494, 1636, 1678, 1680, 1761, 1883, 1884, 1885, 1921, 1923, 1927, 1941, 1946, 1949], "linker": 33, "header": [33, 57, 1922, 1946], "torch_lib_path": 33, "load_inlin": [33, 1880], "cpp_sourc": 33, "cuda_sourc": 33, "with_pytorch_error_handl": 33, "behav": [33, 34, 42, 72, 73, 329, 337, 507, 529, 531, 854, 1152, 1227, 1440, 1441, 1442, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1884, 1885, 1892, 1905, 1911, 1916, 1920, 1927, 1935, 1939], "concaten": [33, 39, 42, 47, 916, 953, 964, 1000, 1084, 1177, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1388, 1414, 1527, 1535, 1628, 1636, 1823, 1874, 1883, 1886, 1923, 1925, 1939], "furthermor": [33, 57, 69, 1247, 1248, 1275, 1301, 1382, 1898, 1899, 1905, 1920, 1933, 1935], "cuda_runtim": 33, "se": 33, "macro": [33, 1914], "pybind": 33, "_safe_foo": 33, "redirect": [33, 50, 57, 1947], "obscur": 33, "sin_add": 33, "inline_extens": 33, "include_path": [33, 1880], "get_compiler_abi_compatibility_and_vers": [33, 1880], "abi": [33, 34], "shell": 33, "torchvers": 33, "verify_ninja_avail": [33, 1880], "is_ninja_avail": [33, 1880], "embed": [34, 73, 748, 759, 908, 1076, 1352, 1378, 1388, 1404, 1416, 1450, 1493, 1535, 1593, 1700, 1768, 1883, 1907, 1925, 1930, 1932, 1935, 1939, 1944], "preprocess": [34, 510, 1212], "augment": [34, 1886, 1946], "interfac": [34, 40, 44, 49, 51, 56, 59, 725, 726, 727, 728, 729, 730, 731, 732, 733, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 758, 759, 769, 774, 775, 776, 777, 778, 807, 1138, 1615, 1772, 1826, 1865, 1881, 1885, 1895, 1896, 1910, 1915, 1926, 1933, 1939, 1944], "opencv": [34, 1543, 1554], "struct": [34, 1152, 1153, 1872, 1893, 1915], "reshap": [34, 42, 48, 512, 513, 527, 557, 630, 705, 964, 1068, 1083, 1084, 1124, 1175, 1232, 1264, 1268, 1277, 1278, 1281, 1344, 1391, 1465, 1466, 1467, 1468, 1469, 1495, 1632, 1665, 1671, 1810, 1811, 1818, 1845, 1846, 1851, 1873, 1874, 1881, 1883, 1892, 1899, 1900, 1923, 1925, 1932, 1943, 1944], "classat_1_1_tensor": 34, "tensor_index": 34, "cpp_autograd": 34, "undesir": [34, 1367, 1372, 1373, 1374, 1375, 1376, 1377, 1518, 1519, 1520, 1521, 1522, 1523, 1527, 1593, 1910], "cpp_frontend": 34, "library_root": 34, "libtorch": 34, "linux": [34, 42, 1879], "gcc": 34, "cxx11": 34, "prototyp": [36, 42, 63, 693, 914, 916, 920, 921, 922, 1221, 1491, 1880, 1891, 1892, 1895, 1899, 1900, 1916, 1921, 1933, 1935, 1939, 1942, 1948, 1949], "race": [36, 42, 1905], "enable_cuda_sanit": 36, "torch_cuda_sanit": 36, "concurr": [36, 42, 46, 1907, 1908, 1918, 1935, 1936], "uniniti": [36, 460, 513, 1086, 1087, 1615, 1626, 1627, 1664, 1900, 1925], "commandlin": 36, "example_error": 36, "csan": 36, "139719969079296": 36, "94646435460352": 36, "_sanit": 36, "364": 36, "_handle_kernel_launch": 36, "stack_trac": [36, 73], "stacksummari": 36, "420": 36, "_handle_memory_alloc": 36, "faulti": [36, 42], "current_stream": [36, 988, 1880, 1908], "wait_stream": [36, 42, 989, 991, 1908], "default_stream": [36, 42, 1880], "float16": [37, 40, 44, 65, 313, 699, 702, 773, 836, 839, 847, 863, 864, 871, 934, 946, 1137, 1194, 1212, 1306, 1316, 1372, 1373, 1374, 1375, 1376, 1377, 1396, 1397, 1414, 1415, 1431, 1444, 1459, 1554, 1593, 1686, 1687, 1758, 1904, 1916, 1930, 1932, 1939, 1941, 1942, 1945, 1946, 1951], "v100": [37, 773, 1396, 1414, 1459, 1908], "packedsequ": [37, 773, 1396, 1414, 1459, 1658, 1659, 1660, 1662], "rnn": [38, 747, 773, 774, 775, 776, 778, 871, 1396, 1397, 1414, 1415, 1461, 1625, 1634, 1657, 1887, 1912, 1916, 1932, 1944], "enforc": [38, 40, 72, 808, 903, 1212, 1414, 1444, 1459, 1885, 1916, 1943], "cuda_launch_block": [38, 1414, 1459, 1908], "colon": [38, 1414, 1459, 1935], "cublas_workspace_config": [38, 1414, 1459, 1865, 1908, 1920], "4096": [38, 1414, 1459, 1865, 1908, 1923], "dataload": [39, 510, 1624, 1704, 1705, 1711, 1908, 1912, 1918, 1922, 1926, 1944], "batch_siz": [39, 48, 69, 71, 905, 1143, 1151, 1153, 1450, 1657, 1659, 1660, 1662, 1872, 1883, 1911, 1912, 1920, 1923, 1944], "shuffl": [39, 1880, 1944], "batch_sampl": 39, "num_work": [39, 50, 1920, 1922], "drop_last": 39, "timeout": [39, 42, 59, 1897, 1935], "worker_init_fn": [39, 1912, 1920], "prefetch_factor": 39, "persistent_work": 39, "__getitem__": [39, 1865], "__len__": [39, 73, 1883], "protocol": [39, 44, 49, 59, 61, 893, 1136, 1138, 1679, 1761, 1910, 1922, 1923, 1935, 1950], "idx": [39, 73, 911, 1212, 1352, 1387, 1444, 1632, 1883, 1899], "th": [39, 171, 329, 331, 337, 773, 914, 916, 936, 956, 1072, 1077, 1186, 1209, 1233, 1251, 1259, 1265, 1301, 1334, 1383, 1384, 1385, 1389, 1396, 1404, 1414, 1459, 1529, 1530, 1531, 1536, 1730, 1826, 1910, 1922, 1940, 1942], "iterabledataset": [39, 1915], "__iter__": [39, 1886], "improb": 39, "fetch": [39, 72, 73, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1680, 1935], "databas": 39, "remot": [39, 42, 46, 50, 1624, 1928, 1935, 1936], "replica": [39, 40, 42, 46, 57, 1381, 1624, 1909], "duplic": [39, 331, 335, 486, 557, 935, 944, 965, 1169, 1170, 1212, 1444, 1862, 1863, 1939], "yield": [39, 40, 65, 73, 1073, 1075, 1212, 1258, 1259, 1444, 1875, 1885, 1886, 1892, 1928, 1930, 1940], "stochast": [39, 48, 1392, 1393, 1538, 1539, 1683, 1685, 1686, 1688, 1699, 1703, 1704, 1916, 1926], "decent": 39, "randomli": [39, 758, 759, 769, 777, 922, 1356, 1382, 1383, 1384, 1385, 1389, 1462, 1528, 1529, 1530, 1531, 1536, 1644, 1900, 1915, 1916], "permut": [39, 74, 82, 1085, 1258, 1259, 1278, 1301, 1303, 1744, 1880, 1881, 1883, 1899, 1925, 1932, 1943, 1945], "mini": [39, 792, 798, 1362, 1363, 1364, 1387, 1388, 1399, 1404, 1407, 1408, 1409, 1416, 1436, 1447, 1449, 1483, 1492, 1534, 1535, 1554, 1612, 1928], "neither": [39, 42, 808, 909, 912, 1068, 1128, 1450, 1491, 1671, 1851, 1910, 1919, 1935], "collat": 39, "minibatch": [39, 781, 782, 785, 786, 787, 1301, 1352, 1360, 1361, 1378, 1380, 1404, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1496, 1510, 1511, 1512, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1526, 1555, 1567, 1568, 1569, 1578, 1586, 1928], "loader": [39, 1926], "dataset_it": 39, "cheaper": [39, 72], "arrai": [39, 50, 463, 773, 833, 834, 892, 893, 937, 955, 980, 984, 1085, 1129, 1137, 1138, 1146, 1147, 1283, 1313, 1391, 1396, 1397, 1414, 1415, 1537, 1751, 1758, 1778, 1812, 1813, 1814, 1816, 1817, 1844, 1851, 1859, 1866, 1882, 1886, 1908, 1916, 1939, 1941, 1945, 1946], "untouch": 39, "slightli": [39, 42, 48, 65, 1671, 1719, 1831, 1879, 1908, 1910, 1913, 1919, 1927], "default_col": 39, "channel": [39, 68, 487, 488, 489, 792, 798, 821, 835, 838, 846, 858, 866, 1099, 1362, 1363, 1364, 1368, 1372, 1373, 1374, 1375, 1376, 1377, 1382, 1383, 1384, 1385, 1389, 1391, 1399, 1407, 1408, 1409, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1432, 1452, 1478, 1483, 1495, 1496, 1497, 1498, 1513, 1529, 1530, 1531, 1536, 1553, 1554, 1561, 1587, 1612, 1642, 1643, 1644, 1651, 1652, 1668, 1731, 1899, 1901, 1903, 1905, 1930, 1931, 1933, 1944], "class_index": 39, "namedtupl": [39, 73, 909, 1064, 1065, 1157, 1212, 1223, 1233, 1253, 1303, 1309, 1312, 1314, 1317, 1340, 1352, 1444, 1719, 1729, 1803, 1830, 1848, 1853, 1882, 1884, 1885, 1930], "gil": [39, 42, 46, 1905, 1908, 1935], "descriptor": [39, 42, 1492, 1493, 1886, 1923], "parent": [39, 52, 57, 61, 65, 693, 801, 802, 830, 1444, 1897, 1922, 1927, 1937, 1944], "refcount": [39, 1897, 1918], "panda": 39, "pyarrow": 39, "13246": 39, "get_worker_info": [39, 1935], "seed": [39, 105, 1023, 1032, 1033, 1053, 1188, 1304, 1324, 1719, 1736, 1831, 1880, 1883, 1912, 1918, 1920, 1934], "shut": [39, 1935], "garbag": [39, 1937], "subtleti": [39, 74, 1381, 1910, 1912], "multiprocess": [39, 40, 42, 43, 45, 50, 52, 60, 61, 1381, 1624, 1880, 1899, 1909, 1936], "unix": [39, 57, 987, 1897], "fork": [39, 57, 1230, 1624, 1885, 1907, 1908, 1912, 1915, 1918, 1922, 1934, 1935, 1937], "child": [39, 50, 52, 65, 804, 1212, 1444, 1643, 1897, 1916, 1922, 1937], "maco": [39, 42, 1897, 1917], "spawn": [39, 40, 43, 50, 51, 57, 61, 1215, 1624, 1880, 1904, 1909, 1918, 1922, 1936], "__name__": [39, 40, 42, 51, 52, 60, 1909, 1910, 1918, 1922, 1927, 1936], "__main__": [39, 40, 42, 51, 52, 60, 1906, 1909, 1918, 1922, 1936], "base_se": 39, "worker_id": [39, 61, 1920], "therebi": [39, 48, 1926, 1930], "mandatorili": 39, "initial_se": [39, 105, 1880, 1920, 1934], "simplecustombatch": 39, "transposed_data": 39, "zip": [39, 44, 1879, 1883, 1884, 1894, 1908, 1915, 1939], "tgt": [39, 1487, 1488, 1489], "collate_wrapp": 39, "tensordataset": 39, "batch_ndx": 39, "is_pin": [39, 1657, 1883, 1898, 1925, 1941], "multiprocessing_context": 39, "pin_memory_devic": 39, "reshuffl": 39, "mutual": [39, 42, 50, 748, 1946], "subprocess": [39, 42, 57, 59, 61, 1912, 1918], "incomplet": [39, 914, 1887, 1940], "divis": [39, 596, 630, 700, 785, 786, 787, 960, 1080, 1130, 1133, 1222, 1255, 1372, 1373, 1374, 1375, 1376, 1377, 1379, 1399, 1411, 1435, 1453, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1579, 1749, 1818, 1845, 1885, 1904, 1908], "basecontext": 39, "randomsampl": 39, "prefetch": [39, 65], "unpickl": [39, 42, 1283, 1927], "proper": [39, 50, 72, 73, 1076, 1768, 1884, 1905, 1908, 1910, 1918, 1922], "guess": 39, "trust": [39, 42, 1283, 1879, 1927], "inaccur": [39, 40, 1554], "kwd": 39, "__getitems__": 39, "myiterabledataset": 39, "worker_info": 39, "iter_start": 39, "iter_end": 39, "per_work": 39, "ceil": [39, 194, 646, 647, 781, 782, 1357, 1358, 1359, 1412, 1413, 1437, 1438, 1439, 1510, 1511, 1512, 1567, 1568, 1569, 1734, 1735, 1758, 1881, 1883, 1898, 1908, 1925, 1939], "mult": 39, "overall_start": 39, "overall_end": 39, "stackdataset": 39, "assembl": 39, "imagedataset": 39, "textdataset": 39, "tuple_stack": 39, "dict_stack": 39, "concatdataset": 39, "chaindataset": 39, "fly": [39, 1028, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1905], "collate_fn_map": 39, "registri": [39, 1880, 1921, 1923], "default_collate_fn_map": 39, "collate_tensor_fn": 39, "custom_col": 39, "collate_map": 39, "outer": [39, 704, 914, 1085, 1143, 1147, 1152, 1158, 1883, 1885, 1925], "unchang": [39, 513, 527, 529, 748, 827, 1124, 1212, 1444, 1487, 1750, 1821, 1904, 1919, 1930], "byte": [39, 42, 48, 59, 258, 450, 571, 893, 993, 1034, 1036, 1038, 1040, 1138, 1211, 1283, 1320, 1321, 1680, 1689, 1761, 1884, 1885, 1886, 1898, 1921, 1927, 1939, 1941], "v_i": [39, 1251], "v_1": 39, "v_2": 39, "v1_i": 39, "v2_i": 39, "v1_1": 39, "v1_2": 39, "v2_1": 39, "v2_2": 39, "elem": [39, 1883], "customtyp": 39, "collate_customtype_fn": 39, "custotyp": 39, "default_convert": 39, "np": [39, 954, 1080, 1085, 1125, 1126, 1127, 1583, 1723, 1911, 1920, 1923, 1944, 1945, 1946], "workerinfo": [39, 1935], "random_split": 39, "floor": [39, 74, 76, 82, 287, 660, 661, 781, 782, 1080, 1130, 1222, 1357, 1358, 1359, 1412, 1413, 1437, 1438, 1439, 1510, 1511, 1512, 1567, 1568, 1569, 1734, 1735, 1749, 1758, 1826, 1881, 1883, 1885, 1898, 1918, 1921, 1925, 1939], "frac": [39, 48, 295, 393, 662, 663, 700, 773, 785, 786, 787, 878, 935, 944, 980, 984, 1080, 1130, 1165, 1169, 1170, 1231, 1243, 1247, 1248, 1251, 1263, 1275, 1282, 1298, 1352, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1368, 1372, 1373, 1374, 1375, 1376, 1377, 1380, 1382, 1391, 1396, 1397, 1398, 1399, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1429, 1431, 1432, 1433, 1434, 1437, 1438, 1439, 1447, 1448, 1449, 1451, 1459, 1461, 1462, 1474, 1476, 1477, 1479, 1480, 1482, 1483, 1484, 1495, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1563, 1579, 1581, 1583, 1593, 1595, 1599, 1601, 1603, 1604, 1684, 1685, 1688, 1690, 1696, 1703, 1704, 1733, 1745, 1748, 1760, 1781, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1809, 1824, 1825, 1826, 1830, 1851, 1867, 1868, 1883, 1898, 1903, 1905, 1913, 1925, 1939, 1940], "robin": [39, 42], "generator1": 39, "manual_se": [39, 70, 105, 1880, 1883, 1898, 1916, 1918, 1920, 1923, 1925, 1934], "generator2": 39, "data_sourc": 39, "accedingsequencelengthsampl": 39, "argsort": [39, 1841, 1883, 1911, 1925], "tolist": [39, 368, 1885, 1925, 1941], "accedingsequencelengthbatchsampl": 39, "sequentialsampl": 39, "num_sampl": [39, 436, 1334, 1883], "drawn": [39, 190, 274, 302, 1334, 1672, 1736, 1740, 1741, 1903, 1946, 1947], "subsetrandomsampl": 39, "weightedrandomsampl": 39, "row": [39, 40, 47, 48, 225, 329, 331, 337, 598, 601, 706, 712, 890, 914, 916, 954, 980, 984, 1068, 1098, 1126, 1127, 1147, 1153, 1174, 1233, 1259, 1267, 1270, 1275, 1299, 1301, 1309, 1311, 1312, 1314, 1317, 1334, 1340, 1341, 1342, 1534, 1535, 1583, 1631, 1670, 1727, 1730, 1750, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1829, 1848, 1851, 1855, 1857, 1866, 1872, 1874, 1883, 1913, 1939, 1944], "05": [39, 46, 73, 130, 360, 707, 725, 726, 727, 728, 729, 730, 736, 737, 749, 750, 762, 764, 765, 766, 767, 921, 922, 958, 1099, 1201, 1227, 1228, 1298, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1487, 1489, 1491, 1513, 1544, 1553, 1557, 1624, 1702, 1708, 1709, 1715, 1787, 1788, 1793, 1882, 1883, 1926, 1936, 1946], "batchsampl": 39, "distributedsampl": [39, 1624], "num_replica": 39, "world_siz": [39, 40, 42, 43, 46, 50, 59, 60, 62, 65, 1624, 1909, 1928, 1935, 1936], "evenli": [39, 596, 597, 598, 708, 709, 1083, 1175, 1282, 1298, 1873], "set_epoch": 39, "is_distribut": [39, 1883, 1925], "start_epoch": 39, "n_epoch": 39, "vanilla": [40, 1892], "allreduc": [40, 42, 1624, 1908, 1909, 1925], "register_comm_hook": [40, 46, 65, 1624], "mainli": [40, 48, 840, 1367, 1527, 1948], "gradbucket": [40, 1624], "decompos": [40, 73, 1135, 1142, 1256, 1881, 1905, 1910, 1923], "get_per_parameter_tensor": 40, "_distributed_c10d": [40, 42], "1d": [40, 47, 48, 65, 715, 718, 751, 754, 785, 795, 965, 980, 984, 1068, 1082, 1173, 1174, 1189, 1209, 1267, 1268, 1313, 1341, 1349, 1353, 1357, 1367, 1372, 1375, 1380, 1383, 1384, 1388, 1412, 1436, 1437, 1449, 1451, 1496, 1502, 1505, 1508, 1510, 1518, 1521, 1529, 1535, 1564, 1567, 1730, 1731, 1734, 1826, 1851, 1869], "is_last": 40, "set_buff": 40, "stateless": [40, 70, 1901, 1916], "ddp_comm_hook": [40, 46], "default_hook": 40, "allreduce_hook": 40, "process_group": [40, 43, 44, 46, 65, 1483, 1624], "unaffect": [40, 513, 514, 1398], "ddp_model": [40, 42, 1624, 1909], "fp16_compress_hook": 40, "decompress": [40, 1879, 1894], "bf16_compress_hook": 40, "nccl": [40, 43, 44, 60, 65, 1624, 1914], "brain": [40, 1942, 1945], "fp16_compress_wrapp": 40, "powersgdst": 40, "matrix_approximation_rank": 40, "start_powersgd_it": 40, "powersgd_hook": 40, "bf16_compress_wrapp": 40, "wikipedia": [40, 1580, 1905, 1913, 1951], "wiki": [40, 1951], "bfloat16_float": 40, "point_format": 40, "vogel": 40, "et": [40, 48, 65, 1367, 1456, 1457, 1492, 1493, 1699, 1794, 1831, 1903], "al": [40, 48, 65, 1367, 1456, 1457, 1492, 1493, 1699, 1794, 1831, 1903], "neurip": [40, 48], "2019": [40, 48, 1042], "hyperparamet": [40, 65, 73, 1944], "1000": [40, 1100, 1105, 1131, 1132, 1352, 1387, 1493, 1731, 1758, 1778, 1844, 1905, 1921, 1923, 1944], "min_compression_r": 40, "use_error_feedback": 40, "warm_start": 40, "orthogonalization_epsilon": 40, "random_se": 40, "compression_stats_logging_frequ": 40, "batch_tensors_with_same_shap": 40, "stronger": [40, 74], "threshold": [40, 73, 1266, 1269, 1405, 1475, 1480, 1601, 1607, 1713, 1778, 1883, 1904, 1908, 1925, 1944], "exponenti": [40, 274, 1095, 1263, 1289, 1290, 1291, 1299, 1366, 1386, 1532, 1880, 1885, 1925, 1926, 1940, 1947], "grid": [40, 1105, 1313, 1508, 1543, 1881, 1883, 1908, 1944], "satisfactori": 40, "appendix": [40, 1880], "defer": [40, 65, 1908, 1928], "hybrid": [40, 65, 235, 556, 596, 597, 598, 600, 601, 1176], "scheme": [40, 59, 493, 815, 832, 833, 834, 835, 838, 840, 1916], "trajectori": 40, "irrecover": 40, "num_row": 40, "num_col": 40, "1e": [40, 73, 130, 360, 707, 725, 726, 727, 728, 729, 730, 736, 737, 749, 750, 762, 764, 765, 766, 767, 768, 921, 922, 957, 958, 1201, 1227, 1228, 1278, 1362, 1363, 1364, 1379, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1430, 1453, 1458, 1483, 1487, 1489, 1491, 1492, 1513, 1525, 1540, 1544, 1545, 1553, 1557, 1579, 1582, 1586, 1609, 1632, 1665, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1700, 1713, 1721, 1774, 1882, 1883, 1910, 1916, 1923, 1926, 1940, 1946], "orthogon": [40, 1248, 1251, 1270, 1275, 1284, 1717, 1729, 1903, 1905, 1916, 1939], "epsilon": [40, 73, 832, 833, 834, 835, 838, 878, 1266, 1269, 1362, 1363, 1364, 1379, 1399, 1407, 1408, 1409, 1416, 1453, 1483, 1525, 1579, 1632, 1665, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1733, 1883, 1940], "bucket_cap_mb": [40, 1624, 1909], "memor": 40, "compens": 40, "apex": 40, "uncompress": [40, 1939], "pq": 40, "mq": [40, 1930, 1949], "tp": [40, 47], "comm": [40, 42, 1909], "handler": [40, 42, 52, 53, 1643, 1895, 1915, 1927, 1950], "batched_powersgd_hook": 40, "destroi": [40, 59, 1381, 1905, 1935], "squar": [40, 48, 564, 752, 753, 754, 755, 792, 798, 807, 984, 1072, 1074, 1209, 1243, 1245, 1247, 1248, 1249, 1252, 1253, 1257, 1259, 1261, 1263, 1265, 1269, 1271, 1272, 1274, 1275, 1279, 1292, 1301, 1350, 1354, 1358, 1359, 1373, 1374, 1376, 1377, 1392, 1393, 1405, 1413, 1435, 1438, 1439, 1442, 1475, 1487, 1510, 1519, 1522, 1538, 1539, 1543, 1552, 1554, 1574, 1597, 1612, 1631, 1684, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1760, 1819, 1853, 1866, 1883, 1925, 1939], "truncat": [40, 1130, 1859, 1900, 1903, 1912, 1919], "debugging_hook": 40, "noop_hook": 40, "noop": [40, 1624], "headroom": 40, "desynchron": [40, 42], "trainer": [40, 50, 52, 57, 60, 61, 1624, 1935], "__setstate__": 40, "__getstate__": 40, "reload": [40, 46, 1879], "sy": [40, 51, 60, 62, 1879, 1908, 1927], "tempfil": 40, "mp": [40, 42, 43, 61, 1624, 1880, 1909, 1910, 1918, 1930, 1936, 1941, 1942, 1949], "simplemodel": 40, "fc2": [40, 1615, 1928], "master_addr": [40, 42, 50, 60, 62, 1909, 1928, 1935, 1936], "localhost": [40, 42, 59, 60, 1909, 1928, 1935, 1936], "master_port": [40, 42, 50, 60, 62, 1909, 1928, 1935, 1936], "12355": 40, "init_process_group": [40, 42, 43, 46, 50, 60, 62, 1624, 1908, 1909, 1935], "cleanup": 40, "destroy_process_group": 40, "run_demo": 40, "demo_fn": 40, "nproc": [40, 42, 57, 58, 60, 1897, 1909, 1936], "demo_seri": 40, "gettempdir": 40, "device_id": [40, 42, 43, 46, 60, 65, 1283, 1381, 1483, 1608, 1624, 1909], "powersgd_st": 40, "lr": [40, 43, 46, 65, 1615, 1624, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1908, 1909, 1916, 1918, 1926, 1936, 1944], "001": [40, 921, 922, 1221, 1682, 1686, 1687, 1696, 1700, 1712, 1909, 1923], "comm_hook": 40, "comm_hook_st": 40, "barrier": [40, 50, 59, 1925], "map_loc": [40, 1216, 1219, 1283, 1624, 1879, 1894, 1927], "new_ddp_model": 40, "n_gpu": 40, "device_count": [40, 42, 1880], "got": [40, 42, 904, 1910, 1946], "thank": [40, 48, 1910, 1928], "thij": 40, "par": 40, "home": [41, 1908], "brief": [42, 1624, 1897, 1935], "introduct": [42, 48, 1020, 1624, 1880, 1882, 1886, 1898, 1906, 1916, 1923, 1935, 1939, 1944], "mpi": [42, 1624], "gloo": [42, 60, 1624, 1909, 1914, 1935], "recv": [42, 1624, 1925, 1936], "all_reduc": [42, 61, 1624], "all_gath": 42, "scatter": [42, 46, 65, 527, 529, 531, 1381, 1865, 1883, 1912, 1925, 1935], "reduce_scatt": [42, 1925], "all_to_al": 42, "v1": [42, 65, 1280, 1718, 1879, 1909, 1935], "init_method": [42, 1624, 1935], "adher": [42, 1885, 1939], "some_fil": 42, "machine_nam": 42, "share_folder_nam": 42, "tcpstore": [42, 59], "infiniband": [42, 1624, 1935], "interconnect": 42, "gpudirect": 42, "ethernet": 42, "ip": [42, 59], "ib": 42, "nccl_socket_ifnam": 42, "eth0": 42, "gloo_socket_ifnam": 42, "comma": [42, 1085, 1885, 1891], "eth1": 42, "eth2": 42, "eth3": 42, "imper": 42, "nccl_debug": 42, "nccl_debug_subsi": 42, "coll": 42, "hang": [42, 43, 46, 1624, 1909], "topologi": [42, 44, 47, 50], "socket": [42, 1897, 1935], "nccl_socket_nthread": 42, "nccl_nsocks_perthread": 42, "cloud": [42, 1939, 1944], "aw": [42, 51, 984], "primit": [42, 46, 59, 1283, 1881, 1882, 1884, 1886, 1907, 1917, 1923, 1935], "redund": [42, 65, 1101, 1102, 1104, 1106, 1120, 1122, 1826], "averag": [42, 46, 748, 779, 780, 781, 782, 834, 835, 930, 932, 984, 1048, 1062, 1212, 1349, 1350, 1351, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1378, 1380, 1388, 1398, 1404, 1410, 1411, 1412, 1413, 1417, 1418, 1419, 1435, 1436, 1444, 1447, 1448, 1449, 1450, 1451, 1458, 1475, 1476, 1483, 1492, 1502, 1503, 1504, 1510, 1511, 1512, 1515, 1516, 1526, 1540, 1555, 1564, 1565, 1578, 1586, 1624, 1683, 1684, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1851, 1880, 1909, 1929], "thrash": 42, "recurr": [42, 773, 774, 1227, 1367, 1381, 1396, 1397, 1414, 1459, 1634, 1660, 1697, 1880, 1908], "use_distribut": 42, "datetim": [42, 1895], "timedelta": [42, 59, 1895], "1800": 42, "group_nam": [42, 56], "pg_option": 42, "url": [42, 59, 929, 1879, 1894, 1935], "discov": [42, 1935], "encod": [42, 50, 56, 59, 73, 1259, 1283, 1325, 1326, 1360, 1361, 1487, 1488, 1489, 1490, 1491, 1624, 1812, 1813, 1814, 1816, 1817, 1882, 1885, 1886, 1910, 1921, 1927, 1936, 1939], "ucc": 42, "lowercas": 42, "deadlock": [42, 1624], "job": [42, 50, 52, 53, 55, 56, 58, 59, 60, 61, 1624, 1705, 1711, 1915, 1929, 1944], "exchang": [42, 59, 989, 1073, 1908, 1923], "nccl_blocking_wait": 42, "nccl_async_error_handl": [42, 1908], "abort": [42, 1908], "crash": [42, 52, 59, 1897, 1905, 1935, 1937, 1944], "caught": [42, 1624, 1897], "watch": 42, "dog": 42, "processgroupopt": 42, "processgroupnccl": [42, 1909], "is_high_priority_stream": 42, "backend_nam": 42, "custom_backend": 42, "is_initi": [42, 1880], "is_mpi_avail": 42, "is_nccl_avail": 42, "is_gloo_avail": 42, "is_torchelastic_launch": 42, "elast": [42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 1880], "torchelast": [42, 45, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62], "torchelastic_run_id": [42, 60], "rendezv": [42, 45, 50, 56, 58, 62, 1909, 1935], "null": [42, 51, 53, 56, 74, 78], "discoveri": [42, 59, 1908, 1927], "reachabl": 42, "multicast": 42, "23456": 42, "clean": [42, 50, 73, 973, 1024, 1879, 1897, 1927], "fcntl": 42, "nf": 42, "brand": [42, 1910], "unsuccess": 42, "mnt": 42, "sharedfil": 42, "port": [42, 50, 58, 59, 60, 1914], "backend_str": 42, "uppercas": 42, "classmethod": [42, 59, 74, 76, 745, 751, 752, 753, 758, 759, 769, 777, 805, 806, 807, 828, 829, 830, 837, 867, 988, 1387, 1388, 1483, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1680, 1885, 1886, 1910, 1930, 1935, 1941, 1950], "extended_api": 42, "instanti": [42, 46, 58, 59, 60, 73, 854, 1089, 1187, 1388, 1535, 1633, 1657, 1664, 1669, 1879, 1882, 1884, 1885, 1908, 1910, 1916, 1941], "3rd": [42, 48, 59, 630, 1713, 1906], "processgroup": [42, 44, 46, 65, 1624], "four": [42, 1257, 1373, 1910, 1913, 1935, 1937], "c10d": [42, 50, 58, 60, 62, 1624, 1909, 1925], "distributedbackendopt": 42, "get_backend": [42, 59], "get_rank": [42, 1483], "get_world_s": 42, "filestor": [42, 59], "hashstor": 42, "host_nam": 42, "hostnam": [42, 50, 59, 1929], "listen": 42, "is_mast": 42, "300": [42, 50, 1289, 1361, 1661, 1663, 1926], "wait_for_work": 42, "multi_ten": 42, "tcpserver": 42, "master_listen_fd": 42, "server_stor": 42, "127": [42, 807, 1899, 1930, 1944], "1234": [42, 59, 1189], "client_stor": 42, "first_kei": 42, "first_valu": 42, "hashmap": 42, "file_nam": [42, 1879, 1894, 1927], "store1": 42, "store2": 42, "prefixstor": 42, "quantiti": [42, 66, 71, 1247, 1248, 1275, 1410, 1641, 1642, 1644, 1645, 1647, 1650, 1651, 1652, 1653, 1713, 1911, 1913], "compare_set": 42, "arg2": 42, "expected_valu": 42, "desired_valu": 42, "second_valu": 42, "overload": [42, 73, 630, 1884, 1885, 1889], "bad_kei": 42, "num_kei": 42, "destruct": [42, 1895, 1935, 1937], "delete_kei": 42, "set_timeout": 42, "grain": [42, 871, 874, 1593, 1880, 1905, 1923, 1939], "plai": 42, "new_group": [42, 65, 1483], "use_local_synchron": 42, "enqueu": [42, 72, 989, 991, 992, 1908, 1936], "get_group_rank": 42, "global_rank": [42, 50], "get_global_rank": 42, "group_rank": [42, 50, 60], "get_process_group_rank": 42, "dst": [42, 1879, 1927], "destin": [42, 44, 53, 56, 65, 226, 431, 432, 616, 1000, 1001, 1154, 1212, 1318, 1319, 1444, 1678, 1679, 1883, 1935, 1936, 1941], "unspecifi": [42, 496, 833, 834, 835, 838, 921, 922, 1477, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1809, 1892, 1939, 1944], "sender": [42, 1937], "isend": 42, "irecv": 42, "is_complet": 42, "finish": [42, 44, 50, 56, 57, 59, 61, 72, 1142, 1908, 1909, 1922, 1929, 1935, 1937], "batch_isend_irecv": 42, "p2p_op_list": 42, "p2pop": 42, "op_list": 42, "send_tensor": 42, "recv_tensor": 42, "send_op": 42, "recv_op": 42, "req": 42, "pg": [42, 1624], "set_devic": [42, 44, 65, 1624, 1769, 1880, 1935, 1942], "p2p": [42, 59], "async_op": 42, "get_futur": [42, 1624], "add_": [42, 68, 70, 238, 1142, 1883, 1898, 1906, 1939], "101": [42, 1352], "overwrot": 42, "sent": [42, 44, 1024, 1885, 1897, 1918, 1935, 1936, 1937], "broadcast_object_list": 42, "object_list": 42, "picklabl": [42, 1212, 1444, 1927], "current_devic": [42, 44, 997, 1005, 1006, 1013, 1014, 1030, 1034, 1036, 1037, 1038, 1040, 1042, 1043, 1044, 1048, 1049, 1050, 1051, 1061, 1062, 1063, 1880, 1942], "insecur": [42, 1283], "malici": [42, 1283, 1927], "ineffici": [42, 1908, 1930], "redoptyp": 42, "bitwis": [42, 938, 940, 941, 943, 1886, 1919, 1931, 1947], "reduceop": 42, "int64": [42, 98, 208, 225, 329, 337, 409, 878, 937, 950, 1086, 1099, 1100, 1137, 1526, 1657, 1740, 1744, 1745, 1765, 1812, 1813, 1814, 1816, 1817, 1908, 1939, 1941, 1942, 1945, 1951], "1j": [42, 711, 977, 978, 1208, 1753, 1754, 1869, 1905, 1913, 1921], "2j": [42, 711, 977, 978, 1753, 1754, 1781, 1869, 1905], "tensor_list": [42, 1900], "all_gather_into_tensor": 42, "output_tensor": 42, "accommod": [42, 1440, 1441, 1442], "ii": [42, 980, 1085, 1414, 1415], "tensor_in": 42, "tensor_out": 42, "tensor_out2": 42, "all_gather_object": 42, "obj": [42, 73, 893, 1009, 1198, 1199, 1218, 1223, 1761, 1883, 1921, 1922, 1927], "pickabl": 42, "responsibl": 42, "gather_object": 42, "gather_list": 42, "object_gather_list": 42, "scatter_list": 42, "tensor_s": 42, "t_one": 42, "t_five": 42, "scatter_object_list": 42, "scatter_object_output_list": 42, "scatter_object_input_list": 42, "output_list": 42, "input_list": 42, "reduce_scatter_tensor": 42, "all_to_all_singl": 42, "output_split_s": 42, "input_split_s": 42, "15": [42, 73, 630, 1083, 1155, 1165, 1175, 1234, 1248, 1368, 1441, 1442, 1661, 1663, 1721, 1794, 1803, 1849, 1873, 1882, 1883, 1886, 1923, 1939], "uneven": [42, 43, 46, 1624], "21": [42, 48, 698, 956, 1068, 1270, 1729, 1851, 1882, 1939], "31": [42, 942, 1359, 1439, 1615, 1789, 1923], "33": [42, 751, 752, 753, 754, 755, 756, 785, 1212, 1372, 1373, 1374, 1376, 1377, 1442, 1444, 1518, 1520, 1521, 1523, 1882, 1923], "35": [42, 1270, 1363, 1364, 1408, 1409, 1483, 1729], "input_split": 42, "output_split": 42, "5j": 42, "6j": 42, "7j": 42, "8j": 42, "9j": 42, "10j": 42, "11j": 42, "12j": 42, "13j": 42, "14j": 42, "15j": 42, "16j": 42, "output_tensor_list": 42, "input_tensor_list": 42, "monitored_barri": [42, 1925], "wait_all_rank": 42, "band": 42, "bor": 42, "bxor": 42, "premul_sum": 42, "_make_nccl_premul_sum": 42, "all_reduce_multigpu": 42, "__members__": 42, "reduce_op": 42, "revisit": 42, "broadcast_multigpu": 42, "reduce_multigpu": 42, "all_gather_multigpu": 42, "reduce_scatter_multigpu": 42, "distributed_test": 42, "dev_idx": 42, "src_tensor": 42, "resid": [42, 65, 72, 213, 305, 353, 1283, 1624, 1908, 1928, 1935], "dst_tensor": 42, "cpp_extens": [42, 1880, 1910], "cpp_c10d_extens": 42, "torchrun": [42, 45, 51, 58, 62], "benefici": [42, 1916], "nproc_per_nod": [42, 51], "num_gpus_you_hav": 42, "your_training_script": [42, 58, 60], "arg3": 42, "192": [42, 630, 1923], "168": 42, "nnode": [42, 58, 60], "local_process_rank": 42, "local_rank": [42, 50, 52, 57, 60, 62, 1483], "argpars": [42, 60, 1908], "parser": [42, 60, 1908], "argumentpars": [42, 60, 1908], "add_argu": [42, 60, 1908], "parse_arg": [42, 51, 60, 62, 1908, 1923], "output_devic": [42, 46, 60, 1381, 1483, 1608, 1624], "adjust": [42, 44, 46, 48, 65, 1880, 1907, 1931], "launcher": [42, 60], "filesystem": [42, 44, 987, 1879, 1927], "12042": 42, "imagenet": [42, 1903], "inconsist": [42, 65, 878, 1745, 1910], "group_gloo": 42, "29501": 42, "monitoredbarri": 42, "transport": [42, 1935], "598": 42, "2401": 42, "db00": 42, "eef0": 42, "1100": 42, "3560": 42, "1c05": 42, "25d": 42, "8594": 42, "torch_cpp_log_level": 42, "twolinlayernet": 42, "i0607": 42, "739390": 42, "515217": 42, "logger": [42, 1677, 1948, 1949], "173": 42, "broadcast_buff": [42, 1624], "bucket_cap_byt": 42, "26214400": 42, "find_unused_paramet": [42, 1624, 1909], "gradient_as_bucket_view": [42, 1624], "is_multi_device_modul": 42, "num_parameter_tensor": 42, "total_parameter_size_byt": 42, "440": 42, "bucket_s": 42, "cuda_visible_devic": [42, 1054, 1624, 1908], "module_nam": [42, 73, 830, 867, 1927], "nccl_ib_timeout": 42, "nccl_nthread": 42, "085681": 42, "544067": 42, "344": 42, "unused_parameter_s": 42, "40838608": 42, "5983335": 42, "4326421": 42, "comp": [42, 48], "4207652": 42, "085693": 42, "544066": 42, "42850427": 42, "3885553": 42, "2357981": 42, "2234674": 42, "unus": [42, 46, 73, 920, 1024, 1038, 1217, 1223, 1406, 1624, 1682, 1882, 1884, 1885, 1908, 1909, 1914, 1927], "wasn": [42, 1283, 1882], "va": 42, "lue": 42, "indirectli": 42, "outstand": [42, 1935], "stuck": [42, 50, 61], "uninform": 42, "reveal": [42, 1909], "default_pg": 42, "longtensor": [42, 151, 152, 153, 331, 333, 335, 467, 486, 527, 529, 531, 887, 888, 1154, 1186, 1233, 1334, 1387, 1388, 1447, 1534, 1535, 1580, 1670, 1765, 1803, 1815, 1840, 1848, 1875, 1942, 1945], "set_debug_level": 42, "set_debug_level_from_env": 42, "get_debug_level": 42, "torch_show_cpp_stacktrac": 42, "distbackenderror": 42, "facilit": [43, 48, 70, 989, 1073, 1770, 1879, 1882, 1885, 1920], "joinabl": [43, 46, 1624, 1880], "joinhook": [43, 1880], "throw_on_early_termin": [43, 1624], "shadow": [43, 46, 1624, 1948, 1949], "notify_join_context": 43, "zeroredundancyoptim": [43, 46, 1624, 1880], "01": [43, 46, 61, 768, 793, 834, 835, 1086, 1128, 1430, 1558, 1559, 1615, 1681, 1683, 1685, 1687, 1697, 1698, 1705, 1711, 1731, 1785, 1787, 1788, 1793, 1794, 1881, 1883, 1903, 1915, 1923, 1926], "vacuou": 43, "inherit": [43, 1649, 1882, 1884, 1900, 1910, 1916, 1918], "join_hook": [43, 46, 1624], "join_devic": 43, "join_process_group": 43, "repeatedli": [43, 1908, 1939], "main_hook": 43, "post_hook": 43, "is_last_join": 43, "dcp": 44, "reshard": [44, 47, 65], "entrypoint": [44, 47, 50, 52, 57, 60, 1897], "storage_read": 44, "coordinator_rank": 44, "no_dist": 44, "planner": 44, "spmd": 44, "fullfil": 44, "shardedtensor": [44, 65], "po": [44, 1923], "storageread": [44, 1880], "rank0": [44, 65], "mymodul": [44, 65, 73, 1216, 1217, 1218, 1222, 1223, 1229, 1445, 1446, 1454, 1455, 1882, 1884, 1885, 1912, 1921, 1935], "adagrad": [44, 1387, 1892, 1926, 1935], "model_state_dict": 44, "fs_storage_read": 44, "filesystemread": [44, 1880], "save_state_dict": [44, 1880], "storage_writ": 44, "storagewrit": [44, 1880], "fs_storage_writ": 44, "filesystemwrit": [44, 1880], "told": [44, 1884], "read_metadata": 44, "set_up_storage_read": 44, "prepare_local_plan": 44, "prepare_global_plan": 44, "read_data": 44, "central": [44, 74, 1165, 1913, 1915], "loadplan": [44, 1880], "storage_data": 44, "loadplann": [44, 1880], "load_byt": 44, "bytesio": [44, 1219, 1222, 1283, 1761, 1923, 1930], "resolve_tensor": 44, "storagelay": 44, "is_coordin": 44, "set_up_storage_writ": 44, "write_data": 44, "recover": 44, "writeresult": 44, "saveplan": [44, 1880], "saveplann": [44, 1880], "resolve_data": 44, "writeitem": [44, 1880], "tensor_data": 44, "set_up_plann": 44, "create_local_plan": 44, "create_global_plan": 44, "commit_tensor": 44, "defaultloadplann": [44, 1880], "requit": 44, "intrincaci": 44, "renameplann": 44, "original_state_dict": 44, "foo_": [44, 1142], "v": [44, 56, 69, 73, 502, 557, 908, 915, 917, 918, 919, 950, 1141, 1151, 1153, 1209, 1225, 1247, 1251, 1275, 1279, 1284, 1450, 1492, 1493, 1534, 1579, 1593, 1663, 1668, 1697, 1699, 1719, 1752, 1811, 1815, 1830, 1831, 1872, 1880, 1882, 1883, 1884, 1885, 1895, 1905, 1913, 1922, 1927, 1939, 1944], "read_item": 44, "dest_index": 44, "fqn": [44, 47, 1949], "metamodelmateri": 44, "defaultsaveplann": [44, 1880], "empty_lik": [44, 1883, 1887, 1898, 1900, 1925, 1939], "global_plan": 44, "finish_plan": 44, "central_plan": 44, "readitem": [44, 1880], "planner_data": 44, "loaditemtyp": 44, "metadataindex": 44, "dest_offset": 44, "storage_index": 44, "storage_offset": [44, 155, 534, 630, 891, 1881, 1883, 1925], "tandem": 44, "fp16planner": 44, "write_item": 44, "writeitemtyp": 44, "byte_io": 44, "itertool": [44, 48, 952, 965], "islic": 44, "ddploadbalancingplann": 44, "all_plan": 44, "saveextradataplann": 44, "merged_data": 44, "new_plan": 44, "idempot": [44, 1935, 1937], "hi": [44, 1414, 1415, 1882, 1884, 1913], "late": [44, 59], "tensorwritedata": 44, "nonetyp": [44, 1883, 1885], "single_file_per_rank": 44, "sync_fil": 44, "thread_count": 44, "per_thread_copy_ahead": 44, "10000000": 44, "atom": [44, 59, 73, 1886], "distributedtensor": [44, 47], "flatten_state_dict": 44, "flatten_sharded_tensor": 44, "dedup_replicated_tensor": 44, "lookup_object": 44, "transform_object": 44, "lookup_tensor": 44, "transform_tensor": 44, "fault": [45, 50, 58, 59, 1138], "toler": [45, 50, 58, 59, 73, 707, 921, 922, 1201, 1227, 1228, 1266, 1269, 1284, 1682, 1689, 1882, 1946], "quickstart": 45, "agent": [45, 51, 52, 53, 56, 58, 60, 61, 1935], "expir": 45, "kubernet": 45, "distributedoptim": [46, 1624, 1880, 1935, 1936], "rref": [46, 1624, 1880, 1885, 1928, 1936], "optimizer_class": 46, "params_rref": 46, "get_gradi": [46, 1925, 1935, 1936], "multithread": [46, 933, 1908], "dist_autograd": [46, 1624, 1935, 1936], "rpc": [46, 72, 1624, 1880, 1885, 1928, 1936, 1937], "context_id": [46, 1624, 1935, 1936], "rref1": [46, 1935, 1936], "worker1": [46, 72, 1624, 1935, 1936], "rref2": [46, 1935, 1936], "to_her": [46, 1624, 1925, 1935, 1936, 1937], "dist_optim": [46, 1624, 1936], "postlocalsgdoptim": [46, 1880], "afer": 46, "modelaverag": 46, "localsgd": 46, "model_averag": 46, "post_localsgd_hook": 46, "postlocalsgdst": 46, "subgroup": 46, "start_localsgd_it": 46, "warmup_step": 46, "local_optim": 46, "periodicmodelaverag": 46, "intra": [46, 1907, 1909, 1928], "unnecessari": [46, 1664, 1885, 1905, 1908, 1910, 1921, 1927, 1943], "parameters_as_bucket_view": 46, "overlap_with_ddp": 46, "consumpt": [46, 69, 1669, 1939, 1944], "intact": [46, 1935], "ddp_zero_hook": 46, "disjointli": 46, "trail": [46, 1659, 1661, 1900, 1903, 1906, 1910], "wari": 46, "static_graph": [46, 1624, 1909], "third": [46, 48, 1084, 1085, 1301, 1352, 1359, 1374, 1377, 1439, 1711, 1880, 1882, 1908, 1911, 1916, 1927, 1929], "add_param_group": [46, 1636, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700], "param_group": [46, 65, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1693, 1696, 1697, 1698, 1699, 1700, 1707, 1710], "frozen": [46, 1216, 1221, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1886, 1922], "trainabl": [46, 1031, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1696, 1697, 1698, 1699, 1700, 1910], "consolidate_state_dict": 46, "consolid": [46, 65, 1928], "pertain": 46, "preced": [46, 50, 65, 693, 1619, 1711, 1850, 1886, 1907, 1926, 1930], "dtensor": 47, "rowwis": 47, "colwis": 47, "pairwis": [47, 48, 1404, 1453, 1492], "parallelize_modul": [47, 1880], "device_mesh": 47, "parallelize_plan": 47, "tp_mesh_dim": 47, "sub_modul": 47, "parallelstyl": 47, "devicemesh": 47, "mesh": [47, 1944], "prepar": [47, 73, 810, 852, 854, 870, 872, 874, 875, 876, 1151, 1221, 1886, 1923, 1948, 1949], "pairwiseparallel": [47, 1880], "rowwiseparallel": [47, 1880], "_prepare_input": 47, "make_input_shard_1d_last_dim": [47, 1880], "_prepare_output": 47, "make_output_tensor": [47, 1880], "colwiseparallel": [47, 1880], "make_input_replicate_1d": [47, 1880], "make_sharded_output_tensor": 47, "megatron": 47, "lm": 47, "arxiv": [47, 48, 1414, 1462, 1463, 1490, 1668, 1719, 1831, 1905], "1909": [47, 891], "08053": 47, "multihead": [47, 1450, 1489], "mlp": [47, 1615, 1930], "sequenceparallel": [47, 1880], "pdf": [47, 1367, 1462, 1794, 1905], "2205": 47, "05198": 47, "expectedli": 47, "make_input_reshard_repl": [47, 1880], "make_input_shard_1d": [47, 1880], "make_output_replicate_1d": [47, 1880], "make_output_reshard_tensor": [47, 1880], "make_output_shard_1d": [47, 1880], "multiheadattent": [47, 1487, 1489, 1491, 1930], "multihead_attent": 47, "swap": [47, 73, 630, 801, 802, 803, 806, 810, 877, 1301, 1492, 1493, 1609, 1610, 1850, 1883, 1886, 1908, 1930, 1939, 1941, 1948], "multihead_attention_tp": 47, "tensorparallelmultiheadattent": [47, 1880], "embed_dim": [47, 748, 1450], "num_head": [47, 748, 1450, 1883], "add_bias_kv": [47, 748, 1450], "add_zero_attn": [47, 748, 1450, 1883], "kdim": [47, 748, 1450], "vdim": [47, 748, 1450], "batch_first": [47, 747, 748, 773, 1396, 1414, 1450, 1459, 1460, 1487, 1489, 1491, 1658, 1660, 1661, 1663, 1883, 1912], "tp_size": 47, "self_attent": 47, "head": [47, 748, 1352, 1450, 1487, 1489, 1491], "fullyshardeddataparallel": [47, 1880], "enable_2d_with_fsdp": [47, 1880], "parameteriz": 48, "tensorflow": [48, 1697, 1905, 1944], "backpropag": [48, 922, 1698, 1729, 1912], "surrog": 48, "likelihood": [48, 1352, 1398, 1451, 1458, 1540, 1578, 1586], "reinforc": [48, 1473, 1596], "polici": [48, 50, 52, 65, 1705, 1711], "reparameter": [48, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654, 1655, 1656, 1668], "trick": [48, 917, 1361, 1545, 1905, 1913, 1915], "autoencod": 48, "whilst": [48, 1908], "densiti": [48, 317, 1173, 1174, 1794, 1883, 1940], "log_prob": [48, 1352, 1367, 1527, 1883], "theta": [48, 1508, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1883], "pi": [48, 190, 393, 711, 944, 1169, 1170, 1263, 1394, 1458, 1541, 1586, 1703, 1704, 1723, 1785, 1786, 1789, 1790, 1791, 1792, 1826, 1884, 1885, 1927, 1940], "reward": 48, "ascent": 48, "prob": [48, 1883], "policy_network": 48, "next_stat": 48, "rsampl": 48, "parameter": [48, 393, 469, 1218, 1901, 1939], "has_rsampl": 48, "batch_shap": 48, "event_shap": 48, "validate_arg": 48, "arg_constraint": 48, "cdf": 48, "cumul": [48, 1064, 1065, 1066, 1067, 1068, 1291, 1362, 1363, 1364, 1394, 1417, 1418, 1419, 1483, 1541], "mass": 48, "enumerate_support": 48, "discret": [48, 64, 496, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1120, 1122, 1545, 1794, 1944, 1947], "cardin": [48, 1313], "univari": 48, "singleton": [48, 270, 1416, 1864, 1906], "cartesian": [48, 952, 1313, 1723], "_instanc": 48, "icdf": 48, "perplex": 48, "sample_shap": 48, "sample_n": 48, "set_default_validate_arg": 48, "mimic": [48, 1711], "stddev": 48, "varianc": [48, 984, 1362, 1363, 1364, 1389, 1398, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1536, 1540, 1696, 1697, 1733, 1742, 1743, 1867, 1868, 1903, 1916], "exp_famili": 48, "famili": 48, "p_": [48, 956, 1303, 1699], "langl": 48, "rangl": 48, "denot": [48, 73, 984, 1232, 1251, 1257, 1270, 1280, 1372, 1373, 1410, 1633, 1636, 1699, 1812, 1813, 1814, 1816, 1817, 1869, 1913, 1933, 1936, 1939], "carrier": 48, "analyt": [48, 921, 922, 1534, 1939], "bregman": 48, "courtesi": 48, "frank": 48, "nielsen": 48, "richard": 48, "nock": 48, "logit": [48, 407, 1361, 1380, 1516, 1526, 1545, 1883, 1925, 1940], "70": [48, 1270, 1729, 1900], "lower_bound": 48, "upper_bound": 48, "has_enumerate_support": 48, "param_shap": 48, "concentration1": 48, "concentration0": 48, "concentr": 48, "1046": 48, "1st": [48, 1906], "2nd": [48, 630, 1452, 1478, 1581, 1906], "greaterthan": 48, "total_count": 48, "71": 48, "trial": 48, "integergreaterthan": 48, "ldot": [48, 1243, 1251, 1282, 1298, 1313, 1416, 1437, 1438, 1439, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "unnorm": [48, 1380, 1516, 1526, 1545], "likewis": [48, 1850], "25": [48, 510, 599, 600, 601, 954, 1173, 1279, 1284, 1390, 1447, 1449, 1452, 1615, 1624, 1661, 1663, 1689, 1711, 1730, 1866, 1882, 1939, 1940], "independentconstraint": 48, "simplex": 48, "loc": [48, 1283], "lorentz": 48, "3214": 48, "width": [48, 792, 798, 871, 1172, 1173, 1174, 1358, 1359, 1373, 1374, 1376, 1377, 1413, 1438, 1439, 1451, 1478, 1496, 1554, 1612, 1899, 1939], "df": 48, "chi": 48, "continuous_bernoulli": 48, "lim": [48, 1209], "499": 48, "501": 48, "2538": [48, 1243], "pervas": 48, "loaiza": 48, "ganem": 48, "cunningham": 48, "jp": 48, "1907": 48, "06845": 48, "8954": 48, "greaterthaneq": 48, "df1": 48, "df2": 48, "fisher": 48, "snedecor": 48, "2453": 48, "degre": [48, 984, 1062, 1069, 1212, 1249, 1250, 1444, 1453, 1492, 1624, 1737, 1757, 1824, 1825, 1867, 1868, 1883, 1913, 1925, 1939], "freedom": [48, 984, 1824, 1825, 1867, 1868, 1913], "0124": 48, "half_cauchi": 48, "half_norm": 48, "base_distribut": 48, "reinterpreted_batch_ndim": 48, "diagon": [48, 70, 241, 276, 608, 609, 610, 611, 945, 980, 984, 1072, 1073, 1074, 1076, 1085, 1098, 1146, 1147, 1157, 1241, 1253, 1255, 1258, 1270, 1274, 1583, 1593, 1810, 1849, 1853, 1854, 1855, 1856, 1857, 1883, 1910, 1925, 1943], "multivari": [48, 1940], "multivariate_norm": 48, "mvn": 48, "scale_tril": 48, "diag": [48, 71, 1145, 1146, 1147, 1247, 1248, 1275, 1719, 1810, 1830, 1831, 1883, 1925], "diagn": 48, "1729": [48, 1916], "lkj_choleski": 48, "lkj": 48, "matric": [48, 276, 699, 702, 934, 946, 947, 956, 957, 958, 959, 1073, 1157, 1232, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1274, 1275, 1276, 1284, 1292, 1301, 1303, 1316, 1395, 1453, 1508, 1542, 1631, 1636, 1717, 1719, 1729, 1778, 1804, 1807, 1808, 1830, 1831, 1853, 1854, 1856, 1883, 1898, 1913, 1919, 1939, 1945], "eta": [48, 1683, 1685, 1698], "proport": [48, 1412, 1413, 1450, 1491], "det": [48, 1249, 1250, 1271, 1292, 1883, 1925], "lkjcorr": 48, "onion": 48, "3x3": [48, 1068, 1851], "3516": 48, "9361": 48, "1899": [48, 1314], "4748": 48, "8593": 48, "vine": 48, "2009": [48, 1719, 1831], "lewandowski": 48, "dorota": 48, "kurowicka": 48, "harri": [48, 1794], "joe": 48, "journal": [48, 1736], "1016": 48, "jmva": 48, "04": [48, 1128, 1289, 1787, 1794], "008": 48, "corrcholeski": 48, "log_norm": [48, 1925], "lowrank_multivariate_norm": 48, "cov_factor": 48, "cov_diag": 48, "covari": [48, 947, 980, 984, 1362, 1363, 1364, 1483, 1719], "covariance_matrix": 48, "2102": 48, "5429": [48, 1853], "woodburi": 48, "lemma": 48, "capacit": 48, "precision_matrix": 48, "mixture_same_famili": 48, "mixture_distribut": 48, "component_distribut": 48, "rightmost": [48, 947, 1173, 1174, 1885], "gaussian": [48, 1394, 1398, 1473, 1540, 1541, 1596, 1793, 1940], "gmm": 48, "bivari": 48, "innermost": [48, 73, 1165, 1174, 1765], "1338": 48, "mathbf": [48, 1232, 1632, 1665, 1668, 1698], "sigma": [48, 190, 393, 773, 1361, 1395, 1396, 1397, 1414, 1415, 1473, 1474, 1542, 1596, 1632, 1665, 1788, 1824, 1825, 1867, 1868, 1883], "triangular": [48, 957, 958, 959, 1241, 1242, 1248, 1250, 1258, 1259, 1266, 1269, 1270, 1272, 1274, 1583, 1705, 1729, 1853, 1854, 1855, 1856, 1857], "positivedefinit": 48, "lowercholeski": 48, "negative_binomi": 48, "halfopeninterv": 48, "mu": [48, 393, 1697, 1699], "one_hot_categor": 48, "onehot": 48, "5623": 48, "nonneg": [48, 1493, 1719, 1831, 1940], "pmf": 48, "mathrm": [48, 936, 1249, 1250, 1251, 1252, 1263, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1453, 1458, 1483, 1631, 1686, 1687, 1688, 1698, 1733, 1905, 1940], "relaxed_bernoulli": 48, "temperatur": [48, 1545, 1880], "parametr": [48, 1141, 1633, 1640, 1665, 1666, 1668, 1901, 1910], "reparametriz": 48, "99": [48, 1223, 1697, 1882], "2951": [48, 1311], "3442": 48, "8918": 48, "9021": 48, "maddison": 48, "2017": [48, 1487, 1489, 1491, 1811, 1922], "reparametr": [48, 1545, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1648, 1668], "jang": 48, "relaxed_categor": 48, "1294": [48, 957], "2324": [48, 1212, 1444], "3859": 48, "2523": 48, "student": 48, "transformed_distribut": 48, "composit": [48, 70, 1145, 1259, 1631, 1882, 1885, 1911, 1916, 1923], "basedistribut": 48, "dx": [48, 1068, 1360, 1851, 1883, 1910, 1911, 1940], "dy": 48, "logist": [48, 1473, 1476, 1596, 1940], "sigmoidtransform": 48, "affinetransform": 48, "invert": [48, 73, 959, 1203, 1243, 1252, 1253, 1259, 1265, 1272, 1274, 1277, 1278, 1292, 1440, 1441, 1442, 1853, 1883, 1919, 1935], "3418": 48, "upper": [48, 198, 199, 200, 607, 808, 945, 950, 957, 958, 959, 961, 1099, 1100, 1172, 1173, 1241, 1242, 1248, 1250, 1258, 1259, 1270, 1274, 1462, 1583, 1591, 1592, 1705, 1711, 1729, 1744, 1765, 1853, 1856, 1857, 1883, 1903, 1925, 1940, 1946], "von_mis": 48, "circular": [48, 1372, 1373, 1374, 1420, 1421, 1422, 1581], "von": 48, "mise": 48, "unconstrain": [48, 1636], "angl": [48, 768, 897, 1069, 1292, 1430, 1723, 1737, 1781, 1880, 1883, 1925, 1939], "9777": 48, "radian": [48, 711, 897, 1069, 1737, 1883, 1925], "nichola": 48, "1979": 48, "152": [48, 630], "157": 48, "4784": [48, 1316], "symmetr": [48, 815, 833, 935, 944, 957, 958, 959, 1106, 1107, 1108, 1113, 1115, 1119, 1120, 1122, 1169, 1170, 1231, 1241, 1242, 1247, 1248, 1250, 1254, 1255, 1256, 1263, 1266, 1269, 1275, 1284, 1631, 1636, 1711, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1930, 1933], "x_ij": 48, "wu": [48, 1284], "chu": 48, "2018": [48, 1284, 1727], "sawyer": 48, "2007": 48, "anderson": 48, "2003": 48, "odel": 48, "feiveson": 48, "1966": 48, "samplecovari": 48, "jasa": 48, "61": 48, "313": 48, "199": 48, "203": [48, 630], "ku": 48, "bloomfield": 48, "2010": [48, 1903], "ox": 48, "max_try_correct": 48, "bartlett": [48, 935], "singular": [48, 1243, 1257, 1258, 1264, 1266, 1268, 1269, 1275, 1276, 1284, 1292, 1301, 1632, 1636, 1719, 1830, 1831, 1919], "kl_diverg": 48, "kullback": [48, 1410, 1555], "leibler": [48, 1410, 1555], "register_kl": 48, "type_p": 48, "type_q": 48, "kl_normal_norm": 48, "ambigu": [48, 73, 1197, 1375, 1376, 1377, 1391, 1440, 1441, 1442, 1496, 1885], "runtimewarn": 48, "basep": 48, "derivedq": 48, "kl_version1": 48, "derivedp": 48, "baseq": 48, "kl_version2": 48, "tie": 48, "abstransform": 48, "event_dim": 48, "affin": [48, 487, 488, 489, 490, 491, 762, 764, 765, 766, 815, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1508, 1908, 1916], "cattransform": 48, "tseq": 48, "functor": [48, 1028, 1029], "submatrix": 48, "t0": [48, 1165, 1683, 1884], "exptransform": 48, "identity_transform": 48, "composetransform": 48, "corrcholeskytransform": 48, "uncontrain": 48, "euclidean": [48, 954, 1579], "x_i": [48, 70, 961, 1064, 1065, 1066, 1067, 1280, 1287, 1434, 1453, 1477, 1479, 1492, 1563, 1599, 1726, 1809, 1824, 1825, 1851, 1867, 1868, 1869, 1940], "stickbreakingtransform": 48, "r_i": 48, "tanh": [48, 590, 773, 778, 808, 898, 1394, 1396, 1397, 1414, 1415, 1443, 1459, 1461, 1485, 1541, 1573, 1605, 1881, 1883, 1898, 1899, 1903, 1925, 1932, 1939], "unsign": [48, 1933, 1942, 1945, 1946], "z_i": 48, "s_i": 48, "y_i": [48, 961, 1064, 1065, 1066, 1067, 1280, 1287, 1492, 1851, 1869, 1913], "sqrt": [48, 73, 393, 562, 686, 687, 773, 980, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1178, 1231, 1313, 1362, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1394, 1396, 1397, 1399, 1407, 1408, 1409, 1412, 1413, 1414, 1415, 1416, 1429, 1431, 1459, 1461, 1483, 1541, 1593, 1636, 1684, 1685, 1686, 1687, 1690, 1696, 1697, 1733, 1760, 1793, 1824, 1825, 1881, 1883, 1898, 1903, 1904, 1905, 1925, 1939, 1940, 1946], "cumulativedistributiontransform": 48, "copula": 48, "base_dist": 48, "independenttransform": 48, "base_transform": 48, "log_abs_det_jacobian": 48, "lowercholeskytransform": 48, "positivedefinitetransform": 48, "powertransform": 48, "expon": [48, 284, 285, 296, 483, 484, 1128, 1135, 1235, 1265, 1352, 1432, 1579, 1726, 1736, 1881, 1883, 1942, 1945], "reshapetransform": 48, "in_shap": 48, "out_shap": 48, "softplustransform": 48, "tanhtransform": 48, "softmaxtransform": 48, "biject": 48, "hmc": 48, "stacktransform": 48, "stick": 48, "primarili": [48, 72, 828, 829, 830, 836, 1344, 1895, 1930], "_call": 48, "_invers": 48, "codomain": [48, 1905], "iff": [48, 1450], "weaker": [48, 1908], "pseudoinvers": [48, 1252, 1269, 1277], "monoton": [48, 1443, 1573, 1765], "forward_shap": 48, "inverse_shap": 48, "corr_choleski": 48, "greater_than": 48, "greater_than_eq": 48, "integer_interv": 48, "less_than": 48, "lower_choleski": 48, "lower_triangular": 48, "nonnegative_integ": 48, "one_hot": [48, 1883, 1925], "positive_integ": 48, "positive_semidefinit": 48, "positive_definit": 48, "real_vector": 48, "unit_interv": 48, "is_discret": 48, "constrain": [48, 1480, 1885, 1916], "_cat": 48, "dependent_properti": 48, "_dependentproperti": 48, "_greaterthan": 48, "_greaterthaneq": 48, "_independentconstraint": 48, "_integerinterv": 48, "_interv": 48, "half_open_interv": 48, "_halfopeninterv": 48, "_lessthan": 48, "_multinomi": 48, "_stack": [48, 1925], "constraintregistri": 48, "biject_to": 48, "transform_to": 48, "overparameter": 48, "rotat": [48, 1757, 1830], "hamiltonian": 48, "mont": 48, "carlo": 48, "potential_energi": 48, "cheap": [48, 1352], "svi": 48, "fewer": [48, 70, 706, 708, 709, 712, 960, 1232, 1233, 1299, 1309, 1311, 1312, 1314, 1317, 1339, 1342, 1398, 1525, 1727, 1811, 1824, 1825, 1829, 1847, 1867, 1868, 1891, 1906, 1921, 1946], "my_constraint": 48, "my_transform": 48, "myconstraintclass": 48, "my_factori": 48, "mytransform": 48, "param1": [48, 1916], "param2": [48, 1916], "constraint_registri": 48, "my_registri": 48, "construct_transform": 48, "myconstraint": 48, "from_dlpack": [49, 893, 1880], "ext_tensor": [49, 1136], "extern": [49, 989, 1136, 1227, 1895, 1907, 1908, 1919, 1923], "immut": [49, 1136, 1885], "__dlpack__": [49, 1136], "capsul": [49, 893, 1136], "ndarrai": [49, 473, 892, 1136, 1137, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1923, 1944, 1946], "pycapsul": [49, 1136], "to_dlpack": [49, 1136, 1880], "dltensor": [49, 1136], "t3": [49, 1136, 1936], "legaci": [49, 60, 1545, 1929, 1942], "idiomat": 49, "plane": [50, 59, 751, 752, 753, 754, 755, 756, 779, 780, 781, 782, 785, 786, 787, 795, 796, 1073, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1392, 1393, 1412, 1413, 1416, 1432, 1437, 1438, 1439, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1561, 1564, 1565, 1567, 1568, 1569, 1668, 1734, 1735, 1757], "monitor": [50, 60, 61, 100, 988, 1713, 1880, 1908, 1914], "unhealthi": 50, "tear": 50, "decentr": 50, "elasticag": 50, "quad": [50, 1360, 1361, 1380, 1411, 1435, 1451, 1493], "group_result": 50, "is_fail": [50, 51], "exit_cod": 50, "get_worker_group": 50, "workergroup": [50, 60], "mutabl": [50, 1227, 1882, 1927, 1944], "implementor": 50, "defens": 50, "retri": [50, 52, 61, 65, 1042, 1935, 1937], "max_restart": [50, 51, 60], "runresult": 50, "workerspec": [50, 51, 60, 61], "local_world_s": [50, 51, 60], "rdzv_handler": [50, 51, 59], "monitor_interv": [50, 51], "local_addr": [50, 59], "tee": [50, 57], "blueprint": 50, "spec": [50, 51, 61, 74, 101, 806, 807, 832, 833, 834, 837, 838, 839, 1932], "homogen": [50, 60], "rendezvoushandl": [50, 51, 59, 60], "rdzv": [50, 58, 60], "consol": [50, 53, 56, 57, 60, 1944], "get_entrypoint_nam": 50, "__qualname__": 50, "workerst": 50, "unknown": [50, 1626, 1627, 1937], "unrecover": 50, "termin": [50, 59, 61, 73, 1689, 1897, 1935], "uncaught": [50, 52], "unhandl": 50, "recov": [50, 908, 1106, 1271, 1303, 1624, 1657, 1826, 1904, 1912, 1913, 1931], "is_run": 50, "role_rank": [50, 60], "role_world_s": [50, 60], "pid": [50, 52, 60, 61, 1483, 1912, 1929], "local_elastic_ag": 50, "localelasticag": [50, 51, 61], "start_method": [50, 51, 57, 61, 1897], "exit_barrier_timeout": 50, "log_dir": [50, 57, 1895, 1944], "inter": [50, 52, 1162, 1776, 1907, 1909, 1928, 1935], "advis": [50, 557, 630, 878, 1918], "pipe": [50, 61, 1880, 1935], "torchelastic_enable_file_tim": 50, "torchelastic_timer_fil": 50, "shared_queu": 50, "get_context": [50, 61, 1918], "nproc_per_process": 50, "foobar": [50, 52, 56, 57], "other_param": [50, 61], "usr": [50, 57, 59, 1908], "simpleelasticag": 50, "scaffold": 50, "_assign_worker_rank": 50, "group_world_s": 50, "_exit_barri": 50, "_initialize_work": 50, "worker_group": 50, "fresh": [50, 1076, 1768, 1799, 1879], "start_work": 50, "_stop_work": 50, "optimist": 50, "deleg": 50, "_monitor_work": 50, "_rendezv": 50, "_restart_work": 50, "_shutdown": 50, "death_sig": 50, "sigterm": 50, "_start_work": 50, "gracefulli": [50, 60, 70, 1242, 1911], "meaningless": 50, "intention": [50, 1082, 1869, 1914, 1935], "ship": [51, 1142, 1907, 1935], "programmat": [51, 73, 1916], "my_launch": 51, "argv": [51, 62], "trainer_entrypoint_fn": 51, "fn_arg": 51, "run_result": 51, "myrendezvoushandl": 51, "elastic_ag": 51, "metrichandl": [51, 56], "mymetrichandl": 51, "metric_data": [51, 56], "metricdata": 51, "sink": [51, 56, 1895], "eventhandl": 51, "cloudwatch": 51, "nulleventhandl": 51, "myeventhandl": 51, "start_process": [52, 57, 1897], "torchelastic_error_fil": 52, "error_handl": 52, "sugar": [52, 1884], "get_error_handl": 52, "childfailederror": 52, "get_first_failur": 52, "dump_error_fil": 52, "error_fil": [52, 57], "exitcod": [52, 60], "nanni": 52, "diagnost": [52, 85, 90, 91, 92, 93, 94, 95, 96, 97, 100, 1678, 1880, 1882], "torchelastic_ag": 52, "trainer_0": 52, "trainer_1": 52, "trainer_n": 52, "errorhandl": 52, "record_except": 52, "processfailur": 52, "test_ev": 53, "eventsourc": 53, "get_logging_handl": 53, "millisecond": [53, 56, 988, 1895], "eventmetadatavalu": 53, "telemetri": 56, "timeseri": 56, "metric_group": 56, "metric_nam": 56, "sensibl": 56, "my_modul": [56, 65, 73, 1882, 1927], "nullmetricshandl": 56, "consolemetricshandl": 56, "my_method": 56, "put_metr": 56, "calculate_lat": 56, "succinctli": 56, "baz": [56, 73, 867, 1927, 1946], "leaf_modul": 56, "classnam": [56, 1885], "threw": 56, "my_app": 56, "consolemetrichandl": 56, "stdout": [56, 57, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1715, 1923], "stdoutmetrichandl": 56, "1574213883": 56, "4182858": 56, "my_metr": 56, "1574213940": 56, "5237644": 56, "nullmetrichandl": 56, "class_nam": [56, 73], "def_nam": 56, "metric_valu": 56, "metric_group_nam": 56, "popen": 57, "stderr": [57, 1879, 1894], "err": 57, "echo": 57, "hello": [57, 70, 1884, 1923, 1927], "pcontext": 57, "multiprocesscontext": 57, "subprocesscontext": 57, "keyset": 57, "bitmask": 57, "mask": [57, 415, 416, 417, 418, 419, 557, 748, 921, 922, 1305, 1356, 1367, 1389, 1450, 1487, 1488, 1489, 1490, 1491, 1536, 1593, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1700, 1880, 1883, 1898, 1899, 1939], "bar0": 57, "bar1": 57, "file1": 57, "file2": 57, "caution": 57, "short": [57, 73, 747, 776, 1085, 1209, 1367, 1414, 1415, 1527, 1680, 1778, 1826, 1884, 1898, 1905, 1906, 1916, 1935, 1941, 1942, 1945], "ing": 57, "cmd": [57, 60], "forkserv": [57, 1624, 1897, 1918], "tee_stdout": 57, "tee_stderr": 57, "processcontext": [57, 1897], "superset": [57, 60], "runprocsresult": 57, "num_nod": [58, 60], "trainers_per_nod": 58, "num_allowed_failur": 58, "job_id": [58, 59, 60], "endpoint": [58, 59, 60], "host_node_addr": [58, 60], "min_siz": [58, 60], "num_allowed_failures_or_membership_chang": 58, "node1": [58, 60], "29400": [58, 60], "sidecar": [58, 59], "agre": [59, 1270, 1937], "resum": [59, 1705, 1711, 1713, 1935, 1937, 1944], "retryabl": 59, "lose": [59, 62, 65, 208, 225, 1899], "train_loop": [59, 875], "arriv": [59, 60, 1935, 1937], "dynamicrendezvoushandl": 59, "rendezvousbackend": 59, "c10drendezvousbackend": 59, "etcdrendezvousbackend": 59, "supersed": 59, "etcdrendezvoushandl": 59, "my_run_id": 59, "from_backend": 59, "run_id": [59, 60], "min_nod": 59, "max_nod": 59, "rendezvousparamet": 59, "admit": [59, 60, 1908], "get_as_bool": 59, "get_as_int": 59, "rendezvoushandlerregistri": 59, "create_handl": 59, "creator": [59, 1905, 1935, 1937], "get_run_id": 59, "is_clos": 59, "set_clos": 59, "next_rendezv": 59, "rendezvousclosederror": 59, "rendezvousconnectionerror": 59, "rendezvousstateerror": 59, "rendezvoustimeouterror": 59, "num_nodes_wait": 59, "shutdown": [59, 1935, 1936], "rendezvouserror": 59, "dynamic_rendezv": 59, "join_timeout": 59, "600": 59, "last_call_timeout": 59, "close_timeout": 59, "rendezvoustimeout": 59, "get_stat": [59, 105], "fenc": 59, "set_stat": [59, 105], "condition": [59, 1775], "last_cal": 59, "heartbeat": 59, "keep_al": 59, "c10d_rendezvous_backend": 59, "create_backend": 59, "store_typ": 59, "tcp": [59, 60, 1935], "read_timeout": 59, "60": [59, 61, 1398, 1715, 1841, 1846, 1895, 1935], "is_host": 59, "cname": 59, "fqdn": [59, 60], "etcd_rendezvous_backend": 59, "ssl_cert": 59, "ssl": 59, "certif": 59, "ssl_cert_kei": 59, "ca_cert": 59, "rool": 59, "key_prefix": 59, "ttl": 59, "hour": 59, "etcd_rendezv": 59, "rdzv_impl": 59, "etcdrendezv": 59, "etcd_address": 59, "min_work": 59, "max_work": 59, "noqa": 59, "w605": 59, "2379": [59, 1309], "etcd_prefix": 59, "etcdstor": 59, "etcd_stor": 59, "etcd_client": 59, "etcd_store_prefix": 59, "piggyback": 59, "num": [59, 758, 759, 773, 1334, 1396, 1399, 1414, 1450, 1459, 1487, 1918], "lookuperror": 59, "override_timeout": 59, "etcdserv": 59, "cumbersom": [59, 1885], "etcd_serv": 59, "data_dir": 59, "v3": [59, 60], "substitut": [59, 73, 1224, 1905, 1942], "torchelastic_etcd_binary_path": 59, "get_client": 59, "etcd_binary_path": 59, "migrat": [60, 66, 1313, 1668, 1933], "train_script": 60, "aforment": 60, "suffic": [60, 73], "compliant": [60, 62], "num_train": 60, "wors": [60, 1865], "port_k": 60, "etcd": 60, "v2": [60, 1280, 1718, 1879], "revis": 60, "localworkergroup": 60, "rdzv_id": 60, "rdzv_backend": [60, 62], "rdzv_endpoint": [60, 62], "max_nnod": 60, "torchelastic_restart_count": 60, "torchelastic_max_restart": 60, "python_exec": 60, "gang": 60, "departur": 60, "surviv": 60, "kill": [60, 61, 1897, 1912], "load_checkpoint": [60, 62], "checkpoint_path": [60, 62], "dataset": [60, 62, 74, 811, 1352, 1361, 1410, 1880, 1912, 1915, 1918, 1922, 1926, 1930, 1931, 1944], "train_step": 60, "should_checkpoint": 60, "save_checkpoint": [60, 62], "acquir": [61, 73, 1916, 1937, 1939], "deadlin": 61, "message_queu": 61, "localtimerserv": 61, "max_interv": 61, "trainer_func": 61, "localtimercli": 61, "expiri": 61, "timer_cli": 61, "countdown": 61, "timefram": [61, 1935], "elig": [61, 1937], "reap": 61, "timerserv": 61, "mp_queue": 61, "daemon": [61, 1897], "filetimerserv": 61, "file_path": 61, "log_ev": [61, 1895], "filetimercli": 61, "fifo": 61, "watchdog": 61, "filetimerrequest": 61, "sigkil": 61, "named_pip": 61, "mkfifo": 61, "timercli": 61, "timerrequest": 61, "scope_id": 61, "expiration_tim": 61, "acquisit": 61, "request_queu": 61, "entiti": [61, 73], "clear_tim": 61, "get_expired_tim": 61, "register_tim": 61, "timer_request": 61, "use_env": 62, "expositori": 62, "worst": [62, 1910], "total_num_epoch": 62, "exportdb": [63, 1880], "sharding_strategi": 65, "cpu_offload": 65, "auto_wrap_polici": 65, "backward_prefetch": 65, "backwardprefetch": [65, 1880], "backward_pr": [65, 1212, 1444], "mixed_precis": [65, 1624], "ignored_modul": 65, "param_init_fn": 65, "sync_module_st": 65, "forward_prefetch": 65, "limit_all_gath": 65, "use_orig_param": 65, "ignored_st": 65, "deepspe": 65, "shorten": 65, "sharded_modul": 65, "0001": [65, 73, 1066, 1256, 1432, 1561, 1683, 1713, 1883, 1926], "stale": 65, "dev_id": 65, "no_sync": [65, 1624], "offload": 65, "ping": 65, "77724": 65, "summon_full_param": 65, "shardingstrategi": [65, 1880], "shard_grad_op": 65, "unshard": 65, "full_shard": 65, "with_grad": 65, "reacquir": 65, "hybrid_shard": 65, "cpuoffload": [65, 1880], "_fsdppolici": 65, "modulewrappolici": 65, "nonwrapped_numel": 65, "subtre": 65, "size_based_auto_wrap_polici": 65, "exce": [65, 1289, 1908, 1918], "100m": 65, "numel": [65, 450, 459, 964, 984, 1116, 1197, 1883, 1898, 1905, 1925, 1939], "custom_auto_wrap_polici": 65, "min_num_param": 65, "1e8": 65, "my_auto_wrap_polici": 65, "functool": [65, 68, 74, 854, 1910, 1946], "1e5": 65, "mixedprecis": [65, 1880], "is_meta": [65, 1925], "reset_paramet": 65, "torchdistx": 65, "deferred_init": 65, "materialize_modul": 65, "my_init_fn": 65, "fsdp_model": 65, "fullstatedictconfig": 65, "flight": 65, "named_paramet": [65, 67, 69, 1141, 1212, 1216, 1444, 1916, 1921], "flatparamet": 65, "unifi": [65, 1880, 1899], "norm_typ": [65, 758, 759, 1387, 1388, 1412, 1413, 1534, 1535, 1564, 1565, 1628, 1883], "infin": [65, 982, 1202, 1204, 1206, 1207, 1338, 1360, 1437, 1438, 1439, 1567, 1568, 1569, 1628, 1688, 1798, 1809, 1939, 1940], "no_shard": 65, "flatten_sharded_optim_state_dict": 65, "sharded_optim_state_dict": 65, "shard_full_optim_state_dict": 65, "unflatten": [65, 1883, 1898, 1899, 1925, 1943], "fsdp_modul": 65, "root_onli": 65, "full_optim_state_dict": 65, "optim_input": 65, "rank0_onli": 65, "convent": [65, 73, 351, 955, 1085, 1103, 1105, 1129, 1151, 1362, 1363, 1364, 1407, 1408, 1409, 1483, 1758, 1761, 1859, 1879, 1894, 1900, 1905, 1913, 1916, 1921], "get_state_dict_typ": 65, "state_dict_typ": 65, "statedictset": 65, "optim_state_dict": 65, "differen": 65, "named_buff": [65, 1212, 1444, 1916, 1921], "oom": [65, 1912], "unflattend": 65, "statedicttyp": 65, "fulloptimstatedictconfig": 65, "set_state_dict_typ": 65, "full_state_dict": 65, "save_a_checkpoint": 65, "load_a_checkpoint": 65, "optim_state_dict_to_load": 65, "is_named_optim": 65, "load_directli": 65, "original_osd": 65, "namedoptim": 65, "keyedoptim": 65, "torchrec": [65, 1880], "gossipgrad": [65, 1624], "latter": [65, 700, 804, 1212, 1414, 1444, 1451, 1911, 1916, 1918, 1920], "rekey_optim_state_dict": 65, "optim_state_key_typ": 65, "loadabl": [65, 1879], "wrapped_model": 65, "wrapped_optim": 65, "full_osd": 65, "nonwrapped_model": 65, "nonwrapped_optim": 65, "rekeyed_osd": 65, "optimstatekeytyp": 65, "param_id": 65, "osd": 65, "param_nam": 65, "sharded_osd": 65, "scatter_full_optim_state_dict": 65, "new_model": 65, "new_optim": 65, "remap": [65, 105, 1216, 1219, 1283, 1304, 1879, 1894, 1934], "state_dict_config": 65, "optim_state_dict_config": 65, "descend": [65, 73, 153, 555, 889, 1212, 1275, 1276, 1444, 1803, 1830, 1883], "transpar": [65, 1909, 1928, 1935, 1937], "sharded_state_dict": 65, "shardedstatedictconfig": 65, "offload_to_cpu": 65, "optimstatedictconfig": 65, "param_state_dict": 65, "statedictconfig": 65, "writeback": 65, "summon": 65, "discard": [65, 1209, 1269, 1634, 1879, 1884, 1895], "redundantli": [65, 1904], "materi": [65, 913, 977, 1626, 1627, 1700, 1753, 1754, 1910], "throughput": [65, 1882, 1907], "contend": 65, "backward_post": 65, "reorder": [65, 1105, 1267], "volum": [65, 1174], "_hybrid_shard_zero2": 65, "param_dtyp": 65, "reduce_dtyp": 65, "buffer_dtyp": 65, "keep_low_precision_grad": 65, "cast_forward_input": 65, "cast_root_forward_input": 65, "_module_classes_to_ignor": 65, "batchnorm": [65, 713, 714, 1150, 1212, 1221, 1444, 1483, 1624, 1893, 1905, 1916, 1926, 1928, 1930, 1932, 1933], "_batchnorm": 65, "permit": [65, 1939], "thereaft": 65, "upcast": 65, "offload_param": 65, "love": 66, "hear": 66, "arbitrarili": [66, 71, 527, 1215, 1508, 1885, 1905, 1910, 1911], "stock": [66, 71], "ensembl": [66, 69, 71, 1151], "maml": [66, 71], "vjp": [66, 69, 70, 902, 903, 1147, 1153, 1872, 1910, 1911], "whirlwind": 66, "tour": 66, "running_mean": [68, 1150, 1212, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1483, 1513, 1553, 1881, 1883, 1916, 1921], "running_var": [68, 1150, 1212, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1483, 1513, 1553, 1881, 1883, 1921], "groupnorm": [68, 1544], "anywher": [68, 1904], "batchnorm2d": [68, 726, 729, 731, 736, 827, 1221, 1381, 1418, 1513, 1893, 1905, 1916, 1930, 1932], "track_running_stat": [68, 764, 765, 766, 1150, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1921], "resnet": [68, 1879, 1882, 1884, 1916, 1927, 1944, 1948], "regnet": 68, "norm_lay": 68, "num_group": [68, 762, 1399, 1544, 1883], "fragil": 68, "replace_all_batch_norm_modules_": 68, "upstream": [69, 1922], "kept": [69, 73, 710, 792, 798, 1362, 1363, 1364, 1407, 1408, 1409, 1483, 1554, 1612, 1885, 1897, 1933, 1939], "jvp": [69, 70, 903, 907, 908, 909, 913, 1149, 1910], "jacfwd": [69, 70, 916, 1145, 1911], "make_functional_with_buff": 69, "hurri": 69, "emul": [69, 812, 1886, 1910], "fmodel": 69, "compute_loss": [69, 71, 1141, 1143], "predict": [69, 1352, 1361, 1398, 1526, 1926, 1944], "argnum": [69, 1143, 1144, 1145, 1146, 1147], "stack_module_st": 69, "num_model": [69, 1151], "in_featur": [69, 733, 741, 742, 745, 746, 769, 777, 1151, 1212, 1352, 1429, 1431, 1444, 1615, 1631, 1632, 1664, 1665, 1668, 1916], "out_featur": [69, 733, 741, 742, 745, 746, 769, 777, 1151, 1212, 1365, 1429, 1431, 1444, 1615, 1631, 1632, 1664, 1665, 1668, 1916], "base_model": 69, "deepcopi": [69, 1930, 1949], "clearer": [69, 1268, 1700, 1910, 1924], "call_single_model": 69, "stori": [69, 1913], "grad_x": [70, 1911], "has_aux": [70, 1143, 1144, 1146, 1147, 1148, 1152], "mental": [70, 1142], "absenc": 70, "unbind": [70, 1153, 1872, 1880, 1883, 1898, 1925, 1943], "lst": 70, "in_dim": [70, 71, 905, 1143, 1153, 1872, 1911], "batchedtensor": 70, "batched_tensor_input": 70, "new_": [70, 1908, 1945], "new_zero": [70, 1883, 1925], "new_empti": [70, 1883, 1925], "diag_emb": [70, 1075, 1247, 1248, 1275, 1830, 1883, 1925], "vec": [70, 124, 125, 439, 703, 1336, 1667, 1881, 1883, 1939], "copy_": [70, 238, 1142, 1496, 1882, 1883, 1898, 1908, 1941], "arithmet": [70, 939, 942, 956, 1267, 1755, 1886, 1895, 1898, 1899, 1919, 1930, 1942], "extra_arg": 70, "theoret": 70, "custom_dot": 70, "lax": 70, "cond": [70, 74, 77, 82, 1919], "while_loop": 70, "is_nonzero": [70, 1883, 1925, 1939], "rag": 70, "unclear": [70, 630], "add_nois": 70, "prng": 70, "cos_x": [71, 1143], "neg_sin_x": [71, 1143], "hide": [71, 1153, 1872, 1911], "feature_s": [71, 1143, 1153, 1872], "feature_vec": [71, 1143, 1153, 1872], "mseloss": [71, 1143, 1405, 1475, 1574, 1908, 1909], "grad_weight_per_exampl": [71, 1143], "cotang": [71, 1152], "vjp_fn": [71, 1152], "out_tang": 71, "hessian0": 71, "hessian1": 71, "hess": [71, 1145], "rpc_async": [72, 1885, 1925, 1935, 1937], "add_done_callback": 72, "fut": [72, 1215, 1624, 1907, 1935], "set_result": [72, 1624, 1935], "haven": [72, 1916], "set_except": 72, "baseexcept": 72, "slow_set_futur": 72, "sleep": 72, "cb1": 72, "cb2": 72, "dedic": [72, 1908], "didn": [72, 1910, 1922, 1926], "cb_fut": 72, "chain_cb_fut": 72, "cb": [72, 1935], "collect_al": [72, 1880], "fut0": 72, "fut1": [72, 1935], "fut_list": 72, "wait_al": [72, 1880], "toolkit": 73, "clamp": [73, 203, 204, 812, 815, 962, 1218, 1360, 1398, 1543, 1554, 1612, 1881, 1883, 1893, 1898, 1923, 1925, 1930, 1932, 1933, 1940, 1946], "num_us": 73, "get_attr": 73, "fake": [73, 98, 725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 806, 812, 813, 823, 825, 851, 874, 875, 1099, 1100, 1880, 1927, 1930, 1933], "theses": 73, "callsit": 73, "constitut": 73, "tracer_class": 73, "treatment": 73, "topk": [73, 1881, 1883, 1898, 1925], "linear_weight": 73, "add_1": [73, 1142], "linear_1": 73, "relu_1": 73, "topk_1": 73, "pose": [73, 1936], "explor": [73, 1879, 1905, 1916, 1927], "edit": [73, 1927, 1943], "lint": 73, "new_nod": 73, "tediou": 73, "unwieldi": 73, "machineri": [73, 1910], "imagin": [73, 1935], "requisit": 73, "relu_decomposit": 73, "decomposition_rul": 73, "constitu": [73, 1900], "new_graph": 73, "graphappendingtrac": 73, "proxy_arg": 73, "output_proxi": 73, "node_copi": 73, "ari": [73, 1923], "unari": [73, 1146, 1147, 1487, 1489, 1491, 1886, 1898], "organiz": 73, "shapeprop": 73, "named_modul": [73, 1212, 1444, 1916], "args_it": 73, "load_arg": 73, "map_arg": 73, "fetch_attr": 73, "target_atom": 73, "attr_itr": 73, "nonexist": [73, 1884, 1885], "self_obj": 73, "encompass": 73, "prove": [73, 1897], "disprov": 73, "led": 73, "auxiliari": [73, 1143, 1144, 1146, 1147, 1148, 1152, 1879, 1915], "unord": [73, 1445, 1454], "nondetermin": [73, 922, 1920], "dedupl": 73, "transformed_resnet18": 73, "input_imag": 73, "margin": [73, 1378, 1404, 1436, 1447, 1449, 1492, 1493, 1524, 1551, 1566, 1575, 1609, 1610, 1883, 1944], "commut": 73, "toolbox": 73, "tradit": [73, 1491], "luckili": 73, "my_pass": 73, "my_module_transform": 73, "input_valu": 73, "prompt": [73, 1879, 1922], "set_trac": [73, 1217, 1223, 1229, 1882], "examin": [73, 1916, 1923, 1929], "undergon": 73, "subclassm": 73, "untrac": 73, "pre_trac": 73, "post_trac": 73, "sake": 73, "tabular": [73, 693, 1891], "transform_graph": 73, "session": 73, "luck": 73, "input_nod": 73, "stepwis": 73, "onlin": [73, 1685], "realpython": 73, "pycharm": 73, "vscode": 73, "parlanc": 73, "func_to_trac": 73, "dyn": 73, "155": 73, "__bool__": [73, 1883, 1885], "to_bool": 73, "traceerror": [73, 1930], "architectur": [73, 1012, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1380, 1487, 1526, 1774, 1908, 1919, 1930, 1939], "hyper": [73, 1475, 1884, 1944], "do_activ": 73, "512": [73, 1487, 1488, 1489, 1490, 1491, 1908], "without_activ": 73, "with_activ": 73, "traced_without_activ": 73, "traced_with_activ": 73, "concrete_arg": 73, "truli": [73, 1923], "__torch_function__": [73, 1950], "161": 73, "len_1": 73, "sqrt_1": 73, "mycustomtrac": 73, "traced_graph": 73, "myspecialsubmodul": 73, "submod": 73, "neg_1": 73, "is_leaf_modul": [73, 1949], "sparse_coo_tensor": [73, 557, 594, 1811, 1883, 1887, 1925, 1939], "ones_lik": [73, 1146, 1147, 1152, 1883, 1900, 1908, 1911, 1916, 1925], "zeros_lik": [73, 911, 913, 1883, 1887, 1900, 1908, 1925, 1939], "viabl": [73, 1908], "torch_randn": 73, "gotcha": 73, "bake": [73, 74, 82, 1216, 1221, 1686, 1687, 1926], "dropoutrepro": 73, "assert_clos": [73, 1102, 1104, 1105, 1110, 1111, 1116, 1117, 1118, 1120, 1122, 1880, 1882, 1946], "greatest": [73, 1155, 1338, 1923, 1946], "6207983493804932": 73, "dropoutrepro2": 73, "pytre": [73, 74, 1911], "ph": 73, "shouldn": [73, 986, 1927, 1939, 1943], "fn_or_nam": 73, "callfunct": 73, "my_custom_funct": 73, "fn_to_be_trac": 73, "reassign": [73, 1908], "regener": 73, "unset": [73, 1919], "add_submodul": 73, "subpath": 73, "get_submodul": [73, 1212, 1444], "delete_all_unused_submodul": 73, "delete_submodul": 73, "print_read": 73, "print_output": 73, "date": [73, 1927], "pythoncod": 73, "fxmodul": 73, "pathlik": [73, 1283, 1761, 1927], "owning_modul": 73, "tracer_cl": 73, "tracer_extra": 73, "the_funct": 73, "type_expr": 73, "create_nod": 73, "method_nam": 73, "0th": [73, 1153, 1872], "inserting_befor": 73, "influenc": [73, 1677, 1923, 1939], "eliminate_dead_cod": 73, "topolog": [73, 1923], "attr_1": 73, "is_impur": 73, "erase_nod": 73, "to_eras": 73, "qualified_nam": 73, "graph_copi": 73, "val_map": 73, "return_output_nod": 73, "slice": [73, 74, 82, 83, 620, 708, 709, 1362, 1363, 1364, 1477, 1479, 1483, 1599, 1600, 1750, 1767, 1768, 1799, 1809, 1860, 1881, 1882, 1886, 1900, 1923, 1925, 1939, 1940, 1943, 1945], "memory_format": [73, 172, 187, 189, 192, 195, 196, 197, 206, 212, 223, 226, 256, 283, 313, 341, 347, 409, 513, 514, 538, 593, 963, 1086, 1087, 1140, 1212, 1444, 1624, 1676, 1739, 1741, 1743, 1878, 1880, 1881, 1883, 1946], "layout": [73, 74, 79, 82, 167, 208, 225, 358, 359, 450, 460, 461, 462, 463, 464, 473, 557, 594, 595, 596, 597, 598, 600, 601, 630, 702, 878, 906, 908, 935, 944, 1001, 1086, 1087, 1088, 1098, 1103, 1121, 1139, 1140, 1169, 1170, 1231, 1282, 1298, 1306, 1316, 1344, 1560, 1675, 1676, 1700, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1850, 1855, 1857, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1900, 1908, 1925, 1927, 1939, 1944, 1945, 1946], "opoverload": [73, 1889], "companion": 73, "__exit__": [73, 1885, 1886, 1927], "arg_transform": 73, "value_remap": 73, "_node_list": 73, "doubli": 73, "on_generate_cod": 73, "make_transform": 73, "transformcodefunc": 73, "insert_pdb": 73, "current_tran": 73, "default_valu": 73, "_not_": 73, "tabul": 73, "process_input": 73, "process_output": 73, "python_cod": 73, "root_modul": [73, 806, 1932], "set_codegen": 73, "return_typ": [73, 710, 1064, 1065, 1174, 1233, 1271, 1309, 1312, 1314, 1317, 1340, 1803, 1848, 1853], "all_input_nod": 73, "format_nod": 73, "placeholder_nam": 73, "maybe_return_typenam": 73, "autogener": [73, 1911], "impur": 73, "normalized_argu": 73, "arg_typ": 73, "kwarg_typ": 73, "normalize_to_only_use_kwarg": 73, "vararg": 73, "argskwargspair": 73, "bx": 73, "ax": [73, 1243, 1257, 1261, 1272, 1273, 1274, 1302, 1313, 1452, 1462, 1853, 1923], "prev": [73, 1698], "replace_with": 73, "delete_user_cb": 73, "propagate_meta": 73, "replace_input_with": 73, "old_input": 73, "new_input": 73, "create_proxi": 73, "record_stack_trac": 73, "update_arg": 73, "update_kwarg": 73, "autowrap_modul": 73, "autowrap_funct": 73, "create_arg": 73, "create_args_for_root": 73, "root_fn": 73, "is_modul": 73, "proxy_factory_fn": 73, "attr": [73, 74, 76, 167, 906, 1313, 1758], "attr_val": 73, "parameter_proxy_cach": 73, "module_qualified_nam": [73, 1949], "path_of_modul": 73, "some_hyperparamet": 73, "indexed_item": 73, "proxied_valu": 73, "garbage_collect_valu": 73, "run_nod": 73, "negsigmswapinterpret": 73, "call_self": 73, "args_tail": 73, "boxed_run": 73, "args_list": 73, "promptli": [73, 1284], "fetch_args_kwargs_from_env": 73, "map_nodes_to_valu": 73, "initial_env": 73, "enable_io_process": 73, "negsigmswapxform": 73, "w1": 73, "w2": 73, "m1": [73, 1870, 1871], "m2": [73, 1664, 1870, 1871, 1930], "despit": [73, 1227, 1228, 1913], "stack_1": 73, "stack_2": 73, "sum_2": 73, "max_1": 73, "max_2": 73, "add_2": 73, "exhaust": [74, 1624], "wih": 74, "assumeconstantresult": [74, 83], "tracabl": [74, 83], "get_item": [74, 83], "exportedprogram": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "arg0_1": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "f32": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "arg1_1": [74, 76, 77, 79, 80, 81, 82, 83, 84], "i64": [74, 79, 80, 83], "sym_size_int": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "sym_siz": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1881, 1925], "sym_size_int_1": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "eq": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 260, 1881, 1883, 1898, 1925], "scalar_tensor_default": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "scalar_tensor": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1881, 1883, 1925], "_assert_async_msg": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "_assert_async": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1925], "msg": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1045, 1047, 1929, 1946], "eq_1": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "scalar_tensor_default_1": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "_assert_async_msg_1": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "slice_tensor": [74, 82, 83], "exportgraphsignatur": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "user_input": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "user_output": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "inputs_to_paramet": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "inputs_to_buff": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "buffers_to_mut": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "backward_signatur": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "assertion_dep_token": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "myautogradfunct": 74, "autogradfunct": 74, "clone_default": 74, "cl": [74, 76, 156, 1910, 1930, 1935, 1950], "arg2_1": [74, 77, 79, 80, 81, 82], "sym_size_int_2": [74, 77, 79, 81, 82, 84], "sym_size_int_3": 74, "sym_size_int_4": 74, "eq_2": [74, 77, 79, 81, 82, 84], "scalar_tensor_default_2": [74, 77, 79, 81, 82, 84], "_assert_async_msg_2": [74, 77, 79, 81, 82, 84], "eq_3": 74, "scalar_tensor_default_3": 74, "_assert_async_msg_3": 74, "eq_4": 74, "scalar_tensor_default_4": 74, "_assert_async_msg_4": 74, "permute_default": [74, 82], "addmm_default": 74, "add_tensor": [74, 75, 76, 77, 78, 79, 80, 81, 82, 84], "add_tensor_1": [74, 77, 79, 81, 82], "mul_tensor": [74, 77, 80, 81], "add_tensor_2": [74, 77, 79], "mul_tensor_1": [74, 80], "l__self___linear": 74, "control_flow": [74, 77, 81, 82, 84], "mysubmodul": [74, 81, 82], "condbranchclassmethod": [74, 81, 82], "true_fn": [74, 77, 81, 82], "false_fn": [74, 77, 81, 82], "pred": [74, 77, 81, 82, 1410, 1624, 1881, 1917, 1926, 1935], "subm": [74, 81, 82], "submodule_0": [74, 77, 81, 82, 84], "submodule_1": [74, 77, 81, 82], "higher_ord": [74, 77, 81, 82], "cos_default": [74, 78, 79, 81, 82], "sin_default": [74, 78, 81, 82], "inner_true_fn": [74, 81, 82], "inner_false_fn": [74, 81, 82], "sub_tensor": [74, 77, 81, 82], "my_tensor_var": [74, 81, 82], "my_primitive_var": [74, 81, 82], "nonloc": [74, 77, 81, 82, 1886], "_tensor_constant0": [74, 81, 82], "lift_fresh_copy_default": [74, 81, 82], "lift_fresh_copi": [74, 81, 82, 1925], "sub_tensor_1": [74, 81, 82], "condclosedovervari": [74, 77, 81], "b8": [74, 77, 81], "_export": [74, 76, 81, 82, 1880], "dynamic_dim": [74, 76, 81, 82], "dynamic_constraint": [74, 76, 81, 82], "operand": [74, 81, 82, 942, 1085, 1885, 1886, 1910, 1939, 1942], "sym": [74, 81, 82, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794], "gt": [74, 81, 82, 312, 1166, 1881, 1883, 1898, 1913, 1925], "rangeconstraint": [74, 81, 82], "min_val": [74, 81, 82, 791, 1403, 1549, 1550, 1881, 1883], "max_val": [74, 81, 82, 791, 1403, 1549, 1550, 1881, 1883], "oo": [74, 81, 82], "predic": [74, 79, 81, 82], "test_decor": 74, "x2": [74, 80, 954, 1259, 1436, 1492, 1493, 1525, 1582, 1883], "full_default": [74, 79, 82], "dynamicshapeifguard": [74, 79, 82], "map_impl": [74, 82, 84], "slice_tensor_1": [74, 82], "9223372036854775807": [74, 82, 1210, 1657, 1895], "new_x_shap": [74, 82], "view_default": [74, 82], "monkei": [74, 75, 80, 82], "cow": [74, 75, 80, 82], "pig": [74, 75, 80, 82], "contextlib": [74, 78], "nullcontext": [74, 78], "_pytre": 74, "tree_flatten": 74, "anim": 74, "moo": 74, "specializedattribut": 74, "staticforloop": [74, 79], "ret": [74, 79, 1910, 1935], "add_tensor_3": [74, 79], "add_tensor_4": [74, 79], "add_tensor_5": [74, 79], "add_tensor_6": [74, 79], "add_tensor_7": [74, 79], "add_tensor_8": [74, 79], "add_tensor_9": [74, 79], "staticif": [74, 79], "setattr": [74, 76, 1885], "not_supported_yet": [74, 76, 80, 82], "pos0": [74, 80], "tuple0": [74, 80], "myarg": [74, 80], "mykw0": [74, 80], "mykwarg": [74, 80], "input0": [74, 80], "input1": [74, 80, 773, 1365, 1378, 1379, 1436, 1453, 1514, 1524, 1525, 1566, 1883, 1904, 1923], "overli": [74, 76], "type_reflection_method_rewrit": [74, 76], "onnx": [96, 98, 99, 100, 102, 103, 104, 1658, 1659, 1677, 1678, 1679, 1680, 1681, 1682, 1880, 1899, 1930], "dynamo_export": [96, 1678, 1679, 1923], "disregard": [98, 99], "indexerror": [98, 1642, 1644], "torchlib": 98, "onnxfunct": 99, "perfect": 99, "nearest": [99, 792, 798, 800, 1341, 1496, 1498, 1543, 1554, 1612, 1614, 1730, 1758, 1908], "stringent": 99, "op_level_debug": [99, 1677], "elementwise_dtyp": 100, "_ref": 100, "_intern": [100, 1924, 1941], "type_promot": 100, "opset_vers": [104, 1677, 1923, 1925], "g_cpu": 105, "g_cuda": 105, "bytetensor": [105, 1017, 1018, 1056, 1057, 1164, 1323, 1330, 1779, 1934, 1942, 1945], "2147483647": 105, "0x8000_0000_0000_0000": [105, 1304, 1934], "0xffff_ffff_ffff_ffff": [105, 1304, 1934], "random_devic": 105, "1516516984916": 105, "new_stat": [105, 1056, 1057, 1330, 1779, 1934], "void": [105, 987, 1029, 1908, 1915], "g_cpu_oth": 105, "abs_": [109, 1883, 1898, 1945], "acosh": [113, 139, 880, 1881, 1883, 1898, 1925], "batch1": [116, 117, 168, 169, 699, 934, 1883], "batch2": [116, 117, 168, 169, 186, 699, 934, 1883], "tensor1": [118, 119, 120, 121, 700, 701, 1306, 1755, 1883], "tensor2": [118, 119, 120, 121, 330, 420, 700, 701, 1306, 1755, 1883], "mat1": [122, 123, 567, 702, 1176, 1232, 1316, 1804, 1807, 1808, 1822, 1881, 1883], "mat2": [122, 123, 429, 567, 702, 946, 1176, 1232, 1316, 1804, 1807, 1808, 1822, 1881, 1883], "mat": [124, 125, 553, 703, 1336, 1736, 1801, 1804, 1822, 1883, 1944], "vec1": [126, 127, 704, 1883], "vec2": [126, 127, 304, 476, 704, 1158, 1718, 1883], "keepdim": [129, 131, 132, 133, 135, 151, 152, 370, 408, 423, 425, 426, 427, 430, 444, 445, 446, 447, 468, 485, 494, 568, 578, 628, 706, 708, 709, 710, 712, 887, 888, 1233, 1264, 1268, 1281, 1299, 1309, 1311, 1312, 1314, 1317, 1339, 1340, 1341, 1342, 1453, 1582, 1671, 1727, 1730, 1824, 1825, 1829, 1867, 1868, 1881, 1883, 1898, 1940], "rtol": [130, 360, 707, 921, 922, 1201, 1266, 1269, 1682, 1882, 1883, 1946], "atol": [130, 360, 707, 921, 922, 1201, 1266, 1269, 1278, 1682, 1882, 1883, 1910, 1946], "08": [130, 360, 707, 944, 1201, 1258, 1379, 1458, 1586, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1713, 1785, 1883], "equal_nan": [130, 360, 707, 1201, 1883, 1946], "arcco": [138, 1883, 1925, 1946], "acosh_": [140, 1883, 1898], "arccosh": [140, 1883, 1925], "arcsin": [142, 894, 1883, 1925, 1939], "arcsinh": [144, 1883, 1925], "atan2_": [147, 1883, 1898], "arctan2": [147, 1883, 1925], "arctan": [148, 1883, 1925], "arctanh": [150, 1883, 1925], "asinh": [160, 882, 1881, 1883, 1898, 1925, 1939], "atan": [164, 644, 645, 883, 1881, 1883, 1898, 1925, 1939], "atanh": [166, 885, 1881, 1883, 1898, 1925, 1939], "wrt": [167, 921, 922], "60521": [167, 906], "issuecom": [167, 906], "867061780": [167, 906], "texttt": [170, 171, 707, 1201, 1352, 1946], "bernoulli": [171, 773, 1356, 1382, 1383, 1384, 1385, 1389, 1396, 1414, 1528, 1529, 1530, 1531, 1536, 1880, 1883, 1898, 1925, 1947], "preserve_format": [172, 187, 189, 192, 195, 196, 197, 206, 223, 226, 256, 283, 313, 341, 409, 538, 593, 963, 1087, 1140, 1676, 1739, 1741, 1743, 1878, 1942], "minlength": [173, 937, 1883], "bitwise_and": [175, 1881, 1883, 1925], "bitwise_left_shift": [177, 1883, 1925], "bitwise_not": [179, 1881, 1883, 1898, 1925], "bitwise_or": [181, 1881, 1883, 1925], "bitwise_right_shift": [183, 1883, 1925], "bitwise_xor": [185, 1881, 1883, 1925], "uint8": [189, 258, 630, 706, 712, 1137, 1728, 1731, 1732, 1755, 1930, 1941, 1942, 1944, 1945, 1951], "cauchi": [190, 1880, 1905, 1913, 1925, 1947], "dfrac": [190, 393, 621, 1379, 1525, 1632, 1665, 1668], "complex32": [196, 1372, 1373, 1374, 1518, 1519, 1520, 1680, 1945, 1946], "int8": [197, 463, 742, 938, 939, 940, 941, 942, 943, 1137, 1293, 1294, 1295, 1296, 1930, 1933, 1939, 1941, 1942, 1945, 1951], "input2": [200, 474, 475, 531, 773, 959, 1365, 1378, 1379, 1436, 1453, 1514, 1524, 1525, 1566, 1883, 1904, 1923], "clamp_": [205, 1883, 1898], "uncoalesc": [207, 344, 1815], "coo": [207, 339, 344, 358, 627, 1176, 1804, 1807, 1812, 1813, 1814, 1815, 1816, 1817, 1880, 1892, 1942, 1946], "inttensor": [208, 225, 1186, 1301, 1302, 1387, 1942, 1945], "csr": [208, 225, 359, 596, 601, 1388, 1804, 1807, 1808, 1814, 1817, 1892, 1946], "sparse_csr": [208, 225, 596, 601, 1807, 1808, 1810, 1814, 1817, 1939], "nnz": [208, 557, 596, 597, 598, 600, 601, 921, 1344, 1805, 1807, 1808, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1939], "int32": [208, 225, 329, 337, 341, 462, 630, 950, 1087, 1099, 1100, 1135, 1137, 1138, 1242, 1253, 1254, 1255, 1273, 1301, 1367, 1728, 1765, 1930, 1939, 1941, 1942, 1945, 1951], "mkl": [208, 225, 1880, 1907, 1922, 1925, 1939], "routin": [208, 225, 889, 958, 1284, 1803, 1830, 1939], "downcast": [208, 225], "to_sparse_csr": [208, 225, 597, 598, 1807, 1808, 1883, 1925, 1939], "conj_phys": [211, 977, 1881, 1883, 1925, 1939], "contiguous_format": [212, 347, 513, 514, 1086, 1624, 1942], "non_block": [213, 226, 593, 616, 1212, 1444, 1657, 1881, 1883, 1908, 1941], "copysign": [215, 1883, 1925], "fweight": [222, 984, 1883], "aweight": [222, 984, 1883], "sparse_dim": [235, 558, 559, 1804, 1807, 1811, 1815, 1883, 1925, 1939], "resize_": [238, 514, 1142, 1233, 1865, 1882, 1883, 1884, 1898, 1932, 1941], "resize_as_": [238, 1883, 1898, 1939], "set_": [238, 513, 1883], "transpose_": [238, 1883, 1939], "zero_": [238, 1257, 1534, 1883, 1898, 1899, 1916, 1939], "dim1": [242, 244, 245, 582, 605, 606, 1073, 1075, 1076, 1246, 1833, 1850, 1883], "dim2": [242, 244, 245, 1073, 1075, 1076, 1246, 1883], "digamma": [248, 1881, 1883, 1898, 1925, 1940], "rounding_mod": [251, 252, 253, 254, 1080, 1081, 1130, 1133, 1749, 1858, 1883], "split_size_or_sect": [257, 318, 632, 1818], "erf": [263, 652, 653, 1881, 1883, 1898, 1925, 1939, 1940], "erfc": [265, 654, 655, 1881, 1883, 1898, 1925, 1940], "lambd": [274, 314, 1400, 1481, 1546, 1602, 1683, 1883], "fill_valu": [276, 461, 1139, 1140, 1367, 1881, 1883, 1908], "tall": [276, 1270, 1275, 1910], "start_dim": [279, 1124, 1390, 1883], "end_dim": [279, 1124, 1390, 1883], "float_pow": [285, 1883, 1925], "floor_divid": [289, 1080, 1883, 1925, 1939], "divisor": [292, 293, 503, 504, 781, 782, 1080, 1130, 1133, 1155, 1358, 1359, 1391, 1495, 1511, 1512, 1749, 1858], "fmod": [293, 1749, 1881, 1883, 1925], "mantissa": [296, 496, 1135, 1235, 1883, 1908, 1919], "gcd": [299, 1881, 1883, 1925], "ge": [301, 1167, 1305, 1401, 1402, 1547, 1548, 1881, 1883, 1898, 1925], "ordin": [305, 1812, 1813, 1814, 1816, 1817, 1942], "greater_equ": [310, 1883, 1925], "hypot": [320, 1881, 1883, 1925], "i0": [322, 1231, 1793, 1883, 1925, 1940], "igamma": [324, 1881, 1883, 1925], "igammac": [326, 1881, 1883, 1925], "3100": [327, 498, 1182, 1747], "3553j": [327, 498, 1182, 1747], "5445": [327, 498, 1182, 1747], "7896j": [327, 498, 1182, 1747], "6492": [327, 498, 1182, 1747], "0633j": [327, 498, 1182, 1747], "0638": [327, 498, 1182, 1747], "8119j": [327, 498, 1182, 1747], "3553": [327, 1182], "7896": [327, 1182], "0633": [327, 1182, 1258, 1900], "8119": [327, 1182], "index_add_": [328, 911, 1183, 1184, 1883, 1920], "index_copy_": [330, 1883], "index_fill_": [332, 1883, 1898], "index_put_": [334, 1883], "include_self": [337, 530, 531, 1185, 1764, 1881, 1883], "identit": 337, "amax": [337, 531, 709, 710, 1807, 1881, 1883, 1925], "amin": [337, 531, 708, 710, 1807, 1881, 1883, 1925], "fill_": [337, 1212, 1237, 1444, 1750, 1883, 1898, 1916, 1941], "72": [337, 630, 1165], "uint8_t": [342, 1680], "retain_grad": [351, 1883, 1905, 1925], "n_fft": [367, 569, 1209, 1826, 1883], "hop_length": [367, 569, 1209, 1826, 1883], "win_length": [367, 569, 1209, 1826, 1883], "center": [367, 569, 792, 798, 1105, 1209, 1508, 1543, 1554, 1612, 1697, 1719, 1787, 1826, 1883, 1905, 1925, 1944], "onesid": [367, 569, 1209, 1826, 1881, 1883], "return_complex": [367, 569, 1209, 1826, 1883], "element_s": [369, 450, 1883, 1898, 1925, 1941], "lcm": [372, 1883, 1925], "ldexp": [374, 1135, 1883, 1925], "le": [376, 1239, 1401, 1402, 1547, 1548, 1881, 1883, 1898, 1925, 1946], "lerp": [378, 1883, 1925], "less_equ": [382, 1883, 1925], "lgamma": [384, 664, 665, 1881, 1883, 1925], "ln": [393, 1240, 1940], "logical_and": [399, 1881, 1883, 1925], "logical_not": [401, 1881, 1883, 1898, 1900, 1925], "logical_or": [403, 1881, 1883, 1925], "logical_xor": [405, 1883, 1925], "pivot": [412, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1301, 1302, 1303, 1729, 1883], "get_info": [412, 1301], "lu_data": [413, 1302, 1303, 1883], "lu_pivot": [413, 1302, 1303, 1883], "masked_fill_": [415, 1883, 1898, 1899], "booltensor": [416, 418, 748, 1305, 1487, 1875, 1942, 1945], "masked_scatter_": [417, 1883], "mvlgamma": [441, 1883, 1925], "posinf": [442, 443, 1338, 1883], "neginf": [442, 443, 1338, 1883], "nan_to_num": [443, 1883, 1925], "interpol": [446, 494, 798, 799, 800, 832, 1237, 1341, 1496, 1497, 1498, 1508, 1543, 1612, 1613, 1614, 1730, 1865, 1883, 1932], "ne": [454, 1632, 1665, 1673, 1881, 1883, 1898, 1925], "8182e": 460, "5765e": 460, "41": [460, 1088, 1270, 1615, 1664, 1729], "0545e": 460, "0949e": 460, "4842e": [460, 1088], "0000e": [460, 1088, 1128, 1289, 1298, 1338, 1664, 1785, 1787, 1788, 1793, 1794], "00": [460, 1088, 1128, 1289, 1298, 1338, 1664, 1681, 1785, 1787, 1788, 1793, 1794, 1882, 1923], "141592": [461, 1139], "1416": [461, 1069, 1139, 1844], "from_numpi": [463, 892, 893, 1844], "array_lik": [463, 892, 1812, 1813, 1814, 1815, 1816, 1817, 1844, 1900], "nextaft": [466, 1881, 1883, 1925], "fro": [468, 1243, 1264, 1268, 1281, 1642, 1651, 1671, 1883], "not_equ": [471, 1883, 1925], "resolve_conj": [473, 977, 1883, 1925], "resolve_neg": [473, 1883, 1925], "shorthand": [473, 1231], "input3": [475, 1883], "transpos": [475, 606, 607, 630, 705, 754, 755, 756, 959, 1085, 1152, 1241, 1242, 1248, 1251, 1254, 1261, 1272, 1275, 1375, 1376, 1377, 1495, 1521, 1522, 1523, 1593, 1631, 1660, 1717, 1830, 1832, 1833, 1839, 1853, 1881, 1883, 1898, 1900, 1905, 1919, 1923, 1925, 1932, 1939, 1943, 1945], "polygamma": [481, 1883, 1925, 1940], "q_per_channel_axi": [488, 489, 1883, 1925], "zero_point": [489, 491, 751, 752, 753, 754, 755, 756, 757, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 783, 785, 786, 787, 788, 790, 793, 794, 812, 815, 832, 833, 834, 835, 838, 865, 1099, 1100, 1731, 1732, 1733, 1734, 1735, 1883, 1930, 1931], "qtensor": [493, 1883], "uniform": [496, 621, 936, 1380, 1462, 1526, 1738, 1739, 1787, 1880, 1881, 1903, 1925, 1947], "queu": [501, 992, 1908], "life": [501, 989], "cycl": [501, 906, 989, 1705, 1711, 1905, 1929], "unexpectedli": [501, 1945], "maxnorm": [505, 506, 1750, 1883], "repeat_interleav": [507, 1865, 1883, 1925, 1932], "output_s": [508, 754, 755, 756, 779, 780, 1349, 1350, 1351, 1353, 1354, 1355, 1376, 1391, 1392, 1393, 1440, 1441, 1442, 1495, 1502, 1503, 1504, 1505, 1506, 1507, 1537, 1538, 1539, 1570, 1571, 1572, 1751, 1881, 1883, 1900], "is_leaf": [509, 1883, 1898, 1900, 1925], "saved_weight": 510, "loaded_weight": 510, "5503": 510, "4926": [510, 1916], "1158": 510, "8303": 510, "1007": 510, "9853": 510, "2316": 510, "6606": 510, "resiz": [513, 514, 537, 558, 559, 1137, 1138, 1142, 1496, 1543, 1554, 1881, 1883, 1898, 1925, 1941], "shift": [519, 939, 942, 1105, 1112, 1356, 1362, 1363, 1364, 1389, 1483, 1536, 1756, 1883, 1886], "decim": [521, 522, 1758, 1883, 1919, 1951], "scatter_": [526, 529, 1762, 1883], "scatter_add_": [527, 528, 1763, 1865, 1883], "scatter_reduce_": [527, 530, 1764, 1883], "4600": 527, "2300": 527, "scatter_reduc": [531, 1865, 1881, 1883, 1925], "sgn": [536, 1134, 1783, 1883, 1898, 1900, 1925, 1939], "int16": [538, 1137, 1294, 1939, 1941, 1942, 1945, 1951], "dense_dim": [556, 558, 559, 596, 597, 598, 600, 601, 1815, 1883, 1925, 1939], "nse": [557, 1939], "randint": [557, 937, 984, 1128, 1317, 1367, 1493, 1526, 1527, 1811, 1883, 1887, 1899, 1925, 1944, 1947], "6550": 557, "2397": 557, "1611": 557, "0779": [557, 1248, 1726, 1875], "2326": 557, "0558": 557, "4711": 557, "9678": 557, "5138": 557, "0411": 557, "9417": 557, "5158": 557, "0793": 557, "0036": [557, 1309], "2569": 557, "1055": 557, "sparse_coo": [557, 596, 1344, 1807, 1810, 1811, 1815, 1939, 1942], "split_siz": [560, 1818, 1883], "squeez": [566, 706, 708, 709, 710, 712, 1233, 1299, 1309, 1311, 1312, 1314, 1317, 1339, 1342, 1525, 1727, 1811, 1824, 1825, 1829, 1867, 1868, 1881, 1883, 1898, 1923, 1925, 1932, 1943], "pad_mod": [569, 1826, 1883], "typedstorag": [570, 1880, 1921, 1941], "untypedstorag": [570, 626, 1880, 1921, 1941], "untyped_storag": 570, "compute_uv": [580, 1275, 1276, 1830, 1883], "axis0": [581, 1832, 1883], "axis1": [581, 1832, 1883], "dim0": [582, 605, 606, 1833, 1850, 1883], "indices_or_sect": [591, 1083, 1175, 1845, 1873], "rep": 592, "5044": 593, "0005": [593, 1709, 1715], "3310": 593, "0584": [593, 1830], "cuda0": [593, 1908, 1914, 1945], "masked_grad": [594, 1883], "sparse_mask": [594, 1883, 1925], "mkldnn": [595, 1221, 1880, 1925], "sparsedim": 596, "blocksiz": [596, 597, 598, 1812, 1813, 1814, 1883, 1939], "sparse_csc": [596, 600, 1810, 1814, 1816, 1939], "sparse_bsr": [596, 598, 1813, 1814, 1939], "sparse_bsc": [596, 597, 1812, 1814, 1939], "bsr": [596, 598, 1813, 1814, 1946], "bsc": [596, 597, 1812, 1814, 1946], "csc": [596, 600, 1814, 1816, 1946], "minu": [596, 597, 598, 600, 601, 1940], "crow_indic": [596, 598, 601, 1805, 1807, 1808, 1810, 1813, 1814, 1817, 1883, 1925, 1939, 1946], "col_indic": [596, 598, 601, 1807, 1808, 1810, 1813, 1814, 1817, 1883, 1925, 1939, 1946], "sparsecsr": [596, 1850, 1939], "row_indic": [597, 600, 1812, 1816, 1883, 1925, 1939, 1946], "ccol_indic": [597, 600, 1812, 1816, 1883, 1925, 1939, 1946], "_nnz": [599, 600, 601, 1925], "012766935862600803": 602, "5415473580360413": 602, "08909505605697632": 602, "7729271650314331": 602, "unitriangular": [607, 1274, 1853, 1883], "tril": [609, 1593, 1883, 1925], "triu": [611, 1636, 1853, 1883, 1923, 1925], "trunc": [615, 690, 691, 700, 1080, 1123, 1130, 1133, 1758, 1881, 1883, 1898, 1925, 1939], "sizedim": 620, "return_invers": [622, 623, 1862, 1863, 1883], "return_count": [622, 623, 1862, 1863, 1883], "unsqueez": [625, 1105, 1232, 1272, 1387, 1463, 1636, 1847, 1881, 1883, 1910, 1925, 1932, 1939, 1943, 1944], "subspac": [630, 1275, 1450, 1719, 1830, 1831], "span": [630, 1046, 1047, 1380, 1830, 1929, 1935], "foral": 630, "proportion": [630, 798, 1496, 1612], "met": [630, 1251, 1258, 1259, 1270, 1284, 1491], "9482": [630, 1189], "0310": 630, "4999": 630, "5316": 630, "1520": 630, "7472": 630, "5617": 630, "8649": 630, "4724": [630, 1916], "0334": 630, "2976": 630, "8499": 630, "2109": 630, "9913": 630, "9607": 630, "6123": 630, "1064483442": 630, "1124191867": 630, "1069546515": 630, "1089989247": 630, "1105482831": 630, "1061112040": 630, "1057999968": 630, "1084397505": 630, "1071760287": 630, "1123489973": 630, "1097310419": 630, "1084649136": 630, "1101533110": 630, "1073668768": 630, "1082790149": 630, "1088634448": 630, "1000000000": 630, "0047": 630, "0310j": 630, "5316j": 630, "7472j": 630, "8649j": 630, "0334j": 630, "8499j": 630, "9913j": 630, "6123j": 630, "202": 630, "154": [630, 1922], "59": [630, 1855, 1857], "182": 630, "243": [630, 1209, 1830], "253": 630, "188": 630, "252": [630, 1922], "191": 630, "63": [630, 1922, 1930], "240": 630, "227": 630, "165": 630, "190": 630, "146": 630, "106": 630, "205": 630, "206": 630, "189": 630, "95": [630, 1707, 1710, 1711], "147": 630, "43": 630, "87": 630, "235": 630, "226": 630, "254": [630, 1922], "111": [630, 1681, 1923], "117": 630, "177": 630, "xlogi": [635, 1883, 1925, 1940], "aot_graph": [693, 1891], "aot_joint_graph": [693, 1891], "ddp_graph": [693, 1891], "graph_cod": [693, 1891], "graph_siz": 693, "trace_sourc": 693, "toggl": [693, 1908], "supress": 693, "silenc": 693, "lowest": [693, 956, 1338, 1641, 1642, 1650, 1651, 1740, 1741, 1910, 1946], "notset": 693, "joint": [693, 1891], "ddpoptim": [693, 1891], "unregist": [693, 1891, 1895, 1923], "3348": 696, "5889": 696, "1584": 696, "2294": [696, 1311], "2004": 696, "3690": 696, "7298": [696, 1748], "hyperbol": [697, 895, 898, 982, 1484, 1798, 1843], "uniform_": [697, 898, 936, 1880, 1883, 1898, 1903, 1910, 1940, 1947], "3192": 697, "9915": 697, "9674": 697, "7151": 697, "7791": 697, "3120": [697, 979], "2979": 697, "1341": 697, "_i": [698, 699, 700, 701, 702, 934, 936, 939, 942, 946, 961, 1080, 1130, 1235, 1237, 1333, 1492, 1722, 1726, 1745, 1781, 1827, 1875, 1940], "0202": 698, "0985": 698, "3506": [698, 1301], "6056": 698, "3944": 698, "9732": 698, "3497": 698, "6245": [698, 1243], "4022": [698, 1067, 1830], "3743": 698, "7724": 698, "5811": 698, "8017": 698, "7695": 698, "3930": 698, "3672": [698, 985, 1244], "1450": [698, 1811], "6971": 698, "0736": [698, 1916], "0994": 698, "3216": 698, "7845": 698, "1610": 698, "1868": 698, "4090": 698, "9902": [698, 985, 1244], "3667": [698, 979], "3925": 698, "6147": 698, "sum_": [699, 1209, 1263, 1280, 1357, 1358, 1359, 1372, 1373, 1374, 1380, 1412, 1413, 1432, 1447, 1451, 1453, 1824, 1825, 1826, 1846, 1851, 1867, 1868, 1869, 1940], "mathbin": [699, 702, 703, 934, 946, 1808], "doubletensor": [699, 700, 701, 702, 703, 934, 1771, 1942, 1945], "tensorfloat32": [699, 702, 934, 946, 1306, 1316, 1372, 1373, 1374, 1375, 1376, 1377, 1431, 1518, 1519, 1520, 1521, 1522, 1523, 1560, 1773, 1908, 1919], "rocm": [699, 702, 934, 946, 1306, 1316, 1372, 1373, 1374, 1375, 1376, 1377, 1397, 1415, 1431, 1880], "6311": 699, "0503": 699, "9768": [699, 1916], "0362": 699, "1653": 699, "8185": 699, "4255": [699, 1333], "6760": 699, "9453": 699, "5743": 699, "8202": 699, "3691": 699, "0943": 699, "1109": [699, 1398, 1794], "4730": [699, 1846], "histor": [700, 1042, 1384, 1907, 1916, 1921], "t1": [700, 701, 893, 1165, 1624, 1884, 1935, 1936], "2312": [700, 1811], "6496": 700, "1312": 700, "0428": 700, "4292": 700, "1030": 700, "5369": 700, "9829": 700, "0430": 700, "8635": 701, "6391": 701, "6174": 701, "7617": 701, "5879": 701, "7388": 701, "8353": 701, "6249": 701, "6511": 701, "8716": 702, "4671": 702, "3746": 702, "7573": 702, "9555": 702, "8681": 702, "3768": 703, "5565": 703, "otim": [704, 1232, 1395, 1542], "conj": [705, 978, 1101, 1102, 1104, 1106, 1113, 1115, 1119, 1120, 1122, 1241, 1242, 1248, 1250, 1269, 1753, 1754, 1881, 1883, 1910, 1913, 1925, 1945], "mh": [705, 957, 1248, 1830, 1883, 1925, 1943, 1945], "lvert": [707, 1201, 1492, 1579, 1946], "rvert": [707, 1201, 1946], "leq": [707, 935, 936, 979, 1103, 1105, 1201, 1232, 1236, 1251, 1257, 1367, 1386, 1447, 1449, 1451, 1527, 1578, 1581, 1784, 1826, 1903, 1940], "elementwis": [707, 979, 1001, 1028, 1029, 1128, 1130, 1348, 1407, 1408, 1409, 1481, 1602, 1866, 1885, 1900, 1913, 1940], "07": [707, 832, 833, 834, 835, 838, 957, 958, 1088, 1249, 1252, 1257, 1269, 1270, 1276, 1299, 1302, 1631, 1682, 1689, 1788, 1793, 1830, 1923], "09": [707, 1689, 1701, 1910, 1946], "8177": 708, "4878": 708, "2491": 708, "9130": 708, "7158": 708, "1775": 708, "0992": 708, "4817": 708, "0053": 708, "0164": 708, "3738": 708, "0507": [708, 1923], "9700": 708, "1106": 708, "0318": 708, "0816": [708, 1301], "6451": 709, "4866": 709, "2987": 709, "3312": 709, "5744": 709, "2980": [709, 1900], "8397": 709, "2713": 709, "9128": 709, "9214": 709, "7268": 709, "2995": 709, "9023": [709, 1242], "4853": 709, "9075": 709, "6165": 709, "180": [711, 1069, 1737], "14159": [711, 1844], "135": 711, "45": [711, 1363, 1364, 1408, 1409, 1483, 1664, 1923], "ao": [713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 1930, 1931, 1932], "batch_norm": [713, 714, 1221, 1883, 1925], "3d": [714, 717, 720, 748, 753, 756, 780, 782, 787, 792, 1313, 1351, 1355, 1359, 1362, 1364, 1374, 1377, 1384, 1385, 1391, 1393, 1407, 1409, 1439, 1450, 1496, 1504, 1507, 1508, 1512, 1520, 1523, 1531, 1537, 1539, 1554, 1569, 1581, 1612, 1900, 1919, 1930, 1939, 1944], "bn": [715, 716, 717, 718, 719, 720, 827, 873, 1085, 1221, 1921, 1926, 1930, 1931], "qat": [725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 743, 744, 745, 746, 805, 806, 859, 1930, 1931, 1932], "in_channel": [725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 1221, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425], "out_channel": [725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 1221, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425], "kernel_s": [725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 781, 782, 795, 796, 1212, 1221, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1392, 1393, 1412, 1413, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1495, 1510, 1511, 1512, 1521, 1522, 1523, 1537, 1538, 1539, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1611, 1734, 1735, 1881, 1883, 1944], "dilat": [725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 785, 786, 787, 795, 796, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1420, 1421, 1422, 1423, 1424, 1425, 1437, 1438, 1439, 1495, 1518, 1519, 1520, 1521, 1522, 1523, 1537, 1567, 1568, 1569, 1611, 1734, 1735, 1881, 1883, 1923], "padding_mod": [725, 726, 727, 728, 729, 730, 731, 732, 738, 739, 740, 743, 744, 751, 752, 753, 754, 755, 756, 785, 786, 787, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425, 1543, 1881, 1883], "ep": [725, 726, 727, 728, 729, 730, 736, 737, 749, 750, 762, 764, 765, 766, 767, 808, 832, 833, 834, 835, 838, 839, 921, 922, 1221, 1297, 1348, 1362, 1363, 1364, 1379, 1398, 1399, 1407, 1408, 1409, 1416, 1417, 1418, 1419, 1426, 1427, 1428, 1453, 1458, 1483, 1487, 1489, 1491, 1492, 1513, 1525, 1540, 1544, 1545, 1553, 1557, 1579, 1582, 1586, 1609, 1632, 1665, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1700, 1713, 1733, 1881, 1883, 1910, 1913, 1940, 1951], "momentum": [725, 726, 727, 728, 729, 730, 736, 737, 749, 750, 764, 765, 766, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1483, 1513, 1553, 1690, 1697, 1699, 1705, 1711, 1713, 1881, 1883, 1916, 1918, 1926], "freeze_bn": [725, 726, 727, 728, 729, 730], "qconfig": [725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 746, 801, 802, 804, 807, 808, 809, 810, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 874, 875, 1949], "batchnorm1d": [725, 728, 1417, 1483, 1513, 1921, 1932], "fakequant": [725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 746, 815, 875], "weight_fake_qu": [725, 726, 727, 728, 729, 730, 731, 732, 743, 744], "quant": [725, 726, 727, 728, 729, 730, 731, 732, 733, 743, 744, 745, 803, 805, 806, 851, 874, 875, 1099, 1100, 1930, 1931], "batchnorm3d": [727, 730, 732, 737, 1419, 1483, 1513, 1932], "num_featur": [736, 737, 749, 750, 764, 765, 766, 1212, 1362, 1363, 1364, 1407, 1408, 1409, 1417, 1418, 1419, 1426, 1427, 1428, 1444, 1483, 1545, 1916], "qint8": [741, 742, 769, 774, 777, 778, 785, 786, 787, 794, 805, 807, 812, 833, 854, 871, 872, 874, 875, 1680, 1731, 1732, 1930, 1932, 1933, 1941, 1945, 1946], "highlight": [743, 744, 1885], "from_float": [745, 751, 752, 753, 758, 759, 769, 777, 810, 830, 836, 839, 851, 1930], "qparams_dict": [745, 751, 752, 753, 777], "hidden_s": [747, 773, 774, 778, 1396, 1397, 1414, 1415, 1459, 1460, 1461, 1883], "num_lay": [747, 773, 1396, 1414, 1459, 1460, 1488, 1490, 1883, 1916], "bidirect": [747, 773, 1396, 1414, 1459, 1460, 1883], "_lstmlayer": 747, "nnqa": 747, "h0": [747, 773, 775, 1396, 1414, 1459], "hn": [747, 773, 775, 1396, 1397, 1414, 1459], "cn": [747, 775, 1212, 1414], "weight_ih": [747, 1397, 1415, 1461], "weight_hh": [747, 1397, 1415, 1461], "dequant": [748, 801, 803, 805, 806, 812, 814, 874, 1883, 1925, 1931, 1933, 1946, 1948], "mha": [748, 1450], "conver": 748, "key_padding_mask": [748, 1450, 1883], "need_weight": [748, 1450, 1883], "attn_mask": [748, 1450, 1593, 1883], "average_attn_weight": [748, 1450, 1883], "is_caus": [748, 1450, 1490, 1491, 1593, 1883], "attn_output_weight": [748, 1450], "unmask": [748, 1487], "causal": [748, 1450, 1488, 1489, 1490, 1491, 1593], "attn_weight": [748, 1450, 1593], "attn_output": [748, 1450], "quint8": [751, 752, 753, 754, 755, 756, 758, 759, 769, 785, 786, 787, 794, 805, 807, 812, 832, 833, 834, 835, 838, 840, 872, 874, 1680, 1731, 1732, 1733, 1734, 1735, 1930, 1932, 1933, 1941, 1945, 1946], "learnabl": [751, 752, 753, 754, 755, 756, 758, 759, 769, 773, 777, 1362, 1363, 1364, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1387, 1388, 1396, 1397, 1399, 1407, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1431, 1452, 1459, 1461, 1483, 1535, 1587, 1916], "q_input": [751, 752, 753, 754, 755, 756, 785, 786, 787], "quantize_per_tensor": [751, 752, 753, 754, 755, 756, 769, 770, 771, 785, 786, 787, 1733, 1734, 1735, 1883, 1925, 1930], "unequ": [752, 753, 754, 755, 756, 1373, 1374, 1376, 1377], "50": [752, 754, 755, 756, 785, 837, 1267, 1317, 1358, 1359, 1367, 1372, 1373, 1374, 1376, 1377, 1392, 1393, 1412, 1413, 1437, 1438, 1439, 1494, 1520, 1521, 1523, 1527, 1538, 1539, 1698, 1841, 1900], "output_pad": [754, 755, 756, 1375, 1376, 1377, 1423, 1424, 1425, 1521, 1522, 1523, 1881, 1883], "qnnpack": [754, 755, 769, 777, 868, 869, 872, 874, 875, 1930, 1932], "convtranspose2d": [754, 1424, 1522, 1865, 1932], "nnq": [754, 755, 756, 801, 802, 803, 877, 1930], "downsampl": [754, 755, 756, 1376, 1496, 1508, 1543, 1554], "upsampl": [754, 755, 756, 792, 799, 800, 832, 1376, 1497, 1498, 1508, 1543, 1554, 1613, 1614], "cubic": [756, 1393, 1539, 1543], "num_embed": [758, 759, 1387, 1388, 1535], "embedding_dim": [758, 759, 1387, 1388, 1416, 1534, 1535], "padding_idx": [758, 1387, 1388, 1534, 1535, 1881, 1883], "scale_grad_by_freq": [758, 759, 1387, 1388, 1534, 1535, 1881, 1883], "_embed": [758, 759], "_dim": [758, 759, 1387], "include_last_offset": [759, 1388, 1535, 1883], "embedding_bag": [759, 1883, 1925], "floatfunct": [760, 1930], "activation_post_process": [760, 812, 1930], "add_relu": [760, 761, 770, 1893, 1925, 1948], "add_scalar": [760, 761, 770, 1925, 1944, 1948], "mul_scalar": [760, 761, 770, 1925, 1948], "collector": 761, "f_add": 761, "num_channel": [762, 1399, 1899], "normalized_shap": [767, 1416, 1557, 1881, 1883, 1900], "elementwise_affin": [767, 1416], "negative_slop": [768, 793, 1430, 1558, 1559, 1881, 1883, 1903], "slope": [768, 793, 1430, 1475, 1903], "bias_": [769, 777], "_featur": [769, 777, 794, 1352, 1365, 1429, 1431, 1514, 1560], "from_refer": [769, 777], "ref_qlinear": [769, 777], "output_scal": [769, 772, 1733, 1883], "output_zero_point": [769, 772, 1733, 1883], "q_add": 770, "qint32": [770, 771, 1680, 1731, 1732, 1930, 1933, 1941, 1945, 1946], "x_0": [771, 1851], "gate": [773, 774, 1395, 1396, 1397, 1414, 1473, 1542, 1596], "r_t": [773, 1396, 1696], "w_": [773, 1350, 1351, 1354, 1355, 1358, 1359, 1361, 1369, 1370, 1371, 1373, 1374, 1376, 1377, 1380, 1392, 1393, 1396, 1397, 1413, 1414, 1415, 1438, 1439, 1441, 1442, 1451, 1456, 1457, 1459, 1461, 1465, 1466, 1467, 1468, 1469, 1470, 1496, 1497, 1498, 1499, 1500, 1501, 1539, 1543], "x_t": [773, 907, 909, 1362, 1363, 1364, 1396, 1407, 1408, 1409, 1414, 1459, 1483, 1684], "b_": [773, 1396, 1397, 1414, 1415, 1432, 1459, 1461, 1846, 1939], "hr": [773, 1396, 1397, 1414, 1913], "h_": [773, 1350, 1351, 1354, 1355, 1358, 1359, 1365, 1370, 1371, 1373, 1374, 1376, 1377, 1392, 1393, 1396, 1397, 1413, 1414, 1431, 1438, 1439, 1440, 1441, 1442, 1456, 1457, 1459, 1461, 1466, 1467, 1469, 1470, 1496, 1497, 1498, 1500, 1501, 1514, 1539, 1543], "z_t": [773, 1396], "iz": [773, 1396, 1397], "hz": [773, 997, 1396, 1397, 1944], "n_t": [773, 1396], "h_t": [773, 1396, 1414, 1459], "hadamard": [773, 1396, 1397, 1414, 1415], "multilay": [773, 1396, 1414], "_t": [773, 1396, 1414, 1697, 1699, 1910, 1926], "b_ih": [773, 1396, 1397, 1414, 1415, 1459, 1461, 1883], "b_hh": [773, 1396, 1397, 1414, 1415, 1459, 1461, 1883], "h_0": [773, 1396, 1414, 1415, 1459], "seq_len": [773, 1396, 1414, 1450, 1459], "pack_padded_sequ": [773, 1396, 1414, 1459, 1657, 1659, 1660, 1912], "num_direct": [773, 1396, 1414, 1459], "h_n": [773, 1396, 1414, 1459], "_size": [773, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1372, 1373, 1374, 1375, 1376, 1377, 1391, 1392, 1393, 1396, 1397, 1412, 1413, 1414, 1415, 1437, 1438, 1439, 1440, 1441, 1442, 1459, 1461, 1495, 1539], "_layer": [773, 1396, 1414, 1459], "_direct": 773, "output1": [773, 1352, 1904, 1923], "output2": [773, 1352], "weight_ih_l": [773, 1396, 1414, 1459], "w_ir": [773, 1396], "w_iz": [773, 1396], "w_in": [773, 1396], "weight_hh_l": [773, 1396, 1414, 1459], "w_hr": [773, 1396], "w_hz": [773, 1396], "w_hn": [773, 1396], "bias_ih_l": [773, 1396, 1414, 1459], "b_ir": [773, 1396], "b_iz": [773, 1396], "b_in": [773, 1396], "bias_hh_l": [773, 1396, 1414, 1459], "b_hr": [773, 1396], "b_hz": [773, 1396], "b_hn": [773, 1396], "mathcal": [773, 1365, 1372, 1373, 1374, 1375, 1376, 1377, 1387, 1388, 1396, 1397, 1414, 1415, 1429, 1431, 1459, 1461, 1462, 1483, 1742, 1903, 1913], "subtli": [773, 1396, 1699], "gru": [774, 1397, 1883, 1908, 1925, 1930, 1932], "cell": [774, 776, 778, 1396, 1397, 1414, 1415, 1459, 1461], "hx": [774, 776, 778, 1397, 1415, 1461, 1883], "cx": [776, 1415, 1883], "nonlinear": [778, 1360, 1378, 1404, 1459, 1461, 1471, 1880, 1903, 1939], "elman": [778, 1459, 1461], "adaptiveavgpool2d": [779, 1503, 1865, 1932], "adaptiveavgpool3d": [780, 1504, 1865, 1932], "ceil_mod": [781, 782, 795, 796, 1357, 1358, 1359, 1412, 1413, 1437, 1438, 1439, 1510, 1511, 1512, 1564, 1565, 1567, 1568, 1569, 1734, 1735, 1881, 1883], "count_include_pad": [781, 782, 1357, 1358, 1359, 1510, 1511, 1512, 1881, 1883], "divisor_overrid": [781, 782, 1358, 1359, 1511, 1512, 1881, 1883], "kh": [781, 782, 786, 787, 1358, 1359, 1392, 1393, 1438, 1439, 1511, 1512, 1519, 1520, 1522, 1523, 1538, 1539, 1568, 1569], "kw": [781, 782, 786, 787, 1358, 1359, 1392, 1393, 1438, 1439, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1538, 1539, 1567, 1568, 1569], "sw": [781, 782, 785, 786, 787, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1567, 1568, 1569], "avgpool2d": [781, 1511, 1932], "_channel": [781, 782, 785, 786, 787, 1372, 1373, 1374, 1375, 1376, 1377, 1399, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1567, 1568, 1569, 1935], "ih": [781, 782, 786, 787, 1459, 1461, 1511, 1512, 1519, 1520, 1522, 1523, 1568, 1569], "iw": [781, 782, 785, 786, 787, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523, 1567, 1568, 1569], "padh": [781, 782, 786, 787, 1511, 1512, 1519, 1520, 1522, 1523], "padw": [781, 782, 785, 786, 787, 1510, 1511, 1512, 1518, 1519, 1520, 1521, 1522, 1523], "kd": [782, 787, 1359, 1439], "sd": [782, 787], "padd": [782, 787], "formul": [783, 1366, 1386, 1400, 1434, 1480, 1481, 1562, 1579, 1593, 1913, 1939], "min_": [784, 1247, 1248, 1257, 1275, 1830], "max_": [784, 1437, 1438, 1439, 1632, 1665], "convolv": [785, 786, 787, 1372, 1373, 1374, 1375, 1376, 1377, 1420, 1421, 1422, 1423, 1424, 1425, 1518, 1519, 1520, 1521, 1522, 1523], "dw": [785, 786, 787, 1518, 1519, 1520, 1521, 1522, 1523], "qf": [785, 786, 787], "dtype_input": [785, 786, 787], "dtype_filt": [785, 786, 787], "q_filter": [785, 786, 787], "dh": [786, 787, 1519, 1520, 1522, 1523], "dd": 787, "scale_factor": [792, 798, 799, 800, 1496, 1497, 1498, 1554, 1593, 1612, 1613, 1614, 1881, 1883], "align_corn": [792, 798, 799, 1496, 1497, 1508, 1543, 1554, 1612, 1613, 1881, 1883], "height": [792, 798, 1358, 1359, 1373, 1374, 1376, 1377, 1413, 1438, 1439, 1451, 1478, 1496, 1554, 1612, 1899], "spatial": [792, 798, 799, 800, 954, 1105, 1363, 1391, 1416, 1456, 1457, 1478, 1495, 1496, 1497, 1498, 1508, 1543, 1554, 1583, 1584, 1585, 1612, 1613, 1614], "pixel": [792, 798, 800, 1373, 1380, 1383, 1384, 1385, 1389, 1451, 1456, 1457, 1496, 1508, 1543, 1554, 1612, 1614], "corner": [792, 798, 945, 1496, 1508, 1543, 1554, 1612], "leakyrelu": [793, 1445, 1558, 1916, 1932], "_slope": [793, 1430, 1558, 1903], "xa": [794, 1261, 1272, 1273, 1274, 1431, 1560], "return_indic": [795, 796, 1353, 1354, 1355, 1392, 1393, 1437, 1438, 1439, 1440, 1441, 1442, 1505, 1506, 1507, 1538, 1539, 1567, 1568, 1569, 1883], "maxpool1d": [795, 1440, 1567, 1570, 1932], "maxpool2d": [796, 1441, 1445, 1568, 1571, 1923, 1932], "linearli": [798, 1149, 1270, 1496, 1612, 1708, 1729, 1912, 1926, 1933], "neighbour": [800, 1432, 1554, 1614], "stub": [801, 802, 1927], "calibr": [801, 802, 810, 851, 852, 870, 872, 874, 1904, 1930, 1931, 1933, 1949], "quantstub": [803, 1930], "dequantstub": [803, 1930], "quantwrapp": 804, "backend_config": [805, 806, 807, 808, 809, 830, 831, 872, 873, 874, 875, 1949], "acycl": [805, 1905], "backendpatternconfig": [805, 874], "dtypeconfig": [805, 806, 808, 874], "observationtyp": [805, 806, 874, 1932], "weighted_int8_dtype_config": [805, 874], "input_dtyp": [805, 807, 874, 1932], "output_dtyp": [805, 807, 874, 1881, 1932], "weight_dtyp": [805, 807, 874, 1932], "bias_dtyp": [805, 807, 1932], "fuse_conv2d_relu": 805, "is_qat": [805, 806], "convrelu2d": [805, 1932], "linear_config": 805, "set_observation_typ": [805, 806, 874], "output_use_different_observer_as_input": [805, 806, 809, 874, 1932], "add_dtype_config": [805, 806, 874], "set_root_modul": [805, 806], "set_qat_modul": [805, 806], "set_reference_quantized_modul": [805, 806], "conv_relu_config": 805, "set_fused_modul": [805, 806], "set_fuser_method": [805, 806], "fused_conv_relu_config": 805, "set_backend_pattern_config": [805, 874], "from_dict": [805, 806, 807, 828, 829, 830, 867], "backend_config_dict": [805, 1930], "set_nam": 805, "to_dict": [805, 806, 807, 828, 829, 830, 867], "backendconfig": [806, 831, 872, 874, 1933], "dtype_config": [806, 1932], "backend_pattern_config_dict": 806, "observation_typ": [806, 1932], "qat_modul": [806, 1932], "reference_quantized_modul": 806, "fused_modul": [806, 1932], "fuser_method": [806, 827, 1932], "pattern_complex_format": 806, "set_dtype_config": 806, "fuser": [806, 1225, 1882], "fuse_linear_relu": 806, "linearrelu": [806, 1932], "8bea7180a8ba3c279f2c9b050f2a69a6": 806, "understood": [806, 953], "output_share_observer_with_input": [806, 809, 1932], "quantdequantstub": 806, "set_pattern": 806, "is_dynam": [807, 839, 1932], "quant1": 807, "dequant1": 807, "fp32_linear": 807, "quant2": 807, "dequant2": 807, "bracket": [807, 1936], "dtype_config1": 807, "dtype_config2": 807, "dtypewithconstraint": [807, 1932], "quant_min_lower_bound": [807, 808, 1932], "quant_max_upper_bound": [807, 808, 1932], "255": [807, 815, 1099, 1100, 1138, 1543, 1554, 1612, 1930, 1932, 1944], "input_dtype_with_constraint": 807, "scale_min_lower_bound": [807, 808, 1932], "scale_max_upper_bound": [807, 808, 1932], "dtype_config_dict": 807, "bias_typ": [807, 874], "scale_exact_match": [808, 1932], "zero_point_exact_match": [808, 1932], "quant_min": [808, 812, 815, 832, 833, 834, 835, 838, 839, 1099, 1100, 1883, 1930], "quant_max": [808, 812, 815, 832, 833, 834, 835, 838, 839, 1099, 1100, 1883, 1930], "fixedqparamsobserv": 808, "fixedqparamsfakequant": 808, "input_output_not_observ": [809, 1932], "maxpool": [809, 1392, 1393, 1538, 1539, 1923], "remove_qconfig": 810, "is_refer": 810, "convert_custom_config_dict": [810, 828, 1930], "from_observ": [810, 828, 1930], "observed_to_quantized_custom_module_class": [810, 828, 1930], "observedcustommodul": [810, 828, 830, 851, 1930], "quantizedcustommodul": [810, 828], "calib_data": 811, "fake_quant": [812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 875, 1099, 1100, 1949], "movingaverageminmaxobserv": [812, 815, 835], "observer_kwarg": [812, 815], "x_out": [812, 815], "fake_quant_en": 812, "observer_en": 812, "calculate_qparam": [813, 832, 833, 837], "qscheme": [815, 832, 833, 834, 835, 838, 839, 840, 1883, 1925, 1930, 1933, 1946], "fake_qu": [816, 820, 821, 822, 1930], "default_fake_qu": 817, "default_per_channel_weight_fake_qu": 818, "default_weight_fake_qu": 819, "histogram": [820, 832, 844, 1172, 1174, 1883, 1925, 1944], "memoryless": [821, 822], "averaging_const": [821, 822, 834, 835, 1883], "modules_to_fus": 827, "fuser_func": 827, "fuse_known_modul": 827, "fuse_custom_config_dict": [827, 829], "convmodul": 827, "bnmodul": 827, "convbnmodul": 827, "additional_fuser_method_map": 827, "fuse_conv_bn": [827, 1932], "conv1": [827, 1223, 1444, 1472, 1882, 1930, 1944], "bn1": 827, "relu1": [827, 1472, 1615], "fused_m": 827, "custom_config": [828, 829, 830, 831], "convert_fx": [828, 1930, 1949], "convert_custom_config": [828, 872, 1930], "set_observed_to_quantized_map": 828, "set_preserved_attribut": [828, 829, 830], "attr1": [828, 829, 830, 1923], "attr2": [828, 829, 830, 1923], "floatcustommodul": [828, 830], "weight_onli": [828, 872, 1930], "preserved_attribut": [828, 829, 830], "observed_class": [828, 830], "quantized_class": 828, "quant_typ": [828, 830], "quanttyp": [828, 830], "fuse_fx": [829, 1930], "fuse_custom_config": [829, 873], "convertcustomconfig": [829, 872], "prepare_fx": [830, 853, 872, 875, 1930, 1949], "prepare_qat_fx": [830, 872, 1930], "prepare_custom_config": [830, 831, 874, 875, 1930], "set_standalone_module_nam": 830, "module1": [830, 867, 1908], "qconfig_map": [830, 831, 867, 868, 869, 872, 874, 875, 1930], "child_prepare_custom_config": 830, "set_standalone_module_class": 830, "mystandalonemodul": 830, "set_float_to_observed_map": 830, "set_non_traceable_module_nam": 830, "module2": [830, 867, 1908], "module3": [830, 1908], "set_non_traceable_module_class": 830, "nontraceablemodule1": 830, "nontraceablemodule2": 830, "set_input_quantized_index": 830, "set_output_quantized_index": 830, "prepare_custom_config_dict": [830, 851, 853, 1930], "standalone_module_nam": 830, "standalone_module_class": 830, "module_class": 830, "float_to_observed_custom_module_class": [830, 851, 1930], "non_traceable_module_nam": 830, "non_traceable_module_class": 830, "input_quantized_idx": 830, "output_quantized_idx": 830, "float_class": 830, "qconfigmap": [831, 868, 869, 872, 874, 1930, 1933], "preparecustomconfig": [831, 874], "2048": [832, 1487, 1489, 1491, 1908], "upsample_r": 832, "per_tensor_affin": [832, 833, 834, 1732, 1733, 1734, 1735, 1930, 1933], "reduce_rang": [832, 833, 834, 835, 838, 840, 1883, 1930, 1931], "factory_kwarg": [832, 833, 838], "1920928955078125e": [832, 833, 834, 835, 838], "finfo": [832, 833, 834, 835, 838, 1266, 1269, 1348, 1880, 1946], "minmaxobserv": [832, 834, 838, 854, 874, 875, 1933], "x_": [833, 834, 984, 1095, 1285, 1286, 1288, 1291, 1299, 1361, 1380, 1434, 1451, 1477, 1479, 1599, 1807, 1809, 1851, 1905, 1933, 1940], "q_": [833, 1933], "x_orig": 833, "reset_min_max_v": [833, 838], "ch_axi": [835, 838, 1883], "per_channel_affin": [835, 838, 1731, 1930, 1933], "custom_op_nam": [836, 839], "with_arg": [837, 854, 874, 875], "_callable_arg": 837, "_with_arg": 837, "foo_build": 837, "foo_instance1": 837, "foo_instance2": 837, "with_callable_arg": 837, "_with_callable_arg": 837, "cur_tim": 837, "get_time_func": 837, "dan": 837, "creation_tim": 837, "compute_dtyp": 839, "ptq": [844, 1930, 1931, 1933], "obs_dict": 850, "get_observer_state_dict": 850, "allow_list": [851, 1948], "observer_non_leaf_module_list": 851, "preemptiv": [851, 852, 1624], "custommodul": [851, 1930], "propagate_qconfig_": 853, "qconfig_dict": [853, 867], "my_qconfig": 854, "default_observ": 854, "default_qat_config": 860, "set_glob": [867, 872, 874, 1930], "set_object_typ": [867, 872, 874], "set_module_name_regex": 867, "regex": 867, "set_module_nam": [867, 872, 874], "set_module_name_object_type_ord": 867, "global_qconfig": 867, "qconfig1": 867, "qconfig2": 867, "qconfig3": 867, "object_typ": 867, "module_name_regex": 867, "module_name_object_type_ord": 867, "conv0": 867, "x86": [868, 869, 1774, 1930, 1932], "run_arg": [870, 876], "qconfig_spec": 871, "quantize_fx": [872, 873, 874, 875, 1930, 1949], "_remove_qconfig": 872, "qconfig_from_prepar": 872, "prepared_model": [872, 874, 875], "xnnpack": [872, 1893, 1930], "get_default_backend_config": [872, 874, 875], "quantized_model": 872, "fusion_pattern": 873, "fusecustomconfig": 873, "_equalization_config": 874, "get_default_qconfig_map": [874, 1930], "float_model": [874, 875, 1948], "data_load": [874, 875, 1705, 1711, 1918], "get_default_qconfig": [874, 875, 1930], "linear_pattern_config": 874, "suer": 874, "sample_inference_data": 874, "get_default_qat_qconfig_map": [875, 1930], "load_weight": 875, "train_data": 875, "get_default_qat_qconfig": [875, 1930], "custom_module_class_map": 877, "lceil": [878, 955], "rceil": [878, 955], "adjac": [878, 945, 1383, 1384, 1385, 1389, 1745, 1939], "set_default_tensor_typ": [878, 935, 944, 1086, 1088, 1098, 1103, 1121, 1139, 1159, 1169, 1170, 1231, 1282, 1298, 1675, 1738, 1740, 1742, 1744, 1745, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1812, 1813, 1814, 1815, 1816, 1817, 1855, 1857, 1877], "get_default_dtyp": [878, 1282, 1298, 1680, 1745, 1941, 1942, 1951], "5000": [878, 893, 899, 900, 901, 937, 961, 1103, 1105, 1106, 1113, 1116, 1121, 1131, 1133, 1134, 1135, 1165, 1171, 1174, 1237, 1263, 1282, 1339, 1341, 1369, 1370, 1388, 1496, 1730, 1734, 1735, 1736, 1745, 1749, 1940, 1945], "3398": 887, "2663": [887, 1908], "2686": 887, "2450": 887, "7401": 887, "8805": 887, "3402": 887, "1936": 887, "4907": [887, 1299], "3948": [887, 979], "0691": 887, "3132": 887, "6092": 887, "5419": 887, "2993": [887, 1829], "3195": 887, "1139": 888, "2254": 888, "1381": [888, 1829], "3687": 888, "0100": [888, 1265, 1731], "1975": [888, 1900], "0102": 888, "4732": 888, "9240": 888, "1207": [888, 1333], "7506": 888, "0213": 888, "7809": 888, "2960": 888, "9384": 888, "1438": 888, "ascend": [889, 1105, 1248, 1250, 1279, 1332, 1765, 1803, 1862], "0785": 889, "5267": 889, "8521": 889, "4065": 889, "1598": 889, "0788": 889, "0745": 889, "2700": 889, "2208": 889, "0722": 889, "7064": 889, "2564": 889, "0669": 889, "2318": 889, "8229": 889, "9280": 889, "lexicograph": [890, 1670, 1885, 1939], "9039": 891, "6291": 891, "0795": [891, 1730, 1916], "1586": 891, "1939": 891, "4900": 891, "7503": 891, "9355": 891, "histori": [892, 893, 1151, 1689, 1844, 1892, 1900, 1910, 1912, 1936], "dlpack": [893, 1136, 1880], "frombuff": 893, "data_ptr": [893, 1898, 1941, 1943], "addbackward0": [893, 1916, 1921], "__array_interface__": 893, "5962": 894, "4985": 894, "4396": 894, "4525": [894, 1900], "6387": 894, "4552": 894, "sine": [895, 1786, 1796, 1798], "1606": 895, "4267": 895, "0899": 895, "0250": 895, "1599": 895, "1534": 895, "9435": 895, "8990": [895, 1080], "arctang": [896, 897], "2341": 896, "2539": 896, "6256": 896, "6448": 896, "2299": 896, "2487": 896, "5591": [896, 918], "5727": 896, "quadrant": 897, "9041": [897, 954], "0196": [897, 954], "3108": [897, 954], "4423": [897, 954], "9833": 897, "0811": 897, "9743": 897, "4151": 897, "tangent": [898, 908, 909, 1148, 1149, 1484, 1842, 1843], "9385": 898, "2968": 898, "8591": 898, "1871": 898, "7253": 898, "3060": 898, "2899": 898, "1893": 898, "needs_input_grad": [902, 1910], "setup_context": [903, 1911], "save_for_forward": [903, 1911], "grad_input": [904, 911, 913, 926, 1212, 1444, 1620, 1910, 1916], "underneath": 905, "generate_vmap_rul": [905, 1911], "out_dim": [905, 1153, 1872, 1883, 1899, 1911], "grad_tensor": [906, 920, 1883, 1908], "grad_vari": 906, "forward_ad": 907, "dual": [907, 908, 909, 1669, 1911], "make_du": [907, 909], "your_fn": 907, "unpack_du": [907, 908], "grad_aft": 907, "dual_level": [908, 909], "primal": [909, 1144, 1148, 1149, 1152], "x_npy": 910, "once_differenti": [910, 911, 912, 913, 1910], "g1": [911, 913, 1908, 1937], "g2": [911, 913, 1908, 1937], "oppos": [912, 1911], "weren": 912, "grad_out": [912, 1881, 1883, 1913], "gx": 912, "gy": 912, "gz": 912, "simplefunc": 913, "outer_jacobian_strategi": 914, "disconnect": [914, 915, 916, 917, 918, 919], "said": [914, 915, 916, 917, 918, 919, 1892, 1919], "cliff": [914, 916, 920], "_debug_only_display_vmap_fallback_warn": [914, 920], "pow_reduc": [914, 915, 918], "2265": 914, "8221": 914, "9456": [914, 936], "2550": 914, "viewbackward": [914, 916], "pow_adder_reduc": [914, 915, 918], "func_output": [915, 917, 918, 919], "1448": 915, "0239": 915, "6456": 915, "4988": 915, "4310": 915, "sumbackward0": [915, 918], "3030": 915, "vhp": 915, "batched_grad": 916, "exp_reduc": [916, 917, 919], "4917": 916, "4352": 916, "4369": 916, "3799": 916, "exp_add": 916, "8052": 916, "3963": 916, "3090": 917, "6742": 917, "9114": 917, "2106": 917, "sumbackward1": [917, 919], "squeezebackward1": 917, "adder": [917, 919], "2399": 917, "5005": 917, "0689": 918, "2431": 918, "0989": 918, "4456": 918, "8053": [918, 1760], "7817": 919, "2458": 919, "7830": 919, "7782": 919, "4458": 919, "3962": 919, "3042": [919, 1269], "6354": 919, "1288": [919, 1789], "0652": 919, "5483": 919, "5035": 919, "2046": [919, 979], "1292": 919, "1432": 919, "3059": 919, "3225": 919, "6652": 919, "7753": 919, "0152": 919, "4225": 919, "3340": 919, "only_input": 920, "allow_unus": [920, 1883], "is_grads_batch": 920, "materialize_grad": 920, "require_grad": [920, 1885, 1905], "06": [921, 922, 1252, 1257, 1258, 1269, 1270, 1275, 1398, 1453, 1492, 1495, 1540, 1609, 1684, 1698, 1830, 1883, 1946], "raise_except": [921, 922], "check_sparse_nnz": 921, "nondet_tol": [921, 922], "check_undefined_grad": [921, 922], "check_grad_dtyp": [921, 922], "check_batched_grad": [921, 922], "check_batched_forward_grad": 921, "check_forward_ad": 921, "check_backward_ad": 921, "fast_mod": [921, 922, 1913], "differenc": [921, 1910], "perturb": [921, 922, 1913], "sparsetensor": [921, 1815], "gradgradcheck": [921, 1910], "gen_non_contig_grad_output": 922, "check_fwd_over_rev": 922, "check_rev_over_rev": 922, "noncontigu": [922, 1028, 1946], "inaccuraci": 922, "clonebackward0": 924, "gi": [926, 927, 1916], "removablehandl": [926, 927, 1212, 1444, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1927], "eventlist": [929, 930], "group_by_stack_n": [930, 1929], "roof": 930, "functioneventavg": [930, 932], "window_length": [935, 944, 1169, 1170, 1231, 1883], "2n": [935, 1784, 1939], "trim": [935, 944, 1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1169, 1170, 1209], "_length": [935, 944, 1169, 1170, 1209, 1367, 1826], "sim": [936, 1458, 1586, 1722, 1742], "pseudorandom": [936, 1334, 1672, 1719, 1722, 1738, 1740, 1742, 1744, 1831], "1737": 936, "0950": [936, 1808], "3609": 936, "7148": 936, "0289": [936, 1854], "2676": 936, "8937": 936, "7202": 936, "2500": [937, 1103, 1105, 1106, 1116, 1121, 1282, 1496, 1736], "7500": [937, 1106, 1116, 1135, 1165, 1267, 1282, 1496, 1736, 1792], "AND": [938, 1293, 1885, 1905], "OR": [941, 1295, 1885], "xor": [943, 1296, 1885], "blackman": [944, 1794], "arrang": 945, "broadcast_tensor": [947, 1883, 1925], "out_int32": [950, 1765, 1883], "formal": [950, 1765, 1892, 1899], "tensor_a": [952, 965], "tensor_b": 952, "6580": 953, "0969": 953, "4614": 953, "1034": [953, 1085], "5790": 953, "1497": 953, "compute_mod": 954, "use_mm_for_euclid_dist_if_necessari": 954, "distanc": [954, 1209, 1247, 1248, 1275, 1404, 1453, 1492, 1493, 1583, 1705, 1826, 1830, 1880], "infti": [954, 1209, 1263, 1360, 1412, 1413, 1475, 1583, 1696, 1940], "use_mm_for_euclid_dist": 954, "donot_use_mm_for_euclid_dist": 954, "minkowski": [954, 1583], "ham": [954, 1169, 1583, 1790], "closest": [954, 1583], "xn": [954, 1583], "4821": [954, 957], "059": 954, "0590": 954, "1763": [954, 1748], "4713": [954, 1748], "6986": [954, 1748], "3702": [954, 1748], "1193": [954, 1301], "0959": 954, "7138": 954, "8322": 954, "2830": [954, 1856], "3791": 954, "6341": 955, "4208": 955, "0900": 955, "5826": 955, "clr": [956, 1705], "3375": 956, "9790": 956, "1119": 956, "6577": 956, "5609": [956, 1534], "5095": 956, "2614": 956, "4038": 956, "3378": [956, 1856], "4982": 956, "2457": [956, 1314], "2561": 956, "4684": 956, "7163": 956, "9647": 956, "8917": [956, 1292], "3213": [956, 1288], "2284": [956, 1065], "8615": 956, "2816": 956, "tu": 957, "mt": [957, 958, 1241, 1248, 1250, 1254, 1255, 1256, 1261, 1270, 1729, 1830, 1883, 1892, 1925, 1943, 1945], "4112": 957, "7486": 957, "4551": 957, "3544": 957, "6724": 957, "5528": 957, "0592": [957, 1916], "9371": 957, "5487": 957, "7023": 957, "03": [957, 958, 1289, 1787, 1788, 1793], "3842e": [957, 1257], "dpotri": 958, "spotri": 958, "uu": 958, "9935": 958, "6353": 958, "5806": 958, "8769": 958, "7183": [958, 1263, 1916], "6618": 958, "9314": 958, "2251": [958, 985, 1244, 1286], "0889": 958, "4439": 958, "2122": 958, "1412": 958, "5894e": 958, "semidefinit": 959, "7747": 959, "9549": 959, "3086": 959, "4114": 959, "8733": 959, "6355": 959, "9891": 959, "1974": 959, "4706": 959, "4115": 959, "6225": 959, "1625": 959, "6097": 959, "8398": 959, "2387": [959, 980], "3771": [959, 1258], "4173": 959, "1626": [959, 985, 1244], "tensor_split": [960, 1083, 1175, 1873, 1883, 1925, 1943], "min_valu": [961, 1403], "max_valu": [961, 1403, 1883], "_valu": [961, 1352, 1629, 1815, 1910, 1925, 1939], "7120": 961, "1734": [961, 1186], "0478": [961, 1875], "0922": 961, "3333": [961, 1165, 1174, 1496, 1497, 1844], "hstack": [964, 1883, 1925, 1939], "with_replac": [965, 1883], "combinations_with_replac": 965, "_glibcxx_use_cxx11_abi": 967, "exclude_tag": 972, "flip": [977, 1126, 1127, 1279, 1881, 1883, 1925, 1926], "writeabl": [977, 978], "is_conj": [977, 1753, 1883, 1925], "geq": [979, 1156, 1243, 1251, 1380, 1430, 1451, 1452, 1462, 1526, 1578, 1631, 1903, 1940], "signbit": [979, 1881, 1883, 1925, 1939], "2557": 979, "0026": 979, "5387": 979, "4740": 979, "9244": 979, "7079": 979, "2778": 979, "0249": [979, 1287], "5719": 979, "0059": 979, "2600": 979, "4475": 979, "9567": [979, 1247, 1829], "5757": 979, "1751": 979, "0742": 979, "2998": 979, "1054": 979, "2373": 979, "3190": [979, 1908], "1128": [979, 1269, 1414], "pearson": 980, "coeffici": [980, 1169, 1684, 1686, 1687, 1688, 1690, 1696, 1700, 1789, 1790, 1791, 1853], "r_": [980, 1846], "ij": [980, 1085, 1291, 1299, 1313, 1447, 1807], "c_": [980, 1372, 1373, 1374, 1375, 1376, 1377, 1414, 1456, 1457], "jj": 980, "hermitian": [980, 1101, 1102, 1104, 1106, 1107, 1108, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1241, 1242, 1247, 1248, 1250, 1254, 1255, 1256, 1266, 1269, 1275, 1883], "cov": [980, 1883, 1925], "2678": [980, 1387], "0908": 980, "3766": 980, "2780": 980, "5812": 980, "1535": [980, 1387], "2350": 980, "3582": 980, "4309": 981, "2706": 981, "8562": 981, "9796": [981, 1257], "1395": 981, "2957": 981, "6553": 981, "5574": 981, "1632": 982, "1835": 982, "6979": 982, "7325": [982, 1075], "0133": 982, "7860": 982, "2536": 982, "2805": 982, "sleef": [982, 1798], "unbias": [984, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1483, 1824, 1825, 1867, 1868, 1881, 1883], "_w": 984, "y_": [984, 1095, 1285, 1286, 1288, 1361, 1380, 1410, 1807, 1851, 1905, 1940], "w_i": [984, 1251], "mu_x": 984, "mu_i": [984, 1690], "whichev": [984, 1153, 1543, 1730, 1872, 1908], "w_ix_": 984, "bessel": [984, 1231, 1793, 1824, 1825, 1867, 1868, 1940], "corrcoef": [984, 1883, 1925], "6667": [984, 1174, 1496, 1497, 1750, 1784, 1921], "fw": 984, "4282": 984, "0255": [984, 1072], "4144": [984, 1908], "4169": 984, "3956": [985, 1244], "1455": [985, 1244, 1922], "6895": [985, 1244], "5849": [985, 1244], "3599": [985, 1244], "7180": [985, 1244], "0521": [985, 1244], "1339": [985, 1244], "0225": [985, 1244, 1257], "0257": [985, 1244], "4725": [985, 1244], "1479": [985, 1244], "7005": [985, 1244], "9757": [985, 1244], "3904": [985, 1244], "3726": [985, 1244], "1836": [985, 1244], "9688": [985, 1244], "7153": [985, 1244, 1940], "2159": [985, 1244], "0844": [985, 1244], "5281": [985, 1244], "6120": [985, 1244], "4490": [985, 1244], "5687": [985, 1244], "9792": [985, 1066, 1244], "8304": [985, 1244], "3037": [985, 1244, 1916], "5650": [985, 1244], "2329": [985, 1244], "9883": [985, 1244], "0551": [985, 1244], "capture_begin": [986, 1908], "make_graphed_cal": [986, 1908], "graph_pool_handl": [986, 1020], "other_graph_inst": [986, 1020], "capture_end": [986, 1908], "debug_dump": 986, "debug_path": 986, "enable_debug_mod": 986, "path_to_so_fil": 987, "alloc_fn_nam": 987, "free_fn_nam": 987, "ctype": 987, "change_current_alloc": [987, 1908], "ssize_t": [987, 1908], "cudastream_t": [987, 989, 1908], "ptr": [987, 1908], "size_t": 987, "oss": 987, "enable_tim": [988, 1908], "interprocess": 988, "marker": 988, "elapsed_tim": [988, 1908], "end_ev": [988, 1908], "elaps": [988, 1895], "from_ipc_handl": 988, "reconstruct": [988, 1301, 1360, 1361, 1913, 1921, 1927], "ipc": [988, 1024], "ipc_handl": 988, "proceed": [988, 1398, 1936, 1937], "cudaeventsynchron": 988, "cudastreamwaitev": [988, 989, 991], "stream_ptr": 989, "record_ev": [989, 991], "cudastreamsynchron": [989, 991], "wait_ev": [989, 991], "interoper": 993, "caching_allocator_delet": 993, "mem_ptr": 994, "caching_allocator_alloc": 994, "peer_devic": 995, "_cudaalloc": 996, "clock": 997, "sm": 997, "hertz": 997, "smi": [997, 1010, 1038, 1044, 1048, 1062, 1063, 1908, 1912, 1914], "buffer_s": 999, "10485760": 999, "chunk_siz": [1002, 1147, 1153, 1872], "cublashandle_t": 1003, "unoccupi": [1010, 1322], "pytorch_cuda_alloc_conf": [1011, 1908], "cudamallocasync": [1011, 1042, 1908], "_cudadeviceproperti": 1015, "gencod": 1016, "cuda_graph": 1020, "ordinari": [1022, 1624, 1904], "code_str": [1028, 1029], "temp": 1028, "typenam": [1028, 1029], "my_kernel": [1028, 1029], "jitted_fn": [1028, 1029], "create_jit_fn": [1028, 1029], "util_fn": 1028, "gelu": [1028, 1473, 1487, 1489, 1491, 1596, 1881, 1883, 1900, 1925], "my_gelu": 1028, "my_lib": [1028, 1889, 1922], "impl": [1028, 1889], "num_output": 1029, "sample_arg": 1031, "num_warmup_it": 1031, "allow_unused_input": 1031, "datadistributedparallel": 1031, "manual_seed_al": 1032, "occupi": [1034, 1038, 1049, 1320, 1432, 1561, 1908, 1914, 1951], "reset_peak_memory_stat": [1034, 1036, 1049, 1050], "max_memory_reserv": [1035, 1908, 1914], "cudamemgetinfo": 1037, "memory_reserv": [1039, 1908, 1914], "snapshot": [1041, 1885, 1908, 1914], "large_pool": 1042, "small_pool": 1042, "allocated_byt": 1042, "cudamalloc": [1042, 1908], "reserved_byt": 1042, "active_byt": 1042, "inactive_split": 1042, "inactive_split_byt": 1042, "octob": 1042, "1mb": 1042, "num_alloc_retri": 1042, "num_oom": 1042, "assist": [1042, 1909], "max_split_s": 1042, "oversize_alloc": 1042, "oversize_seg": 1042, "requested_byt": 1042, "abbrevi": 1043, "instantan": [1045, 1929], "ascii": [1045, 1047, 1283, 1885, 1929], "sensor": [1048, 1062], "mw": 1048, "milliwatt": 1048, "fermi": 1048, "max_memory_alloc": [1049, 1908, 1914], "max_memory_cach": 1050, "memory_stat": [1051, 1908, 1914], "seed_al": 1052, "environment": 1054, "total_memori": [1055, 1329], "debug_mod": [1059, 1772], "streamcontext": [1060, 1880], "centigrad": 1062, "x_1": [1064, 1065, 1066, 1067, 1279, 1365, 1378, 1379, 1514, 1525, 1851], "x_2": [1064, 1065, 1066, 1067, 1279, 1365, 1378, 1379, 1514, 1525], "x_3": [1064, 1065, 1066, 1067, 1279], "3449": 1064, "5447": 1064, "0685": 1064, "5104": [1064, 1908], "1706": 1064, "2259": 1064, "4696": 1064, "3284": 1064, "9946": 1064, "8209": [1064, 1067], "6628": 1065, "0975": 1065, "2680": [1065, 1907], "3298": [1065, 1072], "4220": 1065, "3885": 1065, "1762": 1065, "9165": 1065, "6684": [1065, 1189], "6001": 1066, "2069": 1066, "1919": 1066, "6727": [1066, 1079], "0062": 1066, "4126": 1066, "2129": 1066, "4206": 1066, "1968": [1066, 1940], "1241": 1066, "0238": 1066, "0233": [1066, 1737], "0157": 1066, "0158": [1066, 1830], "0065": 1066, "0014": [1066, 1940], "0006": 1066, "8286": 1067, "4890": 1067, "5155": 1067, "8443": 1067, "1865": 1067, "1752": [1067, 1075], "0595": 1067, "1850": 1067, "1571": [1067, 1916, 1921], "4243": 1067, "3175": 1067, "8020": [1067, 1727], "0423": 1067, "2289": 1067, "0537": 1067, "0058": 1067, "9780": 1067, "trapezoid": [1068, 1852, 1883, 1925], "360": 1069, "2832": 1069, "diagflat": [1072, 1883, 1925], "5950": 1072, "0872": 1072, "4264": 1072, "1064": [1072, 1916], "8795": 1072, "2429": 1072, "1374": 1072, "1029": 1072, "6482": 1072, "6300": 1072, "5410": 1073, "2934": 1073, "1788": [1073, 1940], "5684": 1073, "0845": [1073, 1798, 1916], "3986": 1073, "2956": [1074, 1244], "9068": 1074, "1695": 1074, "2094": [1074, 1908], "3018": 1074, "1516": 1074, "9342": 1074, "0854": 1075, "1431": 1075, "8536": 1075, "0905": 1075, "0360": [1075, 1333], "6927": 1075, "3735": 1075, "4945": 1075, "2631": [1075, 1332, 1908], "3755": 1075, "5977": 1075, "8172": 1075, "1065": [1075, 1916], "0401": 1075, "2235": [1075, 1829], "7938": 1075, "3081": 1075, "6166": 1075, "2335": 1075, "0500": 1075, "7336": 1075, "3836": 1075, "1015": 1075, "emb": [1076, 1768, 1799], "5393": 1079, "8675": 1079, "5916": 1079, "6321": 1079, "0967": 1079, "0511": 1079, "6295": 1079, "8360": 1079, "6973": 1079, "6537": 1079, "dividend": [1080, 1130, 1133, 1749, 1858], "true_divid": [1080, 1883, 1925], "3810": [1080, 1173], "2774": 1080, "2972": 1080, "3719": 1080, "4637": 1080, "7620": 1080, "5548": 1080, "5944": 1080, "7438": 1080, "9274": 1080, "3711": 1080, "9353": 1080, "4605": 1080, "2917": 1080, "1815": [1080, 1292], "0111": [1080, 1787], "9805": 1080, "5923": 1080, "1062": 1080, "4581": [1080, 1251], "7759": 1080, "2344": 1080, "1830": 1080, "0313": 1080, "1908": 1080, "4757": 1080, "8032": 1080, "2930": 1080, "8113": 1080, "2308": 1080, "4620": [1080, 1875], "6051": 1080, "5676": 1080, "2639": 1080, "2260": 1080, "4509": [1080, 1265], "2086": 1080, "1322": 1080, "9764": 1080, "9564": 1080, "3484": 1080, "2278": 1080, "1068": [1080, 1186], "4678": 1080, "3938": [1080, 1839], "depthwis": [1083, 1084, 1372, 1373, 1374], "atleast_3d": [1084, 1883, 1925], "notat": [1085, 1410, 1778, 1886, 1916, 1945], "einstein": 1085, "summat": [1085, 1209, 1291, 1299, 1939], "subscript": [1085, 1886, 1918], "ik": [1085, 1284, 1807], "za": 1085, "alphabet": [1085, 1527, 1935], "arrow": [1085, 1937], "ki": 1085, "ellipsi": [1085, 1885, 1886, 1899], "fourth": 1085, "whitespac": [1085, 1886], "opt_einsum": [1085, 1880], "_the_": 1085, "disclaim": 1085, "52": 1085, "op1": [1085, 1885], "sublist1": 1085, "op2": [1085, 1885], "sublist2": 1085, "subslist_out": 1085, "2104": 1085, "7952": 1085, "2433": 1085, "4545": 1085, "1156": 1085, "2897": [1085, 1916], "3918": 1085, "4963": 1085, "3744": 1085, "9381": 1085, "2685": 1085, "6070": 1085, "7208": 1085, "8058": 1085, "4419": 1085, "0936": 1085, "1713": 1085, "4291": 1085, "5802": 1085, "7350": [1085, 1940], "5704": 1085, "4290": 1085, "9323": 1085, "4480": 1085, "bij": 1085, "bjk": 1085, "bik": 1085, "0564": 1085, "5904": 1085, "2023": 1085, "1271": 1085, "6706": [1085, 1730], "8097": 1085, "8025": 1085, "1183": 1085, "2239": [1085, 1271], "3107": 1085, "5756": 1085, "2354": 1085, "4558": 1085, "3460": 1085, "5087": 1085, "8530": [1085, 1369, 1499], "8153": 1085, "8787": 1085, "3839": [1085, 1871], "2112": [1085, 1854], "3728": 1085, "1131": [1085, 1727], "0921": 1085, "8305": 1085, "ji": 1085, "anm": 1085, "bm": 1085, "ba": 1085, "3430": [1085, 1292], "2405": 1085, "4494": 1085, "3311": 1085, "5201": 1085, "0356": 1085, "4064e": 1086, "8000e": 1086, "3493e": 1086, "5751e": 1086, "1428e": 1086, "5955e": 1086, "9683e": 1088, "1239e": 1088, "0705e": 1088, "set_grad_en": [1089, 1883, 1925, 1947], "parenthesi": [1089, 1187, 1669], "doubler": [1089, 1669], "elsewher": [1090, 1098, 1156, 1168, 1202, 1204, 1205, 1208, 1236, 1300, 1345, 1808, 1879], "_max": [1099, 1100, 1930], "_min": [1099, 1100, 1930], "nearbi": [1099, 1100], "_int": [1099, 1100], "_point": [1099, 1100], "2525": 1099, "0466": 1099, "3491": [1099, 1265], "2168": [1099, 1846], "5906": [1099, 1940], "6258": 1099, "6444": 1099, "0542": 1099, "0475": [1099, 1940], "0486": 1099, "3405": 1099, "6134": [1099, 1314], "6323": 1099, "0552": 1100, "9730": 1100, "3973": 1100, "0780": 1100, "4000": [1100, 1103, 1112, 1121, 1496, 1733, 1784], "fourier": [1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1209, 1794, 1826, 1880], "rfft": [1101, 1106, 1116, 1120, 1121, 1122], "compact": [1101, 1102, 1104, 1254, 1256, 1259, 1910, 1923, 1930], "chalf": [1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1116, 1117, 1118, 1883, 1925, 1945], "sm53": [1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122], "ortho": [1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1284], "orthonorm": [1101, 1102, 1104, 1106, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1275, 1631, 1830], "ifft": [1101, 1105, 1106, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118], "fftn": [1102, 1105, 1111, 1114, 1122], "rfft2": [1102, 1117], "ifft2": [1102, 1114], "two_fft": [1102, 1104, 1114, 1120, 1122], "check_strid": [1102, 1104, 1105, 1110, 1111, 1116, 1117, 1118, 1120, 1122, 1946], "nyquist": [1103, 1105, 1113, 1115, 1119, 1120, 1121, 1122], "i_1": [1104, 1122, 1232], "i_n": [1104, 1122, 1153, 1232, 1846, 1872], "rfftn": [1104, 1108, 1114, 1118, 1120], "ifftn": [1104, 1110, 1115], "rearrang": [1105, 1112, 1368, 1456, 1457, 1584, 1585, 1899], "fftfreq": [1105, 1112, 1121], "9000": [1105, 1844], "8000": [1105, 1339, 1496, 1730, 1784], "uncent": 1105, "ifftshift": 1105, "x_center": 1105, "x_uncent": 1105, "fft_uncent": 1105, "fft_center": 1105, "x_centered_2": 1105, "ihfft": [1106, 1114, 1115], "irfft": [1106, 1118, 1119], "symmetri": [1106, 1108, 1826], "opposit": [1106, 1108, 1830, 1850], "transformed_dim_s": [1106, 1116], "0000j": [1106, 1113, 1116, 1241, 1242, 1247, 1248, 1250, 1723, 1781], "1250": [1106, 1332], "1720j": 1106, "0406j": 1106, "2809": 1106, "6250": [1106, 1116, 1135, 1496], "9691": 1106, "hfftn": [1107, 1115], "last_dim_s": [1107, 1108, 1117, 1118, 1881], "ihfft2": 1107, "roundtrip": [1107, 1108, 1116, 1117, 1118], "ihfftn": [1108, 1114], "irfftn": [1108, 1117, 1122], "fft2": [1110, 1120], "two_ifft": [1110, 1111, 1115], "fftshift": 1112, "hfft": 1113, "6882j": 1113, "1625j": 1113, "hfft2": 1114, "8602j": 1116, "2031j": 1116, "1562": 1116, "3511": 1116, "7812": 1116, "2114": 1116, "irfft2": 1120, "wider": [1128, 1882, 1885, 1926, 1939], "49": [1128, 1267, 1907], "2500e": 1128, "1000e": 1128, "7656e": 1128, "lfloor": [1129, 1134, 1352, 1357, 1358, 1359, 1372, 1373, 1374, 1391, 1412, 1413, 1437, 1438, 1439, 1495, 1496, 1497, 1498, 1512, 1581, 1745, 1826], "rfloor": [1129, 1134, 1352, 1357, 1358, 1359, 1372, 1373, 1374, 1391, 1412, 1413, 1437, 1438, 1439, 1495, 1496, 1497, 1498, 1512, 1581, 1745, 1826], "8166": 1129, "5308": 1129, "2530": 1129, "2091": 1129, "7000": [1131, 1388, 1783], "3000": [1132, 1387, 1783, 1908], "entrywis": [1133, 1749], "modulu": [1133, 1271, 1749], "operatornam": [1134, 1247, 1248, 1249, 1250, 1267, 1275, 1360, 1361, 1367, 1404, 1405, 1411, 1435, 1475, 1493, 1783], "8750": [1135, 1496], "char": [1138, 1680, 1898, 1941], "parameter_and_buffer_dict": 1141, "tie_weight": [1141, 1666], "submodule_nam": [1141, 1666], "parameter_nam": [1141, 1666], "ty": [1141, 1666], "foo_ti": [1141, 1666], "new_a": [1141, 1666], "mutlipl": 1141, "grad_weight": [1141, 1910], "detached_param": 1141, "parameters_and_buffer_dict": 1141, "reparamater": [1141, 1666], "paramat": 1141, "intermediate_upd": 1142, "mutations_and_view": 1142, "intermeid": 1142, "inpt": 1142, "out1": [1142, 1883], "out2": [1142, 1883], "f_trace": 1142, "f_no_mutations_trac": 1142, "f_no_mutations_and_views_trac": 1142, "a_1": [1142, 1232], "view_1": 1142, "view_copi": [1142, 1883, 1925, 1947], "view_copy_1": 1142, "as_strid": [1142, 1881, 1883, 1925, 1943], "writ": 1142, "native_funct": [1142, 1881, 1910], "yaml": [1142, 1881, 1910], "aux": [1143, 1144, 1146, 1147, 1148, 1152], "my_loss_func": 1143, "y_pred": [1143, 1908], "loss_per_sampl": 1143, "y_true": 1143, "autodiff": [1146, 1147, 1148, 1270], "jacobian_f": [1146, 1147], "f_x": [1146, 1147], "jacboian": [1146, 1147], "expectedx": [1146, 1147], "expectedi": [1146, 1147], "_preallocate_and_copi": 1147, "stand": [1148, 1152, 1884, 1927, 1937], "jvp_out": 1148, "jvp_fn": 1149, "requr": 1149, "optimiz": [1151, 1882], "l1": [1151, 1404, 1405, 1475, 1552, 1597, 1641, 1650, 1916, 1921], "l2": [1151, 1405, 1435, 1475, 1683, 1684, 1685, 1686, 1688, 1690, 1696, 1697, 1699, 1904], "vjpfunc": 1152, "unsuccessfulli": [1153, 1872], "rummag": [1153, 1872], "batched_dot": [1153, 1872], "imposs": [1153, 1872, 1904], "jacobian_row": [1153, 1872], "get_vjp": [1153, 1872], "n1": [1153, 1751, 1872], "n0": [1153, 1872], "batched_pow": [1153, 1872], "autobatch": [1153, 1872], "sparse_grad": [1154, 1881, 1883], "tau": [1157, 1251, 1545, 1685, 1699, 1716, 1717, 1787, 1883], "elementari": [1157, 1905, 1913], "reflector": [1157, 1631, 1717], "household": [1157, 1251, 1631, 1717], "householder_product": [1157, 1631, 1716], "gel": [1157, 1257], "set_default_dtyp": 1159, "set_deterministic_debug_mod": [1160, 1865], "edge_ord": [1165, 1883], "mathbb": [1165, 1241, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1257, 1258, 1261, 1263, 1270, 1272, 1274, 1275, 1380, 1451, 1631], "rightarrow": 1165, "interior": 1165, "theorem": 1165, "h_l": 1165, "h_r": 1165, "neighbor": [1165, 1209, 1496, 1498, 1826], "xi_1": 1165, "xi_2": 1165, "approx": [1165, 1831, 1913], "outermost": 1165, "80": [1165, 1267, 1709, 1778, 1908, 1926], "halv": 1165, "coord": 1165, "54": [1169, 1406, 1790], "46": [1169, 1789], "hann_window": [1169, 1826, 1883, 1887, 1925], "hann": [1170, 1790], "hist": [1173, 1174, 1883], "bin_edg": [1173, 1174, 1883], "9524": 1173, "leftmost": [1174, 1900], "leg": 1178, "triangl": [1178, 1944], "hypotenus": 1178, "4031": 1178, "gammainc": [1180, 1940], "gammaincc": [1181, 1940], "index_reduce_": [1185, 1883], "1427": 1186, "0231": 1186, "5414": 1186, "0009": 1186, "4664": [1186, 1846], "2647": 1186, "1228": 1186, "6571": 1186, "7230": 1186, "6004": 1186, "inferencemod": [1187, 1905], "bump": 1187, "_version": [1187, 1925], "multidimension": [1189, 1281, 1407], "8173": 1189, "0874": 1189, "1784": 1189, "3279": 1189, "7894": 1189, "4682": 1189, "7159": 1189, "1506": 1189, "4034": 1189, "3657": 1189, "0387": 1189, "9892": 1189, "1774": 1189, "3261": 1189, "3917": 1189, "4537": [1189, 1615], "7493": 1189, "1724": 1189, "2291": 1189, "5749": 1189, "2267": 1189, "7920": 1189, "3607": 1189, "3701": 1189, "3666": 1189, "5850": [1189, 1242], "7242": 1189, "9837": 1189, "1560": 1189, "2907": 1189, "6785": 1189, "5671": [1189, 1243], "5452": 1189, "6912": 1189, "5509": 1189, "1782": 1189, "9843": 1189, "7366": 1189, "5672": [1189, 1672], "5115": 1189, "4864": 1189, "2476": 1189, "4337": 1189, "6347": 1189, "1748": 1189, "3567": [1189, 1242], "6558": 1189, "2469": [1189, 1916], "5787": [1189, 1292], "typecheck": [1199, 1925], "mypi": [1199, 1884, 1885], "warn_alwai": 1200, "set_warn_alwai": 1200, "nonfinit": 1201, "test_el": [1203, 1883], "assume_uniqu": [1203, 1883], "0j": [1208, 1869], "nola": 1209, "envelop": 1209, "hop": [1209, 1826], "shorter": [1209, 1923, 1935], "griffin": 1209, "ieee": [1209, 1398, 1794, 1919], "tran": 1209, "assp": 1209, "vol": [1209, 1398, 1794], "pp": [1209, 1398, 1794], "236": 1209, "apr": 1209, "1984": 1209, "slide": [1209, 1357, 1358, 1359, 1391, 1437, 1438, 1439, 1495, 1537, 1567, 1568, 1569, 1611, 1734, 1735, 1826], "fft_size": 1209, "scriptmodul": [1210, 1211, 1216, 1219, 1221, 1222, 1223, 1227, 1228, 1682, 1882, 1884, 1893, 1923], "implic": [1210, 1227, 1910, 1935, 1939], "attributemodul": 1210, "names_ag": 1210, "get_debug_st": 1211, "graphexecutorst": 1211, "_extra_fil": [1211, 1212, 1219, 1222, 1915], "save_to_buff": 1211, "add_modul": [1212, 1444], "init_weight": [1212, 1444, 1916], "buf": [1212, 1444], "20l": [1212, 1444], "1l": [1212, 1444], "5l": [1212, 1444], "code_with_const": 1212, "constmap": 1212, "extra_repr": [1212, 1444, 1910], "get_buff": [1212, 1444], "attributeerror": [1212, 1444, 1910, 1930], "get_extra_st": [1212, 1444], "set_extra_st": [1212, 1444], "get_paramet": [1212, 1444], "net_b": [1212, 1444], "net_c": [1212, 1444], "inlined_graph": 1212, "ipu": [1212, 1444, 1921], "missing_kei": [1212, 1444], "unexpected_kei": [1212, 1444], "remove_dupl": [1212, 1444], "named_children": [1212, 1444, 1916], "conv4": [1212, 1444], "conv5": [1212, 1444], "register_backward_hook": [1212, 1444, 1620], "register_full_backward_hook": [1212, 1444, 1916], "register_buff": [1212, 1444, 1617, 1882, 1884, 1910, 1916], "register_forward_hook": [1212, 1444, 1618, 1916], "with_kwarg": [1212, 1444], "register_module_forward_hook": [1212, 1444, 1916], "register_forward_pre_hook": [1212, 1381, 1444, 1619, 1916], "forward_pr": [1212, 1444], "register_module_forward_pre_hook": [1212, 1444, 1916], "register_module_full_backward_hook": [1212, 1444, 1616, 1905, 1916], "register_full_backward_pre_hook": [1212, 1444, 1916], "register_module_full_backward_pre_hook": [1212, 1444, 1916], "register_load_state_dict_post_hook": [1212, 1444], "incompatible_kei": [1212, 1444], "register_modul": [1212, 1444, 1622], "register_paramet": [1212, 1444, 1623, 1910, 1916], "register_state_dict_pre_hook": [1212, 1444], "keep_var": [1212, 1444], "finetun": [1212, 1444], "gan": [1212, 1444, 1632, 1665], "share_memori": [1212, 1444, 1918], "share_memory_": [1212, 1444, 1897, 1941], "shallow": [1212, 1381, 1444, 1492, 1493], "channels_last": [1212, 1444, 1624, 1942], "4d": [1212, 1363, 1391, 1408, 1444, 1496, 1537, 1554, 1581, 1612, 1733], "1913": [1212, 1444], "3420": [1212, 1444], "5113": [1212, 1444, 1846], "2325": [1212, 1244, 1444], "gpu1": [1212, 1444], "1914": [1212, 1444], "5112": [1212, 1444, 1908], "3741": [1212, 1444], "2382": [1212, 1333, 1444], "5593": [1212, 1444], "4443": [1212, 1444], "6122": [1212, 1444], "1150": [1212, 1444], "to_empti": [1212, 1444], "dst_type": [1212, 1444], "xpu": [1212, 1444, 1929], "set_to_non": [1212, 1444, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700, 1908], "the_typ": 1213, "the_valu": 1213, "script_bar": 1215, "addmod": 1215, "preserved_attr": 1216, "optimize_numer": 1216, "run_frozen_optim": 1216, "scripted_modul": [1216, 1223, 1921], "frozen_modul": 1216, "modified_tensor": 1216, "mymodule2": 1216, "dump_alias_db": 1216, "pdb": [1217, 1223, 1229, 1882, 1884], "training_method": 1217, "target_typ": 1218, "refin": [1218, 1899], "testcod": [1218, 1884], "key1": 1218, "val1": 1218, "key2": 1218, "val2": 1218, "_restore_shap": 1219, "scriptfunct": [1219, 1223, 1224, 1227, 1923], "readlin": [1219, 1283, 1927], "seek": [1219, 1283, 1927, 1930], "retrac": 1219, "rb": [1219, 1283], "extra_fil": [1219, 1222], "other_method": 1221, "lesser": [1221, 1905, 1907], "extent": [1221, 1907, 1939], "frozen_mod": 1221, "offlin": 1222, "_frames_up": 1223, "_rcb": 1223, "scriptdict": 1223, "scriptlist": 1223, "test_sum": 1223, "scripted_fn": [1223, 1882], "conv2": [1223, 1444, 1472, 1882, 1930], "some_entry_point": 1223, "python_only_fn": 1223, "testnnmodul": 1223, "pdt_model": 1223, "scripted_model": [1223, 1927], "un": [1225, 1367, 1930], "unfus": 1225, "nb": 1225, "check_trac": [1227, 1228], "check_input": [1227, 1228, 1882], "check_toler": [1227, 1228], "_force_outplac": [1227, 1228], "_module_class": [1227, 1228], "_compilation_unit": [1227, 1228], "compilationunit": [1227, 1228], "example_kwarg_input": 1227, "_store_input": [1227, 1228], "trace_modul": [1227, 1882, 1885], "untrack": 1227, "checker": [1227, 1228, 1885, 1923], "diverg": [1227, 1228, 1410, 1555, 1880, 1885], "traced_foo": [1227, 1882], "example_weight": [1227, 1228], "example_forward_input": [1227, 1228], "example_inputs_is_kwarg": 1228, "method2": 1228, "example_method2_input": 1228, "weighted_kernel_sum": 1228, "use_memory_effici": 1229, "memory_effici": 1229, "scriptabl": 1229, "kaiser": [1231, 1487, 1489, 1491], "i_0": [1231, 1232, 1793, 1846, 1940], "zeroth": [1231, 1793, 1940], "out_i": 1231, "kroneck": 1232, "a_0": 1232, "a_n": 1232, "b_0": 1232, "b_1": 1232, "b_n": 1232, "k_0": [1232, 1846], "k_1": 1232, "k_n": 1232, "j_0": 1232, "j_1": 1232, "j_n": 1232, "k_t": 1232, "i_t": [1232, 1414, 1698], "b_t": 1232, "j_t": 1232, "bmatrix": 1232, "a_": [1232, 1303, 1432, 1846], "cdot": [1232, 1257, 1269, 1360, 1361, 1379, 1380, 1402, 1410, 1447, 1448, 1449, 1450, 1451, 1487, 1525, 1548, 1723, 1826, 1940, 1946], "vdot": [1232, 1279, 1280, 1883, 1925], "ddot": [1232, 1279], "kth": 1233, "full_lik": [1237, 1883, 1887, 1925], "logarithm": [1240, 1245, 1271, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1298, 1367, 1527, 1562, 1806, 1940], "gamma": [1240, 1362, 1363, 1364, 1399, 1407, 1408, 1409, 1416, 1483, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1699, 1701, 1705, 1706, 1709, 1714, 1715, 1733, 1880, 1883, 1923, 1925, 1926, 1940], "5724": [1240, 1940], "1208": [1240, 1940], "mathrlap": [1241, 1247, 1248, 1249, 1250, 1258, 1261, 1270, 1272, 1274, 1275, 1631], "qquad": [1241, 1243, 1247, 1248, 1249, 1250, 1251, 1258, 1261, 1270, 1272, 1274, 1275, 1631], "eigenvalu": [1241, 1247, 1248, 1249, 1250, 1263, 1266, 1269, 1274, 1275, 1284, 1719, 1883], "resp": [1241, 1248, 1250, 1274, 1275, 1292], "5266": 1241, "9586": 1241, "0626j": 1241, "4160": 1241, "5895": 1241, "2322": 1241, "2976j": 1241, "4928": [1241, 1846], "4692e": 1241, "8747e": 1241, "check_error": [1242, 1253, 1255, 1260, 1273, 1883], "performantli": 1242, "3792": 1242, "9831j": 1242, "8757": 1242, "5425": 1242, "6374j": 1242, "kappa": 1243, "_p": [1243, 1453], "frobeniu": [1243, 1257, 1264, 1268, 1671], "nuc": [1243, 1264, 1268, 1281, 1642, 1651, 1671], "nuclear": [1243, 1264, 1268, 1671], "sigma_1": [1243, 1257, 1266, 1269], "sigma_n": 1243, "kappa_2": 1243, "kappa_": 1243, "4142": [1243, 1268, 1671, 1723], "1623": [1243, 1264], "2426": [1243, 1268, 1671], "7071": [1243, 1786], "5917": 1243, "9941": 1244, "5132": 1244, "5681": 1244, "4653": 1244, "4507": 1244, "4119": 1244, "6163": 1244, "1073": 1244, "3957": 1244, "9666": [1244, 1534], "0840": 1244, "3357": 1244, "2139": 1244, "slogdet": [1245, 1292, 1883, 1925], "0934": 1245, "1990": [1245, 1292], "4099": [1245, 1292], "7386": [1245, 1292], "diagonaliz": [1247, 1249], "eigenvector": [1247, 1248, 1284, 1883], "neq": [1247, 1248, 1251, 1275, 1345, 1447, 1449, 1684, 1685, 1686, 1688, 1690, 1696, 1697, 1699, 1703, 1830], "phi": [1247, 1248, 1275, 1394, 1541, 1830], "shall": [1247, 1248, 1275, 1633, 1637], "lambda_i": [1247, 1248, 1263], "lambda_j": [1247, 1248], "eigval": [1247, 1883], "9828": [1247, 1854, 1916], "3889j": 1247, "4617": 1247, "3010j": 1247, "1662": 1247, "7435j": 1247, "6139": 1247, "0562j": 1247, "1226": [1247, 1249], "5738j": [1247, 1249], "7537": [1247, 1249], "1286j": [1247, 1249], "9218": 1247, "1882": 1247, "2220j": 1247, "0270": 1247, "3867j": 1247, "7119e": 1247, "2841e": 1247, "uplo": [1248, 1250, 1883], "unitari": [1248, 1251, 1270, 1275, 1631, 1717], "eigvalsh": [1248, 1266], "9228": [1248, 1250], "2029": [1248, 1250], "0862j": [1248, 1250], "3464": [1248, 1250], "3277": [1248, 1250], "9415": [1248, 1250], "0846": 1248, "9964": 1248, "9170": 1248, "3898j": 1248, "0331j": 1248, "1062e": 1248, "5423e": 1248, "polynomi": [1249, 1250, 1712], "_n": [1249, 1250, 1252, 1631, 1910], "4576e": [1249, 1276], "5797": 1250, "4629": 1250, "1605": 1250, "3780": 1250, "1113": [1250, 1916], "7381": 1250, "h_1h_2": 1251, "h_k": 1251, "h_i": [1251, 1478], "_m": [1251, 1631], "tau_i": 1251, "8034": 1251, "4184j": 1251, "2588": 1251, "0174j": 1251, "6853": 1251, "7953j": 1251, "0790": 1251, "5620j": 1251, "6989j": 1251, "5360": 1251, "1193j": 1251, "3877": 1251, "6691j": 1251, "3512": 1251, "3024j": 1251, "4766": 1251, "5783j": 1251, "0361": [1251, 1916], "6587j": 1251, "6396": [1251, 1916], "1612j": 1251, "3693": 1251, "4481j": 1251, "aa": 1252, "pinv": [1252, 1257, 1721], "moor": [1252, 1269], "penros": [1252, 1269], "ainv": [1252, 1253, 1273, 1277], "1921e": 1252, "9073e": [1252, 1495], "5107e": 1252, "ldl": [1254, 1256], "indefinit": 1254, "ld": [1254, 1255, 1256, 1883], "sytrf": [1254, 1255], "ldl_solv": 1254, "ldl_factor_ex": [1254, 1256], "2079": [1254, 1255, 1940], "2414": [1254, 1255], "9428": [1254, 1255], "4554": [1254, 1255], "3264": [1254, 1255], "3823": [1254, 1255], "5884": [1254, 1255], "9595": [1254, 1255, 1786], "2695": [1254, 1255], "8513": [1254, 1255], "1633": [1254, 1255], "ldl_factor": 1255, "rcond": [1257, 1269, 1721, 1883], "_f": 1257, "gelsi": 1257, "gelsd": 1257, "gelss": 1257, "tridiagon": 1257, "sigma_i": [1257, 1275, 1830], "residu": [1257, 1284, 1883, 1916], "singular_valu": [1257, 1883], "lh": 1257, "rh": [1257, 1302], "0838": [1257, 1916], "2275": [1257, 1332], "3844": 1257, "5499": 1257, "1175": 1257, "9102": 1257, "0870": 1257, "6772": 1257, "7758": 1257, "5109": 1257, "4382": 1257, "3769": 1257, "1818": 1257, "3450": 1257, "0806": [1257, 1916], "3967": 1257, "3994": 1257, "1521": 1257, "1473": 1257, "9194": 1257, "0458": 1257, "6705": [1257, 1316], "1802": 1257, "4086": 1257, "5152e": 1257, "5007": 1258, "9755": 1258, "0489": 1258, "9644": [1258, 1311], "9605e": 1258, "0376e": 1258, "lu_factor_ex": [1259, 1301], "lu_unpack": [1259, 1301, 1883, 1925], "b1": 1259, "b2": [1259, 1908, 1914], "a_factor": 1259, "getrf": [1260, 1273], "adjoint": [1261, 1883, 1925, 1943, 1945], "_exp": 1263, "3891": 1263, "8660": 1263, "ord": [1264, 1268, 1281, 1671, 1883, 1885, 1925], "la": [1264, 1268, 1281, 1916], "2829": 1264, "2627": 1264, "0756": 1265, "4980": 1265, "6617": 1265, "4994": 1265, "9980": 1265, "2731": 1265, "8001": 1265, "2640": 1265, "4571": 1265, "5511": 1265, "0163": [1265, 1311], "5292": 1265, "4899": 1265, "0822": 1265, "2773": [1265, 1900], "varepsilon": [1266, 1269], "tol": [1266, 1284, 1883], "fewest": 1267, "nd": [1267, 1919], "bc": [1267, 1926], "75000": 1267, "148": 1267, "vector_norm": [1268, 1671], "matrix_norm": [1268, 1281, 1632, 1671], "7460": [1268, 1671], "3485": 1268, "8570e": 1268, "8480": 1268, "2361": [1268, 1671, 1672], "7417": [1268, 1671], "computation": [1269, 1913], "5495": [1269, 1332], "0979": 1269, "4092": 1269, "4132": [1269, 1792], "1143": 1269, "3662": 1269, "6374": 1269, "9294": 1269, "3269": [1269, 1916], "5745": [1269, 1824, 1825, 1867, 1868], "0382": [1269, 1333], "5922": 1269, "6759": 1269, "0600": 1269, "1933": 1269, "2090": 1269, "0903": 1269, "0817": 1269, "4752": [1269, 1829], "7124": 1269, "1631": 1269, "2272": 1269, "1356": 1269, "3933": 1269, "5023": 1269, "0308": 1269, "1725": 1269, "5216": 1269, "apinv": 1269, "5633e": 1269, "0830e": 1269, "wide": [1270, 1275, 1631, 1788, 1907, 1910, 1916, 1926], "51": [1270, 1442, 1729], "167": [1270, 1729], "68": [1270, 1729, 1882, 1884], "8571": [1270, 1729], "3943": [1270, 1729], "3314": [1270, 1729], "4286": [1270, 1729], "9029": [1270, 1729], "0343": [1270, 1729], "2857": [1270, 1729], "1714": [1270, 1729, 1916], "9429": [1270, 1729], "175": [1270, 1729], "q2": 1270, "r2": [1270, 1483], "6099e": 1270, "2158e": 1270, "logabsdet": [1271, 1883], "0032": 1271, "1219": [1271, 1748], "6690": 1271, "1161": 1271, "4053": 1271, "6218": [1271, 1843], "9273": 1271, "0082": 1271, "7576": 1271, "logdet": [1271, 1883, 1925], "linalg_slogdet": [1271, 1883, 1925], "2776": 1271, "solve_triangular": [1272, 1853], "expand_a": [1272, 1883, 1910, 1925, 1943], "rectangular": [1274, 1275, 1303, 1903], "triu_": [1274, 1883], "tril_": [1274, 1883], "full_matric": [1275, 1276, 1636, 1830, 1881, 1883], "vh": [1275, 1636, 1830, 1881, 1883], "gesvdj": [1275, 1276, 1830], "jacobi": 1275, "gesvda": [1275, 1276], "gesvd": [1275, 1276, 1830], "u_k": 1275, "v_k": 1275, "sigma_j": [1275, 1830], "eigendecomposit": 1275, "0486e": 1275, "0957e": 1275, "5139": 1276, "1087": 1276, "1066": 1276, "ind": [1277, 1278, 1883, 1911], "tensorsolv": 1277, "atensorinv": 1277, "movedim": [1278, 1318, 1883, 1911, 1925, 1943], "tensorinv": 1278, "vandermond": [1279, 1866], "pmatrix": 1279, "x_n": [1279, 1360, 1361, 1404, 1405, 1411, 1435, 1475, 1851, 1905], "125": [1279, 1462, 1866, 1883], "overlin": [1280, 1869], "3223": 1280, "2815": 1280, "1944": [1280, 1916], "4345": 1281, "pickle_modul": [1283, 1761], "weights_onli": [1283, 1879, 1894], "pickle_load_arg": 1283, "register_packag": [1283, 1921], "binaryio": [1283, 1761, 1927], "mmap": [1283, 1897], "mmape": 1283, "untrust": [1283, 1879, 1894, 1927], "unsaf": [1283, 1633, 1636, 1883, 1908, 1927], "tamper": [1283, 1927], "ram": [1283, 1908], "surg": 1283, "decod": [1283, 1487, 1488, 1489, 1624, 1927], "utf": [1283, 1923, 1927], "unicodedecodeerror": 1283, "codec": 1283, "0x": 1283, "latin1": 1283, "byte_arrai": 1283, "niter": [1284, 1719, 1831], "ortho_iparam": 1284, "ortho_fparam": 1284, "ortho_bparam": 1284, "knyazev": 1284, "knyazev2001": 1284, "stathopoulosetal2002": 1284, "converg": [1284, 1475, 1631, 1686, 1687, 1711, 1904, 1916, 1919], "precondition": 1284, "eigenpair": 1284, "criterion": [1284, 1360, 1361, 1378, 1380, 1405, 1411, 1435, 1436, 1447, 1448, 1449, 1475, 1476, 1492, 1493, 1526, 1704, 1736, 1912], "fep": 1284, "eigenproblem": 1284, "iparam": 1284, "fparam": 1284, "bparam": 1284, "ivar": 1284, "fvar": 1284, "bvar": 1284, "tvar": 1284, "istep": 1284, "converged_count": 1284, "rerr": 1284, "force_stop": 1284, "2001": 1284, "precondit": 1284, "eigensolv": 1284, "siam": 1284, "sci": 1284, "517": 1284, "541": 1284, "epub": 1284, "doi": [1284, 1398, 1794], "1137": 1284, "s1064827500366124": 1284, "andrea": 1284, "stathopoulo": 1284, "kesheng": 1284, "2002": [1284, 1794], "2165": 1284, "2182": 1284, "s1064827500370883": 1284, "duerschetal2018": 1284, "jed": 1284, "duersch": 1284, "meiyu": 1284, "shao": 1284, "chao": 1284, "ming": 1284, "gu": 1284, "c655": 1284, "c676": 1284, "17m1129830": 1284, "log_": [1285, 1286, 1287, 1288, 1883, 1898], "7767": 1285, "3234": 1285, "2156": 1285, "2411": 1285, "5739": 1285, "5637": 1285, "4640": 1285, "1952": 1285, "4226": 1285, "5204": [1285, 1738], "5224": 1286, "9354": 1286, "7257": 1286, "1301": 1286, "2820": 1286, "0290": 1286, "1392": 1286, "8857": 1286, "6476": 1286, "0090": [1287, 1346, 1725, 1940], "9923": 1287, "5372": 1287, "2492": 1287, "8653": 1287, "7055": 1287, "7705": 1287, "2225": 1287, "8419": 1288, "8003": [1288, 1920], "9971": 1288, "5287": 1288, "0490": 1288, "2483": 1288, "0042": 1288, "9196": 1288, "3504": [1288, 1846], "logsumexp": [1289, 1883, 1898, 1925, 1940], "3069": 1289, "6867": 1289, "8731": 1289, "30000": 1289, "1269e": 1289, "log_2": 1290, "logaddexp": [1290, 1883, 1925], "limits_": 1291, "42296738": 1291, "04462666": 1291, "86278635": 1291, "94622083": 1291, "05277811": 1291, "39202815": 1291, "83525007": 1291, "84492621": 1291, "06084887": 1291, "06844475": 1291, "2611": [1292, 1843], "9254": 1292, "6213": [1292, 1916], "6843": 1292, "3242": 1292, "9665": 1292, "4539": 1292, "0887": [1292, 1940], "1336": 1292, "4025": 1292, "7089": [1292, 1387], "9032": 1292, "3031": 1292, "2589": 1298, "1135": 1298, "5481": [1298, 1311, 1916], "9566": 1298, "sum_j": [1299, 1434, 1477, 1479, 1599, 1809, 1940], "0593": [1299, 1916], "5696": 1299, "6859e": 1299, "compute_pivot": 1301, "transposit": [1301, 1850, 1939], "perm": 1301, "a_lu": 1301, "5558": 1301, "1684": 1301, "1551": 1301, "1940": 1301, "6189": 1301, "5497": 1301, "4526": 1301, "2526": 1301, "3285": 1301, "7988": 1301, "7175": 1301, "9701": 1301, "2634": 1301, "9255": 1301, "3459": 1301, "00000e": 1302, "8312": 1302, "unpack_data": [1303, 1883], "unpack_pivot": [1303, 1883], "l_": [1303, 1349, 1353, 1357, 1361, 1372, 1373, 1374, 1375, 1412, 1437], "u_": [1303, 1684, 1688], "3552": [1305, 1535], "3825": 1305, "8297": 1305, "3477": 1305, "2035": [1305, 1824, 1825, 1867, 1868], "2252": [1305, 1940], "5002": 1305, "6248": [1305, 1314], "1307": 1305, "0608": [1305, 1803], "1244": 1305, "0139": 1305, "6763": 1309, "7445": 1309, "2369": 1309, "argmax": [1309, 1352, 1437, 1567, 1568, 1569, 1841, 1881, 1883, 1925], "max_indic": 1309, "2360": 1309, "2942": 1309, "1222": [1309, 1916], "8475": 1309, "1949": 1309, "1127": 1309, "6702": 1309, "5717": 1309, "9207": 1309, "1297": 1309, "8768": 1309, "6172": 1309, "6060": 1309, "2432": 1309, "3288": 1311, "3367": 1311, "nanmean": [1311, 1883, 1925], "3841": 1311, "6320": 1311, "4254": 1311, "7384": 1311, "0131": 1311, "6549": [1311, 1786], "4279": 1311, "3350": 1311, "7694": 1311, "5600": [1311, 1496], "0842": 1311, "9580": 1311, "3623": 1311, "2343": [1311, 1900], "5085": 1311, "4599": 1311, "1807": 1311, "5219": 1312, "5212": 1312, "2202": 1312, "2505": 1312, "3982": 1312, "9948": 1312, "3518": 1312, "3131": 1312, "3180": [1312, 1939], "6993": 1312, "0436": 1312, "0438": 1312, "2270": 1312, "2751": 1312, "7303": 1312, "2192": 1312, "3321": 1312, "2488": 1312, "0778": 1312, "9510": 1312, "7048": 1312, "4742": [1312, 1859, 1940], "7125": [1312, 1811], "plot": [1313, 1907, 1929, 1944], "t_0": [1313, 1704], "s_0": 1313, "s_": [1313, 1350, 1351, 1390, 1494], "g_0": 1313, "g_": [1313, 1688, 1698, 1699], "g_i": 1313, "t_i": 1313, "0d": [1313, 1436], "xy": 1313, "50276": 1313, "cartesian_prod": [1313, 1883, 1925], "grid_x": 1313, "grid_i": 1313, "dstack": [1313, 1883, 1925, 1939], "matplotlib": [1313, 1944], "pyplot": [1313, 1944], "plt": 1313, "plot_surfac": 1313, "6750": 1314, "0857": [1314, 1856], "7197": [1314, 1875], "argmin": [1314, 1881, 1883, 1925], "min_indic": [1314, 1883], "1334": 1314, "2803": 1314, "4644": [1314, 1824, 1825, 1867, 1868], "2635": [1314, 1916], "3651": 1314, "0384": 1314, "0128": 1314, "7015": 1314, "1153": 1314, "9849": 1314, "1458": [1314, 1940], "5788": 1314, "deduc": [1316, 1939], "4851": 1316, "5037": 1316, "3633": 1316, "0760": 1316, "3362": [1318, 1319], "8437": [1318, 1319], "9627": [1318, 1319], "1727": [1318, 1319], "5173": [1318, 1319], "1398": [1318, 1319], "mpsalloc": [1320, 1321], "metal": [1321, 1329, 1893, 1896, 1917], "mpsgraph": 1321, "wait_until_complet": [1325, 1326], "signpost": [1325, 1326, 1327], "xcode": 1326, "recommendedmaxworkingsets": 1329, "unlimit": [1329, 1908], "1321": 1332, "4370": [1332, 1939], "1289": 1332, "0527": 1332, "3077": [1332, 1820], "0881": 1332, "1259": 1332, "0284": 1332, "2015": [1333, 1903, 1916], "6087": 1333, "1494": 1333, "5491": 1333, "260": 1333, "8663": 1333, "3137": 1333, "0700": 1333, "8378": 1333, "5146": 1333, "1216": 1333, "5244": 1333, "5767": 1333, "1363": 1333, "5877": 1333, "5083": 1333, "1614": 1333, "1645": 1333, "7021": 1333, "0085": 1333, "0367": 1333, "1567": 1333, "4312": 1333, "1019": 1333, "4394": 1333, "8753": 1333, "_sampl": 1334, "thtensorrandom": 1334, "320": [1334, 1470], "0404": 1336, "6361": 1336, "multigammaln": [1337, 1940], "4028e": 1338, "1400e": 1338, "isnan": [1339, 1881, 1883, 1925, 1939], "midpoint": [1341, 1730], "weakli": [1343, 1344, 1940], "to_spars": [1344, 1807, 1883, 1920, 1925, 1939], "2262": [1346, 1725], "0682": [1346, 1725], "2866": [1346, 1725], "3940": [1346, 1725], "5x7": [1350, 1354], "7x7": [1350, 1354], "10x7": [1350, 1354], "cube": [1351, 1355, 1736], "d_": [1351, 1355, 1359, 1371, 1374, 1377, 1439, 1442, 1467, 1470, 1496, 1501, 1543, 1854, 1855, 1856, 1857], "5x7x9": [1351, 1355], "7x7x7": [1351, 1355], "7x9x8": [1351, 1355], "n_class": 1352, "cutoff": [1352, 1903], "div_valu": 1352, "head_bia": 1352, "edouard": 1352, "grave": [1352, 1367], "armand": 1352, "joulin": 1352, "moustapha": 1352, "ciss\u00e9": 1352, "grangier": 1352, "herv\u00e9": 1352, "j\u00e9gou": 1352, "imbalanc": 1352, "zipf": 1352, "law": 1352, "1001": 1352, "1002": 1352, "_class": 1352, "maxunpool1d": [1353, 1437, 1570, 1865], "maxunpool2d": [1354, 1392, 1438, 1571, 1865], "maxunpool3d": [1355, 1393, 1439, 1572, 1865], "selu": [1356, 1389, 1536, 1883, 1903, 1923, 1925], "n_i": [1357, 1358, 1359, 1372, 1373, 1374, 1437, 1438, 1439, 1492, 1493], "c_j": [1357, 1358, 1359, 1437, 1438, 1439], "size_averag": [1360, 1361, 1378, 1380, 1404, 1410, 1411, 1435, 1436, 1447, 1448, 1449, 1451, 1458, 1475, 1476, 1492, 1515, 1516, 1524, 1526, 1551, 1555, 1556, 1566, 1574, 1575, 1576, 1577, 1578, 1586, 1597, 1598, 1609, 1883], "unreduc": [1360, 1361, 1380, 1405, 1411, 1435, 1451, 1475, 1493], "ell": [1360, 1361, 1380, 1404, 1405, 1411, 1435, 1451, 1475, 1493], "l_1": [1360, 1361, 1380, 1404, 1405, 1411, 1435, 1451, 1475, 1493], "l_n": [1360, 1361, 1380, 1404, 1405, 1411, 1435, 1451, 1475, 1493], "w_n": [1360, 1361, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794], "y_n": [1360, 1361, 1380, 1404, 1405, 1411, 1435, 1451, 1475, 1851, 1905], "lim_": [1360, 1905], "secondli": 1360, "straight": [1360, 1545], "rescal": [1360, 1361, 1380, 1448, 1449, 1451, 1477, 1479, 1515, 1516, 1526, 1578, 1636, 1665], "nbatch": [1360, 1361], "pos_weight": [1361, 1516, 1883], "classif": [1361, 1367, 1380, 1447, 1449, 1451, 1476, 1527, 1880, 1903, 1931], "ell_c": 1361, "l_c": 1361, "p_c": 1361, "pai": [1361, 1516, 1922, 1943], "spacial": [1361, 1516], "random_": [1361, 1380, 1451, 1516, 1883, 1898, 1947], "hat": [1362, 1363, 1364, 1407, 1408, 1409, 1483], "terminologi": [1362, 1363, 1364, 1483], "tempor": [1362, 1364, 1367, 1483, 1496, 1527, 1554, 1612], "5d": [1364, 1409, 1496, 1543, 1554, 1581, 1612], "volumetr": [1364, 1483, 1496, 1543, 1554, 1612, 1613, 1614], "spatio": [1364, 1483], "in1_featur": 1365, "in2_featur": 1365, "in1": [1365, 1514], "in2": [1365, 1514], "blank": [1367, 1527, 1883, 1886], "zero_infin": [1367, 1527, 1883], "connectionist": [1367, 1527], "unseg": 1367, "longest": [1367, 1658, 1660, 1661, 1912], "input_length": [1367, 1527, 1883, 1912], "target_length": [1367, 1527, 1883], "s_n": 1367, "target_n": 1367, "unbatch": [1367, 1380, 1391, 1396, 1407, 1414, 1450, 1459, 1487, 1537], "s_min": 1367, "toronto": 1367, "edu": [1367, 1736], "icml_2006": 1367, "256": [1367, 1726, 1908, 1923], "background": [1367, 1375, 1543, 1581, 1918, 1935], "channel_shuffl": [1368, 1883, 1925], "_left": [1369, 1370, 1371, 1465, 1466, 1467, 1468, 1469, 1470, 1499, 1500, 1501, 1581], "_right": [1369, 1370, 1371, 1465, 1466, 1467, 1468, 1469, 1470, 1499, 1500, 1501, 1581], "0491": [1369, 1499], "7152": [1369, 1499], "0749": [1369, 1499], "3287": [1369, 1499], "8966": [1369, 1499], "1466": [1369, 1499], "2771": [1369, 1499], "6616": [1369, 1499], "4523": [1369, 1499], "1255": [1369, 1499], "6372": [1369, 1499, 1830], "1182": [1369, 1499], "8652": [1369, 1499], "_top": [1370, 1371, 1466, 1467, 1469, 1470, 1500, 1501, 1581], "_bottom": [1370, 1371, 1466, 1467, 1469, 1470, 1500, 1501, 1581], "6585": 1370, "4320": [1370, 1839], "8701": 1370, "4649": 1370, "_front": [1371, 1467, 1470, 1501, 1581], "_back": [1371, 1467, 1470, 1501, 1581], "_j": [1372, 1373], "star": [1372, 1373, 1374, 1885], "\u00e0": [1372, 1373, 1374, 1375, 1376, 1377, 1391, 1495], "trou": [1372, 1373, 1374, 1375, 1376, 1377, 1391, 1495], "harder": [1372, 1373, 1374, 1375, 1376, 1377, 1391, 1438, 1439, 1495], "prod_": [1373, 1374, 1376, 1377, 1390, 1494, 1690], "out_j": 1374, "deconvolut": [1375, 1376, 1377, 1521, 1522, 1523], "_pad": [1375, 1376, 1377], "dissimilar": [1378, 1404], "semi": [1378, 1404, 1880, 1903], "supervis": [1378, 1404], "vert": [1379, 1453, 1525], "_2": [1379, 1525, 1632, 1665], "ast_1": [1379, 1395], "ast_2": [1379, 1395], "ignore_index": [1380, 1451, 1526, 1578, 1883], "label_smooth": [1380, 1526, 1883], "unbalanc": [1380, 1451], "d_1": [1380, 1451, 1526, 1578], "d_2": [1380, 1451, 1526, 1578], "d_k": [1380, 1451, 1526, 1578], "_index": [1380, 1451], "logsoftmax": [1380, 1451, 1477, 1562], "nllloss": [1380, 1477, 1578, 1599, 1865], "blend": 1380, "smooth": [1380, 1405, 1475, 1480, 1526, 1697], "w_c": 1380, "truth": [1380, 1526, 1892, 1944], "rethink": [1380, 1526], "incept": [1380, 1526], "spectral_norm": [1381, 1655], "neuron": 1382, "detector": 1382, "dropout1d": [1384, 1883], "_freez": 1387, "sparseadam": [1387, 1926], "0251": 1387, "6902": [1387, 1727], "7172": 1387, "6431": 1387, "0748": 1387, "6969": 1387, "4970": 1387, "3448": 1387, "9685": 1387, "3677": 1387, "7265": 1387, "1685": 1387, "4362": 1387, "4004": [1387, 1811], "9400": 1387, "9124": 1387, "3616": 1387, "1151": 1387, "0309": 1387, "9315": 1387, "1655": [1387, 1908], "9897": 1387, "0635": 1387, "7895": 1387, "0364": 1387, "6778": 1387, "5803": 1387, "bag": [1388, 1535], "per_sample_weight": [1388, 1535, 1883], "embedding_sum": 1388, "8861": 1388, "4350": 1388, "0523": 1388, "1306": 1388, "5798": 1388, "0044": 1388, "7082": [1388, 1535], "2145": [1388, 1535], "6251": [1388, 1535], "6500": 1388, "satur": [1389, 1536], "alphadropout": [1389, 1509], "160": [1390, 1926], "unfold": [1391, 1883, 1925, 1943], "prod_d": [1391, 1495], "neighborhood": [1391, 1495], "col2im": [1391, 1881, 1883, 1925], "fold_param": [1391, 1495], "input_on": [1391, 1495], "output_ratio": [1392, 1393, 1538, 1539, 1883], "_random_sampl": [1392, 1393, 1538, 1539, 1883], "ben": [1392, 1393, 1538, 1539], "graham": [1392, 1393, 1538, 1539], "oh": [1392, 1393, 1538, 1539], "ow": [1392, 1393, 1538, 1539], "_ratio": [1392, 1393, 1539], "13x12": [1392, 1538], "kt": [1393, 1512, 1520, 1523, 1539, 1569], "ot": [1393, 1539], "13x12x11": [1393, 1539], "044715": [1394, 1541], "pack_sequ": [1396, 1414, 1459, 1660, 1662], "bias_ih": [1397, 1415, 1461], "bias_hh": [1397, 1415, 1461], "const": [1398, 1915], "homoscedast": [1398, 1540], "heteroscedast": [1398, 1540], "nix": 1398, "weigend": 1398, "1994": 1398, "icnn": 1398, "94": 1398, "orlando": 1398, "fl": 1398, "usa": [1398, 1944], "374138": 1398, "instancenorm": [1399, 1932], "shrinkag": [1400, 1481, 1546, 1602], "mobilenetv3": [1402, 1548], "_val": 1403, "l1loss": [1405, 1475, 1556], "outlier": [1405, 1475, 1930, 1931], "huber": [1405, 1475], "smoothl1loss": [1405, 1597], "insensit": 1406, "unused_argument1": 1406, "unused_argument2": 1406, "ingredi": [1407, 1408, 1409], "styliz": [1407, 1408, 1409], "rgb": [1408, 1409, 1944], "log_target": [1410, 1555, 1883], "kl": [1410, 1555, 1880], "summaris": 1410, "loss_pointwis": 1410, "batchmean": [1410, 1555], "kl_loss": 1410, "mae": 1411, "f_t": [1414, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "hf": [1414, 1415], "g_t": [1414, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "ig": [1414, 1415], "hg": [1414, 1415], "o_t": 1414, "ho": [1414, 1415], "c_t": 1414, "odot": 1414, "forget": [1414, 1884, 1885], "proj_siz": [1414, 1460], "1402": 1414, "c_0": [1414, 1415], "proj": 1414, "c_n": 1414, "w_ii": 1414, "w_if": 1414, "w_ig": 1414, "w_io": 1414, "w_hi": 1414, "w_hf": 1414, "w_hg": 1414, "w_ho": 1414, "b_ii": 1414, "b_if": 1414, "b_ig": 1414, "b_io": 1414, "b_hi": 1414, "b_hf": 1414, "b_hg": 1414, "b_ho": 1414, "weight_hr_l": 1414, "_revers": 1414, "h_1": 1415, "c_1": 1415, "time_step": 1415, "_shape": 1416, "sentence_length": 1416, "lazymodulemixin": [1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429], "cls_to_becom": [1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1627], "convtranspose1d": [1423, 1521, 1865, 1932], "convtranspose3d": [1425, 1523, 1865, 1932], "instancenorm1d": [1426, 1553, 1932], "instancenorm2d": [1427, 1553, 1932], "instancenorm3d": [1428, 1553, 1932], "uninitializedparamet": [1429, 1615, 1880], "lrn": 1432, "signal_2d": 1432, "signal_4d": 1432, "output_2d": 1432, "output_4d": 1432, "x_j": [1434, 1477, 1479, 1599, 1809, 1913, 1940], "80827": [1440, 1441, 1442], "unpool": [1440, 1441, 1442], "maxpool3d": [1442, 1569, 1572, 1865, 1932], "unpooled_output": 1442, "t_destin": 1444, "lrelu": [1445, 1916], "hing": [1447, 1449], "sum_i": [1448, 1449, 1476], "nelement": [1448, 1476], "jointli": 1450, "concat": [1450, 1883, 1925], "head_1": 1450, "head_h": 1450, "head_i": 1450, "qw_i": 1450, "kw_i": 1450, "vw_i": 1450, "scaled_dot_product_attent": [1450, 1883, 1925], "inference_mod": [1450, 1491], "nestedtensor": [1450, 1491, 1900], "multihead_attn": 1450, "e_q": 1450, "e_k": 1450, "e_v": 1450, "_head": [1450, 1487], "merge_mask": 1450, "mask_typ": 1450, "merged_mask": 1450, "nll": 1451, "crossentropyloss": [1451, 1526], "num_paramet": 1452, "nchannel": 1452, "decai": [1452, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1699, 1702, 1706, 1708, 1709, 1712, 1713, 1715, 1787, 1926], "legitim": [1452, 1543, 1911], "vert_p": 1453, "fromkei": 1454, "popitem": [1454, 1925], "setdefault": [1454, 1925], "upscale_factor": [1456, 1584, 1883], "upscal": 1456, "shi": [1456, 1457], "2016": [1456, 1457, 1493], "_factor": [1456, 1457, 1496, 1497, 1498], "pixel_shuffl": [1456, 1883, 1925, 1932], "downscale_factor": [1457, 1585, 1883], "pixelshuffl": [1457, 1584, 1585, 1932], "downscal": 1457, "pixel_unshuffl": [1457, 1883, 1925, 1932], "log_input": [1458, 1586, 1883], "poisson": [1458, 1586, 1787, 1880, 1883, 1925], "stirl": [1458, 1586], "hh": [1459, 1461], "flatten_paramet": 1460, "3333333333333333": [1462, 1702, 1708, 1883], "leaki": [1462, 1591, 1903], "rectifi": [1462, 1463, 1588, 1903], "liner": 1462, "empir": 1462, "1505": 1462, "00853": 1462, "crelu": 1463, "1603": 1463, "05201": 1463, "480": 1470, "6732632423543772848170429916717": [1471, 1594], "0507009873554804934193349852946": [1471, 1594], "kaiming_norm": 1471, "kaiming_normal_": [1471, 1880, 1887, 1903], "initialis": 1471, "calculate_gain": [1471, 1880, 1887, 1903], "modulelist": [1472, 1916], "cascad": 1472, "relu2": [1472, 1615], "swish": [1473, 1596], "coin": [1473, 1596], "explod": 1475, "cnn": [1475, 1930], "ross": 1475, "girshick": 1475, "quadrat": [1475, 1912], "huberloss": [1475, 1552], "w_j": 1478, "soft": [1481, 1545, 1602], "softshrinkag": 1481, "convert_sync_batchnorm": 1483, "r1": 1483, "sync_bn_network": 1483, "ddp_sync_bn_network": 1483, "sync_bn_modul": 1483, "d_model": [1487, 1488, 1489, 1490, 1491], "nhead": [1487, 1488, 1489, 1490, 1491], "num_encoder_lay": 1487, "num_decoder_lay": 1487, "dim_feedforward": [1487, 1489, 1491], "custom_encod": 1487, "custom_decod": 1487, "layer_norm_ep": [1487, 1489, 1491], "norm_first": [1487, 1489, 1491], "ashish": [1487, 1489, 1491], "vaswani": [1487, 1489, 1491], "noam": [1487, 1489, 1491], "shazeer": [1487, 1489, 1491], "niki": [1487, 1489, 1491], "parmar": [1487, 1489, 1491], "jakob": [1487, 1489, 1491], "uszkoreit": [1487, 1489, 1491], "llion": [1487, 1489, 1491], "jone": [1487, 1489, 1491], "aidan": [1487, 1489, 1491], "gomez": [1487, 1489, 1491], "lukasz": [1487, 1489, 1491], "illia": [1487, 1489, 1491], "polosukhin": [1487, 1489, 1491], "6000": [1487, 1489, 1491, 1496, 1733, 1781, 1784], "6010": [1487, 1489, 1491], "feedforward": [1487, 1489, 1491, 1903], "transformer_model": 1487, "word_language_model": 1487, "src_mask": [1487, 1491], "tgt_mask": [1487, 1488, 1489], "memory_mask": [1487, 1488, 1489], "src_key_padding_mask": [1487, 1490, 1491], "tgt_key_padding_mask": [1487, 1488, 1489], "memory_key_padding_mask": [1487, 1488, 1489], "_mask": [1487, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654], "_key_padding_mask": 1487, "generate_square_subsequent_mask": 1487, "sz": 1487, "decoder_lay": [1488, 1489], "transformerdecoderlay": 1488, "transformer_decod": 1488, "tgt_is_caus": [1488, 1489], "memory_is_caus": [1488, 1489], "attn": [1489, 1491], "encoder_lay": [1490, 1491], "enable_nested_tensor": 1490, "mask_check": 1490, "1810": 1490, "04805": 1490, "transformerencoderlay": 1490, "transformer_encod": 1490, "flashattent": [1491, 1593], "triplet": [1492, 1493], "x3": 1492, "balnta": [1492, 1493], "riba": [1492, 1493], "a_i": [1492, 1493, 1789], "p_i": [1492, 1493], "rm": [1492, 1493], "bf": [1492, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "rvert_p": [1492, 1579], "tripletmarginwithdistanceloss": [1492, 1610], "triplet_loss": [1492, 1493], "distance_funct": [1493, 1610], "l_i": 1493, "tripletmarginloss": [1493, 1609], "l_p": [1493, 1579], "pairwisedist": [1493, 1582], "penal": [1493, 1916], "distant": 1493, "anchor_id": 1493, "positive_id": 1493, "negative_id": 1493, "l_infin": 1493, "bmva": 1493, "bmvc": 1493, "paper119": 1493, "unflattened_s": 1494, "namedtensor": 1494, "namedshap": 1494, "u_1": 1494, "u_n": 1494, "u_i": 1494, "im2col": [1495, 1883, 1925], "fold": [1495, 1831, 1883, 1893, 1923, 1933, 1939], "2x3": 1495, "3x4": 1495, "inp_unf": 1495, "out_unf": 1495, "recompute_scale_factor": [1496, 1554], "bicub": [1496, 1543, 1554, 1612, 1865], "trilinear": [1496, 1543, 1554, 1612, 1865], "input_3x3": 1496, "4375": 1496, "8125": 1496, "9375": 1496, "2400": [1496, 1846], "1200": [1496, 1758, 1908], "8800": 1496, "4400": [1496, 1846], "7200": 1496, "0400": 1496, "2800": [1496, 1781], "3600": 1496, "5200": 1496, "6400": 1496, "1678": 1500, "4418": 1500, "9466": [1500, 1940], "9604": 1500, "4219": 1500, "5241": 1500, "9162": 1500, "5436": [1500, 1846], "6446": 1500, "adaptiveavgpool1d": [1502, 1932], "tripl": [1504, 1507], "adaptivemaxpool1d": 1505, "adaptivemaxpool2d": [1506, 1865], "adaptivemaxpool3d": 1507, "ill": [1508, 1919], "avgpool1d": [1510, 1932], "avgpool3d": [1512, 1865, 1932], "iT": [1512, 1520, 1523], "padt": [1512, 1520, 1523], "score": [1516, 1593, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651, 1880], "out_padw": [1521, 1522, 1523], "out_padh": [1522, 1523], "out_padt": 1523, "cosineembeddingloss": 1524, "ctcloss": [1527, 1865], "charact": [1527, 1778, 1882, 1885, 1899, 1935], "elu": [1533, 1883, 1923, 1925, 1932], "embedding_matrix": [1534, 1535], "8490": 1534, "9625": 1534, "6753": 1534, "7761": 1534, "6108": 1534, "6246": 1534, "9751": 1534, "3618": 1534, "4161": [1534, 1939], "2419": 1534, "7383": 1534, "0237": 1534, "7794": 1534, "0528": 1534, "3385": 1534, "8612": 1534, "1867": 1534, "5384": 1534, "8720": 1534, "6262": 1534, "7471": 1534, "embeddingbag": [1535, 1865, 1930, 1932, 1945], "3397": 1535, "5545": 1535, "5893": 1535, "4386": 1535, "5882": 1535, "featurealphadropout": 1536, "gaussiannllloss": 1540, "border": 1543, "affine_grid": [1543, 1883], "extrema": 1543, "pil": [1543, 1554], "overshoot": [1543, 1554, 1612], "gumbel": [1545, 1880], "y_hard": 1545, "y_soft": 1545, "hardtanh": [1550, 1881, 1883, 1893, 1925, 1932], "hingeembeddingloss": 1551, "use_input_stat": [1553, 1883], "antialia": 1554, "anti": 1554, "pillow": [1554, 1944], "buggi": 1554, "inter_nearest": 1554, "104157": 1554, "kldivloss": 1555, "batchsiz": [1555, 1812, 1813, 1814, 1816, 1817, 1939], "leaky_relu": [1559, 1881, 1883, 1903, 1925, 1932], "localresponsenorm": 1561, "_stacklevel": [1562, 1599, 1600, 1883], "lppool1d": 1564, "lppool2d": 1565, "marginrankingloss": 1566, "max_unpool1d": [1567, 1883], "multimarginloss": 1575, "multilabelmarginloss": 1576, "multilabelsoftmarginloss": 1577, "n_0": 1579, "n_": 1579, "n_k": 1579, "everywher": [1580, 1826, 1926], "constantpad2d": 1581, "reflectionpad2d": [1581, 1865], "replicationpad2d": [1581, 1865], "t4d": 1581, "p1d": 1581, "p2d": 1581, "p3d": 1581, "pixelunshuffl": [1585, 1932], "poissonnllloss": 1586, "rrelu": [1592, 1883, 1925], "dropout_p": [1593, 1883], "masked_fil": [1593, 1883, 1898, 1900, 1925], "ev": 1593, "legend": 1593, "softmarginloss": 1598, "module_kwarg": 1608, "upsample_trilinear": 1613, "fo": 1613, "spatia": 1614, "mixin": [1615, 1880], "dry": 1615, "lazymlp": 1615, "lazylinear": 1615, "lazy_mlp": 1615, "8832e": 1615, "5636e": 1615, "1598e": 1615, "5637e": 1615, "8788e": 1615, "0042e": 1615, "0019": 1615, "lazymodul": 1615, "full_mlp": 1615, "3837": [1615, 1727], "0907": 1615, "6708": 1615, "5223": 1615, "9028": 1615, "2851": 1615, "6813": 1615, "5766": 1615, "8678": 1615, "1320": 1615, "2938": 1615, "0679": [1615, 1856], "2793": [1615, 1672], "1088": 1615, "1795": 1615, "2301": 1615, "2807": 1615, "2479": 1615, "1091": 1615, "has_uninitialized_param": 1615, "initialize_paramet": 1615, "register_backward_pre_hook": 1621, "check_reduct": 1624, "delay_all_reduce_named_param": 1624, "param_to_hook_all_reduc": 1624, "optimizer_param": 1624, "loss_func": [1624, 1935], "consume_prefix_in_state_dict_if_pres": 1624, "nccl2": 1624, "dictat": [1624, 1885], "megabyt": 1624, "mb": [1624, 1908], "detach_": [1624, 1883, 1898, 1932, 1939], "ddp_logging_data": 1624, "can_set_static_graph": 1624, "model_ddp": 1624, "_get_ddp_logging_data": 1624, "divide_by_initial_world_s": 1624, "syncbatchnorm": 1624, "deplet": 1624, "pariti": 1624, "discrep": [1624, 1736, 1913], "another_input": 1624, "predivid": 1624, "encode_and_decod": 1624, "encoded_tensor": 1624, "decoded_tensor": 1624, "error_if_nonfinit": 1628, "foreach": [1628, 1629, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699, 1926], "clip_valu": 1629, "orthogonal_map": 1631, "use_trivi": 1631, "qq": 1631, "matrix_exp": [1631, 1883, 1925], "caylei": 1631, "thin": [1631, 1729], "manifold": 1631, "register_parametr": [1631, 1632, 1633, 1634, 1665, 1901], "orth_linear": 1631, "parametrizedlinear": [1631, 1632], "moduledict": [1631, 1632, 1884, 1916], "parametrizationlist": [1631, 1632, 1636], "_orthogon": 1631, "9332e": 1631, "n_power_iter": [1632, 1665], "sn": [1632, 1665], "discrimin": [1632, 1665], "adversari": [1632, 1665], "lipschitz": 1632, "reimplement": [1632, 1665], "_spectralnorm": 1632, "convtranspos": [1632, 1665], "snm": 1632, "0081": 1632, "amaxbackward0": 1632, "original0": [1633, 1636, 1668], "original1": [1633, 1636, 1668], "tensor_nam": [1633, 1635, 1636, 1637], "right_invers": [1633, 1636], "out_rnn": 1634, "rnn_cell": 1634, "simplic": [1636, 1936], "inbuilt": 1636, "unparametr": 1636, "rankon": 1636, "surject": 1636, "s0_sqrt": 1636, "linear_rank_on": 1636, "matrix_rank": 1636, "leave_parametr": 1637, "unparametris": 1637, "prune": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1939], "skeleton": 1638, "compute_mask": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645], "importance_scor": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1650, 1651], "apply_mask": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645], "pruned_tensor": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645], "default_mask": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645], "_orig": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1651, 1652, 1653, 1654], "undon": [1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1654], "unprun": [1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653], "basepruningmethod": [1643, 1649], "add_pruning_method": 1643, "pruning_typ": [1643, 1647], "unstructur": [1643, 1647], "ravel": [1643, 1883, 1925], "nonmask": 1643, "bias_mask": [1646, 1648], "pruning_method": 1647, "typeerror": [1647, 1910, 1928, 1946, 1950], "parameters_to_prun": 1647, "l1unstructur": 1647, "parameters_to_vector": 1647, "forward_pre_hook": [1649, 1916], "random_unstructur": [1649, 1654], "odict_kei": 1650, "weight_orig": 1650, "weight_mask": [1650, 1653], "columns_prun": 1652, "t_modul": [1655, 1656, 1665, 1668], "weight_norm": 1656, "sorted_indic": [1657, 1659, 1660, 1662], "unsorted_indic": [1657, 1659, 1660, 1662], "abc": [1657, 1885], "axbc": 1657, "throughout": [1657, 1913, 1916, 1930], "conform": [1657, 1916], "is_cuda": [1657, 1898, 1925, 1941], "enforce_sort": [1658, 1659, 1660], "unsort": [1658, 1659, 1765], "shortest": 1658, "uncondition": [1658, 1879, 1910, 1950], "pad_sequ": [1659, 1663, 1883, 1925], "padding_valu": [1660, 1661, 1883], "total_length": [1660, 1912], "seq_unpack": 1660, "lens_unpack": 1660, "packed_sequ": 1662, "unpacked_sequ": 1662, "padded_sequ": 1663, "unpad": 1663, "unstack": 1663, "as_tensor": [1663, 1844, 1883, 1900, 1910, 1925, 1944, 1945, 1946], "unpadded_sequ": 1663, "module_cl": [1664, 1935], "5846e": 1664, "29": [1664, 1794, 1923], "8307e": 1664, "5250e": 1664, "1210e": 1664, "4677e": 1664, "5915e": 1664, "4013e": 1664, "weight_u": 1665, "parameters_and_buff": 1666, "decoupl": [1668, 1687], "weight_g": [1668, 1883], "weight_v": 1668, "1602": 1668, "07868": 1668, "modern": [1668, 1919], "bother": 1668, "102999": 1668, "remove_parametr": 1668, "as_tupl": [1670, 1875], "complexfloat": [1671, 1680], "0425": 1672, "7969": 1672, "2925": 1672, "7229": 1672, "2134": 1672, "0505": 1672, "1408": 1672, "0563": 1672, "0566": 1672, "0732": [1672, 1846], "0687": 1672, "1177": 1672, "2303": 1672, "1552": 1672, "6148": 1672, "6535": 1672, "8318": 1672, "3987": 1672, "9544": [1672, 1737], "6048": 1672, "7909": 1672, "120": [1674, 1944], "model_proto": [1678, 1679], "input_adapt": 1678, "output_adapt": 1678, "diagnostic_context": 1678, "adapt_torch_inputs_to_onnx": 1678, "model_arg": [1678, 1923], "model_kwarg": [1678, 1923], "xdoctest": 1678, "torch_doctest_onnx": 1678, "func_with_nested_input_structur": 1678, "x_dict": 1678, "y_tupl": 1678, "y3": 1678, "export_output": [1678, 1679], "adapt_torch_outputs_to_onnx": 1678, "model_output": 1678, "func_returning_tupl": 1678, "pt_output": 1678, "diagnosticcontext": 1678, "modelproto": [1678, 1679], "protobuf": [1678, 1679, 1923], "exportoutput": [1679, 1923], "bufferediobas": 1679, "protobufexportoutputseri": 1679, "serializetostr": 1679, "exported_model": 1679, "from_valu": 1680, "onnx_typ": 1680, "tensorprotodatatyp": 1680, "torch_c_value_with_type_float": 1680, "from_dtyp": 1680, "jit_type_bas": 1680, "safer": [1680, 1892], "onnxexportererror": [1680, 1923], "symbolicvalueerror": 1680, "onnx_compat": 1680, "scalar_nam": 1680, "complexhalf": 1680, "complexdoubl": 1680, "torch_nam": 1680, "int8_t": 1680, "int64_t": 1680, "int16_t": 1680, "verif": [1681, 1682, 1923], "input_arg": [1681, 1923], "params_dict": 1681, "export_opt": [1681, 1923], "_excluded_node_kind": 1681, "frozenset": [1681, 1885], "scalarimplicit": [1681, 1925], "prim": [1681, 1882, 1923, 1925], "listconstruct": [1681, 1882], "all_mismatch_leaf_graph_info": 1681, "essential_node_count": 1681, "essential_node_kind": 1681, "export_repro": 1681, "repro_dir": 1681, "test_": 1681, "test_data_set_0": 1681, "input_0": [1681, 1923], "pb": [1681, 1923], "input_1": [1681, 1923], "output_0": 1681, "output_1": 1681, "find_mismatch": [1681, 1923], "verificationopt": [1681, 1923], "find_partit": 1681, "has_mismatch": 1681, "pretty_print_mismatch": 1681, "pretty_print_tre": 1681, "graph_info": [1681, 1923], "__2": [1681, 1923], "__1": [1681, 1923], "__3": [1681, 1923], "110": [1681, 1923], "verify_export": 1681, "onnx_graph": 1681, "onnx_out": 1681, "pt_out": 1681, "ignore_non": 1682, "check_shap": 1682, "check_dtyp": [1682, 1946], "onnxbackend": 1682, "onnx_runtime_cpu": 1682, "remained_onnx_input_idx": 1682, "acceptable_error_percentag": 1682, "percentag": [1682, 1711, 1787], "weight_decai": [1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1699, 1916], "1e6": 1683, "impair": [1683, 1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "register_step_post_hook": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700], "removeablehandl": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700], "register_step_pre_hook": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700], "new_arg": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700], "new_kwarg": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1696, 1697, 1698, 1699, 1700], "reevalu": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1694, 1696, 1697, 1698, 1699, 1700, 1926], "altogeth": [1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1695, 1696, 1697, 1698, 1699, 1700], "rho": 1684, "110mm": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "4pt": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "textbf": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "theta_0": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "v_0": [1684, 1686, 1687, 1690, 1696, 1697], "leftarrow": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "u_0": [1684, 1688], "hspace": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "5mm": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "nabla_": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "theta_": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "10mm": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "v_t": [1684, 1686, 1687, 1690, 1696, 1697], "v_": [1684, 1686, 1687, 1690, 1696, 1697, 1699], "2_t": [1684, 1685, 1686, 1687, 1690, 1696, 1697], "21mm": 1684, "u_t": [1684, 1688], "theta_t": [1684, 1685, 1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "lr_decai": 1685, "initial_accumulator_valu": 1685, "12mm": [1685, 1696], "_sum_0": 1685, "tild": [1685, 1697], "_sum_t": 1685, "_sum_": 1685, "subgradi": 1685, "999": [1686, 1687, 1688, 1690, 1696, 1700, 1921, 1926], "amsgrad": [1686, 1687], "beta_1": [1686, 1687, 1688, 1690, 1696], "beta_2": [1686, 1687, 1688, 1690, 1696], "13mm": [1686, 1687, 1688, 1690, 1696, 1697, 1698, 1699], "textit": [1686, 1687, 1699], "m_0": [1686, 1687, 1688, 1690, 1696], "widehat": [1686, 1687, 1690, 1696], "m_t": [1686, 1687, 1688, 1690, 1696], "m_": [1686, 1687, 1688, 1690, 1696, 1939], "ungraph": [1686, 1687], "002": [1688, 1690], "t_1": 1688, "2e": [1688, 1690], "max_it": 1689, "max_ev": 1689, "tolerance_grad": 1689, "tolerance_chang": 1689, "history_s": 1689, "line_search_fn": 1689, "bfg": 1689, "minfunc": 1689, "intens": [1689, 1919], "param_byt": 1689, "strong_wolf": 1689, "momentum_decai": 1690, "004": 1690, "gamma_t": 1690, "psi": [1690, 1940], "mu_t": 1690, "96": 1690, "mu_": 1690, "11mm": 1690, "incorpor": [1690, 1930], "nesterov": [1690, 1699], "4e": 1690, "weightdecai": 1696, "18mm": 1696, "rho_": 1696, "6mm": 1696, "rho_t": 1696, "t_2": 1696, "l_t": 1696, "adamw": [1696, 1926], "_0": [1697, 1911, 1927], "av": 1697, "8mm": 1697, "3mm": 1697, "lectur": 1697, "hinton": 1697, "step_siz": [1698, 1715], "resili": [1698, 1919], "eta_": [1698, 1703, 1704], "etaplu": 1698, "etaminu": 1698, "gamma_": [1698, 1940], "0_": 1698, "eta_0": 1698, "i_": [1698, 1846], "15mm": [1698, 1699], "eta_t": [1698, 1703, 1704], "dampen": 1699, "sutskev": 1699, "veloc": 1699, "conflat": 1700, "is_spars": [1700, 1898, 1925, 1939, 1941], "maskedtensor": [1700, 1939], "rig": 1700, "insist": 1700, "lr_schedul": [1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1926], "chainabl": [1701, 1711], "081": 1701, "729": [1701, 1714], "6561": [1701, 1870], "59049": 1701, "scheduler1": [1701, 1714, 1926], "constantlr": [1701, 1714], "total_it": [1701, 1702, 1708, 1712, 1714], "scheduler2": [1701, 1714, 1926], "exponentiallr": [1701, 1714, 1926], "get_last_lr": [1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715], "print_lr": [1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715], "is_verbos": [1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715], "__dict__": [1701, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715], "last_epoch": [1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715], "mileston": [1702, 1708, 1709, 1714, 1926], "simultan": [1702, 1703, 1708, 1709, 1715, 1905, 1935], "025": [1702, 1708], "t_max": [1703, 1926], "eta_min": [1703, 1704], "anneal": [1703, 1704, 1711, 1926], "cur": [1703, 1704], "sgdr": [1703, 1704], "2k": 1703, "sole": 1703, "t_mult": 1704, "interleav": 1704, "base_lr": [1705, 1711], "max_lr": [1705, 1711], "step_size_up": 1705, "step_size_down": 1705, "scale_fn": 1705, "scale_mod": 1705, "cycle_momentum": [1705, 1711], "base_momentum": [1705, 1711], "max_momentum": [1705, 1711], "cyclic": 1705, "amplitud": [1705, 1711], "triangular2": 1705, "exp_rang": 1705, "bckenstler": 1705, "train_batch": [1705, 1711], "get_lr": 1705, "lr_lambda": [1707, 1710], "lambda1": 1707, "lambda2": 1707, "start_factor": 1708, "end_factor": 1708, "03125": 1708, "0375": 1708, "04375": 1708, "005": [1709, 1715], "lmbda": 1710, "total_step": 1711, "steps_per_epoch": 1711, "pct_start": 1711, "anneal_strategi": [1711, 1926], "div_factor": 1711, "final_div_factor": 1711, "three_phas": 1711, "1cycl": 1711, "fastai": 1711, "unpublish": 1711, "initial_lr": 1711, "min_lr": [1711, 1713], "1e4": 1711, "annihil": 1711, "00075": 1712, "00050": 1712, "00025": 1712, "patienc": 1713, "threshold_mod": 1713, "cooldown": 1713, "stagnat": 1713, "new_lr": 1713, "hasn": [1713, 1895, 1927], "optimum": 1713, "dynamic_threshold": 1713, "val_loss": 1713, "81": 1714, "mn": 1717, "pca": [1719, 1939], "overestim": [1719, 1831], "nathan": [1719, 1831], "halko": [1719, 1831], "gunnar": [1719, 1831], "martinsson": [1719, 1831], "tropp": [1719, 1831], "probabilist": [1719, 1831], "0909": [1719, 1831], "4061": [1719, 1831], "na": [1719, 1831], "cmath": [1723, 1883], "4142j": 1723, "4331": 1726, "2475": [1726, 1829], "6834": 1726, "2791": 1726, "1875": 1726, "5561": 1726, "4670": 1726, "5428": 1727, "5854": 1727, "5261": [1727, 1830], "1857": 1727, "2498": 1727, "1646": [1727, 1908], "0705": 1727, "0629": 1727, "2962": 1727, "0821": [1727, 1787], "1831": 1727, "type1": [1728, 1883], "type2": [1728, 1883], "2117": 1730, "9765": 1730, "1707": 1730, "4884": 1730, "5661": 1730, "5795": 1730, "5280": 1730, "9206": 1730, "quantization_schem": [1731, 1732, 1733, 1734, 1735], "int_repr": [1731, 1732, 1883, 1925], "nchw": [1733, 1944], "qx": [1733, 1734, 1735], "00001": 1733, "max_pool1d": [1734, 1883, 1925, 1932], "max_pool2d": [1735, 1883, 1925, 1932], "quasirandom": 1736, "scrambl": 1736, "sobol": 1736, "quasi": 1736, "21201": 1736, "web": 1736, "unsw": 1736, "au": [1736, 1927], "fkuo": 1736, "art": 1736, "owen": 1736, "niederreit": 1736, "xing": 1736, "466": 1736, "489": 1736, "decemb": 1736, "1998": 1736, "zh": 1736, "vychisl": 1736, "phy": 1736, "784": 1736, "802": 1736, "1967": 1736, "soboleng": 1736, "draw_base2": 1736, "base2": 1736, "fast_forward": 1736, "142": 1737, "283": 1737, "570": 1737, "359": 1737, "9894": 1737, "2503": 1738, "3525": 1738, "5673": 1738, "8237": 1738, "5781": 1738, "6879": 1738, "3816": 1738, "7249": 1738, "0998": 1738, "1436": 1742, "9966": 1742, "3426": 1742, "6366": 1742, "5954": 1742, "8929": 1742, "0923": 1742, "1719": 1742, "4709": 1742, "1996": 1742, "4595": 1748, "4314": 1748, "flat": [1751, 1794, 1883, 1900, 1923, 1939], "n2": 1751, "n3": 1751, "negat": [1754, 1838, 1885], "is_neg": [1754, 1883, 1925], "equidist": 1758, "inexact": 1758, "1234567": 1758, "1230": 1758, "vstack": [1759, 1883, 1925, 1939], "0370": 1760, "2970": 1760, "5420": 1760, "9105": 1760, "8351": 1760, "pickle_protocol": [1761, 1927], "default_protocol": 1761, "_use_new_zipfile_seri": 1761, "zipfil": [1761, 1927], "sorted_sequ": [1765, 1883], "sorter": [1765, 1883], "sorted_sequence_1d": 1765, "select_copi": [1767, 1883, 1925], "slight": [1769, 1939, 1942], "92701": [1769, 1942], "complaint": 1770, "bfloat16_3x": 1773, "denorm": [1774, 1919], "sse3": 1774, "323": 1774, "88131e": 1774, "324": 1774, "is_train": [1775, 1947], "interop": 1776, "intraop": 1777, "edgeitem": 1778, "linewidth": 1778, "sci_mod": 1778, "shamelessli": 1778, "repr": [1778, 1885], "sane": 1778, "_tensor_str": 1778, "_formatt": 1778, "12345": 1778, "1235": 1778, "excess": 1780, "24j": 1781, "8000j": 1781, "9600j": 1781, "4472": [1781, 1916], "8944j": 1781, "expit": [1782, 1940], "2222": [1784, 1844], "4444": 1784, "8889": 1784, "4901e": 1785, "4000e": 1785, "0077e": 1785, "4923e": 1785, "waveform": [1786, 1787, 1788], "1564": 1786, "4540": 1786, "8910": 1786, "9877": 1786, "1423": [1786, 1808], "4154": 1786, "8413": [1786, 1940], "0302": 1787, "2231": 1787, "6065": 1787, "5400e": 1787, "3546e": 1787, "4788e": 1787, "8316e": 1787, "02": [1787, 1788, 1793], "3534e": 1787, "0065e": [1788, 1793], "1875e": [1788, 1793], "3937e": [1788, 1793], "2465e": [1788, 1793], "8250e": [1788, 1793], "9858e": [1788, 1793], "1365e": [1788, 1793], "8659e": [1788, 1793], "4658e": [1788, 1793], "3941e": [1788, 1793], "5400": 1789, "3376": 1789, "4200": 1789, "9136": 1789, "wit": [1789, 1882], "0955": [1789, 1790, 1792], "3455": [1789, 1790, 1792], "6545": [1789, 1790, 1792], "9045": [1789, 1790, 1792], "0800": [1790, 1791], "1876": [1790, 1791], "4601": [1790, 1791], "7700": [1790, 1791], "9723": [1790, 1791], "1679": 1791, "3979": 1791, "6821": 1791, "9121": 1791, "1170": 1792, "9698": 1792, "36358": 1794, "z_n": [1794, 1905], "48917": 1794, "2z_n": 1794, "13659": 1794, "3z_n": 1794, "01064": 1794, "4z_n": 1794, "\u03c0": 1794, "sidelob": 1794, "transact": 1794, "acoust": 1794, "speech": 1794, "84": 1794, "91": 1794, "feb": 1794, "1981": 1794, "tassp": 1794, "1163506": 1794, "heinzel": 1794, "spectrum": [1794, 1919], "dft": 1794, "comprehens": [1794, 1885, 1886, 1899, 1908, 1914, 1930], "februari": 1794, "holomet": 1794, "fnal": 1794, "gov": 1794, "gh_fft": 1794, "nutal": 1794, "general_ham": 1794, "6280e": 1794, "2698e": 1794, "1052e": 1794, "9826e": 1794, "5461": [1796, 1916], "1347": 1796, "7266": 1796, "2746": 1796, "5194": 1796, "1343": 1796, "4032": 1796, "2711": 1796, "5380": 1798, "8632": 1798, "1265": 1798, "9399": 1798, "5644": 1798, "9744": 1798, "1268": 1798, "2162": 1803, "6719": 1803, "3332": 1803, "5793": [1803, 1916], "0061": 1803, "6058": 1803, "9497": 1803, "5071": 1803, "3343": 1803, "9553": 1803, "0960": 1803, "derivati": [1804, 1807], "sparsr": 1805, "run_my_model": 1805, "prev_checks_en": 1805, "check_invari": [1805, 1812, 1813, 1814, 1815, 1816, 1817, 1939], "sparse_csr_tensor": [1805, 1883, 1925, 1939], "z_": [1807, 1905, 1940], "bigoplus_": 1807, "kj": 1807, "bigoplu": 1807, "sparseaddmmbackward0": 1807, "sparsemmreduceimplbackward0": 1807, "sparsiti": [1808, 1880, 1892, 1903], "spy": 1808, "2847": 1808, "7805": 1808, "1900": [1808, 1920], "to_dens": [1808, 1810, 1883, 1925, 1939], "3903": 1808, "x_k": 1809, "6438": 1811, "6467": 1811, "3411": 1811, "0918": 1811, "5348": 1811, "0634": 1811, "0494": 1811, "0646": 1811, "1844": 1811, "1276": 1811, "1874": 1811, "6334": 1811, "9682": 1811, "5340": 1811, "7483": 1811, "4512": 1811, "4073": 1811, "8901": 1811, "3183": 1811, "7539": 1811, "6596": 1811, "ncolblock": [1812, 1939], "array_list": [1812, 1813, 1814, 1816, 1817], "nrow": [1812, 1813, 1814, 1816, 1817, 1939], "ncol": [1812, 1813, 1814, 1816, 1817, 1939], "denses": [1812, 1813, 1814, 1816, 1817, 1939], "check_sparse_tensor_invari": [1812, 1813, 1814, 1815, 1816, 1817, 1939], "nrowblock": [1813, 1939], "compressed_indic": [1814, 1883, 1939], "plain_indic": [1814, 1883, 1939], "compressed_dim_s": [1814, 1939], "rdinat": 1815, "_indic": [1815, 1925, 1939], "0755": [1819, 1820], "0226": [1819, 1820], "0831": [1819, 1820], "4806": [1819, 1820], "0112": 1819, "2883": 1819, "6933": 1819, "0457": 1820, "0069": 1820, "2310": 1820, "2959": [1824, 1825, 1867, 1868], "8101": [1824, 1825, 1867, 1868], "5027": [1824, 1825, 1867, 1868], "3270": [1824, 1825, 1867, 1868], "5905": [1824, 1825, 1867, 1868], "6538": [1824, 1825, 1867, 1868, 1916], "3330": [1824, 1825, 1867, 1868], "5596": [1824, 1825, 1867, 1868], "6548": [1824, 1825, 1867, 1868], "1264": [1824, 1825, 1867, 1868], "5080": [1824, 1825, 1830, 1867, 1868, 1916], "6420": [1824, 1825, 1867, 1868], "1992": [1824, 1825, 1867, 1868], "0311": [1824, 1940], "7477": 1824, "2204": 1824, "9087": 1824, "2620": 1825, "0028": [1825, 1850], "0957": 1825, "6038": 1825, "0645": [1825, 1868], "4485": [1825, 1868], "8707": [1825, 1868], "0665": [1825, 1868], "librosa": 1826, "omega": 1826, "win": [1826, 1905], "_fft": [1826, 1883], "dimnsion": 1826, "1133": 1829, "2958": 1829, "5475": 1829, "0569": 1829, "0737": 1829, "3429": 1829, "9138": 1829, "9337": 1829, "6864": [1829, 1854], "1132": 1829, "7892": 1829, "1003": 1829, "5688": 1829, "3637": 1829, "9906": 1829, "5197": 1829, "4598": 1829, "3708": 1829, "6217": 1829, "435": 1829, "1335": 1829, "3135": 1829, "gesdd": 1830, "conquer": 1830, "gesvdjbatch": 1830, "fortran": 1830, "\u00b9": 1830, "2364": 1830, "7752": 1830, "7201": 1830, "7394": 1830, "0504": 1830, "3371": 1830, "5296": 1830, "3550": 1830, "5569": 1830, "2445": 1830, "1414": 1830, "4027": 1830, "0287": 1830, "5434": 1830, "1946": 1830, "8833": 1830, "3679": 1830, "4296": 1830, "2890": 1830, "6604": 1830, "2717": 1830, "2618": 1830, "4234": 1830, "2481": 1830, "4733": 1830, "3289": [1830, 1921], "0315": 1830, "7806": 1830, "0199": 1830, "8766": 1830, "4809": 1830, "4054": 1830, "7600": 1830, "8611": 1830, "2594": 1830, "4373": 1830, "6531e": 1830, "a_big": 1830, "6503e": 1830, "swapax": [1833, 1883, 1925, 1943], "1995": 1839, "4608": 1839, "7702": 1839, "4875": 1839, "9158": 1839, "5872": 1839, "6929": 1839, "6932": 1839, "take_along_axi": [1841, 1911], "max_idx": 1841, "sorted_idx": 1841, "2027": 1842, "7687": 1842, "4412": 1842, "3856": 1842, "5930": 1842, "9859": 1842, "4722": 1842, "3366": 1842, "8986": 1843, "7279": 1843, "1745": 1843, "7156": 1843, "8257": 1843, "2553": 1843, "11111": 1844, "222222": 1844, "3333333": 1844, "1111": 1844, "array_split": 1845, "i_d": 1846, "k_": 1846, "4532": 1846, "4874": 1846, "5018": 1846, "4796": [1846, 1920], "5162": 1846, "5306": 1846, "2922": 1846, "7556": 1846, "2741": 1846, "3161": 1846, "0704": 1846, "0187": 1846, "4079": 1846, "3126": 1846, "8744": 1846, "8223": 1846, "9445": 1846, "4117": 1846, "7780": 1846, "7193": 1846, "4867": 1846, "3204": 1846, "5513": 1846, "4737": [1846, 1871], "2850": 1846, "2573": 1846, "5997": 1846, "sparsebsr": 1850, "sparsecsc": 1850, "sparsebsc": 1850, "9893": 1850, "5809": 1850, "1669": 1850, "7299": 1850, "4942": [1850, 1916], "y_0": 1851, "y_1": 1851, "x_diff": 1851, "y_diff": 1851, "riemann": [1851, 1905, 1913, 1940], "badli": 1853, "cloned_coeffici": 1853, "1527": 1853, "0753": 1853, "7986": 1853, "0210": 1853, "3513": 1853, "5492": 1853, "7403": 1853, "0243": 1853, "7841": 1853, "9046": 1853, "5405": 1853, "9320": 1853, "9270": 1853, "2826": 1853, "lbrace": [1854, 1855, 1856, 1857], "rbrace": [1854, 1855, 1856, 1857], "0813": 1854, "8619": 1854, "7105": 1854, "0935": 1854, "1380": 1854, "3409": [1854, 1920], "2219": 1854, "5653": 1854, "2521": 1854, "2345": 1854, "2544": 1854, "3461": 1854, "4785": 1854, "4477": 1854, "6049": 1854, "6368": 1854, "8775": 1854, "7145": 1854, "1502": 1854, "2716": 1854, "1243": 1854, "5413": 1854, "3615": 1854, "0614": 1854, "7344": 1854, "3164": 1854, "7648": 1854, "4024": 1854, "0978": 1854, "col": [1855, 1857, 1883], "2309": 1856, "5207": 1856, "0049": 1856, "2072": 1856, "0680": 1856, "6602": 1856, "3480": 1856, "5211": 1856, "4573": 1856, "5876": 1856, "0794": [1856, 1940], "8373": 1856, "6654": 1856, "2604": 1856, "5235": 1856, "2447": 1856, "9556": 1856, "2919": 1856, "1768": 1856, "4333": 1856, "3146": [1856, 1916], "6576": 1856, "0432": 1856, "9348": [1856, 1940], "4410": 1856, "9888": 1856, "3337": 1856, "6556": 1856, "4798": 1856, "5466": 1859, "8008": 1859, "9079": 1859, "unique_consecut": [1862, 1883, 1925], "inverse_indic": [1862, 1863], "warn_onli": 1865, "alon": [1865, 1884, 1927], "put_": [1865, 1883], "index_add": [1865, 1883, 1925], "index_select": [1865, 1881, 1883, 1925, 1939], "fractionalmaxpool2d": 1865, "fractionalmaxpool3d": 1865, "reflectionpad1d": 1865, "reflectionpad3d": 1865, "replicationpad1d": 1865, "replicationpad3d": 1865, "histc": [1865, 1883, 1925], "bincount": [1865, 1883, 1925], "kthvalu": [1865, 1883, 1898, 1925], "cublasapi_reproduc": [1865, 1920], "avg_pool3d_backward_cuda": 1865, "alexandr": 1866, "theophil": 1866, "0631": 1867, "5590": 1867, "4893": 1867, "8258": 1867, "5926": 1868, "0056": 1868, "3646": 1868, "vecdot": 1869, "mi": [1870, 1871], "6116": 1870, "5772": [1870, 1940], "4606": 1870, "9120": 1870, "0786": 1870, "7497": 1870, "6623": 1870, "5772j": 1870, "9120j": 1870, "7497j": 1870, "6623j": 1870, "3839j": 1871, "2098": 1871, "6699j": 1871, "3470": 1871, "9451j": 1871, "5174": 1871, "3136j": 1871, "6699": 1871, "9451": 1871, "3136": 1871, "atleast_2d": [1874, 1883, 1925], "3139": 1875, "3898": 1875, "1657": 1875, "0383": 1875, "8785": 1875, "1089": 1875, "hubconf": 1879, "entrypoint_nam": 1879, "_resnet18": 1879, "underscor": [1879, 1899, 1935, 1945], "load_state_dict_from_url": [1879, 1894], "2gb": 1879, "relative_path_to_checkpoint": 1879, "pth": [1879, 1894, 1921], "dirnam": 1879, "5c106cde": [1879, 1894], "force_reload": 1879, "skip_valid": 1879, "trust_repo": 1879, "repo_own": 1879, "repo_nam": 1879, "torchhub": 1879, "owner": [1879, 1910, 1925, 1935, 1936], "github_token": 1879, "repo_or_dir": 1879, "mute": 1879, "resnet50_weight": 1879, "imagenet1k_v1": 1879, "download_url_to_fil": 1879, "hash_prefix": 1879, "temporary_fil": 1879, "sha256": [1879, 1894], "s3": [1879, 1894, 1922], "amazonaw": [1879, 1894, 1922], "model_dir": [1879, 1894], "check_hash": [1879, 1894], "hub_dir": [1879, 1894], "get_dir": [1879, 1894], "ext": [1879, 1894], "eight": [1879, 1894], "hash": [1879, 1883, 1885, 1894, 1925], "succinct": 1879, "set_dir": 1879, "path_to_hub_dir": 1879, "torch_hom": 1879, "xdg_cache_hom": [1879, 1908], "reiniti": 1879, "path_importer_cach": 1879, "subpackag": [1879, 1927], "classifi": [1880, 1885, 1923, 1926, 1930, 1944], "pypi": 1880, "conda": [1880, 1922], "hip": 1880, "javadoc": 1880, "uninitializedbuff": 1880, "anomali": 1880, "can_device_access_p": 1880, "current_blas_handl": 1880, "device_of": 1880, "get_arch_list": 1880, "get_device_cap": 1880, "get_device_nam": 1880, "get_device_properti": 1880, "get_gencode_flag": 1880, "get_sync_debug_mod": 1880, "ipc_collect": 1880, "memory_usag": 1880, "set_stream": 1880, "set_sync_debug_mod": 1880, "power_draw": 1880, "clock_rat": 1880, "outofmemoryerror": 1880, "jiter": 1880, "sanit": 1880, "get_rng_stat": [1880, 1934], "set_rng_stat": [1880, 1934], "empty_cach": [1880, 1908, 1914], "set_per_process_memory_fract": 1880, "current_allocated_memori": 1880, "driver_allocated_memori": 1880, "pathwis": 1880, "exponentialfamili": 1880, "binomi": [1880, 1883, 1925], "chi2": 1880, "continuousbernoulli": 1880, "dirichlet": 1880, "fishersnedecor": 1880, "halfcauchi": 1880, "halfnorm": 1880, "kumaraswami": 1880, "lkjcholeski": 1880, "laplac": 1880, "lognorm": 1880, "lowrankmultivariatenorm": 1880, "mixturesamefamili": 1880, "multinomi": [1880, 1883, 1925], "multivariatenorm": 1880, "negativebinomi": 1880, "onehotcategor": 1880, "relaxedbernoulli": 1880, "logitrelaxedbernoulli": 1880, "relaxedonehotcategor": 1880, "studentt": 1880, "transformeddistribut": 1880, "vonmis": 1880, "weibul": 1880, "wishart": 1880, "solver": [1880, 1919], "misc": 1880, "normal_": [1880, 1883, 1898, 1903, 1908, 1947], "constant_": [1880, 1903], "ones_": [1880, 1903], "zeros_": [1880, 1903], "eye_": [1880, 1887, 1903], "dirac_": [1880, 1887, 1903], "xavier_uniform_": [1880, 1903], "xavier_normal_": [1880, 1903, 1916], "kaiming_uniform_": [1880, 1903], "trunc_normal_": [1880, 1903], "orthogonal_": [1880, 1887, 1903, 1916], "sparse_": [1880, 1903], "alexnet": 1880, "preview": 1880, "swa": 1880, "ema": 1880, "powersgd": 1880, "remotemodul": 1880, "fork_rng": [1880, 1934], "doublestorag": [1880, 1941], "floatstorag": [1880, 1941], "halfstorag": [1880, 1941], "longstorag": [1880, 1941], "intstorag": [1880, 1941], "shortstorag": [1880, 1941], "charstorag": [1880, 1941], "bytestorag": [1880, 1941], "boolstorag": [1880, 1941], "bfloat16storag": [1880, 1941], "complexdoublestorag": [1880, 1941], "complexfloatstorag": [1880, 1941], "quint8storag": [1880, 1941], "qint8storag": [1880, 1941], "qint32storag": [1880, 1941], "quint4x2storag": [1880, 1941], "quint2x4storag": [1880, 1941], "make_tensor": [1880, 1946], "assert_allclos": [1880, 1946], "sampler": 1880, "mobile_optim": 1880, "optimize_for_mobil": [1880, 1893], "model_zoo": 1880, "load_url": [1880, 1894], "tensorboard": [1880, 1895, 1929], "summarywrit": [1880, 1895, 1944], "iinfo": 1880, "__config__": [1880, 1907], "torchdata": 1880, "torchserv": 1880, "torchtext": 1880, "_out": [1881, 1903, 1913], "_adaptive_avg_pool2d": [1881, 1925], "_adaptive_avg_pool2d_backward": 1881, "_log_softmax": [1881, 1925], "half_to_float": 1881, "_native_batch_norm_legit": [1881, 1925], "no_stat": 1881, "_softmax": [1881, 1925, 1940], "_to_copi": [1881, 1925], "scalartyp": 1881, "memoryformat": 1881, "start_step": 1881, "avg_pool2d": [1881, 1883, 1925, 1932], "avg_pool2d_backward": 1881, "constant_pad_nd": [1881, 1883, 1925], "convolution_backward": 1881, "bias_siz": 1881, "output_mask": 1881, "embedding_dense_backward": 1881, "num_weight": 1881, "interpolation_mod": [1881, 1883], "isinf": [1881, 1883, 1925, 1939], "max_pool2d_with_indic": [1881, 1883, 1925], "max_pool2d_with_indices_backward": 1881, "max_pool3d_with_indic": [1881, 1883, 1925], "native_batch_norm": [1881, 1883, 1925], "native_dropout": [1881, 1883, 1925], "native_group_norm": [1881, 1883, 1925], "hxw": [1881, 1883], "native_group_norm_backward": 1881, "rstd": 1881, "native_layer_norm": [1881, 1883, 1925], "native_layer_norm_backward": 1881, "tensor_scalar": 1881, "tensor_tensor": 1881, "slice_scatt": [1881, 1883, 1925], "dim_intlist": 1881, "sym_numel": [1881, 1925], "sym_storage_offset": [1881, 1925], "sym_strid": [1881, 1925], "upsample_bilinear2d": [1881, 1883, 1925], "upsample_nearest2d": [1881, 1883, 1925], "convert_element_typ": [1881, 1925], "broadcast_in_dim": [1881, 1925], "bessel_i0": [1881, 1925], "bessel_i1": [1881, 1925], "bessel_j0": [1881, 1925, 1940], "bessel_j1": [1881, 1925, 1940], "cbrt": [1881, 1925], "erf_inv": [1881, 1925], "erfcx": [1881, 1925, 1940], "exp2": [1881, 1883, 1925, 1940, 1944], "isfinit": [1881, 1883, 1919, 1925], "ndtri": [1881, 1925, 1940], "spherical_bessel_j0": [1881, 1925, 1940], "fmax": [1881, 1883, 1925], "fmin": [1881, 1883, 1925], "shift_left": [1881, 1925], "shift_right_arithmet": [1881, 1925], "zeta": [1881, 1908, 1925, 1940], "broadcast_dimens": 1881, "collapse_view": [1881, 1925], "start_indic": 1881, "limit_indic": 1881, "slice_in_dim": [1881, 1925], "start_index": 1881, "limit_index": 1881, "split_dim": [1881, 1925], "outer_length": 1881, "view_of": [1881, 1925], "as_strided_scatt": [1881, 1883, 1925], "collaps": [1881, 1898, 1925], "rev": [1881, 1925], "device_put": [1881, 1925], "maximum_valu": [1881, 1925], "minimum_valu": [1881, 1925], "copy_strid": [1881, 1925], "copy_to": [1881, 1925], "xor_sum": [1881, 1925], "empty_permut": [1881, 1883, 1925], "physical_layout": [1881, 1883], "iota": [1881, 1925], "fft_r2c": [1881, 1925], "fft_c2c": [1881, 1925], "fft_c2r": [1881, 1925], "disadvantag": 1882, "gentl": 1882, "beam": 1882, "traced_bar": 1882, "myscriptmodul": 1882, "103": [1882, 1884], "939": [1882, 1884], "116": [1882, 1884], "779": [1882, 1884], "123": [1882, 1884], "my_script_modul": [1882, 1884], "ins": 1882, "pytorch_jit": 1882, "traced_fn": 1882, "disable_jit_exampl": 1882, "printer": 1882, "rv": 1882, "rv0": 1882, "rv1": 1882, "ssa": 1882, "block0": 1882, "block1": 1882, "loop_in_traced_fn": 1882, "input_tupl": 1882, "fill_row_zero": 1882, "tracerwarn": 1882, "disjoint": 1882, "nr": 1882, "09115803241729736": 1882, "6782537698745728": 1882, "cpu_model": 1882, "gpu_model": 1882, "sample_input_cpu": 1882, "sample_input_gpu": 1882, "traced_cpu": 1882, "traced_gpu": 1882, "use_gpu": 1882, "__constants__": [1882, 1884], "my_module_inst": 1882, "redeclar": 1882, "nn_module_inst": 1882, "my_scripted_model": 1882, "526": [1882, 1884, 1923], "script_method": 1882, "implicitly_compiled_method": 1882, "another_forward": 1882, "unused_method": 1882, "some_fn": 1882, "ever": [1882, 1941], "some_fn2": 1882, "some_fn3": 1882, "some_fn4": 1882, "my_dict": [1882, 1884], "my_int": [1882, 1884], "my_const": 1882, "make_dict": 1882, "nnc": 1882, "__and__": 1883, "__iand__": 1883, "__ilshift__": 1883, "__ior__": 1883, "__irshift__": 1883, "__ixor__": 1883, "__lshift__": 1883, "__or__": 1883, "__rshift__": 1883, "__xor__": 1883, "absolute_": 1883, "acos_": [1883, 1898], "addbmm_": 1883, "addcdiv_": 1883, "addcmul_": 1883, "addmv_": [1883, 1898], "addr_": 1883, "align_a": [1883, 1898, 1899, 1925], "align_to": [1883, 1898, 1899, 1925], "ellipsis_idx": 1883, "aminmax": [1883, 1925], "arccos_": 1883, "arccosh_": 1883, "arcsin_": [1883, 1939], "arcsinh_": 1883, "arctan2_": 1883, "arctan_": 1883, "arctanh_": 1883, "argwher": [1883, 1925], "as_strided_": 1883, "asin_": [1883, 1898, 1939], "asinh_": [1883, 1898], "atan_": [1883, 1898], "atanh_": [1883, 1898], "baddbmm_": 1883, "bernoulli_": [1883, 1898, 1947], "bitwise_and_": 1883, "bitwise_left_shift_": 1883, "bitwise_not_": [1883, 1898], "bitwise_or_": 1883, "bitwise_right_shift_": 1883, "bitwise_xor_": 1883, "broadcast_to": [1883, 1925], "cauchy_": [1883, 1898, 1947], "ceil_": [1883, 1898], "clamp_max": [1883, 1925], "clamp_max_": 1883, "clamp_min": [1883, 1925], "clamp_min_": 1883, "clip_": 1883, "conj_physical_": 1883, "copysign_": 1883, "cos_": [1883, 1898, 1905], "cosh_": [1883, 1898], "count_nonzero": [1883, 1925], "cummax": [1883, 1925], "cummin": [1883, 1925], "cumprod_": 1883, "cumsum_": 1883, "deg2rad": [1883, 1898, 1925, 1939], "deg2rad_": [1883, 1898, 1939], "outdim": 1883, "diagonal_scatt": [1883, 1925], "digamma_": [1883, 1898], "div_": [1883, 1898, 1939], "divide_": 1883, "dsplit": [1883, 1925], "eq_": 1883, "erf_": [1883, 1898], "erfc_": [1883, 1898], "erfinv_": [1883, 1898], "exp2_": 1883, "exp_": [1883, 1898], "expm1_": [1883, 1898], "exponential_": [1883, 1898, 1947], "fill_diagonal_": 1883, "fix_": 1883, "fliplr": [1883, 1925], "flipud": [1883, 1925], "float_power_": 1883, "floor_": [1883, 1898], "floor_divide_": [1883, 1939], "fmod_": 1883, "frac_": [1883, 1898], "frexp": [1883, 1925], "gcd_": 1883, "ge_": 1883, "geometric_": [1883, 1947], "ger": [1883, 1925], "get_devic": [1883, 1898, 1925, 1939, 1941, 1942], "greater_": 1883, "greater_equal_": 1883, "gt_": 1883, "hardshrink": [1883, 1925], "heavisid": [1883, 1925], "heaviside_": 1883, "hsplit": [1883, 1925, 1943], "hypot_": 1883, "i0_": 1883, "igamma_": 1883, "igammac_": 1883, "index_fil": [1883, 1898, 1925], "index_reduc": [1883, 1925], "is_coalesc": [1883, 1925, 1939], "is_complex": [1883, 1925, 1939, 1942], "is_contigu": [1883, 1898, 1925, 1943], "is_floating_point": [1883, 1898, 1925, 1939, 1942], "is_infer": [1883, 1925], "is_same_s": [1883, 1925, 1939], "is_set_to": [1883, 1925], "is_sign": [1883, 1898, 1925, 1939], "isclos": [1883, 1925], "isneginf": [1883, 1925, 1939], "isposinf": [1883, 1925, 1939], "isreal": [1883, 1925], "istft": [1883, 1925], "kron": [1883, 1925], "lcm_": 1883, "ldexp_": 1883, "le_": 1883, "lerp_": 1883, "less_": 1883, "less_equal_": 1883, "lgamma_": 1883, "log10_": [1883, 1898], "log1p_": [1883, 1898, 1939], "log2_": [1883, 1898], "log_normal_": [1883, 1898, 1947], "logaddexp2": [1883, 1925], "logcumsumexp": [1883, 1925], "logical_and_": 1883, "logical_not_": [1883, 1898], "logical_or_": 1883, "logical_xor_": 1883, "logit_": 1883, "lt_": 1883, "masked_scatt": [1883, 1925], "masked_select": [1883, 1898, 1925], "matrix_pow": [1883, 1925], "moveaxi": [1883, 1925], "msort": [1883, 1925], "multiply_": 1883, "mvlgamma_": 1883, "nan_to_num_": 1883, "nanmedian": [1883, 1898, 1925], "nansum": [1883, 1925], "narrow_copi": [1883, 1925, 1939], "ne_": 1883, "neg_": [1883, 1898, 1939], "negative_": [1883, 1939], "new_empty_strid": [1883, 1925], "new_ful": [1883, 1908, 1925], "new_on": [1883, 1925], "nextafter_": 1883, "nonzero_stat": [1883, 1925], "not_equal_": 1883, "output_nr": [1883, 1925], "polygamma_": 1883, "pow_": [1883, 1898], "q_per_channel_scal": [1883, 1925], "q_per_channel_zero_point": [1883, 1925], "q_scale": [1883, 1925], "q_zero_point": [1883, 1925], "rad2deg": [1883, 1898, 1925, 1939], "rad2deg_": [1883, 1898, 1939], "reciprocal_": [1883, 1898], "record_stream": [1883, 1908, 1925], "refine_nam": [1883, 1898, 1899, 1925], "relu_": [1883, 1932], "remainder_": 1883, "rename_": [1883, 1898, 1899], "renorm_": 1883, "reshape_a": [1883, 1900, 1925, 1943], "resize_a": [1883, 1925], "the_templ": 1883, "resize_as_sparse_": 1883, "retains_grad": [1883, 1925], "roll": [1883, 1925], "rot90": [1883, 1925], "round_": [1883, 1898], "rsqrt_": [1883, 1898], "select_scatt": [1883, 1925], "sgn_": [1883, 1898], "sigmoid_": [1883, 1898, 1932], "sign_": [1883, 1898], "sinc_": 1883, "sinh_": [1883, 1898], "smm": [1883, 1925, 1939], "sparse_resize_": 1883, "sparse_resize_and_clear_": 1883, "split_with_s": [1883, 1925, 1943], "sqrt_": [1883, 1898], "square_": 1883, "squeeze_": [1883, 1932], "sspaddmm": [1883, 1925, 1939], "sub_": [1883, 1898, 1939], "subtract_": 1883, "sum_to_s": [1883, 1925], "swapaxes_": 1883, "swapdim": [1883, 1925, 1943], "swapdims_": 1883, "take_along_dim": [1883, 1925], "tan_": [1883, 1898], "tanh_": [1883, 1898, 1932], "tensor_indices_or_sect": 1883, "to_mkldnn": [1883, 1925], "to_padded_tensor": [1883, 1900, 1925], "to_sparse_bsc": [1883, 1925], "to_sparse_bsr": [1883, 1925, 1939], "to_sparse_csc": [1883, 1925, 1939], "true_divide_": 1883, "trunc_": [1883, 1898], "type_a": [1883, 1898, 1925], "out0": [1883, 1921], "unsafe_chunk": [1883, 1925], "unsafe_split": [1883, 1925], "unsafe_split_with_s": [1883, 1925], "unsqueeze_": [1883, 1932], "view_a": [1883, 1925, 1943], "vsplit": [1883, 1925, 1943], "xlogy_": 1883, "adaptive_avg_pool2d": [1883, 1910, 1925, 1932], "adaptive_max_pool1d_with_indic": [1883, 1910], "adaptive_max_pool2d_with_indic": 1883, "adaptive_max_pool3d_with_indic": 1883, "alpha_dropout": [1883, 1925], "assert_int_or_pair": 1883, "arg_nam": 1883, "binary_cross_entropi": [1883, 1925], "binary_cross_entropy_with_logit": [1883, 1925], "celu": [1883, 1925], "dropout2d": 1883, "dropout3d": 1883, "feature_alpha_dropout": [1883, 1925], "fractional_max_pool2d_with_indic": 1883, "fractional_max_pool3d_with_indic": 1883, "gaussian_nll_loss": 1883, "glu": [1883, 1925], "gumbel_softmax": 1883, "hardsigmoid": [1883, 1925, 1932], "hardswish": [1883, 1925, 1932], "huber_loss": [1883, 1925], "instance_norm": [1883, 1925, 1932], "local_response_norm": 1883, "lp_pool1d": 1883, "lp_pool2d": 1883, "max_pool1d_with_indic": [1883, 1925], "mish": [1883, 1925], "multi_head_attention_forward": 1883, "embed_dim_to_check": 1883, "in_proj_weight": 1883, "in_proj_bia": 1883, "bias_k": 1883, "bias_v": 1883, "out_proj_weight": 1883, "out_proj_bia": 1883, "use_separate_proj_weight": 1883, "q_proj_weight": 1883, "k_proj_weight": 1883, "v_proj_weight": 1883, "static_k": 1883, "static_v": 1883, "multilabel_soft_margin_loss": 1883, "relu6": [1883, 1925, 1932], "silu": [1883, 1900, 1925], "softsign": 1883, "tanhshrink": 1883, "adaptive_avg_pool1d": [1883, 1910, 1925, 1932], "adaptive_max_pool1d": [1883, 1910, 1925], "affine_grid_gener": [1883, 1925], "alias_copi": [1883, 1925], "align_tensor": [1883, 1925], "alpha_dropout_": 1883, "as_strided_copi": [1883, 1925], "atleast_1d": [1883, 1925], "avg_pool1d": [1883, 1925, 1932], "bartlett_window": [1883, 1887, 1925], "cudnn_en": 1883, "batch_norm_backward_elemt": 1883, "invstd": 1883, "mean_di": 1883, "mean_dy_xmu": 1883, "batch_norm_backward_reduc": 1883, "input_g": 1883, "bias_g": 1883, "out3": 1883, "batch_norm_elemt": [1883, 1925], "batch_norm_gather_stat": [1883, 1925], "batch_norm_gather_stats_with_count": [1883, 1925], "batch_norm_stat": [1883, 1925], "batch_norm_update_stat": [1883, 1925], "blackman_window": [1883, 1887, 1925], "block_diag": [1883, 1925], "can_cast": [1883, 1925], "ccol_indices_copi": [1883, 1925], "celu_": 1883, "choose_qparams_optim": [1883, 1925], "n_bin": 1883, "bit_width": 1883, "col_indices_copi": [1883, 1925], "column_stack": [1883, 1925], "conv_tbc": [1883, 1925], "crow_indices_copi": [1883, 1925], "cudnn_affine_grid_gener": [1883, 1925], "cudnn_batch_norm": [1883, 1925], "exponential_average_factor": 1883, "cudnn_convolut": [1883, 1925], "cudnn_convolution_add_relu": [1883, 1925], "cudnn_convolution_relu": [1883, 1925], "cudnn_convolution_transpos": [1883, 1925], "cudnn_grid_sampl": [1883, 1925], "cudnn_is_accept": [1883, 1925], "cumulative_trapezoid": [1883, 1925], "diagonal_copi": [1883, 1925], "dropout_": [1883, 1893], "embedding_renorm_": 1883, "empty_quant": [1883, 1925], "anyenumtyp": 1883, "expand_copi": [1883, 1925], "fake_quantize_per_channel_affin": [1883, 1925], "fbgemm_linear_fp16_weight": [1883, 1925], "packed_weight": 1883, "fbgemm_linear_fp16_weight_fp32_activ": [1883, 1925], "fbgemm_linear_int8_weight": [1883, 1925], "col_offset": 1883, "weight_scal": 1883, "weight_zero_point": 1883, "fbgemm_linear_int8_weight_fp32_activ": [1883, 1925], "fbgemm_linear_quantize_weight": [1883, 1925], "fbgemm_pack_gemm_matrix_fp16": [1883, 1925], "fbgemm_pack_quantized_matrix": [1883, 1925], "feature_alpha_dropout_": 1883, "feature_dropout": [1883, 1925], "feature_dropout_": 1883, "frobenius_norm": [1883, 1925], "from_fil": [1883, 1925, 1941], "fused_moving_avg_obs_fake_qu": [1883, 1925], "observer_on": 1883, "fake_quant_on": 1883, "running_min": 1883, "running_max": 1883, "per_row_fake_qu": 1883, "symmetric_qu": 1883, "has_bias": 1883, "gru_cel": [1883, 1925], "w_ih": 1883, "w_hh": 1883, "hamming_window": [1883, 1887, 1925], "histogramdd": [1883, 1925], "hspmm": [1883, 1925, 1939], "indices_copi": [1883, 1925], "is_autocast_cpu_en": [1883, 1925], "is_autocast_en": [1883, 1925], "is_grad_en": [1883, 1925], "is_vulkan_avail": [1883, 1925], "isin": [1883, 1925], "kaiser_window": [1883, 1925], "lstm_cell": [1883, 1925], "meshgrid": [1883, 1925], "miopen_batch_norm": [1883, 1925], "miopen_convolut": [1883, 1925], "miopen_convolution_add_relu": [1883, 1925], "miopen_convolution_relu": [1883, 1925], "miopen_convolution_transpos": [1883, 1925], "miopen_depthwise_convolut": [1883, 1925], "miopen_rnn": [1883, 1925], "weight_stride0": 1883, "dropout_st": 1883, "out4": 1883, "mkldnn_adaptive_avg_pool2d": [1883, 1925], "mkldnn_convolut": [1883, 1925], "mkldnn_linear_backward_weight": 1883, "bias_defin": 1883, "mkldnn_max_pool2d": [1883, 1925], "mkldnn_max_pool3d": [1883, 1925], "mkldnn_rnn_layer": [1883, 1925], "weight0": 1883, "weight1": 1883, "weight2": 1883, "weight3": 1883, "hx_": 1883, "cx_": 1883, "save_mean": 1883, "save_invstd": 1883, "native_channel_shuffl": [1883, 1925], "native_norm": [1883, 1925, 1939], "norm_except_dim": [1883, 1925], "nuclear_norm": [1883, 1925], "pairwise_dist": [1883, 1925], "permute_copi": [1883, 1925], "promote_typ": [1883, 1925, 1946], "quantize_per_channel": [1883, 1925, 1930], "quantize_per_tensor_dynam": [1883, 1925, 1930], "quantized_batch_norm": [1883, 1925], "quantized_gru_cel": [1883, 1925], "packed_ih": 1883, "packed_hh": 1883, "col_offsets_ih": 1883, "col_offsets_hh": 1883, "scale_ih": 1883, "scale_hh": 1883, "zero_point_ih": 1883, "zero_point_hh": 1883, "quantized_lstm_cel": [1883, 1925], "quantized_max_pool1d": [1883, 1925], "quantized_max_pool2d": [1883, 1925], "quantized_max_pool3d": [1883, 1925], "quantized_rnn_relu_cel": [1883, 1925], "quantized_rnn_tanh_cel": [1883, 1925], "randint_lik": [1883, 1887, 1925, 1947], "randn_lik": [1883, 1887, 1900, 1925, 1947], "randperm": [1883, 1887, 1925, 1947], "result_typ": [1883, 1925], "scalar1": 1883, "scalar2": 1883, "rnn_relu": [1883, 1925], "rnn_relu_cel": [1883, 1925], "rnn_tanh": [1883, 1925], "rnn_tanh_cel": [1883, 1925], "row_indices_copi": [1883, 1925], "row_stack": [1883, 1925], "rrelu_": 1883, "rsub": [1883, 1925], "searchsort": [1883, 1925], "segment_reduc": [1883, 1925], "selu_": 1883, "slice_copi": [1883, 1925], "sparse_bsc_tensor": [1883, 1925, 1939], "sparse_bsr_tensor": [1883, 1925, 1939], "sparse_compressed_tensor": [1883, 1925, 1939], "sparse_csc_tensor": [1883, 1925, 1939], "split_copi": [1883, 1925], "split_with_sizes_copi": [1883, 1925], "squeeze_copi": [1883, 1925], "std_mean": [1883, 1898, 1925], "sym_constrain_rang": [1883, 1925], "t_copi": [1883, 1925], "threshold_": 1883, "transpose_copi": [1883, 1925], "trapz": [1883, 1925], "tril_indic": [1883, 1887, 1925], "triu_indic": [1883, 1887, 1925], "unbind_copi": [1883, 1925], "unfold_copi": [1883, 1925], "unsqueeze_copi": [1883, 1925], "values_copi": [1883, 1925], "vander": [1883, 1887, 1925], "var_mean": [1883, 1898, 1925], "view_as_complex_copi": [1883, 1925], "view_as_real_copi": [1883, 1925], "_nn": 1883, "adaptive_max_pool2d": [1883, 1925], "conv_depthwise3d": [1883, 1925], "cross_entropy_loss": [1883, 1925], "input_scal": 1883, "elu_": 1883, "flatten_dense_tensor": [1883, 1925], "random_sampl": 1883, "gelu_": 1883, "hardsigmoid_": [1883, 1932], "hardswish_": 1883, "hardtanh_": [1883, 1932], "leaky_relu_": 1883, "log_sigmoid": [1883, 1925], "mish_": 1883, "mkldnn_linear": [1883, 1925], "mkldnn_reorder_conv2d_weight": [1883, 1925], "mkldnn_reorder_conv3d_weight": [1883, 1925], "nll_loss2d": [1883, 1925], "nll_loss_nd": [1883, 1925], "reflection_pad3d": [1883, 1925], "relu6_": 1883, "rrelu_with_nois": [1883, 1925], "rrelu_with_noise_": 1883, "silu_": 1883, "slow_conv3d": [1883, 1925], "slow_conv_dilated2d": [1883, 1925], "slow_conv_dilated3d": [1883, 1925], "slow_conv_transpose2d": [1883, 1925], "slow_conv_transpose3d": [1883, 1925], "softshrink": [1883, 1925], "thnn_conv2d": [1883, 1925], "unflatten_dense_tensor": [1883, 1925], "upsample_bicubic2d": [1883, 1925], "scales_h": 1883, "scales_w": 1883, "upsample_linear1d": [1883, 1925], "upsample_nearest1d": [1883, 1925], "upsample_nearest3d": [1883, 1925], "scales_d": 1883, "upsample_trilinear3d": [1883, 1925], "fft_fftfreq": [1883, 1925], "fft_fftshift": [1883, 1925], "fft_hfft2": [1883, 1925], "fft_hfftn": [1883, 1925], "fft_ifftshift": [1883, 1925], "fft_ihfft2": [1883, 1925], "fft_ihfftn": [1883, 1925], "fft_rfftfreq": [1883, 1925], "_linalg": 1883, "linalg_cross": [1883, 1925], "linalg_det": [1883, 1925], "linalg_diagon": [1883, 1925], "eigvec": 1883, "linalg_ldl_factor": [1883, 1925], "linalg_ldl_factor_ex": [1883, 1925], "linalg_ldl_solv": [1883, 1925], "linalg_lu": [1883, 1925], "linalg_lu_factor": [1883, 1925], "linalg_lu_factor_ex": [1883, 1925], "linalg_lu_solv": [1883, 1925], "linalg_matmul": [1883, 1925], "linalg_matrix_exp": [1883, 1925], "linalg_matrix_pow": [1883, 1925], "linalg_multi_dot": [1883, 1925], "linalg_norm": [1883, 1925], "linalg_pinv": [1883, 1925], "linalg_solve_ex": [1883, 1925], "linalg_solve_triangular": [1883, 1925], "linalg_vand": [1883, 1925], "linalg_vecdot": [1883, 1925], "linalg_vector_norm": [1883, 1925], "_nest": 1883, "nested_to_padded_tensor": [1883, 1925], "_spars": 1883, "sparse_sampled_addmm": [1883, 1925], "_special": 1883, "special_airy_ai": [1883, 1925], "special_bessel_j0": [1883, 1925], "special_bessel_j1": [1883, 1925], "special_bessel_y0": [1883, 1925], "special_bessel_y1": [1883, 1925], "special_chebyshev_polynomial_t": [1883, 1925], "special_chebyshev_polynomial_u": [1883, 1925], "special_chebyshev_polynomial_v": [1883, 1925], "special_chebyshev_polynomial_w": [1883, 1925], "special_digamma": [1883, 1925], "special_entr": [1883, 1925], "special_erf": [1883, 1925], "special_erfc": [1883, 1925], "special_erfcx": [1883, 1925], "special_erfinv": [1883, 1925], "special_exp2": [1883, 1925], "special_expit": [1883, 1925], "special_expm1": [1883, 1925], "special_gammainc": [1883, 1925], "special_gammaincc": [1883, 1925], "special_gammaln": [1883, 1925], "special_hermite_polynomial_h": [1883, 1925], "special_i0": [1883, 1925], "special_i1": [1883, 1925], "special_laguerre_polynomial_l": [1883, 1925], "special_legendre_polynomial_p": [1883, 1925], "special_log1p": [1883, 1925], "special_log_ndtr": [1883, 1925], "special_log_softmax": [1883, 1925], "special_logit": [1883, 1925], "special_logsumexp": [1883, 1925], "special_modified_bessel_i0": [1883, 1925], "special_modified_bessel_i1": [1883, 1925], "special_modified_bessel_k0": [1883, 1925], "special_modified_bessel_k1": [1883, 1925], "special_multigammaln": [1883, 1925], "special_ndtr": [1883, 1925], "special_ndtri": [1883, 1925], "special_polygamma": [1883, 1925], "special_psi": [1883, 1925], "special_round": [1883, 1925], "special_scaled_modified_bessel_k0": [1883, 1925], "special_scaled_modified_bessel_k1": [1883, 1925], "special_shifted_chebyshev_polynomial_t": [1883, 1925], "special_shifted_chebyshev_polynomial_u": [1883, 1925], "special_shifted_chebyshev_polynomial_v": [1883, 1925], "special_shifted_chebyshev_polynomial_w": [1883, 1925], "special_sinc": [1883, 1925], "special_softmax": [1883, 1925], "special_spherical_bessel_j0": [1883, 1925], "special_xlog1pi": [1883, 1925], "special_xlogi": [1883, 1925], "special_zeta": [1883, 1925], "tval": 1883, "is_accept": 1883, "rect": 1883, "__complex__": 1883, "__float__": 1883, "__int__": 1883, "hex": [1883, 1885, 1925], "__hex__": 1883, "oct": [1883, 1925], "__oct__": 1883, "divmod": [1883, 1885, 1925], "chr": [1883, 1885, 1925], "int_float": 1883, "float_int": 1883, "fab": [1883, 1925], "int_int": 1883, "float_float": 1883, "complex_complex": 1883, "int_complex": 1883, "complex_int": 1883, "float_complex": 1883, "complex_float": [1883, 1941], "scalar_scalar": 1883, "int_to_int": 1883, "modf": [1883, 1925], "mathremaind": [1883, 1925], "programm": [1884, 1885], "tn": 1884, "subtyp": 1884, "an_error": 1884, "noreturn": [1884, 1885], "classvar": [1884, 1885], "anystr": [1884, 1885], "nomin": 1884, "newtyp": [1884, 1885], "tup": [1884, 1885], "emptydatastructur": 1884, "my_list": 1884, "aug_add_x": 1884, "inc": [1884, 1885], "assign_x": [1884, 1885], "polymorph": 1884, "sum_pair": 1884, "red": [1884, 1885], "enum_fn": [1884, 1885], "my_variable_nam": 1884, "top_level_method": 1884, "other_help": 1884, "ten": [1884, 1944], "my_paramet": 1884, "my_submodul": 1884, "tuple_or_list": 1884, "a_tupl": 1884, "de": [1884, 1927, 1930], "is_script": [1884, 1885, 1925], "unsupported_linear_op": 1884, "is_trac": [1884, 1885], "univers": 1884, "typing_extens": 1884, "a_dict": 1884, "some_dict": 1884, "delimit": [1885, 1886], "tstype": 1885, "tsmoduletyp": 1885, "tsalltyp": 1885, "tsmetatyp": 1885, "tsprimitivetyp": 1885, "tsstructuraltyp": 1885, "tsnominaltyp": 1885, "myclass": [1885, 1927], "printabl": [1885, 1927], "sortabl": 1885, "nevertheless": [1885, 1937], "inc_first_el": 1885, "cpufloattyp": 1885, "tstupl": 1885, "tsnamedtupl": 1885, "tslist": 1885, "tsdict": 1885, "tsoption": 1885, "tsunion": 1885, "tsfutur": 1885, "tsrref": 1885, "tsawait": 1885, "await": [1885, 1886, 1935], "keytyp": 1885, "_await": 1885, "mytupl": 1885, "scripted_inc": 1885, "_annotatednamedtupl": 1885, "_namedtupleannot": 1885, "_unannotatednamedtupl": 1885, "nameerror": 1885, "remedi": 1885, "tsbuiltinclass": 1885, "tscustomclass": 1885, "tsenum": 1885, "tstensor": 1885, "subtensor": [1885, 1910, 1950], "subwithtorchfunct": 1885, "script_g": 1885, "tsclassdef": 1885, "methoddefinit": 1885, "__torch__": [1885, 1923], "class2": 1885, "tsenumdef": 1885, "tsenumtyp": 1885, "memberidentifi": 1885, "intenum": 1885, "intflag": 1885, "basecolor": 1885, "compli": [1885, 1927], "classbodydefinit": 1885, "moduleobj": 1885, "testmodul": 1885, "mymodel": [1885, 1904, 1918], "dosometh": 1885, "strateg": 1885, "congruent": 1885, "python3": 1885, "unannot": 1885, "python3annot": 1885, "paramannot": 1885, "returnannot": 1885, "funcormethodbodi": 1885, "mypyannot": 1885, "localvarannot": 1885, "setval": 1885, "moduletyp": [1885, 1927], "classidentifi": 1885, "instanceattridentifi": 1885, "offset_": 1885, "tsstructualtyp": 1885, "grammar": 1885, "chapter": [1885, 1913], "floattyp": 1885, "inttyp": 1885, "stringtyp": 1885, "devicetyp": 1885, "bullet": 1885, "tupletyp": 1885, "listtyp": 1885, "enclosur": 1885, "parenth_form": 1885, "list_displai": 1885, "dict_displai": 1885, "legal": 1885, "stringliter": 1885, "floatnumb": 1885, "expression_list": 1885, "list_comprehens": 1885, "comp_for": 1885, "target_list": 1885, "or_expr": 1885, "key_datum_list": 1885, "dict_comprehens": 1885, "key_datum": 1885, "ongo": [1885, 1923, 1933, 1935], "enclos": 1885, "datum": [1885, 1949], "attributeref": 1885, "slice_list": 1885, "slice_item": 1885, "proper_slic": 1885, "argument_list": 1885, "u_expr": 1885, "tightli": [1885, 1916], "m_expr": 1885, "a_expr": 1885, "shift_expr": 1885, "and_expr": 1885, "xor_expr": 1885, "comp_oper": 1885, "__contains__": 1885, "or_test": 1885, "and_test": 1885, "not_test": 1885, "conditional_express": 1885, "starred_item": 1885, "expression_stmt": 1885, "starred_express": 1885, "assignment_express": 1885, "assignment_stmt": 1885, "augmented_assignment_stmt": 1885, "augtarget": 1885, "augop": 1885, "annotated_assignment_stmt": 1885, "raise_stmt": 1885, "assert_stmt": 1885, "return_stmt": 1885, "del_stmt": 1885, "pass_stmt": 1885, "print_stmt": 1885, "break_stmt": 1885, "continue_stmt": 1885, "if_stmt": 1885, "while_stmt": 1885, "for_stmt": 1885, "with_stmt": 1885, "with_item": 1885, "__enter__": 1885, "suppress": [1885, 1934], "tuple_stmt": 1885, "getattr_stmt": 1885, "hasattr_stmt": 1885, "zip_stmt": 1885, "iterable1": 1885, "iterable2": 1885, "enumerate_stmt": 1885, "add_stat_valu": 1885, "sugaredvalu": 1885, "unrecogn": 1885, "honor": 1885, "__abs__": 1885, "bytearrai": 1885, "delattr": 1885, "exec": 1885, "__index__": 1885, "isint": 1885, "issubclass": [1885, 1910], "ndigit": 1885, "__import__": [1885, 1927], "rpc_sync": [1885, 1925, 1935, 1936, 1937], "synonym": 1885, "_fork": [1885, 1907], "_wait": [1885, 1907], "lexic": 1886, "indent": 1886, "coroutin": 1886, "__del__": [1886, 1905], "__bytes__": 1886, "__slots__": 1886, "metaclass": 1886, "mro": 1886, "__r": 1886, "bytesliter": 1886, "imagnumb": 1886, "parenthes": 1886, "ifs": 1886, "compound": 1886, "exc_typ": 1886, "exc_valu": 1886, "adaptivelogsoftmaxwithloss": 1887, "enable_grad": [1887, 1947], "overload_nam": [1889, 1910], "handi": [1889, 1905, 1908], "spotti": 1889, "googl": 1889, "keynam": 1889, "alias_analysi": 1889, "op_nam": 1889, "div_cpu": 1889, "off_by_default": 1891, "_registr": 1891, "born": 1892, "citizen": 1892, "afterthought": 1892, "unlock": 1892, "intuit": 1892, "alik": 1892, "grai": 1892, "systemat": 1892, "onboard": 1892, "maskedarrai": 1892, "masked_tensor": 1892, "blocklist": [1893, 1927], "mobileoptimizertyp": 1893, "conv_bn_fus": 1893, "correspondingli": 1893, "prepack": [1893, 1925], "insert_fold_prepack_op": 1893, "arm": [1893, 1930], "remove_dropout": 1893, "hoist": 1893, "hoist_conv_packed_param": 1893, "fuse_add_relu": 1893, "vulkan": 1893, "vulkan_automatic_gpu_transf": 1893, "freeze_modul": 1893, "script_modul": 1893, "optimization_blocklist": 1893, "preserved_method": 1893, "_mobileoptimizertyp": 1893, "recursivescriptmodul": [1893, 1921], "infrequ": 1895, "window_s": 1895, "max_sampl": 1895, "cap": 1895, "_monitor": 1895, "data_value_t": 1895, "eventhandlerhandl": 1895, "register_event_handl": 1895, "unregister_event_handl": 1895, "tensorboardeventhandl": 1895, "writer": [1895, 1916, 1944], "shader": [1896, 1917], "processor": 1896, "metalperformanceshad": 1896, "shared_memori": 1897, "abruptli": 1897, "get_all_sharing_strategi": 1897, "get_sharing_strategi": 1897, "set_sharing_strategi": 1897, "new_strategi": 1897, "abnorm": [1897, 1918], "fatal": [1897, 1918], "forev": [1897, 1909], "asap": 1897, "queue_2": 1897, "x_clone": 1897, "shm_open": 1897, "destructor": [1897, 1937], "torch_shm_manag": 1897, "unnot": 1897, "spawncontext": 1897, "has_nam": 1898, "is_shar": [1898, 1941], "is_sparse_csr": [1898, 1925, 1941], "is_tensor": [1898, 1939], "items": [1898, 1925], "unifies_names_from_input_tensor": 1898, "nbyte": [1898, 1925, 1941], "ndimens": 1898, "position": [1898, 1899], "unnam": [1898, 1899], "misalign": 1898, "inher": 1898, "disappear": 1898, "img": [1899, 1944], "renamed_img": 1899, "coexist": 1899, "scale_channel": 1899, "more_img": 1899, "named_tensor": 1899, "named_img": 1899, "flat_img": 1899, "named_flat_img": 1899, "unflattened_img": 1899, "unflattened_named_img": 1899, "grad_loss": 1899, "8107": 1899, "6357": 1899, "0783": 1899, "untest": 1899, "rename_map": 1899, "greedili": 1899, "unment": 1899, "49152": 1899, "datastructur": 1900, "seamless": 1900, "nested_tensor": 1900, "nt": 1900, "vein": 1900, "as_nested_tensor": 1900, "irregular": 1900, "indistinguish": 1900, "2286": 1900, "4842": 1900, "7827": 1900, "6745": [1900, 1940], "0658": 1900, "1247": 1900, "4078": 1900, "8083": 1900, "2871": 1900, "5559": 1900, "9885": 1900, "4074": 1900, "4855": 1900, "0733": 1900, "8285": 1900, "6858": 1900, "7030": 1900, "3481": 1900, "0236": 1900, "fake_grad": 1900, "6862": 1900, "1282": 1900, "1031": 1900, "0464": 1900, "3276": 1900, "9967": 1900, "0054": 1900, "8972": 1900, "9174": 1900, "4995": 1900, "8546": 1900, "7194": 1900, "2918": 1900, "1846": 1900, "8793": 1900, "5183": 1900, "6447": 1900, "8009": 1900, "8468": 1900, "9832": 1900, "5272": 1900, "pt_infer": 1900, "pt_larg": 1900, "pt_small": 1900, "bitwidth": [1901, 1916, 1930, 1939], "asymmetr": [1901, 1930, 1933], "sacrific": [1903, 1908], "dirac": 1903, "glorot": 1903, "bengio": 1903, "fan": 1903, "_in": 1903, "fan_in": 1903, "delv": 1903, "surpass": 1903, "he": 1903, "_mode": 1903, "fan_out": 1903, "redrawn": 1903, "sax": 1903, "2013": 1903, "marten": 1903, "walkthrough": 1904, "clip_grad_value_": 1904, "optimizer2": 1904, "batch_per_it": 1904, "iters_to_accumul": 1904, "num_proc": 1904, "grad_param": 1904, "grad_norm": 1904, "scaled_grad_param": 1904, "inv_scal": 1904, "optimizer0": 1904, "optimizer1": 1904, "output0": 1904, "model0": 1904, "model1": 1904, "loss0": 1904, "loss1": 1904, "imped": 1904, "poor": [1904, 1905], "dp_model": 1904, "imported_funct": 1904, "mymm": 1904, "myfloat32func": 1904, "fwd_output": 1904, "cleaner": 1905, "mapsto": 1905, "educ": 1905, "_save": 1905, "_saved_self": 1905, "convex": 1905, "concav": 1905, "togglabl": 1905, "drawback": 1905, "0011": 1905, "dirti": 1905, "hogwild": 1905, "train_fn": 1905, "graphtask": 1905, "copyslic": 1905, "mutex": 1905, "gotten": 1905, "curiou": 1905, "\u2102": 1905, "yj": 1905, "holomorph": 1905, "theori": 1905, "homomorph": 1905, "mathematician": 1905, "im": 1905, "studi": [1905, 1929], "beauti": 1905, "somewhat": [1905, 1908, 1939], "counterintuit": 1905, "0906": 1905, "4835": 1905, "audio": [1905, 1944], "\u211d": 1905, "_output": 1905, "vj": 1905, "selfdeletingtempfil": 1905, "tmp_dir": 1905, "uuid": 1905, "uuid4": 1905, "temp_fil": 1905, "forbidden": 1905, "savedtensor": 1905, "_raw_saved_": 1905, "_raw_saved_self": 1905, "save_on_disk_threshold": 1905, "tensor_or_sctf": 1905, "_saved_oth": 1905, "4th": 1906, "backcompat": 1906, "broadcast_warn": 1906, "userwarn": 1906, "compute_z": 1907, "w_z": 1907, "w_y": 1907, "tbb": 1907, "aten_thread": 1907, "omp": 1907, "mkl_thread": 1907, "bla": 1907, "mkldnn_cpu_runtim": 1907, "use_mkldnn": 1907, "use_tbb": 1907, "use_openmp": 1907, "ON": [1907, 1914, 1915], "set_num_interop_thread": 1907, "get_num_interop_thread": 1907, "set_num_thread": [1907, 1918], "get_num_thread": 1907, "omp_num_thread": 1907, "mkl_num_thread": 1907, "1024": [1907, 1908], "e5": 1907, "oversubscript": 1907, "irrespect": 1908, "spread": 1908, "cuda2": [1908, 1914], "a_ful": 1908, "10240": 1908, "b_full": 1908, "ab_ful": 1908, "7277": 1908, "ab_tf32": 1908, "016": 1908, "ga100": 1908, "1747": 1908, "relative_error": 1908, "0022": 1908, "ab_fp32": 1908, "0031": 1908, "000039": 1908, "7x": 1908, "globalcontext": 1908, "setallowtf32cubla": 1908, "setallowtf32cudnn": 1908, "bench_gemm_transform": 1908, "allow_fp16_reduc": 1908, "4048": 1908, "1634": 1908, "1639": 1908, "4056": 1908, "1670": 1908, "1661": 1908, "4080": 1908, "1664": 1908, "1658": 1908, "1651": 1908, "4104": 1908, "1677": 1908, "1674": 1908, "4128": 1908, "1796": [1908, 1916], "2519": 1908, "5096": 1908, "2144": 1908, "2149": 1908, "2766": 1908, "5120": 1908, "2142": 1908, "9728": 1908, "3875": 1908, "5779": 1908, "6182": 1908, "9656": 1908, "setallowfp16reductioncubla": 1908, "instabl": 1908, "setallowbf16reductioncubla": 1908, "start_ev": 1908, "elapsed_time_m": 1908, "exploit": 1908, "paragraph": [1908, 1913], "initial_grad": 1908, "memory_alloc": [1908, 1914], "memory_snapshot": [1908, 1914], "memcheck": 1908, "pytorch_no_cuda_memory_cach": [1908, 1914], "option2": 1908, "value2": 1908, "max_split_size_mb": 1908, "borderlin": 1908, "memory_summari": 1908, "resort": [1908, 1913, 1927], "roundup_power2_divis": 1908, "cudacachingalloc": 1908, "1280": 1908, "1536": 1908, "1792": 1908, "256mb": 1908, "512mb": 1908, "roundup_bypass_threshold_mb": 1908, "garbage_collection_threshold": 1908, "release_cached_block": 1908, "unfavor": 1908, "cuda_runtime_api": 1908, "iostream": 1908, "fpic": 1908, "my_malloc": 1908, "cout": 1908, "endl": [1908, 1915], "my_fre": 1908, "cudafre": 1908, "cudapluggablealloc": 1908, "new_alloc": 1908, "_cuda_clearcublasworkspac": 1908, "kib": 1908, "lru": 1908, "geometri": 1908, "1023": 1908, "use_pytorch_kernel_cach": 1908, "pytorch_kernel_cache_path": 1908, "store_tru": 1908, "disable_cuda": 1908, "assess": 1908, "cudagetdevicecount": 1908, "cuinit": 1908, "pytorch_nvml_based_cuda_check": 1908, "nvml": 1908, "nvmldevicegetcount_v2": 1908, "poison": 1908, "aforement": [1908, 1918], "train_load": [1908, 1918], "x_cpu": 1908, "x_gpu": 1908, "x_cpu_long": 1908, "y_cpu": 1908, "y_gpu": 1908, "y_cpu_long": 1908, "new_tensor": 1908, "overus": 1908, "cudagraphlaunch": 1908, "elid": 1908, "versatil": 1908, "static_input": 1908, "static_output": 1908, "realist": 1908, "sophist": [1908, 1926], "violat": [1908, 1911], "prohibit": [1908, 1921], "virtual": 1908, "d_in": 1908, "d_out": 1908, "640": 1908, "static_target": 1908, "static_y_pr": 1908, "static_loss": 1908, "real_target": 1908, "refil": 1908, "dag": 1908, "rejoin": 1908, "cuda_work": 1908, "nsight": 1908, "reorgan": 1908, "graphabl": 1908, "econom": 1908, "static_out_1": 1908, "g1_workload": 1908, "static_in_1": 1908, "static_out_2": 1908, "g2_workload": 1908, "static_in_2": 1908, "real_data_1": 1908, "real_data_2": 1908, "29500": [1909, 1928, 1935, 1936], "prerequisit": 1909, "grad0": 1909, "grad1": 1909, "bucket1": 1909, "bucket0": 1909, "hurt": 1909, "earliest": 1909, "unreadi": 1909, "absent": 1909, "hpp": 1909, "processgroupgloo": 1909, "processgroupmpi": 1909, "_sync_param": 1909, "autograd_hook": 1909, "prepare_for_backward": 1909, "_after_": 1909, "optimize_ddp": 1909, "mark_dirti": 1910, "mark_non_differenti": [1910, 1911], "set_materialize_grad": 1910, "linearfunct": 1910, "grad_bia": 1910, "mulconst": 1910, "mycub": [1910, 1911], "grad_dx": [1910, 1911], "my_cub": [1910, 1911], "input_featur": 1910, "output_featur": 1910, "duck": [1910, 1927], "__array_function__": 1910, "nep": 1910, "0018": 1910, "scalartensor": 1910, "handled_funct": 1910, "mandat": 1910, "update_wrapp": 1910, "ensure_tensor": 1910, "metadatatensor": 1910, "__add__": 1910, "subtensor2": 1910, "othersubtensor": 1910, "loggingtensor": 1910, "permiss": 1910, "_metadata": 1910, "ndata": 1910, "ministri": 1910, "silli": 1910, "superclass": 1910, "troublesom": 1910, "_get_overridable_funct": 1910, "overriden": 1910, "get_overridable_funct": [1910, 1950], "func_dict": 1910, "nn_func": 1910, "labori": 1910, "_get_testing_overrid": 1910, "get_testing_overrid": [1910, 1950], "override_dict": 1910, "dummy_add": 1910, "get_ignored_funct": [1910, 1950], "2020": 1910, "outdat": 1910, "dispatchkei": 1910, "zerotensor": 1910, "compositeimplicitautograd": 1910, "func_nam": 1910, "exot": 1910, "zoo": 1910, "intro": 1910, "custom_vjp": 1911, "custom_jvp": 1911, "to_numpi": 1911, "numpysort": 1911, "ind_inv": 1911, "_1": [1911, 1927], "numpytak": 1911, "numpy_sort": 1911, "saniti": 1911, "ggx": 1911, "vmappabl": 1911, "x_bdim": 1911, "ind_bdim": 1911, "ind_inv_bdim": 1911, "expanded_x": 1911, "expanded_ind": 1911, "expanded_ind_inv": 1911, "new_dim": 1911, "logical_dim": 1911, "maybe_expand_bdim_at_front": 1911, "pseudocod": 1911, "rapidli": [1912, 1918], "abridg": 1912, "total_loss": 1912, "extrud": 1912, "phenomenon": 1912, "plenti": 1912, "bptt": 1912, "repackag": 1912, "nm": 1912, "blow": 1912, "elf": 1912, "grep": 1912, "run_model": 1912, "recoveri": 1912, "data_parallel": 1912, "pad_packed_sequ": 1912, "padded_input": 1912, "packed_input": 1912, "packed_output": 1912, "my_lstm": 1912, "dp_m": 1912, "padding_input": 1912, "ur": 1913, "rewritten": 1913, "j_f": 1913, "calculu": 1913, "cw": 1913, "bigger": 1913, "articl": 1913, "58eb23378f2a376565a66ac32c93a316c45b6131": 1913, "l99": 1913, "l105": 1913, "ds_dx": 1913, "compute_gradi": 1913, "ds_dy": 1913, "conj_w_d": 1913, "w_d": 1913, "d_idx": 1913, "albeit": 1913, "wonder": 1913, "amd": 1914, "dialect": 1914, "portabl": 1914, "rocmdoc": 1914, "programming_guid": 1914, "hip_api_guid": 1914, "cuda_vers": 1914, "cudaruntimegetvers": 1914, "cudadrivergetvers": 1914, "hip_vers": 1914, "hipruntimegetvers": 1914, "hipdrivergetvers": 1914, "11000": 1914, "use_rocm": 1914, "rocm_vers": 1914, "40300": 1914, "cmake": [1914, 1922], "drocm_force_enable_gpu_assert": 1914, "addglobalcallback": 1915, "recordfunct": 1915, "ivalu": 1915, "threadlocaldebuginfo": 1915, "debuginfoguard": 1915, "recordfunctioncallback": 1915, "onfunctionent": 1915, "onfunctionexit": 1915, "needsinput": 1915, "samplingprob": 1915, "enablerecordfunct": 1915, "cerr": 1915, "broader": [1915, 1947], "inject": 1915, "setapiusagehandl": 1915, "setapiusagelogg": 1915, "event_nam": 1915, "c10_log_api_usage_onc": 1915, "my_api": 1915, "_log_api_usage_onc": 1915, "archiv": 1915, "bundl": 1915, "akin": 1915, "jpeg": 1915, "camera": [1915, 1944], "setexportmoduleextrafileshook": 1915, "extrafilesmap": 1915, "producer_info": 1915, "getenv": 1915, "getsourc": 1915, "precompil": 1915, "pyc": 1915, "loos": 1915, "elabor": 1916, "tpu": 1916, "mylinear": 1916, "sample_input": 1916, "0413": 1916, "2057": 1916, "0597": 1916, "8247": 1916, "1045": 1916, "4299": 1916, "5457": 1916, "4793": 1916, "3634": 1916, "8525": 1916, "6749": 1916, "l0": [1916, 1921], "bignet": 1916, "big_net": 1916, "dynamicnet": 1916, "dynamic_net": 1916, "2051": 1916, "7601": 1916, "1963": 1916, "4354": 1916, "6598": 1916, "4446": 1916, "4628": 1916, "8774": 1916, "6848": 1916, "5458": 1916, "4647": 1916, "5310": 1916, "0609": 1916, "0940": 1916, "1266": 1916, "0623": 1916, "3508": 1916, "0550": 1916, "5317": 1916, "5562": 1916, "4028": 1916, "6942": 1916, "0140": 1916, "0329": 1916, "1160": 1916, "0434": 1916, "3889": 1916, "1613": 1916, "6340": 1916, "3887": 1916, "9979": 1916, "0767": 1916, "3526": 1916, "8756": 1916, "5847": 1916, "6016": 1916, "1608": 1916, "0829": 1916, "6338": 1916, "9239": 1916, "6943": 1916, "5034": 1916, "0268": 1916, "4489": 1916, "9403": 1916, "2509": 1916, "5052": 1916, "3088": 1916, "4951": 1916, "3381": 1916, "5166": 1916, "boilerpl": [1916, 1927], "beginn": 1916, "examples_nn": 1916, "polynomial_modul": 1916, "teach": 1916, "0013": [1916, 1940], "0030": 1916, "0008": 1916, "modalmodul": 1916, "6614": 1916, "2669": 1916, "0617": 1916, "4519": 1916, "two_layer_net_optim": 1916, "blitz": 1916, "neural_networks_tutori": 1916, "autograd_tutori": 1916, "new_net": 1916, "runningmean": 1916, "1041": 1916, "0647": 1916, "1515": 1916, "m_load": 1916, "unserialized_th": 1916, "statefulmodul": 1916, "param3": 1916, "param_list": 1916, "parameterlist": 1916, "param_dict": 1916, "parameterdict": 1916, "buffer1": 1916, "buffer2": 1916, "buffer3": 1916, "0322": 1916, "9066": 1916, "1409": 1916, "4852": 1916, "6949": 1916, "2911": 1916, "1044": 1916, "4202": 1916, "1953": 1916, "5299": 1916, "8747": 1916, "6289": 1916, "4898": 1916, "6434": 1916, "5187": 1916, "0346": 1916, "4077": 1916, "4324": 1916, "7022": 1916, "3915": 1916, "6176": 1916, "6062": 1916, "5992": 1916, "4452": 1916, "2843": 1916, "3710": 1916, "3947": 1916, "saving_loading_model": 1916, "what_is_state_dict": 1916, "skip_init": 1916, "skip_param_init": 1916, "new_grad_input": 1916, "5059": 1916, "8158": 1916, "2390": 1916, "0043": 1916, "addmmbackward": 1916, "forward_pre_hook_handl": 1916, "5752": 1916, "7421": 1916, "forward_hook_handl": 1916, "0980": 1916, "4666": 1916, "0256": 1916, "4497": 1916, "5046": 1916, "combat": 1916, "mps_devic": 1917, "yourfavoritenet": 1917, "a3c": 1918, "set_start_method": 1918, "simplequeu": 1918, "cope": 1918, "eleg": 1918, "num_process": 1918, "inappropri": 1918, "vcpu": 1918, "htop": 1918, "exceed": 1918, "competit": 1918, "oversubscrib": 1918, "mnist_hogwild": 1918, "dataloader_kwarg": 1918, "train_epoch": 1918, "30x": 1918, "boost": 1918, "754": 1919, "1e20": 1919, "4142e": 1919, "struggl": 1919, "benign": 1919, "v_dot2": 1919, "mfma": 1919, "fp64": 1919, "rocbla": 1919, "miopen": 1919, "rocblas_internal_fp16_alt_impl": 1919, "miopen_debug_convolution_attrib_fp16_alt_impl": 1919, "_convbackend": 1919, "slownd": 1919, "slownd_transpos": 1919, "slownd_dil": 1919, "slownd_dilated_transpos": 1919, "convbackend": 1919, "miopendepthwis": 1919, "miopentranspos": 1919, "svd_lowrank": [1920, 1939], "22modul": 1920, "20determin": 1920, "index_add_cuda_": 1920, "1509": 1920, "8027": 1920, "0333": 1920, "1444": 1920, "rese": 1920, "seed_work": 1920, "worker_se": 1920, "train_dataset": 1920, "tensor_dict": 1921, "loaded_numb": 1921, "loaded_even": 1921, "scene": [1921, 1944], "loaded_smal": 1921, "num_batches_track": 1921, "bn_state_dict": 1921, "new_bn": 1921, "out0_relu": 1921, "1400": 1921, "4563": 1921, "0271": 1921, "4406": 1921, "2827": 1921, "4588": 1921, "2031": 1921, "0300": 1921, "1316": 1921, "6533": 1921, "3413": 1921, "1112": 1921, "m_state_dict": 1921, "new_m": 1921, "original_nam": 1921, "controlflowmodul": 1921, "controlflowmodule_trac": 1921, "3793": 1921, "controlflowmodule_script": 1921, "tagger": 1921, "ipu_tag": 1921, "ipu_deseri": 1921, "startswith": [1921, 1925], "get_default_load_endian": 1921, "byteord": 1921, "loadendian": 1921, "default_load_endian": 1921, "set_default_load_endian": 1921, "endian": 1921, "rem": 1922, "7z": 1922, "curl": 1922, "ossci": 1922, "mkl_2020": 1922, "aoa": 1922, "omkl": 1922, "cuda_prefix": 1922, "cuda102": 1922, "magma_2": 1922, "4_": 1922, "omagma": 1922, "cmake_include_path": 1922, "magma_hom": 1922, "studio": 1922, "pip": [1922, 1923, 1944], "cmake_gener": 1922, "ffi": 1922, "create_extens": 1922, "_ext": 1922, "define_macro": 1922, "relative_to": 1922, "c99": 1922, "x86_x64": 1922, "packagesnotfounderror": 1922, "anaconda": 1922, "noarch": 1922, "continuum": 1922, "pkg": 1922, "pro": [1922, 1944], "msys2": 1922, "importerror": [1922, 1927], "dll": 1922, "vc2017": 1922, "redistribut": 1922, "vc": 1922, "vs2017_runtim": 1922, "mkl_fft": 1922, "intel_openmp": 1922, "vs2017": 1922, "openbla": 1922, "forg": 1922, "bootstrap": 1922, "forgotten": 1922, "idiom": 1922, "freeze_support": 1922, "forkingpickl": 1922, "brokenpipeerror": 1922, "errno": 1922, "couldn": [1922, 1923], "torch_14808_1591070686": 1922, "thalloc": 1922, "tdr": 1922, "thcudacheck": 1922, "storageshar": 1922, "dummy_input": 1923, "input_nam": 1923, "actual_input_1": 1923, "learned_": 1923, "output_nam": 1923, "learned_0": 1923, "learned_1": 1923, "learned_2": 1923, "learned_3": 1923, "learned_14": 1923, "learned_15": 1923, "kernel_shap": 1923, "9216": 1923, "transb": 1923, "check_model": 1923, "printable_graph": 1923, "onnxruntim": 1923, "ort": 1923, "ort_sess": 1923, "inferencesess": 1923, "astyp": 1923, "seq_length": 1923, "real_seq_length": 1923, "experienc": 1923, "new_data": 1923, "symbolic_opset": 1923, "symbolic_opset9": 1923, "_variablefunct": 1923, "pyi": 1923, "___torch_mangle_0": 1923, "alpha_f": 1923, "myrelu": 1923, "value_t": 1923, "pythonop": [1923, 1925], "mylogexp": 1923, "operator_export_typ": 1923, "onnx_fallthrough": 1923, "onnx_aten_fallback": 1923, "onnxscript": 1923, "onnx_opset": 1923, "opset15": 1923, "custom_opset": 1923, "67326": 1923, "alphax": 1923, "castlik": 1923, "gammax": 1923, "settyp": 1923, "custom_selu": 1923, "jit_util": 1923, "graphcontext": 1923, "onnxscript_op": 1923, "register_custom_op_symbol": 1923, "symbolic_nam": 1923, "symbolic_fn": 1923, "symbolic_help": 1923, "symbolic_foo_forward": 1923, "custom_domain": 1923, "attr1_f": 1923, "attr2_i": 1923, "foo_forward": 1923, "foomodel": 1923, "example_input1": 1923, "caffe2": [1923, 1944], "torch_script_graph": 1923, "unconvertible_op": 1923, "dynamic_ax": 1923, "export_param": 1923, "trainingmod": 1923, "operatorexporttyp": 1923, "do_constant_fold": 1923, "keep_initializers_as_input": 1923, "export_modules_as_funct": 1923, "autograd_inlin": 1923, "OF": 1923, "WITH": 1923, "input_i": 1923, "input_z": 1923, "fileno": 1923, "untrain": 1923, "doc_str": 1923, "onnx_aten": 1923, "build_caffe2": 1923, "summodul": 1923, "dim_valu": 1923, "my_custom_axis_nam": 1923, "dim_param": 1923, "sum_dynamic_axes_1": 1923, "predefin": 1923, "74765": 1923, "checkererror": 1923, "unsupportedoperatorerror": 1923, "export_to_pretty_str": 1923, "export_typ": 1923, "google_print": 1923, "add_node_nam": 1923, "nodeproto": 1923, "debugstr": 1923, "contrib": 1923, "test_aten_embedding_2": 1923, "test_oper": 1923, "unregister_custom_op_symbol": 1923, "select_model_mode_for_export": 1923, "is_in_onnx_export": 1923, "middl": 1923, "enable_log": 1923, "disable_log": 1923, "graphinfo": 1923, "incorrect_relu_symbolic_funct": 1923, "2328854203224182": 1923, "699536174352349": 1923, "rapid": 1923, "exportopt": 1923, "my_nn_modul": 1923, "my_nn_module_attribut": 1923, "underdevelop": 1924, "parsabl": 1924, "sarif": 1924, "diagsys0001": 1924, "fxe0001": 1924, "fxe0002": 1924, "fxe0003": 1924, "fxe0004": 1924, "fxe0005": 1924, "fxe0006": 1924, "atenlib": 1924, "fxe0007": 1924, "fxe0008": 1924, "fxe0009": 1924, "fxe0010": 1924, "fxe0011": 1924, "fxe0012": 1924, "fxe0013": 1924, "fxe0014": 1924, "opschema": 1924, "fxe0015": 1924, "poe0001": 1924, "poe0002": 1924, "poe0003": 1924, "poe0004": 1924, "exportdiagnost": 1924, "frames_to_skip": 1924, "cpp_stack": 1924, "record_cpp_call_stack": 1924, "constantchunk": 1925, "__and_": 1925, "__contains_": 1925, "__derive_index": 1925, "__getitem_": 1925, "__interpol": 1925, "__is_": 1925, "__isnot_": 1925, "__lshift_": 1925, "__not_": 1925, "__or_": 1925, "__range_length": 1925, "__rshift_": 1925, "__xor_": 1925, "_cast_byt": 1925, "_cast_char": 1925, "_cast_doubl": 1925, "_cast_float": 1925, "_cast_half": 1925, "_cast_int": 1925, "_cast_long": 1925, "_cast_short": 1925, "_conj": 1925, "_convolution_mod": 1925, "_dim_arang": 1925, "_pack_padded_sequ": 1925, "_pad_packed_sequ": 1925, "_reshape_from_tensor": 1925, "_sample_dirichlet": 1925, "_set_item": 1925, "_shape_as_tensor": 1925, "_standard_gamma": 1925, "_uniqu": 1925, "_unique2": 1925, "_weight_norm": 1925, "conv1d_relu": 1925, "conv2d_relu": 1925, "conv3d_relu": 1925, "embedding_renorm": 1925, "floordiv": [1925, 1932], "nonzero_numpi": 1925, "numpy_t": 1925, "unchecked_cast": 1925, "unique_dim": 1925, "_quantiz": 1925, "conv2d_prepack": 1925, "conv3d_prepack": 1925, "conv_transpose1d_prepack": 1925, "conv_transpose2d_prepack": 1925, "conv_transpose3d_prepack": 1925, "linear_dynam": 1925, "linear_prepack": 1925, "linear_prepack_fp16": 1925, "linear_prepack_fp16_legaci": 1925, "linear_prepack_legaci": 1925, "_test": 1925, "get_first": 1925, "compleximplicit": 1925, "floatimplicit": 1925, "intimplicit": 1925, "__iand_": 1925, "__ilshift_": 1925, "__ior_": 1925, "__irshift_": 1925, "__ixor_": 1925, "__round_to_zero_floordiv": 1925, "__upsampl": 1925, "__upsample_bilinear": 1925, "__upsample_nearest": 1925, "_adaptive_avg_pool3d": 1925, "_add_batch_dim": 1925, "_add_relu": 1925, "_addmm_activ": 1925, "_aminmax": 1925, "_amp_foreach_non_finite_check_and_unscal": 1925, "_amp_update_scal": 1925, "_assert_tensor_metadata": 1925, "_autocast_to_full_precis": 1925, "_autocast_to_reduced_precis": 1925, "_batch_norm_impl_index": 1925, "_cdist_forward": 1925, "_cholesky_solve_help": 1925, "_choose_qparams_per_tensor": 1925, "_chunk_grad_outputs_efficient_attent": 1925, "_coalesc": 1925, "_compute_linear_combin": 1925, "_conj_copi": 1925, "_conj_phys": 1925, "_conv_depthwise2d": 1925, "_convert_indices_from_coo_to_csr": 1925, "_convert_indices_from_csr_to_coo": 1925, "_copy_from": 1925, "_copy_from_and_res": 1925, "_ctc_loss": 1925, "_cudnn_ctc_loss": 1925, "_cudnn_init_dropout_st": 1925, "_cudnn_rnn": 1925, "_cudnn_rnn_flatten_weight": 1925, "_cufft_clear_plan_cach": 1925, "_cufft_get_plan_cache_max_s": 1925, "_cufft_get_plan_cache_s": 1925, "_cufft_set_plan_cache_max_s": 1925, "_cummax_help": 1925, "_cummin_help": 1925, "_debug_has_internal_overlap": 1925, "_dimi": 1925, "_dimv": 1925, "_dirichlet_grad": 1925, "_efficient_attention_forward": 1925, "_efficientzerotensor": 1925, "_embedding_bag": 1925, "_embedding_bag_forward_onli": 1925, "_empty_affine_quant": 1925, "_empty_per_channel_affine_quant": 1925, "_euclidean_dist": 1925, "_fake_quantize_learnable_per_channel_affin": 1925, "_fake_quantize_learnable_per_tensor_affin": 1925, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1925, "_fft_c2c": 1925, "_fft_c2r": 1925, "_fft_r2c": 1925, "_fill_mem_eff_dropout_mask": 1925, "_flash_attention_forward": 1925, "_foreach_ab": 1925, "_foreach_aco": 1925, "_foreach_add": 1925, "_foreach_addcdiv": 1925, "_foreach_addcmul": 1925, "_foreach_asin": 1925, "_foreach_atan": 1925, "_foreach_ceil": 1925, "_foreach_clamp_max": 1925, "_foreach_clamp_min": 1925, "_foreach_co": 1925, "_foreach_cosh": 1925, "_foreach_div": 1925, "_foreach_erf": 1925, "_foreach_erfc": 1925, "_foreach_exp": 1925, "_foreach_expm1": 1925, "_foreach_floor": 1925, "_foreach_frac": 1925, "_foreach_lerp": 1925, "_foreach_lgamma": 1925, "_foreach_log": 1925, "_foreach_log10": 1925, "_foreach_log1p": 1925, "_foreach_log2": 1925, "_foreach_maximum": 1925, "_foreach_minimum": 1925, "_foreach_mul": 1925, "_foreach_neg": 1925, "_foreach_norm": 1925, "_foreach_pow": 1925, "_foreach_reciproc": 1925, "_foreach_round": 1925, "_foreach_sigmoid": 1925, "_foreach_sin": 1925, "_foreach_sinh": 1925, "_foreach_sqrt": 1925, "_foreach_sub": 1925, "_foreach_tan": 1925, "_foreach_tanh": 1925, "_foreach_trunc": 1925, "_foreach_zero": 1925, "_functional_assert_async": 1925, "_functional_sym_constrain_rang": 1925, "_fused_adam": 1925, "_fused_adamw": 1925, "_fused_dropout": 1925, "_fused_moving_avg_obs_fq_help": 1925, "_fused_moving_avg_obs_fq_helper_funct": 1925, "_fused_sdp_choic": 1925, "_fw_primal": 1925, "_fw_primal_copi": 1925, "_get_cpu_cap": 1925, "_get_tracing_st": 1925, "_grad_sum_to_s": 1925, "_has_compatible_shallow_copy_typ": 1925, "_has_same_storage_numel": 1925, "_histogramdd_bin_edg": 1925, "_histogramdd_from_bin_ct": 1925, "_histogramdd_from_bin_tensor": 1925, "_index_put_impl": 1925, "_indices_copi": 1925, "_infer_s": 1925, "_int_mm": 1925, "_is_all_tru": 1925, "_is_any_tru": 1925, "_is_zerotensor": 1925, "_linalg_check_error": 1925, "_linalg_det": 1925, "_linalg_eigh": 1925, "_linalg_slogdet": 1925, "_linalg_solve_ex": 1925, "_linalg_svd": 1925, "_list_to_tensor": 1925, "_local_scalar_dens": 1925, "_logcumsumexp": 1925, "_lstm_mp": 1925, "_make_dep_token": 1925, "_make_du": 1925, "_make_dual_copi": 1925, "_make_per_channel_quantized_tensor": 1925, "_make_per_tensor_quantized_tensor": 1925, "_masked_scal": 1925, "_masked_softmax": 1925, "_mkldnn_reshap": 1925, "_mkldnn_transpos": 1925, "_mps_convolut": 1925, "_mps_convolution_transpos": 1925, "_native_batch_norm_legit_funct": 1925, "_native_batch_norm_legit_no_train": 1925, "_native_multi_head_attent": 1925, "_ncf_unsqueez": 1925, "_ncf_view": 1925, "_neg_view": 1925, "_neg_view_copi": 1925, "_nested_from_pad": 1925, "_nested_from_padded_and_nested_exampl": 1925, "_nested_tensor_from_mask": 1925, "_nested_tensor_from_mask_left_align": 1925, "_nested_tensor_from_tensor_list": 1925, "_nested_tensor_s": 1925, "_nested_tensor_softmax_with_shap": 1925, "_nested_tensor_storage_offset": 1925, "_nested_tensor_strid": 1925, "_nested_view_from_buff": 1925, "_nested_view_from_buffer_copi": 1925, "_new_zeros_with_same_feature_meta": 1925, "_nnpack_avail": 1925, "_nnpack_spatial_convolut": 1925, "_no_grad_embedding_renorm": 1925, "_no_grad_fil": 1925, "_no_grad_norm": 1925, "_no_grad_uniform": 1925, "_no_grad_zero": 1925, "_pack_sequ": 1925, "_pad_circular": 1925, "_pad_enum": 1925, "_pdist_forward": 1925, "_pin_memori": 1925, "_prelu_kernel": 1925, "_propagate_xla_data": 1925, "_remove_batch_dim": 1925, "_reshape_alia": 1925, "_reshape_alias_copi": 1925, "_reshape_copi": 1925, "_resize_output": 1925, "_rowwise_prun": 1925, "_saturate_weight_to_fp16": 1925, "_scaled_dot_product_attent": 1925, "_scaled_dot_product_attention_math": 1925, "_scaled_dot_product_efficient_attent": 1925, "_scaled_dot_product_flash_attent": 1925, "_size_if_not_equ": 1925, "_slow_conv2d_forward": 1925, "_sobol_engine_draw": 1925, "_sobol_engine_ff": 1925, "_sobol_engine_initialize_st": 1925, "_sobol_engine_scrambl": 1925, "_sparse_addmm": 1925, "_sparse_broadcast_to": 1925, "_sparse_broadcast_to_copi": 1925, "_sparse_bsc_tensor_unsaf": 1925, "_sparse_bsr_tensor_unsaf": 1925, "_sparse_compressed_tensor_unsaf": 1925, "_sparse_coo_tensor_unsaf": 1925, "_sparse_coo_tensor_with_dim": 1925, "_sparse_coo_tensor_with_dims_and_tensor": 1925, "_sparse_csc_tensor_unsaf": 1925, "_sparse_csr_prod": 1925, "_sparse_csr_sum": 1925, "_sparse_csr_tensor_unsaf": 1925, "_sparse_log_softmax": 1925, "_sparse_mask_project": 1925, "_sparse_mm": 1925, "_sparse_mm_reduce_impl": 1925, "_sparse_softmax": 1925, "_sparse_sparse_matmul": 1925, "_sparse_sum": 1925, "_spdiag": 1925, "_standard_gamma_grad": 1925, "_structured_sparse_linear": [1925, 1939], "_tensor_to_list": 1925, "_test_ambiguous_default": 1925, "_test_autograd_multiple_dispatch": 1925, "_test_autograd_multiple_dispatch_view": 1925, "_test_autograd_multiple_dispatch_view_copi": 1925, "_test_check_tensor": 1925, "_test_functorch_fallback": 1925, "_test_optional_filled_intlist": 1925, "_test_optional_floatlist": 1925, "_test_optional_intlist": 1925, "_test_serialization_subcmul": 1925, "_test_string_default": 1925, "_test_warn_in_autograd": 1925, "_thnn_fused_gru_cel": 1925, "_thnn_fused_lstm_cel": 1925, "_to_cpu": 1925, "_to_dens": 1925, "_to_spars": 1925, "_to_sparse_bsc": 1925, "_to_sparse_bsr": 1925, "_to_sparse_csc": 1925, "_to_sparse_csr": 1925, "_transform_bias_rescale_qkv": 1925, "_transformer_encoder_layer_fwd": 1925, "_trilinear": 1925, "_triton_multi_head_attent": 1925, "_triton_scaled_dot_attent": 1925, "_unpack_du": 1925, "_unsafe_index": 1925, "_unsafe_index_put": 1925, "_unsafe_view": 1925, "_unwrap_opt": 1925, "_upsample_bicubic2d_aa": 1925, "_upsample_bilinear2d_aa": 1925, "_upsample_nearest_exact1d": 1925, "_upsample_nearest_exact2d": 1925, "_upsample_nearest_exact3d": 1925, "_use_cudnn_ctc_loss": 1925, "_use_cudnn_rnn_flatten_weight": 1925, "_validate_compressed_sparse_indic": 1925, "_validate_sparse_bsc_tensor_arg": 1925, "_validate_sparse_bsr_tensor_arg": 1925, "_validate_sparse_compressed_tensor_arg": 1925, "_validate_sparse_coo_tensor_arg": 1925, "_validate_sparse_csc_tensor_arg": 1925, "_validate_sparse_csr_tensor_arg": 1925, "_values_copi": 1925, "_weight_norm_interfac": 1925, "capit": 1925, "confirmed_by_own": [1925, 1935], "convolution_overrid": 1925, "copy_sparse_to_spars": 1925, "endswith": 1925, "expandtab": 1925, "fake_quantize_per_channel_affine_cachemask": 1925, "fake_quantize_per_tensor_affine_cachemask": 1925, "fill_diagon": 1925, "glu_jvp": 1925, "has_torch_funct": [1925, 1950], "is_non_overlapping_and_dens": 1925, "is_own": 1925, "is_strides_like_format": 1925, "isalnum": 1925, "isalpha": 1925, "isdecim": 1925, "isdigit": 1925, "isidentifi": 1925, "islow": 1925, "isnumer": 1925, "isprint": 1925, "isspac": 1925, "istitl": 1925, "isupp": 1925, "lift_fresh": 1925, "ljust": 1925, "local_valu": [1925, 1928], "log_sigmoid_forward": 1925, "lstrip": 1925, "matrix_h": 1925, "nll_loss2d_forward": 1925, "nll_loss_forward": 1925, "normal_funct": 1925, "owner_nam": 1925, "percentformat": 1925, "quantized_gru": 1925, "quantized_lstm": 1925, "resize_as_spars": 1925, "rfind": 1925, "rindex": 1925, "rjust": 1925, "rpartit": 1925, "rsplit": 1925, "rstrip": 1925, "set_data": 1925, "slow_conv3d_forward": 1925, "sparse_res": 1925, "sparse_resize_and_clear": 1925, "splitlin": 1925, "swapcas": 1925, "unique_dim_consecut": 1925, "zfill": 1925, "_allgather_bas": 1925, "_reduce_scatter_bas": 1925, "allgath": 1925, "allgather_coalesc": 1925, "allgather_into_tensor_coalesc": 1925, "allreduce_coalesc": 1925, "alltoal": 1925, "alltoall_bas": 1925, "recv_any_sourc": 1925, "reduce_scatter_tensor_coalesc": 1925, "debugprim": 1925, "load_tensor": 1925, "_mkl_linear": 1925, "_mkl_reorder_linear_weight": 1925, "_convolution_pointwis": 1925, "_convolution_transpose_pointwis": 1925, "_is_mkldnn_bf16_support": 1925, "_linear_pointwis": 1925, "_reorder_convolution_transpose_weight": 1925, "_reorder_convolution_weight": 1925, "_reorder_linear_weight": 1925, "mkldnn_prepack": 1925, "conv2d_run": 1925, "nvprim": 1925, "conv2d_clamp_prepack": 1925, "conv2d_clamp_run": 1925, "conv2d_transpose_clamp_prepack": 1925, "conv2d_transpose_clamp_run": 1925, "linear_clamp_prepack": 1925, "linear_clamp_run": 1925, "unpack_prepacked_sizes_conv2d": 1925, "unpack_prepacked_sizes_linear": 1925, "addstatvalu": 1925, "autogradadd": 1925, "autogradallnonzero": 1925, "autogradallzero": 1925, "autogradanynonzero": 1925, "autogradzero": 1925, "bailouttempl": 1925, "broadcastmkldnntensor": 1925, "broadcasts": 1925, "chunksiz": 1925, "constantmkldnntensor": 1925, "differentiablegraph": 1925, "enumnam": 1925, "enumvalu": 1925, "fallbackgraph": 1925, "fusedconcat": 1925, "fusiongroup": 1925, "ifthenels": 1925, "ignoredpythonop": 1925, "mkldnnclamp": 1925, "mkldnnhardsigmoid": 1925, "mkldnnhardswish": 1925, "mkldnnhardtanh": 1925, "mkldnnlayernorm": 1925, "mkldnnscalarmul": 1925, "mmbatchsid": 1925, "mmtreereduc": 1925, "modulecontainerindex": 1925, "numtotensor": 1925, "raiseexcept": 1925, "reductions": 1925, "requiresgradcheck": 1925, "staticruntimecopyout": 1925, "staticsubgraph": 1925, "stringindex": 1925, "tensorexprdynamicgroup": 1925, "tensorexprdynamicguard": 1925, "tensorexprgroup": 1925, "timepoint": 1925, "tupleindex": 1925, "tupleunpack": 1925, "varconcat": 1925, "varstack": 1925, "awaitable_nowait": 1925, "awaitable_wait": 1925, "is_cpu": 1925, "is_ipu": 1925, "is_mkldnn": 1925, "is_mp": 1925, "is_nest": 1925, "is_ort": 1925, "is_quant": 1925, "is_vulkan": 1925, "is_xla": 1925, "is_xpu": 1925, "onednnfusiongroup": 1925, "onednnfusionguard": 1925, "profile_ivalu": 1925, "rangelist": 1925, "rpc_remot": 1925, "unchecked_unwrap_opt": 1925, "_call_end_callbacks_on_jit_fut": 1925, "_record_function_ent": 1925, "_record_function_enter_new": 1925, "_record_function_exit": 1925, "_bfloat16quantizedtofloat": 1925, "_floattobfloat16quant": 1925, "add_out": 1925, "add_relu_out": 1925, "add_scalar_out": 1925, "add_scalar_relu": 1925, "add_scalar_relu_out": 1925, "batch_norm1d": 1925, "batch_norm1d_relu": 1925, "batch_norm2d": 1925, "batch_norm2d_relu": 1925, "batch_norm3d": 1925, "batch_norm3d_relu": 1925, "batch_norm_relu": 1925, "cat_out": 1925, "cat_relu": 1925, "cat_relu_out": 1925, "conv1d_dynam": 1925, "conv1d_prepack": 1925, "conv1d_unpack": 1925, "conv2d_add": 1925, "conv2d_add_relu": 1925, "conv2d_dil": 1925, "conv2d_dynam": 1925, "conv2d_group": 1925, "conv2d_output_pad": 1925, "conv2d_pad": 1925, "conv2d_strid": 1925, "conv2d_transpos": 1925, "conv2d_unpack": 1925, "conv2d_unpack_s": 1925, "conv3d_dil": 1925, "conv3d_dynam": 1925, "conv3d_group": 1925, "conv3d_output_pad": 1925, "conv3d_pad": 1925, "conv3d_strid": 1925, "conv3d_transpos": 1925, "conv3d_unpack": 1925, "conv_prepack": 1925, "conv_transpose1d_dynam": 1925, "conv_transpose1d_unpack": 1925, "conv_transpose2d_dil": 1925, "conv_transpose2d_dynam": 1925, "conv_transpose2d_group": 1925, "conv_transpose2d_output_pad": 1925, "conv_transpose2d_pad": 1925, "conv_transpose2d_strid": 1925, "conv_transpose2d_transpos": 1925, "conv_transpose2d_unpack": 1925, "conv_transpose3d_dil": 1925, "conv_transpose3d_dynam": 1925, "conv_transpose3d_group": 1925, "conv_transpose3d_output_pad": 1925, "conv_transpose3d_pad": 1925, "conv_transpose3d_strid": 1925, "conv_transpose3d_transpos": 1925, "conv_transpose3d_unpack": 1925, "conv_unpack": 1925, "embedding_4bit": 1925, "embedding_bag_2bit_prepack": 1925, "embedding_bag_2bit_rowwise_offset": 1925, "embedding_bag_2bit_unpack": 1925, "embedding_bag_4bit": 1925, "embedding_bag_4bit_prepack": 1925, "embedding_bag_4bit_rowwise_offset": 1925, "embedding_bag_4bit_unpack": 1925, "embedding_bag_byt": 1925, "embedding_bag_byte_prepack": 1925, "embedding_bag_byte_rowwise_offset": 1925, "embedding_bag_byte_unpack": 1925, "embedding_bag_prepack": 1925, "embedding_bag_unpack": 1925, "embedding_byt": 1925, "linear_dynamic_fp16": 1925, "linear_leaky_relu": 1925, "linear_relu": [1925, 1932], "linear_relu_dynam": 1925, "linear_relu_dynamic_fp16": 1925, "linear_tanh": 1925, "linear_unpack": 1925, "linear_unpack_fp16": 1925, "linear_with_input_q_dq_qweight_dq_output_fp32": 1925, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1925, "make_quantized_cell_param": 1925, "make_quantized_cell_params_dynam": 1925, "make_quantized_cell_params_fp16": 1925, "mul_out": 1925, "mul_relu": 1925, "mul_relu_out": 1925, "mul_scalar_out": 1925, "mul_scalar_relu": 1925, "mul_scalar_relu_out": 1925, "quantized_gru_cell_dynam": 1925, "quantized_lstm_cell_dynam": 1925, "quantized_rnn_relu_cell_dynam": 1925, "quantized_rnn_tanh_cell_dynam": 1925, "rngprim": 1925, "philox_rand": 1925, "qlinear": 1925, "qlinear_dynam": 1925, "qlinear_prepack": 1925, "qlinear_relu": 1925, "qlinear_relu_dynam": 1925, "qlinear_unpack": 1925, "static_runtim": 1925, "vartupleunpack": 1925, "clamp_nan_to_num": 1925, "create_owned_ref": 1925, "dequantize_copi": 1925, "dict_unpack": 1925, "expand_dims_copi": 1925, "flatten_copi": 1925, "fused_equally_split": 1925, "reshape_copi": 1925, "select_tensor": 1925, "signed_log1p": 1925, "to_copi": 1925, "to_maybe_copy_out": 1925, "var1": 1926, "var2": 1926, "lbfg": 1926, "adadelta": 1926, "adamax": 1926, "asgd": 1926, "nadam": 1926, "radam": 1926, "rmsprop": 1926, "rprop": 1926, "reducelronplateau": 1926, "multisteplr": 1926, "upgrad": [1926, 1946], "swa_util": 1926, "averagedmodel": 1926, "swalr": 1926, "update_bn": 1926, "optima": 1926, "polyak": 1926, "averaged_model": 1926, "multi_avg_fn": 1926, "get_ema_multi_avg_fn": 1926, "textrm": 1926, "update_paramet": 1926, "avg_fn": 1926, "_foreach": 1926, "ema_model": 1926, "ema_avg": 1926, "averaged_model_paramet": 1926, "model_paramet": 1926, "num_averag": 1926, "swa_schedul": 1926, "anneal_epoch": 1926, "swa_lr": 1926, "swa_model": 1926, "cosineannealinglr": 1926, "swa_start": 1926, "test_input": 1926, "secur": 1927, "unpackag": 1927, "exercis": 1927, "unzip": 1927, "my_packag": 1927, "freeli": 1927, "94304870911616": 1927, "94304900784016": 1927, "extern_modul": 1927, "model_1": 1927, "pkl": 1927, "myzip": 1927, "file_byt": 1927, "writestr": 1927, "new_file_byt": 1927, "vim": 1927, "vimrc": 1927, "bufreadcmd": 1927, "brows": 1927, "amatch": 1927, "vi": 1927, "packageimport": 1927, "queryabl": 1927, "glob": 1927, "packageexport": 1927, "pe": 1927, "save_pickl": 1927, "has_fil": 1927, "importer_file_structur": 1927, "package_a": 1927, "get_rdep": 1927, "all_path": 1927, "dependency_graph_str": 1927, "save_text": 1927, "save_binari": 1927, "my_resourc": 1927, "config_stuff": 1927, "raw_data": 1927, "my_byt": 1927, "complementari": [1927, 1940], "load_pickl": 1927, "load_text": 1927, "load_binari": 1927, "my_tensor": 1927, "__reduce_package__": 1927, "my_str": 1927, "time_import": 1927, "time_export": 1927, "pickler": 1927, "persistent_id": 1927, "persistent_load": 1927, "generated_module_nam": 1927, "get_unique_id": 1927, "clock_gettim": 1927, "unpackage_foo": 1927, "depickl": 1927, "foo_1": 1927, "foo_2": 1927, "foo_packag": 1927, "foo_collect": 1927, "foo1": 1927, "foo2": 1927, "imported_foo": 1927, "9857706": 1927, "650140837": 1927, "652698385": 1927, "__torch_package__": 1927, "is_in_packag": 1927, "userexcept": 1927, "unpackageableexcept": 1927, "loaded_modul": 1927, "import_modul": 1927, "save_source_str": 1927, "save_modul": 1927, "textwrap": 1927, "dedent": 1927, "my_funct": 1927, "is_packag": 1927, "importlib": 1927, "my_pickl": 1927, "get_my_resourc": 1927, "read_text": 1927, "torch_package_import": 1927, "get_my_pickl": 1927, "is_from_packag": 1927, "stdlib": 1927, "my_test": 1927, "f2": [1927, 1928], "sys_import": 1927, "script_model": 1927, "mixed_model": 1927, "python_model_with_scripted_submodul": 1927, "loaded_script": 1927, "loaded_mix": 1927, "convention": 1927, "94286146172688": 1927, "94286146172784": 1927, "essai": 1927, "another_packag": 1927, "pickletool": 1927, "ast": 1927, "deni": 1927, "my_export": 1927, "my_interned_modul": 1927, "package_export": 1927, "my_externed_modul": 1927, "my_mocked_modul": 1927, "unwant": [1927, 1944], "hodg": 1927, "podg": 1927, "bazel": 1927, "buck": 1927, "my_class_inst": 1927, "imported_myclass": 1927, "okai": 1927, "torch_package_0": 1927, "handle_me_this_wai": 1927, "inadvert": 1927, "pun": 1927, "packagingerror": 1927, "dependency_graph": 1927, "emptymatcherror": 1927, "allow_empti": 1927, "_sysimport": 1927, "hermet": 1927, "scan": 1927, "orderedimport": 1927, "add_depend": 1927, "graphviz": 1927, "lang": 1927, "denied_modul": 1927, "my_subpackag": 1927, "digraph": 1927, "externed_modul": 1927, "interned_modul": 1927, "mocked_modul": 1927, "register_extern_hook": 1927, "register_intern_hook": 1927, "register_mock_hook": 1927, "myobject": 1927, "save_source_fil": 1927, "file_or_directori": 1927, "my_subsubpackag": 1927, "file_or_buff": 1927, "module_allow": 1927, "pytorchfileread": 1927, "python_vers": 1927, "is_dir": 1927, "gpipe": 1928, "suffer": 1928, "microbatch": 1928, "bubbl": 1928, "except_last": 1928, "deferred_batch_norm": 1928, "torchgpip": 1928, "withdevic": 1928, "micro": 1928, "fc": [1928, 1930], "init_rpc": [1928, 1935, 1936], "output_rref": 1928, "fed": [1928, 1944], "nochunk": 1928, "resnext": 1928, "till": 1928, "skippabl": 1928, "perfectli": 1928, "1to3": 1928, "layer1": 1928, "f1": 1928, "layer2": 1928, "layer3": 1928, "skip_1to3": 1928, "f3": 1928, "alic": 1928, "bob": 1928, "carol": 1928, "stashstashpop": 1928, "f_alic": 1928, "f_bob": 1928, "verify_skipp": 1928, "unmatch": [1928, 1949], "fairscal": 1928, "_kinetoprofil": 1929, "profileract": 1929, "add_metadata": 1929, "add_metadata_json": 1929, "unaggreg": 1929, "export_memory_timelin": 1929, "gzip": 1929, "export_stack": 1929, "self_cuda_time_tot": 1929, "flamegraph": 1929, "brendangregg": 1929, "pl": 1929, "countnam": 1929, "perf_viz": 1929, "svg": 1929, "on_trace_readi": 1929, "record_and_sav": 1929, "tensorboard_trace_handl": 1929, "dir_nam": 1929, "logdir": [1929, 1944], "code_to_profil": 1929, "row_limit": 1929, "trace_handl": 1929, "test_trace_": 1929, "step_num": 1929, "code_iteration_to_profil": 1929, "mtia": 1929, "skip_first": 1929, "worker_nam": [1929, 1935], "use_gzip": 1929, "range_push": 1929, "range_pop": 1929, "4x": 1930, "broadli": 1930, "domin": 1930, "previous_layer_fp32": 1930, "linear_fp32": 1930, "activation_fp32": 1930, "next_layer_fp32": 1930, "linear_weight_fp32": 1930, "linear_int8_w_fp32_inp": 1930, "linear_weight_int8": 1930, "ptdq": 1930, "model_fp32": 1930, "model_int8": 1930, "quantize_dynam": 1930, "input_fp32": 1930, "previous_layer_int8": 1930, "linear_with_activation_int8": 1930, "next_layer_int8": 1930, "ptsq": 1930, "minmax": 1930, "l2norm": 1930, "model_fp32_fus": 1930, "fuse_modul": [1930, 1931], "model_fp32_prepar": 1930, "fq": 1930, "prepare_qat": 1930, "training_loop": 1930, "requant": 1930, "linear1": 1930, "custom_qconfig": 1930, "fxptq": 1930, "model_fp": 1930, "usermodel": 1930, "model_to_quant": 1930, "default_dynamic_qconfig": 1930, "model_prepar": 1930, "model_quant": 1930, "model_fus": 1930, "per_tensor_symmetr": [1930, 1933], "per_channel_symmetr": [1930, 1933], "per_channel_scal": 1930, "per_channel_zero_point": 1930, "quantized_tensor": 1930, "qengin": 1930, "in4": 1930, "fx2trt": 1930, "float_modul": [1930, 1948], "staticquantcustommodul": 1930, "observed_modul": 1930, "default_qconfig": [1930, 1949], "vnni": 1930, "test_quantized_op": 1930, "testquantizedop": 1930, "test_custom_module_lstm": 1930, "test_quantize_fx": 1930, "testquantizefx": 1930, "test_static_lstm": 1930, "some_oper": 1930, "e2": 1930, "thnn_conv2d_forward": 1930, "quantizedcpu": 1930, "some_qconfig": 1930, "linearpackedparam": 1930, "_modul": 1930, "prepare_orig": 1930, "quantized_orig": 1930, "scripted_quant": 1930, "fp32_op": 1931, "int8_op": 1931, "cooperlak": 1931, "audit": 1931, "op_fp32": 1931, "op_int8": 1931, "_numeric_suit": 1931, "_numeric_suite_fx": 1931, "0x7f95d5863b40": 1932, "0x7f95c14fc3a0": 1932, "0x7f95c14fc430": 1932, "num_tensor_args_to_observation_typ": 1932, "convbn1d": 1932, "0x7f95c08f2e50": 1932, "reference_quantized_module_for_root": 1932, "fuse_convtranspose_bn": 1932, "0x7f95c0890040": 1932, "linearbn1d": 1932, "fuse_linear_bn": 1932, "0x7f95c08f2f70": 1932, "convbn2d": 1932, "convbn3d": 1932, "bnrelu2d": 1932, "bnrelu3d": 1932, "input_type_to_index": 1932, "conv_fus": 1932, "convbnrelu1d": 1932, "convbnrelu2d": 1932, "convbnrelu3d": 1932, "convrelu1d": 1932, "convrelu3d": 1932, "0x7f95c14fc4c0": 1932, "0x7f95c14fcaf0": 1932, "quint4x2": [1932, 1941, 1945, 1946], "embedding_op": 1932, "0x7f95c14fe9d0": 1932, "00390625": 1932, "0x7f95c14fe310": 1932, "0x7f95c14fe4c0": 1932, "0x7f95c14fc9d0": 1932, "0x7f95c14fe8b0": 1932, "0x7f95c147f280": 1932, "0x7f95c14fe940": 1932, "0x7f95c14fcca0": 1932, "linear_fus": 1932, "_sequential_wrapper2": 1932, "0x7f95dc9b4430": 1932, "0x7f95c14fc8b0": 1932, "0x7f95be7069d0": 1932, "fuse_conv_bn_relu": 1932, "0x7f95c08f2ee0": 1932, "0x7f95be706a60": 1932, "0x7f95be706af0": 1932, "0x7f95be706b80": 1932, "0x7f95be706c10": 1932, "0x7f95be706ca0": 1932, "0x7f95be706d30": 1932, "0x7f95be706dc0": 1932, "0x7f95be706e50": 1932, "0x7f95be706ee0": 1932, "0x7f95be706f70": 1932, "0x7f95c14fca60": 1932, "0078125": 1932, "customconfig": 1933, "custom_module_config": 1933, "_caller": 1934, "_devices_kw": 1934, "slowli": 1934, "unind": 1934, "deivce_typ": 1934, "privateuse1": 1934, "shortcom": 1935, "stitch": 1935, "rpc_backend_opt": 1935, "trainer3": 1935, "parameterserver2": 1935, "dash": [1935, 1937], "backendtyp": 1935, "rpcbackendopt": 1935, "rpcagent": 1935, "transmit": 1935, "calle": [1935, 1937], "_set_rpc_timeout": 1935, "5678": 1935, "worker0": 1935, "my_script_add": 1935, "wire": 1935, "fut2": 1935, "meth": 1935, "grace": 1935, "userrref": [1935, 1937], "async_execut": 1935, "paus": 1935, "outmost": 1935, "async_add_chain": 1935, "worker2": 1935, "script_add": 1935, "async_add": 1935, "asyncexecutionclass": 1935, "static_async_add": 1935, "class_async_add": 1935, "ret_fut": 1935, "bound_async_add": 1935, "rpc_timeout": 1935, "incid": [1935, 1937], "nvlink": 1935, "multiplex": 1935, "tensorpiperpcbackendopt": 1935, "num_worker_thread": 1935, "device_map": 1935, "_transport": 1935, "tensorpipeag": 1935, "set_device_map": 1935, "intermitt": 1935, "remote_modul": 1935, "forward_async": 1935, "remote_devic": 1935, "workernam": 1935, "trainer0": 1935, "ps0": 1935, "remote_linear_modul": 1935, "get_module_rref": 1935, "remote_paramet": 1935, "my_add": [1936, 1950], "t4": 1936, "t5": 1936, "autograd_message_id": 1936, "autograd_context_id": 1936, "send1": 1936, "kickoff": 1936, "recv2": 1936, "heard": 1936, "send2": 1936, "recv1": 1936, "dist_autograd_simpl": 1936, "random_tensor": 1936, "_run_process": 1936, "dst_rank": 1936, "dst_name": 1936, "run_process": 1936, "rrefid": 1937, "ownerrref": 1937, "transient": 1937, "udf": 1937, "deliveri": 1937, "knowledg": 1937, "danger": 1937, "ancestor": 1937, "trickier": 1937, "forkid": 1937, "ack": 1937, "solid": 1937, "gc": 1937, "followup": 1937, "lil": 1939, "stark": 1939, "9093": 1939, "1411": 1939, "7568": 1939, "9589": 1939, "2794": 1939, "catastroph": 1939, "9900": 1939, "sturctur": 1939, "metadata_mask": 1939, "rce": 1939, "rc": 1939, "62": 1939, "to_sparse_semi_structur": 1939, "1x4": 1939, "16x16": 1939, "a_spars": 1939, "sparsesemistructuredtensor": 1939, "000": 1939, "400": 1939, "s2": 1939, "plain_dim_s": 1939, "lp64": 1939, "280": 1939, "310": 1939, "sp": 1939, "9078": 1939, "conception": 1939, "sparsesemistructur": 1939, "lobpcg": 1939, "geneig": 1939, "pca_lowrank": 1939, "kindli": 1939, "airy_ai": 1940, "airi": 1940, "onward": 1940, "9635": 1940, "entr": 1940, "3466": 1940, "int_": 1940, "8427": 1940, "0561": 1940, "4769": 1940, "9213": 1940, "8858": 1940, "7683": 1940, "7481": 1940, "2920": 1940, "int_0": 1940, "gammaln": 1940, "a1": 1940, "a2": 1940, "3528": 1940, "5665": 1940, "6472": 1940, "4335": 1940, "2650": 1940, "2661": 1940, "2796": 1940, "8808": 1940, "3019": 1940, "4658": 1940, "3085": 1940, "2430": 1940, "2070": 1940, "i1": 1940, "5652": 1940, "9534": 1940, "7595": 1940, "2153": 1940, "log_ndtr": 1940, "_ndtr": 1940, "6077": 1940, "7832": 1940, "841": 1940, "6931": 1940, "1728": 1940, "023": 1940, "9331": 1940, "6486": 1940, "1523": 1940, "6516": 1940, "6352": 1940, "6131": 1940, "7169": 1940, "6261": 1940, "displaystyl": 1940, "undefiend": 1940, "6835": 1940, "8474": 1940, "1929": 1940, "7162": 1940, "4180": 1940, "3928": 1940, "4007": 1940, "7586": 1940, "3901": 1940, "5049": 1940, "ndtr": 1940, "0228": 1940, "1587": 1940, "9772": 1940, "9987": 1940, "2p": 1940, "64493": 1940, "4041": 1940, "8288": 1940, "4939": 1940, "97": 1940, "4091": 1940, "8863": 1940, "771": 1940, "scaled_modified_bessel_k0": 1940, "scaled_modified_bessel_k1": 1940, "2948": 1940, "0267": 1940, "1566": 1940, "9186": 1940, "8631": 1940, "0259": 1940, "1300": 1940, "spheric": 1940, "xlog1pi": 1940, "3863": 1940, "1972": 1940, "6094": 1940, "2189": 1940, "8283": 1940, "7726": 1940, "0986": 1940, "1589": 1940, "hurwitz": 1940, "6449": 1940, "0823": 1940, "untyp": 1941, "wrap_storag": 1941, "complex_doubl": 1941, "from_buff": 1941, "hpu": 1941, "is_hpu": 1941, "pickle_storage_typ": 1941, "byteswap": 1941, "quint2x4": [1941, 1946], "twelv": 1942, "halftensor": [1942, 1945], "bfloat16tensor": [1942, 1945], "chartensor": [1942, 1945], "shorttensor": [1942, 1945], "binary16": [1942, 1945], "significand": [1942, 1945], "float_tensor": 1942, "double_tensor": 1942, "complex_float_tensor": 1942, "complex_double_tensor": 1942, "int_tensor": 1942, "long_tensor": 1942, "uint_tensor": 1942, "bool_tensor": 1942, "long_zerodim": 1942, "int_zerodim": 1942, "set_default_devic": 1942, "cuda1": 1942, "nhwc": [1942, 1944], "channels_last_3d": 1942, "ndhwc": 1942, "blogpost": 1943, "totensor": 1944, "trainset": 1944, "mnist": 1944, "mnist_train": 1944, "trainload": 1944, "grayscal": 1944, "make_grid": 1944, "add_imag": 1944, "add_graph": 1944, "clutter": 1944, "n_iter": 1944, "purge_step": 1944, "max_queu": 1944, "flush_sec": 1944, "filename_suffix": 1944, "current_datetime_hostnam": 1944, "exp1": 1944, "suffix": [1944, 1945], "global_step": 1944, "purg": 1944, "event_file_writ": 1944, "eventfilewrit": 1944, "may04_22": 1944, "54_": 1944, "macbook": 1944, "my_experi": 1944, "lr_0": 1944, "1_batch_16": 1944, "locallr_0": 1944, "scalar_valu": 1944, "walltim": 1944, "new_styl": 1944, "double_precis": 1944, "blobnam": 1944, "simple_valu": 1944, "main_tag": 1944, "tag_scalar_dict": 1944, "run_14h": 1944, "xsinx": 1944, "xcosx": 1944, "tanx": 1944, "add_histogram": 1944, "max_bin": 1944, "fd": 1944, "img_tensor": 1944, "dataformat": 1944, "chw": 1944, "hwc": 1944, "hw": 1944, "wh": 1944, "3xhxw": 1944, "img_hwc": 1944, "my_imag": 1944, "my_image_hwc": 1944, "img_batch": 1944, "my_image_batch": 1944, "add_figur": 1944, "add_video": 1944, "vid_tensor": 1944, "fp": 1944, "moviepi": 1944, "add_audio": 1944, "snd_tensor": 1944, "sample_r": 1944, "44100": 1944, "add_text": 1944, "text_str": 1944, "input_to_model": 1944, "use_strict_trac": 1944, "add_embed": 1944, "label_img": 1944, "metadata_head": 1944, "projector": 1944, "kwlist": 1944, "add_pr_curv": 1944, "num_threshold": 1944, "pr_curv": 1944, "add_custom_scalar": 1944, "chart": 1944, "categorynam": 1944, "chartnam": 1944, "listofproperti": 1944, "multilin": 1944, "taiwan": 1944, "twse": 1944, "0050": 1944, "2330": 1944, "dow": 1944, "aaa": 1944, "bbb": 1944, "ccc": 1944, "nasdaq": 1944, "add_mesh": 1944, "config_dict": 1944, "threej": 1944, "vertex": 1944, "number_of_vertic": 1944, "vertices_tensor": 1944, "colors_tensor": 1944, "faces_tensor": 1944, "my_mesh": 1944, "add_hparam": 1944, "hparam_dict": 1944, "metric_dict": 1944, "hparam_domain_discret": 1944, "run_nam": 1944, "hparam": 1944, "bsize": 1944, "_like": 1945, "allow_subclass": 1946, "check_devic": 1946, "check_layout": 1946, "6e": 1946, "3e": 1946, "assert_equ": 1946, "000000000000001e": 1946, "1e0": 1946, "argh": 1946, "nfooter": 1946, "66": 1946, "footer": 1946, "exclude_zero": 1946, "1205": 1946, "2282": 1946, "6380": 1946, "default_gener": 1947, "data_dependent_output": 1947, "dynamic_output_shap": 1947, "inplace_view": 1947, "nondeterministic_bitwis": 1947, "nondeterministic_seed": 1947, "compare_weight": 1948, "float_dict": 1948, "quantized_dict": 1948, "wt_compare_dict": 1948, "qmodel": 1948, "compute_error": 1948, "weight_dict": 1948, "get_logger_dict": 1948, "shadowlogg": 1948, "outputlogg": [1948, 1949], "target_dict": 1948, "q_modul": 1948, "logger_cl": [1948, 1949], "prepare_model_with_stub": 1948, "module_swap_list": 1948, "q_model": 1948, "ob_dict": 1948, "compare_model_stub": 1948, "quantizablebasicblock": 1948, "get_matching_activ": 1948, "act_dict": 1948, "prepare_model_output": 1948, "compare_model_output": 1948, "act_compare_dict": 1948, "weight_comparison": 1949, "extract_weight": 1949, "sqnr": 1949, "extend_logger_results_with_comparison": 1949, "compute_sqnr": 1949, "mp_n": 1949, "mq_n": 1949, "add_logg": 1949, "act_comparison": 1949, "extract_logger_info": 1949, "mp_shadows_mq": 1949, "add_shadow_logg": 1949, "shadow_act_comparison": 1949, "extract_shadow_logger_info": 1949, "ref_node_nam": 1949, "prev_node_nam": 1949, "model_nam": 1949, "ref_nam": 1949, "prev_node_target_typ": 1949, "ref_node_target_typ": 1949, "results_typ": 1949, "index_within_arg": 1949, "index_of_arg": 1949, "qconfig_str": 1949, "outputcomparisonlogg": 1949, "x_ref": 1949, "nstracer": 1949, "skipped_module_nam": 1949, "skipped_module_class": 1949, "model_name_a": 1949, "model_a": 1949, "model_name_b": 1949, "model_b": 1949, "base_name_to_sets_of_related_op": 1949, "unmatchable_types_map": 1949, "op_to_type_to_weight_extraction_fn": 1949, "nsresultstyp": 1949, "name_a": 1949, "name_b": 1949, "should_log_input": 1949, "model_a_with_logg": 1949, "model_b_with_logg": 1949, "model_name_to_use_for_layer_nam": 1949, "node_type_to_io_type_map": 1949, "model_a_shadows_b": 1949, "model_name_1": 1949, "model_name_2": 1949, "comparison_fn": 1949, "comparison_nam": 1949, "prepare_n_shadows_model": 1949, "qconfig_multi_map": 1949, "custom_prepare_fn": 1949, "custom_prepare_kwarg": 1949, "custom_trac": 1949, "args_kwargs_m": 1949, "op_m": 1949, "output_m": 1949, "op_m_n": 1949, "log_m_n": 1949, "log_m_0": 1949, "qconfig_n": 1949, "args_m": 1949, "op_m_prepared_with_qconfig_n": 1949, "out_m_n": 1949, "kwargs_m": 1949, "docblock": 1949, "loggers_set_en": 1949, "loggers_set_save_activ": 1949, "save_activ": 1949, "convert_n_shadows_model": 1949, "custom_convert_fn": 1949, "custom_convert_kwarg": 1949, "extract_results_n_shadows_model": 1949, "print_comparisons_n_shadows_model": 1949, "compute_normalized_l2_error": 1949, "compute_cosine_similar": 1949, "as_subclass": 1950, "resolve_nam": 1950, "handle_torch_funct": 1950, "public_api": 1950, "relevant_arg": 1950, "has_torch_function_unari": 1950, "is_tensor_lik": 1950, "notatensor": 1950, "tensorlik": 1950, "is_tensor_method_or_properti": 1950, "__get__": 1950, "__module__": 1950, "slot": 1950, "wrap_torch_funct": 1950, "smallest_norm": 1951, "subnorm": 1951, "denormal_numb": 1951}, "objects": {"": [[1947, 0, 0, "-", "torch"], [1882, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1941, 1, 1, "", "BFloat16Storage"], [1941, 1, 1, "", "BoolStorage"], [1941, 1, 1, "", "ByteStorage"], [1941, 1, 1, "", "CharStorage"], [1941, 1, 1, "", "ComplexDoubleStorage"], [1941, 1, 1, "", "ComplexFloatStorage"], [1941, 1, 1, "", "DoubleStorage"], [1941, 1, 1, "", "FloatStorage"], [105, 1, 1, "", "Generator"], [1941, 1, 1, "", "HalfStorage"], [1941, 1, 1, "", "IntStorage"], [1941, 1, 1, "", "LongStorage"], [1941, 1, 1, "", "QInt32Storage"], [1941, 1, 1, "", "QInt8Storage"], [1941, 1, 1, "", "QUInt2x4Storage"], [1941, 1, 1, "", "QUInt4x2Storage"], [1941, 1, 1, "", "QUInt8Storage"], [1941, 1, 1, "", "ShortStorage"], [1947, 1, 1, "", "SymBool"], [1947, 1, 1, "", "SymFloat"], [1947, 1, 1, "", "SymInt"], [1947, 1, 1, "", "Tag"], [1945, 1, 1, "", "Tensor"], [1941, 1, 1, "", "TypedStorage"], [1941, 1, 1, "", "UntypedStorage"], [32, 0, 0, "-", "__config__"], [637, 5, 1, "", "_assert"], [638, 5, 1, "", "_foreach_abs"], [639, 5, 1, "", "_foreach_abs_"], [640, 5, 1, "", "_foreach_acos"], [641, 5, 1, "", "_foreach_acos_"], [642, 5, 1, "", "_foreach_asin"], [643, 5, 1, "", "_foreach_asin_"], [644, 5, 1, "", "_foreach_atan"], [645, 5, 1, "", "_foreach_atan_"], [646, 5, 1, "", "_foreach_ceil"], [647, 5, 1, "", "_foreach_ceil_"], [648, 5, 1, "", "_foreach_cos"], [649, 5, 1, "", "_foreach_cos_"], [650, 5, 1, "", "_foreach_cosh"], [651, 5, 1, "", "_foreach_cosh_"], [652, 5, 1, "", "_foreach_erf"], [653, 5, 1, "", "_foreach_erf_"], [654, 5, 1, "", "_foreach_erfc"], [655, 5, 1, "", "_foreach_erfc_"], [656, 5, 1, "", "_foreach_exp"], [657, 5, 1, "", "_foreach_exp_"], [658, 5, 1, "", "_foreach_expm1"], [659, 5, 1, "", "_foreach_expm1_"], [660, 5, 1, "", "_foreach_floor"], [661, 5, 1, "", "_foreach_floor_"], [662, 5, 1, "", "_foreach_frac"], [663, 5, 1, "", "_foreach_frac_"], [664, 5, 1, "", "_foreach_lgamma"], [665, 5, 1, "", "_foreach_lgamma_"], [666, 5, 1, "", "_foreach_log"], [667, 5, 1, "", "_foreach_log10"], [668, 5, 1, "", "_foreach_log10_"], [669, 5, 1, "", "_foreach_log1p"], [670, 5, 1, "", "_foreach_log1p_"], [671, 5, 1, "", "_foreach_log2"], [672, 5, 1, "", "_foreach_log2_"], [673, 5, 1, "", "_foreach_log_"], [674, 5, 1, "", "_foreach_neg"], [675, 5, 1, "", "_foreach_neg_"], [676, 5, 1, "", "_foreach_reciprocal"], [677, 5, 1, "", "_foreach_reciprocal_"], [678, 5, 1, "", "_foreach_round"], [679, 5, 1, "", "_foreach_round_"], [680, 5, 1, "", "_foreach_sigmoid"], [681, 5, 1, "", "_foreach_sigmoid_"], [682, 5, 1, "", "_foreach_sin"], [683, 5, 1, "", "_foreach_sin_"], [684, 5, 1, "", "_foreach_sinh"], [685, 5, 1, "", "_foreach_sinh_"], [686, 5, 1, "", "_foreach_sqrt"], [687, 5, 1, "", "_foreach_sqrt_"], [688, 5, 1, "", "_foreach_tan"], [689, 5, 1, "", "_foreach_tan_"], [690, 5, 1, "", "_foreach_trunc"], [691, 5, 1, "", "_foreach_trunc_"], [692, 5, 1, "", "_foreach_zero_"], [1891, 0, 0, "-", "_logging"], [694, 5, 1, "", "abs"], [695, 5, 1, "", "absolute"], [696, 5, 1, "", "acos"], [697, 5, 1, "", "acosh"], [698, 5, 1, "", "add"], [699, 5, 1, "", "addbmm"], [700, 5, 1, "", "addcdiv"], [701, 5, 1, "", "addcmul"], [702, 5, 1, "", "addmm"], [703, 5, 1, "", "addmv"], [704, 5, 1, "", "addr"], [705, 5, 1, "", "adjoint"], [706, 5, 1, "", "all"], [707, 5, 1, "", "allclose"], [708, 5, 1, "", "amax"], [709, 5, 1, "", "amin"], [710, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [711, 5, 1, "", "angle"], [712, 5, 1, "", "any"], [1930, 0, 0, "-", "ao"], [878, 5, 1, "", "arange"], [879, 5, 1, "", "arccos"], [880, 5, 1, "", "arccosh"], [881, 5, 1, "", "arcsin"], [882, 5, 1, "", "arcsinh"], [883, 5, 1, "", "arctan"], [884, 5, 1, "", "arctan2"], [885, 5, 1, "", "arctanh"], [886, 5, 1, "", "are_deterministic_algorithms_enabled"], [887, 5, 1, "", "argmax"], [888, 5, 1, "", "argmin"], [889, 5, 1, "", "argsort"], [890, 5, 1, "", "argwhere"], [891, 5, 1, "", "as_strided"], [892, 5, 1, "", "as_tensor"], [893, 5, 1, "", "asarray"], [894, 5, 1, "", "asin"], [895, 5, 1, "", "asinh"], [896, 5, 1, "", "atan"], [897, 5, 1, "", "atan2"], [898, 5, 1, "", "atanh"], [899, 5, 1, "", "atleast_1d"], [900, 5, 1, "", "atleast_2d"], [901, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1947, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [934, 5, 1, "", "baddbmm"], [935, 5, 1, "", "bartlett_window"], [936, 5, 1, "", "bernoulli"], [937, 5, 1, "", "bincount"], [938, 5, 1, "", "bitwise_and"], [939, 5, 1, "", "bitwise_left_shift"], [940, 5, 1, "", "bitwise_not"], [941, 5, 1, "", "bitwise_or"], [942, 5, 1, "", "bitwise_right_shift"], [943, 5, 1, "", "bitwise_xor"], [944, 5, 1, "", "blackman_window"], [945, 5, 1, "", "block_diag"], [946, 5, 1, "", "bmm"], [947, 5, 1, "", "broadcast_shapes"], [948, 5, 1, "", "broadcast_tensors"], [949, 5, 1, "", "broadcast_to"], [950, 5, 1, "", "bucketize"], [951, 5, 1, "", "can_cast"], [952, 5, 1, "", "cartesian_prod"], [953, 5, 1, "", "cat"], [954, 5, 1, "", "cdist"], [955, 5, 1, "", "ceil"], [956, 5, 1, "", "chain_matmul"], [957, 5, 1, "", "cholesky"], [958, 5, 1, "", "cholesky_inverse"], [959, 5, 1, "", "cholesky_solve"], [960, 5, 1, "", "chunk"], [961, 5, 1, "", "clamp"], [962, 5, 1, "", "clip"], [963, 5, 1, "", "clone"], [964, 5, 1, "", "column_stack"], [965, 5, 1, "", "combinations"], [966, 5, 1, "", "compile"], [967, 5, 1, "", "compiled_with_cxx11_abi"], [30, 0, 0, "-", "compiler"], [974, 5, 1, "", "complex"], [975, 5, 1, "", "concat"], [976, 5, 1, "", "concatenate"], [977, 5, 1, "", "conj"], [978, 5, 1, "", "conj_physical"], [1947, 0, 0, "-", "contrib"], [979, 5, 1, "", "copysign"], [980, 5, 1, "", "corrcoef"], [981, 5, 1, "", "cos"], [982, 5, 1, "", "cosh"], [983, 5, 1, "", "count_nonzero"], [984, 5, 1, "", "cov"], [0, 0, 0, "-", "cpu"], [985, 5, 1, "", "cross"], [35, 0, 0, "-", "cuda"], [1064, 5, 1, "", "cummax"], [1065, 5, 1, "", "cummin"], [1066, 5, 1, "", "cumprod"], [1067, 5, 1, "", "cumsum"], [1068, 5, 1, "", "cumulative_trapezoid"], [1069, 5, 1, "", "deg2rad"], [1070, 5, 1, "", "dequantize"], [1071, 5, 1, "", "det"], [1942, 1, 1, "", "device"], [1072, 5, 1, "", "diag"], [1073, 5, 1, "", "diag_embed"], [1074, 5, 1, "", "diagflat"], [1075, 5, 1, "", "diagonal"], [1076, 5, 1, "", "diagonal_scatter"], [1077, 5, 1, "", "diff"], [1078, 5, 1, "", "digamma"], [1079, 5, 1, "", "dist"], [42, 0, 0, "-", "distributed"], [48, 0, 0, "-", "distributions"], [1080, 5, 1, "", "div"], [1081, 5, 1, "", "divide"], [1082, 5, 1, "", "dot"], [1083, 5, 1, "", "dsplit"], [1084, 5, 1, "", "dstack"], [1942, 1, 1, "", "dtype"], [1085, 5, 1, "", "einsum"], [1086, 5, 1, "", "empty"], [1087, 5, 1, "", "empty_like"], [1088, 5, 1, "", "empty_strided"], [1089, 1, 1, "", "enable_grad"], [1090, 5, 1, "", "eq"], [1091, 5, 1, "", "equal"], [1092, 5, 1, "", "erf"], [1093, 5, 1, "", "erfc"], [1094, 5, 1, "", "erfinv"], [1095, 5, 1, "", "exp"], [1096, 5, 1, "", "exp2"], [1097, 5, 1, "", "expm1"], [1098, 5, 1, "", "eye"], [1099, 5, 1, "", "fake_quantize_per_channel_affine"], [1100, 5, 1, "", "fake_quantize_per_tensor_affine"], [64, 0, 0, "-", "fft"], [1123, 5, 1, "", "fix"], [1124, 5, 1, "", "flatten"], [1125, 5, 1, "", "flip"], [1126, 5, 1, "", "fliplr"], [1127, 5, 1, "", "flipud"], [1128, 5, 1, "", "float_power"], [1129, 5, 1, "", "floor"], [1130, 5, 1, "", "floor_divide"], [1131, 5, 1, "", "fmax"], [1132, 5, 1, "", "fmin"], [1133, 5, 1, "", "fmod"], [1134, 5, 1, "", "frac"], [1135, 5, 1, "", "frexp"], [1136, 5, 1, "", "from_dlpack"], [1137, 5, 1, "", "from_numpy"], [1138, 5, 1, "", "frombuffer"], [1139, 5, 1, "", "full"], [1140, 5, 1, "", "full_like"], [67, 0, 0, "-", "func"], [72, 0, 0, "-", "futures"], [73, 0, 0, "-", "fx"], [1154, 5, 1, "", "gather"], [1155, 5, 1, "", "gcd"], [1156, 5, 1, "", "ge"], [1157, 5, 1, "", "geqrf"], [1158, 5, 1, "", "ger"], [1159, 5, 1, "", "get_default_dtype"], [1160, 5, 1, "", "get_deterministic_debug_mode"], [1161, 5, 1, "", "get_float32_matmul_precision"], [1162, 5, 1, "", "get_num_interop_threads"], [1163, 5, 1, "", "get_num_threads"], [1164, 5, 1, "", "get_rng_state"], [1165, 5, 1, "", "gradient"], [1166, 5, 1, "", "greater"], [1167, 5, 1, "", "greater_equal"], [1168, 5, 1, "", "gt"], [1169, 5, 1, "", "hamming_window"], [1170, 5, 1, "", "hann_window"], [1171, 5, 1, "", "heaviside"], [1172, 5, 1, "", "histc"], [1173, 5, 1, "", "histogram"], [1174, 5, 1, "", "histogramdd"], [1175, 5, 1, "", "hsplit"], [1176, 5, 1, "", "hspmm"], [1177, 5, 1, "", "hstack"], [1879, 0, 0, "-", "hub"], [1178, 5, 1, "", "hypot"], [1179, 5, 1, "", "i0"], [1180, 5, 1, "", "igamma"], [1181, 5, 1, "", "igammac"], [1182, 5, 1, "", "imag"], [1183, 5, 1, "", "index_add"], [1184, 5, 1, "", "index_copy"], [1185, 5, 1, "", "index_reduce"], [1186, 5, 1, "", "index_select"], [1187, 1, 1, "", "inference_mode"], [1188, 5, 1, "", "initial_seed"], [1189, 5, 1, "", "inner"], [1190, 5, 1, "", "inverse"], [1191, 5, 1, "", "is_complex"], [1192, 5, 1, "", "is_conj"], [1193, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1194, 5, 1, "", "is_floating_point"], [1195, 5, 1, "", "is_grad_enabled"], [1196, 5, 1, "", "is_inference_mode_enabled"], [1197, 5, 1, "", "is_nonzero"], [1198, 5, 1, "", "is_storage"], [1199, 5, 1, "", "is_tensor"], [1200, 5, 1, "", "is_warn_always_enabled"], [1201, 5, 1, "", "isclose"], [1202, 5, 1, "", "isfinite"], [1203, 5, 1, "", "isin"], [1204, 5, 1, "", "isinf"], [1205, 5, 1, "", "isnan"], [1206, 5, 1, "", "isneginf"], [1207, 5, 1, "", "isposinf"], [1208, 5, 1, "", "isreal"], [1209, 5, 1, "", "istft"], [1882, 0, 0, "-", "jit"], [1231, 5, 1, "", "kaiser_window"], [1232, 5, 1, "", "kron"], [1233, 5, 1, "", "kthvalue"], [1942, 1, 1, "", "layout"], [1234, 5, 1, "", "lcm"], [1235, 5, 1, "", "ldexp"], [1236, 5, 1, "", "le"], [1237, 5, 1, "", "lerp"], [1238, 5, 1, "", "less"], [1239, 5, 1, "", "less_equal"], [1240, 5, 1, "", "lgamma"], [1890, 0, 0, "-", "linalg"], [1282, 5, 1, "", "linspace"], [1283, 5, 1, "", "load"], [1284, 5, 1, "", "lobpcg"], [1285, 5, 1, "", "log"], [1286, 5, 1, "", "log10"], [1287, 5, 1, "", "log1p"], [1288, 5, 1, "", "log2"], [1289, 5, 1, "", "logaddexp"], [1290, 5, 1, "", "logaddexp2"], [1291, 5, 1, "", "logcumsumexp"], [1292, 5, 1, "", "logdet"], [1293, 5, 1, "", "logical_and"], [1294, 5, 1, "", "logical_not"], [1295, 5, 1, "", "logical_or"], [1296, 5, 1, "", "logical_xor"], [1297, 5, 1, "", "logit"], [1298, 5, 1, "", "logspace"], [1299, 5, 1, "", "logsumexp"], [1300, 5, 1, "", "lt"], [1301, 5, 1, "", "lu"], [1302, 5, 1, "", "lu_solve"], [1303, 5, 1, "", "lu_unpack"], [1304, 5, 1, "", "manual_seed"], [1892, 0, 0, "-", "masked"], [1305, 5, 1, "", "masked_select"], [1306, 5, 1, "", "matmul"], [1307, 5, 1, "", "matrix_exp"], [1308, 5, 1, "", "matrix_power"], [1309, 5, 1, "", "max"], [1310, 5, 1, "", "maximum"], [1311, 5, 1, "", "mean"], [1312, 5, 1, "", "median"], [1942, 1, 1, "", "memory_format"], [1313, 5, 1, "", "meshgrid"], [1314, 5, 1, "", "min"], [1315, 5, 1, "", "minimum"], [1316, 5, 1, "", "mm"], [1317, 5, 1, "", "mode"], [1895, 0, 0, "-", "monitor"], [1318, 5, 1, "", "moveaxis"], [1319, 5, 1, "", "movedim"], [1896, 0, 0, "-", "mps"], [1332, 5, 1, "", "msort"], [1333, 5, 1, "", "mul"], [1334, 5, 1, "", "multinomial"], [1335, 5, 1, "", "multiply"], [1897, 0, 0, "-", "multiprocessing"], [1336, 5, 1, "", "mv"], [1337, 5, 1, "", "mvlgamma"], [1338, 5, 1, "", "nan_to_num"], [1339, 5, 1, "", "nanmean"], [1340, 5, 1, "", "nanmedian"], [1341, 5, 1, "", "nanquantile"], [1342, 5, 1, "", "nansum"], [1343, 5, 1, "", "narrow"], [1344, 5, 1, "", "narrow_copy"], [1345, 5, 1, "", "ne"], [1346, 5, 1, "", "neg"], [1347, 5, 1, "", "negative"], [1900, 0, 0, "-", "nested"], [1348, 5, 1, "", "nextafter"], [1901, 0, 0, "-", "nn"], [1669, 1, 1, "", "no_grad"], [1670, 5, 1, "", "nonzero"], [1671, 5, 1, "", "norm"], [1672, 5, 1, "", "normal"], [1673, 5, 1, "", "not_equal"], [1674, 5, 1, "", "numel"], [1675, 5, 1, "", "ones"], [1676, 5, 1, "", "ones_like"], [1923, 0, 0, "-", "onnx"], [1926, 0, 0, "-", "optim"], [1716, 5, 1, "", "orgqr"], [1717, 5, 1, "", "ormqr"], [1718, 5, 1, "", "outer"], [1927, 0, 0, "-", "package"], [1719, 5, 1, "", "pca_lowrank"], [1720, 5, 1, "", "permute"], [1721, 5, 1, "", "pinverse"], [1722, 5, 1, "", "poisson"], [1723, 5, 1, "", "polar"], [1724, 5, 1, "", "polygamma"], [1725, 5, 1, "", "positive"], [1726, 5, 1, "", "pow"], [1727, 5, 1, "", "prod"], [1929, 0, 0, "-", "profiler"], [1728, 5, 1, "", "promote_types"], [1729, 5, 1, "", "qr"], [1730, 5, 1, "", "quantile"], [1933, 0, 0, "-", "quantization"], [1731, 5, 1, "", "quantize_per_channel"], [1732, 5, 1, "", "quantize_per_tensor"], [1733, 5, 1, "", "quantized_batch_norm"], [1734, 5, 1, "", "quantized_max_pool1d"], [1735, 5, 1, "", "quantized_max_pool2d"], [1737, 5, 1, "", "rad2deg"], [1738, 5, 1, "", "rand"], [1739, 5, 1, "", "rand_like"], [1740, 5, 1, "", "randint"], [1741, 5, 1, "", "randint_like"], [1742, 5, 1, "", "randn"], [1743, 5, 1, "", "randn_like"], [1934, 0, 0, "-", "random"], [1744, 5, 1, "", "randperm"], [1745, 5, 1, "", "range"], [1746, 5, 1, "", "ravel"], [1747, 5, 1, "", "real"], [1748, 5, 1, "", "reciprocal"], [1749, 5, 1, "", "remainder"], [1750, 5, 1, "", "renorm"], [1751, 5, 1, "", "repeat_interleave"], [1752, 5, 1, "", "reshape"], [1753, 5, 1, "", "resolve_conj"], [1754, 5, 1, "", "resolve_neg"], [1755, 5, 1, "", "result_type"], [1756, 5, 1, "", "roll"], [1757, 5, 1, "", "rot90"], [1758, 5, 1, "", "round"], [1759, 5, 1, "", "row_stack"], [1760, 5, 1, "", "rsqrt"], [1761, 5, 1, "", "save"], [1762, 5, 1, "", "scatter"], [1763, 5, 1, "", "scatter_add"], [1764, 5, 1, "", "scatter_reduce"], [1765, 5, 1, "", "searchsorted"], [1766, 5, 1, "", "seed"], [1767, 5, 1, "", "select"], [1768, 5, 1, "", "select_scatter"], [1769, 5, 1, "", "set_default_device"], [1770, 5, 1, "", "set_default_dtype"], [1771, 5, 1, "", "set_default_tensor_type"], [1772, 5, 1, "", "set_deterministic_debug_mode"], [1773, 5, 1, "", "set_float32_matmul_precision"], [1774, 5, 1, "", "set_flush_denormal"], [1775, 1, 1, "", "set_grad_enabled"], [1776, 5, 1, "", "set_num_interop_threads"], [1777, 5, 1, "", "set_num_threads"], [1778, 5, 1, "", "set_printoptions"], [1779, 5, 1, "", "set_rng_state"], [1780, 5, 1, "", "set_warn_always"], [1781, 5, 1, "", "sgn"], [1782, 5, 1, "", "sigmoid"], [1783, 5, 1, "", "sign"], [1938, 0, 0, "-", "signal"], [1795, 5, 1, "", "signbit"], [1796, 5, 1, "", "sin"], [1797, 5, 1, "", "sinc"], [1798, 5, 1, "", "sinh"], [1799, 5, 1, "", "slice_scatter"], [1800, 5, 1, "", "slogdet"], [1801, 5, 1, "", "smm"], [1802, 5, 1, "", "softmax"], [1803, 5, 1, "", "sort"], [1939, 0, 0, "-", "sparse"], [1812, 5, 1, "", "sparse_bsc_tensor"], [1813, 5, 1, "", "sparse_bsr_tensor"], [1814, 5, 1, "", "sparse_compressed_tensor"], [1815, 5, 1, "", "sparse_coo_tensor"], [1816, 5, 1, "", "sparse_csc_tensor"], [1817, 5, 1, "", "sparse_csr_tensor"], [1940, 0, 0, "-", "special"], [1818, 5, 1, "", "split"], [1819, 5, 1, "", "sqrt"], [1820, 5, 1, "", "square"], [1821, 5, 1, "", "squeeze"], [1822, 5, 1, "", "sspaddmm"], [1823, 5, 1, "", "stack"], [1824, 5, 1, "", "std"], [1825, 5, 1, "", "std_mean"], [1826, 5, 1, "", "stft"], [1827, 5, 1, "", "sub"], [1828, 5, 1, "", "subtract"], [1829, 5, 1, "", "sum"], [1830, 5, 1, "", "svd"], [1831, 5, 1, "", "svd_lowrank"], [1832, 5, 1, "", "swapaxes"], [1833, 5, 1, "", "swapdims"], [1834, 5, 1, "", "sym_float"], [1835, 5, 1, "", "sym_int"], [1836, 5, 1, "", "sym_max"], [1837, 5, 1, "", "sym_min"], [1838, 5, 1, "", "sym_not"], [1839, 5, 1, "", "t"], [1840, 5, 1, "", "take"], [1841, 5, 1, "", "take_along_dim"], [1842, 5, 1, "", "tan"], [1843, 5, 1, "", "tanh"], [1844, 5, 1, "", "tensor"], [1845, 5, 1, "", "tensor_split"], [1846, 5, 1, "", "tensordot"], [1946, 0, 0, "-", "testing"], [1847, 5, 1, "", "tile"], [1848, 5, 1, "", "topk"], [1849, 5, 1, "", "trace"], [1850, 5, 1, "", "transpose"], [1851, 5, 1, "", "trapezoid"], [1852, 5, 1, "", "trapz"], [1853, 5, 1, "", "triangular_solve"], [1854, 5, 1, "", "tril"], [1855, 5, 1, "", "tril_indices"], [1856, 5, 1, "", "triu"], [1857, 5, 1, "", "triu_indices"], [1858, 5, 1, "", "true_divide"], [1859, 5, 1, "", "trunc"], [1860, 5, 1, "", "unbind"], [1861, 5, 1, "", "unflatten"], [1862, 5, 1, "", "unique"], [1863, 5, 1, "", "unique_consecutive"], [1864, 5, 1, "", "unsqueeze"], [1865, 5, 1, "", "use_deterministic_algorithms"], [1947, 0, 0, "-", "utils"], [1866, 5, 1, "", "vander"], [1867, 5, 1, "", "var"], [1868, 5, 1, "", "var_mean"], [1869, 5, 1, "", "vdot"], [1870, 5, 1, "", "view_as_complex"], [1871, 5, 1, "", "view_as_real"], [1872, 5, 1, "", "vmap"], [1873, 5, 1, "", "vsplit"], [1874, 5, 1, "", "vstack"], [1875, 5, 1, "", "where"], [1876, 5, 1, "", "xlogy"], [1877, 5, 1, "", "zeros"], [1878, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1941, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1941, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1941, 2, 1, "", "dtype"]], "torch.CharStorage": [[1941, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1941, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1941, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1941, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1941, 2, 1, "", "dtype"]], "torch.Generator": [[105, 2, 1, "", "device"], [105, 3, 1, "", "get_state"], [105, 3, 1, "", "initial_seed"], [105, 3, 1, "", "manual_seed"], [105, 3, 1, "", "seed"], [105, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1941, 2, 1, "", "dtype"]], "torch.IntStorage": [[1941, 2, 1, "", "dtype"]], "torch.LongStorage": [[1941, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1941, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1941, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1941, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1941, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1941, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1941, 2, 1, "", "dtype"]], "torch.Tag": [[1947, 4, 1, "", "name"]], "torch.Tensor": [[1945, 2, 1, "", "H"], [1945, 2, 1, "", "T"], [106, 3, 1, "", "abs"], [107, 3, 1, "", "abs_"], [108, 3, 1, "", "absolute"], [109, 3, 1, "", "absolute_"], [110, 3, 1, "", "acos"], [111, 3, 1, "", "acos_"], [112, 3, 1, "", "acosh"], [113, 3, 1, "", "acosh_"], [114, 3, 1, "", "add"], [115, 3, 1, "", "add_"], [116, 3, 1, "", "addbmm"], [117, 3, 1, "", "addbmm_"], [118, 3, 1, "", "addcdiv"], [119, 3, 1, "", "addcdiv_"], [120, 3, 1, "", "addcmul"], [121, 3, 1, "", "addcmul_"], [122, 3, 1, "", "addmm"], [123, 3, 1, "", "addmm_"], [124, 3, 1, "", "addmv"], [125, 3, 1, "", "addmv_"], [126, 3, 1, "", "addr"], [127, 3, 1, "", "addr_"], [128, 3, 1, "", "adjoint"], [1899, 3, 1, "", "align_as"], [1899, 3, 1, "", "align_to"], [129, 3, 1, "", "all"], [130, 3, 1, "", "allclose"], [131, 3, 1, "", "amax"], [132, 3, 1, "", "amin"], [133, 3, 1, "", "aminmax"], [134, 3, 1, "", "angle"], [135, 3, 1, "", "any"], [136, 3, 1, "", "apply_"], [137, 3, 1, "", "arccos"], [138, 3, 1, "", "arccos_"], [139, 3, 1, "", "arccosh"], [140, 3, 1, "", "arccosh_"], [141, 3, 1, "", "arcsin"], [142, 3, 1, "", "arcsin_"], [143, 3, 1, "", "arcsinh"], [144, 3, 1, "", "arcsinh_"], [145, 3, 1, "", "arctan"], [146, 3, 1, "", "arctan2"], [147, 3, 1, "", "arctan2_"], [148, 3, 1, "", "arctan_"], [149, 3, 1, "", "arctanh"], [150, 3, 1, "", "arctanh_"], [151, 3, 1, "", "argmax"], [152, 3, 1, "", "argmin"], [153, 3, 1, "", "argsort"], [154, 3, 1, "", "argwhere"], [155, 3, 1, "", "as_strided"], [156, 3, 1, "", "as_subclass"], [157, 3, 1, "", "asin"], [158, 3, 1, "", "asin_"], [159, 3, 1, "", "asinh"], [160, 3, 1, "", "asinh_"], [161, 3, 1, "", "atan"], [162, 3, 1, "", "atan2"], [163, 3, 1, "", "atan2_"], [164, 3, 1, "", "atan_"], [165, 3, 1, "", "atanh"], [166, 3, 1, "", "atanh_"], [167, 3, 1, "", "backward"], [168, 3, 1, "", "baddbmm"], [169, 3, 1, "", "baddbmm_"], [170, 3, 1, "", "bernoulli"], [171, 3, 1, "", "bernoulli_"], [172, 3, 1, "", "bfloat16"], [173, 3, 1, "", "bincount"], [174, 3, 1, "", "bitwise_and"], [175, 3, 1, "", "bitwise_and_"], [176, 3, 1, "", "bitwise_left_shift"], [177, 3, 1, "", "bitwise_left_shift_"], [178, 3, 1, "", "bitwise_not"], [179, 3, 1, "", "bitwise_not_"], [180, 3, 1, "", "bitwise_or"], [181, 3, 1, "", "bitwise_or_"], [182, 3, 1, "", "bitwise_right_shift"], [183, 3, 1, "", "bitwise_right_shift_"], [184, 3, 1, "", "bitwise_xor"], [185, 3, 1, "", "bitwise_xor_"], [186, 3, 1, "", "bmm"], [187, 3, 1, "", "bool"], [188, 3, 1, "", "broadcast_to"], [189, 3, 1, "", "byte"], [190, 3, 1, "", "cauchy_"], [191, 3, 1, "", "ccol_indices"], [192, 3, 1, "", "cdouble"], [193, 3, 1, "", "ceil"], [194, 3, 1, "", "ceil_"], [195, 3, 1, "", "cfloat"], [196, 3, 1, "", "chalf"], [197, 3, 1, "", "char"], [198, 3, 1, "", "cholesky"], [199, 3, 1, "", "cholesky_inverse"], [200, 3, 1, "", "cholesky_solve"], [201, 3, 1, "", "chunk"], [202, 3, 1, "", "clamp"], [203, 3, 1, "", "clamp_"], [204, 3, 1, "", "clip"], [205, 3, 1, "", "clip_"], [206, 3, 1, "", "clone"], [207, 3, 1, "", "coalesce"], [208, 3, 1, "", "col_indices"], [209, 3, 1, "", "conj"], [210, 3, 1, "", "conj_physical"], [211, 3, 1, "", "conj_physical_"], [212, 3, 1, "", "contiguous"], [213, 3, 1, "", "copy_"], [214, 3, 1, "", "copysign"], [215, 3, 1, "", "copysign_"], [216, 3, 1, "", "corrcoef"], [217, 3, 1, "", "cos"], [218, 3, 1, "", "cos_"], [219, 3, 1, "", "cosh"], [220, 3, 1, "", "cosh_"], [221, 3, 1, "", "count_nonzero"], [222, 3, 1, "", "cov"], [223, 3, 1, "", "cpu"], [224, 3, 1, "", "cross"], [225, 3, 1, "", "crow_indices"], [226, 3, 1, "", "cuda"], [227, 3, 1, "", "cummax"], [228, 3, 1, "", "cummin"], [229, 3, 1, "", "cumprod"], [230, 3, 1, "", "cumprod_"], [231, 3, 1, "", "cumsum"], [232, 3, 1, "", "cumsum_"], [233, 3, 1, "", "data_ptr"], [234, 3, 1, "", "deg2rad"], [235, 3, 1, "", "dense_dim"], [236, 3, 1, "", "dequantize"], [237, 3, 1, "", "det"], [238, 3, 1, "", "detach"], [239, 3, 1, "", "detach_"], [240, 2, 1, "", "device"], [241, 3, 1, "", "diag"], [242, 3, 1, "", "diag_embed"], [243, 3, 1, "", "diagflat"], [244, 3, 1, "", "diagonal"], [245, 3, 1, "", "diagonal_scatter"], [246, 3, 1, "", "diff"], [247, 3, 1, "", "digamma"], [248, 3, 1, "", "digamma_"], [249, 3, 1, "", "dim"], [250, 3, 1, "", "dist"], [251, 3, 1, "", "div"], [252, 3, 1, "", "div_"], [253, 3, 1, "", "divide"], [254, 3, 1, "", "divide_"], [255, 3, 1, "", "dot"], [256, 3, 1, "", "double"], [257, 3, 1, "", "dsplit"], [258, 3, 1, "", "element_size"], [259, 3, 1, "", "eq"], [260, 3, 1, "", "eq_"], [261, 3, 1, "", "equal"], [262, 3, 1, "", "erf"], [263, 3, 1, "", "erf_"], [264, 3, 1, "", "erfc"], [265, 3, 1, "", "erfc_"], [266, 3, 1, "", "erfinv"], [267, 3, 1, "", "erfinv_"], [268, 3, 1, "", "exp"], [269, 3, 1, "", "exp_"], [270, 3, 1, "", "expand"], [271, 3, 1, "", "expand_as"], [272, 3, 1, "", "expm1"], [273, 3, 1, "", "expm1_"], [274, 3, 1, "", "exponential_"], [275, 3, 1, "", "fill_"], [276, 3, 1, "", "fill_diagonal_"], [277, 3, 1, "", "fix"], [278, 3, 1, "", "fix_"], [279, 3, 1, "", "flatten"], [280, 3, 1, "", "flip"], [281, 3, 1, "", "fliplr"], [282, 3, 1, "", "flipud"], [283, 3, 1, "", "float"], [284, 3, 1, "", "float_power"], [285, 3, 1, "", "float_power_"], [286, 3, 1, "", "floor"], [287, 3, 1, "", "floor_"], [288, 3, 1, "", "floor_divide"], [289, 3, 1, "", "floor_divide_"], [290, 3, 1, "", "fmax"], [291, 3, 1, "", "fmin"], [292, 3, 1, "", "fmod"], [293, 3, 1, "", "fmod_"], [294, 3, 1, "", "frac"], [295, 3, 1, "", "frac_"], [296, 3, 1, "", "frexp"], [297, 3, 1, "", "gather"], [298, 3, 1, "", "gcd"], [299, 3, 1, "", "gcd_"], [300, 3, 1, "", "ge"], [301, 3, 1, "", "ge_"], [302, 3, 1, "", "geometric_"], [303, 3, 1, "", "geqrf"], [304, 3, 1, "", "ger"], [305, 3, 1, "", "get_device"], [306, 2, 1, "", "grad"], [307, 3, 1, "", "greater"], [308, 3, 1, "", "greater_"], [309, 3, 1, "", "greater_equal"], [310, 3, 1, "", "greater_equal_"], [311, 3, 1, "", "gt"], [312, 3, 1, "", "gt_"], [313, 3, 1, "", "half"], [314, 3, 1, "", "hardshrink"], [315, 3, 1, "", "heaviside"], [316, 3, 1, "", "histc"], [317, 3, 1, "", "histogram"], [318, 3, 1, "", "hsplit"], [319, 3, 1, "", "hypot"], [320, 3, 1, "", "hypot_"], [321, 3, 1, "", "i0"], [322, 3, 1, "", "i0_"], [323, 3, 1, "", "igamma"], [324, 3, 1, "", "igamma_"], [325, 3, 1, "", "igammac"], [326, 3, 1, "", "igammac_"], [327, 2, 1, "", "imag"], [328, 3, 1, "", "index_add"], [329, 3, 1, "", "index_add_"], [330, 3, 1, "", "index_copy"], [331, 3, 1, "", "index_copy_"], [332, 3, 1, "", "index_fill"], [333, 3, 1, "", "index_fill_"], [334, 3, 1, "", "index_put"], [335, 3, 1, "", "index_put_"], [336, 3, 1, "", "index_reduce"], [337, 3, 1, "", "index_reduce_"], [338, 3, 1, "", "index_select"], [339, 3, 1, "", "indices"], [340, 3, 1, "", "inner"], [341, 3, 1, "", "int"], [342, 3, 1, "", "int_repr"], [343, 3, 1, "", "inverse"], [344, 3, 1, "", "is_coalesced"], [345, 3, 1, "", "is_complex"], [346, 3, 1, "", "is_conj"], [347, 3, 1, "", "is_contiguous"], [348, 2, 1, "", "is_cuda"], [349, 3, 1, "", "is_floating_point"], [350, 3, 1, "", "is_inference"], [351, 2, 1, "", "is_leaf"], [352, 2, 1, "", "is_meta"], [353, 3, 1, "", "is_pinned"], [354, 2, 1, "", "is_quantized"], [355, 3, 1, "", "is_set_to"], [356, 3, 1, "", "is_shared"], [357, 3, 1, "", "is_signed"], [358, 2, 1, "", "is_sparse"], [359, 2, 1, "", "is_sparse_csr"], [360, 3, 1, "", "isclose"], [361, 3, 1, "", "isfinite"], [362, 3, 1, "", "isinf"], [363, 3, 1, "", "isnan"], [364, 3, 1, "", "isneginf"], [365, 3, 1, "", "isposinf"], [366, 3, 1, "", "isreal"], [367, 3, 1, "", "istft"], [368, 3, 1, "", "item"], [369, 2, 1, "", "itemsize"], [370, 3, 1, "", "kthvalue"], [371, 3, 1, "", "lcm"], [372, 3, 1, "", "lcm_"], [373, 3, 1, "", "ldexp"], [374, 3, 1, "", "ldexp_"], [375, 3, 1, "", "le"], [376, 3, 1, "", "le_"], [377, 3, 1, "", "lerp"], [378, 3, 1, "", "lerp_"], [379, 3, 1, "", "less"], [380, 3, 1, "", "less_"], [381, 3, 1, "", "less_equal"], [382, 3, 1, "", "less_equal_"], [383, 3, 1, "", "lgamma"], [384, 3, 1, "", "lgamma_"], [385, 3, 1, "", "log"], [386, 3, 1, "", "log10"], [387, 3, 1, "", "log10_"], [388, 3, 1, "", "log1p"], [389, 3, 1, "", "log1p_"], [390, 3, 1, "", "log2"], [391, 3, 1, "", "log2_"], [392, 3, 1, "", "log_"], [393, 3, 1, "", "log_normal_"], [394, 3, 1, "", "logaddexp"], [395, 3, 1, "", "logaddexp2"], [396, 3, 1, "", "logcumsumexp"], [397, 3, 1, "", "logdet"], [398, 3, 1, "", "logical_and"], [399, 3, 1, "", "logical_and_"], [400, 3, 1, "", "logical_not"], [401, 3, 1, "", "logical_not_"], [402, 3, 1, "", "logical_or"], [403, 3, 1, "", "logical_or_"], [404, 3, 1, "", "logical_xor"], [405, 3, 1, "", "logical_xor_"], [406, 3, 1, "", "logit"], [407, 3, 1, "", "logit_"], [408, 3, 1, "", "logsumexp"], [409, 3, 1, "", "long"], [410, 3, 1, "", "lt"], [411, 3, 1, "", "lt_"], [412, 3, 1, "", "lu"], [413, 3, 1, "", "lu_solve"], [1945, 2, 1, "", "mH"], [1945, 2, 1, "", "mT"], [414, 3, 1, "", "map_"], [415, 3, 1, "", "masked_fill"], [416, 3, 1, "", "masked_fill_"], [417, 3, 1, "", "masked_scatter"], [418, 3, 1, "", "masked_scatter_"], [419, 3, 1, "", "masked_select"], [420, 3, 1, "", "matmul"], [421, 3, 1, "", "matrix_exp"], [422, 3, 1, "", "matrix_power"], [423, 3, 1, "", "max"], [424, 3, 1, "", "maximum"], [425, 3, 1, "", "mean"], [426, 3, 1, "", "median"], [427, 3, 1, "", "min"], [428, 3, 1, "", "minimum"], [429, 3, 1, "", "mm"], [430, 3, 1, "", "mode"], [431, 3, 1, "", "moveaxis"], [432, 3, 1, "", "movedim"], [433, 3, 1, "", "msort"], [434, 3, 1, "", "mul"], [435, 3, 1, "", "mul_"], [436, 3, 1, "", "multinomial"], [437, 3, 1, "", "multiply"], [438, 3, 1, "", "multiply_"], [439, 3, 1, "", "mv"], [440, 3, 1, "", "mvlgamma"], [441, 3, 1, "", "mvlgamma_"], [1899, 2, 1, "", "names"], [442, 3, 1, "", "nan_to_num"], [443, 3, 1, "", "nan_to_num_"], [444, 3, 1, "", "nanmean"], [445, 3, 1, "", "nanmedian"], [446, 3, 1, "", "nanquantile"], [447, 3, 1, "", "nansum"], [448, 3, 1, "", "narrow"], [449, 3, 1, "", "narrow_copy"], [450, 2, 1, "", "nbytes"], [451, 2, 1, "", "ndim"], [452, 3, 1, "", "ndimension"], [453, 3, 1, "", "ne"], [454, 3, 1, "", "ne_"], [455, 3, 1, "", "neg"], [456, 3, 1, "", "neg_"], [457, 3, 1, "", "negative"], [458, 3, 1, "", "negative_"], [459, 3, 1, "", "nelement"], [460, 3, 1, "", "new_empty"], [461, 3, 1, "", "new_full"], [462, 3, 1, "", "new_ones"], [463, 3, 1, "", "new_tensor"], [464, 3, 1, "", "new_zeros"], [465, 3, 1, "", "nextafter"], [466, 3, 1, "", "nextafter_"], [467, 3, 1, "", "nonzero"], [468, 3, 1, "", "norm"], [469, 3, 1, "", "normal_"], [470, 3, 1, "", "not_equal"], [471, 3, 1, "", "not_equal_"], [472, 3, 1, "", "numel"], [473, 3, 1, "", "numpy"], [474, 3, 1, "", "orgqr"], [475, 3, 1, "", "ormqr"], [476, 3, 1, "", "outer"], [477, 3, 1, "", "permute"], [478, 3, 1, "", "pin_memory"], [479, 3, 1, "", "pinverse"], [480, 3, 1, "", "polygamma"], [481, 3, 1, "", "polygamma_"], [482, 3, 1, "", "positive"], [483, 3, 1, "", "pow"], [484, 3, 1, "", "pow_"], [485, 3, 1, "", "prod"], [486, 3, 1, "", "put_"], [487, 3, 1, "", "q_per_channel_axis"], [488, 3, 1, "", "q_per_channel_scales"], [489, 3, 1, "", "q_per_channel_zero_points"], [490, 3, 1, "", "q_scale"], [491, 3, 1, "", "q_zero_point"], [492, 3, 1, "", "qr"], [493, 3, 1, "", "qscheme"], [494, 3, 1, "", "quantile"], [495, 3, 1, "", "rad2deg"], [496, 3, 1, "", "random_"], [497, 3, 1, "", "ravel"], [498, 2, 1, "", "real"], [499, 3, 1, "", "reciprocal"], [500, 3, 1, "", "reciprocal_"], [501, 3, 1, "", "record_stream"], [1899, 3, 1, "", "refine_names"], [502, 3, 1, "", "register_hook"], [503, 3, 1, "", "remainder"], [504, 3, 1, "", "remainder_"], [1899, 3, 1, "", "rename"], [1899, 3, 1, "", "rename_"], [505, 3, 1, "", "renorm"], [506, 3, 1, "", "renorm_"], [507, 3, 1, "", "repeat"], [508, 3, 1, "", "repeat_interleave"], [509, 2, 1, "", "requires_grad"], [510, 3, 1, "", "requires_grad_"], [511, 3, 1, "", "reshape"], [512, 3, 1, "", "reshape_as"], [513, 3, 1, "", "resize_"], [514, 3, 1, "", "resize_as_"], [515, 3, 1, "", "resolve_conj"], [516, 3, 1, "", "resolve_neg"], [517, 3, 1, "", "retain_grad"], [518, 2, 1, "", "retains_grad"], [519, 3, 1, "", "roll"], [520, 3, 1, "", "rot90"], [521, 3, 1, "", "round"], [522, 3, 1, "", "round_"], [523, 3, 1, "", "row_indices"], [524, 3, 1, "", "rsqrt"], [525, 3, 1, "", "rsqrt_"], [526, 3, 1, "", "scatter"], [527, 3, 1, "", "scatter_"], [528, 3, 1, "", "scatter_add"], [529, 3, 1, "", "scatter_add_"], [530, 3, 1, "", "scatter_reduce"], [531, 3, 1, "", "scatter_reduce_"], [532, 3, 1, "", "select"], [533, 3, 1, "", "select_scatter"], [534, 3, 1, "", "set_"], [535, 3, 1, "", "sgn"], [536, 3, 1, "", "sgn_"], [537, 3, 1, "", "share_memory_"], [538, 3, 1, "", "short"], [539, 3, 1, "", "sigmoid"], [540, 3, 1, "", "sigmoid_"], [541, 3, 1, "", "sign"], [542, 3, 1, "", "sign_"], [543, 3, 1, "", "signbit"], [544, 3, 1, "", "sin"], [545, 3, 1, "", "sin_"], [546, 3, 1, "", "sinc"], [547, 3, 1, "", "sinc_"], [548, 3, 1, "", "sinh"], [549, 3, 1, "", "sinh_"], [550, 3, 1, "", "size"], [551, 3, 1, "", "slice_scatter"], [552, 3, 1, "", "slogdet"], [553, 3, 1, "", "smm"], [554, 3, 1, "", "softmax"], [555, 3, 1, "", "sort"], [556, 3, 1, "", "sparse_dim"], [557, 3, 1, "", "sparse_mask"], [558, 3, 1, "", "sparse_resize_"], [559, 3, 1, "", "sparse_resize_and_clear_"], [560, 3, 1, "", "split"], [561, 3, 1, "", "sqrt"], [562, 3, 1, "", "sqrt_"], [563, 3, 1, "", "square"], [564, 3, 1, "", "square_"], [565, 3, 1, "", "squeeze"], [566, 3, 1, "", "squeeze_"], [567, 3, 1, "", "sspaddmm"], [568, 3, 1, "", "std"], [569, 3, 1, "", "stft"], [570, 3, 1, "", "storage"], [571, 3, 1, "", "storage_offset"], [572, 3, 1, "", "storage_type"], [573, 3, 1, "", "stride"], [574, 3, 1, "", "sub"], [575, 3, 1, "", "sub_"], [576, 3, 1, "", "subtract"], [577, 3, 1, "", "subtract_"], [578, 3, 1, "", "sum"], [579, 3, 1, "", "sum_to_size"], [580, 3, 1, "", "svd"], [581, 3, 1, "", "swapaxes"], [582, 3, 1, "", "swapdims"], [583, 3, 1, "", "t"], [584, 3, 1, "", "t_"], [585, 3, 1, "", "take"], [586, 3, 1, "", "take_along_dim"], [587, 3, 1, "", "tan"], [588, 3, 1, "", "tan_"], [589, 3, 1, "", "tanh"], [590, 3, 1, "", "tanh_"], [591, 3, 1, "", "tensor_split"], [592, 3, 1, "", "tile"], [593, 3, 1, "", "to"], [594, 3, 1, "", "to_dense"], [595, 3, 1, "", "to_mkldnn"], [596, 3, 1, "", "to_sparse"], [597, 3, 1, "", "to_sparse_bsc"], [598, 3, 1, "", "to_sparse_bsr"], [599, 3, 1, "", "to_sparse_coo"], [600, 3, 1, "", "to_sparse_csc"], [601, 3, 1, "", "to_sparse_csr"], [602, 3, 1, "", "tolist"], [603, 3, 1, "", "topk"], [604, 3, 1, "", "trace"], [605, 3, 1, "", "transpose"], [606, 3, 1, "", "transpose_"], [607, 3, 1, "", "triangular_solve"], [608, 3, 1, "", "tril"], [609, 3, 1, "", "tril_"], [610, 3, 1, "", "triu"], [611, 3, 1, "", "triu_"], [612, 3, 1, "", "true_divide"], [613, 3, 1, "", "true_divide_"], [614, 3, 1, "", "trunc"], [615, 3, 1, "", "trunc_"], [616, 3, 1, "", "type"], [617, 3, 1, "", "type_as"], [618, 3, 1, "", "unbind"], [619, 3, 1, "", "unflatten"], [620, 3, 1, "", "unfold"], [621, 3, 1, "", "uniform_"], [622, 3, 1, "", "unique"], [623, 3, 1, "", "unique_consecutive"], [624, 3, 1, "", "unsqueeze"], [625, 3, 1, "", "unsqueeze_"], [626, 3, 1, "", "untyped_storage"], [627, 3, 1, "", "values"], [628, 3, 1, "", "var"], [629, 3, 1, "", "vdot"], [630, 3, 1, "", "view"], [631, 3, 1, "", "view_as"], [632, 3, 1, "", "vsplit"], [633, 3, 1, "", "where"], [634, 3, 1, "", "xlogy"], [635, 3, 1, "", "xlogy_"], [636, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1941, 3, 1, "", "bfloat16"], [1941, 3, 1, "", "bool"], [1941, 3, 1, "", "byte"], [1941, 3, 1, "", "char"], [1941, 3, 1, "", "clone"], [1941, 3, 1, "", "complex_double"], [1941, 3, 1, "", "complex_float"], [1941, 3, 1, "", "copy_"], [1941, 3, 1, "", "cpu"], [1941, 3, 1, "", "cuda"], [1941, 3, 1, "", "data_ptr"], [1941, 4, 1, "", "device"], [1941, 3, 1, "", "double"], [1941, 2, 1, "", "dtype"], [1941, 3, 1, "", "element_size"], [1941, 3, 1, "", "fill_"], [1941, 3, 1, "", "float"], [1941, 3, 1, "", "from_buffer"], [1941, 3, 1, "", "from_file"], [1941, 3, 1, "", "get_device"], [1941, 3, 1, "", "half"], [1941, 3, 1, "", "hpu"], [1941, 3, 1, "", "int"], [1941, 4, 1, "", "is_cuda"], [1941, 4, 1, "", "is_hpu"], [1941, 3, 1, "", "is_pinned"], [1941, 3, 1, "", "is_shared"], [1941, 2, 1, "", "is_sparse"], [1941, 3, 1, "", "long"], [1941, 3, 1, "", "nbytes"], [1941, 3, 1, "", "pickle_storage_type"], [1941, 3, 1, "", "pin_memory"], [1941, 3, 1, "", "resize_"], [1941, 3, 1, "", "share_memory_"], [1941, 3, 1, "", "short"], [1941, 3, 1, "", "size"], [1941, 3, 1, "", "tolist"], [1941, 3, 1, "", "type"], [1941, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1941, 3, 1, "", "bfloat16"], [1941, 3, 1, "", "bool"], [1941, 3, 1, "", "byte"], [1941, 3, 1, "", "byteswap"], [1941, 3, 1, "", "char"], [1941, 3, 1, "", "clone"], [1941, 3, 1, "", "complex_double"], [1941, 3, 1, "", "complex_float"], [1941, 3, 1, "", "copy_"], [1941, 3, 1, "", "cpu"], [1941, 3, 1, "", "cuda"], [1941, 3, 1, "", "data_ptr"], [1941, 2, 1, "", "device"], [1941, 3, 1, "", "double"], [1941, 3, 1, "", "element_size"], [1941, 3, 1, "", "fill_"], [1941, 3, 1, "", "float"], [1941, 3, 1, "", "from_buffer"], [1941, 3, 1, "", "from_file"], [1941, 3, 1, "", "get_device"], [1941, 3, 1, "", "half"], [1941, 3, 1, "", "hpu"], [1941, 3, 1, "", "int"], [1941, 4, 1, "", "is_cuda"], [1941, 4, 1, "", "is_hpu"], [1941, 3, 1, "", "is_pinned"], [1941, 3, 1, "", "is_shared"], [1941, 2, 1, "", "is_sparse"], [1941, 2, 1, "", "is_sparse_csr"], [1941, 3, 1, "", "long"], [1941, 3, 1, "", "mps"], [1941, 3, 1, "", "nbytes"], [1941, 3, 1, "", "new"], [1941, 3, 1, "", "pin_memory"], [1941, 3, 1, "", "resize_"], [1941, 3, 1, "", "share_memory_"], [1941, 3, 1, "", "short"], [1941, 3, 1, "", "size"], [1941, 3, 1, "", "tolist"], [1941, 3, 1, "", "type"], [1941, 3, 1, "", "untyped"]], "torch.__config__": [[32, 5, 1, "", "parallel_info"], [32, 5, 1, "", "show"]], "torch._logging": [[693, 5, 1, "", "set_logs"]], "torch.ao": [[1930, 0, 0, "-", "nn"], [1930, 0, 0, "-", "ns"], [1930, 0, 0, "-", "pruning"], [1930, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1933, 0, 0, "-", "intrinsic"], [1933, 0, 0, "-", "qat"], [1930, 0, 0, "-", "quantizable"], [1930, 0, 0, "-", "quantized"], [1930, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[713, 1, 1, "", "BNReLU2d"], [714, 1, 1, "", "BNReLU3d"], [715, 1, 1, "", "ConvBn1d"], [716, 1, 1, "", "ConvBn2d"], [717, 1, 1, "", "ConvBn3d"], [718, 1, 1, "", "ConvBnReLU1d"], [719, 1, 1, "", "ConvBnReLU2d"], [720, 1, 1, "", "ConvBnReLU3d"], [721, 1, 1, "", "ConvReLU1d"], [722, 1, 1, "", "ConvReLU2d"], [723, 1, 1, "", "ConvReLU3d"], [724, 1, 1, "", "LinearReLU"], [1933, 0, 0, "-", "modules"], [1933, 0, 0, "-", "qat"], [1933, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[725, 1, 1, "", "ConvBn1d"], [726, 1, 1, "", "ConvBn2d"], [727, 1, 1, "", "ConvBn3d"], [728, 1, 1, "", "ConvBnReLU1d"], [729, 1, 1, "", "ConvBnReLU2d"], [730, 1, 1, "", "ConvBnReLU3d"], [731, 1, 1, "", "ConvReLU2d"], [732, 1, 1, "", "ConvReLU3d"], [733, 1, 1, "", "LinearReLU"], [734, 1, 1, "", "freeze_bn_stats"], [1933, 0, 0, "-", "modules"], [735, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[736, 1, 1, "", "BNReLU2d"], [737, 1, 1, "", "BNReLU3d"], [738, 1, 1, "", "ConvReLU1d"], [739, 1, 1, "", "ConvReLU2d"], [740, 1, 1, "", "ConvReLU3d"], [741, 1, 1, "", "LinearReLU"], [1933, 0, 0, "-", "dynamic"], [1933, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[742, 1, 1, "", "LinearReLU"], [1933, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[743, 1, 1, "", "Conv2d"], [744, 1, 1, "", "Conv3d"], [745, 1, 1, "", "Linear"], [1933, 0, 0, "-", "dynamic"], [1933, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[745, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[746, 1, 1, "", "Linear"], [1933, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[747, 1, 1, "", "LSTM"], [748, 1, 1, "", "MultiheadAttention"], [1930, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[748, 3, 1, "", "dequantize"], [748, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[749, 1, 1, "", "BatchNorm2d"], [750, 1, 1, "", "BatchNorm3d"], [751, 1, 1, "", "Conv1d"], [752, 1, 1, "", "Conv2d"], [753, 1, 1, "", "Conv3d"], [754, 1, 1, "", "ConvTranspose1d"], [755, 1, 1, "", "ConvTranspose2d"], [756, 1, 1, "", "ConvTranspose3d"], [757, 1, 1, "", "ELU"], [758, 1, 1, "", "Embedding"], [759, 1, 1, "", "EmbeddingBag"], [760, 1, 1, "", "FXFloatFunctional"], [761, 1, 1, "", "FloatFunctional"], [762, 1, 1, "", "GroupNorm"], [763, 1, 1, "", "Hardswish"], [764, 1, 1, "", "InstanceNorm1d"], [765, 1, 1, "", "InstanceNorm2d"], [766, 1, 1, "", "InstanceNorm3d"], [767, 1, 1, "", "LayerNorm"], [768, 1, 1, "", "LeakyReLU"], [769, 1, 1, "", "Linear"], [770, 1, 1, "", "QFunctional"], [771, 1, 1, "", "ReLU6"], [772, 1, 1, "", "Sigmoid"], [1933, 0, 0, "-", "dynamic"], [1933, 0, 0, "-", "functional"], [1933, 0, 0, "-", "modules"], [1930, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[751, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[752, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[753, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[758, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[759, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[769, 3, 1, "", "from_float"], [769, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[773, 1, 1, "", "GRU"], [774, 1, 1, "", "GRUCell"], [775, 1, 1, "", "LSTM"], [776, 1, 1, "", "LSTMCell"], [777, 1, 1, "", "Linear"], [778, 1, 1, "", "RNNCell"], [1933, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[777, 3, 1, "", "from_float"], [777, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[779, 1, 1, "", "adaptive_avg_pool2d"], [780, 1, 1, "", "adaptive_avg_pool3d"], [781, 1, 1, "", "avg_pool2d"], [782, 1, 1, "", "avg_pool3d"], [783, 1, 1, "", "celu"], [784, 1, 1, "", "clamp"], [785, 1, 1, "", "conv1d"], [786, 1, 1, "", "conv2d"], [787, 1, 1, "", "conv3d"], [788, 1, 1, "", "elu"], [789, 1, 1, "", "hardsigmoid"], [790, 1, 1, "", "hardswish"], [791, 1, 1, "", "hardtanh"], [792, 1, 1, "", "interpolate"], [793, 1, 1, "", "leaky_relu"], [794, 1, 1, "", "linear"], [795, 1, 1, "", "max_pool1d"], [796, 1, 1, "", "max_pool2d"], [797, 1, 1, "", "threshold"], [798, 1, 1, "", "upsample"], [799, 1, 1, "", "upsample_bilinear"], [800, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1930, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1930, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1930, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1948, 0, 0, "-", "_numeric_suite"], [1949, 0, 0, "-", "_numeric_suite_fx"], [1930, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1948, 1, 1, "", "Logger"], [1948, 1, 1, "", "OutputLogger"], [1948, 1, 1, "", "Shadow"], [1948, 1, 1, "", "ShadowLogger"], [1948, 5, 1, "", "compare_model_outputs"], [1948, 5, 1, "", "compare_model_stub"], [1948, 5, 1, "", "compare_weights"], [1948, 5, 1, "", "get_logger_dict"], [1948, 5, 1, "", "get_matching_activations"], [1948, 5, 1, "", "prepare_model_outputs"], [1948, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1948, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1948, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1948, 3, 1, "", "add"], [1948, 3, 1, "", "add_relu"], [1948, 3, 1, "", "add_scalar"], [1948, 3, 1, "", "cat"], [1948, 3, 1, "", "forward"], [1948, 3, 1, "", "mul"], [1948, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1948, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1949, 1, 1, "", "NSTracer"], [1949, 1, 1, "", "OutputComparisonLogger"], [1949, 1, 1, "", "OutputLogger"], [1949, 5, 1, "", "add_loggers"], [1949, 5, 1, "", "add_shadow_loggers"], [1949, 5, 1, "", "convert_n_shadows_model"], [1949, 5, 1, "", "extend_logger_results_with_comparison"], [1949, 5, 1, "", "extract_logger_info"], [1949, 5, 1, "", "extract_results_n_shadows_model"], [1949, 5, 1, "", "extract_shadow_logger_info"], [1949, 5, 1, "", "extract_weights"], [1949, 5, 1, "", "loggers_set_enabled"], [1949, 5, 1, "", "loggers_set_save_activations"], [1949, 5, 1, "", "prepare_n_shadows_model"], [1949, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1949, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1949, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1949, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1949, 5, 1, "", "compute_cosine_similarity"], [1949, 5, 1, "", "compute_normalized_l2_error"], [1949, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1930, 0, 0, "-", "scheduler"], [1930, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[801, 1, 1, "", "DeQuantStub"], [802, 1, 1, "", "QuantStub"], [803, 1, 1, "", "QuantWrapper"], [804, 1, 1, "", "add_quant_dequant"], [1930, 0, 0, "-", "backend_config"], [810, 1, 1, "", "convert"], [811, 1, 1, "", "default_eval_fn"], [827, 1, 1, "", "fuse_modules"], [1930, 0, 0, "-", "fx"], [851, 1, 1, "", "prepare"], [852, 1, 1, "", "prepare_qat"], [853, 1, 1, "", "propagate_qconfig_"], [870, 1, 1, "", "quantize"], [871, 1, 1, "", "quantize_dynamic"], [876, 1, 1, "", "quantize_qat"], [877, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[805, 1, 1, "", "BackendConfig"], [806, 1, 1, "", "BackendPatternConfig"], [807, 1, 1, "", "DTypeConfig"], [808, 1, 1, "", "DTypeWithConstraints"], [809, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[805, 4, 1, "", "configs"], [805, 3, 1, "", "from_dict"], [805, 3, 1, "", "set_backend_pattern_config"], [805, 3, 1, "", "set_backend_pattern_configs"], [805, 3, 1, "", "set_name"], [805, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[806, 3, 1, "", "add_dtype_config"], [806, 3, 1, "", "from_dict"], [806, 3, 1, "", "set_dtype_configs"], [806, 3, 1, "", "set_fused_module"], [806, 3, 1, "", "set_fuser_method"], [806, 3, 1, "", "set_observation_type"], [806, 3, 1, "", "set_pattern"], [806, 3, 1, "", "set_qat_module"], [806, 3, 1, "", "set_reference_quantized_module"], [806, 3, 1, "", "set_root_module"], [806, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[807, 3, 1, "", "from_dict"], [807, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[809, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [809, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [809, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[812, 1, 1, "", "FakeQuantize"], [813, 1, 1, "", "FakeQuantizeBase"], [814, 1, 1, "", "FixedQParamsFakeQuantize"], [815, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [816, 2, 1, "", "default_fake_quant"], [817, 2, 1, "", "default_fused_act_fake_quant"], [818, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [819, 2, 1, "", "default_fused_wt_fake_quant"], [820, 2, 1, "", "default_histogram_fake_quant"], [821, 2, 1, "", "default_per_channel_weight_fake_quant"], [822, 2, 1, "", "default_weight_fake_quant"], [823, 1, 1, "", "disable_fake_quant"], [824, 1, 1, "", "disable_observer"], [825, 1, 1, "", "enable_fake_quant"], [826, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[828, 1, 1, "", "ConvertCustomConfig"], [829, 1, 1, "", "FuseCustomConfig"], [830, 1, 1, "", "PrepareCustomConfig"], [831, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[828, 3, 1, "", "from_dict"], [828, 3, 1, "", "set_observed_to_quantized_mapping"], [828, 3, 1, "", "set_preserved_attributes"], [828, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[829, 3, 1, "", "from_dict"], [829, 3, 1, "", "set_preserved_attributes"], [829, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[830, 3, 1, "", "from_dict"], [830, 3, 1, "", "set_float_to_observed_mapping"], [830, 3, 1, "", "set_input_quantized_indexes"], [830, 3, 1, "", "set_non_traceable_module_classes"], [830, 3, 1, "", "set_non_traceable_module_names"], [830, 3, 1, "", "set_output_quantized_indexes"], [830, 3, 1, "", "set_preserved_attributes"], [830, 3, 1, "", "set_standalone_module_class"], [830, 3, 1, "", "set_standalone_module_name"], [830, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[832, 1, 1, "", "HistogramObserver"], [833, 1, 1, "", "MinMaxObserver"], [834, 1, 1, "", "MovingAverageMinMaxObserver"], [835, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [836, 1, 1, "", "NoopObserver"], [837, 1, 1, "", "ObserverBase"], [838, 1, 1, "", "PerChannelMinMaxObserver"], [839, 1, 1, "", "PlaceholderObserver"], [840, 1, 1, "", "RecordingObserver"], [841, 2, 1, "", "default_debug_observer"], [842, 2, 1, "", "default_dynamic_quant_observer"], [843, 2, 1, "", "default_float_qparams_observer"], [844, 2, 1, "", "default_histogram_observer"], [845, 2, 1, "", "default_observer"], [846, 2, 1, "", "default_per_channel_weight_observer"], [847, 2, 1, "", "default_placeholder_observer"], [848, 2, 1, "", "default_weight_observer"], [849, 1, 1, "", "get_observer_state_dict"], [850, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[833, 3, 1, "", "calculate_qparams"], [833, 3, 1, "", "forward"], [833, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[837, 3, 1, "", "with_args"], [837, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[838, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[854, 1, 1, "", "QConfig"], [855, 2, 1, "", "default_activation_only_qconfig"], [856, 2, 1, "", "default_debug_qconfig"], [857, 2, 1, "", "default_dynamic_qconfig"], [858, 2, 1, "", "default_per_channel_qconfig"], [859, 2, 1, "", "default_qat_qconfig"], [860, 2, 1, "", "default_qat_qconfig_v2"], [861, 2, 1, "", "default_qconfig"], [862, 2, 1, "", "default_weight_only_qconfig"], [863, 2, 1, "", "float16_dynamic_qconfig"], [864, 2, 1, "", "float16_static_qconfig"], [865, 2, 1, "", "float_qparams_weight_only_qconfig"], [866, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[867, 1, 1, "", "QConfigMapping"], [868, 1, 1, "", "get_default_qat_qconfig_mapping"], [869, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[867, 3, 1, "", "from_dict"], [867, 3, 1, "", "set_global"], [867, 3, 1, "", "set_module_name"], [867, 3, 1, "", "set_module_name_object_type_order"], [867, 3, 1, "", "set_module_name_regex"], [867, 3, 1, "", "set_object_type"], [867, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[872, 1, 1, "", "convert_fx"], [873, 1, 1, "", "fuse_fx"], [874, 1, 1, "", "prepare_fx"], [875, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [906, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [920, 5, 1, "", "grad"], [921, 5, 1, "", "gradcheck"], [922, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"], [933, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[902, 3, 1, "", "backward"], [903, 3, 1, "", "forward"], [904, 3, 1, "", "jvp"], [905, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[907, 1, 1, "", "dual_level"], [908, 5, 1, "", "make_dual"], [909, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[910, 3, 1, "", "mark_dirty"], [911, 3, 1, "", "mark_non_differentiable"], [912, 3, 1, "", "save_for_backward"], [913, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[914, 5, 1, "", "hessian"], [915, 5, 1, "", "hvp"], [916, 5, 1, "", "jacobian"], [917, 5, 1, "", "jvp"], [918, 5, 1, "", "vhp"], [919, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[923, 3, 1, "", "metadata"], [924, 3, 1, "", "name"], [925, 4, 1, "", "next_functions"], [926, 3, 1, "", "register_hook"], [927, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [928, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[929, 3, 1, "", "export_chrome_trace"], [930, 3, 1, "", "key_averages"], [931, 4, 1, "", "self_cpu_time_total"], [932, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[968, 5, 1, "", "allow_in_graph"], [969, 5, 1, "", "assume_constant_result"], [970, 5, 1, "", "compile"], [971, 5, 1, "", "disable"], [972, 5, 1, "", "list_backends"], [973, 5, 1, "", "reset"]], "torch.cpu": [[0, 0, 0, "-", "amp"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[986, 1, 1, "", "CUDAGraph"], [987, 1, 1, "", "CUDAPluggableAllocator"], [988, 1, 1, "", "Event"], [989, 1, 1, "", "ExternalStream"], [990, 6, 1, "", "OutOfMemoryError"], [991, 1, 1, "", "Stream"], [992, 1, 1, "", "StreamContext"], [36, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [993, 5, 1, "", "caching_allocator_alloc"], [994, 5, 1, "", "caching_allocator_delete"], [995, 5, 1, "", "can_device_access_peer"], [996, 5, 1, "", "change_current_allocator"], [997, 5, 1, "", "clock_rate"], [1003, 5, 1, "", "current_blas_handle"], [1004, 5, 1, "", "current_device"], [1005, 5, 1, "", "current_stream"], [1006, 5, 1, "", "default_stream"], [1007, 1, 1, "", "device"], [1008, 5, 1, "", "device_count"], [1009, 1, 1, "", "device_of"], [1010, 5, 1, "", "empty_cache"], [1011, 5, 1, "", "get_allocator_backend"], [1012, 5, 1, "", "get_arch_list"], [1013, 5, 1, "", "get_device_capability"], [1014, 5, 1, "", "get_device_name"], [1015, 5, 1, "", "get_device_properties"], [1016, 5, 1, "", "get_gencode_flags"], [1017, 5, 1, "", "get_rng_state"], [1018, 5, 1, "", "get_rng_state_all"], [1019, 5, 1, "", "get_sync_debug_mode"], [1020, 1, 1, "", "graph"], [1021, 5, 1, "", "graph_pool_handle"], [1022, 5, 1, "", "init"], [1023, 5, 1, "", "initial_seed"], [1024, 5, 1, "", "ipc_collect"], [1025, 5, 1, "", "is_available"], [1026, 5, 1, "", "is_current_stream_capturing"], [1027, 5, 1, "", "is_initialized"], [1030, 5, 1, "", "list_gpu_processes"], [1031, 5, 1, "", "make_graphed_callables"], [1032, 5, 1, "", "manual_seed"], [1033, 5, 1, "", "manual_seed_all"], [1034, 5, 1, "", "max_memory_allocated"], [1035, 5, 1, "", "max_memory_cached"], [1036, 5, 1, "", "max_memory_reserved"], [1037, 5, 1, "", "mem_get_info"], [1038, 5, 1, "", "memory_allocated"], [1039, 5, 1, "", "memory_cached"], [1040, 5, 1, "", "memory_reserved"], [1041, 5, 1, "", "memory_snapshot"], [1042, 5, 1, "", "memory_stats"], [1043, 5, 1, "", "memory_summary"], [1044, 5, 1, "", "memory_usage"], [1048, 5, 1, "", "power_draw"], [1049, 5, 1, "", "reset_max_memory_allocated"], [1050, 5, 1, "", "reset_max_memory_cached"], [1051, 5, 1, "", "reset_peak_memory_stats"], [1052, 5, 1, "", "seed"], [1053, 5, 1, "", "seed_all"], [1054, 5, 1, "", "set_device"], [1055, 5, 1, "", "set_per_process_memory_fraction"], [1056, 5, 1, "", "set_rng_state"], [1057, 5, 1, "", "set_rng_state_all"], [1058, 5, 1, "", "set_stream"], [1059, 5, 1, "", "set_sync_debug_mode"], [1060, 5, 1, "", "stream"], [1061, 5, 1, "", "synchronize"], [1062, 5, 1, "", "temperature"], [1063, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[986, 3, 1, "", "capture_begin"], [986, 3, 1, "", "capture_end"], [986, 3, 1, "", "debug_dump"], [986, 3, 1, "", "enable_debug_mode"], [986, 3, 1, "", "pool"], [986, 3, 1, "", "replay"], [986, 3, 1, "", "reset"]], "torch.cuda.Event": [[988, 3, 1, "", "elapsed_time"], [988, 3, 1, "", "from_ipc_handle"], [988, 3, 1, "", "ipc_handle"], [988, 3, 1, "", "query"], [988, 3, 1, "", "record"], [988, 3, 1, "", "synchronize"], [988, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[989, 3, 1, "", "query"], [989, 3, 1, "", "record_event"], [989, 3, 1, "", "synchronize"], [989, 3, 1, "", "wait_event"], [989, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[991, 3, 1, "", "query"], [991, 3, 1, "", "record_event"], [991, 3, 1, "", "synchronize"], [991, 3, 1, "", "wait_event"], [991, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[36, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[998, 5, 1, "", "broadcast"], [999, 5, 1, "", "broadcast_coalesced"], [1000, 5, 1, "", "gather"], [1001, 5, 1, "", "reduce_add"], [1002, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1028, 5, 1, "", "_create_jit_fn"], [1029, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1045, 5, 1, "", "mark"], [1046, 5, 1, "", "range_pop"], [1047, 5, 1, "", "range_push"]], "torch.distributed": [[42, 1, 1, "", "Backend"], [42, 1, 1, "", "DistBackendError"], [42, 1, 1, "", "FileStore"], [40, 1, 1, "", "GradBucket"], [42, 1, 1, "", "HashStore"], [42, 1, 1, "", "P2POp"], [42, 1, 1, "", "PrefixStore"], [42, 1, 1, "", "ReduceOp"], [42, 1, 1, "", "Store"], [42, 1, 1, "", "TCPStore"], [42, 0, 0, "-", "algorithms"], [42, 5, 1, "", "all_gather"], [42, 5, 1, "", "all_gather_into_tensor"], [42, 5, 1, "", "all_gather_multigpu"], [42, 5, 1, "", "all_gather_object"], [42, 5, 1, "", "all_reduce"], [42, 5, 1, "", "all_reduce_multigpu"], [42, 5, 1, "", "all_to_all"], [42, 5, 1, "", "all_to_all_single"], [1935, 0, 0, "-", "autograd"], [42, 5, 1, "", "barrier"], [42, 5, 1, "", "batch_isend_irecv"], [42, 5, 1, "", "broadcast"], [42, 5, 1, "", "broadcast_multigpu"], [42, 5, 1, "", "broadcast_object_list"], [44, 0, 0, "-", "checkpoint"], [42, 0, 0, "-", "elastic"], [65, 0, 0, "-", "fsdp"], [42, 5, 1, "", "gather"], [42, 5, 1, "", "gather_object"], [42, 5, 1, "", "get_backend"], [42, 5, 1, "", "get_global_rank"], [42, 5, 1, "", "get_group_rank"], [42, 5, 1, "", "get_process_group_ranks"], [42, 5, 1, "", "get_rank"], [42, 5, 1, "", "get_world_size"], [42, 5, 1, "", "init_process_group"], [42, 5, 1, "", "irecv"], [42, 5, 1, "", "is_available"], [42, 5, 1, "", "is_gloo_available"], [42, 5, 1, "", "is_initialized"], [42, 5, 1, "", "is_mpi_available"], [42, 5, 1, "", "is_nccl_available"], [42, 5, 1, "", "is_torchelastic_launched"], [42, 5, 1, "", "isend"], [42, 0, 0, "-", "launch"], [42, 0, 0, "-", "launcher"], [42, 5, 1, "", "monitored_barrier"], [42, 5, 1, "", "new_group"], [42, 0, 0, "-", "nn"], [46, 0, 0, "-", "optim"], [42, 0, 0, "-", "pipeline"], [42, 5, 1, "", "recv"], [42, 5, 1, "", "reduce"], [42, 5, 1, "", "reduce_multigpu"], [42, 1, 1, "", "reduce_op"], [42, 5, 1, "", "reduce_scatter"], [42, 5, 1, "", "reduce_scatter_multigpu"], [42, 5, 1, "", "reduce_scatter_tensor"], [1935, 0, 0, "-", "rpc"], [60, 0, 0, "-", "run"], [42, 5, 1, "", "scatter"], [42, 5, 1, "", "scatter_object_list"], [42, 5, 1, "", "send"], [42, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[42, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[40, 5, 1, "", "buffer"], [40, 5, 1, "", "gradients"], [40, 5, 1, "", "index"], [40, 5, 1, "", "is_last"], [40, 5, 1, "", "parameters"], [40, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[42, 5, 1, "", "add"], [42, 5, 1, "", "compare_set"], [42, 5, 1, "", "delete_key"], [42, 5, 1, "", "get"], [42, 5, 1, "", "num_keys"], [42, 5, 1, "", "set"], [42, 5, 1, "", "set_timeout"], [42, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[43, 1, 1, "", "Join"], [43, 1, 1, "", "JoinHook"], [43, 1, 1, "", "Joinable"], [42, 0, 0, "-", "ddp_comm_hooks"], [42, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[43, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[43, 3, 1, "", "main_hook"], [43, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[43, 4, 1, "", "join_device"], [43, 3, 1, "", "join_hook"], [43, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[40, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[40, 5, 1, "", "allreduce_hook"], [40, 5, 1, "", "bf16_compress_hook"], [40, 5, 1, "", "bf16_compress_wrapper"], [40, 5, 1, "", "fp16_compress_hook"], [40, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[40, 1, 1, "", "PowerSGDState"], [40, 5, 1, "", "batched_powerSGD_hook"], [40, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[40, 3, 1, "", "__getstate__"], [40, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1935, 5, 1, "", "backward"], [1935, 1, 1, "", "context"], [1935, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[44, 1, 1, "", "DefaultLoadPlanner"], [44, 1, 1, "", "DefaultSavePlanner"], [44, 1, 1, "", "FileSystemReader"], [44, 1, 1, "", "FileSystemWriter"], [44, 1, 1, "", "LoadPlan"], [44, 1, 1, "", "LoadPlanner"], [44, 1, 1, "", "ReadItem"], [44, 1, 1, "", "SavePlan"], [44, 1, 1, "", "SavePlanner"], [44, 1, 1, "", "StorageReader"], [44, 1, 1, "", "StorageWriter"], [44, 1, 1, "", "WriteItem"], [44, 5, 1, "", "load_state_dict"], [44, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[44, 3, 1, "", "lookup_tensor"], [44, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[44, 3, 1, "", "lookup_object"], [44, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[44, 3, 1, "", "commit_tensor"], [44, 3, 1, "", "create_global_plan"], [44, 3, 1, "", "create_local_plan"], [44, 3, 1, "", "finish_plan"], [44, 3, 1, "", "load_bytes"], [44, 3, 1, "", "resolve_tensor"], [44, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[44, 3, 1, "", "create_global_plan"], [44, 3, 1, "", "create_local_plan"], [44, 3, 1, "", "finish_plan"], [44, 3, 1, "", "resolve_data"], [44, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[44, 3, 1, "", "prepare_global_plan"], [44, 3, 1, "", "prepare_local_plan"], [44, 3, 1, "", "read_data"], [44, 3, 1, "", "read_metadata"], [44, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[44, 3, 1, "", "finish"], [44, 3, 1, "", "prepare_global_plan"], [44, 3, 1, "", "prepare_local_plan"], [44, 3, 1, "", "set_up_storage_writer"], [44, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[50, 0, 0, "-", "agent"], [53, 0, 0, "-", "events"], [56, 0, 0, "-", "metrics"], [57, 0, 0, "-", "multiprocessing"], [59, 0, 0, "-", "rendezvous"], [61, 0, 0, "-", "timer"], [42, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[50, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[50, 1, 1, "", "ElasticAgent"], [50, 1, 1, "", "SimpleElasticAgent"], [50, 1, 1, "", "Worker"], [50, 1, 1, "", "WorkerGroup"], [50, 1, 1, "", "WorkerSpec"], [50, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[50, 3, 1, "", "get_worker_group"], [50, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[50, 3, 1, "", "_assign_worker_ranks"], [50, 3, 1, "", "_exit_barrier"], [50, 3, 1, "", "_initialize_workers"], [50, 3, 1, "", "_monitor_workers"], [50, 3, 1, "", "_rendezvous"], [50, 3, 1, "", "_restart_workers"], [50, 3, 1, "", "_shutdown"], [50, 3, 1, "", "_start_workers"], [50, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[50, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[50, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[50, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[50, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[53, 1, 1, "", "Event"], [53, 2, 1, "", "EventMetadataValue"], [53, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[53, 5, 1, "", "get_logging_handler"], [53, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[56, 1, 1, "", "ConsoleMetricHandler"], [56, 1, 1, "", "MetricHandler"], [56, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[56, 5, 1, "", "configure"], [56, 5, 1, "", "prof"], [56, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[57, 1, 1, "", "MultiprocessContext"], [57, 1, 1, "", "PContext"], [57, 1, 1, "", "RunProcsResult"], [57, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[52, 0, 0, "-", "errors"], [57, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[52, 1, 1, "", "ChildFailedError"], [52, 1, 1, "", "ErrorHandler"], [52, 1, 1, "", "ProcessFailure"], [52, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[59, 1, 1, "", "RendezvousClosedError"], [59, 1, 1, "", "RendezvousConnectionError"], [59, 1, 1, "", "RendezvousError"], [59, 1, 1, "", "RendezvousHandler"], [59, 1, 1, "", "RendezvousHandlerRegistry"], [59, 1, 1, "", "RendezvousParameters"], [59, 1, 1, "", "RendezvousStateError"], [59, 1, 1, "", "RendezvousTimeoutError"], [59, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[59, 3, 1, "", "get_backend"], [59, 3, 1, "", "get_run_id"], [59, 3, 1, "", "is_closed"], [59, 3, 1, "", "next_rendezvous"], [59, 3, 1, "", "num_nodes_waiting"], [59, 3, 1, "", "set_closed"], [59, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[59, 3, 1, "", "create_handler"], [59, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[59, 3, 1, "", "get"], [59, 3, 1, "", "get_as_bool"], [59, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[59, 1, 1, "", "C10dRendezvousBackend"], [59, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[59, 3, 1, "", "get_state"], [59, 4, 1, "", "name"], [59, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[59, 1, 1, "", "DynamicRendezvousHandler"], [59, 1, 1, "", "RendezvousBackend"], [59, 1, 1, "", "RendezvousTimeout"], [59, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[59, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[59, 3, 1, "", "get_state"], [59, 4, 1, "", "name"], [59, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[59, 4, 1, "", "close"], [59, 4, 1, "", "heartbeat"], [59, 4, 1, "", "join"], [59, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[59, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[59, 1, 1, "", "EtcdRendezvousBackend"], [59, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[59, 3, 1, "", "get_state"], [59, 4, 1, "", "name"], [59, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[59, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[59, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[59, 3, 1, "", "add"], [59, 3, 1, "", "check"], [59, 3, 1, "", "get"], [59, 3, 1, "", "set"], [59, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[61, 1, 1, "", "FileTimerClient"], [61, 1, 1, "", "FileTimerServer"], [61, 1, 1, "", "LocalTimerClient"], [61, 1, 1, "", "LocalTimerServer"], [61, 1, 1, "", "TimerClient"], [61, 1, 1, "", "TimerRequest"], [61, 1, 1, "", "TimerServer"], [61, 5, 1, "", "configure"], [61, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[61, 3, 1, "", "acquire"], [61, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[61, 3, 1, "", "clear_timers"], [61, 3, 1, "", "get_expired_timers"], [61, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[42, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[65, 1, 1, "", "BackwardPrefetch"], [65, 1, 1, "", "CPUOffload"], [65, 1, 1, "", "FullyShardedDataParallel"], [65, 1, 1, "", "MixedPrecision"], [65, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[65, 3, 1, "", "apply"], [65, 3, 1, "", "clip_grad_norm_"], [65, 3, 1, "", "flatten_sharded_optim_state_dict"], [65, 3, 1, "", "forward"], [65, 3, 1, "", "fsdp_modules"], [65, 3, 1, "", "full_optim_state_dict"], [65, 3, 1, "", "get_state_dict_type"], [65, 4, 1, "", "module"], [65, 3, 1, "", "named_buffers"], [65, 3, 1, "", "named_parameters"], [65, 3, 1, "", "no_sync"], [65, 3, 1, "", "optim_state_dict"], [65, 3, 1, "", "optim_state_dict_to_load"], [65, 3, 1, "", "register_comm_hook"], [65, 3, 1, "", "rekey_optim_state_dict"], [65, 3, 1, "", "scatter_full_optim_state_dict"], [65, 3, 1, "", "set_state_dict_type"], [65, 3, 1, "", "shard_full_optim_state_dict"], [65, 3, 1, "", "sharded_optim_state_dict"], [65, 3, 1, "", "state_dict_type"], [65, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[42, 0, 0, "-", "api"], [42, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1935, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1935, 3, 1, "", "get_module_rref"], [1935, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[42, 0, 0, "-", "templates"]], "torch.distributed.optim": [[46, 1, 1, "", "DistributedOptimizer"], [46, 1, 1, "", "PostLocalSGDOptimizer"], [46, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[46, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[46, 3, 1, "", "load_state_dict"], [46, 3, 1, "", "state_dict"], [46, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[46, 3, 1, "", "add_param_group"], [46, 3, 1, "", "consolidate_state_dict"], [46, 3, 1, "", "join_hook"], [46, 3, 1, "", "load_state_dict"], [46, 3, 1, "", "state_dict"], [46, 3, 1, "", "step"]], "torch.distributed.pipeline": [[42, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1928, 1, 1, "", "Pipe"], [42, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1928, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1928, 1, 1, "", "pop"], [1928, 5, 1, "", "skippable"], [1928, 1, 1, "", "stash"], [1928, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1935, 1, 1, "", "BackendType"], [1935, 1, 1, "", "RRef"], [1935, 1, 1, "", "RpcBackendOptions"], [1935, 1, 1, "", "TensorPipeRpcBackendOptions"], [1935, 1, 1, "", "WorkerInfo"], [1935, 5, 1, "", "get_worker_info"], [1935, 5, 1, "", "init_rpc"], [1935, 5, 1, "", "remote"], [1935, 5, 1, "", "rpc_async"], [1935, 5, 1, "", "rpc_sync"], [1935, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1935, 4, 1, "", "init_method"], [1935, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1935, 4, 1, "", "device_maps"], [1935, 4, 1, "", "devices"], [1935, 4, 1, "", "init_method"], [1935, 4, 1, "", "num_worker_threads"], [1935, 4, 1, "", "rpc_timeout"], [1935, 3, 1, "", "set_device_map"], [1935, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1935, 4, 1, "", "id"], [1935, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1935, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[47, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[47, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[47, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[47, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[47, 1, 1, "", "ColwiseParallel"], [47, 1, 1, "", "PairwiseParallel"], [47, 1, 1, "", "RowwiseParallel"], [47, 1, 1, "", "SequenceParallel"], [47, 5, 1, "", "make_input_replicate_1d"], [47, 5, 1, "", "make_input_reshard_replicate"], [47, 5, 1, "", "make_input_shard_1d"], [47, 5, 1, "", "make_input_shard_1d_last_dim"], [47, 5, 1, "", "make_output_replicate_1d"], [47, 5, 1, "", "make_output_reshard_tensor"], [47, 5, 1, "", "make_output_shard_1d"], [47, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[48, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.beta": [[48, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "concentration0"], [48, 4, 1, "", "concentration1"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.binomial": [[48, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.categorical": [[48, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[48, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.chi2": [[48, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "df"], [48, 3, 1, "", "expand"]], "torch.distributions": [[48, 0, 0, "-", "constraint_registry"], [48, 0, 0, "-", "constraints"], [48, 0, 0, "-", "kl"], [48, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[48, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[48, 3, 1, "", "register"]], "torch.distributions.constraints": [[48, 1, 1, "", "Constraint"], [48, 2, 1, "", "cat"], [48, 2, 1, "", "dependent_property"], [48, 2, 1, "", "greater_than"], [48, 2, 1, "", "greater_than_eq"], [48, 2, 1, "", "half_open_interval"], [48, 2, 1, "", "independent"], [48, 2, 1, "", "integer_interval"], [48, 2, 1, "", "interval"], [48, 2, 1, "", "less_than"], [48, 2, 1, "", "multinomial"], [48, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[48, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[48, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[48, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.distribution": [[48, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[48, 4, 1, "", "arg_constraints"], [48, 4, 1, "", "batch_shape"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 4, 1, "", "event_shape"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "perplexity"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 3, 1, "", "sample_n"], [48, 3, 1, "", "set_default_validate_args"], [48, 4, 1, "", "stddev"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[48, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[48, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[48, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[48, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.gamma": [[48, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.geometric": [[48, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[48, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[48, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "scale"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[48, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "scale"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.independent": [[48, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "has_enumerate_support"], [48, 4, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.kl": [[48, 5, 1, "", "kl_divergence"], [48, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[48, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.laplace": [[48, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[48, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"]], "torch.distributions.log_normal": [[48, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "loc"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "scale"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[48, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "covariance_matrix"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "precision_matrix"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "scale_tril"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[48, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 4, 1, "", "component_distribution"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mixture_distribution"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[48, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"], [48, 2, 1, "", "total_count"], [48, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[48, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "covariance_matrix"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "precision_matrix"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "scale_tril"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[48, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.normal": [[48, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "stddev"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[48, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "enumerate_support"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_enumerate_support"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.pareto": [[48, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.poisson": [[48, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[48, 1, 1, "", "LogitRelaxedBernoulli"], [48, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "param_shape"], [48, 4, 1, "", "probs"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "probs"], [48, 2, 1, "", "support"], [48, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[48, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 4, 1, "", "logits"], [48, 4, 1, "", "probs"], [48, 2, 1, "", "support"], [48, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[48, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[48, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 3, 1, "", "rsample"], [48, 3, 1, "", "sample"], [48, 4, 1, "", "support"]], "torch.distributions.transforms": [[48, 1, 1, "", "AbsTransform"], [48, 1, 1, "", "AffineTransform"], [48, 1, 1, "", "CatTransform"], [48, 1, 1, "", "ComposeTransform"], [48, 1, 1, "", "CorrCholeskyTransform"], [48, 1, 1, "", "CumulativeDistributionTransform"], [48, 1, 1, "", "ExpTransform"], [48, 1, 1, "", "IndependentTransform"], [48, 1, 1, "", "LowerCholeskyTransform"], [48, 1, 1, "", "PositiveDefiniteTransform"], [48, 1, 1, "", "PowerTransform"], [48, 1, 1, "", "ReshapeTransform"], [48, 1, 1, "", "SigmoidTransform"], [48, 1, 1, "", "SoftmaxTransform"], [48, 1, 1, "", "SoftplusTransform"], [48, 1, 1, "", "StackTransform"], [48, 1, 1, "", "StickBreakingTransform"], [48, 1, 1, "", "TanhTransform"], [48, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[48, 3, 1, "", "forward_shape"], [48, 4, 1, "", "inv"], [48, 3, 1, "", "inverse_shape"], [48, 3, 1, "", "log_abs_det_jacobian"], [48, 4, 1, "", "sign"]], "torch.distributions.uniform": [[48, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "cdf"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "icdf"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "stddev"], [48, 4, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[48, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 3, 1, "", "sample"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.weibull": [[48, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[48, 2, 1, "", "arg_constraints"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.distributions.wishart": [[48, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[48, 2, 1, "", "arg_constraints"], [48, 4, 1, "", "covariance_matrix"], [48, 3, 1, "", "entropy"], [48, 3, 1, "", "expand"], [48, 2, 1, "", "has_rsample"], [48, 3, 1, "", "log_prob"], [48, 4, 1, "", "mean"], [48, 4, 1, "", "mode"], [48, 4, 1, "", "precision_matrix"], [48, 3, 1, "", "rsample"], [48, 4, 1, "", "scale_tril"], [48, 2, 1, "", "support"], [48, 4, 1, "", "variance"]], "torch.fft": [[1101, 5, 1, "", "fft"], [1102, 5, 1, "", "fft2"], [1103, 5, 1, "", "fftfreq"], [1104, 5, 1, "", "fftn"], [1105, 5, 1, "", "fftshift"], [1106, 5, 1, "", "hfft"], [1107, 5, 1, "", "hfft2"], [1108, 5, 1, "", "hfftn"], [1109, 5, 1, "", "ifft"], [1110, 5, 1, "", "ifft2"], [1111, 5, 1, "", "ifftn"], [1112, 5, 1, "", "ifftshift"], [1113, 5, 1, "", "ihfft"], [1114, 5, 1, "", "ihfft2"], [1115, 5, 1, "", "ihfftn"], [1116, 5, 1, "", "irfft"], [1117, 5, 1, "", "irfft2"], [1118, 5, 1, "", "irfftn"], [1119, 5, 1, "", "rfft"], [1120, 5, 1, "", "rfft2"], [1121, 5, 1, "", "rfftfreq"], [1122, 5, 1, "", "rfftn"]], "torch.func": [[1141, 5, 1, "", "functional_call"], [1142, 5, 1, "", "functionalize"], [1143, 5, 1, "", "grad"], [1144, 5, 1, "", "grad_and_value"], [1145, 5, 1, "", "hessian"], [1146, 5, 1, "", "jacfwd"], [1147, 5, 1, "", "jacrev"], [1148, 5, 1, "", "jvp"], [1149, 5, 1, "", "linearize"], [1150, 5, 1, "", "replace_all_batch_norm_modules_"], [1151, 5, 1, "", "stack_module_state"], [1152, 5, 1, "", "vjp"], [1153, 5, 1, "", "vmap"]], "torch.futures": [[72, 1, 1, "", "Future"], [72, 5, 1, "", "collect_all"], [72, 5, 1, "", "wait_all"]], "torch.futures.Future": [[72, 3, 1, "", "add_done_callback"], [72, 3, 1, "", "done"], [72, 3, 1, "", "set_exception"], [72, 3, 1, "", "set_result"], [72, 3, 1, "", "then"], [72, 3, 1, "", "value"], [72, 3, 1, "", "wait"]], "torch.fx": [[73, 1, 1, "", "Graph"], [73, 1, 1, "", "GraphModule"], [73, 1, 1, "", "Interpreter"], [73, 1, 1, "", "Node"], [73, 1, 1, "", "Proxy"], [73, 1, 1, "", "Tracer"], [73, 1, 1, "", "Transformer"], [73, 0, 0, "-", "experimental"], [73, 0, 0, "-", "passes"], [73, 5, 1, "", "replace_pattern"], [73, 5, 1, "", "symbolic_trace"], [73, 5, 1, "", "wrap"]], "torch.fx.Graph": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "call_function"], [73, 3, 1, "", "call_method"], [73, 3, 1, "", "call_module"], [73, 3, 1, "", "create_node"], [73, 3, 1, "", "eliminate_dead_code"], [73, 3, 1, "", "erase_node"], [73, 3, 1, "", "get_attr"], [73, 3, 1, "", "graph_copy"], [73, 3, 1, "", "inserting_after"], [73, 3, 1, "", "inserting_before"], [73, 3, 1, "", "lint"], [73, 3, 1, "", "node_copy"], [73, 4, 1, "", "nodes"], [73, 3, 1, "", "on_generate_code"], [73, 3, 1, "", "output"], [73, 3, 1, "", "placeholder"], [73, 3, 1, "", "print_tabular"], [73, 3, 1, "", "process_inputs"], [73, 3, 1, "", "process_outputs"], [73, 3, 1, "", "python_code"], [73, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[73, 3, 1, "", "__init__"], [73, 3, 1, "", "add_submodule"], [73, 4, 1, "", "code"], [73, 3, 1, "", "delete_all_unused_submodules"], [73, 3, 1, "", "delete_submodule"], [73, 4, 1, "", "graph"], [73, 3, 1, "", "print_readable"], [73, 3, 1, "", "recompile"], [73, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[73, 3, 1, "", "boxed_run"], [73, 3, 1, "", "call_function"], [73, 3, 1, "", "call_method"], [73, 3, 1, "", "call_module"], [73, 3, 1, "", "fetch_args_kwargs_from_env"], [73, 3, 1, "", "fetch_attr"], [73, 3, 1, "", "get_attr"], [73, 3, 1, "", "map_nodes_to_values"], [73, 3, 1, "", "output"], [73, 3, 1, "", "placeholder"], [73, 3, 1, "", "run"], [73, 3, 1, "", "run_node"]], "torch.fx.Node": [[73, 4, 1, "", "all_input_nodes"], [73, 3, 1, "", "append"], [73, 4, 1, "", "args"], [73, 3, 1, "", "format_node"], [73, 3, 1, "", "is_impure"], [73, 4, 1, "", "kwargs"], [73, 4, 1, "", "next"], [73, 3, 1, "", "normalized_arguments"], [73, 3, 1, "", "prepend"], [73, 4, 1, "", "prev"], [73, 3, 1, "", "replace_all_uses_with"], [73, 3, 1, "", "replace_input_with"], [73, 4, 1, "", "stack_trace"], [73, 3, 1, "", "update_arg"], [73, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[73, 3, 1, "", "call_module"], [73, 3, 1, "", "create_arg"], [73, 3, 1, "", "create_args_for_root"], [73, 3, 1, "", "create_node"], [73, 3, 1, "", "create_proxy"], [73, 3, 1, "", "getattr"], [73, 3, 1, "", "is_leaf_module"], [73, 3, 1, "", "iter"], [73, 3, 1, "", "keys"], [73, 3, 1, "", "path_of_module"], [73, 3, 1, "", "proxy"], [73, 3, 1, "", "to_bool"], [73, 3, 1, "", "trace"]], "torch.fx.Transformer": [[73, 3, 1, "", "call_function"], [73, 3, 1, "", "call_module"], [73, 3, 1, "", "get_attr"], [73, 3, 1, "", "placeholder"], [73, 3, 1, "", "transform"]], "torch.fx.experimental": [[73, 0, 0, "-", "migrate_gradual_types"], [73, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[73, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[73, 0, 0, "-", "backends"], [73, 0, 0, "-", "dialect"], [73, 0, 0, "-", "infra"], [73, 0, 0, "-", "tests"], [73, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[73, 0, 0, "-", "common"]], "torch.hub": [[1879, 5, 1, "", "download_url_to_file"], [1879, 5, 1, "", "get_dir"], [1879, 5, 1, "", "help"], [1879, 5, 1, "", "list"], [1879, 5, 1, "", "load"], [1879, 5, 1, "", "load_state_dict_from_url"], [1879, 5, 1, "", "set_dir"]], "torch.jit": [[1210, 1, 1, "", "Attribute"], [1211, 1, 1, "", "ScriptFunction"], [1212, 1, 1, "", "ScriptModule"], [1213, 5, 1, "", "annotate"], [1214, 5, 1, "", "enable_onednn_fusion"], [1882, 5, 1, "", "export"], [1215, 5, 1, "", "fork"], [1216, 5, 1, "", "freeze"], [1217, 5, 1, "", "ignore"], [1884, 5, 1, "", "is_scripting"], [1884, 5, 1, "", "is_tracing"], [1218, 5, 1, "", "isinstance"], [1219, 5, 1, "", "load"], [1882, 0, 0, "-", "mobile"], [1220, 5, 1, "", "onednn_fusion_enabled"], [1221, 5, 1, "", "optimize_for_inference"], [1222, 5, 1, "", "save"], [1223, 5, 1, "", "script"], [1224, 5, 1, "", "script_if_tracing"], [1225, 5, 1, "", "set_fusion_strategy"], [1226, 1, 1, "", "strict_fusion"], [1883, 0, 0, "-", "supported_ops"], [1227, 5, 1, "", "trace"], [1228, 5, 1, "", "trace_module"], [1887, 0, 0, "-", "unsupported_tensor_ops"], [1229, 5, 1, "", "unused"], [1230, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1210, 3, 1, "", "count"], [1210, 3, 1, "", "index"], [1210, 2, 1, "", "type"], [1210, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1211, 3, 1, "", "get_debug_state"], [1211, 3, 1, "", "save"], [1211, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1212, 3, 1, "", "add_module"], [1212, 3, 1, "", "apply"], [1212, 3, 1, "", "bfloat16"], [1212, 3, 1, "", "buffers"], [1212, 3, 1, "", "children"], [1212, 4, 1, "", "code"], [1212, 4, 1, "", "code_with_constants"], [1212, 3, 1, "", "compile"], [1212, 3, 1, "", "cpu"], [1212, 3, 1, "", "cuda"], [1212, 3, 1, "", "double"], [1212, 3, 1, "", "eval"], [1212, 3, 1, "", "extra_repr"], [1212, 3, 1, "", "float"], [1212, 3, 1, "", "get_buffer"], [1212, 3, 1, "", "get_extra_state"], [1212, 3, 1, "", "get_parameter"], [1212, 3, 1, "", "get_submodule"], [1212, 4, 1, "", "graph"], [1212, 3, 1, "", "half"], [1212, 4, 1, "", "inlined_graph"], [1212, 3, 1, "", "ipu"], [1212, 3, 1, "", "load_state_dict"], [1212, 3, 1, "", "modules"], [1212, 3, 1, "", "named_buffers"], [1212, 3, 1, "", "named_children"], [1212, 3, 1, "", "named_modules"], [1212, 3, 1, "", "named_parameters"], [1212, 3, 1, "", "parameters"], [1212, 3, 1, "", "register_backward_hook"], [1212, 3, 1, "", "register_buffer"], [1212, 3, 1, "", "register_forward_hook"], [1212, 3, 1, "", "register_forward_pre_hook"], [1212, 3, 1, "", "register_full_backward_hook"], [1212, 3, 1, "", "register_full_backward_pre_hook"], [1212, 3, 1, "", "register_load_state_dict_post_hook"], [1212, 3, 1, "", "register_module"], [1212, 3, 1, "", "register_parameter"], [1212, 3, 1, "", "register_state_dict_pre_hook"], [1212, 3, 1, "", "requires_grad_"], [1212, 3, 1, "", "save"], [1212, 3, 1, "", "set_extra_state"], [1212, 3, 1, "", "share_memory"], [1212, 3, 1, "", "state_dict"], [1212, 3, 1, "", "to"], [1212, 3, 1, "", "to_empty"], [1212, 3, 1, "", "train"], [1212, 3, 1, "", "type"], [1212, 3, 1, "", "xpu"], [1212, 3, 1, "", "zero_grad"]], "torch.library": [[1889, 1, 1, "", "Library"]], "torch.library.Library": [[1889, 3, 1, "", "define"], [1889, 3, 1, "", "impl"]], "torch.linalg": [[1241, 5, 1, "", "cholesky"], [1242, 5, 1, "", "cholesky_ex"], [1243, 5, 1, "", "cond"], [1244, 5, 1, "", "cross"], [1245, 5, 1, "", "det"], [1246, 5, 1, "", "diagonal"], [1247, 5, 1, "", "eig"], [1248, 5, 1, "", "eigh"], [1249, 5, 1, "", "eigvals"], [1250, 5, 1, "", "eigvalsh"], [1251, 5, 1, "", "householder_product"], [1252, 5, 1, "", "inv"], [1253, 5, 1, "", "inv_ex"], [1254, 5, 1, "", "ldl_factor"], [1255, 5, 1, "", "ldl_factor_ex"], [1256, 5, 1, "", "ldl_solve"], [1257, 5, 1, "", "lstsq"], [1258, 5, 1, "", "lu"], [1259, 5, 1, "", "lu_factor"], [1260, 5, 1, "", "lu_factor_ex"], [1261, 5, 1, "", "lu_solve"], [1262, 5, 1, "", "matmul"], [1263, 5, 1, "", "matrix_exp"], [1264, 5, 1, "", "matrix_norm"], [1265, 5, 1, "", "matrix_power"], [1266, 5, 1, "", "matrix_rank"], [1267, 5, 1, "", "multi_dot"], [1268, 5, 1, "", "norm"], [1269, 5, 1, "", "pinv"], [1270, 5, 1, "", "qr"], [1271, 5, 1, "", "slogdet"], [1272, 5, 1, "", "solve"], [1273, 5, 1, "", "solve_ex"], [1274, 5, 1, "", "solve_triangular"], [1275, 5, 1, "", "svd"], [1276, 5, 1, "", "svdvals"], [1277, 5, 1, "", "tensorinv"], [1278, 5, 1, "", "tensorsolve"], [1279, 5, 1, "", "vander"], [1280, 5, 1, "", "vecdot"], [1281, 5, 1, "", "vector_norm"]], "torch.masked": [[1892, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1895, 1, 1, "", "Aggregation"], [1895, 1, 1, "", "Event"], [1895, 1, 1, "", "EventHandlerHandle"], [1895, 1, 1, "", "Stat"], [1895, 1, 1, "", "TensorboardEventHandler"], [1895, 1, 1, "", "data_value_t"], [1895, 5, 1, "", "log_event"], [1895, 5, 1, "", "register_event_handler"], [1895, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1895, 4, 1, "", "name"]], "torch.monitor.Event": [[1895, 3, 1, "", "__init__"], [1895, 4, 1, "", "data"], [1895, 4, 1, "", "name"], [1895, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1895, 3, 1, "", "__init__"], [1895, 3, 1, "", "add"], [1895, 4, 1, "", "count"], [1895, 3, 1, "", "get"], [1895, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1895, 3, 1, "", "__init__"]], "torch.mps": [[1320, 5, 1, "", "current_allocated_memory"], [1321, 5, 1, "", "driver_allocated_memory"], [1322, 5, 1, "", "empty_cache"], [1323, 5, 1, "", "get_rng_state"], [1324, 5, 1, "", "manual_seed"], [1328, 5, 1, "", "seed"], [1329, 5, 1, "", "set_per_process_memory_fraction"], [1330, 5, 1, "", "set_rng_state"], [1331, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1325, 5, 1, "", "profile"], [1326, 5, 1, "", "start"], [1327, 5, 1, "", "stop"]], "torch.multiprocessing": [[1897, 1, 1, "", "SpawnContext"], [1897, 5, 1, "", "get_all_sharing_strategies"], [1897, 5, 1, "", "get_sharing_strategy"], [1897, 5, 1, "", "set_sharing_strategy"], [1897, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1897, 3, 1, "", "join"]], "torch.nested": [[1900, 5, 1, "", "as_nested_tensor"], [1900, 5, 1, "", "nested_tensor"], [1900, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1349, 1, 1, "", "AdaptiveAvgPool1d"], [1350, 1, 1, "", "AdaptiveAvgPool2d"], [1351, 1, 1, "", "AdaptiveAvgPool3d"], [1352, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1353, 1, 1, "", "AdaptiveMaxPool1d"], [1354, 1, 1, "", "AdaptiveMaxPool2d"], [1355, 1, 1, "", "AdaptiveMaxPool3d"], [1356, 1, 1, "", "AlphaDropout"], [1357, 1, 1, "", "AvgPool1d"], [1358, 1, 1, "", "AvgPool2d"], [1359, 1, 1, "", "AvgPool3d"], [1360, 1, 1, "", "BCELoss"], [1361, 1, 1, "", "BCEWithLogitsLoss"], [1362, 1, 1, "", "BatchNorm1d"], [1363, 1, 1, "", "BatchNorm2d"], [1364, 1, 1, "", "BatchNorm3d"], [1365, 1, 1, "", "Bilinear"], [1366, 1, 1, "", "CELU"], [1367, 1, 1, "", "CTCLoss"], [1368, 1, 1, "", "ChannelShuffle"], [1369, 1, 1, "", "ConstantPad1d"], [1370, 1, 1, "", "ConstantPad2d"], [1371, 1, 1, "", "ConstantPad3d"], [1372, 1, 1, "", "Conv1d"], [1373, 1, 1, "", "Conv2d"], [1374, 1, 1, "", "Conv3d"], [1375, 1, 1, "", "ConvTranspose1d"], [1376, 1, 1, "", "ConvTranspose2d"], [1377, 1, 1, "", "ConvTranspose3d"], [1378, 1, 1, "", "CosineEmbeddingLoss"], [1379, 1, 1, "", "CosineSimilarity"], [1380, 1, 1, "", "CrossEntropyLoss"], [1381, 1, 1, "", "DataParallel"], [1382, 1, 1, "", "Dropout"], [1383, 1, 1, "", "Dropout1d"], [1384, 1, 1, "", "Dropout2d"], [1385, 1, 1, "", "Dropout3d"], [1386, 1, 1, "", "ELU"], [1387, 1, 1, "", "Embedding"], [1388, 1, 1, "", "EmbeddingBag"], [1389, 1, 1, "", "FeatureAlphaDropout"], [1390, 1, 1, "", "Flatten"], [1391, 1, 1, "", "Fold"], [1392, 1, 1, "", "FractionalMaxPool2d"], [1393, 1, 1, "", "FractionalMaxPool3d"], [1394, 1, 1, "", "GELU"], [1395, 1, 1, "", "GLU"], [1396, 1, 1, "", "GRU"], [1397, 1, 1, "", "GRUCell"], [1398, 1, 1, "", "GaussianNLLLoss"], [1399, 1, 1, "", "GroupNorm"], [1400, 1, 1, "", "Hardshrink"], [1401, 1, 1, "", "Hardsigmoid"], [1402, 1, 1, "", "Hardswish"], [1403, 1, 1, "", "Hardtanh"], [1404, 1, 1, "", "HingeEmbeddingLoss"], [1405, 1, 1, "", "HuberLoss"], [1406, 1, 1, "", "Identity"], [1407, 1, 1, "", "InstanceNorm1d"], [1408, 1, 1, "", "InstanceNorm2d"], [1409, 1, 1, "", "InstanceNorm3d"], [1410, 1, 1, "", "KLDivLoss"], [1411, 1, 1, "", "L1Loss"], [1412, 1, 1, "", "LPPool1d"], [1413, 1, 1, "", "LPPool2d"], [1414, 1, 1, "", "LSTM"], [1415, 1, 1, "", "LSTMCell"], [1416, 1, 1, "", "LayerNorm"], [1417, 1, 1, "", "LazyBatchNorm1d"], [1418, 1, 1, "", "LazyBatchNorm2d"], [1419, 1, 1, "", "LazyBatchNorm3d"], [1420, 1, 1, "", "LazyConv1d"], [1421, 1, 1, "", "LazyConv2d"], [1422, 1, 1, "", "LazyConv3d"], [1423, 1, 1, "", "LazyConvTranspose1d"], [1424, 1, 1, "", "LazyConvTranspose2d"], [1425, 1, 1, "", "LazyConvTranspose3d"], [1426, 1, 1, "", "LazyInstanceNorm1d"], [1427, 1, 1, "", "LazyInstanceNorm2d"], [1428, 1, 1, "", "LazyInstanceNorm3d"], [1429, 1, 1, "", "LazyLinear"], [1430, 1, 1, "", "LeakyReLU"], [1431, 1, 1, "", "Linear"], [1432, 1, 1, "", "LocalResponseNorm"], [1433, 1, 1, "", "LogSigmoid"], [1434, 1, 1, "", "LogSoftmax"], [1435, 1, 1, "", "MSELoss"], [1436, 1, 1, "", "MarginRankingLoss"], [1437, 1, 1, "", "MaxPool1d"], [1438, 1, 1, "", "MaxPool2d"], [1439, 1, 1, "", "MaxPool3d"], [1440, 1, 1, "", "MaxUnpool1d"], [1441, 1, 1, "", "MaxUnpool2d"], [1442, 1, 1, "", "MaxUnpool3d"], [1443, 1, 1, "", "Mish"], [1444, 1, 1, "", "Module"], [1445, 1, 1, "", "ModuleDict"], [1446, 1, 1, "", "ModuleList"], [1447, 1, 1, "", "MultiLabelMarginLoss"], [1448, 1, 1, "", "MultiLabelSoftMarginLoss"], [1449, 1, 1, "", "MultiMarginLoss"], [1450, 1, 1, "", "MultiheadAttention"], [1451, 1, 1, "", "NLLLoss"], [1452, 1, 1, "", "PReLU"], [1453, 1, 1, "", "PairwiseDistance"], [1454, 1, 1, "", "ParameterDict"], [1455, 1, 1, "", "ParameterList"], [1456, 1, 1, "", "PixelShuffle"], [1457, 1, 1, "", "PixelUnshuffle"], [1458, 1, 1, "", "PoissonNLLLoss"], [1459, 1, 1, "", "RNN"], [1460, 1, 1, "", "RNNBase"], [1461, 1, 1, "", "RNNCell"], [1462, 1, 1, "", "RReLU"], [1463, 1, 1, "", "ReLU"], [1464, 1, 1, "", "ReLU6"], [1465, 1, 1, "", "ReflectionPad1d"], [1466, 1, 1, "", "ReflectionPad2d"], [1467, 1, 1, "", "ReflectionPad3d"], [1468, 1, 1, "", "ReplicationPad1d"], [1469, 1, 1, "", "ReplicationPad2d"], [1470, 1, 1, "", "ReplicationPad3d"], [1471, 1, 1, "", "SELU"], [1472, 1, 1, "", "Sequential"], [1473, 1, 1, "", "SiLU"], [1474, 1, 1, "", "Sigmoid"], [1475, 1, 1, "", "SmoothL1Loss"], [1476, 1, 1, "", "SoftMarginLoss"], [1477, 1, 1, "", "Softmax"], [1478, 1, 1, "", "Softmax2d"], [1479, 1, 1, "", "Softmin"], [1480, 1, 1, "", "Softplus"], [1481, 1, 1, "", "Softshrink"], [1482, 1, 1, "", "Softsign"], [1483, 1, 1, "", "SyncBatchNorm"], [1484, 1, 1, "", "Tanh"], [1485, 1, 1, "", "Tanhshrink"], [1486, 1, 1, "", "Threshold"], [1487, 1, 1, "", "Transformer"], [1488, 1, 1, "", "TransformerDecoder"], [1489, 1, 1, "", "TransformerDecoderLayer"], [1490, 1, 1, "", "TransformerEncoder"], [1491, 1, 1, "", "TransformerEncoderLayer"], [1492, 1, 1, "", "TripletMarginLoss"], [1493, 1, 1, "", "TripletMarginWithDistanceLoss"], [1494, 1, 1, "", "Unflatten"], [1495, 1, 1, "", "Unfold"], [1496, 1, 1, "", "Upsample"], [1497, 1, 1, "", "UpsamplingBilinear2d"], [1498, 1, 1, "", "UpsamplingNearest2d"], [1499, 1, 1, "", "ZeroPad1d"], [1500, 1, 1, "", "ZeroPad2d"], [1501, 1, 1, "", "ZeroPad3d"], [1901, 0, 0, "-", "backends"], [1933, 0, 0, "-", "intrinsic"], [1901, 0, 0, "-", "modules"], [1901, 0, 0, "-", "parallel"], [1933, 0, 0, "-", "qat"], [1933, 0, 0, "-", "quantizable"], [1933, 0, 0, "-", "quantized"], [1901, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1352, 3, 1, "", "log_prob"], [1352, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1387, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1388, 3, 1, "", "forward"], [1388, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1417, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1418, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1419, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1420, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1421, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1422, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1423, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1424, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1425, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1426, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1427, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1428, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1429, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1444, 3, 1, "", "add_module"], [1444, 3, 1, "", "apply"], [1444, 3, 1, "", "bfloat16"], [1444, 3, 1, "", "buffers"], [1444, 3, 1, "", "children"], [1444, 3, 1, "", "compile"], [1444, 3, 1, "", "cpu"], [1444, 3, 1, "", "cuda"], [1444, 3, 1, "", "double"], [1444, 3, 1, "", "eval"], [1444, 3, 1, "", "extra_repr"], [1444, 3, 1, "", "float"], [1444, 3, 1, "", "forward"], [1444, 3, 1, "", "get_buffer"], [1444, 3, 1, "", "get_extra_state"], [1444, 3, 1, "", "get_parameter"], [1444, 3, 1, "", "get_submodule"], [1444, 3, 1, "", "half"], [1444, 3, 1, "", "ipu"], [1444, 3, 1, "", "load_state_dict"], [1444, 3, 1, "", "modules"], [1444, 3, 1, "", "named_buffers"], [1444, 3, 1, "", "named_children"], [1444, 3, 1, "", "named_modules"], [1444, 3, 1, "", "named_parameters"], [1444, 3, 1, "", "parameters"], [1444, 3, 1, "", "register_backward_hook"], [1444, 3, 1, "", "register_buffer"], [1444, 3, 1, "", "register_forward_hook"], [1444, 3, 1, "", "register_forward_pre_hook"], [1444, 3, 1, "", "register_full_backward_hook"], [1444, 3, 1, "", "register_full_backward_pre_hook"], [1444, 3, 1, "", "register_load_state_dict_post_hook"], [1444, 3, 1, "", "register_module"], [1444, 3, 1, "", "register_parameter"], [1444, 3, 1, "", "register_state_dict_pre_hook"], [1444, 3, 1, "", "requires_grad_"], [1444, 3, 1, "", "set_extra_state"], [1444, 3, 1, "", "share_memory"], [1444, 3, 1, "", "state_dict"], [1444, 3, 1, "", "to"], [1444, 3, 1, "", "to_empty"], [1444, 3, 1, "", "train"], [1444, 3, 1, "", "type"], [1444, 3, 1, "", "xpu"], [1444, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1445, 3, 1, "", "clear"], [1445, 3, 1, "", "items"], [1445, 3, 1, "", "keys"], [1445, 3, 1, "", "pop"], [1445, 3, 1, "", "update"], [1445, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1446, 3, 1, "", "append"], [1446, 3, 1, "", "extend"], [1446, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1450, 3, 1, "", "forward"], [1450, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1454, 3, 1, "", "clear"], [1454, 3, 1, "", "copy"], [1454, 3, 1, "", "fromkeys"], [1454, 3, 1, "", "get"], [1454, 3, 1, "", "items"], [1454, 3, 1, "", "keys"], [1454, 3, 1, "", "pop"], [1454, 3, 1, "", "popitem"], [1454, 3, 1, "", "setdefault"], [1454, 3, 1, "", "update"], [1454, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1455, 3, 1, "", "append"], [1455, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1460, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1472, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1483, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1487, 3, 1, "", "forward"], [1487, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1488, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1489, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1490, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1491, 3, 1, "", "forward"]], "torch.nn.functional": [[1502, 5, 1, "", "adaptive_avg_pool1d"], [1503, 5, 1, "", "adaptive_avg_pool2d"], [1504, 5, 1, "", "adaptive_avg_pool3d"], [1505, 5, 1, "", "adaptive_max_pool1d"], [1506, 5, 1, "", "adaptive_max_pool2d"], [1507, 5, 1, "", "adaptive_max_pool3d"], [1508, 5, 1, "", "affine_grid"], [1509, 5, 1, "", "alpha_dropout"], [1510, 5, 1, "", "avg_pool1d"], [1511, 5, 1, "", "avg_pool2d"], [1512, 5, 1, "", "avg_pool3d"], [1513, 5, 1, "", "batch_norm"], [1514, 5, 1, "", "bilinear"], [1515, 5, 1, "", "binary_cross_entropy"], [1516, 5, 1, "", "binary_cross_entropy_with_logits"], [1517, 5, 1, "", "celu"], [1518, 5, 1, "", "conv1d"], [1519, 5, 1, "", "conv2d"], [1520, 5, 1, "", "conv3d"], [1521, 5, 1, "", "conv_transpose1d"], [1522, 5, 1, "", "conv_transpose2d"], [1523, 5, 1, "", "conv_transpose3d"], [1524, 5, 1, "", "cosine_embedding_loss"], [1525, 5, 1, "", "cosine_similarity"], [1526, 5, 1, "", "cross_entropy"], [1527, 5, 1, "", "ctc_loss"], [1528, 5, 1, "", "dropout"], [1529, 5, 1, "", "dropout1d"], [1530, 5, 1, "", "dropout2d"], [1531, 5, 1, "", "dropout3d"], [1532, 5, 1, "", "elu"], [1533, 5, 1, "", "elu_"], [1534, 5, 1, "", "embedding"], [1535, 5, 1, "", "embedding_bag"], [1536, 5, 1, "", "feature_alpha_dropout"], [1537, 5, 1, "", "fold"], [1538, 5, 1, "", "fractional_max_pool2d"], [1539, 5, 1, "", "fractional_max_pool3d"], [1540, 5, 1, "", "gaussian_nll_loss"], [1541, 5, 1, "", "gelu"], [1542, 5, 1, "", "glu"], [1543, 5, 1, "", "grid_sample"], [1544, 5, 1, "", "group_norm"], [1545, 5, 1, "", "gumbel_softmax"], [1546, 5, 1, "", "hardshrink"], [1547, 5, 1, "", "hardsigmoid"], [1548, 5, 1, "", "hardswish"], [1549, 5, 1, "", "hardtanh"], [1550, 5, 1, "", "hardtanh_"], [1551, 5, 1, "", "hinge_embedding_loss"], [1552, 5, 1, "", "huber_loss"], [1553, 5, 1, "", "instance_norm"], [1554, 5, 1, "", "interpolate"], [1555, 5, 1, "", "kl_div"], [1556, 5, 1, "", "l1_loss"], [1557, 5, 1, "", "layer_norm"], [1558, 5, 1, "", "leaky_relu"], [1559, 5, 1, "", "leaky_relu_"], [1560, 5, 1, "", "linear"], [1561, 5, 1, "", "local_response_norm"], [1562, 5, 1, "", "log_softmax"], [1563, 5, 1, "", "logsigmoid"], [1564, 5, 1, "", "lp_pool1d"], [1565, 5, 1, "", "lp_pool2d"], [1566, 5, 1, "", "margin_ranking_loss"], [1567, 5, 1, "", "max_pool1d"], [1568, 5, 1, "", "max_pool2d"], [1569, 5, 1, "", "max_pool3d"], [1570, 5, 1, "", "max_unpool1d"], [1571, 5, 1, "", "max_unpool2d"], [1572, 5, 1, "", "max_unpool3d"], [1573, 5, 1, "", "mish"], [1574, 5, 1, "", "mse_loss"], [1575, 5, 1, "", "multi_margin_loss"], [1576, 5, 1, "", "multilabel_margin_loss"], [1577, 5, 1, "", "multilabel_soft_margin_loss"], [1578, 5, 1, "", "nll_loss"], [1579, 5, 1, "", "normalize"], [1580, 5, 1, "", "one_hot"], [1581, 5, 1, "", "pad"], [1582, 5, 1, "", "pairwise_distance"], [1583, 5, 1, "", "pdist"], [1584, 5, 1, "", "pixel_shuffle"], [1585, 5, 1, "", "pixel_unshuffle"], [1586, 5, 1, "", "poisson_nll_loss"], [1587, 5, 1, "", "prelu"], [1588, 5, 1, "", "relu"], [1589, 5, 1, "", "relu6"], [1590, 5, 1, "", "relu_"], [1591, 5, 1, "", "rrelu"], [1592, 5, 1, "", "rrelu_"], [1593, 5, 1, "", "scaled_dot_product_attention"], [1594, 5, 1, "", "selu"], [1595, 5, 1, "", "sigmoid"], [1596, 5, 1, "", "silu"], [1597, 5, 1, "", "smooth_l1_loss"], [1598, 5, 1, "", "soft_margin_loss"], [1599, 5, 1, "", "softmax"], [1600, 5, 1, "", "softmin"], [1601, 5, 1, "", "softplus"], [1602, 5, 1, "", "softshrink"], [1603, 5, 1, "", "softsign"], [1604, 5, 1, "", "tanh"], [1605, 5, 1, "", "tanhshrink"], [1606, 5, 1, "", "threshold"], [1607, 5, 1, "", "threshold_"], [1609, 5, 1, "", "triplet_margin_loss"], [1610, 5, 1, "", "triplet_margin_with_distance_loss"], [1611, 5, 1, "", "unfold"], [1612, 5, 1, "", "upsample"], [1613, 5, 1, "", "upsample_bilinear"], [1614, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1903, 5, 1, "", "calculate_gain"], [1903, 5, 1, "", "constant_"], [1903, 5, 1, "", "dirac_"], [1903, 5, 1, "", "eye_"], [1903, 5, 1, "", "kaiming_normal_"], [1903, 5, 1, "", "kaiming_uniform_"], [1903, 5, 1, "", "normal_"], [1903, 5, 1, "", "ones_"], [1903, 5, 1, "", "orthogonal_"], [1903, 5, 1, "", "sparse_"], [1903, 5, 1, "", "trunc_normal_"], [1903, 5, 1, "", "uniform_"], [1903, 5, 1, "", "xavier_normal_"], [1903, 5, 1, "", "xavier_uniform_"], [1903, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1933, 0, 0, "-", "modules"], [1933, 0, 0, "-", "qat"], [1933, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1933, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1933, 0, 0, "-", "dynamic"], [1933, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1933, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1615, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1615, 3, 1, "", "has_uninitialized_params"], [1615, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1616, 5, 1, "", "register_module_backward_hook"], [1617, 5, 1, "", "register_module_buffer_registration_hook"], [1618, 5, 1, "", "register_module_forward_hook"], [1619, 5, 1, "", "register_module_forward_pre_hook"], [1620, 5, 1, "", "register_module_full_backward_hook"], [1621, 5, 1, "", "register_module_full_backward_pre_hook"], [1622, 5, 1, "", "register_module_module_registration_hook"], [1623, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1624, 1, 1, "", "DistributedDataParallel"], [1608, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1624, 3, 1, "", "join"], [1624, 3, 1, "", "join_hook"], [1624, 3, 1, "", "no_sync"], [1624, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1625, 1, 1, "", "Parameter"], [1626, 1, 1, "", "UninitializedBuffer"], [1627, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1627, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1933, 0, 0, "-", "dynamic"], [1933, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1933, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1933, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1933, 0, 0, "-", "dynamic"], [1933, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1933, 0, 0, "-", "modules"]], "torch.nn.utils": [[1628, 5, 1, "", "clip_grad_norm_"], [1629, 5, 1, "", "clip_grad_value_"], [1630, 5, 1, "", "parameters_to_vector"], [1655, 5, 1, "", "remove_spectral_norm"], [1656, 5, 1, "", "remove_weight_norm"], [1664, 5, 1, "", "skip_init"], [1665, 5, 1, "", "spectral_norm"], [1901, 0, 0, "-", "stateless"], [1667, 5, 1, "", "vector_to_parameters"], [1668, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1631, 5, 1, "", "orthogonal"], [1632, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1633, 1, 1, "", "ParametrizationList"], [1634, 5, 1, "", "cached"], [1635, 5, 1, "", "is_parametrized"], [1636, 5, 1, "", "register_parametrization"], [1637, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1633, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1638, 1, 1, "", "BasePruningMethod"], [1639, 1, 1, "", "CustomFromMask"], [1640, 1, 1, "", "Identity"], [1641, 1, 1, "", "L1Unstructured"], [1642, 1, 1, "", "LnStructured"], [1643, 1, 1, "", "PruningContainer"], [1644, 1, 1, "", "RandomStructured"], [1645, 1, 1, "", "RandomUnstructured"], [1646, 5, 1, "", "custom_from_mask"], [1647, 5, 1, "", "global_unstructured"], [1648, 5, 1, "", "identity"], [1649, 5, 1, "", "is_pruned"], [1650, 5, 1, "", "l1_unstructured"], [1651, 5, 1, "", "ln_structured"], [1652, 5, 1, "", "random_structured"], [1653, 5, 1, "", "random_unstructured"], [1654, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1638, 3, 1, "", "apply"], [1638, 3, 1, "", "apply_mask"], [1638, 3, 1, "", "compute_mask"], [1638, 3, 1, "", "prune"], [1638, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1639, 3, 1, "", "apply"], [1639, 3, 1, "", "apply_mask"], [1639, 3, 1, "", "prune"], [1639, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1640, 3, 1, "", "apply"], [1640, 3, 1, "", "apply_mask"], [1640, 3, 1, "", "prune"], [1640, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1641, 3, 1, "", "apply"], [1641, 3, 1, "", "apply_mask"], [1641, 3, 1, "", "prune"], [1641, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1642, 3, 1, "", "apply"], [1642, 3, 1, "", "apply_mask"], [1642, 3, 1, "", "compute_mask"], [1642, 3, 1, "", "prune"], [1642, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1643, 3, 1, "", "add_pruning_method"], [1643, 3, 1, "", "apply"], [1643, 3, 1, "", "apply_mask"], [1643, 3, 1, "", "compute_mask"], [1643, 3, 1, "", "prune"], [1643, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1644, 3, 1, "", "apply"], [1644, 3, 1, "", "apply_mask"], [1644, 3, 1, "", "compute_mask"], [1644, 3, 1, "", "prune"], [1644, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1645, 3, 1, "", "apply"], [1645, 3, 1, "", "apply_mask"], [1645, 3, 1, "", "prune"], [1645, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1657, 1, 1, "", "PackedSequence"], [1658, 5, 1, "", "pack_padded_sequence"], [1659, 5, 1, "", "pack_sequence"], [1660, 5, 1, "", "pad_packed_sequence"], [1661, 5, 1, "", "pad_sequence"], [1662, 5, 1, "", "unpack_sequence"], [1663, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1657, 2, 1, "", "batch_sizes"], [1657, 3, 1, "", "count"], [1657, 2, 1, "", "data"], [1657, 3, 1, "", "index"], [1657, 4, 1, "", "is_cuda"], [1657, 3, 1, "", "is_pinned"], [1657, 2, 1, "", "sorted_indices"], [1657, 3, 1, "", "to"], [1657, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1666, 5, 1, "", "functional_call"]], "torch.onnx": [[1677, 1, 1, "", "ExportOptions"], [1678, 1, 1, "", "ExportOutput"], [1679, 1, 1, "", "ExportOutputSerializer"], [1680, 1, 1, "", "JitScalarType"], [1923, 5, 1, "", "disable_log"], [1923, 5, 1, "", "dynamo_export"], [1923, 5, 1, "", "enable_log"], [1923, 5, 1, "", "export"], [1923, 5, 1, "", "export_to_pretty_string"], [1923, 5, 1, "", "is_in_onnx_export"], [1923, 5, 1, "", "register_custom_op_symbolic"], [1923, 5, 1, "", "select_model_mode_for_export"], [1923, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1678, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1678, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1678, 4, 1, "", "diagnostic_context"], [1678, 4, 1, "", "model_proto"], [1678, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1679, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1680, 3, 1, "", "dtype"], [1680, 3, 1, "", "from_dtype"], [1680, 3, 1, "", "from_value"], [1680, 3, 1, "", "onnx_compatible"], [1680, 3, 1, "", "onnx_type"], [1680, 3, 1, "", "scalar_name"], [1680, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1924, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1924, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1924, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1681, 1, 1, "", "GraphInfo"], [1682, 1, 1, "", "VerificationOptions"], [1923, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1681, 3, 1, "", "all_mismatch_leaf_graph_info"], [1681, 3, 1, "", "clear"], [1681, 3, 1, "", "essential_node_count"], [1681, 3, 1, "", "essential_node_kinds"], [1681, 3, 1, "", "export_repro"], [1681, 3, 1, "", "find_mismatch"], [1681, 3, 1, "", "find_partition"], [1681, 3, 1, "", "has_mismatch"], [1681, 3, 1, "", "pretty_print_mismatch"], [1681, 3, 1, "", "pretty_print_tree"], [1681, 3, 1, "", "verify_export"]], "torch.optim": [[1683, 1, 1, "", "ASGD"], [1684, 1, 1, "", "Adadelta"], [1685, 1, 1, "", "Adagrad"], [1686, 1, 1, "", "Adam"], [1687, 1, 1, "", "AdamW"], [1688, 1, 1, "", "Adamax"], [1689, 1, 1, "", "LBFGS"], [1690, 1, 1, "", "NAdam"], [1926, 1, 1, "", "Optimizer"], [1696, 1, 1, "", "RAdam"], [1697, 1, 1, "", "RMSprop"], [1698, 1, 1, "", "Rprop"], [1699, 1, 1, "", "SGD"], [1700, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1683, 3, 1, "", "add_param_group"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "register_step_post_hook"], [1683, 3, 1, "", "register_step_pre_hook"], [1683, 3, 1, "", "state_dict"], [1683, 3, 1, "", "step"], [1683, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1684, 3, 1, "", "add_param_group"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "register_step_post_hook"], [1684, 3, 1, "", "register_step_pre_hook"], [1684, 3, 1, "", "state_dict"], [1684, 3, 1, "", "step"], [1684, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1685, 3, 1, "", "add_param_group"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "register_step_post_hook"], [1685, 3, 1, "", "register_step_pre_hook"], [1685, 3, 1, "", "state_dict"], [1685, 3, 1, "", "step"], [1685, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1686, 3, 1, "", "add_param_group"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "register_step_post_hook"], [1686, 3, 1, "", "register_step_pre_hook"], [1686, 3, 1, "", "state_dict"], [1686, 3, 1, "", "step"], [1686, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1687, 3, 1, "", "add_param_group"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "register_step_post_hook"], [1687, 3, 1, "", "register_step_pre_hook"], [1687, 3, 1, "", "state_dict"], [1687, 3, 1, "", "step"], [1687, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1688, 3, 1, "", "add_param_group"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "register_step_post_hook"], [1688, 3, 1, "", "register_step_pre_hook"], [1688, 3, 1, "", "state_dict"], [1688, 3, 1, "", "step"], [1688, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1689, 3, 1, "", "add_param_group"], [1689, 3, 1, "", "load_state_dict"], [1689, 3, 1, "", "register_step_post_hook"], [1689, 3, 1, "", "register_step_pre_hook"], [1689, 3, 1, "", "state_dict"], [1689, 3, 1, "", "step"], [1689, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1690, 3, 1, "", "add_param_group"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "register_step_post_hook"], [1690, 3, 1, "", "register_step_pre_hook"], [1690, 3, 1, "", "state_dict"], [1690, 3, 1, "", "step"], [1690, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1691, 3, 1, "", "add_param_group"], [1692, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "state_dict"], [1694, 3, 1, "", "step"], [1695, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1696, 3, 1, "", "add_param_group"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "register_step_post_hook"], [1696, 3, 1, "", "register_step_pre_hook"], [1696, 3, 1, "", "state_dict"], [1696, 3, 1, "", "step"], [1696, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1697, 3, 1, "", "add_param_group"], [1697, 3, 1, "", "load_state_dict"], [1697, 3, 1, "", "register_step_post_hook"], [1697, 3, 1, "", "register_step_pre_hook"], [1697, 3, 1, "", "state_dict"], [1697, 3, 1, "", "step"], [1697, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1698, 3, 1, "", "add_param_group"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "register_step_post_hook"], [1698, 3, 1, "", "register_step_pre_hook"], [1698, 3, 1, "", "state_dict"], [1698, 3, 1, "", "step"], [1698, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1699, 3, 1, "", "add_param_group"], [1699, 3, 1, "", "load_state_dict"], [1699, 3, 1, "", "register_step_post_hook"], [1699, 3, 1, "", "register_step_pre_hook"], [1699, 3, 1, "", "state_dict"], [1699, 3, 1, "", "step"], [1699, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1700, 3, 1, "", "add_param_group"], [1700, 3, 1, "", "load_state_dict"], [1700, 3, 1, "", "register_step_post_hook"], [1700, 3, 1, "", "register_step_pre_hook"], [1700, 3, 1, "", "state_dict"], [1700, 3, 1, "", "step"], [1700, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1701, 1, 1, "", "ChainedScheduler"], [1702, 1, 1, "", "ConstantLR"], [1703, 1, 1, "", "CosineAnnealingLR"], [1704, 1, 1, "", "CosineAnnealingWarmRestarts"], [1705, 1, 1, "", "CyclicLR"], [1706, 1, 1, "", "ExponentialLR"], [1707, 1, 1, "", "LambdaLR"], [1708, 1, 1, "", "LinearLR"], [1709, 1, 1, "", "MultiStepLR"], [1710, 1, 1, "", "MultiplicativeLR"], [1711, 1, 1, "", "OneCycleLR"], [1712, 1, 1, "", "PolynomialLR"], [1713, 1, 1, "", "ReduceLROnPlateau"], [1714, 1, 1, "", "SequentialLR"], [1715, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1701, 3, 1, "", "get_last_lr"], [1701, 3, 1, "", "load_state_dict"], [1701, 3, 1, "", "print_lr"], [1701, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1702, 3, 1, "", "get_last_lr"], [1702, 3, 1, "", "load_state_dict"], [1702, 3, 1, "", "print_lr"], [1702, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1703, 3, 1, "", "get_last_lr"], [1703, 3, 1, "", "load_state_dict"], [1703, 3, 1, "", "print_lr"], [1703, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1704, 3, 1, "", "get_last_lr"], [1704, 3, 1, "", "load_state_dict"], [1704, 3, 1, "", "print_lr"], [1704, 3, 1, "", "state_dict"], [1704, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1705, 3, 1, "", "get_last_lr"], [1705, 3, 1, "", "get_lr"], [1705, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1706, 3, 1, "", "get_last_lr"], [1706, 3, 1, "", "load_state_dict"], [1706, 3, 1, "", "print_lr"], [1706, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1707, 3, 1, "", "get_last_lr"], [1707, 3, 1, "", "load_state_dict"], [1707, 3, 1, "", "print_lr"], [1707, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1708, 3, 1, "", "get_last_lr"], [1708, 3, 1, "", "load_state_dict"], [1708, 3, 1, "", "print_lr"], [1708, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1709, 3, 1, "", "get_last_lr"], [1709, 3, 1, "", "load_state_dict"], [1709, 3, 1, "", "print_lr"], [1709, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1710, 3, 1, "", "get_last_lr"], [1710, 3, 1, "", "load_state_dict"], [1710, 3, 1, "", "print_lr"], [1710, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1711, 3, 1, "", "get_last_lr"], [1711, 3, 1, "", "load_state_dict"], [1711, 3, 1, "", "print_lr"], [1711, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1712, 3, 1, "", "get_last_lr"], [1712, 3, 1, "", "load_state_dict"], [1712, 3, 1, "", "print_lr"], [1712, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1714, 3, 1, "", "get_last_lr"], [1714, 3, 1, "", "load_state_dict"], [1714, 3, 1, "", "print_lr"], [1714, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1715, 3, 1, "", "get_last_lr"], [1715, 3, 1, "", "load_state_dict"], [1715, 3, 1, "", "print_lr"], [1715, 3, 1, "", "state_dict"]], "torch.overrides": [[1950, 5, 1, "", "get_ignored_functions"], [1950, 5, 1, "", "get_overridable_functions"], [1950, 5, 1, "", "get_testing_overrides"], [1950, 5, 1, "", "handle_torch_function"], [1950, 5, 1, "", "has_torch_function"], [1950, 5, 1, "", "is_tensor_like"], [1950, 5, 1, "", "is_tensor_method_or_property"], [1950, 5, 1, "", "resolve_name"], [1950, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1927, 1, 1, "", "Directory"], [1927, 1, 1, "", "EmptyMatchError"], [1927, 1, 1, "", "PackageExporter"], [1927, 1, 1, "", "PackageImporter"], [1927, 1, 1, "", "PackagingError"], [1927, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1927, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1927, 3, 1, "", "__init__"], [1927, 3, 1, "", "add_dependency"], [1927, 3, 1, "", "all_paths"], [1927, 3, 1, "", "close"], [1927, 3, 1, "", "denied_modules"], [1927, 3, 1, "", "deny"], [1927, 3, 1, "", "dependency_graph_string"], [1927, 3, 1, "", "extern"], [1927, 3, 1, "", "externed_modules"], [1927, 3, 1, "", "get_rdeps"], [1927, 3, 1, "", "get_unique_id"], [1927, 3, 1, "", "intern"], [1927, 3, 1, "", "interned_modules"], [1927, 3, 1, "", "mock"], [1927, 3, 1, "", "mocked_modules"], [1927, 3, 1, "", "register_extern_hook"], [1927, 3, 1, "", "register_intern_hook"], [1927, 3, 1, "", "register_mock_hook"], [1927, 3, 1, "", "save_binary"], [1927, 3, 1, "", "save_module"], [1927, 3, 1, "", "save_pickle"], [1927, 3, 1, "", "save_source_file"], [1927, 3, 1, "", "save_source_string"], [1927, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1927, 3, 1, "", "__init__"], [1927, 3, 1, "", "file_structure"], [1927, 3, 1, "", "id"], [1927, 3, 1, "", "import_module"], [1927, 3, 1, "", "load_binary"], [1927, 3, 1, "", "load_pickle"], [1927, 3, 1, "", "load_text"], [1927, 3, 1, "", "python_version"]], "torch.profiler": [[1929, 1, 1, "", "ProfilerAction"], [1929, 1, 1, "", "ProfilerActivity"], [1929, 1, 1, "", "_KinetoProfile"], [1929, 1, 1, "", "profile"], [1929, 5, 1, "", "schedule"], [1929, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1929, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1929, 3, 1, "", "add_metadata"], [1929, 3, 1, "", "add_metadata_json"], [1929, 3, 1, "", "events"], [1929, 3, 1, "", "export_chrome_trace"], [1929, 3, 1, "", "export_memory_timeline"], [1929, 3, 1, "", "export_stacks"], [1929, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1929, 5, 1, "", "is_available"], [1929, 5, 1, "", "mark"], [1929, 5, 1, "", "range_pop"], [1929, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1929, 3, 1, "", "step"]], "torch.quantization": [[1933, 0, 0, "-", "fx"]], "torch.quasirandom": [[1736, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1736, 3, 1, "", "draw"], [1736, 3, 1, "", "draw_base2"], [1736, 3, 1, "", "fast_forward"], [1736, 3, 1, "", "reset"]], "torch.random": [[1934, 5, 1, "", "fork_rng"], [1934, 5, 1, "", "get_rng_state"], [1934, 5, 1, "", "initial_seed"], [1934, 5, 1, "", "manual_seed"], [1934, 5, 1, "", "seed"], [1934, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1921, 5, 1, "", "get_default_load_endianness"], [1921, 5, 1, "", "register_package"], [1921, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1938, 0, 0, "-", "windows"]], "torch.signal.windows": [[1784, 5, 1, "", "bartlett"], [1785, 5, 1, "", "blackman"], [1786, 5, 1, "", "cosine"], [1787, 5, 1, "", "exponential"], [1788, 5, 1, "", "gaussian"], [1789, 5, 1, "", "general_cosine"], [1790, 5, 1, "", "general_hamming"], [1791, 5, 1, "", "hamming"], [1792, 5, 1, "", "hann"], [1793, 5, 1, "", "kaiser"], [1794, 5, 1, "", "nuttall"]], "torch.sparse": [[1804, 5, 1, "", "addmm"], [1805, 1, 1, "", "check_sparse_tensor_invariants"], [1806, 5, 1, "", "log_softmax"], [1807, 5, 1, "", "mm"], [1808, 5, 1, "", "sampled_addmm"], [1809, 5, 1, "", "softmax"], [1810, 5, 1, "", "spdiags"], [1811, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1805, 3, 1, "", "disable"], [1805, 3, 1, "", "enable"], [1805, 3, 1, "", "is_enabled"]], "torch.special": [[1940, 5, 1, "", "airy_ai"], [1940, 5, 1, "", "bessel_j0"], [1940, 5, 1, "", "bessel_j1"], [1940, 5, 1, "", "digamma"], [1940, 5, 1, "", "entr"], [1940, 5, 1, "", "erf"], [1940, 5, 1, "", "erfc"], [1940, 5, 1, "", "erfcx"], [1940, 5, 1, "", "erfinv"], [1940, 5, 1, "", "exp2"], [1940, 5, 1, "", "expit"], [1940, 5, 1, "", "expm1"], [1940, 5, 1, "", "gammainc"], [1940, 5, 1, "", "gammaincc"], [1940, 5, 1, "", "gammaln"], [1940, 5, 1, "", "i0"], [1940, 5, 1, "", "i0e"], [1940, 5, 1, "", "i1"], [1940, 5, 1, "", "i1e"], [1940, 5, 1, "", "log1p"], [1940, 5, 1, "", "log_ndtr"], [1940, 5, 1, "", "log_softmax"], [1940, 5, 1, "", "logit"], [1940, 5, 1, "", "logsumexp"], [1940, 5, 1, "", "multigammaln"], [1940, 5, 1, "", "ndtr"], [1940, 5, 1, "", "ndtri"], [1940, 5, 1, "", "polygamma"], [1940, 5, 1, "", "psi"], [1940, 5, 1, "", "round"], [1940, 5, 1, "", "scaled_modified_bessel_k0"], [1940, 5, 1, "", "scaled_modified_bessel_k1"], [1940, 5, 1, "", "sinc"], [1940, 5, 1, "", "softmax"], [1940, 5, 1, "", "spherical_bessel_j0"], [1940, 5, 1, "", "xlog1py"], [1940, 5, 1, "", "xlogy"], [1940, 5, 1, "", "zeta"]], "torch.testing": [[1946, 5, 1, "", "assert_allclose"], [1946, 5, 1, "", "assert_close"], [1946, 5, 1, "", "make_tensor"]], "torch.torch": [[1947, 2, 1, "", "default_generator"], [1951, 1, 1, "", "finfo"], [1951, 1, 1, "", "iinfo"]], "torch.utils": [[1947, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [39, 0, 0, "-", "data"], [1947, 0, 0, "-", "hipify"], [1888, 0, 0, "-", "jit"], [1947, 0, 0, "-", "model_dump"], [1894, 0, 0, "-", "model_zoo"], [1944, 0, 0, "-", "tensorboard"], [1947, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[33, 5, 1, "", "BuildExtension"], [33, 5, 1, "", "CUDAExtension"], [33, 5, 1, "", "CppExtension"], [33, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [33, 5, 1, "", "include_paths"], [33, 5, 1, "", "is_ninja_available"], [33, 5, 1, "", "load"], [33, 5, 1, "", "load_inline"], [33, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[39, 1, 1, "", "BatchSampler"], [39, 1, 1, "", "ChainDataset"], [39, 1, 1, "", "ConcatDataset"], [39, 1, 1, "", "DataLoader"], [39, 1, 1, "", "Dataset"], [39, 1, 1, "", "IterableDataset"], [39, 1, 1, "", "RandomSampler"], [39, 1, 1, "", "Sampler"], [39, 1, 1, "", "SequentialSampler"], [39, 1, 1, "", "StackDataset"], [39, 1, 1, "", "Subset"], [39, 1, 1, "", "SubsetRandomSampler"], [39, 1, 1, "", "TensorDataset"], [39, 1, 1, "", "WeightedRandomSampler"], [39, 0, 0, "-", "datapipes"], [39, 5, 1, "", "default_collate"], [39, 5, 1, "", "default_convert"], [39, 5, 1, "", "get_worker_info"], [39, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[39, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[39, 0, 0, "-", "dataframe"], [39, 0, 0, "-", "iter"], [39, 0, 0, "-", "map"], [39, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[39, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[49, 5, 1, "", "from_dlpack"], [49, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1893, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1894, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1944, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1944, 3, 1, "", "__init__"], [1944, 3, 1, "", "add_audio"], [1944, 3, 1, "", "add_custom_scalars"], [1944, 3, 1, "", "add_embedding"], [1944, 3, 1, "", "add_figure"], [1944, 3, 1, "", "add_graph"], [1944, 3, 1, "", "add_histogram"], [1944, 3, 1, "", "add_hparams"], [1944, 3, 1, "", "add_image"], [1944, 3, 1, "", "add_images"], [1944, 3, 1, "", "add_mesh"], [1944, 3, 1, "", "add_pr_curve"], [1944, 3, 1, "", "add_scalar"], [1944, 3, 1, "", "add_scalars"], [1944, 3, 1, "", "add_text"], [1944, 3, 1, "", "add_video"], [1944, 3, 1, "", "close"], [1944, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 39, 1882, 1904, 1911], "mix": [0, 1882, 1904], "precis": [0, 1904, 1908, 1919], "packag": [0, 1, 34, 42, 1897, 1922, 1927], "torch": [0, 1, 2, 3, 4, 5, 10, 18, 21, 25, 27, 30, 32, 33, 35, 39, 41, 42, 44, 45, 47, 48, 49, 60, 63, 64, 66, 67, 69, 70, 71, 72, 73, 81, 82, 83, 84, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 990, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1691, 1692, 1693, 1694, 1695, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1901, 1902, 1903, 1908, 1910, 1911, 1914, 1919, 1921, 1923, 1924, 1926, 1927, 1929, 1933, 1934, 1938, 1939, 1940, 1941, 1942, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951], "amp": [0, 1908], "autocast": [0, 1904], "gradient": [0, 1, 71, 1165, 1904, 1905, 1911, 1947], "scale": [0, 1904, 1915], "op": [0, 98, 1887, 1904, 1923, 1947], "refer": [0, 30, 36, 67, 73, 1882, 1884, 1885, 1886, 1895, 1899, 1914, 1924, 1927, 1929, 1930, 1933, 1937, 1945], "elig": 0, "cuda": [0, 2, 10, 11, 25, 35, 36, 226, 990, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1008, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1897, 1904, 1908, 1912, 1914, 1918, 1920, 1922], "specif": [0, 39, 1939], "behavior": [0, 39, 1905, 1913], "can": [0, 24, 1905, 1912], "float16": 0, "float32": 0, "promot": [0, 7, 100], "widest": 0, "input": [0, 1898, 1904, 1913], "type": [0, 39, 100, 616, 1884, 1885, 1910, 1923, 1927, 1945, 1951], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1516], "over": [0, 8, 1884], "binary_cross_entropi": [0, 1515], "cpu": [0, 2, 10, 223, 1905, 1907, 1918, 1930], "bfloat16": [0, 172], "differenti": [1, 1905], "autograd": [1, 10, 31, 34, 70, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 1899, 1904, 1905, 1910, 1911, 1923, 1935, 1936], "forward": [1, 903, 1910, 1936], "mode": [1, 60, 68, 430, 1317, 1905, 1910, 1913, 1923, 1930, 1936], "function": [1, 27, 42, 48, 64, 66, 67, 69, 71, 73, 91, 96, 99, 102, 103, 902, 903, 904, 905, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 1142, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1882, 1883, 1884, 1885, 1887, 1890, 1892, 1898, 1900, 1901, 1902, 1904, 1905, 1911, 1913, 1921, 1923, 1933, 1939, 1940, 1950], "higher": 1, "level": [1, 10, 98, 1933], "api": [1, 10, 14, 15, 17, 30, 34, 36, 45, 53, 67, 70, 73, 1880, 1882, 1885, 1895, 1899, 1907, 1908, 1910, 1914, 1915, 1924, 1927, 1928, 1929, 1930, 1933], "local": [1, 24, 28, 1885, 1905, 1947], "disabl": [1, 39, 971, 1882, 1905, 1947], "comput": [1, 71, 1905, 1919, 1936, 1947], "default": [1, 39, 40, 1884, 1905, 1908, 1913, 1932], "layout": [1, 1942], "manual": 1, "In": [1, 8, 1905, 1906, 1947], "place": [1, 70, 1898, 1905, 1906, 1923, 1947], "oper": [1, 10, 15, 40, 42, 70, 104, 1884, 1885, 1890, 1892, 1898, 1899, 1900, 1905, 1910, 1915, 1922, 1923, 1925, 1930, 1939, 1945, 1947], "tensor": [1, 15, 31, 34, 47, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 1844, 1883, 1887, 1890, 1897, 1898, 1899, 1900, 1905, 1910, 1921, 1923, 1930, 1933, 1939, 1942, 1943, 1945, 1947], "correct": [1, 73, 1905], "check": [1, 24, 73, 1882, 1905, 1914], "variabl": [1, 20, 42, 60, 1882, 1884, 1885, 1908], "deprec": 1, "context": [1, 43, 57, 78, 1936], "method": [1, 52, 53, 56, 61, 1883, 1884, 1887, 1923, 1933, 1939], "mixin": 1, "numer": [1, 1913, 1919, 1931], "profil": [1, 22, 25, 29, 42, 928, 929, 930, 931, 932, 1325, 1326, 1327, 1896, 1915, 1916, 1929], "anomali": 1, "detect": 1, "graph": [1, 11, 16, 25, 28, 29, 35, 73, 923, 924, 925, 926, 927, 1020, 1882, 1905, 1908, 1930], "backend": [2, 12, 19, 29, 42, 59, 60, 1882, 1914, 1917, 1930, 1932, 1935], "cudnn": 2, "mp": [2, 10, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1896, 1917], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1920], "util": [3, 4, 5, 10, 28, 33, 39, 42, 49, 67, 69, 1063, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1888, 1893, 1894, 1901, 1921, 1933, 1944, 1947, 1949], "bottleneck": 4, "checkpoint": [5, 40, 44], "pytorch": [6, 7, 8, 9, 10, 11, 19, 23, 24, 29, 34, 41, 42, 70, 1880, 1882, 1883, 1887, 1905, 1908, 1910, 1920, 1921, 1923, 1928], "govern": [6, 9, 10], "build": [6, 7, 10, 1907, 1915, 1916, 1922], "ci": [6, 10], "how": [6, 15, 16, 24, 40, 68, 1879, 1905, 1910, 1926, 1927], "add": [6, 9, 90, 114, 698], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1923], "guid": 7, "process": [7, 9, 39, 57, 1904], "get": [7, 16, 19, 45, 1923], "start": [7, 19, 45, 57, 1326], "propos": 7, "featur": [7, 1915, 1916], "report": [7, 1912], "issu": [7, 25, 29, 1882], "implement": [7, 15, 50, 59, 61, 1879, 1909, 1913, 1923, 1931, 1937], "fix": [7, 60, 68, 277, 1123], "bug": 7, "ad": [7, 1910, 1923], "tutori": [7, 10, 1927, 1928, 1935], "improv": [7, 1916], "document": [7, 45, 1880], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 16, 19, 73, 1882, 1908, 1927], "readabl": 7, "test": [7, 24, 1885, 1910, 1927, 1946], "case": [7, 1882], "make": [7, 9, 11, 20, 94], "codebas": 7, "more": [7, 21, 66, 1935], "robust": 7, "triag": 7, "about": [7, 15, 1905, 1935], "sourc": [7, 1920, 1922, 1927], "develop": [7, 1880, 1923], "common": [7, 42, 73, 1915, 1930], "mistak": 7, "To": 7, "avoid": [7, 1918, 1920, 1923, 1927], "frequent": [7, 16, 1882, 1912, 1923, 1930], "ask": [7, 16, 1882, 1912, 1923, 1930], "question": [7, 16, 1882, 1912, 1923, 1930], "On": [7, 40, 1884], "python": [7, 8, 20, 70, 75, 76, 77, 78, 79, 80, 1880, 1882, 1883, 1884, 1885, 1886, 1887, 1910, 1920, 1923], "doc": [7, 10, 1914], "c": [7, 10, 34, 1905, 1910, 1914, 1921, 1923], "overview": [7, 12, 20, 26, 36, 73, 1924, 1927, 1929, 1939], "design": [8, 1885, 1909, 1935, 1936, 1937], "philosophi": 8, "principl": [8, 9], "1": [8, 60, 68, 1882, 1911], "usabl": 8, "perform": [8, 10, 15, 24, 25, 29, 1916, 1921], "2": [8, 23, 24, 27, 29, 68, 1882, 1908, 1911, 1912], "simpl": [8, 1884, 1885, 1916, 1936], "easi": 8, "3": [8, 60, 68], "first": [8, 1927], "best": [8, 1908, 1918, 1930], "class": [8, 52, 73, 1882, 1884, 1885, 1887, 1923, 1926, 1927, 1945], "languag": [8, 1880, 1882, 1884, 1885, 1886], "interoper": 8, "mechan": [9, 1902, 1905, 1913], "summari": [9, 20, 1930], "modul": [9, 10, 23, 67, 69, 73, 1444, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1882, 1883, 1884, 1885, 1887, 1901, 1905, 1910, 1916, 1921, 1927, 1930], "core": [9, 10, 1881], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1885], "confirm": 9, "remov": [9, 1654, 1898], "The": [9, 14, 73, 1885, 1905], "re": [9, 1927], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 16, 60, 68], "controversi": 9, "gener": [9, 35, 43, 70, 73, 105, 1906, 1911, 1920, 1930, 1931, 1947], "polici": [9, 14], "faq": [9, 1922], "respons": 10, "nn": [10, 23, 67, 69, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1884, 1885, 1901, 1902, 1903, 1905, 1908, 1910, 1921, 1933, 1939], "optim": [10, 19, 21, 46, 1691, 1692, 1693, 1694, 1695, 1904, 1905, 1926, 1935, 1936, 1947], "compil": [10, 16, 18, 21, 25, 27, 29, 30, 69, 966, 968, 969, 970, 971, 972, 973, 1880, 1908], "jit": [10, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1229, 1230, 1882, 1885, 1888], "torchscript": [10, 34, 1882, 1883, 1884, 1885, 1887, 1907, 1915, 1925, 1927], "fx": [10, 73, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 100, 1916, 1930, 1933, 1949], "torchdynamo": [10, 11, 13, 16, 17, 29, 1909, 1923], "distribut": [10, 16, 42, 44, 45, 46, 47, 48, 60, 1901, 1902, 1909, 1914, 1916, 1935, 1936], "rng": 10, "multiprocess": [10, 57, 1897, 1908, 1918, 1922], "dataload": [10, 1920], "linear": [10, 31, 745, 746, 769, 777, 794, 1149, 1431, 1560, 1901, 1902, 1919, 1939], "algebra": [10, 31, 1919, 1939], "linalg": [10, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1890, 1919], "spars": [10, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1901, 1902, 1939], "nestedtensor": 10, "nest": [10, 1900], "maskedtensor": [10, 1892], "mask": [10, 1892], "fast": [10, 64, 1913, 1936], "fourier": [10, 64], "transform": [10, 27, 28, 48, 64, 66, 67, 69, 71, 73, 1487, 1901, 1910, 1916], "fft": [10, 64, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122], "inductor": [10, 16], "gpu": [10, 22, 42, 1901, 1902, 1904, 1912, 1928], "triton": 10, "nvfuser": 10, "amd": [10, 1919], "rocm": [10, 1914], "hip": [10, 1914], "tool": [10, 35, 1931, 1939], "c10": 10, "dispatch": 10, "onnx": [10, 92, 93, 101, 1923, 1924, 1925], "export": [10, 16, 63, 1923, 1927], "mobil": 10, "edg": [10, 1882, 1927], "model": [10, 14, 34, 1879, 1904, 1912, 1915, 1926, 1927, 1928, 1930, 1933], "compress": [10, 1939], "window": [10, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1922, 1938], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1880, 1889, 1920], "xla": 10, "torchserv": 10, "torchvis": [10, 68], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "cudagraph": [11, 986], "tree": 11, "background": [11, 1913, 1936, 1937], "integr": 11, "callabl": 11, "previou": 11, "limit": [11, 23, 70, 73, 1879, 1911, 1923], "comparison": [11, 1882, 1884, 1885, 1947], "custom": [12, 51, 61, 73, 102, 1885, 1904, 1908, 1910, 1911, 1916, 1923, 1926, 1927, 1930], "regist": [12, 1905], "after": 12, "aotautograd": [12, 88], "exampl": [12, 54, 73, 1904, 1909, 1910, 1911, 1923, 1936], "debug": [12, 29, 40, 42, 73, 98, 1882, 1930, 1931], "speedi": 12, "compos": [12, 66, 71], "deeper": 13, "dive": 13, "what": [13, 24, 25, 40, 66, 68, 71, 1892, 1905, 1927], "i": [13, 15, 16, 24, 71, 1892, 1905, 1927], "guard": [13, 14, 20], "dynamo": [13, 16, 94], "do": [13, 16, 19, 1927], "dynam": [14, 15, 59, 70, 73, 82, 1930, 1933], "shape": [14, 15, 70, 82, 101, 1923], "motiv": [14, 15, 1892], "abridg": 14, "public": 14, "overal": [14, 15], "architectur": [14, 15], "intern": [14, 1909, 1923, 1927], "dimdynam": 14, "unback": 14, "symint": 14, "fake": 15, "relat": [15, 1933], "work": [15, 25, 27, 39, 67, 1904, 1912, 1939], "import": [15, 60, 1879, 1922, 1927], "bit": 15, "detail": 15, "subclass": [15, 1910], "each": [15, 1927], "individu": 15, "doe": [15, 40, 1905], "convert": [15, 89, 810], "characterist": 15, "interact": [15, 27], "other": [15, 42, 1901, 1920, 1927, 1939, 1947], "resourc": [15, 1927], "you": [16, 19], "support": [16, 23, 74, 104, 1883, 1885, 1892, 1898, 1899, 1900, 1911, 1923, 1925, 1930, 1939], "still": 16, "need": [16, 19, 1904], "whole": [16, 1908], "why": [16, 19, 66, 71, 1908, 1913, 1927, 1939], "my": [16, 24, 1879, 1905, 1912, 1927], "crash": 16, "error": [16, 29, 52, 1912, 1922, 1930, 1931], "torchinductor": [16, 22, 24, 29], "slow": 16, "excess": [16, 29], "recompil": [16, 29], "ar": [16, 66, 71, 1879, 1905, 1927], "product": [16, 71, 1890], "speed": [16, 1922], "up": [16, 60], "am": 16, "see": [16, 1927], "speedup": 16, "break": [16, 25, 29, 1884, 1885], "identifi": [16, 29, 1885], "caus": [16, 29], "didn": 16, "t": [16, 27, 583, 1839, 1885, 1912], "when": [16, 1885, 1905, 1910, 1923, 1930, 1939], "incorrect": 16, "result": 16, "oom": 16, "control": [17, 70, 73, 79, 1920], "fine": 17, "grain": 17, "trace": [17, 25, 73, 604, 1227, 1849, 1882, 1923, 1929, 1930], "exist": 19, "anoth": [19, 1911], "wai": 19, "cach": [20, 1634, 1879, 1908, 1914], "frame": 20, "evalu": [20, 1905, 1913], "pep": 20, "523": 20, "instructiontransl": 20, "troubleshoot": [21, 29], "gotcha": [21, 1911], "learn": [21, 1926], "0": [23, 24, 27, 29], "nnmodul": 23, "hook": [23, 40, 1905, 1916], "__call__": 23, "usag": [23, 36, 45, 60, 1908, 1911, 1915, 1916, 1922], "state_dict": [23, 1693], "dashboard": 24, "read": [24, 66, 1923], "measur": 24, "pr": 24, "affect": 24, "": [24, 68, 1927], "befor": 24, "merg": 24, "run": [24, 1879], "ani": [24, 135, 712, 1885], "understand": 25, "us": [25, 27, 29, 40, 42, 73, 1884, 1905, 1908, 1910, 1913, 1923, 1926, 1927, 1928, 1930, 1939], "basic": [25, 42, 1885, 1899, 1911, 1935, 1945], "view": [25, 630, 1892, 1921, 1943], "around": 25, "time": [25, 1908], "find": [25, 99, 1927], "launch": [25, 42, 60], "overhead": 25, "technic": 26, "func": [27, 66, 67, 69, 71, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1910, 1911], "appli": 27, "d": 27, "doesn": [27, 1912], "pt": 27, "call": [27, 96, 1884, 1885, 1911], "insid": [27, 1927], "ed": 27, "workaround": 27, "_dynamo": 27, "allow_in_graph": [27, 968], "write": [28, 61, 73, 1905, 1910, 1923], "aten": [28, 1881, 1923], "ir": [28, 90, 1881], "pass": [28, 89, 95, 1885, 1908, 1918, 1930, 1936], "One": [28, 1922], "x": 28, "none": 28, "inform": [28, 1913, 1935], "subgraph": [28, 73], "rewrit": [28, 73], "manag": [28, 35, 43, 78, 1897, 1908, 1914, 1927], "partition": 28, "matcher": 28, "capabl": 28, "base": [28, 1926], "titl": 29, "diagnos": 29, "runtim": [29, 1907, 1912], "minifi": 29, "access": [29, 31, 1884, 1927], "torch_compile_debug": 29, "accuraci": [29, 1919, 1930, 1931], "file": [29, 42, 1897, 1927], "an": [29, 1879, 1923, 1926, 1927], "complex": [31, 974, 1905, 1913], "number": [31, 35, 60, 1905, 1907, 1912, 1920, 1947], "creat": [31, 1882, 1899], "transit": [31, 60], "from": [31, 60, 69, 73, 1879, 1898, 1922, 1923, 1927], "old": 31, "represent": 31, "real": [31, 498, 1747, 1913], "imag": [31, 327, 1182], "angl": [31, 134, 711], "ab": [31, 106, 694], "serial": [31, 1921, 1947], "__config__": 32, "cpp_extens": 33, "extend": [34, 50, 1910, 1911], "extens": [34, 35, 1910, 1915, 1922], "author": [34, 73], "random": [35, 39, 70, 1912, 1920, 1934, 1947], "commun": [35, 40, 42, 1880], "collect": [35, 42], "stream": [35, 36, 991, 1060, 1908], "event": [35, 51, 53, 988], "beta": [35, 48], "memori": [35, 39, 1908, 1912, 1914, 1916], "nvidia": [35, 1919], "nvtx": [35, 1045, 1046, 1047], "jiter": [35, 1028, 1029], "sanit": [35, 36], "prototyp": [35, 1930, 1931], "data": [39, 70, 80, 1885, 1909, 1912, 1923, 1931, 1945], "dataset": 39, "map": [39, 84, 1914], "style": 39, "iter": [39, 1884], "load": [39, 1219, 1283, 1879, 1921, 1927, 1930], "order": [39, 1905], "sampler": 39, "batch": [39, 68, 1919, 1926], "non": [39, 73, 1901, 1902, 1905, 1908, 1919, 1927, 1930], "collate_fn": 39, "singl": [39, 60, 1904], "multi": [39, 42, 60, 1901, 1902], "platform": 39, "pin": [39, 1908], "ddp": 40, "powersgd": 40, "state": [40, 1916, 1927], "acknowledg": [40, 1928], "deploi": 41, "ha": 41, "been": 41, "move": 41, "multipi": 41, "come": [42, 1905], "which": [42, 1905], "environ": [42, 60, 1908, 1915, 1927], "choos": 42, "network": [42, 1908, 1912, 1916], "interfac": [42, 1914], "nccl": [42, 1908], "initi": [42, 1901, 1916, 1945], "tcp": 42, "share": [42, 1897, 1908, 1927, 1937], "system": [42, 1885, 1897, 1911], "post": [42, 1930], "kei": [42, 1922], "valu": [42, 627, 1884, 1885, 1919, 1932, 1937], "store": [42, 59], "group": 42, "point": [42, 1915], "synchron": [42, 1061, 1331], "asynchron": [42, 1885, 1908, 1918], "third": 42, "parti": 42, "spawn": [42, 1897], "applic": 42, "monitor": [42, 1895], "barrier": 42, "torch_distributed_debug": 42, "log": [42, 385, 1285, 1915], "join": [43, 1947], "elast": [45, 50, 60], "advanc": [45, 1916], "plugin": 45, "parallel": [47, 1608, 1908, 1909, 1912, 1928, 1947], "probabl": 48, "score": 48, "pathwis": 48, "deriv": [48, 1905], "exponentialfamili": 48, "bernoulli": [48, 170, 936], "binomi": 48, "categor": 48, "cauchi": 48, "chi2": 48, "continuousbernoulli": 48, "dirichlet": 48, "exponenti": [48, 1787], "fishersnedecor": 48, "gamma": 48, "geometr": 48, "gumbel": 48, "halfcauchi": 48, "halfnorm": 48, "independ": 48, "kumaraswami": 48, "lkjcholeski": 48, "laplac": 48, "lognorm": 48, "lowrankmultivariatenorm": 48, "mixturesamefamili": 48, "multinomi": [48, 436, 1334], "multivariatenorm": 48, "negativebinomi": 48, "normal": [48, 1579, 1672, 1901, 1926], "onehotcategor": 48, "pareto": 48, "poisson": [48, 1722], "relaxedbernoulli": 48, "logitrelaxedbernoulli": 48, "relaxedonehotcategor": 48, "studentt": 48, "transformeddistribut": 48, "uniform": 48, "vonmis": 48, "weibul": 48, "wishart": 48, "kl": 48, "diverg": [48, 1887], "constraint": [48, 1908], "registri": [48, 59], "dlpack": 49, "agent": 50, "server": [50, 59, 61], "concept": 50, "watchdog": 50, "launcher": 51, "rendezv": [51, 59, 60], "handler": [51, 56, 59, 1912], "metric": [51, 56], "propag": [52, 1899], "object": [53, 1927], "torchelast": 55, "kubernet": 55, "multipl": [57, 1904, 1908, 1910, 1928], "worker": [57, 60, 1912], "quickstart": 58, "except": [59, 1912], "c10d": 59, "etcd": 59, "legaci": 59, "torchrun": 60, "node": [60, 90, 93, 97, 100, 101, 923, 924, 925, 926, 927, 1905], "stack": [60, 1823, 1930], "fault": 60, "toler": 60, "size": [60, 550, 1900], "failur": [60, 87], "min": [60, 427, 1314], "max": [60, 423, 1309], "4": [60, 68], "membership": [60, 1885], "note": [60, 1880, 1885, 1908, 1930, 1935], "definit": [60, 1885], "deploy": [60, 1915], "notic": [60, 1879], "expir": 61, "timer": 61, "client": 61, "train": [62, 1904, 1916, 1918, 1930], "script": [62, 1223, 1882, 1922, 1923], "_export": 63, "helper": 64, "fullyshardeddataparallel": 65, "patch": [68, 1927], "norm": [68, 468, 1268, 1671], "happen": 68, "option": [68, 1884, 1907, 1922, 1926], "batchnorm": 68, "paramet": [68, 1625, 1884, 1926], "functorch": [68, 69], "eval": [68, 1905], "migrat": [69, 1882], "make_funct": 69, "combine_state_for_ensembl": 69, "ux": 70, "vmap": [70, 71, 905, 1153, 1872, 1910, 1911], "mutat": [70, 1947], "arbitrari": [70, 1927], "structur": [70, 80, 1885, 1939], "out": [70, 1898, 1912], "depend": [70, 1927, 1936], "flow": [70, 73, 79, 1930], "item": [70, 368], "nonzero": [70, 467, 1670], "friend": 70, "whirlwind": 71, "tour": 71, "grad": [71, 306, 920, 1143, 1905, 1908], "auto": 71, "vector": 71, "vjp": [71, 919, 1152], "jacobian": [71, 916], "jvp": [71, 904, 917, 1148, 1911], "jacrev": [71, 1147], "jacfwd": [71, 1146], "hessian": [71, 914, 1145], "futur": 72, "A": [73, 1916], "quick": 73, "primer": 73, "manipul": [73, 1899], "direct": 73, "With": [73, 1887], "replace_pattern": 73, "proxi": 73, "retrac": 73, "interpret": [73, 1882], "pattern": [73, 1884, 1923, 1927], "introduct": [73, 1892, 1900, 1930], "pitfal": [73, 1923], "pdb": 73, "print": [73, 1884, 1885], "to_fold": 73, "graphmodul": 73, "avail": 73, "debugg": 73, "symbol": [73, 91, 96, 99, 102, 103, 1923, 1930, 1947], "static": [73, 1923, 1930], "tracer": [73, 86, 87, 1882], "leaf": 73, "miscellanea": 73, "exportdb": 74, "tag": [74, 1947], "assume_constant_result": [74, 83, 969], "autograd_funct": 74, "class_method": 74, "cond_branch_class_method": [74, 81, 82], "cond_branch_nested_funct": [74, 81, 82], "cond_branch_nonlocal_vari": [74, 81, 82], "cond_closed_over_vari": [74, 77, 81], "cond_operand": [74, 81, 82], "cond_pred": [74, 81, 82], "decor": 74, "dictionari": [74, 80, 1885], "dynamic_shape_assert": [74, 75], "dynamic_shape_constructor": [74, 82], "dynamic_shape_if_guard": [74, 79, 82], "dynamic_shape_map": [74, 82, 84], "dynamic_shape_sl": [74, 82], "dynamic_shape_view": [74, 82], "list_contain": [74, 75, 80, 82], "list_unpack": [74, 79, 80], "nested_funct": [74, 77], "null_context_manag": [74, 78], "pytree_flatten": 74, "scalar_output": [74, 82], "specialized_attribut": 74, "static_for_loop": [74, 79], "static_if": [74, 79], "tensor_setattr": [74, 76], "Not": [74, 1887], "yet": 74, "dynamic_shape_round": [74, 76, 82], "fn_with_kwarg": [74, 80], "type_reflection_method": [74, 76], "assert": [75, 1885, 1914], "builtin": [76, 1883], "closur": [77, 1926], "cond": [81, 1243], "escap": 83, "hatch": 83, "diagsys0001": 85, "arg": 85, "format": [85, 1927], "too": 85, "verbos": 85, "fxe0001": 86, "success": 86, "fxe0002": 87, "fxe0003": 88, "frontend": [88, 94], "fxe0004": 89, "neg": [89, 455, 457, 1346, 1347], "sigmoid": [89, 539, 772, 1474, 1595, 1782], "fxe0005": 90, "fxe0006": 91, "atenlib": [91, 92], "fxe0007": 92, "fxe0008": 93, "fxe0009": 94, "fxe0010": 95, "fxe0011": 96, "fxe0012": 97, "unsupport": [97, 1884, 1885, 1887, 1923, 1925], "analysi": 97, "fxe0013": 98, "fxe0014": 99, "opschema": 99, "match": [99, 1884, 1899], "fxe0015": 100, "insert": 100, "poe0001": 101, "miss": [101, 102, 103], "infer": [101, 1899, 1905, 1907, 1921], "poe0002": 102, "poe0003": 103, "standard": 103, "poe0004": 104, "newer": 104, "opset": 104, "version": [104, 1921], "abs_": 107, "absolut": [108, 695], "absolute_": 109, "aco": [110, 696], "acos_": 111, "acosh": [112, 697], "acosh_": 113, "add_": 115, "addbmm": [116, 699], "addbmm_": 117, "addcdiv": [118, 700], "addcdiv_": 119, "addcmul": [120, 701], "addcmul_": 121, "addmm": [122, 702, 1804], "addmm_": 123, "addmv": [124, 703], "addmv_": 125, "addr": [126, 704], "addr_": 127, "adjoint": [128, 705], "all": [129, 706, 1910, 1923, 1926], "allclos": [130, 707], "amax": [131, 708], "amin": [132, 709], "aminmax": [133, 710], "apply_": 136, "arcco": [137, 879], "arccos_": 138, "arccosh": [139, 880], "arccosh_": 140, "arcsin": [141, 881], "arcsin_": 142, "arcsinh": [143, 882], "arcsinh_": 144, "arctan": [145, 883], "arctan2": [146, 884], "arctan2_": 147, "arctan_": 148, "arctanh": [149, 885], "arctanh_": 150, "argmax": [151, 887], "argmin": [152, 888], "argsort": [153, 889], "argwher": [154, 890], "as_strid": [155, 891], "as_subclass": 156, "asin": [157, 894], "asin_": 158, "asinh": [159, 895], "asinh_": 160, "atan": [161, 896], "atan2": [162, 897], "atan2_": 163, "atan_": 164, "atanh": [165, 898], "atanh_": 166, "backward": [167, 902, 906, 1905, 1906, 1908, 1913, 1936], "baddbmm": [168, 934], "baddbmm_": 169, "bernoulli_": 171, "bincount": [173, 937], "bitwise_and": [174, 938], "bitwise_and_": 175, "bitwise_left_shift": [176, 939], "bitwise_left_shift_": 177, "bitwise_not": [178, 940], "bitwise_not_": 179, "bitwise_or": [180, 941], "bitwise_or_": 181, "bitwise_right_shift": [182, 942], "bitwise_right_shift_": 183, "bitwise_xor": [184, 943], "bitwise_xor_": 185, "bmm": [186, 946], "bool": 187, "broadcast_to": [188, 949], "byte": 189, "cauchy_": 190, "ccol_indic": 191, "cdoubl": 192, "ceil": [193, 955], "ceil_": 194, "cfloat": 195, "chalf": 196, "char": 197, "choleski": [198, 957, 1241], "cholesky_invers": [199, 958], "cholesky_solv": [200, 959], "chunk": [201, 960], "clamp": [202, 784, 961], "clamp_": 203, "clip": [204, 962, 1904], "clip_": 205, "clone": [206, 963], "coalesc": 207, "col_indic": 208, "conj": [209, 977], "conj_phys": [210, 978], "conj_physical_": 211, "contigu": 212, "copy_": 213, "copysign": [214, 979], "copysign_": 215, "corrcoef": [216, 980], "co": [217, 981], "cos_": 218, "cosh": [219, 982], "cosh_": 220, "count_nonzero": [221, 983], "cov": [222, 984], "cross": [224, 985, 1244, 1905], "crow_indic": 225, "cummax": [227, 1064], "cummin": [228, 1065], "cumprod": [229, 1066], "cumprod_": 230, "cumsum": [231, 1067], "cumsum_": 232, "data_ptr": 233, "deg2rad": [234, 1069], "dense_dim": 235, "dequant": [236, 1070, 1930], "det": [237, 1071, 1245], "detach": 238, "detach_": 239, "devic": [240, 1007, 1908, 1919, 1942], "diag": [241, 1072], "diag_emb": [242, 1073], "diagflat": [243, 1074], "diagon": [244, 1075, 1246], "diagonal_scatt": [245, 1076], "diff": [246, 1077], "digamma": [247, 1078], "digamma_": 248, "dim": [249, 1898], "dist": [250, 1079], "div": [251, 1080, 1921], "div_": 252, "divid": [253, 1081], "divide_": 254, "dot": [255, 1082], "doubl": 256, "dsplit": [257, 1083], "element_s": 258, "eq": [259, 1090], "eq_": 260, "equal": [261, 1091], "erf": [262, 1092], "erf_": 263, "erfc": [264, 1093], "erfc_": 265, "erfinv": [266, 1094], "erfinv_": 267, "exp": [268, 1095], "exp_": 269, "expand": 270, "expand_a": 271, "expm1": [272, 1097], "expm1_": 273, "exponential_": 274, "fill_": 275, "fill_diagonal_": 276, "fix_": 278, "flatten": [279, 1124, 1390], "flip": [280, 1125], "fliplr": [281, 1126], "flipud": [282, 1127], "float": [283, 1921], "float_pow": [284, 1128], "float_power_": 285, "floor": [286, 1129], "floor_": 287, "floor_divid": [288, 1130], "floor_divide_": 289, "fmax": [290, 1131], "fmin": [291, 1132], "fmod": [292, 1133], "fmod_": 293, "frac": [294, 1134], "frac_": 295, "frexp": [296, 1135], "gather": [297, 1000, 1154], "gcd": [298, 1155], "gcd_": 299, "ge": [300, 1156], "ge_": 301, "geometric_": 302, "geqrf": [303, 1157], "ger": [304, 1158], "get_devic": 305, "greater": [307, 1166], "greater_": 308, "greater_equ": [309, 1167], "greater_equal_": 310, "gt": [311, 1168], "gt_": 312, "half": 313, "hardshrink": [314, 1400, 1546], "heavisid": [315, 1171], "histc": [316, 1172], "histogram": [317, 1173], "hsplit": [318, 1175], "hypot": [319, 1178], "hypot_": 320, "i0": [321, 1179], "i0_": 322, "igamma": [323, 1180], "igamma_": 324, "igammac": [325, 1181], "igammac_": 326, "index_add": [328, 1183], "index_add_": 329, "index_copi": [330, 1184], "index_copy_": 331, "index_fil": 332, "index_fill_": 333, "index_put": 334, "index_put_": 335, "index_reduc": [336, 1185], "index_reduce_": 337, "index_select": [338, 1186], "indic": [339, 1880], "inner": [340, 1189], "int": 341, "int_repr": 342, "invers": [343, 1190, 1890], "is_coalesc": 344, "is_complex": [345, 1191], "is_conj": [346, 1192], "is_contigu": 347, "is_cuda": 348, "is_floating_point": [349, 1194], "is_infer": 350, "is_leaf": 351, "is_meta": 352, "is_pin": 353, "is_quant": 354, "is_set_to": 355, "is_shar": 356, "is_sign": 357, "is_spars": 358, "is_sparse_csr": 359, "isclos": [360, 1201], "isfinit": [361, 1202], "isinf": [362, 1204], "isnan": [363, 1205], "isneginf": [364, 1206], "isposinf": [365, 1207], "isreal": [366, 1208], "istft": [367, 1209], "items": 369, "kthvalu": [370, 1233], "lcm": [371, 1234], "lcm_": 372, "ldexp": [373, 1235], "ldexp_": 374, "le": [375, 1236], "le_": 376, "lerp": [377, 1237], "lerp_": 378, "less": [379, 1238], "less_": 380, "less_equ": [381, 1239], "less_equal_": 382, "lgamma": [383, 1240], "lgamma_": 384, "log10": [386, 1286], "log10_": 387, "log1p": [388, 1287], "log1p_": 389, "log2": [390, 1288], "log2_": 391, "log_": 392, "log_normal_": 393, "logaddexp": [394, 1289], "logaddexp2": [395, 1290], "logcumsumexp": [396, 1291], "logdet": [397, 1292], "logical_and": [398, 1293], "logical_and_": 399, "logical_not": [400, 1294], "logical_not_": 401, "logical_or": [402, 1295], "logical_or_": 403, "logical_xor": [404, 1296], "logical_xor_": 405, "logit": [406, 1297], "logit_": 407, "logsumexp": [408, 1299], "long": 409, "lt": [410, 1300], "lt_": 411, "lu": [412, 1258, 1301], "lu_solv": [413, 1261, 1302], "map_": 414, "masked_fil": 415, "masked_fill_": 416, "masked_scatt": 417, "masked_scatter_": 418, "masked_select": [419, 1305], "matmul": [420, 1262, 1306], "matrix_exp": [421, 1263, 1307], "matrix_pow": [422, 1265, 1308], "maximum": [424, 1310], "mean": [425, 1311], "median": [426, 1312], "minimum": [428, 1315], "mm": [429, 1316, 1807], "moveaxi": [431, 1318], "movedim": [432, 1319], "msort": [433, 1332], "mul": [434, 1333], "mul_": 435, "multipli": [437, 1335], "multiply_": 438, "mv": [439, 1336], "mvlgamma": [440, 1337], "mvlgamma_": 441, "nan_to_num": [442, 1338], "nan_to_num_": 443, "nanmean": [444, 1339], "nanmedian": [445, 1340], "nanquantil": [446, 1341], "nansum": [447, 1342], "narrow": [448, 1343], "narrow_copi": [449, 1344], "nbyte": 450, "ndim": 451, "ndimens": 452, "ne": [453, 1345], "ne_": 454, "neg_": 456, "negative_": 458, "nelement": 459, "new_empti": 460, "new_ful": 461, "new_on": 462, "new_tensor": 463, "new_zero": 464, "nextaft": [465, 1348], "nextafter_": 466, "normal_": 469, "not_equ": [470, 1673], "not_equal_": 471, "numel": [472, 1674], "numpi": [473, 1923], "orgqr": [474, 1716], "ormqr": [475, 1717], "outer": [476, 1718], "permut": [477, 1720, 1898], "pin_memori": 478, "pinvers": [479, 1721], "polygamma": [480, 1724], "polygamma_": 481, "posit": [482, 1725], "pow": [483, 1726], "pow_": 484, "prod": [485, 1727], "put_": 486, "q_per_channel_axi": 487, "q_per_channel_scal": 488, "q_per_channel_zero_point": 489, "q_scale": 490, "q_zero_point": 491, "qr": [492, 1270, 1729], "qscheme": 493, "quantil": [494, 1730], "rad2deg": [495, 1737], "random_": 496, "ravel": [497, 1746], "reciproc": [499, 1748], "reciprocal_": 500, "record_stream": 501, "register_hook": [502, 926], "remaind": [503, 1749], "remainder_": 504, "renorm": [505, 1750], "renorm_": 506, "repeat": 507, "repeat_interleav": [508, 1751], "requires_grad": [509, 1905], "requires_grad_": 510, "reshap": [511, 1752], "reshape_a": 512, "resize_": 513, "resize_as_": 514, "resolve_conj": [515, 1753], "resolve_neg": [516, 1754], "retain_grad": 517, "retains_grad": 518, "roll": [519, 1756], "rot90": [520, 1757], "round": [521, 1758], "round_": 522, "row_indic": 523, "rsqrt": [524, 1760], "rsqrt_": 525, "scatter": [526, 1002, 1762], "scatter_": 527, "scatter_add": [528, 1763], "scatter_add_": 529, "scatter_reduc": [530, 1764], "scatter_reduce_": 531, "select": [532, 1767, 1892], "select_scatt": [533, 1768], "set_": 534, "sgn": [535, 1781], "sgn_": 536, "share_memory_": 537, "short": 538, "sigmoid_": 540, "sign": [541, 1783], "sign_": 542, "signbit": [543, 1795], "sin": [544, 1796], "sin_": 545, "sinc": [546, 1797], "sinc_": 547, "sinh": [548, 1798], "sinh_": 549, "slice_scatt": [551, 1799], "slogdet": [552, 1271, 1800], "smm": [553, 1801], "softmax": [554, 1477, 1599, 1802, 1809], "sort": [555, 1803], "sparse_dim": 556, "sparse_mask": 557, "sparse_resize_": 558, "sparse_resize_and_clear_": 559, "split": [560, 1818], "sqrt": [561, 1819], "sqrt_": 562, "squar": [563, 1820], "square_": 564, "squeez": [565, 1821], "squeeze_": 566, "sspaddmm": [567, 1822], "std": [568, 1824], "stft": [569, 1826], "storag": [570, 1941], "storage_offset": 571, "storage_typ": 572, "stride": 573, "sub": [574, 1827], "sub_": 575, "subtract": [576, 1828], "subtract_": 577, "sum": [578, 1811, 1829, 1901], "sum_to_s": 579, "svd": [580, 1275, 1830], "swapax": [581, 1832], "swapdim": [582, 1833], "t_": 584, "take": [585, 1840, 1926], "take_along_dim": [586, 1841], "tan": [587, 1842], "tan_": 588, "tanh": [589, 1484, 1604, 1843], "tanh_": 590, "tensor_split": [591, 1845], "tile": [592, 1847], "to_dens": 594, "to_mkldnn": 595, "to_spars": 596, "to_sparse_bsc": 597, "to_sparse_bsr": 598, "to_sparse_coo": 599, "to_sparse_csc": 600, "to_sparse_csr": 601, "tolist": 602, "topk": [603, 1848], "transpos": [605, 1850], "transpose_": 606, "triangular_solv": [607, 1853], "tril": [608, 1854], "tril_": 609, "triu": [610, 1856], "triu_": 611, "true_divid": [612, 1858], "true_divide_": 613, "trunc": [614, 1859], "trunc_": 615, "type_a": 617, "unbind": [618, 1860, 1900], "unflatten": [619, 1494, 1861], "unfold": [620, 1495, 1611], "uniform_": 621, "uniqu": [622, 1862], "unique_consecut": [623, 1863], "unsqueez": [624, 1864], "unsqueeze_": 625, "untyped_storag": 626, "var": [628, 1867], "vdot": [629, 1869], "view_a": 631, "vsplit": [632, 1873], "where": [633, 1875, 1879], "xlogi": [634, 1876], "xlogy_": 635, "zero_": 636, "_assert": 637, "_foreach_ab": 638, "_foreach_abs_": 639, "_foreach_aco": 640, "_foreach_acos_": 641, "_foreach_asin": 642, "_foreach_asin_": 643, "_foreach_atan": 644, "_foreach_atan_": 645, "_foreach_ceil": 646, "_foreach_ceil_": 647, "_foreach_co": 648, "_foreach_cos_": 649, "_foreach_cosh": 650, "_foreach_cosh_": 651, "_foreach_erf": 652, "_foreach_erf_": 653, "_foreach_erfc": 654, "_foreach_erfc_": 655, "_foreach_exp": 656, "_foreach_exp_": 657, "_foreach_expm1": 658, "_foreach_expm1_": 659, "_foreach_floor": 660, "_foreach_floor_": 661, "_foreach_frac": 662, "_foreach_frac_": 663, "_foreach_lgamma": 664, "_foreach_lgamma_": 665, "_foreach_log": 666, "_foreach_log10": 667, "_foreach_log10_": 668, "_foreach_log1p": 669, "_foreach_log1p_": 670, "_foreach_log2": 671, "_foreach_log2_": 672, "_foreach_log_": 673, "_foreach_neg": 674, "_foreach_neg_": 675, "_foreach_reciproc": 676, "_foreach_reciprocal_": 677, "_foreach_round": 678, "_foreach_round_": 679, "_foreach_sigmoid": 680, "_foreach_sigmoid_": 681, "_foreach_sin": 682, "_foreach_sin_": 683, "_foreach_sinh": 684, "_foreach_sinh_": 685, "_foreach_sqrt": 686, "_foreach_sqrt_": 687, "_foreach_tan": 688, "_foreach_tan_": 689, "_foreach_trunc": 690, "_foreach_trunc_": 691, "_foreach_zero_": 692, "_log": [693, 1891], "set_log": 693, "bnrelu2d": [713, 736], "bnrelu3d": [714, 737], "convbn1d": [715, 725], "convbn2d": [716, 726], "convbn3d": [717, 727], "convbnrelu1d": [718, 728], "convbnrelu2d": [719, 729], "convbnrelu3d": [720, 730], "convrelu1d": [721, 738], "convrelu2d": [722, 731, 739], "convrelu3d": [723, 732, 740], "linearrelu": [724, 733, 741, 742], "freeze_bn_stat": 734, "update_bn_stat": 735, "conv2d": [743, 752, 786, 1373, 1519], "conv3d": [744, 753, 787, 1374, 1520], "lstm": [747, 775, 1414, 1920], "multiheadattent": [748, 1450], "batchnorm2d": [749, 1363], "batchnorm3d": [750, 1364], "conv1d": [751, 785, 1372, 1518], "convtranspose1d": [754, 1375], "convtranspose2d": [755, 1376], "convtranspose3d": [756, 1377], "elu": [757, 788, 1386, 1532], "embed": [758, 1387, 1534], "embeddingbag": [759, 1388], "fxfloatfunct": 760, "floatfunct": 761, "groupnorm": [762, 1399], "hardswish": [763, 790, 1402, 1548], "instancenorm1d": [764, 1407], "instancenorm2d": [765, 1408], "instancenorm3d": [766, 1409], "layernorm": [767, 1416], "leakyrelu": [768, 1430], "qfunction": 770, "relu6": [771, 1464, 1589], "gru": [773, 1396], "grucel": [774, 1397], "lstmcell": [776, 1415], "rnncell": [778, 1461], "adaptive_avg_pool2d": [779, 1503], "adaptive_avg_pool3d": [780, 1504], "avg_pool2d": [781, 1511], "avg_pool3d": [782, 1512], "celu": [783, 1366, 1517], "hardsigmoid": [789, 1401, 1547], "hardtanh": [791, 1403, 1549], "interpol": [792, 1554], "leaky_relu": [793, 1558], "max_pool1d": [795, 1567], "max_pool2d": [796, 1568], "threshold": [797, 1486, 1606], "upsampl": [798, 1496, 1612], "upsample_bilinear": [799, 1613], "upsample_nearest": [800, 1614], "dequantstub": 801, "quantstub": 802, "quantwrapp": 803, "add_quant_dequ": 804, "backendconfig": 805, "backendpatternconfig": 806, "dtypeconfig": 807, "dtypewithconstraint": 808, "observationtyp": 809, "default_eval_fn": 811, "fakequant": [812, 1930], "fakequantizebas": 813, "fixedqparamsfakequant": 814, "fusedmovingavgobsfakequant": 815, "default_fake_qu": 816, "default_fused_act_fake_qu": 817, "default_fused_per_channel_wt_fake_qu": 818, "default_fused_wt_fake_qu": 819, "default_histogram_fake_qu": 820, "default_per_channel_weight_fake_qu": 821, "default_weight_fake_qu": 822, "disable_fake_qu": 823, "disable_observ": 824, "enable_fake_qu": 825, "enable_observ": 826, "fuse_modul": 827, "convertcustomconfig": 828, "fusecustomconfig": 829, "preparecustomconfig": 830, "standalonemoduleconfigentri": 831, "histogramobserv": 832, "minmaxobserv": 833, "movingaverageminmaxobserv": 834, "movingaverageperchannelminmaxobserv": 835, "noopobserv": 836, "observerbas": 837, "perchannelminmaxobserv": 838, "placeholderobserv": 839, "recordingobserv": 840, "default_debug_observ": 841, "default_dynamic_quant_observ": 842, "default_float_qparams_observ": 843, "default_histogram_observ": 844, "default_observ": 845, "default_per_channel_weight_observ": 846, "default_placeholder_observ": 847, "default_weight_observ": 848, "get_observer_state_dict": 849, "load_observer_state_dict": 850, "prepar": [851, 1930, 1933], "prepare_qat": 852, "propagate_qconfig": 853, "qconfig": [854, 1930, 1933], "default_activation_only_qconfig": 855, "default_debug_qconfig": 856, "default_dynamic_qconfig": 857, "default_per_channel_qconfig": 858, "default_qat_qconfig": 859, "default_qat_qconfig_v2": 860, "default_qconfig": 861, "default_weight_only_qconfig": 862, "float16_dynamic_qconfig": 863, "float16_static_qconfig": 864, "float_qparams_weight_only_qconfig": 865, "per_channel_dynamic_qconfig": 866, "qconfigmap": 867, "get_default_qat_qconfig_map": 868, "get_default_qconfig_map": 869, "quantiz": [870, 1901, 1916, 1923, 1930, 1931, 1932, 1933], "quantize_dynam": 871, "convert_fx": 872, "fuse_fx": 873, "prepare_fx": 874, "prepare_qat_fx": 875, "quantize_qat": 876, "swap_modul": 877, "arang": 878, "are_deterministic_algorithms_en": 886, "as_tensor": 892, "asarrai": 893, "atleast_1d": 899, "atleast_2d": 900, "atleast_3d": 901, "dual_level": 907, "forward_ad": [908, 909], "make_du": 908, "unpack_du": 909, "functionctx": [910, 911, 912, 913], "mark_dirti": 910, "mark_non_differenti": 911, "save_for_backward": 912, "set_materialize_grad": 913, "hvp": 915, "vhp": 918, "gradcheck": [921, 1913], "gradgradcheck": [922, 1913], "metadata": [923, 1915], "name": [924, 1884, 1898, 1899], "next_funct": 925, "register_prehook": 927, "load_nvprof": 928, "export_chrome_trac": 929, "key_averag": 930, "self_cpu_time_tot": 931, "total_averag": 932, "set_multithreading_en": 933, "bartlett_window": 935, "blackman_window": 944, "block_diag": 945, "broadcast_shap": 947, "broadcast_tensor": 948, "bucket": 950, "can_cast": 951, "cartesian_prod": 952, "cat": 953, "cdist": 954, "chain_matmul": 956, "column_stack": 964, "combin": [965, 1910], "compiled_with_cxx11_abi": 967, "list_backend": 972, "reset": 973, "concat": 975, "concaten": 976, "cudapluggablealloc": 987, "externalstream": 989, "outofmemoryerror": 990, "streamcontext": 992, "caching_allocator_alloc": 993, "caching_allocator_delet": 994, "can_device_access_p": 995, "change_current_alloc": 996, "clock_rat": 997, "comm": [998, 999, 1000, 1001, 1002], "broadcast": [998, 1906], "broadcast_coalesc": 999, "reduce_add": 1001, "current_blas_handl": 1003, "current_devic": 1004, "current_stream": 1005, "default_stream": 1006, "device_count": 1008, "device_of": 1009, "empty_cach": [1010, 1322], "get_allocator_backend": 1011, "get_arch_list": 1012, "get_device_cap": 1013, "get_device_nam": 1014, "get_device_properti": 1015, "get_gencode_flag": 1016, "get_rng_stat": [1017, 1164, 1323], "get_rng_state_al": 1018, "get_sync_debug_mod": 1019, "graph_pool_handl": 1021, "init": [1022, 1903], "initial_se": [1023, 1188], "ipc_collect": 1024, "is_avail": 1025, "is_current_stream_captur": 1026, "is_initi": 1027, "_create_jit_fn": 1028, "_create_multi_output_jit_fn": 1029, "list_gpu_process": 1030, "make_graphed_cal": 1031, "manual_se": [1032, 1304, 1324], "manual_seed_al": 1033, "max_memory_alloc": 1034, "max_memory_cach": 1035, "max_memory_reserv": 1036, "mem_get_info": 1037, "memory_alloc": 1038, "memory_cach": 1039, "memory_reserv": 1040, "memory_snapshot": 1041, "memory_stat": 1042, "memory_summari": 1043, "memory_usag": 1044, "mark": 1045, "range_pop": 1046, "range_push": 1047, "power_draw": 1048, "reset_max_memory_alloc": 1049, "reset_max_memory_cach": 1050, "reset_peak_memory_stat": 1051, "seed": [1052, 1328, 1766], "seed_al": 1053, "set_devic": 1054, "set_per_process_memory_fract": [1055, 1329], "set_rng_stat": [1056, 1330, 1779], "set_rng_state_al": 1057, "set_stream": 1058, "set_sync_debug_mod": 1059, "temperatur": 1062, "cumulative_trapezoid": 1068, "dstack": 1084, "einsum": 1085, "empti": 1086, "empty_lik": 1087, "empty_strid": 1088, "enable_grad": 1089, "exp2": 1096, "ey": 1098, "fake_quantize_per_channel_affin": 1099, "fake_quantize_per_tensor_affin": 1100, "fft2": 1102, "fftfreq": 1103, "fftn": 1104, "fftshift": 1105, "hfft": 1106, "hfft2": 1107, "hfftn": 1108, "ifft": 1109, "ifft2": 1110, "ifftn": 1111, "ifftshift": 1112, "ihfft": 1113, "ihfft2": 1114, "ihfftn": 1115, "irfft": 1116, "irfft2": 1117, "irfftn": 1118, "rfft": 1119, "rfft2": 1120, "rfftfreq": 1121, "rfftn": 1122, "from_dlpack": 1136, "from_numpi": 1137, "frombuff": 1138, "full": [1139, 1921], "full_lik": 1140, "functional_cal": [1141, 1666], "grad_and_valu": 1144, "replace_all_batch_norm_modules_": 1150, "stack_module_st": 1151, "get_default_dtyp": 1159, "get_deterministic_debug_mod": 1160, "get_float32_matmul_precis": 1161, "get_num_interop_thread": 1162, "get_num_thread": 1163, "hamming_window": 1169, "hann_window": 1170, "histogramdd": 1174, "hspmm": 1176, "hstack": 1177, "inference_mod": 1187, "is_deterministic_algorithms_warn_only_en": 1193, "is_grad_en": 1195, "is_inference_mode_en": 1196, "is_nonzero": 1197, "is_storag": 1198, "is_tensor": 1199, "is_warn_always_en": 1200, "isin": 1203, "attribut": [1210, 1882, 1884, 1885, 1887, 1942], "scriptfunct": 1211, "scriptmodul": [1212, 1921], "annot": [1213, 1885], "enable_onednn_fus": 1214, "fork": 1215, "freez": 1216, "ignor": 1217, "isinst": 1218, "onednn_fusion_en": 1220, "optimize_for_infer": 1221, "save": [1222, 1761, 1879, 1905, 1915, 1921, 1930], "script_if_trac": 1224, "set_fusion_strategi": 1225, "strict_fus": 1226, "trace_modul": 1228, "unus": 1229, "wait": 1230, "kaiser_window": 1231, "kron": 1232, "cholesky_ex": 1242, "eig": 1247, "eigh": 1248, "eigval": 1249, "eigvalsh": 1250, "householder_product": 1251, "inv": 1252, "inv_ex": 1253, "ldl_factor": 1254, "ldl_factor_ex": 1255, "ldl_solv": 1256, "lstsq": 1257, "lu_factor": 1259, "lu_factor_ex": 1260, "matrix_norm": 1264, "matrix_rank": 1266, "multi_dot": 1267, "pinv": 1269, "solv": 1272, "solve_ex": 1273, "solve_triangular": 1274, "svdval": 1276, "tensorinv": 1277, "tensorsolv": 1278, "vander": [1279, 1866], "vecdot": 1280, "vector_norm": 1281, "linspac": 1282, "lobpcg": 1284, "logspac": 1298, "lu_unpack": 1303, "meshgrid": 1313, "current_allocated_memori": 1320, "driver_allocated_memori": 1321, "stop": 1327, "adaptiveavgpool1d": 1349, "adaptiveavgpool2d": 1350, "adaptiveavgpool3d": 1351, "adaptivelogsoftmaxwithloss": 1352, "adaptivemaxpool1d": 1353, "adaptivemaxpool2d": 1354, "adaptivemaxpool3d": 1355, "alphadropout": 1356, "avgpool1d": 1357, "avgpool2d": 1358, "avgpool3d": 1359, "bceloss": 1360, "bcewithlogitsloss": 1361, "batchnorm1d": 1362, "bilinear": [1365, 1514], "ctcloss": 1367, "channelshuffl": 1368, "constantpad1d": 1369, "constantpad2d": 1370, "constantpad3d": 1371, "cosineembeddingloss": 1378, "cosinesimilar": 1379, "crossentropyloss": 1380, "dataparallel": [1381, 1901, 1902, 1904, 1908], "dropout": [1382, 1528, 1901, 1902], "dropout1d": [1383, 1529], "dropout2d": [1384, 1530], "dropout3d": [1385, 1531], "featurealphadropout": 1389, "fold": [1391, 1537], "fractionalmaxpool2d": 1392, "fractionalmaxpool3d": 1393, "gelu": [1394, 1541], "glu": [1395, 1542], "gaussiannllloss": 1398, "hingeembeddingloss": 1404, "huberloss": 1405, "ident": [1406, 1640, 1648, 1885, 1912], "kldivloss": 1410, "l1loss": 1411, "lppool1d": 1412, "lppool2d": 1413, "lazybatchnorm1d": 1417, "lazybatchnorm2d": 1418, "lazybatchnorm3d": 1419, "lazyconv1d": 1420, "lazyconv2d": 1421, "lazyconv3d": 1422, "lazyconvtranspose1d": 1423, "lazyconvtranspose2d": 1424, "lazyconvtranspose3d": 1425, "lazyinstancenorm1d": 1426, "lazyinstancenorm2d": 1427, "lazyinstancenorm3d": 1428, "lazylinear": 1429, "localresponsenorm": 1432, "logsigmoid": [1433, 1563], "logsoftmax": 1434, "mseloss": 1435, "marginrankingloss": 1436, "maxpool1d": 1437, "maxpool2d": 1438, "maxpool3d": 1439, "maxunpool1d": 1440, "maxunpool2d": 1441, "maxunpool3d": 1442, "mish": [1443, 1573], "moduledict": [1445, 1885], "modulelist": [1446, 1884, 1885], "multilabelmarginloss": 1447, "multilabelsoftmarginloss": 1448, "multimarginloss": 1449, "nllloss": 1451, "prelu": [1452, 1587], "pairwisedist": 1453, "parameterdict": 1454, "parameterlist": 1455, "pixelshuffl": 1456, "pixelunshuffl": 1457, "poissonnllloss": 1458, "rnn": [1459, 1658, 1659, 1660, 1661, 1662, 1663, 1920], "rnnbase": 1460, "rrelu": [1462, 1591], "relu": [1463, 1588], "reflectionpad1d": 1465, "reflectionpad2d": 1466, "reflectionpad3d": 1467, "replicationpad1d": 1468, "replicationpad2d": 1469, "replicationpad3d": 1470, "selu": [1471, 1594], "sequenti": 1472, "silu": [1473, 1596], "smoothl1loss": 1475, "softmarginloss": 1476, "softmax2d": 1478, "softmin": [1479, 1600], "softplu": [1480, 1601], "softshrink": [1481, 1602], "softsign": [1482, 1603], "syncbatchnorm": 1483, "tanhshrink": [1485, 1605], "transformerdecod": 1488, "transformerdecoderlay": 1489, "transformerencod": 1490, "transformerencoderlay": 1491, "tripletmarginloss": 1492, "tripletmarginwithdistanceloss": 1493, "upsamplingbilinear2d": 1497, "upsamplingnearest2d": 1498, "zeropad1d": 1499, "zeropad2d": 1500, "zeropad3d": 1501, "adaptive_avg_pool1d": 1502, "adaptive_max_pool1d": 1505, "adaptive_max_pool2d": 1506, "adaptive_max_pool3d": 1507, "affine_grid": 1508, "alpha_dropout": 1509, "avg_pool1d": 1510, "batch_norm": 1513, "conv_transpose1d": 1521, "conv_transpose2d": 1522, "conv_transpose3d": 1523, "cosine_embedding_loss": 1524, "cosine_similar": 1525, "cross_entropi": 1526, "ctc_loss": 1527, "elu_": 1533, "embedding_bag": 1535, "feature_alpha_dropout": 1536, "fractional_max_pool2d": 1538, "fractional_max_pool3d": 1539, "gaussian_nll_loss": 1540, "grid_sampl": 1543, "group_norm": 1544, "gumbel_softmax": 1545, "hardtanh_": 1550, "hinge_embedding_loss": 1551, "huber_loss": 1552, "instance_norm": 1553, "kl_div": 1555, "l1_loss": 1556, "layer_norm": 1557, "leaky_relu_": 1559, "local_response_norm": 1561, "log_softmax": [1562, 1806], "lp_pool1d": 1564, "lp_pool2d": 1565, "margin_ranking_loss": 1566, "max_pool3d": 1569, "max_unpool1d": 1570, "max_unpool2d": 1571, "max_unpool3d": 1572, "mse_loss": 1574, "multi_margin_loss": 1575, "multilabel_margin_loss": 1576, "multilabel_soft_margin_loss": 1577, "nll_loss": 1578, "one_hot": 1580, "pad": [1581, 1901], "pairwise_dist": 1582, "pdist": 1583, "pixel_shuffl": 1584, "pixel_unshuffl": 1585, "poisson_nll_loss": 1586, "relu_": 1590, "rrelu_": 1592, "scaled_dot_product_attent": 1593, "smooth_l1_loss": 1597, "soft_margin_loss": 1598, "threshold_": 1607, "data_parallel": [1608, 1902], "triplet_margin_loss": 1609, "triplet_margin_with_distance_loss": 1610, "lazymodulemixin": 1615, "register_module_backward_hook": 1616, "register_module_buffer_registration_hook": 1617, "register_module_forward_hook": 1618, "register_module_forward_pre_hook": 1619, "register_module_full_backward_hook": 1620, "register_module_full_backward_pre_hook": 1621, "register_module_module_registration_hook": 1622, "register_module_parameter_registration_hook": 1623, "distributeddataparallel": [1624, 1904, 1908, 1909], "uninitializedbuff": 1626, "uninitializedparamet": 1627, "clip_grad_norm_": 1628, "clip_grad_value_": 1629, "parameters_to_vector": 1630, "parametr": [1631, 1632, 1634, 1635, 1636, 1637, 1916], "orthogon": 1631, "spectral_norm": [1632, 1665], "parametrizationlist": 1633, "is_parametr": 1635, "register_parametr": 1636, "remove_parametr": 1637, "basepruningmethod": 1638, "customfrommask": 1639, "l1unstructur": 1641, "lnstructur": 1642, "pruningcontain": 1643, "randomstructur": 1644, "randomunstructur": 1645, "prune": [1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1916], "custom_from_mask": 1646, "global_unstructur": 1647, "is_prun": 1649, "l1_unstructur": 1650, "ln_structur": 1651, "random_structur": 1652, "random_unstructur": 1653, "remove_spectral_norm": 1655, "remove_weight_norm": 1656, "packedsequ": 1657, "pack_padded_sequ": 1658, "pack_sequ": 1659, "pad_packed_sequ": 1660, "pad_sequ": 1661, "unpack_sequ": 1662, "unpad_sequ": 1663, "skip_init": 1664, "stateless": 1666, "vector_to_paramet": 1667, "weight_norm": 1668, "no_grad": 1669, "ones": 1675, "ones_lik": 1676, "exportopt": 1677, "exportoutput": 1678, "exportoutputseri": 1679, "jitscalartyp": 1680, "graphinfo": 1681, "verificationopt": 1682, "asgd": 1683, "adadelta": 1684, "adagrad": 1685, "adam": 1686, "adamw": 1687, "adamax": 1688, "lbfg": 1689, "nadam": 1690, "add_param_group": 1691, "load_state_dict": 1692, "step": [1694, 1926], "zero_grad": 1695, "radam": 1696, "rmsprop": 1697, "rprop": 1698, "sgd": 1699, "sparseadam": 1700, "chainedschedul": 1701, "constantlr": 1702, "cosineannealinglr": 1703, "cosineannealingwarmrestart": 1704, "cycliclr": 1705, "exponentiallr": 1706, "lambdalr": 1707, "linearlr": 1708, "multisteplr": 1709, "multiplicativelr": 1710, "onecyclelr": 1711, "polynomiallr": 1712, "reducelronplateau": 1713, "sequentiallr": 1714, "steplr": 1715, "pca_lowrank": 1719, "polar": 1723, "promote_typ": 1728, "quantize_per_channel": 1731, "quantize_per_tensor": 1732, "quantized_batch_norm": 1733, "quantized_max_pool1d": 1734, "quantized_max_pool2d": 1735, "sobolengin": 1736, "rand": 1738, "rand_lik": 1739, "randint": 1740, "randint_lik": 1741, "randn": 1742, "randn_lik": 1743, "randperm": 1744, "rang": [1745, 1884], "result_typ": 1755, "row_stack": 1759, "searchsort": 1765, "set_default_devic": 1769, "set_default_dtyp": 1770, "set_default_tensor_typ": 1771, "set_deterministic_debug_mod": 1772, "set_float32_matmul_precis": 1773, "set_flush_denorm": 1774, "set_grad_en": 1775, "set_num_interop_thread": 1776, "set_num_thread": 1777, "set_printopt": 1778, "set_warn_alwai": 1780, "signal": [1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1938], "bartlett": 1784, "blackman": 1785, "cosin": 1786, "gaussian": 1788, "general_cosin": 1789, "general_ham": 1790, "ham": 1791, "hann": 1792, "kaiser": 1793, "nuttal": 1794, "check_sparse_tensor_invari": 1805, "sampled_addmm": 1808, "spdiag": 1810, "sparse_bsc_tensor": 1812, "sparse_bsr_tensor": 1813, "sparse_compressed_tensor": 1814, "sparse_coo_tensor": 1815, "sparse_csc_tensor": 1816, "sparse_csr_tensor": 1817, "std_mean": 1825, "svd_lowrank": 1831, "sym_float": 1834, "sym_int": 1835, "sym_max": 1836, "sym_min": 1837, "sym_not": 1838, "tensordot": 1846, "trapezoid": 1851, "trapz": 1852, "tril_indic": 1855, "triu_indic": 1857, "use_deterministic_algorithm": 1865, "var_mean": 1868, "view_as_complex": 1870, "view_as_r": 1871, "vstack": 1874, "zero": 1877, "zeros_lik": 1878, "hub": 1879, "publish": 1879, "entrypoint": 1879, "download": 1879, "logic": [1879, 1884], "known": [1879, 1882], "bind": 1880, "tabl": [1880, 1921], "prim": 1881, "built": [1882, 1883, 1885, 1923], "inspect": 1882, "warn": 1882, "appendix": [1882, 1885], "recurs": 1882, "constant": [1882, 1884], "fusion": 1882, "math": [1883, 1947], "construct": [1884, 1885, 1887, 1900, 1926, 1939], "refin": [1884, 1885], "enum": [1884, 1885], "tupl": [1884, 1885], "express": [1884, 1885], "liter": [1884, 1885], "list": [1884, 1885, 1923], "dict": 1884, "arithmet": [1884, 1885], "subscript": [1884, 1885], "slice": [1884, 1885, 1919, 1947], "ternari": [1884, 1885], "cast": 1884, "statement": [1884, 1885], "assign": [1884, 1885], "If": 1884, "while": [1884, 1885], "loop": 1884, "For": 1884, "continu": [1884, 1885], "return": [1884, 1885, 1912, 1937], "resolut": [1884, 1885], "lookup": 1884, "defin": [1884, 1910, 1911], "terminologi": 1885, "meta": 1885, "primit": 1885, "special": [1885, 1905, 1940], "instanc": 1885, "signatur": 1885, "expr": 1885, "convers": [1885, 1900], "atom": 1885, "parenthes": 1885, "form": 1885, "displai": 1885, "primari": 1885, "power": 1885, "unari": [1885, 1892, 1939], "bitwis": 1885, "binari": [1885, 1892], "shift": 1885, "boolean": 1885, "condit": 1885, "augment": 1885, "rais": 1885, "del": 1885, "compound": 1885, "els": 1885, "getattr": 1885, "hasattr": 1885, "zip": [1885, 1927], "enumer": 1885, "rule": [1885, 1899, 1911, 1924], "remot": [1885, 1937], "procedur": 1885, "execut": [1885, 1905, 1908, 1927, 1928], "program": 1885, "coverag": [1886, 1898, 1910], "properti": [1887, 1890], "correctli": 1887, "bound": 1887, "schema": 1887, "between": [1887, 1927], "matrix": [1890, 1930], "decomposit": 1890, "solver": 1890, "misc": 1890, "experiment": 1890, "reduct": [1892, 1908, 1919, 1947], "mobile_optim": 1893, "model_zoo": 1894, "strategi": [1897, 1926], "descriptor": 1897, "file_descriptor": 1897, "file_system": 1897, "subprocess": 1897, "keep": [1898, 1927], "dimens": [1898, 1899], "unifi": 1898, "contract": 1898, "awai": 1898, "factori": 1898, "variant": 1898, "semant": [1899, 1906, 1908, 1914, 1921], "explicit": 1899, "align": 1899, "current": 1899, "subsystem": 1899, "constructor": 1900, "contain": 1901, "convolut": [1901, 1902, 1919, 1920], "layer": 1901, "pool": [1901, 1902], "activ": [1901, 1902], "weight": [1901, 1926], "nonlinear": 1901, "recurr": [1901, 1912], "distanc": [1901, 1902], "loss": [1901, 1902, 1904], "vision": [1901, 1902], "shuffl": 1901, "lazi": 1901, "attent": 1902, "typic": 1904, "unscal": 1904, "accumul": 1904, "penalti": 1904, "one": 1904, "per": [1904, 1926], "particular": [1904, 1905], "dtype": [1904, 1921, 1933, 1942], "encod": 1905, "histori": 1905, "set": [1905, 1923], "No": 1905, "multithread": 1905, "concurr": 1905, "determin": [1905, 1920], "retain": 1905, "thread": [1905, 1907], "safeti": 1905, "wirting": 1905, "calculu": 1905, "pictur": 1905, "conjug": 1905, "own": 1905, "formula": 1905, "domain": 1905, "whether": [1905, 1927], "fire": 1905, "differ": [1905, 1923], "modifi": 1905, "compat": 1906, "tune": 1907, "tensorfloat": [1908, 1914, 1919], "32": [1908, 1914, 1919, 1922], "tf32": [1908, 1914, 1919], "amper": [1908, 1919], "reduc": [1908, 1919], "fp16": [1908, 1919], "gemm": [1908, 1919], "bf16": [1908, 1919], "bc": 1908, "alloc": [1908, 1912], "cubla": 1908, "workspac": 1908, "cufft": 1908, "plan": [1908, 1914], "just": 1908, "practic": [1908, 1918, 1930], "agnost": 1908, "buffer": [1908, 1918], "instead": 1908, "captur": 1908, "partial": 1908, "9": 1908, "6": 1908, "across": [1908, 1921], "processgroup": 1909, "ddpoptim": 1909, "separ": 1910, "setup_context": 1910, "like": [1910, 1927], "wrapper": 1910, "__torch_function__": 1910, "overrid": [1910, 1950], "nativ": [1910, 1930, 1932], "specifi": 1911, "staticmethod": 1911, "isn": 1912, "freed": 1912, "properli": 1912, "loader": 1912, "notat": 1913, "analyt": 1913, "output": 1913, "u": 1913, "reus": [1914, 1918], "hipfft": 1914, "rocfft": 1914, "enabl": 1914, "kernel": [1914, 1930], "larg": 1915, "fleet": 1915, "wide": 1915, "attach": 1915, "consider": 1915, "block": 1916, "neural": 1916, "tip": [1918, 1931], "fight": 1918, "deadlock": 1918, "through": 1918, "queue": 1918, "e": 1918, "g": 1918, "hogwild": 1918, "oversubscript": 1918, "extrem": 1919, "finit": 1919, "instinct": 1919, "mi200": 1919, "reproduc": 1920, "nondeterminist": 1920, "algorithm": [1920, 1926, 1936], "content": [1921, 1927], "preserv": 1921, "them": [1921, 1927], "integ": 1921, "divis": 1921, "alwai": 1921, "includ": [1922, 1927], "compon": 1922, "instal": 1922, "cffi": 1922, "cpp": 1922, "found": 1922, "win": 1922, "channel": 1922, "without": 1922, "claus": 1922, "protect": 1922, "broken": 1922, "pipe": [1922, 1928], "driver": 1922, "shut": 1922, "down": 1922, "ipc": 1922, "alexnet": 1923, "v": 1923, "index": [1923, 1947], "inlin": 1923, "discov": 1923, "unconvert": 1923, "onc": 1923, "preview": 1923, "diagnost": 1924, "adjust": 1926, "rate": 1926, "averag": 1926, "swa": 1926, "ema": 1926, "schedul": 1926, "care": 1926, "put": 1926, "togeth": 1926, "your": 1927, "treat": 1927, "archiv": 1927, "file_structur": 1927, "given": 1927, "wa": 1927, "later": 1927, "distinguish": 1927, "explan": 1927, "framework": [1927, 1935], "user": [1927, 1937], "analyz": 1927, "extern": 1927, "mock": 1927, "refactor": 1927, "sharp": 1927, "global": 1927, "isol": 1927, "mangl": 1927, "pipelin": 1928, "skip": 1928, "connect": 1928, "intel": 1929, "instrument": 1929, "technologi": 1929, "eager": 1930, "awar": 1930, "engin": [1930, 1947], "observ": [1930, 1933], "hardwar": 1930, "configur": [1930, 1932, 1947], "insensit": 1931, "int8": 1931, "sensit": 1931, "ao": [1933, 1948, 1949], "top": 1933, "quantize_fx": 1933, "qconfig_map": 1933, "backend_config": 1933, "custom_config": 1933, "fake_quant": 1933, "intrins": 1933, "qat": 1933, "scheme": 1933, "rpc": 1935, "tensorpip": 1935, "rref": [1935, 1937], "remotemodul": 1935, "record": 1936, "dure": 1936, "smart": 1936, "end": 1936, "protocol": 1937, "assumpt": 1937, "lifetim": 1937, "reason": 1937, "scenario": 1937, "owner": 1937, "argument": 1937, "sparsiti": 1939, "semi": 1939, "acceler": 1939, "coo": 1939, "hybrid": 1939, "uncoalesc": 1939, "csr": 1939, "csc": 1939, "bsr": 1939, "bsc": 1939, "memory_format": 1942, "tensorboard": 1944, "creation": 1947, "sampl": 1947, "quasi": 1947, "pointwis": 1947, "spectral": 1947, "bla": 1947, "lapack": 1947, "foreach": 1947, "n": [1948, 1949], "_numeric_suit": 1948, "_numeric_suite_fx": 1949, "info": 1951, "finfo": 1951, "iinfo": 1951}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.conj_physical": [[210, "torch-tensor-conj-physical"]], "torch.Tensor.cumsum_": [[232, "torch-tensor-cumsum"]], "torch.Tensor.cross": [[224, "torch-tensor-cross"]], "torch.Tensor.detach": [[238, "torch-tensor-detach"]], "torch.Tensor.clamp_": [[203, "torch-tensor-clamp"]], "torch.Tensor.clip_": [[205, "torch-tensor-clip"]], "torch.Tensor.cos_": [[218, "torch-tensor-cos"]], "torch.Tensor.corrcoef": [[216, "torch-tensor-corrcoef"]], "torch.Tensor.cumprod": [[229, "torch-tensor-cumprod"]], "torch.Tensor.cholesky": [[198, "torch-tensor-cholesky"]], "torch.Tensor.cpu": [[223, "torch-tensor-cpu"]], "torch.Tensor.diagonal": [[244, "torch-tensor-diagonal"]], "torch.Tensor.cos": [[217, "torch-tensor-cos"]], "torch.Tensor.cov": [[222, "torch-tensor-cov"]], "torch.Tensor.dense_dim": [[235, "torch-tensor-dense-dim"]], "torch.Tensor.data_ptr": [[233, "torch-tensor-data-ptr"]], "torch.Tensor.clone": [[206, "torch-tensor-clone"]], "torch.Tensor.cosh_": [[220, "torch-tensor-cosh"]], "torch.Tensor.cummax": [[227, "torch-tensor-cummax"]], "torch.Tensor.cholesky_solve": [[200, "torch-tensor-cholesky-solve"]], "torch.Tensor.conj": [[209, "torch-tensor-conj"]], "torch.Tensor.copysign": [[214, "torch-tensor-copysign"]], "torch.Tensor.cumprod_": [[230, "torch-tensor-cumprod"]], "torch.Tensor.det": [[237, "torch-tensor-det"]], "torch.Tensor.chalf": [[196, "torch-tensor-chalf"]], "torch.Tensor.diag": [[241, "torch-tensor-diag"]], "torch.Tensor.diag_embed": [[242, "torch-tensor-diag-embed"]], "torch.Tensor.col_indices": [[208, "torch-tensor-col-indices"]], "torch.Tensor.cummin": [[228, "torch-tensor-cummin"]], "torch.Tensor.char": [[197, "torch-tensor-char"]], "torch.Tensor.copy_": [[213, "torch-tensor-copy"]], "torch.Tensor.cumsum": [[231, "torch-tensor-cumsum"]], "torch.Tensor.coalesce": [[207, "torch-tensor-coalesce"]], "torch.Tensor.deg2rad": [[234, "torch-tensor-deg2rad"]], "torch.Tensor.copysign_": [[215, "torch-tensor-copysign"]], "torch.Tensor.dequantize": [[236, "torch-tensor-dequantize"]], "torch.Tensor.detach_": [[239, "torch-tensor-detach"]], "torch.Tensor.device": [[240, "torch-tensor-device"]], "torch.Tensor.conj_physical_": [[211, "torch-tensor-conj-physical"]], "torch.Tensor.cuda": [[226, "torch-tensor-cuda"]], "torch.Tensor.count_nonzero": [[221, "torch-tensor-count-nonzero"]], "torch.Tensor.diagflat": [[243, "torch-tensor-diagflat"]], "torch.Tensor.clamp": [[202, "torch-tensor-clamp"]], "torch.Tensor.clip": [[204, "torch-tensor-clip"]], "torch.Tensor.chunk": [[201, "torch-tensor-chunk"]], "torch.Tensor.cosh": [[219, "torch-tensor-cosh"]], "torch.Tensor.crow_indices": [[225, "torch-tensor-crow-indices"]], "torch.Tensor.contiguous": [[212, "torch-tensor-contiguous"]], "torch.Tensor.cholesky_inverse": [[199, "torch-tensor-cholesky-inverse"]], "torch.Tensor.arcsin_": [[142, "torch-tensor-arcsin"]], "torch.Tensor.addcdiv": [[118, "torch-tensor-addcdiv"]], "POE0001:node-missing-onnx-shape-inference": [[101, "poe0001-node-missing-onnx-shape-inference"]], "torch.Tensor.add": [[114, "torch-tensor-add"]], "torch.Tensor.addbmm": [[116, "torch-tensor-addbmm"]], "torch.Tensor.arcsinh_": [[144, "torch-tensor-arcsinh"]], "FXE0015:fx-node-insert-type-promotion": [[100, "fxe0015-fx-node-insert-type-promotion"]], "FXE0014:find-opschema-matched-symbolic-function": [[99, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.acos": [[110, "torch-tensor-acos"]], "torch.Tensor.absolute_": [[109, "torch-tensor-absolute"]], "torch.Tensor.addcdiv_": [[119, "torch-tensor-addcdiv"]], "FXE0013:op-level-debugging": [[98, "fxe0013-op-level-debugging"]], "POE0004:operator-supported-in-newer-opset-version": [[104, "poe0004-operator-supported-in-newer-opset-version"]], "torch.Tensor.adjoint": [[128, "torch-tensor-adjoint"]], "torch.Tensor.addcmul_": [[121, "torch-tensor-addcmul"]], "torch.Tensor.abs": [[106, "torch-tensor-abs"]], "torch.Tensor.addbmm_": [[117, "torch-tensor-addbmm"]], "torch.Tensor.apply_": [[136, "torch-tensor-apply"]], "torch.Tensor.arccosh": [[139, "torch-tensor-arccosh"]], "torch.Tensor.addr": [[126, "torch-tensor-addr"]], "torch.Tensor.angle": [[134, "torch-tensor-angle"]], "torch.Tensor.arcsinh": [[143, "torch-tensor-arcsinh"]], "POE0002:missing-custom-symbolic-function": [[102, "poe0002-missing-custom-symbolic-function"]], "torch.Tensor.acos_": [[111, "torch-tensor-acos"]], "torch.Tensor.absolute": [[108, "torch-tensor-absolute"]], "torch.Tensor.aminmax": [[133, "torch-tensor-aminmax"]], "torch.Tensor.arccosh_": [[140, "torch-tensor-arccosh"]], "torch.Tensor.addmm_": [[123, "torch-tensor-addmm"]], "torch.Tensor.allclose": [[130, "torch-tensor-allclose"]], "torch.Tensor.arcsin": [[141, "torch-tensor-arcsin"]], "torch.Tensor.amax": [[131, "torch-tensor-amax"]], "Generator": [[105, "generator"]], "torch.Tensor.abs_": [[107, "torch-tensor-abs"]], "torch.Tensor.arccos_": [[138, "torch-tensor-arccos"]], "torch.Tensor.all": [[129, "torch-tensor-all"]], "torch.Tensor.addmv": [[124, "torch-tensor-addmv"]], "torch.Tensor.acosh_": [[113, "torch-tensor-acosh"]], "torch.Tensor.any": [[135, "torch-tensor-any"]], "torch.Tensor.arctan": [[145, "torch-tensor-arctan"]], "torch.Tensor.addcmul": [[120, "torch-tensor-addcmul"]], "torch.Tensor.addr_": [[127, "torch-tensor-addr"]], "torch.Tensor.amin": [[132, "torch-tensor-amin"]], "POE0003:missing-standard-symbolic-function": [[103, "poe0003-missing-standard-symbolic-function"]], "torch.Tensor.acosh": [[112, "torch-tensor-acosh"]], "torch.Tensor.addmv_": [[125, "torch-tensor-addmv"]], "torch.Tensor.add_": [[115, "torch-tensor-add"]], "torch.Tensor.addmm": [[122, "torch-tensor-addmm"]], "torch.Tensor.arccos": [[137, "torch-tensor-arccos"]], "torch.Tensor.arctan2": [[146, "torch-tensor-arctan2"]], "torch.Tensor.cdouble": [[192, "torch-tensor-cdouble"]], "torch.Tensor.arctanh_": [[150, "torch-tensor-arctanh"]], "torch.Tensor.broadcast_to": [[188, "torch-tensor-broadcast-to"]], "torch.Tensor.asinh": [[159, "torch-tensor-asinh"]], "torch.Tensor.atanh_": [[166, "torch-tensor-atanh"]], "torch.Tensor.bincount": [[173, "torch-tensor-bincount"]], "torch.Tensor.bitwise_right_shift": [[182, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.arctan_": [[148, "torch-tensor-arctan"]], "torch.Tensor.asin": [[157, "torch-tensor-asin"]], "torch.Tensor.atan2_": [[163, "torch-tensor-atan2"]], "torch.Tensor.bitwise_not": [[178, "torch-tensor-bitwise-not"]], "torch.Tensor.arctan2_": [[147, "torch-tensor-arctan2"]], "torch.Tensor.bitwise_or": [[180, "torch-tensor-bitwise-or"]], "torch.Tensor.argwhere": [[154, "torch-tensor-argwhere"]], "torch.Tensor.ccol_indices": [[191, "torch-tensor-ccol-indices"]], "torch.Tensor.asin_": [[158, "torch-tensor-asin"]], "torch.Tensor.atanh": [[165, "torch-tensor-atanh"]], "torch.Tensor.as_subclass": [[156, "torch-tensor-as-subclass"]], "torch.Tensor.bool": [[187, "torch-tensor-bool"]], "torch.Tensor.atan_": [[164, "torch-tensor-atan"]], "torch.Tensor.bitwise_left_shift": [[176, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.as_strided": [[155, "torch-tensor-as-strided"]], "torch.Tensor.argmin": [[152, "torch-tensor-argmin"]], "torch.Tensor.asinh_": [[160, "torch-tensor-asinh"]], "torch.Tensor.bitwise_xor": [[184, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_right_shift_": [[183, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.atan": [[161, "torch-tensor-atan"]], "torch.Tensor.argmax": [[151, "torch-tensor-argmax"]], "torch.Tensor.arctanh": [[149, "torch-tensor-arctanh"]], "torch.Tensor.baddbmm_": [[169, "torch-tensor-baddbmm"]], "torch.Tensor.bfloat16": [[172, "torch-tensor-bfloat16"]], "torch.Tensor.cfloat": [[195, "torch-tensor-cfloat"]], "torch.Tensor.cauchy_": [[190, "torch-tensor-cauchy"]], "torch.Tensor.argsort": [[153, "torch-tensor-argsort"]], "torch.Tensor.baddbmm": [[168, "torch-tensor-baddbmm"]], "torch.Tensor.bernoulli_": [[171, "torch-tensor-bernoulli"]], "torch.Tensor.bitwise_and": [[174, "torch-tensor-bitwise-and"]], "torch.Tensor.ceil": [[193, "torch-tensor-ceil"]], "torch.Tensor.bernoulli": [[170, "torch-tensor-bernoulli"]], "torch.Tensor.byte": [[189, "torch-tensor-byte"]], "torch.Tensor.bitwise_or_": [[181, "torch-tensor-bitwise-or"]], "torch.Tensor.bitwise_and_": [[175, "torch-tensor-bitwise-and"]], "torch.Tensor.bitwise_left_shift_": [[177, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.ceil_": [[194, "torch-tensor-ceil"]], "torch.Tensor.atan2": [[162, "torch-tensor-atan2"]], "torch.Tensor.backward": [[167, "torch-tensor-backward"]], "torch.Tensor.bitwise_not_": [[179, "torch-tensor-bitwise-not"]], "torch.Tensor.bmm": [[186, "torch-tensor-bmm"]], "torch.Tensor.bitwise_xor_": [[185, "torch-tensor-bitwise-xor"]], "torch.Tensor.digamma_": [[248, "torch-tensor-digamma"]], "torch.Tensor.flipud": [[282, "torch-tensor-flipud"]], "torch.Tensor.floor_divide_": [[289, "torch-tensor-floor-divide"]], "torch.Tensor.erfc": [[264, "torch-tensor-erfc"]], "torch.Tensor.fmod": [[292, "torch-tensor-fmod"]], "torch.Tensor.fmin": [[291, "torch-tensor-fmin"]], "torch.Tensor.diff": [[246, "torch-tensor-diff"]], "torch.Tensor.fix": [[277, "torch-tensor-fix"]], "torch.Tensor.erfinv": [[266, "torch-tensor-erfinv"]], "torch.Tensor.eq": [[259, "torch-tensor-eq"]], "torch.Tensor.expm1_": [[273, "torch-tensor-expm1"]], "torch.Tensor.digamma": [[247, "torch-tensor-digamma"]], "torch.Tensor.exponential_": [[274, "torch-tensor-exponential"]], "torch.Tensor.float_power": [[284, "torch-tensor-float-power"]], "torch.Tensor.dot": [[255, "torch-tensor-dot"]], "torch.Tensor.equal": [[261, "torch-tensor-equal"]], "torch.Tensor.flatten": [[279, "torch-tensor-flatten"]], "torch.Tensor.float": [[283, "torch-tensor-float"]], "torch.Tensor.floor": [[286, "torch-tensor-floor"]], "torch.Tensor.float_power_": [[285, "torch-tensor-float-power"]], "torch.Tensor.erf": [[262, "torch-tensor-erf"]], "torch.Tensor.expand": [[270, "torch-tensor-expand"]], "torch.Tensor.divide": [[253, "torch-tensor-divide"]], "torch.Tensor.erf_": [[263, "torch-tensor-erf"]], "torch.Tensor.exp": [[268, "torch-tensor-exp"]], "torch.Tensor.element_size": [[258, "torch-tensor-element-size"]], "torch.Tensor.dsplit": [[257, "torch-tensor-dsplit"]], "torch.Tensor.floor_": [[287, "torch-tensor-floor"]], "torch.Tensor.floor_divide": [[288, "torch-tensor-floor-divide"]], "torch.Tensor.div": [[251, "torch-tensor-div"]], "torch.Tensor.fill_": [[275, "torch-tensor-fill"]], "torch.Tensor.div_": [[252, "torch-tensor-div"]], "torch.Tensor.fmax": [[290, "torch-tensor-fmax"]], "torch.Tensor.diagonal_scatter": [[245, "torch-tensor-diagonal-scatter"]], "torch.Tensor.fill_diagonal_": [[276, "torch-tensor-fill-diagonal"]], "torch.Tensor.erfc_": [[265, "torch-tensor-erfc"]], "torch.Tensor.divide_": [[254, "torch-tensor-divide"]], "torch.Tensor.dist": [[250, "torch-tensor-dist"]], "torch.Tensor.expm1": [[272, "torch-tensor-expm1"]], "torch.Tensor.exp_": [[269, "torch-tensor-exp"]], "torch.Tensor.double": [[256, "torch-tensor-double"]], "torch.Tensor.fix_": [[278, "torch-tensor-fix"]], "torch.Tensor.expand_as": [[271, "torch-tensor-expand-as"]], "torch.Tensor.eq_": [[260, "torch-tensor-eq"]], "torch.Tensor.dim": [[249, "torch-tensor-dim"]], "torch.Tensor.fmod_": [[293, "torch-tensor-fmod"]], "torch.Tensor.erfinv_": [[267, "torch-tensor-erfinv"]], "torch.Tensor.fliplr": [[281, "torch-tensor-fliplr"]], "torch.Tensor.flip": [[280, "torch-tensor-flip"]], "torch.Tensor.geqrf": [[303, "torch-tensor-geqrf"]], "torch.Tensor.get_device": [[305, "torch-tensor-get-device"]], "torch.Tensor.imag": [[327, "torch-tensor-imag"]], "torch.Tensor.index_copy_": [[331, "torch-tensor-index-copy"]], "torch.Tensor.histogram": [[317, "torch-tensor-histogram"]], "torch.Tensor.indices": [[339, "torch-tensor-indices"]], "torch.Tensor.hardshrink": [[314, "torch-tensor-hardshrink"]], "torch.Tensor.grad": [[306, "torch-tensor-grad"]], "torch.Tensor.histc": [[316, "torch-tensor-histc"]], "torch.Tensor.gt": [[311, "torch-tensor-gt"]], "torch.Tensor.index_put_": [[335, "torch-tensor-index-put"]], "torch.Tensor.index_select": [[338, "torch-tensor-index-select"]], "torch.Tensor.ge": [[300, "torch-tensor-ge"]], "torch.Tensor.hypot": [[319, "torch-tensor-hypot"]], "torch.Tensor.ge_": [[301, "torch-tensor-ge"]], "torch.Tensor.igamma_": [[324, "torch-tensor-igamma"]], "torch.Tensor.index_put": [[334, "torch-tensor-index-put"]], "torch.Tensor.gt_": [[312, "torch-tensor-gt"]], "torch.Tensor.hsplit": [[318, "torch-tensor-hsplit"]], "torch.Tensor.half": [[313, "torch-tensor-half"]], "torch.Tensor.gcd_": [[299, "torch-tensor-gcd"]], "torch.Tensor.index_fill": [[332, "torch-tensor-index-fill"]], "torch.Tensor.index_fill_": [[333, "torch-tensor-index-fill"]], "torch.Tensor.frac": [[294, "torch-tensor-frac"]], "torch.Tensor.igamma": [[323, "torch-tensor-igamma"]], "torch.Tensor.inner": [[340, "torch-tensor-inner"]], "torch.Tensor.int_repr": [[342, "torch-tensor-int-repr"]], "torch.Tensor.igammac": [[325, "torch-tensor-igammac"]], "torch.Tensor.frexp": [[296, "torch-tensor-frexp"]], "torch.Tensor.greater_": [[308, "torch-tensor-greater"]], "torch.Tensor.greater_equal_": [[310, "torch-tensor-greater-equal"]], "torch.Tensor.heaviside": [[315, "torch-tensor-heaviside"]], "torch.Tensor.int": [[341, "torch-tensor-int"]], "torch.Tensor.index_add_": [[329, "torch-tensor-index-add"]], "torch.Tensor.ger": [[304, "torch-tensor-ger"]], "torch.Tensor.greater_equal": [[309, "torch-tensor-greater-equal"]], "torch.Tensor.index_copy": [[330, "torch-tensor-index-copy"]], "torch.Tensor.frac_": [[295, "torch-tensor-frac"]], "torch.Tensor.greater": [[307, "torch-tensor-greater"]], "torch.Tensor.gcd": [[298, "torch-tensor-gcd"]], "torch.Tensor.i0_": [[322, "torch-tensor-i0"]], "torch.Tensor.geometric_": [[302, "torch-tensor-geometric"]], "torch.Tensor.index_add": [[328, "torch-tensor-index-add"]], "torch.Tensor.gather": [[297, "torch-tensor-gather"]], "torch.Tensor.index_reduce": [[336, "torch-tensor-index-reduce"]], "torch.Tensor.igammac_": [[326, "torch-tensor-igammac"]], "torch.Tensor.i0": [[321, "torch-tensor-i0"]], "torch.Tensor.hypot_": [[320, "torch-tensor-hypot"]], "torch.Tensor.index_reduce_": [[337, "torch-tensor-index-reduce"]], "torch.Tensor.le": [[375, "torch-tensor-le"]], "torch.Tensor.less_": [[380, "torch-tensor-less"]], "torch.Tensor.log1p_": [[389, "torch-tensor-log1p"]], "torch.Tensor.item": [[368, "torch-tensor-item"]], "torch.Tensor.is_complex": [[345, "torch-tensor-is-complex"]], "torch.Tensor.is_sparse": [[358, "torch-tensor-is-sparse"]], "torch.Tensor.is_coalesced": [[344, "torch-tensor-is-coalesced"]], "torch.Tensor.lerp_": [[378, "torch-tensor-lerp"]], "torch.Tensor.isclose": [[360, "torch-tensor-isclose"]], "torch.Tensor.less_equal": [[381, "torch-tensor-less-equal"]], "torch.Tensor.less": [[379, "torch-tensor-less"]], "torch.Tensor.lgamma": [[383, "torch-tensor-lgamma"]], "torch.Tensor.log1p": [[388, "torch-tensor-log1p"]], "torch.Tensor.less_equal_": [[382, "torch-tensor-less-equal"]], "torch.Tensor.log2_": [[391, "torch-tensor-log2"]], "torch.Tensor.log10_": [[387, "torch-tensor-log10"]], "torch.Tensor.is_set_to": [[355, "torch-tensor-is-set-to"]], "torch.Tensor.isfinite": [[361, "torch-tensor-isfinite"]], "torch.Tensor.is_inference": [[350, "torch-tensor-is-inference"]], "torch.Tensor.inverse": [[343, "torch-tensor-inverse"]], "torch.Tensor.log2": [[390, "torch-tensor-log2"]], "torch.Tensor.lcm": [[371, "torch-tensor-lcm"]], "torch.Tensor.is_sparse_csr": [[359, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_floating_point": [[349, "torch-tensor-is-floating-point"]], "torch.Tensor.itemsize": [[369, "torch-tensor-itemsize"]], "torch.Tensor.isnan": [[363, "torch-tensor-isnan"]], "torch.Tensor.lgamma_": [[384, "torch-tensor-lgamma"]], "torch.Tensor.is_conj": [[346, "torch-tensor-is-conj"]], "torch.Tensor.is_cuda": [[348, "torch-tensor-is-cuda"]], "torch.Tensor.isreal": [[366, "torch-tensor-isreal"]], "torch.Tensor.lcm_": [[372, "torch-tensor-lcm"]], "torch.Tensor.isposinf": [[365, "torch-tensor-isposinf"]], "torch.Tensor.istft": [[367, "torch-tensor-istft"]], "torch.Tensor.is_quantized": [[354, "torch-tensor-is-quantized"]], "torch.Tensor.is_shared": [[356, "torch-tensor-is-shared"]], "torch.Tensor.is_contiguous": [[347, "torch-tensor-is-contiguous"]], "torch.Tensor.log": [[385, "torch-tensor-log"]], "torch.Tensor.isneginf": [[364, "torch-tensor-isneginf"]], "torch.Tensor.log10": [[386, "torch-tensor-log10"]], "torch.Tensor.is_meta": [[352, "torch-tensor-is-meta"]], "torch.Tensor.is_pinned": [[353, "torch-tensor-is-pinned"]], "torch.Tensor.lerp": [[377, "torch-tensor-lerp"]], "torch.Tensor.isinf": [[362, "torch-tensor-isinf"]], "torch.Tensor.is_leaf": [[351, "torch-tensor-is-leaf"]], "torch.Tensor.le_": [[376, "torch-tensor-le"]], "torch.Tensor.is_signed": [[357, "torch-tensor-is-signed"]], "torch.Tensor.kthvalue": [[370, "torch-tensor-kthvalue"]], "torch.Tensor.ldexp": [[373, "torch-tensor-ldexp"]], "torch.Tensor.ldexp_": [[374, "torch-tensor-ldexp"]], "torch.stft": [[1826, "torch-stft"]], "torch.sparse_csc_tensor": [[1816, "torch-sparse-csc-tensor"]], "torch.tensor_split": [[1845, "torch-tensor-split"]], "torch.trace": [[1849, "torch-trace"]], "torch.squeeze": [[1821, "torch-squeeze"]], "torch.trunc": [[1859, "torch-trunc"]], "torch.tensor": [[1844, "torch-tensor"]], "torch.swapaxes": [[1832, "torch-swapaxes"]], "torch.sym_int": [[1835, "torch-sym-int"]], "torch.sym_min": [[1837, "torch-sym-min"]], "torch.tile": [[1847, "torch-tile"]], "torch.triu": [[1856, "torch-triu"]], "torch.tril": [[1854, "torch-tril"]], "torch.tensordot": [[1846, "torch-tensordot"]], "torch.take": [[1840, "torch-take"]], "torch.stack": [[1823, "torch-stack"]], "torch.subtract": [[1828, "torch-subtract"]], "torch.unflatten": [[1861, "torch-unflatten"]], "torch.sparse_bsr_tensor": [[1813, "torch-sparse-bsr-tensor"]], "torch.topk": [[1848, "torch-topk"]], "torch.sym_float": [[1834, "torch-sym-float"]], "torch.transpose": [[1850, "torch-transpose"]], "torch.trapezoid": [[1851, "torch-trapezoid"]], "torch.sparse_coo_tensor": [[1815, "torch-sparse-coo-tensor"]], "torch.tril_indices": [[1855, "torch-tril-indices"]], "torch.t": [[1839, "torch-t"]], "torch.split": [[1818, "torch-split"]], "torch.sum": [[1829, "torch-sum"]], "torch.sym_max": [[1836, "torch-sym-max"]], "torch.sym_not": [[1838, "torch-sym-not"]], "torch.sparse_compressed_tensor": [[1814, "torch-sparse-compressed-tensor"]], "torch.tan": [[1842, "torch-tan"]], "torch.square": [[1820, "torch-square"]], "torch.swapdims": [[1833, "torch-swapdims"]], "torch.sspaddmm": [[1822, "torch-sspaddmm"]], "torch.sub": [[1827, "torch-sub"]], "torch.triangular_solve": [[1853, "torch-triangular-solve"]], "torch.triu_indices": [[1857, "torch-triu-indices"]], "torch.svd": [[1830, "torch-svd"]], "torch.svd_lowrank": [[1831, "torch-svd-lowrank"]], "torch.trapz": [[1852, "torch-trapz"]], "torch.unbind": [[1860, "torch-unbind"]], "torch.tanh": [[1843, "torch-tanh"]], "torch.true_divide": [[1858, "torch-true-divide"]], "torch.std_mean": [[1825, "torch-std-mean"]], "torch.take_along_dim": [[1841, "torch-take-along-dim"]], "torch.std": [[1824, "torch-std"]], "torch.sparse_csr_tensor": [[1817, "torch-sparse-csr-tensor"]], "torch.sqrt": [[1819, "torch-sqrt"]], "torch.softmax": [[1802, "torch-softmax"]], "torch.sparse.spdiags": [[1810, "torch-sparse-spdiags"]], "torch.set_num_interop_threads": [[1776, "torch-set-num-interop-threads"]], "torch.sparse.addmm": [[1804, "torch-sparse-addmm"]], "torch.sparse.log_softmax": [[1806, "torch-sparse-log-softmax"]], "torch.set_default_tensor_type": [[1771, "torch-set-default-tensor-type"]], "torch.set_warn_always": [[1780, "torch-set-warn-always"]], "torch.set_deterministic_debug_mode": [[1772, "torch-set-deterministic-debug-mode"]], "torch.signal.windows.hamming": [[1791, "torch-signal-windows-hamming"]], "torch.signal.windows.nuttall": [[1794, "torch-signal-windows-nuttall"]], "torch.set_default_device": [[1769, "torch-set-default-device"]], "torch.sort": [[1803, "torch-sort"]], "torch.signal.windows.hann": [[1792, "torch-signal-windows-hann"]], "torch.searchsorted": [[1765, "torch-searchsorted"]], "torch.select": [[1767, "torch-select"]], "torch.sinc": [[1797, "torch-sinc"]], "torch.set_printoptions": [[1778, "torch-set-printoptions"]], "torch.select_scatter": [[1768, "torch-select-scatter"]], "torch.sigmoid": [[1782, "torch-sigmoid"]], "set_grad_enabled": [[1775, "set-grad-enabled"]], "torch.sparse.mm": [[1807, "torch-sparse-mm"]], "torch.signal.windows.general_hamming": [[1790, "torch-signal-windows-general-hamming"]], "torch.set_rng_state": [[1779, "torch-set-rng-state"]], "torch.signal.windows.bartlett": [[1784, "torch-signal-windows-bartlett"]], "torch.set_flush_denormal": [[1774, "torch-set-flush-denormal"]], "torch.smm": [[1801, "torch-smm"]], "torch.scatter_reduce": [[1764, "torch-scatter-reduce"]], "torch.sign": [[1783, "torch-sign"]], "torch.set_num_threads": [[1777, "torch-set-num-threads"]], "torch.slogdet": [[1800, "torch-slogdet"]], "torch.seed": [[1766, "torch-seed"]], "torch.signal.windows.gaussian": [[1788, "torch-signal-windows-gaussian"]], "torch.sparse.sum": [[1811, "torch-sparse-sum"]], "torch.sinh": [[1798, "torch-sinh"]], "torch.sparse.softmax": [[1809, "torch-sparse-softmax"]], "torch.sgn": [[1781, "torch-sgn"]], "torch.slice_scatter": [[1799, "torch-slice-scatter"]], "torch.signal.windows.cosine": [[1786, "torch-signal-windows-cosine"]], "torch.signal.windows.general_cosine": [[1789, "torch-signal-windows-general-cosine"]], "torch.signal.windows.kaiser": [[1793, "torch-signal-windows-kaiser"]], "torch.sin": [[1796, "torch-sin"]], "check_sparse_tensor_invariants": [[1805, "check-sparse-tensor-invariants"]], "torch.set_float32_matmul_precision": [[1773, "torch-set-float32-matmul-precision"]], "torch.sparse.sampled_addmm": [[1808, "torch-sparse-sampled-addmm"]], "torch.sparse_bsc_tensor": [[1812, "torch-sparse-bsc-tensor"]], "torch.signal.windows.blackman": [[1785, "torch-signal-windows-blackman"]], "torch.signbit": [[1795, "torch-signbit"]], "torch.set_default_dtype": [[1770, "torch-set-default-dtype"]], "torch.signal.windows.exponential": [[1787, "torch-signal-windows-exponential"]], "torch.reciprocal": [[1748, "torch-reciprocal"]], "torch.quantize_per_tensor": [[1732, "torch-quantize-per-tensor"]], "torch.resolve_neg": [[1754, "torch-resolve-neg"]], "SobolEngine": [[1736, "sobolengine"]], "torch.randn": [[1742, "torch-randn"]], "torch.quantized_max_pool2d": [[1735, "torch-quantized-max-pool2d"]], "torch.reshape": [[1752, "torch-reshape"]], "torch.renorm": [[1750, "torch-renorm"]], "torch.resolve_conj": [[1753, "torch-resolve-conj"]], "torch.randint_like": [[1741, "torch-randint-like"]], "torch.quantile": [[1730, "torch-quantile"]], "torch.ormqr": [[1717, "torch-ormqr"]], "torch.promote_types": [[1728, "torch-promote-types"]], "torch.roll": [[1756, "torch-roll"]], "torch.rad2deg": [[1737, "torch-rad2deg"]], "torch.remainder": [[1749, "torch-remainder"]], "torch.rand_like": [[1739, "torch-rand-like"]], "torch.range": [[1745, "torch-range"]], "torch.rsqrt": [[1760, "torch-rsqrt"]], "torch.pca_lowrank": [[1719, "torch-pca-lowrank"]], "StepLR": [[1715, "steplr"]], "torch.pinverse": [[1721, "torch-pinverse"]], "torch.repeat_interleave": [[1751, "torch-repeat-interleave"]], "torch.polygamma": [[1724, "torch-polygamma"]], "torch.positive": [[1725, "torch-positive"]], "torch.row_stack": [[1759, "torch-row-stack"]], "torch.poisson": [[1722, "torch-poisson"]], "torch.qr": [[1729, "torch-qr"]], "torch.save": [[1761, "torch-save"]], "torch.round": [[1758, "torch-round"]], "torch.orgqr": [[1716, "torch-orgqr"]], "torch.randn_like": [[1743, "torch-randn-like"]], "torch.scatter_add": [[1763, "torch-scatter-add"]], "torch.polar": [[1723, "torch-polar"]], "torch.result_type": [[1755, "torch-result-type"]], "torch.outer": [[1718, "torch-outer"]], "torch.real": [[1747, "torch-real"]], "torch.ravel": [[1746, "torch-ravel"]], "torch.quantized_max_pool1d": [[1734, "torch-quantized-max-pool1d"]], "torch.scatter": [[1762, "torch-scatter"]], "torch.quantize_per_channel": [[1731, "torch-quantize-per-channel"]], "torch.randperm": [[1744, "torch-randperm"]], "torch.randint": [[1740, "torch-randint"]], "torch.rot90": [[1757, "torch-rot90"]], "torch.quantized_batch_norm": [[1733, "torch-quantized-batch-norm"]], "torch.prod": [[1727, "torch-prod"]], "torch.permute": [[1720, "torch-permute"]], "torch.rand": [[1738, "torch-rand"]], "torch.pow": [[1726, "torch-pow"]], "PolynomialLR": [[1712, "polynomiallr"]], "MultiplicativeLR": [[1710, "multiplicativelr"]], "torch.ones_like": [[1676, "torch-ones-like"]], "torch.normal": [[1672, "torch-normal"]], "ASGD": [[1683, "asgd"]], "JitScalarType": [[1680, "jitscalartype"]], "torch.optim.Optimizer.add_param_group": [[1691, "torch-optim-optimizer-add-param-group"]], "LambdaLR": [[1707, "lambdalr"]], "VerificationOptions": [[1682, "verificationoptions"]], "ConstantLR": [[1702, "constantlr"]], "torch.not_equal": [[1673, "torch-not-equal"]], "torch.nonzero": [[1670, "torch-nonzero"]], "SparseAdam": [[1700, "sparseadam"]], "AdamW": [[1687, "adamw"]], "NAdam": [[1690, "nadam"]], "torch.numel": [[1674, "torch-numel"]], "ReduceLROnPlateau": [[1713, "reducelronplateau"]], "ExportOutput": [[1678, "exportoutput"]], "RAdam": [[1696, "radam"]], "ExportOutputSerializer": [[1679, "exportoutputserializer"]], "Adam": [[1686, "adam"]], "CyclicLR": [[1705, "cycliclr"]], "torch.optim.Optimizer.load_state_dict": [[1692, "torch-optim-optimizer-load-state-dict"]], "torch.ones": [[1675, "torch-ones"]], "OneCycleLR": [[1711, "onecyclelr"]], "no_grad": [[1669, "no-grad"]], "torch.norm": [[1671, "torch-norm"]], "GraphInfo": [[1681, "graphinfo"]], "Adadelta": [[1684, "adadelta"]], "SequentialLR": [[1714, "sequentiallr"]], "torch.nn.utils.vector_to_parameters": [[1667, "torch-nn-utils-vector-to-parameters"]], "CosineAnnealingWarmRestarts": [[1704, "cosineannealingwarmrestarts"]], "torch.optim.Optimizer.state_dict": [[1693, "torch-optim-optimizer-state-dict"]], "torch.optim.Optimizer.step": [[1694, "torch-optim-optimizer-step"]], "SGD": [[1699, "sgd"]], "RMSprop": [[1697, "rmsprop"]], "torch.optim.Optimizer.zero_grad": [[1695, "torch-optim-optimizer-zero-grad"]], "MultiStepLR": [[1709, "multisteplr"]], "CosineAnnealingLR": [[1703, "cosineannealinglr"]], "ChainedScheduler": [[1701, "chainedscheduler"]], "Adagrad": [[1685, "adagrad"]], "torch.nn.utils.stateless.functional_call": [[1666, "torch-nn-utils-stateless-functional-call"]], "LBFGS": [[1689, "lbfgs"]], "ExportOptions": [[1677, "exportoptions"]], "LinearLR": [[1708, "linearlr"]], "Rprop": [[1698, "rprop"]], "torch.nn.utils.weight_norm": [[1668, "torch-nn-utils-weight-norm"]], "ExponentialLR": [[1706, "exponentiallr"]], "Adamax": [[1688, "adamax"]], "torch.nn.functional.max_pool2d": [[1568, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.multi_margin_loss": [[1575, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.mse_loss": [[1574, "torch-nn-functional-mse-loss"]], "torch.nn.functional.softmin": [[1600, "torch-nn-functional-softmin"]], "torch.nn.functional.upsample_nearest": [[1614, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.tanh": [[1604, "torch-nn-functional-tanh"]], "torch.nn.functional.unfold": [[1611, "torch-nn-functional-unfold"]], "torch.nn.functional.nll_loss": [[1578, "torch-nn-functional-nll-loss"]], "torch.nn.functional.selu": [[1594, "torch-nn-functional-selu"]], "torch.nn.functional.pdist": [[1583, "torch-nn-functional-pdist"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1577, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.softplus": [[1601, "torch-nn-functional-softplus"]], "torch.nn.functional.relu6": [[1589, "torch-nn-functional-relu6"]], "torch.nn.functional.pairwise_distance": [[1582, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.pad": [[1581, "torch-nn-functional-pad"]], "torch.nn.functional.pixel_unshuffle": [[1585, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.mish": [[1573, "torch-nn-functional-mish"]], "torch.nn.functional.one_hot": [[1580, "torch-nn-functional-one-hot"]], "torch.nn.functional.softsign": [[1603, "torch-nn-functional-softsign"]], "torch.nn.functional.pixel_shuffle": [[1584, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.normalize": [[1579, "torch-nn-functional-normalize"]], "torch.nn.functional.scaled_dot_product_attention": [[1593, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1610, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.rrelu": [[1591, "torch-nn-functional-rrelu"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1608, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.functional.upsample": [[1612, "torch-nn-functional-upsample"]], "torch.nn.functional.multilabel_margin_loss": [[1576, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.threshold": [[1606, "torch-nn-functional-threshold"]], "torch.nn.functional.upsample_bilinear": [[1613, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.max_unpool3d": [[1572, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.poisson_nll_loss": [[1586, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.rrelu_": [[1592, "torch-nn-functional-rrelu"]], "torch.nn.functional.sigmoid": [[1595, "torch-nn-functional-sigmoid"]], "torch.nn.functional.tanhshrink": [[1605, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.softshrink": [[1602, "torch-nn-functional-softshrink"]], "torch.nn.functional.relu_": [[1590, "torch-nn-functional-relu"]], "torch.nn.modules.module.register_module_backward_hook": [[1616, "torch-nn-modules-module-register-module-backward-hook"]], "torch.nn.functional.max_pool3d": [[1569, "torch-nn-functional-max-pool3d"]], "LazyModuleMixin": [[1615, "lazymodulemixin"]], "torch.nn.functional.max_unpool1d": [[1570, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.silu": [[1596, "torch-nn-functional-silu"]], "torch.nn.functional.smooth_l1_loss": [[1597, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.triplet_margin_loss": [[1609, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.softmax": [[1599, "torch-nn-functional-softmax"]], "torch.nn.functional.threshold_": [[1607, "torch-nn-functional-threshold"]], "torch.nn.functional.soft_margin_loss": [[1598, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.prelu": [[1587, "torch-nn-functional-prelu"]], "torch.nn.functional.max_unpool2d": [[1571, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.relu": [[1588, "torch-nn-functional-relu"]], "torch.nn.utils.clip_grad_value_": [[1629, "torch-nn-utils-clip-grad-value"]], "torch.nn.modules.module.register_module_forward_hook": [[1618, "torch-nn-modules-module-register-module-forward-hook"]], "DistributedDataParallel": [[1624, "distributeddataparallel"], [1909, "distributeddataparallel"]], "torch.nn.utils.rnn.pad_sequence": [[1661, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.parametrize.cached": [[1634, "torch-nn-utils-parametrize-cached"]], "LnStructured": [[1642, "lnstructured"]], "torch.nn.utils.remove_weight_norm": [[1656, "torch-nn-utils-remove-weight-norm"]], "RandomUnstructured": [[1645, "randomunstructured"]], "torch.nn.utils.parametrize.register_parametrization": [[1636, "torch-nn-utils-parametrize-register-parametrization"]], "torch.nn.utils.prune.random_structured": [[1652, "torch-nn-utils-prune-random-structured"]], "RandomStructured": [[1644, "randomstructured"]], "L1Unstructured": [[1641, "l1unstructured"]], "UninitializedParameter": [[1627, "uninitializedparameter"]], "torch.nn.utils.rnn.unpad_sequence": [[1663, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.skip_init": [[1664, "torch-nn-utils-skip-init"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1623, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.utils.prune.remove": [[1654, "torch-nn-utils-prune-remove"]], "torch.nn.utils.prune.random_unstructured": [[1653, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1617, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.utils.remove_spectral_norm": [[1655, "torch-nn-utils-remove-spectral-norm"]], "torch.nn.utils.prune.ln_structured": [[1651, "torch-nn-utils-prune-ln-structured"]], "PackedSequence": [[1657, "packedsequence"]], "Parameter": [[1625, "parameter"]], "torch.nn.utils.parametrizations.spectral_norm": [[1632, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1621, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.utils.clip_grad_norm_": [[1628, "torch-nn-utils-clip-grad-norm"]], "torch.nn.utils.prune.identity": [[1648, "torch-nn-utils-prune-identity"]], "torch.nn.utils.parameters_to_vector": [[1630, "torch-nn-utils-parameters-to-vector"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1637, "torch-nn-utils-parametrize-remove-parametrizations"]], "UninitializedBuffer": [[1626, "uninitializedbuffer"]], "torch.nn.utils.prune.l1_unstructured": [[1650, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.spectral_norm": [[1665, "torch-nn-utils-spectral-norm"]], "BasePruningMethod": [[1638, "basepruningmethod"]], "PruningContainer": [[1643, "pruningcontainer"]], "torch.nn.utils.prune.global_unstructured": [[1647, "torch-nn-utils-prune-global-unstructured"]], "ParametrizationList": [[1633, "parametrizationlist"]], "torch.nn.utils.prune.is_pruned": [[1649, "torch-nn-utils-prune-is-pruned"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1658, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1619, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.utils.parametrize.is_parametrized": [[1635, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.rnn.pack_sequence": [[1659, "torch-nn-utils-rnn-pack-sequence"]], "torch.nn.utils.rnn.unpack_sequence": [[1662, "torch-nn-utils-rnn-unpack-sequence"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1620, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1622, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1660, "torch-nn-utils-rnn-pad-packed-sequence"]], "Identity": [[1640, "identity"], [1406, "identity"]], "CustomFromMask": [[1639, "customfrommask"]], "torch.nn.utils.parametrizations.orthogonal": [[1631, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.prune.custom_from_mask": [[1646, "torch-nn-utils-prune-custom-from-mask"]], "torch.nn.functional.leaky_relu": [[1558, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.huber_loss": [[1552, "torch-nn-functional-huber-loss"]], "torch.nn.functional.grid_sample": [[1543, "torch-nn-functional-grid-sample"]], "torch.nn.functional.hardswish": [[1548, "torch-nn-functional-hardswish"]], "torch.nn.functional.margin_ranking_loss": [[1566, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.linear": [[1560, "torch-nn-functional-linear"]], "torch.nn.functional.conv2d": [[1519, "torch-nn-functional-conv2d"]], "torch.nn.functional.fold": [[1537, "torch-nn-functional-fold"]], "torch.nn.functional.embedding_bag": [[1535, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.gelu": [[1541, "torch-nn-functional-gelu"]], "torch.nn.functional.conv3d": [[1520, "torch-nn-functional-conv3d"]], "torch.nn.functional.dropout2d": [[1530, "torch-nn-functional-dropout2d"]], "torch.nn.functional.gaussian_nll_loss": [[1540, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.kl_div": [[1555, "torch-nn-functional-kl-div"]], "torch.nn.functional.conv_transpose2d": [[1522, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.hardshrink": [[1546, "torch-nn-functional-hardshrink"]], "torch.nn.functional.logsigmoid": [[1563, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.elu_": [[1533, "torch-nn-functional-elu"]], "torch.nn.functional.dropout1d": [[1529, "torch-nn-functional-dropout1d"]], "torch.nn.functional.cross_entropy": [[1526, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.conv_transpose1d": [[1521, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.feature_alpha_dropout": [[1536, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.layer_norm": [[1557, "torch-nn-functional-layer-norm"]], "torch.nn.functional.dropout3d": [[1531, "torch-nn-functional-dropout3d"]], "torch.nn.functional.hardtanh_": [[1550, "torch-nn-functional-hardtanh"]], "torch.nn.functional.glu": [[1542, "torch-nn-functional-glu"]], "torch.nn.functional.log_softmax": [[1562, "torch-nn-functional-log-softmax"]], "torch.nn.functional.group_norm": [[1544, "torch-nn-functional-group-norm"]], "torch.nn.functional.local_response_norm": [[1561, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.embedding": [[1534, "torch-nn-functional-embedding"]], "torch.nn.functional.lp_pool2d": [[1565, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.fractional_max_pool2d": [[1538, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.gumbel_softmax": [[1545, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.instance_norm": [[1553, "torch-nn-functional-instance-norm"]], "torch.nn.functional.hardsigmoid": [[1547, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.lp_pool1d": [[1564, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.ctc_loss": [[1527, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.hardtanh": [[1549, "torch-nn-functional-hardtanh"]], "torch.nn.functional.max_pool1d": [[1567, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.cosine_embedding_loss": [[1524, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.conv_transpose3d": [[1523, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.fractional_max_pool3d": [[1539, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.dropout": [[1528, "torch-nn-functional-dropout"]], "torch.nn.functional.leaky_relu_": [[1559, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.cosine_similarity": [[1525, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.interpolate": [[1554, "torch-nn-functional-interpolate"]], "torch.nn.functional.l1_loss": [[1556, "torch-nn-functional-l1-loss"]], "torch.nn.functional.hinge_embedding_loss": [[1551, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.elu": [[1532, "torch-nn-functional-elu"]], "Softmin": [[1479, "softmin"]], "torch.nn.functional.celu": [[1517, "torch-nn-functional-celu"]], "ZeroPad3d": [[1501, "zeropad3d"]], "ReplicationPad3d": [[1470, "replicationpad3d"]], "Tanhshrink": [[1485, "tanhshrink"]], "SELU": [[1471, "selu"]], "ZeroPad1d": [[1499, "zeropad1d"]], "SyncBatchNorm": [[1483, "syncbatchnorm"]], "UpsamplingBilinear2d": [[1497, "upsamplingbilinear2d"]], "Threshold": [[1486, "threshold"]], "Sequential": [[1472, "sequential"]], "Transformer": [[1487, "transformer"], [28, "transformer"]], "TransformerDecoder": [[1488, "transformerdecoder"]], "TransformerDecoderLayer": [[1489, "transformerdecoderlayer"]], "torch.nn.functional.adaptive_avg_pool2d": [[1503, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.adaptive_max_pool2d": [[1506, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.conv1d": [[1518, "torch-nn-functional-conv1d"]], "TransformerEncoder": [[1490, "transformerencoder"]], "torch.nn.functional.adaptive_max_pool1d": [[1505, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.binary_cross_entropy": [[1515, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.avg_pool1d": [[1510, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.affine_grid": [[1508, "torch-nn-functional-affine-grid"]], "TripletMarginWithDistanceLoss": [[1493, "tripletmarginwithdistanceloss"]], "UpsamplingNearest2d": [[1498, "upsamplingnearest2d"]], "torch.nn.functional.adaptive_avg_pool3d": [[1504, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.bilinear": [[1514, "torch-nn-functional-bilinear"]], "Softsign": [[1482, "softsign"]], "TripletMarginLoss": [[1492, "tripletmarginloss"]], "Unflatten": [[1494, "unflatten"]], "Softmax2d": [[1478, "softmax2d"]], "Softshrink": [[1481, "softshrink"]], "torch.nn.functional.batch_norm": [[1513, "torch-nn-functional-batch-norm"]], "torch.nn.functional.avg_pool2d": [[1511, "torch-nn-functional-avg-pool2d"]], "ZeroPad2d": [[1500, "zeropad2d"]], "Softplus": [[1480, "softplus"]], "SoftMarginLoss": [[1476, "softmarginloss"]], "Sigmoid": [[1474, "sigmoid"], [772, "sigmoid"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1516, "torch-nn-functional-binary-cross-entropy-with-logits"]], "Upsample": [[1496, "upsample"]], "TransformerEncoderLayer": [[1491, "transformerencoderlayer"]], "torch.nn.functional.adaptive_max_pool3d": [[1507, "torch-nn-functional-adaptive-max-pool3d"]], "Unfold": [[1495, "unfold"]], "torch.nn.functional.avg_pool3d": [[1512, "torch-nn-functional-avg-pool3d"]], "Tanh": [[1484, "tanh"]], "torch.nn.functional.adaptive_avg_pool1d": [[1502, "torch-nn-functional-adaptive-avg-pool1d"]], "SmoothL1Loss": [[1475, "smoothl1loss"]], "SiLU": [[1473, "silu"]], "torch.nn.functional.alpha_dropout": [[1509, "torch-nn-functional-alpha-dropout"]], "Softmax": [[1477, "softmax"]], "torch.func API Reference": [[67, "module-torch.func"]], "Function Transforms": [[67, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[67, "utilities-for-working-with-torch-nn-modules"]], "FXE0011:no-symbolic-function-for-call-function": [[96, "fxe0011-no-symbolic-function-for-call-function"]], "FullyShardedDataParallel": [[65, "module-torch.distributed.fsdp"]], "torch.fft": [[64, "torch-fft"]], "Fast Fourier Transforms": [[64, "fast-fourier-transforms"]], "Helper Functions": [[64, "helper-functions"]], "FXE0006:atenlib-symbolic-function": [[91, "fxe0006-atenlib-symbolic-function"]], "torch.futures": [[72, "torch-futures"]], "FXE0003:fx-frontend-aotautograd": [[88, "fxe0003-fx-frontend-aotautograd"]], "FXE0010:fx-pass": [[95, "fxe0010-fx-pass"]], "python.control-flow": [[79, "python-control-flow"]], "dynamic_shape_if_guard": [[79, "dynamic-shape-if-guard"], [74, "dynamic-shape-if-guard"], [82, "dynamic-shape-if-guard"]], "list_unpack": [[79, "list-unpack"], [74, "list-unpack"], [80, "list-unpack"]], "static_for_loop": [[79, "static-for-loop"], [74, "static-for-loop"]], "static_if": [[79, "static-if"], [74, "static-if"]], "FXE0008:fx-node-to-onnx": [[93, "fxe0008-fx-node-to-onnx"]], "python.context-manager": [[78, "python-context-manager"]], "null_context_manager": [[78, "null-context-manager"], [74, "null-context-manager"]], "torch.escape-hatch": [[83, "torch-escape-hatch"]], "assume_constant_result": [[83, "assume-constant-result"], [74, "assume-constant-result"]], "DIAGSYS0001:arg-format-too-verbose": [[85, "diagsys0001-arg-format-too-verbose"]], "Customization": [[51, "customization"]], "Launcher": [[51, "launcher"]], "Rendezvous Handler": [[51, "rendezvous-handler"]], "Metric Handler": [[51, "metric-handler"]], "Events Handler": [[51, "events-handler"]], "python.builtin": [[76, "python-builtin"]], "dynamic_shape_round": [[76, "dynamic-shape-round"], [74, "dynamic-shape-round"], [82, "dynamic-shape-round"]], "tensor_setattr": [[76, "tensor-setattr"], [74, "tensor-setattr"]], "type_reflection_method": [[76, "type-reflection-method"], [74, "type-reflection-method"]], "python.assert": [[75, "python-assert"]], "dynamic_shape_assert": [[75, "dynamic-shape-assert"], [74, "dynamic-shape-assert"]], "list_contains": [[75, "list-contains"], [74, "list-contains"], [80, "list-contains"], [82, "list-contains"]], "UX Limitations": [[70, "ux-limitations"]], "General limitations": [[70, "general-limitations"]], "torch.autograd APIs": [[70, "torch-autograd-apis"]], "vmap limitations": [[70, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[70, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[70, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[70, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[70, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[70, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[70, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[70, "randomness"]], "Migrating from functorch to torch.func": [[69, "migrating-from-functorch-to-torch-func"]], "function transforms": [[69, "function-transforms"]], "NN module utilities": [[69, "nn-module-utilities"]], "functorch.make_functional": [[69, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[69, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[69, "functorch-compile"]], "TorchElastic Kubernetes": [[55, "torchelastic-kubernetes"]], "python.closure": [[77, "python-closure"]], "cond_closed_over_variable": [[77, "cond-closed-over-variable"], [81, "cond-closed-over-variable"], [74, "cond-closed-over-variable"]], "nested_function": [[77, "nested-function"], [74, "nested-function"]], "Events": [[53, "module-torch.distributed.elastic.events"]], "API Methods": [[53, "api-methods"]], "Event Objects": [[53, "event-objects"]], "Quickstart": [[58, "quickstart"]], "torch.cond": [[81, "torch-cond"]], "cond_branch_class_method": [[81, "cond-branch-class-method"], [74, "cond-branch-class-method"], [82, "cond-branch-class-method"]], "cond_branch_nested_function": [[81, "cond-branch-nested-function"], [74, "cond-branch-nested-function"], [82, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[81, "cond-branch-nonlocal-variables"], [74, "cond-branch-nonlocal-variables"], [82, "cond-branch-nonlocal-variables"]], "cond_operands": [[81, "cond-operands"], [74, "cond-operands"], [82, "cond-operands"]], "cond_predicate": [[81, "cond-predicate"], [74, "cond-predicate"], [82, "cond-predicate"]], "torchrun (Elastic Launch)": [[60, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[60, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[60, "usage"], [36, "usage"], [45, null]], "Single-node multi-worker": [[60, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[60, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[60, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[60, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[60, "note-on-rendezvous-backend"]], "Definitions": [[60, "definitions"]], "Environment Variables": [[60, "environment-variables"]], "Deployment": [[60, "deployment"]], "Failure Modes": [[60, "failure-modes"]], "Membership Changes": [[60, "membership-changes"]], "Important Notices": [[60, "important-notices"]], "torch._export.export": [[63, "torch-export-export"]], "torch.func": [[66, "torch-func"]], "What are composable function transforms?": [[66, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[66, "why-composable-function-transforms"], [71, "why-composable-function-transforms"]], "Read More": [[66, "read-more"]], "Patching Batch Norm": [[68, "patching-batch-norm"]], "What\u2019s happening?": [[68, "what-s-happening"]], "How to fix": [[68, "how-to-fix"]], "Option 1: Change the BatchNorm": [[68, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[68, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[68, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[68, "option-4-eval-mode"]], "torch.fx": [[73, "torch-fx"]], "Overview": [[73, "module-torch.fx"], [12, "overview"], [36, "module-torch.cuda._sanitizer"], [1924, "overview"], [1929, "module-torch.profiler"]], "Writing Transformations": [[73, "writing-transformations"]], "A Quick Primer on Graphs": [[73, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[73, "graph-manipulation"]], "Direct Graph Manipulation": [[73, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[73, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[73, "graph-manipulation-examples"]], "Proxy/Retracing": [[73, "proxy-retracing"]], "The Interpreter Pattern": [[73, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[73, "examples-of-the-interpreter-pattern"]], "Debugging": [[73, "debugging"], [1882, "debugging"]], "Introduction": [[73, "introduction"], [1900, "introduction"], [1892, "introduction"]], "Common Pitfalls in Transform Authoring": [[73, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[73, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[73, "debugging-the-generated-code"]], "Use pdb": [[73, "use-pdb"]], "Print the Generated Code": [[73, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[73, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[73, "debugging-the-transformation"]], "Available Debuggers": [[73, "available-debuggers"]], "Limitations of Symbolic Tracing": [[73, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[73, "dynamic-control-flow"]], "Static Control Flow": [[73, "static-control-flow"]], "Non-torch Functions": [[73, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[73, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[73, "leaf-modules"]], "Miscellanea": [[73, "miscellanea"]], "API Reference": [[73, "api-reference"], [1895, "module-torch.monitor"], [36, "api-reference"], [1924, "api-reference"], [1929, "api-reference"], [1927, "api-reference"]], "FXE0009:fx-frontend-dynamo-make-fx": [[94, "fxe0009-fx-frontend-dynamo-make-fx"]], "FXE0005:fx-ir-add-node": [[90, "fxe0005-fx-ir-add-node"]], "Metrics": [[56, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[56, "metric-handlers"]], "Methods": [[56, "methods"]], "FXE0007:atenlib-fx-to-onnx": [[92, "fxe0007-atenlib-fx-to-onnx"]], "FXE0002:fx-tracer-failure": [[87, "fxe0002-fx-tracer-failure"]], "Examples": [[54, "examples"], [12, "examples"]], "ExportDB": [[74, "exportdb"]], "Tags": [[74, null]], "Supported": [[74, "supported"]], "autograd_function": [[74, "autograd-function"]], "class_method": [[74, "class-method"]], "decorator": [[74, "decorator"]], "dictionary": [[74, "dictionary"], [80, "dictionary"]], "dynamic_shape_constructor": [[74, "dynamic-shape-constructor"], [82, "dynamic-shape-constructor"]], "dynamic_shape_map": [[74, "dynamic-shape-map"], [82, "dynamic-shape-map"], [84, "dynamic-shape-map"]], "dynamic_shape_slicing": [[74, "dynamic-shape-slicing"], [82, "dynamic-shape-slicing"]], "dynamic_shape_view": [[74, "dynamic-shape-view"], [82, "dynamic-shape-view"]], "pytree_flatten": [[74, "pytree-flatten"]], "scalar_output": [[74, "scalar-output"], [82, "scalar-output"]], "specialized_attribute": [[74, "specialized-attribute"]], "Not Supported Yet": [[74, "not-supported-yet"]], "fn_with_kwargs": [[74, "fn-with-kwargs"], [80, "fn-with-kwargs"]], "python.data-structure": [[80, "python-data-structure"]], "FXE0001:fx-tracer-success": [[86, "fxe0001-fx-tracer-success"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[89, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "torch.dynamic-shape": [[82, "torch-dynamic-shape"]], "torch.utils.dlpack": [[49, "torch-utils-dlpack"]], "Multiprocessing": [[57, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[57, "starting-multiple-workers"]], "Process Context": [[57, "process-context"]], "FXE0012:unsupported-fx-node-analysis": [[97, "fxe0012-unsupported-fx-node-analysis"]], "torch.map": [[84, "torch-map"]], "Error Propagation": [[52, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[52, "methods-and-classes"]], "Elastic Agent": [[50, "module-torch.distributed.elastic.agent"]], "Server": [[50, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[50, "concepts"]], "Implementations": [[50, "implementations"], [59, "implementations"]], "Extending the Agent": [[50, "extending-the-agent"]], "Watchdog in the Agent": [[50, "watchdog-in-the-agent"]], "Expiration Timers": [[61, "module-torch.distributed.elastic.timer"]], "Client Methods": [[61, "client-methods"]], "Server/Client Implementations": [[61, "server-client-implementations"]], "Writing a custom timer server/client": [[61, "writing-a-custom-timer-server-client"]], "torch.func Whirlwind Tour": [[71, "torch-func-whirlwind-tour"]], "What is torch.func?": [[71, "what-is-torch-func"]], "What are the transforms?": [[71, "what-are-the-transforms"]], "grad() (gradient computation)": [[71, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[71, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[71, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[71, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[71, "jacrev-jacfwd-and-hessian"]], "Rendezvous": [[59, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[59, "registry"]], "Handler": [[59, "handler"]], "Exceptions": [[59, "exceptions"]], "Dynamic Rendezvous": [[59, "dynamic-rendezvous"]], "C10d Backend": [[59, "c10d-backend"]], "Etcd Backend": [[59, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[59, "etcd-rendezvous-legacy"]], "Etcd Store": [[59, "etcd-store"]], "Etcd Server": [[59, "etcd-server"]], "Train script": [[62, "train-script"]], "torch.negative": [[1347, "torch-negative"]], "torch.multiply": [[1335, "torch-multiply"]], "torch.msort": [[1332, "torch-msort"]], "torch.mps.synchronize": [[1331, "torch-mps-synchronize"]], "torch.mps.manual_seed": [[1324, "torch-mps-manual-seed"]], "torch.neg": [[1346, "torch-neg"]], "BatchNorm1d": [[1362, "batchnorm1d"]], "ConstantPad2d": [[1370, "constantpad2d"]], "AdaptiveMaxPool3d": [[1355, "adaptivemaxpool3d"]], "torch.mul": [[1333, "torch-mul"]], "torch.nanmean": [[1339, "torch-nanmean"]], "ConstantPad1d": [[1369, "constantpad1d"]], "ConstantPad3d": [[1371, "constantpad3d"]], "torch.nextafter": [[1348, "torch-nextafter"]], "torch.narrow": [[1343, "torch-narrow"]], "CELU": [[1366, "celu"]], "BatchNorm3d": [[1364, "batchnorm3d"], [750, "batchnorm3d"]], "AvgPool2d": [[1358, "avgpool2d"]], "torch.mv": [[1336, "torch-mv"]], "torch.ne": [[1345, "torch-ne"]], "AdaptiveAvgPool2d": [[1350, "adaptiveavgpool2d"]], "AdaptiveMaxPool1d": [[1353, "adaptivemaxpool1d"]], "torch.mps.get_rng_state": [[1323, "torch-mps-get-rng-state"]], "torch.mps.profiler.profile": [[1325, "torch-mps-profiler-profile"]], "torch.mps.set_per_process_memory_fraction": [[1329, "torch-mps-set-per-process-memory-fraction"]], "torch.mvlgamma": [[1337, "torch-mvlgamma"]], "torch.mps.seed": [[1328, "torch-mps-seed"]], "AlphaDropout": [[1356, "alphadropout"]], "torch.nanmedian": [[1340, "torch-nanmedian"]], "AvgPool3d": [[1359, "avgpool3d"]], "AdaptiveAvgPool3d": [[1351, "adaptiveavgpool3d"]], "BCELoss": [[1360, "bceloss"]], "torch.mps.profiler.stop": [[1327, "torch-mps-profiler-stop"]], "BCEWithLogitsLoss": [[1361, "bcewithlogitsloss"]], "torch.nanquantile": [[1341, "torch-nanquantile"]], "torch.nan_to_num": [[1338, "torch-nan-to-num"]], "Bilinear": [[1365, "bilinear"]], "AvgPool1d": [[1357, "avgpool1d"]], "AdaptiveAvgPool1d": [[1349, "adaptiveavgpool1d"]], "torch.nansum": [[1342, "torch-nansum"]], "torch.narrow_copy": [[1344, "torch-narrow-copy"]], "torch.mps.profiler.start": [[1326, "torch-mps-profiler-start"]], "AdaptiveLogSoftmaxWithLoss": [[1352, "adaptivelogsoftmaxwithloss"]], "torch.mps.set_rng_state": [[1330, "torch-mps-set-rng-state"]], "CTCLoss": [[1367, "ctcloss"]], "BatchNorm2d": [[1363, "batchnorm2d"], [749, "batchnorm2d"]], "torch.multinomial": [[1334, "torch-multinomial"]], "ChannelShuffle": [[1368, "channelshuffle"]], "AdaptiveMaxPool2d": [[1354, "adaptivemaxpool2d"]], "PoissonNLLLoss": [[1458, "poissonnllloss"]], "Mish": [[1443, "mish"]], "Module": [[1444, "module"]], "MultiheadAttention": [[1450, "multiheadattention"], [748, "multiheadattention"]], "LogSoftmax": [[1434, "logsoftmax"]], "LazyConvTranspose3d": [[1425, "lazyconvtranspose3d"]], "MarginRankingLoss": [[1436, "marginrankingloss"]], "MultiLabelSoftMarginLoss": [[1448, "multilabelsoftmarginloss"]], "MaxPool1d": [[1437, "maxpool1d"]], "RNNBase": [[1460, "rnnbase"]], "LazyConvTranspose1d": [[1423, "lazyconvtranspose1d"]], "LazyConv2d": [[1421, "lazyconv2d"]], "NLLLoss": [[1451, "nllloss"]], "LocalResponseNorm": [[1432, "localresponsenorm"]], "ParameterDict": [[1454, "parameterdict"]], "RNNCell": [[1461, "rnncell"], [778, "rnncell"]], "MaxUnpool2d": [[1441, "maxunpool2d"]], "PReLU": [[1452, "prelu"]], "ReLU": [[1463, "relu"]], "LogSigmoid": [[1433, "logsigmoid"]], "ParameterList": [[1455, "parameterlist"]], "RNN": [[1459, "rnn"]], "MultiMarginLoss": [[1449, "multimarginloss"]], "LazyInstanceNorm3d": [[1428, "lazyinstancenorm3d"]], "LazyInstanceNorm1d": [[1426, "lazyinstancenorm1d"]], "LazyConv3d": [[1422, "lazyconv3d"]], "ReflectionPad3d": [[1467, "reflectionpad3d"]], "MSELoss": [[1435, "mseloss"]], "ModuleDict": [[1445, "moduledict"]], "ReLU6": [[1464, "relu6"], [771, "relu6"]], "LazyLinear": [[1429, "lazylinear"]], "PixelUnshuffle": [[1457, "pixelunshuffle"]], "RReLU": [[1462, "rrelu"]], "ReplicationPad1d": [[1468, "replicationpad1d"]], "ReflectionPad1d": [[1465, "reflectionpad1d"]], "ModuleList": [[1446, "modulelist"]], "LazyInstanceNorm2d": [[1427, "lazyinstancenorm2d"]], "PixelShuffle": [[1456, "pixelshuffle"]], "LeakyReLU": [[1430, "leakyrelu"], [768, "leakyrelu"]], "Linear": [[1431, "linear"], [746, "linear"], [777, "linear"], [745, "linear"], [769, "linear"]], "MaxPool2d": [[1438, "maxpool2d"]], "MultiLabelMarginLoss": [[1447, "multilabelmarginloss"]], "ReplicationPad2d": [[1469, "replicationpad2d"]], "MaxUnpool3d": [[1442, "maxunpool3d"]], "MaxPool3d": [[1439, "maxpool3d"]], "MaxUnpool1d": [[1440, "maxunpool1d"]], "PairwiseDistance": [[1453, "pairwisedistance"]], "LazyConvTranspose2d": [[1424, "lazyconvtranspose2d"]], "ReflectionPad2d": [[1466, "reflectionpad2d"]], "ConvTranspose1d": [[1375, "convtranspose1d"], [754, "convtranspose1d"]], "GELU": [[1394, "gelu"]], "Conv3d": [[1374, "conv3d"], [753, "conv3d"], [744, "conv3d"]], "EmbeddingBag": [[1388, "embeddingbag"], [759, "embeddingbag"]], "CrossEntropyLoss": [[1380, "crossentropyloss"]], "ELU": [[1386, "elu"], [757, "elu"]], "FractionalMaxPool2d": [[1392, "fractionalmaxpool2d"]], "Fold": [[1391, "fold"]], "L1Loss": [[1411, "l1loss"]], "Conv1d": [[1372, "conv1d"], [751, "conv1d"]], "ConvTranspose3d": [[1377, "convtranspose3d"], [756, "convtranspose3d"]], "CosineEmbeddingLoss": [[1378, "cosineembeddingloss"]], "KLDivLoss": [[1410, "kldivloss"]], "LPPool1d": [[1412, "lppool1d"]], "LazyBatchNorm2d": [[1418, "lazybatchnorm2d"]], "Hardtanh": [[1403, "hardtanh"]], "LazyConv1d": [[1420, "lazyconv1d"]], "Hardsigmoid": [[1401, "hardsigmoid"]], "DataParallel": [[1381, "dataparallel"]], "LPPool2d": [[1413, "lppool2d"]], "FeatureAlphaDropout": [[1389, "featurealphadropout"]], "Dropout1d": [[1383, "dropout1d"]], "FractionalMaxPool3d": [[1393, "fractionalmaxpool3d"]], "Flatten": [[1390, "flatten"]], "GRUCell": [[1397, "grucell"], [774, "grucell"]], "Dropout": [[1382, "dropout"]], "HuberLoss": [[1405, "huberloss"]], "LayerNorm": [[1416, "layernorm"], [767, "layernorm"]], "Dropout3d": [[1385, "dropout3d"]], "Hardswish": [[1402, "hardswish"], [763, "hardswish"]], "InstanceNorm1d": [[1407, "instancenorm1d"], [764, "instancenorm1d"]], "LSTM": [[1414, "lstm"], [747, "lstm"], [775, "lstm"]], "GRU": [[1396, "gru"], [773, "gru"]], "Conv2d": [[1373, "conv2d"], [752, "conv2d"], [743, "conv2d"]], "LSTMCell": [[1415, "lstmcell"], [776, "lstmcell"]], "GLU": [[1395, "glu"]], "Dropout2d": [[1384, "dropout2d"]], "InstanceNorm3d": [[1409, "instancenorm3d"], [766, "instancenorm3d"]], "CosineSimilarity": [[1379, "cosinesimilarity"]], "InstanceNorm2d": [[1408, "instancenorm2d"], [765, "instancenorm2d"]], "GroupNorm": [[1399, "groupnorm"], [762, "groupnorm"]], "LazyBatchNorm1d": [[1417, "lazybatchnorm1d"]], "LazyBatchNorm3d": [[1419, "lazybatchnorm3d"]], "GaussianNLLLoss": [[1398, "gaussiannllloss"]], "Hardshrink": [[1400, "hardshrink"]], "Embedding": [[1387, "embedding"], [758, "embedding"]], "ConvTranspose2d": [[1376, "convtranspose2d"], [755, "convtranspose2d"]], "HingeEmbeddingLoss": [[1404, "hingeembeddingloss"]], "torch.linalg.vecdot": [[1280, "torch-linalg-vecdot"]], "torch.logaddexp2": [[1290, "torch-logaddexp2"]], "torch.minimum": [[1315, "torch-minimum"]], "torch.median": [[1312, "torch-median"]], "torch.lu_unpack": [[1303, "torch-lu-unpack"]], "torch.linalg.tensorsolve": [[1278, "torch-linalg-tensorsolve"]], "torch.logical_and": [[1293, "torch-logical-and"]], "torch.max": [[1309, "torch-max"]], "torch.linspace": [[1282, "torch-linspace"]], "torch.mps.empty_cache": [[1322, "torch-mps-empty-cache"]], "torch.lt": [[1300, "torch-lt"]], "torch.logdet": [[1292, "torch-logdet"]], "torch.log2": [[1288, "torch-log2"]], "torch.logical_or": [[1295, "torch-logical-or"]], "torch.linalg.tensorinv": [[1277, "torch-linalg-tensorinv"]], "torch.mps.current_allocated_memory": [[1320, "torch-mps-current-allocated-memory"]], "torch.min": [[1314, "torch-min"]], "torch.lu_solve": [[1302, "torch-lu-solve"]], "torch.logical_not": [[1294, "torch-logical-not"]], "torch.movedim": [[1319, "torch-movedim"]], "torch.logaddexp": [[1289, "torch-logaddexp"]], "torch.moveaxis": [[1318, "torch-moveaxis"]], "torch.linalg.svd": [[1275, "torch-linalg-svd"]], "torch.logcumsumexp": [[1291, "torch-logcumsumexp"]], "torch.mean": [[1311, "torch-mean"]], "torch.logit": [[1297, "torch-logit"]], "torch.lu": [[1301, "torch-lu"]], "torch.mps.driver_allocated_memory": [[1321, "torch-mps-driver-allocated-memory"]], "torch.load": [[1283, "torch-load"]], "torch.log10": [[1286, "torch-log10"]], "torch.matrix_exp": [[1307, "torch-matrix-exp"]], "torch.matmul": [[1306, "torch-matmul"]], "torch.maximum": [[1310, "torch-maximum"]], "torch.linalg.solve_triangular": [[1274, "torch-linalg-solve-triangular"]], "torch.lobpcg": [[1284, "torch-lobpcg"]], "torch.log": [[1285, "torch-log"]], "torch.logspace": [[1298, "torch-logspace"]], "torch.meshgrid": [[1313, "torch-meshgrid"]], "torch.matrix_power": [[1308, "torch-matrix-power"]], "torch.mode": [[1317, "torch-mode"]], "torch.log1p": [[1287, "torch-log1p"]], "torch.linalg.svdvals": [[1276, "torch-linalg-svdvals"]], "torch.linalg.vector_norm": [[1281, "torch-linalg-vector-norm"]], "torch.mm": [[1316, "torch-mm"]], "torch.logical_xor": [[1296, "torch-logical-xor"]], "torch.manual_seed": [[1304, "torch-manual-seed"]], "torch.masked_select": [[1305, "torch-masked-select"]], "torch.linalg.vander": [[1279, "torch-linalg-vander"]], "torch.logsumexp": [[1299, "torch-logsumexp"]], "torch.jit.trace": [[1227, "torch-jit-trace"]], "torch.lcm": [[1234, "torch-lcm"]], "torch.jit.trace_module": [[1228, "torch-jit-trace-module"]], "torch.le": [[1236, "torch-le"]], "torch.linalg.ldl_factor_ex": [[1255, "torch-linalg-ldl-factor-ex"]], "torch.linalg.lu_solve": [[1261, "torch-linalg-lu-solve"]], "torch.less_equal": [[1239, "torch-less-equal"]], "torch.linalg.inv_ex": [[1253, "torch-linalg-inv-ex"]], "torch.linalg.matrix_power": [[1265, "torch-linalg-matrix-power"]], "torch.linalg.slogdet": [[1271, "torch-linalg-slogdet"]], "torch.kthvalue": [[1233, "torch-kthvalue"]], "torch.linalg.matmul": [[1262, "torch-linalg-matmul"]], "torch.linalg.cholesky_ex": [[1242, "torch-linalg-cholesky-ex"]], "torch.lgamma": [[1240, "torch-lgamma"]], "torch.linalg.eigh": [[1248, "torch-linalg-eigh"]], "torch.linalg.ldl_solve": [[1256, "torch-linalg-ldl-solve"]], "torch.jit.unused": [[1229, "torch-jit-unused"]], "torch.linalg.matrix_exp": [[1263, "torch-linalg-matrix-exp"]], "torch.jit.wait": [[1230, "torch-jit-wait"]], "torch.linalg.cross": [[1244, "torch-linalg-cross"]], "torch.linalg.eigvals": [[1249, "torch-linalg-eigvals"]], "strict_fusion": [[1226, "strict-fusion"]], "torch.linalg.pinv": [[1269, "torch-linalg-pinv"]], "torch.jit.set_fusion_strategy": [[1225, "torch-jit-set-fusion-strategy"]], "torch.linalg.matrix_rank": [[1266, "torch-linalg-matrix-rank"]], "torch.kron": [[1232, "torch-kron"]], "torch.linalg.solve_ex": [[1273, "torch-linalg-solve-ex"]], "torch.lerp": [[1237, "torch-lerp"]], "torch.linalg.diagonal": [[1246, "torch-linalg-diagonal"]], "torch.linalg.eigvalsh": [[1250, "torch-linalg-eigvalsh"]], "torch.linalg.lu_factor_ex": [[1260, "torch-linalg-lu-factor-ex"]], "torch.linalg.inv": [[1252, "torch-linalg-inv"]], "torch.linalg.lstsq": [[1257, "torch-linalg-lstsq"]], "torch.linalg.solve": [[1272, "torch-linalg-solve"]], "torch.linalg.cholesky": [[1241, "torch-linalg-cholesky"]], "torch.linalg.lu": [[1258, "torch-linalg-lu"]], "torch.linalg.det": [[1245, "torch-linalg-det"]], "torch.ldexp": [[1235, "torch-ldexp"]], "torch.linalg.eig": [[1247, "torch-linalg-eig"]], "torch.linalg.norm": [[1268, "torch-linalg-norm"]], "torch.linalg.multi_dot": [[1267, "torch-linalg-multi-dot"]], "torch.less": [[1238, "torch-less"]], "torch.linalg.householder_product": [[1251, "torch-linalg-householder-product"]], "torch.linalg.qr": [[1270, "torch-linalg-qr"]], "torch.linalg.cond": [[1243, "torch-linalg-cond"]], "torch.kaiser_window": [[1231, "torch-kaiser-window"]], "torch.linalg.matrix_norm": [[1264, "torch-linalg-matrix-norm"]], "torch.linalg.ldl_factor": [[1254, "torch-linalg-ldl-factor"]], "torch.linalg.lu_factor": [[1259, "torch-linalg-lu-factor"]], "torch.unique": [[1862, "torch-unique"]], "torch.nn.functional": [[1902, "torch-nn-functional"]], "Convolution functions": [[1902, "convolution-functions"]], "Pooling functions": [[1902, "pooling-functions"]], "Attention Mechanisms": [[1902, "attention-mechanisms"]], "Non-linear activation functions": [[1902, "non-linear-activation-functions"]], "Linear functions": [[1902, "linear-functions"]], "Dropout functions": [[1902, "dropout-functions"]], "Sparse functions": [[1902, "sparse-functions"]], "Distance functions": [[1902, "distance-functions"]], "Loss functions": [[1902, "loss-functions"]], "Vision functions": [[1902, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1902, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1902, "data-parallel"]], "TorchScript Builtins": [[1883, "torchscript-builtins"]], "Supported Tensor Methods": [[1883, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1883, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1883, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1883, "python-built-in-functions"]], "math Module": [[1883, "math-module"]], "TorchScript Language Reference": [[1884, "torchscript-language-reference"], [1885, "torchscript-language-reference"]], "Types": [[1884, "supported-type"], [1923, "types"]], "Unsupported Typing Constructs": [[1884, "unsupported-typing-constructs"], [1885, "unsupported-typing-constructs"]], "Default Types": [[1884, "default-types"]], "Optional Type Refinement": [[1884, "optional-type-refinement"]], "TorchScript Classes": [[1884, "id2"], [1882, "torchscript-classes"]], "TorchScript Enums": [[1884, "id4"]], "Named Tuples": [[1884, "named-tuples"]], "Iterables": [[1884, "iterables"]], "Expressions": [[1884, "expressions"], [1885, "expressions"]], "Literals": [[1884, "literals"], [1885, "literals"]], "List Construction": [[1884, "list-construction"]], "Tuple Construction": [[1884, "tuple-construction"]], "Dict Construction": [[1884, "dict-construction"]], "Variables": [[1884, "variables"], [1882, "variables"], [20, "variables"]], "Arithmetic Operators": [[1884, "arithmetic-operators"]], "Comparison Operators": [[1884, "comparison-operators"]], "Logical Operators": [[1884, "logical-operators"]], "Subscripts and Slicing": [[1884, "subscripts-and-slicing"]], "Function Calls": [[1884, "function-calls"]], "Method Calls": [[1884, "method-calls"]], "Ternary Expressions": [[1884, "ternary-expressions"]], "Casts": [[1884, "casts"]], "Accessing Module Parameters": [[1884, "accessing-module-parameters"]], "Statements": [[1884, "statements"]], "Simple Assignments": [[1884, "simple-assignments"]], "Pattern Matching Assignments": [[1884, "pattern-matching-assignments"]], "Print Statements": [[1884, "print-statements"]], "If Statements": [[1884, "if-statements"]], "While Loops": [[1884, "while-loops"]], "For loops with range": [[1884, "for-loops-with-range"]], "For loops over tuples": [[1884, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1884, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1884, "break-and-continue"]], "Return": [[1884, "return"]], "Variable Resolution": [[1884, "variable-resolution"]], "Use of Python Values": [[1884, "use-of-python-values"]], "Functions": [[1884, "functions"], [1882, "functions"], [1923, "functions"], [1940, "functions"], [1950, "functions"]], "Attribute Lookup On Python Modules": [[1884, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1884, "python-defined-constants"]], "Module Attributes": [[1884, "module-attributes"]], "Named Tensors operator coverage": [[1898, "named-tensors-operator-coverage"]], "Supported Operations": [[1898, "id1"]], "Keeps input names": [[1898, "keeps-input-names"]], "Removes dimensions": [[1898, "removes-dimensions"]], "Unifies names from inputs": [[1898, "unifies-names-from-inputs"]], "Permutes dimensions": [[1898, "permutes-dimensions"]], "Contracts away dims": [[1898, "contracts-away-dims"]], "Factory functions": [[1898, "factory-functions"]], "out function and in-place variants": [[1898, "out-function-and-in-place-variants"]], "torch.nested": [[1900, "module-torch.nested"]], "Construction": [[1900, "construction"], [1939, "construction"]], "size": [[1900, "size"]], "unbind": [[1900, "unbind"]], "Nested tensor constructor and conversion functions": [[1900, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1900, "supported-operations"], [1939, "supported-operations"]], "Python Language Reference Coverage": [[1886, "python-language-reference-coverage"]], "TorchScript Unsupported PyTorch Constructs": [[1887, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1887, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1887, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1887, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1887, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1887, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1887, "pytorch-unsupported-modules-and-classes"]], "torch.use_deterministic_algorithms": [[1865, "torch-use-deterministic-algorithms"]], "TorchScript": [[1882, "torchscript"]], "Creating TorchScript Code": [[1882, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1882, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1882, "torchscript-language"]], "Built-in Functions and Modules": [[1882, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1882, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1882, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1882, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1882, "disable-jit-for-debugging"]], "Inspecting Code": [[1882, "inspecting-code"]], "Interpreting Graphs": [[1882, "interpreting-graphs"]], "Tracer": [[1882, "tracer"]], "Tracing Edge Cases": [[1882, "tracing-edge-cases"]], "Automatic Trace Checking": [[1882, "automatic-trace-checking"]], "Tracer Warnings": [[1882, "tracer-warnings"]], "Frequently Asked Questions": [[1882, "frequently-asked-questions"], [16, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1912, "frequently-asked-questions"], [1930, "frequently-asked-questions"], [1923, "frequently-asked-questions"]], "Known Issues": [[1882, "known-issues"]], "Appendix": [[1882, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1882, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1882, "modules"], [1916, "modules"]], "Attributes": [[1882, "attributes"]], "Constants": [[1882, "constants"]], "Fusion Backends": [[1882, "fusion-backends"]], "References": [[1882, "references"]], "torch.zeros_like": [[1878, "torch-zeros-like"]], "torch.hub": [[1879, "torch-hub"]], "Publishing models": [[1879, "publishing-models"]], "How to implement an entrypoint?": [[1879, "how-to-implement-an-entrypoint"]], "Important Notice": [[1879, "important-notice"]], "Loading models from Hub": [[1879, "loading-models-from-hub"]], "Running a loaded model:": [[1879, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1879, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1879, "caching-logic"]], "Known limitations:": [[1879, "known-limitations"]], "torch.vdot": [[1869, "torch-vdot"]], "torch.utils.mobile_optimizer": [[1893, "torch-utils-mobile-optimizer"]], "torch.vstack": [[1874, "torch-vstack"]], "Extending PyTorch": [[1910, "extending-pytorch"]], "Extending torch.autograd": [[1910, "extending-torch-autograd"]], "When to use": [[1910, "when-to-use"]], "When not to use": [[1910, "when-not-to-use"]], "How to use": [[1910, "how-to-use"]], "Example": [[1910, "example"], [1909, "example"]], "Combined or separate forward() and setup_context()": [[1910, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1910, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1910, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1910, "extending-torch-nn"]], "Adding a Module": [[1910, "adding-a-module"]], "Extending torch Python API": [[1910, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1910, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1910, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1910, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1910, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1910, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1910, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1910, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1910, "writing-custom-c-extensions"]], "torch.nn": [[1901, "module-torch.nn"], [1901, "id1"]], "Containers": [[1901, "containers"]], "Convolution Layers": [[1901, "convolution-layers"]], "Pooling layers": [[1901, "pooling-layers"]], "Padding Layers": [[1901, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1901, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1901, "non-linear-activations-other"]], "Normalization Layers": [[1901, "normalization-layers"]], "Recurrent Layers": [[1901, "recurrent-layers"]], "Transformer Layers": [[1901, "transformer-layers"]], "Linear Layers": [[1901, "linear-layers"]], "Dropout Layers": [[1901, "dropout-layers"]], "Sparse Layers": [[1901, "sparse-layers"]], "Distance Functions": [[1901, "distance-functions"]], "Loss Functions": [[1901, "loss-functions"]], "Vision Layers": [[1901, "vision-layers"]], "Shuffle Layers": [[1901, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1901, "module-torch.nn.parallel"]], "Utilities": [[1901, "module-torch.nn.utils"], [1947, "utilities"]], "Quantized Functions": [[1901, "quantized-functions"]], "Lazy Modules Initialization": [[1901, "lazy-modules-initialization"]], "Autograd mechanics": [[1905, "autograd-mechanics"]], "How autograd encodes the history": [[1905, "how-autograd-encodes-the-history"]], "Saved tensors": [[1905, "saved-tensors"]], "Gradients for non-differentiable functions": [[1905, "gradients-for-non-differentiable-functions"]], "Locally disabling gradient computation": [[1905, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1947, "locally-disabling-gradient-computation"]], "Setting requires_grad": [[1905, "setting-requires-grad"]], "Grad Modes": [[1905, "grad-modes"]], "Default Mode (Grad Mode)": [[1905, "default-mode-grad-mode"]], "No-grad Mode": [[1905, "no-grad-mode"]], "Inference Mode": [[1905, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1905, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1905, "in-place-operations-with-autograd"]], "In-place correctness checks": [[1905, "in-place-correctness-checks"], [1, "in-place-correctness-checks"]], "Multithreaded Autograd": [[1905, "multithreaded-autograd"]], "Concurrency on CPU": [[1905, "concurrency-on-cpu"]], "Non-determinism": [[1905, "non-determinism"]], "Graph retaining": [[1905, "graph-retaining"]], "Thread Safety on Autograd Node": [[1905, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1905, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1905, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1905, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1905, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1905, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1905, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1905, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1905, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1905, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1905, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1905, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1905, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1905, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1905, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1905, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1905, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "torch.vander": [[1866, "torch-vander"]], "torch.var": [[1867, "torch-var"]], "torch.view_as_real": [[1871, "torch-view-as-real"]], "torch.where": [[1875, "torch-where"]], "Distributed Data Parallel": [[1909, "distributed-data-parallel"]], "Internal Design": [[1909, "internal-design"]], "Implementation": [[1909, "implementation"], [1937, "implementation"]], "ProcessGroup": [[1909, "processgroup"]], "TorchDynamo DDPOptimizer": [[1909, "id1"]], "torch.mps": [[1896, "module-torch.mps"]], "MPS Profiler": [[1896, "mps-profiler"]], "CUDA semantics": [[1908, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1908, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1908, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1908, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1908, "asynchronous-execution"]], "CUDA streams": [[1908, "cuda-streams"]], "Stream semantics of backward passes": [[1908, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1908, "bc-note-using-grads-on-the-default-stream"]], "Memory management": [[1908, "memory-management"], [35, "memory-management"], [1914, "memory-management"]], "Environment variables": [[1908, "environment-variables"]], "Using custom memory allocators for CUDA": [[1908, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1908, "cublas-workspaces"]], "cuFFT plan cache": [[1908, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1908, "just-in-time-compilation"]], "Best practices": [[1908, "best-practices"]], "Device-agnostic code": [[1908, "device-agnostic-code"]], "Use pinned memory buffers": [[1908, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1908, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1908, "cuda-graphs"]], "Why CUDA Graphs?": [[1908, "why-cuda-graphs"]], "PyTorch API": [[1908, "pytorch-api"]], "Constraints": [[1908, "constraints"], [48, "module-torch.distributions.constraints"]], "Non-constraints": [[1908, "non-constraints"]], "Whole-network capture": [[1908, "whole-network-capture"]], "Partial-network capture": [[1908, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1908, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1908, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1908, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1908, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1908, "id5"]], "Graph memory management": [[1908, "graph-memory-management"]], "Sharing memory across captures": [[1908, "sharing-memory-across-captures"]], "torch.view_as_complex": [[1870, "torch-view-as-complex"]], "JIT Utils - torch.utils.jit": [[1888, "module-torch.utils.jit"]], "PyTorch documentation": [[1880, "pytorch-documentation"]], "Community": [[1880, null]], "Developer Notes": [[1880, null]], "torch.compile": [[1880, null], [21, "torch-compile"], [18, "torch-compile"], [966, "torch-compile"]], "Language Bindings": [[1880, null]], "Python API": [[1880, null]], "Libraries": [[1880, null]], "Indices and tables": [[1880, "indices-and-tables"]], "torch.nn.init": [[1903, "torch-nn-init"]], "torch.zeros": [[1877, "torch-zeros"]], "torch.vmap": [[1872, "torch-vmap"]], "torch.var_mean": [[1868, "torch-var-mean"]], "IRs": [[1881, "irs"]], "Core Aten IR": [[1881, "core-aten-ir"]], "Prims IR": [[1881, "prims-ir"]], "CUDA Automatic Mixed Precision examples": [[1904, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1904, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1904, "working-with-unscaled-gradients"]], "Gradient clipping": [[1904, "gradient-clipping"]], "Working with Scaled Gradients": [[1904, "working-with-scaled-gradients"]], "Gradient accumulation": [[1904, "gradient-accumulation"]], "Gradient penalty": [[1904, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1904, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1904, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1904, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1904, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1904, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1904, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1904, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1904, "functions-that-need-a-particular-dtype"]], "torch.unique_consecutive": [[1863, "torch-unique-consecutive"]], "torch._logging": [[1891, "torch-logging"]], "torch.masked": [[1892, "torch-masked"]], "Motivation": [[1892, "motivation"], [15, "motivation"], [14, "motivation"]], "What is a MaskedTensor?": [[1892, "what-is-a-maskedtensor"]], "Supported Operators": [[1892, "supported-operators"]], "Unary Operators": [[1892, "unary-operators"]], "Binary Operators": [[1892, "binary-operators"]], "Reductions": [[1892, "reductions"]], "View and select functions": [[1892, "view-and-select-functions"]], "torch.linalg": [[1890, "torch-linalg"]], "Matrix Properties": [[1890, "matrix-properties"]], "Decompositions": [[1890, "decompositions"]], "Solvers": [[1890, "solvers"]], "Inverses": [[1890, "inverses"]], "Matrix Functions": [[1890, "matrix-functions"]], "Matrix Products": [[1890, "matrix-products"]], "Tensor Operations": [[1890, "tensor-operations"]], "Misc": [[1890, "misc"]], "Experimental Functions": [[1890, "experimental-functions"]], "torch.monitor": [[1895, "torch-monitor"]], "Broadcasting semantics": [[1906, "broadcasting-semantics"]], "General semantics": [[1906, "general-semantics"]], "In-place semantics": [[1906, "in-place-semantics"]], "Backwards compatibility": [[1906, "backwards-compatibility"]], "torch.library": [[1889, "torch-library"]], "Terminology": [[1885, "terminology"]], "Type System": [[1885, "id1"]], "TorchScript Types": [[1885, "torchscript-types"]], "Meta Types": [[1885, "meta-types"]], "Any Type": [[1885, "any-type"]], "Operators Supported for Any Type": [[1885, "operators-supported-for-any-type"]], "Design Notes": [[1885, "design-notes"], [1935, "design-notes"]], "Primitive Types": [[1885, "primitive-types"]], "Structural Types": [[1885, "structural-types"]], "Nominal Types": [[1885, "nominal-types"]], "Built-in Class": [[1885, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1885, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1885, "custom-class"]], "Enum Type": [[1885, "enum-type"]], "TorchScript Module Class": [[1885, "torchscript-module-class"]], "Module Instance Class": [[1885, "module-instance-class"]], "Type Annotation": [[1885, "type-annotation"]], "When to Annotate Types": [[1885, "when-to-annotate-types"]], "Annotate Function Signature": [[1885, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1885, "annotate-variables-and-data-attributes"]], "Local Variables": [[1885, "local-variables"]], "Instance Data Attributes": [[1885, "instance-data-attributes"]], "Type Annotation APIs": [[1885, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1885, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1885, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1885, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1885, "arithmetic-conversions"]], "Atoms": [[1885, "atoms"]], "Identifiers": [[1885, "identifiers"]], "Parenthesized Forms": [[1885, "parenthesized-forms"]], "List and Dictionary Displays": [[1885, "list-and-dictionary-displays"]], "Primaries": [[1885, "primaries"]], "Attribute References": [[1885, "attribute-references"]], "Subscriptions": [[1885, "subscriptions"]], "Slicings": [[1885, "slicings"]], "Calls": [[1885, "calls"]], "Power Operator": [[1885, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1885, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1885, "binary-arithmetic-operations"]], "Shifting Operations": [[1885, "shifting-operations"]], "Binary Bitwise Operations": [[1885, "binary-bitwise-operations"]], "Comparisons": [[1885, "comparisons"], [11, "comparisons"]], "Value Comparisons": [[1885, "value-comparisons"]], "Membership Test Operations": [[1885, "membership-test-operations"]], "Identity Comparisons": [[1885, "identity-comparisons"]], "Boolean Operations": [[1885, "boolean-operations"]], "Conditional Expressions": [[1885, "conditional-expressions"]], "Expression Lists": [[1885, "expression-lists"]], "Simple Statements": [[1885, "simple-statements"]], "Expression Statements": [[1885, "expression-statements"]], "Assignment Statements": [[1885, "assignment-statements"]], "Augmented Assignment Statements": [[1885, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1885, "annotated-assignment-statements"]], "The raise Statement": [[1885, "the-raise-statement"]], "The assert Statement": [[1885, "the-assert-statement"]], "The return Statement": [[1885, "the-return-statement"]], "The del Statement": [[1885, "the-del-statement"]], "The pass Statement": [[1885, "the-pass-statement"]], "The print Statement": [[1885, "the-print-statement"]], "The break Statement": [[1885, "the-break-statement"]], "The continue Statement:": [[1885, "the-continue-statement"]], "Compound Statements": [[1885, "compound-statements"]], "The if Statement": [[1885, "the-if-statement"]], "Basic if/else Statement": [[1885, "basic-if-else-statement"]], "Ternary if/else Statement": [[1885, "ternary-if-else-statement"]], "The while Statement": [[1885, "the-while-statement"]], "The for-in Statement": [[1885, "the-for-in-statement"]], "The with Statement": [[1885, "the-with-statement"]], "The tuple Statement": [[1885, "the-tuple-statement"]], "The getattr Statement": [[1885, "the-getattr-statement"]], "The hasattr Statement": [[1885, "the-hasattr-statement"]], "The zip Statement": [[1885, "the-zip-statement"]], "The enumerate Statement": [[1885, "the-enumerate-statement"]], "Python Values": [[1885, "python-values"]], "Resolution Rules": [[1885, "resolution-rules"]], "Python Built-in Functions Support": [[1885, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1885, "id5"]], "Python Built-in Values Support": [[1885, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1885, "id6"]], "torch.* APIs": [[1885, "torch-apis"]], "Remote Procedure Calls": [[1885, "remote-procedure-calls"]], "Asynchronous Execution": [[1885, "asynchronous-execution"]], "Type Annotations": [[1885, "type-annotations"]], "Meta Programming": [[1885, "meta-programming"]], "Type Refinement": [[1885, "type-refinement"]], "torch.unsqueeze": [[1864, "torch-unsqueeze"]], "torch.xlogy": [[1876, "torch-xlogy"]], "Named Tensors": [[1899, "named-tensors"]], "Creating named tensors": [[1899, "creating-named-tensors"]], "Named dimensions": [[1899, "named-dimensions"]], "Name propagation semantics": [[1899, "name-propagation-semantics"]], "match semantics": [[1899, "match-semantics"]], "Basic name inference rules": [[1899, "basic-name-inference-rules"]], "Explicit alignment by names": [[1899, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1899, "manipulating-dimensions"]], "Autograd support": [[1899, "autograd-support"]], "Currently supported operations and subsystems": [[1899, "currently-supported-operations-and-subsystems"]], "Operators": [[1899, "operators"]], "Subsystems": [[1899, "subsystems"]], "Named tensor API reference": [[1899, "named-tensor-api-reference"]], "torch.utils.model_zoo": [[1894, "torch-utils-model-zoo"]], "CPU threading and TorchScript inference": [[1907, "cpu-threading-and-torchscript-inference"]], "Build options": [[1907, "build-options"]], "Runtime API": [[1907, "runtime-api"]], "Tuning the number of threads": [[1907, "tuning-the-number-of-threads"]], "torch.vsplit": [[1873, "torch-vsplit"]], "Multiprocessing package - torch.multiprocessing": [[1897, "module-torch.multiprocessing"]], "Strategy management": [[1897, "strategy-management"]], "Sharing CUDA tensors": [[1897, "sharing-cuda-tensors"]], "Sharing strategies": [[1897, "sharing-strategies"]], "File descriptor - file_descriptor": [[1897, "file-descriptor-file-descriptor"]], "File system - file_system": [[1897, "file-system-file-system"]], "Spawning subprocesses": [[1897, "spawning-subprocesses"]], "torch.inverse": [[1190, "torch-inverse"]], "torch.isneginf": [[1206, "torch-isneginf"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1193, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.jit.isinstance": [[1218, "torch-jit-isinstance"]], "torch.igamma": [[1180, "torch-igamma"]], "torch.index_add": [[1183, "torch-index-add"]], "torch.is_storage": [[1198, "torch-is-storage"]], "torch.isinf": [[1204, "torch-isinf"]], "Attribute": [[1210, "attribute"]], "torch.jit.freeze": [[1216, "torch-jit-freeze"]], "torch.inner": [[1189, "torch-inner"]], "torch.hypot": [[1178, "torch-hypot"]], "torch.hspmm": [[1176, "torch-hspmm"]], "torch.jit.onednn_fusion_enabled": [[1220, "torch-jit-onednn-fusion-enabled"]], "inference_mode": [[1187, "inference-mode"]], "torch.is_grad_enabled": [[1195, "torch-is-grad-enabled"]], "torch.is_warn_always_enabled": [[1200, "torch-is-warn-always-enabled"]], "torch.igammac": [[1181, "torch-igammac"]], "torch.isclose": [[1201, "torch-isclose"]], "torch.is_floating_point": [[1194, "torch-is-floating-point"]], "torch.isnan": [[1205, "torch-isnan"]], "torch.index_reduce": [[1185, "torch-index-reduce"]], "torch.hstack": [[1177, "torch-hstack"]], "torch.isreal": [[1208, "torch-isreal"]], "torch.isposinf": [[1207, "torch-isposinf"]], "torch.jit.annotate": [[1213, "torch-jit-annotate"]], "torch.jit.optimize_for_inference": [[1221, "torch-jit-optimize-for-inference"]], "torch.initial_seed": [[1188, "torch-initial-seed"]], "torch.is_tensor": [[1199, "torch-is-tensor"]], "torch.i0": [[1179, "torch-i0"]], "torch.index_copy": [[1184, "torch-index-copy"]], "torch.jit.enable_onednn_fusion": [[1214, "torch-jit-enable-onednn-fusion"]], "torch.is_complex": [[1191, "torch-is-complex"]], "ScriptModule": [[1212, "scriptmodule"]], "torch.is_conj": [[1192, "torch-is-conj"]], "torch.index_select": [[1186, "torch-index-select"]], "torch.is_inference_mode_enabled": [[1196, "torch-is-inference-mode-enabled"]], "torch.imag": [[1182, "torch-imag"]], "torch.istft": [[1209, "torch-istft"]], "torch.jit.ignore": [[1217, "torch-jit-ignore"]], "torch.jit.fork": [[1215, "torch-jit-fork"]], "ScriptFunction": [[1211, "scriptfunction"]], "torch.isin": [[1203, "torch-isin"]], "torch.jit.script": [[1223, "torch-jit-script"]], "torch.is_nonzero": [[1197, "torch-is-nonzero"]], "torch.jit.load": [[1219, "torch-jit-load"]], "torch.isfinite": [[1202, "torch-isfinite"]], "torch.jit.script_if_tracing": [[1224, "torch-jit-script-if-tracing"]], "torch.jit.save": [[1222, "torch-jit-save"]], "torch.get_num_threads": [[1163, "torch-get-num-threads"]], "torch.fmod": [[1133, "torch-fmod"]], "torch.greater_equal": [[1167, "torch-greater-equal"]], "torch.get_default_dtype": [[1159, "torch-get-default-dtype"]], "torch.func.hessian": [[1145, "torch-func-hessian"]], "torch.full": [[1139, "torch-full"]], "torch.get_rng_state": [[1164, "torch-get-rng-state"]], "torch.floor_divide": [[1130, "torch-floor-divide"]], "torch.floor": [[1129, "torch-floor"]], "torch.func.linearize": [[1149, "torch-func-linearize"]], "torch.frombuffer": [[1138, "torch-frombuffer"]], "torch.func.vjp": [[1152, "torch-func-vjp"]], "torch.func.jvp": [[1148, "torch-func-jvp"]], "torch.geqrf": [[1157, "torch-geqrf"]], "torch.gt": [[1168, "torch-gt"]], "torch.func.jacrev": [[1147, "torch-func-jacrev"]], "torch.func.vmap": [[1153, "torch-func-vmap"]], "torch.func.grad": [[1143, "torch-func-grad"]], "torch.histc": [[1172, "torch-histc"]], "torch.float_power": [[1128, "torch-float-power"]], "torch.heaviside": [[1171, "torch-heaviside"]], "torch.from_dlpack": [[1136, "torch-from-dlpack"]], "torch.func.replace_all_batch_norm_modules_": [[1150, "torch-func-replace-all-batch-norm-modules"]], "torch.ger": [[1158, "torch-ger"]], "torch.gather": [[1154, "torch-gather"]], "torch.func.stack_module_state": [[1151, "torch-func-stack-module-state"]], "torch.gradient": [[1165, "torch-gradient"]], "torch.flipud": [[1127, "torch-flipud"]], "torch.get_num_interop_threads": [[1162, "torch-get-num-interop-threads"]], "torch.greater": [[1166, "torch-greater"]], "torch.hann_window": [[1170, "torch-hann-window"]], "torch.fmin": [[1132, "torch-fmin"]], "torch.get_float32_matmul_precision": [[1161, "torch-get-float32-matmul-precision"]], "torch.fmax": [[1131, "torch-fmax"]], "torch.func.grad_and_value": [[1144, "torch-func-grad-and-value"]], "torch.func.jacfwd": [[1146, "torch-func-jacfwd"]], "torch.ge": [[1156, "torch-ge"]], "torch.hamming_window": [[1169, "torch-hamming-window"]], "torch.full_like": [[1140, "torch-full-like"]], "torch.func.functionalize": [[1142, "torch-func-functionalize"]], "torch.get_deterministic_debug_mode": [[1160, "torch-get-deterministic-debug-mode"]], "torch.histogram": [[1173, "torch-histogram"]], "torch.gcd": [[1155, "torch-gcd"]], "torch.histogramdd": [[1174, "torch-histogramdd"]], "torch.func.functional_call": [[1141, "torch-func-functional-call"]], "torch.frexp": [[1135, "torch-frexp"]], "torch.hsplit": [[1175, "torch-hsplit"]], "torch.frac": [[1134, "torch-frac"]], "torch.from_numpy": [[1137, "torch-from-numpy"]], "torch.fix": [[1123, "torch-fix"]], "torch.fft.irfft": [[1116, "torch-fft-irfft"]], "torch.fake_quantize_per_channel_affine": [[1099, "torch-fake-quantize-per-channel-affine"]], "torch.fft.ihfft": [[1113, "torch-fft-ihfft"]], "torch.flip": [[1125, "torch-flip"]], "torch.fft.hfftn": [[1108, "torch-fft-hfftn"]], "torch.empty_strided": [[1088, "torch-empty-strided"]], "torch.fft.ihfftn": [[1115, "torch-fft-ihfftn"]], "torch.fliplr": [[1126, "torch-fliplr"]], "torch.fft.hfft2": [[1107, "torch-fft-hfft2"]], "enable_grad": [[1089, "enable-grad"]], "torch.fft.rfftn": [[1122, "torch-fft-rfftn"]], "torch.flatten": [[1124, "torch-flatten"]], "torch.dot": [[1082, "torch-dot"]], "torch.fft.fftn": [[1104, "torch-fft-fftn"]], "torch.fft.irfftn": [[1118, "torch-fft-irfftn"]], "torch.erfc": [[1093, "torch-erfc"]], "torch.dist": [[1079, "torch-dist"]], "torch.fft.fftshift": [[1105, "torch-fft-fftshift"]], "torch.fft.rfft2": [[1120, "torch-fft-rfft2"]], "torch.fft.hfft": [[1106, "torch-fft-hfft"]], "torch.equal": [[1091, "torch-equal"]], "torch.fft.ihfft2": [[1114, "torch-fft-ihfft2"]], "torch.dstack": [[1084, "torch-dstack"]], "torch.divide": [[1081, "torch-divide"]], "torch.exp": [[1095, "torch-exp"]], "torch.empty_like": [[1087, "torch-empty-like"]], "torch.erfinv": [[1094, "torch-erfinv"]], "torch.expm1": [[1097, "torch-expm1"]], "torch.fft.ifft2": [[1110, "torch-fft-ifft2"]], "torch.fft.ifft": [[1109, "torch-fft-ifft"]], "torch.erf": [[1092, "torch-erf"]], "torch.fft.irfft2": [[1117, "torch-fft-irfft2"]], "torch.fft.ifftn": [[1111, "torch-fft-ifftn"]], "torch.eq": [[1090, "torch-eq"]], "torch.empty": [[1086, "torch-empty"]], "torch.fft.rfft": [[1119, "torch-fft-rfft"]], "torch.dsplit": [[1083, "torch-dsplit"]], "torch.exp2": [[1096, "torch-exp2"]], "torch.eye": [[1098, "torch-eye"]], "torch.digamma": [[1078, "torch-digamma"]], "torch.fft.rfftfreq": [[1121, "torch-fft-rfftfreq"]], "torch.fft.fft": [[1101, "torch-fft-fft"]], "torch.fft.fft2": [[1102, "torch-fft-fft2"]], "torch.fft.fftfreq": [[1103, "torch-fft-fftfreq"]], "torch.einsum": [[1085, "torch-einsum"]], "torch.fake_quantize_per_tensor_affine": [[1100, "torch-fake-quantize-per-tensor-affine"]], "torch.fft.ifftshift": [[1112, "torch-fft-ifftshift"]], "torch.div": [[1080, "torch-div"]], "torch.cuda.set_rng_state": [[1056, "torch-cuda-set-rng-state"]], "torch.cuda.utilization": [[1063, "torch-cuda-utilization"]], "torch.cuda.memory_usage": [[1044, "torch-cuda-memory-usage"]], "torch.cuda.set_stream": [[1058, "torch-cuda-set-stream"]], "torch.cumprod": [[1066, "torch-cumprod"]], "torch.cuda.seed": [[1052, "torch-cuda-seed"]], "torch.cuda.memory_cached": [[1039, "torch-cuda-memory-cached"]], "torch.cuda.power_draw": [[1048, "torch-cuda-power-draw"]], "torch.cuda.nvtx.range_push": [[1047, "torch-cuda-nvtx-range-push"]], "torch.cumsum": [[1067, "torch-cumsum"]], "torch.cuda.manual_seed": [[1032, "torch-cuda-manual-seed"]], "torch.cuda.memory_summary": [[1043, "torch-cuda-memory-summary"]], "torch.cuda.synchronize": [[1061, "torch-cuda-synchronize"]], "torch.det": [[1071, "torch-det"]], "torch.diag_embed": [[1073, "torch-diag-embed"]], "torch.cuda.reset_max_memory_cached": [[1050, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.seed_all": [[1053, "torch-cuda-seed-all"]], "torch.cuda.stream": [[1060, "torch-cuda-stream"]], "torch.cumulative_trapezoid": [[1068, "torch-cumulative-trapezoid"]], "torch.cuda.memory_stats": [[1042, "torch-cuda-memory-stats"]], "torch.cummin": [[1065, "torch-cummin"]], "torch.cuda.make_graphed_callables": [[1031, "torch-cuda-make-graphed-callables"]], "torch.cuda.memory_snapshot": [[1041, "torch-cuda-memory-snapshot"]], "torch.dequantize": [[1070, "torch-dequantize"]], "torch.cuda.max_memory_reserved": [[1036, "torch-cuda-max-memory-reserved"]], "torch.cuda.set_rng_state_all": [[1057, "torch-cuda-set-rng-state-all"]], "torch.cuda.reset_peak_memory_stats": [[1051, "torch-cuda-reset-peak-memory-stats"]], "torch.deg2rad": [[1069, "torch-deg2rad"]], "torch.cuda.mem_get_info": [[1037, "torch-cuda-mem-get-info"]], "torch.cuda.set_sync_debug_mode": [[1059, "torch-cuda-set-sync-debug-mode"]], "torch.cummax": [[1064, "torch-cummax"]], "torch.cuda.memory_allocated": [[1038, "torch-cuda-memory-allocated"]], "torch.cuda.max_memory_allocated": [[1034, "torch-cuda-max-memory-allocated"]], "torch.diagflat": [[1074, "torch-diagflat"]], "torch.cuda.nvtx.range_pop": [[1046, "torch-cuda-nvtx-range-pop"]], "torch.diagonal_scatter": [[1076, "torch-diagonal-scatter"]], "torch.cuda.list_gpu_processes": [[1030, "torch-cuda-list-gpu-processes"]], "torch.diag": [[1072, "torch-diag"]], "torch.cuda.set_per_process_memory_fraction": [[1055, "torch-cuda-set-per-process-memory-fraction"]], "torch.diff": [[1077, "torch-diff"]], "torch.cuda.max_memory_cached": [[1035, "torch-cuda-max-memory-cached"]], "torch.cuda.memory_reserved": [[1040, "torch-cuda-memory-reserved"]], "torch.cuda.manual_seed_all": [[1033, "torch-cuda-manual-seed-all"]], "torch.cuda.nvtx.mark": [[1045, "torch-cuda-nvtx-mark"]], "torch.cuda.set_device": [[1054, "torch-cuda-set-device"]], "torch.diagonal": [[1075, "torch-diagonal"]], "torch.cuda.reset_max_memory_allocated": [[1049, "torch-cuda-reset-max-memory-allocated"]], "torch.cuda.temperature": [[1062, "torch-cuda-temperature"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1029, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "DDP Communication Hooks": [[40, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[40, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[40, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[40, "default-communication-hooks"]], "PowerSGD Communication Hook": [[40, "powersgd-communication-hook"]], "PowerSGD State": [[40, "powersgd-state"]], "PowerSGD Hooks": [[40, "powersgd-hooks"]], "Debugging Communication Hooks": [[40, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[40, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[40, "acknowledgements"], [1928, "acknowledgements"]], "torch.cuda": [[35, "module-torch.cuda"]], "Random Number Generator": [[35, "random-number-generator"]], "Communication collectives": [[35, "communication-collectives"]], "Streams and events": [[35, "streams-and-events"]], "Graphs (beta)": [[35, "graphs-beta"]], "NVIDIA Tools Extension (NVTX)": [[35, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[35, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[35, "stream-sanitizer-prototype"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "Do you support Distributed code?": [[16, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[16, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[16, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[16, "torchdynamo-errors"]], "TorchInductor Errors": [[16, "torchinductor-errors"], [29, "torchinductor-errors"]], "Why is compilation slow?": [[16, "why-is-compilation-slow"]], "Dynamo Compilation": [[16, "dynamo-compilation"]], "Inductor Compilation": [[16, "inductor-compilation"]], "Excessive Recompilation": [[16, "excessive-recompilation"], [29, "excessive-recompilation"]], "Why are you recompiling in production?": [[16, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[16, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[16, "why-am-i-not-seeing-speedups"]], "Graph Breaks": [[16, "graph-breaks"], [29, "graph-breaks"]], "Identifying the cause of a graph break": [[16, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[16, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[16, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[16, "why-am-i-getting-ooms"]], "Optimizations": [[21, "optimizations"], [1947, "optimizations"]], "Troubleshooting and Gotchas": [[21, "troubleshooting-and-gotchas"]], "Learn more": [[21, "learn-more"]], "Custom Backends": [[12, "custom-backends"]], "Registering Custom Backends": [[12, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[12, "custom-backends-after-aotautograd"]], "Debugging Backend": [[12, "debugging-backend"]], "Speedy Backend": [[12, "speedy-backend"]], "Composable Backends": [[12, "composable-backends"]], "Getting Started": [[19, "getting-started"], [7, "getting-started"]], "Existing Backends": [[19, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[19, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "PyTorch 2.0 Performance Dashboard": [[24, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[24, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[24, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[24, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[24, "how-can-i-run-any-performance-test-locally"]], "torch.__config__": [[32, "module-torch.__config__"]], "TorchDynamo APIs to control fine-grained tracing": [[17, "torchdynamo-apis-to-control-fine-grained-tracing"], [17, "id1"]], "torch.func interaction with torch.compile": [[27, "torch-func-interaction-with-torch-compile"]], "Applying a torch.func transform to a torch.compile\u2019d function": [[27, "applying-a-torch-func-transform-to-a-torch-compile-d-function"]], "Doesn\u2019t work (PT 2.0): calling a torch.func transform inside of a torch.compile\u2019ed function": [[27, "doesn-t-work-pt-2-0-calling-a-torch-func-transform-inside-of-a-torch-compile-ed-function"]], "Workaround: use torch._dynamo.allow_in_graph": [[27, "workaround-use-torch-dynamo-allow-in-graph"]], "TorchDynamo Deeper Dive": [[13, "torchdynamo-deeper-dive"]], "What is a guard?": [[13, "what-is-a-guard"]], "What is Dynamo doing?": [[13, "what-is-dynamo-doing"]], "Fake tensor": [[15, "fake-tensor"]], "Related work": [[15, "related-work"]], "Overall architecture": [[15, "overall-architecture"], [14, "overall-architecture"]], "API: the important bits": [[15, "api-the-important-bits"]], "Details": [[15, "details"]], "About the tensor subclass": [[15, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[15, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[15, "how-does-the-converter-work"]], "Performance characteristics": [[15, "performance-characteristics"]], "Fake tensor of fake tensor?": [[15, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[15, "interaction-with-dynamic-shapes"]], "Other resources": [[15, "other-resources"]], "Dynamic shapes": [[14, "dynamic-shapes"]], "Abridged public API": [[14, "abridged-public-api"]], "The Guard Model": [[14, "the-guard-model"]], "Abridged internal API": [[14, "abridged-internal-api"]], "DimDynamic policy": [[14, "dimdynamic-policy"]], "Unbacked SymInts": [[14, "unbacked-symints"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [20, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Core Maintainers": [[9, "core-maintainers"], [10, "core-maintainers"]], "Lead Core Maintainer (BDFL)": [[9, "lead-core-maintainer-bdfl"], [10, "lead-core-maintainer-bdfl"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Probability distributions - torch.distributions": [[48, "module-torch.distributions"]], "Score function": [[48, "score-function"]], "Pathwise derivative": [[48, "pathwise-derivative"]], "Distribution": [[48, "distribution"]], "ExponentialFamily": [[48, "exponentialfamily"]], "Bernoulli": [[48, "bernoulli"]], "Beta": [[48, "beta"]], "Binomial": [[48, "binomial"]], "Categorical": [[48, "categorical"]], "Cauchy": [[48, "cauchy"]], "Chi2": [[48, "chi2"]], "ContinuousBernoulli": [[48, "continuousbernoulli"]], "Dirichlet": [[48, "dirichlet"]], "Exponential": [[48, "exponential"]], "FisherSnedecor": [[48, "fishersnedecor"]], "Gamma": [[48, "gamma"]], "Geometric": [[48, "geometric"]], "Gumbel": [[48, "gumbel"]], "HalfCauchy": [[48, "halfcauchy"]], "HalfNormal": [[48, "halfnormal"]], "Independent": [[48, "independent"]], "Kumaraswamy": [[48, "kumaraswamy"]], "LKJCholesky": [[48, "lkjcholesky"]], "Laplace": [[48, "laplace"]], "LogNormal": [[48, "lognormal"]], "LowRankMultivariateNormal": [[48, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[48, "mixturesamefamily"]], "Multinomial": [[48, "multinomial"]], "MultivariateNormal": [[48, "multivariatenormal"]], "NegativeBinomial": [[48, "negativebinomial"]], "Normal": [[48, "normal"]], "OneHotCategorical": [[48, "onehotcategorical"]], "Pareto": [[48, "pareto"]], "Poisson": [[48, "poisson"]], "RelaxedBernoulli": [[48, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[48, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[48, "relaxedonehotcategorical"]], "StudentT": [[48, "studentt"]], "TransformedDistribution": [[48, "transformeddistribution"]], "Uniform": [[48, "uniform"]], "VonMises": [[48, "vonmises"]], "Weibull": [[48, "weibull"]], "Wishart": [[48, "wishart"]], "KL Divergence": [[48, "module-torch.distributions.kl"]], "Transforms": [[48, "module-torch.distributions.transforms"]], "Constraint Registry": [[48, "module-torch.distributions.constraint_registry"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[44, "distributed-checkpoint-torch-distributed-checkpoint"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1928, "tutorials"], [1935, "tutorials"], [1927, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "Profiling to understand torch.compile performance": [[25, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[25, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[25, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[25, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[25, "understanding-compilation-time"]], "Finding graph breaks": [[25, "finding-graph-breaks"]], "Launch overhead": [[25, "launch-overhead"]], "Writing Graph Transformations on ATen IR": [[28, "writing-graph-transformations-on-aten-ir"]], "Passes": [[28, "passes"]], "One-to-One Pass": [[28, "one-to-one-pass"]], "One-to-X Pass": [[28, "one-to-x-pass"]], "One-to-None Pass": [[28, "one-to-none-pass"]], "Utilizing Local Information": [[28, "utilizing-local-information"]], "Subgraph Rewriter": [[28, "subgraph-rewriter"]], "Pass Manager": [[28, "pass-manager"]], "Partitioner": [[28, "partitioner"]], "Subgraph Matcher": [[28, "subgraph-matcher"]], "Capability Based Partitioner": [[28, "capability-based-partitioner"]], "C++": [[34, "c"]], "TorchScript C++ API": [[34, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[34, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[34, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[34, "authoring-models-in-c"]], "Packaging for C++": [[34, "packaging-for-c"]], "CUDA Stream Sanitizer": [[36, "cuda-stream-sanitizer"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Generic Join Context Manager": [[43, "generic-join-context-manager"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[47, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch.utils.data": [[39, "module-torch.utils.data"]], "Dataset Types": [[39, "dataset-types"]], "Map-style datasets": [[39, "map-style-datasets"]], "Iterable-style datasets": [[39, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[39, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[39, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[39, "automatic-batching-default"]], "Disable automatic batching": [[39, "disable-automatic-batching"]], "Working with collate_fn": [[39, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[39, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[39, "single-process-data-loading-default"]], "Multi-process data loading": [[39, "multi-process-data-loading"]], "Platform-specific behaviors": [[39, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[39, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[39, "memory-pinning"]], "Technical Overview": [[26, "technical-overview"]], "CUDAGraph Trees": [[11, "cudagraph-trees"]], "CUDAGraph Background": [[11, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[11, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[11, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[11, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[11, "cudagraph-trees-integration"]], "Limitations": [[11, "limitations"], [1923, "limitations"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "PyTorch 2.0 NNModule Support": [[23, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[23, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[23, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[23, "state-dict-hooks"]], "Distributed communication package - torch.distributed": [[42, "distributed-communication-package-torch-distributed"]], "Backends": [[42, "backends"], [1935, "backends"]], "Backends that come with PyTorch": [[42, "backends-that-come-with-pytorch"]], "Which backend to use?": [[42, "which-backend-to-use"]], "Common environment variables": [[42, "common-environment-variables"]], "Choosing the network interface to use": [[42, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[42, "other-nccl-environment-variables"]], "Basics": [[42, "basics"], [1935, "basics"]], "Initialization": [[42, "initialization"]], "TCP initialization": [[42, "tcp-initialization"]], "Shared file-system initialization": [[42, "shared-file-system-initialization"]], "Environment variable initialization": [[42, "environment-variable-initialization"]], "Post-Initialization": [[42, "post-initialization"]], "Distributed Key-Value Store": [[42, "distributed-key-value-store"]], "Groups": [[42, "groups"]], "Point-to-point communication": [[42, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[42, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[42, "collective-functions"]], "Profiling Collective Communication": [[42, "profiling-collective-communication"]], "Multi-GPU collective functions": [[42, "multi-gpu-collective-functions"]], "Third-party backends": [[42, "third-party-backends"]], "Launch utility": [[42, "launch-utility"]], "Spawn utility": [[42, "spawn-utility"]], "Debugging torch.distributed applications": [[42, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[42, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[42, "torch-distributed-debug"]], "Logging": [[42, "logging"]], "Distributed Optimizers": [[46, "distributed-optimizers"]], "PyTorch 2.0 Troubleshooting": [[29, "pytorch-2-0-troubleshooting"]], "Title": [[29, "id1"]], "Diagnosing Runtime Errors": [[29, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[29, "torchdynamo-errors"]], "Minifying TorchInductor Errors": [[29, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[29, "minifying-backend-compiler-errors"]], "Performance Profiling": [[29, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[29, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[29, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[29, "identifying-the-cause-of-a-graph-break"]], "Accuracy Debugging": [[29, "accuracy-debugging"]], "File an Issue": [[29, "file-an-issue"]], "torch::deploy has been moved to pytorch/multipy": [[41, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "torch.utils.cpp_extension": [[33, "torch-utils-cpp-extension"]], "torch.compiler": [[30, "module-torch.compiler"]], "torch.compiler API reference": [[30, "torch-compiler-api-reference"]], "Guards Overview": [[20, "guards-overview"]], "Caching and Guards Overview": [[20, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[20, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[20, "instructiontranslator"]], "Making Guards": [[20, "making-guards"]], "Torch Distributed Elastic": [[45, "torch-distributed-elastic"]], "Get Started": [[45, "get-started"]], "Documentation": [[45, "documentation"]], "API": [[45, null]], "Advanced": [[45, null]], "Plugins": [[45, null]], "Complex Numbers": [[31, "complex-numbers"]], "Creating Complex Tensors": [[31, "creating-complex-tensors"]], "Transition from the old representation": [[31, "transition-from-the-old-representation"]], "Accessing real and imag": [[31, "accessing-real-and-imag"]], "Angle and abs": [[31, "angle-and-abs"]], "Linear Algebra": [[31, "linear-algebra"]], "Serialization": [[31, "serialization"], [1947, "serialization"]], "Autograd": [[31, "autograd"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "TorchInductor GPU Profiling": [[22, "torchinductor-gpu-profiling"]], "torch.cuda.is_initialized": [[1027, "torch-cuda-is-initialized"]], "torch.cuda.current_blas_handle": [[1003, "torch-cuda-current-blas-handle"]], "torch.cuda.comm.broadcast": [[998, "torch-cuda-comm-broadcast"]], "device": [[1007, "device"]], "torch.cuda.device_count": [[1008, "torch-cuda-device-count"]], "torch.cuda.get_rng_state": [[1017, "torch-cuda-get-rng-state"]], "torch.cuda.comm.scatter": [[1002, "torch-cuda-comm-scatter"]], "torch.cuda.get_arch_list": [[1012, "torch-cuda-get-arch-list"]], "torch.cuda.get_rng_state_all": [[1018, "torch-cuda-get-rng-state-all"]], "torch.cuda.comm.reduce_add": [[1001, "torch-cuda-comm-reduce-add"]], "ExternalStream": [[989, "externalstream"]], "torch.cuda.change_current_allocator": [[996, "torch-cuda-change-current-allocator"]], "torch.cuda.is_current_stream_capturing": [[1026, "torch-cuda-is-current-stream-capturing"]], "torch.cov": [[984, "torch-cov"]], "CUDAGraph": [[986, "cudagraph"]], "torch.cuda.empty_cache": [[1010, "torch-cuda-empty-cache"]], "torch.cuda.get_device_name": [[1014, "torch-cuda-get-device-name"]], "torch.cuda.ipc_collect": [[1024, "torch-cuda-ipc-collect"]], "torch.cuda.get_sync_debug_mode": [[1019, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.can_device_access_peer": [[995, "torch-cuda-can-device-access-peer"]], "torch.cuda.get_allocator_backend": [[1011, "torch-cuda-get-allocator-backend"]], "CUDAPluggableAllocator": [[987, "cudapluggableallocator"]], "torch.cuda.initial_seed": [[1023, "torch-cuda-initial-seed"]], "Stream": [[991, "stream"]], "torch.cuda.clock_rate": [[997, "torch-cuda-clock-rate"]], "torch.cuda.graph_pool_handle": [[1021, "torch-cuda-graph-pool-handle"]], "Event": [[988, "event"]], "torch.cuda.current_device": [[1004, "torch-cuda-current-device"]], "torch.cosh": [[982, "torch-cosh"]], "torch.cuda.current_stream": [[1005, "torch-cuda-current-stream"]], "torch.cuda.get_device_properties": [[1015, "torch-cuda-get-device-properties"]], "torch.cuda.get_gencode_flags": [[1016, "torch-cuda-get-gencode-flags"]], "torch.cuda.jiterator._create_jit_fn": [[1028, "torch-cuda-jiterator-create-jit-fn"]], "graph": [[1020, "graph"]], "torch.cos": [[981, "torch-cos"]], "torch.cross": [[985, "torch-cross"]], "torch.cuda.is_available": [[1025, "torch-cuda-is-available"]], "torch.cuda.caching_allocator_delete": [[994, "torch-cuda-caching-allocator-delete"]], "StreamContext": [[992, "streamcontext"]], "torch.cuda.init": [[1022, "torch-cuda-init"]], "torch.count_nonzero": [[983, "torch-count-nonzero"]], "torch.cuda.default_stream": [[1006, "torch-cuda-default-stream"]], "torch.cuda.comm.broadcast_coalesced": [[999, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.comm.gather": [[1000, "torch-cuda-comm-gather"]], "torch.cuda.caching_allocator_alloc": [[993, "torch-cuda-caching-allocator-alloc"]], "torch.corrcoef": [[980, "torch-corrcoef"]], "torch.cuda.get_device_capability": [[1013, "torch-cuda-get-device-capability"]], "device_of": [[1009, "device-of"]], "torch.cuda.OutOfMemoryError": [[990, "torch-cuda-outofmemoryerror"]], "torch.compiler.allow_in_graph": [[968, "torch-compiler-allow-in-graph"]], "set_multithreading_enabled": [[933, "set-multithreading-enabled"]], "torch.bmm": [[946, "torch-bmm"]], "torch.chain_matmul": [[956, "torch-chain-matmul"]], "torch.bitwise_and": [[938, "torch-bitwise-and"]], "torch.cartesian_prod": [[952, "torch-cartesian-prod"]], "torch.can_cast": [[951, "torch-can-cast"]], "torch.broadcast_tensors": [[948, "torch-broadcast-tensors"]], "torch.blackman_window": [[944, "torch-blackman-window"]], "torch.bitwise_right_shift": [[942, "torch-bitwise-right-shift"]], "torch.bitwise_not": [[940, "torch-bitwise-not"]], "torch.combinations": [[965, "torch-combinations"]], "torch.broadcast_to": [[949, "torch-broadcast-to"]], "torch.compiler.list_backends": [[972, "torch-compiler-list-backends"]], "torch.cdist": [[954, "torch-cdist"]], "torch.ceil": [[955, "torch-ceil"]], "torch.clip": [[962, "torch-clip"]], "torch.bernoulli": [[936, "torch-bernoulli"]], "torch.compiler.disable": [[971, "torch-compiler-disable"]], "torch.column_stack": [[964, "torch-column-stack"]], "torch.copysign": [[979, "torch-copysign"]], "torch.bucketize": [[950, "torch-bucketize"]], "torch.cholesky_solve": [[959, "torch-cholesky-solve"]], "torch.baddbmm": [[934, "torch-baddbmm"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[931, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.compiled_with_cxx11_abi": [[967, "torch-compiled-with-cxx11-abi"]], "torch.bitwise_or": [[941, "torch-bitwise-or"]], "torch.chunk": [[960, "torch-chunk"]], "torch.conj_physical": [[978, "torch-conj-physical"]], "torch.concatenate": [[976, "torch-concatenate"]], "torch.bartlett_window": [[935, "torch-bartlett-window"]], "torch.bitwise_left_shift": [[939, "torch-bitwise-left-shift"]], "torch.compiler.compile": [[970, "torch-compiler-compile"]], "torch.autograd.profiler.profile.total_average": [[932, "torch-autograd-profiler-profile-total-average"]], "torch.cat": [[953, "torch-cat"]], "torch.conj": [[977, "torch-conj"]], "torch.cholesky_inverse": [[958, "torch-cholesky-inverse"]], "torch.clone": [[963, "torch-clone"]], "torch.compiler.assume_constant_result": [[969, "torch-compiler-assume-constant-result"]], "torch.bitwise_xor": [[943, "torch-bitwise-xor"]], "torch.cholesky": [[957, "torch-cholesky"]], "torch.clamp": [[961, "torch-clamp"]], "torch.complex": [[974, "torch-complex"]], "torch.concat": [[975, "torch-concat"]], "torch.block_diag": [[945, "torch-block-diag"]], "torch.compiler.reset": [[973, "torch-compiler-reset"]], "torch.broadcast_shapes": [[947, "torch-broadcast-shapes"]], "torch.bincount": [[937, "torch-bincount"]], "torch.arcsinh": [[882, "torch-arcsinh"]], "torch.atan": [[896, "torch-atan"]], "torch.autograd.forward_ad.make_dual": [[908, "torch-autograd-forward-ad-make-dual"]], "torch.as_strided": [[891, "torch-as-strided"]], "torch.autograd.functional.jacobian": [[916, "torch-autograd-functional-jacobian"]], "torch.autograd.forward_ad.unpack_dual": [[909, "torch-autograd-forward-ad-unpack-dual"]], "torch.asarray": [[893, "torch-asarray"]], "torch.argwhere": [[890, "torch-argwhere"]], "torch.arctanh": [[885, "torch-arctanh"]], "torch.autograd.functional.hvp": [[915, "torch-autograd-functional-hvp"]], "torch.autograd.graph.Node.register_prehook": [[927, "torch-autograd-graph-node-register-prehook"]], "torch.arctan": [[883, "torch-arctan"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[910, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.profiler.profile.key_averages": [[930, "torch-autograd-profiler-profile-key-averages"]], "torch.autograd.Function.jvp": [[904, "torch-autograd-function-jvp"]], "torch.autograd.gradgradcheck": [[922, "torch-autograd-gradgradcheck"]], "torch.argmax": [[887, "torch-argmax"]], "torch.asinh": [[895, "torch-asinh"]], "torch.autograd.profiler.load_nvprof": [[928, "torch-autograd-profiler-load-nvprof"]], "torch.asin": [[894, "torch-asin"]], "torch.atleast_1d": [[899, "torch-atleast-1d"]], "torch.autograd.functional.hessian": [[914, "torch-autograd-functional-hessian"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[911, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.atan2": [[897, "torch-atan2"]], "torch.autograd.Function.vmap": [[905, "torch-autograd-function-vmap"]], "torch.autograd.graph.Node.register_hook": [[926, "torch-autograd-graph-node-register-hook"]], "torch.autograd.functional.vhp": [[918, "torch-autograd-functional-vhp"]], "torch.atanh": [[898, "torch-atanh"]], "torch.autograd.graph.Node.next_functions": [[925, "torch-autograd-graph-node-next-functions"]], "torch.autograd.profiler.profile.export_chrome_trace": [[929, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.as_tensor": [[892, "torch-as-tensor"]], "torch.autograd.functional.jvp": [[917, "torch-autograd-functional-jvp"]], "torch.are_deterministic_algorithms_enabled": [[886, "torch-are-deterministic-algorithms-enabled"]], "torch.argsort": [[889, "torch-argsort"]], "torch.autograd.gradcheck": [[921, "torch-autograd-gradcheck"]], "torch.autograd.backward": [[906, "torch-autograd-backward"]], "torch.autograd.functional.vjp": [[919, "torch-autograd-functional-vjp"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[912, "torch-autograd-function-functionctx-save-for-backward"]], "torch.atleast_2d": [[900, "torch-atleast-2d"]], "torch.arctan2": [[884, "torch-arctan2"]], "torch.autograd.Function.backward": [[902, "torch-autograd-function-backward"]], "dual_level": [[907, "dual-level"]], "torch.autograd.graph.Node.metadata": [[923, "torch-autograd-graph-node-metadata"]], "torch.autograd.graph.Node.name": [[924, "torch-autograd-graph-node-name"]], "torch.autograd.grad": [[920, "torch-autograd-grad"]], "torch.argmin": [[888, "torch-argmin"]], "torch.atleast_3d": [[901, "torch-atleast-3d"]], "torch.autograd.Function.forward": [[903, "torch-autograd-function-forward"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[913, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.arange": [[878, "torch-arange"]], "torch.arccos": [[879, "torch-arccos"]], "QConfigMapping": [[867, "qconfigmapping"]], "default_weight_observer": [[848, "default-weight-observer"]], "default_observer": [[845, "default-observer"]], "get_observer_state_dict": [[849, "get-observer-state-dict"]], "MovingAverageMinMaxObserver": [[834, "movingaverageminmaxobserver"]], "ObserverBase": [[837, "observerbase"]], "PlaceholderObserver": [[839, "placeholderobserver"]], "default_weight_only_qconfig": [[862, "default-weight-only-qconfig"]], "propagate_qconfig": [[853, "propagate-qconfig"]], "QConfig": [[854, "qconfig"], [1930, "qconfig"]], "default_dynamic_qconfig": [[857, "default-dynamic-qconfig"]], "default_qconfig": [[861, "default-qconfig"]], "NoopObserver": [[836, "noopobserver"]], "default_per_channel_qconfig": [[858, "default-per-channel-qconfig"]], "swap_module": [[877, "swap-module"]], "MovingAveragePerChannelMinMaxObserver": [[835, "movingaverageperchannelminmaxobserver"]], "get_default_qat_qconfig_mapping": [[868, "get-default-qat-qconfig-mapping"]], "per_channel_dynamic_qconfig": [[866, "per-channel-dynamic-qconfig"]], "torch.arccosh": [[880, "torch-arccosh"]], "default_placeholder_observer": [[847, "default-placeholder-observer"]], "prepare_qat_fx": [[875, "prepare-qat-fx"]], "quantize_qat": [[876, "quantize-qat"]], "MinMaxObserver": [[833, "minmaxobserver"]], "prepare_fx": [[874, "prepare-fx"]], "PerChannelMinMaxObserver": [[838, "perchannelminmaxobserver"]], "quantize": [[870, "quantize"]], "float_qparams_weight_only_qconfig": [[865, "float-qparams-weight-only-qconfig"]], "default_qat_qconfig_v2": [[860, "default-qat-qconfig-v2"]], "default_activation_only_qconfig": [[855, "default-activation-only-qconfig"]], "convert_fx": [[872, "convert-fx"]], "default_qat_qconfig": [[859, "default-qat-qconfig"]], "default_histogram_observer": [[844, "default-histogram-observer"]], "prepare_qat": [[852, "prepare-qat"]], "float16_dynamic_qconfig": [[863, "float16-dynamic-qconfig"]], "fuse_fx": [[873, "fuse-fx"]], "RecordingObserver": [[840, "recordingobserver"]], "quantize_dynamic": [[871, "quantize-dynamic"]], "default_debug_observer": [[841, "default-debug-observer"]], "torch.arcsin": [[881, "torch-arcsin"]], "default_per_channel_weight_observer": [[846, "default-per-channel-weight-observer"]], "prepare": [[851, "prepare"]], "get_default_qconfig_mapping": [[869, "get-default-qconfig-mapping"]], "default_debug_qconfig": [[856, "default-debug-qconfig"]], "float16_static_qconfig": [[864, "float16-static-qconfig"]], "default_dynamic_quant_observer": [[842, "default-dynamic-quant-observer"]], "default_float_qparams_observer": [[843, "default-float-qparams-observer"]], "load_observer_state_dict": [[850, "load-observer-state-dict"]], "linear": [[794, "linear"]], "hardswish": [[790, "hardswish"]], "ObservationType": [[809, "observationtype"]], "hardsigmoid": [[789, "hardsigmoid"]], "upsample_bilinear": [[799, "upsample-bilinear"]], "max_pool1d": [[795, "max-pool1d"]], "FakeQuantize": [[812, "fakequantize"]], "default_per_channel_weight_fake_quant": [[821, "default-per-channel-weight-fake-quant"]], "default_histogram_fake_quant": [[820, "default-histogram-fake-quant"]], "default_fused_per_channel_wt_fake_quant": [[818, "default-fused-per-channel-wt-fake-quant"]], "max_pool2d": [[796, "max-pool2d"]], "default_eval_fn": [[811, "default-eval-fn"]], "DTypeConfig": [[807, "dtypeconfig"]], "default_fused_act_fake_quant": [[817, "default-fused-act-fake-quant"]], "threshold": [[797, "threshold"]], "DTypeWithConstraints": [[808, "dtypewithconstraints"]], "FusedMovingAvgObsFakeQuantize": [[815, "fusedmovingavgobsfakequantize"]], "StandaloneModuleConfigEntry": [[831, "standalonemoduleconfigentry"]], "clamp": [[784, "clamp"]], "ConvertCustomConfig": [[828, "convertcustomconfig"]], "FuseCustomConfig": [[829, "fusecustomconfig"]], "disable_observer": [[824, "disable-observer"]], "upsample_nearest": [[800, "upsample-nearest"]], "enable_observer": [[826, "enable-observer"]], "HistogramObserver": [[832, "histogramobserver"]], "QuantWrapper": [[803, "quantwrapper"]], "conv3d": [[787, "conv3d"]], "leaky_relu": [[793, "leaky-relu"]], "default_fused_wt_fake_quant": [[819, "default-fused-wt-fake-quant"]], "interpolate": [[792, "interpolate"]], "FixedQParamsFakeQuantize": [[814, "fixedqparamsfakequantize"]], "enable_fake_quant": [[825, "enable-fake-quant"]], "FakeQuantizeBase": [[813, "fakequantizebase"]], "hardtanh": [[791, "hardtanh"]], "BackendPatternConfig": [[806, "backendpatternconfig"]], "conv1d": [[785, "conv1d"]], "default_weight_fake_quant": [[822, "default-weight-fake-quant"]], "add_quant_dequant": [[804, "add-quant-dequant"]], "upsample": [[798, "upsample"]], "convert": [[810, "convert"]], "default_fake_quant": [[816, "default-fake-quant"]], "conv2d": [[786, "conv2d"]], "fuse_modules": [[827, "fuse-modules"]], "PrepareCustomConfig": [[830, "preparecustomconfig"]], "disable_fake_quant": [[823, "disable-fake-quant"]], "BackendConfig": [[805, "backendconfig"]], "elu": [[788, "elu"]], "QuantStub": [[802, "quantstub"]], "DeQuantStub": [[801, "dequantstub"]], "adaptive_avg_pool3d": [[780, "adaptive-avg-pool3d"]], "FXFloatFunctional": [[760, "fxfloatfunctional"]], "celu": [[783, "celu"]], "ConvReLU2d": [[739, "convrelu2d"], [722, "convrelu2d"], [731, "convrelu2d"]], "LinearReLU": [[741, "linearrelu"], [742, "linearrelu"], [733, "linearrelu"], [724, "linearrelu"]], "QFunctional": [[770, "qfunctional"]], "BNReLU2d": [[736, "bnrelu2d"], [713, "bnrelu2d"]], "ConvReLU1d": [[738, "convrelu1d"], [721, "convrelu1d"]], "update_bn_stats": [[735, "update-bn-stats"]], "avg_pool2d": [[781, "avg-pool2d"]], "FloatFunctional": [[761, "floatfunctional"]], "adaptive_avg_pool2d": [[779, "adaptive-avg-pool2d"]], "avg_pool3d": [[782, "avg-pool3d"]], "ConvReLU3d": [[740, "convrelu3d"], [723, "convrelu3d"], [732, "convrelu3d"]], "BNReLU3d": [[737, "bnrelu3d"], [714, "bnrelu3d"]], "torch.adjoint": [[705, "torch-adjoint"]], "torch.acosh": [[697, "torch-acosh"]], "torch._foreach_sqrt_": [[687, "torch-foreach-sqrt"]], "ConvBnReLU1d": [[728, "convbnrelu1d"], [718, "convbnrelu1d"]], "torch.angle": [[711, "torch-angle"]], "torch._foreach_trunc_": [[691, "torch-foreach-trunc"]], "torch.aminmax": [[710, "torch-aminmax"]], "torch.all": [[706, "torch-all"]], "torch.addmv": [[703, "torch-addmv"]], "torch.amin": [[709, "torch-amin"]], "torch._foreach_trunc": [[690, "torch-foreach-trunc"]], "torch.abs": [[694, "torch-abs"]], "torch.addbmm": [[699, "torch-addbmm"]], "torch._foreach_sqrt": [[686, "torch-foreach-sqrt"]], "freeze_bn_stats": [[734, "freeze-bn-stats"]], "torch.addmm": [[702, "torch-addmm"]], "ConvBn3d": [[717, "convbn3d"], [727, "convbn3d"]], "torch._foreach_tan": [[688, "torch-foreach-tan"]], "torch.add": [[698, "torch-add"]], "ConvBnReLU2d": [[719, "convbnrelu2d"], [729, "convbnrelu2d"]], "torch.amax": [[708, "torch-amax"]], "torch.acos": [[696, "torch-acos"]], "torch.addcdiv": [[700, "torch-addcdiv"]], "ConvBn2d": [[716, "convbn2d"], [726, "convbn2d"]], "ConvBnReLU3d": [[730, "convbnrelu3d"], [720, "convbnrelu3d"]], "torch._foreach_tan_": [[689, "torch-foreach-tan"]], "torch.addcmul": [[701, "torch-addcmul"]], "torch.allclose": [[707, "torch-allclose"]], "torch.addr": [[704, "torch-addr"]], "ConvBn1d": [[715, "convbn1d"], [725, "convbn1d"]], "torch._foreach_zero_": [[692, "torch-foreach-zero"]], "torch.any": [[712, "torch-any"]], "torch._logging.set_logs": [[693, "torch-logging-set-logs"]], "torch.absolute": [[695, "torch-absolute"]], "MPS backend": [[1917, "mps-backend"]], "ONNX supported TorchScript operators": [[1925, "onnx-supported-torchscript-operators"]], "Supported operators": [[1925, "supported-operators"]], "ONNX support for TorchScript operators": [[1925, "id1"]], "Unsupported operators": [[1925, "unsupported-operators"], [1925, "id2"]], "Tensor Views": [[1943, "tensor-views"]], "torch.ao.ns._numeric_suite_fx": [[1949, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1949, "torch-ao-ns-fx-utils"]], "Multiprocessing best practices": [[1918, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1918, "cuda-in-multiprocessing"]], "Best practices and tips": [[1918, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1918, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1918, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1918, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1918, "hogwild"]], "CPU in multiprocessing": [[1918, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1918, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1918, "avoid-cpu-oversubscription"]], "Features for large-scale deployments": [[1915, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1915, "fleet-wide-operator-profiling"]], "API usage logging": [[1915, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1915, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1915, "build-environment-considerations"]], "Common extension points": [[1915, "common-extension-points"]], "Numerical accuracy": [[1919, "numerical-accuracy"]], "Batched computations or slice computations": [[1919, "batched-computations-or-slice-computations"]], "Extremal values": [[1919, "extremal-values"]], "Linear algebra (torch.linalg)": [[1919, "linear-algebra-torch-linalg"]], "Non-finite values": [[1919, "non-finite-values"]], "Extremal values in linalg": [[1919, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1919, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1919, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1919, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "torch.signal": [[1938, "module-torch.signal"]], "torch.signal.windows": [[1938, "module-torch.signal.windows"]], "torch.optim": [[1926, "module-torch.optim"]], "How to use an optimizer": [[1926, "how-to-use-an-optimizer"]], "Constructing it": [[1926, "constructing-it"]], "Per-parameter options": [[1926, "per-parameter-options"]], "Taking an optimization step": [[1926, "taking-an-optimization-step"]], "optimizer.step()": [[1926, "optimizer-step"]], "optimizer.step(closure)": [[1926, "optimizer-step-closure"]], "Base class": [[1926, "base-class"]], "Algorithms": [[1926, "algorithms"]], "How to adjust learning rate": [[1926, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1926, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1926, "constructing-averaged-models"]], "Custom averaging strategies": [[1926, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1926, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1926, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1926, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1926, "putting-it-all-together-ema"]], "torch.onnx diagnostics": [[1924, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1924, "diagnostic-rules"]], "torch.ao.ns._numeric_suite": [[1948, "torch-ao-ns-numeric-suite"]], "Extending torch.func with autograd.Function": [[1911, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1911, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1911, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1911, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1911, "limitations-and-gotchas"]], "torch.vmap() Support": [[1911, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1911, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1911, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1911, "torch-func-jvp-support"]], "torch.Tensor": [[1945, "torch-tensor"]], "Data types": [[1945, "data-types"]], "Initializing and basic operations": [[1945, "initializing-and-basic-operations"]], "Tensor class reference": [[1945, "tensor-class-reference"]], "torch.random": [[1934, "module-torch.random"]], "torch.Storage": [[1941, "torch-storage"]], "Distributed Autograd Design": [[1936, "distributed-autograd-design"]], "Background": [[1936, "background"], [1937, "background"]], "Autograd recording during the forward pass": [[1936, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1936, "distributed-autograd-context"]], "Distributed Backward Pass": [[1936, "distributed-backward-pass"]], "Computing dependencies": [[1936, "computing-dependencies"]], "FAST mode algorithm": [[1936, "fast-mode-algorithm"]], "SMART mode algorithm": [[1936, "smart-mode-algorithm"]], "Distributed Optimizer": [[1936, "distributed-optimizer"], [1935, "distributed-optimizer"]], "Simple end to end example": [[1936, "simple-end-to-end-example"]], "Windows FAQ": [[1922, "windows-faq"]], "Building from source": [[1922, "building-from-source"]], "Include optional components": [[1922, "include-optional-components"]], "Speeding CUDA build for Windows": [[1922, "speeding-cuda-build-for-windows"]], "One key install script": [[1922, "one-key-install-script"]], "Extension": [[1922, "extension"]], "CFFI Extension": [[1922, "cffi-extension"]], "Cpp Extension": [[1922, "cpp-extension"]], "Installation": [[1922, "installation"]], "Package not found in win-32 channel.": [[1922, "package-not-found-in-win-32-channel"]], "Import error": [[1922, "import-error"]], "Usage (multiprocessing)": [[1922, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1922, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1922, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1922, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1922, "cuda-ipc-operations"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1912, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1912, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1912, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1912, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1912, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Quantization": [[1930, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1930, "introduction-to-quantization"]], "Quantization API Summary": [[1930, "quantization-api-summary"]], "Eager Mode Quantization": [[1930, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1930, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1930, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1930, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1930, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1930, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1930, "quantization-stack"]], "Quantized Model": [[1930, "quantized-model"]], "Quantized Tensor": [[1930, "quantized-tensor"]], "Quantize and Dequantize": [[1930, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1930, "quantized-operators-modules"]], "Quantized Engine": [[1930, "quantized-engine"]], "Quantization Flow": [[1930, "quantization-flow"]], "Observer and FakeQuantize": [[1930, "observer-and-fakequantize"]], "General Quantization Flow": [[1930, "general-quantization-flow"]], "Quantization Support Matrix": [[1930, "quantization-support-matrix"]], "Quantization Mode Support": [[1930, "quantization-mode-support"]], "Quantization Flow Support": [[1930, "quantization-flow-support"]], "Backend/Hardware Support": [[1930, "backend-hardware-support"]], "Note for native CPU backends": [[1930, "note-for-native-cpu-backends"]], "Operator Support": [[1930, "operator-support"]], "Quantization API Reference": [[1930, "quantization-api-reference"], [1933, "quantization-api-reference"]], "Quantization Backend Configuration": [[1930, "quantization-backend-configuration"], [1932, "quantization-backend-configuration"]], "Quantization Accuracy Debugging": [[1930, "quantization-accuracy-debugging"], [1931, "quantization-accuracy-debugging"]], "Quantization Customizations": [[1930, "quantization-customizations"]], "Quantization Custom Module API": [[1930, "quantization-custom-module-api"]], "Best Practices": [[1930, "best-practices"]], "Common Errors": [[1930, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1930, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1930, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1930, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1930, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.profiler": [[1929, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1929, "intel-instrumentation-and-tracing-technology-apis"]], "torch.testing": [[1946, "module-torch.testing"]], "Pipeline Parallelism": [[1928, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1928, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1928, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1928, "pipe-apis-in-pytorch"]], "Skip connections": [[1928, "skip-connections"]], "Distributed RPC Framework": [[1935, "distributed-rpc-framework"]], "RPC": [[1935, "rpc"]], "TensorPipe Backend": [[1935, "tensorpipe-backend"]], "RRef": [[1935, "rref"]], "More Information about RRef": [[1935, null]], "RemoteModule": [[1935, "remotemodule"]], "Distributed Autograd Framework": [[1935, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1935, null]], "Tensor Attributes": [[1942, "tensor-attributes"]], "torch.dtype": [[1942, "torch-dtype"]], "torch.device": [[1942, "torch-device"]], "torch.layout": [[1942, "torch-layout"]], "torch.memory_format": [[1942, "torch-memory-format"]], "Default values for native configurations": [[1932, "default-values-for-native-configurations"]], "A Simple Custom Module": [[1916, "a-simple-custom-module"]], "Modules as Building Blocks": [[1916, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1916, "neural-network-training-with-modules"]], "Module State": [[1916, "module-state"]], "Module Initialization": [[1916, "module-initialization"]], "Module Hooks": [[1916, "module-hooks"]], "Advanced Features": [[1916, "advanced-features"]], "Distributed Training": [[1916, "distributed-training"]], "Profiling Performance": [[1916, "profiling-performance"]], "Improving Performance with Quantization": [[1916, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1916, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1916, "parametrizations"]], "Transforming Modules with FX": [[1916, "transforming-modules-with-fx"]], "Data insensitive error": [[1931, "data-insensitive-error"]], "General tips": [[1931, "general-tips"]], "Int8 quantization tips": [[1931, "int8-quantization-tips"]], "Data sensitive error": [[1931, "data-sensitive-error"]], "Implementation error": [[1931, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1931, "numerical-debugging-tooling-prototype"]], "HIP (ROCm) semantics": [[1914, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1914, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1914, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1914, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1914, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1914, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1914, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1914, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1914, "enabling-kernel-asserts"]], "torch.ao.quantization": [[1933, "torch-ao-quantization"]], "Top level APIs": [[1933, "top-level-apis"]], "Preparing model for quantization": [[1933, "preparing-model-for-quantization"]], "Utility functions": [[1933, "utility-functions"], [1921, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1933, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1933, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1933, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1933, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1933, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1933, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1933, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1933, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1933, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1933, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1933, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1933, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1933, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1933, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1933, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1933, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1933, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1933, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1933, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1933, "quantized-dtypes-and-quantization-schemes"]], "torch.package": [[1927, "torch-package"]], "Packaging your first model": [[1927, "packaging-your-first-model"]], "How do I\u2026": [[1927, "how-do-i"]], "See what is inside a package?": [[1927, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1927, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1927, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1927, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1927, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1927, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1927, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1927, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1927, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1927, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1927, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1927, "package-a-torchscript-module"]], "Explanation": [[1927, "explanation"]], "torch.package Format Overview": [[1927, "torch-package-format-overview"]], "Framework files": [[1927, "framework-files"]], "User files": [[1927, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1927, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1927, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1927, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1927, "dependency-management"]], "intern": [[1927, "intern"]], "extern": [[1927, "extern"]], "mock": [[1927, "mock"]], "Refactoring": [[1927, "refactoring"]], "Patterns": [[1927, "patterns"]], "torch.package sharp edges": [[1927, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1927, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1927, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1927, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1927, "mangling"]], "Remote Reference Protocol": [[1937, "remote-reference-protocol"]], "Assumptions": [[1937, "assumptions"]], "RRef Lifetime": [[1937, "rref-lifetime"]], "Design Reasoning": [[1937, "design-reasoning"]], "Protocol Scenarios": [[1937, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1937, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1937, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1937, "owner-share-rref-with-user"]], "User Share RRef with User": [[1937, "user-share-rref-with-user"]], "torch.onnx": [[1923, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1923, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1923, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1923, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1923, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1923, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1923, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1923, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1923, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1923, "reads-gets"]], "Writes / Sets": [[1923, "writes-sets"]], "Adding support for operators": [[1923, "adding-support-for-operators"]], "ONNX exporter internals": [[1923, "onnx-exporter-internals"]], "ATen operators": [[1923, "aten-operators"]], "List of supported operators": [[1923, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1923, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1923, "torch-autograd-functions"]], "Static Symbolic Method": [[1923, "static-symbolic-method"]], "Inline Autograd Function": [[1923, "inline-autograd-function"]], "Custom operators": [[1923, "custom-operators"]], "ONNX-script functions": [[1923, "onnx-script-functions"]], "C++ Operators": [[1923, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1923, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1923, "contributing-developing"]], "Classes": [[1923, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1923, "preview-torch-onnx-torchdynamo-exporter"]], "torch.special": [[1940, "torch-special"]], "torch": [[1947, "module-torch"]], "Tensors": [[1947, "tensors"]], "Creation Ops": [[1947, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1947, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1947, "generators"]], "Random sampling": [[1947, "random-sampling"]], "In-place random sampling": [[1947, "in-place-random-sampling"]], "Quasi-random sampling": [[1947, "quasi-random-sampling"]], "Parallelism": [[1947, "parallelism"]], "Math operations": [[1947, "math-operations"]], "Pointwise Ops": [[1947, "pointwise-ops"]], "Reduction Ops": [[1947, "reduction-ops"]], "Comparison Ops": [[1947, "comparison-ops"]], "Spectral Ops": [[1947, "spectral-ops"]], "Other Operations": [[1947, "other-operations"]], "BLAS and LAPACK Operations": [[1947, "blas-and-lapack-operations"]], "Foreach Operations": [[1947, "foreach-operations"]], "Symbolic Numbers": [[1947, "symbolic-numbers"]], "Operator Tags": [[1947, "operator-tags"]], "Engine Configuration": [[1947, "engine-configuration"]], "torch.sparse": [[1939, "torch-sparse"]], "Why and when to use sparsity": [[1939, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1939, "functionality-overview"]], "Operator overview": [[1939, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1939, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1939, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1939, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1939, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1939, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1939, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1939, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1939, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1939, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1939, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1939, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1939, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1939, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1939, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1939, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1939, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1939, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1939, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1939, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1939, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1939, "linear-algebra-operations"]], "Tensor methods and sparse": [[1939, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1939, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1939, "other-functions"]], "Unary functions": [[1939, "unary-functions"]], "torch.overrides": [[1950, "torch-overrides"]], "torch.utils.tensorboard": [[1944, "module-torch.utils.tensorboard"]], "Type Info": [[1951, "type-info"]], "torch.finfo": [[1951, "torch-finfo"]], "torch.iinfo": [[1951, "torch-iinfo"]], "Reproducibility": [[1920, "reproducibility"]], "Controlling sources of randomness": [[1920, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1920, "pytorch-random-number-generator"]], "Python": [[1920, "python"]], "Random number generators in other libraries": [[1920, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1920, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1920, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1920, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1920, "cuda-rnn-and-lstm"]], "DataLoader": [[1920, "dataloader"]], "Gradcheck mechanics": [[1913, "gradcheck-mechanics"]], "Notations and background information": [[1913, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1913, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1913, "real-to-real-functions"]], "Default real input numerical evaluation": [[1913, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1913, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1913, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1913, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1913, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1913, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1913, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1913, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1913, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1913, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1913, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1913, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1913, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1913, "gradgradcheck-implementation"]], "Serialization semantics": [[1921, "serialization-semantics"]], "Table of Contents": [[1921, "table-of-contents"]], "Saving and loading tensors": [[1921, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1921, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1921, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1921, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1921, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1921, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1921, "torch-full-always-inferring-a-float-dtype"]], "torch._foreach_neg_": [[675, "torch-foreach-neg"]], "torch._foreach_sinh": [[684, "torch-foreach-sinh"]], "torch._foreach_atan_": [[645, "torch-foreach-atan"]], "torch._foreach_log2": [[671, "torch-foreach-log2"]], "torch._foreach_log_": [[673, "torch-foreach-log"]], "torch._foreach_erfc_": [[655, "torch-foreach-erfc"]], "torch._foreach_expm1": [[658, "torch-foreach-expm1"]], "torch._foreach_cosh_": [[651, "torch-foreach-cosh"]], "torch._foreach_acos_": [[641, "torch-foreach-acos"]], "torch._foreach_lgamma": [[664, "torch-foreach-lgamma"]], "torch._foreach_sigmoid": [[680, "torch-foreach-sigmoid"]], "torch._assert": [[637, "torch-assert"]], "torch._foreach_ceil_": [[647, "torch-foreach-ceil"]], "torch._foreach_acos": [[640, "torch-foreach-acos"]], "torch._foreach_erfc": [[654, "torch-foreach-erfc"]], "torch._foreach_sigmoid_": [[681, "torch-foreach-sigmoid"]], "torch._foreach_sin_": [[683, "torch-foreach-sin"]], "torch._foreach_round_": [[679, "torch-foreach-round"]], "torch._foreach_frac": [[662, "torch-foreach-frac"]], "torch._foreach_cos": [[648, "torch-foreach-cos"]], "torch._foreach_atan": [[644, "torch-foreach-atan"]], "torch._foreach_reciprocal_": [[677, "torch-foreach-reciprocal"]], "torch._foreach_floor": [[660, "torch-foreach-floor"]], "torch._foreach_erf_": [[653, "torch-foreach-erf"]], "torch._foreach_erf": [[652, "torch-foreach-erf"]], "torch._foreach_cosh": [[650, "torch-foreach-cosh"]], "torch._foreach_log10_": [[668, "torch-foreach-log10"]], "torch._foreach_lgamma_": [[665, "torch-foreach-lgamma"]], "torch._foreach_ceil": [[646, "torch-foreach-ceil"]], "torch._foreach_abs": [[638, "torch-foreach-abs"]], "torch._foreach_exp": [[656, "torch-foreach-exp"]], "torch._foreach_log1p": [[669, "torch-foreach-log1p"]], "torch._foreach_expm1_": [[659, "torch-foreach-expm1"]], "torch._foreach_asin_": [[643, "torch-foreach-asin"]], "torch._foreach_exp_": [[657, "torch-foreach-exp"]], "torch._foreach_log10": [[667, "torch-foreach-log10"]], "torch._foreach_abs_": [[639, "torch-foreach-abs"]], "torch._foreach_floor_": [[661, "torch-foreach-floor"]], "torch._foreach_log1p_": [[670, "torch-foreach-log1p"]], "torch._foreach_log2_": [[672, "torch-foreach-log2"]], "torch._foreach_neg": [[674, "torch-foreach-neg"]], "torch._foreach_sinh_": [[685, "torch-foreach-sinh"]], "torch._foreach_frac_": [[663, "torch-foreach-frac"]], "torch._foreach_sin": [[682, "torch-foreach-sin"]], "torch._foreach_asin": [[642, "torch-foreach-asin"]], "torch._foreach_reciprocal": [[676, "torch-foreach-reciprocal"]], "torch._foreach_log": [[666, "torch-foreach-log"]], "torch._foreach_cos_": [[649, "torch-foreach-cos"]], "torch._foreach_round": [[678, "torch-foreach-round"]], "torch.Tensor.true_divide": [[612, "torch-tensor-true-divide"]], "torch.Tensor.tile": [[592, "torch-tensor-tile"]], "torch.Tensor.to_dense": [[594, "torch-tensor-to-dense"]], "torch.Tensor.triangular_solve": [[607, "torch-tensor-triangular-solve"]], "torch.Tensor.unflatten": [[619, "torch-tensor-unflatten"]], "torch.Tensor.values": [[627, "torch-tensor-values"]], "torch.Tensor.triu_": [[611, "torch-tensor-triu"]], "torch.Tensor.vdot": [[629, "torch-tensor-vdot"]], "torch.Tensor.true_divide_": [[613, "torch-tensor-true-divide"]], "torch.Tensor.view_as": [[631, "torch-tensor-view-as"]], "torch.Tensor.var": [[628, "torch-tensor-var"]], "torch.Tensor.triu": [[610, "torch-tensor-triu"]], "torch.Tensor.tril": [[608, "torch-tensor-tril"]], "torch.Tensor.zero_": [[636, "torch-tensor-zero"]], "torch.Tensor.xlogy": [[634, "torch-tensor-xlogy"]], "torch.Tensor.to_sparse_bsr": [[598, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.uniform_": [[621, "torch-tensor-uniform"]], "torch.Tensor.type_as": [[617, "torch-tensor-type-as"]], "torch.Tensor.to_mkldnn": [[595, "torch-tensor-to-mkldnn"]], "torch.Tensor.tril_": [[609, "torch-tensor-tril"]], "torch.Tensor.to_sparse_csr": [[601, "torch-tensor-to-sparse-csr"]], "torch.Tensor.transpose": [[605, "torch-tensor-transpose"]], "torch.Tensor.unfold": [[620, "torch-tensor-unfold"]], "torch.Tensor.xlogy_": [[635, "torch-tensor-xlogy"]], "torch.Tensor.to_sparse_coo": [[599, "torch-tensor-to-sparse-coo"]], "torch.Tensor.topk": [[603, "torch-tensor-topk"]], "torch.Tensor.to_sparse_csc": [[600, "torch-tensor-to-sparse-csc"]], "torch.Tensor.tanh_": [[590, "torch-tensor-tanh"]], "torch.Tensor.unsqueeze_": [[625, "torch-tensor-unsqueeze"]], "torch.Tensor.trace": [[604, "torch-tensor-trace"]], "torch.Tensor.transpose_": [[606, "torch-tensor-transpose"]], "torch.Tensor.view": [[630, "torch-tensor-view"]], "torch.Tensor.type": [[616, "torch-tensor-type"]], "torch.Tensor.vsplit": [[632, "torch-tensor-vsplit"]], "torch.Tensor.trunc": [[614, "torch-tensor-trunc"]], "torch.Tensor.to_sparse_bsc": [[597, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.untyped_storage": [[626, "torch-tensor-untyped-storage"]], "torch.Tensor.tensor_split": [[591, "torch-tensor-tensor-split"]], "torch.Tensor.tan_": [[588, "torch-tensor-tan"]], "torch.Tensor.tanh": [[589, "torch-tensor-tanh"]], "torch.Tensor.unsqueeze": [[624, "torch-tensor-unsqueeze"]], "torch.Tensor.to": [[593, "torch-tensor-to"]], "torch.Tensor.unique_consecutive": [[623, "torch-tensor-unique-consecutive"]], "torch.Tensor.to_sparse": [[596, "torch-tensor-to-sparse"]], "torch.Tensor.where": [[633, "torch-tensor-where"]], "torch.Tensor.tolist": [[602, "torch-tensor-tolist"]], "torch.Tensor.trunc_": [[615, "torch-tensor-trunc"]], "torch.Tensor.unique": [[622, "torch-tensor-unique"]], "torch.Tensor.unbind": [[618, "torch-tensor-unbind"]], "torch.Tensor.slice_scatter": [[551, "torch-tensor-slice-scatter"]], "torch.Tensor.t_": [[584, "torch-tensor-t"]], "torch.Tensor.sinh": [[548, "torch-tensor-sinh"]], "torch.Tensor.sparse_dim": [[556, "torch-tensor-sparse-dim"]], "torch.Tensor.subtract": [[576, "torch-tensor-subtract"]], "torch.Tensor.sigmoid_": [[540, "torch-tensor-sigmoid"]], "torch.Tensor.sqrt": [[561, "torch-tensor-sqrt"]], "torch.Tensor.svd": [[580, "torch-tensor-svd"]], "torch.Tensor.t": [[583, "torch-tensor-t"]], "torch.Tensor.sum": [[578, "torch-tensor-sum"]], "torch.Tensor.sqrt_": [[562, "torch-tensor-sqrt"]], "torch.Tensor.slogdet": [[552, "torch-tensor-slogdet"]], "torch.Tensor.sinh_": [[549, "torch-tensor-sinh"]], "torch.Tensor.swapaxes": [[581, "torch-tensor-swapaxes"]], "torch.Tensor.signbit": [[543, "torch-tensor-signbit"]], "torch.Tensor.storage_type": [[572, "torch-tensor-storage-type"]], "torch.Tensor.split": [[560, "torch-tensor-split"]], "torch.Tensor.sigmoid": [[539, "torch-tensor-sigmoid"]], "torch.Tensor.softmax": [[554, "torch-tensor-softmax"]], "torch.Tensor.sin": [[544, "torch-tensor-sin"]], "torch.Tensor.square_": [[564, "torch-tensor-square"]], "torch.Tensor.sub": [[574, "torch-tensor-sub"]], "torch.Tensor.subtract_": [[577, "torch-tensor-subtract"]], "torch.Tensor.sinc_": [[547, "torch-tensor-sinc"]], "torch.Tensor.swapdims": [[582, "torch-tensor-swapdims"]], "torch.Tensor.tan": [[587, "torch-tensor-tan"]], "torch.Tensor.sort": [[555, "torch-tensor-sort"]], "torch.Tensor.std": [[568, "torch-tensor-std"]], "torch.Tensor.sparse_resize_and_clear_": [[559, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.storage_offset": [[571, "torch-tensor-storage-offset"]], "torch.Tensor.stft": [[569, "torch-tensor-stft"]], "torch.Tensor.sparse_resize_": [[558, "torch-tensor-sparse-resize"]], "torch.Tensor.sparse_mask": [[557, "torch-tensor-sparse-mask"]], "torch.Tensor.squeeze": [[565, "torch-tensor-squeeze"]], "torch.Tensor.sign": [[541, "torch-tensor-sign"]], "torch.Tensor.size": [[550, "torch-tensor-size"]], "torch.Tensor.take_along_dim": [[586, "torch-tensor-take-along-dim"]], "torch.Tensor.stride": [[573, "torch-tensor-stride"]], "torch.Tensor.sub_": [[575, "torch-tensor-sub"]], "torch.Tensor.sspaddmm": [[567, "torch-tensor-sspaddmm"]], "torch.Tensor.square": [[563, "torch-tensor-square"]], "torch.Tensor.squeeze_": [[566, "torch-tensor-squeeze"]], "torch.Tensor.sign_": [[542, "torch-tensor-sign"]], "torch.Tensor.sum_to_size": [[579, "torch-tensor-sum-to-size"]], "torch.Tensor.storage": [[570, "torch-tensor-storage"]], "torch.Tensor.sin_": [[545, "torch-tensor-sin"]], "torch.Tensor.smm": [[553, "torch-tensor-smm"]], "torch.Tensor.take": [[585, "torch-tensor-take"]], "torch.Tensor.sinc": [[546, "torch-tensor-sinc"]], "torch.Tensor.random_": [[496, "torch-tensor-random"]], "torch.Tensor.register_hook": [[502, "torch-tensor-register-hook"]], "torch.Tensor.renorm": [[505, "torch-tensor-renorm"]], "torch.Tensor.quantile": [[494, "torch-tensor-quantile"]], "torch.Tensor.renorm_": [[506, "torch-tensor-renorm"]], "torch.Tensor.resize_as_": [[514, "torch-tensor-resize-as"]], "torch.Tensor.scatter_reduce": [[530, "torch-tensor-scatter-reduce"]], "torch.Tensor.select": [[532, "torch-tensor-select"]], "torch.Tensor.requires_grad_": [[510, "torch-tensor-requires-grad"]], "torch.Tensor.resize_": [[513, "torch-tensor-resize"]], "torch.Tensor.roll": [[519, "torch-tensor-roll"]], "torch.Tensor.reciprocal_": [[500, "torch-tensor-reciprocal"]], "torch.Tensor.retain_grad": [[517, "torch-tensor-retain-grad"]], "torch.Tensor.select_scatter": [[533, "torch-tensor-select-scatter"]], "torch.Tensor.repeat": [[507, "torch-tensor-repeat"]], "torch.Tensor.scatter_add": [[528, "torch-tensor-scatter-add"]], "torch.Tensor.rot90": [[520, "torch-tensor-rot90"]], "torch.Tensor.scatter": [[526, "torch-tensor-scatter"]], "torch.Tensor.scatter_": [[527, "torch-tensor-scatter"]], "torch.Tensor.resolve_conj": [[515, "torch-tensor-resolve-conj"]], "torch.Tensor.reshape_as": [[512, "torch-tensor-reshape-as"]], "torch.Tensor.scatter_add_": [[529, "torch-tensor-scatter-add"]], "torch.Tensor.ravel": [[497, "torch-tensor-ravel"]], "torch.Tensor.repeat_interleave": [[508, "torch-tensor-repeat-interleave"]], "torch.Tensor.record_stream": [[501, "torch-tensor-record-stream"]], "torch.Tensor.share_memory_": [[537, "torch-tensor-share-memory"]], "torch.Tensor.short": [[538, "torch-tensor-short"]], "torch.Tensor.rsqrt": [[524, "torch-tensor-rsqrt"]], "torch.Tensor.q_scale": [[490, "torch-tensor-q-scale"]], "torch.Tensor.real": [[498, "torch-tensor-real"]], "torch.Tensor.retains_grad": [[518, "torch-tensor-retains-grad"]], "torch.Tensor.scatter_reduce_": [[531, "torch-tensor-scatter-reduce"]], "torch.Tensor.set_": [[534, "torch-tensor-set"]], "torch.Tensor.sgn_": [[536, "torch-tensor-sgn"]], "torch.Tensor.remainder_": [[504, "torch-tensor-remainder"]], "torch.Tensor.reciprocal": [[499, "torch-tensor-reciprocal"]], "torch.Tensor.reshape": [[511, "torch-tensor-reshape"]], "torch.Tensor.round_": [[522, "torch-tensor-round"]], "torch.Tensor.row_indices": [[523, "torch-tensor-row-indices"]], "torch.Tensor.requires_grad": [[509, "torch-tensor-requires-grad"]], "torch.Tensor.sgn": [[535, "torch-tensor-sgn"]], "torch.Tensor.resolve_neg": [[516, "torch-tensor-resolve-neg"]], "torch.Tensor.qr": [[492, "torch-tensor-qr"]], "torch.Tensor.remainder": [[503, "torch-tensor-remainder"]], "torch.Tensor.rsqrt_": [[525, "torch-tensor-rsqrt"]], "torch.Tensor.round": [[521, "torch-tensor-round"]], "torch.Tensor.q_zero_point": [[491, "torch-tensor-q-zero-point"]], "torch.Tensor.qscheme": [[493, "torch-tensor-qscheme"]], "torch.Tensor.rad2deg": [[495, "torch-tensor-rad2deg"]], "torch.Tensor.narrow_copy": [[449, "torch-tensor-narrow-copy"]], "torch.Tensor.ne": [[453, "torch-tensor-ne"]], "torch.Tensor.ne_": [[454, "torch-tensor-ne"]], "torch.Tensor.outer": [[476, "torch-tensor-outer"]], "torch.Tensor.nan_to_num_": [[443, "torch-tensor-nan-to-num"]], "torch.Tensor.new_full": [[461, "torch-tensor-new-full"]], "torch.Tensor.q_per_channel_zero_points": [[489, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.numpy": [[473, "torch-tensor-numpy"]], "torch.Tensor.negative": [[457, "torch-tensor-negative"]], "torch.Tensor.new_ones": [[462, "torch-tensor-new-ones"]], "torch.Tensor.mvlgamma_": [[441, "torch-tensor-mvlgamma"]], "torch.Tensor.narrow": [[448, "torch-tensor-narrow"]], "torch.Tensor.nbytes": [[450, "torch-tensor-nbytes"]], "torch.Tensor.nextafter_": [[466, "torch-tensor-nextafter"]], "torch.Tensor.pin_memory": [[478, "torch-tensor-pin-memory"]], "torch.Tensor.negative_": [[458, "torch-tensor-negative"]], "torch.Tensor.polygamma_": [[481, "torch-tensor-polygamma"]], "torch.Tensor.nelement": [[459, "torch-tensor-nelement"]], "torch.Tensor.ormqr": [[475, "torch-tensor-ormqr"]], "torch.Tensor.norm": [[468, "torch-tensor-norm"]], "torch.Tensor.neg": [[455, "torch-tensor-neg"]], "torch.Tensor.normal_": [[469, "torch-tensor-normal"]], "torch.Tensor.not_equal": [[470, "torch-tensor-not-equal"]], "torch.Tensor.put_": [[486, "torch-tensor-put"]], "torch.Tensor.new_empty": [[460, "torch-tensor-new-empty"]], "torch.Tensor.positive": [[482, "torch-tensor-positive"]], "torch.Tensor.nextafter": [[465, "torch-tensor-nextafter"]], "torch.Tensor.nanquantile": [[446, "torch-tensor-nanquantile"]], "torch.Tensor.new_tensor": [[463, "torch-tensor-new-tensor"]], "torch.Tensor.nonzero": [[467, "torch-tensor-nonzero"]], "torch.Tensor.pow_": [[484, "torch-tensor-pow"]], "torch.Tensor.ndimension": [[452, "torch-tensor-ndimension"]], "torch.Tensor.nanmean": [[444, "torch-tensor-nanmean"]], "torch.Tensor.nansum": [[447, "torch-tensor-nansum"]], "torch.Tensor.prod": [[485, "torch-tensor-prod"]], "torch.Tensor.permute": [[477, "torch-tensor-permute"]], "torch.Tensor.orgqr": [[474, "torch-tensor-orgqr"]], "torch.Tensor.pow": [[483, "torch-tensor-pow"]], "torch.Tensor.nan_to_num": [[442, "torch-tensor-nan-to-num"]], "torch.Tensor.neg_": [[456, "torch-tensor-neg"]], "torch.Tensor.pinverse": [[479, "torch-tensor-pinverse"]], "torch.Tensor.ndim": [[451, "torch-tensor-ndim"]], "torch.Tensor.q_per_channel_axis": [[487, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.new_zeros": [[464, "torch-tensor-new-zeros"]], "torch.Tensor.not_equal_": [[471, "torch-tensor-not-equal"]], "torch.Tensor.polygamma": [[480, "torch-tensor-polygamma"]], "torch.Tensor.nanmedian": [[445, "torch-tensor-nanmedian"]], "torch.Tensor.q_per_channel_scales": [[488, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.numel": [[472, "torch-tensor-numel"]], "torch.Tensor.matrix_exp": [[421, "torch-tensor-matrix-exp"]], "torch.Tensor.mm": [[429, "torch-tensor-mm"]], "torch.Tensor.lu": [[412, "torch-tensor-lu"]], "torch.Tensor.masked_scatter": [[417, "torch-tensor-masked-scatter"]], "torch.Tensor.minimum": [[428, "torch-tensor-minimum"]], "torch.Tensor.mean": [[425, "torch-tensor-mean"]], "torch.Tensor.matrix_power": [[422, "torch-tensor-matrix-power"]], "torch.Tensor.logical_xor": [[404, "torch-tensor-logical-xor"]], "torch.Tensor.mul": [[434, "torch-tensor-mul"]], "torch.Tensor.matmul": [[420, "torch-tensor-matmul"]], "torch.Tensor.multiply": [[437, "torch-tensor-multiply"]], "torch.Tensor.map_": [[414, "torch-tensor-map"]], "torch.Tensor.mv": [[439, "torch-tensor-mv"]], "torch.Tensor.logical_or_": [[403, "torch-tensor-logical-or"]], "torch.Tensor.moveaxis": [[431, "torch-tensor-moveaxis"]], "torch.Tensor.logical_not_": [[401, "torch-tensor-logical-not"]], "torch.Tensor.logdet": [[397, "torch-tensor-logdet"]], "torch.Tensor.lt_": [[411, "torch-tensor-lt"]], "torch.Tensor.logit_": [[407, "torch-tensor-logit"]], "torch.Tensor.masked_fill_": [[416, "torch-tensor-masked-fill"]], "torch.Tensor.logaddexp2": [[395, "torch-tensor-logaddexp2"]], "torch.Tensor.median": [[426, "torch-tensor-median"]], "torch.Tensor.mul_": [[435, "torch-tensor-mul"]], "torch.Tensor.logcumsumexp": [[396, "torch-tensor-logcumsumexp"]], "torch.Tensor.logaddexp": [[394, "torch-tensor-logaddexp"]], "torch.Tensor.mode": [[430, "torch-tensor-mode"]], "torch.Tensor.min": [[427, "torch-tensor-min"]], "torch.Tensor.log_": [[392, "torch-tensor-log"]], "torch.Tensor.max": [[423, "torch-tensor-max"]], "torch.Tensor.msort": [[433, "torch-tensor-msort"]], "torch.Tensor.lt": [[410, "torch-tensor-lt"]], "torch.Tensor.maximum": [[424, "torch-tensor-maximum"]], "torch.Tensor.logit": [[406, "torch-tensor-logit"]], "torch.Tensor.lu_solve": [[413, "torch-tensor-lu-solve"]], "torch.Tensor.mvlgamma": [[440, "torch-tensor-mvlgamma"]], "torch.Tensor.multinomial": [[436, "torch-tensor-multinomial"]], "torch.Tensor.masked_fill": [[415, "torch-tensor-masked-fill"]], "torch.Tensor.multiply_": [[438, "torch-tensor-multiply"]], "torch.Tensor.movedim": [[432, "torch-tensor-movedim"]], "torch.Tensor.logical_not": [[400, "torch-tensor-logical-not"]], "torch.Tensor.masked_scatter_": [[418, "torch-tensor-masked-scatter"]], "torch.Tensor.logical_and": [[398, "torch-tensor-logical-and"]], "torch.Tensor.logical_or": [[402, "torch-tensor-logical-or"]], "torch.Tensor.logical_xor_": [[405, "torch-tensor-logical-xor"]], "torch.Tensor.log_normal_": [[393, "torch-tensor-log-normal"]], "torch.Tensor.masked_select": [[419, "torch-tensor-masked-select"]], "torch.Tensor.logsumexp": [[408, "torch-tensor-logsumexp"]], "torch.Tensor.long": [[409, "torch-tensor-long"]], "torch.Tensor.logical_and_": [[399, "torch-tensor-logical-and"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [30, "module-torch.compiler"], [32, "module-torch.__config__"], [35, "module-torch.cuda"], [36, "module-torch.cuda._sanitizer"], [39, "module-torch.utils.data"], [39, "module-torch.utils.data.datapipes"], [39, "module-torch.utils.data.datapipes.dataframe"], [39, "module-torch.utils.data.datapipes.iter"], [39, "module-torch.utils.data.datapipes.map"], [39, "module-torch.utils.data.datapipes.utils"], [42, "module-torch.distributed"], [42, "module-torch.distributed.algorithms"], [42, "module-torch.distributed.algorithms.ddp_comm_hooks"], [42, "module-torch.distributed.algorithms.model_averaging"], [42, "module-torch.distributed.elastic"], [42, "module-torch.distributed.elastic.utils"], [42, "module-torch.distributed.elastic.utils.data"], [42, "module-torch.distributed.launch"], [42, "module-torch.distributed.launcher"], [42, "module-torch.distributed.nn"], [42, "module-torch.distributed.nn.api"], [42, "module-torch.distributed.nn.jit"], [42, "module-torch.distributed.nn.jit.templates"], [42, "module-torch.distributed.pipeline"], [42, "module-torch.distributed.pipeline.sync"], [42, "module-torch.distributed.pipeline.sync.skip"], [42, "module-torch.distributed.tensor"], [44, "module-torch.distributed.checkpoint"], [46, "module-torch.distributed.optim"], [47, "module-torch.distributed.tensor.parallel"], [48, "module-torch.distributions"], [48, "module-torch.distributions.constraint_registry"], [48, "module-torch.distributions.constraints"], [48, "module-torch.distributions.kl"], [48, "module-torch.distributions.transforms"], [50, "module-torch.distributed.elastic.agent"], [50, "module-torch.distributed.elastic.agent.server"], [52, "module-torch.distributed.elastic.multiprocessing.errors"], [53, "module-torch.distributed.elastic.events"], [56, "module-torch.distributed.elastic.metrics"], [57, "module-torch.distributed.elastic.multiprocessing"], [59, "module-torch.distributed.elastic.rendezvous"], [59, "module-torch.distributed.elastic.rendezvous.registry"], [60, "module-torch.distributed.run"], [61, "module-torch.distributed.elastic.timer"], [64, "module-torch.fft"], [65, "module-torch.distributed.fsdp"], [67, "module-torch.func"], [72, "module-torch.futures"], [73, "module-torch.fx"], [73, "module-torch.fx.experimental"], [73, "module-torch.fx.experimental.migrate_gradual_types"], [73, "module-torch.fx.experimental.unification"], [73, "module-torch.fx.experimental.unification.multipledispatch"], [73, "module-torch.fx.passes"], [73, "module-torch.fx.passes.backends"], [73, "module-torch.fx.passes.dialect"], [73, "module-torch.fx.passes.dialect.common"], [73, "module-torch.fx.passes.infra"], [73, "module-torch.fx.passes.tests"], [73, "module-torch.fx.passes.utils"], [1879, "module-torch.hub"], [1882, "module-torch.jit"], [1882, "module-torch.jit.mobile"], [1883, "module-torch.jit.supported_ops"], [1887, "module-torch.jit.unsupported_tensor_ops"], [1888, "module-torch.utils.jit"], [1890, "module-torch.linalg"], [1891, "module-torch._logging"], [1892, "module-torch.masked"], [1892, "module-torch.masked.maskedtensor"], [1894, "module-torch.utils.model_zoo"], [1895, "module-torch.monitor"], [1896, "module-torch.mps"], [1897, "module-torch.multiprocessing"], [1900, "module-torch.nested"], [1901, "module-torch.nn"], [1901, "module-torch.nn.backends"], [1901, "module-torch.nn.modules"], [1901, "module-torch.nn.parallel"], [1901, "module-torch.nn.utils"], [1901, "module-torch.nn.utils.stateless"], [1923, "module-torch.onnx"], [1924, "module-torch.onnx._internal.diagnostics"], [1926, "module-torch.optim"], [1927, "module-torch.package"], [1927, "module-torch.package.analyze"], [1929, "module-torch.profiler"], [1930, "module-torch.ao"], [1930, "module-torch.ao.nn"], [1930, "module-torch.ao.nn.quantizable"], [1930, "module-torch.ao.nn.quantizable.modules"], [1930, "module-torch.ao.nn.quantized"], [1930, "module-torch.ao.nn.quantized.reference"], [1930, "module-torch.ao.nn.quantized.reference.modules"], [1930, "module-torch.ao.nn.sparse"], [1930, "module-torch.ao.nn.sparse.quantized"], [1930, "module-torch.ao.nn.sparse.quantized.dynamic"], [1930, "module-torch.ao.ns"], [1930, "module-torch.ao.ns.fx"], [1930, "module-torch.ao.pruning"], [1930, "module-torch.ao.pruning.scheduler"], [1930, "module-torch.ao.pruning.sparsifier"], [1930, "module-torch.ao.quantization"], [1930, "module-torch.ao.quantization.backend_config"], [1930, "module-torch.ao.quantization.fx"], [1933, "module-torch.ao.nn.intrinsic"], [1933, "module-torch.ao.nn.intrinsic.modules"], [1933, "module-torch.ao.nn.intrinsic.qat"], [1933, "module-torch.ao.nn.intrinsic.qat.modules"], [1933, "module-torch.ao.nn.intrinsic.quantized"], [1933, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1933, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1933, "module-torch.ao.nn.intrinsic.quantized.modules"], [1933, "module-torch.ao.nn.qat"], [1933, "module-torch.ao.nn.qat.dynamic"], [1933, "module-torch.ao.nn.qat.dynamic.modules"], [1933, "module-torch.ao.nn.qat.modules"], [1933, "module-torch.ao.nn.quantized.dynamic"], [1933, "module-torch.ao.nn.quantized.dynamic.modules"], [1933, "module-torch.ao.nn.quantized.functional"], [1933, "module-torch.ao.nn.quantized.modules"], [1933, "module-torch.nn.intrinsic"], [1933, "module-torch.nn.intrinsic.modules"], [1933, "module-torch.nn.intrinsic.qat"], [1933, "module-torch.nn.intrinsic.qat.modules"], [1933, "module-torch.nn.intrinsic.quantized"], [1933, "module-torch.nn.intrinsic.quantized.dynamic"], [1933, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1933, "module-torch.nn.intrinsic.quantized.modules"], [1933, "module-torch.nn.qat"], [1933, "module-torch.nn.qat.dynamic"], [1933, "module-torch.nn.qat.dynamic.modules"], [1933, "module-torch.nn.qat.modules"], [1933, "module-torch.nn.quantizable"], [1933, "module-torch.nn.quantizable.modules"], [1933, "module-torch.nn.quantized"], [1933, "module-torch.nn.quantized.dynamic"], [1933, "module-torch.nn.quantized.dynamic.modules"], [1933, "module-torch.nn.quantized.modules"], [1933, "module-torch.quantization"], [1933, "module-torch.quantization.fx"], [1934, "module-torch.random"], [1935, "module-torch.distributed.autograd"], [1935, "module-torch.distributed.rpc"], [1938, "module-torch.signal"], [1938, "module-torch.signal.windows"], [1939, "module-torch.sparse"], [1940, "module-torch.special"], [1944, "module-torch.utils.tensorboard"], [1946, "module-torch.testing"], [1947, "module-torch"], [1947, "module-torch.autograd"], [1947, "module-torch.contrib"], [1947, "module-torch.utils"], [1947, "module-torch.utils.backcompat"], [1947, "module-torch.utils.hipify"], [1947, "module-torch.utils.model_dump"], [1947, "module-torch.utils.viz"], [1948, "module-torch.ao.ns._numeric_suite"], [1949, "module-torch.ao.ns._numeric_suite_fx"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu": [[0, "module-torch.cpu"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"], [1947, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[18, "torch.compile"], [966, "torch.compile"]], "torch.compiler": [[30, "module-torch.compiler"]], "parallel_info() (in module torch.__config__)": [[32, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[32, "torch.__config__.show"]], "torch.__config__": [[32, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[35, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[36, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[36, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[39, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[39, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[39, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[39, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[39, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[39, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[39, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[39, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[39, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[39, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[39, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[39, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[39, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[39, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[39, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[39, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[39, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[39, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[39, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[39, "torch.utils.data.random_split"]], "torch.utils.data": [[39, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[39, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[39, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[39, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[39, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[39, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[40, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[40, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[40, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[42, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[42, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[42, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[42, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[42, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[42, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[42, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[42, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[42, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[42, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[42, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[42, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[42, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[42, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[42, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[42, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[42, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[42, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[42, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[42, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[42, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[42, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[42, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[42, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[42, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[42, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[42, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[42, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[42, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[42, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[42, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[42, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[42, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[42, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[42, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[42, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[42, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[42, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[42, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[42, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[42, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[42, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[42, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[42, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[42, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[42, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[42, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[42, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[42, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[42, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[42, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[42, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[42, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[42, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[42, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[42, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[42, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[42, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[42, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[42, "module-torch.distributed"]], "torch.distributed.algorithms": [[42, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[42, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[42, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[42, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[42, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[42, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[42, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[42, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[42, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[42, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[42, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[42, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[42, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[42, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[42, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[42, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[42, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[43, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[43, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[43, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[43, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[43, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[43, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[43, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[43, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[43, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[44, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[44, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[44, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[44, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[44, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[44, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[44, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[44, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[44, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[44, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[46, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[46, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[46, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[46, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[46, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[47, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[47, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[47, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[47, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[47, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[48, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[48, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[48, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[48, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[48, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[48, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[48, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[48, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[48, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[48, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[48, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[48, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[48, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[48, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[48, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[48, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[48, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[48, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[48, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[48, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[48, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[48, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[48, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[48, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[48, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[48, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[48, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[48, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[48, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[48, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[48, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[48, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[48, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[48, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[48, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[48, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[48, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[48, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[48, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[48, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[48, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[48, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[48, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[48, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[48, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[48, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[48, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[48, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[48, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[48, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[48, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[48, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[48, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[48, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[48, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[48, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[48, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[48, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[48, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[48, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[48, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[48, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[48, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[48, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[48, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[48, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[48, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[48, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[48, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[48, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[48, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[48, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[48, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[48, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[48, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[48, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[48, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[48, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[48, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[48, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[48, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[48, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[48, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[48, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[48, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[48, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[48, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[48, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[48, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[48, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[48, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[48, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[48, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[48, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[48, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[48, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[48, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[48, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[48, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[48, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[48, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[48, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[48, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[48, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[48, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[48, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[48, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[48, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[48, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[48, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[48, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[48, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[48, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[48, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[48, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[48, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[48, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[48, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[48, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[48, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[48, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[48, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[48, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[48, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[48, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[48, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[48, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[48, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[48, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[48, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[48, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[48, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[48, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[48, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[48, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[48, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[48, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[48, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[48, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[48, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[48, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[48, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[48, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[48, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[48, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[48, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[48, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[48, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[48, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[48, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[48, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[48, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[48, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[48, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[48, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[48, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[48, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[48, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[48, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[48, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[48, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[48, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[48, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[48, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[48, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[48, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[48, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[48, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[48, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[48, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[48, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[48, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[48, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[48, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[48, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[48, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[48, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[48, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[48, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[48, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[48, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[48, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[48, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[48, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[48, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[48, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[48, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[48, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[48, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[48, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[48, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[48, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[48, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[48, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[48, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[48, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[49, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[49, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[50, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[50, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[50, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[50, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[50, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[50, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[50, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[50, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[50, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[50, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[52, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[52, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[53, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[53, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[53, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[53, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[53, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[53, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[56, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[56, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[56, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[56, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[56, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[56, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[56, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[57, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[57, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[57, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[59, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[59, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[59, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[59, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[59, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[59, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[59, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[60, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[61, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[61, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[61, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[61, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[61, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[61, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[61, "module-torch.distributed.elastic.timer"]], "torch.fft": [[64, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[65, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[65, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[65, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[65, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[65, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[65, "module-torch.distributed.fsdp"]], "torch.func": [[67, "module-torch.func"]], "future (class in torch.futures)": [[72, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[72, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[72, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[72, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[72, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[72, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[72, "torch.futures.Future.then"]], "torch.futures": [[72, "module-torch.futures"]], "value() (torch.futures.future method)": [[72, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[72, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[72, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[73, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[73, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[73, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[73, "torch.fx.Node"]], "proxy (class in torch.fx)": [[73, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[73, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[73, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[73, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[73, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[73, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[73, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[73, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[73, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[73, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[73, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[73, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[73, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[73, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[73, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[73, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[73, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[73, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[73, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[73, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[73, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[73, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[73, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[73, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[73, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[73, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[73, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[73, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[73, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[73, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[73, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[73, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[73, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[73, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[73, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[73, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[73, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[73, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[73, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[73, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[73, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[73, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[73, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[73, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[73, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[73, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[73, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[73, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[73, "module-torch.fx"]], "torch.fx.experimental": [[73, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[73, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[73, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[73, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[73, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[73, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[73, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[73, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[73, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[73, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[73, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[73, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[73, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[73, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[73, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[73, "torch.fx.wrap"]], "generator (class in torch)": [[105, "torch.Generator"]], "device (torch.generator attribute)": [[105, "torch.Generator.device"]], "get_state() (torch.generator method)": [[105, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[105, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[105, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[105, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[105, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[106, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[107, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[108, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[109, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[110, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[111, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[112, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[113, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[114, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[115, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[116, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[117, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[118, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[119, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[120, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[121, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[122, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[123, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[124, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[125, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[126, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[127, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[128, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[129, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[130, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[131, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[132, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[133, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[134, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[135, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[136, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[137, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[138, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[139, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[140, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[141, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[142, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[143, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[144, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[145, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[146, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[147, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[148, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[149, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[150, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[151, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[152, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[153, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[154, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[155, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[156, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[157, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[158, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[159, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[160, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[161, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[162, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[163, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[164, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[165, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[166, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[167, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[168, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[169, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[170, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[171, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[172, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[173, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[174, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[175, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[176, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[177, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[178, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[179, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[180, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[181, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[182, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[183, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[184, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[185, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[186, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[187, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[188, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[189, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[190, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[191, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[192, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[193, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[194, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[195, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[196, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[197, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[198, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[199, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[200, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[201, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[202, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[203, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[204, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[205, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[206, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[207, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[208, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[209, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[210, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[211, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[212, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[213, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[214, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[215, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[216, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[217, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[218, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[219, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[220, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[221, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[222, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[223, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[224, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[225, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[226, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[227, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[228, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[229, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[230, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[231, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[232, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[233, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[234, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[235, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[236, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[237, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[238, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[239, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[240, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[241, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[242, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[243, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[244, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[245, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[246, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[247, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[248, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[249, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[250, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[251, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[252, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[253, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[254, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[255, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[256, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[257, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[258, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[259, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[260, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[261, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[262, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[263, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[264, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[265, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[266, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[267, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[268, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[269, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[270, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[271, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[272, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[273, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[274, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[275, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[276, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[277, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[278, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[279, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[280, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[281, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[282, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[283, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[284, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[285, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[286, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[287, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[288, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[289, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[290, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[291, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[292, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[293, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[294, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[295, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[296, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[297, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[298, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[299, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[300, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[301, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[302, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[303, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[304, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[305, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[306, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[307, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[308, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[309, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[310, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[311, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[312, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[313, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[314, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[315, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[316, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[317, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[318, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[319, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[320, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[321, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[322, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[323, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[324, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[325, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[326, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[327, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[328, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[329, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[330, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[331, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[332, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[333, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[334, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[335, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[336, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[337, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[338, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[339, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[340, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[341, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[342, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[343, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[344, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[345, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[346, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[347, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[348, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[349, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[350, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[351, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[352, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[353, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[354, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[355, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[356, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[357, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[358, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[359, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[360, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[361, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[362, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[363, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[364, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[365, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[366, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[367, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[368, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[369, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[370, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[371, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[372, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[373, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[374, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[375, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[376, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[377, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[378, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[379, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[380, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[381, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[382, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[383, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[384, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[385, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[386, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[387, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[388, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[389, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[390, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[391, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[392, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[393, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[394, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[395, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[396, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[397, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[398, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[399, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[400, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[401, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[402, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[403, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[404, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[405, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[406, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[407, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[408, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[409, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[410, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[411, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[412, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[413, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[414, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[415, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[416, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[417, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[418, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[419, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[420, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[421, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[422, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[423, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[424, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[425, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[426, "torch.Tensor.median"]], "min() (torch.tensor method)": [[427, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[428, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[429, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[430, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[431, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[432, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[433, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[434, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[435, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[436, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[437, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[438, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[439, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[440, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[441, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[442, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[443, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[444, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[445, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[446, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[447, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[448, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[449, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[450, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[451, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[452, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[453, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[454, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[455, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[456, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[457, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[458, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[459, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[460, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[461, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[462, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[463, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[464, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[465, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[466, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[467, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[468, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[469, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[470, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[471, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[472, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[473, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[474, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[475, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[476, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[477, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[478, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[479, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[480, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[481, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[482, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[483, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[484, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[485, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[486, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[487, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[488, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[489, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[490, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[491, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[492, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[493, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[494, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[495, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[496, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[497, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[498, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[499, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[500, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[501, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[502, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[503, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[504, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[505, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[506, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[507, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[508, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[509, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[510, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[511, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[512, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[513, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[514, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[515, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[516, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[517, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[518, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[519, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[520, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[521, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[522, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[523, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[524, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[525, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[526, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[527, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[528, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[529, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[530, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[531, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[532, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[533, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[534, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[535, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[536, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[537, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[538, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[539, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[540, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[541, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[542, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[543, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[544, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[545, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[546, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[547, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[548, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[549, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[550, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[551, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[552, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[553, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[554, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[555, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[556, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[557, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[558, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[559, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[560, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[561, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[562, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[563, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[564, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[565, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[566, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[567, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[568, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[569, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[570, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[571, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[572, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[573, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[574, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[575, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[576, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[577, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[578, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[579, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[580, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[581, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[582, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[583, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[584, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[585, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[586, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[587, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[588, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[589, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[590, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[591, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[592, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[593, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[594, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[595, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[596, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[597, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[598, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[599, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[600, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[601, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[602, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[603, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[604, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[605, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[606, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[607, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[608, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[609, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[610, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[611, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[612, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[613, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[614, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[615, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[616, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[617, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[618, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[619, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[620, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[621, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[622, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[623, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[624, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[625, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[626, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[627, "torch.Tensor.values"]], "var() (torch.tensor method)": [[628, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[629, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[630, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[631, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[632, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[633, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[634, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[635, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[636, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[637, "torch._assert"]], "_foreach_abs() (in module torch)": [[638, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[639, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[640, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[641, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[642, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[643, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[644, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[645, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[646, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[647, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[648, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[649, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[650, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[651, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[652, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[653, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[654, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[655, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[656, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[657, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[658, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[659, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[660, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[661, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[662, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[663, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[664, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[665, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[666, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[667, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[668, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[669, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[670, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[671, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[672, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[673, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[674, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[675, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[676, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[677, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[678, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[679, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[680, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[681, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[682, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[683, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[684, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[685, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[686, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[687, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[688, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[689, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[690, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[691, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[692, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[693, "torch._logging.set_logs"]], "abs() (in module torch)": [[694, "torch.abs"]], "absolute() (in module torch)": [[695, "torch.absolute"]], "acos() (in module torch)": [[696, "torch.acos"]], "acosh() (in module torch)": [[697, "torch.acosh"]], "add() (in module torch)": [[698, "torch.add"]], "addbmm() (in module torch)": [[699, "torch.addbmm"]], "addcdiv() (in module torch)": [[700, "torch.addcdiv"]], "addcmul() (in module torch)": [[701, "torch.addcmul"]], "addmm() (in module torch)": [[702, "torch.addmm"]], "addmv() (in module torch)": [[703, "torch.addmv"]], "addr() (in module torch)": [[704, "torch.addr"]], "adjoint() (in module torch)": [[705, "torch.adjoint"]], "all() (in module torch)": [[706, "torch.all"]], "allclose() (in module torch)": [[707, "torch.allclose"]], "amax() (in module torch)": [[708, "torch.amax"]], "amin() (in module torch)": [[709, "torch.amin"]], "aminmax() (in module torch)": [[710, "torch.aminmax"]], "angle() (in module torch)": [[711, "torch.angle"]], "any() (in module torch)": [[712, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[713, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[714, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[715, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[716, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[717, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[718, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[719, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[720, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[721, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[722, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[723, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[724, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[725, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[726, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[727, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[728, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[729, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[730, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[731, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[732, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[733, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[734, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[735, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[736, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[737, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[738, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[739, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[740, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[741, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[742, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[743, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[744, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[745, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[745, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[746, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[747, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[748, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[748, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[748, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[751, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[752, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[753, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[757, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[758, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[758, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[759, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[759, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[760, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[761, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[762, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[763, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[764, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[765, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[766, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[767, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[768, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[769, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[769, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[769, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[770, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[771, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[772, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[773, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[774, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[775, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[776, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[777, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[777, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[777, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[778, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[785, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[786, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[787, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[788, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[789, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[790, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[791, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[792, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[793, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[794, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[795, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[796, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[797, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[798, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[799, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[800, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[801, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[802, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[803, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[804, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[805, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[805, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[805, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[805, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[805, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[805, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[805, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[806, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[807, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[807, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[807, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[808, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[809, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[809, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[809, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[809, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[810, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[811, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[812, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[813, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[814, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[815, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[816, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[817, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[818, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[819, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[820, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[821, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[822, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[823, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[824, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[825, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[826, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[827, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[828, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[828, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[828, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[828, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[828, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[829, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[829, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[829, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[829, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[830, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[831, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[833, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[833, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[833, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[834, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[835, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[836, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[837, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[837, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[837, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[838, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[838, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[839, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[840, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[841, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[842, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[843, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[844, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[845, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[846, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[847, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[848, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[849, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[850, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[851, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[852, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[853, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[854, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[855, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[856, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[857, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[858, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[859, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[860, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[861, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[862, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[863, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[864, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[865, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[866, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[867, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[868, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[869, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[870, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[871, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[872, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[873, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[874, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[875, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[876, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[877, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[878, "torch.arange"]], "arccos() (in module torch)": [[879, "torch.arccos"]], "arccosh() (in module torch)": [[880, "torch.arccosh"]], "arcsin() (in module torch)": [[881, "torch.arcsin"]], "arcsinh() (in module torch)": [[882, "torch.arcsinh"]], "arctan() (in module torch)": [[883, "torch.arctan"]], "arctan2() (in module torch)": [[884, "torch.arctan2"]], "arctanh() (in module torch)": [[885, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[886, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[887, "torch.argmax"]], "argmin() (in module torch)": [[888, "torch.argmin"]], "argsort() (in module torch)": [[889, "torch.argsort"]], "argwhere() (in module torch)": [[890, "torch.argwhere"]], "as_strided() (in module torch)": [[891, "torch.as_strided"]], "as_tensor() (in module torch)": [[892, "torch.as_tensor"]], "asarray() (in module torch)": [[893, "torch.asarray"]], "asin() (in module torch)": [[894, "torch.asin"]], "asinh() (in module torch)": [[895, "torch.asinh"]], "atan() (in module torch)": [[896, "torch.atan"]], "atan2() (in module torch)": [[897, "torch.atan2"]], "atanh() (in module torch)": [[898, "torch.atanh"]], "atleast_1d() (in module torch)": [[899, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[900, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[901, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[902, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[903, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[904, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[905, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[906, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[907, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[908, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[909, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[910, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[911, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[912, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[913, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[914, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[915, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[916, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[917, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[918, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[919, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[920, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[921, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[922, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[923, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[924, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[925, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[926, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[927, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[928, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[929, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[930, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[931, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[932, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[933, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[934, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[935, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[936, "torch.bernoulli"]], "bincount() (in module torch)": [[937, "torch.bincount"]], "bitwise_and() (in module torch)": [[938, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[939, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[940, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[941, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[942, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[943, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[944, "torch.blackman_window"]], "block_diag() (in module torch)": [[945, "torch.block_diag"]], "bmm() (in module torch)": [[946, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[947, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[948, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[949, "torch.broadcast_to"]], "bucketize() (in module torch)": [[950, "torch.bucketize"]], "can_cast() (in module torch)": [[951, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[952, "torch.cartesian_prod"]], "cat() (in module torch)": [[953, "torch.cat"]], "cdist() (in module torch)": [[954, "torch.cdist"]], "ceil() (in module torch)": [[955, "torch.ceil"]], "chain_matmul() (in module torch)": [[956, "torch.chain_matmul"]], "cholesky() (in module torch)": [[957, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[958, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[959, "torch.cholesky_solve"]], "chunk() (in module torch)": [[960, "torch.chunk"]], "clamp() (in module torch)": [[961, "torch.clamp"]], "clip() (in module torch)": [[962, "torch.clip"]], "clone() (in module torch)": [[963, "torch.clone"]], "column_stack() (in module torch)": [[964, "torch.column_stack"]], "combinations() (in module torch)": [[965, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[967, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[968, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[969, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[970, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[971, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[972, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[973, "torch.compiler.reset"]], "complex() (in module torch)": [[974, "torch.complex"]], "concat() (in module torch)": [[975, "torch.concat"]], "concatenate() (in module torch)": [[976, "torch.concatenate"]], "conj() (in module torch)": [[977, "torch.conj"]], "conj_physical() (in module torch)": [[978, "torch.conj_physical"]], "copysign() (in module torch)": [[979, "torch.copysign"]], "corrcoef() (in module torch)": [[980, "torch.corrcoef"]], "cos() (in module torch)": [[981, "torch.cos"]], "cosh() (in module torch)": [[982, "torch.cosh"]], "count_nonzero() (in module torch)": [[983, "torch.count_nonzero"]], "cov() (in module torch)": [[984, "torch.cov"]], "cross() (in module torch)": [[985, "torch.cross"]], "cudagraph (class in torch.cuda)": [[986, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[986, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[987, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[988, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[988, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[988, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[988, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[988, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[988, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[988, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[988, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[989, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[989, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[989, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[989, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[989, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[989, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[990, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[991, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[991, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[991, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[991, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[991, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[991, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[992, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[993, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[994, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[995, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[996, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[997, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[998, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[999, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1000, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1001, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1002, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[1003, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1004, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1005, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1006, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1007, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1008, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1009, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1010, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1011, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1012, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1013, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1014, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1015, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1016, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1017, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1018, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1019, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1020, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1021, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1022, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1023, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1024, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1025, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1026, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1027, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1028, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1029, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1030, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1031, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1032, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1033, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1034, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1035, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1036, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1037, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1038, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1039, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1040, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1041, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1042, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1043, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1044, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1045, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1046, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1047, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1048, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1049, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1050, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1051, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1052, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1053, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1054, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1055, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1056, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1057, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1058, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1059, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1060, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1061, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1062, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1063, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1064, "torch.cummax"]], "cummin() (in module torch)": [[1065, "torch.cummin"]], "cumprod() (in module torch)": [[1066, "torch.cumprod"]], "cumsum() (in module torch)": [[1067, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1068, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1069, "torch.deg2rad"]], "dequantize() (in module torch)": [[1070, "torch.dequantize"]], "det() (in module torch)": [[1071, "torch.det"]], "diag() (in module torch)": [[1072, "torch.diag"]], "diag_embed() (in module torch)": [[1073, "torch.diag_embed"]], "diagflat() (in module torch)": [[1074, "torch.diagflat"]], "diagonal() (in module torch)": [[1075, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1076, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1077, "torch.diff"]], "digamma() (in module torch)": [[1078, "torch.digamma"]], "dist() (in module torch)": [[1079, "torch.dist"]], "div() (in module torch)": [[1080, "torch.div"]], "divide() (in module torch)": [[1081, "torch.divide"]], "dot() (in module torch)": [[1082, "torch.dot"]], "dsplit() (in module torch)": [[1083, "torch.dsplit"]], "dstack() (in module torch)": [[1084, "torch.dstack"]], "einsum() (in module torch)": [[1085, "torch.einsum"]], "empty() (in module torch)": [[1086, "torch.empty"]], "empty_like() (in module torch)": [[1087, "torch.empty_like"]], "empty_strided() (in module torch)": [[1088, "torch.empty_strided"]], "enable_grad (class in torch)": [[1089, "torch.enable_grad"]], "eq() (in module torch)": [[1090, "torch.eq"]], "equal() (in module torch)": [[1091, "torch.equal"]], "erf() (in module torch)": [[1092, "torch.erf"]], "erfc() (in module torch)": [[1093, "torch.erfc"]], "erfinv() (in module torch)": [[1094, "torch.erfinv"]], "exp() (in module torch)": [[1095, "torch.exp"]], "exp2() (in module torch)": [[1096, "torch.exp2"]], "expm1() (in module torch)": [[1097, "torch.expm1"]], "eye() (in module torch)": [[1098, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1099, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1100, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1101, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1102, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1103, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1104, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1105, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1106, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1107, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1108, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1109, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1110, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1111, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1112, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1113, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1114, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1115, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1116, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1117, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1118, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1119, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1120, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1121, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1122, "torch.fft.rfftn"]], "fix() (in module torch)": [[1123, "torch.fix"]], "flatten() (in module torch)": [[1124, "torch.flatten"]], "flip() (in module torch)": [[1125, "torch.flip"]], "fliplr() (in module torch)": [[1126, "torch.fliplr"]], "flipud() (in module torch)": [[1127, "torch.flipud"]], "float_power() (in module torch)": [[1128, "torch.float_power"]], "floor() (in module torch)": [[1129, "torch.floor"]], "floor_divide() (in module torch)": [[1130, "torch.floor_divide"]], "fmax() (in module torch)": [[1131, "torch.fmax"]], "fmin() (in module torch)": [[1132, "torch.fmin"]], "fmod() (in module torch)": [[1133, "torch.fmod"]], "frac() (in module torch)": [[1134, "torch.frac"]], "frexp() (in module torch)": [[1135, "torch.frexp"]], "from_dlpack() (in module torch)": [[1136, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1137, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1138, "torch.frombuffer"]], "full() (in module torch)": [[1139, "torch.full"]], "full_like() (in module torch)": [[1140, "torch.full_like"]], "functional_call() (in module torch.func)": [[1141, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1142, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1143, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1144, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1145, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1146, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1147, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1148, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1149, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1150, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1151, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1152, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1153, "torch.func.vmap"]], "gather() (in module torch)": [[1154, "torch.gather"]], "gcd() (in module torch)": [[1155, "torch.gcd"]], "ge() (in module torch)": [[1156, "torch.ge"]], "geqrf() (in module torch)": [[1157, "torch.geqrf"]], "ger() (in module torch)": [[1158, "torch.ger"]], "get_default_dtype() (in module torch)": [[1159, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1160, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1161, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1162, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1163, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1164, "torch.get_rng_state"]], "gradient() (in module torch)": [[1165, "torch.gradient"]], "greater() (in module torch)": [[1166, "torch.greater"]], "greater_equal() (in module torch)": [[1167, "torch.greater_equal"]], "gt() (in module torch)": [[1168, "torch.gt"]], "hamming_window() (in module torch)": [[1169, "torch.hamming_window"]], "hann_window() (in module torch)": [[1170, "torch.hann_window"]], "heaviside() (in module torch)": [[1171, "torch.heaviside"]], "histc() (in module torch)": [[1172, "torch.histc"]], "histogram() (in module torch)": [[1173, "torch.histogram"]], "histogramdd() (in module torch)": [[1174, "torch.histogramdd"]], "hsplit() (in module torch)": [[1175, "torch.hsplit"]], "hspmm() (in module torch)": [[1176, "torch.hspmm"]], "hstack() (in module torch)": [[1177, "torch.hstack"]], "hypot() (in module torch)": [[1178, "torch.hypot"]], "i0() (in module torch)": [[1179, "torch.i0"]], "igamma() (in module torch)": [[1180, "torch.igamma"]], "igammac() (in module torch)": [[1181, "torch.igammac"]], "imag() (in module torch)": [[1182, "torch.imag"]], "index_add() (in module torch)": [[1183, "torch.index_add"]], "index_copy() (in module torch)": [[1184, "torch.index_copy"]], "index_reduce() (in module torch)": [[1185, "torch.index_reduce"]], "index_select() (in module torch)": [[1186, "torch.index_select"]], "inference_mode (class in torch)": [[1187, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1188, "torch.initial_seed"]], "inner() (in module torch)": [[1189, "torch.inner"]], "inverse() (in module torch)": [[1190, "torch.inverse"]], "is_complex() (in module torch)": [[1191, "torch.is_complex"]], "is_conj() (in module torch)": [[1192, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1193, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1194, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1195, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1196, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1197, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1198, "torch.is_storage"]], "is_tensor() (in module torch)": [[1199, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1200, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1201, "torch.isclose"]], "isfinite() (in module torch)": [[1202, "torch.isfinite"]], "isin() (in module torch)": [[1203, "torch.isin"]], "isinf() (in module torch)": [[1204, "torch.isinf"]], "isnan() (in module torch)": [[1205, "torch.isnan"]], "isneginf() (in module torch)": [[1206, "torch.isneginf"]], "isposinf() (in module torch)": [[1207, "torch.isposinf"]], "isreal() (in module torch)": [[1208, "torch.isreal"]], "istft() (in module torch)": [[1209, "torch.istft"]], "attribute (class in torch.jit)": [[1210, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1210, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1210, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1210, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1210, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1211, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1211, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1211, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1211, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1212, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1212, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1212, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1212, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1212, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1212, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1213, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1214, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1215, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1216, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1217, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1218, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1219, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1220, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1221, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1222, "torch.jit.save"]], "script() (in module torch.jit)": [[1223, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1224, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1225, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1226, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1227, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1228, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1229, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1230, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1231, "torch.kaiser_window"]], "kron() (in module torch)": [[1232, "torch.kron"]], "kthvalue() (in module torch)": [[1233, "torch.kthvalue"]], "lcm() (in module torch)": [[1234, "torch.lcm"]], "ldexp() (in module torch)": [[1235, "torch.ldexp"]], "le() (in module torch)": [[1236, "torch.le"]], "lerp() (in module torch)": [[1237, "torch.lerp"]], "less() (in module torch)": [[1238, "torch.less"]], "less_equal() (in module torch)": [[1239, "torch.less_equal"]], "lgamma() (in module torch)": [[1240, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1241, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1242, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1243, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1244, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1245, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1246, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1247, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1248, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1249, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1250, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1251, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1252, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1253, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1254, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1255, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1256, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1257, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1258, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1259, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1260, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1261, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1262, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1263, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1264, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1265, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1266, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1267, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1268, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1269, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1270, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1271, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1272, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1273, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1274, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1275, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1276, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1277, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1278, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1279, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1280, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1281, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1282, "torch.linspace"]], "load() (in module torch)": [[1283, "torch.load"]], "lobpcg() (in module torch)": [[1284, "torch.lobpcg"]], "log() (in module torch)": [[1285, "torch.log"]], "log10() (in module torch)": [[1286, "torch.log10"]], "log1p() (in module torch)": [[1287, "torch.log1p"]], "log2() (in module torch)": [[1288, "torch.log2"]], "logaddexp() (in module torch)": [[1289, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1290, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1291, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1292, "torch.logdet"]], "logical_and() (in module torch)": [[1293, "torch.logical_and"]], "logical_not() (in module torch)": [[1294, "torch.logical_not"]], "logical_or() (in module torch)": [[1295, "torch.logical_or"]], "logical_xor() (in module torch)": [[1296, "torch.logical_xor"]], "logit() (in module torch)": [[1297, "torch.logit"]], "logspace() (in module torch)": [[1298, "torch.logspace"]], "logsumexp() (in module torch)": [[1299, "torch.logsumexp"]], "lt() (in module torch)": [[1300, "torch.lt"]], "lu() (in module torch)": [[1301, "torch.lu"]], "lu_solve() (in module torch)": [[1302, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1303, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1304, "torch.manual_seed"]], "masked_select() (in module torch)": [[1305, "torch.masked_select"]], "matmul() (in module torch)": [[1306, "torch.matmul"]], "matrix_exp() (in module torch)": [[1307, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1308, "torch.matrix_power"]], "max() (in module torch)": [[1309, "torch.max"]], "maximum() (in module torch)": [[1310, "torch.maximum"]], "mean() (in module torch)": [[1311, "torch.mean"]], "median() (in module torch)": [[1312, "torch.median"]], "meshgrid() (in module torch)": [[1313, "torch.meshgrid"]], "min() (in module torch)": [[1314, "torch.min"]], "minimum() (in module torch)": [[1315, "torch.minimum"]], "mm() (in module torch)": [[1316, "torch.mm"]], "mode() (in module torch)": [[1317, "torch.mode"]], "moveaxis() (in module torch)": [[1318, "torch.moveaxis"]], "movedim() (in module torch)": [[1319, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1320, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1321, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1322, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1323, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1324, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1325, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1326, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1327, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1328, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1329, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1330, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1331, "torch.mps.synchronize"]], "msort() (in module torch)": [[1332, "torch.msort"]], "mul() (in module torch)": [[1333, "torch.mul"]], "multinomial() (in module torch)": [[1334, "torch.multinomial"]], "multiply() (in module torch)": [[1335, "torch.multiply"]], "mv() (in module torch)": [[1336, "torch.mv"]], "mvlgamma() (in module torch)": [[1337, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1338, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1339, "torch.nanmean"]], "nanmedian() (in module torch)": [[1340, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1341, "torch.nanquantile"]], "nansum() (in module torch)": [[1342, "torch.nansum"]], "narrow() (in module torch)": [[1343, "torch.narrow"]], "narrow_copy() (in module torch)": [[1344, "torch.narrow_copy"]], "ne() (in module torch)": [[1345, "torch.ne"]], "neg() (in module torch)": [[1346, "torch.neg"]], "negative() (in module torch)": [[1347, "torch.negative"]], "nextafter() (in module torch)": [[1348, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1349, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1350, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1351, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1352, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1352, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1352, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1353, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1354, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1355, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1356, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1357, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1358, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1359, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1360, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1361, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1362, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1363, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1364, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1365, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1366, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1367, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1368, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1369, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1370, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1371, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1372, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1373, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1374, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1375, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1376, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1377, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1378, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1379, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1380, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1381, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1382, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1383, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1384, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1385, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1386, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1387, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1387, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1388, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1388, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1388, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1389, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1390, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1391, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1392, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1393, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1394, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1395, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1396, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1397, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1398, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1399, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1400, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1401, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1402, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1403, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1404, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1405, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1406, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1407, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1408, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1409, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1410, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1411, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1412, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1413, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1414, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1415, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1416, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1417, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1417, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1418, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1418, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1419, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1419, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1420, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1420, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1421, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1421, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1422, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1422, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1423, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1423, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1424, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1424, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1425, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1425, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1426, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1426, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1427, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1427, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1428, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1428, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1429, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1429, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1430, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1431, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1432, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1433, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1434, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1435, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1436, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1437, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1438, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1439, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1440, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1441, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1442, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1443, "torch.nn.Mish"]], "module (class in torch.nn)": [[1444, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1444, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1444, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1444, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1444, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1444, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1444, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1444, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1444, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1444, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1444, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1444, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1444, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1444, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1444, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1444, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1444, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1444, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1444, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1444, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1444, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1444, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1444, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1444, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1444, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1444, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1444, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1444, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1444, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1444, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1444, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1444, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1444, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1444, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1444, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1444, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1444, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1444, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1444, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1444, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1444, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1445, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1445, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1445, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1445, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1445, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1445, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1445, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1446, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1446, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1446, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1446, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1447, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1448, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1449, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1450, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1450, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1450, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1451, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1452, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1453, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1454, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1454, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1455, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1455, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1455, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1456, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1457, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1458, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1459, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1460, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1460, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1461, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1462, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1463, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1464, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1465, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1466, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1467, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1468, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1469, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1470, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1471, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1472, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1472, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1473, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1474, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1475, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1476, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1477, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1478, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1479, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1480, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1481, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1482, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1483, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1483, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1484, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1485, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1486, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1487, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1487, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1487, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1488, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1488, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1489, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1489, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1490, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1490, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1491, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1491, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1492, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1493, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1494, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1495, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1496, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1497, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1498, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1499, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1500, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1501, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1507, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1508, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1509, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1510, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1511, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1513, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1514, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1515, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1516, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1517, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1518, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1519, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1520, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1521, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1522, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1523, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1524, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1525, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1526, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1527, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1528, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1529, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1530, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1531, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1532, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1533, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1534, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1535, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1536, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1537, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1538, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1539, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1540, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1541, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1542, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1543, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1544, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1545, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1546, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1547, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1548, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1549, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1550, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1551, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1552, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1553, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1554, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1555, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1556, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1557, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1558, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1559, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1560, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1561, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1562, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1563, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1564, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1565, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1566, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1567, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1568, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1569, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1570, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1571, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1572, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1573, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1574, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1575, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1576, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1577, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1578, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1579, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1580, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1581, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1582, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1583, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1584, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1585, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1586, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1587, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1588, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1589, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1590, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1591, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1592, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1593, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1594, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1595, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1596, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1597, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1598, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1599, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1600, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1601, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1602, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1603, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1604, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1605, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1606, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1607, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1608, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1609, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1610, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1611, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1612, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1613, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1614, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1615, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1615, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1615, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1616, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1617, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1618, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1619, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1620, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1621, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1622, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1623, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1624, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1624, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1624, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1624, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1624, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1625, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1626, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1627, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1627, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1628, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1629, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1630, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1631, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1632, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1633, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1633, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1634, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1635, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1636, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1637, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1638, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1638, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1638, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1638, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1638, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1638, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1639, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1639, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1639, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1639, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1639, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1640, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1640, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1640, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1640, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1640, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1641, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1641, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1641, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1641, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1641, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1642, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1642, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1642, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1642, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1642, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1642, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1643, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1643, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1643, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1643, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1643, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1643, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1643, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1644, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1644, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1644, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1644, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1644, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1644, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1645, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1645, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1645, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1645, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1645, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1646, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1647, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1648, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1649, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1650, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1651, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1652, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1653, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1654, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1655, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1656, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1657, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1657, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1657, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1657, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1657, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1657, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1657, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1657, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1657, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1657, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1658, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1659, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1660, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1661, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1662, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1663, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1664, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1665, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1666, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1667, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1668, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1669, "torch.no_grad"]], "nonzero() (in module torch)": [[1670, "torch.nonzero"]], "norm() (in module torch)": [[1671, "torch.norm"]], "normal() (in module torch)": [[1672, "torch.normal"]], "not_equal() (in module torch)": [[1673, "torch.not_equal"]], "numel() (in module torch)": [[1674, "torch.numel"]], "ones() (in module torch)": [[1675, "torch.ones"]], "ones_like() (in module torch)": [[1676, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1677, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1678, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1678, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1678, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1678, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1678, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1678, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1679, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1679, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1680, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1680, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1680, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1680, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1680, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1680, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1680, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1680, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1681, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1681, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1682, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1683, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1683, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1684, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1684, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1685, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1685, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1686, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1686, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1686, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1686, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1686, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1686, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1686, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1686, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1687, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1687, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1688, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1688, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1689, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1689, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1690, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1690, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1691, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1692, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1693, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1694, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1695, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1696, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1696, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1697, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1697, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1698, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1698, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1699, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1699, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1700, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1700, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1701, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1701, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1701, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1701, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1701, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1702, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1702, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1702, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1702, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1702, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1703, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1703, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1703, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1703, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1703, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1704, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1704, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1704, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1704, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1704, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1704, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1705, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1705, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1705, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1705, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1706, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1706, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1706, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1706, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1706, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1707, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1707, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1707, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1707, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1707, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1708, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1708, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1708, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1708, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1708, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1709, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1709, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1709, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1709, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1709, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1710, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1710, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1710, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1710, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1710, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1711, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1711, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1711, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1711, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1711, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1712, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1712, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1712, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1712, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1712, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1713, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1714, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1714, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1714, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1714, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1714, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1715, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1715, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1715, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1715, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1715, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1716, "torch.orgqr"]], "ormqr() (in module torch)": [[1717, "torch.ormqr"]], "outer() (in module torch)": [[1718, "torch.outer"]], "pca_lowrank() (in module torch)": [[1719, "torch.pca_lowrank"]], "permute() (in module torch)": [[1720, "torch.permute"]], "pinverse() (in module torch)": [[1721, "torch.pinverse"]], "poisson() (in module torch)": [[1722, "torch.poisson"]], "polar() (in module torch)": [[1723, "torch.polar"]], "polygamma() (in module torch)": [[1724, "torch.polygamma"]], "positive() (in module torch)": [[1725, "torch.positive"]], "pow() (in module torch)": [[1726, "torch.pow"]], "prod() (in module torch)": [[1727, "torch.prod"]], "promote_types() (in module torch)": [[1728, "torch.promote_types"]], "qr() (in module torch)": [[1729, "torch.qr"]], "quantile() (in module torch)": [[1730, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1731, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1732, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1733, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1734, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1735, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1736, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1736, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1736, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1736, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1736, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1737, "torch.rad2deg"]], "rand() (in module torch)": [[1738, "torch.rand"]], "rand_like() (in module torch)": [[1739, "torch.rand_like"]], "randint() (in module torch)": [[1740, "torch.randint"]], "randint_like() (in module torch)": [[1741, "torch.randint_like"]], "randn() (in module torch)": [[1742, "torch.randn"]], "randn_like() (in module torch)": [[1743, "torch.randn_like"]], "randperm() (in module torch)": [[1744, "torch.randperm"]], "range() (in module torch)": [[1745, "torch.range"]], "ravel() (in module torch)": [[1746, "torch.ravel"]], "real() (in module torch)": [[1747, "torch.real"]], "reciprocal() (in module torch)": [[1748, "torch.reciprocal"]], "remainder() (in module torch)": [[1749, "torch.remainder"]], "renorm() (in module torch)": [[1750, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1751, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1752, "torch.reshape"]], "resolve_conj() (in module torch)": [[1753, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1754, "torch.resolve_neg"]], "result_type() (in module torch)": [[1755, "torch.result_type"]], "roll() (in module torch)": [[1756, "torch.roll"]], "rot90() (in module torch)": [[1757, "torch.rot90"]], "round() (in module torch)": [[1758, "torch.round"]], "row_stack() (in module torch)": [[1759, "torch.row_stack"]], "rsqrt() (in module torch)": [[1760, "torch.rsqrt"]], "save() (in module torch)": [[1761, "torch.save"]], "scatter() (in module torch)": [[1762, "torch.scatter"]], "scatter_add() (in module torch)": [[1763, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1764, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1765, "torch.searchsorted"]], "seed() (in module torch)": [[1766, "torch.seed"]], "select() (in module torch)": [[1767, "torch.select"]], "select_scatter() (in module torch)": [[1768, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1769, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1770, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1771, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1772, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1773, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1774, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1775, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1776, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1777, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1778, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1779, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1780, "torch.set_warn_always"]], "sgn() (in module torch)": [[1781, "torch.sgn"]], "sigmoid() (in module torch)": [[1782, "torch.sigmoid"]], "sign() (in module torch)": [[1783, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1784, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1785, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1786, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1787, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1788, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1789, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1790, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1791, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1792, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1793, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1794, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1795, "torch.signbit"]], "sin() (in module torch)": [[1796, "torch.sin"]], "sinc() (in module torch)": [[1797, "torch.sinc"]], "sinh() (in module torch)": [[1798, "torch.sinh"]], "slice_scatter() (in module torch)": [[1799, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1800, "torch.slogdet"]], "smm() (in module torch)": [[1801, "torch.smm"]], "softmax() (in module torch)": [[1802, "torch.softmax"]], "sort() (in module torch)": [[1803, "torch.sort"]], "addmm() (in module torch.sparse)": [[1804, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1805, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1805, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1805, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1805, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1806, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1807, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1808, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1809, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1810, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1811, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1812, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1813, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1814, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1815, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1816, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1817, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1818, "torch.split"]], "sqrt() (in module torch)": [[1819, "torch.sqrt"]], "square() (in module torch)": [[1820, "torch.square"]], "squeeze() (in module torch)": [[1821, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1822, "torch.sspaddmm"]], "stack() (in module torch)": [[1823, "torch.stack"]], "std() (in module torch)": [[1824, "torch.std"]], "std_mean() (in module torch)": [[1825, "torch.std_mean"]], "stft() (in module torch)": [[1826, "torch.stft"]], "sub() (in module torch)": [[1827, "torch.sub"]], "subtract() (in module torch)": [[1828, "torch.subtract"]], "sum() (in module torch)": [[1829, "torch.sum"]], "svd() (in module torch)": [[1830, "torch.svd"]], "svd_lowrank() (in module torch)": [[1831, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1832, "torch.swapaxes"]], "swapdims() (in module torch)": [[1833, "torch.swapdims"]], "sym_float() (in module torch)": [[1834, "torch.sym_float"]], "sym_int() (in module torch)": [[1835, "torch.sym_int"]], "sym_max() (in module torch)": [[1836, "torch.sym_max"]], "sym_min() (in module torch)": [[1837, "torch.sym_min"]], "sym_not() (in module torch)": [[1838, "torch.sym_not"]], "t() (in module torch)": [[1839, "torch.t"]], "take() (in module torch)": [[1840, "torch.take"]], "take_along_dim() (in module torch)": [[1841, "torch.take_along_dim"]], "tan() (in module torch)": [[1842, "torch.tan"]], "tanh() (in module torch)": [[1843, "torch.tanh"]], "tensor() (in module torch)": [[1844, "torch.tensor"]], "tensor_split() (in module torch)": [[1845, "torch.tensor_split"]], "tensordot() (in module torch)": [[1846, "torch.tensordot"]], "tile() (in module torch)": [[1847, "torch.tile"]], "topk() (in module torch)": [[1848, "torch.topk"]], "trace() (in module torch)": [[1849, "torch.trace"]], "transpose() (in module torch)": [[1850, "torch.transpose"]], "trapezoid() (in module torch)": [[1851, "torch.trapezoid"]], "trapz() (in module torch)": [[1852, "torch.trapz"]], "triangular_solve() (in module torch)": [[1853, "torch.triangular_solve"]], "tril() (in module torch)": [[1854, "torch.tril"]], "tril_indices() (in module torch)": [[1855, "torch.tril_indices"]], "triu() (in module torch)": [[1856, "torch.triu"]], "triu_indices() (in module torch)": [[1857, "torch.triu_indices"]], "true_divide() (in module torch)": [[1858, "torch.true_divide"]], "trunc() (in module torch)": [[1859, "torch.trunc"]], "unbind() (in module torch)": [[1860, "torch.unbind"]], "unflatten() (in module torch)": [[1861, "torch.unflatten"]], "unique() (in module torch)": [[1862, "torch.unique"]], "unique_consecutive() (in module torch)": [[1863, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1864, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1865, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1866, "torch.vander"]], "var() (in module torch)": [[1867, "torch.var"]], "var_mean() (in module torch)": [[1868, "torch.var_mean"]], "vdot() (in module torch)": [[1869, "torch.vdot"]], "view_as_complex() (in module torch)": [[1870, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1871, "torch.view_as_real"]], "vmap() (in module torch)": [[1872, "torch.vmap"]], "vsplit() (in module torch)": [[1873, "torch.vsplit"]], "vstack() (in module torch)": [[1874, "torch.vstack"]], "where() (in module torch)": [[1875, "torch.where"]], "xlogy() (in module torch)": [[1876, "torch.xlogy"]], "zeros() (in module torch)": [[1877, "torch.zeros"]], "zeros_like() (in module torch)": [[1878, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1879, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1879, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1879, "torch.hub.help"]], "list() (in module torch.hub)": [[1879, "torch.hub.list"]], "load() (in module torch.hub)": [[1879, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1879, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1879, "torch.hub.set_dir"]], "torch.hub": [[1879, "module-torch.hub"]], "pytorch_jit": [[1882, "envvar-PYTORCH_JIT"]], "environment variable": [[1882, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1882, "torch.jit.export"]], "torch.jit": [[1882, "module-torch.jit"]], "torch.jit.mobile": [[1882, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1883, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1884, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1884, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1887, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1888, "module-torch.utils.jit"]], "library (class in torch.library)": [[1889, "torch.library.Library"]], "define() (torch.library.library method)": [[1889, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1889, "torch.library.Library.impl"]], "torch.linalg": [[1890, "module-torch.linalg"]], "torch._logging": [[1891, "module-torch._logging"]], "torch.masked": [[1892, "module-torch.masked"]], "torch.masked.maskedtensor": [[1892, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1893, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1894, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1894, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1895, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1895, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1895, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1895, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1895, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1895, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1895, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1895, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1895, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1895, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1895, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1895, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1895, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1895, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1895, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1895, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1895, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1895, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1895, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1895, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1895, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1896, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1897, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1897, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1897, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1897, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1897, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1897, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1897, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1899, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1899, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1899, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1899, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1899, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1899, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1900, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1900, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1900, "torch.nested.to_padded_tensor"]], "torch.nested": [[1900, "module-torch.nested"]], "torch.nn": [[1901, "module-torch.nn"]], "torch.nn.backends": [[1901, "module-torch.nn.backends"]], "torch.nn.modules": [[1901, "module-torch.nn.modules"]], "torch.nn.parallel": [[1901, "module-torch.nn.parallel"]], "torch.nn.utils": [[1901, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1901, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1903, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1903, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1903, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1903, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1903, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1903, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1903, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1903, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1903, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1903, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1903, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1903, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1903, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1903, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1903, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1921, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1921, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1921, "torch.serialization.set_default_load_endianness"]], "disable_log() (in module torch.onnx)": [[1923, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1923, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1923, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1923, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1923, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1923, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1923, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1923, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1923, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1923, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1923, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1924, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1924, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1924, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1926, "torch.optim.Optimizer"]], "torch.optim": [[1926, "module-torch.optim"]], "directory (class in torch.package)": [[1927, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1927, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1927, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1927, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1927, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1927, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1927, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1927, "torch.package.PackageExporter.save_text"]], "torch.package": [[1927, "module-torch.package"]], "torch.package.analyze": [[1927, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1928, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1928, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1928, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1928, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1928, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1928, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1929, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1929, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1929, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1929, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1929, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1929, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1929, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1929, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1929, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1929, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1929, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1929, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1929, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1929, "module-torch.profiler"]], "torch.ao": [[1930, "module-torch.ao"]], "torch.ao.nn": [[1930, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1930, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1930, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1930, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1930, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1930, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1930, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1930, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1930, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1930, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1930, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1930, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1930, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1930, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1930, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1930, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1930, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1933, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1933, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1933, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1933, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1933, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1933, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1933, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1933, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1933, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1933, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1933, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1933, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1933, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1933, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1933, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1933, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1933, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1933, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1933, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1933, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1933, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1933, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1933, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1933, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1933, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1933, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1933, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1933, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1933, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1933, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1933, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1933, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1933, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1933, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1933, "module-torch.quantization"]], "torch.quantization.fx": [[1933, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1934, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1934, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1934, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1934, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1934, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1934, "torch.random.set_rng_state"]], "torch.random": [[1934, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1935, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1935, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1935, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1935, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1935, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1935, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1935, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1935, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1935, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1935, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1935, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1935, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1935, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1935, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1935, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1935, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1935, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1935, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1935, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1935, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1935, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1935, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1935, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1935, "module-torch.distributed.rpc"]], "torch.signal": [[1938, "module-torch.signal"]], "torch.signal.windows": [[1938, "module-torch.signal.windows"]], "torch.sparse": [[1939, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1940, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1940, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1940, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1940, "torch.special.digamma"]], "entr() (in module torch.special)": [[1940, "torch.special.entr"]], "erf() (in module torch.special)": [[1940, "torch.special.erf"]], "erfc() (in module torch.special)": [[1940, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1940, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1940, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1940, "torch.special.exp2"]], "expit() (in module torch.special)": [[1940, "torch.special.expit"]], "expm1() (in module torch.special)": [[1940, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1940, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1940, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1940, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1940, "torch.special.i0"]], "i0e() (in module torch.special)": [[1940, "torch.special.i0e"]], "i1() (in module torch.special)": [[1940, "torch.special.i1"]], "i1e() (in module torch.special)": [[1940, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1940, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1940, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1940, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1940, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1940, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1940, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1940, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1940, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1940, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1940, "torch.special.psi"]], "round() (in module torch.special)": [[1940, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1940, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1940, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1940, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1940, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1940, "torch.special.spherical_bessel_j0"]], "torch.special": [[1940, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1940, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1940, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1940, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1941, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1941, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1941, "torch.ByteStorage"]], "charstorage (class in torch)": [[1941, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1941, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1941, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1941, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1941, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1941, "torch.HalfStorage"]], "intstorage (class in torch)": [[1941, "torch.IntStorage"]], "longstorage (class in torch)": [[1941, "torch.LongStorage"]], "qint32storage (class in torch)": [[1941, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1941, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1941, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1941, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1941, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1941, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1941, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1941, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1941, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1941, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1941, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1941, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1941, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1941, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1941, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1941, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1941, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1941, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1941, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1941, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1941, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1941, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1941, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1941, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1941, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1941, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1941, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1941, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1941, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1941, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1941, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1941, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1941, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1941, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1941, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1941, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1941, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1941, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1941, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1941, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1941, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1941, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1941, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1941, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1941, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1941, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1941, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1941, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1941, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1941, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1941, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1941, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1941, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1941, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1941, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1941, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1941, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1941, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1941, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1941, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1941, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1941, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1941, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1941, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1941, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1941, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1941, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1941, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1941, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1941, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1941, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1941, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1942, "torch.device"]], "dtype (class in torch)": [[1942, "torch.dtype"]], "layout (class in torch)": [[1942, "torch.layout"]], "memory_format (class in torch)": [[1942, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1944, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1944, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1945, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1945, "torch.Tensor.T"]], "tensor (class in torch)": [[1945, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1945, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1945, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1946, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1946, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1946, "torch.testing.make_tensor"]], "torch.testing": [[1946, "module-torch.testing"]], "symbool (class in torch)": [[1947, "torch.SymBool"]], "symfloat (class in torch)": [[1947, "torch.SymFloat"]], "symint (class in torch)": [[1947, "torch.SymInt"]], "tag (class in torch)": [[1947, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1947, "torch.torch.default_generator"]], "name (torch.tag property)": [[1947, "torch.Tag.name"]], "torch": [[1947, "module-torch"]], "torch.contrib": [[1947, "module-torch.contrib"]], "torch.utils": [[1947, "module-torch.utils"]], "torch.utils.backcompat": [[1947, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1947, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1947, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1947, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1948, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1948, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1948, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1948, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1948, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1948, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1949, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1949, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1949, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1949, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1949, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1949, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1949, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1949, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1950, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1950, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1950, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1950, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1950, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1950, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1950, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1950, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1950, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1951, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1951, "torch.torch.iinfo"]]}})