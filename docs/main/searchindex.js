Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/cudagraph_trees", "compile/custom-backends", "compile/deep-dive", "compile/dynamic-shapes", "compile/fake-tensor", "compile/faq", "compile/fine_grained_apis", "compile/generated/torch.compile", "compile/get-started", "compile/guards-overview", "compile/index", "compile/inductor_profiling", "compile/nn-module", "compile/performance-dashboard", "compile/technical-overview", "compile/torchfunc-and-torchcompile", "compile/transformations", "compile/troubleshooting", "compiler", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.autograd.set_multithreading_enabled", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/cudagraph_trees.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/dynamic-shapes.rst", "compile/fake-tensor.rst", "compile/faq.rst", "compile/fine_grained_apis.rst", "compile/generated/torch.compile.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/inductor_profiling.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/technical-overview.rst", "compile/torchfunc-and-torchcompile.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "compiler.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.autograd.set_multithreading_enabled.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deeper Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs to control fine-grained tracing", "torch.compile", "Getting Started", "Guards Overview", "torch.compile", "TorchInductor GPU Profiling", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Technical Overview", "torch.func interaction with torch.compile", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.compiler", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "set_multithreading_enabled", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 12, 14, 16, 17, 20, 21, 25, 27, 28, 30, 32, 33, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 56, 58, 59, 60, 61, 63, 67, 70, 71, 151, 600, 677, 686, 732, 735, 736, 737, 742, 743, 745, 753, 754, 757, 761, 785, 786, 796, 797, 811, 821, 838, 855, 890, 899, 901, 902, 903, 929, 934, 937, 942, 943, 955, 968, 980, 1026, 1069, 1089, 1125, 1137, 1149, 1157, 1158, 1193, 1196, 1202, 1203, 1207, 1209, 1211, 1226, 1243, 1268, 1300, 1359, 1360, 1361, 1364, 1380, 1381, 1389, 1394, 1398, 1399, 1424, 1425, 1426, 1428, 1434, 1435, 1438, 1443, 1445, 1456, 1471, 1472, 1473, 1474, 1475, 1499, 1500, 1577, 1608, 1622, 1642, 1650, 1665, 1666, 1695, 1698, 1703, 1739, 1749, 1796, 1797, 1798, 1799, 1800, 1801, 1839, 1841, 1856, 1863, 1866, 1868, 1869, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1903, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1935], "conveni": [0, 3, 7, 11, 14, 20, 22, 25, 32, 55, 58, 59, 69, 1137, 1253, 1599, 1856, 1863, 1868, 1873, 1888, 1889, 1892, 1894, 1899, 1900, 1911, 1918], "method": [0, 3, 7, 9, 12, 13, 19, 20, 28, 32, 33, 35, 38, 41, 42, 43, 45, 47, 48, 49, 50, 56, 58, 63, 70, 71, 222, 223, 323, 485, 486, 495, 496, 497, 518, 611, 790, 794, 796, 812, 813, 814, 835, 838, 851, 871, 872, 873, 890, 894, 895, 896, 897, 910, 911, 1006, 1120, 1149, 1194, 1196, 1197, 1199, 1200, 1201, 1206, 1207, 1211, 1212, 1213, 1241, 1259, 1260, 1267, 1268, 1325, 1328, 1336, 1344, 1371, 1428, 1429, 1430, 1438, 1439, 1456, 1527, 1599, 1608, 1616, 1617, 1620, 1622, 1624, 1627, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1644, 1649, 1662, 1663, 1668, 1669, 1670, 1672, 1682, 1714, 1795, 1810, 1814, 1863, 1864, 1866, 1869, 1870, 1877, 1879, 1881, 1882, 1883, 1887, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1905, 1908, 1910, 1911, 1914, 1916, 1919, 1921, 1925, 1926, 1928, 1929, 1931, 1934], "where": [0, 1, 2, 3, 4, 7, 8, 9, 14, 15, 16, 17, 19, 20, 28, 30, 32, 33, 38, 39, 41, 45, 46, 47, 49, 51, 58, 59, 60, 61, 63, 65, 66, 68, 71, 154, 224, 254, 400, 402, 485, 677, 690, 692, 693, 696, 732, 755, 757, 778, 817, 818, 830, 874, 893, 898, 900, 913, 919, 928, 934, 941, 942, 943, 964, 968, 973, 975, 984, 986, 1048, 1049, 1052, 1056, 1074, 1085, 1086, 1088, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1104, 1106, 1130, 1131, 1132, 1136, 1137, 1140, 1152, 1153, 1154, 1155, 1185, 1186, 1188, 1189, 1192, 1193, 1194, 1197, 1209, 1215, 1216, 1217, 1220, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1267, 1268, 1273, 1276, 1283, 1284, 1285, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1318, 1323, 1324, 1326, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1498, 1500, 1510, 1511, 1518, 1523, 1525, 1526, 1544, 1545, 1562, 1564, 1565, 1568, 1569, 1571, 1577, 1580, 1608, 1610, 1611, 1615, 1642, 1643, 1644, 1645, 1654, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1701, 1711, 1713, 1714, 1734, 1735, 1771, 1777, 1778, 1783, 1787, 1791, 1792, 1793, 1796, 1797, 1798, 1799, 1800, 1801, 1808, 1809, 1810, 1813, 1814, 1828, 1837, 1838, 1839, 1840, 1841, 1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1865, 1866, 1867, 1869, 1870, 1875, 1876, 1878, 1881, 1884, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1900, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1921, 1923, 1924, 1926, 1928, 1933, 1934], "some": [0, 1, 3, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 32, 37, 38, 39, 41, 43, 46, 47, 49, 51, 59, 60, 63, 66, 68, 69, 70, 71, 476, 494, 564, 686, 745, 950, 1022, 1026, 1029, 1069, 1090, 1092, 1100, 1101, 1102, 1117, 1126, 1137, 1171, 1193, 1194, 1196, 1197, 1206, 1209, 1211, 1241, 1259, 1265, 1290, 1297, 1300, 1336, 1340, 1344, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1388, 1391, 1392, 1393, 1394, 1395, 1398, 1419, 1420, 1428, 1431, 1432, 1433, 1435, 1442, 1443, 1459, 1460, 1476, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1539, 1544, 1562, 1565, 1570, 1577, 1599, 1608, 1609, 1610, 1611, 1615, 1648, 1683, 1689, 1695, 1713, 1733, 1757, 1764, 1778, 1814, 1856, 1863, 1866, 1867, 1868, 1869, 1870, 1873, 1874, 1875, 1876, 1877, 1881, 1882, 1883, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1928], "oper": [0, 2, 4, 5, 7, 8, 11, 13, 14, 16, 17, 19, 20, 25, 26, 27, 28, 30, 33, 35, 38, 43, 47, 48, 55, 56, 58, 59, 64, 69, 70, 71, 83, 84, 85, 86, 87, 254, 313, 321, 335, 352, 402, 444, 445, 446, 447, 448, 491, 494, 511, 513, 515, 586, 683, 686, 738, 739, 740, 744, 745, 754, 755, 765, 766, 776, 782, 789, 790, 792, 793, 796, 820, 823, 856, 858, 859, 862, 886, 888, 894, 896, 918, 919, 921, 923, 926, 928, 930, 932, 937, 940, 943, 947, 957, 962, 973, 975, 1003, 1012, 1043, 1048, 1049, 1050, 1051, 1064, 1069, 1070, 1071, 1072, 1082, 1087, 1105, 1117, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1137, 1144, 1147, 1153, 1154, 1171, 1196, 1206, 1207, 1211, 1212, 1215, 1225, 1238, 1248, 1251, 1252, 1265, 1266, 1275, 1282, 1290, 1295, 1300, 1309, 1310, 1323, 1326, 1340, 1345, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1385, 1386, 1387, 1388, 1390, 1395, 1414, 1419, 1424, 1425, 1426, 1428, 1441, 1446, 1447, 1448, 1455, 1470, 1471, 1473, 1475, 1479, 1495, 1496, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1519, 1520, 1522, 1523, 1527, 1531, 1538, 1544, 1546, 1552, 1553, 1563, 1565, 1569, 1577, 1583, 1584, 1595, 1596, 1597, 1598, 1608, 1610, 1611, 1644, 1650, 1655, 1659, 1660, 1681, 1687, 1697, 1701, 1710, 1711, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1733, 1739, 1756, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1790, 1791, 1792, 1793, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1813, 1828, 1849, 1856, 1859, 1861, 1862, 1864, 1865, 1866, 1870, 1873, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1900, 1901, 1902, 1903, 1904, 1908, 1910, 1913, 1915, 1917, 1918, 1919, 1920, 1924, 1926, 1927, 1930], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 32, 33, 34, 36, 38, 42, 43, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 83, 84, 89, 98, 120, 151, 155, 192, 209, 319, 321, 335, 342, 343, 406, 434, 447, 457, 485, 486, 494, 497, 511, 515, 518, 541, 554, 580, 581, 582, 584, 585, 614, 677, 683, 686, 709, 710, 711, 712, 713, 714, 717, 726, 727, 728, 729, 730, 732, 745, 754, 757, 765, 766, 769, 770, 771, 776, 778, 782, 783, 784, 787, 790, 791, 792, 793, 796, 799, 804, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 828, 829, 830, 831, 834, 851, 855, 856, 858, 859, 862, 875, 876, 877, 886, 887, 888, 890, 891, 892, 893, 895, 896, 898, 899, 900, 901, 904, 905, 906, 910, 911, 914, 917, 918, 919, 920, 928, 930, 931, 938, 940, 942, 950, 953, 955, 957, 961, 964, 966, 969, 970, 971, 972, 973, 975, 977, 978, 980, 983, 993, 994, 997, 998, 1004, 1008, 1012, 1014, 1015, 1016, 1018, 1020, 1021, 1026, 1027, 1036, 1038, 1039, 1045, 1050, 1051, 1052, 1061, 1069, 1070, 1072, 1082, 1083, 1084, 1087, 1089, 1097, 1099, 1103, 1105, 1112, 1114, 1117, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1141, 1142, 1146, 1147, 1149, 1153, 1154, 1155, 1156, 1170, 1171, 1183, 1193, 1194, 1196, 1197, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1215, 1217, 1219, 1227, 1231, 1232, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1248, 1249, 1250, 1252, 1253, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1273, 1276, 1282, 1285, 1286, 1289, 1290, 1295, 1296, 1297, 1300, 1306, 1318, 1323, 1325, 1326, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1414, 1415, 1416, 1421, 1422, 1423, 1424, 1425, 1428, 1430, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1461, 1464, 1467, 1475, 1476, 1477, 1478, 1480, 1483, 1484, 1485, 1492, 1494, 1495, 1496, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1527, 1529, 1536, 1538, 1539, 1546, 1551, 1552, 1553, 1563, 1565, 1571, 1577, 1581, 1583, 1584, 1592, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1642, 1643, 1644, 1648, 1649, 1650, 1652, 1653, 1655, 1656, 1659, 1662, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1696, 1698, 1699, 1701, 1711, 1713, 1714, 1715, 1718, 1719, 1720, 1722, 1724, 1726, 1728, 1729, 1735, 1742, 1745, 1750, 1751, 1753, 1754, 1755, 1757, 1759, 1760, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1782, 1787, 1789, 1790, 1792, 1793, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1813, 1814, 1815, 1828, 1832, 1835, 1839, 1841, 1846, 1848, 1849, 1853, 1856, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1873, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1891, 1893, 1895, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1913, 1915, 1917, 1918, 1919, 1920, 1921, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934], "float": [0, 1, 3, 14, 19, 27, 30, 38, 39, 41, 45, 47, 49, 52, 60, 63, 71, 154, 155, 220, 313, 315, 317, 321, 333, 400, 474, 480, 511, 682, 684, 689, 691, 695, 729, 732, 735, 736, 737, 741, 742, 743, 745, 752, 753, 758, 759, 760, 761, 762, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 782, 789, 790, 791, 796, 814, 816, 827, 835, 836, 849, 854, 855, 858, 859, 862, 877, 905, 906, 919, 920, 928, 935, 938, 942, 958, 963, 964, 968, 969, 1039, 1052, 1063, 1064, 1074, 1087, 1105, 1114, 1115, 1116, 1117, 1119, 1140, 1143, 1152, 1153, 1154, 1157, 1158, 1178, 1185, 1186, 1188, 1189, 1190, 1191, 1194, 1196, 1211, 1212, 1215, 1219, 1221, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1273, 1282, 1284, 1286, 1313, 1317, 1318, 1322, 1324, 1325, 1326, 1329, 1332, 1336, 1340, 1346, 1347, 1348, 1350, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1377, 1382, 1383, 1384, 1387, 1388, 1389, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1414, 1416, 1420, 1428, 1433, 1434, 1436, 1437, 1442, 1446, 1449, 1450, 1451, 1452, 1453, 1459, 1465, 1467, 1470, 1471, 1473, 1475, 1476, 1477, 1480, 1481, 1482, 1509, 1510, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1529, 1538, 1563, 1570, 1577, 1596, 1608, 1612, 1613, 1616, 1625, 1626, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1644, 1645, 1649, 1655, 1656, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1692, 1693, 1695, 1697, 1699, 1701, 1707, 1710, 1714, 1715, 1716, 1717, 1729, 1733, 1734, 1754, 1755, 1758, 1762, 1771, 1772, 1774, 1775, 1777, 1811, 1814, 1818, 1835, 1837, 1849, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1879, 1881, 1882, 1884, 1885, 1887, 1888, 1892, 1894, 1896, 1900, 1903, 1907, 1909, 1911, 1913, 1914, 1915, 1919, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1935], "datatyp": [0, 71, 877, 1193, 1196, 1428, 1610, 1611, 1757, 1903, 1907], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 16, 17, 19, 20, 21, 27, 28, 32, 33, 35, 38, 39, 42, 45, 47, 48, 49, 51, 55, 56, 58, 59, 63, 64, 66, 68, 69, 70, 71, 98, 99, 114, 130, 131, 134, 146, 147, 150, 151, 160, 161, 166, 167, 197, 198, 199, 208, 234, 239, 243, 244, 245, 255, 274, 275, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 303, 304, 307, 308, 309, 310, 313, 315, 321, 324, 344, 352, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 378, 379, 394, 395, 408, 412, 437, 438, 449, 450, 454, 455, 486, 496, 518, 558, 559, 560, 561, 577, 580, 613, 614, 615, 618, 619, 682, 691, 735, 736, 737, 738, 739, 740, 757, 811, 823, 858, 862, 868, 875, 876, 881, 887, 890, 891, 904, 905, 906, 910, 911, 917, 922, 923, 925, 926, 927, 929, 934, 963, 969, 970, 973, 975, 977, 984, 994, 1015, 1057, 1063, 1064, 1065, 1066, 1073, 1074, 1075, 1089, 1096, 1114, 1115, 1116, 1117, 1120, 1126, 1127, 1128, 1129, 1132, 1136, 1138, 1139, 1140, 1150, 1151, 1152, 1161, 1162, 1164, 1165, 1170, 1171, 1173, 1185, 1194, 1196, 1200, 1207, 1216, 1218, 1219, 1220, 1222, 1223, 1228, 1246, 1248, 1251, 1252, 1265, 1273, 1274, 1275, 1277, 1279, 1280, 1283, 1284, 1290, 1293, 1294, 1298, 1299, 1303, 1306, 1317, 1319, 1329, 1332, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1365, 1375, 1380, 1382, 1394, 1428, 1429, 1438, 1456, 1471, 1475, 1479, 1502, 1503, 1504, 1529, 1538, 1577, 1596, 1599, 1608, 1612, 1613, 1631, 1653, 1657, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1692, 1693, 1699, 1701, 1729, 1733, 1749, 1754, 1757, 1759, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1811, 1812, 1828, 1834, 1838, 1840, 1853, 1854, 1859, 1860, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1877, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1905, 1907, 1910, 1914, 1915, 1919, 1920, 1921, 1924, 1928, 1929, 1930, 1934], "lower": [0, 1, 8, 16, 28, 39, 41, 47, 63, 790, 792, 856, 929, 934, 941, 942, 943, 945, 1083, 1084, 1156, 1157, 1225, 1232, 1234, 1242, 1243, 1250, 1253, 1258, 1296, 1318, 1325, 1336, 1446, 1502, 1503, 1504, 1575, 1576, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1697, 1712, 1714, 1734, 1749, 1757, 1794, 1837, 1838, 1839, 1865, 1866, 1867, 1869, 1885, 1887, 1889, 1900, 1909, 1914, 1924, 1930], "point": [0, 1, 7, 8, 9, 12, 13, 16, 19, 20, 23, 27, 30, 38, 39, 42, 45, 49, 55, 58, 59, 63, 71, 89, 154, 155, 321, 333, 339, 480, 695, 735, 736, 737, 738, 739, 740, 741, 746, 747, 748, 749, 750, 751, 752, 753, 756, 758, 759, 760, 761, 762, 772, 774, 776, 777, 778, 782, 792, 796, 816, 817, 818, 819, 822, 827, 849, 858, 859, 862, 877, 899, 901, 902, 903, 905, 906, 919, 920, 928, 963, 964, 968, 1018, 1020, 1029, 1033, 1034, 1115, 1116, 1117, 1143, 1149, 1153, 1154, 1158, 1178, 1193, 1196, 1211, 1212, 1219, 1221, 1242, 1243, 1266, 1268, 1273, 1282, 1325, 1332, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1421, 1422, 1423, 1428, 1479, 1480, 1492, 1518, 1527, 1538, 1577, 1596, 1608, 1655, 1667, 1698, 1714, 1715, 1716, 1720, 1729, 1742, 1754, 1755, 1762, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1849, 1864, 1866, 1868, 1869, 1870, 1873, 1879, 1885, 1887, 1888, 1889, 1893, 1897, 1900, 1903, 1912, 1913, 1914, 1915, 1917, 1919, 1920, 1923, 1926, 1928, 1929, 1930, 1931, 1932, 1935], "lower_precision_fp": 0, "half": [0, 1, 10, 39, 47, 614, 958, 1083, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1196, 1258, 1264, 1356, 1357, 1358, 1359, 1360, 1361, 1376, 1377, 1379, 1428, 1522, 1523, 1526, 1664, 1689, 1742, 1810, 1882, 1900, 1903, 1925, 1926, 1929, 1931], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 30, 32, 33, 38, 39, 41, 46, 47, 56, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 336, 586, 614, 757, 790, 838, 857, 875, 896, 905, 906, 919, 928, 952, 957, 1012, 1013, 1022, 1064, 1069, 1070, 1090, 1112, 1115, 1116, 1122, 1126, 1129, 1130, 1131, 1137, 1153, 1154, 1194, 1196, 1197, 1203, 1206, 1211, 1215, 1242, 1243, 1254, 1267, 1336, 1344, 1372, 1375, 1391, 1392, 1393, 1428, 1429, 1430, 1438, 1439, 1456, 1479, 1521, 1539, 1595, 1599, 1608, 1609, 1610, 1611, 1616, 1641, 1659, 1684, 1707, 1722, 1726, 1745, 1754, 1757, 1814, 1825, 1856, 1861, 1863, 1864, 1866, 1868, 1869, 1876, 1881, 1882, 1883, 1888, 1889, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1910, 1912, 1913, 1914, 1917, 1919, 1920, 1923, 1925, 1926, 1930, 1931, 1933, 1934], "linear": [0, 2, 9, 28, 39, 41, 42, 45, 47, 63, 65, 67, 69, 71, 430, 471, 472, 473, 474, 475, 478, 708, 717, 725, 726, 762, 789, 790, 791, 793, 811, 851, 855, 856, 858, 859, 900, 943, 975, 1069, 1125, 1127, 1135, 1137, 1149, 1196, 1200, 1207, 1221, 1227, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1256, 1258, 1286, 1325, 1344, 1350, 1370, 1378, 1379, 1387, 1413, 1428, 1430, 1443, 1445, 1447, 1455, 1457, 1464, 1467, 1478, 1480, 1516, 1525, 1526, 1538, 1572, 1580, 1585, 1596, 1599, 1608, 1615, 1616, 1620, 1630, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1640, 1648, 1649, 1652, 1692, 1695, 1703, 1714, 1849, 1856, 1864, 1867, 1868, 1874, 1877, 1884, 1887, 1892, 1893, 1894, 1896, 1900, 1905, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1919], "layer": [0, 8, 16, 39, 41, 43, 45, 46, 63, 66, 731, 732, 757, 838, 855, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1367, 1368, 1369, 1373, 1380, 1381, 1383, 1391, 1392, 1393, 1398, 1399, 1400, 1413, 1415, 1421, 1422, 1423, 1434, 1435, 1443, 1445, 1456, 1467, 1471, 1472, 1473, 1474, 1475, 1541, 1608, 1615, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1864, 1887, 1892, 1894, 1896, 1899, 1900, 1905, 1907, 1910, 1912, 1914, 1915, 1917, 1933], "convolut": [0, 1, 2, 18, 735, 736, 737, 738, 739, 740, 769, 770, 771, 950, 1205, 1356, 1357, 1358, 1359, 1360, 1361, 1367, 1368, 1369, 1373, 1404, 1405, 1406, 1407, 1408, 1409, 1440, 1441, 1446, 1476, 1477, 1479, 1502, 1503, 1504, 1505, 1506, 1507, 1526, 1527, 1757, 1864, 1865, 1867, 1877, 1887, 1891, 1892, 1897, 1900, 1909, 1913, 1914, 1917], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 55, 56, 58, 59, 60, 63, 65, 66, 67, 68, 70, 71, 83, 89, 98, 151, 254, 319, 321, 335, 336, 339, 377, 402, 447, 470, 480, 485, 497, 511, 515, 541, 577, 586, 614, 677, 686, 687, 688, 694, 732, 753, 757, 758, 760, 761, 762, 776, 779, 780, 782, 783, 784, 789, 790, 791, 792, 793, 796, 811, 812, 813, 814, 816, 817, 818, 819, 822, 837, 851, 855, 856, 857, 858, 859, 862, 871, 872, 883, 884, 885, 887, 890, 896, 898, 899, 900, 901, 902, 903, 905, 906, 919, 928, 929, 931, 932, 934, 937, 943, 950, 956, 958, 963, 964, 967, 968, 971, 972, 973, 975, 976, 978, 983, 995, 1006, 1012, 1015, 1016, 1026, 1036, 1043, 1052, 1057, 1061, 1064, 1069, 1085, 1086, 1087, 1088, 1090, 1092, 1097, 1099, 1105, 1108, 1110, 1111, 1115, 1116, 1117, 1125, 1126, 1131, 1133, 1135, 1136, 1137, 1141, 1149, 1153, 1154, 1156, 1158, 1171, 1173, 1185, 1186, 1188, 1189, 1192, 1193, 1194, 1196, 1197, 1200, 1202, 1203, 1206, 1209, 1211, 1212, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1262, 1265, 1266, 1267, 1268, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1287, 1288, 1290, 1293, 1296, 1297, 1298, 1301, 1303, 1318, 1322, 1323, 1324, 1325, 1326, 1336, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1372, 1373, 1375, 1380, 1381, 1382, 1383, 1388, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1443, 1445, 1456, 1459, 1460, 1461, 1467, 1471, 1473, 1475, 1476, 1477, 1479, 1480, 1492, 1498, 1499, 1500, 1510, 1511, 1518, 1519, 1520, 1521, 1527, 1538, 1539, 1562, 1565, 1567, 1570, 1577, 1595, 1596, 1597, 1598, 1599, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1627, 1641, 1645, 1648, 1649, 1650, 1651, 1653, 1655, 1656, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1691, 1694, 1695, 1707, 1713, 1714, 1720, 1729, 1732, 1733, 1740, 1742, 1753, 1754, 1757, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1806, 1809, 1810, 1813, 1814, 1823, 1825, 1829, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1849, 1850, 1851, 1852, 1856, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935], "much": [0, 4, 7, 9, 14, 16, 20, 21, 33, 38, 39, 151, 890, 899, 904, 1026, 1231, 1232, 1259, 1268, 1372, 1608, 1631, 1695, 1866, 1889, 1892, 1897, 1900, 1905, 1911, 1912, 1919, 1920, 1923], "faster": [0, 2, 8, 16, 19, 23, 25, 30, 38, 39, 41, 63, 899, 905, 906, 1125, 1225, 1226, 1231, 1232, 1236, 1241, 1249, 1251, 1253, 1256, 1259, 1261, 1265, 1268, 1444, 1461, 1567, 1583, 1608, 1612, 1613, 1615, 1670, 1671, 1682, 1796, 1797, 1798, 1800, 1801, 1877, 1889, 1892, 1897, 1910, 1914, 1923, 1928], "reduct": [0, 2, 22, 28, 41, 63, 321, 511, 515, 1241, 1273, 1325, 1344, 1345, 1351, 1362, 1364, 1372, 1382, 1388, 1389, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1477, 1499, 1500, 1508, 1510, 1511, 1519, 1524, 1535, 1536, 1539, 1540, 1550, 1558, 1559, 1560, 1561, 1562, 1570, 1581, 1582, 1593, 1594, 1608, 1714, 1791, 1867, 1882, 1893, 1897, 1911, 1914], "often": [0, 2, 4, 7, 8, 15, 16, 21, 28, 32, 38, 41, 47, 59, 66, 71, 151, 890, 904, 1211, 1242, 1243, 1252, 1301, 1371, 1391, 1392, 1393, 1492, 1500, 1518, 1527, 1599, 1615, 1662, 1697, 1869, 1889, 1892, 1896, 1899, 1900, 1903, 1904, 1911, 1919, 1928], "requir": [0, 1, 5, 8, 9, 11, 12, 13, 15, 16, 18, 19, 23, 32, 33, 38, 39, 41, 42, 43, 45, 47, 49, 57, 58, 63, 66, 68, 70, 71, 120, 151, 222, 335, 457, 494, 511, 513, 515, 557, 790, 792, 820, 823, 877, 886, 890, 895, 898, 899, 900, 901, 902, 903, 904, 950, 969, 970, 1025, 1069, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1110, 1111, 1137, 1138, 1209, 1235, 1266, 1268, 1282, 1364, 1371, 1372, 1471, 1472, 1473, 1474, 1475, 1477, 1519, 1577, 1599, 1608, 1609, 1618, 1620, 1622, 1662, 1673, 1683, 1701, 1798, 1810, 1849, 1856, 1863, 1866, 1869, 1871, 1876, 1877, 1881, 1883, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1907, 1911, 1912, 1914, 1915, 1919, 1920, 1921, 1923, 1928, 1930, 1931, 1933, 1934], "dynam": [0, 13, 16, 18, 21, 24, 25, 28, 32, 33, 38, 677, 726, 730, 757, 758, 759, 760, 761, 762, 791, 812, 823, 826, 841, 847, 848, 849, 850, 855, 856, 950, 971, 1203, 1209, 1211, 1267, 1615, 1864, 1868, 1869, 1870, 1887, 1892, 1900, 1903, 1907, 1910, 1911, 1915], "rang": [0, 1, 3, 12, 14, 20, 28, 38, 41, 42, 45, 47, 58, 59, 61, 67, 71, 89, 301, 480, 681, 758, 760, 762, 792, 816, 817, 818, 819, 820, 822, 823, 824, 882, 920, 945, 1030, 1031, 1039, 1069, 1119, 1135, 1156, 1157, 1158, 1262, 1273, 1288, 1297, 1313, 1325, 1336, 1364, 1374, 1376, 1377, 1381, 1387, 1399, 1418, 1430, 1435, 1439, 1445, 1461, 1462, 1463, 1467, 1522, 1523, 1527, 1583, 1608, 1613, 1685, 1686, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1714, 1793, 1848, 1866, 1867, 1869, 1889, 1891, 1892, 1896, 1900, 1902, 1903, 1907, 1909, 1910, 1913, 1914, 1917, 1918, 1924, 1926, 1928, 1929, 1930, 1931], "tri": [0, 2, 3, 7, 15, 16, 38, 47, 51, 71, 577, 1196, 1428, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1868, 1869, 1881, 1896, 1907, 1911], "match": [0, 1, 3, 16, 20, 27, 41, 43, 45, 47, 58, 71, 151, 313, 315, 321, 472, 473, 497, 498, 577, 580, 690, 696, 776, 790, 791, 792, 851, 875, 890, 904, 905, 906, 969, 972, 984, 985, 986, 1015, 1061, 1069, 1125, 1137, 1173, 1196, 1209, 1211, 1228, 1267, 1289, 1363, 1372, 1428, 1434, 1480, 1499, 1500, 1538, 1564, 1571, 1577, 1596, 1608, 1620, 1650, 1656, 1715, 1749, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1830, 1856, 1866, 1869, 1876, 1882, 1884, 1889, 1890, 1892, 1894, 1900, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1916, 1919, 1926, 1930, 1932], "each": [0, 1, 2, 5, 9, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 32, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 56, 59, 60, 61, 63, 64, 66, 68, 69, 71, 84, 98, 120, 154, 155, 398, 402, 491, 511, 513, 515, 542, 604, 614, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 683, 690, 692, 693, 696, 732, 757, 789, 837, 838, 856, 858, 859, 862, 874, 883, 884, 885, 886, 888, 889, 890, 895, 904, 918, 921, 930, 934, 938, 939, 941, 944, 948, 950, 952, 968, 981, 982, 986, 1015, 1018, 1020, 1026, 1028, 1032, 1035, 1041, 1046, 1047, 1048, 1049, 1052, 1053, 1064, 1067, 1069, 1086, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1110, 1111, 1113, 1118, 1122, 1127, 1128, 1132, 1136, 1137, 1138, 1149, 1155, 1157, 1158, 1159, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1196, 1211, 1212, 1217, 1249, 1267, 1268, 1283, 1285, 1293, 1295, 1296, 1297, 1298, 1301, 1303, 1309, 1310, 1318, 1324, 1326, 1336, 1341, 1344, 1345, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1380, 1381, 1383, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1408, 1409, 1413, 1415, 1419, 1420, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1442, 1443, 1445, 1456, 1459, 1460, 1462, 1467, 1470, 1476, 1477, 1479, 1497, 1499, 1500, 1505, 1506, 1507, 1510, 1511, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1527, 1537, 1539, 1562, 1563, 1565, 1567, 1570, 1577, 1590, 1599, 1604, 1605, 1608, 1641, 1642, 1644, 1654, 1655, 1656, 1662, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1706, 1710, 1711, 1714, 1721, 1729, 1734, 1735, 1740, 1744, 1749, 1762, 1773, 1779, 1795, 1796, 1797, 1798, 1800, 1801, 1802, 1813, 1814, 1829, 1831, 1832, 1835, 1846, 1847, 1850, 1856, 1857, 1863, 1868, 1869, 1875, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1910, 1912, 1913, 1914, 1919, 1920, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1932, 1933], "its": [0, 1, 4, 5, 7, 8, 9, 11, 13, 14, 15, 16, 19, 20, 22, 23, 32, 33, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 58, 59, 60, 63, 70, 71, 83, 84, 151, 457, 486, 502, 511, 513, 515, 580, 581, 582, 614, 677, 820, 823, 871, 872, 873, 875, 876, 877, 890, 893, 905, 910, 911, 917, 942, 943, 957, 958, 964, 968, 976, 1004, 1006, 1015, 1052, 1056, 1059, 1069, 1072, 1117, 1122, 1126, 1127, 1128, 1131, 1136, 1157, 1158, 1162, 1176, 1196, 1206, 1231, 1232, 1236, 1241, 1248, 1250, 1253, 1254, 1259, 1265, 1290, 1316, 1344, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1391, 1392, 1393, 1428, 1429, 1438, 1459, 1467, 1475, 1527, 1538, 1565, 1571, 1599, 1604, 1605, 1609, 1610, 1611, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1642, 1648, 1652, 1656, 1665, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1704, 1729, 1733, 1737, 1738, 1754, 1755, 1759, 1779, 1815, 1834, 1835, 1837, 1845, 1854, 1866, 1868, 1869, 1873, 1877, 1879, 1881, 1888, 1889, 1890, 1892, 1893, 1894, 1896, 1897, 1900, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1919, 1920, 1921, 1923, 1926, 1927, 1929, 1932, 1933], "appropri": [0, 7, 8, 9, 16, 20, 23, 41, 42, 47, 63, 70, 71, 891, 1015, 1211, 1869, 1870, 1873, 1883, 1897, 1912, 1914, 1917, 1919, 1920, 1921, 1925, 1934], "ordinarili": [0, 1888], "train": [0, 1, 11, 12, 16, 19, 21, 22, 24, 25, 28, 33, 38, 39, 41, 42, 44, 45, 49, 56, 57, 58, 59, 63, 66, 67, 71, 709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 730, 796, 798, 835, 836, 852, 853, 854, 856, 858, 859, 860, 1014, 1015, 1018, 1020, 1027, 1135, 1171, 1196, 1201, 1207, 1210, 1211, 1336, 1340, 1346, 1347, 1348, 1364, 1365, 1366, 1371, 1372, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1434, 1435, 1446, 1467, 1475, 1493, 1497, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1575, 1576, 1608, 1616, 1618, 1620, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1863, 1865, 1866, 1867, 1877, 1879, 1887, 1889, 1892, 1893, 1896, 1901, 1903, 1905, 1907, 1910, 1911, 1912, 1913, 1917, 1919, 1921, 1928], "gradscal": [0, 1888, 1892], "togeth": [0, 3, 9, 12, 15, 16, 23, 38, 41, 46, 47, 64, 69, 71, 757, 1012, 1069, 1125, 1127, 1131, 1135, 1136, 1141, 1235, 1380, 1398, 1443, 1538, 1608, 1612, 1835, 1877, 1888, 1894, 1895, 1896, 1899, 1900, 1914, 1919, 1920, 1921, 1928], "shown": [0, 12, 17, 39, 50, 59, 1012, 1022, 1400, 1620, 1665, 1695, 1762, 1866, 1869, 1888, 1892, 1894, 1896, 1900, 1912, 1914, 1923], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 32, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 88, 89, 192, 209, 242, 254, 260, 289, 311, 313, 315, 317, 321, 335, 352, 401, 402, 444, 445, 446, 447, 448, 470, 480, 482, 486, 491, 494, 497, 511, 513, 515, 534, 541, 555, 557, 577, 578, 580, 581, 582, 583, 584, 585, 586, 604, 614, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 717, 725, 726, 731, 735, 736, 737, 738, 739, 740, 742, 743, 745, 753, 754, 755, 757, 758, 759, 760, 761, 762, 769, 770, 771, 782, 789, 790, 791, 793, 794, 807, 808, 809, 810, 811, 812, 813, 814, 821, 835, 851, 856, 857, 858, 859, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 908, 910, 911, 918, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 948, 949, 950, 953, 955, 956, 958, 961, 962, 963, 964, 965, 966, 967, 968, 969, 1012, 1013, 1018, 1020, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1133, 1135, 1137, 1138, 1139, 1140, 1143, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1166, 1170, 1171, 1173, 1181, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1213, 1214, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1494, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1518, 1519, 1522, 1523, 1527, 1529, 1562, 1564, 1565, 1568, 1569, 1577, 1596, 1599, 1608, 1615, 1616, 1618, 1620, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1702, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1789, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1808, 1809, 1811, 1813, 1814, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1866, 1868, 1869, 1870, 1873, 1875, 1876, 1878, 1879, 1882, 1883, 1884, 1887, 1889, 1890, 1891, 1892, 1896, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934], "recip": [0, 3, 15, 45, 1428, 1608, 1622, 1888, 1900], "howev": [0, 2, 3, 4, 5, 7, 9, 11, 14, 15, 16, 17, 32, 33, 38, 39, 41, 45, 47, 49, 55, 63, 64, 65, 67, 68, 70, 71, 480, 542, 891, 898, 972, 994, 1015, 1057, 1059, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1125, 1126, 1130, 1131, 1133, 1136, 1137, 1196, 1199, 1200, 1206, 1208, 1235, 1250, 1251, 1253, 1267, 1268, 1285, 1344, 1347, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1372, 1428, 1502, 1503, 1504, 1527, 1599, 1608, 1641, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1856, 1864, 1869, 1884, 1888, 1889, 1892, 1894, 1898, 1900, 1902, 1904, 1905, 1906, 1907, 1911, 1912, 1919, 1921, 1923], "modular": [0, 1888], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 15, 16, 20, 22, 26, 28, 32, 37, 38, 39, 41, 45, 47, 48, 49, 51, 55, 57, 58, 63, 64, 68, 70, 71, 197, 222, 254, 313, 321, 457, 513, 515, 553, 600, 614, 677, 686, 812, 813, 814, 858, 889, 896, 898, 900, 904, 905, 914, 921, 932, 944, 961, 962, 964, 966, 969, 970, 972, 973, 981, 994, 1004, 1005, 1006, 1012, 1013, 1015, 1026, 1028, 1032, 1046, 1047, 1069, 1108, 1112, 1117, 1120, 1122, 1129, 1130, 1132, 1158, 1193, 1196, 1199, 1200, 1205, 1206, 1208, 1209, 1211, 1217, 1226, 1227, 1231, 1232, 1233, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1251, 1253, 1254, 1257, 1258, 1259, 1265, 1267, 1268, 1273, 1290, 1300, 1313, 1336, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1394, 1398, 1424, 1425, 1426, 1428, 1435, 1443, 1473, 1475, 1480, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1519, 1527, 1529, 1538, 1544, 1565, 1577, 1595, 1596, 1597, 1598, 1599, 1608, 1615, 1617, 1618, 1620, 1655, 1684, 1689, 1713, 1733, 1736, 1754, 1757, 1764, 1782, 1794, 1810, 1814, 1837, 1849, 1863, 1864, 1866, 1868, 1869, 1873, 1875, 1876, 1877, 1879, 1883, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1900, 1903, 1904, 1905, 1906, 1907, 1911, 1913, 1914, 1915, 1917, 1919, 1921, 1923, 1925, 1931, 1934], "separ": [0, 1, 3, 9, 11, 28, 32, 38, 41, 45, 58, 59, 63, 64, 66, 69, 70, 71, 732, 757, 887, 1069, 1086, 1088, 1094, 1095, 1098, 1099, 1104, 1106, 1125, 1206, 1241, 1256, 1383, 1391, 1392, 1393, 1434, 1436, 1546, 1656, 1863, 1867, 1869, 1875, 1888, 1889, 1891, 1892, 1895, 1905, 1910, 1911, 1920, 1923, 1924, 1928], "desir": [0, 1, 3, 28, 38, 41, 47, 63, 71, 89, 156, 171, 173, 176, 179, 180, 181, 196, 207, 210, 240, 254, 267, 297, 325, 393, 444, 445, 446, 447, 448, 495, 497, 498, 518, 522, 541, 542, 543, 557, 577, 580, 600, 601, 614, 790, 862, 876, 919, 928, 947, 957, 1016, 1017, 1040, 1041, 1050, 1051, 1070, 1071, 1072, 1082, 1087, 1105, 1122, 1123, 1124, 1153, 1154, 1196, 1215, 1266, 1282, 1288, 1295, 1308, 1314, 1323, 1325, 1326, 1344, 1345, 1428, 1478, 1500, 1546, 1583, 1584, 1599, 1641, 1655, 1659, 1660, 1704, 1711, 1714, 1715, 1716, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1813, 1828, 1839, 1841, 1861, 1862, 1882, 1883, 1884, 1888, 1889, 1892, 1895, 1898, 1900, 1905, 1912, 1918, 1919, 1924, 1925, 1926], "As": [0, 1, 8, 12, 17, 20, 26, 28, 39, 41, 43, 47, 63, 66, 67, 71, 254, 932, 1069, 1200, 1227, 1231, 1232, 1242, 1243, 1254, 1259, 1367, 1368, 1369, 1373, 1394, 1428, 1459, 1595, 1654, 1660, 1862, 1866, 1868, 1869, 1876, 1884, 1889, 1892, 1894, 1896, 1900, 1903, 1906, 1907, 1911, 1912, 1918, 1919, 1920, 1921, 1923, 1931], "section": [0, 1, 7, 12, 20, 26, 28, 38, 47, 49, 50, 67, 71, 120, 1026, 1069, 1149, 1365, 1380, 1398, 1426, 1443, 1510, 1644, 1829, 1864, 1866, 1867, 1868, 1869, 1870, 1881, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1920, 1928], "infer": [0, 1, 2, 3, 5, 11, 14, 16, 19, 21, 24, 30, 33, 47, 58, 577, 614, 858, 859, 862, 876, 877, 986, 1122, 1123, 1158, 1171, 1180, 1194, 1197, 1205, 1210, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1434, 1480, 1538, 1564, 1599, 1653, 1684, 1695, 1729, 1736, 1754, 1755, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1845, 1864, 1866, 1868, 1869, 1873, 1882, 1884, 1900, 1907, 1908, 1913, 1914, 1915, 1917, 1923], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 32, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 56, 58, 59, 63, 67, 68, 70, 71, 83, 84, 120, 254, 311, 321, 323, 335, 352, 444, 445, 446, 447, 448, 457, 480, 485, 511, 513, 515, 554, 580, 581, 582, 584, 585, 611, 614, 692, 693, 732, 735, 736, 737, 738, 740, 769, 770, 771, 776, 782, 783, 784, 788, 790, 798, 811, 814, 817, 818, 821, 825, 839, 846, 855, 875, 891, 894, 895, 896, 897, 898, 900, 905, 919, 920, 928, 971, 972, 973, 975, 982, 984, 986, 1012, 1013, 1015, 1036, 1066, 1070, 1072, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1115, 1116, 1120, 1121, 1126, 1137, 1149, 1153, 1154, 1158, 1166, 1177, 1185, 1194, 1196, 1199, 1200, 1207, 1211, 1212, 1215, 1226, 1231, 1232, 1234, 1235, 1236, 1237, 1239, 1241, 1242, 1243, 1244, 1254, 1256, 1257, 1259, 1260, 1267, 1268, 1285, 1290, 1336, 1359, 1360, 1361, 1364, 1365, 1371, 1372, 1375, 1398, 1428, 1431, 1433, 1434, 1436, 1444, 1467, 1475, 1479, 1480, 1510, 1519, 1521, 1527, 1538, 1565, 1595, 1596, 1599, 1602, 1603, 1604, 1605, 1608, 1610, 1611, 1621, 1641, 1642, 1643, 1655, 1662, 1666, 1670, 1671, 1673, 1684, 1687, 1691, 1694, 1695, 1697, 1701, 1713, 1722, 1726, 1728, 1730, 1753, 1757, 1758, 1760, 1764, 1791, 1795, 1805, 1810, 1814, 1828, 1839, 1841, 1846, 1847, 1849, 1853, 1854, 1855, 1856, 1863, 1867, 1868, 1869, 1873, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 27, 28, 30, 32, 33, 35, 38, 39, 41, 42, 43, 47, 49, 55, 56, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 197, 222, 254, 289, 313, 315, 321, 335, 352, 470, 480, 491, 497, 511, 513, 515, 580, 586, 600, 614, 683, 684, 685, 686, 687, 690, 696, 731, 735, 736, 737, 738, 739, 740, 757, 789, 790, 791, 811, 855, 856, 889, 905, 918, 922, 924, 925, 927, 930, 939, 943, 950, 1004, 1018, 1020, 1026, 1050, 1051, 1052, 1069, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1113, 1135, 1137, 1138, 1149, 1158, 1173, 1196, 1206, 1207, 1209, 1211, 1212, 1227, 1231, 1232, 1235, 1238, 1239, 1240, 1241, 1243, 1252, 1253, 1255, 1259, 1268, 1275, 1283, 1290, 1296, 1300, 1336, 1340, 1344, 1345, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1371, 1372, 1374, 1375, 1380, 1382, 1389, 1394, 1398, 1400, 1428, 1431, 1432, 1433, 1434, 1442, 1443, 1449, 1450, 1451, 1452, 1453, 1454, 1459, 1464, 1478, 1479, 1483, 1484, 1485, 1500, 1502, 1503, 1504, 1527, 1563, 1565, 1577, 1585, 1599, 1604, 1605, 1608, 1618, 1641, 1642, 1643, 1645, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1697, 1742, 1751, 1789, 1799, 1805, 1814, 1829, 1831, 1835, 1843, 1854, 1855, 1856, 1863, 1864, 1866, 1869, 1871, 1873, 1875, 1876, 1877, 1879, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1934], "api": [0, 2, 3, 5, 8, 9, 11, 21, 25, 39, 41, 42, 46, 49, 50, 51, 55, 56, 57, 58, 59, 63, 64, 67, 70, 797, 821, 858, 891, 892, 893, 901, 917, 939, 970, 1004, 1005, 1006, 1012, 1013, 1015, 1042, 1073, 1113, 1126, 1129, 1130, 1132, 1137, 1206, 1207, 1209, 1313, 1608, 1650, 1653, 1662, 1664, 1742, 1753, 1759, 1843, 1856, 1863, 1873, 1875, 1876, 1877, 1881, 1882, 1884, 1889, 1893, 1905, 1907, 1915, 1919, 1920, 1923, 1926, 1928, 1931, 1934], "also": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 22, 23, 24, 27, 28, 30, 32, 33, 35, 38, 39, 41, 45, 46, 47, 48, 55, 58, 63, 67, 68, 69, 70, 71, 155, 219, 222, 223, 254, 323, 511, 513, 515, 540, 611, 738, 739, 740, 757, 797, 811, 858, 877, 886, 887, 896, 919, 928, 942, 950, 969, 1012, 1015, 1026, 1050, 1051, 1069, 1073, 1089, 1120, 1126, 1132, 1136, 1137, 1138, 1141, 1143, 1153, 1154, 1158, 1171, 1196, 1199, 1200, 1202, 1205, 1209, 1211, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1297, 1303, 1316, 1324, 1336, 1344, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1372, 1375, 1380, 1394, 1398, 1428, 1435, 1443, 1457, 1459, 1467, 1476, 1477, 1479, 1505, 1506, 1507, 1527, 1564, 1580, 1599, 1608, 1618, 1620, 1630, 1632, 1634, 1635, 1636, 1637, 1653, 1685, 1691, 1695, 1698, 1701, 1726, 1733, 1745, 1755, 1770, 1771, 1788, 1791, 1805, 1814, 1823, 1825, 1828, 1834, 1835, 1846, 1847, 1856, 1859, 1863, 1864, 1866, 1868, 1869, 1873, 1875, 1876, 1877, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1919, 1920, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934], "arg": [0, 1, 3, 4, 5, 12, 13, 15, 20, 27, 28, 32, 38, 39, 41, 45, 46, 47, 49, 50, 56, 57, 59, 60, 61, 63, 70, 71, 88, 577, 600, 677, 729, 744, 746, 748, 749, 750, 751, 757, 759, 760, 821, 858, 887, 889, 894, 895, 954, 1015, 1125, 1129, 1130, 1131, 1137, 1196, 1199, 1285, 1344, 1345, 1362, 1364, 1380, 1388, 1390, 1395, 1398, 1417, 1419, 1420, 1428, 1431, 1432, 1433, 1435, 1442, 1443, 1456, 1458, 1459, 1460, 1462, 1466, 1467, 1468, 1469, 1476, 1499, 1500, 1510, 1539, 1562, 1570, 1599, 1608, 1622, 1627, 1641, 1648, 1650, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1815, 1847, 1853, 1856, 1863, 1867, 1869, 1870, 1881, 1883, 1889, 1892, 1893, 1894, 1895, 1902, 1907, 1908, 1911, 1912, 1919, 1920, 1921, 1925, 1933, 1934], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 83, 84, 85, 88, 89, 98, 151, 154, 155, 156, 171, 173, 176, 179, 180, 181, 191, 192, 196, 197, 207, 209, 210, 219, 224, 240, 254, 255, 267, 290, 297, 311, 313, 315, 319, 321, 323, 325, 328, 329, 330, 331, 332, 333, 335, 336, 338, 340, 341, 342, 343, 352, 393, 400, 402, 406, 447, 457, 470, 471, 480, 482, 485, 486, 491, 493, 494, 495, 496, 497, 498, 501, 502, 511, 513, 515, 518, 521, 522, 534, 540, 541, 542, 554, 557, 577, 578, 580, 581, 582, 584, 585, 586, 600, 601, 604, 611, 614, 615, 617, 621, 677, 678, 680, 681, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 760, 761, 762, 765, 766, 769, 770, 771, 772, 773, 774, 775, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 796, 798, 799, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 821, 823, 824, 830, 835, 836, 837, 854, 855, 856, 858, 859, 862, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 910, 911, 914, 917, 918, 919, 920, 921, 923, 926, 928, 930, 931, 934, 935, 936, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 952, 953, 955, 957, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 981, 982, 984, 986, 989, 990, 991, 993, 997, 998, 1001, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1056, 1057, 1058, 1059, 1060, 1061, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1079, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1149, 1152, 1153, 1154, 1155, 1157, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1199, 1200, 1201, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1215, 1216, 1217, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1278, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1316, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1459, 1460, 1461, 1463, 1464, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1495, 1496, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1538, 1539, 1544, 1546, 1548, 1549, 1551, 1552, 1553, 1562, 1563, 1565, 1567, 1568, 1569, 1570, 1571, 1577, 1580, 1583, 1584, 1592, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1643, 1644, 1645, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1720, 1722, 1723, 1724, 1726, 1727, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1780, 1782, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1808, 1809, 1810, 1813, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "equival": [0, 3, 5, 12, 20, 38, 39, 45, 46, 47, 51, 58, 59, 67, 68, 71, 83, 156, 171, 173, 176, 179, 180, 181, 240, 255, 267, 297, 319, 325, 393, 447, 457, 496, 498, 522, 601, 607, 614, 615, 617, 689, 741, 745, 752, 754, 756, 782, 783, 784, 873, 887, 931, 933, 936, 938, 941, 948, 949, 1057, 1061, 1064, 1067, 1068, 1069, 1071, 1086, 1088, 1091, 1094, 1095, 1098, 1099, 1101, 1104, 1106, 1124, 1126, 1129, 1131, 1137, 1159, 1161, 1173, 1195, 1196, 1206, 1211, 1212, 1215, 1227, 1248, 1252, 1260, 1265, 1297, 1302, 1316, 1323, 1336, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1371, 1372, 1383, 1389, 1391, 1392, 1393, 1394, 1398, 1400, 1428, 1459, 1467, 1479, 1481, 1546, 1567, 1577, 1596, 1597, 1598, 1608, 1660, 1684, 1720, 1723, 1727, 1751, 1757, 1765, 1787, 1793, 1806, 1816, 1817, 1823, 1828, 1847, 1856, 1857, 1858, 1862, 1866, 1868, 1869, 1889, 1907, 1911, 1915, 1923, 1924, 1926, 1929, 1930, 1934, 1935], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 25, 26, 27, 28, 30, 32, 33, 34, 35, 38, 39, 41, 43, 45, 46, 47, 48, 50, 51, 58, 59, 63, 66, 67, 68, 70, 71, 83, 84, 311, 321, 457, 580, 614, 682, 683, 684, 686, 690, 692, 693, 696, 726, 735, 736, 737, 769, 770, 771, 776, 782, 783, 784, 789, 790, 791, 792, 798, 814, 830, 856, 858, 859, 889, 891, 896, 905, 906, 918, 919, 923, 926, 928, 930, 942, 943, 950, 963, 969, 971, 1012, 1013, 1015, 1032, 1064, 1066, 1069, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1114, 1115, 1116, 1117, 1119, 1120, 1121, 1132, 1136, 1153, 1154, 1166, 1193, 1200, 1207, 1211, 1215, 1216, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1286, 1290, 1294, 1299, 1300, 1317, 1356, 1357, 1358, 1359, 1360, 1361, 1368, 1371, 1372, 1375, 1395, 1415, 1433, 1434, 1467, 1475, 1477, 1479, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1519, 1521, 1527, 1538, 1544, 1577, 1595, 1596, 1598, 1608, 1655, 1660, 1662, 1670, 1671, 1673, 1701, 1713, 1732, 1733, 1754, 1757, 1758, 1788, 1791, 1794, 1811, 1814, 1837, 1839, 1841, 1853, 1854, 1855, 1862, 1863, 1864, 1866, 1868, 1870, 1871, 1873, 1877, 1879, 1881, 1885, 1889, 1890, 1891, 1892, 1893, 1894, 1898, 1900, 1902, 1903, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1917, 1918, 1919, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934], "now": [0, 1, 11, 14, 15, 17, 19, 20, 22, 26, 27, 28, 41, 46, 48, 55, 59, 60, 63, 68, 71, 222, 494, 897, 904, 984, 1012, 1033, 1034, 1120, 1143, 1193, 1194, 1200, 1211, 1245, 1425, 1444, 1480, 1599, 1620, 1631, 1673, 1754, 1805, 1810, 1866, 1876, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1900, 1901, 1907, 1911, 1914, 1920, 1921, 1923, 1931, 1934], "class": [0, 1, 2, 3, 12, 13, 14, 20, 23, 27, 28, 33, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 52, 55, 56, 58, 60, 63, 68, 70, 89, 554, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 833, 834, 835, 836, 837, 838, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 891, 894, 895, 896, 897, 917, 970, 971, 972, 973, 975, 976, 991, 993, 1004, 1044, 1073, 1135, 1171, 1194, 1195, 1196, 1199, 1201, 1202, 1206, 1207, 1210, 1211, 1212, 1213, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1500, 1510, 1518, 1562, 1564, 1599, 1608, 1609, 1610, 1611, 1617, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1641, 1648, 1653, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1720, 1759, 1789, 1864, 1867, 1870, 1873, 1876, 1879, 1881, 1883, 1888, 1889, 1892, 1894, 1895, 1896, 1900, 1902, 1905, 1908, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1935], "device_typ": [0, 41, 1888, 1918], "dtype": [0, 1, 13, 15, 28, 30, 35, 36, 38, 41, 43, 46, 63, 71, 154, 155, 192, 209, 213, 214, 215, 216, 242, 311, 313, 315, 317, 319, 321, 409, 428, 431, 444, 445, 446, 447, 448, 452, 457, 469, 480, 482, 511, 513, 562, 577, 578, 600, 614, 684, 686, 689, 690, 694, 696, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 746, 747, 748, 749, 750, 751, 752, 753, 755, 757, 758, 761, 762, 769, 770, 771, 791, 792, 796, 816, 817, 818, 819, 820, 821, 822, 823, 824, 838, 855, 856, 858, 859, 862, 876, 877, 894, 896, 898, 900, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 935, 942, 958, 961, 962, 968, 969, 985, 1050, 1051, 1070, 1071, 1072, 1082, 1086, 1087, 1088, 1094, 1095, 1105, 1112, 1117, 1119, 1121, 1122, 1123, 1124, 1143, 1153, 1154, 1166, 1196, 1200, 1209, 1215, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1277, 1278, 1279, 1280, 1282, 1285, 1286, 1290, 1294, 1295, 1296, 1299, 1300, 1318, 1322, 1323, 1324, 1326, 1336, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1371, 1372, 1375, 1380, 1381, 1383, 1391, 1392, 1393, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1428, 1434, 1435, 1436, 1443, 1444, 1445, 1449, 1450, 1451, 1452, 1453, 1467, 1471, 1473, 1475, 1479, 1480, 1481, 1482, 1494, 1510, 1511, 1544, 1546, 1577, 1583, 1584, 1599, 1610, 1611, 1617, 1620, 1621, 1641, 1655, 1659, 1660, 1664, 1666, 1701, 1707, 1711, 1712, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1739, 1742, 1754, 1755, 1757, 1758, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1786, 1790, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1813, 1814, 1825, 1828, 1839, 1841, 1846, 1849, 1854, 1855, 1859, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1876, 1883, 1884, 1892, 1894, 1900, 1903, 1907, 1909, 1914, 1915, 1916, 1923, 1924, 1925, 1928, 1929, 1930, 1935], "none": [0, 1, 2, 3, 5, 12, 18, 20, 28, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 55, 56, 58, 60, 63, 67, 68, 69, 70, 71, 113, 115, 116, 117, 119, 135, 136, 139, 151, 154, 155, 157, 174, 186, 187, 188, 189, 205, 206, 208, 210, 213, 214, 215, 216, 230, 235, 236, 237, 238, 258, 286, 290, 301, 335, 351, 354, 377, 407, 409, 410, 411, 414, 420, 426, 427, 428, 429, 430, 431, 444, 445, 446, 447, 448, 452, 453, 469, 478, 480, 486, 492, 501, 511, 518, 534, 535, 549, 550, 552, 553, 562, 577, 578, 580, 585, 587, 600, 605, 606, 607, 612, 623, 625, 627, 629, 631, 633, 635, 637, 639, 641, 643, 645, 647, 649, 652, 654, 656, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 692, 693, 694, 695, 696, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 746, 747, 748, 749, 750, 751, 752, 763, 764, 765, 766, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 790, 791, 792, 794, 796, 811, 814, 816, 817, 818, 819, 822, 823, 835, 836, 837, 854, 855, 856, 857, 858, 859, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 875, 876, 877, 878, 879, 880, 881, 882, 886, 887, 888, 889, 890, 891, 892, 893, 896, 897, 899, 901, 902, 903, 904, 905, 906, 910, 911, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 934, 937, 939, 940, 941, 942, 943, 945, 946, 948, 950, 955, 958, 959, 960, 962, 963, 965, 966, 967, 968, 969, 970, 972, 973, 975, 976, 977, 981, 982, 984, 985, 986, 989, 990, 991, 997, 998, 1004, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1039, 1042, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1061, 1062, 1064, 1065, 1066, 1068, 1070, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1124, 1125, 1126, 1127, 1131, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1173, 1174, 1190, 1191, 1193, 1195, 1196, 1200, 1203, 1205, 1206, 1207, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1371, 1372, 1374, 1376, 1377, 1378, 1381, 1382, 1383, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1442, 1444, 1445, 1459, 1460, 1461, 1462, 1463, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1481, 1482, 1487, 1488, 1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1518, 1519, 1522, 1523, 1524, 1525, 1527, 1528, 1535, 1537, 1538, 1539, 1540, 1541, 1544, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1567, 1570, 1577, 1581, 1582, 1583, 1584, 1592, 1593, 1594, 1596, 1597, 1598, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1619, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1641, 1643, 1644, 1645, 1646, 1649, 1650, 1652, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1702, 1703, 1706, 1707, 1708, 1710, 1711, 1713, 1714, 1717, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1740, 1742, 1743, 1744, 1749, 1762, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1786, 1787, 1790, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1825, 1826, 1827, 1828, 1830, 1832, 1835, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1846, 1847, 1850, 1851, 1852, 1853, 1856, 1858, 1859, 1860, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1889, 1892, 1894, 1895, 1900, 1902, 1905, 1907, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1924, 1925, 1926, 1928, 1930, 1932, 1933, 1934], "enabl": [0, 1, 2, 5, 8, 12, 14, 15, 16, 17, 18, 20, 21, 22, 28, 35, 36, 38, 39, 41, 42, 43, 45, 46, 47, 49, 59, 63, 501, 502, 677, 757, 809, 810, 891, 896, 917, 950, 970, 1015, 1069, 1073, 1171, 1179, 1180, 1198, 1204, 1309, 1310, 1380, 1398, 1443, 1444, 1474, 1577, 1608, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1653, 1683, 1758, 1759, 1762, 1789, 1849, 1869, 1875, 1876, 1877, 1880, 1884, 1888, 1889, 1890, 1891, 1892, 1899, 1901, 1903, 1904, 1907, 1912, 1913, 1918, 1919, 1920, 1923, 1931, 1933, 1934], "true": [0, 1, 2, 3, 5, 13, 14, 16, 18, 19, 20, 21, 23, 27, 28, 32, 38, 39, 41, 42, 43, 45, 46, 47, 49, 60, 63, 68, 69, 70, 71, 151, 197, 210, 260, 319, 321, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 396, 400, 402, 447, 457, 459, 470, 476, 486, 493, 494, 502, 514, 515, 553, 564, 577, 578, 587, 591, 600, 606, 614, 677, 684, 689, 690, 691, 692, 693, 694, 696, 715, 716, 717, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 743, 746, 751, 753, 757, 758, 761, 762, 765, 766, 776, 782, 783, 794, 811, 823, 856, 870, 872, 873, 877, 886, 889, 890, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 917, 919, 922, 925, 927, 928, 934, 935, 941, 942, 943, 949, 950, 953, 955, 961, 972, 1010, 1064, 1073, 1074, 1075, 1091, 1092, 1098, 1099, 1122, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1136, 1137, 1138, 1140, 1152, 1153, 1154, 1157, 1158, 1169, 1171, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1200, 1201, 1202, 1205, 1211, 1212, 1213, 1215, 1217, 1220, 1225, 1226, 1237, 1238, 1239, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1261, 1262, 1265, 1267, 1268, 1277, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1289, 1293, 1295, 1296, 1297, 1298, 1301, 1318, 1323, 1326, 1329, 1332, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1376, 1377, 1380, 1381, 1382, 1383, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1437, 1442, 1443, 1444, 1445, 1459, 1460, 1467, 1471, 1473, 1474, 1475, 1476, 1477, 1480, 1481, 1492, 1494, 1495, 1496, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1527, 1529, 1531, 1537, 1538, 1539, 1551, 1552, 1553, 1562, 1570, 1577, 1596, 1597, 1599, 1608, 1609, 1611, 1612, 1615, 1616, 1619, 1620, 1621, 1633, 1641, 1642, 1643, 1644, 1645, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1703, 1711, 1713, 1714, 1718, 1719, 1720, 1737, 1738, 1745, 1748, 1749, 1757, 1758, 1759, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1789, 1791, 1808, 1809, 1810, 1813, 1814, 1828, 1832, 1837, 1846, 1847, 1849, 1850, 1851, 1852, 1856, 1859, 1863, 1865, 1867, 1868, 1869, 1876, 1878, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907, 1911, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1934], "cache_en": [0, 1015], "sourc": [0, 1, 2, 3, 4, 5, 9, 16, 17, 18, 20, 28, 31, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 58, 60, 63, 70, 71, 151, 197, 210, 312, 313, 321, 340, 351, 396, 401, 402, 415, 416, 452, 470, 486, 511, 513, 515, 518, 521, 544, 553, 554, 556, 583, 600, 603, 606, 607, 621, 677, 692, 693, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 833, 834, 835, 836, 837, 838, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 870, 883, 884, 885, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 916, 917, 929, 931, 932, 936, 938, 940, 950, 951, 952, 953, 954, 955, 956, 957, 970, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1069, 1073, 1120, 1122, 1138, 1144, 1145, 1148, 1167, 1168, 1169, 1171, 1172, 1177, 1182, 1183, 1184, 1194, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1267, 1268, 1288, 1297, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1492, 1493, 1497, 1499, 1500, 1501, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1548, 1549, 1550, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1570, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1587, 1588, 1589, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1655, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1720, 1745, 1750, 1753, 1754, 1755, 1756, 1757, 1759, 1762, 1763, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1795, 1802, 1810, 1815, 1818, 1819, 1820, 1821, 1822, 1830, 1849, 1863, 1866, 1867, 1868, 1873, 1875, 1876, 1877, 1878, 1879, 1881, 1883, 1884, 1887, 1896, 1898, 1899, 1903, 1907, 1908, 1910, 1912, 1913, 1914, 1918, 1919, 1920, 1925, 1928, 1930, 1931, 1932, 1933, 1934], "instanc": [0, 3, 11, 20, 27, 38, 41, 42, 43, 45, 47, 48, 49, 55, 58, 59, 60, 63, 68, 71, 140, 614, 677, 731, 745, 754, 790, 793, 821, 823, 838, 855, 970, 1069, 1120, 1194, 1196, 1207, 1211, 1268, 1371, 1372, 1375, 1391, 1392, 1393, 1400, 1428, 1438, 1472, 1474, 1475, 1479, 1537, 1608, 1616, 1627, 1641, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1799, 1829, 1866, 1868, 1870, 1875, 1877, 1881, 1883, 1888, 1889, 1892, 1893, 1894, 1896, 1900, 1904, 1911, 1914, 1919, 1920, 1921, 1923, 1925, 1930, 1934], "serv": [0, 7, 8, 12, 16, 33, 41, 1865, 1876, 1908, 1910, 1919, 1920], "context": [0, 2, 5, 14, 15, 20, 38, 45, 49, 58, 59, 63, 71, 151, 789, 886, 887, 888, 890, 891, 904, 905, 917, 955, 976, 991, 993, 1004, 1010, 1015, 1022, 1042, 1044, 1073, 1127, 1131, 1136, 1171, 1196, 1309, 1428, 1577, 1599, 1608, 1609, 1618, 1620, 1653, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1759, 1789, 1864, 1869, 1870, 1881, 1888, 1889, 1892, 1894, 1898, 1899, 1902, 1907, 1911, 1913, 1918, 1919, 1921, 1923, 1926, 1931], "manag": [0, 1, 2, 5, 7, 14, 15, 16, 20, 41, 45, 47, 49, 56, 58, 59, 60, 63, 71, 89, 485, 891, 917, 955, 970, 971, 973, 976, 977, 978, 980, 991, 993, 994, 995, 1004, 1005, 1015, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1042, 1044, 1073, 1127, 1131, 1136, 1171, 1309, 1577, 1608, 1617, 1618, 1620, 1653, 1759, 1789, 1864, 1869, 1870, 1889, 1896, 1899, 1907, 1912, 1913, 1918, 1919, 1920, 1923, 1926, 1931], "decor": [0, 1, 12, 17, 25, 47, 51, 55, 59, 71, 896, 952, 955, 1073, 1171, 1201, 1207, 1213, 1653, 1789, 1866, 1868, 1869, 1873, 1888, 1889, 1894, 1912, 1919, 1934], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 13, 14, 15, 16, 19, 20, 23, 27, 28, 30, 32, 33, 38, 39, 41, 42, 47, 49, 50, 58, 59, 63, 64, 66, 67, 68, 69, 71, 151, 511, 677, 732, 790, 794, 796, 821, 890, 892, 904, 905, 935, 949, 952, 953, 955, 1012, 1015, 1039, 1069, 1130, 1196, 1201, 1213, 1251, 1273, 1313, 1327, 1341, 1342, 1343, 1364, 1365, 1382, 1421, 1422, 1423, 1428, 1431, 1434, 1456, 1471, 1608, 1613, 1654, 1662, 1666, 1682, 1791, 1849, 1863, 1868, 1869, 1876, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1919, 1923, 1926, 1927, 1928, 1930], "region": [0, 3, 5, 15, 16, 47, 55, 765, 766, 1341, 1342, 1343, 1376, 1377, 1387, 1389, 1421, 1422, 1423, 1495, 1496, 1522, 1523, 1552, 1553, 1866, 1881, 1888, 1892], "your": [0, 1, 2, 4, 7, 8, 9, 11, 12, 15, 16, 17, 18, 19, 21, 23, 24, 26, 28, 30, 32, 33, 34, 38, 41, 45, 46, 47, 50, 51, 55, 57, 58, 59, 60, 61, 63, 67, 68, 70, 71, 890, 896, 898, 899, 904, 950, 953, 1171, 1196, 1200, 1201, 1205, 1208, 1211, 1212, 1213, 1428, 1435, 1475, 1608, 1617, 1620, 1653, 1684, 1758, 1846, 1866, 1868, 1869, 1873, 1875, 1881, 1882, 1883, 1885, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1901, 1903, 1904, 1906, 1907, 1910, 1912, 1915, 1918, 1920, 1923, 1928, 1929, 1931, 1934], "script": [0, 4, 12, 19, 22, 24, 28, 35, 38, 41, 44, 49, 51, 57, 59, 60, 1197, 1199, 1200, 1201, 1202, 1205, 1206, 1208, 1210, 1211, 1213, 1863, 1864, 1868, 1869, 1877, 1891, 1899, 1901, 1905, 1911, 1914, 1919], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 32, 33, 35, 38, 39, 41, 42, 45, 47, 49, 50, 51, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 151, 789, 795, 814, 816, 817, 818, 819, 822, 854, 858, 859, 860, 890, 904, 905, 906, 1014, 1015, 1126, 1131, 1137, 1171, 1196, 1197, 1199, 1200, 1203, 1205, 1207, 1209, 1211, 1212, 1241, 1267, 1268, 1296, 1346, 1347, 1348, 1365, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1456, 1467, 1577, 1599, 1608, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1757, 1761, 1793, 1839, 1841, 1849, 1856, 1864, 1866, 1869, 1877, 1879, 1881, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1920, 1921, 1923, 1928, 1931, 1932, 1933], "In": [0, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 27, 28, 33, 35, 38, 41, 43, 45, 47, 51, 58, 59, 60, 63, 65, 66, 67, 68, 70, 71, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 122, 124, 126, 128, 131, 132, 134, 142, 144, 147, 148, 150, 153, 155, 159, 161, 163, 165, 167, 169, 178, 187, 195, 199, 202, 204, 214, 216, 222, 232, 236, 238, 244, 247, 249, 251, 253, 257, 262, 269, 271, 273, 277, 279, 283, 285, 292, 294, 296, 304, 306, 308, 310, 356, 358, 360, 362, 364, 366, 368, 371, 373, 375, 376, 383, 385, 387, 389, 391, 395, 419, 422, 425, 427, 438, 440, 442, 450, 455, 465, 468, 484, 488, 490, 506, 509, 520, 524, 526, 529, 531, 533, 546, 548, 550, 559, 561, 568, 572, 574, 590, 593, 595, 597, 599, 609, 619, 677, 757, 797, 821, 851, 896, 934, 955, 961, 962, 969, 1015, 1026, 1038, 1039, 1043, 1044, 1069, 1090, 1092, 1100, 1101, 1102, 1117, 1127, 1131, 1134, 1136, 1194, 1196, 1205, 1208, 1209, 1211, 1227, 1236, 1241, 1242, 1243, 1251, 1254, 1259, 1264, 1268, 1273, 1276, 1285, 1290, 1296, 1297, 1323, 1341, 1342, 1343, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1367, 1368, 1369, 1373, 1375, 1380, 1389, 1398, 1413, 1421, 1422, 1423, 1428, 1434, 1471, 1473, 1475, 1479, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1517, 1527, 1534, 1543, 1571, 1574, 1576, 1577, 1591, 1608, 1615, 1620, 1621, 1653, 1684, 1695, 1697, 1733, 1749, 1751, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1814, 1815, 1837, 1849, 1853, 1854, 1863, 1864, 1865, 1866, 1868, 1869, 1875, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1923, 1928, 1930], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 30, 32, 33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 84, 89, 151, 155, 191, 222, 242, 254, 313, 315, 321, 323, 328, 335, 511, 513, 515, 534, 542, 557, 604, 611, 614, 677, 684, 685, 732, 738, 739, 740, 753, 757, 762, 776, 782, 784, 786, 789, 793, 812, 814, 820, 823, 851, 858, 859, 861, 875, 876, 877, 886, 888, 889, 890, 892, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 912, 913, 914, 921, 937, 947, 950, 952, 961, 962, 964, 970, 972, 973, 975, 982, 983, 984, 985, 986, 1004, 1005, 1012, 1013, 1015, 1027, 1029, 1039, 1043, 1044, 1054, 1067, 1069, 1071, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1112, 1120, 1122, 1125, 1126, 1129, 1130, 1131, 1133, 1135, 1137, 1138, 1141, 1149, 1157, 1158, 1159, 1193, 1194, 1196, 1199, 1200, 1203, 1206, 1207, 1209, 1211, 1212, 1213, 1214, 1225, 1226, 1231, 1232, 1237, 1239, 1241, 1244, 1245, 1249, 1252, 1254, 1257, 1258, 1265, 1267, 1268, 1285, 1287, 1290, 1296, 1313, 1318, 1327, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1376, 1377, 1380, 1388, 1392, 1393, 1396, 1397, 1398, 1400, 1410, 1411, 1412, 1413, 1415, 1416, 1418, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1445, 1447, 1456, 1459, 1461, 1462, 1463, 1467, 1472, 1474, 1475, 1476, 1479, 1481, 1482, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1502, 1503, 1504, 1505, 1506, 1507, 1512, 1518, 1519, 1521, 1522, 1523, 1527, 1538, 1545, 1546, 1548, 1549, 1551, 1552, 1553, 1577, 1581, 1596, 1598, 1599, 1602, 1608, 1612, 1613, 1614, 1615, 1618, 1619, 1620, 1627, 1644, 1651, 1653, 1655, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1713, 1718, 1719, 1720, 1739, 1741, 1745, 1753, 1756, 1765, 1771, 1791, 1794, 1795, 1799, 1802, 1810, 1814, 1828, 1829, 1845, 1846, 1847, 1849, 1854, 1855, 1856, 1857, 1862, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1912, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "chosen": [0, 16, 28, 68, 1057, 1217, 1577, 1762, 1787, 1832, 1884, 1888, 1892, 1894, 1907, 1914], "improv": [0, 1, 3, 9, 22, 23, 28, 32, 36, 39, 41, 63, 71, 757, 801, 802, 803, 898, 900, 904, 964, 1149, 1366, 1380, 1398, 1443, 1474, 1577, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1697, 1864, 1866, 1888, 1893, 1894, 1895, 1903, 1904, 1908, 1914, 1915, 1919], "perform": [0, 1, 2, 3, 4, 5, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 30, 32, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 49, 58, 59, 63, 67, 70, 71, 120, 207, 210, 457, 577, 600, 614, 683, 684, 685, 686, 687, 688, 757, 778, 801, 802, 803, 844, 855, 858, 891, 896, 898, 900, 901, 904, 905, 918, 930, 950, 957, 961, 962, 971, 977, 1026, 1050, 1051, 1064, 1089, 1112, 1114, 1125, 1126, 1129, 1160, 1171, 1196, 1205, 1206, 1211, 1239, 1241, 1244, 1248, 1251, 1252, 1256, 1257, 1265, 1266, 1268, 1273, 1282, 1295, 1300, 1309, 1310, 1320, 1323, 1326, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1368, 1371, 1372, 1380, 1398, 1428, 1434, 1436, 1443, 1456, 1471, 1474, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1546, 1563, 1577, 1583, 1584, 1599, 1608, 1610, 1611, 1616, 1620, 1641, 1648, 1650, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1703, 1711, 1739, 1753, 1757, 1785, 1790, 1791, 1792, 1793, 1813, 1815, 1849, 1864, 1866, 1869, 1879, 1881, 1882, 1883, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1901, 1903, 1904, 1907, 1910, 1911, 1913, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1934], "while": [0, 2, 3, 5, 7, 8, 15, 16, 17, 19, 20, 22, 28, 30, 32, 38, 39, 41, 42, 43, 47, 60, 63, 68, 70, 71, 692, 693, 732, 851, 881, 889, 973, 1044, 1126, 1158, 1196, 1199, 1211, 1212, 1268, 1324, 1336, 1352, 1389, 1391, 1392, 1393, 1398, 1428, 1434, 1446, 1459, 1467, 1471, 1475, 1546, 1608, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1655, 1749, 1870, 1875, 1876, 1883, 1884, 1888, 1889, 1892, 1895, 1896, 1897, 1900, 1902, 1904, 1907, 1910, 1912, 1914, 1917, 1919, 1921, 1923, 1924, 1927, 1928, 1929], "maintain": [0, 7, 8, 14, 15, 20, 21, 38, 39, 41, 47, 63, 67, 71, 1340, 1368, 1373, 1520, 1608, 1641, 1655, 1864, 1884, 1888, 1889, 1892, 1894, 1900, 1914], "accuraci": [0, 16, 18, 39, 950, 1259, 1577, 1864, 1879, 1888, 1900, 1928, 1932], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 26, 27, 28, 32, 33, 34, 37, 38, 41, 42, 47, 50, 58, 59, 61, 63, 68, 69, 70, 71, 90, 94, 96, 98, 100, 102, 104, 106, 108, 110, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 127, 129, 130, 133, 135, 136, 137, 138, 139, 141, 143, 145, 146, 149, 151, 152, 154, 155, 156, 157, 158, 160, 162, 164, 166, 168, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 190, 193, 194, 198, 200, 201, 203, 205, 206, 208, 211, 212, 213, 215, 218, 219, 221, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 239, 240, 241, 243, 245, 246, 248, 250, 252, 255, 256, 261, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 276, 278, 280, 281, 282, 284, 287, 288, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 313, 321, 322, 323, 324, 325, 327, 328, 334, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 357, 359, 361, 363, 365, 367, 369, 370, 372, 374, 378, 379, 380, 381, 382, 384, 386, 388, 390, 392, 393, 394, 396, 397, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 423, 424, 426, 428, 429, 430, 431, 432, 433, 437, 439, 441, 449, 451, 452, 454, 456, 458, 459, 460, 461, 463, 464, 466, 467, 469, 476, 478, 479, 481, 483, 486, 487, 489, 491, 492, 493, 495, 496, 497, 499, 500, 503, 504, 505, 508, 513, 515, 516, 517, 519, 522, 523, 525, 527, 528, 530, 532, 535, 536, 537, 539, 540, 544, 545, 547, 549, 551, 552, 553, 558, 560, 562, 564, 565, 566, 567, 569, 570, 571, 573, 575, 576, 587, 588, 589, 591, 592, 594, 596, 598, 602, 603, 606, 607, 608, 611, 612, 613, 615, 616, 617, 618, 677, 690, 692, 693, 696, 727, 728, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 742, 743, 745, 753, 754, 757, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 776, 777, 778, 779, 780, 781, 782, 790, 837, 856, 857, 858, 859, 862, 871, 872, 873, 876, 887, 889, 890, 891, 892, 893, 895, 896, 900, 904, 905, 910, 911, 914, 919, 921, 928, 930, 933, 947, 950, 954, 966, 970, 971, 972, 973, 975, 977, 978, 980, 994, 995, 1004, 1005, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1064, 1067, 1069, 1070, 1072, 1073, 1082, 1087, 1105, 1108, 1123, 1128, 1129, 1130, 1132, 1141, 1149, 1153, 1154, 1158, 1159, 1167, 1168, 1169, 1171, 1196, 1200, 1207, 1211, 1212, 1214, 1215, 1217, 1227, 1235, 1238, 1241, 1243, 1250, 1252, 1253, 1261, 1265, 1266, 1268, 1274, 1276, 1282, 1283, 1285, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1309, 1310, 1316, 1323, 1325, 1326, 1336, 1344, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1371, 1372, 1374, 1380, 1382, 1388, 1389, 1394, 1395, 1398, 1419, 1420, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1440, 1441, 1442, 1443, 1446, 1455, 1457, 1459, 1460, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1593, 1594, 1595, 1596, 1597, 1598, 1608, 1609, 1615, 1616, 1617, 1620, 1626, 1635, 1644, 1649, 1652, 1653, 1654, 1655, 1659, 1701, 1711, 1712, 1722, 1724, 1726, 1728, 1729, 1733, 1736, 1739, 1745, 1754, 1757, 1759, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1782, 1789, 1790, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1808, 1809, 1810, 1813, 1823, 1825, 1828, 1834, 1835, 1839, 1841, 1849, 1851, 1852, 1857, 1859, 1861, 1863, 1864, 1866, 1867, 1868, 1869, 1870, 1874, 1875, 1876, 1878, 1881, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1923, 1924, 1926, 1927, 1929, 1930, 1931, 1934, 1935], "detail": [0, 1, 2, 3, 7, 8, 20, 21, 24, 28, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 47, 49, 59, 63, 69, 71, 151, 323, 493, 611, 732, 735, 736, 737, 738, 739, 740, 757, 763, 764, 765, 768, 769, 770, 771, 776, 777, 779, 780, 781, 782, 790, 856, 857, 858, 859, 870, 887, 889, 890, 891, 892, 893, 896, 905, 933, 954, 966, 971, 975, 977, 978, 980, 994, 995, 1004, 1015, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1052, 1069, 1108, 1130, 1141, 1144, 1145, 1149, 1177, 1184, 1196, 1200, 1211, 1235, 1253, 1260, 1268, 1274, 1276, 1296, 1336, 1340, 1350, 1359, 1360, 1361, 1365, 1371, 1372, 1373, 1374, 1376, 1377, 1380, 1398, 1428, 1434, 1440, 1441, 1443, 1455, 1476, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1528, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1593, 1594, 1595, 1599, 1608, 1609, 1644, 1654, 1665, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1684, 1689, 1701, 1713, 1745, 1756, 1782, 1790, 1835, 1849, 1863, 1866, 1867, 1868, 1869, 1876, 1878, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1905, 1907, 1911, 1912, 1914, 1916, 1918, 1919, 1920, 1921, 1923, 1927, 1928, 1930, 1931, 1934], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 17, 18, 20, 22, 23, 27, 28, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 63, 66, 68, 69, 70, 71, 83, 85, 98, 151, 192, 209, 260, 313, 321, 447, 486, 495, 496, 511, 513, 515, 541, 557, 577, 614, 683, 686, 732, 765, 766, 776, 782, 788, 790, 821, 837, 855, 862, 874, 877, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 910, 911, 918, 921, 930, 938, 941, 949, 950, 955, 961, 962, 966, 972, 974, 984, 986, 1008, 1014, 1015, 1027, 1052, 1069, 1108, 1112, 1117, 1122, 1126, 1127, 1132, 1135, 1136, 1137, 1149, 1171, 1185, 1186, 1188, 1189, 1192, 1196, 1197, 1199, 1207, 1208, 1209, 1211, 1212, 1216, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1260, 1261, 1265, 1266, 1267, 1268, 1276, 1282, 1285, 1290, 1296, 1297, 1300, 1318, 1323, 1324, 1325, 1336, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1371, 1372, 1375, 1378, 1380, 1381, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1415, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1442, 1443, 1455, 1456, 1459, 1460, 1461, 1462, 1464, 1467, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1492, 1494, 1495, 1496, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1519, 1525, 1527, 1538, 1539, 1562, 1565, 1567, 1570, 1571, 1577, 1585, 1596, 1597, 1598, 1599, 1604, 1605, 1608, 1609, 1610, 1611, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1644, 1649, 1653, 1654, 1655, 1656, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1703, 1710, 1713, 1714, 1736, 1742, 1749, 1754, 1757, 1764, 1782, 1788, 1791, 1793, 1794, 1795, 1805, 1810, 1814, 1823, 1828, 1830, 1835, 1839, 1841, 1846, 1849, 1856, 1859, 1863, 1864, 1866, 1868, 1875, 1877, 1879, 1881, 1882, 1883, 1887, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1913, 1918, 1919, 1920, 1921, 1924, 1926, 1927, 1928, 1929, 1930], "enter": [0, 41, 891, 1171], "tensor": [0, 2, 5, 7, 8, 11, 12, 13, 14, 16, 18, 19, 20, 21, 26, 27, 28, 32, 34, 35, 38, 39, 41, 42, 43, 45, 47, 48, 63, 66, 67, 68, 69, 70, 71, 89, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 717, 729, 731, 732, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 747, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 781, 782, 783, 784, 785, 786, 787, 791, 795, 796, 797, 798, 799, 816, 817, 818, 819, 821, 822, 824, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 908, 910, 911, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 982, 983, 984, 985, 986, 993, 1001, 1002, 1008, 1012, 1015, 1018, 1022, 1033, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1175, 1176, 1178, 1181, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1199, 1200, 1202, 1203, 1206, 1207, 1209, 1211, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1307, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1336, 1340, 1341, 1344, 1345, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1380, 1381, 1382, 1388, 1394, 1395, 1398, 1399, 1415, 1418, 1419, 1420, 1421, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1443, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1460, 1461, 1462, 1463, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1604, 1605, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1662, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1684, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1762, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1864, 1865, 1866, 1868, 1869, 1873, 1876, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1900, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1912, 1913, 1915, 1918, 1919, 1920, 1924, 1925, 1928, 1930, 1932, 1933, 1934], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 23, 26, 27, 28, 30, 32, 35, 38, 39, 41, 42, 43, 45, 47, 49, 51, 52, 56, 57, 58, 59, 61, 63, 68, 70, 71, 151, 254, 497, 542, 614, 694, 755, 778, 789, 790, 791, 797, 807, 808, 809, 810, 812, 813, 814, 815, 820, 821, 823, 851, 862, 886, 887, 888, 890, 896, 898, 904, 905, 906, 932, 936, 937, 955, 956, 957, 961, 972, 1008, 1015, 1026, 1085, 1086, 1088, 1089, 1090, 1092, 1096, 1100, 1101, 1102, 1117, 1125, 1126, 1133, 1134, 1135, 1137, 1158, 1195, 1196, 1200, 1202, 1206, 1207, 1209, 1211, 1217, 1225, 1227, 1231, 1232, 1236, 1241, 1242, 1243, 1248, 1249, 1252, 1256, 1259, 1265, 1267, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1344, 1345, 1349, 1350, 1356, 1357, 1358, 1365, 1366, 1370, 1374, 1375, 1378, 1379, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1395, 1414, 1415, 1417, 1418, 1419, 1427, 1428, 1436, 1438, 1439, 1442, 1446, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1477, 1478, 1479, 1498, 1502, 1503, 1504, 1544, 1563, 1564, 1577, 1599, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1632, 1642, 1643, 1645, 1648, 1650, 1655, 1662, 1665, 1684, 1689, 1729, 1745, 1760, 1762, 1814, 1856, 1863, 1866, 1867, 1868, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1907, 1909, 1910, 1911, 1912, 1914, 1919, 1920, 1921, 1923, 1925, 1928, 1930, 1932, 1933, 1934], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 39, 41, 45, 46, 47, 49, 50, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 83, 84, 151, 254, 335, 447, 497, 677, 686, 731, 732, 745, 754, 778, 886, 887, 888, 889, 890, 895, 896, 898, 899, 900, 904, 932, 950, 957, 970, 993, 1004, 1006, 1015, 1016, 1036, 1069, 1125, 1126, 1129, 1130, 1131, 1132, 1137, 1171, 1196, 1200, 1201, 1208, 1211, 1212, 1213, 1241, 1259, 1267, 1290, 1297, 1300, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1398, 1424, 1425, 1426, 1428, 1433, 1434, 1435, 1443, 1462, 1471, 1473, 1475, 1480, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1538, 1544, 1577, 1595, 1596, 1599, 1608, 1616, 1642, 1650, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1695, 1713, 1736, 1745, 1753, 1796, 1797, 1798, 1800, 1801, 1805, 1856, 1863, 1866, 1868, 1869, 1871, 1873, 1876, 1877, 1879, 1881, 1882, 1884, 1887, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1934], "should": [0, 1, 3, 4, 5, 9, 12, 15, 16, 17, 19, 20, 22, 23, 27, 28, 32, 33, 35, 38, 39, 41, 42, 43, 45, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 63, 67, 68, 70, 71, 120, 151, 155, 313, 321, 398, 402, 444, 445, 446, 447, 448, 486, 494, 511, 513, 515, 580, 581, 582, 584, 585, 683, 686, 687, 732, 757, 769, 770, 771, 790, 793, 797, 814, 821, 835, 836, 851, 852, 853, 856, 862, 886, 887, 888, 889, 890, 894, 895, 896, 897, 898, 899, 900, 904, 910, 911, 918, 919, 920, 921, 928, 941, 955, 968, 972, 975, 985, 986, 1004, 1006, 1015, 1060, 1070, 1071, 1072, 1082, 1087, 1090, 1091, 1092, 1100, 1101, 1102, 1105, 1120, 1122, 1123, 1124, 1126, 1127, 1131, 1135, 1136, 1137, 1153, 1154, 1157, 1158, 1193, 1194, 1196, 1197, 1201, 1205, 1207, 1208, 1211, 1212, 1213, 1215, 1240, 1265, 1266, 1267, 1273, 1282, 1285, 1286, 1287, 1336, 1344, 1345, 1349, 1362, 1364, 1365, 1367, 1368, 1369, 1372, 1373, 1394, 1420, 1428, 1434, 1435, 1436, 1455, 1476, 1480, 1492, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1519, 1527, 1577, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1646, 1648, 1659, 1660, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1713, 1715, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1736, 1752, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1814, 1828, 1837, 1856, 1861, 1862, 1863, 1864, 1866, 1868, 1869, 1873, 1875, 1876, 1878, 1879, 1881, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1902, 1903, 1904, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1927, 1928, 1930, 1931, 1934], "call": [0, 1, 2, 3, 8, 12, 14, 15, 16, 17, 18, 20, 22, 23, 27, 28, 30, 32, 33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 58, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 151, 290, 323, 335, 457, 485, 486, 553, 577, 611, 614, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 778, 787, 794, 821, 854, 858, 859, 890, 894, 895, 896, 897, 898, 900, 901, 904, 910, 911, 933, 950, 953, 955, 956, 957, 970, 973, 975, 1004, 1006, 1016, 1017, 1026, 1033, 1034, 1036, 1037, 1067, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1125, 1126, 1137, 1141, 1159, 1171, 1181, 1196, 1199, 1201, 1206, 1207, 1208, 1215, 1251, 1259, 1263, 1265, 1267, 1268, 1297, 1340, 1346, 1347, 1348, 1365, 1366, 1367, 1368, 1369, 1371, 1373, 1375, 1413, 1424, 1425, 1426, 1428, 1435, 1436, 1456, 1467, 1479, 1505, 1506, 1507, 1513, 1514, 1515, 1520, 1538, 1577, 1596, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1617, 1620, 1627, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1643, 1649, 1650, 1652, 1653, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1726, 1753, 1760, 1761, 1789, 1808, 1809, 1810, 1830, 1849, 1851, 1852, 1856, 1857, 1863, 1866, 1870, 1873, 1879, 1881, 1883, 1884, 1885, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1934, 1935], "model": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 28, 39, 41, 42, 43, 45, 46, 47, 57, 59, 61, 63, 64, 65, 66, 67, 68, 69, 71, 83, 84, 88, 789, 790, 791, 794, 795, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 821, 822, 823, 833, 834, 835, 836, 851, 854, 855, 856, 857, 858, 859, 860, 950, 1016, 1036, 1125, 1126, 1127, 1135, 1137, 1171, 1196, 1200, 1201, 1205, 1207, 1211, 1213, 1267, 1336, 1365, 1382, 1393, 1394, 1428, 1434, 1456, 1467, 1471, 1473, 1474, 1475, 1526, 1608, 1609, 1614, 1616, 1618, 1631, 1650, 1651, 1662, 1663, 1665, 1666, 1673, 1678, 1683, 1684, 1689, 1695, 1697, 1810, 1856, 1864, 1866, 1868, 1869, 1870, 1877, 1878, 1884, 1889, 1891, 1892, 1893, 1894, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1907, 1908, 1913, 1915, 1919, 1920, 1922, 1923, 1924, 1928, 1932, 1933], "": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 14, 15, 16, 19, 20, 21, 22, 23, 26, 27, 28, 32, 33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 54, 55, 56, 58, 59, 63, 65, 67, 68, 70, 71, 462, 480, 491, 494, 511, 541, 555, 578, 621, 677, 686, 691, 692, 693, 732, 757, 790, 791, 792, 812, 813, 814, 817, 820, 823, 851, 858, 859, 872, 874, 875, 876, 877, 893, 894, 895, 899, 900, 902, 906, 934, 936, 949, 961, 962, 963, 968, 970, 972, 976, 991, 995, 1004, 1006, 1011, 1012, 1015, 1016, 1017, 1036, 1037, 1038, 1044, 1061, 1064, 1066, 1067, 1069, 1083, 1084, 1086, 1087, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1137, 1141, 1149, 1157, 1158, 1159, 1183, 1185, 1193, 1194, 1196, 1200, 1206, 1207, 1211, 1226, 1227, 1237, 1238, 1239, 1241, 1244, 1248, 1250, 1252, 1253, 1257, 1258, 1259, 1260, 1265, 1267, 1268, 1283, 1290, 1295, 1297, 1300, 1302, 1303, 1309, 1310, 1313, 1322, 1323, 1326, 1328, 1334, 1335, 1336, 1344, 1345, 1346, 1347, 1348, 1351, 1365, 1371, 1382, 1428, 1429, 1434, 1438, 1444, 1456, 1459, 1461, 1467, 1471, 1473, 1475, 1481, 1482, 1499, 1500, 1511, 1524, 1527, 1538, 1539, 1544, 1577, 1583, 1596, 1599, 1604, 1605, 1608, 1609, 1620, 1631, 1644, 1648, 1655, 1656, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1701, 1703, 1707, 1714, 1729, 1732, 1733, 1736, 1737, 1738, 1740, 1742, 1749, 1756, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1808, 1809, 1810, 1813, 1814, 1815, 1816, 1817, 1825, 1829, 1831, 1837, 1851, 1852, 1853, 1856, 1857, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1873, 1875, 1876, 1878, 1879, 1881, 1882, 1883, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934], "wrap": [0, 1, 12, 16, 20, 25, 28, 33, 38, 39, 41, 45, 51, 60, 63, 67, 68, 71, 260, 787, 788, 955, 973, 1126, 1196, 1211, 1365, 1428, 1467, 1603, 1608, 1618, 1644, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1866, 1867, 1869, 1876, 1888, 1889, 1892, 1893, 1894, 1895, 1900, 1906, 1907, 1912, 1913, 1914, 1919, 1920, 1931, 1933, 1934], "forward": [0, 5, 7, 8, 11, 12, 16, 20, 22, 23, 27, 28, 32, 39, 41, 42, 45, 47, 63, 64, 65, 67, 69, 71, 151, 222, 223, 677, 732, 745, 754, 757, 797, 812, 813, 814, 817, 821, 858, 859, 886, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 904, 905, 917, 1015, 1061, 1073, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1126, 1128, 1129, 1130, 1132, 1135, 1171, 1196, 1199, 1200, 1201, 1202, 1206, 1207, 1211, 1212, 1213, 1340, 1344, 1347, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1380, 1398, 1413, 1424, 1425, 1426, 1428, 1429, 1430, 1434, 1435, 1438, 1439, 1443, 1456, 1471, 1472, 1473, 1474, 1475, 1513, 1514, 1515, 1520, 1565, 1599, 1602, 1603, 1604, 1605, 1608, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1649, 1652, 1653, 1720, 1759, 1788, 1849, 1864, 1865, 1866, 1868, 1869, 1875, 1877, 1881, 1883, 1887, 1888, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1899, 1900, 1903, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1919, 1931, 1932, 1933], "pass": [0, 1, 3, 5, 6, 7, 12, 15, 16, 18, 20, 21, 24, 28, 32, 38, 39, 41, 42, 43, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 65, 67, 68, 70, 71, 151, 254, 447, 511, 513, 515, 541, 557, 790, 791, 820, 823, 856, 858, 877, 886, 887, 888, 889, 890, 896, 904, 934, 950, 956, 970, 1004, 1015, 1059, 1090, 1091, 1092, 1100, 1101, 1102, 1108, 1122, 1125, 1126, 1130, 1131, 1132, 1135, 1136, 1158, 1194, 1196, 1197, 1200, 1205, 1207, 1211, 1212, 1240, 1256, 1258, 1267, 1313, 1336, 1337, 1338, 1339, 1347, 1365, 1371, 1372, 1376, 1377, 1428, 1433, 1434, 1456, 1472, 1473, 1474, 1475, 1480, 1492, 1522, 1523, 1527, 1538, 1539, 1565, 1577, 1599, 1602, 1603, 1604, 1605, 1608, 1618, 1620, 1622, 1627, 1641, 1644, 1648, 1650, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1745, 1749, 1753, 1814, 1863, 1866, 1870, 1873, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1907, 1908, 1910, 1911, 1912, 1919, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1933, 1934], "e": [0, 1, 2, 3, 5, 7, 11, 14, 15, 17, 20, 22, 28, 30, 32, 33, 38, 39, 41, 42, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 61, 63, 66, 68, 70, 71, 89, 151, 258, 335, 377, 577, 614, 732, 745, 754, 757, 790, 791, 812, 814, 851, 855, 856, 858, 859, 877, 886, 890, 895, 905, 906, 929, 931, 934, 1001, 1015, 1040, 1069, 1079, 1120, 1126, 1131, 1135, 1146, 1171, 1175, 1176, 1178, 1181, 1193, 1196, 1202, 1203, 1211, 1231, 1232, 1247, 1259, 1267, 1268, 1269, 1271, 1273, 1290, 1301, 1344, 1345, 1346, 1347, 1348, 1351, 1356, 1357, 1358, 1364, 1365, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1380, 1383, 1388, 1391, 1392, 1393, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1419, 1428, 1429, 1434, 1435, 1437, 1438, 1442, 1443, 1459, 1467, 1471, 1475, 1476, 1477, 1479, 1502, 1503, 1504, 1511, 1513, 1514, 1515, 1518, 1519, 1520, 1527, 1538, 1570, 1577, 1596, 1598, 1599, 1604, 1608, 1609, 1610, 1611, 1616, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1641, 1642, 1648, 1652, 1655, 1662, 1663, 1670, 1671, 1706, 1717, 1735, 1742, 1749, 1753, 1760, 1765, 1810, 1814, 1863, 1866, 1868, 1869, 1870, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1903, 1905, 1907, 1910, 1911, 1913, 1914, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1928, 1930, 1934, 1935], "network": [0, 1, 7, 8, 14, 33, 45, 47, 58, 838, 1015, 1196, 1211, 1212, 1340, 1346, 1347, 1348, 1351, 1359, 1360, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1373, 1382, 1394, 1398, 1428, 1435, 1440, 1441, 1446, 1455, 1457, 1467, 1471, 1473, 1475, 1492, 1526, 1527, 1580, 1599, 1616, 1618, 1644, 1649, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1866, 1868, 1869, 1887, 1888, 1903, 1904, 1907, 1910, 1914, 1919, 1920, 1921], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 12, 13, 15, 16, 19, 23, 24, 28, 32, 33, 38, 39, 41, 43, 55, 58, 59, 63, 71, 84, 321, 515, 580, 765, 766, 856, 858, 952, 956, 1097, 1099, 1157, 1194, 1196, 1197, 1225, 1304, 1305, 1341, 1342, 1343, 1349, 1351, 1365, 1374, 1382, 1415, 1424, 1425, 1426, 1428, 1434, 1472, 1473, 1474, 1475, 1478, 1494, 1495, 1496, 1511, 1524, 1544, 1608, 1642, 1643, 1645, 1778, 1838, 1839, 1840, 1841, 1863, 1866, 1868, 1869, 1876, 1877, 1879, 1881, 1889, 1891, 1892, 1896, 1899, 1900, 1905, 1907, 1913, 1914, 1919, 1921, 1928, 1931, 1934], "loss": [0, 1, 39, 41, 42, 45, 47, 63, 1127, 1193, 1231, 1232, 1241, 1259, 1336, 1344, 1345, 1351, 1362, 1364, 1371, 1382, 1388, 1389, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1477, 1499, 1500, 1510, 1511, 1524, 1539, 1562, 1570, 1608, 1642, 1673, 1678, 1684, 1688, 1697, 1757, 1863, 1864, 1879, 1883, 1889, 1892, 1893, 1896, 1897, 1900, 1910, 1914, 1915, 1919, 1920, 1928], "comput": [0, 3, 5, 7, 8, 11, 14, 15, 16, 19, 27, 30, 32, 34, 38, 39, 41, 43, 47, 49, 51, 63, 64, 65, 67, 151, 290, 486, 493, 678, 680, 694, 695, 757, 765, 766, 797, 799, 816, 817, 818, 819, 821, 822, 886, 890, 891, 892, 894, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 910, 911, 917, 922, 923, 924, 925, 926, 927, 938, 940, 941, 942, 949, 962, 964, 969, 1012, 1015, 1052, 1061, 1063, 1066, 1069, 1073, 1074, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1112, 1114, 1115, 1116, 1118, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1149, 1152, 1155, 1156, 1157, 1158, 1171, 1173, 1196, 1199, 1207, 1215, 1216, 1218, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1268, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1294, 1295, 1296, 1299, 1323, 1325, 1329, 1336, 1340, 1341, 1342, 1343, 1346, 1347, 1348, 1359, 1360, 1361, 1363, 1364, 1366, 1371, 1372, 1380, 1383, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1418, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1434, 1435, 1437, 1442, 1443, 1461, 1463, 1467, 1476, 1477, 1480, 1494, 1495, 1496, 1509, 1510, 1518, 1519, 1526, 1527, 1529, 1538, 1546, 1551, 1552, 1553, 1554, 1555, 1556, 1567, 1570, 1577, 1583, 1584, 1599, 1602, 1604, 1605, 1608, 1609, 1612, 1615, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1634, 1635, 1642, 1648, 1652, 1653, 1655, 1668, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1707, 1713, 1714, 1718, 1719, 1733, 1734, 1757, 1759, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1790, 1791, 1792, 1793, 1810, 1814, 1815, 1830, 1835, 1853, 1856, 1864, 1866, 1869, 1876, 1879, 1882, 1883, 1885, 1888, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1907, 1910, 1914, 1917, 1919, 1923, 1924, 1929, 1932], "backward": [0, 1, 5, 9, 11, 12, 16, 22, 23, 27, 28, 41, 42, 43, 45, 47, 63, 67, 68, 71, 290, 335, 486, 494, 501, 502, 511, 513, 515, 578, 677, 683, 686, 757, 812, 813, 814, 887, 892, 893, 894, 895, 896, 897, 899, 901, 904, 905, 910, 911, 917, 918, 930, 1015, 1073, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1125, 1126, 1196, 1268, 1276, 1290, 1300, 1344, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1371, 1380, 1381, 1382, 1395, 1398, 1399, 1415, 1419, 1420, 1428, 1434, 1435, 1442, 1443, 1472, 1473, 1474, 1475, 1476, 1477, 1499, 1500, 1510, 1511, 1527, 1538, 1562, 1565, 1600, 1604, 1605, 1608, 1620, 1653, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1688, 1701, 1713, 1788, 1791, 1795, 1814, 1849, 1863, 1864, 1867, 1869, 1875, 1883, 1884, 1887, 1888, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1910, 1911, 1913, 1914, 1919, 1923, 1924, 1929], "under": [0, 1, 3, 4, 5, 9, 14, 15, 16, 20, 28, 38, 41, 58, 63, 64, 66, 68, 70, 85, 905, 913, 935, 1171, 1196, 1351, 1428, 1492, 1518, 1519, 1615, 1617, 1620, 1665, 1734, 1865, 1881, 1888, 1889, 1892, 1893, 1895, 1897, 1902, 1907, 1911, 1912, 1914, 1917, 1918, 1921, 1924, 1928, 1931, 1933], "recommend": [0, 1, 5, 16, 38, 39, 41, 43, 47, 49, 58, 59, 63, 67, 70, 71, 89, 447, 890, 957, 961, 962, 969, 1090, 1091, 1092, 1100, 1101, 1102, 1183, 1199, 1241, 1268, 1313, 1336, 1365, 1539, 1608, 1720, 1846, 1863, 1866, 1878, 1881, 1883, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1900, 1902, 1903, 1905, 1907, 1911, 1914], "same": [0, 1, 3, 7, 11, 12, 14, 15, 16, 20, 23, 27, 28, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 47, 49, 55, 56, 58, 59, 60, 61, 63, 66, 68, 70, 71, 140, 154, 196, 222, 255, 311, 313, 315, 319, 321, 339, 444, 445, 446, 447, 448, 470, 482, 495, 496, 498, 511, 513, 515, 518, 541, 577, 614, 615, 683, 686, 690, 692, 693, 694, 696, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 742, 743, 753, 755, 758, 759, 760, 761, 762, 776, 782, 785, 786, 790, 791, 793, 797, 799, 811, 816, 819, 821, 822, 856, 858, 875, 876, 877, 889, 892, 895, 898, 899, 900, 901, 902, 903, 905, 906, 918, 920, 921, 930, 932, 934, 937, 942, 944, 953, 958, 969, 970, 972, 983, 985, 1004, 1015, 1052, 1057, 1059, 1060, 1066, 1069, 1071, 1072, 1075, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1117, 1121, 1122, 1124, 1125, 1126, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1138, 1141, 1149, 1157, 1158, 1166, 1170, 1187, 1193, 1196, 1206, 1207, 1211, 1212, 1216, 1217, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1263, 1283, 1287, 1289, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1323, 1326, 1327, 1328, 1334, 1335, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1375, 1378, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1400, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1436, 1437, 1442, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1479, 1480, 1483, 1484, 1485, 1492, 1498, 1499, 1500, 1502, 1503, 1504, 1510, 1519, 1527, 1529, 1538, 1539, 1577, 1596, 1608, 1615, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1641, 1645, 1650, 1655, 1656, 1660, 1662, 1666, 1680, 1701, 1706, 1707, 1710, 1711, 1723, 1725, 1727, 1731, 1733, 1735, 1736, 1740, 1749, 1752, 1765, 1788, 1796, 1797, 1798, 1800, 1801, 1807, 1808, 1809, 1813, 1814, 1824, 1835, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1856, 1862, 1863, 1866, 1868, 1869, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934], "correspond": [0, 1, 7, 17, 24, 28, 35, 38, 39, 41, 45, 46, 47, 58, 63, 71, 83, 472, 473, 511, 513, 515, 541, 542, 677, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 732, 790, 794, 833, 835, 854, 855, 856, 861, 877, 886, 888, 889, 890, 895, 898, 900, 905, 942, 963, 1015, 1035, 1064, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1149, 1158, 1185, 1196, 1212, 1226, 1231, 1232, 1237, 1240, 1259, 1266, 1268, 1282, 1297, 1318, 1365, 1371, 1398, 1428, 1434, 1474, 1518, 1527, 1564, 1604, 1608, 1616, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1649, 1655, 1684, 1689, 1706, 1707, 1717, 1740, 1749, 1765, 1808, 1809, 1814, 1845, 1848, 1851, 1852, 1863, 1866, 1867, 1869, 1873, 1879, 1882, 1883, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1904, 1907, 1911, 1913, 1914, 1919, 1920, 1923, 1924, 1925, 1928, 1930, 1932, 1933], "devic": [0, 1, 2, 5, 8, 11, 13, 15, 19, 24, 28, 32, 35, 38, 39, 41, 42, 43, 46, 59, 60, 63, 67, 70, 71, 89, 197, 207, 210, 289, 313, 321, 335, 444, 445, 446, 447, 448, 513, 515, 577, 683, 686, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 746, 747, 748, 749, 750, 751, 752, 862, 874, 876, 877, 898, 900, 918, 919, 921, 928, 930, 971, 972, 973, 975, 976, 977, 978, 979, 981, 982, 983, 984, 985, 986, 988, 989, 990, 993, 997, 998, 999, 1001, 1002, 1010, 1012, 1013, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1045, 1046, 1047, 1070, 1071, 1072, 1082, 1087, 1105, 1123, 1124, 1153, 1154, 1196, 1200, 1203, 1206, 1209, 1215, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1250, 1253, 1254, 1256, 1257, 1259, 1260, 1266, 1267, 1282, 1285, 1290, 1296, 1300, 1313, 1315, 1336, 1346, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1371, 1372, 1381, 1383, 1391, 1392, 1393, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1428, 1434, 1436, 1444, 1445, 1467, 1471, 1473, 1475, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1519, 1538, 1544, 1577, 1592, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1613, 1641, 1648, 1654, 1656, 1659, 1660, 1673, 1713, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1753, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1792, 1796, 1797, 1798, 1799, 1800, 1801, 1814, 1828, 1830, 1839, 1841, 1849, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1877, 1882, 1884, 1888, 1893, 1895, 1896, 1898, 1900, 1901, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1918, 1919, 1923, 1925, 1929, 1930], "creat": [0, 1, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 20, 25, 27, 28, 32, 38, 39, 41, 43, 45, 47, 49, 50, 56, 58, 59, 60, 61, 63, 70, 71, 89, 151, 223, 254, 335, 577, 578, 580, 581, 582, 584, 585, 729, 735, 736, 737, 742, 743, 753, 761, 789, 790, 791, 811, 812, 813, 814, 816, 821, 851, 875, 876, 877, 890, 892, 904, 929, 931, 947, 948, 963, 971, 980, 1012, 1013, 1022, 1057, 1072, 1121, 1122, 1123, 1193, 1196, 1199, 1208, 1214, 1219, 1225, 1226, 1232, 1234, 1253, 1266, 1282, 1297, 1318, 1344, 1362, 1371, 1372, 1375, 1389, 1395, 1419, 1420, 1428, 1431, 1432, 1433, 1456, 1459, 1460, 1467, 1476, 1477, 1479, 1608, 1620, 1641, 1648, 1653, 1664, 1665, 1684, 1752, 1783, 1794, 1799, 1828, 1835, 1864, 1869, 1870, 1873, 1877, 1881, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1902, 1905, 1907, 1910, 1911, 1913, 1914, 1919, 1920, 1921, 1923, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935], "optim": [0, 1, 2, 7, 8, 11, 12, 14, 16, 18, 20, 25, 28, 30, 32, 33, 39, 41, 42, 43, 47, 63, 71, 816, 905, 914, 950, 953, 1069, 1135, 1196, 1200, 1205, 1207, 1211, 1212, 1251, 1268, 1346, 1347, 1348, 1364, 1371, 1391, 1392, 1393, 1428, 1431, 1432, 1433, 1434, 1460, 1467, 1475, 1577, 1599, 1608, 1615, 1620, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1864, 1866, 1868, 1877, 1883, 1887, 1891, 1892, 1893, 1894, 1896, 1897, 1900, 1902, 1907, 1913, 1914, 1923], "default": [0, 2, 3, 5, 9, 12, 14, 15, 16, 18, 21, 22, 23, 24, 27, 28, 30, 32, 35, 41, 42, 43, 45, 46, 47, 49, 50, 55, 56, 57, 58, 59, 61, 63, 66, 67, 68, 69, 71, 151, 156, 171, 173, 176, 179, 180, 181, 196, 207, 210, 240, 267, 290, 297, 325, 331, 393, 444, 445, 446, 447, 448, 457, 494, 497, 498, 518, 522, 577, 578, 580, 677, 691, 694, 709, 710, 711, 712, 713, 714, 717, 727, 728, 729, 730, 732, 752, 755, 757, 765, 766, 767, 769, 770, 771, 776, 782, 790, 795, 800, 805, 806, 811, 814, 816, 817, 818, 819, 822, 825, 826, 827, 828, 829, 830, 831, 832, 838, 839, 840, 841, 842, 843, 845, 846, 851, 852, 853, 855, 862, 876, 877, 890, 891, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 919, 928, 934, 938, 941, 942, 943, 947, 950, 955, 956, 968, 969, 972, 975, 977, 981, 984, 985, 986, 989, 990, 997, 998, 1001, 1012, 1014, 1015, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1039, 1040, 1043, 1045, 1046, 1047, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1064, 1069, 1070, 1071, 1072, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1141, 1143, 1149, 1153, 1154, 1157, 1158, 1185, 1187, 1193, 1196, 1197, 1200, 1207, 1211, 1212, 1215, 1216, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1282, 1285, 1287, 1293, 1295, 1296, 1297, 1301, 1322, 1323, 1325, 1326, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1445, 1446, 1447, 1448, 1455, 1459, 1460, 1464, 1465, 1467, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1526, 1527, 1529, 1531, 1538, 1539, 1546, 1551, 1552, 1553, 1562, 1563, 1565, 1570, 1577, 1583, 1584, 1592, 1596, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1652, 1654, 1655, 1659, 1660, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1711, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1735, 1741, 1742, 1745, 1749, 1753, 1754, 1755, 1756, 1757, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1808, 1809, 1810, 1813, 1814, 1815, 1828, 1829, 1835, 1837, 1839, 1841, 1846, 1847, 1849, 1850, 1851, 1852, 1856, 1861, 1862, 1863, 1864, 1866, 1869, 1873, 1875, 1877, 1878, 1881, 1884, 1887, 1888, 1891, 1893, 1894, 1895, 1896, 1898, 1900, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1918, 1919, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1935], "net": [0, 6, 33, 49, 66, 71, 1196, 1211, 1212, 1365, 1428, 1608, 1631, 1688, 1868, 1869, 1888, 1889, 1892, 1900, 1928], "sgd": [0, 38, 39, 45, 1371, 1599, 1608, 1689, 1695, 1697, 1888, 1892, 1893, 1900, 1910, 1919, 1920], "paramet": [0, 1, 2, 3, 5, 13, 16, 18, 21, 26, 27, 30, 32, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 56, 58, 60, 63, 65, 67, 70, 71, 89, 151, 156, 171, 173, 176, 179, 180, 181, 196, 197, 207, 210, 240, 254, 255, 260, 267, 297, 313, 315, 317, 319, 321, 325, 331, 393, 400, 402, 444, 445, 446, 447, 448, 457, 470, 491, 494, 495, 496, 497, 498, 511, 513, 515, 518, 522, 534, 541, 542, 543, 557, 563, 580, 581, 582, 584, 585, 600, 601, 604, 614, 615, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 732, 735, 736, 737, 738, 739, 740, 741, 742, 743, 747, 752, 753, 755, 756, 757, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 780, 782, 783, 784, 785, 786, 788, 790, 792, 794, 796, 797, 798, 811, 816, 817, 818, 819, 820, 821, 822, 823, 824, 835, 836, 837, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 912, 913, 914, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 958, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 975, 976, 977, 978, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 993, 997, 998, 999, 1001, 1004, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1166, 1170, 1171, 1173, 1175, 1176, 1178, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1206, 1207, 1208, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1303, 1308, 1309, 1310, 1313, 1314, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1459, 1460, 1461, 1463, 1464, 1465, 1467, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1524, 1526, 1527, 1529, 1531, 1538, 1539, 1546, 1551, 1552, 1553, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1577, 1583, 1584, 1592, 1596, 1597, 1598, 1599, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1762, 1763, 1764, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1785, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1864, 1866, 1869, 1871, 1873, 1877, 1878, 1881, 1883, 1884, 1885, 1887, 1888, 1889, 1892, 1893, 1894, 1898, 1899, 1900, 1902, 1904, 1905, 1907, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1923, 1924, 1925, 1928, 1930, 1932, 1933, 1934], "target": [0, 12, 13, 14, 20, 27, 28, 32, 45, 63, 67, 69, 70, 71, 497, 732, 763, 764, 789, 794, 856, 858, 859, 935, 1127, 1196, 1205, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1344, 1345, 1351, 1362, 1364, 1376, 1377, 1382, 1388, 1389, 1394, 1395, 1419, 1420, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1459, 1460, 1471, 1480, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1499, 1500, 1508, 1510, 1511, 1522, 1523, 1524, 1535, 1536, 1539, 1540, 1550, 1558, 1559, 1560, 1561, 1562, 1570, 1577, 1581, 1582, 1608, 1683, 1849, 1867, 1869, 1888, 1889, 1892, 1902, 1907, 1910, 1911, 1914, 1915, 1919, 1928, 1932], "data": [0, 1, 2, 3, 7, 14, 15, 16, 19, 20, 26, 30, 35, 36, 39, 41, 43, 45, 47, 48, 49, 52, 55, 58, 60, 63, 67, 71, 140, 151, 196, 197, 326, 329, 333, 336, 341, 444, 447, 480, 491, 495, 497, 614, 735, 736, 737, 757, 769, 770, 771, 778, 789, 790, 791, 795, 816, 817, 818, 819, 820, 822, 824, 862, 876, 877, 887, 890, 919, 928, 934, 973, 1050, 1051, 1070, 1071, 1072, 1082, 1083, 1084, 1087, 1089, 1090, 1092, 1100, 1101, 1102, 1105, 1108, 1109, 1110, 1111, 1120, 1122, 1123, 1124, 1126, 1135, 1153, 1154, 1156, 1175, 1178, 1203, 1207, 1211, 1215, 1266, 1267, 1268, 1282, 1287, 1295, 1297, 1309, 1310, 1323, 1325, 1326, 1349, 1351, 1356, 1357, 1358, 1365, 1380, 1383, 1391, 1392, 1393, 1398, 1400, 1415, 1435, 1443, 1444, 1480, 1492, 1497, 1498, 1502, 1503, 1504, 1537, 1544, 1546, 1583, 1584, 1608, 1609, 1610, 1611, 1641, 1642, 1643, 1644, 1646, 1655, 1659, 1660, 1664, 1665, 1689, 1695, 1703, 1711, 1714, 1715, 1716, 1720, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1736, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1790, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1813, 1814, 1828, 1837, 1839, 1841, 1848, 1849, 1861, 1862, 1864, 1866, 1867, 1870, 1876, 1877, 1879, 1881, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1899, 1902, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1914, 1917, 1919, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933], "zero_grad": [0, 1, 45, 1196, 1428, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1688, 1888, 1892, 1896, 1900, 1902, 1910], "output": [0, 1, 4, 5, 7, 11, 12, 13, 14, 15, 16, 19, 20, 22, 26, 27, 28, 35, 38, 39, 41, 45, 46, 47, 49, 55, 56, 67, 68, 69, 71, 140, 313, 321, 444, 445, 446, 448, 511, 515, 563, 614, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 692, 693, 694, 695, 696, 717, 725, 726, 731, 732, 735, 736, 737, 738, 739, 740, 741, 742, 743, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 772, 774, 776, 777, 778, 779, 780, 782, 783, 784, 789, 790, 791, 793, 796, 799, 811, 814, 855, 858, 859, 860, 862, 871, 872, 875, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 918, 920, 921, 922, 923, 924, 925, 926, 927, 930, 934, 937, 938, 939, 940, 941, 942, 943, 945, 948, 962, 963, 965, 966, 969, 982, 984, 985, 986, 1012, 1013, 1015, 1025, 1026, 1048, 1049, 1050, 1051, 1053, 1056, 1057, 1059, 1061, 1064, 1066, 1068, 1069, 1070, 1071, 1072, 1074, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1149, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1170, 1173, 1190, 1191, 1193, 1196, 1200, 1207, 1211, 1212, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1518, 1519, 1521, 1522, 1523, 1524, 1527, 1529, 1538, 1539, 1544, 1546, 1551, 1552, 1553, 1562, 1563, 1567, 1568, 1569, 1570, 1577, 1592, 1596, 1597, 1598, 1602, 1604, 1605, 1608, 1616, 1617, 1618, 1621, 1642, 1644, 1645, 1649, 1652, 1654, 1655, 1656, 1659, 1660, 1662, 1665, 1666, 1684, 1688, 1701, 1702, 1710, 1711, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1744, 1749, 1757, 1762, 1765, 1767, 1779, 1780, 1782, 1787, 1791, 1792, 1794, 1795, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1825, 1826, 1827, 1832, 1835, 1837, 1838, 1840, 1843, 1845, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1856, 1858, 1859, 1861, 1862, 1863, 1866, 1867, 1869, 1875, 1877, 1882, 1883, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1900, 1903, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1920, 1923, 1924, 1926, 1927, 1928, 1930, 1932, 1933], "loss_fn": [0, 45, 1683, 1888, 1892, 1893, 1902, 1910], "exit": [0, 1, 2, 4, 20, 35, 41, 49, 58, 63, 70, 71, 891, 1608, 1869, 1881, 1889, 1902, 1907, 1921], "befor": [0, 1, 3, 6, 7, 11, 12, 14, 15, 17, 20, 23, 25, 28, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 50, 55, 57, 58, 59, 60, 63, 71, 98, 151, 744, 757, 785, 786, 787, 890, 894, 896, 948, 957, 972, 1050, 1051, 1052, 1061, 1069, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1110, 1111, 1114, 1122, 1125, 1196, 1207, 1209, 1248, 1252, 1265, 1295, 1323, 1326, 1365, 1371, 1372, 1375, 1380, 1428, 1429, 1430, 1467, 1471, 1479, 1527, 1546, 1583, 1584, 1599, 1602, 1603, 1604, 1605, 1608, 1616, 1649, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1697, 1711, 1714, 1740, 1749, 1760, 1761, 1790, 1793, 1796, 1797, 1798, 1800, 1801, 1810, 1813, 1835, 1846, 1866, 1868, 1869, 1881, 1888, 1889, 1892, 1893, 1894, 1897, 1899, 1900, 1903, 1905, 1906, 1910, 1911, 1912, 1914, 1919, 1920, 1921, 1923, 1924, 1928, 1930], "step": [0, 1, 2, 4, 9, 16, 20, 22, 28, 32, 38, 39, 41, 42, 43, 45, 47, 59, 63, 67, 71, 535, 604, 683, 765, 766, 854, 862, 891, 892, 893, 921, 945, 1155, 1243, 1266, 1268, 1282, 1285, 1297, 1376, 1377, 1398, 1495, 1496, 1522, 1523, 1608, 1641, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1720, 1729, 1783, 1865, 1866, 1867, 1883, 1888, 1889, 1892, 1893, 1894, 1896, 1900, 1902, 1904, 1906, 1907, 1911, 1913, 1914, 1919, 1920, 1923, 1928], "usag": [0, 1, 4, 7, 9, 14, 15, 16, 17, 28, 33, 38, 41, 45, 47, 48, 49, 52, 55, 56, 58, 60, 63, 71, 745, 754, 789, 790, 791, 807, 808, 809, 810, 812, 813, 814, 851, 855, 887, 957, 1018, 1038, 1042, 1069, 1120, 1125, 1129, 1130, 1131, 1209, 1268, 1608, 1663, 1866, 1869, 1879, 1883, 1888, 1889, 1894, 1896, 1907, 1913, 1921, 1928, 1929, 1931, 1932, 1933], "along": [0, 32, 35, 38, 41, 47, 51, 58, 313, 315, 317, 321, 491, 511, 513, 515, 683, 694, 816, 872, 873, 944, 967, 969, 984, 986, 1052, 1060, 1061, 1068, 1069, 1085, 1090, 1093, 1097, 1100, 1103, 1109, 1137, 1138, 1161, 1170, 1173, 1217, 1228, 1264, 1316, 1323, 1327, 1328, 1337, 1338, 1339, 1345, 1363, 1376, 1377, 1418, 1421, 1422, 1423, 1461, 1463, 1492, 1500, 1509, 1522, 1523, 1526, 1529, 1546, 1551, 1552, 1553, 1563, 1583, 1584, 1626, 1628, 1635, 1636, 1645, 1654, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1695, 1714, 1734, 1735, 1740, 1751, 1787, 1790, 1793, 1794, 1802, 1807, 1825, 1829, 1832, 1835, 1844, 1853, 1856, 1858, 1863, 1868, 1873, 1884, 1890, 1894, 1896, 1899, 1900, 1911, 1914, 1924], "more": [0, 1, 2, 3, 4, 8, 9, 12, 14, 15, 16, 17, 19, 20, 22, 25, 28, 30, 32, 33, 34, 37, 38, 39, 41, 42, 47, 48, 49, 50, 54, 57, 58, 59, 60, 63, 66, 67, 68, 69, 71, 84, 151, 254, 255, 313, 321, 486, 491, 493, 496, 511, 513, 515, 542, 615, 677, 732, 768, 777, 781, 790, 851, 856, 857, 858, 870, 883, 884, 885, 887, 889, 890, 896, 898, 900, 904, 905, 906, 910, 911, 921, 929, 932, 934, 940, 941, 942, 943, 972, 973, 975, 977, 978, 994, 1013, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1039, 1047, 1052, 1058, 1067, 1069, 1073, 1085, 1086, 1088, 1090, 1109, 1110, 1111, 1112, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1144, 1145, 1149, 1158, 1159, 1171, 1177, 1181, 1183, 1184, 1196, 1209, 1212, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1265, 1268, 1271, 1274, 1276, 1286, 1287, 1309, 1310, 1313, 1324, 1336, 1340, 1345, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1371, 1372, 1373, 1389, 1398, 1424, 1425, 1426, 1428, 1434, 1440, 1441, 1442, 1443, 1455, 1467, 1475, 1492, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1516, 1518, 1519, 1527, 1530, 1531, 1532, 1533, 1538, 1542, 1546, 1547, 1557, 1564, 1571, 1572, 1573, 1575, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1595, 1596, 1597, 1598, 1599, 1608, 1609, 1615, 1617, 1618, 1653, 1654, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1701, 1712, 1713, 1739, 1745, 1749, 1759, 1789, 1790, 1814, 1835, 1837, 1849, 1856, 1857, 1863, 1864, 1865, 1866, 1868, 1869, 1875, 1876, 1878, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1920, 1921, 1923, 1926, 1927, 1928, 1929, 1930, 1931, 1934, 1935], "complex": [0, 1, 3, 7, 8, 17, 19, 38, 39, 41, 71, 311, 329, 482, 682, 689, 905, 906, 943, 952, 961, 962, 1064, 1090, 1112, 1117, 1149, 1166, 1175, 1186, 1188, 1189, 1192, 1193, 1196, 1216, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1245, 1248, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1264, 1265, 1266, 1268, 1276, 1282, 1294, 1299, 1317, 1356, 1357, 1358, 1395, 1428, 1502, 1503, 1504, 1615, 1655, 1707, 1720, 1733, 1754, 1765, 1810, 1811, 1814, 1849, 1853, 1854, 1855, 1863, 1864, 1867, 1869, 1870, 1878, 1902, 1909, 1925, 1926, 1929, 1930, 1931], "scenario": [0, 16, 17, 38, 41, 58, 1663, 1664, 1892, 1897, 1907, 1913, 1919], "g": [0, 1, 2, 3, 5, 7, 12, 14, 15, 22, 26, 28, 30, 32, 33, 38, 39, 41, 45, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 61, 63, 66, 68, 70, 71, 577, 614, 745, 754, 757, 790, 791, 812, 814, 851, 856, 858, 859, 886, 895, 905, 906, 931, 1015, 1069, 1120, 1126, 1130, 1131, 1146, 1149, 1171, 1193, 1196, 1202, 1203, 1211, 1267, 1351, 1352, 1365, 1367, 1368, 1369, 1373, 1375, 1380, 1388, 1394, 1398, 1399, 1428, 1429, 1438, 1443, 1459, 1511, 1513, 1514, 1515, 1520, 1527, 1608, 1609, 1610, 1611, 1652, 1655, 1662, 1663, 1668, 1669, 1670, 1671, 1674, 1680, 1681, 1682, 1683, 1735, 1742, 1753, 1760, 1778, 1810, 1863, 1866, 1868, 1869, 1870, 1873, 1876, 1881, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1904, 1907, 1910, 1911, 1913, 1914, 1919, 1923, 1926, 1927, 1928, 1934], "penalti": [0, 23, 778, 1026, 1667, 1668, 1669, 1670, 1672, 1674, 1680, 1681, 1683, 1915], "multipl": [0, 1, 2, 3, 5, 11, 15, 16, 18, 27, 38, 39, 41, 42, 43, 47, 48, 51, 58, 59, 60, 63, 68, 70, 71, 192, 209, 315, 511, 683, 685, 686, 692, 693, 757, 838, 871, 872, 875, 904, 938, 940, 950, 964, 968, 984, 985, 986, 1012, 1067, 1069, 1072, 1122, 1130, 1131, 1132, 1133, 1136, 1137, 1141, 1145, 1159, 1160, 1209, 1212, 1217, 1218, 1233, 1234, 1235, 1251, 1256, 1261, 1262, 1290, 1293, 1298, 1300, 1344, 1345, 1359, 1360, 1361, 1362, 1364, 1372, 1375, 1380, 1388, 1394, 1395, 1416, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1479, 1499, 1500, 1510, 1519, 1539, 1562, 1570, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1682, 1690, 1691, 1692, 1693, 1694, 1699, 1701, 1757, 1785, 1791, 1792, 1796, 1797, 1798, 1800, 1801, 1829, 1830, 1837, 1845, 1849, 1856, 1857, 1863, 1864, 1868, 1869, 1881, 1882, 1883, 1884, 1889, 1891, 1893, 1895, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1915, 1919, 1920, 1921, 1923, 1933], "custom": [0, 1, 3, 5, 15, 17, 18, 20, 25, 32, 33, 38, 41, 42, 43, 44, 45, 46, 51, 54, 55, 57, 63, 83, 84, 497, 790, 794, 811, 812, 813, 814, 835, 837, 856, 857, 858, 859, 896, 950, 952, 971, 980, 1044, 1196, 1428, 1471, 1475, 1476, 1477, 1622, 1631, 1648, 1689, 1864, 1870, 1873, 1875, 1881, 1882, 1889, 1899, 1904, 1905, 1906, 1908, 1917, 1918, 1932], "autograd": [0, 4, 5, 7, 8, 16, 17, 23, 28, 41, 45, 47, 63, 64, 67, 140, 335, 444, 445, 446, 447, 448, 494, 686, 862, 876, 877, 891, 917, 919, 928, 947, 952, 1015, 1070, 1071, 1072, 1082, 1087, 1105, 1122, 1123, 1124, 1125, 1126, 1135, 1137, 1153, 1154, 1171, 1196, 1215, 1235, 1266, 1282, 1290, 1300, 1382, 1428, 1434, 1475, 1529, 1544, 1608, 1659, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1856, 1861, 1862, 1864, 1867, 1871, 1876, 1884, 1887, 1892, 1893, 1896, 1897, 1899, 1900, 1913, 1929, 1930, 1931, 1934], "function": [0, 2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 28, 30, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 48, 49, 51, 55, 56, 58, 59, 63, 66, 68, 70, 84, 89, 120, 151, 196, 260, 289, 298, 321, 486, 491, 494, 515, 538, 553, 677, 686, 690, 691, 695, 696, 745, 754, 755, 757, 761, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 794, 795, 797, 811, 812, 813, 814, 821, 823, 835, 838, 851, 854, 856, 858, 859, 860, 874, 875, 890, 891, 892, 893, 904, 905, 906, 910, 911, 914, 917, 919, 928, 930, 938, 940, 944, 947, 950, 952, 953, 954, 955, 956, 957, 961, 962, 969, 970, 971, 973, 975, 977, 980, 997, 998, 1001, 1006, 1007, 1012, 1013, 1015, 1016, 1017, 1018, 1020, 1025, 1026, 1033, 1034, 1036, 1037, 1038, 1042, 1052, 1057, 1059, 1060, 1067, 1069, 1073, 1085, 1086, 1088, 1108, 1112, 1115, 1116, 1117, 1120, 1122, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1141, 1142, 1149, 1153, 1154, 1155, 1157, 1159, 1167, 1168, 1169, 1171, 1183, 1193, 1194, 1195, 1196, 1197, 1199, 1201, 1202, 1206, 1207, 1208, 1209, 1211, 1213, 1215, 1216, 1217, 1219, 1224, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1247, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1271, 1273, 1282, 1285, 1286, 1290, 1293, 1296, 1298, 1300, 1301, 1302, 1320, 1323, 1324, 1340, 1344, 1350, 1351, 1353, 1354, 1355, 1362, 1366, 1370, 1373, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1394, 1396, 1397, 1398, 1399, 1414, 1417, 1418, 1420, 1427, 1428, 1433, 1434, 1436, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1473, 1475, 1476, 1477, 1479, 1481, 1483, 1484, 1485, 1600, 1604, 1605, 1608, 1615, 1616, 1620, 1631, 1641, 1642, 1643, 1645, 1648, 1649, 1650, 1653, 1655, 1656, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1685, 1688, 1689, 1691, 1694, 1695, 1696, 1701, 1702, 1703, 1707, 1713, 1720, 1724, 1729, 1742, 1751, 1752, 1753, 1756, 1759, 1765, 1773, 1777, 1778, 1783, 1786, 1788, 1789, 1790, 1791, 1793, 1799, 1806, 1810, 1816, 1817, 1825, 1829, 1831, 1835, 1845, 1846, 1847, 1849, 1853, 1854, 1855, 1856, 1857, 1862, 1863, 1864, 1865, 1870, 1873, 1875, 1878, 1879, 1881, 1883, 1887, 1890, 1892, 1893, 1894, 1896, 1899, 1900, 1903, 1905, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1918, 1919, 1920, 1921, 1926, 1928, 1930, 1931, 1932, 1933], "autocastmodel": 0, "nn": [0, 3, 5, 12, 15, 20, 26, 27, 28, 33, 38, 39, 41, 42, 45, 46, 59, 63, 64, 71, 298, 538, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 789, 790, 811, 851, 856, 857, 858, 859, 861, 1012, 1015, 1069, 1125, 1134, 1135, 1194, 1196, 1197, 1199, 1200, 1201, 1202, 1205, 1206, 1207, 1211, 1212, 1213, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1599, 1608, 1609, 1610, 1611, 1617, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1641, 1653, 1684, 1786, 1810, 1849, 1863, 1864, 1866, 1867, 1871, 1883, 1884, 1888, 1893, 1896, 1900, 1902, 1903, 1904, 1907, 1910, 1911, 1912, 1914, 1916, 1919, 1928, 1930, 1933], "modul": [0, 1, 3, 5, 6, 8, 12, 15, 16, 18, 21, 22, 26, 27, 28, 30, 32, 35, 39, 41, 43, 45, 46, 50, 52, 55, 58, 59, 63, 64, 66, 486, 677, 683, 686, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 735, 736, 737, 742, 743, 744, 753, 758, 759, 760, 761, 762, 785, 786, 787, 788, 789, 790, 794, 796, 797, 799, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 835, 836, 837, 851, 854, 855, 856, 857, 858, 859, 861, 910, 911, 918, 930, 950, 1015, 1125, 1134, 1135, 1137, 1171, 1194, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1205, 1206, 1207, 1211, 1212, 1213, 1267, 1290, 1300, 1336, 1340, 1346, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1381, 1383, 1391, 1392, 1393, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1429, 1430, 1438, 1439, 1444, 1456, 1461, 1467, 1471, 1475, 1518, 1519, 1592, 1599, 1608, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1644, 1648, 1649, 1650, 1652, 1684, 1745, 1789, 1856, 1863, 1864, 1870, 1875, 1877, 1879, 1881, 1883, 1884, 1887, 1891, 1892, 1893, 1896, 1899, 1901, 1902, 1904, 1906, 1907, 1910, 1912, 1913, 1916, 1917, 1919, 1922, 1923, 1924, 1928, 1931, 1932, 1933, 1934], "def": [0, 1, 11, 12, 14, 16, 18, 19, 20, 21, 26, 27, 28, 38, 39, 41, 42, 43, 47, 49, 50, 51, 55, 56, 59, 60, 61, 63, 65, 67, 68, 69, 70, 71, 398, 789, 790, 858, 859, 887, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 950, 955, 1073, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1135, 1136, 1137, 1171, 1194, 1196, 1197, 1199, 1200, 1201, 1202, 1206, 1207, 1210, 1211, 1212, 1213, 1428, 1429, 1430, 1438, 1439, 1477, 1599, 1608, 1620, 1653, 1662, 1663, 1789, 1856, 1863, 1866, 1868, 1869, 1873, 1883, 1888, 1889, 1891, 1893, 1894, 1895, 1896, 1900, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1921, 1934], "self": [0, 1, 9, 12, 20, 27, 28, 35, 38, 39, 41, 43, 46, 49, 50, 55, 60, 63, 68, 71, 98, 140, 151, 154, 155, 156, 171, 173, 176, 179, 180, 181, 191, 192, 196, 197, 209, 217, 219, 233, 240, 254, 255, 258, 259, 267, 286, 290, 297, 311, 313, 315, 317, 319, 321, 323, 325, 326, 328, 329, 330, 331, 333, 341, 377, 393, 398, 400, 401, 402, 453, 470, 480, 482, 495, 496, 497, 498, 511, 513, 515, 518, 522, 534, 540, 541, 542, 543, 555, 557, 577, 578, 580, 581, 582, 584, 585, 601, 604, 605, 611, 614, 615, 617, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 858, 859, 915, 1125, 1126, 1135, 1166, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1206, 1207, 1211, 1212, 1213, 1336, 1340, 1373, 1427, 1428, 1429, 1430, 1434, 1438, 1439, 1455, 1457, 1467, 1473, 1475, 1557, 1580, 1599, 1617, 1618, 1620, 1626, 1628, 1641, 1650, 1663, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1710, 1731, 1865, 1866, 1867, 1868, 1869, 1873, 1879, 1882, 1883, 1887, 1889, 1890, 1891, 1894, 1896, 1900, 1905, 1907, 1911, 1912, 1914, 1919, 1925], "produc": [0, 7, 12, 14, 16, 19, 20, 23, 28, 32, 38, 41, 43, 48, 50, 52, 55, 60, 68, 69, 70, 71, 89, 729, 735, 736, 737, 742, 743, 753, 761, 789, 790, 921, 941, 1008, 1100, 1101, 1102, 1120, 1130, 1131, 1137, 1149, 1207, 1211, 1212, 1215, 1231, 1232, 1235, 1242, 1243, 1254, 1259, 1293, 1296, 1297, 1298, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409, 1434, 1511, 1519, 1527, 1538, 1596, 1597, 1598, 1655, 1684, 1713, 1720, 1729, 1814, 1849, 1856, 1866, 1868, 1869, 1881, 1882, 1888, 1889, 1890, 1892, 1894, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1923, 1927], "after": [0, 1, 7, 9, 11, 13, 16, 17, 18, 20, 23, 27, 28, 32, 38, 39, 41, 42, 43, 45, 46, 58, 60, 63, 70, 71, 260, 757, 787, 854, 856, 858, 859, 890, 891, 894, 950, 957, 970, 972, 1008, 1015, 1068, 1126, 1181, 1196, 1200, 1251, 1290, 1332, 1365, 1380, 1413, 1428, 1431, 1471, 1473, 1475, 1492, 1527, 1599, 1602, 1608, 1620, 1622, 1626, 1628, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1695, 1697, 1753, 1810, 1835, 1858, 1863, 1868, 1869, 1879, 1881, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1903, 1907, 1910, 1911, 1913, 1914, 1919, 1920, 1921, 1922, 1924, 1926, 1928], "return": [0, 1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 60, 63, 64, 65, 67, 68, 69, 70, 71, 89, 120, 154, 156, 171, 173, 176, 179, 180, 181, 191, 192, 196, 197, 207, 209, 210, 217, 219, 220, 222, 233, 240, 242, 254, 260, 267, 289, 297, 311, 319, 323, 325, 326, 328, 329, 330, 331, 333, 337, 339, 341, 352, 377, 393, 434, 444, 445, 446, 447, 448, 457, 471, 472, 473, 474, 475, 477, 482, 486, 494, 495, 496, 511, 513, 522, 534, 540, 541, 553, 554, 555, 556, 557, 577, 578, 579, 580, 586, 600, 601, 604, 606, 610, 611, 614, 681, 689, 690, 692, 693, 694, 695, 696, 732, 763, 764, 767, 768, 772, 773, 774, 775, 778, 781, 788, 789, 790, 791, 811, 812, 813, 814, 833, 837, 838, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 870, 871, 872, 873, 874, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 914, 915, 916, 919, 920, 921, 928, 929, 931, 934, 936, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 955, 956, 961, 962, 964, 965, 966, 968, 969, 970, 972, 973, 975, 979, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1044, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1069, 1070, 1071, 1072, 1073, 1074, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1117, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1144, 1145, 1146, 1147, 1148, 1152, 1153, 1154, 1156, 1157, 1158, 1162, 1166, 1170, 1171, 1172, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1196, 1197, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1217, 1220, 1221, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1275, 1276, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1304, 1305, 1307, 1313, 1318, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1332, 1336, 1337, 1338, 1339, 1344, 1345, 1362, 1363, 1364, 1365, 1372, 1376, 1377, 1388, 1394, 1395, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1442, 1456, 1459, 1460, 1461, 1462, 1463, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1497, 1499, 1500, 1501, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1570, 1572, 1573, 1575, 1577, 1578, 1580, 1581, 1582, 1583, 1584, 1590, 1592, 1593, 1594, 1595, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1612, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1703, 1704, 1706, 1709, 1710, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1742, 1744, 1749, 1750, 1751, 1752, 1758, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1789, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1809, 1810, 1813, 1814, 1815, 1823, 1824, 1825, 1826, 1827, 1828, 1830, 1832, 1833, 1834, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1850, 1852, 1854, 1855, 1856, 1859, 1861, 1862, 1863, 1866, 1870, 1873, 1877, 1878, 1879, 1881, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "disabl": [0, 2, 5, 13, 15, 16, 18, 22, 24, 28, 42, 47, 63, 71, 807, 808, 917, 950, 1015, 1069, 1073, 1125, 1171, 1196, 1198, 1211, 1212, 1428, 1434, 1467, 1475, 1577, 1608, 1609, 1650, 1653, 1758, 1759, 1762, 1789, 1864, 1868, 1875, 1888, 1891, 1892, 1893, 1894, 1898, 1903, 1904, 1907, 1912, 1918, 1923, 1930], "them": [0, 1, 3, 5, 7, 8, 9, 14, 15, 16, 19, 20, 23, 24, 27, 28, 30, 32, 33, 38, 41, 43, 49, 50, 55, 58, 60, 63, 67, 68, 70, 71, 151, 222, 254, 731, 890, 896, 900, 932, 1015, 1054, 1057, 1069, 1217, 1226, 1237, 1251, 1263, 1267, 1295, 1326, 1352, 1371, 1428, 1461, 1463, 1583, 1627, 1642, 1645, 1685, 1793, 1795, 1813, 1863, 1868, 1869, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1898, 1899, 1900, 1904, 1906, 1910, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1923, 1924, 1928, 1929, 1932], "differ": [0, 1, 3, 5, 8, 15, 16, 17, 19, 20, 22, 23, 24, 25, 28, 32, 35, 38, 41, 43, 45, 46, 47, 49, 50, 51, 55, 56, 58, 59, 61, 63, 64, 67, 68, 69, 71, 197, 485, 491, 614, 677, 683, 686, 692, 693, 732, 757, 790, 793, 794, 819, 821, 822, 858, 859, 862, 876, 877, 905, 906, 918, 930, 931, 968, 1052, 1057, 1059, 1061, 1069, 1109, 1110, 1111, 1115, 1116, 1122, 1125, 1130, 1131, 1137, 1149, 1170, 1196, 1206, 1211, 1225, 1231, 1232, 1242, 1243, 1251, 1254, 1259, 1263, 1290, 1300, 1336, 1345, 1346, 1347, 1348, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1380, 1381, 1389, 1391, 1392, 1393, 1394, 1398, 1399, 1415, 1428, 1431, 1434, 1449, 1450, 1452, 1453, 1454, 1456, 1459, 1467, 1473, 1475, 1477, 1480, 1483, 1484, 1485, 1492, 1500, 1518, 1527, 1538, 1540, 1551, 1552, 1553, 1577, 1599, 1608, 1610, 1611, 1615, 1650, 1655, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1689, 1697, 1703, 1713, 1735, 1808, 1809, 1814, 1835, 1846, 1847, 1849, 1851, 1852, 1856, 1863, 1866, 1868, 1869, 1871, 1875, 1876, 1881, 1882, 1884, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1906, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1926, 1928, 1929, 1930, 1933], "caus": [0, 1, 2, 3, 5, 15, 17, 32, 35, 38, 41, 45, 51, 57, 58, 59, 68, 71, 553, 614, 874, 877, 890, 953, 1122, 1207, 1211, 1231, 1232, 1259, 1313, 1538, 1539, 1596, 1599, 1608, 1654, 1666, 1753, 1764, 1810, 1849, 1866, 1869, 1881, 1890, 1892, 1894, 1896, 1902, 1904, 1906, 1907, 1911, 1914, 1915, 1921, 1923, 1926], "mismatch": [0, 41, 71, 877, 1197, 1665, 1666, 1868, 1888, 1893, 1894, 1896, 1907, 1930], "error": [0, 1, 5, 8, 11, 15, 19, 26, 32, 34, 35, 38, 39, 41, 42, 44, 47, 56, 58, 59, 63, 66, 68, 70, 71, 83, 84, 191, 222, 313, 315, 321, 323, 328, 542, 553, 611, 614, 677, 816, 862, 875, 877, 896, 898, 899, 900, 901, 902, 903, 904, 952, 980, 1015, 1026, 1039, 1043, 1067, 1125, 1129, 1130, 1132, 1137, 1159, 1196, 1201, 1210, 1225, 1226, 1235, 1237, 1239, 1242, 1243, 1244, 1254, 1257, 1267, 1285, 1313, 1318, 1344, 1345, 1378, 1389, 1395, 1419, 1428, 1457, 1459, 1525, 1536, 1558, 1577, 1580, 1581, 1608, 1610, 1611, 1612, 1650, 1655, 1665, 1666, 1709, 1749, 1756, 1805, 1810, 1849, 1856, 1857, 1863, 1864, 1866, 1868, 1869, 1875, 1876, 1881, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1897, 1898, 1904, 1907, 1911, 1917, 1919, 1924, 1929, 1930, 1932, 1933], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 30, 32, 33, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 83, 84, 98, 151, 155, 196, 207, 210, 254, 315, 319, 321, 444, 445, 446, 447, 448, 457, 470, 480, 494, 497, 515, 518, 534, 542, 577, 578, 580, 581, 582, 584, 585, 600, 604, 614, 677, 683, 686, 687, 688, 690, 692, 693, 694, 696, 732, 753, 757, 761, 776, 778, 782, 791, 792, 814, 817, 818, 819, 822, 851, 855, 858, 862, 871, 872, 873, 874, 875, 876, 877, 886, 888, 889, 890, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 918, 919, 921, 928, 930, 931, 932, 934, 938, 940, 941, 942, 943, 944, 945, 952, 955, 957, 958, 961, 962, 963, 967, 968, 969, 972, 973, 975, 977, 980, 982, 984, 986, 993, 1004, 1010, 1015, 1016, 1036, 1039, 1050, 1051, 1052, 1056, 1057, 1058, 1059, 1060, 1069, 1070, 1071, 1072, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1112, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1137, 1138, 1149, 1153, 1154, 1156, 1157, 1158, 1159, 1170, 1173, 1187, 1193, 1196, 1199, 1200, 1201, 1203, 1205, 1207, 1208, 1211, 1212, 1215, 1216, 1217, 1221, 1225, 1226, 1231, 1232, 1234, 1235, 1237, 1238, 1239, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1278, 1282, 1283, 1285, 1287, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1313, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1336, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1376, 1377, 1380, 1381, 1382, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1413, 1415, 1419, 1420, 1421, 1422, 1423, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1459, 1460, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1483, 1484, 1485, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1527, 1529, 1531, 1538, 1539, 1544, 1546, 1548, 1549, 1551, 1552, 1553, 1562, 1563, 1564, 1567, 1570, 1571, 1577, 1583, 1584, 1595, 1596, 1608, 1609, 1612, 1613, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1644, 1648, 1649, 1650, 1653, 1654, 1655, 1659, 1660, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1701, 1702, 1707, 1711, 1713, 1714, 1718, 1719, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1734, 1735, 1740, 1742, 1745, 1749, 1751, 1753, 1756, 1757, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1787, 1790, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1808, 1809, 1810, 1813, 1814, 1828, 1829, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1846, 1847, 1849, 1850, 1851, 1852, 1856, 1861, 1862, 1863, 1866, 1869, 1871, 1873, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1934], "so": [0, 1, 2, 3, 7, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 27, 28, 32, 34, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 51, 58, 59, 61, 63, 66, 67, 68, 70, 71, 335, 457, 494, 677, 856, 891, 896, 898, 899, 904, 947, 971, 994, 1057, 1059, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1120, 1122, 1125, 1129, 1130, 1132, 1133, 1183, 1193, 1196, 1199, 1200, 1205, 1207, 1209, 1251, 1253, 1263, 1268, 1273, 1285, 1306, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1372, 1375, 1382, 1428, 1444, 1461, 1463, 1479, 1492, 1502, 1503, 1504, 1527, 1583, 1584, 1599, 1608, 1654, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1779, 1793, 1805, 1810, 1814, 1834, 1846, 1850, 1866, 1868, 1869, 1875, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1914, 1918, 1919, 1923, 1924, 1926, 1928, 1929, 1931], "cast": [0, 6, 39, 56, 63, 335, 600, 601, 935, 1050, 1051, 1196, 1248, 1252, 1265, 1295, 1323, 1326, 1428, 1546, 1583, 1584, 1655, 1711, 1790, 1793, 1799, 1813, 1818, 1819, 1866, 1888, 1903, 1907, 1924, 1925, 1926], "back": [0, 1, 2, 11, 17, 19, 20, 32, 38, 39, 41, 43, 47, 58, 63, 68, 71, 732, 834, 905, 947, 1089, 1126, 1197, 1209, 1261, 1267, 1474, 1612, 1613, 1795, 1863, 1866, 1869, 1889, 1894, 1895, 1902, 1903, 1904, 1907, 1910, 1911, 1914, 1919, 1923, 1934], "from": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 24, 26, 27, 28, 32, 33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 55, 56, 58, 60, 61, 63, 64, 66, 68, 69, 70, 89, 154, 155, 174, 197, 222, 223, 258, 286, 313, 315, 319, 321, 377, 402, 447, 453, 470, 472, 473, 480, 485, 486, 491, 511, 513, 515, 541, 543, 557, 577, 604, 605, 607, 614, 677, 709, 710, 711, 712, 713, 714, 717, 725, 726, 729, 732, 735, 736, 737, 738, 739, 740, 742, 743, 753, 757, 761, 769, 770, 771, 778, 785, 786, 789, 790, 791, 794, 797, 812, 813, 814, 821, 823, 837, 851, 855, 857, 858, 859, 861, 862, 876, 877, 888, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 910, 911, 919, 920, 928, 929, 934, 935, 947, 971, 972, 975, 984, 985, 986, 1004, 1008, 1026, 1053, 1069, 1089, 1091, 1092, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1109, 1110, 1111, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1153, 1154, 1158, 1173, 1193, 1194, 1196, 1197, 1199, 1201, 1202, 1203, 1206, 1207, 1219, 1235, 1239, 1248, 1251, 1252, 1265, 1266, 1267, 1268, 1282, 1286, 1287, 1300, 1305, 1309, 1310, 1311, 1313, 1318, 1327, 1328, 1336, 1340, 1346, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1380, 1381, 1382, 1383, 1389, 1391, 1392, 1393, 1394, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1428, 1429, 1430, 1434, 1438, 1439, 1443, 1445, 1446, 1467, 1472, 1473, 1475, 1477, 1479, 1480, 1492, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1527, 1529, 1538, 1551, 1552, 1553, 1565, 1595, 1599, 1608, 1612, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1635, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1652, 1656, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1706, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1735, 1736, 1739, 1741, 1742, 1749, 1762, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1811, 1815, 1825, 1828, 1837, 1839, 1841, 1846, 1847, 1849, 1850, 1859, 1864, 1866, 1867, 1868, 1869, 1871, 1873, 1875, 1876, 1877, 1878, 1879, 1881, 1883, 1884, 1885, 1887, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1910, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1923, 1924, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934], "alreadi": [0, 1, 11, 15, 30, 38, 39, 41, 42, 58, 59, 63, 70, 71, 196, 207, 210, 462, 485, 521, 577, 600, 601, 789, 837, 851, 855, 876, 980, 1006, 1196, 1205, 1267, 1428, 1603, 1608, 1641, 1684, 1844, 1846, 1863, 1866, 1876, 1878, 1882, 1883, 1888, 1889, 1892, 1894, 1897, 1902, 1907, 1910, 1911, 1914, 1920, 1921, 1925, 1927], "incur": [0, 5, 39, 41, 63, 940, 1902, 1919], "addit": [0, 1, 3, 5, 7, 9, 11, 14, 16, 17, 23, 24, 28, 32, 33, 38, 41, 42, 43, 47, 52, 58, 59, 63, 70, 71, 335, 511, 604, 746, 748, 749, 750, 751, 755, 757, 778, 792, 811, 856, 1026, 1193, 1196, 1200, 1205, 1210, 1336, 1347, 1348, 1349, 1359, 1360, 1361, 1372, 1379, 1380, 1382, 1389, 1392, 1393, 1407, 1408, 1409, 1413, 1414, 1415, 1416, 1418, 1424, 1425, 1426, 1428, 1434, 1436, 1461, 1463, 1467, 1471, 1475, 1477, 1498, 1505, 1506, 1507, 1544, 1608, 1673, 1846, 1847, 1854, 1866, 1868, 1869, 1875, 1879, 1882, 1883, 1884, 1889, 1891, 1892, 1894, 1895, 1899, 1902, 1903, 1906, 1907, 1908, 1913, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1927, 1930], "overhead": [0, 1, 3, 4, 8, 11, 15, 16, 18, 19, 20, 22, 39, 41, 63, 778, 950, 1026, 1207, 1608, 1891, 1892, 1893, 1898, 1899, 1912, 1913, 1920, 1923, 1929], "here": [0, 1, 7, 8, 9, 11, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 33, 35, 38, 39, 41, 42, 47, 57, 59, 65, 66, 67, 68, 70, 71, 577, 790, 791, 966, 978, 1069, 1086, 1088, 1089, 1094, 1095, 1096, 1098, 1099, 1104, 1106, 1125, 1135, 1194, 1207, 1346, 1347, 1348, 1359, 1360, 1361, 1391, 1392, 1393, 1436, 1467, 1527, 1529, 1617, 1681, 1684, 1695, 1782, 1863, 1866, 1868, 1869, 1871, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1907, 1910, 1911, 1912, 1914, 1917, 1923, 1927, 1928, 1930], "assum": [0, 13, 14, 23, 30, 38, 41, 46, 47, 49, 51, 58, 59, 63, 66, 69, 71, 814, 952, 1052, 1087, 1090, 1092, 1100, 1101, 1102, 1105, 1187, 1193, 1194, 1197, 1211, 1231, 1232, 1234, 1241, 1250, 1253, 1256, 1258, 1268, 1351, 1420, 1480, 1511, 1577, 1608, 1617, 1620, 1645, 1685, 1686, 1691, 1692, 1693, 1696, 1698, 1699, 1703, 1815, 1835, 1837, 1863, 1866, 1868, 1869, 1882, 1889, 1892, 1894, 1895, 1897, 1899, 1903, 1907, 1910, 1911, 1912, 1919, 1920, 1921, 1923], "a_float32": 0, "rand": [0, 1, 35, 47, 71, 335, 690, 696, 898, 899, 900, 901, 902, 903, 968, 1012, 1013, 1086, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1106, 1127, 1202, 1207, 1211, 1212, 1213, 1269, 1270, 1272, 1344, 1394, 1471, 1472, 1473, 1474, 1475, 1499, 1518, 1519, 1577, 1608, 1620, 1653, 1706, 1717, 1718, 1719, 1723, 1865, 1866, 1867, 1868, 1869, 1871, 1882, 1883, 1907, 1909, 1912, 1914, 1919, 1920, 1924, 1927, 1928, 1931], "8": [0, 1, 13, 20, 28, 32, 37, 38, 39, 41, 47, 49, 313, 315, 317, 321, 401, 402, 470, 511, 515, 557, 604, 614, 682, 683, 694, 695, 742, 743, 758, 760, 762, 770, 771, 817, 818, 819, 822, 901, 921, 929, 940, 943, 944, 948, 1012, 1013, 1048, 1052, 1067, 1072, 1085, 1101, 1102, 1108, 1109, 1112, 1119, 1149, 1158, 1159, 1219, 1248, 1251, 1252, 1253, 1261, 1263, 1266, 1267, 1327, 1328, 1333, 1334, 1335, 1337, 1338, 1339, 1352, 1363, 1398, 1424, 1425, 1431, 1433, 1435, 1442, 1443, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1467, 1471, 1472, 1473, 1474, 1475, 1479, 1503, 1506, 1509, 1565, 1570, 1575, 1576, 1577, 1655, 1656, 1662, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1689, 1697, 1702, 1706, 1710, 1730, 1740, 1741, 1742, 1749, 1762, 1769, 1772, 1777, 1783, 1787, 1794, 1796, 1797, 1802, 1810, 1814, 1824, 1829, 1830, 1831, 1833, 1835, 1844, 1849, 1850, 1857, 1866, 1870, 1876, 1892, 1894, 1905, 1907, 1909, 1911, 1912, 1913, 1914, 1917, 1919, 1923, 1924, 1926, 1927, 1929], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 22, 942, 943, 1200, 1251, 1290, 1438, 1439, 1713, 1814, 1849, 1865, 1867, 1868, 1882, 1888, 1891, 1894, 1903, 1909, 1923], "list": [0, 1, 3, 5, 6, 7, 9, 12, 14, 15, 18, 19, 20, 21, 22, 27, 28, 32, 33, 35, 38, 39, 41, 42, 43, 45, 47, 49, 58, 60, 63, 68, 70, 71, 84, 185, 241, 302, 444, 446, 448, 575, 580, 581, 582, 586, 616, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 789, 790, 795, 811, 812, 813, 814, 835, 851, 858, 876, 883, 884, 885, 932, 933, 936, 940, 944, 949, 950, 952, 956, 996, 1002, 1054, 1067, 1069, 1070, 1109, 1123, 1135, 1149, 1159, 1196, 1200, 1202, 1207, 1209, 1211, 1212, 1295, 1297, 1326, 1365, 1371, 1400, 1428, 1430, 1439, 1456, 1467, 1478, 1518, 1592, 1608, 1609, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1655, 1659, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1689, 1691, 1693, 1694, 1695, 1697, 1698, 1716, 1718, 1719, 1722, 1726, 1741, 1778, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1808, 1809, 1813, 1828, 1829, 1830, 1846, 1847, 1849, 1851, 1852, 1857, 1861, 1863, 1866, 1867, 1870, 1871, 1875, 1877, 1879, 1882, 1883, 1884, 1894, 1898, 1900, 1903, 1904, 1905, 1909, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1923, 1925, 1926, 1927, 1928, 1929, 1931, 1932, 1933, 1934], "No": [0, 9, 11, 61, 70, 897, 1608, 1653, 1868, 1892, 1907, 1917, 1927, 1930], "manual": [0, 11, 14, 24, 38, 41, 56, 58, 59, 61, 63, 71, 794, 835, 875, 904, 1158, 1200, 1344, 1345, 1364, 1432, 1433, 1435, 1456, 1475, 1499, 1500, 1510, 1562, 1620, 1641, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1866, 1869, 1881, 1888, 1892, 1894, 1895, 1896, 1897, 1900, 1906, 1907, 1914, 1915, 1928], "e_float16": 0, "handl": [0, 1, 5, 9, 11, 15, 16, 17, 19, 20, 23, 30, 32, 38, 39, 41, 42, 43, 45, 49, 50, 51, 58, 59, 63, 70, 71, 486, 837, 887, 897, 910, 911, 952, 963, 972, 987, 1014, 1027, 1069, 1115, 1116, 1137, 1196, 1226, 1365, 1428, 1475, 1477, 1527, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1733, 1779, 1815, 1856, 1863, 1879, 1881, 1883, 1892, 1894, 1895, 1896, 1897, 1902, 1907, 1911, 1914, 1919, 1921, 1930, 1931], "f_float16": 0, "g_float32": 0, "epoch": [0, 38, 51, 61, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1879, 1888, 1910, 1928], "eval": [0, 71, 811, 857, 858, 1135, 1196, 1200, 1205, 1211, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1434, 1467, 1475, 1616, 1869, 1877, 1900, 1907, 1914, 1933, 1934], "jit": [0, 12, 14, 19, 25, 26, 30, 32, 1012, 1013, 1044, 1146, 1194, 1195, 1196, 1210, 1664, 1665, 1760, 1761, 1864, 1868, 1871, 1877, 1883, 1891, 1899, 1905, 1907, 1914, 1919, 1928], "trace": [0, 1, 12, 14, 15, 16, 18, 19, 20, 22, 23, 26, 28, 33, 35, 38, 39, 41, 51, 73, 74, 75, 912, 913, 914, 950, 1069, 1199, 1207, 1208, 1212, 1268, 1309, 1310, 1311, 1666, 1864, 1867, 1868, 1869, 1871, 1889, 1892, 1893, 1905, 1909, 1911, 1928], "testmodel": 0, "__init__": [0, 1, 12, 14, 27, 28, 38, 39, 41, 47, 63, 71, 858, 859, 1135, 1194, 1197, 1199, 1202, 1207, 1211, 1212, 1213, 1428, 1429, 1430, 1438, 1439, 1599, 1866, 1868, 1869, 1879, 1889, 1894, 1896, 1900, 1905, 1907, 1911, 1914, 1928], "input_s": [0, 731, 757, 758, 762, 1380, 1381, 1398, 1399, 1443, 1444, 1445, 1867], "num_class": [0, 19, 1564, 1867], "super": [0, 9, 12, 17, 27, 28, 38, 39, 41, 43, 71, 858, 859, 1135, 1194, 1199, 1202, 1207, 1211, 1212, 1213, 1428, 1429, 1430, 1438, 1439, 1440, 1441, 1599, 1695, 1866, 1868, 1869, 1870, 1889, 1894, 1900, 1905, 1907, 1911, 1914], "fc1": [0, 39, 1599, 1912], "x": [0, 1, 3, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 26, 28, 30, 32, 38, 39, 41, 47, 49, 55, 63, 65, 66, 68, 69, 70, 71, 174, 254, 258, 286, 289, 311, 313, 315, 317, 321, 352, 377, 447, 482, 491, 497, 555, 557, 580, 604, 605, 614, 689, 755, 757, 767, 776, 777, 781, 782, 793, 796, 799, 817, 818, 858, 859, 875, 881, 883, 884, 885, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 932, 933, 934, 937, 938, 950, 961, 964, 967, 968, 1012, 1013, 1052, 1059, 1063, 1064, 1069, 1073, 1083, 1084, 1085, 1086, 1088, 1089, 1094, 1095, 1097, 1099, 1103, 1104, 1106, 1109, 1110, 1111, 1119, 1125, 1127, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1149, 1166, 1170, 1171, 1183, 1201, 1202, 1206, 1207, 1210, 1211, 1212, 1213, 1217, 1227, 1240, 1241, 1245, 1248, 1252, 1256, 1258, 1261, 1262, 1263, 1264, 1265, 1268, 1273, 1274, 1275, 1283, 1286, 1289, 1290, 1297, 1322, 1323, 1327, 1328, 1334, 1335, 1344, 1345, 1346, 1347, 1348, 1350, 1362, 1364, 1370, 1376, 1377, 1378, 1380, 1381, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1399, 1400, 1414, 1417, 1418, 1419, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1435, 1436, 1437, 1438, 1439, 1443, 1445, 1446, 1447, 1448, 1455, 1457, 1458, 1459, 1460, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1480, 1501, 1525, 1527, 1531, 1532, 1538, 1542, 1546, 1557, 1562, 1567, 1571, 1573, 1578, 1579, 1580, 1584, 1585, 1587, 1588, 1589, 1596, 1599, 1616, 1618, 1620, 1641, 1642, 1643, 1644, 1645, 1650, 1653, 1654, 1655, 1662, 1665, 1668, 1689, 1703, 1704, 1715, 1717, 1731, 1734, 1735, 1737, 1738, 1740, 1741, 1745, 1749, 1759, 1787, 1791, 1805, 1808, 1809, 1810, 1816, 1817, 1823, 1829, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1847, 1848, 1850, 1851, 1852, 1854, 1855, 1856, 1859, 1863, 1866, 1867, 1868, 1869, 1870, 1881, 1882, 1883, 1887, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1906, 1907, 1911, 1914, 1919, 1923, 1924, 1926, 1928, 1929, 1931, 1932, 1933], "2": [0, 1, 3, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 27, 30, 32, 35, 36, 37, 38, 39, 41, 42, 45, 47, 48, 49, 51, 56, 58, 63, 67, 68, 69, 70, 71, 174, 192, 209, 226, 234, 254, 260, 313, 315, 317, 321, 335, 377, 401, 402, 444, 445, 446, 447, 448, 480, 486, 491, 494, 497, 511, 513, 515, 541, 555, 557, 577, 578, 580, 581, 582, 584, 585, 586, 604, 614, 677, 678, 680, 681, 682, 683, 686, 687, 688, 689, 690, 692, 694, 695, 696, 731, 735, 736, 737, 738, 739, 740, 742, 743, 752, 755, 757, 759, 790, 793, 817, 862, 871, 872, 873, 874, 875, 876, 877, 881, 883, 884, 885, 887, 896, 898, 899, 900, 901, 902, 903, 910, 911, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 940, 941, 942, 943, 944, 948, 949, 957, 958, 961, 962, 963, 964, 967, 968, 969, 1043, 1048, 1051, 1052, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1079, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1130, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1170, 1171, 1173, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1199, 1200, 1205, 1207, 1209, 1211, 1215, 1216, 1217, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1272, 1273, 1274, 1275, 1282, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1313, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1332, 1335, 1340, 1341, 1342, 1343, 1344, 1345, 1350, 1351, 1352, 1353, 1354, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1382, 1384, 1385, 1386, 1387, 1389, 1396, 1397, 1398, 1399, 1400, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1433, 1434, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1492, 1494, 1499, 1500, 1511, 1518, 1519, 1525, 1527, 1529, 1531, 1538, 1544, 1551, 1552, 1553, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1577, 1593, 1599, 1608, 1612, 1615, 1616, 1620, 1632, 1633, 1634, 1635, 1637, 1638, 1641, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1692, 1696, 1697, 1698, 1702, 1703, 1704, 1706, 1707, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1726, 1728, 1729, 1730, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1745, 1749, 1751, 1752, 1753, 1754, 1755, 1756, 1759, 1762, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1783, 1787, 1788, 1789, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1823, 1824, 1826, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1862, 1864, 1865, 1867, 1868, 1869, 1870, 1876, 1877, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1893, 1894, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1933], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 38, 39, 41, 43, 45, 46, 47, 48, 49, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70, 71, 494, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 776, 782, 785, 786, 788, 790, 791, 835, 854, 856, 858, 859, 862, 890, 891, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 919, 928, 953, 956, 969, 1026, 1069, 1087, 1089, 1090, 1091, 1092, 1099, 1104, 1105, 1106, 1120, 1129, 1130, 1132, 1137, 1149, 1153, 1154, 1170, 1194, 1196, 1199, 1200, 1207, 1209, 1211, 1251, 1254, 1259, 1267, 1268, 1287, 1318, 1336, 1344, 1345, 1394, 1428, 1480, 1527, 1529, 1538, 1596, 1603, 1608, 1615, 1617, 1626, 1628, 1631, 1635, 1636, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1692, 1697, 1714, 1856, 1863, 1864, 1866, 1868, 1869, 1871, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1889, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1926, 1928, 1931, 1932, 1933], "suggest": [0, 9, 22, 28, 39, 64, 83, 84, 1362, 1863, 1871, 1888, 1889, 1896, 1923], "issu": [0, 2, 3, 5, 9, 10, 11, 16, 17, 18, 21, 26, 30, 32, 37, 38, 41, 48, 63, 64, 66, 68, 71, 898, 904, 950, 952, 953, 1120, 1131, 1133, 1137, 1241, 1285, 1297, 1394, 1398, 1424, 1425, 1426, 1443, 1480, 1538, 1539, 1753, 1856, 1863, 1864, 1869, 1871, 1876, 1881, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1902, 1903, 1904, 1906, 1907, 1911, 1914, 1915, 1919, 1923, 1924, 1926], "http": [0, 2, 3, 4, 7, 9, 18, 19, 22, 26, 27, 32, 33, 39, 40, 41, 46, 47, 58, 59, 63, 151, 677, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 789, 790, 890, 950, 1069, 1126, 1268, 1297, 1351, 1398, 1424, 1425, 1426, 1446, 1447, 1471, 1474, 1477, 1652, 1703, 1720, 1753, 1778, 1849, 1863, 1870, 1878, 1889, 1890, 1897, 1898, 1900, 1904, 1906, 1907, 1911, 1913, 1926, 1928, 1935], "github": [0, 7, 9, 16, 22, 26, 27, 28, 32, 40, 41, 54, 63, 64, 68, 151, 789, 790, 890, 904, 1126, 1297, 1424, 1425, 1426, 1471, 1689, 1753, 1863, 1871, 1876, 1894, 1897, 1904, 1907, 1913, 1914, 1923, 1924, 1926], "com": [0, 7, 22, 26, 27, 32, 40, 41, 57, 59, 63, 151, 789, 790, 890, 1126, 1297, 1424, 1425, 1426, 1471, 1753, 1849, 1863, 1878, 1897, 1898, 1904, 1906, 1907, 1913, 1926], "pytorch": [0, 1, 2, 3, 4, 5, 12, 14, 15, 16, 18, 20, 21, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 43, 44, 45, 46, 47, 48, 49, 51, 58, 59, 63, 64, 67, 69, 71, 83, 84, 86, 87, 151, 511, 580, 677, 695, 727, 728, 729, 730, 742, 743, 753, 757, 758, 759, 760, 761, 762, 789, 790, 807, 808, 809, 810, 877, 890, 935, 940, 941, 950, 951, 969, 994, 995, 1006, 1011, 1069, 1114, 1120, 1126, 1127, 1131, 1136, 1137, 1142, 1182, 1183, 1206, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1266, 1282, 1285, 1286, 1297, 1344, 1345, 1351, 1380, 1394, 1424, 1425, 1426, 1471, 1500, 1577, 1608, 1641, 1649, 1650, 1655, 1662, 1666, 1713, 1745, 1753, 1754, 1764, 1810, 1814, 1837, 1849, 1856, 1863, 1865, 1868, 1869, 1873, 1875, 1876, 1878, 1879, 1883, 1884, 1885, 1890, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1906, 1910, 1911, 1913, 1914, 1915, 1916, 1919, 1920, 1923, 1924, 1926, 1927, 1928, 1934, 1935], "75956": 0, "_c": [0, 38, 39, 41, 70, 898, 904, 1195, 1207, 1664, 1867, 1869, 1879, 1892, 1899, 1903, 1906, 1907], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 11, 14, 16, 17, 18, 20, 23, 27, 28, 32, 38, 39, 41, 42, 43, 45, 46, 47, 49, 63, 66, 71, 113, 114, 115, 116, 117, 119, 135, 136, 137, 151, 182, 183, 184, 197, 210, 260, 301, 318, 319, 321, 328, 332, 335, 336, 338, 342, 343, 344, 351, 354, 392, 396, 407, 409, 410, 411, 414, 420, 428, 429, 430, 431, 444, 445, 446, 447, 448, 452, 457, 459, 469, 470, 478, 493, 494, 502, 515, 539, 552, 553, 562, 577, 591, 600, 606, 607, 612, 614, 677, 690, 691, 692, 693, 694, 696, 709, 710, 711, 712, 713, 714, 731, 732, 742, 743, 748, 749, 750, 752, 755, 757, 765, 766, 773, 775, 776, 777, 779, 780, 782, 794, 811, 816, 817, 818, 819, 821, 822, 823, 835, 836, 854, 855, 860, 862, 871, 872, 873, 877, 890, 891, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 914, 917, 919, 922, 925, 927, 928, 934, 935, 941, 942, 943, 949, 950, 955, 961, 972, 1010, 1015, 1027, 1069, 1070, 1071, 1072, 1074, 1075, 1082, 1086, 1087, 1088, 1089, 1094, 1095, 1100, 1101, 1102, 1104, 1105, 1106, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1134, 1136, 1138, 1140, 1152, 1153, 1154, 1157, 1158, 1171, 1181, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1201, 1202, 1203, 1211, 1212, 1213, 1215, 1217, 1220, 1225, 1226, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1253, 1256, 1257, 1258, 1259, 1260, 1265, 1266, 1267, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1287, 1289, 1293, 1295, 1296, 1298, 1301, 1309, 1310, 1318, 1323, 1324, 1325, 1326, 1329, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1362, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1377, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1437, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1455, 1457, 1459, 1460, 1467, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1480, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1522, 1523, 1524, 1527, 1529, 1531, 1532, 1533, 1538, 1539, 1542, 1548, 1549, 1551, 1552, 1553, 1557, 1562, 1566, 1570, 1572, 1573, 1575, 1576, 1577, 1578, 1580, 1590, 1593, 1594, 1596, 1608, 1610, 1612, 1615, 1617, 1620, 1621, 1633, 1642, 1643, 1644, 1645, 1647, 1650, 1653, 1654, 1655, 1659, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1711, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1737, 1738, 1745, 1749, 1757, 1758, 1759, 1762, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1787, 1796, 1797, 1798, 1799, 1800, 1801, 1808, 1809, 1810, 1813, 1814, 1828, 1832, 1837, 1846, 1849, 1850, 1851, 1852, 1859, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1875, 1876, 1877, 1878, 1881, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1896, 1900, 1903, 1904, 1907, 1908, 1911, 1912, 1913, 1915, 1918, 1919, 1923, 1924, 1925, 1927, 1928, 1930, 1931, 1933, 1934], "randn": [0, 1, 11, 12, 16, 19, 20, 21, 26, 28, 30, 41, 47, 65, 67, 68, 69, 71, 289, 311, 482, 541, 577, 581, 582, 583, 584, 585, 586, 614, 680, 681, 682, 683, 684, 685, 686, 687, 692, 693, 696, 717, 725, 726, 731, 735, 736, 737, 738, 739, 740, 753, 755, 757, 758, 759, 760, 761, 762, 769, 770, 771, 858, 859, 871, 872, 873, 875, 878, 879, 880, 881, 882, 918, 930, 937, 939, 940, 941, 942, 943, 945, 963, 964, 965, 966, 967, 969, 1048, 1049, 1050, 1051, 1056, 1057, 1058, 1059, 1063, 1069, 1083, 1084, 1113, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1166, 1170, 1173, 1207, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1249, 1250, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1271, 1275, 1276, 1283, 1285, 1286, 1287, 1289, 1290, 1293, 1295, 1296, 1298, 1300, 1301, 1302, 1303, 1316, 1317, 1320, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1426, 1427, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1454, 1455, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1478, 1479, 1483, 1484, 1485, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1522, 1523, 1529, 1562, 1568, 1569, 1658, 1662, 1704, 1709, 1710, 1711, 1713, 1714, 1727, 1731, 1732, 1744, 1780, 1782, 1787, 1792, 1795, 1803, 1804, 1813, 1814, 1823, 1826, 1827, 1830, 1834, 1837, 1838, 1840, 1843, 1845, 1849, 1854, 1855, 1856, 1859, 1865, 1867, 1868, 1869, 1871, 1882, 1883, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1900, 1904, 1905, 1907, 1909, 1911, 1914, 1919, 1923, 1924, 1926, 1928, 1931, 1933], "1": [0, 1, 3, 11, 12, 13, 14, 16, 19, 20, 22, 27, 28, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 55, 56, 58, 61, 63, 67, 68, 69, 70, 71, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 137, 152, 153, 174, 192, 206, 209, 226, 228, 229, 230, 242, 254, 258, 263, 286, 289, 311, 312, 313, 315, 317, 321, 352, 377, 401, 402, 444, 446, 447, 453, 470, 480, 482, 486, 491, 494, 497, 511, 513, 515, 534, 535, 539, 541, 551, 552, 553, 555, 557, 558, 559, 560, 561, 578, 580, 581, 582, 584, 585, 604, 605, 612, 614, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 727, 728, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 743, 748, 749, 750, 753, 754, 755, 757, 767, 769, 770, 771, 772, 775, 779, 780, 782, 793, 805, 806, 816, 817, 818, 819, 822, 824, 852, 858, 859, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 891, 894, 896, 897, 898, 899, 900, 901, 902, 903, 910, 911, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 948, 949, 951, 955, 957, 958, 961, 962, 963, 964, 965, 966, 967, 968, 969, 981, 1012, 1013, 1028, 1032, 1039, 1043, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1067, 1068, 1069, 1072, 1073, 1074, 1075, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1140, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1166, 1167, 1170, 1171, 1173, 1181, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1196, 1200, 1206, 1207, 1211, 1212, 1215, 1216, 1217, 1219, 1220, 1221, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1238, 1239, 1241, 1242, 1243, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1313, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1470, 1471, 1473, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1494, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1529, 1531, 1533, 1534, 1535, 1536, 1537, 1545, 1547, 1551, 1552, 1553, 1559, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1571, 1575, 1576, 1577, 1578, 1579, 1581, 1583, 1584, 1585, 1587, 1592, 1593, 1594, 1595, 1596, 1599, 1608, 1615, 1616, 1620, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1702, 1703, 1704, 1706, 1707, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1782, 1783, 1787, 1788, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1864, 1865, 1867, 1868, 1869, 1870, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1896, 1897, 1898, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1934, 1935], "freez": [0, 1196, 1205, 1371, 1372, 1428, 1889], "_": [0, 1, 3, 12, 20, 28, 38, 39, 41, 42, 45, 51, 69, 71, 678, 680, 681, 695, 862, 878, 879, 880, 881, 882, 891, 897, 920, 939, 962, 963, 965, 966, 968, 1113, 1118, 1132, 1136, 1162, 1216, 1224, 1275, 1283, 1346, 1347, 1348, 1391, 1392, 1393, 1467, 1608, 1616, 1649, 1681, 1683, 1703, 1726, 1729, 1732, 1744, 1759, 1765, 1767, 1773, 1780, 1782, 1803, 1814, 1826, 1827, 1889, 1892, 1895, 1896, 1900, 1906, 1910, 1911, 1913, 1924], "3": [0, 1, 3, 4, 6, 9, 11, 13, 16, 19, 20, 22, 24, 26, 27, 28, 30, 35, 36, 38, 39, 41, 43, 45, 47, 48, 49, 51, 56, 58, 63, 65, 67, 68, 69, 70, 71, 192, 209, 254, 260, 289, 313, 315, 317, 321, 401, 402, 444, 445, 446, 447, 448, 470, 486, 491, 494, 497, 511, 513, 515, 534, 541, 555, 557, 578, 580, 581, 582, 584, 585, 604, 614, 677, 678, 682, 683, 684, 685, 686, 687, 688, 689, 690, 694, 695, 696, 731, 735, 736, 737, 738, 739, 740, 743, 745, 754, 757, 758, 759, 760, 762, 769, 770, 771, 782, 790, 821, 858, 859, 862, 872, 873, 875, 876, 877, 884, 885, 898, 899, 900, 901, 902, 903, 918, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 933, 934, 936, 937, 938, 940, 941, 942, 943, 944, 948, 949, 957, 958, 961, 962, 967, 968, 969, 1012, 1013, 1015, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1082, 1085, 1090, 1093, 1097, 1103, 1108, 1109, 1110, 1111, 1112, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1125, 1127, 1132, 1133, 1135, 1137, 1138, 1139, 1140, 1149, 1152, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1170, 1171, 1173, 1181, 1183, 1185, 1187, 1196, 1200, 1202, 1205, 1207, 1211, 1212, 1216, 1217, 1218, 1219, 1220, 1221, 1225, 1227, 1228, 1229, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1273, 1276, 1278, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1326, 1327, 1328, 1329, 1341, 1342, 1343, 1344, 1345, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1364, 1371, 1372, 1375, 1376, 1377, 1378, 1380, 1381, 1383, 1385, 1386, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1431, 1433, 1435, 1440, 1441, 1443, 1445, 1446, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1462, 1463, 1467, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1494, 1499, 1500, 1503, 1504, 1506, 1507, 1510, 1518, 1519, 1522, 1523, 1525, 1527, 1531, 1532, 1538, 1546, 1562, 1564, 1565, 1568, 1569, 1575, 1576, 1583, 1584, 1596, 1608, 1616, 1630, 1632, 1634, 1635, 1636, 1637, 1641, 1643, 1644, 1645, 1646, 1649, 1654, 1655, 1656, 1658, 1659, 1660, 1662, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1692, 1695, 1696, 1698, 1702, 1704, 1706, 1710, 1711, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1728, 1729, 1730, 1733, 1734, 1735, 1736, 1737, 1738, 1740, 1741, 1742, 1745, 1749, 1753, 1754, 1755, 1762, 1765, 1767, 1769, 1771, 1772, 1773, 1777, 1778, 1779, 1787, 1789, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1813, 1814, 1816, 1817, 1823, 1824, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1853, 1856, 1857, 1858, 1859, 1861, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1905, 1906, 1907, 1910, 1911, 1914, 1916, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931], "bug": [0, 16, 28, 32, 35, 41, 71, 1129, 1130, 1132, 1285, 1888, 1902, 1923], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 83, 84, 85, 120, 151, 155, 196, 197, 207, 210, 222, 223, 224, 255, 260, 289, 290, 313, 321, 323, 335, 337, 340, 352, 444, 445, 446, 447, 448, 457, 485, 486, 491, 493, 494, 495, 496, 497, 498, 501, 502, 511, 513, 515, 521, 553, 563, 580, 581, 582, 584, 585, 586, 600, 601, 611, 614, 615, 677, 681, 683, 686, 690, 691, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 732, 733, 734, 741, 745, 746, 747, 748, 749, 750, 751, 752, 754, 756, 757, 772, 773, 774, 775, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 820, 821, 822, 823, 851, 856, 858, 859, 871, 872, 873, 874, 875, 882, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 910, 911, 914, 917, 918, 921, 923, 926, 930, 931, 938, 940, 941, 944, 945, 947, 952, 953, 954, 955, 957, 961, 962, 964, 969, 970, 971, 972, 973, 975, 976, 977, 980, 991, 993, 996, 997, 998, 1000, 1001, 1004, 1005, 1006, 1007, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1020, 1022, 1025, 1026, 1027, 1033, 1034, 1036, 1037, 1038, 1042, 1043, 1044, 1050, 1051, 1052, 1057, 1059, 1060, 1064, 1067, 1068, 1069, 1073, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1120, 1122, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1141, 1142, 1143, 1149, 1153, 1159, 1161, 1171, 1183, 1193, 1194, 1196, 1197, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1215, 1216, 1217, 1218, 1219, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1271, 1273, 1276, 1285, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1309, 1310, 1320, 1323, 1324, 1325, 1326, 1328, 1336, 1340, 1344, 1345, 1346, 1347, 1348, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1376, 1377, 1380, 1381, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1413, 1415, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1434, 1435, 1438, 1440, 1443, 1444, 1456, 1459, 1461, 1464, 1467, 1473, 1474, 1475, 1476, 1479, 1480, 1481, 1482, 1492, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1527, 1529, 1531, 1538, 1544, 1546, 1551, 1552, 1553, 1563, 1565, 1567, 1577, 1583, 1584, 1592, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1615, 1616, 1617, 1618, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1641, 1642, 1643, 1644, 1645, 1648, 1649, 1650, 1652, 1653, 1655, 1656, 1660, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1697, 1699, 1701, 1702, 1703, 1707, 1711, 1713, 1720, 1724, 1729, 1733, 1735, 1742, 1749, 1751, 1752, 1753, 1755, 1756, 1757, 1759, 1762, 1764, 1765, 1783, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1806, 1808, 1809, 1810, 1813, 1814, 1816, 1817, 1823, 1825, 1829, 1831, 1835, 1837, 1845, 1846, 1847, 1848, 1849, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1875, 1876, 1877, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "what": [0, 1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 17, 20, 21, 26, 28, 41, 46, 47, 51, 55, 56, 63, 65, 67, 68, 71, 889, 1130, 1211, 1212, 1285, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1422, 1423, 1456, 1479, 1551, 1552, 1553, 1577, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1714, 1863, 1864, 1866, 1868, 1869, 1882, 1894, 1895, 1897, 1900, 1907, 1910, 1913, 1914, 1919, 1920, 1923], "observ": [0, 11, 16, 28, 39, 49, 58, 753, 786, 787, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 805, 806, 808, 810, 812, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 838, 856, 858, 859, 861, 964, 968, 1209, 1297, 1344, 1345, 1346, 1347, 1348, 1362, 1364, 1388, 1391, 1392, 1393, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1467, 1476, 1499, 1500, 1510, 1539, 1562, 1570, 1888, 1889, 1892, 1893, 1899, 1915, 1933], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 12, 15, 21, 24, 26, 28, 30, 33, 39, 41, 47, 50, 53, 54, 58, 59, 63, 64, 65, 66, 67, 68, 69, 71, 254, 255, 496, 511, 615, 686, 727, 728, 729, 730, 731, 732, 738, 739, 740, 742, 743, 753, 758, 759, 760, 761, 762, 858, 859, 889, 891, 892, 893, 898, 900, 901, 904, 932, 1052, 1125, 1129, 1130, 1131, 1132, 1133, 1137, 1196, 1259, 1290, 1300, 1351, 1359, 1394, 1428, 1527, 1539, 1544, 1565, 1577, 1595, 1608, 1649, 1650, 1691, 1753, 1856, 1871, 1876, 1882, 1883, 1884, 1885, 1888, 1889, 1894, 1895, 1898, 1903, 1904, 1906, 1907, 1910, 1911, 1914, 1917, 1919, 1920, 1923, 1924, 1926, 1927, 1928, 1930], "file": [0, 1, 3, 6, 7, 9, 12, 14, 16, 17, 22, 24, 30, 32, 35, 38, 43, 49, 51, 56, 58, 60, 66, 68, 71, 898, 904, 912, 913, 971, 1008, 1129, 1130, 1132, 1133, 1171, 1203, 1206, 1267, 1665, 1745, 1789, 1863, 1866, 1869, 1870, 1871, 1878, 1882, 1883, 1884, 1889, 1892, 1894, 1899, 1904, 1905, 1906, 1907, 1913, 1917, 1920, 1923, 1925, 1928], "subregion": 0, "nest": [0, 1, 5, 32, 43, 63, 71, 586, 790, 812, 814, 891, 900, 1030, 1031, 1127, 1137, 1196, 1199, 1211, 1428, 1434, 1474, 1475, 1662, 1666, 1856, 1864, 1895, 1907, 1913, 1919], "local": [0, 13, 16, 20, 28, 41, 43, 45, 46, 49, 56, 58, 59, 60, 61, 63, 71, 917, 1012, 1073, 1126, 1171, 1196, 1268, 1367, 1368, 1369, 1373, 1375, 1416, 1428, 1479, 1521, 1545, 1595, 1608, 1609, 1653, 1759, 1789, 1863, 1864, 1868, 1881, 1888, 1892, 1893, 1896, 1907, 1911, 1912, 1916, 1919, 1920, 1921, 1928], "want": [0, 1, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 26, 27, 32, 38, 41, 46, 47, 55, 63, 65, 66, 67, 68, 70, 71, 447, 494, 497, 778, 788, 835, 1008, 1125, 1126, 1208, 1211, 1212, 1297, 1376, 1377, 1480, 1522, 1523, 1538, 1596, 1608, 1609, 1650, 1653, 1670, 1671, 1684, 1745, 1863, 1873, 1876, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1900, 1907, 1910, 1911, 1914, 1923, 1928, 1929, 1932], "forc": [0, 1, 11, 13, 32, 35, 63, 457, 877, 1008, 1199, 1210, 1214, 1764, 1863, 1866, 1869, 1888, 1892, 1928, 1931], "particular": [0, 3, 7, 11, 15, 16, 17, 28, 38, 43, 49, 55, 58, 59, 63, 71, 557, 677, 858, 859, 1043, 1137, 1196, 1290, 1365, 1428, 1662, 1856, 1866, 1868, 1876, 1884, 1892, 1894, 1896, 1899, 1900, 1903, 1907, 1910, 1923, 1925, 1931, 1934], "give": [0, 3, 4, 7, 9, 11, 14, 15, 17, 19, 21, 24, 28, 35, 38, 39, 43, 45, 57, 63, 71, 905, 906, 968, 1087, 1089, 1090, 1092, 1096, 1105, 1129, 1130, 1131, 1209, 1225, 1232, 1356, 1357, 1358, 1433, 1479, 1480, 1615, 1654, 1670, 1671, 1810, 1849, 1863, 1866, 1881, 1883, 1887, 1889, 1892, 1894, 1895, 1897, 1898, 1900, 1904, 1907, 1910, 1912, 1923, 1934], "explicit": [0, 8, 41, 63, 67, 71, 1004, 1149, 1183, 1539, 1753, 1830, 1863, 1864, 1865, 1869, 1870, 1882, 1888, 1892, 1894, 1911, 1926, 1927], "control": [0, 1, 2, 11, 12, 14, 19, 20, 32, 38, 39, 41, 42, 43, 47, 49, 54, 57, 58, 752, 796, 855, 858, 873, 877, 891, 919, 928, 1056, 1057, 1058, 1059, 1060, 1153, 1154, 1207, 1208, 1209, 1211, 1226, 1232, 1234, 1237, 1239, 1242, 1244, 1248, 1254, 1257, 1259, 1265, 1285, 1336, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1414, 1422, 1423, 1479, 1577, 1608, 1701, 1757, 1758, 1772, 1787, 1789, 1794, 1810, 1814, 1832, 1838, 1839, 1840, 1841, 1864, 1866, 1875, 1889, 1891, 1892, 1893, 1900, 1902, 1903, 1905, 1907, 1910, 1914, 1921, 1923], "execut": [0, 1, 2, 3, 4, 5, 7, 13, 14, 15, 16, 17, 20, 22, 23, 25, 27, 28, 32, 33, 38, 41, 43, 45, 49, 50, 52, 59, 63, 68, 70, 71, 486, 910, 911, 975, 986, 1047, 1126, 1196, 1197, 1199, 1211, 1212, 1267, 1309, 1310, 1365, 1428, 1434, 1472, 1473, 1474, 1475, 1602, 1604, 1608, 1760, 1864, 1866, 1868, 1870, 1877, 1888, 1890, 1891, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1913, 1914, 1919, 1920, 1923], "surround": [0, 71, 787, 1868, 1888, 1892], "ensur": [0, 1, 4, 6, 7, 9, 11, 15, 16, 28, 38, 41, 42, 43, 45, 49, 58, 59, 61, 63, 70, 71, 480, 485, 732, 816, 894, 896, 955, 957, 1126, 1196, 1340, 1421, 1428, 1431, 1432, 1471, 1527, 1551, 1552, 1553, 1577, 1608, 1761, 1863, 1866, 1868, 1876, 1878, 1881, 1888, 1889, 1892, 1894, 1895, 1897, 1902, 1904, 1911, 1914, 1915, 1919, 1920], "necessari": [0, 1, 3, 9, 16, 28, 32, 38, 43, 49, 58, 59, 63, 70, 89, 192, 209, 557, 586, 897, 1126, 1170, 1207, 1434, 1642, 1643, 1866, 1869, 1883, 1887, 1889, 1890, 1892, 1893, 1898, 1900, 1903, 1906, 1911, 1914, 1919, 1920, 1921, 1926], "becaus": [0, 1, 3, 4, 5, 7, 8, 11, 14, 15, 16, 17, 19, 20, 26, 28, 32, 38, 39, 41, 45, 47, 51, 63, 67, 68, 70, 71, 494, 900, 905, 906, 1090, 1091, 1092, 1100, 1101, 1102, 1127, 1131, 1136, 1137, 1193, 1197, 1200, 1203, 1242, 1243, 1267, 1285, 1346, 1347, 1348, 1365, 1467, 1599, 1608, 1609, 1687, 1729, 1810, 1856, 1864, 1866, 1869, 1871, 1881, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1907, 1911, 1914, 1915, 1919, 1921, 1923, 1928, 1930, 1933, 1934], "wa": [0, 1, 3, 7, 15, 17, 20, 21, 27, 35, 39, 41, 46, 56, 57, 58, 59, 63, 70, 71, 335, 485, 494, 677, 782, 789, 851, 940, 951, 972, 973, 996, 1000, 1015, 1028, 1047, 1089, 1137, 1193, 1202, 1211, 1226, 1237, 1239, 1243, 1267, 1285, 1318, 1398, 1424, 1425, 1426, 1457, 1480, 1492, 1527, 1580, 1596, 1608, 1609, 1644, 1689, 1695, 1808, 1809, 1846, 1847, 1851, 1852, 1856, 1863, 1866, 1868, 1869, 1870, 1873, 1875, 1876, 1879, 1881, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1899, 1901, 1907, 1910, 1912, 1914, 1918, 1919, 1930], "f_float32": 0, "re": [0, 1, 4, 5, 7, 11, 14, 15, 16, 19, 21, 27, 28, 32, 38, 41, 45, 48, 55, 58, 63, 64, 65, 66, 67, 68, 70, 71, 930, 1120, 1196, 1200, 1428, 1583, 1609, 1644, 1740, 1793, 1866, 1869, 1876, 1881, 1888, 1889, 1892, 1894, 1895, 1897, 1902, 1914, 1920, 1921, 1924, 1934], "again": [0, 11, 14, 15, 20, 22, 35, 38, 41, 45, 49, 66, 1318, 1889, 1895, 1900], "regardless": [0, 16, 38, 57, 63, 962, 1200, 1205, 1846, 1888, 1892, 1905, 1919, 1930], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 27, 28, 30, 32, 33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 67, 68, 69, 70, 73, 74, 75, 83, 84, 89, 151, 192, 197, 209, 210, 222, 255, 290, 311, 313, 315, 319, 321, 398, 400, 401, 402, 447, 457, 482, 485, 486, 491, 493, 496, 497, 511, 513, 515, 534, 541, 580, 600, 614, 615, 677, 681, 684, 685, 686, 687, 691, 692, 693, 694, 732, 745, 754, 757, 763, 764, 765, 766, 769, 770, 771, 776, 777, 779, 780, 782, 783, 784, 789, 790, 791, 792, 796, 799, 812, 814, 816, 817, 818, 819, 822, 824, 834, 835, 851, 856, 861, 874, 875, 877, 881, 882, 886, 887, 889, 890, 891, 892, 893, 898, 899, 901, 902, 903, 904, 905, 906, 910, 911, 913, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 935, 936, 942, 949, 952, 953, 955, 958, 964, 968, 971, 972, 978, 985, 1001, 1012, 1013, 1015, 1016, 1017, 1026, 1039, 1040, 1041, 1052, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1069, 1070, 1074, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1117, 1119, 1120, 1121, 1122, 1123, 1126, 1129, 1132, 1135, 1136, 1137, 1140, 1141, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1162, 1166, 1170, 1173, 1193, 1196, 1199, 1201, 1203, 1206, 1207, 1209, 1211, 1212, 1215, 1216, 1220, 1221, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1241, 1242, 1243, 1245, 1248, 1250, 1251, 1252, 1253, 1254, 1255, 1258, 1259, 1260, 1262, 1265, 1267, 1268, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1296, 1304, 1305, 1308, 1309, 1310, 1313, 1314, 1318, 1324, 1327, 1329, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1371, 1372, 1373, 1375, 1376, 1377, 1380, 1381, 1382, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1428, 1431, 1433, 1435, 1442, 1443, 1445, 1446, 1456, 1457, 1459, 1467, 1470, 1471, 1476, 1477, 1479, 1480, 1492, 1495, 1496, 1510, 1511, 1518, 1519, 1520, 1522, 1523, 1526, 1527, 1529, 1538, 1539, 1551, 1552, 1553, 1562, 1565, 1577, 1580, 1596, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1634, 1635, 1638, 1644, 1648, 1649, 1652, 1654, 1655, 1656, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1703, 1704, 1707, 1710, 1713, 1718, 1719, 1720, 1722, 1724, 1726, 1731, 1733, 1735, 1737, 1738, 1740, 1745, 1752, 1753, 1754, 1755, 1762, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1783, 1789, 1791, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1808, 1809, 1810, 1814, 1815, 1824, 1830, 1831, 1832, 1834, 1835, 1838, 1839, 1840, 1841, 1848, 1849, 1850, 1851, 1852, 1854, 1856, 1859, 1863, 1866, 1867, 1868, 1870, 1871, 1875, 1876, 1877, 1878, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1935], "state": [0, 1, 2, 5, 9, 11, 13, 14, 15, 16, 23, 26, 38, 41, 43, 45, 47, 49, 51, 58, 61, 63, 71, 89, 745, 757, 833, 957, 1001, 1002, 1006, 1011, 1015, 1025, 1040, 1041, 1126, 1135, 1148, 1196, 1199, 1211, 1268, 1307, 1314, 1380, 1381, 1398, 1399, 1428, 1443, 1445, 1475, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1720, 1763, 1789, 1877, 1888, 1889, 1892, 1893, 1894, 1898, 1902, 1905, 1907, 1910, 1918, 1932], "thread": [0, 1, 3, 13, 38, 41, 43, 49, 60, 63, 70, 917, 972, 1073, 1146, 1147, 1171, 1365, 1653, 1759, 1760, 1761, 1864, 1866, 1879, 1888, 1892, 1899, 1902, 1919, 1921, 1931], "new": [0, 1, 5, 8, 11, 13, 14, 16, 20, 27, 28, 32, 35, 38, 40, 41, 43, 47, 49, 58, 59, 63, 64, 67, 68, 69, 70, 71, 222, 254, 311, 447, 482, 486, 494, 497, 541, 577, 580, 614, 677, 681, 757, 788, 811, 816, 851, 876, 878, 879, 880, 881, 882, 892, 910, 911, 933, 934, 939, 948, 952, 963, 965, 966, 973, 975, 1053, 1057, 1079, 1083, 1084, 1110, 1111, 1113, 1126, 1135, 1137, 1166, 1170, 1171, 1185, 1186, 1189, 1192, 1196, 1202, 1207, 1209, 1269, 1270, 1271, 1272, 1289, 1327, 1330, 1346, 1347, 1348, 1380, 1391, 1392, 1393, 1428, 1429, 1434, 1438, 1467, 1478, 1480, 1538, 1601, 1604, 1605, 1606, 1607, 1608, 1616, 1620, 1622, 1626, 1627, 1628, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1645, 1649, 1653, 1670, 1671, 1697, 1721, 1731, 1732, 1736, 1737, 1738, 1744, 1745, 1749, 1754, 1755, 1765, 1767, 1778, 1780, 1782, 1803, 1804, 1807, 1824, 1826, 1827, 1843, 1845, 1848, 1854, 1855, 1856, 1863, 1866, 1868, 1869, 1873, 1876, 1877, 1881, 1882, 1883, 1884, 1885, 1889, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1917, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1933], "must": [0, 3, 5, 6, 9, 11, 12, 14, 17, 20, 27, 28, 32, 38, 41, 43, 45, 47, 48, 49, 56, 59, 60, 63, 66, 68, 70, 71, 89, 98, 140, 154, 155, 197, 260, 313, 315, 321, 398, 400, 402, 511, 541, 542, 563, 580, 581, 582, 584, 585, 614, 683, 684, 685, 686, 687, 688, 694, 745, 754, 769, 770, 771, 790, 812, 814, 856, 857, 875, 881, 886, 887, 888, 889, 891, 897, 899, 901, 902, 903, 905, 906, 918, 920, 922, 923, 924, 925, 926, 927, 930, 934, 937, 958, 968, 971, 972, 982, 983, 984, 986, 1012, 1013, 1015, 1057, 1059, 1060, 1061, 1063, 1066, 1067, 1069, 1090, 1091, 1092, 1097, 1099, 1100, 1101, 1102, 1103, 1110, 1111, 1120, 1122, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1139, 1149, 1158, 1159, 1162, 1173, 1193, 1196, 1206, 1211, 1218, 1221, 1250, 1251, 1252, 1253, 1259, 1261, 1262, 1265, 1268, 1286, 1288, 1289, 1290, 1296, 1303, 1318, 1324, 1327, 1328, 1332, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1371, 1372, 1375, 1382, 1383, 1389, 1421, 1428, 1431, 1434, 1459, 1465, 1480, 1500, 1509, 1511, 1519, 1538, 1551, 1552, 1553, 1571, 1608, 1631, 1641, 1642, 1648, 1650, 1655, 1663, 1693, 1695, 1702, 1703, 1706, 1707, 1710, 1718, 1719, 1740, 1749, 1752, 1761, 1777, 1788, 1791, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1815, 1825, 1829, 1830, 1834, 1839, 1841, 1845, 1849, 1853, 1854, 1856, 1857, 1859, 1866, 1867, 1868, 1869, 1876, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1898, 1902, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1930, 1934], "invok": [0, 2, 8, 11, 15, 17, 20, 26, 33, 35, 38, 41, 56, 58, 59, 70, 71, 898, 900, 955, 1012, 1013, 1196, 1199, 1205, 1365, 1428, 1601, 1603, 1606, 1607, 1689, 1695, 1866, 1869, 1870, 1877, 1888, 1891, 1892, 1893, 1894, 1895, 1899, 1900, 1911, 1919, 1920], "affect": [0, 1, 2, 7, 9, 23, 35, 37, 48, 63, 222, 223, 782, 917, 973, 975, 1073, 1120, 1143, 1171, 1196, 1309, 1310, 1398, 1428, 1443, 1480, 1596, 1609, 1653, 1753, 1756, 1757, 1759, 1888, 1889, 1892, 1897, 1900, 1903, 1904, 1925], "dataparallel": [0, 41, 1592, 1608, 1644, 1864, 1889, 1896, 1902, 1919], "parallel": [0, 16, 31, 32, 38, 39, 41, 42, 43, 45, 58, 59, 63, 1146, 1147, 1199, 1365, 1434, 1467, 1527, 1608, 1760, 1761, 1864, 1869, 1888, 1889, 1891, 1902, 1906, 1919, 1921], "distributeddataparallel": [0, 38, 39, 41, 42, 45, 59, 63, 1365, 1467, 1902, 1912, 1919], "than": [0, 3, 4, 5, 6, 8, 9, 11, 12, 15, 16, 19, 22, 23, 28, 30, 32, 38, 39, 41, 42, 43, 47, 48, 49, 51, 55, 58, 59, 60, 63, 68, 71, 151, 254, 497, 542, 614, 677, 690, 696, 776, 782, 890, 899, 900, 914, 921, 932, 939, 940, 944, 945, 984, 1022, 1026, 1039, 1057, 1058, 1109, 1110, 1111, 1113, 1117, 1122, 1133, 1140, 1152, 1156, 1170, 1181, 1193, 1194, 1197, 1207, 1216, 1217, 1220, 1225, 1226, 1232, 1236, 1241, 1249, 1250, 1252, 1253, 1256, 1261, 1271, 1284, 1287, 1293, 1296, 1298, 1301, 1313, 1318, 1328, 1344, 1345, 1356, 1357, 1358, 1365, 1371, 1372, 1389, 1420, 1434, 1442, 1459, 1465, 1475, 1476, 1477, 1492, 1502, 1503, 1504, 1518, 1519, 1527, 1538, 1564, 1577, 1595, 1596, 1599, 1608, 1615, 1616, 1617, 1618, 1644, 1649, 1655, 1670, 1671, 1695, 1697, 1711, 1712, 1733, 1734, 1762, 1795, 1796, 1797, 1798, 1800, 1801, 1831, 1839, 1841, 1849, 1863, 1865, 1866, 1868, 1869, 1871, 1883, 1884, 1885, 1887, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1919, 1923, 1924, 1926, 1928, 1929, 1930], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 17, 19, 20, 22, 24, 25, 27, 28, 30, 32, 33, 35, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 55, 58, 60, 61, 63, 67, 68, 69, 70, 71, 73, 75, 83, 84, 151, 222, 254, 352, 402, 485, 511, 518, 542, 557, 694, 745, 754, 790, 851, 852, 853, 877, 883, 889, 890, 891, 892, 894, 900, 921, 932, 934, 944, 948, 952, 973, 975, 980, 982, 986, 1013, 1036, 1047, 1058, 1069, 1073, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1112, 1115, 1116, 1117, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1149, 1158, 1159, 1171, 1175, 1178, 1181, 1200, 1205, 1209, 1215, 1216, 1226, 1227, 1237, 1238, 1239, 1240, 1241, 1243, 1248, 1252, 1254, 1256, 1259, 1265, 1266, 1282, 1290, 1294, 1299, 1318, 1324, 1336, 1341, 1344, 1345, 1346, 1347, 1348, 1351, 1356, 1359, 1360, 1361, 1372, 1376, 1377, 1382, 1391, 1392, 1393, 1395, 1396, 1397, 1407, 1408, 1409, 1419, 1428, 1432, 1434, 1467, 1475, 1480, 1492, 1502, 1505, 1506, 1507, 1522, 1523, 1524, 1529, 1564, 1577, 1595, 1599, 1608, 1609, 1614, 1616, 1617, 1621, 1631, 1642, 1651, 1652, 1653, 1654, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1691, 1693, 1694, 1695, 1715, 1716, 1733, 1749, 1757, 1759, 1762, 1765, 1805, 1814, 1829, 1834, 1835, 1837, 1845, 1848, 1849, 1856, 1864, 1866, 1869, 1873, 1875, 1877, 1879, 1881, 1882, 1883, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1902, 1904, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1919, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930], "gpu": [0, 1, 2, 3, 4, 7, 11, 15, 16, 18, 19, 21, 24, 25, 28, 32, 34, 36, 38, 39, 43, 49, 59, 60, 63, 70, 197, 210, 289, 332, 600, 757, 950, 977, 978, 981, 982, 983, 984, 985, 986, 992, 993, 994, 1001, 1007, 1008, 1014, 1016, 1017, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1032, 1033, 1034, 1035, 1036, 1037, 1040, 1046, 1047, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1117, 1196, 1205, 1242, 1267, 1296, 1304, 1305, 1306, 1309, 1310, 1336, 1365, 1380, 1398, 1428, 1443, 1444, 1467, 1592, 1608, 1641, 1814, 1864, 1866, 1877, 1892, 1898, 1900, 1901, 1903, 1904, 1906, 1914, 1919, 1923, 1925, 1929, 1931], "per": [0, 14, 32, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 57, 59, 60, 63, 64, 69, 471, 472, 473, 731, 732, 798, 805, 816, 819, 822, 830, 842, 850, 889, 898, 900, 976, 1052, 1083, 1127, 1137, 1268, 1344, 1345, 1346, 1347, 1348, 1362, 1364, 1365, 1372, 1383, 1388, 1391, 1392, 1393, 1394, 1395, 1400, 1419, 1420, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1459, 1460, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1499, 1500, 1510, 1539, 1562, 1570, 1608, 1652, 1656, 1673, 1689, 1695, 1703, 1715, 1762, 1764, 1815, 1831, 1835, 1856, 1879, 1883, 1885, 1891, 1892, 1893, 1895, 1899, 1912, 1914, 1915, 1917, 1920, 1923, 1928], "process": [0, 1, 3, 14, 16, 20, 28, 30, 32, 39, 41, 42, 43, 47, 49, 50, 51, 52, 58, 59, 60, 61, 63, 71, 955, 972, 1008, 1014, 1039, 1196, 1206, 1268, 1305, 1313, 1344, 1345, 1362, 1364, 1371, 1372, 1388, 1395, 1419, 1420, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1467, 1471, 1473, 1475, 1476, 1499, 1500, 1510, 1539, 1562, 1570, 1608, 1692, 1698, 1764, 1778, 1863, 1864, 1866, 1879, 1881, 1882, 1883, 1889, 1891, 1892, 1893, 1894, 1899, 1900, 1902, 1904, 1906, 1907, 1911, 1912, 1913, 1914, 1917, 1919, 1921, 1923, 1925, 1932], "work": [0, 1, 2, 3, 5, 7, 8, 9, 12, 14, 16, 17, 19, 20, 21, 23, 24, 28, 30, 32, 33, 34, 41, 42, 43, 45, 46, 47, 48, 49, 58, 59, 60, 61, 63, 64, 68, 71, 120, 151, 352, 444, 445, 446, 447, 448, 485, 584, 585, 818, 858, 859, 890, 904, 970, 972, 973, 975, 1004, 1015, 1016, 1036, 1070, 1072, 1089, 1109, 1110, 1111, 1126, 1196, 1200, 1207, 1208, 1231, 1232, 1259, 1260, 1268, 1365, 1425, 1428, 1444, 1461, 1565, 1583, 1608, 1665, 1695, 1722, 1726, 1728, 1754, 1760, 1825, 1828, 1863, 1866, 1869, 1870, 1881, 1882, 1883, 1884, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1902, 1905, 1906, 1907, 1911, 1912, 1914, 1917, 1919, 1920, 1929, 1931, 1934], "str": [0, 1, 2, 3, 16, 18, 20, 27, 28, 32, 38, 39, 41, 43, 45, 46, 47, 49, 52, 56, 58, 60, 63, 71, 321, 511, 515, 600, 776, 782, 789, 790, 791, 812, 813, 814, 851, 898, 900, 908, 912, 913, 938, 950, 956, 971, 982, 983, 984, 986, 995, 996, 998, 999, 1000, 1012, 1013, 1014, 1026, 1027, 1029, 1031, 1043, 1064, 1069, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1125, 1126, 1130, 1135, 1137, 1145, 1194, 1195, 1196, 1197, 1199, 1200, 1202, 1205, 1241, 1254, 1259, 1260, 1267, 1268, 1297, 1309, 1310, 1325, 1344, 1345, 1351, 1356, 1357, 1358, 1362, 1364, 1372, 1378, 1382, 1388, 1389, 1394, 1395, 1404, 1405, 1406, 1419, 1420, 1428, 1429, 1431, 1432, 1433, 1435, 1438, 1442, 1445, 1456, 1459, 1460, 1471, 1473, 1475, 1476, 1477, 1478, 1480, 1499, 1500, 1510, 1511, 1519, 1524, 1527, 1538, 1539, 1562, 1570, 1596, 1608, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1649, 1650, 1652, 1662, 1665, 1673, 1689, 1695, 1697, 1714, 1745, 1749, 1756, 1757, 1791, 1810, 1856, 1863, 1865, 1866, 1867, 1868, 1869, 1870, 1877, 1878, 1879, 1881, 1883, 1887, 1889, 1907, 1909, 1911, 1912, 1913, 1918, 1919, 1925, 1928, 1930, 1932, 1933, 1934], "whether": [0, 1, 2, 7, 16, 18, 20, 28, 32, 38, 39, 41, 42, 43, 46, 47, 49, 57, 58, 63, 71, 319, 321, 470, 515, 614, 677, 690, 692, 693, 696, 871, 872, 877, 886, 894, 897, 898, 900, 905, 906, 917, 919, 928, 941, 942, 943, 949, 950, 951, 953, 955, 1011, 1027, 1125, 1137, 1153, 1154, 1171, 1193, 1196, 1203, 1204, 1212, 1217, 1225, 1226, 1232, 1234, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1250, 1252, 1253, 1256, 1257, 1258, 1259, 1267, 1283, 1285, 1293, 1295, 1296, 1298, 1301, 1318, 1323, 1324, 1325, 1326, 1351, 1362, 1388, 1394, 1428, 1437, 1442, 1477, 1489, 1490, 1491, 1511, 1539, 1570, 1608, 1615, 1617, 1620, 1633, 1647, 1650, 1655, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1689, 1701, 1711, 1714, 1758, 1759, 1808, 1809, 1810, 1813, 1814, 1832, 1837, 1846, 1847, 1849, 1851, 1852, 1856, 1863, 1869, 1875, 1876, 1878, 1884, 1888, 1892, 1894, 1898, 1907, 1912, 1914, 1919, 1923, 1925, 1927, 1928, 1933], "bool": [0, 1, 2, 3, 5, 14, 18, 27, 32, 38, 39, 41, 42, 43, 45, 46, 47, 49, 52, 58, 60, 63, 70, 71, 151, 197, 210, 245, 260, 319, 321, 328, 329, 330, 331, 333, 334, 339, 341, 444, 445, 446, 447, 448, 457, 470, 494, 515, 578, 600, 677, 690, 691, 692, 693, 694, 696, 732, 755, 776, 777, 782, 791, 811, 862, 871, 872, 873, 877, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 917, 919, 922, 924, 925, 927, 928, 934, 935, 941, 942, 943, 949, 950, 972, 979, 1009, 1015, 1027, 1070, 1071, 1072, 1075, 1082, 1087, 1105, 1121, 1122, 1123, 1124, 1125, 1127, 1128, 1130, 1131, 1132, 1136, 1138, 1153, 1154, 1157, 1158, 1171, 1181, 1185, 1187, 1193, 1196, 1200, 1202, 1203, 1211, 1212, 1215, 1217, 1225, 1226, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1250, 1252, 1253, 1256, 1257, 1258, 1259, 1265, 1266, 1267, 1268, 1277, 1278, 1279, 1280, 1282, 1283, 1285, 1287, 1293, 1295, 1296, 1298, 1301, 1309, 1310, 1318, 1323, 1324, 1325, 1326, 1327, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1377, 1381, 1382, 1383, 1385, 1386, 1387, 1388, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1415, 1419, 1420, 1421, 1422, 1423, 1428, 1431, 1432, 1433, 1434, 1435, 1437, 1442, 1445, 1446, 1447, 1448, 1455, 1459, 1460, 1467, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1480, 1492, 1499, 1500, 1510, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1527, 1529, 1531, 1538, 1539, 1562, 1570, 1577, 1596, 1608, 1609, 1612, 1613, 1615, 1617, 1619, 1620, 1621, 1642, 1643, 1644, 1645, 1647, 1650, 1655, 1659, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1701, 1703, 1709, 1711, 1713, 1714, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1749, 1754, 1758, 1759, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1787, 1796, 1797, 1798, 1799, 1800, 1801, 1808, 1809, 1810, 1813, 1814, 1822, 1828, 1832, 1837, 1846, 1847, 1849, 1850, 1851, 1852, 1861, 1862, 1863, 1865, 1866, 1867, 1868, 1869, 1878, 1879, 1881, 1882, 1883, 1884, 1898, 1905, 1907, 1909, 1911, 1912, 1913, 1918, 1919, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934], "option": [0, 1, 3, 5, 13, 16, 17, 18, 19, 20, 21, 24, 27, 28, 32, 38, 41, 45, 46, 47, 49, 52, 56, 57, 58, 60, 61, 63, 71, 84, 89, 151, 156, 171, 173, 176, 179, 180, 181, 196, 207, 210, 240, 267, 297, 325, 331, 393, 444, 445, 446, 447, 448, 486, 497, 498, 511, 518, 522, 534, 557, 577, 578, 580, 581, 582, 584, 585, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 732, 755, 776, 777, 782, 789, 791, 796, 815, 851, 856, 859, 862, 873, 875, 876, 877, 878, 879, 880, 881, 882, 889, 890, 898, 899, 900, 901, 902, 903, 904, 905, 906, 909, 910, 911, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 934, 937, 939, 940, 941, 942, 943, 945, 947, 948, 949, 950, 955, 956, 962, 963, 965, 966, 967, 968, 969, 970, 972, 973, 975, 977, 981, 982, 984, 985, 986, 989, 990, 997, 998, 1001, 1004, 1012, 1013, 1014, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1039, 1040, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1068, 1069, 1070, 1071, 1072, 1074, 1079, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1122, 1123, 1124, 1125, 1126, 1129, 1130, 1131, 1138, 1139, 1140, 1141, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1170, 1173, 1185, 1187, 1190, 1191, 1193, 1194, 1196, 1197, 1200, 1202, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1309, 1310, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1382, 1385, 1386, 1387, 1388, 1389, 1394, 1395, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1414, 1419, 1420, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1442, 1446, 1447, 1448, 1455, 1459, 1460, 1467, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1492, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1518, 1519, 1522, 1523, 1524, 1527, 1529, 1538, 1539, 1546, 1551, 1552, 1553, 1562, 1563, 1570, 1577, 1583, 1584, 1596, 1604, 1605, 1608, 1609, 1615, 1616, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1647, 1649, 1650, 1652, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1680, 1681, 1682, 1683, 1684, 1688, 1701, 1702, 1703, 1706, 1710, 1711, 1713, 1714, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1742, 1744, 1749, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1815, 1825, 1826, 1827, 1828, 1829, 1832, 1834, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1847, 1849, 1850, 1851, 1852, 1853, 1858, 1859, 1861, 1862, 1863, 1866, 1867, 1869, 1871, 1873, 1875, 1877, 1878, 1879, 1884, 1887, 1892, 1894, 1895, 1896, 1899, 1900, 1904, 1907, 1911, 1913, 1914, 1919, 1923, 1924, 1926, 1928, 1930, 1933], "torch_dtyp": 0, "weight": [0, 16, 38, 41, 47, 63, 69, 71, 157, 301, 361, 362, 494, 709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 742, 743, 746, 748, 749, 750, 751, 753, 757, 758, 760, 761, 762, 769, 770, 771, 778, 789, 790, 791, 805, 806, 830, 832, 838, 842, 846, 847, 848, 849, 850, 855, 856, 858, 859, 921, 968, 1125, 1127, 1135, 1137, 1157, 1158, 1196, 1200, 1205, 1207, 1212, 1221, 1318, 1344, 1345, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1371, 1372, 1380, 1381, 1383, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1428, 1432, 1433, 1434, 1435, 1436, 1443, 1445, 1457, 1471, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1518, 1519, 1528, 1537, 1541, 1544, 1559, 1561, 1562, 1571, 1580, 1599, 1608, 1615, 1616, 1618, 1620, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1648, 1649, 1650, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1717, 1856, 1863, 1864, 1865, 1867, 1868, 1869, 1877, 1878, 1883, 1884, 1887, 1894, 1896, 1900, 1905, 1914, 1915, 1916, 1917, 1923, 1928, 1932, 1933], "cach": [0, 2, 3, 11, 16, 22, 28, 47, 71, 485, 957, 994, 995, 1012, 1015, 1020, 1022, 1024, 1026, 1034, 1039, 1304, 1305, 1306, 1609, 1620, 1881, 1896], "insid": [0, 1, 7, 15, 17, 20, 28, 38, 58, 63, 68, 70, 71, 894, 895, 896, 897, 978, 1015, 1127, 1131, 1136, 1207, 1608, 1866, 1868, 1869, 1877, 1888, 1892, 1894, 1895, 1899, 1907, 1932], "custom_fwd": [0, 1888], "fwd": [0, 22], "cast_input": [0, 1888], "helper": [0, 3, 5, 27, 41, 67, 71, 1467, 1863, 1864, 1868, 1892, 1893, 1907, 1911, 1919, 1934], "subclass": [0, 1, 13, 20, 32, 38, 43, 47, 51, 68, 71, 140, 534, 886, 887, 888, 1194, 1197, 1206, 1428, 1609, 1622, 1627, 1648, 1866, 1869, 1870, 1876, 1888, 1900, 1907, 1908, 1919, 1934], "page": [0, 6, 7, 9, 24, 38, 42, 59, 61, 1268, 1471, 1473, 1475, 1892, 1893, 1900, 1909, 1919], "incom": [0, 41, 60, 778, 816, 817, 818, 819, 822, 1349, 1415, 1498, 1544, 1881, 1889], "non": [0, 1, 3, 5, 11, 14, 15, 16, 17, 18, 19, 27, 32, 37, 39, 41, 42, 43, 46, 47, 49, 51, 58, 60, 61, 63, 70, 89, 151, 335, 502, 511, 515, 542, 695, 731, 736, 737, 738, 739, 740, 742, 743, 753, 757, 761, 762, 769, 770, 771, 835, 862, 874, 886, 888, 890, 895, 897, 905, 906, 921, 934, 937, 950, 955, 961, 962, 967, 1026, 1115, 1116, 1122, 1126, 1131, 1137, 1173, 1196, 1199, 1208, 1211, 1212, 1231, 1232, 1239, 1243, 1244, 1257, 1259, 1268, 1278, 1285, 1290, 1295, 1318, 1323, 1324, 1328, 1341, 1342, 1343, 1357, 1358, 1360, 1361, 1364, 1374, 1380, 1397, 1398, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1433, 1435, 1443, 1445, 1459, 1510, 1529, 1557, 1562, 1604, 1605, 1608, 1654, 1684, 1706, 1749, 1750, 1765, 1777, 1791, 1792, 1796, 1797, 1798, 1799, 1800, 1801, 1830, 1846, 1856, 1863, 1864, 1866, 1868, 1869, 1871, 1881, 1884, 1887, 1890, 1894, 1895, 1896, 1900, 1904, 1907, 1912, 1913, 1918, 1919, 1921, 1923, 1924, 1926, 1927, 1928, 1930, 1934], "intern": [0, 3, 8, 9, 16, 20, 21, 28, 32, 38, 39, 41, 43, 47, 49, 55, 63, 68, 71, 952, 955, 970, 1004, 1025, 1126, 1196, 1232, 1234, 1250, 1253, 1276, 1346, 1347, 1348, 1382, 1467, 1502, 1503, 1504, 1527, 1617, 1664, 1757, 1799, 1849, 1870, 1888, 1889, 1891, 1892, 1897, 1903, 1904, 1920, 1921, 1925, 1927], "current": [0, 1, 2, 3, 5, 6, 7, 9, 14, 15, 16, 20, 23, 24, 28, 30, 32, 38, 41, 43, 45, 46, 47, 49, 51, 58, 59, 63, 64, 70, 71, 89, 151, 210, 222, 485, 495, 496, 497, 738, 740, 778, 790, 792, 814, 856, 858, 859, 862, 876, 887, 890, 891, 898, 899, 900, 905, 919, 928, 970, 971, 972, 973, 975, 980, 981, 984, 985, 987, 988, 989, 990, 993, 994, 995, 997, 998, 1001, 1003, 1004, 1007, 1009, 1010, 1014, 1015, 1016, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1036, 1038, 1040, 1042, 1045, 1046, 1047, 1070, 1072, 1082, 1087, 1105, 1121, 1123, 1143, 1144, 1145, 1153, 1154, 1179, 1180, 1196, 1200, 1211, 1215, 1266, 1268, 1282, 1297, 1304, 1306, 1368, 1371, 1375, 1428, 1467, 1475, 1479, 1521, 1527, 1538, 1577, 1595, 1596, 1598, 1608, 1621, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1659, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1713, 1722, 1724, 1726, 1728, 1729, 1753, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1839, 1841, 1846, 1861, 1864, 1866, 1868, 1869, 1870, 1871, 1873, 1876, 1879, 1881, 1884, 1888, 1889, 1892, 1893, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1923, 1925, 1926, 1928, 1929, 1932, 1934], "outsid": [0, 5, 9, 23, 26, 38, 51, 63, 68, 681, 792, 882, 1125, 1127, 1131, 1136, 1197, 1527, 1608, 1686, 1687, 1692, 1693, 1699, 1868, 1869, 1887, 1889, 1892, 1895, 1896, 1930], "ha": [0, 1, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 28, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 89, 151, 197, 210, 255, 260, 335, 444, 445, 446, 447, 448, 472, 473, 494, 496, 541, 577, 578, 600, 601, 615, 677, 686, 690, 692, 693, 694, 696, 732, 757, 776, 778, 782, 784, 788, 794, 835, 837, 844, 855, 861, 871, 872, 874, 886, 889, 890, 892, 894, 900, 905, 906, 920, 938, 941, 942, 952, 961, 962, 963, 969, 972, 973, 975, 980, 1008, 1011, 1012, 1057, 1059, 1073, 1105, 1117, 1125, 1126, 1129, 1130, 1133, 1137, 1149, 1158, 1159, 1170, 1193, 1196, 1200, 1203, 1206, 1207, 1208, 1211, 1216, 1217, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1249, 1250, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1262, 1263, 1267, 1276, 1283, 1285, 1290, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1323, 1324, 1325, 1326, 1344, 1345, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1372, 1375, 1376, 1377, 1380, 1383, 1388, 1391, 1392, 1393, 1398, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1432, 1433, 1434, 1435, 1436, 1443, 1459, 1461, 1467, 1475, 1479, 1480, 1492, 1502, 1503, 1504, 1510, 1519, 1522, 1523, 1527, 1538, 1562, 1564, 1565, 1567, 1571, 1577, 1583, 1596, 1598, 1599, 1602, 1603, 1608, 1615, 1617, 1619, 1622, 1626, 1628, 1631, 1641, 1642, 1649, 1650, 1654, 1656, 1662, 1665, 1667, 1670, 1671, 1687, 1688, 1689, 1691, 1695, 1697, 1701, 1711, 1713, 1714, 1715, 1716, 1733, 1735, 1745, 1757, 1779, 1792, 1793, 1794, 1805, 1807, 1808, 1809, 1810, 1813, 1814, 1831, 1837, 1851, 1852, 1856, 1866, 1868, 1869, 1875, 1876, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1928, 1929, 1930, 1931], "effect": [0, 3, 7, 11, 32, 38, 39, 41, 47, 60, 68, 71, 197, 210, 600, 732, 776, 782, 1004, 1052, 1137, 1196, 1238, 1239, 1240, 1241, 1297, 1336, 1351, 1359, 1360, 1361, 1366, 1367, 1368, 1369, 1373, 1428, 1434, 1480, 1538, 1565, 1596, 1602, 1608, 1609, 1627, 1681, 1689, 1789, 1794, 1814, 1835, 1856, 1863, 1866, 1877, 1887, 1888, 1889, 1892, 1894, 1914, 1917, 1925, 1926, 1928], "custom_bwd": [0, 1888], "bwd": 0, "valu": [0, 1, 2, 3, 5, 7, 8, 9, 11, 13, 14, 16, 20, 22, 27, 28, 30, 32, 35, 38, 39, 42, 43, 45, 47, 49, 50, 52, 55, 56, 58, 59, 63, 65, 68, 70, 71, 89, 102, 103, 104, 105, 120, 151, 155, 222, 235, 236, 237, 238, 254, 259, 260, 272, 273, 299, 311, 313, 315, 316, 317, 318, 319, 321, 323, 326, 352, 399, 400, 418, 419, 421, 422, 470, 480, 482, 511, 513, 515, 534, 541, 557, 580, 581, 582, 584, 585, 596, 597, 677, 678, 681, 684, 685, 688, 692, 693, 694, 732, 753, 761, 767, 768, 776, 781, 782, 784, 790, 792, 793, 796, 799, 816, 817, 818, 819, 822, 823, 824, 851, 856, 862, 871, 872, 873, 877, 882, 886, 888, 890, 892, 893, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 919, 920, 921, 928, 934, 938, 943, 945, 955, 963, 964, 967, 973, 1003, 1012, 1013, 1026, 1039, 1048, 1049, 1052, 1060, 1061, 1074, 1083, 1084, 1086, 1088, 1090, 1091, 1092, 1097, 1099, 1100, 1101, 1102, 1103, 1112, 1117, 1123, 1125, 1126, 1127, 1128, 1132, 1133, 1135, 1136, 1138, 1140, 1144, 1145, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1166, 1181, 1186, 1187, 1188, 1189, 1192, 1193, 1194, 1196, 1197, 1199, 1202, 1203, 1211, 1214, 1216, 1217, 1220, 1224, 1225, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1238, 1239, 1240, 1241, 1245, 1248, 1250, 1252, 1253, 1255, 1259, 1260, 1265, 1266, 1267, 1268, 1271, 1276, 1282, 1284, 1285, 1288, 1293, 1295, 1296, 1298, 1301, 1313, 1316, 1318, 1322, 1323, 1324, 1325, 1328, 1329, 1332, 1336, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1370, 1371, 1372, 1373, 1375, 1382, 1383, 1384, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1413, 1414, 1415, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1442, 1456, 1459, 1461, 1462, 1463, 1464, 1465, 1467, 1470, 1471, 1473, 1475, 1476, 1477, 1479, 1480, 1499, 1500, 1502, 1503, 1504, 1509, 1510, 1519, 1520, 1524, 1527, 1529, 1538, 1539, 1540, 1551, 1552, 1553, 1562, 1563, 1564, 1565, 1567, 1570, 1577, 1590, 1591, 1596, 1598, 1599, 1601, 1603, 1606, 1607, 1608, 1613, 1615, 1616, 1617, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1641, 1644, 1645, 1648, 1650, 1654, 1655, 1659, 1660, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1703, 1707, 1710, 1714, 1716, 1717, 1729, 1731, 1733, 1734, 1735, 1740, 1741, 1742, 1749, 1752, 1762, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1783, 1787, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1814, 1815, 1825, 1829, 1832, 1835, 1838, 1839, 1840, 1841, 1843, 1846, 1847, 1848, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1876, 1878, 1879, 1881, 1884, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1904, 1905, 1907, 1909, 1910, 1911, 1913, 1914, 1917, 1918, 1919, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933], "small": [0, 3, 7, 9, 11, 15, 17, 18, 22, 28, 38, 39, 41, 47, 58, 862, 905, 906, 950, 983, 1026, 1258, 1259, 1271, 1273, 1336, 1363, 1437, 1442, 1456, 1480, 1509, 1563, 1570, 1608, 1686, 1692, 1701, 1814, 1866, 1868, 1869, 1892, 1894, 1896, 1900, 1903, 1905, 1907, 1911, 1914, 1915, 1924, 1930], "magnitud": [0, 963, 1652, 1765, 1887, 1888, 1892], "represent": [0, 3, 14, 16, 28, 32, 38, 41, 43, 56, 71, 480, 755, 823, 973, 1085, 1086, 1088, 1112, 1141, 1196, 1235, 1238, 1240, 1243, 1322, 1428, 1434, 1662, 1701, 1864, 1866, 1869, 1884, 1894, 1903, 1907, 1911, 1914, 1923, 1930, 1935], "These": [0, 1, 2, 3, 8, 11, 14, 16, 20, 23, 28, 32, 33, 38, 41, 42, 47, 64, 66, 69, 71, 791, 877, 968, 1069, 1133, 1193, 1196, 1238, 1303, 1336, 1428, 1599, 1616, 1864, 1866, 1867, 1868, 1869, 1879, 1882, 1883, 1885, 1888, 1889, 1892, 1893, 1894, 1900, 1903, 1905, 1907, 1911, 1917, 1919, 1920, 1926, 1931, 1934], "flush": [0, 1, 43, 1026, 1206, 1745, 1758, 1903, 1928], "zero": [0, 1, 2, 15, 19, 39, 41, 42, 45, 47, 60, 63, 68, 71, 151, 260, 315, 511, 513, 541, 542, 581, 582, 584, 585, 620, 676, 688, 695, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 741, 746, 747, 748, 749, 750, 751, 752, 753, 756, 757, 761, 765, 766, 769, 770, 771, 772, 774, 777, 778, 792, 796, 816, 817, 818, 819, 822, 827, 874, 883, 884, 885, 890, 895, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 920, 921, 941, 942, 943, 948, 963, 967, 1015, 1026, 1030, 1031, 1060, 1064, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1117, 1122, 1125, 1133, 1155, 1156, 1159, 1181, 1193, 1196, 1207, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1268, 1276, 1277, 1278, 1279, 1280, 1285, 1286, 1318, 1322, 1326, 1340, 1341, 1342, 1343, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1380, 1381, 1383, 1396, 1397, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1434, 1437, 1440, 1441, 1442, 1443, 1445, 1465, 1479, 1480, 1483, 1484, 1485, 1494, 1495, 1496, 1505, 1506, 1507, 1509, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1527, 1548, 1549, 1563, 1564, 1565, 1625, 1626, 1627, 1628, 1643, 1650, 1654, 1658, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1701, 1713, 1715, 1716, 1717, 1733, 1742, 1752, 1779, 1783, 1792, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1814, 1828, 1829, 1831, 1837, 1862, 1866, 1867, 1869, 1871, 1879, 1881, 1882, 1883, 1884, 1887, 1889, 1892, 1894, 1900, 1903, 1906, 1907, 1909, 1911, 1913, 1914, 1917, 1923, 1924, 1926, 1928, 1929, 1930, 1931], "underflow": [0, 1394, 1888], "updat": [0, 9, 11, 27, 30, 38, 39, 43, 45, 49, 58, 63, 66, 67, 71, 222, 511, 513, 757, 796, 797, 821, 1125, 1134, 1196, 1346, 1347, 1348, 1365, 1371, 1372, 1380, 1391, 1392, 1393, 1428, 1429, 1438, 1467, 1518, 1519, 1616, 1620, 1650, 1667, 1673, 1678, 1680, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1863, 1866, 1877, 1888, 1889, 1892, 1893, 1894, 1900, 1902, 1905, 1906, 1907, 1909, 1910, 1912, 1914, 1919, 1920, 1921, 1928], "lost": [0, 49, 59, 61, 1365, 1424, 1425, 1426], "To": [0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 14, 15, 16, 18, 20, 21, 26, 27, 28, 32, 33, 38, 39, 41, 42, 45, 46, 47, 49, 50, 56, 57, 59, 60, 63, 68, 71, 83, 84, 335, 497, 554, 731, 891, 904, 947, 950, 953, 956, 971, 1016, 1036, 1057, 1059, 1069, 1097, 1099, 1103, 1114, 1196, 1197, 1199, 1200, 1206, 1207, 1241, 1263, 1268, 1296, 1336, 1345, 1368, 1394, 1424, 1425, 1426, 1428, 1481, 1482, 1500, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1652, 1695, 1703, 1714, 1753, 1761, 1815, 1863, 1866, 1868, 1869, 1873, 1881, 1882, 1883, 1885, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1929], "prevent": [0, 7, 8, 11, 15, 17, 20, 38, 39, 41, 42, 49, 63, 71, 732, 896, 972, 1050, 1051, 1193, 1295, 1323, 1326, 1366, 1434, 1459, 1546, 1583, 1584, 1599, 1608, 1711, 1790, 1793, 1813, 1839, 1841, 1849, 1881, 1888, 1889, 1892, 1893, 1896, 1900, 1911, 1913, 1921, 1923, 1924], "multipli": [0, 16, 41, 313, 321, 422, 511, 682, 683, 684, 685, 686, 687, 688, 757, 776, 782, 783, 784, 918, 930, 1039, 1052, 1069, 1149, 1160, 1219, 1231, 1232, 1236, 1249, 1251, 1253, 1259, 1261, 1290, 1300, 1313, 1317, 1320, 1344, 1356, 1357, 1358, 1361, 1380, 1398, 1480, 1481, 1482, 1538, 1596, 1597, 1598, 1620, 1686, 1692, 1694, 1701, 1785, 1788, 1791, 1792, 1806, 1810, 1811, 1814, 1835, 1867, 1882, 1892, 1897, 1900, 1903, 1909, 1923, 1924], "factor": [0, 3, 16, 39, 47, 71, 686, 687, 688, 796, 816, 918, 941, 942, 943, 1238, 1239, 1240, 1243, 1245, 1285, 1286, 1287, 1366, 1389, 1416, 1440, 1441, 1568, 1569, 1577, 1681, 1682, 1683, 1685, 1686, 1688, 1690, 1691, 1692, 1693, 1694, 1697, 1698, 1699, 1713, 1771, 1792, 1814, 1887, 1888, 1914], "flow": [0, 11, 12, 14, 19, 20, 947, 1208, 1211, 1492, 1527, 1608, 1866, 1887, 1889, 1892, 1894, 1905, 1907, 1921], "through": [0, 5, 7, 9, 11, 12, 14, 15, 16, 17, 20, 25, 27, 28, 33, 38, 41, 43, 47, 51, 63, 68, 70, 71, 494, 789, 837, 851, 858, 859, 896, 905, 906, 977, 1015, 1096, 1129, 1137, 1194, 1197, 1199, 1211, 1212, 1214, 1231, 1232, 1253, 1259, 1276, 1435, 1472, 1473, 1474, 1475, 1529, 1599, 1608, 1620, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1713, 1856, 1863, 1864, 1868, 1869, 1873, 1875, 1879, 1881, 1882, 1883, 1889, 1892, 1894, 1896, 1897, 1899, 1900, 1906, 1907, 1911, 1912, 1914, 1917, 1919, 1920, 1921, 1923, 1927, 1931, 1933, 1935], "word": [0, 1, 8, 41, 58, 59, 66, 70, 71, 934, 1336, 1356, 1357, 1358, 1371, 1372, 1471, 1518, 1519, 1538, 1596, 1608, 1615, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1868, 1889, 1896, 1911, 1920], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 38, 41, 42, 43, 45, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 71, 89, 154, 155, 222, 223, 313, 315, 321, 335, 398, 402, 447, 457, 470, 485, 486, 501, 511, 513, 515, 518, 541, 614, 677, 686, 690, 692, 693, 694, 696, 812, 814, 838, 877, 886, 890, 898, 900, 910, 911, 919, 920, 928, 937, 938, 953, 955, 968, 975, 984, 985, 1015, 1026, 1060, 1068, 1075, 1089, 1099, 1104, 1106, 1120, 1125, 1126, 1137, 1138, 1139, 1153, 1154, 1157, 1158, 1170, 1171, 1193, 1195, 1196, 1199, 1200, 1203, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1217, 1218, 1227, 1231, 1232, 1248, 1255, 1256, 1259, 1261, 1267, 1276, 1278, 1283, 1290, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1318, 1323, 1324, 1326, 1328, 1336, 1340, 1344, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1371, 1372, 1376, 1377, 1382, 1387, 1391, 1392, 1393, 1420, 1428, 1431, 1432, 1433, 1434, 1435, 1475, 1477, 1509, 1518, 1519, 1522, 1523, 1527, 1544, 1562, 1564, 1567, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1615, 1617, 1620, 1644, 1648, 1653, 1655, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1711, 1737, 1738, 1752, 1765, 1788, 1791, 1795, 1796, 1797, 1798, 1800, 1801, 1808, 1809, 1810, 1813, 1814, 1825, 1829, 1835, 1837, 1849, 1851, 1852, 1854, 1856, 1858, 1863, 1866, 1867, 1868, 1869, 1871, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1918, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1934], "larger": [0, 9, 20, 22, 24, 27, 41, 47, 71, 254, 497, 906, 921, 1026, 1126, 1250, 1253, 1336, 1365, 1371, 1372, 1420, 1477, 1480, 1518, 1519, 1889, 1892, 1896, 1897, 1899, 1903, 1905, 1923, 1928], "thei": [0, 1, 3, 5, 7, 9, 11, 14, 15, 16, 17, 19, 23, 26, 28, 30, 34, 35, 38, 41, 43, 47, 48, 58, 63, 66, 67, 70, 71, 321, 335, 336, 683, 686, 687, 694, 797, 812, 813, 814, 821, 838, 851, 856, 887, 896, 906, 918, 1015, 1073, 1120, 1125, 1135, 1171, 1185, 1186, 1193, 1196, 1203, 1208, 1217, 1231, 1232, 1238, 1259, 1267, 1289, 1293, 1296, 1298, 1301, 1318, 1341, 1342, 1343, 1359, 1360, 1361, 1375, 1413, 1421, 1422, 1423, 1428, 1434, 1444, 1456, 1479, 1527, 1529, 1599, 1608, 1609, 1612, 1615, 1617, 1618, 1641, 1644, 1653, 1691, 1694, 1753, 1759, 1810, 1814, 1849, 1850, 1863, 1866, 1868, 1869, 1871, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1898, 1900, 1902, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1919, 1923, 1928, 1930, 1931, 1932, 1934], "don": [0, 1, 4, 7, 9, 14, 15, 16, 17, 20, 21, 30, 41, 57, 64, 66, 68, 71, 151, 782, 792, 890, 891, 904, 1043, 1125, 1211, 1289, 1391, 1392, 1393, 1480, 1596, 1599, 1608, 1656, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1756, 1863, 1866, 1870, 1881, 1882, 1883, 1889, 1892, 1894, 1896, 1900, 1902, 1906, 1907, 1910, 1911, 1912, 1914, 1919, 1920, 1923, 1934], "t": [0, 1, 2, 3, 4, 7, 8, 9, 14, 15, 17, 19, 20, 21, 28, 30, 38, 39, 41, 43, 47, 48, 51, 55, 57, 58, 64, 66, 68, 69, 70, 71, 151, 313, 315, 321, 457, 534, 568, 684, 685, 694, 757, 778, 782, 792, 820, 823, 874, 875, 876, 877, 886, 888, 890, 891, 894, 896, 899, 904, 941, 942, 943, 948, 968, 970, 973, 994, 1012, 1013, 1043, 1067, 1085, 1090, 1091, 1092, 1093, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1120, 1121, 1122, 1125, 1126, 1127, 1137, 1138, 1149, 1159, 1193, 1194, 1196, 1197, 1199, 1202, 1203, 1207, 1209, 1211, 1214, 1216, 1225, 1226, 1232, 1234, 1235, 1238, 1245, 1253, 1254, 1259, 1267, 1268, 1276, 1289, 1302, 1303, 1316, 1325, 1345, 1349, 1351, 1356, 1357, 1358, 1365, 1371, 1372, 1380, 1389, 1391, 1392, 1393, 1394, 1398, 1415, 1428, 1443, 1459, 1461, 1471, 1479, 1480, 1498, 1502, 1503, 1504, 1511, 1518, 1519, 1539, 1544, 1563, 1583, 1596, 1599, 1602, 1603, 1608, 1609, 1615, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1642, 1644, 1645, 1656, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1687, 1697, 1703, 1709, 1713, 1730, 1755, 1756, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1791, 1810, 1814, 1815, 1825, 1828, 1834, 1837, 1856, 1857, 1863, 1865, 1866, 1867, 1868, 1870, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1899, 1900, 1902, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1934], "grad": [0, 1, 5, 23, 26, 41, 47, 64, 67, 68, 71, 151, 335, 457, 486, 493, 494, 501, 502, 578, 877, 886, 890, 891, 897, 898, 900, 905, 906, 910, 911, 1015, 1073, 1125, 1126, 1128, 1132, 1136, 1137, 1171, 1179, 1196, 1268, 1428, 1608, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1759, 1791, 1849, 1856, 1864, 1866, 1867, 1882, 1883, 1884, 1888, 1893, 1894, 1895, 1897, 1900, 1902, 1909, 1919, 1920, 1923, 1929], "attribut": [0, 1, 20, 27, 30, 38, 39, 41, 42, 48, 71, 151, 290, 493, 494, 724, 735, 736, 737, 738, 739, 740, 742, 743, 753, 761, 788, 799, 812, 813, 814, 835, 836, 837, 855, 856, 886, 890, 892, 896, 1120, 1195, 1196, 1197, 1199, 1200, 1206, 1207, 1268, 1365, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1428, 1471, 1608, 1609, 1619, 1620, 1621, 1642, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1864, 1867, 1870, 1884, 1888, 1889, 1892, 1894, 1895, 1900, 1905, 1907, 1911, 1914, 1919, 1929, 1930, 1934, 1935], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 11, 19, 20, 26, 28, 32, 41, 45, 47, 49, 51, 55, 57, 58, 60, 63, 66, 67, 68, 70, 71, 151, 254, 335, 434, 457, 580, 614, 677, 692, 693, 745, 754, 757, 787, 791, 858, 877, 917, 930, 1006, 1010, 1060, 1069, 1073, 1122, 1125, 1137, 1170, 1195, 1197, 1200, 1206, 1211, 1221, 1226, 1238, 1239, 1243, 1244, 1251, 1257, 1259, 1265, 1268, 1285, 1289, 1290, 1296, 1300, 1304, 1320, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1368, 1371, 1372, 1375, 1380, 1381, 1391, 1392, 1393, 1398, 1399, 1401, 1402, 1403, 1410, 1411, 1412, 1422, 1423, 1429, 1435, 1438, 1443, 1445, 1467, 1479, 1510, 1562, 1608, 1609, 1617, 1620, 1624, 1650, 1653, 1655, 1660, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1698, 1702, 1707, 1749, 1752, 1753, 1757, 1759, 1783, 1788, 1814, 1834, 1837, 1849, 1856, 1862, 1863, 1864, 1866, 1868, 1869, 1871, 1877, 1881, 1882, 1883, 1884, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1907, 1911, 1912, 1914, 1919, 1921, 1923, 1926, 1930], "interfer": [0, 16, 1879, 1892, 1907], "learn": [0, 7, 8, 12, 14, 20, 33, 47, 57, 71, 1349, 1362, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1388, 1413, 1415, 1436, 1457, 1476, 1477, 1580, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1864, 1873, 1885, 1887, 1898, 1900, 1901, 1907, 1911, 1914, 1919, 1921], "rate": [0, 8, 24, 39, 47, 1367, 1368, 1369, 1373, 1474, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1706, 1864, 1899, 1928], "fp16": [0, 2, 726, 1608, 1914, 1915], "everi": [0, 1, 2, 8, 9, 14, 15, 16, 20, 24, 27, 28, 38, 39, 41, 43, 45, 47, 49, 63, 68, 71, 480, 486, 607, 677, 778, 816, 894, 910, 911, 1052, 1069, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1126, 1149, 1158, 1196, 1227, 1241, 1251, 1254, 1285, 1340, 1366, 1367, 1368, 1369, 1373, 1421, 1428, 1461, 1463, 1467, 1513, 1514, 1515, 1520, 1551, 1552, 1553, 1567, 1584, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1616, 1649, 1652, 1653, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1753, 1814, 1847, 1869, 1875, 1879, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1901, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1925, 1926, 1928, 1930], "most": [0, 1, 3, 4, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 27, 28, 33, 38, 41, 43, 45, 47, 48, 49, 50, 57, 58, 60, 61, 68, 69, 70, 71, 497, 790, 894, 895, 896, 901, 905, 914, 950, 1038, 1052, 1069, 1126, 1171, 1181, 1194, 1197, 1301, 1336, 1475, 1527, 1577, 1608, 1620, 1678, 1789, 1835, 1863, 1866, 1868, 1869, 1871, 1876, 1881, 1883, 1884, 1889, 1892, 1894, 1902, 1903, 1904, 1910, 1913, 1914, 1920, 1921, 1923, 1926, 1928, 1930], "bf16": [0, 2], "pretrain": [0, 19, 859, 1371, 1372, 1863, 1889, 1907], "cannot": [0, 3, 8, 9, 11, 19, 38, 39, 41, 47, 48, 51, 58, 63, 64, 68, 69, 70, 71, 86, 87, 223, 254, 521, 542, 877, 1090, 1092, 1100, 1101, 1102, 1108, 1125, 1193, 1201, 1318, 1351, 1371, 1480, 1511, 1577, 1608, 1664, 1815, 1863, 1866, 1867, 1868, 1869, 1870, 1871, 1879, 1883, 1884, 1889, 1893, 1894, 1905, 1906, 1907, 1914, 1919, 1921, 1923, 1925, 1926, 1934], "numer": [0, 16, 28, 38, 47, 64, 69, 684, 790, 905, 906, 934, 1200, 1211, 1212, 1227, 1231, 1232, 1236, 1241, 1249, 1250, 1253, 1256, 1259, 1261, 1283, 1285, 1345, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1461, 1464, 1467, 1518, 1539, 1546, 1577, 1583, 1585, 1616, 1649, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1717, 1749, 1814, 1864, 1869, 1870, 1874, 1877, 1892, 1894, 1895, 1907, 1914, 1924, 1929, 1935], "max": [0, 15, 18, 21, 22, 38, 41, 49, 51, 57, 58, 60, 63, 71, 117, 186, 187, 188, 189, 300, 692, 693, 694, 755, 767, 768, 777, 779, 780, 799, 816, 817, 818, 819, 822, 871, 921, 938, 945, 946, 950, 1048, 1083, 1084, 1156, 1207, 1227, 1241, 1248, 1250, 1252, 1253, 1265, 1337, 1338, 1339, 1350, 1351, 1362, 1363, 1372, 1376, 1377, 1382, 1387, 1388, 1396, 1397, 1414, 1416, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1431, 1432, 1433, 1436, 1447, 1448, 1455, 1476, 1477, 1479, 1489, 1490, 1491, 1501, 1509, 1519, 1522, 1523, 1538, 1542, 1551, 1552, 1553, 1563, 1567, 1571, 1573, 1578, 1596, 1612, 1644, 1670, 1671, 1672, 1682, 1687, 1688, 1697, 1718, 1719, 1791, 1820, 1821, 1849, 1865, 1866, 1867, 1876, 1879, 1884, 1890, 1892, 1896, 1909, 1914, 1917, 1935], "65504": 0, "overflow": [0, 1050, 1051, 1295, 1323, 1326, 1546, 1583, 1584, 1711, 1742, 1790, 1793, 1813, 1839, 1841, 1892, 1903, 1924], "instead": [0, 1, 3, 5, 8, 9, 11, 12, 14, 15, 16, 17, 20, 23, 27, 28, 32, 38, 39, 41, 43, 46, 47, 49, 55, 58, 59, 63, 66, 67, 68, 71, 222, 406, 457, 497, 511, 745, 754, 765, 766, 790, 814, 823, 877, 887, 898, 899, 900, 901, 904, 905, 934, 940, 1104, 1106, 1130, 1131, 1132, 1133, 1136, 1137, 1142, 1183, 1194, 1196, 1197, 1201, 1225, 1226, 1232, 1234, 1250, 1253, 1259, 1265, 1296, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1362, 1364, 1365, 1367, 1368, 1369, 1373, 1380, 1388, 1394, 1395, 1396, 1397, 1398, 1419, 1420, 1421, 1422, 1423, 1428, 1431, 1432, 1433, 1435, 1442, 1443, 1455, 1459, 1460, 1461, 1467, 1476, 1494, 1495, 1496, 1499, 1500, 1510, 1520, 1527, 1539, 1551, 1552, 1553, 1562, 1570, 1583, 1608, 1650, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1695, 1718, 1719, 1729, 1749, 1753, 1795, 1810, 1814, 1849, 1856, 1866, 1868, 1869, 1876, 1883, 1887, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1898, 1902, 1904, 1905, 1906, 1907, 1910, 1911, 1913, 1914, 1917, 1920, 1923, 1930, 1931, 1933, 1934], "case": [0, 1, 3, 4, 8, 9, 14, 15, 16, 17, 20, 23, 27, 28, 30, 32, 33, 38, 39, 41, 43, 45, 46, 47, 49, 50, 51, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 151, 155, 197, 352, 494, 497, 677, 757, 781, 788, 791, 817, 818, 820, 823, 855, 862, 890, 898, 900, 904, 919, 921, 963, 969, 994, 1016, 1017, 1036, 1037, 1038, 1069, 1090, 1092, 1100, 1101, 1102, 1117, 1127, 1131, 1136, 1155, 1181, 1194, 1197, 1205, 1208, 1209, 1211, 1225, 1227, 1231, 1232, 1236, 1241, 1242, 1243, 1245, 1251, 1254, 1259, 1261, 1265, 1267, 1268, 1273, 1276, 1285, 1296, 1318, 1336, 1341, 1342, 1343, 1344, 1345, 1356, 1357, 1358, 1360, 1361, 1362, 1364, 1367, 1368, 1369, 1370, 1372, 1373, 1375, 1384, 1385, 1386, 1387, 1388, 1389, 1395, 1396, 1397, 1414, 1419, 1421, 1422, 1423, 1434, 1435, 1436, 1446, 1459, 1465, 1470, 1475, 1477, 1479, 1492, 1510, 1519, 1527, 1531, 1532, 1562, 1564, 1571, 1608, 1610, 1611, 1615, 1617, 1620, 1621, 1654, 1655, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1695, 1733, 1736, 1749, 1751, 1765, 1768, 1814, 1815, 1845, 1849, 1859, 1863, 1869, 1874, 1881, 1882, 1883, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1905, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1934, 1935], "decreas": [0, 47, 1026, 1241, 1367, 1368, 1369, 1373, 1441, 1642, 1643, 1682, 1689, 1697, 1875, 1877, 1904, 1923, 1926], "attempt": [0, 1, 8, 14, 15, 16, 28, 32, 41, 58, 59, 68, 944, 953, 964, 1200, 1206, 1285, 1577, 1610, 1611, 1670, 1671, 1849, 1866, 1869, 1882, 1883, 1888, 1892, 1894, 1906, 1910, 1911, 1919], "bring": [0, 22, 24, 64, 71, 1090, 1492, 1527, 1912], "number": [0, 1, 2, 3, 4, 5, 7, 11, 14, 15, 16, 19, 24, 28, 32, 38, 39, 41, 45, 46, 47, 49, 56, 57, 58, 61, 63, 64, 66, 69, 71, 89, 155, 174, 219, 233, 254, 313, 352, 377, 398, 402, 434, 445, 470, 472, 473, 480, 491, 495, 497, 511, 513, 515, 540, 542, 543, 555, 580, 581, 582, 584, 585, 586, 605, 614, 682, 683, 684, 685, 686, 687, 688, 695, 755, 757, 765, 766, 769, 770, 771, 778, 816, 862, 874, 887, 905, 918, 920, 921, 930, 932, 936, 944, 945, 949, 963, 967, 968, 975, 977, 983, 992, 1001, 1002, 1013, 1015, 1016, 1017, 1026, 1036, 1037, 1040, 1041, 1061, 1064, 1066, 1069, 1070, 1074, 1082, 1112, 1114, 1117, 1122, 1124, 1138, 1140, 1146, 1147, 1148, 1152, 1156, 1157, 1158, 1170, 1172, 1193, 1194, 1196, 1209, 1216, 1219, 1220, 1227, 1241, 1250, 1259, 1263, 1268, 1273, 1284, 1288, 1296, 1307, 1308, 1312, 1314, 1317, 1318, 1322, 1326, 1329, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1349, 1350, 1351, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1395, 1398, 1399, 1404, 1405, 1406, 1407, 1408, 1409, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1442, 1443, 1445, 1446, 1447, 1448, 1455, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1494, 1495, 1496, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1518, 1519, 1522, 1523, 1528, 1538, 1539, 1541, 1544, 1551, 1552, 1553, 1562, 1564, 1570, 1571, 1577, 1599, 1608, 1616, 1620, 1625, 1626, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1645, 1649, 1654, 1655, 1656, 1658, 1659, 1665, 1673, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1696, 1697, 1703, 1706, 1710, 1720, 1722, 1723, 1724, 1726, 1727, 1728, 1733, 1735, 1736, 1739, 1740, 1741, 1742, 1750, 1754, 1758, 1760, 1761, 1762, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1806, 1807, 1808, 1809, 1810, 1811, 1815, 1829, 1830, 1831, 1839, 1841, 1846, 1847, 1850, 1851, 1852, 1853, 1854, 1855, 1861, 1864, 1867, 1868, 1869, 1870, 1871, 1876, 1879, 1881, 1884, 1887, 1890, 1892, 1894, 1897, 1900, 1903, 1905, 1907, 1910, 1911, 1912, 1913, 1915, 1918, 1919, 1920, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1935], "expect": [0, 1, 3, 5, 7, 9, 12, 15, 16, 22, 23, 28, 38, 39, 41, 43, 45, 49, 56, 58, 60, 63, 68, 69, 71, 677, 694, 757, 851, 898, 899, 900, 901, 902, 903, 1015, 1090, 1092, 1109, 1110, 1111, 1130, 1131, 1170, 1193, 1196, 1211, 1212, 1240, 1261, 1262, 1296, 1347, 1348, 1364, 1380, 1381, 1382, 1383, 1392, 1393, 1394, 1398, 1399, 1400, 1410, 1411, 1412, 1428, 1434, 1435, 1443, 1445, 1461, 1467, 1471, 1473, 1475, 1480, 1518, 1524, 1538, 1562, 1570, 1571, 1583, 1596, 1597, 1598, 1599, 1608, 1642, 1698, 1754, 1823, 1854, 1863, 1864, 1871, 1889, 1892, 1893, 1896, 1897, 1900, 1907, 1910, 1911, 1914, 1915, 1916, 1923, 1928, 1930], "alwai": [0, 5, 7, 11, 14, 15, 32, 34, 38, 39, 41, 56, 60, 63, 67, 71, 340, 447, 457, 791, 877, 895, 898, 904, 919, 928, 938, 944, 1015, 1026, 1056, 1064, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1100, 1101, 1102, 1103, 1105, 1108, 1112, 1153, 1154, 1196, 1206, 1211, 1226, 1231, 1232, 1233, 1234, 1236, 1237, 1249, 1252, 1253, 1254, 1255, 1259, 1261, 1324, 1344, 1346, 1347, 1348, 1365, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1464, 1467, 1599, 1608, 1641, 1737, 1738, 1764, 1810, 1814, 1846, 1849, 1869, 1870, 1881, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1897, 1899, 1900, 1911, 1912, 1918, 1919, 1921, 1923, 1926, 1929, 1930], "abov": [0, 1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 28, 33, 41, 47, 51, 58, 60, 63, 64, 69, 71, 83, 614, 677, 789, 790, 877, 919, 928, 943, 1026, 1052, 1056, 1057, 1058, 1059, 1060, 1069, 1141, 1153, 1154, 1196, 1197, 1216, 1227, 1231, 1232, 1250, 1252, 1253, 1256, 1259, 1262, 1265, 1268, 1344, 1375, 1428, 1456, 1464, 1479, 1577, 1599, 1656, 1689, 1713, 1724, 1725, 1757, 1762, 1775, 1794, 1835, 1838, 1839, 1840, 1841, 1863, 1866, 1868, 1869, 1876, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1900, 1904, 1905, 1907, 1911, 1914, 1919, 1920, 1921, 1923, 1924, 1930], "our": [0, 3, 7, 8, 11, 14, 15, 16, 19, 20, 21, 22, 27, 28, 41, 54, 57, 58, 59, 61, 67, 68, 69, 71, 894, 1089, 1126, 1344, 1889, 1894, 1897, 1902, 1907, 1910, 1914, 1920, 1923], "NOT": [0, 38, 41, 49, 58, 59, 60, 71, 924, 1278, 1368, 1608, 1609, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1653, 1662, 1664, 1670, 1671, 1684, 1889, 1921, 1923], "make": [0, 1, 2, 3, 4, 5, 8, 14, 15, 16, 17, 19, 21, 22, 23, 25, 27, 28, 32, 33, 38, 39, 41, 43, 44, 46, 47, 49, 50, 55, 58, 59, 60, 61, 63, 67, 68, 71, 140, 223, 494, 776, 782, 858, 859, 890, 941, 942, 943, 972, 973, 975, 1057, 1073, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1110, 1111, 1171, 1196, 1200, 1205, 1206, 1225, 1226, 1238, 1239, 1240, 1268, 1344, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1389, 1428, 1438, 1475, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1527, 1529, 1538, 1577, 1596, 1608, 1615, 1631, 1648, 1653, 1691, 1754, 1787, 1796, 1797, 1798, 1800, 1801, 1832, 1849, 1863, 1866, 1868, 1869, 1873, 1879, 1881, 1882, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1906, 1907, 1908, 1910, 1911, 1913, 1914, 1915, 1919, 1920, 1921, 1923, 1926, 1928, 1932, 1934], "guarante": [0, 1, 5, 9, 14, 38, 41, 43, 45, 47, 58, 60, 68, 70, 71, 873, 1196, 1205, 1365, 1428, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1787, 1849, 1889, 1891, 1892, 1903, 1904, 1911, 1913, 1915, 1919, 1921], "encount": [0, 5, 12, 16, 20, 23, 28, 41, 68, 70, 71, 1608, 1866, 1869, 1871, 1891, 1903, 1911, 1914], "nan": [0, 1, 47, 426, 427, 681, 683, 686, 687, 688, 691, 694, 695, 878, 882, 918, 934, 1115, 1116, 1117, 1156, 1185, 1186, 1188, 1189, 1235, 1242, 1255, 1258, 1271, 1276, 1294, 1295, 1299, 1322, 1323, 1324, 1325, 1326, 1527, 1612, 1707, 1744, 1749, 1803, 1837, 1867, 1876, 1888, 1889, 1895, 1903, 1924, 1930], "verifi": [0, 19, 26, 41, 71, 905, 1052, 1665, 1666, 1684, 1835, 1863, 1866, 1878, 1894, 1897, 1907, 1912], "compat": [0, 1, 32, 38, 43, 47, 49, 63, 67, 68, 71, 495, 496, 600, 614, 677, 812, 813, 814, 887, 931, 961, 962, 1196, 1201, 1213, 1226, 1237, 1250, 1253, 1428, 1434, 1472, 1473, 1474, 1475, 1538, 1662, 1664, 1736, 1863, 1864, 1868, 1869, 1875, 1881, 1882, 1888, 1894, 1905, 1911, 1913, 1914, 1917, 1919, 1925], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 11, 12, 13, 14, 16, 19, 20, 21, 22, 27, 30, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 59, 60, 63, 66, 67, 68, 69, 70, 71, 89, 155, 157, 174, 185, 192, 209, 225, 226, 227, 228, 229, 254, 260, 263, 289, 298, 300, 311, 313, 315, 317, 321, 352, 401, 402, 426, 427, 444, 447, 448, 453, 480, 482, 486, 494, 505, 506, 511, 513, 515, 518, 535, 540, 541, 544, 553, 555, 557, 575, 577, 578, 580, 581, 582, 584, 585, 586, 592, 593, 594, 595, 602, 604, 605, 614, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 709, 710, 711, 712, 713, 714, 715, 716, 720, 721, 722, 723, 724, 727, 728, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 745, 748, 749, 750, 752, 753, 754, 755, 757, 765, 766, 767, 769, 770, 771, 772, 775, 777, 779, 780, 782, 791, 793, 796, 799, 814, 817, 818, 819, 822, 851, 853, 862, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 895, 898, 899, 900, 902, 905, 906, 908, 910, 911, 914, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 934, 937, 938, 939, 940, 941, 942, 943, 944, 945, 948, 959, 960, 963, 964, 965, 966, 967, 968, 969, 975, 984, 986, 1012, 1013, 1039, 1043, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1067, 1069, 1071, 1072, 1079, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1125, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1137, 1138, 1139, 1149, 1153, 1155, 1156, 1157, 1158, 1159, 1162, 1166, 1170, 1173, 1181, 1192, 1193, 1194, 1196, 1200, 1202, 1203, 1207, 1215, 1216, 1217, 1218, 1219, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1237, 1238, 1239, 1240, 1241, 1242, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1257, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1282, 1285, 1289, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1303, 1313, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1330, 1332, 1334, 1335, 1336, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1414, 1416, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1459, 1461, 1462, 1463, 1465, 1467, 1470, 1471, 1473, 1475, 1476, 1477, 1479, 1480, 1483, 1484, 1485, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1527, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1542, 1543, 1545, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1573, 1577, 1578, 1581, 1583, 1586, 1592, 1593, 1594, 1595, 1596, 1599, 1608, 1612, 1615, 1616, 1620, 1625, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1641, 1642, 1644, 1645, 1647, 1648, 1649, 1650, 1652, 1654, 1655, 1656, 1660, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1704, 1706, 1707, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1744, 1745, 1749, 1751, 1752, 1753, 1756, 1758, 1762, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1783, 1787, 1789, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1816, 1817, 1823, 1824, 1826, 1827, 1828, 1829, 1830, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1844, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1854, 1855, 1856, 1857, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1876, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1919, 1920, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 13, 16, 27, 28, 30, 32, 35, 36, 38, 39, 41, 47, 56, 67, 68, 69, 70, 71, 155, 192, 209, 260, 289, 298, 313, 315, 317, 321, 401, 402, 444, 470, 497, 511, 513, 515, 534, 541, 555, 557, 581, 582, 583, 584, 585, 604, 682, 683, 687, 694, 731, 736, 737, 738, 739, 740, 742, 743, 757, 759, 770, 771, 858, 859, 862, 877, 883, 884, 885, 898, 901, 903, 918, 921, 928, 929, 930, 934, 936, 940, 943, 944, 945, 948, 963, 967, 1048, 1050, 1052, 1059, 1061, 1063, 1064, 1067, 1068, 1069, 1072, 1085, 1087, 1089, 1090, 1096, 1097, 1100, 1105, 1108, 1109, 1112, 1115, 1117, 1118, 1119, 1127, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1139, 1149, 1155, 1157, 1159, 1161, 1162, 1173, 1181, 1185, 1202, 1206, 1207, 1216, 1217, 1218, 1221, 1224, 1225, 1242, 1245, 1248, 1251, 1252, 1253, 1254, 1259, 1260, 1263, 1265, 1266, 1268, 1269, 1270, 1271, 1272, 1278, 1282, 1289, 1290, 1296, 1297, 1301, 1325, 1327, 1328, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1345, 1346, 1347, 1348, 1352, 1353, 1354, 1355, 1357, 1358, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1382, 1383, 1384, 1389, 1391, 1392, 1393, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1416, 1419, 1424, 1425, 1428, 1435, 1438, 1442, 1443, 1449, 1450, 1451, 1452, 1453, 1456, 1459, 1465, 1467, 1471, 1473, 1475, 1477, 1478, 1479, 1480, 1481, 1482, 1493, 1494, 1502, 1503, 1505, 1506, 1510, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1522, 1523, 1525, 1527, 1530, 1538, 1562, 1564, 1570, 1586, 1596, 1597, 1598, 1608, 1620, 1630, 1633, 1635, 1636, 1638, 1643, 1644, 1646, 1648, 1654, 1655, 1656, 1658, 1659, 1662, 1665, 1680, 1682, 1684, 1686, 1692, 1696, 1702, 1704, 1706, 1707, 1709, 1710, 1713, 1714, 1717, 1718, 1719, 1720, 1724, 1729, 1730, 1733, 1734, 1740, 1741, 1742, 1749, 1762, 1769, 1771, 1772, 1773, 1774, 1777, 1778, 1787, 1792, 1794, 1795, 1796, 1797, 1799, 1802, 1810, 1813, 1814, 1815, 1816, 1817, 1824, 1826, 1828, 1829, 1830, 1832, 1833, 1835, 1844, 1845, 1849, 1850, 1856, 1857, 1858, 1861, 1864, 1866, 1867, 1868, 1869, 1870, 1876, 1883, 1884, 1887, 1888, 1889, 1890, 1892, 1894, 1896, 1897, 1900, 1901, 1905, 1906, 1907, 1910, 1912, 1914, 1919, 1923, 1924, 1926, 1928, 1929, 1930], "growth_interv": 0, "2000": [0, 41, 45, 1087, 1089, 1096, 1105, 1118, 1273, 1480, 1689, 1717, 1767, 1768, 1828], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 28, 32, 33, 35, 38, 41, 45, 47, 48, 49, 51, 52, 55, 56, 58, 59, 63, 71, 352, 586, 621, 677, 778, 877, 898, 899, 900, 901, 902, 903, 905, 906, 936, 937, 949, 950, 952, 1006, 1012, 1013, 1015, 1064, 1069, 1087, 1089, 1117, 1122, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1172, 1194, 1196, 1197, 1199, 1200, 1201, 1206, 1207, 1211, 1267, 1429, 1430, 1438, 1439, 1577, 1608, 1707, 1729, 1733, 1753, 1754, 1789, 1856, 1863, 1873, 1875, 1880, 1881, 1883, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1902, 1905, 1906, 1911, 1914, 1918, 1919, 1920, 1921, 1926, 1929, 1930], "contain": [0, 1, 2, 3, 5, 12, 15, 20, 22, 24, 27, 28, 30, 32, 33, 38, 41, 42, 45, 46, 47, 49, 51, 52, 56, 59, 63, 70, 71, 84, 89, 151, 155, 192, 196, 209, 290, 311, 313, 315, 319, 321, 470, 482, 541, 600, 604, 683, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 757, 811, 834, 838, 874, 889, 890, 898, 899, 900, 901, 902, 903, 904, 914, 918, 919, 920, 928, 930, 934, 952, 963, 964, 968, 971, 982, 983, 984, 985, 986, 1015, 1069, 1103, 1104, 1106, 1112, 1132, 1133, 1136, 1137, 1153, 1154, 1157, 1158, 1166, 1170, 1187, 1194, 1196, 1197, 1202, 1203, 1206, 1211, 1212, 1215, 1226, 1232, 1233, 1234, 1235, 1237, 1239, 1241, 1242, 1258, 1267, 1285, 1289, 1296, 1318, 1324, 1336, 1345, 1364, 1365, 1371, 1372, 1375, 1380, 1381, 1383, 1388, 1398, 1399, 1420, 1428, 1429, 1430, 1435, 1438, 1443, 1445, 1456, 1460, 1467, 1479, 1510, 1518, 1519, 1521, 1592, 1599, 1602, 1603, 1608, 1616, 1617, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1648, 1649, 1652, 1654, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1703, 1706, 1731, 1745, 1749, 1809, 1810, 1814, 1830, 1837, 1839, 1841, 1846, 1847, 1852, 1856, 1864, 1866, 1868, 1869, 1870, 1876, 1879, 1883, 1884, 1888, 1889, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1903, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1919, 1921, 1923, 1925, 1926, 1928, 1929, 1931, 1932, 1933, 1934], "backoff": [0, 1919], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 14, 20, 27, 35, 38, 39, 41, 43, 45, 46, 47, 49, 52, 55, 56, 58, 59, 61, 63, 71, 89, 217, 219, 233, 242, 254, 313, 315, 317, 321, 436, 443, 444, 446, 448, 456, 471, 475, 491, 495, 497, 511, 513, 515, 518, 534, 540, 542, 543, 555, 557, 563, 580, 581, 582, 584, 585, 604, 614, 677, 690, 692, 693, 694, 696, 752, 753, 772, 774, 776, 777, 782, 783, 784, 816, 871, 872, 873, 875, 889, 896, 909, 919, 921, 928, 935, 937, 944, 949, 967, 968, 969, 971, 973, 975, 977, 978, 981, 982, 983, 984, 985, 986, 988, 989, 990, 991, 992, 997, 998, 999, 1001, 1003, 1007, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1038, 1039, 1040, 1043, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1056, 1057, 1058, 1059, 1060, 1061, 1067, 1070, 1072, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1122, 1123, 1127, 1128, 1129, 1130, 1131, 1137, 1138, 1144, 1146, 1147, 1149, 1153, 1154, 1156, 1157, 1158, 1159, 1170, 1172, 1193, 1194, 1196, 1197, 1199, 1202, 1207, 1215, 1217, 1227, 1228, 1248, 1249, 1252, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1275, 1282, 1283, 1288, 1293, 1295, 1296, 1298, 1301, 1303, 1304, 1305, 1308, 1318, 1323, 1324, 1325, 1326, 1327, 1328, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1346, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1365, 1371, 1372, 1374, 1375, 1376, 1377, 1379, 1381, 1383, 1391, 1392, 1393, 1396, 1397, 1399, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1413, 1415, 1416, 1418, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1430, 1433, 1435, 1436, 1439, 1440, 1441, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1463, 1464, 1467, 1471, 1473, 1475, 1476, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1509, 1510, 1511, 1518, 1519, 1526, 1529, 1538, 1546, 1562, 1563, 1564, 1568, 1569, 1583, 1584, 1592, 1596, 1597, 1598, 1608, 1616, 1625, 1626, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1642, 1644, 1649, 1652, 1655, 1656, 1658, 1659, 1662, 1664, 1665, 1666, 1673, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1704, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1728, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1745, 1750, 1751, 1752, 1756, 1760, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1783, 1787, 1790, 1793, 1794, 1795, 1802, 1805, 1807, 1808, 1809, 1810, 1813, 1815, 1819, 1825, 1829, 1830, 1832, 1834, 1835, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1856, 1857, 1861, 1865, 1866, 1867, 1868, 1869, 1870, 1879, 1881, 1882, 1884, 1887, 1892, 1895, 1907, 1909, 1912, 1913, 1914, 1918, 1919, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1935], "interv": [0, 47, 60, 862, 964, 1119, 1309, 1310, 1698, 1722, 1723, 1771, 1879, 1892, 1913], "get_scal": [0, 1888], "sync": [0, 11, 15, 41, 45, 63, 70, 71, 1608, 1892, 1893, 1912], "is_en": [0, 1789, 1796, 1797, 1798, 1799, 1800, 1801], "indic": [0, 1, 2, 3, 17, 20, 28, 38, 39, 41, 42, 46, 47, 58, 84, 192, 209, 222, 313, 315, 317, 318, 319, 321, 470, 511, 513, 515, 541, 569, 570, 580, 611, 692, 693, 732, 742, 743, 871, 872, 873, 874, 875, 895, 905, 906, 934, 941, 942, 955, 970, 972, 973, 975, 1009, 1048, 1049, 1072, 1127, 1128, 1130, 1131, 1132, 1136, 1137, 1138, 1149, 1170, 1194, 1196, 1201, 1209, 1212, 1213, 1217, 1226, 1237, 1239, 1250, 1253, 1267, 1275, 1283, 1285, 1287, 1293, 1296, 1298, 1301, 1318, 1324, 1328, 1336, 1337, 1338, 1339, 1364, 1371, 1372, 1376, 1377, 1422, 1423, 1424, 1425, 1426, 1431, 1433, 1434, 1489, 1490, 1491, 1510, 1518, 1519, 1522, 1523, 1539, 1554, 1555, 1556, 1564, 1577, 1592, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1654, 1655, 1693, 1695, 1714, 1749, 1787, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1824, 1825, 1829, 1832, 1838, 1839, 1840, 1841, 1846, 1847, 1849, 1856, 1859, 1865, 1866, 1867, 1869, 1873, 1882, 1883, 1894, 1907, 1909, 1919, 1923, 1927, 1928, 1930], "load_state_dict": [0, 39, 43, 45, 63, 1196, 1267, 1428, 1599, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1863, 1864, 1900, 1905, 1914], "state_dict": [0, 39, 43, 45, 63, 833, 834, 1196, 1428, 1599, 1634, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1863, 1878, 1893, 1900, 1902, 1905, 1907, 1914, 1932], "load": [0, 1, 18, 19, 22, 28, 30, 32, 33, 39, 43, 45, 63, 834, 859, 913, 950, 971, 1200, 1206, 1211, 1372, 1599, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1745, 1864, 1866, 1877, 1878, 1883, 1889, 1892, 1899, 1900, 1904, 1906, 1907, 1928], "scaler": [0, 1888, 1892], "dict": [0, 3, 5, 18, 23, 27, 38, 39, 41, 42, 43, 45, 46, 47, 49, 52, 56, 60, 63, 65, 67, 71, 677, 789, 790, 791, 812, 813, 814, 833, 851, 907, 950, 1012, 1013, 1026, 1035, 1125, 1135, 1137, 1194, 1195, 1196, 1197, 1202, 1207, 1211, 1212, 1267, 1268, 1365, 1375, 1428, 1429, 1438, 1479, 1599, 1608, 1631, 1650, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1856, 1863, 1866, 1867, 1869, 1870, 1878, 1879, 1894, 1900, 1905, 1907, 1909, 1910, 1919, 1920, 1928, 1932, 1933, 1934], "object": [0, 1, 3, 5, 6, 8, 12, 13, 15, 20, 23, 27, 32, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 58, 60, 63, 70, 71, 76, 89, 207, 210, 600, 790, 791, 851, 858, 877, 887, 888, 889, 914, 916, 993, 1004, 1044, 1069, 1108, 1120, 1122, 1127, 1128, 1130, 1131, 1132, 1136, 1182, 1183, 1196, 1202, 1203, 1206, 1207, 1211, 1212, 1227, 1248, 1252, 1265, 1267, 1268, 1288, 1365, 1367, 1368, 1369, 1373, 1391, 1392, 1393, 1428, 1438, 1467, 1608, 1618, 1633, 1642, 1643, 1646, 1647, 1648, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1676, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1745, 1818, 1819, 1822, 1863, 1868, 1869, 1870, 1873, 1877, 1878, 1881, 1885, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1907, 1910, 1914, 1916, 1917, 1918, 1919, 1921, 1925, 1926, 1928, 1930, 1934, 1935], "unmodifi": [0, 25, 41], "iter": [0, 1, 2, 3, 7, 16, 20, 27, 28, 39, 41, 42, 43, 45, 47, 59, 61, 63, 71, 982, 983, 984, 985, 986, 1015, 1018, 1020, 1041, 1196, 1268, 1428, 1429, 1430, 1438, 1439, 1608, 1609, 1612, 1613, 1614, 1616, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1649, 1651, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1692, 1703, 1773, 1815, 1867, 1869, 1870, 1881, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1897, 1900, 1910, 1913, 1918, 1928, 1934], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 11, 12, 14, 15, 16, 19, 20, 22, 25, 27, 28, 34, 35, 38, 39, 41, 42, 43, 46, 47, 49, 51, 55, 56, 57, 58, 59, 60, 63, 65, 67, 68, 69, 70, 71, 89, 151, 197, 472, 473, 511, 513, 515, 541, 554, 886, 887, 888, 889, 890, 894, 917, 952, 957, 961, 962, 986, 991, 997, 998, 1016, 1017, 1036, 1037, 1045, 1092, 1121, 1126, 1129, 1137, 1138, 1157, 1193, 1196, 1197, 1202, 1206, 1228, 1232, 1236, 1239, 1241, 1243, 1244, 1249, 1253, 1254, 1256, 1257, 1259, 1261, 1264, 1265, 1267, 1268, 1276, 1336, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1375, 1422, 1423, 1424, 1425, 1426, 1428, 1435, 1456, 1459, 1479, 1481, 1529, 1539, 1583, 1601, 1602, 1603, 1606, 1607, 1608, 1616, 1617, 1620, 1641, 1644, 1645, 1653, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1701, 1720, 1733, 1749, 1759, 1765, 1772, 1793, 1845, 1856, 1863, 1868, 1869, 1879, 1881, 1883, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1906, 1907, 1908, 1910, 1911, 1912, 1914, 1919, 1920, 1921, 1924, 1925, 1927, 1931], "five": [0, 1869, 1905], "entri": [0, 3, 12, 14, 20, 41, 42, 45, 47, 56, 58, 59, 315, 732, 855, 856, 914, 1012, 1013, 1059, 1110, 1111, 1170, 1196, 1216, 1371, 1372, 1428, 1434, 1518, 1519, 1604, 1605, 1626, 1627, 1635, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1793, 1866, 1869, 1870, 1876, 1884, 1889, 1893, 1894, 1897, 1900, 1917, 1923, 1928, 1932], "_growth_track": 0, "recent": [0, 1, 7, 8, 24, 28, 61, 70, 1171, 1181, 1789, 1868, 1869, 1884, 1894, 1903, 1904, 1923, 1930], "consecut": [0, 41, 607, 1643, 1685, 1835, 1846, 1847, 1883, 1907], "unskip": 0, "empti": [0, 3, 14, 15, 41, 43, 49, 56, 63, 68, 71, 321, 511, 513, 534, 542, 814, 920, 921, 931, 937, 1069, 1071, 1194, 1197, 1221, 1241, 1242, 1247, 1254, 1277, 1278, 1279, 1280, 1287, 1345, 1364, 1372, 1435, 1500, 1519, 1565, 1648, 1660, 1664, 1799, 1814, 1828, 1862, 1865, 1866, 1867, 1868, 1869, 1871, 1877, 1882, 1883, 1884, 1887, 1890, 1892, 1894, 1907, 1909, 1911, 1923, 1924, 1931], "wish": [0, 1132, 1805, 1888, 1892, 1894, 1895], "checkpoint": [0, 11, 45, 59, 61, 63, 913, 1267, 1608, 1863, 1864, 1878, 1896, 1912, 1921], "kwarg": [0, 1, 5, 12, 13, 27, 28, 32, 38, 41, 42, 45, 58, 63, 71, 577, 600, 744, 757, 759, 760, 818, 819, 821, 824, 887, 954, 973, 975, 1012, 1013, 1125, 1136, 1137, 1196, 1199, 1201, 1259, 1285, 1380, 1390, 1398, 1417, 1428, 1443, 1458, 1462, 1466, 1468, 1469, 1599, 1604, 1608, 1622, 1627, 1631, 1641, 1648, 1650, 1653, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1745, 1847, 1856, 1863, 1869, 1870, 1894, 1895, 1900, 1908, 1910, 1919, 1925, 1933, 1934], "carri": [0, 67, 336, 794, 835, 836, 854, 855, 1890, 1914], "out": [0, 1, 2, 3, 7, 8, 9, 14, 15, 16, 18, 19, 20, 21, 22, 27, 30, 33, 35, 38, 41, 43, 46, 47, 55, 56, 59, 64, 67, 71, 312, 314, 316, 318, 399, 401, 447, 494, 510, 512, 514, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 692, 693, 694, 695, 696, 753, 757, 761, 769, 770, 771, 776, 778, 782, 794, 833, 835, 836, 854, 855, 862, 863, 864, 865, 866, 867, 868, 869, 874, 878, 879, 880, 881, 882, 891, 892, 893, 896, 905, 918, 920, 921, 922, 923, 924, 925, 926, 927, 930, 934, 937, 939, 940, 941, 942, 943, 945, 946, 948, 950, 958, 959, 960, 962, 963, 965, 966, 969, 974, 982, 984, 986, 1013, 1014, 1026, 1027, 1039, 1043, 1048, 1049, 1050, 1051, 1053, 1056, 1061, 1062, 1064, 1065, 1066, 1068, 1069, 1070, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1122, 1123, 1126, 1127, 1129, 1130, 1132, 1137, 1138, 1139, 1140, 1141, 1142, 1150, 1151, 1152, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1168, 1169, 1170, 1171, 1173, 1174, 1190, 1191, 1196, 1207, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1266, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1313, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1328, 1329, 1330, 1331, 1332, 1333, 1337, 1338, 1339, 1341, 1342, 1343, 1349, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1366, 1367, 1368, 1369, 1371, 1373, 1376, 1377, 1380, 1381, 1396, 1397, 1398, 1413, 1415, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1440, 1441, 1443, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1471, 1472, 1473, 1474, 1475, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1513, 1514, 1515, 1520, 1523, 1527, 1538, 1544, 1563, 1565, 1596, 1608, 1625, 1626, 1627, 1628, 1654, 1655, 1656, 1657, 1659, 1660, 1684, 1701, 1702, 1706, 1707, 1708, 1710, 1713, 1714, 1720, 1721, 1722, 1724, 1726, 1728, 1729, 1732, 1733, 1734, 1738, 1742, 1743, 1744, 1746, 1747, 1748, 1749, 1765, 1766, 1767, 1779, 1780, 1781, 1782, 1787, 1791, 1792, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1812, 1814, 1825, 1826, 1827, 1830, 1832, 1834, 1837, 1838, 1840, 1842, 1843, 1849, 1851, 1852, 1853, 1856, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1867, 1869, 1876, 1879, 1881, 1883, 1884, 1889, 1890, 1892, 1893, 1894, 1895, 1900, 1902, 1907, 1910, 1911, 1914, 1915, 1917, 1919, 1920, 1921, 1924, 1926, 1928, 1929, 1933, 1934], "follow": [0, 1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 28, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 49, 55, 56, 57, 58, 59, 63, 65, 67, 68, 71, 83, 84, 486, 614, 677, 757, 776, 782, 789, 790, 791, 797, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 851, 858, 859, 886, 887, 888, 892, 910, 911, 934, 939, 953, 956, 1012, 1026, 1069, 1087, 1089, 1113, 1122, 1135, 1149, 1196, 1197, 1205, 1209, 1216, 1227, 1238, 1248, 1251, 1252, 1265, 1268, 1287, 1290, 1336, 1345, 1351, 1364, 1372, 1375, 1380, 1398, 1428, 1443, 1459, 1475, 1479, 1546, 1577, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1615, 1655, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1692, 1695, 1703, 1714, 1742, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1789, 1790, 1791, 1792, 1799, 1810, 1835, 1843, 1849, 1863, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1876, 1877, 1878, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1929, 1930, 1934, 1935], "two": [0, 1, 3, 4, 5, 6, 8, 11, 12, 14, 15, 19, 28, 30, 32, 33, 35, 38, 39, 41, 42, 43, 45, 47, 49, 55, 56, 58, 59, 63, 67, 68, 71, 580, 581, 582, 584, 585, 604, 614, 677, 689, 691, 757, 790, 884, 887, 900, 905, 938, 940, 979, 1018, 1020, 1048, 1049, 1057, 1066, 1069, 1075, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1115, 1116, 1125, 1135, 1157, 1159, 1185, 1194, 1196, 1206, 1209, 1216, 1219, 1221, 1226, 1228, 1231, 1232, 1237, 1238, 1243, 1248, 1251, 1252, 1254, 1255, 1257, 1259, 1264, 1267, 1290, 1293, 1296, 1298, 1301, 1325, 1342, 1344, 1345, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1375, 1380, 1388, 1389, 1395, 1397, 1398, 1419, 1420, 1422, 1428, 1431, 1432, 1433, 1435, 1436, 1442, 1443, 1459, 1460, 1475, 1476, 1477, 1479, 1499, 1500, 1510, 1529, 1539, 1546, 1562, 1570, 1577, 1615, 1620, 1642, 1652, 1654, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1691, 1695, 1714, 1729, 1742, 1794, 1799, 1814, 1830, 1834, 1835, 1837, 1853, 1857, 1863, 1865, 1866, 1868, 1869, 1873, 1875, 1876, 1882, 1883, 1884, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1919, 1920, 1921, 1923, 1924, 1928, 1929, 1930, 1932, 1933], "unscale_": [0, 1888], "unless": [0, 1, 4, 7, 14, 39, 41, 60, 63, 64, 71, 151, 497, 837, 855, 894, 921, 1125, 1196, 1239, 1244, 1257, 1267, 1296, 1382, 1428, 1475, 1603, 1631, 1650, 1678, 1684, 1749, 1849, 1869, 1875, 1889, 1892, 1904, 1907, 1911, 1915], "explicitli": [0, 8, 14, 32, 41, 46, 51, 63, 1006, 1057, 1059, 1069, 1158, 1236, 1249, 1253, 1261, 1303, 1538, 1596, 1695, 1810, 1866, 1868, 1869, 1870, 1875, 1892, 1894, 1897, 1899, 1905, 1907, 1911, 1912, 1918, 1919, 1923], "earlier": [0, 1, 6, 17, 1814, 1889, 1892, 1896, 1899, 1905, 1907, 1913], "part": [0, 1, 3, 4, 5, 6, 7, 9, 12, 15, 16, 17, 27, 28, 32, 33, 35, 38, 39, 41, 43, 47, 58, 59, 63, 67, 68, 71, 83, 84, 838, 904, 958, 1069, 1186, 1188, 1189, 1192, 1196, 1206, 1208, 1211, 1212, 1226, 1232, 1234, 1243, 1250, 1253, 1428, 1467, 1577, 1608, 1618, 1687, 1714, 1795, 1835, 1838, 1839, 1840, 1841, 1863, 1864, 1866, 1868, 1869, 1877, 1878, 1888, 1889, 1892, 1894, 1896, 1897, 1900, 1905, 1907, 1911, 1912, 1914, 1919, 1920, 1921, 1923, 1928, 1930], "check": [0, 4, 13, 14, 15, 16, 17, 20, 21, 22, 27, 28, 30, 32, 38, 41, 42, 47, 49, 58, 63, 222, 340, 497, 691, 858, 894, 896, 897, 905, 906, 952, 972, 973, 975, 979, 1008, 1026, 1183, 1193, 1196, 1211, 1212, 1225, 1226, 1231, 1232, 1234, 1237, 1239, 1244, 1250, 1253, 1257, 1259, 1260, 1285, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1428, 1599, 1608, 1617, 1620, 1633, 1643, 1665, 1666, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1863, 1864, 1868, 1869, 1870, 1882, 1883, 1888, 1892, 1894, 1895, 1896, 1899, 1900, 1901, 1904, 1907, 1910, 1911, 1912, 1913, 1919, 1923, 1928, 1930, 1934], "inf": [0, 28, 47, 63, 681, 683, 686, 687, 688, 882, 918, 934, 1185, 1186, 1188, 1190, 1191, 1227, 1242, 1248, 1252, 1255, 1265, 1276, 1322, 1418, 1461, 1471, 1577, 1612, 1626, 1635, 1655, 1742, 1749, 1888, 1889, 1895, 1903, 1924, 1930], "found": [0, 7, 12, 15, 19, 22, 24, 27, 33, 35, 58, 71, 84, 934, 969, 1048, 1049, 1196, 1200, 1217, 1293, 1296, 1298, 1301, 1324, 1340, 1350, 1373, 1428, 1455, 1749, 1863, 1866, 1869, 1884, 1888, 1894, 1897, 1900, 1902, 1907, 1911, 1913, 1914, 1919, 1928, 1934], "otherwis": [0, 1, 3, 5, 7, 9, 30, 32, 38, 41, 42, 48, 51, 63, 64, 68, 71, 89, 210, 321, 328, 332, 336, 338, 342, 343, 493, 502, 557, 577, 578, 580, 600, 614, 677, 683, 684, 685, 686, 687, 690, 692, 693, 694, 696, 732, 757, 765, 766, 781, 791, 814, 817, 818, 858, 859, 862, 889, 892, 900, 905, 918, 934, 1010, 1069, 1075, 1108, 1120, 1187, 1193, 1196, 1199, 1202, 1208, 1217, 1241, 1256, 1265, 1267, 1268, 1283, 1288, 1293, 1295, 1296, 1298, 1300, 1301, 1323, 1326, 1342, 1343, 1362, 1364, 1367, 1368, 1369, 1373, 1380, 1384, 1385, 1386, 1387, 1389, 1398, 1414, 1428, 1432, 1433, 1434, 1435, 1436, 1438, 1443, 1444, 1446, 1459, 1465, 1467, 1470, 1471, 1473, 1475, 1476, 1477, 1495, 1496, 1529, 1531, 1532, 1536, 1571, 1581, 1608, 1615, 1620, 1641, 1645, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1678, 1680, 1681, 1682, 1683, 1701, 1703, 1711, 1713, 1720, 1729, 1736, 1749, 1757, 1765, 1808, 1809, 1810, 1813, 1845, 1846, 1847, 1851, 1852, 1859, 1863, 1866, 1868, 1869, 1876, 1877, 1882, 1888, 1894, 1895, 1902, 1907, 1915, 1917, 1918, 1919, 1921, 1924, 1925, 1926, 1927, 1928, 1930, 1934], "skip": [0, 14, 17, 20, 58, 856, 952, 955, 1069, 1122, 1225, 1226, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1783, 1866, 1888, 1889, 1892, 1893, 1894, 1900, 1910, 1913], "avoid": [0, 5, 8, 9, 14, 15, 16, 17, 20, 38, 41, 47, 56, 59, 63, 71, 89, 192, 209, 447, 778, 862, 890, 931, 1026, 1196, 1241, 1267, 1363, 1394, 1395, 1419, 1428, 1437, 1442, 1479, 1509, 1539, 1563, 1570, 1608, 1616, 1684, 1735, 1764, 1810, 1828, 1846, 1864, 1879, 1883, 1889, 1891, 1892, 1896, 1897, 1900, 1912, 1919, 1920, 1927, 1928, 1929], "corrupt": [0, 41, 58, 1365, 1892, 1902], "param": [0, 1, 45, 47, 50, 58, 63, 65, 67, 71, 761, 792, 1125, 1135, 1196, 1214, 1428, 1434, 1438, 1439, 1607, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1684, 1697, 1738, 1867, 1877, 1887, 1888, 1892, 1893, 1910, 1934], "appli": [0, 1, 3, 5, 8, 11, 13, 17, 27, 39, 43, 45, 46, 47, 49, 51, 58, 63, 67, 68, 69, 71, 83, 84, 120, 321, 398, 471, 511, 515, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 732, 735, 736, 737, 738, 739, 740, 755, 757, 763, 764, 765, 766, 767, 768, 769, 770, 771, 777, 778, 779, 780, 781, 807, 808, 809, 810, 837, 855, 894, 896, 897, 905, 917, 923, 926, 952, 963, 1057, 1059, 1064, 1073, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1117, 1125, 1126, 1133, 1136, 1137, 1196, 1200, 1245, 1268, 1285, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1370, 1376, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1442, 1443, 1446, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1481, 1482, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1520, 1522, 1523, 1524, 1525, 1528, 1530, 1531, 1532, 1533, 1537, 1538, 1539, 1541, 1542, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1557, 1562, 1570, 1571, 1572, 1573, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1599, 1604, 1605, 1608, 1615, 1616, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1641, 1642, 1649, 1650, 1652, 1653, 1655, 1668, 1680, 1684, 1697, 1710, 1715, 1716, 1717, 1718, 1719, 1759, 1790, 1791, 1793, 1810, 1846, 1847, 1848, 1856, 1866, 1869, 1876, 1881, 1883, 1888, 1889, 1892, 1893, 1894, 1895, 1897, 1900, 1903, 1907, 1910, 1911, 1912, 1914, 1917, 1920, 1923, 1924], "argument": [0, 1, 3, 4, 5, 8, 9, 11, 15, 22, 27, 32, 35, 38, 41, 42, 43, 45, 47, 49, 56, 59, 61, 63, 67, 68, 70, 71, 89, 151, 197, 210, 313, 321, 444, 445, 446, 447, 448, 486, 511, 515, 557, 577, 578, 580, 581, 582, 584, 585, 600, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 692, 693, 694, 695, 696, 731, 735, 736, 737, 738, 739, 740, 790, 791, 796, 816, 817, 818, 821, 822, 823, 838, 854, 855, 858, 860, 862, 877, 878, 879, 880, 881, 882, 886, 887, 888, 889, 890, 894, 895, 896, 899, 901, 902, 903, 904, 905, 910, 911, 917, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 930, 934, 937, 939, 940, 941, 942, 943, 945, 947, 948, 952, 953, 954, 955, 956, 958, 962, 963, 965, 966, 968, 969, 991, 993, 997, 998, 1004, 1012, 1013, 1015, 1038, 1042, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1059, 1060, 1061, 1064, 1066, 1067, 1068, 1070, 1071, 1072, 1074, 1079, 1082, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1138, 1139, 1140, 1141, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1170, 1173, 1190, 1191, 1193, 1196, 1199, 1207, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1346, 1347, 1348, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1372, 1375, 1378, 1380, 1387, 1390, 1391, 1392, 1393, 1394, 1398, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1424, 1425, 1426, 1428, 1429, 1434, 1435, 1436, 1443, 1467, 1475, 1479, 1481, 1482, 1525, 1527, 1563, 1599, 1602, 1603, 1604, 1605, 1608, 1619, 1620, 1622, 1626, 1627, 1631, 1635, 1641, 1650, 1654, 1656, 1659, 1660, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1689, 1701, 1702, 1706, 1707, 1710, 1711, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1742, 1744, 1749, 1753, 1759, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1787, 1789, 1791, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1806, 1807, 1808, 1809, 1810, 1811, 1813, 1814, 1825, 1826, 1827, 1828, 1830, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1846, 1849, 1851, 1852, 1856, 1857, 1858, 1859, 1861, 1862, 1863, 1867, 1868, 1869, 1871, 1873, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1923, 1924, 1925, 1926, 1928, 1930, 1934, 1935], "keyword": [0, 1, 5, 38, 41, 42, 45, 63, 68, 71, 89, 313, 321, 444, 445, 446, 447, 448, 578, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 692, 693, 694, 695, 696, 858, 862, 877, 878, 879, 880, 881, 882, 918, 919, 920, 922, 923, 924, 925, 926, 927, 928, 930, 934, 937, 939, 941, 942, 943, 945, 947, 948, 958, 962, 963, 965, 966, 968, 969, 982, 984, 986, 1012, 1013, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1061, 1064, 1066, 1068, 1070, 1071, 1072, 1074, 1079, 1082, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1122, 1123, 1124, 1125, 1138, 1139, 1140, 1141, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1170, 1173, 1190, 1191, 1196, 1199, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1286, 1287, 1289, 1290, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1316, 1317, 1318, 1320, 1322, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1332, 1365, 1387, 1390, 1428, 1602, 1603, 1608, 1620, 1622, 1627, 1631, 1650, 1654, 1656, 1659, 1660, 1662, 1701, 1702, 1706, 1707, 1710, 1711, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1742, 1744, 1749, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1782, 1787, 1789, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1813, 1814, 1825, 1826, 1827, 1828, 1832, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1849, 1851, 1852, 1853, 1858, 1859, 1861, 1862, 1863, 1869, 1870, 1883, 1884, 1894, 1903, 1907, 1910, 1919, 1923, 1924, 1928, 1931, 1934], "closur": [0, 17, 45, 952, 1673, 1678, 1684], "divid": [0, 5, 39, 41, 45, 238, 580, 581, 582, 986, 1064, 1067, 1087, 1105, 1114, 1158, 1159, 1206, 1344, 1345, 1351, 1352, 1362, 1388, 1389, 1395, 1419, 1420, 1431, 1432, 1433, 1442, 1459, 1460, 1476, 1477, 1499, 1500, 1510, 1511, 1539, 1562, 1570, 1608, 1814, 1857, 1867, 1909], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 23, 28, 32, 33, 38, 39, 41, 42, 43, 45, 46, 47, 50, 51, 56, 58, 59, 61, 63, 65, 66, 68, 71, 151, 254, 470, 493, 497, 580, 677, 731, 732, 816, 817, 818, 821, 822, 823, 838, 855, 886, 890, 894, 895, 904, 931, 932, 940, 957, 1006, 1015, 1022, 1057, 1059, 1069, 1090, 1092, 1112, 1125, 1196, 1289, 1318, 1364, 1371, 1424, 1425, 1426, 1428, 1434, 1471, 1473, 1475, 1502, 1503, 1504, 1595, 1608, 1620, 1622, 1626, 1628, 1656, 1684, 1730, 1735, 1749, 1807, 1835, 1864, 1866, 1868, 1869, 1876, 1877, 1881, 1883, 1884, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1921, 1923, 1925, 1926, 1930, 1931, 1933, 1934], "modifi": [0, 1, 13, 14, 15, 16, 23, 25, 28, 35, 38, 39, 41, 42, 43, 45, 63, 71, 260, 486, 788, 835, 836, 837, 894, 896, 897, 910, 911, 952, 961, 962, 1149, 1193, 1196, 1199, 1200, 1215, 1371, 1428, 1471, 1473, 1475, 1518, 1519, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1612, 1613, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1687, 1695, 1777, 1866, 1869, 1882, 1888, 1892, 1894, 1895, 1900, 1905, 1911, 1912, 1914, 1919, 1924, 1927, 1929, 1933], "inspect": [0, 1, 16, 19, 22, 41, 63, 71, 913, 1196, 1207, 1888, 1894, 1899, 1911, 1915, 1926, 1934], "between": [0, 1, 2, 3, 7, 11, 16, 17, 18, 20, 28, 34, 35, 39, 41, 47, 48, 58, 59, 60, 63, 70, 71, 197, 511, 580, 581, 582, 584, 585, 604, 614, 686, 687, 688, 692, 693, 757, 769, 770, 771, 799, 854, 862, 881, 890, 892, 899, 901, 902, 903, 905, 906, 938, 950, 968, 972, 979, 981, 1028, 1032, 1046, 1047, 1052, 1069, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1120, 1149, 1156, 1193, 1196, 1207, 1231, 1232, 1254, 1259, 1325, 1344, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1364, 1367, 1368, 1369, 1373, 1375, 1380, 1389, 1395, 1404, 1405, 1406, 1407, 1408, 1409, 1419, 1421, 1422, 1423, 1428, 1431, 1432, 1433, 1437, 1456, 1459, 1460, 1461, 1476, 1477, 1479, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1526, 1551, 1552, 1553, 1567, 1583, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1688, 1689, 1695, 1697, 1706, 1714, 1718, 1719, 1724, 1725, 1729, 1754, 1807, 1808, 1809, 1810, 1814, 1834, 1835, 1851, 1852, 1866, 1868, 1869, 1870, 1876, 1881, 1884, 1888, 1889, 1891, 1892, 1893, 1897, 1898, 1900, 1902, 1904, 1905, 1907, 1910, 1912, 1914, 1915, 1919, 1921, 1923, 1925, 1928, 1932], "dure": [0, 1, 5, 11, 12, 16, 19, 20, 24, 27, 28, 32, 35, 39, 41, 43, 49, 50, 52, 58, 63, 70, 71, 84, 335, 501, 502, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 790, 824, 886, 887, 896, 1014, 1015, 1027, 1028, 1047, 1206, 1208, 1209, 1211, 1267, 1340, 1346, 1347, 1348, 1365, 1366, 1371, 1372, 1391, 1392, 1393, 1446, 1467, 1473, 1475, 1512, 1518, 1519, 1599, 1608, 1610, 1611, 1648, 1662, 1665, 1698, 1795, 1839, 1841, 1868, 1876, 1877, 1879, 1882, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1903, 1904, 1907, 1911, 1913, 1914, 1917, 1919, 1921, 1930], "simpl": [0, 15, 19, 20, 33, 35, 39, 51, 58, 67, 69, 71, 968, 1026, 1127, 1135, 1136, 1137, 1196, 1200, 1207, 1346, 1347, 1348, 1371, 1401, 1402, 1403, 1428, 1467, 1518, 1663, 1770, 1856, 1863, 1866, 1870, 1884, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1907, 1911, 1919, 1923], "clip": [0, 63, 964, 1612, 1613, 1867, 1895, 1907, 1909], "util": [0, 7, 14, 16, 21, 28, 34, 59, 63, 64, 70, 71, 729, 732, 735, 736, 737, 742, 743, 753, 757, 761, 787, 795, 986, 1120, 1196, 1380, 1398, 1428, 1443, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1617, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1641, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1689, 1695, 1818, 1819, 1820, 1821, 1822, 1864, 1869, 1879, 1888, 1890, 1891, 1892, 1894, 1896, 1897, 1899, 1900, 1907, 1910, 1911, 1912], "clip_grad_norm_": [0, 63, 1888], "max_norm": [0, 63, 742, 743, 1371, 1372, 1518, 1519, 1612, 1867, 1888], "own": [0, 7, 9, 15, 19, 41, 42, 45, 47, 50, 58, 60, 63, 71, 677, 1004, 1103, 1122, 1158, 1196, 1267, 1356, 1357, 1358, 1359, 1360, 1361, 1428, 1617, 1620, 1869, 1885, 1888, 1892, 1911, 1914, 1915, 1919, 1921, 1923], "onc": [0, 1, 7, 9, 11, 13, 16, 20, 22, 24, 33, 38, 39, 41, 42, 43, 45, 47, 48, 50, 51, 58, 63, 66, 68, 70, 71, 83, 894, 895, 896, 898, 900, 1069, 1196, 1200, 1267, 1365, 1428, 1608, 1618, 1620, 1693, 1697, 1713, 1760, 1764, 1866, 1869, 1877, 1879, 1881, 1888, 1889, 1891, 1892, 1894, 1897, 1899, 1900, 1910, 1911, 1928], "all": [0, 1, 2, 3, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 19, 20, 23, 24, 26, 27, 28, 30, 32, 33, 35, 38, 39, 41, 42, 43, 45, 47, 49, 51, 55, 56, 57, 58, 59, 60, 61, 63, 66, 68, 69, 70, 71, 76, 89, 151, 260, 313, 315, 321, 335, 485, 511, 513, 515, 543, 557, 604, 607, 614, 677, 683, 684, 689, 691, 695, 696, 732, 757, 788, 790, 791, 811, 837, 851, 855, 858, 871, 874, 886, 887, 888, 890, 891, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 914, 915, 916, 920, 929, 931, 936, 937, 941, 944, 945, 949, 952, 957, 967, 972, 973, 975, 976, 984, 985, 994, 1002, 1006, 1012, 1016, 1017, 1025, 1026, 1033, 1034, 1036, 1037, 1041, 1043, 1045, 1086, 1087, 1088, 1089, 1092, 1095, 1096, 1099, 1102, 1104, 1106, 1122, 1125, 1126, 1132, 1133, 1135, 1136, 1138, 1158, 1161, 1192, 1193, 1196, 1203, 1206, 1207, 1210, 1211, 1231, 1258, 1267, 1283, 1285, 1293, 1295, 1298, 1306, 1315, 1323, 1324, 1325, 1326, 1336, 1343, 1345, 1349, 1351, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1371, 1372, 1375, 1380, 1381, 1382, 1383, 1388, 1394, 1395, 1398, 1399, 1415, 1419, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1443, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1467, 1471, 1473, 1475, 1476, 1479, 1484, 1485, 1492, 1498, 1500, 1518, 1519, 1524, 1529, 1548, 1549, 1577, 1583, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1612, 1615, 1620, 1627, 1631, 1641, 1645, 1653, 1654, 1655, 1656, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1689, 1692, 1693, 1696, 1697, 1698, 1699, 1711, 1789, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1807, 1808, 1809, 1810, 1813, 1829, 1831, 1838, 1839, 1840, 1841, 1844, 1847, 1851, 1852, 1854, 1858, 1863, 1866, 1867, 1868, 1869, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1902, 1903, 1904, 1905, 1906, 1908, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934], "assign": [0, 1, 7, 9, 10, 38, 41, 49, 58, 59, 68, 71, 677, 835, 836, 837, 1194, 1197, 1336, 1364, 1428, 1435, 1438, 1439, 1609, 1620, 1866, 1870, 1888, 1894, 1895, 1896, 1907, 1914, 1920, 1921, 1927, 1928], "been": [0, 1, 5, 9, 11, 12, 16, 23, 28, 30, 38, 39, 41, 42, 45, 46, 47, 49, 51, 58, 61, 63, 66, 67, 71, 677, 757, 894, 973, 975, 980, 1008, 1011, 1068, 1073, 1126, 1199, 1200, 1205, 1210, 1267, 1380, 1387, 1398, 1443, 1492, 1527, 1608, 1617, 1622, 1626, 1628, 1648, 1649, 1662, 1667, 1687, 1688, 1689, 1695, 1697, 1713, 1810, 1858, 1875, 1879, 1881, 1882, 1883, 1888, 1889, 1891, 1892, 1897, 1898, 1900, 1902, 1904, 1906, 1907, 1910, 1911, 1919, 1921, 1923, 1928], "accumul": [0, 1, 2, 14, 16, 28, 63, 151, 290, 313, 318, 319, 321, 470, 683, 890, 904, 1265, 1608, 1668, 1669, 1849, 1866, 1867, 1879, 1889, 1892, 1893, 1896, 1903, 1910, 1915, 1919, 1920, 1923], "twice": [0, 15, 70, 614, 899, 1133, 1888, 1889, 1896, 1897], "given": [0, 1, 2, 3, 7, 9, 15, 16, 18, 20, 27, 28, 32, 38, 39, 41, 42, 43, 45, 46, 47, 49, 56, 58, 60, 63, 69, 70, 71, 76, 151, 220, 313, 315, 317, 321, 326, 377, 398, 402, 471, 472, 473, 474, 475, 477, 511, 513, 515, 581, 582, 601, 604, 677, 690, 692, 693, 695, 696, 732, 757, 776, 782, 789, 790, 791, 792, 796, 797, 799, 817, 821, 834, 837, 851, 855, 862, 873, 886, 888, 890, 892, 894, 896, 898, 899, 900, 901, 902, 903, 906, 920, 921, 924, 932, 936, 937, 943, 944, 949, 950, 962, 964, 967, 968, 969, 972, 973, 975, 976, 977, 981, 989, 990, 993, 997, 998, 1014, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1044, 1045, 1046, 1047, 1054, 1056, 1061, 1069, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1109, 1125, 1135, 1136, 1162, 1193, 1196, 1203, 1211, 1212, 1217, 1221, 1231, 1233, 1234, 1243, 1245, 1251, 1259, 1268, 1275, 1277, 1278, 1279, 1280, 1283, 1293, 1295, 1297, 1298, 1301, 1326, 1336, 1344, 1345, 1351, 1356, 1357, 1358, 1360, 1361, 1362, 1364, 1365, 1371, 1372, 1376, 1377, 1380, 1388, 1398, 1420, 1424, 1425, 1426, 1428, 1430, 1432, 1433, 1435, 1437, 1439, 1443, 1456, 1462, 1476, 1477, 1480, 1481, 1482, 1492, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1518, 1519, 1522, 1523, 1527, 1538, 1562, 1577, 1592, 1596, 1597, 1598, 1602, 1603, 1604, 1616, 1641, 1648, 1649, 1652, 1655, 1656, 1665, 1691, 1694, 1696, 1698, 1701, 1706, 1711, 1714, 1715, 1716, 1729, 1735, 1740, 1751, 1752, 1783, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1810, 1813, 1815, 1824, 1825, 1830, 1832, 1834, 1844, 1849, 1863, 1864, 1866, 1869, 1873, 1875, 1876, 1878, 1881, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1904, 1905, 1907, 1910, 1913, 1914, 1919, 1920, 1923, 1924, 1925, 1928, 1930, 1933, 1934], "trigger": [0, 7, 9, 11, 13, 16, 23, 24, 28, 41, 58, 63, 70, 222, 1043, 1762, 1888, 1892, 1893, 1899, 1905, 1919], "runtimeerror": [0, 1, 32, 41, 45, 68, 71, 89, 580, 694, 894, 931, 1117, 1171, 1181, 1196, 1225, 1226, 1227, 1235, 1236, 1237, 1239, 1243, 1249, 1256, 1261, 1262, 1288, 1318, 1428, 1664, 1751, 1789, 1849, 1866, 1868, 1869, 1882, 1884, 1888, 1890, 1896, 1904, 1906, 1907, 1914, 1918, 1923, 1926], "spars": [0, 1, 14, 30, 191, 192, 209, 219, 222, 323, 328, 342, 343, 434, 540, 541, 542, 543, 578, 580, 581, 582, 583, 584, 585, 611, 686, 742, 743, 905, 906, 1043, 1138, 1160, 1181, 1268, 1290, 1300, 1328, 1371, 1372, 1461, 1518, 1519, 1544, 1684, 1703, 1751, 1785, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1806, 1815, 1834, 1849, 1864, 1867, 1871, 1876, 1887, 1903, 1904, 1909, 1916, 1926, 1927, 1930], "place": [0, 3, 7, 14, 15, 20, 24, 26, 27, 30, 38, 39, 41, 43, 48, 49, 63, 66, 67, 71, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 122, 124, 126, 128, 131, 132, 134, 142, 144, 147, 148, 150, 153, 159, 161, 163, 165, 167, 169, 178, 187, 195, 199, 202, 204, 214, 216, 222, 223, 232, 236, 238, 244, 247, 249, 251, 253, 254, 257, 260, 262, 269, 271, 273, 277, 279, 283, 285, 292, 294, 296, 304, 306, 308, 310, 312, 314, 316, 318, 356, 358, 360, 362, 364, 366, 368, 371, 373, 375, 376, 383, 385, 387, 389, 391, 395, 399, 401, 419, 422, 425, 427, 438, 440, 442, 450, 455, 465, 468, 484, 486, 488, 490, 494, 497, 506, 509, 510, 512, 514, 520, 524, 526, 529, 531, 533, 546, 548, 550, 559, 561, 568, 572, 574, 590, 593, 595, 597, 599, 600, 609, 619, 755, 790, 794, 811, 835, 836, 854, 855, 894, 896, 910, 911, 932, 982, 983, 985, 986, 1006, 1069, 1120, 1125, 1126, 1134, 1196, 1240, 1258, 1318, 1340, 1350, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1385, 1386, 1387, 1414, 1428, 1445, 1446, 1447, 1448, 1455, 1470, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1520, 1531, 1534, 1543, 1574, 1576, 1591, 1595, 1599, 1604, 1605, 1608, 1612, 1613, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1650, 1684, 1740, 1742, 1746, 1747, 1748, 1794, 1830, 1864, 1866, 1868, 1869, 1876, 1883, 1888, 1892, 1894, 1899, 1910, 1911, 1912, 1919, 1920, 1925, 1927, 1929], "replac": [0, 1, 12, 14, 19, 27, 32, 38, 39, 41, 43, 57, 59, 63, 65, 66, 67, 68, 69, 71, 83, 120, 420, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 744, 811, 836, 855, 941, 1015, 1069, 1125, 1126, 1201, 1203, 1213, 1285, 1286, 1318, 1322, 1459, 1470, 1599, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1650, 1652, 1713, 1810, 1814, 1837, 1866, 1867, 1869, 1877, 1892, 1895, 1897, 1899, 1902, 1906, 1907, 1909, 1911, 1914, 1930], "were": [0, 1, 2, 3, 11, 15, 16, 23, 27, 28, 35, 41, 49, 58, 61, 63, 68, 70, 71, 151, 321, 335, 470, 851, 886, 888, 890, 904, 1015, 1126, 1137, 1203, 1267, 1492, 1608, 1612, 1617, 1627, 1644, 1680, 1749, 1753, 1824, 1831, 1856, 1868, 1876, 1888, 1892, 1894, 1905, 1907, 1911], "reduc": [0, 2, 3, 11, 14, 16, 18, 23, 28, 32, 39, 41, 42, 43, 45, 63, 321, 511, 514, 515, 683, 690, 692, 693, 694, 696, 816, 817, 818, 819, 822, 824, 871, 872, 950, 983, 994, 1026, 1169, 1248, 1252, 1254, 1259, 1265, 1283, 1293, 1295, 1296, 1298, 1301, 1323, 1324, 1325, 1326, 1344, 1345, 1346, 1347, 1348, 1362, 1364, 1372, 1388, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1467, 1476, 1499, 1500, 1508, 1510, 1519, 1535, 1538, 1539, 1540, 1550, 1558, 1559, 1560, 1561, 1562, 1563, 1570, 1581, 1582, 1593, 1596, 1608, 1616, 1653, 1673, 1697, 1711, 1713, 1714, 1748, 1791, 1795, 1808, 1809, 1813, 1814, 1835, 1849, 1851, 1852, 1865, 1867, 1881, 1882, 1889, 1891, 1893, 1894, 1900, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1914, 1923, 1934], "occur": [0, 14, 16, 19, 23, 28, 30, 38, 41, 51, 52, 58, 63, 68, 83, 197, 315, 1029, 1069, 1193, 1199, 1209, 1239, 1351, 1467, 1511, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1868, 1879, 1883, 1888, 1889, 1892, 1896, 1903, 1907, 1913, 1919, 1921, 1927, 1930, 1934], "increas": [0, 1, 3, 7, 11, 16, 22, 39, 41, 47, 55, 63, 677, 851, 895, 934, 994, 1026, 1069, 1157, 1158, 1336, 1345, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1440, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1568, 1569, 1577, 1682, 1688, 1689, 1693, 1695, 1697, 1749, 1757, 1835, 1850, 1867, 1875, 1891, 1892, 1898, 1915, 1923], "set": [0, 1, 2, 3, 5, 8, 9, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 27, 28, 31, 32, 37, 38, 39, 41, 42, 43, 45, 47, 49, 51, 56, 58, 59, 60, 61, 63, 66, 67, 70, 71, 89, 151, 155, 254, 330, 444, 445, 446, 447, 448, 457, 494, 518, 577, 578, 677, 732, 738, 740, 757, 776, 782, 789, 790, 791, 794, 812, 813, 814, 817, 818, 819, 822, 823, 838, 851, 855, 856, 858, 859, 862, 875, 887, 889, 890, 897, 898, 899, 900, 901, 902, 903, 904, 917, 929, 934, 945, 949, 950, 955, 962, 980, 995, 1004, 1016, 1017, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1070, 1072, 1125, 1134, 1143, 1158, 1176, 1177, 1196, 1200, 1203, 1205, 1207, 1209, 1211, 1212, 1231, 1232, 1235, 1241, 1248, 1250, 1252, 1253, 1265, 1266, 1267, 1268, 1282, 1285, 1288, 1308, 1312, 1313, 1314, 1336, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1373, 1380, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1413, 1415, 1419, 1420, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1438, 1442, 1443, 1459, 1460, 1467, 1476, 1477, 1492, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1512, 1513, 1514, 1515, 1520, 1527, 1531, 1538, 1539, 1548, 1549, 1562, 1564, 1570, 1577, 1596, 1608, 1610, 1611, 1616, 1621, 1650, 1662, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1699, 1713, 1720, 1722, 1726, 1728, 1729, 1737, 1738, 1749, 1750, 1753, 1754, 1755, 1756, 1757, 1759, 1760, 1761, 1762, 1763, 1764, 1779, 1794, 1808, 1809, 1828, 1838, 1839, 1840, 1841, 1849, 1851, 1852, 1863, 1865, 1866, 1868, 1869, 1870, 1873, 1875, 1877, 1878, 1879, 1881, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1928, 1930, 1932, 1933, 1934], "directli": [0, 1, 3, 7, 9, 14, 15, 16, 19, 22, 27, 28, 32, 33, 38, 39, 41, 43, 47, 48, 49, 57, 63, 67, 71, 554, 729, 744, 887, 896, 952, 1052, 1120, 1126, 1133, 1135, 1141, 1226, 1434, 1461, 1480, 1538, 1583, 1642, 1835, 1866, 1868, 1869, 1879, 1889, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1905, 1911, 1913, 1914, 1919, 1923, 1928, 1930], "fill": [0, 15, 20, 41, 155, 174, 258, 259, 260, 286, 317, 321, 377, 400, 444, 445, 446, 448, 453, 480, 605, 620, 921, 1057, 1070, 1072, 1123, 1124, 1226, 1237, 1239, 1372, 1471, 1519, 1565, 1659, 1660, 1722, 1723, 1724, 1725, 1726, 1727, 1814, 1861, 1862, 1865, 1867, 1873, 1883, 1884, 1887, 1892, 1894, 1905, 1909, 1923, 1930], "later": [0, 1, 3, 7, 20, 23, 37, 39, 41, 63, 70, 71, 742, 743, 753, 761, 913, 1004, 1267, 1398, 1421, 1422, 1423, 1443, 1457, 1551, 1552, 1553, 1580, 1608, 1814, 1866, 1889, 1891, 1892, 1893, 1900, 1905, 1920, 1921], "chang": [0, 1, 2, 3, 7, 11, 14, 15, 17, 19, 20, 21, 23, 24, 28, 30, 35, 39, 41, 43, 45, 46, 47, 49, 57, 63, 64, 67, 68, 70, 71, 140, 222, 254, 321, 457, 494, 497, 515, 518, 553, 614, 677, 816, 874, 905, 906, 961, 962, 969, 970, 971, 980, 991, 993, 1004, 1005, 1012, 1013, 1015, 1057, 1105, 1125, 1143, 1149, 1170, 1193, 1196, 1206, 1207, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1297, 1368, 1371, 1389, 1398, 1428, 1459, 1480, 1492, 1527, 1551, 1552, 1553, 1577, 1599, 1600, 1608, 1610, 1611, 1617, 1620, 1621, 1650, 1654, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1689, 1692, 1693, 1695, 1697, 1699, 1713, 1753, 1757, 1794, 1805, 1808, 1809, 1810, 1834, 1851, 1852, 1863, 1864, 1866, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1897, 1898, 1900, 1903, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1931, 1932, 1933], "further": [0, 1, 4, 9, 14, 28, 32, 39, 41, 63, 70, 1141, 1200, 1235, 1336, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1608, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1701, 1865, 1869, 1876, 1900, 1902, 1911, 1913, 1921, 1928, 1933], "floattensor": [0, 41, 321, 486, 683, 684, 685, 686, 687, 732, 905, 906, 918, 1143, 1371, 1372, 1431, 1471, 1755, 1926, 1929], "end": [0, 7, 8, 9, 11, 15, 28, 38, 39, 41, 47, 51, 55, 66, 71, 361, 362, 535, 757, 781, 794, 817, 818, 862, 919, 963, 970, 1030, 1059, 1069, 1108, 1122, 1149, 1155, 1156, 1193, 1196, 1216, 1221, 1251, 1261, 1263, 1266, 1268, 1282, 1327, 1328, 1343, 1344, 1345, 1362, 1364, 1370, 1374, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1395, 1398, 1399, 1414, 1419, 1422, 1423, 1428, 1430, 1435, 1436, 1439, 1443, 1446, 1456, 1459, 1465, 1470, 1477, 1510, 1519, 1531, 1532, 1608, 1615, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1687, 1692, 1729, 1762, 1765, 1768, 1783, 1835, 1846, 1847, 1859, 1865, 1866, 1867, 1868, 1869, 1881, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1903, 1906, 1907, 1910, 1913, 1914, 1917, 1919, 1924], "reason": [0, 3, 8, 9, 12, 14, 15, 16, 20, 22, 28, 38, 41, 43, 63, 68, 677, 838, 1090, 1092, 1196, 1211, 1212, 1231, 1232, 1259, 1296, 1344, 1368, 1428, 1529, 1577, 1604, 1605, 1620, 1745, 1866, 1868, 1869, 1875, 1889, 1893, 1895, 1903, 1905, 1907, 1919, 1926, 1934], "do": [0, 1, 4, 7, 8, 9, 11, 14, 15, 17, 20, 21, 23, 24, 26, 27, 28, 30, 32, 33, 38, 39, 41, 45, 46, 48, 49, 51, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 493, 511, 513, 515, 755, 820, 823, 860, 889, 891, 896, 905, 936, 949, 1015, 1048, 1049, 1050, 1051, 1120, 1122, 1131, 1138, 1158, 1171, 1183, 1193, 1199, 1207, 1211, 1241, 1259, 1268, 1275, 1285, 1287, 1296, 1318, 1328, 1340, 1350, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1385, 1386, 1387, 1414, 1446, 1447, 1448, 1455, 1470, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1529, 1531, 1546, 1599, 1608, 1656, 1664, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1701, 1707, 1849, 1863, 1864, 1866, 1867, 1869, 1871, 1873, 1881, 1882, 1883, 1888, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1913, 1914, 1915, 1919, 1921, 1924, 1925, 1926, 1927, 1928, 1930], "synchron": [0, 3, 4, 16, 34, 35, 39, 43, 45, 49, 58, 63, 70, 874, 972, 973, 975, 983, 1003, 1043, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1243, 1244, 1250, 1253, 1256, 1257, 1259, 1260, 1268, 1467, 1608, 1654, 1656, 1735, 1864, 1891, 1892, 1893, 1898, 1902, 1912, 1919], "fall": [0, 2, 7, 32, 38, 792, 905, 1158, 1209, 1267, 1389, 1459, 1536, 1581, 1612, 1613, 1863, 1907, 1914], "below": [0, 1, 5, 9, 12, 14, 16, 17, 19, 20, 21, 22, 23, 28, 32, 38, 39, 41, 47, 49, 50, 55, 58, 59, 60, 61, 71, 677, 731, 745, 754, 792, 811, 1012, 1056, 1057, 1058, 1059, 1060, 1069, 1097, 1099, 1103, 1141, 1149, 1196, 1212, 1252, 1253, 1258, 1265, 1297, 1359, 1360, 1361, 1380, 1382, 1389, 1398, 1400, 1424, 1425, 1426, 1428, 1443, 1459, 1480, 1510, 1536, 1581, 1608, 1620, 1654, 1684, 1754, 1794, 1825, 1835, 1838, 1839, 1840, 1841, 1866, 1868, 1869, 1871, 1875, 1876, 1881, 1882, 1888, 1889, 1892, 1893, 1894, 1897, 1898, 1900, 1902, 1904, 1905, 1907, 1910, 1911, 1912, 1914, 1916, 1919, 1920, 1921, 1924, 1927, 1930], "someth": [0, 3, 7, 12, 14, 16, 19, 20, 27, 28, 65, 71, 898, 900, 1069, 1196, 1211, 1428, 1871, 1879, 1881, 1882, 1889, 1898, 1906, 1907, 1919, 1934], "wrong": [0, 19, 41, 71, 894, 1194, 1197, 1893, 1902, 1906, 1907, 1910], "incompat": [0, 9, 32, 68, 931, 1193, 1890, 1911], "due": [0, 3, 4, 5, 7, 16, 20, 23, 28, 39, 41, 47, 57, 63, 68, 71, 485, 877, 898, 899, 904, 964, 1208, 1231, 1232, 1259, 1285, 1368, 1382, 1471, 1480, 1538, 1577, 1648, 1662, 1684, 1815, 1866, 1884, 1892, 1893, 1897, 1898, 1904, 1907, 1914, 1915, 1919, 1921], "float64": [0, 30, 240, 445, 448, 577, 877, 958, 1112, 1121, 1143, 1178, 1196, 1225, 1231, 1232, 1234, 1236, 1252, 1428, 1577, 1670, 1671, 1707, 1715, 1754, 1755, 1758, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1854, 1859, 1900, 1903, 1923, 1925, 1926, 1929, 1930, 1935], "variant": [0, 5, 23, 27, 39, 855, 1226, 1237, 1250, 1253, 1325, 1328, 1670, 1671, 1672, 1684, 1837, 1864, 1865, 1899, 1917, 1929], "suppli": [0, 5, 7, 16, 28, 32, 33, 41, 1004, 1434, 1666, 1869, 1892, 1923], "won": [0, 8, 15, 16, 20, 28, 39, 43, 58, 66, 457, 1196, 1207, 1428, 1563, 1602, 1603, 1863, 1889, 1894, 1919, 1931], "go": [0, 1, 7, 12, 14, 15, 16, 20, 21, 33, 38, 41, 55, 60, 67, 71, 497, 498, 557, 895, 910, 1268, 1341, 1342, 1343, 1421, 1422, 1423, 1868, 1869, 1876, 1881, 1882, 1883, 1889, 1891, 1892, 1894, 1895, 1899, 1900, 1902, 1906, 1907, 1911, 1926, 1928], "addmm": [0, 27, 107, 1806, 1865, 1867, 1882, 1903, 1909, 1923], "b": [0, 1, 3, 12, 13, 16, 19, 20, 27, 28, 30, 38, 41, 43, 47, 56, 71, 260, 335, 398, 614, 682, 683, 745, 754, 778, 821, 877, 894, 896, 897, 908, 910, 911, 918, 929, 930, 932, 936, 938, 940, 943, 948, 963, 969, 1012, 1013, 1061, 1064, 1068, 1069, 1114, 1115, 1116, 1117, 1122, 1126, 1139, 1161, 1173, 1193, 1199, 1206, 1207, 1215, 1216, 1218, 1227, 1228, 1236, 1240, 1241, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1256, 1257, 1258, 1261, 1262, 1265, 1268, 1277, 1279, 1280, 1286, 1294, 1299, 1301, 1317, 1345, 1349, 1371, 1372, 1379, 1415, 1498, 1500, 1519, 1526, 1544, 1615, 1642, 1643, 1644, 1645, 1646, 1647, 1655, 1662, 1681, 1683, 1714, 1720, 1733, 1736, 1752, 1764, 1783, 1791, 1796, 1797, 1798, 1800, 1801, 1805, 1810, 1811, 1813, 1820, 1821, 1830, 1837, 1838, 1840, 1853, 1858, 1865, 1866, 1867, 1868, 1869, 1882, 1883, 1884, 1887, 1888, 1890, 1892, 1896, 1897, 1898, 1903, 1905, 1913, 1914, 1920, 1921, 1923, 1924, 1927, 1928, 1933], "c": [0, 1, 3, 8, 9, 14, 15, 16, 19, 20, 25, 27, 28, 32, 38, 41, 47, 56, 66, 71, 260, 335, 497, 518, 614, 682, 818, 874, 877, 896, 929, 940, 943, 964, 1006, 1012, 1046, 1061, 1064, 1069, 1115, 1116, 1117, 1126, 1127, 1131, 1136, 1139, 1149, 1196, 1206, 1218, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1251, 1252, 1254, 1256, 1258, 1259, 1317, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1364, 1367, 1368, 1369, 1373, 1375, 1376, 1377, 1383, 1391, 1392, 1393, 1396, 1397, 1399, 1400, 1410, 1411, 1412, 1416, 1421, 1422, 1423, 1424, 1425, 1426, 1431, 1432, 1433, 1435, 1440, 1441, 1449, 1450, 1451, 1452, 1453, 1454, 1462, 1467, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1500, 1510, 1511, 1523, 1527, 1562, 1568, 1569, 1577, 1615, 1643, 1645, 1646, 1647, 1654, 1655, 1701, 1717, 1733, 1771, 1791, 1805, 1810, 1830, 1847, 1864, 1865, 1866, 1867, 1868, 1869, 1873, 1882, 1883, 1891, 1892, 1893, 1895, 1897, 1899, 1906, 1908, 1911, 1920, 1921, 1923, 1924, 1927, 1928, 1934], "addmm_": [0, 1867, 1882, 1923], "d": [0, 1, 15, 16, 19, 28, 30, 38, 39, 41, 46, 47, 64, 71, 313, 321, 335, 470, 511, 513, 515, 541, 580, 614, 683, 687, 862, 877, 896, 918, 919, 921, 928, 929, 930, 934, 940, 1056, 1058, 1068, 1069, 1082, 1086, 1087, 1088, 1089, 1094, 1095, 1098, 1099, 1104, 1105, 1106, 1109, 1110, 1111, 1137, 1138, 1153, 1154, 1161, 1170, 1193, 1197, 1201, 1238, 1239, 1289, 1300, 1320, 1335, 1343, 1344, 1348, 1358, 1362, 1363, 1367, 1368, 1369, 1371, 1373, 1375, 1380, 1382, 1393, 1398, 1400, 1412, 1423, 1437, 1443, 1467, 1476, 1477, 1479, 1492, 1527, 1538, 1544, 1571, 1595, 1596, 1616, 1649, 1654, 1655, 1682, 1702, 1720, 1729, 1741, 1749, 1754, 1805, 1810, 1823, 1824, 1830, 1833, 1838, 1839, 1840, 1841, 1850, 1856, 1858, 1863, 1867, 1876, 1882, 1883, 1884, 1887, 1889, 1892, 1894, 1895, 1897, 1898, 1905, 1907, 1919, 1920, 1923, 1924, 1928, 1929], "best": [0, 1, 7, 16, 18, 22, 25, 33, 35, 38, 41, 47, 59, 63, 66, 858, 859, 914, 937, 950, 1211, 1212, 1241, 1434, 1684, 1697, 1864, 1866, 1868, 1881, 1887, 1888, 1889, 1894, 1896, 1911, 1919, 1923], "stabil": [0, 16, 28, 1227, 1283, 1345, 1346, 1347, 1348, 1382, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1464, 1467, 1524, 1585, 1616, 1649, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1717, 1895], "respect": [0, 1, 5, 8, 15, 22, 41, 42, 45, 47, 56, 58, 63, 69, 70, 71, 197, 210, 486, 577, 600, 686, 687, 688, 757, 792, 816, 838, 882, 888, 890, 904, 906, 910, 911, 945, 968, 1057, 1059, 1060, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1136, 1149, 1196, 1227, 1231, 1232, 1241, 1251, 1254, 1256, 1259, 1268, 1300, 1322, 1344, 1351, 1359, 1360, 1361, 1365, 1380, 1382, 1398, 1428, 1429, 1443, 1473, 1475, 1476, 1477, 1478, 1480, 1518, 1527, 1604, 1605, 1622, 1626, 1628, 1650, 1683, 1697, 1788, 1791, 1814, 1830, 1883, 1888, 1889, 1892, 1894, 1897, 1900, 1901, 1912, 1917, 1923, 1924, 1925, 1930], "describ": [0, 5, 7, 8, 9, 17, 23, 38, 39, 43, 45, 46, 49, 50, 56, 58, 63, 71, 511, 789, 790, 791, 812, 813, 814, 838, 856, 935, 995, 1012, 1029, 1069, 1149, 1216, 1256, 1336, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1366, 1367, 1368, 1369, 1370, 1373, 1375, 1376, 1377, 1383, 1386, 1389, 1391, 1392, 1393, 1395, 1400, 1419, 1421, 1422, 1423, 1434, 1435, 1442, 1446, 1459, 1467, 1475, 1476, 1477, 1479, 1510, 1522, 1523, 1532, 1565, 1695, 1835, 1864, 1866, 1868, 1869, 1887, 1888, 1889, 1892, 1893, 1896, 1897, 1899, 1900, 1905, 1907, 1911, 1913, 1914, 1917, 1920, 1921, 1930], "expos": [0, 1, 8, 21, 41, 45, 63, 70, 71, 792, 1122, 1889, 1892, 1899, 1911, 1914, 1934], "namespac": [0, 17, 71, 1043, 1866, 1870, 1873, 1894, 1900, 1907, 1912, 1917, 1934], "defin": [0, 1, 2, 3, 5, 9, 11, 12, 15, 20, 24, 32, 33, 38, 39, 41, 42, 43, 46, 47, 49, 50, 56, 58, 59, 63, 68, 71, 434, 444, 446, 448, 515, 563, 789, 794, 796, 835, 856, 857, 858, 859, 886, 887, 888, 889, 1026, 1052, 1069, 1070, 1089, 1117, 1123, 1139, 1141, 1155, 1157, 1158, 1185, 1196, 1218, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1248, 1252, 1253, 1254, 1256, 1258, 1259, 1265, 1301, 1365, 1370, 1384, 1385, 1386, 1387, 1394, 1396, 1397, 1428, 1434, 1446, 1461, 1463, 1468, 1470, 1492, 1527, 1577, 1583, 1599, 1608, 1626, 1628, 1635, 1636, 1656, 1659, 1664, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1692, 1695, 1713, 1722, 1724, 1726, 1733, 1762, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1791, 1793, 1835, 1838, 1839, 1840, 1841, 1859, 1861, 1863, 1866, 1869, 1871, 1873, 1881, 1882, 1884, 1889, 1892, 1893, 1897, 1898, 1900, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1923, 1924, 1929, 1930, 1931, 1934], "still": [0, 1, 2, 7, 8, 15, 19, 20, 21, 23, 28, 38, 41, 46, 47, 49, 58, 70, 71, 791, 796, 895, 900, 955, 1200, 1205, 1213, 1395, 1419, 1608, 1609, 1610, 1611, 1697, 1745, 1865, 1866, 1869, 1881, 1882, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1896, 1898, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1919, 1920, 1921, 1923], "which": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 35, 38, 39, 42, 43, 45, 46, 47, 48, 49, 51, 56, 57, 58, 59, 60, 63, 67, 68, 70, 71, 89, 151, 289, 313, 315, 317, 319, 321, 335, 471, 485, 486, 497, 511, 513, 515, 534, 557, 601, 604, 614, 621, 681, 694, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 757, 761, 778, 787, 788, 794, 796, 816, 820, 823, 835, 851, 854, 855, 856, 858, 873, 877, 882, 889, 890, 891, 892, 898, 899, 900, 901, 902, 903, 904, 910, 911, 914, 921, 934, 937, 940, 944, 950, 952, 955, 966, 967, 968, 969, 970, 975, 982, 983, 984, 985, 986, 997, 998, 999, 1026, 1028, 1033, 1034, 1045, 1047, 1052, 1056, 1057, 1058, 1059, 1060, 1069, 1085, 1090, 1093, 1097, 1100, 1103, 1108, 1109, 1110, 1111, 1112, 1117, 1120, 1125, 1126, 1129, 1130, 1131, 1132, 1133, 1137, 1138, 1141, 1158, 1170, 1181, 1187, 1193, 1194, 1196, 1197, 1199, 1205, 1206, 1207, 1211, 1228, 1231, 1232, 1241, 1245, 1247, 1248, 1251, 1252, 1256, 1258, 1259, 1261, 1264, 1265, 1267, 1273, 1289, 1296, 1301, 1318, 1324, 1327, 1328, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1346, 1347, 1348, 1351, 1357, 1358, 1360, 1361, 1364, 1365, 1372, 1379, 1380, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1414, 1418, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1433, 1434, 1456, 1459, 1461, 1463, 1467, 1476, 1477, 1509, 1526, 1527, 1529, 1539, 1546, 1564, 1565, 1583, 1584, 1592, 1599, 1608, 1615, 1617, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1650, 1652, 1655, 1663, 1664, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1703, 1715, 1729, 1733, 1735, 1736, 1740, 1742, 1749, 1753, 1762, 1764, 1782, 1787, 1790, 1791, 1793, 1794, 1802, 1805, 1829, 1834, 1835, 1838, 1839, 1840, 1841, 1845, 1846, 1848, 1849, 1856, 1863, 1866, 1868, 1869, 1871, 1875, 1876, 1877, 1878, 1879, 1881, 1883, 1884, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "unlist": 0, "downstream": [0, 3, 16, 17, 20, 28, 952, 1879], "stabl": [0, 1, 2, 41, 47, 58, 59, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 873, 1069, 1231, 1232, 1236, 1241, 1249, 1253, 1256, 1259, 1261, 1268, 1345, 1787, 1864, 1867, 1887, 1890, 1904, 1919], "believ": [0, 8, 26], "unstabl": [0, 47, 1231, 1232, 1259, 1276, 1285, 1546, 1814, 1924], "__matmul__": 0, "addbmm": [0, 101, 918, 1867, 1903, 1909], "addmv": [0, 109, 1867, 1882, 1909], "addr": [0, 41, 111, 1867, 1909], "baddbmm": [0, 153, 1867, 1903, 1909], "bmm": [0, 1849, 1865, 1867, 1882, 1884, 1903, 1904, 1909, 1923], "chain_matmul": [0, 1867, 1909], "multi_dot": [0, 940], "conv1d": [0, 705, 709, 712, 722, 738, 1359, 1367, 1404, 1849, 1867, 1909, 1914, 1916], "conv2d": [0, 706, 710, 713, 715, 723, 739, 789, 811, 1196, 1205, 1207, 1211, 1212, 1360, 1368, 1405, 1428, 1429, 1435, 1456, 1479, 1635, 1849, 1866, 1867, 1877, 1907, 1909, 1914, 1916, 1917, 1928, 1933], "conv3d": [0, 707, 711, 714, 716, 724, 740, 1361, 1369, 1406, 1849, 1867, 1909, 1914, 1916], "conv_transpose1d": [0, 1867, 1909, 1916], "conv_transpose2d": [0, 1867, 1909, 1916], "conv_transpose3d": [0, 1867, 1909, 1916], "grucel": [0, 1903, 1914, 1916, 1917], "lstmcell": [0, 1903, 1914, 1916, 1917], "matmul": [0, 2, 11, 18, 30, 930, 950, 1136, 1300, 1479, 1703, 1713, 1757, 1814, 1867, 1882, 1884, 1892, 1903, 1909, 1916, 1923], "mv": [0, 30, 1207, 1849, 1867, 1882, 1909, 1923], "prelu": [0, 1429, 1867, 1909, 1916], "rnncell": [0, 1914, 1916, 1917], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 95, 624, 625, 863, 1865, 1867, 1882, 1909, 1930], "asin": [0, 142, 626, 627, 865, 1865, 1867, 1882, 1909, 1923], "cosh": [0, 204, 634, 635, 681, 1865, 1867, 1882, 1909], "cosine_embedding_loss": [0, 1867, 1909], "cdist": [0, 1892, 1909], "cosine_similar": [0, 1477, 1867, 1909], "cross_entropi": [0, 1867], "cumprod": [0, 214, 1867, 1882, 1909], "cumsum": [0, 216, 1052, 1849, 1867, 1882, 1909], "dist": [0, 39, 41, 42, 45, 47, 59, 63, 941, 942, 1225, 1231, 1232, 1233, 1235, 1236, 1237, 1241, 1242, 1253, 1254, 1257, 1259, 1260, 1283, 1286, 1437, 1467, 1608, 1615, 1814, 1867, 1893, 1909, 1919, 1921], "erfinv": [0, 251, 1867, 1882, 1909, 1923, 1924], "exp": [0, 1, 47, 253, 640, 641, 767, 900, 901, 903, 1112, 1255, 1275, 1283, 1345, 1350, 1364, 1370, 1394, 1417, 1418, 1432, 1442, 1455, 1458, 1460, 1461, 1463, 1464, 1468, 1501, 1547, 1570, 1578, 1579, 1583, 1585, 1588, 1615, 1710, 1771, 1772, 1793, 1810, 1865, 1867, 1882, 1889, 1907, 1909, 1924], "expm1": [0, 257, 642, 643, 1865, 1867, 1882, 1909, 1923, 1924], "group_norm": [0, 1867, 1909, 1916], "hinge_embedding_loss": [0, 1867, 1909], "kl_div": [0, 1867, 1909], "l1_loss": [0, 1867, 1909], "layer_norm": [0, 1400, 1867, 1909, 1916], "log": [0, 13, 16, 17, 20, 22, 24, 28, 32, 38, 39, 47, 49, 51, 52, 55, 56, 60, 376, 377, 650, 657, 677, 1079, 1271, 1273, 1275, 1276, 1283, 1310, 1336, 1344, 1345, 1364, 1382, 1394, 1417, 1418, 1432, 1435, 1442, 1460, 1461, 1464, 1524, 1529, 1539, 1546, 1547, 1562, 1570, 1583, 1585, 1608, 1864, 1865, 1867, 1875, 1879, 1882, 1889, 1892, 1894, 1907, 1909, 1913, 1924, 1928, 1931, 1932, 1933], "log_softmax": [0, 1351, 1394, 1511, 1562, 1583, 1867, 1883, 1909, 1924], "log10": [0, 371, 651, 652, 1865, 1867, 1882, 1909], "log1p": [0, 373, 653, 654, 1865, 1867, 1882, 1909, 1923, 1924], "log2": [0, 375, 655, 656, 1865, 1867, 1882, 1909, 1924], "margin_ranking_loss": [0, 1867, 1909], "mse_loss": [0, 67, 1125, 1867, 1909], "multilabel_margin_loss": [0, 1867, 1909], "multi_margin_loss": [0, 1867, 1909], "nll_loss": [0, 1867, 1909], "norm": [0, 47, 63, 65, 71, 699, 700, 701, 702, 703, 704, 938, 1063, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1227, 1231, 1240, 1241, 1248, 1253, 1265, 1371, 1372, 1419, 1437, 1472, 1473, 1474, 1475, 1476, 1518, 1519, 1563, 1567, 1612, 1616, 1625, 1626, 1631, 1634, 1635, 1649, 1652, 1672, 1734, 1867, 1871, 1888, 1889, 1897, 1900, 1903, 1909], "normal": [0, 1, 39, 45, 58, 63, 71, 83, 336, 351, 377, 453, 553, 968, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1157, 1193, 1196, 1201, 1231, 1273, 1340, 1346, 1347, 1348, 1367, 1368, 1369, 1373, 1383, 1391, 1392, 1393, 1400, 1410, 1411, 1412, 1416, 1455, 1467, 1471, 1472, 1473, 1474, 1475, 1497, 1527, 1528, 1537, 1541, 1545, 1571, 1612, 1613, 1616, 1631, 1639, 1640, 1649, 1652, 1681, 1697, 1717, 1726, 1727, 1734, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1810, 1849, 1863, 1864, 1865, 1866, 1867, 1871, 1882, 1884, 1887, 1889, 1892, 1895, 1907, 1909, 1911, 1916, 1919, 1924, 1928, 1930, 1931, 1935], "pdist": [0, 1437, 1867, 1909], "poisson_nll_loss": [0, 1867, 1909], "pow": [0, 1, 468, 494, 898, 899, 902, 1112, 1865, 1867, 1869, 1882, 1888, 1889, 1909, 1923, 1929], "prod": [0, 55, 321, 515, 1086, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1106, 1261, 1262, 1371, 1375, 1479, 1849, 1865, 1867, 1882, 1909, 1923], "reciproc": [0, 484, 660, 661, 1744, 1865, 1867, 1882, 1909], "rsqrt": [0, 509, 1865, 1867, 1882, 1909], "sinh": [0, 533, 668, 669, 879, 1865, 1867, 1882, 1909, 1923], "smooth_l1_loss": [0, 1867, 1909], "soft_margin_loss": [0, 1867, 1909], "softmax": [0, 47, 793, 1336, 1364, 1394, 1418, 1462, 1510, 1529, 1539, 1546, 1577, 1584, 1790, 1867, 1882, 1883, 1884, 1892, 1909, 1916, 1923, 1924], "softmin": [0, 1867], "softplu": [0, 47, 1427, 1557, 1867, 1909], "sum": [0, 1, 11, 12, 13, 16, 20, 26, 28, 38, 41, 42, 45, 47, 49, 63, 68, 69, 71, 494, 515, 563, 743, 890, 898, 899, 900, 901, 902, 903, 904, 910, 911, 915, 968, 984, 985, 986, 1051, 1052, 1069, 1129, 1130, 1131, 1136, 1173, 1227, 1248, 1252, 1265, 1273, 1274, 1275, 1283, 1318, 1326, 1344, 1345, 1351, 1361, 1362, 1364, 1365, 1372, 1375, 1382, 1388, 1389, 1394, 1395, 1396, 1397, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1461, 1463, 1476, 1477, 1479, 1499, 1500, 1510, 1511, 1519, 1524, 1529, 1539, 1548, 1549, 1562, 1570, 1583, 1584, 1608, 1631, 1636, 1637, 1655, 1689, 1735, 1773, 1791, 1793, 1833, 1835, 1849, 1864, 1865, 1867, 1869, 1873, 1879, 1882, 1888, 1889, 1892, 1893, 1894, 1895, 1900, 1903, 1907, 1909, 1919, 1920, 1923, 1924, 1929], "renorm": [0, 490, 1371, 1372, 1518, 1519, 1867, 1909], "tan": [0, 572, 672, 673, 880, 1865, 1867, 1882, 1909, 1923, 1928], "triplet_margin_loss": [0, 1867, 1909], "take": [0, 1, 2, 3, 4, 7, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 27, 32, 38, 39, 41, 43, 45, 47, 49, 57, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 757, 790, 795, 811, 817, 823, 859, 898, 899, 900, 901, 902, 903, 905, 906, 943, 952, 969, 1006, 1057, 1059, 1060, 1085, 1087, 1090, 1093, 1097, 1098, 1100, 1103, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1228, 1250, 1253, 1336, 1345, 1372, 1376, 1377, 1380, 1398, 1422, 1423, 1424, 1425, 1426, 1428, 1436, 1443, 1471, 1481, 1482, 1522, 1523, 1540, 1564, 1577, 1608, 1653, 1681, 1685, 1710, 1837, 1856, 1863, 1866, 1867, 1869, 1876, 1877, 1881, 1882, 1883, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1898, 1900, 1904, 1906, 1907, 1909, 1911, 1913, 1914, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1932], "addcdiv": [0, 103, 1867, 1909], "addcmul": [0, 105, 1867, 1909], "atan2": [0, 147, 868, 1865, 1867, 1882, 1909], "bilinear": [0, 776, 782, 783, 1069, 1480, 1481, 1527, 1538, 1596, 1597, 1849, 1867, 1909], "cross": [0, 7, 8, 20, 43, 47, 49, 1344, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1499, 1500, 1510, 1867, 1892, 1906, 1909], "dot": [0, 2, 32, 68, 69, 614, 899, 901, 902, 903, 1048, 1049, 1050, 1051, 1127, 1137, 1173, 1216, 1263, 1264, 1290, 1344, 1345, 1364, 1375, 1388, 1395, 1419, 1434, 1435, 1477, 1577, 1810, 1853, 1854, 1855, 1856, 1867, 1882, 1897, 1909, 1911], "grid_sampl": [0, 1492, 1849, 1867, 1909], "index_put": [0, 1849, 1867, 1909], "scatter_add": [0, 1865, 1867, 1909], "tensordot": [0, 1173, 1261, 1262, 1871, 1892, 1909], "binari": [0, 2, 32, 33, 39, 47, 49, 51, 56, 58, 71, 155, 732, 920, 1289, 1344, 1345, 1434, 1499, 1500, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1663, 1665, 1864, 1870, 1882, 1883, 1899, 1907, 1911, 1928], "add": [0, 1, 3, 7, 11, 12, 13, 14, 17, 22, 27, 28, 33, 34, 38, 41, 43, 45, 55, 58, 63, 69, 70, 71, 83, 99, 290, 313, 511, 513, 683, 684, 685, 688, 744, 745, 754, 787, 790, 835, 856, 858, 859, 952, 985, 1015, 1026, 1069, 1126, 1196, 1207, 1336, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409, 1428, 1430, 1434, 1435, 1439, 1442, 1529, 1570, 1599, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1806, 1863, 1865, 1866, 1867, 1868, 1869, 1873, 1877, 1879, 1882, 1884, 1888, 1890, 1891, 1894, 1895, 1898, 1899, 1900, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1916, 1917, 1919, 1920, 1921, 1923, 1926, 1927, 1928, 1932, 1933, 1934], "nativ": [0, 2, 30, 39, 46, 63, 71, 995, 1126, 1206, 1612, 1613, 1757, 1866, 1869, 1881, 1892, 1894, 1910, 1911, 1919], "without": [0, 1, 3, 5, 7, 8, 9, 11, 14, 15, 16, 19, 28, 32, 35, 38, 39, 41, 42, 43, 45, 47, 51, 58, 63, 64, 69, 70, 71, 254, 614, 947, 973, 975, 1010, 1090, 1091, 1092, 1100, 1101, 1102, 1193, 1194, 1196, 1197, 1242, 1243, 1258, 1265, 1318, 1346, 1347, 1348, 1368, 1372, 1391, 1392, 1393, 1425, 1428, 1436, 1467, 1475, 1519, 1599, 1608, 1632, 1648, 1689, 1720, 1736, 1753, 1754, 1844, 1863, 1868, 1869, 1876, 1877, 1879, 1881, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1897, 1898, 1900, 1902, 1904, 1905, 1907, 1911, 1912, 1914, 1918, 1919, 1923, 1928, 1933, 1935], "intervent": [0, 8, 1919], "mixtur": [0, 47, 1364, 1510], "bceloss": [0, 1345, 1499], "aren": [0, 8, 68, 71, 1126, 1882, 1889, 1920, 1934], "mean": [0, 2, 3, 5, 7, 8, 14, 15, 16, 20, 22, 23, 24, 33, 35, 38, 39, 41, 43, 45, 47, 58, 60, 63, 64, 66, 69, 70, 71, 254, 321, 335, 377, 453, 493, 515, 755, 757, 778, 791, 793, 858, 859, 918, 931, 955, 968, 1125, 1127, 1206, 1296, 1313, 1318, 1323, 1327, 1328, 1334, 1335, 1336, 1338, 1339, 1340, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1362, 1364, 1366, 1370, 1372, 1373, 1374, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1414, 1415, 1417, 1418, 1419, 1420, 1427, 1431, 1432, 1433, 1435, 1436, 1442, 1443, 1446, 1447, 1448, 1455, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1476, 1477, 1478, 1498, 1499, 1500, 1508, 1510, 1511, 1519, 1520, 1524, 1535, 1536, 1539, 1540, 1544, 1550, 1558, 1559, 1560, 1561, 1562, 1570, 1581, 1582, 1593, 1594, 1608, 1656, 1684, 1717, 1726, 1727, 1771, 1791, 1808, 1809, 1815, 1849, 1851, 1852, 1863, 1865, 1866, 1867, 1868, 1879, 1881, 1882, 1883, 1884, 1887, 1888, 1889, 1892, 1893, 1894, 1896, 1897, 1900, 1906, 1907, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1919, 1920, 1921, 1923], "doesn": [0, 1, 2, 7, 8, 14, 15, 28, 30, 38, 41, 43, 66, 68, 70, 71, 820, 823, 877, 894, 904, 973, 994, 1126, 1137, 1203, 1209, 1235, 1259, 1267, 1276, 1356, 1357, 1358, 1365, 1394, 1461, 1502, 1503, 1504, 1539, 1583, 1608, 1609, 1631, 1673, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1788, 1791, 1856, 1865, 1866, 1869, 1870, 1882, 1884, 1889, 1890, 1892, 1894, 1895, 1899, 1902, 1906, 1910, 1912, 1920, 1923], "help": [0, 1, 4, 7, 8, 15, 17, 19, 20, 22, 28, 30, 32, 38, 39, 41, 55, 58, 63, 68, 71, 905, 906, 914, 994, 1026, 1126, 1127, 1137, 1196, 1197, 1215, 1297, 1309, 1310, 1367, 1368, 1369, 1373, 1428, 1615, 1764, 1856, 1863, 1869, 1876, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1895, 1898, 1900, 1903, 1907, 1908, 1911, 1919, 1920, 1923, 1931], "revers": [0, 47, 69, 71, 511, 731, 790, 898, 900, 1087, 1089, 1109, 1129, 1131, 1136, 1263, 1398, 1441, 1569, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1837, 1850, 1867, 1868, 1869, 1889, 1893, 1895, 1909, 1929], "therefor": [0, 3, 5, 17, 20, 38, 39, 41, 47, 48, 56, 63, 66, 447, 541, 904, 919, 928, 952, 1015, 1103, 1120, 1122, 1125, 1153, 1154, 1208, 1211, 1241, 1254, 1371, 1372, 1479, 1518, 1519, 1527, 1650, 1689, 1869, 1888, 1889, 1892, 1894, 1896, 1899, 1907, 1921], "rais": [0, 1, 5, 7, 15, 20, 26, 27, 28, 32, 41, 45, 47, 49, 51, 58, 63, 68, 70, 71, 89, 313, 315, 321, 694, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 931, 940, 952, 974, 1039, 1112, 1117, 1194, 1196, 1201, 1203, 1211, 1213, 1225, 1227, 1235, 1236, 1239, 1243, 1244, 1249, 1256, 1257, 1261, 1262, 1267, 1288, 1313, 1428, 1577, 1620, 1621, 1626, 1628, 1631, 1641, 1664, 1665, 1751, 1849, 1863, 1870, 1876, 1881, 1889, 1892, 1894, 1896, 1903, 1907, 1911, 1912, 1918, 1919, 1930, 1934], "mani": [0, 3, 7, 12, 14, 15, 16, 19, 20, 22, 23, 27, 28, 30, 32, 38, 39, 41, 47, 58, 63, 67, 68, 71, 89, 402, 677, 886, 888, 898, 900, 1069, 1208, 1351, 1684, 1783, 1831, 1838, 1839, 1840, 1841, 1866, 1868, 1882, 1887, 1889, 1890, 1891, 1892, 1894, 1895, 1899, 1900, 1903, 1907, 1910, 1914, 1921, 1923, 1926, 1928, 1929, 1931], "sigmoid": [0, 47, 71, 524, 664, 665, 757, 792, 1344, 1345, 1371, 1380, 1381, 1398, 1399, 1457, 1499, 1526, 1580, 1865, 1867, 1882, 1883, 1887, 1908, 1909, 1916, 1924], "right": [0, 2, 7, 9, 15, 16, 21, 25, 41, 43, 47, 63, 71, 817, 862, 919, 926, 928, 929, 934, 939, 1063, 1069, 1110, 1113, 1114, 1118, 1149, 1153, 1154, 1158, 1162, 1193, 1215, 1240, 1245, 1256, 1258, 1259, 1267, 1273, 1274, 1318, 1336, 1341, 1342, 1343, 1344, 1345, 1356, 1357, 1358, 1375, 1382, 1395, 1396, 1397, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1431, 1432, 1433, 1437, 1438, 1444, 1476, 1479, 1480, 1481, 1482, 1527, 1547, 1565, 1613, 1620, 1673, 1687, 1688, 1729, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1810, 1830, 1835, 1837, 1850, 1863, 1867, 1869, 1881, 1882, 1883, 1889, 1894, 1897, 1907, 1910, 1917, 1921, 1924], "entropi": [0, 47, 1344, 1364, 1432, 1499, 1500, 1510, 1924], "combin": [0, 3, 12, 20, 38, 39, 41, 58, 69, 70, 614, 686, 709, 710, 711, 712, 713, 714, 715, 716, 790, 851, 887, 1026, 1098, 1099, 1104, 1106, 1158, 1290, 1300, 1345, 1375, 1389, 1434, 1475, 1479, 1521, 1544, 1627, 1866, 1867, 1868, 1888, 1892, 1895, 1907, 1909, 1910, 1912, 1914, 1917, 1919], "bcewithlogitsloss": [0, 1500], "bcewithlogit": 0, "safe": [0, 11, 16, 17, 20, 28, 41, 58, 70, 71, 1016, 1017, 1036, 1037, 1608, 1670, 1671, 1866, 1869, 1888, 1889, 1892, 1895, 1899, 1919], "_convolut": [0, 1909], "avg_pool3d": [0, 1867, 1909, 1916], "grid_sampler_2d": [0, 1865, 1867, 1909], "_grid_sampler_2d_cpu_fallback": [0, 1909], "grid_sampler_3d": [0, 1867, 1909], "polar": [0, 47, 1255, 1867, 1909], "quantil": [0, 1296, 1325, 1867, 1909, 1924], "nanquantil": [0, 1867, 1909], "stft": [0, 919, 928, 1153, 1154, 1193, 1215, 1867, 1909], "view_as_complex": [0, 30, 1867, 1909], "choleski": [0, 2, 47, 942, 943, 1226, 1232, 1268, 1867, 1909], "cholesky_invers": [0, 2, 1867, 1909], "cholesky_solv": [0, 2, 1867, 1909], "invers": [0, 47, 680, 681, 879, 882, 937, 942, 943, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1193, 1236, 1237, 1249, 1253, 1256, 1261, 1262, 1359, 1360, 1361, 1371, 1372, 1375, 1424, 1425, 1426, 1479, 1518, 1519, 1554, 1555, 1556, 1617, 1620, 1644, 1689, 1695, 1845, 1864, 1867, 1869, 1903, 1909, 1924], "lu_solv": [0, 2, 1243, 1867, 1909], "orgqr": [0, 1867, 1909], "ormqr": [0, 1141, 1235, 1867, 1909], "pinvers": [0, 1241, 1867, 1909], "max_pool3d": [0, 1867, 1909, 1916], "max_unpool2d": [0, 1522, 1552, 1867, 1909], "max_unpool3d": [0, 1523, 1553, 1867, 1909], "adaptive_avg_pool3d": [0, 1867, 1894, 1909, 1916], "reflection_pad1d": [0, 1867, 1909], "reflection_pad2d": [0, 1865, 1867, 1909], "replication_pad1d": [0, 1867, 1909], "replication_pad2d": [0, 1865, 1867, 1909], "replication_pad3d": [0, 1865, 1867, 1909], "ctc_loss": [0, 1351, 1867, 1909], "fft_fft": [0, 1867, 1909], "fft_ifft": [0, 1867, 1909], "fft_fft2": [0, 1867, 1909], "fft_ifft2": [0, 1867, 1909], "fft_fftn": [0, 1867, 1909], "fft_ifftn": [0, 1867, 1909], "fft_rfft": [0, 1867, 1909], "fft_irfft": [0, 1867, 1909], "fft_rfft2": [0, 1867, 1909], "fft_irfft2": [0, 1867, 1909], "fft_rfftn": [0, 1867, 1909], "fft_irfftn": [0, 1867, 1909], "fft_hfft": [0, 1867, 1909], "fft_ihfft": [0, 1867, 1909], "linalg_matrix_norm": [0, 1867, 1909], "linalg_cond": [0, 1867, 1909], "linalg_matrix_rank": [0, 1867, 1909], "linalg_solv": [0, 1867, 1909], "linalg_choleski": [0, 1867, 1909], "linalg_svdv": [0, 1867, 1909], "linalg_eigv": [0, 1867, 1909], "linalg_eigvalsh": [0, 1867, 1909], "linalg_inv": [0, 1867, 1909], "linalg_householder_product": [0, 1867, 1909], "linalg_tensorinv": [0, 1867, 1909], "linalg_tensorsolv": [0, 1867, 1909], "fake_quantize_per_tensor_affin": [0, 1867, 1909], "eig": [0, 1232, 1233, 1259, 1903], "geqrf": [0, 1235, 1701, 1867, 1909], "lstsq": [0, 1141, 1227, 1253], "_lu_with_info": [0, 1909], "qr": [0, 2, 1141, 1231, 1232, 1235, 1241, 1259, 1615, 1701, 1867, 1909], "solv": [0, 7, 16, 21, 30, 943, 1141, 1149, 1227, 1236, 1238, 1239, 1242, 1243, 1245, 1249, 1257, 1258, 1262, 1268, 1286, 1837, 1889, 1897, 1903, 1906], "svd": [0, 2, 30, 1231, 1232, 1241, 1253, 1260, 1276, 1620, 1703, 1815, 1865, 1867, 1903, 1909, 1923], "symeig": 0, "triangular_solv": [0, 1867, 1909], "fractional_max_pool2d": [0, 1867, 1909], "fractional_max_pool3d": [0, 1867, 1909], "adaptive_max_pool3d": [0, 1867, 1909], "multilabel_margin_loss_forward": [0, 1909], "linalg_qr": [0, 1867, 1909], "linalg_cholesky_ex": [0, 1867, 1909], "linalg_svd": [0, 1867, 1909], "linalg_eig": [0, 1867, 1909], "linalg_eigh": [0, 1867, 1909], "linalg_lstsq": [0, 1867, 1909], "linalg_inv_ex": [0, 1867, 1909], "cat": [0, 14, 41, 47, 71, 541, 744, 745, 754, 790, 793, 959, 960, 1297, 1447, 1795, 1865, 1866, 1867, 1882, 1907, 1909, 1911, 1914, 1916, 1923, 1932], "stack": [0, 8, 13, 15, 16, 17, 20, 21, 28, 35, 38, 39, 41, 47, 51, 67, 68, 71, 757, 914, 948, 1030, 1031, 1068, 1135, 1137, 1161, 1297, 1351, 1380, 1398, 1399, 1443, 1472, 1474, 1645, 1856, 1858, 1864, 1867, 1884, 1892, 1893, 1896, 1908, 1909, 1911, 1913, 1916, 1923], "index_copi": [0, 1849, 1867, 1909], "implement": [1, 2, 5, 8, 11, 14, 20, 23, 34, 38, 39, 41, 42, 43, 45, 46, 47, 50, 55, 56, 59, 63, 68, 71, 151, 511, 513, 515, 684, 735, 736, 737, 738, 739, 740, 757, 776, 778, 782, 790, 797, 816, 817, 818, 821, 822, 823, 875, 877, 890, 899, 905, 906, 966, 1069, 1112, 1117, 1122, 1129, 1130, 1132, 1133, 1196, 1203, 1205, 1206, 1209, 1251, 1254, 1267, 1268, 1296, 1336, 1351, 1365, 1380, 1396, 1397, 1428, 1434, 1440, 1447, 1464, 1473, 1475, 1527, 1565, 1577, 1585, 1608, 1612, 1613, 1615, 1616, 1620, 1631, 1644, 1648, 1649, 1652, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1689, 1695, 1713, 1720, 1733, 1742, 1745, 1782, 1791, 1814, 1815, 1830, 1846, 1849, 1868, 1869, 1870, 1873, 1876, 1881, 1884, 1885, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1923, 1924, 1927, 1929, 1931, 1934], "arbitrari": [1, 3, 16, 23, 28, 41, 45, 254, 887, 1052, 1259, 1267, 1365, 1371, 1395, 1419, 1479, 1499, 1500, 1518, 1539, 1565, 1641, 1814, 1835, 1869, 1875, 1889, 1895, 1899, 1900, 1910, 1912, 1914, 1923, 1931, 1934], "scalar": [1, 15, 27, 41, 47, 98, 151, 155, 260, 313, 445, 586, 684, 685, 735, 736, 737, 738, 739, 740, 876, 877, 890, 898, 899, 902, 904, 923, 926, 934, 964, 968, 1064, 1069, 1084, 1117, 1123, 1149, 1156, 1173, 1187, 1220, 1221, 1290, 1297, 1325, 1336, 1344, 1345, 1351, 1362, 1364, 1365, 1382, 1388, 1389, 1394, 1395, 1400, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1477, 1529, 1571, 1654, 1659, 1660, 1664, 1697, 1710, 1712, 1714, 1732, 1733, 1749, 1797, 1798, 1799, 1800, 1801, 1828, 1846, 1847, 1859, 1861, 1862, 1865, 1867, 1868, 1869, 1879, 1884, 1887, 1889, 1894, 1897, 1907, 1919, 1923, 1926, 1928, 1930, 1931], "minim": [1, 7, 8, 16, 28, 816, 872, 1298, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1681, 1682, 1683, 1684, 1697, 1863, 1879, 1888, 1892, 1900, 1902, 1905, 1907, 1912, 1914, 1931], "exist": [1, 7, 8, 9, 11, 12, 15, 17, 30, 32, 38, 41, 42, 43, 47, 49, 51, 56, 58, 59, 63, 67, 71, 83, 84, 254, 497, 789, 851, 875, 898, 899, 900, 901, 902, 903, 904, 905, 1010, 1196, 1200, 1211, 1231, 1236, 1242, 1243, 1268, 1325, 1428, 1429, 1438, 1789, 1863, 1865, 1866, 1873, 1876, 1881, 1882, 1884, 1885, 1889, 1890, 1892, 1894, 1895, 1898, 1899, 1900, 1901, 1903, 1907, 1911, 1912, 1913, 1914, 1919, 1921, 1923, 1927, 1929, 1931], "code": [1, 3, 4, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 25, 26, 27, 28, 30, 32, 33, 38, 39, 41, 47, 49, 59, 60, 68, 69, 70, 120, 677, 952, 955, 1012, 1013, 1026, 1126, 1171, 1196, 1200, 1201, 1206, 1207, 1208, 1211, 1212, 1213, 1226, 1237, 1239, 1267, 1444, 1456, 1608, 1761, 1863, 1864, 1868, 1869, 1875, 1883, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1902, 1905, 1906, 1907, 1910, 1918, 1919, 1920, 1921, 1926, 1927, 1931, 1934], "declar": [1, 9, 32, 38, 59, 1868, 1869, 1870, 1894, 1907, 1911, 1912, 1931], "requires_grad": [1, 5, 13, 15, 47, 69, 335, 444, 445, 446, 447, 448, 486, 494, 862, 877, 894, 896, 897, 905, 906, 908, 910, 911, 919, 928, 1015, 1070, 1071, 1072, 1073, 1082, 1087, 1105, 1122, 1123, 1124, 1127, 1137, 1153, 1154, 1171, 1196, 1215, 1266, 1282, 1344, 1345, 1364, 1371, 1372, 1382, 1394, 1395, 1419, 1420, 1428, 1434, 1435, 1442, 1475, 1476, 1499, 1500, 1510, 1562, 1608, 1609, 1610, 1611, 1648, 1653, 1659, 1660, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1759, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1849, 1856, 1861, 1862, 1865, 1867, 1871, 1882, 1883, 1884, 1892, 1894, 1895, 1900, 1905, 1907, 1909, 1919, 1920, 1929, 1930, 1931], "type": [1, 2, 3, 5, 12, 13, 14, 18, 19, 20, 27, 32, 33, 34, 39, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 56, 58, 59, 60, 63, 68, 70, 71, 89, 151, 192, 197, 209, 326, 329, 333, 341, 444, 445, 446, 447, 448, 480, 556, 601, 677, 682, 683, 684, 685, 686, 687, 731, 732, 735, 736, 737, 746, 748, 749, 750, 751, 753, 761, 763, 764, 767, 768, 769, 770, 771, 772, 773, 774, 775, 778, 781, 789, 790, 791, 794, 812, 813, 814, 816, 817, 818, 819, 820, 822, 824, 837, 851, 852, 853, 854, 855, 856, 857, 858, 859, 862, 876, 886, 887, 888, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 918, 919, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 934, 935, 936, 937, 938, 940, 949, 950, 956, 979, 981, 988, 989, 990, 992, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1007, 1009, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1032, 1044, 1046, 1047, 1050, 1051, 1064, 1069, 1070, 1071, 1072, 1082, 1083, 1084, 1087, 1105, 1112, 1114, 1115, 1116, 1117, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1130, 1133, 1134, 1135, 1137, 1139, 1143, 1144, 1145, 1148, 1153, 1154, 1156, 1157, 1158, 1172, 1175, 1178, 1181, 1192, 1193, 1194, 1196, 1197, 1199, 1202, 1205, 1207, 1209, 1211, 1212, 1214, 1215, 1218, 1227, 1231, 1248, 1252, 1259, 1265, 1266, 1267, 1268, 1282, 1285, 1288, 1295, 1297, 1304, 1305, 1307, 1317, 1323, 1326, 1336, 1340, 1356, 1357, 1358, 1365, 1372, 1418, 1428, 1429, 1430, 1434, 1438, 1439, 1456, 1461, 1462, 1463, 1471, 1472, 1473, 1474, 1475, 1487, 1488, 1492, 1493, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1524, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1548, 1549, 1550, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1570, 1572, 1573, 1575, 1577, 1578, 1580, 1581, 1582, 1583, 1584, 1590, 1592, 1593, 1594, 1595, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1652, 1654, 1655, 1659, 1660, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1703, 1711, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1732, 1733, 1735, 1738, 1739, 1749, 1750, 1753, 1754, 1755, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1790, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1810, 1811, 1813, 1814, 1815, 1828, 1837, 1839, 1841, 1846, 1847, 1849, 1850, 1856, 1859, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1877, 1878, 1879, 1882, 1884, 1887, 1888, 1889, 1891, 1892, 1897, 1898, 1899, 1900, 1903, 1906, 1908, 1909, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1923, 1924, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934], "doubl": [1, 3, 49, 480, 486, 614, 746, 748, 749, 750, 751, 753, 763, 764, 778, 894, 896, 901, 905, 906, 935, 942, 958, 969, 1015, 1084, 1112, 1149, 1196, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1276, 1277, 1278, 1279, 1280, 1286, 1372, 1428, 1487, 1490, 1519, 1599, 1664, 1701, 1707, 1796, 1797, 1798, 1800, 1801, 1814, 1828, 1837, 1859, 1869, 1882, 1892, 1894, 1895, 1903, 1907, 1911, 1925, 1926, 1929, 1931], "bfloat16": [1, 39, 63, 1178, 1196, 1247, 1264, 1428, 1664, 1670, 1671, 1757, 1882, 1892, 1925, 1926, 1929, 1930, 1931, 1935], "cfloat": [1, 30, 41, 311, 482, 614, 942, 969, 1166, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1286, 1701, 1731, 1814, 1837, 1855, 1926, 1929, 1931], "cdoubl": [1, 30, 942, 969, 1196, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1286, 1428, 1701, 1814, 1837, 1926, 1929, 1931], "beta": [1, 2, 30, 64, 70, 100, 101, 106, 107, 108, 109, 110, 111, 152, 153, 321, 515, 551, 683, 686, 687, 688, 918, 970, 1004, 1005, 1012, 1013, 1015, 1153, 1215, 1290, 1300, 1346, 1347, 1348, 1383, 1389, 1391, 1392, 1393, 1400, 1416, 1459, 1464, 1467, 1544, 1545, 1577, 1581, 1585, 1670, 1671, 1672, 1674, 1680, 1684, 1717, 1775, 1777, 1788, 1792, 1806, 1864, 1865, 1867, 1877, 1892, 1907, 1914, 1919, 1923, 1926, 1931], "even": [1, 8, 11, 14, 15, 17, 19, 20, 38, 39, 41, 46, 49, 63, 70, 71, 541, 577, 812, 813, 814, 890, 968, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1100, 1101, 1102, 1105, 1136, 1181, 1208, 1225, 1227, 1231, 1232, 1233, 1234, 1248, 1252, 1254, 1255, 1259, 1260, 1265, 1290, 1296, 1365, 1467, 1502, 1503, 1504, 1565, 1608, 1615, 1653, 1655, 1695, 1742, 1753, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1814, 1854, 1866, 1869, 1870, 1879, 1884, 1888, 1889, 1892, 1894, 1896, 1898, 1900, 1902, 1903, 1904, 1905, 1910, 1911, 1912, 1921, 1926], "though": [1, 15, 41, 71, 151, 791, 887, 890, 900, 1085, 1086, 1088, 1194, 1197, 1290, 1655, 1866, 1870, 1883, 1884, 1889, 1895, 1902, 1903, 1910, 1914], "signatur": [1, 19, 20, 38, 51, 63, 71, 398, 486, 553, 910, 911, 971, 1196, 1428, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1620, 1641, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1810, 1892, 1894, 1895, 1907, 1911, 1912, 1919, 1923, 1934], "veri": [1, 4, 7, 8, 15, 16, 17, 19, 20, 21, 27, 28, 35, 38, 39, 41, 67, 69, 71, 952, 966, 1127, 1135, 1137, 1258, 1391, 1392, 1393, 1608, 1609, 1615, 1673, 1695, 1701, 1778, 1782, 1837, 1856, 1868, 1881, 1889, 1894, 1896, 1897, 1898, 1900, 1902, 1903, 1906, 1910, 1911, 1918, 1919, 1920, 1923], "unlik": [1, 3, 7, 14, 17, 47, 63, 69, 491, 1066, 1105, 1108, 1112, 1171, 1231, 1232, 1251, 1254, 1259, 1263, 1293, 1296, 1298, 1400, 1610, 1611, 1732, 1754, 1853, 1868, 1869, 1881, 1884, 1892, 1902, 1904, 1926, 1931], "coverag": [1, 7, 19, 64, 71, 1129, 1130, 1864, 1866, 1871, 1883, 1914, 1923, 1934], "plan": [1, 2, 7, 9, 14, 27, 28, 41, 43, 46, 891, 1608, 1713, 1884, 1889, 1894, 1911, 1923], "consid": [1, 5, 8, 14, 27, 39, 41, 49, 58, 63, 68, 70, 71, 691, 776, 782, 791, 898, 900, 901, 905, 943, 968, 1056, 1057, 1058, 1059, 1060, 1090, 1125, 1185, 1189, 1192, 1196, 1236, 1238, 1239, 1240, 1241, 1249, 1250, 1253, 1258, 1261, 1364, 1375, 1428, 1431, 1479, 1492, 1527, 1538, 1596, 1609, 1615, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1650, 1683, 1751, 1771, 1805, 1838, 1839, 1840, 1841, 1863, 1866, 1869, 1873, 1876, 1888, 1889, 1890, 1894, 1896, 1897, 1900, 1903, 1911, 1913, 1915, 1920, 1921, 1923, 1926, 1929, 1930, 1934], "ad": [1, 3, 9, 12, 15, 16, 19, 23, 27, 32, 38, 39, 41, 45, 47, 55, 63, 66, 68, 69, 70, 71, 222, 223, 313, 319, 470, 513, 677, 683, 684, 685, 686, 687, 688, 732, 891, 892, 893, 898, 899, 900, 901, 905, 917, 918, 1069, 1073, 1129, 1130, 1132, 1171, 1196, 1209, 1273, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1434, 1435, 1437, 1442, 1456, 1467, 1471, 1479, 1505, 1506, 1507, 1524, 1551, 1552, 1553, 1577, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1620, 1627, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1717, 1718, 1719, 1759, 1788, 1792, 1806, 1863, 1864, 1865, 1866, 1868, 1873, 1879, 1883, 1888, 1895, 1897, 1899, 1900, 1911, 1914, 1917, 1923, 1928, 1931], "tutori": [1, 3, 9, 15, 19, 21, 33, 41, 42, 45, 71, 891, 892, 893, 896, 1864, 1866, 1873, 1876, 1885, 1894, 1899, 1900, 1905, 1907, 1914], "how": [1, 3, 5, 7, 8, 9, 14, 17, 19, 20, 21, 22, 26, 33, 34, 38, 41, 43, 46, 50, 58, 59, 60, 63, 64, 65, 67, 68, 71, 486, 782, 789, 790, 793, 838, 856, 858, 859, 891, 892, 893, 896, 910, 911, 1052, 1073, 1126, 1135, 1149, 1171, 1196, 1206, 1267, 1375, 1428, 1479, 1480, 1565, 1596, 1608, 1641, 1653, 1733, 1757, 1759, 1772, 1783, 1864, 1866, 1868, 1869, 1873, 1876, 1878, 1881, 1882, 1883, 1885, 1888, 1891, 1893, 1895, 1896, 1897, 1900, 1902, 1904, 1905, 1907, 1912, 1914, 1917, 1919, 1920, 1921, 1928], "major": [1, 6, 7, 8, 9, 14, 16, 19, 22, 997, 1814, 1864, 1869, 1910], "build": [1, 8, 9, 11, 19, 28, 32, 33, 41, 47, 71, 1196, 1205, 1428, 1474, 1492, 1527, 1864, 1866, 1876, 1885, 1889, 1907, 1912, 1914, 1920, 1928, 1929], "basic": [1, 3, 7, 9, 16, 20, 43, 58, 71, 1129, 1130, 1131, 1202, 1268, 1608, 1689, 1864, 1870, 1885, 1890, 1892, 1893, 1897, 1911, 1920, 1927, 1928], "jacobian": [1, 47, 64, 65, 67, 68, 890, 892, 898, 901, 903, 904, 905, 906, 1130, 1131, 1132, 1136, 1137, 1856, 1889, 1894, 1897], "hessian": [1, 64, 67, 68, 899, 902, 1130, 1131, 1887, 1895], "etc": [1, 3, 5, 11, 13, 17, 20, 26, 30, 38, 39, 41, 47, 49, 58, 59, 63, 856, 857, 858, 952, 1193, 1196, 1364, 1428, 1608, 1662, 1735, 1863, 1868, 1869, 1876, 1894, 1895, 1896, 1900, 1902, 1907, 1910, 1911, 1914, 1919, 1923, 1925, 1928, 1931], "user": [1, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 28, 30, 33, 38, 39, 41, 42, 43, 46, 47, 48, 49, 51, 55, 58, 59, 61, 63, 64, 67, 68, 70, 71, 151, 335, 729, 735, 736, 737, 742, 743, 753, 761, 791, 794, 796, 835, 851, 858, 859, 890, 896, 904, 973, 1006, 1120, 1125, 1126, 1196, 1267, 1428, 1471, 1473, 1474, 1475, 1577, 1603, 1608, 1617, 1631, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1863, 1864, 1866, 1868, 1869, 1873, 1876, 1881, 1883, 1884, 1888, 1889, 1890, 1892, 1894, 1897, 1898, 1899, 1900, 1902, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1919, 1920, 1923, 1927, 1928, 1930, 1934], "input": [1, 2, 3, 5, 9, 11, 14, 15, 26, 27, 28, 30, 33, 36, 38, 39, 41, 42, 45, 46, 47, 48, 51, 63, 64, 65, 66, 67, 68, 69, 71, 83, 89, 151, 260, 280, 301, 401, 482, 515, 606, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 717, 725, 726, 731, 732, 735, 736, 737, 738, 739, 740, 742, 743, 753, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 799, 811, 814, 816, 834, 835, 836, 837, 854, 855, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 894, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 914, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 936, 938, 939, 941, 942, 943, 944, 945, 946, 947, 949, 958, 961, 962, 963, 964, 965, 966, 967, 968, 969, 985, 1012, 1013, 1015, 1048, 1049, 1050, 1051, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1071, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1137, 1138, 1139, 1140, 1141, 1142, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1178, 1181, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1196, 1199, 1200, 1202, 1203, 1207, 1209, 1211, 1212, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1286, 1288, 1289, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1641, 1642, 1643, 1645, 1650, 1653, 1654, 1655, 1657, 1658, 1660, 1662, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1688, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1723, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1744, 1746, 1747, 1748, 1751, 1752, 1754, 1765, 1766, 1767, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1805, 1806, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1823, 1824, 1825, 1826, 1827, 1829, 1831, 1832, 1833, 1834, 1837, 1838, 1840, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1859, 1860, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1873, 1876, 1877, 1883, 1884, 1885, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1903, 1904, 1905, 1907, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1923, 1924, 1926, 1927, 1930, 1932, 1933, 1934], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 83, 84, 151, 155, 254, 323, 335, 457, 486, 511, 513, 542, 611, 614, 677, 684, 726, 738, 739, 740, 745, 754, 755, 757, 765, 766, 769, 770, 771, 782, 788, 789, 790, 791, 794, 796, 811, 817, 820, 821, 823, 834, 838, 851, 855, 856, 858, 859, 860, 876, 877, 886, 887, 888, 890, 891, 892, 893, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 910, 911, 913, 917, 920, 937, 943, 950, 953, 956, 961, 970, 972, 982, 984, 986, 993, 994, 1012, 1014, 1018, 1020, 1022, 1026, 1027, 1052, 1069, 1070, 1073, 1074, 1087, 1089, 1090, 1091, 1092, 1105, 1108, 1125, 1126, 1127, 1128, 1130, 1131, 1132, 1135, 1136, 1137, 1140, 1141, 1149, 1152, 1157, 1158, 1171, 1187, 1193, 1194, 1196, 1197, 1199, 1200, 1202, 1206, 1207, 1209, 1211, 1212, 1217, 1220, 1227, 1235, 1238, 1242, 1243, 1248, 1251, 1254, 1255, 1259, 1265, 1267, 1284, 1285, 1287, 1297, 1306, 1325, 1327, 1328, 1329, 1334, 1335, 1336, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1365, 1366, 1370, 1371, 1372, 1373, 1376, 1377, 1380, 1385, 1386, 1387, 1389, 1395, 1397, 1398, 1401, 1402, 1403, 1414, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1433, 1434, 1435, 1437, 1438, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1455, 1456, 1459, 1464, 1467, 1470, 1471, 1472, 1473, 1474, 1475, 1477, 1478, 1480, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1522, 1523, 1538, 1551, 1552, 1553, 1571, 1577, 1596, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1610, 1611, 1612, 1620, 1641, 1642, 1648, 1653, 1655, 1659, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1692, 1693, 1695, 1699, 1701, 1710, 1714, 1722, 1726, 1736, 1742, 1745, 1757, 1759, 1760, 1762, 1787, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1808, 1809, 1810, 1814, 1828, 1832, 1835, 1837, 1845, 1848, 1851, 1852, 1856, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1873, 1875, 1876, 1877, 1879, 1881, 1882, 1883, 1884, 1885, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1919, 1920, 1921, 1923, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "lambda": [1, 38, 43, 47, 66, 69, 70, 71, 258, 486, 910, 911, 938, 1127, 1132, 1136, 1137, 1231, 1232, 1233, 1234, 1267, 1384, 1465, 1477, 1567, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1689, 1691, 1694, 1856, 1870, 1889, 1894, 1895, 1910, 1911, 1919, 1930, 1934], "captur": [1, 11, 13, 14, 16, 20, 26, 28, 33, 71, 677, 970, 972, 1004, 1010, 1015, 1199, 1670, 1671, 1866, 1870, 1875, 1894, 1895, 1898, 1907, 1911, 1914, 1933], "f": [1, 10, 12, 14, 20, 26, 27, 39, 41, 47, 49, 50, 55, 56, 64, 65, 68, 69, 70, 71, 174, 258, 286, 335, 377, 892, 893, 1087, 1089, 1096, 1105, 1126, 1127, 1129, 1130, 1131, 1132, 1136, 1137, 1149, 1196, 1203, 1206, 1207, 1267, 1394, 1396, 1397, 1399, 1428, 1477, 1494, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1518, 1519, 1522, 1523, 1529, 1562, 1564, 1565, 1577, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1745, 1856, 1866, 1868, 1869, 1882, 1883, 1889, 1892, 1894, 1896, 1897, 1898, 1900, 1906, 1907, 1911, 1912, 1923, 1928, 1930, 1934], "three": [1, 2, 6, 9, 24, 41, 45, 46, 63, 65, 68, 71, 885, 1067, 1069, 1149, 1158, 1239, 1242, 1243, 1244, 1259, 1287, 1343, 1358, 1361, 1400, 1423, 1577, 1615, 1655, 1689, 1757, 1869, 1889, 1892, 1893, 1894, 1907, 1911, 1912, 1914, 1919, 1921, 1923, 1928], "anoth": [1, 5, 7, 11, 12, 16, 20, 23, 27, 38, 39, 41, 43, 47, 48, 49, 60, 63, 71, 485, 957, 970, 972, 973, 975, 1120, 1205, 1231, 1232, 1235, 1259, 1371, 1372, 1429, 1438, 1599, 1616, 1753, 1866, 1868, 1869, 1875, 1888, 1889, 1891, 1892, 1894, 1900, 1902, 1906, 1911, 1912, 1920, 1921, 1923, 1929, 1931], "constant": [1, 15, 19, 20, 38, 71, 741, 772, 818, 819, 953, 1052, 1109, 1110, 1111, 1193, 1196, 1200, 1211, 1243, 1268, 1353, 1354, 1355, 1372, 1375, 1382, 1437, 1459, 1479, 1524, 1527, 1565, 1616, 1665, 1681, 1686, 1689, 1835, 1867, 1869, 1888, 1894, 1900, 1904, 1907, 1910, 1923], "boolean": [1, 32, 47, 58, 71, 400, 402, 886, 922, 924, 925, 927, 955, 972, 973, 975, 1074, 1140, 1152, 1185, 1186, 1187, 1188, 1189, 1192, 1220, 1268, 1284, 1289, 1329, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1467, 1577, 1617, 1620, 1713, 1808, 1809, 1832, 1851, 1852, 1868, 1870, 1894, 1925, 1926, 1928, 1929, 1930, 1931], "flag": [1, 2, 16, 17, 18, 27, 28, 32, 41, 42, 48, 59, 61, 63, 66, 68, 71, 732, 870, 898, 900, 917, 919, 928, 941, 942, 950, 955, 1000, 1120, 1125, 1127, 1128, 1130, 1131, 1132, 1136, 1137, 1153, 1154, 1171, 1177, 1184, 1287, 1434, 1538, 1539, 1608, 1617, 1620, 1650, 1670, 1671, 1757, 1759, 1764, 1789, 1837, 1849, 1856, 1864, 1866, 1869, 1881, 1889, 1892, 1894, 1903, 1904, 1907, 1911, 1914, 1928, 1929], "inform": [1, 2, 3, 4, 7, 8, 9, 14, 15, 20, 22, 28, 34, 35, 37, 38, 39, 41, 42, 45, 49, 50, 51, 54, 58, 59, 63, 65, 71, 192, 209, 255, 313, 321, 486, 496, 513, 515, 615, 677, 732, 900, 905, 906, 910, 911, 921, 1073, 1104, 1106, 1126, 1171, 1193, 1196, 1212, 1225, 1232, 1241, 1356, 1357, 1358, 1359, 1360, 1361, 1389, 1398, 1424, 1425, 1426, 1428, 1434, 1443, 1455, 1471, 1473, 1475, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1519, 1538, 1577, 1596, 1597, 1598, 1608, 1641, 1653, 1665, 1712, 1739, 1759, 1764, 1789, 1849, 1866, 1869, 1875, 1876, 1884, 1885, 1889, 1891, 1892, 1893, 1894, 1899, 1900, 1903, 1907, 1908, 1911, 1913, 1914, 1926, 1928, 1929, 1930, 1933, 1935], "well": [1, 3, 7, 9, 12, 15, 17, 21, 23, 32, 39, 41, 58, 63, 68, 69, 71, 614, 788, 819, 822, 858, 1012, 1130, 1131, 1196, 1200, 1206, 1211, 1231, 1232, 1233, 1235, 1241, 1254, 1259, 1305, 1346, 1347, 1348, 1364, 1398, 1428, 1467, 1548, 1549, 1608, 1665, 1713, 1866, 1869, 1876, 1882, 1884, 1888, 1889, 1892, 1894, 1895, 1897, 1900, 1902, 1904, 1907, 1911, 1914, 1917, 1919, 1921, 1923, 1927, 1928, 1931], "relat": [1, 6, 7, 9, 38, 41, 49, 62, 63, 68, 677, 1149, 1235, 1375, 1459, 1479, 1608, 1703, 1884, 1889, 1911, 1919, 1923, 1924, 1930, 1934], "mechan": [1, 8, 11, 41, 52, 56, 58, 71, 876, 1073, 1171, 1196, 1428, 1577, 1653, 1759, 1828, 1864, 1881, 1884, 1893, 1894, 1899, 1900, 1917, 1919, 1920], "confus": [1, 8, 17, 20, 1196, 1428, 1889, 1892, 1911, 1923], "receiv": [1, 7, 9, 14, 20, 28, 38, 41, 45, 47, 68, 70, 1026, 1196, 1428, 1604, 1605, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1698, 1869, 1879, 1881, 1888, 1889, 1902, 1912, 1919, 1920, 1921, 1923], "initi": [1, 3, 4, 8, 11, 20, 27, 34, 35, 38, 39, 43, 45, 49, 51, 58, 59, 61, 63, 89, 494, 577, 709, 710, 711, 712, 713, 714, 717, 727, 728, 729, 730, 742, 743, 753, 757, 761, 858, 859, 876, 957, 972, 980, 1001, 1006, 1007, 1010, 1011, 1036, 1143, 1172, 1194, 1196, 1208, 1209, 1267, 1268, 1285, 1346, 1347, 1348, 1349, 1351, 1359, 1360, 1361, 1365, 1371, 1372, 1380, 1381, 1383, 1391, 1392, 1393, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1428, 1436, 1443, 1445, 1467, 1477, 1518, 1599, 1608, 1610, 1611, 1615, 1617, 1620, 1648, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1699, 1753, 1754, 1755, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1864, 1867, 1868, 1869, 1879, 1884, 1887, 1889, 1892, 1893, 1894, 1899, 1906, 1907, 1910, 1911, 1912, 1918, 1919, 1920], "memori": [1, 2, 3, 5, 11, 15, 16, 19, 21, 24, 27, 30, 39, 43, 45, 47, 48, 63, 67, 71, 151, 156, 171, 173, 176, 179, 180, 181, 196, 207, 210, 240, 254, 267, 297, 325, 331, 337, 339, 340, 393, 444, 445, 446, 447, 448, 457, 462, 485, 497, 498, 521, 522, 577, 600, 614, 731, 760, 875, 877, 890, 896, 905, 906, 932, 947, 970, 971, 974, 977, 978, 980, 994, 995, 1004, 1005, 1008, 1012, 1014, 1015, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1028, 1033, 1034, 1035, 1039, 1069, 1070, 1071, 1072, 1120, 1121, 1122, 1124, 1125, 1126, 1131, 1133, 1137, 1196, 1213, 1241, 1304, 1305, 1306, 1313, 1372, 1398, 1399, 1428, 1471, 1472, 1473, 1475, 1577, 1595, 1608, 1615, 1641, 1653, 1660, 1662, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1722, 1723, 1725, 1726, 1727, 1728, 1828, 1849, 1856, 1862, 1864, 1866, 1877, 1881, 1883, 1884, 1889, 1894, 1902, 1907, 1912, 1913, 1914, 1919, 1923, 1925, 1926, 1927, 1929, 1930], "overlap": [1, 14, 16, 27, 38, 39, 41, 45, 63, 71, 875, 905, 906, 1072, 1126, 1193, 1375, 1479, 1608, 1810, 1849, 1892, 1893, 1926], "dens": [1, 14, 45, 219, 542, 543, 580, 581, 582, 583, 584, 585, 919, 928, 1153, 1154, 1215, 1268, 1684, 1785, 1788, 1791, 1792, 1795, 1796, 1797, 1798, 1800, 1801, 1806, 1815, 1849, 1884, 1904, 1923, 1926], "stride": [1, 13, 14, 15, 28, 30, 139, 222, 254, 339, 444, 445, 446, 447, 448, 497, 518, 541, 578, 580, 581, 582, 584, 585, 614, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 765, 766, 769, 770, 771, 779, 780, 862, 875, 919, 928, 1070, 1072, 1082, 1087, 1105, 1123, 1124, 1153, 1154, 1160, 1196, 1205, 1209, 1215, 1266, 1282, 1300, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1396, 1397, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1440, 1479, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1521, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1595, 1608, 1659, 1718, 1719, 1722, 1724, 1725, 1726, 1728, 1729, 1736, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1834, 1839, 1841, 1854, 1861, 1865, 1867, 1870, 1882, 1907, 1909, 1919, 1923, 1925, 1926, 1928, 1929, 1930], "thu": [1, 30, 38, 41, 47, 59, 63, 71, 782, 819, 822, 851, 1069, 1090, 1259, 1290, 1368, 1480, 1596, 1608, 1670, 1671, 1681, 1799, 1866, 1869, 1876, 1877, 1889, 1891, 1896, 1897, 1899, 1900, 1907, 1914, 1919, 1923, 1927, 1929, 1930], "rowmajor": [1, 1608], "contigu": [1, 30, 39, 43, 331, 497, 518, 614, 1374, 1431, 1567, 1608, 1730, 1736, 1814, 1867, 1883, 1884, 1909, 1916, 1923, 1925, 1927], "create_graph": [1, 151, 890, 898, 899, 900, 901, 902, 903, 904, 1867, 1888], "preserv": [1, 11, 15, 38, 47, 63, 71, 497, 776, 782, 851, 873, 876, 1110, 1111, 1126, 1200, 1206, 1429, 1438, 1480, 1538, 1596, 1666, 1745, 1749, 1787, 1828, 1866, 1877, 1882, 1884, 1887, 1892, 1895, 1904, 1907, 1919, 1923, 1926], "preexist": [1, 14, 15], "behavior": [1, 2, 7, 15, 17, 20, 28, 32, 37, 39, 41, 42, 43, 45, 47, 48, 51, 56, 59, 63, 67, 68, 70, 71, 254, 319, 470, 511, 541, 614, 684, 782, 790, 823, 875, 889, 932, 936, 949, 1064, 1069, 1072, 1114, 1121, 1122, 1126, 1196, 1206, 1209, 1211, 1241, 1248, 1252, 1265, 1266, 1267, 1282, 1290, 1297, 1365, 1368, 1389, 1398, 1428, 1443, 1467, 1480, 1492, 1527, 1595, 1596, 1599, 1600, 1608, 1609, 1654, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1707, 1713, 1729, 1736, 1778, 1814, 1835, 1849, 1863, 1866, 1870, 1871, 1873, 1875, 1882, 1884, 1890, 1892, 1894, 1895, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1915, 1916, 1919, 1924, 1927], "let": [1, 7, 8, 11, 12, 15, 19, 20, 22, 27, 28, 38, 39, 46, 47, 59, 68, 71, 485, 494, 945, 1149, 1196, 1215, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1428, 1608, 1615, 1828, 1873, 1882, 1883, 1889, 1892, 1893, 1894, 1895, 1900, 1902, 1903, 1904, 1905, 1906, 1911, 1920, 1921, 1923, 1928], "first": [1, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 20, 27, 28, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 49, 51, 55, 58, 59, 63, 69, 71, 217, 254, 290, 586, 607, 683, 686, 688, 691, 757, 790, 791, 811, 851, 854, 856, 871, 872, 881, 886, 887, 888, 889, 904, 905, 918, 922, 923, 925, 926, 927, 930, 932, 934, 948, 969, 972, 983, 1057, 1059, 1060, 1061, 1066, 1069, 1074, 1087, 1089, 1108, 1122, 1127, 1128, 1130, 1131, 1132, 1136, 1137, 1140, 1149, 1152, 1160, 1161, 1162, 1173, 1185, 1194, 1203, 1208, 1209, 1215, 1220, 1225, 1228, 1235, 1251, 1254, 1261, 1262, 1264, 1267, 1268, 1284, 1290, 1293, 1296, 1297, 1298, 1300, 1316, 1318, 1324, 1329, 1332, 1336, 1342, 1343, 1349, 1357, 1358, 1360, 1361, 1371, 1372, 1374, 1379, 1380, 1394, 1397, 1398, 1413, 1420, 1422, 1423, 1443, 1456, 1509, 1595, 1599, 1608, 1617, 1618, 1620, 1631, 1641, 1647, 1670, 1671, 1672, 1673, 1674, 1680, 1683, 1684, 1688, 1692, 1695, 1697, 1703, 1713, 1714, 1740, 1741, 1749, 1777, 1791, 1794, 1799, 1829, 1830, 1834, 1839, 1841, 1847, 1850, 1853, 1856, 1858, 1863, 1866, 1868, 1869, 1876, 1878, 1881, 1882, 1884, 1888, 1889, 1892, 1894, 1896, 1897, 1900, 1902, 1903, 1904, 1905, 1906, 1907, 1910, 1912, 1913, 1914, 1919, 1920, 1921, 1923, 1924, 1928, 1932, 1934], "accord": [1, 9, 28, 49, 794, 858, 859, 877, 920, 932, 1067, 1159, 1256, 1289, 1318, 1336, 1372, 1599, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1689, 1695, 1714, 1778, 1802, 1829, 1857, 1869, 1879, 1883, 1884, 1887, 1900, 1904, 1906, 1911, 1921, 1930], "retain": [1, 9, 41, 690, 692, 693, 696, 871, 872, 877, 1200, 1217, 1248, 1252, 1265, 1283, 1293, 1295, 1296, 1298, 1301, 1323, 1324, 1325, 1326, 1655, 1711, 1714, 1745, 1808, 1809, 1813, 1838, 1839, 1840, 1841, 1851, 1852, 1881, 1902], "over": [1, 9, 11, 14, 15, 16, 20, 21, 28, 38, 39, 41, 42, 46, 47, 49, 56, 59, 63, 64, 65, 66, 67, 68, 69, 71, 480, 677, 694, 735, 736, 737, 738, 739, 740, 763, 764, 769, 770, 771, 779, 780, 889, 914, 937, 981, 1026, 1028, 1032, 1046, 1047, 1048, 1049, 1050, 1051, 1069, 1125, 1129, 1131, 1135, 1137, 1149, 1157, 1196, 1211, 1228, 1248, 1252, 1264, 1265, 1267, 1275, 1295, 1297, 1326, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1372, 1375, 1376, 1377, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1400, 1416, 1419, 1420, 1421, 1422, 1423, 1428, 1431, 1432, 1433, 1435, 1442, 1456, 1459, 1460, 1462, 1467, 1476, 1479, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1511, 1522, 1523, 1539, 1545, 1548, 1549, 1551, 1552, 1553, 1562, 1563, 1570, 1577, 1603, 1612, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1718, 1719, 1734, 1793, 1795, 1808, 1809, 1810, 1813, 1830, 1845, 1851, 1852, 1856, 1869, 1879, 1881, 1882, 1883, 1888, 1890, 1891, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1910, 1919, 1920, 1923, 1931], "time": [1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 20, 23, 24, 25, 27, 28, 32, 38, 39, 41, 42, 43, 45, 47, 48, 49, 55, 58, 59, 60, 68, 70, 71, 89, 290, 313, 486, 491, 614, 677, 682, 683, 684, 685, 686, 687, 688, 691, 742, 743, 753, 757, 761, 765, 766, 796, 798, 821, 838, 874, 904, 910, 911, 915, 918, 930, 938, 940, 961, 968, 972, 973, 975, 1015, 1028, 1047, 1050, 1061, 1090, 1091, 1092, 1098, 1109, 1110, 1111, 1119, 1122, 1131, 1132, 1133, 1136, 1137, 1185, 1193, 1196, 1203, 1208, 1211, 1212, 1216, 1221, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1240, 1241, 1242, 1245, 1247, 1251, 1254, 1256, 1258, 1259, 1267, 1268, 1290, 1300, 1317, 1318, 1320, 1330, 1338, 1339, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1372, 1375, 1376, 1377, 1380, 1391, 1392, 1393, 1398, 1400, 1414, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1440, 1441, 1443, 1464, 1467, 1479, 1480, 1481, 1482, 1492, 1495, 1496, 1522, 1523, 1567, 1568, 1569, 1585, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1615, 1616, 1618, 1620, 1654, 1670, 1671, 1691, 1701, 1702, 1713, 1735, 1741, 1791, 1805, 1810, 1811, 1830, 1856, 1864, 1868, 1869, 1870, 1875, 1877, 1881, 1887, 1889, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1902, 1904, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1915, 1919, 1920, 1921, 1923, 1928, 1933], "4": [1, 3, 11, 13, 14, 16, 20, 28, 30, 35, 36, 38, 39, 41, 43, 45, 47, 48, 49, 56, 58, 68, 71, 192, 209, 242, 254, 289, 311, 313, 315, 317, 321, 401, 402, 444, 445, 470, 482, 486, 491, 494, 497, 511, 515, 534, 541, 553, 555, 557, 581, 582, 604, 614, 680, 681, 682, 683, 686, 688, 689, 690, 692, 693, 694, 696, 736, 738, 739, 740, 743, 745, 754, 757, 770, 771, 821, 862, 871, 872, 873, 877, 878, 879, 880, 881, 882, 884, 885, 896, 898, 901, 902, 903, 918, 921, 924, 928, 929, 930, 934, 936, 939, 940, 943, 944, 945, 948, 958, 963, 964, 965, 966, 969, 1049, 1052, 1059, 1061, 1063, 1064, 1067, 1068, 1069, 1072, 1074, 1084, 1085, 1087, 1089, 1097, 1103, 1105, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1117, 1119, 1120, 1122, 1125, 1127, 1135, 1136, 1137, 1138, 1139, 1140, 1149, 1152, 1156, 1157, 1158, 1159, 1161, 1162, 1166, 1170, 1173, 1185, 1187, 1193, 1202, 1207, 1209, 1216, 1217, 1218, 1219, 1220, 1221, 1225, 1227, 1228, 1234, 1236, 1238, 1239, 1240, 1243, 1245, 1248, 1250, 1252, 1254, 1256, 1258, 1261, 1262, 1263, 1265, 1266, 1269, 1271, 1272, 1277, 1279, 1280, 1282, 1284, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1316, 1317, 1318, 1326, 1327, 1328, 1329, 1336, 1341, 1352, 1353, 1354, 1357, 1358, 1360, 1361, 1369, 1371, 1372, 1373, 1375, 1379, 1380, 1398, 1399, 1424, 1425, 1431, 1433, 1435, 1440, 1441, 1443, 1449, 1450, 1451, 1452, 1453, 1467, 1479, 1480, 1481, 1482, 1483, 1484, 1492, 1494, 1503, 1506, 1518, 1519, 1527, 1538, 1562, 1565, 1568, 1569, 1595, 1596, 1597, 1598, 1599, 1608, 1615, 1620, 1631, 1643, 1644, 1646, 1648, 1654, 1655, 1656, 1658, 1660, 1662, 1667, 1680, 1685, 1686, 1692, 1696, 1697, 1698, 1702, 1706, 1707, 1710, 1711, 1713, 1714, 1716, 1720, 1722, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1735, 1736, 1740, 1741, 1742, 1744, 1745, 1749, 1762, 1769, 1771, 1772, 1777, 1778, 1780, 1782, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1810, 1813, 1816, 1817, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1835, 1838, 1839, 1840, 1841, 1843, 1844, 1845, 1847, 1848, 1849, 1850, 1853, 1854, 1855, 1856, 1857, 1858, 1862, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1876, 1881, 1883, 1884, 1887, 1889, 1890, 1892, 1893, 1894, 1900, 1902, 1905, 1906, 1907, 1911, 1912, 1914, 1916, 1919, 1923, 1924, 1926, 1927, 1928, 1929, 1930], "fact": [1, 3, 8, 11, 15, 22, 63, 493, 919, 928, 962, 1149, 1153, 1154, 1231, 1232, 1259, 1866, 1894, 1897, 1907, 1920, 1923], "reset": [1, 757, 817, 822, 890, 970, 1018, 1020, 1033, 1034, 1035, 1196, 1380, 1428, 1444, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1703, 1720, 1815, 1879, 1907, 1918], "phase": [1, 16, 28, 39, 790, 1231, 1232, 1695, 1814, 1867, 1906], "recreat": [1, 27, 1889], "valid": [1, 14, 20, 23, 28, 41, 47, 56, 58, 71, 85, 744, 745, 754, 788, 941, 953, 956, 1012, 1069, 1194, 1196, 1197, 1217, 1231, 1232, 1241, 1242, 1243, 1254, 1259, 1290, 1356, 1357, 1358, 1502, 1503, 1504, 1527, 1599, 1626, 1631, 1635, 1664, 1665, 1685, 1686, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1713, 1866, 1867, 1868, 1869, 1883, 1884, 1889, 1892, 1894, 1898, 1907, 1910, 1913, 1919, 1920], "altern": [1, 9, 16, 38, 41, 71, 677, 811, 1129, 1130, 1158, 1203, 1267, 1456, 1473, 1475, 1546, 1608, 1660, 1684, 1756, 1849, 1862, 1863, 1870, 1889, 1898, 1900, 1903, 1904, 1906], "never": [1, 5, 7, 11, 14, 39, 41, 58, 59, 222, 223, 793, 876, 938, 1193, 1242, 1243, 1254, 1267, 1608, 1641, 1889, 1892, 1894, 1911, 1912, 1919, 1930], "long": [1, 7, 9, 16, 28, 38, 58, 70, 731, 746, 748, 749, 750, 751, 753, 760, 778, 1126, 1172, 1296, 1301, 1324, 1351, 1364, 1372, 1398, 1399, 1435, 1511, 1664, 1712, 1825, 1829, 1839, 1841, 1846, 1864, 1869, 1876, 1881, 1882, 1883, 1889, 1890, 1892, 1894, 1896, 1902, 1904, 1907, 1911, 1913, 1918, 1925, 1926, 1928, 1929], "hard": [1, 7, 8, 16, 17, 19, 41, 46, 59, 952, 1069, 1268, 1384, 1529, 1530, 1866, 1867, 1868, 1889, 1907, 1911], "matter": [1, 4, 41, 63, 894, 1057, 1069, 1203, 1206, 1211, 1608, 1884, 1889, 1911], "discourag": [1, 1038, 1042, 1889, 1919], "aggress": [1, 16, 1193, 1889, 1919], "buffer": [1, 4, 16, 38, 39, 41, 63, 67, 877, 983, 1015, 1122, 1125, 1135, 1196, 1203, 1206, 1217, 1267, 1346, 1347, 1348, 1365, 1401, 1402, 1403, 1428, 1467, 1601, 1608, 1610, 1617, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1648, 1650, 1663, 1681, 1683, 1745, 1787, 1832, 1868, 1885, 1889, 1893, 1894, 1900, 1905, 1907, 1912], "free": [1, 7, 14, 41, 43, 47, 49, 58, 59, 63, 71, 1021, 1039, 1199, 1211, 1268, 1877, 1887, 1889, 1892, 1894, 1896, 1902, 1906, 1907], "reus": [1, 11, 14, 16, 28, 41, 46, 71, 485, 1865, 1889, 1892, 1919], "effici": [1, 2, 3, 8, 30, 38, 47, 63, 64, 69, 151, 757, 890, 895, 904, 940, 1133, 1141, 1213, 1251, 1268, 1287, 1336, 1367, 1368, 1369, 1372, 1373, 1380, 1434, 1440, 1441, 1475, 1577, 1877, 1884, 1889, 1893, 1894, 1897, 1901, 1903, 1910, 1912, 1914, 1919, 1920, 1923, 1926, 1927, 1931], "few": [1, 7, 8, 14, 16, 19, 20, 21, 22, 28, 39, 43, 49, 1069, 1126, 1372, 1608, 1863, 1869, 1889, 1892, 1894, 1896, 1898, 1903, 1906, 1907, 1910, 1912, 1914, 1917, 1927, 1929, 1931], "occas": [1, 7, 1889], "actual": [1, 8, 14, 15, 16, 19, 20, 21, 26, 43, 49, 51, 63, 68, 71, 787, 961, 1087, 1105, 1207, 1211, 1359, 1360, 1361, 1527, 1608, 1632, 1662, 1684, 1689, 1863, 1868, 1869, 1882, 1889, 1892, 1893, 1894, 1897, 1902, 1906, 1914, 1919, 1925, 1930], "signific": [1, 3, 19, 23, 43, 1697, 1889, 1892, 1923], "amount": [1, 2, 3, 4, 7, 14, 22, 28, 38, 41, 43, 49, 58, 71, 906, 994, 1020, 1022, 1026, 1193, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1375, 1416, 1431, 1479, 1510, 1625, 1626, 1628, 1629, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1883, 1889, 1891, 1892, 1895, 1896, 1898, 1919, 1923], "heavi": [1, 15, 41, 1889, 1906], "pressur": [1, 1889], "might": [1, 3, 4, 9, 11, 14, 15, 16, 17, 19, 20, 27, 28, 32, 33, 35, 41, 43, 45, 47, 58, 68, 70, 71, 151, 485, 541, 890, 969, 1211, 1212, 1527, 1608, 1609, 1863, 1866, 1879, 1884, 1889, 1891, 1892, 1893, 1894, 1897, 1899, 1904, 1907, 1911, 1912, 1914, 1919, 1920, 1921, 1923, 1927, 1929, 1930], "keep": [1, 3, 7, 14, 15, 20, 38, 39, 43, 45, 49, 58, 63, 973, 1267, 1346, 1347, 1348, 1352, 1371, 1391, 1392, 1393, 1437, 1467, 1527, 1538, 1608, 1627, 1666, 1734, 1863, 1864, 1866, 1881, 1883, 1884, 1889, 1892, 1893, 1895, 1896, 1897, 1902, 1908, 1910, 1914, 1919, 1920, 1921], "track": [1, 14, 15, 16, 20, 24, 26, 49, 335, 978, 1018, 1020, 1033, 1034, 1035, 1125, 1126, 1171, 1297, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1608, 1627, 1879, 1881, 1883, 1884, 1889, 1892, 1894, 1895, 1896, 1899, 1900, 1908, 1910, 1912, 1913, 1920, 1921, 1923], "save": [1, 5, 7, 11, 16, 30, 33, 39, 41, 43, 45, 63, 494, 834, 886, 887, 896, 1133, 1195, 1196, 1201, 1203, 1211, 1213, 1267, 1428, 1608, 1662, 1663, 1685, 1691, 1694, 1698, 1866, 1867, 1878, 1883, 1894, 1895, 1900, 1902, 1904, 1907, 1909, 1910, 1911, 1913, 1923, 1928, 1932], "afterward": [1, 1428, 1599, 1608], "start": [1, 3, 4, 8, 9, 14, 16, 21, 24, 38, 39, 41, 43, 49, 55, 57, 58, 59, 60, 63, 67, 70, 71, 402, 432, 433, 494, 535, 695, 862, 957, 1018, 1020, 1031, 1033, 1034, 1091, 1092, 1108, 1122, 1194, 1208, 1221, 1266, 1282, 1327, 1328, 1336, 1341, 1342, 1343, 1372, 1374, 1421, 1422, 1423, 1429, 1431, 1519, 1565, 1608, 1622, 1626, 1628, 1641, 1667, 1689, 1695, 1729, 1760, 1783, 1796, 1797, 1798, 1800, 1801, 1863, 1864, 1865, 1867, 1868, 1873, 1876, 1881, 1883, 1889, 1890, 1892, 1893, 1896, 1900, 1901, 1902, 1906, 1907, 1910, 1913, 1919, 1920, 1921, 1923], "sure": [1, 7, 9, 16, 19, 28, 38, 41, 43, 48, 50, 59, 61, 66, 71, 858, 859, 890, 1073, 1120, 1171, 1200, 1211, 1212, 1268, 1608, 1653, 1691, 1832, 1869, 1882, 1889, 1893, 1896, 1897, 1906, 1907, 1913, 1914, 1919, 1920, 1921, 1923, 1928], "longer": [1, 11, 28, 41, 60, 67, 68, 684, 887, 905, 906, 1193, 1200, 1608, 1655, 1879, 1889, 1892, 1919, 1921], "find": [1, 7, 14, 15, 16, 17, 20, 21, 22, 27, 28, 32, 41, 58, 68, 71, 83, 1069, 1149, 1217, 1268, 1359, 1360, 1361, 1398, 1665, 1703, 1714, 1749, 1815, 1863, 1877, 1881, 1883, 1889, 1891, 1892, 1893, 1894, 1896, 1897, 1902, 1904, 1907, 1909, 1914, 1919, 1923, 1926, 1928, 1930, 1932, 1934], "quick": [1, 7, 66, 1876, 1900], "guid": [1, 8, 9, 20, 21, 26, 38, 83, 84, 1207, 1864, 1892, 1895, 1911, 1914], "var": [1, 14, 20, 28, 51, 56, 58, 61, 1346, 1347, 1348, 1382, 1383, 1391, 1392, 1393, 1400, 1467, 1524, 1717, 1852, 1865, 1867, 1869, 1882, 1909], "thing": [1, 3, 7, 8, 11, 15, 16, 20, 22, 26, 28, 41, 68, 71, 1126, 1205, 1297, 1344, 1529, 1788, 1868, 1889, 1892, 1894, 1895, 1896, 1897, 1902, 1907, 1911, 1914, 1915, 1921], "detach": [1, 5, 27, 223, 447, 457, 947, 1125, 1196, 1351, 1428, 1511, 1529, 1791, 1828, 1866, 1867, 1882, 1884, 1896, 1907, 1909, 1916, 1923, 1927, 1929], "register_hook": [1, 1882, 1889], "name": [1, 2, 3, 12, 13, 16, 20, 22, 24, 27, 28, 32, 39, 41, 46, 47, 49, 51, 52, 55, 56, 58, 60, 63, 71, 677, 694, 744, 745, 754, 789, 811, 812, 813, 814, 821, 837, 851, 855, 914, 956, 971, 998, 1125, 1135, 1194, 1196, 1197, 1203, 1206, 1211, 1212, 1226, 1231, 1232, 1238, 1239, 1241, 1242, 1243, 1244, 1254, 1255, 1257, 1259, 1260, 1267, 1428, 1478, 1601, 1606, 1607, 1608, 1615, 1616, 1617, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1649, 1650, 1652, 1664, 1665, 1745, 1755, 1850, 1863, 1864, 1866, 1867, 1869, 1870, 1873, 1875, 1878, 1879, 1881, 1887, 1889, 1892, 1893, 1894, 1897, 1899, 1900, 1907, 1909, 1911, 1912, 1913, 1919, 1920, 1925, 1928, 1930, 1931, 1932, 1933, 1934, 1935], "factori": [1, 2, 15, 30, 47, 49, 52, 56, 68, 821, 1069, 1653, 1665, 1753, 1864, 1867, 1883, 1892, 1909, 1926], "ones": [1, 16, 18, 22, 27, 28, 38, 41, 45, 47, 63, 68, 69, 70, 71, 151, 254, 313, 402, 444, 445, 447, 513, 791, 856, 890, 899, 901, 902, 903, 904, 905, 920, 932, 950, 1052, 1060, 1082, 1125, 1132, 1133, 1136, 1171, 1193, 1196, 1207, 1216, 1242, 1258, 1267, 1345, 1371, 1375, 1382, 1383, 1400, 1428, 1432, 1433, 1435, 1437, 1479, 1518, 1577, 1595, 1599, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1645, 1647, 1650, 1660, 1664, 1717, 1734, 1752, 1783, 1831, 1835, 1859, 1867, 1869, 1871, 1882, 1883, 1889, 1890, 1892, 1894, 1901, 1903, 1904, 1907, 1909, 1910, 1911, 1914, 1919, 1921, 1924, 1926, 1929], "autograd_tensor": 1, "base": [1, 3, 7, 9, 13, 14, 16, 18, 19, 20, 32, 33, 38, 41, 42, 43, 45, 46, 47, 49, 51, 56, 58, 59, 60, 63, 68, 71, 76, 788, 793, 797, 799, 817, 818, 819, 821, 822, 858, 859, 896, 917, 950, 968, 1030, 1031, 1067, 1069, 1112, 1149, 1159, 1198, 1209, 1221, 1259, 1270, 1272, 1274, 1282, 1365, 1428, 1431, 1432, 1433, 1437, 1471, 1473, 1475, 1544, 1577, 1608, 1612, 1613, 1615, 1622, 1626, 1628, 1667, 1668, 1669, 1670, 1671, 1672, 1681, 1682, 1683, 1684, 1710, 1720, 1745, 1759, 1814, 1815, 1829, 1839, 1841, 1857, 1864, 1867, 1869, 1891, 1892, 1893, 1894, 1900, 1908, 1912, 1913, 1914, 1919, 1920, 1923, 1924, 1927, 1928, 1930, 1932, 1933], "static": [1, 3, 8, 11, 13, 14, 20, 32, 42, 47, 49, 63, 791, 812, 814, 823, 829, 854, 856, 858, 886, 887, 888, 889, 1209, 1471, 1608, 1789, 1866, 1867, 1868, 1869, 1892, 1899, 1908, 1912, 1915, 1919, 1925], "Then": [1, 11, 17, 41, 59, 71, 1375, 1479, 1617, 1665, 1889, 1890, 1893, 1894, 1895, 1903, 1904, 1907, 1910, 1911, 1919, 1920, 1932], "op": [1, 4, 11, 12, 15, 16, 17, 18, 19, 20, 22, 27, 28, 41, 71, 83, 151, 501, 521, 601, 754, 789, 790, 791, 820, 823, 851, 858, 859, 890, 896, 904, 940, 950, 976, 991, 993, 997, 998, 1012, 1013, 1038, 1042, 1044, 1126, 1146, 1197, 1209, 1211, 1212, 1273, 1444, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1701, 1760, 1837, 1864, 1865, 1869, 1873, 1875, 1876, 1877, 1879, 1882, 1883, 1891, 1892, 1893, 1894, 1902, 1911, 1913, 1914, 1915, 1916, 1917, 1925, 1927, 1929, 1933], "ctx": [1, 56, 886, 887, 888, 894, 895, 896, 897, 1888, 1894, 1895, 1907], "gradcheck": [1, 906, 1864, 1894], "extend": [1, 38, 41, 43, 47, 50, 60, 71, 858, 887, 889, 896, 1430, 1439, 1864, 1873, 1884, 1889, 1899, 1901, 1902, 1907, 1909, 1911, 1917, 1923, 1934], "staticmethod": [1, 887, 889, 894, 895, 896, 897, 1869, 1888, 1894, 1907, 1919], "result": [1, 3, 4, 5, 7, 8, 9, 12, 15, 20, 21, 24, 27, 28, 32, 35, 38, 39, 41, 43, 47, 49, 51, 56, 59, 63, 68, 69, 70, 71, 154, 222, 223, 254, 255, 315, 335, 398, 494, 496, 553, 580, 581, 582, 584, 585, 615, 683, 684, 685, 686, 687, 690, 692, 693, 694, 696, 757, 790, 874, 876, 892, 893, 898, 899, 900, 901, 902, 903, 905, 906, 918, 921, 932, 936, 941, 947, 949, 953, 964, 966, 982, 984, 986, 1012, 1013, 1026, 1048, 1049, 1050, 1051, 1052, 1064, 1069, 1087, 1090, 1096, 1105, 1112, 1114, 1117, 1121, 1122, 1125, 1126, 1127, 1130, 1131, 1136, 1137, 1141, 1157, 1158, 1160, 1173, 1187, 1196, 1199, 1200, 1207, 1211, 1212, 1214, 1216, 1217, 1221, 1235, 1237, 1239, 1240, 1248, 1252, 1254, 1256, 1257, 1258, 1265, 1275, 1276, 1283, 1293, 1295, 1296, 1297, 1298, 1300, 1301, 1323, 1326, 1365, 1367, 1368, 1369, 1373, 1375, 1380, 1394, 1398, 1428, 1434, 1443, 1472, 1473, 1474, 1475, 1479, 1509, 1527, 1538, 1592, 1595, 1596, 1608, 1615, 1617, 1650, 1653, 1654, 1655, 1656, 1665, 1695, 1701, 1703, 1710, 1711, 1714, 1720, 1733, 1739, 1754, 1782, 1792, 1794, 1795, 1806, 1808, 1809, 1810, 1813, 1814, 1815, 1824, 1828, 1829, 1834, 1835, 1837, 1838, 1840, 1851, 1852, 1856, 1866, 1867, 1868, 1869, 1876, 1877, 1882, 1883, 1884, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1903, 1904, 1907, 1908, 1910, 1912, 1913, 1915, 1916, 1919, 1920, 1923, 1926, 1928, 1929, 1930, 1933, 1934], "save_for_backward": [1, 887, 895, 897, 1888, 1889, 1894, 1895, 1907], "grad_output": [1, 886, 894, 904, 906, 910, 911, 1196, 1428, 1604, 1605, 1865, 1867, 1889, 1892, 1894, 1895, 1900], "saved_tensor": [1, 895, 896, 897, 1888, 1889, 1894, 1895], "avail": [1, 2, 5, 8, 9, 16, 19, 21, 28, 32, 33, 38, 41, 49, 58, 59, 83, 84, 956, 992, 994, 995, 1006, 1009, 1016, 1017, 1036, 1037, 1039, 1069, 1202, 1259, 1260, 1285, 1471, 1480, 1538, 1577, 1596, 1703, 1757, 1810, 1815, 1849, 1863, 1864, 1866, 1868, 1869, 1873, 1876, 1881, 1889, 1892, 1894, 1898, 1900, 1901, 1904, 1906, 1910, 1911, 1913, 1914, 1915, 1919, 1933, 1934], "cost": [1, 3, 4, 8, 9, 23, 28, 39, 63, 940, 1251, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1753, 1892, 1904, 1915, 1920, 1926], "both": [1, 2, 3, 11, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 28, 32, 38, 39, 41, 42, 43, 46, 47, 51, 56, 57, 58, 59, 63, 70, 71, 98, 339, 726, 765, 766, 769, 770, 771, 790, 848, 889, 893, 899, 900, 901, 902, 903, 918, 955, 968, 993, 1064, 1085, 1115, 1116, 1117, 1125, 1139, 1141, 1149, 1156, 1173, 1186, 1187, 1193, 1196, 1209, 1217, 1218, 1266, 1282, 1290, 1296, 1309, 1310, 1341, 1342, 1346, 1347, 1348, 1353, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1383, 1389, 1391, 1392, 1393, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1421, 1422, 1423, 1428, 1434, 1467, 1475, 1479, 1480, 1483, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1551, 1552, 1553, 1577, 1608, 1620, 1650, 1670, 1671, 1695, 1718, 1719, 1788, 1789, 1791, 1810, 1814, 1834, 1835, 1866, 1868, 1869, 1876, 1882, 1883, 1885, 1888, 1889, 1890, 1894, 1895, 1897, 1900, 1903, 1904, 1905, 1907, 1911, 1912, 1914, 1917, 1919, 1921, 1923, 1924, 1930, 1932, 1933], "cpu": [1, 4, 5, 11, 15, 19, 22, 24, 25, 28, 32, 34, 38, 41, 43, 63, 89, 120, 197, 289, 326, 335, 444, 445, 446, 447, 448, 457, 577, 586, 862, 877, 915, 919, 928, 966, 972, 982, 983, 984, 986, 1070, 1072, 1082, 1087, 1105, 1117, 1122, 1123, 1146, 1147, 1153, 1154, 1196, 1203, 1205, 1206, 1215, 1225, 1227, 1231, 1232, 1233, 1234, 1236, 1238, 1241, 1243, 1244, 1250, 1253, 1256, 1259, 1260, 1266, 1267, 1282, 1285, 1296, 1365, 1371, 1428, 1471, 1592, 1608, 1612, 1613, 1641, 1642, 1656, 1659, 1713, 1722, 1724, 1726, 1728, 1729, 1753, 1758, 1760, 1761, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1782, 1791, 1796, 1797, 1798, 1799, 1800, 1801, 1814, 1828, 1829, 1830, 1839, 1841, 1846, 1849, 1861, 1864, 1866, 1867, 1869, 1873, 1877, 1881, 1882, 1884, 1892, 1895, 1898, 1900, 1902, 1903, 1904, 1906, 1907, 1909, 1912, 1913, 1915, 1918, 1919, 1923, 1925, 1926, 1929, 1930, 1931], "There": [1, 5, 6, 7, 9, 11, 14, 15, 16, 20, 21, 22, 27, 28, 32, 37, 41, 43, 58, 64, 68, 69, 71, 677, 731, 790, 887, 1126, 1365, 1398, 1443, 1577, 1608, 1648, 1653, 1863, 1866, 1868, 1869, 1875, 1876, 1883, 1889, 1892, 1894, 1895, 1896, 1899, 1902, 1906, 1907, 1911, 1914, 1915, 1919, 1921, 1929, 1931], "moment": [1, 20, 24, 769, 770, 771, 964, 1670, 1671, 1672, 1674, 1680, 1684, 1877, 1881, 1884, 1913, 1919], "nvprof": [1, 4, 912, 1892], "regist": [1, 15, 18, 19, 23, 33, 39, 41, 45, 46, 47, 58, 60, 63, 71, 83, 84, 486, 677, 789, 790, 851, 910, 911, 950, 1015, 1196, 1267, 1428, 1429, 1430, 1438, 1439, 1456, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1615, 1616, 1617, 1618, 1620, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1873, 1879, 1881, 1893, 1894, 1899, 1900, 1907, 1911, 1919], "activ": [1, 5, 7, 9, 11, 15, 28, 60, 63, 69, 789, 791, 793, 800, 804, 838, 839, 848, 858, 859, 971, 980, 995, 1008, 1026, 1125, 1127, 1137, 1268, 1340, 1367, 1368, 1369, 1373, 1383, 1400, 1427, 1429, 1446, 1457, 1471, 1473, 1475, 1520, 1557, 1580, 1608, 1618, 1619, 1620, 1650, 1655, 1856, 1864, 1865, 1877, 1881, 1892, 1894, 1895, 1900, 1907, 1910, 1912, 1913, 1914, 1915, 1916, 1919, 1923, 1932, 1933], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1913], "use_devic": 1, "record_shap": [1, 1913], "with_flop": [1, 1913], "profile_memori": [1, 1913], "with_stack": [1, 1913], "with_modul": [1, 1913], "use_kineto": 1, "use_cpu": 1, "experimental_config": [1, 1913], "hold": [1, 14, 20, 41, 56, 58, 60, 61, 63, 67, 70, 71, 534, 1268, 1375, 1429, 1430, 1438, 1439, 1479, 1599, 1608, 1610, 1611, 1617, 1627, 1641, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1796, 1797, 1798, 1799, 1800, 1801, 1890, 1892, 1894, 1896, 1899, 1902, 1910, 1913, 1919, 1920, 1921, 1923, 1925, 1926, 1928, 1929], "summari": [1, 3, 22, 28, 59, 1027, 1762, 1864, 1879, 1928, 1933], "hood": [1, 15, 20, 70, 1881, 1889, 1892, 1893, 1902, 1911, 1921], "just": [1, 2, 7, 11, 12, 13, 14, 15, 16, 17, 20, 25, 27, 32, 39, 41, 46, 47, 49, 56, 71, 586, 684, 694, 787, 820, 823, 886, 888, 914, 961, 962, 1211, 1212, 1250, 1253, 1258, 1259, 1285, 1367, 1368, 1369, 1373, 1608, 1620, 1621, 1685, 1753, 1838, 1839, 1840, 1841, 1863, 1866, 1881, 1888, 1889, 1894, 1895, 1897, 1899, 1900, 1901, 1905, 1911, 1912, 1919, 1920, 1926, 1927, 1929, 1933], "record": [1, 5, 11, 14, 16, 28, 45, 50, 51, 52, 56, 59, 70, 71, 444, 445, 446, 447, 448, 494, 816, 817, 818, 819, 822, 824, 862, 919, 928, 972, 973, 975, 1070, 1071, 1072, 1082, 1087, 1105, 1122, 1123, 1124, 1153, 1154, 1196, 1211, 1215, 1266, 1282, 1309, 1310, 1365, 1428, 1659, 1660, 1662, 1665, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1861, 1862, 1866, 1868, 1884, 1888, 1889, 1892, 1894, 1907, 1908, 1913, 1919, 1928, 1929, 1930, 1931, 1932, 1933], "event": [1, 44, 47, 49, 57, 60, 70, 914, 915, 916, 973, 975, 1026, 1029, 1211, 1212, 1273, 1309, 1310, 1577, 1864, 1879, 1881, 1892, 1913, 1928], "being": [1, 3, 5, 9, 11, 14, 15, 16, 19, 20, 26, 28, 38, 41, 43, 45, 47, 49, 51, 58, 59, 60, 63, 67, 68, 70, 71, 98, 402, 757, 790, 796, 889, 898, 904, 948, 973, 981, 1028, 1032, 1046, 1047, 1082, 1115, 1116, 1126, 1135, 1136, 1185, 1196, 1200, 1285, 1294, 1299, 1344, 1345, 1362, 1364, 1371, 1372, 1376, 1377, 1382, 1388, 1395, 1419, 1420, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1459, 1460, 1476, 1492, 1499, 1500, 1510, 1522, 1523, 1527, 1539, 1562, 1570, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1713, 1714, 1808, 1809, 1810, 1851, 1852, 1866, 1869, 1876, 1879, 1882, 1883, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1907, 1911, 1914, 1917, 1919, 1920, 1923, 1930, 1932, 1934], "those": [1, 2, 4, 11, 13, 15, 16, 19, 20, 22, 24, 28, 32, 38, 39, 41, 43, 45, 47, 63, 68, 70, 71, 821, 905, 984, 994, 1057, 1059, 1137, 1211, 1253, 1259, 1267, 1306, 1336, 1344, 1345, 1362, 1364, 1372, 1388, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1480, 1499, 1500, 1510, 1519, 1539, 1562, 1570, 1665, 1684, 1757, 1814, 1835, 1856, 1868, 1882, 1883, 1888, 1889, 1892, 1894, 1895, 1898, 1900, 1904, 1905, 1907, 1910, 1917, 1919, 1921], "report": [1, 3, 4, 16, 22, 24, 28, 35, 41, 51, 59, 70, 71, 1026, 1129, 1130, 1132, 1888, 1892, 1912, 1923], "runtim": [1, 3, 5, 16, 23, 32, 41, 71, 824, 875, 914, 1067, 1069, 1159, 1196, 1211, 1428, 1610, 1611, 1666, 1709, 1849, 1857, 1869, 1882, 1883, 1889, 1892, 1894, 1902, 1907], "note": [1, 2, 3, 5, 8, 14, 16, 17, 19, 22, 27, 28, 30, 32, 33, 35, 37, 38, 39, 41, 43, 45, 46, 47, 48, 49, 56, 58, 60, 63, 67, 69, 70, 71, 151, 222, 377, 497, 498, 511, 513, 515, 732, 738, 739, 740, 788, 790, 791, 792, 796, 838, 858, 862, 881, 890, 896, 898, 899, 900, 901, 902, 903, 904, 906, 940, 952, 955, 969, 1044, 1052, 1057, 1069, 1090, 1120, 1122, 1137, 1138, 1149, 1171, 1183, 1193, 1194, 1196, 1197, 1202, 1268, 1290, 1309, 1310, 1344, 1345, 1351, 1359, 1360, 1361, 1362, 1364, 1371, 1372, 1380, 1382, 1388, 1394, 1395, 1398, 1419, 1420, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1438, 1439, 1442, 1443, 1459, 1460, 1467, 1471, 1476, 1480, 1499, 1500, 1510, 1518, 1519, 1527, 1538, 1539, 1562, 1565, 1570, 1571, 1584, 1599, 1608, 1609, 1655, 1663, 1664, 1681, 1687, 1689, 1695, 1697, 1713, 1720, 1795, 1796, 1797, 1798, 1800, 1801, 1806, 1810, 1814, 1835, 1849, 1856, 1863, 1866, 1867, 1870, 1876, 1881, 1884, 1885, 1889, 1890, 1891, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1908, 1910, 1911, 1913, 1915, 1917, 1918, 1920, 1921, 1923, 1927, 1928, 1935], "propag": [1, 14, 15, 20, 27, 43, 44, 47, 49, 58, 71, 511, 683, 686, 687, 688, 692, 693, 694, 695, 763, 764, 765, 766, 776, 779, 780, 782, 783, 784, 835, 837, 918, 1115, 1116, 1323, 1795, 1864, 1881, 1882, 1888, 1892, 1894, 1897, 1899, 1919, 1932, 1933], "async": [1, 41, 42, 70, 600, 1608, 1870, 1892, 1899, 1925], "task": [1, 3, 7, 39, 64, 69, 1199, 1214, 1391, 1392, 1393, 1869, 1891, 1899, 1900, 1906], "cuda": [1, 3, 4, 5, 15, 16, 18, 19, 21, 24, 28, 32, 37, 38, 39, 41, 43, 45, 63, 89, 151, 289, 313, 321, 335, 340, 513, 515, 521, 577, 862, 874, 876, 890, 904, 919, 921, 928, 950, 970, 971, 972, 973, 975, 976, 991, 993, 1004, 1070, 1071, 1072, 1082, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1123, 1153, 1154, 1196, 1215, 1217, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1250, 1253, 1256, 1257, 1259, 1260, 1266, 1267, 1282, 1285, 1301, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1371, 1398, 1428, 1443, 1467, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1519, 1527, 1538, 1565, 1577, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1613, 1654, 1656, 1659, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1713, 1722, 1724, 1726, 1728, 1729, 1753, 1757, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1792, 1796, 1797, 1798, 1799, 1800, 1801, 1814, 1828, 1830, 1839, 1841, 1846, 1849, 1861, 1864, 1867, 1873, 1882, 1884, 1894, 1895, 1900, 1903, 1907, 1909, 1910, 1912, 1913, 1918, 1919, 1925, 1926, 1929, 1930, 1931], "cudaev": 1, "approxim": [1, 3, 39, 45, 58, 71, 1133, 1149, 1259, 1268, 1336, 1378, 1442, 1457, 1464, 1525, 1570, 1580, 1616, 1667, 1684, 1703, 1815, 1835, 1865, 1867, 1869, 1892, 1893, 1894, 1897, 1907, 1935], "4u": 1, "shape": [1, 8, 13, 16, 18, 21, 27, 28, 30, 39, 41, 47, 63, 65, 67, 69, 71, 98, 172, 192, 209, 219, 400, 402, 444, 446, 448, 470, 495, 496, 511, 513, 515, 541, 563, 614, 677, 682, 684, 685, 694, 732, 742, 743, 753, 755, 757, 761, 763, 764, 765, 766, 769, 770, 771, 778, 793, 875, 881, 895, 899, 901, 902, 903, 914, 920, 921, 923, 926, 931, 933, 937, 938, 950, 963, 985, 1059, 1060, 1061, 1063, 1064, 1069, 1070, 1072, 1074, 1089, 1090, 1091, 1092, 1100, 1101, 1102, 1108, 1114, 1115, 1116, 1117, 1123, 1130, 1131, 1135, 1136, 1137, 1138, 1140, 1152, 1157, 1158, 1162, 1170, 1173, 1187, 1193, 1209, 1211, 1212, 1215, 1220, 1221, 1225, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1284, 1285, 1289, 1297, 1302, 1303, 1317, 1318, 1329, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1518, 1519, 1523, 1527, 1529, 1538, 1539, 1544, 1551, 1552, 1553, 1563, 1564, 1567, 1568, 1569, 1571, 1577, 1596, 1599, 1608, 1610, 1611, 1615, 1617, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1656, 1659, 1664, 1666, 1701, 1710, 1714, 1718, 1719, 1722, 1724, 1725, 1726, 1733, 1735, 1736, 1740, 1749, 1752, 1777, 1791, 1792, 1794, 1797, 1799, 1805, 1810, 1811, 1814, 1824, 1831, 1835, 1845, 1846, 1847, 1856, 1859, 1861, 1864, 1865, 1866, 1867, 1869, 1882, 1883, 1884, 1889, 1890, 1892, 1894, 1895, 1896, 1908, 1909, 1913, 1916, 1919, 1923, 1924, 1928, 1929, 1930, 1931], "about": [1, 8, 9, 12, 14, 16, 17, 20, 21, 23, 28, 34, 38, 41, 42, 45, 49, 51, 55, 57, 59, 64, 68, 71, 255, 496, 615, 905, 906, 977, 978, 994, 1018, 1020, 1021, 1022, 1024, 1025, 1026, 1027, 1033, 1034, 1035, 1126, 1225, 1232, 1372, 1641, 1684, 1695, 1756, 1863, 1866, 1868, 1869, 1873, 1876, 1891, 1892, 1893, 1894, 1896, 1899, 1902, 1903, 1905, 1911, 1913, 1914, 1917, 1920, 1921, 1923, 1927, 1929], "dimens": [1, 14, 30, 38, 41, 46, 47, 63, 68, 69, 71, 219, 233, 254, 260, 313, 315, 317, 321, 432, 433, 471, 472, 473, 491, 511, 513, 515, 534, 540, 542, 543, 557, 580, 581, 582, 584, 585, 604, 614, 683, 689, 690, 692, 693, 694, 696, 732, 755, 776, 778, 782, 871, 872, 873, 874, 883, 884, 885, 889, 904, 929, 937, 940, 941, 942, 943, 944, 969, 984, 986, 1048, 1049, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1067, 1069, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1137, 1138, 1149, 1158, 1159, 1170, 1173, 1193, 1216, 1217, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1275, 1276, 1283, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1303, 1316, 1323, 1324, 1325, 1326, 1327, 1328, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1357, 1358, 1360, 1361, 1362, 1363, 1364, 1365, 1368, 1370, 1371, 1372, 1374, 1375, 1378, 1379, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1400, 1408, 1409, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1427, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1446, 1447, 1448, 1455, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1473, 1475, 1476, 1477, 1478, 1479, 1492, 1498, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1526, 1527, 1528, 1529, 1538, 1541, 1544, 1545, 1546, 1563, 1564, 1565, 1577, 1583, 1584, 1596, 1615, 1616, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1642, 1643, 1645, 1647, 1649, 1652, 1654, 1655, 1701, 1704, 1711, 1713, 1714, 1715, 1720, 1734, 1735, 1736, 1740, 1749, 1751, 1752, 1762, 1783, 1787, 1790, 1793, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1807, 1808, 1809, 1810, 1813, 1814, 1823, 1825, 1829, 1830, 1831, 1832, 1834, 1835, 1837, 1838, 1839, 1840, 1841, 1844, 1845, 1846, 1847, 1848, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1864, 1865, 1867, 1868, 1869, 1884, 1887, 1890, 1892, 1895, 1896, 1897, 1903, 1912, 1914, 1923, 1924, 1926, 1928, 1929], "collect": [1, 3, 7, 16, 20, 24, 27, 28, 38, 42, 43, 45, 49, 58, 63, 70, 71, 796, 797, 821, 858, 859, 938, 1008, 1070, 1158, 1297, 1608, 1631, 1659, 1722, 1726, 1861, 1864, 1867, 1868, 1869, 1879, 1892, 1893, 1895, 1910, 1913, 1914, 1917, 1921, 1923, 1928, 1930], "group": [1, 3, 9, 12, 16, 28, 38, 39, 42, 43, 45, 49, 55, 58, 59, 60, 61, 63, 66, 71, 607, 677, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 769, 770, 771, 877, 914, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1383, 1404, 1405, 1406, 1407, 1408, 1409, 1467, 1502, 1503, 1504, 1505, 1506, 1507, 1528, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1847, 1863, 1864, 1865, 1867, 1869, 1881, 1887, 1892, 1893, 1907, 1910, 1911, 1913, 1919, 1928], "prof": [1, 16, 28, 55, 1913], "key_averag": [1, 1913], "group_by_input_shap": [1, 914, 1913], "skew": [1, 3, 4, 1247, 1615], "neglig": [1, 1208, 1757], "bottom": [1, 1527, 1876], "But": [1, 7, 15, 17, 20, 22, 63, 70, 485, 1211, 1241, 1608, 1889, 1894, 1896, 1897, 1911, 1912, 1923, 1927, 1934], "total": [1, 3, 4, 7, 38, 39, 41, 55, 57, 58, 59, 63, 874, 915, 986, 1021, 1026, 1039, 1122, 1157, 1158, 1305, 1351, 1375, 1388, 1395, 1419, 1434, 1479, 1564, 1608, 1612, 1654, 1656, 1658, 1689, 1695, 1735, 1762, 1810, 1863, 1868, 1879, 1892, 1898, 1910], "artifici": [1, 1923], "estim": [1, 3, 38, 47, 964, 968, 1149, 1193, 1346, 1347, 1348, 1378, 1382, 1383, 1391, 1392, 1393, 1400, 1467, 1525, 1616, 1681, 1778, 1913], "flop": [1, 1913], "hardwar": [1, 8, 16, 28, 856, 858, 859, 1231, 1232, 1259, 1849, 1892, 1904, 1915], "matrix": [1, 2, 16, 18, 39, 41, 47, 192, 209, 683, 686, 687, 688, 757, 918, 920, 929, 930, 938, 940, 941, 942, 943, 950, 964, 968, 1052, 1056, 1057, 1059, 1069, 1137, 1141, 1145, 1160, 1216, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1265, 1268, 1276, 1285, 1287, 1290, 1300, 1318, 1320, 1371, 1372, 1380, 1398, 1479, 1518, 1519, 1615, 1620, 1649, 1655, 1701, 1702, 1703, 1713, 1757, 1785, 1788, 1791, 1792, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1806, 1814, 1815, 1830, 1833, 1835, 1837, 1838, 1839, 1840, 1841, 1850, 1856, 1864, 1869, 1882, 1883, 1884, 1887, 1891, 1892, 1894, 1897, 1900, 1903, 1913, 1923, 1928, 1929], "2d": [1, 43, 46, 47, 584, 585, 697, 700, 703, 732, 736, 739, 763, 765, 770, 776, 780, 782, 783, 784, 943, 964, 968, 1057, 1069, 1251, 1252, 1334, 1338, 1342, 1345, 1346, 1347, 1357, 1360, 1364, 1368, 1372, 1376, 1391, 1392, 1397, 1422, 1431, 1433, 1434, 1435, 1480, 1481, 1482, 1487, 1490, 1492, 1495, 1500, 1503, 1506, 1514, 1519, 1522, 1549, 1552, 1562, 1565, 1616, 1649, 1719, 1794, 1799, 1837, 1877, 1887, 1894, 1913, 1914, 1923], "alloc": [1, 4, 11, 14, 15, 30, 35, 39, 43, 47, 49, 58, 254, 331, 444, 445, 446, 447, 448, 485, 971, 973, 975, 977, 978, 980, 993, 994, 995, 1018, 1020, 1022, 1024, 1025, 1026, 1027, 1034, 1035, 1039, 1070, 1072, 1304, 1305, 1306, 1313, 1663, 1722, 1726, 1728, 1753, 1828, 1881, 1884, 1889, 1893, 1898, 1913, 1926], "dealloc": [1, 71, 1122, 1881, 1892, 1896, 1898, 1913], "line": [1, 4, 16, 19, 20, 21, 22, 24, 25, 28, 35, 41, 71, 914, 1069, 1126, 1171, 1196, 1206, 1428, 1492, 1527, 1762, 1789, 1866, 1869, 1870, 1884, 1890, 1894, 1897, 1898, 1904, 1906, 1907, 1913, 1923], "hierarchi": [1, 14, 71, 837, 1200, 1670, 1671, 1870, 1894, 1913, 1914], "callstack": [1, 41, 1913], "A": [1, 2, 3, 5, 7, 8, 9, 11, 12, 15, 16, 18, 19, 20, 21, 26, 27, 28, 32, 35, 38, 39, 41, 42, 43, 45, 46, 47, 49, 55, 58, 59, 60, 63, 64, 69, 70, 76, 89, 557, 577, 580, 581, 582, 591, 621, 677, 689, 694, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 742, 743, 753, 758, 759, 760, 761, 762, 787, 789, 811, 855, 856, 858, 859, 916, 919, 928, 929, 931, 936, 941, 942, 949, 950, 952, 955, 956, 964, 968, 972, 973, 975, 983, 985, 986, 1054, 1069, 1074, 1082, 1083, 1084, 1096, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1140, 1149, 1152, 1153, 1154, 1158, 1186, 1187, 1188, 1189, 1192, 1194, 1196, 1199, 1203, 1206, 1208, 1211, 1212, 1216, 1220, 1225, 1226, 1227, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1265, 1268, 1276, 1284, 1285, 1286, 1287, 1291, 1329, 1345, 1349, 1351, 1364, 1371, 1372, 1381, 1382, 1390, 1399, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1418, 1427, 1428, 1434, 1456, 1461, 1463, 1471, 1476, 1477, 1492, 1498, 1510, 1518, 1529, 1539, 1546, 1557, 1577, 1583, 1584, 1599, 1608, 1609, 1610, 1611, 1615, 1617, 1620, 1642, 1643, 1646, 1662, 1663, 1664, 1665, 1670, 1672, 1673, 1678, 1682, 1684, 1688, 1689, 1691, 1694, 1695, 1697, 1703, 1713, 1715, 1716, 1717, 1718, 1719, 1730, 1736, 1742, 1745, 1778, 1787, 1789, 1790, 1793, 1805, 1809, 1810, 1814, 1815, 1832, 1837, 1838, 1839, 1840, 1841, 1845, 1846, 1847, 1848, 1849, 1852, 1856, 1859, 1863, 1865, 1866, 1867, 1868, 1869, 1873, 1876, 1877, 1882, 1883, 1887, 1888, 1891, 1892, 1894, 1895, 1896, 1902, 1903, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1919, 1920, 1921, 1923, 1924, 1925, 1926, 1928, 1929, 1933, 1934, 1935], "aten": [1, 2, 3, 12, 17, 21, 22, 28, 32, 35, 83, 1012, 1126, 1318, 1664, 1665, 1789, 1864, 1866, 1867, 1873, 1891, 1906, 1909, 1913, 1914], "torchscript": [1, 3, 8, 19, 45, 71, 614, 1194, 1197, 1199, 1200, 1201, 1202, 1207, 1211, 1213, 1665, 1864, 1870, 1905, 1907, 1913, 1919], "eager": [1, 8, 11, 14, 16, 17, 19, 24, 28, 1044, 1194, 1197, 1207, 1761, 1869, 1892, 1913, 1915, 1917], "experiment": [1, 2, 14, 15, 18, 21, 28, 39, 41, 45, 46, 63, 71, 898, 900, 904, 950, 956, 1043, 1126, 1226, 1237, 1239, 1240, 1244, 1257, 1608, 1662, 1684, 1864, 1866, 1868, 1882, 1883, 1893, 1904, 1906, 1907, 1911, 1912, 1913], "kineto": [1, 1913], "_experimentalconfig": [1, 1913], "librari": [1, 2, 3, 4, 8, 9, 16, 19, 21, 30, 32, 33, 38, 41, 48, 56, 60, 64, 67, 68, 69, 71, 677, 966, 973, 996, 1000, 1012, 1120, 1208, 1239, 1285, 1782, 1879, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1906, 1907, 1911, 1913, 1914, 1919, 1934], "100": [1, 12, 20, 22, 38, 41, 45, 47, 71, 300, 735, 736, 739, 740, 1156, 1196, 1207, 1213, 1251, 1266, 1273, 1282, 1297, 1317, 1336, 1344, 1345, 1346, 1347, 1348, 1357, 1358, 1360, 1361, 1363, 1364, 1391, 1392, 1393, 1428, 1435, 1437, 1467, 1476, 1509, 1510, 1562, 1673, 1685, 1686, 1691, 1692, 1693, 1694, 1696, 1698, 1699, 1715, 1771, 1867, 1869, 1881, 1891, 1892, 1907, 1910, 1915, 1921, 1923, 1928], "realli": [1, 7, 15, 17, 71, 952, 1869, 1889, 1911], "y": [1, 11, 12, 14, 19, 20, 27, 28, 30, 32, 38, 47, 55, 63, 68, 69, 71, 614, 617, 778, 881, 883, 884, 885, 892, 893, 896, 898, 899, 900, 901, 902, 903, 932, 938, 961, 968, 1012, 1013, 1052, 1063, 1069, 1073, 1125, 1127, 1130, 1131, 1132, 1136, 1137, 1171, 1202, 1207, 1211, 1264, 1273, 1274, 1297, 1344, 1345, 1346, 1347, 1348, 1349, 1362, 1364, 1383, 1388, 1389, 1391, 1392, 1393, 1395, 1400, 1415, 1419, 1420, 1431, 1432, 1433, 1435, 1437, 1459, 1460, 1467, 1470, 1476, 1477, 1498, 1527, 1544, 1567, 1599, 1620, 1653, 1662, 1717, 1735, 1737, 1738, 1759, 1791, 1805, 1831, 1835, 1836, 1856, 1859, 1866, 1867, 1868, 1869, 1882, 1883, 1887, 1889, 1890, 1891, 1892, 1895, 1897, 1898, 1901, 1907, 1911, 1914, 1919, 1921, 1924, 1928, 1931, 1932, 1933], "column": [1, 3, 39, 46, 192, 260, 581, 584, 948, 964, 968, 1052, 1082, 1110, 1111, 1161, 1231, 1232, 1235, 1251, 1254, 1259, 1263, 1268, 1318, 1437, 1479, 1518, 1519, 1615, 1703, 1713, 1794, 1796, 1797, 1798, 1800, 1801, 1814, 1835, 1839, 1841, 1850, 1887, 1897, 1923], "remov": [1, 3, 16, 17, 19, 23, 27, 38, 39, 41, 43, 47, 59, 61, 63, 71, 486, 511, 543, 554, 694, 794, 812, 813, 814, 856, 910, 911, 940, 941, 1015, 1126, 1142, 1193, 1196, 1200, 1285, 1286, 1290, 1428, 1429, 1438, 1529, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1616, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1636, 1637, 1639, 1640, 1650, 1655, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1713, 1729, 1751, 1805, 1814, 1837, 1844, 1863, 1864, 1877, 1889, 1900, 1905, 1907, 1909, 1911, 1921, 1925, 1930], "breviti": [1, 71, 1907], "print": [1, 3, 12, 16, 20, 28, 35, 38, 41, 49, 50, 55, 56, 59, 63, 68, 70, 717, 725, 726, 731, 742, 743, 753, 761, 908, 910, 911, 1125, 1126, 1135, 1196, 1200, 1202, 1203, 1207, 1285, 1349, 1352, 1390, 1415, 1428, 1440, 1441, 1509, 1565, 1568, 1569, 1620, 1630, 1631, 1632, 1633, 1636, 1646, 1650, 1662, 1665, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1762, 1863, 1866, 1867, 1889, 1891, 1892, 1894, 1900, 1901, 1907, 1909, 1911, 1913, 1919, 1928, 1929, 1932, 1933], "tabl": [1, 3, 15, 22, 24, 28, 41, 71, 1371, 1518, 1867, 1869, 1894, 1910, 1911, 1913, 1914, 1919, 1923, 1930], "sort_bi": [1, 1913], "self_cpu_time_tot": [1, 1913], "avg": [1, 41, 1668], "mul": [1, 12, 14, 27, 35, 71, 419, 744, 745, 754, 1173, 1319, 1865, 1866, 1867, 1869, 1882, 1884, 1894, 1907, 1909, 1916, 1920, 1923, 1926, 1932], "32": [1, 2, 13, 20, 22, 39, 41, 743, 1122, 1193, 1205, 1285, 1342, 1367, 1368, 1369, 1373, 1374, 1376, 1377, 1397, 1416, 1422, 1433, 1471, 1472, 1473, 1474, 1475, 1492, 1522, 1523, 1529, 1577, 1883, 1884, 1900, 1904, 1907, 1917, 1923, 1926, 1928, 1929], "048m": 1, "200": [1, 28, 45, 1196, 1273, 1428, 1715, 1869, 1923], "27": [1, 614, 1263, 1688, 1710, 1850, 1907], "041m": 1, "powbackward0": 1, "9": [1, 7, 13, 38, 39, 41, 48, 71, 88, 313, 315, 317, 321, 401, 402, 470, 511, 557, 578, 580, 694, 742, 743, 851, 934, 940, 944, 948, 968, 1052, 1067, 1070, 1091, 1092, 1101, 1102, 1112, 1115, 1116, 1119, 1120, 1149, 1159, 1225, 1227, 1248, 1250, 1252, 1263, 1265, 1327, 1328, 1334, 1335, 1338, 1339, 1352, 1371, 1372, 1424, 1425, 1440, 1441, 1450, 1453, 1518, 1519, 1565, 1568, 1569, 1655, 1656, 1668, 1670, 1671, 1672, 1673, 1674, 1680, 1683, 1684, 1685, 1689, 1695, 1697, 1698, 1702, 1706, 1742, 1749, 1758, 1762, 1772, 1777, 1787, 1794, 1802, 1828, 1829, 1833, 1835, 1844, 1850, 1857, 1866, 1870, 1876, 1896, 1900, 1905, 1906, 1907, 1909, 1910, 1911, 1919, 1923, 1924, 1926, 1930], "727m": 1, "55": [1, 1382, 1907], "483m": 1, "accumulategrad": [1, 1889], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 32, 50, 55, 71, 677, 1211, 1764, 1869, 1875, 1908, 1918, 1923], "nvtx": [1, 4, 1864], "program": [1, 3, 4, 8, 11, 14, 15, 16, 19, 21, 23, 25, 28, 35, 38, 41, 50, 59, 61, 63, 71, 614, 961, 962, 1018, 1020, 1126, 1757, 1866, 1868, 1870, 1889, 1892, 1896, 1899, 1901, 1902, 1905, 1906, 1928], "off": [1, 7, 8, 15, 20, 24, 32, 41, 49, 63, 71, 917, 919, 928, 1030, 1126, 1153, 1154, 1193, 1211, 1259, 1341, 1342, 1343, 1345, 1421, 1422, 1423, 1527, 1565, 1759, 1891, 1892, 1893, 1896, 1899, 1903, 1913, 1914, 1915, 1919, 1920], "o": [1, 28, 39, 41, 42, 47, 59, 60, 61, 71, 1196, 1267, 1309, 1310, 1311, 1399, 1428, 1434, 1608, 1745, 1863, 1870, 1881, 1889, 1892, 1893, 1896, 1906, 1911, 1912, 1919], "trace_nam": 1, "regular": [1, 3, 4, 20, 41, 49, 59, 63, 66, 71, 1012, 1013, 1125, 1243, 1244, 1351, 1366, 1367, 1368, 1369, 1373, 1413, 1427, 1428, 1429, 1430, 1438, 1439, 1520, 1557, 1599, 1610, 1611, 1650, 1671, 1869, 1883, 1884, 1894, 1895, 1899, 1900, 1907, 1911, 1914, 1917, 1919, 1923, 1924, 1931, 1933], "command": [1, 4, 22, 24, 41, 49, 56, 59, 71, 1892, 1898, 1906, 1912, 1913, 1920], "unfortun": [1, 9, 13, 15, 38, 1608, 1889], "wai": [1, 3, 5, 7, 8, 9, 11, 12, 14, 15, 16, 20, 27, 28, 32, 38, 39, 41, 43, 45, 47, 51, 55, 63, 65, 66, 70, 71, 151, 577, 677, 793, 816, 819, 822, 858, 859, 887, 890, 899, 901, 902, 903, 904, 905, 1090, 1092, 1126, 1149, 1196, 1225, 1226, 1241, 1256, 1344, 1372, 1391, 1392, 1393, 1398, 1410, 1411, 1412, 1428, 1456, 1473, 1475, 1519, 1571, 1608, 1618, 1648, 1684, 1688, 1695, 1866, 1868, 1869, 1873, 1875, 1876, 1879, 1881, 1882, 1883, 1889, 1891, 1894, 1895, 1896, 1897, 1900, 1902, 1903, 1906, 1907, 1908, 1910, 1911, 1914, 1919, 1920, 1923, 1927, 1929, 1933], "disk": [1, 38, 1745, 1889, 1900, 1911, 1928], "annot": [1, 17, 19, 20, 26, 51, 56, 71, 912, 1194, 1207, 1866, 1868, 1870, 1907, 1919], "wait": [1, 16, 21, 35, 41, 49, 56, 58, 70, 821, 972, 973, 975, 1045, 1199, 1309, 1310, 1315, 1697, 1867, 1869, 1881, 1891, 1892, 1893, 1909, 1913, 1919], "either": [1, 8, 9, 14, 16, 17, 18, 19, 21, 32, 35, 38, 39, 41, 45, 46, 47, 49, 51, 56, 58, 59, 60, 63, 68, 70, 71, 155, 222, 313, 321, 511, 513, 614, 677, 729, 735, 736, 737, 742, 743, 753, 761, 776, 782, 788, 855, 887, 889, 896, 905, 906, 937, 950, 983, 1069, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1122, 1126, 1149, 1173, 1189, 1196, 1211, 1251, 1266, 1267, 1282, 1297, 1334, 1335, 1338, 1339, 1342, 1343, 1344, 1345, 1356, 1357, 1358, 1360, 1361, 1362, 1364, 1372, 1382, 1388, 1395, 1397, 1419, 1420, 1422, 1423, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1443, 1445, 1459, 1460, 1475, 1476, 1478, 1480, 1481, 1482, 1499, 1500, 1510, 1538, 1539, 1562, 1570, 1596, 1603, 1608, 1633, 1655, 1670, 1671, 1673, 1695, 1710, 1712, 1754, 1810, 1814, 1859, 1863, 1866, 1868, 1869, 1871, 1875, 1883, 1887, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1907, 1910, 1911, 1912, 1914, 1920, 1921, 1923, 1924, 1927, 1930, 1935], "nvidia": [1, 24, 28, 32, 41, 981, 994, 1022, 1028, 1032, 1046, 1047, 1849, 1864, 1892, 1896, 1898, 1904, 1906, 1914, 1931], "visual": [1, 16, 28, 71, 1297, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1421, 1422, 1423, 1479, 1900, 1906, 1913, 1928], "nvvp": 1, "timelin": [1, 4, 1309, 1310, 1913], "load_nvprof": 1, "repl": [1, 19], "append": [1, 20, 27, 41, 70, 71, 230, 254, 604, 758, 760, 762, 1015, 1059, 1061, 1290, 1381, 1399, 1430, 1439, 1445, 1456, 1608, 1867, 1868, 1869, 1889, 1891, 1902, 1906, 1907, 1909, 1928], "size": [1, 2, 3, 7, 11, 13, 14, 15, 16, 22, 28, 35, 38, 39, 41, 43, 47, 49, 58, 63, 66, 71, 139, 209, 222, 242, 254, 255, 313, 315, 321, 339, 444, 445, 446, 448, 486, 491, 496, 497, 498, 511, 513, 515, 518, 541, 542, 543, 563, 578, 580, 581, 582, 584, 585, 603, 604, 614, 615, 687, 688, 690, 692, 693, 694, 696, 717, 725, 726, 732, 738, 739, 740, 742, 743, 753, 761, 763, 764, 765, 766, 776, 782, 783, 784, 793, 855, 862, 874, 875, 877, 889, 898, 899, 900, 901, 902, 903, 914, 918, 919, 921, 928, 930, 931, 932, 933, 934, 941, 942, 943, 944, 968, 969, 971, 977, 983, 984, 986, 1026, 1050, 1051, 1057, 1060, 1067, 1069, 1070, 1071, 1072, 1075, 1086, 1087, 1088, 1090, 1091, 1092, 1094, 1095, 1098, 1099, 1100, 1101, 1102, 1104, 1105, 1106, 1122, 1123, 1124, 1131, 1132, 1137, 1138, 1153, 1154, 1158, 1159, 1170, 1173, 1193, 1196, 1217, 1226, 1235, 1240, 1248, 1252, 1256, 1259, 1261, 1262, 1263, 1265, 1266, 1268, 1276, 1282, 1283, 1285, 1286, 1290, 1293, 1295, 1296, 1297, 1298, 1301, 1302, 1303, 1304, 1305, 1318, 1320, 1323, 1326, 1328, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1371, 1372, 1374, 1375, 1376, 1377, 1380, 1382, 1383, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1416, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1440, 1441, 1443, 1449, 1450, 1451, 1452, 1453, 1454, 1459, 1467, 1471, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1500, 1505, 1506, 1507, 1510, 1511, 1518, 1519, 1522, 1523, 1527, 1538, 1545, 1551, 1552, 1553, 1562, 1563, 1565, 1568, 1569, 1571, 1577, 1596, 1597, 1598, 1599, 1608, 1631, 1641, 1642, 1643, 1644, 1645, 1647, 1649, 1652, 1654, 1656, 1659, 1660, 1673, 1682, 1701, 1702, 1703, 1704, 1706, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1735, 1740, 1749, 1752, 1771, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1807, 1808, 1809, 1810, 1813, 1814, 1815, 1828, 1829, 1830, 1835, 1837, 1845, 1846, 1847, 1848, 1851, 1852, 1854, 1855, 1856, 1857, 1861, 1862, 1864, 1865, 1866, 1867, 1869, 1877, 1879, 1882, 1883, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1904, 1905, 1907, 1909, 1912, 1913, 1914, 1916, 1923, 1925, 1926, 1928, 1929], "format": [1, 28, 36, 39, 41, 43, 51, 60, 71, 156, 171, 173, 176, 179, 180, 181, 196, 207, 210, 240, 267, 297, 325, 331, 393, 497, 498, 522, 577, 580, 581, 582, 583, 584, 585, 677, 732, 757, 789, 790, 947, 1015, 1069, 1070, 1071, 1124, 1193, 1196, 1209, 1238, 1351, 1372, 1380, 1398, 1428, 1443, 1475, 1608, 1642, 1644, 1660, 1662, 1663, 1665, 1723, 1725, 1727, 1745, 1788, 1791, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1862, 1863, 1866, 1869, 1870, 1875, 1892, 1894, 1900, 1905, 1907, 1908, 1909, 1913, 1914, 1919, 1920, 1923, 1926, 1928, 1930], "arg0": [1, 41], "arg1": [1, 41, 56, 57, 59], "repres": [1, 8, 14, 15, 20, 30, 38, 39, 47, 48, 49, 51, 52, 58, 60, 63, 71, 83, 757, 789, 790, 793, 886, 952, 956, 964, 968, 970, 1002, 1005, 1069, 1090, 1092, 1097, 1099, 1100, 1101, 1102, 1126, 1149, 1156, 1185, 1186, 1189, 1192, 1195, 1211, 1212, 1243, 1285, 1336, 1351, 1428, 1434, 1475, 1477, 1479, 1608, 1614, 1617, 1622, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1641, 1651, 1663, 1665, 1689, 1695, 1701, 1703, 1714, 1796, 1797, 1798, 1800, 1801, 1810, 1814, 1846, 1847, 1854, 1855, 1866, 1868, 1869, 1876, 1879, 1884, 1889, 1894, 1895, 1897, 1899, 1900, 1903, 1907, 1908, 1912, 1914, 1915, 1917, 1919, 1923, 1926, 1935], "order": [1, 3, 5, 11, 12, 14, 16, 22, 25, 28, 41, 42, 43, 45, 47, 59, 63, 64, 69, 70, 71, 151, 192, 209, 313, 315, 317, 321, 331, 402, 486, 677, 789, 790, 799, 851, 873, 890, 891, 904, 910, 911, 929, 940, 973, 1015, 1026, 1057, 1060, 1061, 1069, 1087, 1089, 1090, 1096, 1108, 1109, 1110, 1111, 1127, 1137, 1149, 1196, 1215, 1226, 1232, 1234, 1241, 1248, 1251, 1252, 1259, 1260, 1263, 1265, 1268, 1297, 1303, 1316, 1318, 1336, 1345, 1351, 1365, 1428, 1429, 1438, 1455, 1456, 1492, 1500, 1527, 1551, 1552, 1553, 1577, 1599, 1608, 1617, 1627, 1641, 1642, 1643, 1644, 1655, 1673, 1695, 1701, 1704, 1714, 1749, 1752, 1777, 1787, 1814, 1832, 1839, 1841, 1846, 1849, 1850, 1856, 1863, 1864, 1866, 1867, 1869, 1870, 1881, 1882, 1883, 1884, 1887, 1890, 1892, 1893, 1894, 1895, 1897, 1900, 1903, 1907, 1910, 1911, 1912, 1914, 1916, 1919, 1920, 1921, 1923, 1924, 1926, 1930, 1933], "backend": [1, 13, 16, 17, 18, 20, 21, 22, 24, 25, 32, 57, 61, 63, 738, 739, 740, 789, 790, 830, 852, 853, 856, 858, 859, 898, 904, 950, 956, 995, 1026, 1069, 1126, 1209, 1239, 1241, 1259, 1309, 1310, 1311, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1527, 1565, 1577, 1608, 1665, 1666, 1757, 1864, 1865, 1867, 1868, 1873, 1877, 1880, 1891, 1892, 1903, 1904, 1907, 1915, 1917, 1923], "side": [1, 11, 20, 32, 41, 58, 60, 68, 71, 765, 766, 769, 770, 771, 1004, 1063, 1085, 1086, 1088, 1091, 1092, 1097, 1099, 1100, 1101, 1102, 1105, 1193, 1194, 1240, 1245, 1256, 1258, 1341, 1342, 1343, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1449, 1450, 1452, 1453, 1454, 1479, 1483, 1484, 1485, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1551, 1552, 1553, 1565, 1689, 1718, 1719, 1749, 1810, 1837, 1863, 1866, 1867, 1869, 1888, 1889, 1892, 1894, 1897, 1919], "creation": [1, 2, 14, 20, 38, 41, 43, 71, 742, 743, 753, 761, 821, 972, 1126, 1608, 1609, 1622, 1866, 1870, 1879, 1881, 1889, 1892, 1919, 1921, 1923, 1929], "warmup": [1, 3, 11, 16, 1015, 1892, 1913], "correl": [1, 47, 59, 964, 1356, 1357, 1358, 1359, 1360, 1361, 1367, 1368, 1369, 1373], "view": [1, 7, 8, 14, 15, 24, 27, 28, 30, 35, 38, 39, 43, 45, 49, 63, 71, 223, 254, 434, 495, 496, 497, 604, 615, 689, 694, 757, 875, 883, 884, 885, 893, 932, 944, 961, 962, 1059, 1060, 1067, 1108, 1109, 1110, 1111, 1126, 1159, 1171, 1196, 1251, 1262, 1310, 1372, 1380, 1398, 1428, 1443, 1479, 1480, 1481, 1482, 1519, 1564, 1604, 1605, 1608, 1612, 1704, 1736, 1740, 1741, 1745, 1751, 1752, 1783, 1802, 1813, 1824, 1829, 1833, 1845, 1854, 1855, 1857, 1864, 1865, 1866, 1867, 1881, 1883, 1884, 1890, 1894, 1909, 1916, 1921, 1923, 1925, 1926, 1929], "difficult": [1, 7, 9, 15, 16, 23, 28, 68, 1137, 1856], "eas": [1, 14, 27, 71, 1891, 1894, 1898], "sequenc": [1, 11, 14, 16, 25, 27, 28, 38, 43, 45, 46, 47, 63, 151, 563, 732, 757, 811, 877, 890, 904, 934, 936, 937, 940, 948, 975, 982, 983, 986, 1054, 1068, 1070, 1137, 1157, 1158, 1161, 1211, 1251, 1297, 1336, 1346, 1351, 1356, 1365, 1372, 1380, 1398, 1434, 1443, 1456, 1471, 1472, 1473, 1474, 1475, 1519, 1577, 1617, 1620, 1627, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1656, 1659, 1662, 1666, 1681, 1720, 1722, 1726, 1749, 1807, 1810, 1856, 1858, 1861, 1866, 1867, 1868, 1884, 1892, 1896, 1907, 1911, 1912, 1919, 1929, 1930], "gener": [1, 2, 3, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 27, 28, 32, 38, 39, 41, 47, 51, 52, 59, 63, 64, 65, 154, 155, 174, 258, 286, 377, 420, 453, 480, 605, 677, 906, 920, 952, 1001, 1004, 1012, 1013, 1016, 1017, 1036, 1037, 1039, 1040, 1041, 1069, 1091, 1092, 1126, 1137, 1148, 1153, 1172, 1200, 1205, 1216, 1227, 1232, 1241, 1258, 1259, 1263, 1268, 1288, 1296, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1318, 1364, 1375, 1389, 1471, 1479, 1480, 1492, 1599, 1616, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1649, 1656, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1701, 1703, 1706, 1720, 1722, 1724, 1725, 1726, 1728, 1750, 1763, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1815, 1830, 1834, 1850, 1856, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1875, 1877, 1882, 1887, 1889, 1892, 1894, 1896, 1897, 1899, 1900, 1906, 1907, 1910, 1911, 1913, 1918, 1919, 1920, 1923, 1926, 1928, 1930, 1932, 1934], "seq": [1, 602, 757, 937, 949, 1297, 1380, 1398, 1434, 1443, 1471, 1473, 1475, 1644, 1844], "n": [1, 3, 20, 41, 43, 46, 47, 49, 51, 56, 59, 71, 230, 260, 406, 464, 465, 683, 686, 687, 688, 732, 755, 757, 778, 874, 914, 918, 919, 921, 928, 930, 934, 940, 941, 942, 968, 1050, 1051, 1061, 1082, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1109, 1129, 1132, 1137, 1149, 1153, 1154, 1158, 1193, 1196, 1207, 1211, 1212, 1215, 1216, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1268, 1276, 1285, 1290, 1292, 1297, 1300, 1320, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1383, 1388, 1389, 1391, 1392, 1393, 1395, 1396, 1397, 1398, 1400, 1410, 1411, 1412, 1416, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1431, 1432, 1433, 1434, 1435, 1437, 1443, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1459, 1461, 1462, 1463, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1492, 1498, 1510, 1511, 1519, 1523, 1527, 1562, 1565, 1567, 1577, 1608, 1615, 1626, 1635, 1654, 1701, 1702, 1703, 1708, 1713, 1714, 1720, 1726, 1728, 1741, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1792, 1808, 1809, 1810, 1814, 1815, 1829, 1830, 1835, 1839, 1841, 1850, 1851, 1852, 1853, 1856, 1865, 1867, 1869, 1873, 1882, 1883, 1887, 1889, 1892, 1894, 1896, 1897, 1911, 1913, 1914, 1915, 1923, 1924, 1928, 1929, 1930], "counter": [1, 41, 1008, 1026, 1171, 1365, 1879, 1881, 1889], "increment": [1, 11, 41, 58, 1122, 1158, 1200, 1365, 1866, 1868, 1889, 1919], "stash": [1, 5, 1892, 1894, 1912], "associ": [1, 8, 9, 15, 16, 20, 28, 41, 43, 52, 892, 955, 978, 1029, 1031, 1157, 1158, 1196, 1245, 1256, 1258, 1267, 1351, 1428, 1438, 1511, 1608, 1616, 1662, 1771, 1773, 1866, 1869, 1875, 1882, 1883, 1889, 1897, 1900, 1903, 1911, 1912, 1913, 1919, 1920, 1926, 1929], "tell": [1, 7, 71, 494, 1197, 1203, 1267, 1666, 1866, 1876, 1889, 1894, 1895, 1911], "top": [1, 3, 7, 8, 13, 24, 38, 43, 46, 47, 51, 63, 67, 71, 744, 914, 1344, 1345, 1364, 1388, 1395, 1419, 1435, 1477, 1480, 1527, 1622, 1626, 1628, 1778, 1832, 1870, 1876, 1881, 1894, 1910], "m": [1, 4, 8, 19, 39, 41, 46, 47, 55, 59, 71, 683, 686, 687, 688, 717, 725, 726, 735, 736, 737, 738, 739, 740, 742, 743, 753, 755, 761, 811, 857, 858, 859, 918, 930, 934, 938, 943, 1082, 1135, 1158, 1194, 1196, 1201, 1202, 1206, 1207, 1213, 1216, 1227, 1235, 1241, 1242, 1243, 1244, 1248, 1249, 1250, 1252, 1253, 1254, 1259, 1260, 1261, 1262, 1268, 1285, 1286, 1290, 1300, 1318, 1320, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1360, 1361, 1366, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1376, 1377, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1396, 1397, 1414, 1415, 1417, 1418, 1421, 1422, 1423, 1427, 1428, 1435, 1436, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1478, 1480, 1481, 1482, 1483, 1484, 1485, 1565, 1567, 1608, 1615, 1620, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1648, 1649, 1652, 1701, 1702, 1703, 1713, 1720, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1792, 1810, 1814, 1815, 1830, 1837, 1866, 1867, 1868, 1869, 1892, 1894, 1896, 1897, 1900, 1905, 1914, 1923, 1933], "By": [1, 2, 3, 5, 13, 16, 22, 23, 26, 28, 32, 38, 41, 50, 55, 71, 444, 445, 446, 447, 448, 877, 956, 968, 975, 1018, 1020, 1052, 1064, 1087, 1089, 1090, 1091, 1092, 1100, 1101, 1102, 1127, 1128, 1130, 1131, 1137, 1149, 1157, 1158, 1200, 1248, 1259, 1267, 1296, 1301, 1322, 1344, 1345, 1346, 1347, 1348, 1362, 1364, 1382, 1388, 1391, 1392, 1393, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1467, 1476, 1499, 1500, 1510, 1539, 1562, 1570, 1652, 1703, 1714, 1735, 1789, 1835, 1856, 1863, 1868, 1873, 1876, 1889, 1892, 1894, 1896, 1900, 1903, 1905, 1907, 1910, 1918, 1919, 1923, 1930], "compar": [1, 3, 5, 11, 17, 24, 32, 38, 63, 71, 691, 862, 873, 904, 1026, 1073, 1074, 1097, 1098, 1099, 1103, 1104, 1105, 1106, 1115, 1116, 1140, 1152, 1171, 1185, 1220, 1284, 1294, 1299, 1329, 1434, 1608, 1653, 1759, 1869, 1879, 1892, 1894, 1897, 1903, 1906, 1914, 1915, 1919, 1923, 1928, 1930, 1932, 1933], "down": [1, 7, 22, 28, 32, 38, 47, 49, 56, 57, 59, 63, 71, 776, 1026, 1064, 1111, 1117, 1205, 1241, 1538, 1714, 1742, 1899, 1902, 1907, 1919, 1921, 1928], "irrelev": [1, 3, 1870], "simpli": [1, 3, 14, 16, 23, 32, 38, 47, 51, 59, 70, 71, 860, 1126, 1183, 1194, 1340, 1366, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1866, 1868, 1889, 1895, 1897, 1900, 1901, 1913, 1923], "hand": [1, 4, 15, 20, 41, 63, 68, 71, 1063, 1069, 1194, 1240, 1245, 1256, 1258, 1340, 1438, 1456, 1837, 1849, 1866, 1868, 1869, 1889, 1897, 1900, 1905, 1911, 1923], "underwai": [1, 1010, 1892], "up": [1, 6, 7, 8, 9, 11, 13, 15, 19, 20, 21, 23, 28, 32, 38, 39, 41, 45, 47, 49, 51, 55, 57, 58, 60, 61, 66, 71, 776, 782, 887, 1012, 1013, 1015, 1052, 1069, 1098, 1099, 1104, 1106, 1111, 1126, 1187, 1200, 1205, 1208, 1209, 1254, 1336, 1351, 1375, 1434, 1473, 1475, 1479, 1480, 1492, 1518, 1527, 1538, 1596, 1608, 1684, 1720, 1742, 1846, 1847, 1863, 1866, 1868, 1873, 1876, 1879, 1881, 1882, 1883, 1889, 1890, 1891, 1892, 1896, 1897, 1898, 1900, 1903, 1907, 1911, 1913, 1914, 1919, 1920, 1930], "nonzero": [1, 14, 15, 63, 1193, 1277, 1279, 1280, 1285, 1859, 1865, 1867, 1909], "themselv": [1, 9, 47, 58, 63, 790, 838, 1832, 1892, 1911, 1934], "origin": [1, 12, 13, 15, 16, 17, 20, 22, 27, 28, 30, 35, 38, 39, 41, 43, 51, 63, 66, 70, 71, 207, 210, 222, 485, 542, 600, 604, 614, 677, 757, 794, 835, 836, 851, 854, 855, 935, 940, 973, 1089, 1090, 1092, 1096, 1100, 1101, 1102, 1108, 1125, 1135, 1170, 1193, 1203, 1207, 1208, 1211, 1212, 1289, 1303, 1336, 1340, 1352, 1364, 1365, 1380, 1457, 1467, 1510, 1580, 1615, 1616, 1617, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1641, 1644, 1647, 1649, 1650, 1652, 1665, 1695, 1704, 1740, 1751, 1787, 1802, 1835, 1846, 1847, 1866, 1869, 1875, 1881, 1883, 1889, 1892, 1894, 1896, 1899, 1902, 1903, 1905, 1907, 1911, 1912, 1914, 1915, 1925, 1932, 1933, 1934], "did": [1, 7, 8, 19, 20, 41, 58, 1325, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1868, 1869, 1897, 1905, 1911], "relationship": [1, 9, 15, 20, 55, 71, 947, 1149, 1477, 1889, 1892, 1905, 1911], "conceptu": [1, 3, 1889, 1895, 1921], "tag": [1, 3, 7, 41, 956, 1267, 1863, 1864, 1899, 1911, 1928], "eventu": [1, 7, 14, 15, 58, 63, 1863, 1912], "itt": [1, 1913], "intel": [1, 4, 24, 1864, 1906], "r": [1, 20, 28, 47, 69, 151, 886, 888, 890, 904, 905, 938, 949, 964, 1069, 1127, 1129, 1132, 1137, 1138, 1141, 1149, 1207, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1268, 1371, 1372, 1381, 1440, 1441, 1459, 1518, 1519, 1568, 1569, 1615, 1682, 1713, 1856, 1866, 1867, 1868, 1889, 1891, 1894, 1897, 1906, 1926, 1928], "instrument": [1, 3, 39, 1310, 1864, 1899, 1933], "technologi": [1, 1864], "applic": [1, 2, 9, 16, 47, 58, 796, 807, 808, 809, 810, 896, 994, 1131, 1306, 1364, 1365, 1473, 1475, 1510, 1608, 1849, 1864, 1876, 1884, 1889, 1891, 1892, 1893, 1894, 1898, 1899, 1900, 1904, 1907, 1910, 1914, 1919, 1920, 1921, 1923, 1929], "across": [1, 8, 11, 14, 16, 20, 28, 32, 38, 39, 41, 43, 45, 49, 59, 63, 68, 71, 614, 732, 816, 871, 915, 986, 1025, 1026, 1069, 1083, 1137, 1206, 1211, 1297, 1345, 1365, 1375, 1416, 1434, 1436, 1467, 1479, 1497, 1500, 1529, 1545, 1592, 1608, 1627, 1631, 1655, 1745, 1856, 1864, 1866, 1879, 1882, 1884, 1889, 1893, 1896, 1899, 1900, 1902, 1903, 1904, 1910, 1912, 1915, 1919, 1920, 1925, 1928, 1933], "tool": [1, 4, 8, 9, 16, 19, 21, 22, 28, 35, 41, 59, 71, 858, 913, 1310, 1789, 1863, 1864, 1866, 1868, 1891, 1892, 1906, 1907, 1911, 1913, 1933], "With": [1, 16, 17, 20, 24, 28, 35, 38, 41, 47, 63, 70, 736, 737, 738, 739, 740, 782, 1026, 1090, 1091, 1092, 1100, 1101, 1102, 1212, 1346, 1347, 1348, 1357, 1358, 1360, 1361, 1374, 1391, 1392, 1393, 1467, 1478, 1480, 1503, 1506, 1538, 1563, 1596, 1681, 1724, 1870, 1889, 1892, 1894, 1919, 1923, 1928], "abl": [1, 2, 7, 8, 12, 14, 15, 16, 17, 23, 28, 35, 41, 43, 58, 68, 1126, 1194, 1206, 1471, 1608, 1866, 1873, 1882, 1889, 1894, 1895, 1905, 1907, 1911, 1914, 1919, 1923, 1930], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 16, 30, 33, 335, 738, 739, 740, 894, 904, 1137, 1720, 1856, 1864, 1889, 1892, 1893, 1894, 1919, 1920], "traceback": [1, 28, 35, 51, 59, 70, 71, 1171, 1181, 1789, 1868, 1869, 1870, 1881, 1884, 1894, 1904, 1923, 1930], "fail": [1, 7, 12, 13, 14, 16, 17, 20, 21, 28, 41, 47, 49, 50, 51, 56, 57, 58, 59, 61, 70, 71, 74, 905, 906, 973, 1026, 1197, 1203, 1206, 1225, 1254, 1259, 1267, 1268, 1285, 1664, 1869, 1871, 1881, 1889, 1892, 1894, 1902, 1903, 1906, 1907, 1911, 1919], "debug": [1, 2, 4, 8, 14, 16, 17, 18, 23, 38, 55, 677, 824, 825, 829, 840, 905, 906, 950, 952, 956, 970, 1003, 1043, 1144, 1225, 1602, 1603, 1604, 1605, 1756, 1764, 1864, 1868, 1875, 1889, 1891, 1892, 1893, 1898, 1899, 1900, 1904, 1906, 1907, 1908, 1911, 1932], "test": [1, 3, 15, 16, 18, 28, 32, 35, 41, 46, 56, 58, 59, 71, 690, 696, 950, 1086, 1088, 1089, 1094, 1095, 1100, 1101, 1102, 1104, 1106, 1182, 1183, 1187, 1188, 1190, 1191, 1665, 1779, 1864, 1866, 1870, 1879, 1881, 1889, 1897, 1904, 1907, 1910, 1928, 1933, 1934], "slow": [1, 15, 905, 1205, 1209, 1225, 1226, 1612, 1613, 1648, 1846, 1897, 1902, 1928], "import": [1, 2, 3, 5, 7, 9, 11, 12, 13, 14, 16, 19, 20, 21, 26, 27, 28, 32, 34, 35, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 52, 55, 56, 60, 63, 66, 67, 68, 69, 70, 71, 222, 677, 731, 738, 739, 740, 769, 770, 771, 789, 857, 858, 859, 908, 910, 929, 936, 968, 1120, 1122, 1125, 1126, 1127, 1129, 1130, 1131, 1132, 1133, 1135, 1171, 1193, 1194, 1197, 1199, 1201, 1202, 1203, 1205, 1206, 1207, 1211, 1212, 1213, 1247, 1248, 1251, 1252, 1265, 1297, 1394, 1428, 1608, 1618, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1643, 1644, 1645, 1646, 1647, 1648, 1655, 1662, 1683, 1684, 1707, 1866, 1868, 1869, 1870, 1879, 1881, 1884, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1904, 1905, 1907, 1914, 1917, 1919, 1920, 1921, 1923, 1926, 1928, 1929, 1930, 1933, 1934], "myfunc": [1, 1895], "inp": [1, 38, 41, 71, 891, 892, 893, 1479, 1608, 1865, 1934], "clone": [1, 33, 38, 63, 254, 447, 894, 897, 908, 910, 911, 932, 1200, 1371, 1595, 1828, 1837, 1865, 1867, 1881, 1884, 1905, 1909, 1913, 1923, 1925, 1926, 1930], "run_fn": [1, 5, 854, 860], "10": [1, 11, 12, 13, 16, 19, 20, 21, 28, 37, 38, 39, 41, 42, 47, 48, 58, 60, 313, 321, 335, 470, 511, 557, 578, 580, 581, 582, 682, 683, 694, 731, 742, 743, 757, 758, 759, 760, 762, 918, 930, 940, 942, 943, 944, 948, 968, 1048, 1049, 1050, 1051, 1052, 1067, 1069, 1086, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1106, 1112, 1120, 1139, 1149, 1159, 1185, 1201, 1206, 1207, 1213, 1218, 1221, 1248, 1250, 1251, 1266, 1268, 1270, 1275, 1277, 1278, 1279, 1280, 1282, 1290, 1301, 1318, 1334, 1335, 1336, 1338, 1339, 1345, 1348, 1351, 1352, 1355, 1358, 1361, 1371, 1372, 1380, 1381, 1382, 1383, 1393, 1398, 1399, 1400, 1425, 1429, 1430, 1435, 1438, 1439, 1443, 1445, 1467, 1471, 1472, 1473, 1474, 1475, 1479, 1485, 1504, 1507, 1511, 1518, 1519, 1529, 1599, 1608, 1631, 1639, 1653, 1656, 1665, 1669, 1689, 1695, 1697, 1715, 1716, 1724, 1749, 1762, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1778, 1787, 1802, 1814, 1815, 1825, 1829, 1830, 1833, 1835, 1849, 1857, 1863, 1866, 1867, 1868, 1869, 1870, 1876, 1889, 1892, 1893, 1900, 1903, 1904, 1905, 1906, 1907, 1909, 1923, 1924, 1926, 1928, 1929, 1930, 1935], "last": [1, 5, 6, 12, 22, 28, 30, 38, 39, 42, 45, 46, 47, 58, 70, 71, 315, 614, 689, 757, 874, 919, 928, 934, 944, 1012, 1052, 1057, 1061, 1086, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1106, 1108, 1153, 1154, 1158, 1171, 1173, 1181, 1193, 1217, 1251, 1254, 1259, 1296, 1301, 1336, 1349, 1364, 1372, 1374, 1380, 1398, 1400, 1415, 1435, 1438, 1442, 1443, 1456, 1472, 1473, 1479, 1498, 1519, 1528, 1541, 1564, 1565, 1608, 1609, 1654, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1740, 1749, 1787, 1789, 1796, 1797, 1798, 1800, 1801, 1802, 1810, 1814, 1830, 1832, 1835, 1854, 1855, 1868, 1869, 1879, 1882, 1884, 1889, 1892, 1894, 1897, 1904, 1907, 1911, 1912, 1923, 1929, 1930], "stdin": [1, 1171, 1789, 1884, 1894, 1904, 1923], "instal": [1, 3, 12, 14, 20, 23, 32, 33, 41, 71, 1863, 1900, 1901, 1907, 1911, 1919, 1928], "_tensor": [1, 155], "py": [1, 4, 12, 13, 14, 15, 16, 19, 20, 22, 24, 27, 28, 32, 35, 41, 45, 47, 50, 57, 59, 63, 71, 857, 1608, 1863, 1866, 1869, 1875, 1893, 1897, 1899, 1907, 1911, 1914, 1920], "93": [1, 614], "retain_graph": [1, 151, 890, 904, 910, 911, 1137, 1856, 1867, 1888, 1889, 1919], "90": [1, 1053, 1699, 1741], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 22, 32, 41, 56, 58, 1863, 1892, 1913], "53": [1, 480], "44": [1, 13, 321, 444, 1072, 1343, 1423, 1648], "set_detect_anomali": 1, "behaviour": [1, 690, 691, 696, 969, 1527, 1565, 1695, 1764, 1863, 1903], "interpos": 1, "grad_fn": [1, 151, 335, 877, 890, 898, 899, 900, 901, 902, 903, 908, 910, 911, 1125, 1616, 1791, 1889, 1900, 1905], "node": [1, 14, 15, 16, 24, 27, 28, 41, 45, 49, 51, 57, 58, 63, 71, 83, 86, 87, 816, 817, 818, 821, 822, 823, 1015, 1135, 1210, 1351, 1365, 1608, 1665, 1877, 1892, 1907, 1908, 1911, 1912, 1919, 1920, 1921, 1931, 1933], "grad_mod": [1, 1867], "least": [1, 5, 6, 8, 16, 28, 39, 43, 47, 57, 58, 63, 260, 402, 694, 921, 1057, 1059, 1060, 1069, 1110, 1111, 1149, 1157, 1158, 1193, 1218, 1241, 1268, 1290, 1322, 1336, 1608, 1642, 1863, 1869, 1883, 1887, 1889, 1890, 1892, 1896, 1912, 1915, 1921, 1923, 1924, 1925, 1930], "intermediari": [1, 32, 47, 896, 1889, 1897], "access": [1, 9, 11, 14, 15, 16, 19, 23, 35, 38, 41, 43, 63, 70, 554, 731, 896, 979, 1196, 1199, 1211, 1258, 1336, 1428, 1599, 1610, 1611, 1616, 1620, 1642, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1864, 1866, 1867, 1869, 1870, 1873, 1877, 1880, 1881, 1883, 1884, 1889, 1892, 1896, 1897, 1899, 1900, 1919, 1923, 1926, 1927, 1929, 1935], "isinst": [1, 27, 28, 38, 47, 71, 908, 910, 911, 1183, 1194, 1867, 1869, 1889, 1894, 1900, 1911, 1923], "dir": [1, 1012, 1665, 1863, 1869, 1911], "__call__": [1, 1196, 1428], "__class__": 1, "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1870], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1870], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1869], "__ne__": 1, "__new__": [1, 1868, 1870], "__reduce__": [1, 1911], "__reduce_ex__": 1, "__repr__": [1, 3, 1894], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 71, 1867, 1869], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1889], "metadata": [1, 3, 15, 27, 43, 51, 52, 1267, 1745, 1884, 1889, 1894, 1895, 1905, 1911, 1913, 1919, 1920, 1928], "next_funct": 1, "register_prehook": [1, 1889], "allclos": [1, 68, 69, 71, 905, 906, 1012, 1091, 1092, 1098, 1099, 1126, 1127, 1129, 1130, 1131, 1132, 1136, 1137, 1243, 1245, 1256, 1258, 1261, 1262, 1287, 1620, 1647, 1713, 1856, 1867, 1895, 1909], "pack": [1, 45, 735, 736, 737, 738, 739, 740, 742, 743, 757, 778, 1211, 1212, 1287, 1365, 1380, 1398, 1443, 1641, 1642, 1643, 1644, 1867, 1877, 1884, 1889, 1896, 1906, 1914], "unpack": [1, 757, 893, 1211, 1243, 1287, 1365, 1644, 1646, 1653, 1666, 1869, 1870, 1889, 1894, 1896], "hook": [1, 15, 16, 17, 20, 25, 42, 45, 63, 486, 745, 754, 896, 910, 911, 1015, 1196, 1365, 1428, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1649, 1652, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1864, 1885, 1893, 1894, 1899, 1911, 1914], "common": [1, 3, 8, 14, 20, 23, 26, 27, 28, 38, 49, 58, 68, 682, 790, 862, 923, 926, 931, 963, 1064, 1069, 1114, 1115, 1116, 1117, 1139, 1218, 1267, 1317, 1346, 1347, 1348, 1351, 1467, 1509, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1733, 1745, 1811, 1864, 1869, 1874, 1883, 1889, 1892, 1894, 1895, 1896, 1900, 1902, 1905, 1907, 1911, 1923, 1924, 1927, 1930], "trade": [1, 5, 8, 63, 1259, 1345, 1891, 1896, 1915], "leav": [1, 8, 20, 49, 59, 151, 890, 1201, 1213, 1618, 1621, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1805, 1866, 1868, 1869, 1889, 1911, 1915], "especi": [1, 9, 11, 15, 16, 18, 19, 20, 30, 38, 41, 71, 254, 932, 950, 957, 1595, 1868, 1889, 1894, 1895, 1903, 1905, 1914, 1919, 1923], "notic": [1, 23, 41, 686, 1089, 1103, 1290, 1300, 1344, 1480, 1544, 1686, 1687, 1692, 1693, 1699, 1864, 1866, 1889, 1923], "fit": [1, 9, 28, 50, 67, 68, 497, 914, 1193, 1673, 1735, 1912, 1930], "evalu": [1, 4, 8, 9, 14, 15, 17, 25, 45, 46, 47, 66, 71, 690, 696, 795, 860, 905, 1026, 1132, 1133, 1196, 1336, 1340, 1346, 1347, 1348, 1366, 1383, 1391, 1392, 1393, 1400, 1428, 1442, 1446, 1467, 1570, 1592, 1618, 1673, 1689, 1720, 1869, 1870, 1894, 1900, 1923, 1931], "saved_tensors_hook": [1, 896, 1889], "pack_hook": [1, 1889], "unpack_hook": [1, 1889], "pair": [1, 16, 41, 43, 46, 47, 58, 60, 614, 732, 862, 938, 968, 1103, 1209, 1259, 1297, 1420, 1429, 1434, 1438, 1567, 1682, 1729, 1868, 1869, 1875, 1882, 1889, 1892, 1912, 1919, 1920, 1921, 1928, 1930, 1933], "retriev": [1, 20, 38, 39, 41, 45, 49, 58, 71, 534, 886, 887, 956, 1371, 1375, 1479, 1518, 1608, 1642, 1665, 1789, 1884, 1889, 1899, 1907, 1911, 1912, 1919, 1920, 1921], "everytim": 1, "store": [1, 3, 5, 15, 19, 20, 32, 35, 39, 43, 49, 59, 63, 71, 326, 332, 398, 683, 819, 822, 887, 930, 982, 984, 986, 1141, 1196, 1203, 1206, 1226, 1237, 1238, 1239, 1268, 1273, 1285, 1347, 1371, 1428, 1456, 1608, 1615, 1617, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1641, 1794, 1863, 1864, 1866, 1883, 1884, 1885, 1893, 1894, 1895, 1896, 1899, 1911, 1914, 1919, 1920, 1921, 1923, 1925, 1928, 1929, 1933], "content": [1, 3, 7, 23, 28, 43, 51, 71, 896, 1203, 1206, 1226, 1237, 1239, 1244, 1257, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1805, 1834, 1863, 1869, 1878, 1881, 1889, 1919, 1927, 1928, 1929], "equal": [1, 27, 39, 41, 47, 58, 59, 60, 71, 260, 497, 542, 614, 677, 691, 692, 693, 736, 737, 738, 739, 740, 757, 765, 766, 817, 818, 819, 822, 858, 873, 919, 928, 939, 940, 958, 968, 984, 986, 1039, 1058, 1074, 1113, 1127, 1128, 1140, 1153, 1154, 1156, 1157, 1158, 1181, 1185, 1220, 1241, 1254, 1258, 1261, 1262, 1285, 1286, 1297, 1313, 1329, 1333, 1334, 1335, 1337, 1338, 1339, 1344, 1345, 1351, 1357, 1358, 1360, 1361, 1365, 1372, 1375, 1376, 1377, 1380, 1382, 1398, 1433, 1434, 1442, 1443, 1479, 1495, 1496, 1500, 1503, 1506, 1518, 1519, 1522, 1523, 1529, 1608, 1642, 1645, 1701, 1714, 1771, 1772, 1777, 1802, 1810, 1829, 1845, 1859, 1867, 1870, 1876, 1882, 1883, 1884, 1889, 1890, 1897, 1903, 1909, 1910, 1912, 1924, 1928, 1930], "term": [1, 8, 9, 14, 47, 58, 71, 555, 731, 760, 789, 940, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1100, 1101, 1102, 1105, 1117, 1227, 1336, 1344, 1382, 1389, 1398, 1399, 1433, 1442, 1459, 1524, 1536, 1570, 1581, 1608, 1615, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1733, 1778, 1864, 1869, 1888, 1889, 1894, 1895, 1896, 1897, 1907, 1911, 1914, 1920, 1923], "mulbackward0": [1, 899, 902, 903], "inplac": [1, 27, 66, 68, 71, 752, 755, 773, 775, 777, 788, 794, 811, 835, 836, 837, 854, 855, 860, 894, 1126, 1196, 1340, 1350, 1366, 1367, 1368, 1369, 1370, 1373, 1385, 1386, 1387, 1414, 1427, 1428, 1446, 1447, 1448, 1455, 1457, 1470, 1493, 1501, 1512, 1513, 1514, 1515, 1516, 1520, 1531, 1532, 1533, 1542, 1557, 1572, 1573, 1575, 1578, 1580, 1590, 1602, 1849, 1865, 1867, 1876, 1889, 1894, 1907, 1933], "lead": [1, 5, 7, 11, 17, 37, 41, 48, 63, 69, 71, 894, 898, 900, 904, 906, 952, 1120, 1137, 1226, 1398, 1443, 1459, 1805, 1856, 1869, 1883, 1884, 1889, 1891, 1893, 1894, 1895, 1903, 1906, 1910, 1911, 1914, 1923, 1928, 1929], "undefin": [1, 41, 48, 51, 63, 319, 470, 614, 875, 897, 905, 906, 934, 1072, 1121, 1122, 1344, 1664, 1707, 1889, 1892, 1894, 1895], "recurs": [1, 13, 17, 20, 47, 63, 71, 952, 955, 1061, 1196, 1207, 1209, 1428, 1687, 1868, 1894, 1900, 1911, 1919], "inner": [1, 3, 63, 64, 69, 812, 814, 898, 1052, 1127, 1131, 1136, 1835, 1867, 1909, 1919, 1933], "save_on_cpu": 1, "pin_memori": [1, 38, 444, 445, 446, 447, 448, 1070, 1072, 1722, 1726, 1728, 1828, 1865, 1866, 1867, 1884, 1892, 1909, 1925], "within": [1, 5, 9, 14, 16, 19, 27, 28, 38, 39, 41, 45, 46, 47, 58, 59, 60, 63, 70, 71, 89, 875, 905, 906, 955, 976, 1052, 1196, 1200, 1288, 1341, 1342, 1343, 1351, 1367, 1368, 1369, 1373, 1375, 1421, 1422, 1423, 1428, 1434, 1467, 1479, 1527, 1551, 1552, 1553, 1608, 1618, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1718, 1719, 1749, 1771, 1848, 1866, 1868, 1869, 1879, 1884, 1887, 1891, 1892, 1894, 1898, 1899, 1900, 1903, 1907, 1910, 1911, 1914, 1917, 1918, 1919, 1920, 1928], "move": [1, 5, 7, 8, 9, 17, 20, 28, 32, 41, 43, 63, 71, 521, 586, 818, 1089, 1196, 1203, 1262, 1267, 1303, 1346, 1347, 1348, 1401, 1402, 1403, 1428, 1467, 1565, 1610, 1611, 1681, 1868, 1877, 1878, 1881, 1883, 1892, 1895, 1896, 1900, 1901, 1902, 1910, 1911, 1912, 1919, 1925, 1930], "copi": [1, 7, 15, 19, 27, 30, 38, 39, 41, 43, 49, 56, 63, 67, 68, 71, 191, 197, 207, 210, 315, 402, 447, 457, 462, 470, 491, 497, 577, 578, 579, 580, 600, 614, 789, 811, 835, 836, 876, 877, 892, 939, 947, 982, 983, 1108, 1109, 1110, 1111, 1113, 1126, 1196, 1207, 1268, 1328, 1365, 1375, 1428, 1438, 1479, 1608, 1641, 1730, 1736, 1742, 1828, 1837, 1843, 1866, 1867, 1881, 1884, 1889, 1890, 1892, 1894, 1902, 1909, 1911, 1912, 1913, 1914, 1919, 1923, 1925, 1926, 1927, 1929, 1933], "pin": [1, 210, 337, 444, 445, 446, 447, 448, 462, 577, 600, 1070, 1072, 1196, 1428, 1641, 1722, 1726, 1728, 1828, 1864, 1884, 1925], "asynchron": [1, 3, 4, 70, 197, 210, 577, 600, 995, 1196, 1199, 1214, 1428, 1864, 1870, 1891, 1893, 1919, 1925, 1928], "prod_1": 1, "prod_2": 1, "del": [1, 1870, 1881, 1894, 1896], "illustr": [1, 11, 20, 22, 1869, 1888, 1894, 1923], "aliv": [1, 38, 49, 58, 973, 1889, 1892, 1896, 1902, 1919, 1920, 1921], "live": [1, 11, 15, 45, 1012, 1015, 1196, 1428, 1866, 1892, 1896, 1919, 1921], "releas": [1, 7, 28, 37, 41, 58, 60, 67, 71, 511, 684, 940, 941, 969, 970, 971, 977, 994, 1004, 1005, 1008, 1012, 1013, 1015, 1026, 1142, 1196, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1285, 1286, 1306, 1368, 1398, 1428, 1443, 1551, 1552, 1553, 1655, 1713, 1729, 1745, 1810, 1814, 1837, 1863, 1864, 1868, 1879, 1881, 1889, 1891, 1892, 1898, 1903, 1904, 1905, 1906, 1907, 1914, 1919, 1929, 1930], "delet": [1, 27, 41, 71, 891, 970, 978, 1863, 1877, 1881, 1889, 1909, 1918, 1919, 1921], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 17, 19, 21, 30, 33, 35, 41, 43, 45, 59, 64, 70, 677, 686, 757, 765, 766, 898, 900, 904, 952, 1043, 1207, 1290, 1300, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1346, 1361, 1366, 1367, 1368, 1369, 1373, 1376, 1377, 1380, 1381, 1391, 1398, 1399, 1434, 1443, 1445, 1462, 1471, 1473, 1475, 1476, 1477, 1478, 1495, 1496, 1513, 1514, 1515, 1520, 1522, 1523, 1544, 1608, 1703, 1849, 1864, 1866, 1868, 1869, 1870, 1873, 1875, 1883, 1884, 1889, 1894, 1896, 1897, 1904, 1907, 1908, 1913, 1914, 1919, 1923, 1928], "messag": [1, 2, 28, 35, 41, 51, 60, 68, 71, 84, 621, 677, 1029, 1031, 1225, 1226, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1863, 1866, 1867, 1869, 1870, 1875, 1896, 1907, 1912, 1913, 1919, 1921, 1930], "get": [1, 8, 11, 14, 15, 20, 21, 22, 25, 26, 28, 32, 38, 41, 42, 43, 58, 59, 60, 61, 63, 68, 70, 71, 89, 151, 335, 683, 731, 785, 786, 858, 859, 890, 893, 934, 997, 998, 999, 1016, 1056, 1126, 1129, 1130, 1131, 1143, 1171, 1211, 1263, 1371, 1372, 1396, 1397, 1424, 1425, 1426, 1438, 1455, 1608, 1609, 1616, 1642, 1649, 1734, 1749, 1863, 1864, 1866, 1869, 1879, 1881, 1882, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1909, 1911, 1914, 1919, 1921, 1923, 1927, 1928, 1929, 1934], "register_multi_grad_hook": [1, 1889], "fn": [1, 12, 17, 19, 20, 21, 27, 28, 49, 50, 51, 55, 60, 63, 71, 910, 911, 952, 953, 955, 1127, 1133, 1137, 1196, 1197, 1208, 1213, 1428, 1856, 1866, 1868, 1869, 1873, 1881, 1889, 1899, 1919], "multi": [1, 4, 46, 49, 58, 757, 973, 1016, 1036, 1069, 1089, 1158, 1196, 1345, 1365, 1380, 1398, 1428, 1431, 1432, 1433, 1434, 1443, 1471, 1473, 1480, 1500, 1608, 1864, 1866, 1869, 1889, 1891, 1892, 1900, 1904, 1910, 1919, 1923, 1926, 1929, 1931], "specifi": [1, 2, 3, 5, 8, 12, 14, 18, 27, 32, 38, 39, 41, 45, 46, 47, 49, 51, 56, 57, 58, 59, 63, 71, 98, 151, 196, 259, 319, 331, 470, 480, 491, 495, 497, 498, 511, 513, 515, 534, 542, 543, 557, 577, 580, 581, 582, 584, 585, 600, 677, 732, 738, 739, 740, 765, 766, 790, 791, 792, 796, 811, 820, 823, 837, 851, 855, 856, 858, 875, 877, 889, 890, 904, 921, 944, 950, 956, 967, 968, 969, 972, 973, 982, 983, 984, 986, 1001, 1004, 1015, 1040, 1050, 1051, 1052, 1056, 1057, 1059, 1069, 1072, 1083, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1102, 1104, 1106, 1127, 1128, 1131, 1137, 1138, 1149, 1157, 1158, 1196, 1200, 1211, 1212, 1238, 1248, 1250, 1252, 1253, 1262, 1265, 1267, 1268, 1278, 1295, 1297, 1303, 1322, 1323, 1326, 1342, 1343, 1344, 1345, 1351, 1360, 1362, 1364, 1365, 1371, 1372, 1375, 1382, 1388, 1389, 1394, 1395, 1398, 1419, 1420, 1425, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1459, 1460, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1495, 1496, 1499, 1500, 1510, 1511, 1518, 1519, 1524, 1527, 1539, 1546, 1562, 1563, 1570, 1577, 1583, 1584, 1608, 1613, 1615, 1616, 1619, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1652, 1655, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1678, 1680, 1681, 1682, 1683, 1684, 1689, 1694, 1695, 1703, 1711, 1720, 1736, 1741, 1742, 1745, 1762, 1790, 1792, 1793, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1805, 1808, 1809, 1813, 1829, 1831, 1835, 1845, 1846, 1847, 1848, 1850, 1851, 1852, 1856, 1863, 1866, 1868, 1869, 1873, 1875, 1876, 1878, 1879, 1882, 1883, 1889, 1892, 1894, 1898, 1900, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1918, 1919, 1923, 1924, 1925, 1926, 1928, 1930], "ignor": [1, 5, 7, 11, 23, 27, 41, 45, 50, 56, 63, 71, 151, 497, 541, 683, 686, 687, 688, 732, 791, 792, 855, 858, 859, 871, 890, 904, 905, 906, 918, 940, 968, 1016, 1017, 1036, 1037, 1090, 1092, 1100, 1101, 1102, 1141, 1156, 1196, 1207, 1213, 1216, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1243, 1244, 1245, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1264, 1265, 1287, 1323, 1324, 1325, 1341, 1342, 1343, 1344, 1345, 1362, 1364, 1372, 1380, 1382, 1388, 1394, 1395, 1398, 1419, 1420, 1421, 1422, 1423, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1443, 1459, 1460, 1471, 1476, 1499, 1500, 1510, 1519, 1539, 1562, 1570, 1608, 1655, 1666, 1689, 1697, 1701, 1762, 1792, 1793, 1810, 1814, 1837, 1866, 1869, 1870, 1876, 1883, 1889, 1892, 1894, 1907, 1923, 1930], "rel": [1, 8, 9, 20, 32, 39, 41, 47, 63, 71, 486, 691, 873, 905, 906, 910, 911, 968, 1185, 1250, 1253, 1476, 1477, 1492, 1527, 1666, 1670, 1671, 1697, 1876, 1879, 1891, 1892, 1899, 1907, 1911, 1930], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 15, 16, 26, 71, 794, 835, 836, 854, 855, 1126, 1200, 1911, 1929], "version": [1, 2, 5, 8, 17, 28, 32, 37, 39, 41, 43, 47, 59, 63, 66, 67, 71, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 122, 124, 126, 128, 131, 132, 134, 142, 144, 147, 148, 150, 153, 159, 161, 163, 165, 167, 169, 178, 187, 195, 199, 202, 204, 214, 216, 232, 236, 238, 244, 247, 249, 251, 253, 257, 262, 269, 271, 273, 277, 279, 283, 285, 292, 294, 296, 304, 306, 308, 310, 312, 314, 316, 318, 356, 358, 360, 362, 364, 366, 368, 371, 373, 375, 376, 383, 385, 387, 389, 391, 395, 399, 401, 419, 422, 425, 427, 438, 440, 442, 450, 455, 465, 468, 484, 488, 490, 506, 509, 510, 512, 514, 520, 524, 526, 529, 531, 533, 546, 548, 550, 553, 559, 561, 568, 572, 574, 590, 593, 595, 597, 599, 609, 619, 732, 733, 734, 746, 747, 748, 749, 750, 751, 772, 773, 774, 775, 777, 781, 782, 801, 802, 803, 836, 844, 852, 853, 855, 955, 1015, 1125, 1153, 1171, 1193, 1196, 1199, 1200, 1203, 1206, 1225, 1238, 1239, 1243, 1244, 1257, 1290, 1327, 1345, 1398, 1428, 1429, 1443, 1480, 1492, 1517, 1527, 1534, 1543, 1574, 1576, 1591, 1592, 1596, 1600, 1620, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1649, 1650, 1681, 1683, 1684, 1746, 1747, 1748, 1805, 1808, 1809, 1810, 1814, 1834, 1849, 1851, 1852, 1863, 1882, 1883, 1889, 1890, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1904, 1906, 1907, 1908, 1910, 1911, 1913, 1917, 1923, 1930, 1931], "_allowmutationonsavedcontext": 1, "purpos": [1, 12, 19, 20, 22, 28, 39, 41, 71, 470, 497, 757, 905, 1205, 1290, 1351, 1380, 1434, 1602, 1603, 1604, 1605, 1762, 1879, 1884, 1889, 1911, 1920], "clear": [1, 2, 8, 9, 60, 71, 957, 1196, 1428, 1429, 1438, 1665, 1863, 1889, 1892, 1900, 1905, 1909, 1910], "upon": [1, 2, 38, 42, 49, 51, 71, 1608, 1617, 1620, 1881, 1889, 1892, 1907, 1914, 1921], "sin_": [1, 1867, 1882], "8415": [1, 1923], "sinbackward0": 1, "variou": [2, 5, 15, 32, 38, 41, 71, 1268, 1873, 1876, 1881, 1884, 1894, 1900, 1902, 1910, 1914, 1916, 1923, 1934], "get_cpu_cap": 2, "capabl": [2, 8, 32, 33, 41, 997, 1720, 1873, 1892, 1898, 1899, 1901, 1931], "string": [2, 3, 12, 16, 20, 28, 31, 32, 38, 41, 49, 55, 56, 58, 71, 600, 811, 851, 956, 995, 1012, 1013, 1069, 1126, 1196, 1203, 1206, 1267, 1356, 1357, 1358, 1428, 1429, 1438, 1471, 1473, 1475, 1502, 1503, 1504, 1631, 1713, 1745, 1753, 1755, 1863, 1867, 1868, 1869, 1870, 1883, 1889, 1894, 1899, 1900, 1907, 1911, 1913, 1919, 1925, 1926, 1928, 1933, 1934], "possibl": [2, 9, 11, 12, 14, 15, 16, 17, 20, 21, 23, 28, 32, 33, 35, 41, 43, 47, 67, 68, 71, 495, 496, 577, 614, 855, 876, 877, 944, 979, 1117, 1129, 1196, 1209, 1236, 1249, 1252, 1253, 1256, 1261, 1267, 1345, 1351, 1428, 1434, 1518, 1519, 1538, 1571, 1596, 1620, 1621, 1733, 1736, 1751, 1802, 1810, 1828, 1866, 1868, 1869, 1881, 1882, 1887, 1889, 1891, 1892, 1893, 1894, 1897, 1902, 1903, 1904, 1906, 1911, 1914, 1919, 1921, 1926, 1930], "vsx": 2, "z": [2, 3, 10, 11, 14, 27, 28, 47, 63, 68, 614, 817, 874, 896, 941, 942, 958, 1069, 1073, 1297, 1381, 1527, 1620, 1653, 1654, 1662, 1707, 1737, 1738, 1866, 1867, 1868, 1883, 1889, 1891, 1892, 1897, 1898, 1907, 1911, 1917, 1919, 1921], "vector": [2, 19, 30, 39, 47, 63, 64, 68, 254, 313, 315, 321, 686, 687, 688, 881, 890, 892, 898, 899, 900, 901, 902, 903, 904, 931, 932, 938, 949, 964, 968, 969, 1050, 1051, 1056, 1058, 1132, 1136, 1137, 1141, 1228, 1235, 1243, 1251, 1252, 1256, 1259, 1263, 1264, 1265, 1285, 1290, 1297, 1318, 1320, 1346, 1347, 1348, 1351, 1365, 1371, 1372, 1375, 1383, 1391, 1392, 1393, 1437, 1467, 1476, 1479, 1518, 1519, 1527, 1529, 1563, 1567, 1595, 1612, 1614, 1616, 1620, 1651, 1655, 1702, 1703, 1794, 1814, 1850, 1853, 1856, 1889, 1897, 1914, 1923, 1928], "NO": 2, "avx": 2, "avx2": [2, 1914], "avx512": 2, "is_built": [2, 1901], "built": [2, 3, 7, 8, 12, 13, 20, 28, 32, 39, 41, 46, 51, 66, 71, 951, 995, 1205, 1477, 1689, 1864, 1884, 1889, 1891, 1892, 1894, 1898, 1900, 1901, 1902, 1916, 1934], "necessarili": [2, 39, 41, 47, 49, 58, 470, 905, 1232, 1254, 1265, 1296, 1364, 1435, 1892, 1894], "machin": [2, 41, 49, 58, 63, 64, 69, 1200, 1205, 1241, 1464, 1898, 1899, 1900, 1901, 1904, 1907, 1908, 1911, 1918, 1919, 1920], "driver": [2, 28, 1141, 1241, 1259, 1260, 1305, 1867, 1892, 1903, 1919], "would": [2, 3, 5, 8, 9, 11, 12, 14, 15, 16, 19, 22, 23, 27, 28, 30, 32, 38, 41, 47, 49, 51, 58, 59, 63, 65, 68, 71, 151, 444, 445, 446, 447, 448, 695, 757, 791, 851, 890, 894, 904, 940, 1070, 1072, 1090, 1130, 1131, 1194, 1196, 1197, 1201, 1203, 1211, 1212, 1309, 1310, 1341, 1342, 1343, 1344, 1345, 1380, 1394, 1398, 1421, 1422, 1423, 1428, 1438, 1443, 1527, 1538, 1599, 1608, 1609, 1641, 1653, 1684, 1722, 1726, 1728, 1739, 1749, 1828, 1829, 1834, 1866, 1868, 1869, 1882, 1883, 1884, 1885, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1905, 1907, 1910, 1911, 1912, 1914, 1919, 1920, 1921, 1923], "allow_tf32": [2, 1757, 1867, 1892, 1903], "tensorfloat": 2, "core": [2, 3, 7, 8, 14, 18, 20, 21, 24, 67, 950, 1026, 1664, 1869, 1873, 1891, 1892, 1893, 1903, 1911, 1931], "amper": [2, 21], "newer": [2, 19, 32, 1032, 1649, 1891, 1892, 1905, 1908, 1910, 1911, 1915], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1892, 1903], "precis": [2, 3, 8, 24, 30, 32, 39, 47, 63, 683, 686, 905, 906, 918, 930, 1015, 1112, 1145, 1241, 1259, 1265, 1290, 1300, 1341, 1342, 1343, 1345, 1356, 1357, 1358, 1359, 1360, 1361, 1381, 1399, 1415, 1421, 1422, 1423, 1480, 1538, 1577, 1608, 1742, 1757, 1762, 1864, 1869, 1879, 1885, 1889, 1900, 1911, 1914, 1915, 1917, 1924, 1926, 1928, 1929, 1935], "gemm": [2, 16, 1891, 1907], "allow_bf16_reduced_precision_reduct": [2, 1892, 1903], "cufft_plan_cach": [2, 1892], "cufft": 2, "queri": [2, 14, 15, 20, 41, 58, 71, 732, 972, 973, 975, 981, 1028, 1032, 1046, 1047, 1196, 1428, 1434, 1577, 1619, 1867, 1892, 1911], "specif": [2, 3, 7, 8, 9, 14, 15, 17, 19, 20, 24, 27, 28, 32, 41, 43, 45, 47, 49, 56, 58, 60, 63, 68, 71, 89, 511, 851, 858, 914, 955, 975, 1060, 1089, 1158, 1193, 1200, 1205, 1209, 1211, 1212, 1296, 1375, 1400, 1577, 1602, 1603, 1622, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1752, 1791, 1863, 1866, 1868, 1869, 1871, 1873, 1875, 1879, 1883, 1885, 1889, 1892, 1898, 1902, 1904, 1907, 1910, 1911, 1913, 1914, 1915, 1917, 1919, 1921, 1928, 1929], "via": [2, 7, 12, 14, 15, 16, 20, 23, 26, 32, 33, 38, 41, 43, 47, 56, 63, 67, 71, 515, 614, 905, 906, 937, 970, 1006, 1026, 1073, 1129, 1268, 1346, 1347, 1348, 1365, 1383, 1391, 1392, 1393, 1400, 1467, 1615, 1649, 1652, 1695, 1866, 1868, 1869, 1879, 1881, 1884, 1887, 1889, 1892, 1894, 1895, 1896, 1898, 1900, 1902, 1903, 1907, 1911, 1914, 1919, 1920, 1923, 1926, 1927, 1934], "readonli": 2, "show": [2, 4, 7, 18, 21, 22, 24, 28, 31, 35, 38, 39, 41, 43, 48, 63, 71, 898, 904, 950, 1120, 1196, 1297, 1428, 1599, 1665, 1863, 1864, 1869, 1882, 1891, 1892, 1893, 1897, 1898, 1900, 1907, 1910, 1911, 1919, 1921], "max_siz": [2, 57, 59, 1892], "capac": [2, 1039, 1892], "preferred_linalg_librari": 2, "subject": [2, 3, 14, 21, 24, 30, 35, 41, 45, 46, 63, 70, 71, 862, 1577, 1608, 1869, 1882, 1883, 1889, 1894, 1907, 1908, 1912, 1913, 1914, 1915, 1919, 1926, 1931, 1932, 1933], "algebra": [2, 9, 1069, 1253, 1864, 1874], "cusolv": [2, 1259, 1260, 1814], "magma": [2, 942, 1241, 1285, 1713, 1814, 1906, 1923], "decid": [2, 4, 7, 15, 16, 17, 22, 41, 58, 67, 1631, 1876, 1907, 1923], "heurist": [2, 16, 22, 28, 32, 38, 58, 59, 71, 1069], "overrid": [2, 27, 32, 39, 41, 42, 47, 51, 59, 63, 68, 71, 789, 790, 851, 887, 889, 1012, 1344, 1345, 1362, 1364, 1388, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1499, 1500, 1510, 1539, 1562, 1570, 1622, 1684, 1745, 1762, 1864, 1869, 1873, 1910, 1911, 1914, 1919, 1928, 1933], "wherev": [2, 9, 20, 1882], "pick": [2, 13, 14, 18, 22, 41, 57, 59, 511, 950, 1889, 1919], "prefer": [2, 9, 38, 43, 49, 63, 859, 875, 900, 1194, 1236, 1249, 1253, 1261, 1268, 1435, 1577, 1749, 1810, 1828, 1866, 1889, 1892, 1911, 1923], "achiev": [2, 28, 38, 39, 41, 47, 59, 63, 1069, 1133, 1196, 1345, 1351, 1428, 1434, 1435, 1500, 1529, 1608, 1892, 1899, 1911, 1919, 1921], "better": [2, 3, 7, 8, 9, 12, 13, 16, 18, 20, 24, 28, 32, 38, 41, 49, 67, 950, 1038, 1125, 1129, 1130, 1171, 1183, 1211, 1364, 1461, 1583, 1608, 1695, 1720, 1869, 1888, 1889, 1891, 1892, 1897, 1906, 1907, 1910, 1913, 1915, 1923, 1928, 1933], "select": [2, 5, 20, 24, 33, 36, 38, 41, 47, 49, 313, 315, 317, 321, 757, 940, 955, 976, 977, 981, 988, 989, 990, 991, 993, 1014, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1038, 1039, 1042, 1044, 1046, 1047, 1089, 1268, 1297, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1380, 1398, 1443, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1636, 1637, 1752, 1825, 1859, 1865, 1866, 1867, 1869, 1881, 1882, 1883, 1884, 1889, 1891, 1892, 1897, 1904, 1909, 1914, 1923, 1927, 1930], "incorrect": [2, 4, 5, 63, 71, 254, 511, 553, 896, 905, 932, 1211, 1254, 1267, 1434, 1472, 1473, 1474, 1475, 1595, 1655, 1810, 1866, 1869, 1892, 1903, 1907], "linalg": [2, 406, 940, 941, 942, 943, 969, 1055, 1141, 1174, 1276, 1285, 1286, 1287, 1291, 1292, 1615, 1616, 1620, 1655, 1700, 1705, 1707, 1713, 1784, 1814, 1815, 1837, 1853, 1864], "inv": [2, 47, 942, 1174, 1227, 1231, 1237, 1253, 1257, 1261], "inv_ex": 2, "cholesky_ex": [2, 1225], "lu_factor": [2, 1244, 1245, 1285, 1286, 1287], "lu": [2, 10, 1237, 1243, 1244, 1245, 1286, 1287, 1867], "eigh": [2, 1225, 1231, 1234, 1253, 1259, 1903], "eighval": 2, "svdval": [2, 1227, 1241, 1250, 1259, 1814, 1903], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 20, 41, 793, 1907, 1914, 1919], "scale": [2, 7, 16, 38, 47, 49, 57, 59, 98, 472, 474, 614, 682, 686, 687, 688, 735, 736, 737, 738, 739, 740, 741, 746, 747, 748, 749, 750, 751, 752, 753, 756, 767, 769, 770, 771, 772, 774, 777, 778, 792, 796, 799, 816, 817, 818, 819, 822, 918, 1083, 1084, 1087, 1105, 1136, 1137, 1282, 1340, 1366, 1371, 1372, 1373, 1389, 1400, 1455, 1480, 1481, 1482, 1518, 1519, 1520, 1536, 1538, 1577, 1578, 1583, 1668, 1689, 1715, 1716, 1717, 1718, 1719, 1792, 1793, 1811, 1856, 1864, 1867, 1883, 1887, 1892, 1896, 1900, 1914, 1915, 1917, 1924], "product": [2, 21, 33, 41, 47, 58, 151, 683, 686, 687, 688, 757, 890, 892, 899, 901, 902, 903, 904, 918, 930, 936, 940, 964, 969, 981, 1028, 1032, 1046, 1047, 1050, 1066, 1069, 1132, 1136, 1137, 1173, 1216, 1228, 1235, 1261, 1262, 1264, 1290, 1297, 1300, 1320, 1380, 1381, 1398, 1399, 1526, 1577, 1615, 1701, 1702, 1711, 1830, 1845, 1853, 1856, 1864, 1866, 1882, 1889, 1897, 1899, 1903, 1911, 1923], "attent": [2, 7, 46, 732, 1345, 1434, 1471, 1473, 1475, 1500, 1577, 1864, 1906, 1927], "stai": [2, 7, 45, 140, 1365, 1892, 1902, 1914, 1919, 1923], "align": [2, 9, 18, 39, 757, 776, 782, 817, 823, 950, 1069, 1149, 1251, 1343, 1351, 1364, 1380, 1394, 1398, 1422, 1423, 1443, 1480, 1510, 1511, 1538, 1539, 1596, 1615, 1655, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1687, 1835, 1864, 1882, 1889, 1897, 1907, 1917, 1924], "src": [2, 3, 41, 71, 197, 229, 313, 321, 470, 510, 511, 512, 513, 514, 515, 517, 535, 1060, 1126, 1318, 1471, 1474, 1475, 1664, 1746, 1747, 1748, 1752, 1783, 1824, 1849, 1865, 1867, 1911], "transform": [2, 3, 19, 20, 21, 38, 43, 46, 63, 68, 778, 794, 835, 836, 854, 855, 941, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1125, 1126, 1127, 1131, 1136, 1193, 1205, 1349, 1383, 1391, 1392, 1393, 1400, 1415, 1456, 1472, 1473, 1474, 1475, 1492, 1498, 1527, 1544, 1563, 1599, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1778, 1810, 1864, 1895, 1912, 1914, 1928, 1933], "sdp_utils_cpp": 2, "h": [2, 4, 10, 14, 24, 32, 47, 486, 738, 739, 740, 757, 1225, 1232, 1235, 1245, 1259, 1334, 1335, 1342, 1343, 1345, 1347, 1348, 1352, 1357, 1358, 1360, 1368, 1369, 1371, 1373, 1380, 1381, 1392, 1393, 1398, 1399, 1400, 1411, 1412, 1422, 1423, 1440, 1441, 1443, 1445, 1462, 1478, 1481, 1482, 1492, 1500, 1527, 1562, 1568, 1569, 1615, 1616, 1649, 1664, 1814, 1867, 1882, 1883, 1889, 1892, 1893, 1896, 1897, 1907, 1927, 1928, 1929], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1577], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1577], "math_sdp_en": 2, "math": [2, 28, 38, 71, 1079, 1245, 1247, 1539, 1577, 1703, 1720, 1815, 1864, 1866, 1868, 1869, 1903, 1923, 1924, 1930], "enable_math_sdp": [2, 1577], "sdp_kernel": [2, 1577], "enable_flash": 2, "enable_math": [2, 1577], "enable_mem_effici": 2, "temporarili": [2, 22, 49, 1753, 1889, 1907, 1913], "previou": [2, 16, 35, 41, 58, 63, 71, 553, 757, 1004, 1114, 1149, 1206, 1266, 1282, 1380, 1398, 1443, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1665, 1720, 1810, 1877, 1889, 1892, 1894, 1900, 1906, 1914, 1921], "restor": [2, 5, 13, 45, 71, 89, 957, 1114, 1266, 1282, 1740, 1762, 1900, 1905], "is_avail": [2, 34, 41, 1864, 1892, 1898, 1901, 1913], "determinist": [2, 3, 5, 37, 41, 47, 71, 89, 511, 870, 1144, 1177, 1199, 1211, 1212, 1293, 1296, 1298, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1398, 1443, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1750, 1756, 1849, 1867, 1889, 1904, 1910, 1918], "algorithm": [2, 3, 7, 30, 36, 39, 42, 45, 47, 49, 63, 89, 757, 776, 782, 940, 1193, 1236, 1243, 1249, 1253, 1259, 1268, 1285, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1378, 1380, 1398, 1443, 1479, 1480, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1527, 1538, 1577, 1596, 1608, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1684, 1703, 1742, 1757, 1814, 1815, 1849, 1864, 1889, 1892, 1903, 1919, 1923], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 870, 1177, 1756, 1904], "benchmark": [2, 11, 16, 21, 24, 1864, 1867, 1892, 1898], "fastest": [2, 874, 1608, 1654, 1670, 1671, 1897, 1904, 1910], "benchmark_limit": 2, "maximum": [2, 14, 47, 58, 59, 692, 694, 768, 792, 817, 818, 819, 822, 823, 871, 983, 1018, 1020, 1026, 1033, 1034, 1048, 1049, 1115, 1131, 1156, 1157, 1158, 1268, 1293, 1313, 1387, 1518, 1519, 1613, 1687, 1695, 1720, 1734, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1865, 1867, 1875, 1887, 1888, 1892, 1909, 1917, 1930], "try": [2, 3, 4, 7, 8, 12, 14, 15, 16, 18, 19, 28, 41, 43, 50, 51, 55, 58, 63, 67, 68, 83, 84, 950, 1039, 1122, 1131, 1137, 1201, 1202, 1211, 1313, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1472, 1474, 1480, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1856, 1863, 1866, 1869, 1870, 1889, 1892, 1894, 1896, 1897, 1902, 1907, 1910, 1911, 1914, 1915, 1919, 1923], "dispatch": [2, 16, 17, 41, 63, 71, 1201, 1309, 1310, 1869, 1873, 1892, 1894, 1907, 1934], "v8": 2, "verbos": [2, 16, 28, 32, 41, 71, 677, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1863, 1875, 1883, 1907, 1908, 1928], "On": [2, 11, 14, 15, 32, 37, 38, 41, 42, 47, 59, 63, 68, 71, 683, 686, 918, 930, 1243, 1290, 1300, 1356, 1357, 1358, 1359, 1360, 1361, 1381, 1396, 1397, 1398, 1399, 1415, 1438, 1443, 1456, 1608, 1670, 1671, 1680, 1683, 1864, 1866, 1876, 1889, 1891, 1892, 1903, 1911, 1919, 1920, 1921, 1923], "demand": [2, 38, 1006, 1868, 1899, 1919], "onemkl": 2, "easier": [2, 7, 16, 28, 38, 71, 1866, 1868, 1884, 1889, 1890, 1894, 1895], "dump": [2, 16, 20, 28, 71, 970, 1893, 1906], "durat": [2, 16, 28, 41, 55, 58, 1309, 1310, 1879, 1913], "kernel": [2, 3, 4, 11, 15, 16, 17, 19, 28, 30, 32, 35, 41, 63, 70, 736, 737, 738, 739, 740, 769, 770, 771, 973, 975, 976, 1012, 1013, 1045, 1047, 1315, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1376, 1377, 1396, 1397, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1424, 1425, 1426, 1479, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1577, 1618, 1864, 1866, 1873, 1877, 1884, 1892, 1894, 1895, 1901, 1903, 1907, 1910, 1913, 1915, 1923], "environ": [2, 3, 7, 12, 16, 28, 32, 33, 35, 37, 39, 47, 49, 51, 56, 61, 71, 677, 1205, 1211, 1398, 1443, 1849, 1863, 1864, 1866, 1875, 1889, 1891, 1893, 1898, 1903, 1904, 1906, 1912, 1919], "variabl": [2, 3, 5, 14, 16, 19, 28, 32, 35, 37, 39, 47, 49, 51, 56, 61, 63, 68, 71, 447, 677, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 725, 726, 727, 728, 729, 731, 735, 736, 737, 738, 739, 740, 742, 743, 753, 757, 761, 796, 894, 964, 968, 1038, 1070, 1137, 1209, 1211, 1268, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1371, 1372, 1380, 1381, 1398, 1399, 1400, 1413, 1415, 1428, 1431, 1436, 1443, 1445, 1608, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1659, 1666, 1668, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1722, 1724, 1726, 1849, 1856, 1861, 1863, 1864, 1875, 1876, 1883, 1884, 1889, 1891, 1893, 1896, 1897, 1903, 1904, 1906, 1907, 1910, 1914, 1919, 1925, 1928], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 11, 16, 28, 38, 41, 71, 89, 677, 855, 966, 968, 1026, 1241, 1259, 1336, 1375, 1479, 1521, 1608, 1695, 1782, 1794, 1864, 1881, 1883, 1884, 1891, 1892, 1896, 1900, 1903, 1905, 1907, 1911, 1912, 1915, 1919, 1923, 1926, 1929], "moreov": [2, 63, 511, 1608, 1683], "investig": [2, 7, 41, 68], "singl": [2, 3, 5, 11, 14, 15, 16, 19, 20, 21, 25, 27, 28, 32, 39, 41, 43, 45, 46, 47, 49, 51, 57, 58, 63, 64, 66, 67, 68, 69, 70, 71, 254, 677, 692, 693, 763, 764, 765, 766, 769, 770, 771, 811, 891, 898, 899, 900, 901, 902, 903, 904, 919, 928, 932, 952, 964, 968, 1012, 1015, 1125, 1127, 1128, 1131, 1133, 1137, 1153, 1154, 1158, 1181, 1195, 1196, 1211, 1212, 1215, 1273, 1297, 1309, 1310, 1334, 1335, 1338, 1339, 1342, 1343, 1345, 1356, 1357, 1358, 1360, 1361, 1364, 1365, 1376, 1377, 1383, 1396, 1397, 1400, 1422, 1423, 1428, 1436, 1440, 1441, 1456, 1467, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1524, 1551, 1552, 1553, 1595, 1601, 1603, 1606, 1607, 1608, 1612, 1613, 1614, 1650, 1651, 1670, 1671, 1673, 1678, 1684, 1689, 1710, 1736, 1802, 1808, 1809, 1846, 1847, 1849, 1851, 1852, 1856, 1864, 1866, 1868, 1869, 1876, 1877, 1881, 1883, 1884, 1889, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1903, 1904, 1905, 1907, 1910, 1911, 1912, 1913, 1914, 1920, 1921, 1923, 1926, 1929, 1930, 1933], "enough": [2, 8, 17, 39, 71, 1207, 1318, 1477, 1796, 1797, 1798, 1799, 1800, 1801, 1849, 1868, 1881, 1884, 1894, 1897, 1910, 1911, 1926, 1934], "scope": [2, 7, 15, 27, 60, 71, 1122, 1467, 1631, 1866, 1868, 1869, 1892, 1896, 1907, 1911, 1921], "second": [2, 5, 11, 20, 32, 35, 41, 45, 49, 51, 58, 60, 69, 71, 683, 686, 688, 691, 757, 791, 871, 872, 873, 881, 889, 905, 906, 918, 922, 923, 925, 926, 927, 930, 969, 981, 1028, 1032, 1046, 1047, 1057, 1059, 1060, 1066, 1074, 1115, 1116, 1127, 1130, 1131, 1132, 1136, 1137, 1139, 1140, 1149, 1152, 1160, 1161, 1162, 1173, 1185, 1218, 1220, 1228, 1264, 1267, 1273, 1274, 1284, 1290, 1294, 1296, 1297, 1299, 1300, 1324, 1329, 1332, 1336, 1342, 1343, 1349, 1357, 1358, 1360, 1361, 1371, 1372, 1379, 1380, 1394, 1397, 1398, 1416, 1420, 1422, 1423, 1443, 1456, 1509, 1511, 1545, 1599, 1631, 1670, 1671, 1674, 1680, 1684, 1695, 1741, 1791, 1799, 1834, 1839, 1841, 1850, 1853, 1856, 1868, 1869, 1889, 1892, 1894, 1895, 1896, 1897, 1900, 1904, 1907, 1913, 1919, 1924, 1928], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 14, 16, 17, 20, 25, 27, 28, 33, 35, 38, 41, 49, 50, 51, 55, 63, 67, 71, 497, 677, 744, 891, 892, 893, 901, 1126, 1141, 1365, 1608, 1864, 1865, 1866, 1869, 1870, 1875, 1879, 1881, 1884, 1887, 1889, 1891, 1894, 1897, 1911, 1913, 1914, 1915, 1919, 1923, 1928, 1932, 1933, 1934], "verbose_off": 2, "dnn": [2, 1891], "onednn": [2, 852, 853, 856, 1198, 1204, 1914], "former": [2, 63, 1398, 1428, 1889], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 12, 34, 39, 47, 67, 70, 1527, 1608, 1863, 1864, 1880, 1894, 1900, 1910, 1917, 1919, 1928, 1931], "els": [2, 7, 11, 12, 14, 27, 38, 41, 43, 47, 49, 50, 58, 71, 600, 757, 921, 1207, 1213, 1394, 1467, 1564, 1577, 1608, 1662, 1670, 1671, 1680, 1681, 1682, 1683, 1737, 1738, 1771, 1777, 1866, 1868, 1870, 1871, 1876, 1881, 1884, 1892, 1894, 1895, 1900, 1901, 1907, 1910, 1911, 1925], "einsum": [2, 1867, 1909], "readthedoc": [2, 1069], "io": [2, 7, 38, 43, 1069, 1203, 1206, 1267, 1398, 1399, 1475, 1577, 1663, 1745, 1906, 1914], "en": [2, 39, 1069, 1898, 1928, 1935], "path_find": [2, 1069], "html": [2, 3, 4, 7, 18, 33, 59, 677, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 950, 1069, 1477, 1849, 1890, 1898, 1900, 1904, 1911, 1928], "calcul": [2, 38, 41, 55, 757, 765, 766, 796, 799, 816, 817, 821, 938, 968, 1057, 1061, 1069, 1073, 1187, 1193, 1251, 1273, 1274, 1276, 1341, 1342, 1343, 1346, 1347, 1348, 1351, 1359, 1360, 1361, 1375, 1380, 1382, 1383, 1391, 1392, 1393, 1400, 1467, 1479, 1480, 1494, 1495, 1496, 1524, 1527, 1538, 1567, 1616, 1627, 1649, 1653, 1655, 1689, 1735, 1759, 1808, 1809, 1839, 1841, 1851, 1852, 1889, 1890, 1893, 1897, 1903, 1906, 1914, 1933], "path": [2, 3, 4, 8, 11, 16, 20, 22, 32, 41, 43, 56, 58, 60, 61, 63, 71, 731, 912, 913, 970, 971, 1069, 1196, 1428, 1444, 1475, 1665, 1863, 1867, 1868, 1889, 1892, 1894, 1898, 1905, 1911, 1913, 1923, 1932], "contract": [2, 12, 20, 1069, 1830, 1864, 1883, 1911], "left": [2, 38, 71, 459, 497, 811, 817, 862, 919, 923, 928, 929, 934, 939, 1069, 1089, 1096, 1110, 1113, 1114, 1118, 1149, 1153, 1154, 1158, 1193, 1194, 1201, 1215, 1236, 1245, 1249, 1253, 1256, 1257, 1258, 1259, 1261, 1273, 1274, 1318, 1336, 1341, 1342, 1343, 1344, 1345, 1356, 1357, 1358, 1375, 1382, 1395, 1396, 1397, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1431, 1432, 1433, 1437, 1438, 1476, 1479, 1480, 1481, 1482, 1527, 1547, 1565, 1613, 1687, 1688, 1701, 1729, 1742, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1810, 1830, 1835, 1850, 1866, 1867, 1869, 1889, 1894, 1900, 1917, 1924], "strategi": [2, 3, 7, 16, 38, 39, 41, 45, 51, 63, 898, 900, 1069, 1129, 1209, 1336, 1608, 1695, 1868, 1895, 1897, 1915], "auto": [2, 15, 41, 63, 64, 83, 84, 1069, 1344, 1345, 1869, 1907, 1928], "greedi": [2, 45, 1069], "doc": [2, 3, 4, 9, 17, 18, 23, 33, 58, 59, 83, 677, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 837, 950, 1137, 1214, 1472, 1473, 1474, 1475, 1849, 1856, 1870, 1881, 1890, 1893, 1894, 1900, 1904, 1907, 1911, 1928], "timer": [3, 44, 1864], "stmt": [3, 1891], "setup": [3, 12, 32, 39, 58, 59, 817, 818, 819, 822, 1137, 1608, 1856, 1891, 1892, 1901, 1919, 1920], "global_setup": 3, "perf_count": 3, "global": [3, 5, 8, 13, 15, 16, 17, 26, 27, 28, 38, 41, 43, 45, 46, 47, 49, 59, 63, 68, 70, 71, 851, 858, 862, 870, 919, 928, 1021, 1028, 1070, 1072, 1082, 1087, 1105, 1123, 1126, 1153, 1154, 1177, 1184, 1196, 1199, 1211, 1215, 1266, 1282, 1428, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1627, 1631, 1659, 1722, 1724, 1726, 1729, 1753, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1861, 1866, 1869, 1870, 1885, 1888, 1894, 1899, 1900, 1902, 1904, 1914, 1919, 1920, 1921, 1923, 1926, 1928], "label": [3, 6, 7, 38, 45, 1069, 1336, 1345, 1351, 1362, 1364, 1388, 1420, 1431, 1432, 1511, 1642, 1688, 1893, 1902, 1904, 1928], "sub_label": 3, "descript": [3, 7, 17, 28, 31, 32, 38, 51, 58, 71, 731, 1167, 1168, 1169, 1241, 1268, 1492, 1713, 1868, 1869, 1892, 1894, 1897, 1899, 1900, 1907, 1935], "env": [3, 16, 28, 41, 47, 51, 56, 58, 59, 61, 71, 1026, 1662, 1893, 1903, 1919], "num_thread": 3, "languag": [3, 32, 51, 1207, 1336, 1471, 1526, 1896], "measur": [3, 47, 55, 972, 1018, 1020, 1227, 1344, 1345, 1362, 1388, 1395, 1419, 1420, 1476, 1477, 1499, 1500, 1558, 1697, 1864, 1892, 1899, 1900, 1910, 1923], "statement": [3, 12, 20, 47, 68, 71, 955, 1197, 1211, 1870, 1889, 1894, 1902, 1905, 1907, 1911, 1917, 1919], "full": [3, 7, 8, 13, 16, 18, 20, 21, 22, 28, 33, 38, 39, 41, 45, 47, 58, 61, 63, 64, 68, 71, 511, 897, 919, 928, 950, 1097, 1098, 1099, 1103, 1104, 1106, 1124, 1136, 1137, 1153, 1154, 1200, 1233, 1234, 1241, 1242, 1243, 1254, 1259, 1260, 1268, 1285, 1345, 1351, 1382, 1442, 1471, 1502, 1503, 1504, 1511, 1524, 1570, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1762, 1814, 1815, 1856, 1863, 1865, 1866, 1867, 1868, 1869, 1871, 1883, 1888, 1892, 1893, 1894, 1897, 1900, 1903, 1904, 1909, 1911, 1914, 1917, 1920, 1927, 1930], "org": [3, 4, 7, 9, 10, 18, 33, 39, 46, 47, 59, 677, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 950, 1268, 1398, 1446, 1447, 1474, 1477, 1652, 1703, 1778, 1863, 1870, 1889, 1890, 1900, 1904, 1906, 1907, 1911, 1928, 1935], "timeit": [3, 1891], "sever": [3, 18, 33, 38, 41, 46, 47, 63, 71, 735, 736, 737, 738, 739, 740, 763, 764, 769, 770, 771, 779, 780, 950, 1015, 1073, 1171, 1196, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1356, 1357, 1358, 1359, 1360, 1361, 1376, 1377, 1396, 1397, 1416, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1481, 1482, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1545, 1548, 1549, 1551, 1552, 1553, 1608, 1617, 1618, 1620, 1621, 1653, 1664, 1718, 1719, 1759, 1845, 1866, 1888, 1889, 1891, 1892, 1899, 1900, 1907, 1910, 1914, 1919], "kei": [3, 17, 19, 20, 24, 27, 38, 43, 49, 56, 58, 59, 63, 71, 600, 677, 732, 851, 856, 914, 1035, 1125, 1135, 1196, 1211, 1212, 1267, 1428, 1429, 1434, 1438, 1471, 1472, 1473, 1474, 1475, 1577, 1634, 1650, 1864, 1867, 1868, 1869, 1873, 1892, 1894, 1899, 1900, 1905, 1907, 1909, 1910, 1913, 1914, 1917, 1919, 1920, 1925, 1928, 1930, 1932], "awar": [3, 7, 24, 485, 709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 730, 835, 836, 852, 859, 860, 1475, 1577, 1608, 1818, 1819, 1820, 1821, 1822, 1883, 1889, 1892, 1911, 1917, 1920, 1923], "element": [3, 15, 19, 38, 41, 47, 68, 69, 71, 98, 120, 151, 155, 197, 217, 242, 254, 258, 286, 313, 315, 317, 319, 321, 352, 398, 400, 402, 434, 453, 470, 472, 473, 495, 497, 511, 513, 515, 518, 542, 543, 555, 557, 606, 607, 614, 678, 680, 681, 684, 685, 690, 691, 695, 696, 732, 755, 757, 767, 768, 769, 770, 771, 777, 781, 790, 871, 873, 874, 875, 878, 879, 880, 881, 882, 890, 898, 899, 901, 902, 903, 905, 906, 920, 929, 932, 939, 945, 949, 962, 964, 965, 966, 1012, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1058, 1059, 1060, 1064, 1066, 1069, 1072, 1074, 1075, 1079, 1099, 1103, 1104, 1106, 1108, 1113, 1115, 1116, 1118, 1122, 1127, 1128, 1130, 1131, 1132, 1136, 1137, 1138, 1139, 1140, 1141, 1149, 1152, 1155, 1156, 1157, 1158, 1173, 1181, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1215, 1217, 1218, 1220, 1237, 1239, 1243, 1254, 1258, 1269, 1270, 1272, 1275, 1277, 1278, 1279, 1280, 1284, 1285, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1316, 1318, 1323, 1324, 1326, 1327, 1328, 1329, 1330, 1340, 1341, 1344, 1345, 1346, 1347, 1348, 1350, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1375, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1394, 1395, 1398, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1414, 1417, 1419, 1420, 1421, 1422, 1423, 1427, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1455, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1476, 1477, 1479, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1512, 1516, 1519, 1520, 1525, 1526, 1530, 1531, 1532, 1533, 1536, 1539, 1540, 1542, 1547, 1551, 1552, 1553, 1557, 1558, 1562, 1563, 1565, 1568, 1569, 1570, 1571, 1572, 1573, 1577, 1578, 1579, 1580, 1581, 1583, 1585, 1587, 1588, 1589, 1590, 1595, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1634, 1635, 1641, 1642, 1644, 1645, 1654, 1655, 1656, 1658, 1666, 1706, 1707, 1710, 1711, 1718, 1719, 1721, 1732, 1735, 1736, 1740, 1742, 1744, 1762, 1765, 1767, 1779, 1780, 1782, 1783, 1787, 1793, 1796, 1797, 1798, 1799, 1800, 1801, 1803, 1804, 1808, 1809, 1813, 1824, 1826, 1827, 1831, 1832, 1833, 1835, 1837, 1838, 1839, 1840, 1841, 1843, 1845, 1846, 1847, 1851, 1852, 1853, 1856, 1859, 1867, 1869, 1876, 1884, 1887, 1890, 1891, 1894, 1897, 1903, 1905, 1907, 1910, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1934], "lazili": [3, 34, 43, 972, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1599, 1866], "threadpool": 3, "comparison": [3, 25, 39, 41, 71, 1196, 1211, 1212, 1428, 1666, 1870, 1894, 1930, 1933], "appl": 3, "focu": [3, 16, 20, 1697], "replic": [3, 38, 46, 63, 1149, 1206, 1356, 1357, 1358, 1365, 1375, 1404, 1405, 1406, 1452, 1453, 1454, 1479, 1565, 1592, 1912], "particularli": [3, 14, 38, 39, 60, 1364, 1365, 1435, 1866, 1892], "variat": [3, 28, 47, 1869, 1894, 1910, 1915], "confound": 3, "quantifi": [3, 1477], "nois": [3, 28, 1867, 1904], "median": [3, 47, 174, 1324, 1849, 1867, 1882, 1909], "robust": [3, 1268, 1881, 1900], "deviat": [3, 47, 377, 1340, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1467, 1656, 1772, 1777, 1808, 1809, 1887], "merg": [3, 6, 7, 9, 38, 41, 43, 59, 1429, 1434, 1438], "repeat": [3, 47, 68, 492, 968, 1069, 1259, 1285, 1424, 1425, 1426, 1499, 1500, 1703, 1735, 1794, 1814, 1815, 1831, 1865, 1867, 1869, 1909, 1913, 1916, 1923], "autorang": 3, "exact": [3, 15, 16, 18, 24, 28, 32, 38, 49, 60, 339, 738, 739, 740, 792, 871, 872, 873, 905, 906, 950, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1296, 1360, 1398, 1475, 1538, 1577, 1608, 1698, 1788, 1887, 1893, 1902, 1923, 1934], "discuss": [3, 5, 8, 9, 10, 16, 17, 25, 47, 71, 1389, 1876, 1889, 1894, 1900, 1904, 1919, 1921, 1923], "docstr": [3, 32, 71, 858, 859, 1196, 1428, 1863, 1892], "adapt": [3, 14, 763, 764, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1366, 1486, 1487, 1488, 1489, 1490, 1491, 1662, 1668, 1669, 1680, 1682, 1689, 1892], "field": [3, 7, 20, 27, 28, 41, 45, 49, 51, 55, 56, 71, 823, 890, 1194, 1196, 1336, 1344, 1345, 1362, 1364, 1388, 1394, 1395, 1419, 1420, 1428, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1492, 1499, 1500, 1510, 1527, 1539, 1562, 1570, 1641, 1678, 1684, 1879, 1889, 1893, 1902, 1907, 1919, 1920, 1928], "displai": [3, 16, 28, 35, 1014, 1027, 1538, 1596, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699, 1863, 1870, 1875, 1878, 1907, 1928, 1930], "instruct": [3, 4, 15, 16, 20, 28, 30, 32, 60, 70, 1866, 1869, 1903, 1907, 1930], "count": [3, 20, 38, 47, 55, 71, 921, 967, 1008, 1122, 1157, 1158, 1194, 1233, 1234, 1641, 1846, 1847, 1867, 1879, 1892, 1909, 1913, 1919, 1921, 1923], "wall": [3, 22], "callgrind": 3, "analog": [3, 14, 20, 71, 691, 1052, 1090, 1092, 1171, 1245, 1398, 1683, 1814, 1831, 1884, 1900], "constructor": [3, 32, 38, 39, 45, 63, 71, 821, 858, 859, 1336, 1433, 1438, 1439, 1456, 1481, 1482, 1608, 1648, 1789, 1864, 1866, 1869, 1870, 1892, 1893, 1900, 1919, 1923, 1925, 1926, 1929, 1935], "snippet": [3, 20, 59, 1863, 1900, 1905], "loop": [3, 11, 15, 20, 21, 27, 39, 60, 64, 68, 69, 71, 859, 860, 904, 1015, 1018, 1020, 1131, 1137, 1211, 1608, 1618, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1856, 1866, 1867, 1869, 1879, 1891, 1892, 1896, 1897, 1900, 1903, 1907, 1910, 1913, 1914, 1928], "callabl": [3, 5, 12, 17, 18, 20, 27, 38, 39, 41, 45, 47, 49, 51, 56, 58, 60, 63, 70, 71, 73, 74, 75, 120, 398, 838, 950, 952, 1012, 1013, 1015, 1126, 1127, 1128, 1133, 1136, 1137, 1196, 1199, 1207, 1211, 1267, 1268, 1428, 1471, 1473, 1475, 1477, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1678, 1680, 1681, 1682, 1683, 1684, 1691, 1694, 1856, 1863, 1866, 1868, 1869, 1870, 1879, 1892, 1900, 1907, 1911, 1912, 1913, 1919, 1930, 1932, 1933, 1934], "present": [3, 9, 17, 23, 38, 41, 58, 63, 1194, 1285, 1336, 1398, 1438, 1641, 1664, 1810, 1863, 1878, 1881, 1882, 1883, 1888, 1889, 1892, 1894, 1897, 1900, 1907, 1911, 1920, 1923, 1926], "default_tim": 3, "summar": [3, 4, 20, 28, 59, 1762, 1869, 1884, 1923], "relu": [3, 12, 19, 27, 28, 39, 68, 69, 71, 697, 698, 702, 703, 704, 705, 706, 707, 708, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 762, 789, 790, 811, 851, 857, 1012, 1127, 1137, 1207, 1428, 1443, 1445, 1456, 1464, 1471, 1473, 1475, 1574, 1575, 1599, 1665, 1856, 1865, 1866, 1867, 1877, 1883, 1884, 1887, 1889, 1900, 1905, 1907, 1909, 1914, 1916, 1917], "readabl": [3, 28, 31, 38, 56, 71, 1014, 1027, 1828, 1907, 1910, 1934], "supplement": 3, "disambigu": [3, 28, 56, 71, 1273], "ident": [3, 15, 28, 32, 38, 41, 47, 63, 71, 785, 811, 905, 906, 1057, 1233, 1234, 1235, 1236, 1249, 1261, 1264, 1268, 1285, 1323, 1324, 1340, 1366, 1567, 1615, 1617, 1853, 1859, 1870, 1887, 1903, 1904, 1911, 1916, 1923], "easi": [3, 12, 20, 25, 28, 38, 43, 58, 1866, 1889, 1896, 1899, 1900, 1902, 1911, 1914, 1919, 1920, 1923], "differenti": [3, 47, 64, 69, 151, 352, 586, 799, 886, 888, 890, 892, 893, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 947, 1015, 1130, 1131, 1132, 1136, 1210, 1242, 1243, 1254, 1285, 1350, 1351, 1371, 1529, 1563, 1608, 1620, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1849, 1864, 1876, 1894, 1896, 1897, 1907, 1910, 1919, 1929, 1931], "distinguish": [3, 1914, 1923], "princip": [3, 1242, 1703], "signal": [3, 17, 30, 43, 49, 58, 60, 735, 736, 737, 763, 764, 779, 780, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1193, 1258, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1356, 1357, 1358, 1376, 1377, 1396, 1397, 1416, 1421, 1422, 1423, 1481, 1482, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1502, 1505, 1522, 1523, 1545, 1548, 1549, 1551, 1552, 1553, 1810, 1864, 1881, 1902, 1913, 1919], "form": [3, 7, 9, 13, 27, 30, 38, 41, 47, 57, 58, 59, 63, 68, 71, 757, 776, 782, 941, 1057, 1097, 1099, 1196, 1235, 1238, 1243, 1254, 1259, 1334, 1335, 1338, 1339, 1351, 1376, 1377, 1380, 1398, 1428, 1443, 1479, 1480, 1511, 1522, 1523, 1526, 1538, 1565, 1596, 1620, 1683, 1701, 1830, 1863, 1866, 1870, 1884, 1889, 1894, 1900, 1907, 1911, 1914, 1928], "treat": [3, 17, 23, 27, 47, 57, 66, 71, 321, 470, 790, 905, 906, 1012, 1125, 1248, 1251, 1253, 1265, 1267, 1277, 1278, 1279, 1280, 1297, 1326, 1372, 1382, 1400, 1432, 1433, 1434, 1435, 1438, 1456, 1461, 1519, 1608, 1650, 1654, 1689, 1742, 1810, 1824, 1831, 1868, 1869, 1882, 1889, 1919, 1923, 1926, 1933], "distinct": [3, 1125, 1231, 1232, 1276, 1869, 1894, 1905, 1919, 1920], "workload": [3, 8, 38, 41, 63, 1015, 1892, 1899, 1903, 1919], "good": [3, 7, 8, 15, 18, 20, 24, 32, 63, 71, 89, 950, 1129, 1436, 1778, 1863, 1873, 1881, 1894, 1899, 1900, 1907, 1911, 1912, 1914], "intrins": [3, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 789, 790, 1915, 1916], "contrast": [3, 47, 49, 757, 1380, 1683, 1865, 1887, 1889, 1895, 1923], "blocked_autorang": 3, "callback": [3, 39, 58, 60, 70, 71, 1608, 1879, 1899, 1913, 1919], "min_run_tim": 3, "minimum": [3, 32, 39, 49, 58, 59, 693, 694, 768, 792, 817, 818, 819, 822, 823, 872, 921, 1049, 1116, 1156, 1157, 1158, 1298, 1351, 1387, 1477, 1687, 1688, 1695, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1865, 1867, 1887, 1889, 1897, 1909, 1917, 1926], "At": [3, 5, 6, 7, 13, 16, 20, 28, 33, 38, 1103, 1347, 1356, 1357, 1358, 1359, 1360, 1361, 1396, 1397, 1877, 1884, 1891, 1897, 1914, 1919, 1924], "high": [3, 4, 7, 8, 9, 10, 11, 16, 20, 21, 28, 33, 39, 41, 47, 49, 55, 57, 59, 71, 120, 1351, 1474, 1724, 1725, 1757, 1865, 1867, 1879, 1881, 1897, 1898, 1900, 1901, 1910, 1914, 1915, 1919, 1923, 1928, 1929, 1930, 1933], "pseudo": [3, 89], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 14, 16, 28, 41, 1211, 1259, 1429, 1438, 1720, 1891, 1907, 1917, 1923], "block": [3, 7, 8, 38, 41, 45, 46, 58, 60, 70, 71, 580, 581, 582, 929, 955, 972, 1026, 1216, 1268, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1404, 1405, 1406, 1407, 1408, 1409, 1431, 1479, 1521, 1595, 1608, 1796, 1797, 1798, 1866, 1868, 1869, 1879, 1881, 1885, 1889, 1892, 1893, 1897, 1907, 1914, 1919, 1923], "qualiti": [3, 7, 39], "balanc": [3, 18, 89, 950], "compet": 3, "statist": [3, 16, 28, 39, 41, 47, 796, 797, 817, 818, 819, 821, 822, 981, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1046, 1047, 1273, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1879, 1889, 1896, 1910, 1912, 1914, 1917], "amort": 3, "invoc": [3, 5, 11, 20, 71, 838, 1199, 1211, 1866, 1869, 1892, 1894, 1899, 1907, 1919, 1921], "less": [3, 6, 7, 16, 32, 38, 39, 41, 47, 49, 60, 364, 677, 898, 900, 905, 906, 968, 1022, 1039, 1069, 1113, 1117, 1122, 1125, 1220, 1232, 1268, 1284, 1285, 1336, 1389, 1442, 1459, 1465, 1644, 1733, 1839, 1841, 1863, 1867, 1869, 1884, 1892, 1894, 1902, 1903, 1909, 1912, 1914], "bias": [3, 39, 731, 757, 791, 1346, 1347, 1348, 1380, 1381, 1383, 1391, 1392, 1393, 1398, 1399, 1400, 1443, 1445, 1467], "trivial": [3, 15, 49, 51, 732, 940, 1615, 1907, 1921], "low": [3, 7, 22, 35, 39, 47, 63, 497, 901, 1141, 1351, 1703, 1720, 1724, 1725, 1742, 1815, 1865, 1867, 1879, 1881, 1892, 1913, 1930, 1934], "digit": [3, 1762, 1863, 1878, 1899, 1903], "microsecond": [3, 1892], "bia": [3, 9, 41, 46, 709, 710, 711, 712, 713, 714, 715, 716, 717, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 736, 737, 738, 739, 740, 746, 748, 749, 750, 751, 753, 757, 758, 761, 762, 769, 770, 771, 778, 789, 1135, 1196, 1205, 1336, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1380, 1381, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1428, 1434, 1443, 1444, 1445, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1528, 1537, 1541, 1544, 1599, 1608, 1615, 1616, 1630, 1632, 1634, 1649, 1652, 1717, 1865, 1867, 1877, 1894, 1900, 1905, 1914, 1916, 1928], "period": [3, 9, 45, 58, 919, 928, 981, 1014, 1027, 1028, 1032, 1046, 1047, 1089, 1153, 1154, 1215, 1699, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1867, 1879, 1902], "until": [3, 7, 16, 38, 39, 41, 45, 49, 58, 63, 70, 71, 485, 972, 973, 975, 1006, 1122, 1216, 1268, 1309, 1310, 1527, 1599, 1608, 1686, 1692, 1831, 1881, 1887, 1892, 1896, 1907, 1913, 1919, 1921], "overal": [3, 9, 22, 38, 41, 58, 905, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1474, 1889, 1891, 1892, 1902, 1915], "main": [3, 7, 12, 16, 20, 27, 38, 39, 41, 42, 47, 49, 50, 51, 56, 58, 59, 60, 61, 71, 260, 494, 1056, 1057, 1058, 1059, 1060, 1258, 1529, 1794, 1838, 1839, 1840, 1841, 1863, 1866, 1879, 1881, 1883, 1884, 1888, 1889, 1892, 1893, 1894, 1895, 1900, 1906, 1919, 1920, 1928, 1929], "repetit": [3, 1735, 1831], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1864], "tupl": [3, 5, 20, 27, 32, 38, 43, 49, 55, 56, 58, 63, 71, 319, 444, 446, 448, 495, 518, 534, 557, 580, 581, 582, 692, 693, 694, 732, 763, 764, 765, 766, 769, 770, 771, 776, 782, 783, 784, 790, 814, 815, 851, 858, 859, 875, 876, 883, 884, 885, 886, 887, 889, 898, 899, 900, 901, 902, 903, 904, 905, 906, 909, 910, 911, 933, 952, 956, 967, 982, 983, 986, 997, 1015, 1021, 1048, 1049, 1067, 1070, 1072, 1086, 1088, 1089, 1091, 1092, 1094, 1095, 1096, 1098, 1099, 1101, 1102, 1104, 1106, 1109, 1119, 1123, 1125, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1141, 1157, 1159, 1196, 1202, 1207, 1211, 1212, 1217, 1226, 1231, 1232, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1248, 1252, 1254, 1255, 1257, 1259, 1262, 1265, 1283, 1285, 1287, 1293, 1295, 1297, 1298, 1301, 1303, 1323, 1326, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1365, 1375, 1376, 1377, 1396, 1397, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1434, 1438, 1449, 1450, 1451, 1452, 1453, 1454, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1490, 1491, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1538, 1551, 1552, 1553, 1563, 1565, 1596, 1597, 1598, 1603, 1604, 1605, 1608, 1620, 1631, 1644, 1650, 1654, 1655, 1659, 1662, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1703, 1704, 1713, 1722, 1724, 1726, 1736, 1740, 1741, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1805, 1808, 1809, 1813, 1814, 1815, 1828, 1829, 1830, 1831, 1832, 1837, 1844, 1845, 1846, 1847, 1851, 1852, 1856, 1857, 1859, 1861, 1866, 1867, 1870, 1881, 1884, 1889, 1892, 1894, 1895, 1900, 1905, 1907, 1910, 1911, 1914, 1919, 1923, 1928, 1930, 1933, 1934], "modulo": [3, 47, 1117, 1733], "determin": [3, 5, 8, 14, 15, 16, 27, 28, 30, 32, 34, 35, 37, 38, 39, 41, 47, 49, 56, 58, 63, 68, 71, 820, 823, 898, 900, 905, 906, 919, 928, 935, 940, 1016, 1071, 1090, 1100, 1124, 1125, 1153, 1154, 1157, 1158, 1209, 1229, 1241, 1252, 1255, 1276, 1290, 1372, 1376, 1377, 1398, 1434, 1437, 1443, 1519, 1522, 1523, 1538, 1571, 1596, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1650, 1660, 1695, 1723, 1725, 1727, 1754, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1862, 1869, 1870, 1883, 1892, 1893, 1894, 1900, 1907, 1911, 1914, 1919, 1921, 1925, 1926, 1928, 1930], "itself": [3, 5, 7, 8, 12, 15, 20, 28, 41, 42, 63, 69, 71, 690, 696, 876, 952, 968, 1130, 1131, 1196, 1207, 1211, 1428, 1461, 1583, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1866, 1881, 1900, 1904, 1907, 1911, 1919, 1923, 1927], "jitter": 3, "interpret": [3, 20, 38, 41, 45, 47, 49, 58, 60, 76, 776, 782, 877, 904, 1025, 1090, 1091, 1092, 1097, 1099, 1100, 1101, 1102, 1122, 1146, 1158, 1196, 1201, 1207, 1211, 1248, 1268, 1368, 1527, 1538, 1539, 1596, 1754, 1760, 1863, 1868, 1869, 1881, 1891, 1892, 1907, 1923, 1925, 1927], "ideal": [3, 16, 57, 59, 1211, 1684, 1883], "analysi": [3, 12, 15, 25, 39, 47, 71, 1215, 1703, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1870, 1900, 1908, 1933], "valgrind": 3, "degrad": [3, 32, 1891, 1893, 1894, 1923], "amelior": 3, "suffici": [3, 16, 28, 32, 39, 47, 50, 58, 63, 1670, 1671, 1863, 1923, 1926], "obtain": [3, 38, 41, 47, 51, 70, 71, 494, 915, 1141, 1313, 1351, 1435, 1511, 1608, 1703, 1720, 1815, 1869, 1881, 1882, 1891, 1904, 1907, 1910, 1913, 1914], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 16, 71, 776, 782, 934, 1149, 1353, 1354, 1355, 1449, 1450, 1451, 1452, 1453, 1454, 1480, 1483, 1484, 1485, 1538, 1596, 1689, 1695, 1749, 1867, 1893, 1911, 1912, 1919], "caller": [3, 49, 58, 71, 851, 1196, 1428, 1475, 1604, 1605, 1889, 1892, 1919, 1921], "structur": [3, 5, 9, 14, 17, 23, 38, 39, 41, 48, 49, 51, 59, 63, 71, 889, 1120, 1132, 1137, 1211, 1428, 1627, 1631, 1666, 1703, 1815, 1856, 1868, 1870, 1876, 1879, 1884, 1892, 1893, 1894, 1895, 1902, 1905, 1906, 1907, 1908, 1910, 1911, 1919, 1923, 1928, 1929, 1930, 1931, 1933], "restrict": [3, 8, 14, 38, 47, 63, 68, 69, 1267, 1290, 1364, 1868, 1869, 1870, 1883, 1884, 1889, 1892, 1897, 1912, 1914], "builtin": [3, 16, 28, 41, 71, 1208, 1267, 1729, 1866, 1868, 1870, 1919, 1921], "surpris": [3, 8, 15, 63, 1863, 1897, 1903], "serial": [3, 33, 38, 41, 43, 45, 58, 1196, 1205, 1206, 1267, 1428, 1599, 1662, 1663, 1745, 1863, 1864, 1867, 1878, 1883, 1889, 1892, 1899, 1900, 1902, 1911, 1914, 1920], "subsequ": [3, 7, 11, 16, 20, 32, 33, 41, 71, 957, 973, 1196, 1207, 1211, 1356, 1357, 1358, 1359, 1360, 1361, 1428, 1456, 1604, 1605, 1892, 1904, 1907, 1919, 1923], "deseri": [3, 43, 1267, 1599, 1863, 1878], "globalsbridg": 3, "care": [3, 7, 11, 15, 16, 17, 28, 32, 41, 47, 63, 70, 71, 952, 1090, 1092, 1428, 1881, 1891, 1892, 1893, 1894, 1896, 1900, 1902, 1905, 1907, 1919, 1923], "reli": [3, 9, 15, 16, 17, 22, 32, 38, 39, 49, 51, 63, 71, 151, 890, 905, 952, 1069, 1365, 1684, 1889, 1891, 1893, 1894, 1904, 1905, 1923, 1927], "pickl": [3, 38, 39, 41, 1196, 1267, 1428, 1745, 1863, 1878, 1881, 1905, 1911], "transfer": [3, 38, 41, 1877, 1881, 1892, 1898, 1900, 1911, 1919], "properli": [3, 7, 38, 39, 43, 45, 49, 58, 63, 70, 1090, 1091, 1092, 1100, 1101, 1102, 1297, 1429, 1430, 1438, 1439, 1608, 1863, 1876, 1894, 1897, 1900, 1902, 1905, 1919, 1920, 1926], "profil": [3, 4, 16, 18, 55, 71, 950, 1209, 1602, 1603, 1604, 1605, 1762, 1864, 1909, 1919], "drive": [3, 9, 20, 41, 1889], "facil": [3, 1267, 1881], "analyz": [3, 4, 28, 35, 71, 1893, 1894, 1903], "manipul": [3, 27, 63, 70, 1200, 1864, 1888, 1896, 1900, 1912, 1917], "1000000": [3, 1667], "mirror": [3, 140], "semant": [3, 9, 34, 41, 58, 59, 63, 71, 151, 791, 871, 872, 873, 890, 904, 932, 975, 1026, 1126, 1137, 1200, 1206, 1265, 1345, 1500, 1571, 1684, 1847, 1856, 1864, 1868, 1869, 1873, 1876, 1884, 1895, 1900, 1907, 1923], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 39, 1866], "consum": [3, 20, 38, 43, 48, 60, 70, 434, 1069, 1881, 1892, 1902, 1907, 1908, 1928], "extrapol": 3, "sinc": [3, 7, 11, 16, 20, 23, 27, 28, 38, 39, 41, 46, 47, 51, 60, 63, 71, 315, 531, 744, 782, 790, 805, 806, 940, 1018, 1020, 1022, 1069, 1109, 1110, 1111, 1125, 1193, 1196, 1201, 1206, 1209, 1285, 1344, 1371, 1424, 1425, 1426, 1428, 1480, 1492, 1527, 1529, 1596, 1599, 1602, 1631, 1650, 1655, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1695, 1810, 1866, 1867, 1868, 1869, 1875, 1877, 1879, 1884, 1888, 1889, 1892, 1894, 1895, 1896, 1897, 1899, 1900, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1923, 1924, 1926, 1927, 1929, 1930], "properti": [3, 13, 14, 15, 38, 41, 42, 43, 47, 50, 55, 58, 63, 71, 789, 877, 909, 915, 999, 1085, 1086, 1088, 1090, 1091, 1092, 1100, 1101, 1102, 1196, 1340, 1461, 1583, 1599, 1609, 1610, 1611, 1641, 1662, 1864, 1869, 1873, 1879, 1889, 1892, 1897, 1910, 1913, 1919, 1923, 1925, 1926, 1929, 1931, 1934, 1935], "significant_figur": 3, "figur": [3, 7, 8, 16, 43, 71, 1891, 1893, 1907, 1912, 1921, 1928, 1933], "intend": [3, 58, 63, 71, 887, 896, 977, 1215, 1492, 1602, 1603, 1604, 1605, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1684, 1869, 1884, 1887, 1889, 1900, 1911], "interquartil": 3, "mitig": 3, "tail": [3, 38, 56], "645": 3, "conjunct": [3, 38, 41, 45, 63, 821, 1492, 1527, 1608, 1917, 1919], "trim_sigfig": 3, "human": [3, 31, 56, 1014, 1027, 1887, 1907, 1934], "raw": [3, 71, 1122, 1254, 1892, 1911], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 12, 14, 15, 20, 24, 27, 33, 38, 41, 43, 46, 47, 49, 56, 63, 70, 71, 494, 677, 757, 905, 1086, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1106, 1211, 1285, 1346, 1347, 1348, 1365, 1368, 1380, 1391, 1392, 1393, 1410, 1411, 1412, 1413, 1438, 1467, 1473, 1475, 1608, 1805, 1869, 1873, 1877, 1881, 1889, 1891, 1892, 1893, 1895, 1896, 1900, 1903, 1907, 1910, 1912, 1914, 1915, 1919, 1921], "functioncount": [3, 1864], "stat": [3, 16, 28, 66, 823, 833, 834, 1026, 1033, 1034, 1035, 1467, 1608, 1879, 1892, 1932], "as_standard": 3, "strip": [3, 1529, 1608, 1866, 1909], "prefix": [3, 41, 43, 58, 63, 745, 754, 1196, 1428, 1608, 1863, 1875, 1889, 1907, 1911, 1932], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 12, 17, 20, 28, 33, 35, 41, 47, 71, 677, 905, 952, 1089, 1090, 1092, 1100, 1101, 1102, 1235, 1471, 1472, 1473, 1474, 1475, 1599, 1703, 1810, 1854, 1855, 1870, 1875, 1889, 1893, 1899, 1900, 1912, 1923], "locat": [3, 9, 11, 15, 16, 32, 41, 47, 55, 151, 155, 254, 511, 932, 934, 984, 1048, 1049, 1217, 1267, 1293, 1298, 1301, 1318, 1365, 1375, 1462, 1479, 1492, 1527, 1592, 1595, 1608, 1620, 1714, 1749, 1771, 1792, 1795, 1849, 1863, 1866, 1878, 1892, 1907, 1911, 1913, 1919, 1921, 1923, 1928, 1932], "resembl": [3, 33], "23234231": 3, "first_build_dir": 3, "foo": [3, 11, 18, 32, 41, 55, 56, 70, 71, 821, 851, 856, 950, 1125, 1126, 1135, 1194, 1199, 1203, 1206, 1207, 1210, 1211, 1650, 1863, 1866, 1868, 1869, 1873, 1894, 1900, 1907, 1911, 1930], "9823794": 3, "bar": [3, 7, 20, 55, 71, 851, 856, 968, 1125, 1199, 1206, 1808, 1809, 1851, 1852, 1863, 1866, 1868, 1878, 1900, 1907, 1911, 1930], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1193], "site": [3, 7], "denois": 3, "explan": [3, 9, 16, 17, 24, 28, 51, 859, 1196, 1428, 1864, 1893, 1894, 1900], "delta": [3, 47, 757, 1380, 1389, 1398, 1459, 1536, 1668, 1808, 1809, 1835, 1851, 1852, 1867, 1887], "inclus": [3, 47, 89, 511, 1156, 1158, 1266, 1282, 1288, 1724, 1725, 1807, 1918, 1930], "diff": [3, 7, 1866, 1867, 1909], "One": [3, 8, 12, 14, 15, 22, 32, 41, 43, 63, 66, 68, 71, 580, 929, 1126, 1137, 1187, 1480, 1564, 1615, 1618, 1684, 1689, 1697, 1724, 1725, 1845, 1856, 1866, 1868, 1869, 1883, 1884, 1890, 1891, 1892, 1894, 1899, 1912, 1921, 1928], "unit": [3, 11, 30, 32, 47, 49, 59, 63, 71, 757, 758, 1087, 1105, 1340, 1350, 1370, 1373, 1378, 1379, 1380, 1381, 1446, 1447, 1457, 1492, 1516, 1520, 1525, 1526, 1572, 1580, 1624, 1625, 1629, 1632, 1634, 1637, 1837, 1889, 1891, 1897, 1911], "next": [3, 13, 16, 19, 20, 26, 38, 41, 47, 58, 63, 71, 557, 757, 1200, 1332, 1381, 1399, 1445, 1608, 1643, 1881, 1888, 1889, 1891, 1895, 1900, 1902, 1912, 1913, 1919, 1920, 1923, 1926, 1928], "logic": [3, 5, 20, 32, 38, 46, 61, 63, 71, 922, 924, 925, 927, 1086, 1088, 1091, 1092, 1094, 1095, 1098, 1099, 1101, 1102, 1104, 1106, 1126, 1200, 1277, 1278, 1279, 1280, 1290, 1434, 1608, 1712, 1739, 1822, 1869, 1870, 1892, 1893, 1894, 1895, 1897, 1914], "question": [3, 10, 15, 21, 38, 71, 1864, 1889], "why": [3, 7, 15, 38, 63, 68, 71, 1069, 1200, 1577, 1864, 1876, 1895], "involv": [3, 5, 7, 9, 14, 15, 21, 30, 38, 41, 63, 66, 68, 71, 1608, 1869, 1882, 1884, 1889, 1892, 1893, 1896, 1900, 1907, 1919, 1920, 1921, 1923], "look": [3, 4, 7, 8, 9, 11, 12, 14, 16, 17, 20, 22, 24, 27, 28, 33, 41, 47, 57, 58, 65, 68, 71, 859, 898, 900, 1196, 1290, 1336, 1428, 1518, 1633, 1684, 1796, 1797, 1798, 1800, 1801, 1866, 1868, 1882, 1888, 1889, 1892, 1895, 1899, 1900, 1902, 1906, 1907, 1911, 1914, 1919, 1920, 1933], "autom": [3, 8, 16, 28, 71, 1866, 1914], "easili": [3, 7, 8, 19, 27, 28, 30, 39, 41, 1126, 1435, 1527, 1565, 1684, 1742, 1895, 1897, 1900, 1905, 1910, 1918, 1921, 1928], "exclus": [3, 38, 41, 47, 49, 58, 71, 732, 1158, 1608, 1724, 1725, 1728, 1889, 1930], "basi": [3, 9, 10, 47, 1268, 1689, 1892, 1899, 1914, 1919], "thought": [3, 55, 71, 1087, 1089, 1105], "path_and_function_nam": 3, "children": [3, 51, 63, 71, 788, 1196, 1428, 1881, 1900, 1911, 1921], "identifi": [3, 7, 9, 14, 20, 41, 49, 52, 55, 58, 59, 60, 71, 814, 1158, 1267, 1467, 1870, 1881, 1890, 1899, 1900, 1911, 1919, 1920, 1921, 1928], "hot": [3, 20, 47, 1529, 1564, 1897], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 313, 561, 862, 1122, 1529, 1796, 1797, 1798, 1800, 1801, 1811, 1867, 1884, 1909, 1923], "index": [3, 15, 28, 33, 38, 39, 43, 47, 56, 71, 192, 209, 281, 312, 313, 314, 315, 316, 317, 319, 321, 322, 470, 471, 510, 511, 512, 513, 514, 515, 516, 517, 692, 693, 814, 851, 874, 889, 934, 988, 991, 1048, 1049, 1089, 1129, 1130, 1131, 1135, 1137, 1138, 1167, 1168, 1169, 1170, 1194, 1212, 1217, 1225, 1243, 1261, 1275, 1283, 1285, 1289, 1293, 1296, 1297, 1298, 1301, 1318, 1324, 1327, 1328, 1336, 1351, 1364, 1371, 1372, 1429, 1430, 1435, 1438, 1439, 1477, 1479, 1518, 1519, 1564, 1626, 1628, 1635, 1636, 1641, 1654, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1698, 1699, 1714, 1746, 1747, 1748, 1749, 1751, 1752, 1753, 1783, 1793, 1794, 1796, 1797, 1798, 1800, 1801, 1810, 1824, 1845, 1848, 1849, 1856, 1864, 1865, 1866, 1867, 1869, 1876, 1881, 1882, 1883, 1884, 1889, 1892, 1893, 1895, 1898, 1904, 1909, 1921, 1923, 1926, 1927, 1928, 1929, 1930], "cpython": [3, 25, 71], "known": [3, 7, 9, 14, 17, 28, 37, 41, 45, 52, 64, 67, 69, 1132, 1133, 1211, 1212, 1267, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1398, 1443, 1457, 1459, 1479, 1538, 1580, 1599, 1770, 1771, 1828, 1864, 1867, 1871, 1879, 1881, 1884, 1887, 1889, 1891, 1904, 1907, 1910, 1921, 1924], "quit": [3, 7, 22, 71, 1869, 1894, 1896, 1911, 1919], "noisi": 3, "higher": [3, 7, 8, 14, 39, 41, 63, 64, 69, 151, 890, 891, 904, 975, 1015, 1026, 1061, 1127, 1133, 1137, 1156, 1173, 1325, 1364, 1420, 1435, 1577, 1714, 1815, 1856, 1864, 1892, 1894, 1895, 1897, 1899, 1914, 1915, 1919, 1926], "filter": [3, 28, 541, 769, 770, 771, 1193, 1215, 1356, 1357, 1358, 1359, 1360, 1361, 1502, 1503, 1504, 1505, 1506, 1507, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1810, 1869, 1911], "rather": [3, 8, 9, 11, 12, 15, 19, 20, 32, 41, 49, 51, 60, 71, 776, 782, 914, 940, 1194, 1197, 1328, 1492, 1527, 1538, 1596, 1616, 1762, 1866, 1869, 1883, 1884, 1890, 1892, 1894, 1895, 1907, 1911, 1914, 1919, 1923, 1928], "unicod": [3, 1870], "dictionari": [3, 18, 23, 32, 38, 39, 47, 67, 71, 677, 789, 790, 791, 794, 812, 813, 814, 835, 836, 837, 851, 855, 861, 950, 1026, 1125, 1135, 1196, 1197, 1203, 1207, 1211, 1212, 1267, 1268, 1371, 1372, 1428, 1429, 1438, 1518, 1631, 1868, 1870, 1894, 1900, 1907, 1910, 1919, 1928, 1932, 1934], "lookup": [3, 20, 22, 43, 47, 1371, 1518, 1866, 1870, 1891, 1920], "map": [3, 15, 20, 27, 32, 41, 47, 49, 55, 56, 58, 59, 63, 68, 69, 71, 681, 732, 789, 790, 794, 796, 811, 812, 814, 836, 837, 851, 852, 853, 854, 855, 861, 882, 931, 1126, 1137, 1149, 1158, 1203, 1206, 1267, 1268, 1359, 1360, 1361, 1367, 1368, 1369, 1373, 1375, 1424, 1425, 1426, 1429, 1438, 1513, 1514, 1515, 1520, 1615, 1631, 1714, 1716, 1846, 1847, 1856, 1870, 1883, 1885, 1889, 1893, 1894, 1895, 1901, 1906, 1911, 1914, 1917, 1919, 1920, 1921, 1925, 1930, 1934], "agnost": [3, 58, 1527, 1883], "reliabl": [3, 21], "warrant": 3, "except": [3, 5, 7, 9, 12, 15, 27, 32, 41, 42, 46, 47, 49, 50, 51, 55, 59, 63, 70, 71, 580, 584, 585, 614, 681, 690, 692, 693, 696, 757, 882, 905, 906, 937, 944, 948, 974, 984, 986, 1014, 1027, 1061, 1067, 1069, 1115, 1116, 1135, 1137, 1159, 1203, 1211, 1213, 1217, 1251, 1267, 1283, 1293, 1295, 1296, 1298, 1301, 1323, 1326, 1328, 1380, 1398, 1443, 1480, 1564, 1608, 1616, 1641, 1648, 1649, 1653, 1655, 1711, 1735, 1751, 1788, 1806, 1808, 1809, 1813, 1835, 1851, 1852, 1856, 1857, 1864, 1866, 1868, 1869, 1870, 1871, 1876, 1881, 1884, 1892, 1894, 1900, 1903, 1906, 1911, 1912, 1919, 1921, 1923, 1925, 1926, 1930], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 16, 20, 323, 328, 541, 611, 983, 1795, 1845, 1867, 1893, 1909, 1923], "finit": [4, 47, 905, 906, 1185, 1186, 1231, 1232, 1242, 1243, 1259, 1285, 1318, 1322, 1344, 1814, 1894, 1897, 1930], "natur": [4, 7, 8, 30, 41, 47, 63, 905, 906, 1224, 1229, 1255, 1269, 1271, 1276, 1336, 1475, 1577, 1897, 1923, 1924], "against": [4, 24, 32, 41, 49, 58, 791, 862, 905, 906, 1097, 1098, 1099, 1103, 1104, 1106, 1138, 1187, 1196, 1211, 1212, 1428, 1434, 1665, 1863, 1869, 1911, 1933], "cprofil": 4, "mode": [4, 8, 13, 14, 15, 16, 17, 18, 19, 21, 28, 38, 39, 41, 43, 47, 58, 60, 68, 69, 71, 222, 223, 743, 744, 769, 770, 771, 776, 782, 783, 784, 812, 814, 820, 823, 856, 857, 886, 888, 891, 892, 893, 898, 899, 900, 901, 905, 917, 950, 970, 1003, 1043, 1044, 1073, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1126, 1129, 1130, 1131, 1132, 1135, 1136, 1144, 1171, 1179, 1180, 1194, 1196, 1197, 1200, 1211, 1213, 1254, 1267, 1297, 1309, 1310, 1346, 1347, 1348, 1356, 1357, 1358, 1372, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1444, 1467, 1480, 1481, 1502, 1503, 1504, 1519, 1527, 1538, 1565, 1596, 1597, 1598, 1609, 1616, 1620, 1653, 1689, 1697, 1713, 1756, 1758, 1759, 1849, 1864, 1867, 1877, 1882, 1887, 1892, 1893, 1895, 1896, 1900, 1909, 1913, 1915, 1916, 1917, 1919, 1931, 1934], "correct": [4, 6, 7, 27, 39, 41, 42, 43, 47, 58, 206, 207, 210, 222, 552, 577, 600, 601, 612, 894, 906, 968, 1090, 1092, 1100, 1101, 1102, 1170, 1194, 1197, 1211, 1212, 1231, 1365, 1382, 1394, 1599, 1608, 1641, 1761, 1808, 1809, 1851, 1852, 1865, 1866, 1867, 1868, 1882, 1883, 1892, 1894, 1897, 1925], "launch": [4, 11, 19, 32, 38, 44, 49, 50, 51, 56, 57, 58, 61, 70, 973, 1608, 1864, 1889, 1891, 1892, 1893, 1919], "spent": [4, 16, 28, 41, 915, 1695, 1891, 1900], "appear": [4, 26, 39, 41, 47, 71, 851, 1015, 1069, 1110, 1111, 1137, 1267, 1301, 1303, 1604, 1609, 1735, 1764, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1856, 1866, 1869, 1882, 1883, 1894, 1895, 1900, 1907, 1911], "extrem": [4, 15, 20, 1608, 1889, 1907], "expens": [4, 14, 16, 22, 24, 28, 38, 47, 63, 1615, 1892, 1897, 1899, 1913, 1919, 1929], "bound": [4, 14, 15, 28, 33, 39, 63, 480, 792, 934, 945, 1083, 1084, 1196, 1341, 1342, 1343, 1421, 1422, 1423, 1428, 1446, 1527, 1697, 1728, 1749, 1869, 1870, 1887, 1889, 1911, 1914, 1924], "greater": [4, 41, 58, 292, 614, 677, 939, 940, 945, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1140, 1152, 1250, 1313, 1344, 1476, 1527, 1538, 1564, 1577, 1596, 1616, 1649, 1849, 1867, 1889, 1892, 1904, 1909, 1924], "spend": [4, 7, 22, 1268], "sens": [4, 17, 47, 58, 71, 1631, 1846, 1847, 1869, 1889], "respons": [4, 7, 9, 15, 41, 43, 45, 47, 49, 55, 60, 63, 70, 973, 1416, 1545, 1608, 1889, 1892, 1894, 1895, 1900, 1919], "Of": [4, 1654, 1863, 1893, 1894], "cours": [4, 16, 20, 71, 1863, 1893, 1894, 1919], "realiti": 4, "complic": [4, 15, 39, 71, 790, 1873, 1883, 1890, 1911, 1919, 1921], "depend": [4, 5, 11, 12, 14, 15, 16, 19, 20, 23, 26, 27, 32, 38, 41, 45, 47, 49, 58, 59, 60, 63, 71, 315, 782, 875, 955, 981, 1028, 1032, 1046, 1047, 1090, 1092, 1100, 1101, 1102, 1127, 1131, 1136, 1207, 1211, 1231, 1232, 1259, 1285, 1290, 1344, 1345, 1362, 1364, 1372, 1375, 1388, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1479, 1480, 1492, 1499, 1500, 1510, 1519, 1527, 1539, 1562, 1570, 1577, 1596, 1599, 1608, 1620, 1621, 1627, 1662, 1689, 1701, 1703, 1720, 1736, 1796, 1797, 1798, 1800, 1801, 1814, 1837, 1859, 1863, 1866, 1868, 1869, 1876, 1881, 1889, 1891, 1892, 1894, 1895, 1897, 1900, 1907, 1913, 1914, 1919, 1923, 1929, 1930], "could": [4, 5, 7, 8, 12, 16, 17, 23, 28, 38, 41, 47, 49, 58, 63, 68, 70, 71, 580, 581, 582, 584, 585, 952, 1008, 1090, 1092, 1100, 1101, 1102, 1193, 1226, 1267, 1285, 1309, 1310, 1688, 1791, 1846, 1868, 1869, 1876, 1881, 1889, 1892, 1893, 1906, 1907, 1911, 1914, 1915, 1919, 1920, 1921, 1923, 1927, 1928], "account": [4, 11, 56, 71, 1608, 1887, 1891, 1923], "heavili": [4, 1673, 1891, 1894, 1911], "similarli": [4, 7, 11, 15, 19, 70, 71, 757, 787, 791, 855, 941, 1089, 1196, 1251, 1428, 1475, 1604, 1605, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1838, 1839, 1840, 1841, 1868, 1889, 1894, 1896, 1897, 1903, 1923], "platform": [4, 8, 9, 32, 41, 50, 51, 55, 1242, 1243, 1254, 1713, 1814, 1877, 1898, 1903, 1904, 1914], "startup": 4, "slower": [4, 15, 32, 41, 873, 899, 1109, 1110, 1111, 1225, 1232, 1546, 1615, 1894, 1904, 1910, 1924], "rerun": [5, 41, 1892], "segment": [5, 16, 23, 1026, 1122, 1459, 1911], "persist": [5, 11, 15, 22, 36, 43, 63, 757, 812, 813, 814, 1196, 1380, 1398, 1428, 1443, 1892, 1900, 1905, 1906], "rng": [5, 38, 1001, 1040, 1750, 1892, 1904, 1918], "advanc": [5, 16, 33, 38, 39, 49, 1471, 1473, 1475, 1654, 1663, 1873, 1876, 1883, 1892, 1898, 1902, 1927, 1928], "juggl": 5, "dropout": [5, 46, 71, 731, 732, 757, 1196, 1340, 1367, 1368, 1369, 1373, 1380, 1398, 1428, 1434, 1443, 1444, 1471, 1473, 1475, 1493, 1513, 1514, 1515, 1520, 1577, 1864, 1867, 1877, 1883, 1884, 1889, 1892, 1909, 1916], "moder": 5, "hit": [5, 8, 11, 16, 22, 28, 32, 1608, 1863, 1892], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1864], "omit": [5, 32, 41, 59, 1103, 1104, 1106, 1382, 1442, 1906, 1907, 1919, 1930], "exclud": [5, 9, 13, 39, 58, 71, 956, 1158, 1372, 1519, 1567, 1665, 1838, 1839, 1840, 1841, 1898, 1911, 1920], "_infer_device_typ": 5, "remain": [5, 8, 47, 58, 71, 1303, 1371, 1372, 1518, 1519, 1599, 1608, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1714, 1736, 1879, 1881, 1888, 1896, 1900], "consequ": [5, 68, 1259, 1398, 1814, 1869, 1889, 1892, 1904], "random": [5, 16, 28, 47, 49, 58, 59, 64, 71, 89, 155, 757, 889, 920, 1001, 1002, 1007, 1016, 1017, 1036, 1037, 1040, 1041, 1130, 1137, 1148, 1172, 1268, 1288, 1307, 1308, 1312, 1314, 1340, 1351, 1373, 1380, 1398, 1446, 1520, 1570, 1575, 1599, 1616, 1622, 1628, 1629, 1636, 1637, 1656, 1703, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1750, 1763, 1815, 1856, 1863, 1864, 1867, 1875, 1887, 1895, 1897, 1903, 1907, 1909, 1928], "gradient": [5, 16, 30, 38, 39, 41, 45, 47, 63, 64, 67, 151, 222, 223, 290, 335, 486, 493, 511, 692, 693, 877, 886, 888, 890, 892, 893, 894, 895, 896, 898, 899, 900, 901, 902, 903, 904, 905, 906, 910, 911, 921, 947, 1073, 1125, 1126, 1127, 1128, 1132, 1137, 1138, 1171, 1196, 1231, 1232, 1235, 1242, 1243, 1259, 1268, 1285, 1287, 1293, 1296, 1298, 1344, 1351, 1359, 1360, 1361, 1364, 1365, 1371, 1372, 1382, 1396, 1397, 1428, 1435, 1459, 1510, 1511, 1518, 1519, 1529, 1538, 1546, 1548, 1549, 1562, 1596, 1597, 1598, 1604, 1605, 1608, 1609, 1612, 1613, 1615, 1620, 1653, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1687, 1688, 1701, 1759, 1795, 1814, 1856, 1864, 1866, 1867, 1876, 1883, 1884, 1887, 1892, 1893, 1894, 1896, 1897, 1900, 1903, 1909, 1910, 1919, 1920, 1923], "among": [5, 15, 38, 39, 41, 45, 47, 58, 982, 983, 986, 1158, 1365, 1656, 1869], "detect": [5, 14, 16, 28, 32, 34, 35, 38, 41, 42, 49, 51, 63, 898, 899, 900, 901, 902, 903, 1126, 1200, 1472, 1474, 1608, 1849, 1864, 1881, 1884, 1892, 1897, 1903, 1907, 1911, 1919], "priorit": [5, 1129, 1130, 1132, 1670, 1671, 1923], "defaultdevicetyp": 5, "anticip": 5, "belong": [5, 20, 27, 41, 43, 45, 47, 55, 71, 934, 975, 1685, 1863, 1892, 1910, 1934], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "techniqu": [5, 20, 28, 71, 1366, 1622, 1835, 1885, 1900, 1910, 1912, 1914], "intermedi": [5, 14, 15, 32, 48, 68, 71, 931, 1120, 1126, 1133, 1285, 1372, 1471, 1473, 1475, 1519, 1866, 1869, 1892, 1894, 1895, 1896, 1903, 1933], "entir": [5, 7, 12, 13, 14, 15, 16, 20, 21, 28, 32, 38, 41, 49, 59, 71, 694, 905, 906, 1126, 1149, 1367, 1368, 1369, 1373, 1391, 1392, 1393, 1400, 1513, 1514, 1515, 1520, 1608, 1626, 1628, 1652, 1869, 1884, 1889, 1892, 1894, 1895, 1896, 1899, 1900, 1907, 1911, 1914, 1919, 1921, 1923], "graph": [5, 8, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 43, 47, 63, 83, 84, 140, 151, 222, 223, 677, 744, 789, 790, 812, 813, 814, 820, 823, 890, 896, 904, 950, 952, 970, 1005, 1010, 1015, 1126, 1196, 1199, 1200, 1205, 1207, 1211, 1608, 1663, 1665, 1670, 1671, 1864, 1869, 1875, 1877, 1885, 1888, 1893, 1894, 1897, 1900, 1901, 1907, 1911, 1915, 1916, 1917, 1919, 1920, 1921, 1923, 1928, 1933], "recomput": [5, 14, 896, 1480, 1538, 1652, 1910], "refer": [5, 12, 20, 21, 23, 28, 32, 38, 39, 41, 42, 43, 45, 47, 50, 53, 54, 58, 59, 63, 64, 70, 254, 731, 732, 753, 761, 789, 790, 791, 816, 817, 818, 821, 822, 823, 856, 870, 875, 890, 932, 1008, 1013, 1072, 1122, 1144, 1145, 1177, 1184, 1196, 1199, 1207, 1214, 1227, 1248, 1252, 1265, 1268, 1351, 1382, 1428, 1477, 1492, 1500, 1509, 1527, 1595, 1608, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1703, 1720, 1756, 1778, 1815, 1849, 1863, 1864, 1867, 1881, 1882, 1884, 1885, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1902, 1904, 1910, 1915, 1916, 1919, 1920, 1923, 1926, 1927, 1928, 1931], "potenti": [5, 8, 14, 16, 20, 41, 58, 60, 192, 209, 1205, 1241, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1608, 1849, 1868, 1876, 1881, 1889, 1892, 1911, 1923, 1927], "silent": [5, 19, 1016, 1017, 1036, 1037, 1170, 1211, 1428, 1612, 1613, 1892, 1903, 1907], "consider": [5, 7, 881, 1193, 1372, 1608, 1869, 1891], "limit": [5, 8, 9, 14, 15, 16, 19, 20, 24, 28, 38, 46, 63, 64, 69, 1039, 1126, 1209, 1313, 1351, 1371, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1577, 1608, 1631, 1762, 1864, 1869, 1873, 1881, 1883, 1884, 1889, 1892, 1893, 1900, 1903, 1904, 1905, 1911, 1914, 1917, 1919, 1920, 1930], "reentrant": [5, 1608], "stop": [5, 17, 47, 49, 58, 59, 60, 862, 1008, 1194, 1268, 1351, 1641, 1697, 1729, 1866, 1869, 1919], "soon": [5, 20, 28, 58, 63, 790, 1889, 1914, 1919, 1921], "set_checkpoint_early_stop": 5, "entireti": 5, "no_grad": [5, 858, 1073, 1127, 1131, 1136, 1171, 1196, 1371, 1428, 1434, 1475, 1609, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1887, 1889, 1900, 1931], "condit": [5, 14, 15, 36, 38, 68, 71, 614, 617, 621, 691, 757, 899, 905, 906, 1193, 1211, 1225, 1227, 1235, 1241, 1242, 1243, 1254, 1259, 1380, 1398, 1443, 1475, 1643, 1648, 1837, 1859, 1865, 1866, 1867, 1868, 1870, 1884, 1889, 1894, 1903, 1912, 1928], "unmet": 5, "particip": [5, 9, 14, 38, 41, 42, 45, 58, 59, 1608, 1920], "wherea": [5, 15, 1251, 1309, 1310, 1323, 1684, 1814, 1869, 1930], "know": [5, 7, 8, 11, 14, 15, 16, 20, 32, 42, 48, 71, 485, 894, 899, 1120, 1126, 1206, 1608, 1866, 1869, 1876, 1888, 1889, 1892, 1897, 1907, 1911, 1919, 1920, 1921, 1923], "lstm": [5, 760, 1399, 1867, 1892, 1907, 1909, 1914, 1916, 1917, 1928], "hidden": [5, 757, 1135, 1380, 1381, 1398, 1399, 1443, 1445, 1609, 1892, 1928], "correctli": [5, 19, 38, 41, 58, 63, 485, 1126, 1196, 1211, 1428, 1546, 1866, 1868, 1869, 1879, 1883, 1888, 1889, 1893, 1894, 1895, 1902, 1904, 1914, 1919], "entrant": 5, "futur": [5, 8, 9, 14, 16, 39, 41, 43, 49, 58, 59, 68, 71, 290, 321, 511, 515, 554, 677, 684, 790, 812, 813, 814, 823, 858, 896, 940, 941, 961, 962, 969, 970, 972, 973, 975, 1004, 1005, 1012, 1013, 1015, 1142, 1196, 1199, 1205, 1206, 1209, 1214, 1226, 1237, 1239, 1240, 1241, 1244, 1257, 1285, 1286, 1297, 1368, 1428, 1529, 1551, 1552, 1553, 1600, 1608, 1612, 1649, 1650, 1655, 1673, 1713, 1729, 1810, 1814, 1837, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1875, 1876, 1877, 1879, 1883, 1884, 1891, 1892, 1894, 1905, 1907, 1908, 1910, 1911, 1912, 1913, 1914, 1916, 1919, 1923, 1925, 1929, 1930, 1931, 1933], "sequenti": [5, 16, 28, 38, 45, 63, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 790, 1137, 1196, 1205, 1374, 1428, 1467, 1478, 1617, 1631, 1698, 1856, 1866, 1881, 1884, 1892, 1900, 1907, 1910, 1912, 1914, 1933], "func": [5, 41, 46, 66, 68, 71, 859, 889, 891, 895, 896, 897, 898, 899, 900, 901, 902, 903, 905, 906, 1171, 1199, 1211, 1212, 1527, 1650, 1856, 1864, 1869, 1888, 1919, 1921, 1934], "compris": [5, 59], "chunk": [5, 38, 41, 43, 63, 937, 986, 1131, 1365, 1608, 1802, 1866, 1867, 1882, 1909, 1910, 1912, 1919, 1927], "input_var": [5, 1365], "person": [6, 7, 9], "land": [6, 9, 10, 24], "six": [6, 1358], "commit": [6, 7, 9, 24, 32, 64, 1863, 1864, 1903, 1904], "repositori": [6, 9, 67, 71, 1863, 1894, 1902], "submit": [6, 9, 24, 972, 973, 975, 1892, 1904], "month": [6, 9], "qualifi": [6, 41, 46, 55, 71, 677, 1196, 1428, 1875, 1911], "pr": [6, 7, 14, 1703, 1815, 1933], "interest": [6, 7, 9, 13, 15, 17, 19, 21, 22, 1889, 1895, 1897, 1900], "merge_rul": 6, "vote": [6, 9], "decis": [6, 14, 43, 49, 58, 60, 71, 1211, 1876, 1888], "criteria": [6, 9, 1268], "approv": [6, 9], "Not": [6, 20, 59, 1326, 1475, 1866, 1868, 1869, 1870, 1894, 1909, 1914, 1919], "busi": [6, 9, 22], "dai": [6, 7, 15, 24], "contributor": [6, 7, 8, 9], "seen": [6, 18, 20, 35, 47, 71, 222, 937, 950, 1297, 1359, 1360, 1361, 1459, 1551, 1552, 1553, 1697, 1866, 1876, 1889, 1892, 1907, 1923], "thumb": [6, 41], "acceler": [7, 11, 16, 39, 1346, 1347, 1348, 1467, 1667, 1898], "deep": [7, 9, 14, 16, 25, 28, 71, 1346, 1347, 1348, 1370, 1467, 1683, 1864, 1887, 1900, 1914], "neural": [7, 8, 14, 33, 71, 1340, 1351, 1366, 1373, 1382, 1394, 1427, 1428, 1435, 1440, 1441, 1455, 1457, 1471, 1473, 1475, 1557, 1580, 1618, 1681, 1689, 1695, 1866, 1868, 1869, 1887, 1892, 1903, 1907], "tape": [7, 11], "system": [7, 8, 14, 32, 33, 34, 38, 59, 68, 71, 943, 957, 1149, 1203, 1227, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1256, 1257, 1258, 1262, 1267, 1286, 1313, 1471, 1473, 1475, 1608, 1618, 1620, 1758, 1837, 1870, 1875, 1879, 1889, 1891, 1892, 1899, 1900, 1906, 1911, 1919], "organ": [7, 16, 20, 1893, 1899, 1911], "govern": [7, 8, 1864, 1914], "technic": [7, 9, 14, 21, 58, 71, 1196, 1428, 1604, 1605, 1864, 1889, 1896, 1911], "md": [7, 71, 789, 1911], "healthi": [7, 49, 58], "team": [7, 41, 64, 1905, 1912], "commun": [7, 8, 9, 16, 19, 21, 42, 43, 45, 49, 58, 60, 63, 1608, 1889, 1893, 1919, 1920], "project": [7, 27, 43, 1297, 1398, 1434, 1620, 1703, 1863, 1898], "ve": [7, 15, 16, 20, 21, 66, 67, 68, 71, 1200, 1876, 1881, 1889, 1895, 1920, 1928], "come": [7, 8, 9, 20, 23, 38, 46, 47, 48, 55, 58, 64, 68, 1069, 1120, 1126, 1267, 1367, 1368, 1369, 1373, 1394, 1664, 1873, 1877, 1893, 1895, 1899, 1911, 1919, 1921, 1923], "peopl": [7, 19, 22, 1889, 1914], "scratch": [7, 28, 1889], "itch": 7, "acquaint": 7, "tip": [7, 16, 1892], "tracker": [7, 1268], "confirm": [7, 16, 23, 1863, 1866, 1894, 1907, 1919, 1921], "tend": [7, 900, 1849], "bootcamp": 7, "1hr": 7, "although": [7, 8, 27, 46, 47, 68, 71, 1359, 1360, 1361, 1428, 1436, 1608, 1864, 1869, 1888, 1894, 1903, 1912, 1914], "join": [7, 39, 41, 45, 58, 59, 70, 71, 1608, 1863, 1864, 1870, 1881, 1889, 1893, 1902, 1909, 1929], "u": [7, 8, 14, 16, 20, 22, 28, 64, 69, 71, 757, 898, 941, 942, 943, 1232, 1234, 1238, 1242, 1243, 1259, 1285, 1287, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1380, 1381, 1398, 1399, 1413, 1415, 1443, 1445, 1446, 1467, 1478, 1620, 1703, 1814, 1815, 1865, 1866, 1867, 1876, 1883, 1887, 1889, 1892, 1893, 1894, 1895, 1900, 1911, 1913, 1923, 1927, 1928], "dev": [7, 10, 25, 28, 50, 55], "happi": 7, "research": [7, 8, 9, 1608, 1863, 1889, 1897, 1905], "partner": 7, "speed": [7, 8, 20, 21, 32, 45, 981, 1069, 1125, 1187, 1200, 1205, 1259, 1336, 1434, 1814, 1889, 1891, 1892, 1893, 1894, 1896, 1898, 1903, 1914, 1919], "reach": [7, 8, 9, 13, 38, 39, 41, 42, 49, 58, 64, 1268, 1608, 1686, 1689, 1692, 1693, 1889, 1902, 1912, 1914, 1915, 1919], "design": [7, 9, 14, 16, 19, 25, 28, 38, 47, 55, 58, 64, 67, 68, 69, 905, 906, 1196, 1215, 1428, 1662, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1825, 1863, 1864, 1865, 1879, 1892, 1894, 1898, 1900, 1911], "comment": [7, 22, 71, 1753, 1869, 1870, 1894, 1926, 1928], "crack": 7, "usual": [7, 15, 22, 32, 38, 39, 43, 58, 59, 71, 85, 480, 828, 829, 830, 831, 838, 890, 898, 900, 904, 1137, 1367, 1368, 1369, 1373, 1388, 1391, 1392, 1393, 1394, 1599, 1608, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1856, 1866, 1869, 1884, 1888, 1889, 1891, 1892, 1896, 1899, 1910, 1915, 1917, 1919, 1928, 1934], "idea": [7, 16, 28, 64, 1069, 1336, 1608, 1892, 1899, 1907, 1920], "rfc": [7, 1889, 1914, 1920], "big": [7, 15, 22, 1670, 1671, 1674, 1680, 1681, 1796, 1797, 1798, 1799, 1800, 1801, 1910, 1914], "post": [7, 8, 15, 25, 28, 42, 43, 45, 63, 853, 854, 858, 1196, 1428, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1864, 1873, 1889, 1893, 1896, 1906], "standard": [7, 32, 35, 39, 47, 51, 52, 56, 68, 71, 85, 352, 377, 586, 1089, 1340, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1394, 1400, 1467, 1473, 1475, 1656, 1703, 1726, 1772, 1777, 1808, 1809, 1868, 1870, 1884, 1887, 1891, 1892, 1902, 1903, 1907, 1908, 1911, 1924], "lot": [7, 14, 15, 19, 20, 21, 22, 32, 38, 1881, 1889, 1892, 1897, 1902, 1911, 1912, 1918, 1920, 1928], "boil": 7, "mostli": [7, 47, 1194, 1608, 1892, 1923, 1934], "evid": 7, "peer": [7, 41, 45, 58, 63, 979, 1608, 1892, 1919], "paper": [7, 9, 39, 47, 757, 1336, 1340, 1346, 1347, 1348, 1350, 1359, 1360, 1361, 1366, 1367, 1368, 1369, 1370, 1373, 1376, 1377, 1380, 1383, 1386, 1391, 1392, 1393, 1400, 1434, 1440, 1441, 1446, 1455, 1459, 1467, 1471, 1473, 1475, 1476, 1477, 1522, 1523, 1532, 1670, 1671, 1682, 1689, 1695, 1897, 1912], "framework": [7, 8, 9, 47, 55, 64, 70, 757, 977, 1305, 1380, 1608, 1615, 1683, 1762, 1864, 1901, 1912, 1914, 1920, 1921], "bit": [7, 19, 20, 22, 71, 89, 330, 457, 758, 760, 762, 816, 817, 818, 819, 822, 824, 855, 923, 926, 961, 962, 1122, 1176, 1737, 1738, 1750, 1779, 1892, 1900, 1903, 1906, 1914, 1917, 1918, 1923, 1926, 1929, 1935], "accept": [7, 9, 28, 38, 41, 43, 46, 64, 65, 67, 69, 151, 511, 799, 886, 887, 888, 889, 890, 895, 904, 940, 1012, 1015, 1121, 1137, 1158, 1196, 1200, 1364, 1428, 1435, 1456, 1475, 1627, 1641, 1642, 1648, 1666, 1754, 1791, 1805, 1856, 1869, 1883, 1892, 1894, 1895, 1907, 1910, 1919, 1926, 1928], "overwhelm": [7, 16, 28, 1919], "newli": [7, 20, 63, 71, 1083, 1084, 1371, 1372, 1715, 1716, 1873], "publish": [7, 9, 50, 55, 58, 1268, 1864], "ground": [7, 9, 1364, 1510, 1928], "break": [7, 11, 13, 14, 17, 18, 20, 22, 23, 47, 66, 71, 677, 890, 950, 952, 1196, 1241, 1428, 1742, 1762, 1864, 1870, 1875, 1893, 1910], "becom": [7, 8, 9, 16, 20, 28, 38, 41, 47, 71, 290, 757, 873, 1149, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1380, 1398, 1413, 1433, 1443, 1456, 1510, 1527, 1599, 1687, 1787, 1835, 1876, 1877, 1889, 1893, 1907, 1911, 1913, 1919], "refactor": [7, 17, 71, 1906, 1914], "coordin": [7, 16, 28, 41, 43, 47, 49, 580, 583, 881, 1149, 1158, 1297, 1707, 1799, 1839, 1841, 1889, 1923, 1928], "pace": 7, "branch": [7, 14, 24, 71, 1863, 1868, 1869, 1892], "fast": [7, 8, 15, 19, 22, 38, 41, 905, 1370, 1391, 1392, 1393, 1459, 1475, 1577, 1695, 1701, 1720, 1742, 1757, 1864, 1891, 1892, 1894, 1898, 1910, 1919, 1923, 1926, 1927], "definit": [7, 8, 20, 38, 41, 42, 47, 54, 71, 941, 942, 943, 968, 1012, 1117, 1216, 1225, 1226, 1268, 1394, 1539, 1584, 1655, 1733, 1835, 1863, 1866, 1868, 1870, 1888, 1889, 1894, 1897, 1911, 1914, 1928, 1930], "fundament": [7, 15, 68, 1868, 1900, 1919, 1923], "cut": [7, 16], "guidanc": [7, 9, 14, 33, 65, 1912], "stage": [7, 28, 35, 39, 45, 55, 63, 70, 1864, 1876, 1884, 1912, 1921], "piec": [7, 20, 1875, 1884, 1920], "advic": 7, "readi": [7, 11, 21, 32, 70, 858, 859, 919, 928, 1153, 1154, 1608, 1866, 1893, 1919, 1920], "draft": 7, "convert": [7, 20, 27, 28, 38, 41, 46, 47, 48, 63, 67, 71, 83, 151, 577, 581, 582, 583, 584, 585, 732, 785, 786, 787, 789, 790, 791, 812, 813, 814, 835, 836, 851, 854, 855, 856, 876, 877, 936, 949, 1053, 1089, 1120, 1196, 1265, 1428, 1438, 1439, 1467, 1474, 1599, 1610, 1611, 1614, 1651, 1662, 1664, 1665, 1684, 1715, 1716, 1721, 1796, 1797, 1798, 1799, 1800, 1801, 1866, 1867, 1868, 1869, 1884, 1894, 1898, 1907, 1908, 1914, 1917, 1923, 1928, 1930, 1933], "press": [7, 71], "button": [7, 24], "prepend": [7, 32, 38, 41, 45, 71, 230, 1061, 1196, 1290, 1428, 1831, 1867, 1890], "titl": [7, 1909, 1913], "wip": 7, "progress": [7, 41, 45, 49, 59, 61, 972, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1850, 1863, 1878], "ci": [7, 24, 1864], "folk": 7, "who": [7, 8, 9, 20, 21, 30, 58, 1911], "regularli": 7, "queue": [7, 49, 60, 1881, 1928], "everyth": [7, 14, 16, 20, 22, 28, 38, 47, 67, 1866, 1881, 1911], "happen": [7, 9, 11, 20, 21, 41, 43, 45, 47, 49, 51, 58, 63, 68, 71, 85, 604, 788, 811, 1126, 1467, 1608, 1615, 1686, 1692, 1693, 1699, 1814, 1864, 1879, 1881, 1889, 1892, 1893, 1894, 1895, 1896, 1901, 1902, 1906, 1907, 1914, 1919, 1927], "subsystem": [7, 30, 64, 69, 1864, 1894], "patch": [7, 17, 65, 1375, 1479], "feel": [7, 1884, 1907, 1923], "ll": [7, 12, 15, 22, 68, 71, 757, 817, 818, 858, 859, 941, 1015, 1225, 1380, 1381, 1398, 1399, 1876, 1889, 1892, 1894, 1895, 1902, 1907, 1914, 1920], "round": [7, 38, 41, 506, 662, 663, 796, 799, 817, 862, 964, 966, 1026, 1064, 1090, 1091, 1092, 1096, 1100, 1101, 1102, 1117, 1241, 1254, 1480, 1538, 1713, 1714, 1733, 1782, 1865, 1867, 1869, 1882, 1892, 1909, 1914, 1917, 1923, 1924], "trip": [7, 71, 1090, 1091, 1092, 1096, 1100, 1101, 1102], "noth": [7, 32, 49, 71, 677, 1006, 1620, 1670, 1671, 1698, 1866, 1868, 1921], "accompani": [7, 84], "solut": [7, 8, 68, 1240, 1241, 1245, 1253, 1256, 1258, 1262, 1344, 1608, 1837, 1866, 1867, 1887, 1888, 1896, 1902], "think": [7, 9, 15, 16, 17, 71, 1684, 1866, 1868, 1889, 1910, 1911, 1921], "confid": [7, 17, 1928], "ahead": [7, 14, 16, 1864, 1914], "search": [7, 12, 15, 24, 28, 30, 39, 816, 934, 1386, 1532, 1608, 1665, 1720, 1749, 1866, 1882, 1883, 1907, 1911, 1923], "repo": [7, 1689, 1863, 1906], "unabl": [7, 26, 28, 68, 83, 1907, 1910], "similar": [7, 9, 14, 15, 16, 20, 23, 28, 38, 41, 47, 55, 63, 68, 70, 71, 491, 513, 709, 710, 711, 712, 713, 714, 717, 727, 728, 729, 730, 742, 743, 753, 761, 799, 874, 889, 931, 936, 949, 1115, 1116, 1196, 1362, 1363, 1375, 1388, 1391, 1392, 1393, 1428, 1476, 1509, 1641, 1655, 1656, 1684, 1707, 1735, 1742, 1791, 1825, 1831, 1847, 1868, 1869, 1881, 1882, 1884, 1889, 1891, 1892, 1894, 1895, 1897, 1903, 1907, 1911, 1912, 1914, 1919, 1920, 1923, 1924, 1929, 1935], "reproduc": [7, 16, 28, 38, 68, 313, 321, 513, 515, 921, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1424, 1425, 1426, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1519, 1527, 1538, 1565, 1577, 1596, 1597, 1598, 1599, 1849, 1863, 1864, 1910, 1911], "problemat": [7, 38, 71, 1866, 1903, 1915], "insight": [7, 35], "individu": [7, 9, 11, 19, 24, 32, 38, 39, 41, 43, 45, 63, 71, 84, 242, 677, 789, 835, 836, 941, 1035, 1087, 1105, 1196, 1351, 1428, 1467, 1608, 1662, 1864, 1869, 1882, 1888, 1889, 1892, 1894, 1899, 1903, 1904, 1907, 1917, 1919, 1930], "intent": [7, 23, 56, 58, 68, 1754, 1876, 1911], "lock": [7, 38, 41, 45, 47, 1889, 1892, 1902, 1911, 1920], "strike": 7, "convers": [7, 15, 27, 457, 577, 580, 790, 935, 1181, 1641, 1864, 1870, 1898, 1907, 1914, 1915, 1923], "medium": [7, 63, 1757], "prioriti": [7, 9, 10, 41, 677, 851, 975, 1868], "entranc": [7, 1892], "great": [7, 11, 14, 1889, 1897], "deal": [7, 8, 14, 15, 20, 22, 38, 49, 60, 1830, 1881, 1896, 1919], "welcom": [7, 1884, 1910, 1923], "aim": [7, 1895, 1923], "rare": [7, 14, 17, 1888, 1907, 1934], "typo": 7, "send": [7, 15, 19, 38, 41, 49, 60, 1008, 1599, 1608, 1881, 1893, 1902, 1906, 1909, 1913, 1919, 1920, 1921, 1931, 1933], "forum": [7, 9, 1896, 1902], "share": [7, 10, 11, 17, 32, 38, 42, 45, 47, 48, 58, 59, 63, 68, 222, 311, 340, 457, 482, 518, 521, 614, 856, 876, 877, 894, 905, 906, 970, 972, 1004, 1008, 1120, 1121, 1122, 1166, 1243, 1327, 1328, 1365, 1608, 1618, 1656, 1731, 1745, 1805, 1828, 1834, 1848, 1867, 1888, 1889, 1891, 1902, 1905, 1906, 1907, 1919, 1923, 1925, 1927, 1932], "resolv": [7, 8, 9, 14, 43, 47, 71, 83, 84, 1196, 1359, 1360, 1361, 1375, 1425, 1428, 1868, 1869, 1870, 1906, 1911, 1925, 1934], "challeng": [7, 16, 41, 1920], "feedback": [7, 28, 35, 39, 63, 64, 1608, 1864], "direct": [7, 9, 20, 27, 30, 41, 757, 789, 1110, 1111, 1196, 1380, 1398, 1428, 1443, 1652, 1682, 1703, 1720, 1741, 1889, 1892, 1894, 1900, 1919], "yourself": [7, 16, 66, 970, 1894, 1900, 1902, 1934], "problem": [7, 14, 16, 21, 28, 38, 41, 58, 68, 1069, 1211, 1241, 1253, 1268, 1364, 1435, 1492, 1753, 1881, 1889, 1892, 1896, 1897, 1902, 1906, 1912, 1914, 1915, 1921, 1926], "area": [7, 9, 1538, 1900, 1914, 1924], "appreci": 7, "strive": 7, "respond": [7, 41], "quickli": [7, 8, 19, 39, 58], "ey": [7, 47, 192, 209, 942, 1137, 1216, 1225, 1236, 1247, 1250, 1253, 1254, 1261, 1262, 1615, 1713, 1792, 1856, 1867, 1871, 1894, 1909], "everyon": [7, 49, 58], "touch": [7, 56, 71], "versu": [7, 1432], "write": [7, 8, 9, 14, 16, 19, 21, 22, 28, 35, 38, 41, 43, 46, 49, 51, 55, 56, 57, 58, 63, 68, 69, 83, 84, 254, 511, 694, 932, 952, 1121, 1137, 1173, 1206, 1226, 1237, 1238, 1239, 1243, 1244, 1257, 1595, 1663, 1745, 1837, 1849, 1856, 1864, 1868, 1879, 1883, 1892, 1895, 1896, 1897, 1910, 1911, 1923, 1928], "blog": [7, 8, 1873, 1893, 1914], "around": [7, 9, 11, 20, 26, 28, 30, 41, 47, 67, 68, 70, 71, 151, 621, 890, 904, 970, 972, 973, 975, 1044, 1115, 1116, 1126, 1196, 1608, 1742, 1866, 1881, 1889, 1892, 1907, 1919], "internet": 7, "grow": [7, 8, 19, 71, 1923], "market": [7, 9], "benefit": [7, 8, 28, 41, 71, 844, 1697, 1881, 1892, 1914, 1923], "opinion": [7, 8, 1923], "isn": [7, 15, 38, 71, 457, 1193, 1889, 1892, 1894, 1919, 1930], "categor": [7, 27, 51, 1529, 1864, 1870, 1915, 1919], "aspect": [7, 41, 71, 1894, 1900], "seem": [7, 1907], "unusu": [7, 15], "claim": [7, 1695, 1897], "wast": [7, 1892], "someon": [7, 9, 1194, 1883], "too": [7, 9, 14, 15, 21, 28, 32, 39, 43, 58, 63, 68, 71, 1026, 1125, 1241, 1259, 1324, 1351, 1364, 1428, 1511, 1609, 1650, 1869, 1891, 1896, 1897, 1902, 1903, 1904, 1906, 1908, 1911, 1912, 1921, 1923], "advisori": 7, "fashion": [7, 38, 41, 60, 513, 1273, 1631, 1866], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 28], "wrote": [7, 8], "implicitli": [7, 41, 51, 63, 71, 1052, 1141, 1149, 1211, 1212, 1267, 1341, 1342, 1343, 1421, 1422, 1423, 1754, 1835, 1866, 1868, 1869, 1889, 1898], "lifetim": [7, 15, 1892, 1919], "immedi": [7, 8, 9, 14, 15, 58, 59, 63, 70, 1196, 1199, 1428, 1869, 1900, 1905, 1910, 1919, 1921], "sai": [7, 11, 14, 20, 22, 27, 71, 494, 1129, 1130, 1131, 1196, 1428, 1866, 1888, 1889, 1896, 1911, 1920, 1921, 1923], "bugfix": 7, "Or": [7, 20, 49, 71, 945, 1898, 1901, 1907, 1923], "motiv": [7, 8, 16, 28, 71, 732, 1900, 1920], "ye": [7, 1907, 1910, 1923], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1366, 1608], "ok": [7, 18, 51, 56, 67, 950, 1201, 1921], "sometim": [7, 14, 15, 22, 71, 901, 1026, 1211, 1375, 1479, 1505, 1506, 1507, 1620, 1864, 1869, 1881, 1889, 1892, 1895, 1896, 1900, 1902, 1911, 1926, 1929, 1934], "obvious": [7, 15, 19], "broken": [7, 14, 38, 1026, 1907, 1911], "contrari": [7, 1891], "accident": 7, "put": [7, 9, 15, 17, 26, 38, 41, 49, 67, 70, 71, 319, 1089, 1267, 1383, 1689, 1863, 1867, 1881, 1892, 1902, 1909, 1911, 1920, 1921], "difficulti": [7, 1887], "nonlinearli": 7, "sign": [7, 47, 341, 526, 881, 963, 1057, 1105, 1117, 1122, 1229, 1254, 1255, 1276, 1420, 1682, 1733, 1765, 1779, 1865, 1867, 1882, 1909, 1917, 1923, 1926, 1929, 1930], "split": [7, 38, 41, 71, 614, 769, 770, 771, 856, 858, 859, 937, 944, 1026, 1067, 1159, 1365, 1379, 1380, 1398, 1434, 1443, 1502, 1503, 1504, 1505, 1506, 1507, 1526, 1829, 1857, 1866, 1867, 1882, 1892, 1909, 1911, 1912, 1914, 1919, 1923, 1927], "shippabl": 7, "complet": [7, 17, 20, 24, 26, 32, 38, 41, 43, 49, 50, 56, 58, 60, 68, 70, 485, 677, 858, 952, 955, 972, 973, 975, 1045, 1125, 1126, 1199, 1207, 1209, 1214, 1226, 1254, 1309, 1310, 1315, 1492, 1608, 1617, 1650, 1713, 1864, 1868, 1869, 1870, 1875, 1881, 1888, 1889, 1892, 1895, 1898, 1904, 1911, 1912, 1919, 1920], "subtl": [7, 15, 16, 28, 1391, 1392, 1393, 1894], "nuanc": [7, 20, 21], "extra": [7, 15, 20, 22, 32, 38, 39, 41, 45, 47, 63, 71, 1069, 1126, 1137, 1196, 1203, 1206, 1241, 1267, 1428, 1435, 1615, 1810, 1856, 1868, 1883, 1889, 1891, 1893, 1894, 1896, 1899, 1911, 1913, 1923, 1930, 1931], "understand": [7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 28, 41, 43, 49, 50, 1126, 1253, 1873, 1887, 1889, 1892, 1898, 1905, 1913, 1928], "hack": 7, "answer": [7, 10, 15, 71, 821, 1345, 1633], "regress": [7, 11, 23, 1344, 1904], "scrutini": 7, "undertak": 7, "rest": [7, 17, 20, 22, 38, 39, 59, 71, 790, 811, 1122, 1261, 1262, 1829, 1883, 1900, 1904, 1911, 1912, 1914, 1919], "chanc": [7, 15, 22, 43, 47], "unrel": [7, 1135, 1888, 1894, 1911], "aid": [7, 28, 71, 1889], "troubleshoot": [7, 41, 1864], "mayb": [7, 15, 1133], "bracnh": 7, "rebas": 7, "latest": [7, 41, 45, 47, 1627, 1863, 1898, 1907], "statu": [7, 9, 49, 1285, 1864, 1870, 1881, 1914], "hud": 7, "risk": [7, 8, 63, 1617, 1620], "anyth": [7, 14, 48, 51, 70, 820, 823, 1207, 1684, 1866, 1873, 1884, 1900, 1911], "configur": [7, 14, 16, 18, 24, 28, 31, 38, 39, 41, 49, 50, 55, 58, 59, 60, 63, 785, 786, 789, 790, 794, 811, 812, 813, 814, 820, 823, 835, 836, 837, 840, 842, 845, 855, 856, 857, 858, 859, 950, 1026, 1608, 1641, 1758, 1849, 1864, 1875, 1879, 1892, 1893, 1904, 1906, 1911, 1917, 1919, 1928, 1930], "riski": 7, "had": [7, 14, 19, 23, 71, 1211, 1599, 1831, 1889, 1895], "beforehand": [7, 16, 70], "hei": 7, "my": [7, 38, 1365, 1899, 1907, 1914], "member": [7, 9, 38, 41, 49, 58, 59, 71, 1196, 1382, 1428, 1524, 1866, 1868, 1869, 1879, 1896, 1913, 1919, 1930, 1931], "sphinx": 7, "folder": [7, 9, 19, 28, 32, 38, 71, 1665, 1863, 1928], "tree": [7, 18, 51, 67, 950, 1428, 1471, 1665, 1864, 1907, 1911, 1913, 1921], "master": [7, 18, 41, 61, 789, 950, 1126, 1471, 1863, 1919], "doxygen": 7, "special": [7, 13, 14, 15, 20, 23, 30, 51, 60, 68, 71, 738, 739, 740, 820, 823, 905, 1062, 1076, 1077, 1078, 1080, 1081, 1090, 1092, 1163, 1164, 1165, 1209, 1267, 1281, 1321, 1365, 1475, 1609, 1610, 1611, 1654, 1684, 1708, 1766, 1777, 1781, 1860, 1864, 1870, 1875, 1883, 1892, 1894, 1897, 1899, 1907, 1911, 1914, 1927, 1928], "server": [7, 38, 41, 59, 1200, 1892, 1911, 1914, 1919], "cppdoc": [7, 33], "cpp": [7, 14, 32, 41, 1318, 1893], "accomplish": [7, 16, 43, 1900], "holist": 7, "concept": [7, 17, 68, 71, 1873, 1895, 1900, 1926], "galleri": 7, "restructur": [7, 1911], "text": [7, 19, 38, 47, 72, 77, 78, 79, 80, 81, 82, 154, 155, 174, 605, 614, 678, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 695, 742, 743, 753, 755, 757, 761, 765, 766, 767, 769, 770, 771, 777, 781, 817, 818, 862, 878, 879, 880, 881, 882, 918, 919, 920, 923, 926, 928, 930, 939, 945, 962, 963, 965, 966, 968, 1064, 1083, 1084, 1113, 1114, 1118, 1119, 1140, 1152, 1153, 1154, 1155, 1162, 1185, 1193, 1216, 1219, 1220, 1221, 1224, 1225, 1232, 1235, 1241, 1245, 1250, 1253, 1259, 1266, 1275, 1282, 1283, 1284, 1285, 1317, 1318, 1329, 1330, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1367, 1368, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1413, 1414, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1431, 1432, 1433, 1434, 1435, 1436, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1494, 1495, 1496, 1498, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1510, 1513, 1514, 1515, 1520, 1523, 1525, 1526, 1527, 1531, 1532, 1542, 1547, 1551, 1552, 1553, 1557, 1562, 1565, 1570, 1571, 1573, 1577, 1578, 1579, 1580, 1583, 1584, 1585, 1587, 1588, 1589, 1613, 1615, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1689, 1706, 1707, 1710, 1713, 1726, 1729, 1732, 1744, 1765, 1767, 1768, 1780, 1782, 1792, 1793, 1803, 1810, 1811, 1814, 1826, 1827, 1859, 1884, 1887, 1897, 1907, 1911, 1917, 1924, 1928, 1930], "rst": 7, "rebuild": [7, 39], "circleci": 7, "shard": [7, 16, 38, 43, 45, 46, 63, 1608], "worker": [7, 32, 38, 39, 41, 42, 45, 49, 50, 51, 52, 58, 60, 61, 63, 1608, 1869, 1904, 1912, 1913, 1919, 1920, 1921], "40": [7, 13, 1149, 1268, 1349, 1391, 1615, 1616, 1639, 1640, 1649, 1652, 1825], "minut": [7, 10, 41, 1928], "netlifi": 7, "noplot": 7, "render": [7, 41, 1928], "notebook": 7, "rebuilt": [7, 39, 45], "deploi": [7, 49, 58, 1864, 1899, 1905, 1911], "action": [7, 41, 47, 49, 52, 71, 1892, 1911, 1913, 1921], "document": [8, 9, 10, 12, 16, 20, 22, 23, 27, 34, 38, 41, 63, 64, 71, 677, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 870, 871, 872, 873, 935, 972, 973, 975, 1026, 1069, 1141, 1144, 1145, 1177, 1184, 1196, 1309, 1310, 1325, 1336, 1371, 1372, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1428, 1617, 1626, 1635, 1655, 1712, 1739, 1756, 1849, 1863, 1866, 1868, 1869, 1881, 1882, 1883, 1885, 1888, 1894, 1896, 1900, 1904, 1905, 1907, 1910, 1911, 1914, 1915, 1916, 1919, 1923, 1927, 1931], "develop": [8, 9, 10, 21, 28, 32, 39, 41, 71, 1865, 1868, 1869, 1876, 1889, 1894, 1899, 1900, 1904, 1911, 1914, 1915, 1919, 1923], "meant": [8, 42, 58, 60, 1641, 1888, 1919], "rule": [8, 9, 15, 32, 41, 47, 71, 151, 857, 889, 890, 934, 935, 1052, 1245, 1256, 1346, 1347, 1348, 1391, 1392, 1393, 1467, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1749, 1835, 1864, 1866, 1868, 1882, 1884, 1889, 1890, 1894, 1897, 1926, 1930], "concern": [8, 38, 1881, 1892, 1907], "disagr": 8, "contribut": [8, 9, 43, 914, 1157, 1158, 1364, 1371, 1372, 1435, 1510, 1518, 1519, 1562, 1608, 1864, 1884, 1894, 1895, 1912], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 19], "obsess": 8, "soumith": [8, 10], "goe": [8, 17, 20, 71, 1122, 1340, 1670, 1671, 1896], "depth": [8, 9, 776, 782, 1030, 1031, 1209, 1343, 1358, 1361, 1423, 1480, 1538, 1596, 1876, 1893, 1900, 1913], "primari": [8, 9, 15, 41, 71, 1205, 1870, 1876, 1923], "goal": [8, 19, 55, 67, 71, 1297, 1876, 1889, 1893, 1897, 1908, 1921], "secondari": 8, "abil": [8, 1745, 1876, 1899, 1911], "flexibl": [8, 20, 39, 63, 67, 1252, 1608, 1876, 1892, 1894, 1900], "abstract": [8, 11, 20, 38, 39, 42, 43, 47, 49, 58, 60, 907, 908, 909, 910, 911, 1622, 1869, 1893, 1914, 1919], "critic": [8, 16, 17, 20, 58, 677, 1616, 1649, 1879, 1891, 1892], "concret": [8, 14, 15, 20, 47, 61, 67, 71, 782, 797, 821, 838, 1480, 1565, 1596, 1866, 1869, 1892, 1894, 1902], "manner": [8, 49, 511, 898, 900, 1883, 1885, 1890], "jump": [8, 557, 1926], "regim": 8, "ei": 8, "tradeoff": [8, 16, 23, 39, 1914, 1920], "temptat": 8, "impos": [8, 60, 69, 1753, 1881, 1888, 1926], "strict": [8, 898, 899, 900, 901, 902, 903, 1125, 1132, 1196, 1211, 1212, 1428, 1650, 1911, 1928, 1930], "upfront": [8, 14], "simplifi": [8, 14, 39, 70, 1203, 1418, 1616, 1684, 1876, 1889, 1897, 1900, 1910, 1920], "worth": [8, 9, 20, 22, 38, 39, 61, 1126, 1863, 1927], "friction": 8, "compel": 8, "narrow": [8, 16, 28, 1265, 1328, 1684, 1772, 1867, 1869, 1882, 1909, 1916, 1927], "subproblem": 8, "fragment": [8, 28, 994, 1026, 1873, 1892], "ecosystem": [8, 19, 1899, 1901], "incomprehens": 8, "seamlessli": [8, 1884], "softwar": [8, 1231, 1232, 1259, 1849, 1892, 1898], "experi": [8, 9, 17, 21, 25, 28, 30, 39, 69, 72, 77, 78, 79, 80, 81, 82, 1137, 1457, 1580, 1608, 1856, 1876, 1894, 1928], "rich": [8, 1869], "denomin": [8, 684, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1717], "subset": [8, 38, 41, 45, 59, 1207, 1684, 1865, 1866, 1868, 1869, 1894, 1907, 1917], "borrow": 8, "zen": 8, "implicit": [8, 765, 766, 769, 770, 771, 1141, 1149, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1421, 1422, 1423, 1479, 1494, 1495, 1496, 1502, 1503, 1504, 1551, 1552, 1553, 1701, 1865, 1867, 1869, 1870, 1907, 1911, 1927], "concis": [8, 51, 1919], "interchang": [8, 47, 1681, 1834, 1868, 1898, 1908], "everydai": 8, "english": 8, "movement": [8, 1927], "worri": [8, 1919], "placement": [8, 16, 46, 49, 856, 1599, 1914, 1919], "favor": [8, 20, 41, 782, 783, 784, 941, 952, 1038, 1042, 1196, 1250, 1253, 1285, 1286, 1387, 1428, 1481, 1482, 1596, 1597, 1598, 1600, 1713, 1814, 1837], "practition": 8, "debugg": [8, 16, 28, 1201, 1897], "plug": 8, "ir": [8, 14, 15, 16, 21, 28, 71, 757, 1199, 1200, 1380, 1381, 1665, 1864, 1866, 1869, 1907, 1908], "classic": [8, 1889], "sort": [8, 14, 20, 45, 49, 71, 587, 606, 873, 874, 895, 956, 1069, 1156, 1316, 1336, 1642, 1643, 1654, 1714, 1749, 1832, 1846, 1865, 1867, 1869, 1894, 1896, 1909, 1923], "distribut": [8, 21, 30, 38, 39, 42, 49, 50, 51, 52, 55, 56, 57, 58, 60, 61, 63, 70, 174, 258, 286, 377, 453, 480, 605, 692, 693, 816, 920, 1043, 1318, 1336, 1340, 1364, 1365, 1366, 1367, 1368, 1369, 1373, 1378, 1382, 1394, 1442, 1446, 1467, 1510, 1512, 1513, 1514, 1515, 1520, 1524, 1525, 1529, 1539, 1570, 1608, 1656, 1706, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1864, 1869, 1883, 1884, 1887, 1888, 1892, 1912, 1913, 1915, 1921, 1924, 1928, 1931], "tldr": 8, "resourc": [8, 16, 24, 32, 38, 49, 54, 58, 71, 1869, 1881, 1923], "characterist": [8, 1815, 1895, 1900], "uniformli": [8, 47, 1724, 1725, 1930], "leak": [8, 890, 896, 1869, 1881, 1889], "smart": [8, 1894, 1911, 1919], "anywai": [8, 1889], "obviou": [8, 15, 1896, 1921], "extens": [8, 15, 16, 28, 32, 35, 41, 43, 46, 47, 1267, 1268, 1745, 1765, 1864, 1876, 1884, 1888, 1905, 1911, 1923], "unavoid": 8, "latenc": [8, 16, 24, 55, 1891, 1892], "caveat": [8, 12, 23, 28, 63, 1599, 1648, 1876, 1881, 1892, 1900, 1905], "valuabl": 8, "certainli": [8, 1876], "heterogen": [8, 1868], "cluster": [8, 41, 43, 57, 58, 59, 1336, 1928], "focus": [8, 28, 1868, 1869, 1894], "beaten": 8, "space": [8, 9, 38, 47, 769, 770, 771, 1052, 1087, 1089, 1091, 1092, 1098, 1105, 1149, 1158, 1211, 1212, 1266, 1282, 1336, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1394, 1404, 1405, 1406, 1407, 1408, 1409, 1422, 1423, 1479, 1502, 1503, 1504, 1505, 1506, 1507, 1539, 1835, 1867, 1885, 1889, 1897, 1900, 1905], "innov": 8, "ultim": [8, 9, 32, 51, 60, 63, 1893], "evidenc": 8, "began": 8, "bind": [8, 32, 71, 1006, 1869, 1870, 1911], "monolith": 8, "deepli": 8, "integr": [8, 12, 38, 46, 52, 67, 155, 920, 922, 923, 924, 925, 926, 927, 968, 1052, 1157, 1196, 1219, 1263, 1264, 1327, 1428, 1720, 1732, 1835, 1884, 1894, 1899, 1900, 1910, 1912, 1914, 1924, 1926, 1930], "numpi": [8, 38, 68, 447, 491, 690, 691, 696, 874, 876, 877, 894, 1064, 1066, 1067, 1069, 1087, 1108, 1109, 1110, 1111, 1115, 1116, 1121, 1137, 1159, 1226, 1227, 1237, 1248, 1250, 1251, 1252, 1253, 1254, 1259, 1260, 1263, 1265, 1297, 1302, 1707, 1732, 1735, 1742, 1754, 1762, 1796, 1797, 1798, 1799, 1800, 1801, 1814, 1816, 1817, 1825, 1828, 1829, 1831, 1853, 1856, 1857, 1876, 1890, 1894, 1895, 1903, 1904, 1906, 1911, 1926, 1927, 1928, 1929, 1930, 1935], "scipi": [8, 938, 1242, 1243, 1567, 1707, 1911, 1922, 1924, 1928], "scikit": [8, 1538], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1906], "year": [8, 1923], "rewrot": 8, "frontend": [8, 16, 33, 67, 71, 1908], "familiar": [8, 16, 27, 33, 71, 1025, 1866, 1889, 1895, 1911, 1914, 1920, 1921], "perhap": [8, 20, 1895], "importantli": [8, 20], "huge": [8, 1815, 1879], "scientif": [8, 1762], "pareto": [8, 1864], "close": [8, 33, 41, 58, 71, 934, 1008, 1185, 1231, 1232, 1258, 1259, 1285, 1345, 1459, 1477, 1500, 1749, 1814, 1837, 1879, 1889, 1894, 1903, 1907, 1911, 1914, 1919, 1928, 1930], "curv": [8, 1928], "torchdynamo": [8, 12, 14, 18, 19, 20, 25, 677, 950, 952, 1661, 1864, 1875], "frame": [8, 13, 14, 16, 17, 25, 28, 71, 955, 1193, 1810, 1896, 1928], "torch_funct": [8, 1894], "torch_dispatch": 8, "torch": [8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 23, 25, 27, 28, 30, 33, 35, 36, 39, 42, 45, 49, 50, 51, 52, 55, 56, 58, 60, 61, 63, 66, 73, 74, 75, 76, 83, 88, 89, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 891, 917, 970, 971, 972, 973, 975, 976, 991, 993, 1004, 1073, 1171, 1194, 1195, 1196, 1210, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1599, 1608, 1609, 1610, 1611, 1617, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1641, 1653, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1720, 1759, 1789, 1866, 1867, 1868, 1882, 1883, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1906, 1912, 1914, 1915, 1916, 1919, 1920, 1921, 1927], "fx": [8, 12, 13, 14, 15, 16, 19, 20, 25, 27, 28, 83, 744, 812, 813, 814, 815, 857, 1126, 1864, 1908, 1915, 1916], "tracer": [8, 20, 75, 1211, 1907, 1908, 1928, 1933], "functorch": [8, 12, 26, 64, 69], "anchor": [8, 27, 71, 1476, 1477, 1593, 1594, 1867], "hackabl": 8, "todai": [8, 14, 17, 26, 64, 69, 952, 1914], "open": [8, 9, 16, 32, 38, 47, 58, 64, 686, 912, 1119, 1203, 1267, 1290, 1300, 1544, 1866, 1876, 1881, 1884, 1898, 1906, 1907, 1911, 1914, 1919, 1923, 1924], "evolv": [8, 1893], "ai": [8, 1907, 1924], "adopt": [9, 41, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762], "hierarch": [9, 1928], "pull": [9, 10, 15, 33, 71, 151, 890, 1911], "request": [9, 10, 14, 30, 41, 43, 60, 686, 858, 876, 877, 1026, 1268, 1290, 1300, 1544, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1863, 1884, 1888, 1889, 1891, 1892, 1907, 1911, 1919, 1920, 1921, 1923, 1924], "overseen": 9, "catch": [9, 17, 51, 1866, 1889, 1895, 1897], "maker": 9, "strong": 9, "toward": [9, 1064, 1157, 1158, 1268, 1332, 1608, 1692, 1733, 1741, 1742, 1912], "philosophi": [9, 67, 1864], "beyond": [9, 39, 1313, 1364, 1670, 1671, 1680, 1740, 1896, 1900], "encourag": [9, 49, 1884, 1914, 1923, 1930], "propos": [9, 1667, 1687, 1688, 1876, 1897, 1910, 1920], "review": [9, 10, 20, 39, 1911], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 71], "codebas": 9, "strictli": [9, 38, 151, 192, 209, 890, 934, 1158, 1196, 1200, 1428, 1889, 1924], "compani": 9, "bui": 9, "addition": [9, 38, 39, 41, 47, 63, 151, 511, 614, 890, 1126, 1130, 1131, 1200, 1259, 1336, 1391, 1392, 1393, 1791, 1896, 1931], "membership": [9, 49, 57, 58, 1870], "That": [9, 26, 49, 56, 59, 65, 71, 1193, 1266, 1282, 1849, 1877, 1894, 1895, 1896, 1905, 1911, 1919], "seat": 9, "reserv": [9, 55, 1026, 1870, 1892, 1900], "emploi": [9, 1683, 1900, 1911, 1912], "directori": [9, 16, 17, 28, 32, 41, 43, 56, 1665, 1863, 1878, 1899, 1911, 1913, 1928], "procedur": [9, 28, 47, 856, 1211, 1212, 1268, 1789, 1919], "disput": 9, "made": [9, 11, 14, 20, 28, 43, 45, 46, 59, 71, 896, 906, 1196, 1428, 1473, 1475, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1730, 1868, 1876, 1889, 1906, 1911, 1928, 1930, 1934], "public": [9, 10, 1126, 1894, 1934], "relev": [9, 17, 19, 20, 42, 49, 58, 63, 70, 677, 1259, 1864, 1870, 1888, 1889, 1911, 1914], "resolut": [9, 1440, 1441, 1492, 1527, 1568, 1569, 1835, 1870, 1911, 1935], "conclus": 9, "publicli": [9, 1934], "vision": [9, 19, 1205, 1364, 1510, 1863, 1864], "roadmap": [9, 10], "parti": [9, 58, 1863, 1864, 1866, 1892, 1895, 1900, 1911], "triag": [9, 10], "meet": [9, 10, 57, 1225, 1892], "Their": [9, 15, 1061], "articul": 9, "cohes": 9, "negoti": [9, 1919], "contenti": 9, "broad": [9, 1900], "stakehold": 9, "power": [9, 21, 57, 1032, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1112, 1219, 1249, 1263, 1396, 1397, 1548, 1549, 1616, 1649, 1667, 1696, 1710, 1734, 1850, 1870, 1892, 1923], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 14, 19, 47, 63, 1297, 1869, 1871, 1888, 1889, 1910, 1914, 1926], "merit": 9, "demonstr": [9, 19, 59, 71, 1351, 1866, 1900, 1905, 1912, 1919], "expertis": 9, "continu": [9, 12, 13, 17, 20, 38, 41, 47, 61, 63, 71, 402, 605, 816, 899, 1149, 1231, 1232, 1259, 1350, 1351, 1608, 1870, 1876, 1889, 1905, 1913, 1931], "light": [9, 1928], "mainten": [9, 58, 59], "emeritu": [9, 10], "inact": [9, 1026, 1892], "contact": 9, "item": [9, 11, 14, 15, 20, 38, 43, 580, 581, 582, 586, 789, 790, 791, 811, 812, 813, 814, 952, 1364, 1429, 1438, 1620, 1762, 1863, 1865, 1866, 1867, 1868, 1869, 1882, 1892, 1907, 1909, 1911, 1919, 1928, 1929], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 38, 47, 71, 89, 402, 470, 542, 732, 854, 858, 860, 905, 919, 921, 928, 941, 942, 943, 1085, 1086, 1087, 1088, 1089, 1097, 1099, 1103, 1105, 1122, 1132, 1133, 1136, 1153, 1154, 1188, 1191, 1196, 1199, 1225, 1226, 1237, 1239, 1250, 1253, 1254, 1268, 1288, 1303, 1322, 1327, 1328, 1345, 1356, 1357, 1358, 1363, 1364, 1365, 1372, 1382, 1389, 1428, 1434, 1464, 1471, 1476, 1477, 1492, 1500, 1519, 1524, 1527, 1593, 1594, 1602, 1603, 1604, 1740, 1742, 1792, 1794, 1838, 1839, 1840, 1841, 1848, 1863, 1867, 1882, 1883, 1894, 1895, 1897, 1907, 1909, 1912, 1918, 1923, 1924, 1930, 1934, 1935], "neg": [9, 14, 30, 32, 38, 41, 47, 60, 71, 89, 440, 442, 457, 658, 659, 695, 752, 777, 921, 963, 966, 975, 991, 997, 998, 1026, 1038, 1085, 1086, 1087, 1088, 1089, 1090, 1104, 1105, 1106, 1112, 1122, 1186, 1188, 1190, 1249, 1276, 1288, 1309, 1310, 1318, 1322, 1327, 1328, 1336, 1345, 1373, 1382, 1414, 1421, 1422, 1423, 1431, 1435, 1437, 1442, 1459, 1476, 1477, 1520, 1524, 1527, 1529, 1538, 1542, 1551, 1552, 1553, 1562, 1570, 1593, 1594, 1596, 1706, 1707, 1738, 1742, 1777, 1779, 1782, 1793, 1830, 1838, 1839, 1840, 1841, 1848, 1865, 1866, 1867, 1882, 1884, 1887, 1889, 1895, 1907, 1908, 1909, 1918, 1923, 1924], "interact": [9, 11, 16, 22, 33, 38, 46, 71, 859, 973, 1006, 1171, 1864, 1870, 1893, 1911, 1928], "final": [9, 11, 13, 14, 28, 41, 43, 45, 47, 49, 58, 67, 68, 683, 686, 687, 757, 918, 936, 949, 1069, 1108, 1126, 1149, 1267, 1285, 1290, 1380, 1382, 1398, 1443, 1456, 1599, 1792, 1835, 1866, 1868, 1869, 1870, 1882, 1894, 1897, 1900, 1903, 1905, 1907, 1911, 1920, 1921], "declin": 9, "conflict": [9, 39, 59, 1911], "lack": [9, 30, 1231, 1232, 1259], "unfit": 9, "conduct": [9, 1608, 1703, 1815, 1919], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 914, 1867, 1911], "letter": [9, 1069], "befit": 9, "candidaci": 9, "behind": [9, 15, 1864, 1905, 1920], "75": [9, 1157, 1416, 1527, 1545, 1667, 1714, 1867, 1924], "choos": [9, 33, 71, 889, 914, 995, 1241, 1254, 1259, 1344, 1887, 1888, 1891, 1911, 1915, 1928], "unforeseen": 9, "circumst": [9, 58, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1892], "perman": [9, 71, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1889, 1921], "unavail": [9, 1868], "rank": [9, 14, 28, 38, 39, 41, 42, 43, 45, 46, 47, 49, 56, 58, 59, 61, 63, 1241, 1242, 1243, 1250, 1285, 1420, 1467, 1608, 1620, 1703, 1815, 1867, 1893, 1902, 1907, 1912, 1919, 1920], "elect": 9, "invit": [9, 1863], "convinc": 9, "approach": [9, 16, 26, 39, 41, 71, 938, 1137, 1789, 1856, 1866, 1881, 1884, 1892, 1894, 1897, 1914, 1919], "interview": 9, "talk": [9, 60, 1899], "gather": [9, 41, 58, 63, 511, 1825, 1849, 1865, 1867, 1894, 1896, 1899, 1909, 1911], "read": [9, 11, 16, 19, 20, 25, 28, 35, 38, 41, 43, 48, 49, 51, 58, 59, 63, 67, 71, 447, 1028, 1052, 1120, 1121, 1122, 1203, 1267, 1697, 1864, 1882, 1883, 1889, 1890, 1892, 1893, 1895, 1899, 1903, 1911, 1914, 1919], "attend": [9, 732, 1434, 1471], "confer": [9, 1382], "pipelin": [9, 16, 71, 1864, 1919], "world": [9, 14, 17, 21, 25, 41, 45, 49, 56, 58, 59, 63, 1467, 1608, 1889, 1911, 1914], "cover": [9, 13, 20, 22, 64, 71, 1043, 1069, 1421, 1551, 1552, 1553, 1869, 1871, 1883, 1889, 1894, 1897, 1899, 1900, 1919], "push": [9, 20, 50, 1031, 1137, 1261, 1856, 1913], "codeown": 9, "notifi": [9, 42, 59, 1921], "expert": 9, "strongli": [9, 41, 49, 59, 1367, 1368, 1369, 1373, 1810, 1863], "failur": [9, 16, 20, 28, 41, 47, 49, 50, 51, 55, 56, 57, 58, 61, 677, 905, 906, 1126, 1211, 1212, 1313, 1869, 1875, 1881, 1908, 1912, 1919, 1921, 1930], "revert": [9, 47, 63, 1464, 1585, 1921], "substanti": [9, 11, 39, 1892], "syntact": [9, 51, 71], "establish": [9, 41, 58, 1889], "seri": [9, 11, 23, 71, 1351, 1391, 1904, 1907, 1934], "lf": 9, "llc": 9, "guidelin": [9, 1631, 1911, 1914, 1915], "trademark": 9, "www": [9, 1351, 1477, 1928], "lfproject": 9, "acknowledg": [9, 41, 1864, 1921, 1923], "copyright": [9, 28], "holder": 9, "independ": [9, 38, 41, 58, 63, 70, 154, 155, 776, 782, 898, 899, 900, 901, 902, 903, 975, 1149, 1158, 1254, 1366, 1367, 1368, 1369, 1373, 1513, 1514, 1515, 1520, 1538, 1596, 1652, 1713, 1864, 1866, 1888, 1889, 1892, 1905, 1911], "authorship": 9, "claus": [9, 1896], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 15, 39, 47, 430, 478, 755, 1141, 1216, 1232, 1235, 1254, 1296, 1325, 1394, 1434, 1577, 1615, 1701, 1703, 1713, 1714, 1815, 1866, 1867, 1897, 1904, 1907, 1923, 1924], "partli": [9, 1869], "domain": [9, 47, 51, 681, 823, 882, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1097, 1099, 1100, 1101, 1102, 1149, 1884, 1907, 1914], "absolut": [9, 30, 32, 71, 93, 678, 691, 905, 906, 1117, 1185, 1224, 1229, 1250, 1253, 1255, 1276, 1389, 1395, 1459, 1536, 1540, 1581, 1625, 1626, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1655, 1666, 1707, 1733, 1765, 1867, 1900, 1907, 1909, 1924, 1929, 1930], "health": 9, "success": [9, 28, 43, 47, 49, 55, 71, 1226, 1237, 1239, 1285, 1627, 1796, 1797, 1798, 1800, 1801, 1892, 1900, 1907, 1908, 1923], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1907], "clearli": [9, 1876, 1911], "sponsorship": 9, "foundat": [9, 1908], "ptf": 9, "minor": [9, 997, 1226, 1242], "committ": 9, "prior": [9, 11, 16, 39, 41, 43, 49, 897, 1268, 1473, 1475, 1577, 1631, 1890, 1892, 1894, 1910, 1914], "facebook": 9, "infrastructur": [9, 14, 50, 1911], "employe": 9, "expand": [9, 47, 255, 491, 875, 897, 905, 906, 933, 1248, 1249, 1297, 1434, 1478, 1571, 1845, 1863, 1865, 1867, 1875, 1882, 1883, 1890, 1895, 1907, 1909, 1911, 1912, 1927], "deliv": [9, 1913], "offici": [9, 41, 1336, 1914], "showcas": [9, 1424, 1892, 1902], "whenev": [9, 15, 20, 877, 1615, 1616, 1879, 1881, 1917, 1920, 1921, 1934], "fix": [10, 11, 16, 28, 35, 38, 41, 46, 47, 49, 58, 63, 65, 68, 71, 83, 84, 262, 792, 798, 1126, 1209, 1241, 1371, 1372, 1446, 1518, 1519, 1538, 1608, 1866, 1867, 1879, 1887, 1888, 1892, 1893, 1896, 1902, 1906, 1907, 1909, 1910], "plu": [10, 32, 43, 898, 1122, 1242, 1923], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1268], "ezyang": [10, 1927], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1703, 1815], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": 10, "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 42, 45, 47, 63, 1671, 1672, 1674, 1680, 1684, 1910], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 28], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 13], "ansel": [10, 13], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1325, 1714, 1892], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 47], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1268], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1149], "robi": 10, "robieta": 10, "xu": [10, 63], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 11, 23, 41, 63, 71, 1799, 1868, 1883, 1907], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": 10, "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 24], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1336], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 790], "zafar": 10, "takhirov": 10, "supriya": 10, "rao": 10, "supriyar": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 16, 28, 1913], "johnson": 10, "peterjc123": [10, 1906], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 47], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "debut": 11, "encapsul": [11, 70, 71, 1919], "henc": [11, 39, 45, 49, 57, 58, 61, 63, 70, 920, 1122, 1424, 1425, 1426, 1480, 1799, 1884, 1889, 1892, 1893, 1919, 1921], "speedup": [11, 19, 20, 21, 24, 38, 39, 1434, 1475], "address": [11, 38, 41, 58, 61, 68, 217, 905, 906, 978, 1876, 1881, 1892, 1919, 1920], "host": [11, 15, 38, 41, 49, 51, 57, 58, 59, 60, 197, 210, 577, 600, 874, 1196, 1428, 1608, 1620, 1654, 1892, 1912, 1919, 1920, 1925], "essenti": [11, 38, 41, 46, 49, 71, 1285, 1883, 1892, 1906, 1923], "wrapper": [11, 39, 41, 46, 47, 63, 70, 71, 621, 754, 787, 821, 970, 972, 973, 975, 1042, 1044, 1115, 1116, 1135, 1196, 1365, 1866, 1868, 1869, 1879, 1881, 1892, 1893, 1907, 1912], "coupl": [11, 26, 27, 67, 1866, 1899, 1920], "tricki": [11, 50, 64, 69, 1889, 1900, 1921], "cachingalloc": 11, "pool": [11, 70, 763, 764, 765, 766, 779, 780, 970, 1004, 1005, 1015, 1026, 1304, 1305, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1376, 1377, 1396, 1397, 1421, 1422, 1423, 1424, 1425, 1426, 1429, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1495, 1496, 1522, 1523, 1548, 1549, 1551, 1552, 1553, 1718, 1719, 1864, 1891, 1892, 1894, 1900, 1902, 1916, 1919], "freed": [11, 63, 151, 890, 904, 978, 1026, 1881, 1892, 1898, 1919], "exactli": [11, 20, 32, 39, 41, 47, 60, 905, 906, 944, 982, 986, 1069, 1115, 1116, 1193, 1196, 1237, 1372, 1375, 1428, 1456, 1459, 1519, 1529, 1608, 1655, 1666, 1876, 1882, 1889, 1892, 1893, 1894, 1897, 1898, 1907, 1911, 1912], "replai": [11, 16, 28, 970, 1004, 1662, 1892], "advantag": [11, 41, 58, 59, 1345, 1389, 1893, 1896, 1919, 1923], "overwrit": [11, 35, 38, 41, 71, 1429, 1438, 1869, 1889], "burn": 11, "forth": [11, 1689, 1850, 1863, 1913], "cudagraph_tre": 11, "reclaim": [11, 1892], "compil": [11, 12, 13, 14, 15, 17, 19, 22, 23, 24, 25, 32, 33, 63, 64, 71, 677, 971, 996, 1000, 1012, 1013, 1126, 1194, 1196, 1197, 1200, 1201, 1207, 1208, 1209, 1211, 1212, 1213, 1428, 1865, 1866, 1868, 1869, 1870, 1871, 1875, 1888, 1891, 1893, 1899, 1906, 1907, 1931], "ab": [11, 12, 13, 16, 20, 28, 46, 47, 91, 92, 622, 623, 679, 938, 1069, 1227, 1248, 1249, 1251, 1252, 1265, 1268, 1398, 1447, 1474, 1477, 1479, 1567, 1652, 1655, 1697, 1703, 1707, 1864, 1865, 1867, 1869, 1882, 1883, 1884, 1892, 1900, 1909, 1923, 1929], "_dynamo": [11, 12, 13, 14, 16, 18, 19, 20, 23, 25, 28, 950, 1864, 1893], "graph_break": [11, 17], "rand_lik": [11, 1867, 1871, 1892, 1909, 1931], "warm": [11, 16, 39, 45, 1015, 1687, 1688, 1892, 1913], "cubla": [11, 30, 987, 1849, 1904], "triton": [11, 16, 18, 19, 25, 28, 950, 1864, 1895], "arang": [11, 19, 30, 38, 41, 48, 511, 604, 688, 689, 690, 694, 696, 883, 884, 885, 932, 944, 948, 1052, 1067, 1085, 1089, 1097, 1103, 1105, 1109, 1110, 1111, 1112, 1119, 1120, 1159, 1216, 1217, 1221, 1224, 1248, 1251, 1252, 1265, 1328, 1449, 1450, 1451, 1452, 1453, 1480, 1481, 1482, 1564, 1655, 1656, 1702, 1710, 1714, 1729, 1736, 1741, 1762, 1794, 1802, 1813, 1829, 1830, 1832, 1833, 1835, 1857, 1865, 1867, 1876, 1884, 1905, 1909, 1924, 1928, 1929], "invari": [11, 27, 47, 1641, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1921, 1923], "overwritten": [11, 742, 743, 753, 761, 794, 838, 858, 1889, 1930], "constraint": [11, 14, 41, 46, 791, 792, 899, 1004, 1015, 1131, 1608, 1616, 1641, 1684, 1864, 1869, 1884, 1895, 1897, 1900, 1923], "pattern": [11, 14, 15, 27, 41, 43, 789, 790, 791, 793, 851, 858, 1012, 1365, 1644, 1792, 1866, 1869, 1889, 1892, 1894, 1896, 1898, 1905, 1915, 1916], "di": [11, 20, 1881], "yet": [11, 15, 16, 20, 21, 23, 26, 28, 42, 49, 63, 68, 70, 71, 83, 84, 972, 1043, 1199, 1201, 1213, 1301, 1608, 1622, 1626, 1628, 1864, 1868, 1869, 1875, 1883, 1884, 1892, 1907, 1909, 1914, 1919, 1921, 1923, 1924, 1926], "privat": [11, 58, 1892, 1894, 1911], "reflect": [11, 67, 457, 518, 553, 1121, 1122, 1125, 1193, 1356, 1357, 1358, 1404, 1405, 1406, 1449, 1450, 1451, 1527, 1565, 1650, 1698, 1810, 1866, 1867, 1896, 1927], "fallback": [11, 16, 28, 32, 41, 58, 66, 1209, 1259, 1888, 1892], "inductor": [11, 12, 14, 18, 19, 21, 22, 24, 28, 677, 950, 1875], "my_model": [11, 16, 28, 43, 1608, 1866, 1907], "y1": [11, 1662, 1791], "y2": [11, 1662, 1791], "naiv": [11, 14, 16, 38, 1912], "pend": [11, 1919, 1928], "todo": [11, 15, 23, 72, 77, 78, 79, 80, 81, 82, 83, 84, 823, 856, 858, 859, 1933], "storag": [11, 15, 43, 63, 222, 311, 339, 342, 343, 434, 457, 482, 497, 518, 521, 555, 556, 581, 582, 584, 585, 875, 892, 894, 952, 993, 1060, 1166, 1170, 1182, 1196, 1203, 1267, 1289, 1327, 1328, 1365, 1428, 1731, 1745, 1752, 1783, 1788, 1791, 1805, 1828, 1834, 1863, 1864, 1867, 1878, 1881, 1889, 1892, 1902, 1905, 1911, 1919, 1923, 1926, 1927, 1929], "footgun": [11, 15], "uniqu": [11, 41, 49, 55, 58, 59, 60, 511, 515, 1187, 1231, 1232, 1236, 1242, 1243, 1245, 1254, 1256, 1258, 1259, 1296, 1303, 1791, 1814, 1847, 1863, 1866, 1878, 1894, 1911, 1913, 1919, 1920, 1921, 1923, 1928], "straightforward": [12, 20, 71, 1876, 1884, 1900, 1910, 1923], "gm": [12, 15, 20, 27, 28, 71], "graphmodul": [12, 15, 20, 27, 28, 73, 74, 75, 76, 856, 857, 858, 859, 1933], "example_input": [12, 15, 20, 814, 815, 858, 859, 1207, 1211, 1914, 1933], "my_custom_backend": 12, "f_opt": 12, "register_backend": [12, 41, 1919], "my_compil": [12, 13, 20], "besid": [12, 39, 41, 1892, 1893, 1928], "plugin": [12, 1913, 1928], "entry_point": [12, 59], "torch_dynamo_backend": 12, "your_modul": 12, "submodul": [12, 27, 33, 63, 71, 788, 794, 811, 835, 836, 837, 855, 858, 859, 1135, 1196, 1200, 1206, 1207, 1365, 1428, 1429, 1430, 1456, 1606, 1866, 1868, 1869, 1877, 1900, 1905, 1911, 1914, 1919, 1933], "registr": [12, 45, 46, 70, 83, 1012, 1601, 1606, 1607, 1608, 1617, 1620, 1873, 1911], "minifi": [12, 16], "typic": [12, 14, 15, 28, 32, 38, 39, 41, 47, 48, 49, 51, 58, 59, 60, 63, 71, 84, 968, 970, 1112, 1120, 1196, 1216, 1219, 1362, 1388, 1428, 1599, 1608, 1670, 1671, 1796, 1797, 1798, 1800, 1801, 1863, 1864, 1866, 1869, 1875, 1889, 1891, 1892, 1903, 1904, 1905, 1907, 1910, 1912, 1914, 1919, 1927, 1935], "consist": [12, 16, 22, 28, 38, 41, 43, 46, 47, 58, 59, 71, 905, 941, 942, 1196, 1225, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1263, 1265, 1428, 1475, 1617, 1620, 1666, 1713, 1814, 1866, 1869, 1876, 1883, 1884, 1895, 1900, 1904, 1907, 1910, 1913, 1923], "canon": [12, 15, 49, 51, 1866], "opset": [12, 1865, 1907, 1908, 1909], "significantli": [12, 41, 899, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1757, 1923], "smaller": [12, 38, 71, 497, 542, 968, 1608, 1697, 1712, 1802, 1892, 1905, 1911, 1935], "aot_autograd": 12, "fw_compil": 12, "bw_compil": 12, "box": [12, 14, 17, 19, 30, 41, 46, 59, 71, 1137, 1856, 1883, 1889, 1893], "make_boxed_func": 12, "my_backend": [12, 789], "model_opt": 12, "pretti": [12, 15, 20, 1196, 1665, 1762, 1866], "extract": [12, 17, 25, 26, 35, 71, 833, 1371, 1375, 1479, 1518, 1595, 1913, 1919, 1933], "dynamo": [12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 28, 71, 677, 950, 1875, 1908], "bytecod": [12, 13, 16, 20, 25, 26, 28, 38, 677, 1875, 1911], "print_tabular": [12, 20, 71], "co": [12, 18, 19, 21, 69, 202, 632, 633, 680, 928, 950, 1012, 1127, 1130, 1131, 1136, 1153, 1154, 1247, 1362, 1363, 1366, 1687, 1688, 1695, 1707, 1769, 1770, 1773, 1774, 1775, 1776, 1778, 1796, 1797, 1798, 1800, 1801, 1865, 1867, 1882, 1909, 1910, 1923, 1928, 1930], "sin": [12, 18, 19, 21, 26, 32, 68, 69, 529, 666, 667, 878, 950, 1012, 1127, 1129, 1130, 1131, 1133, 1136, 1154, 1247, 1297, 1707, 1770, 1776, 1865, 1867, 1882, 1889, 1909, 1923, 1924, 1928], "opcod": [12, 13, 20, 71, 1911], "placehold": [12, 13, 27, 71, 72, 77, 78, 79, 80, 81, 82, 831, 1390, 1892], "call_funct": [12, 13, 16, 20, 27, 28, 71, 83, 84], "0x7f1a894649a8": 12, "mockmodul": 12, "mod": [12, 28, 71, 718, 719, 729, 735, 736, 737, 742, 743, 753, 761, 807, 808, 809, 810, 833, 834, 861, 1125, 1199, 1200, 1205, 1212, 1650, 1868, 1869, 1911, 1932], "optimized_mod": 12, "toy_exampl": [12, 13, 16, 20, 28], "abs_1": [12, 13], "0x7f8d259298a0": 12, "truediv": [12, 13, 71], "call_method": [12, 13, 20, 71], "sum_1": [12, 13, 71], "lt": [12, 13, 363, 395, 1222, 1865, 1866, 1867, 1882, 1909], "mul_1": 12, "nondeterminist": [12, 71, 313, 315, 321, 513, 515, 921, 1217, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1424, 1425, 1426, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1519, 1527, 1538, 1565, 1577, 1596, 1597, 1598, 1756, 1849], "offer": [12, 16, 41, 63, 66, 1608, 1849, 1865, 1892, 1898, 1911, 1923], "superior": 12, "real": [12, 14, 15, 19, 20, 21, 38, 47, 71, 683, 684, 685, 686, 687, 689, 695, 905, 918, 943, 958, 964, 1015, 1085, 1086, 1088, 1090, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1186, 1188, 1189, 1192, 1193, 1216, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1235, 1238, 1239, 1240, 1245, 1248, 1250, 1252, 1253, 1254, 1255, 1259, 1260, 1264, 1265, 1266, 1276, 1282, 1395, 1437, 1440, 1441, 1477, 1615, 1810, 1814, 1853, 1854, 1855, 1863, 1864, 1865, 1867, 1869, 1889, 1892, 1909, 1911, 1914, 1919, 1921, 1927, 1929, 1930, 1934], "optimize_for_infer": [12, 1200], "optimize_for_inference_compil": 12, "And": [12, 17, 19, 20, 67, 794, 821, 1048, 1049, 1125, 1196, 1217, 1293, 1298, 1351, 1428, 1889, 1894, 1895, 1906, 1907, 1914, 1933], "code_to_acceler": 12, "list_backend": [12, 18, 19, 21, 950], "trt_compil": 12, "tensorrt": [12, 16, 19, 1914], "inductor_compil": 12, "author": [13, 16, 19, 23, 24, 28, 39, 58, 59, 63, 1137, 1680, 1720, 1856, 1888], "tensor_match": 13, "function_match": 13, "recaptur": 13, "recompil": [13, 14, 20, 21, 23, 32, 71, 677, 1209, 1875, 1898], "dispatch_kei": [13, 1873], "ndim": [13, 1261, 1262, 1882, 1884, 1923, 1929], "config": [13, 14, 16, 18, 19, 20, 22, 23, 28, 39, 63, 71, 789, 790, 791, 792, 856, 858, 950, 1893, 1906, 1917], "dynamic_shap": [13, 14, 24, 1661], "log_level": [13, 16, 28, 1893], "info": [13, 14, 15, 16, 28, 41, 49, 52, 56, 677, 889, 972, 973, 975, 1226, 1237, 1239, 1240, 1244, 1257, 1285, 1309, 1310, 1664, 1864, 1867, 1875, 1893, 1894, 1895, 1907, 1911], "output_cod": [13, 28, 677, 1875], "spammi": [13, 1875], "printout": [13, 71, 1014, 1027], "__compiled_fn_0": 13, "eval_with_kei": 13, "0x7f9ca082f8a0": 13, "load_fast": [13, 20], "load_glob": 13, "load_method": 13, "6": [13, 16, 24, 28, 32, 35, 38, 39, 41, 47, 56, 71, 313, 315, 317, 321, 401, 402, 470, 486, 497, 511, 515, 557, 604, 682, 683, 688, 694, 738, 739, 740, 742, 743, 755, 758, 760, 762, 898, 899, 901, 902, 903, 921, 929, 934, 940, 943, 944, 948, 968, 981, 1028, 1032, 1046, 1047, 1048, 1052, 1053, 1064, 1067, 1068, 1085, 1093, 1098, 1099, 1103, 1104, 1106, 1108, 1109, 1112, 1119, 1149, 1159, 1161, 1162, 1185, 1206, 1217, 1221, 1232, 1248, 1252, 1253, 1254, 1261, 1262, 1266, 1268, 1297, 1301, 1326, 1327, 1328, 1341, 1352, 1355, 1360, 1363, 1371, 1372, 1381, 1382, 1383, 1385, 1386, 1424, 1425, 1429, 1437, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1471, 1472, 1474, 1479, 1485, 1494, 1524, 1531, 1532, 1564, 1566, 1573, 1599, 1643, 1644, 1646, 1648, 1654, 1655, 1656, 1668, 1682, 1702, 1703, 1706, 1713, 1714, 1720, 1721, 1724, 1730, 1740, 1741, 1745, 1749, 1762, 1783, 1787, 1791, 1794, 1796, 1797, 1802, 1813, 1815, 1816, 1817, 1824, 1829, 1830, 1831, 1832, 1833, 1835, 1838, 1840, 1844, 1849, 1857, 1858, 1864, 1865, 1866, 1869, 1870, 1876, 1884, 1887, 1889, 1894, 1895, 1900, 1905, 1907, 1919, 1920, 1923, 1924, 1926, 1929, 1930, 1934], "load_const": [13, 20], "12": [13, 24, 38, 39, 41, 63, 321, 515, 614, 683, 738, 739, 740, 742, 743, 940, 944, 1067, 1085, 1159, 1200, 1215, 1254, 1336, 1352, 1360, 1375, 1376, 1377, 1425, 1440, 1441, 1462, 1471, 1479, 1522, 1523, 1563, 1568, 1569, 1616, 1649, 1702, 1713, 1762, 1777, 1787, 1829, 1845, 1857, 1863, 1866, 1867, 1870, 1876, 1892, 1901, 1905, 1907, 1909, 1923, 1930], "binary_add": 13, "14": [13, 41, 321, 515, 943, 1012, 1013, 1052, 1067, 1159, 1248, 1254, 1322, 1352, 1425, 1713, 1720, 1787, 1829, 1830, 1835, 1857, 1866, 1870, 1907, 1909, 1923, 1927, 1928], "binary_true_divid": 13, "16": [13, 16, 28, 37, 41, 321, 614, 735, 736, 737, 738, 739, 740, 769, 1067, 1085, 1112, 1149, 1159, 1196, 1207, 1219, 1225, 1231, 1232, 1236, 1252, 1328, 1340, 1342, 1343, 1351, 1352, 1355, 1356, 1357, 1358, 1360, 1361, 1366, 1367, 1368, 1369, 1373, 1376, 1377, 1396, 1397, 1398, 1416, 1421, 1422, 1423, 1425, 1426, 1428, 1435, 1443, 1454, 1471, 1485, 1502, 1504, 1505, 1507, 1511, 1522, 1523, 1658, 1710, 1787, 1849, 1853, 1857, 1866, 1870, 1887, 1892, 1900, 1903, 1905, 1907, 1909, 1912, 1919, 1923, 1924, 1926, 1928, 1929], "store_fast": 13, "11": [13, 28, 32, 41, 321, 511, 940, 944, 1015, 1067, 1159, 1216, 1252, 1266, 1282, 1336, 1352, 1377, 1425, 1523, 1655, 1656, 1665, 1787, 1829, 1857, 1866, 1870, 1876, 1883, 1892, 1906, 1907, 1909, 1923, 1924], "18": [13, 41, 321, 444, 682, 1070, 1149, 1193, 1268, 1425, 1866, 1907, 1909, 1923], "20": [13, 15, 20, 41, 45, 47, 321, 682, 717, 725, 726, 731, 735, 736, 737, 738, 739, 740, 743, 753, 757, 758, 759, 760, 761, 762, 769, 1149, 1194, 1197, 1207, 1218, 1252, 1317, 1340, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1351, 1355, 1356, 1357, 1358, 1360, 1361, 1366, 1367, 1368, 1369, 1373, 1376, 1377, 1380, 1381, 1383, 1390, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1415, 1421, 1422, 1423, 1425, 1426, 1428, 1443, 1445, 1456, 1464, 1467, 1470, 1471, 1472, 1473, 1485, 1502, 1504, 1505, 1507, 1511, 1522, 1523, 1529, 1585, 1615, 1616, 1640, 1649, 1652, 1673, 1688, 1716, 1825, 1866, 1867, 1884, 1893, 1894, 1903, 1910, 1919, 1923], "22": [13, 41, 47, 321, 614, 1268, 1599, 1645, 1647, 1866, 1904, 1923], "24": [13, 39, 41, 47, 923, 1254, 1416, 1492, 1648, 1713, 1830, 1866, 1887, 1891, 1924], "26": [13, 28, 1251, 1688], "compare_op": 13, "28": [13, 22, 614, 743, 1052, 1835, 1907], "pop_jump_if_fals": 13, "38": [13, 1322], "30": [13, 21, 38, 41, 47, 49, 58, 444, 614, 717, 725, 726, 753, 761, 1149, 1218, 1349, 1351, 1355, 1415, 1479, 1485, 1502, 1511, 1599, 1691, 1693, 1699, 1716, 1825, 1894, 1907, 1910, 1919], "34": [13, 20, 28, 41], "binary_multipli": [13, 20], "36": [13, 20, 41, 321, 1112, 1149], "13": [13, 22, 28, 41, 872, 944, 1067, 1070, 1114, 1149, 1159, 1200, 1285, 1352, 1376, 1377, 1425, 1462, 1522, 1523, 1787, 1829, 1857, 1866, 1870, 1909, 1923], "42": [13, 38, 821, 928, 1317, 1769, 1892, 1900], "return_valu": [13, 49, 50, 56], "unpack_sequ": 13, "__resume_at_30_1": 13, "__resume_at_38_2": 13, "offset": [13, 20, 45, 49, 226, 227, 228, 229, 339, 518, 555, 743, 875, 1057, 1058, 1059, 1060, 1122, 1230, 1372, 1519, 1608, 1715, 1716, 1794, 1839, 1841, 1867, 1869], "__resume_at_": 13, "jump_absolut": 13, "resume_at": 13, "remaind": [13, 38, 488, 1117, 1149, 1865, 1867, 1909], "restart": [13, 39, 49, 57, 59, 61, 1687, 1688, 1881, 1928], "symbolic_shap": 14, "assumpt": [14, 16, 23, 28, 43, 55, 59, 905, 953, 1351, 1382, 1889, 1893, 1897, 1919, 1920, 1923], "situat": [14, 15, 16, 19, 38, 47, 60, 71, 964, 1620, 1881, 1894, 1895, 1902, 1903, 1911, 1914, 1921, 1934], "insuffici": [14, 28, 1016], "batch": [14, 15, 16, 18, 22, 28, 39, 41, 47, 59, 61, 64, 65, 68, 69, 71, 580, 581, 582, 584, 585, 683, 699, 700, 701, 702, 703, 704, 732, 757, 776, 782, 904, 905, 906, 918, 930, 931, 938, 941, 942, 943, 950, 969, 1057, 1059, 1069, 1130, 1131, 1137, 1193, 1225, 1226, 1227, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1268, 1276, 1285, 1286, 1290, 1344, 1345, 1346, 1347, 1348, 1351, 1356, 1357, 1362, 1364, 1365, 1367, 1368, 1369, 1371, 1372, 1373, 1375, 1380, 1381, 1382, 1383, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1398, 1399, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1419, 1420, 1431, 1432, 1433, 1434, 1435, 1437, 1440, 1441, 1442, 1443, 1445, 1459, 1460, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1492, 1497, 1499, 1500, 1510, 1511, 1513, 1514, 1515, 1518, 1519, 1520, 1521, 1524, 1537, 1538, 1539, 1562, 1570, 1577, 1595, 1596, 1599, 1608, 1615, 1641, 1642, 1644, 1645, 1647, 1688, 1689, 1695, 1701, 1703, 1713, 1717, 1796, 1797, 1798, 1800, 1801, 1805, 1810, 1814, 1815, 1834, 1837, 1838, 1840, 1853, 1856, 1864, 1882, 1883, 1884, 1888, 1892, 1895, 1896, 1900, 1902, 1912, 1914, 1919, 1923, 1928, 1929], "length": [14, 16, 28, 38, 39, 41, 43, 47, 260, 313, 315, 321, 351, 432, 433, 580, 581, 582, 732, 757, 811, 890, 904, 949, 986, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1122, 1137, 1170, 1193, 1211, 1215, 1327, 1328, 1346, 1351, 1356, 1365, 1372, 1375, 1380, 1396, 1398, 1434, 1443, 1471, 1479, 1502, 1503, 1504, 1511, 1519, 1538, 1577, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1720, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1794, 1796, 1797, 1798, 1800, 1801, 1810, 1835, 1856, 1865, 1867, 1869, 1876, 1883, 1884, 1890, 1896, 1923, 1930], "vari": [14, 15, 16, 28, 816, 1459, 1641, 1771, 1879, 1903, 1910, 1914, 1915, 1923], "servic": [14, 50, 1893], "window": [14, 32, 38, 41, 71, 351, 553, 919, 928, 1153, 1154, 1193, 1215, 1341, 1342, 1343, 1376, 1377, 1396, 1397, 1421, 1422, 1423, 1424, 1425, 1426, 1494, 1522, 1523, 1551, 1552, 1553, 1718, 1719, 1810, 1864, 1867, 1879, 1892], "pad": [14, 18, 38, 39, 709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 732, 735, 736, 737, 738, 739, 740, 765, 766, 769, 770, 771, 776, 779, 780, 782, 950, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1193, 1341, 1342, 1343, 1351, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1371, 1372, 1375, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1424, 1425, 1426, 1431, 1432, 1434, 1449, 1450, 1451, 1452, 1453, 1454, 1474, 1475, 1479, 1483, 1484, 1485, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1518, 1519, 1521, 1527, 1538, 1551, 1552, 1553, 1554, 1555, 1556, 1595, 1596, 1642, 1644, 1645, 1647, 1718, 1719, 1810, 1864, 1865, 1867, 1884, 1896, 1907, 1909, 1914, 1928], "exhibit": [14, 28, 1665, 1907], "imag": [14, 16, 17, 28, 32, 38, 738, 739, 740, 858, 859, 958, 1334, 1338, 1339, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1375, 1376, 1377, 1392, 1400, 1435, 1440, 1441, 1462, 1479, 1481, 1482, 1492, 1503, 1504, 1506, 1507, 1521, 1522, 1527, 1538, 1595, 1596, 1738, 1864, 1865, 1867, 1884, 1897, 1909, 1912, 1927, 1928], "recognit": 14, "jag": 14, "chose": [14, 49, 1888], "whose": [14, 28, 41, 47, 63, 71, 541, 856, 892, 940, 963, 1057, 1069, 1074, 1122, 1140, 1149, 1152, 1158, 1196, 1212, 1220, 1266, 1282, 1284, 1329, 1428, 1608, 1656, 1707, 1765, 1831, 1869, 1889, 1894, 1897, 1911, 1923, 1928, 1930], "dimension": [14, 47, 511, 513, 877, 883, 884, 885, 929, 936, 948, 1057, 1059, 1060, 1069, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1103, 1104, 1106, 1108, 1110, 1111, 1122, 1149, 1158, 1159, 1160, 1228, 1233, 1234, 1235, 1236, 1261, 1266, 1282, 1290, 1297, 1336, 1353, 1354, 1355, 1364, 1365, 1371, 1372, 1400, 1418, 1435, 1449, 1450, 1451, 1452, 1453, 1454, 1461, 1463, 1467, 1483, 1484, 1485, 1510, 1562, 1565, 1597, 1598, 1615, 1654, 1720, 1796, 1797, 1798, 1799, 1800, 1801, 1810, 1825, 1828, 1829, 1835, 1869, 1884, 1887, 1890, 1897, 1903, 1923, 1925, 1926, 1929, 1931], "induct": 14, "symbol": [14, 15, 26, 32, 37, 84, 621, 814, 952, 1210, 1264, 1398, 1443, 1837, 1853, 1864, 1869, 1908], "pt2": [14, 15, 17], "mark_dynam": 14, "dim": [14, 41, 46, 47, 68, 69, 71, 113, 115, 116, 117, 119, 135, 136, 137, 185, 205, 208, 211, 212, 213, 214, 215, 216, 230, 260, 264, 281, 312, 313, 314, 315, 316, 317, 321, 322, 354, 380, 392, 407, 409, 410, 411, 414, 428, 429, 430, 431, 435, 436, 452, 461, 469, 478, 489, 490, 492, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 534, 535, 538, 539, 541, 544, 549, 550, 552, 557, 562, 570, 575, 580, 581, 582, 584, 585, 587, 602, 603, 606, 607, 608, 609, 612, 614, 690, 692, 693, 694, 696, 871, 872, 873, 900, 901, 903, 937, 944, 959, 967, 969, 984, 986, 1048, 1049, 1050, 1051, 1052, 1061, 1067, 1085, 1086, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1108, 1109, 1127, 1137, 1138, 1149, 1159, 1167, 1168, 1169, 1170, 1173, 1217, 1227, 1228, 1248, 1252, 1262, 1264, 1265, 1275, 1283, 1293, 1295, 1296, 1298, 1301, 1303, 1316, 1323, 1324, 1325, 1326, 1327, 1328, 1336, 1363, 1364, 1365, 1368, 1372, 1374, 1379, 1394, 1399, 1418, 1434, 1435, 1436, 1461, 1463, 1475, 1477, 1478, 1509, 1510, 1526, 1529, 1538, 1546, 1551, 1552, 1553, 1562, 1563, 1565, 1567, 1571, 1577, 1583, 1584, 1592, 1608, 1616, 1622, 1626, 1628, 1635, 1636, 1649, 1652, 1655, 1704, 1711, 1714, 1734, 1735, 1740, 1741, 1746, 1747, 1748, 1751, 1752, 1783, 1786, 1787, 1790, 1793, 1795, 1802, 1805, 1807, 1808, 1809, 1810, 1813, 1825, 1829, 1830, 1831, 1832, 1835, 1836, 1844, 1845, 1846, 1847, 1848, 1851, 1852, 1856, 1857, 1864, 1865, 1866, 1867, 1883, 1884, 1895, 1896, 1905, 1907, 1909, 1923, 1924, 1926, 1932], "integ": [14, 38, 41, 47, 58, 289, 444, 446, 448, 542, 557, 563, 682, 683, 684, 685, 686, 687, 763, 764, 782, 784, 862, 889, 918, 919, 928, 939, 963, 973, 975, 991, 997, 998, 1026, 1064, 1067, 1069, 1070, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1123, 1127, 1128, 1129, 1130, 1131, 1139, 1153, 1154, 1157, 1158, 1159, 1206, 1209, 1218, 1219, 1226, 1237, 1239, 1249, 1268, 1317, 1336, 1351, 1356, 1357, 1358, 1400, 1486, 1487, 1488, 1489, 1490, 1491, 1598, 1641, 1656, 1659, 1691, 1694, 1698, 1703, 1715, 1716, 1722, 1724, 1725, 1726, 1728, 1733, 1742, 1754, 1802, 1811, 1815, 1829, 1830, 1843, 1857, 1861, 1868, 1869, 1870, 1882, 1895, 1897, 1912, 1915, 1917, 1923, 1924, 1926, 1929, 1930, 1935], "opt": [14, 41, 45, 1207, 1685, 1686, 1692, 1696, 1698, 1866, 1897], "assume_static_by_default": 14, "yolo": 14, "automat": [14, 15, 16, 19, 28, 32, 39, 41, 46, 58, 59, 71, 151, 586, 886, 888, 1006, 1015, 1158, 1205, 1211, 1297, 1474, 1577, 1609, 1732, 1762, 1863, 1864, 1868, 1869, 1877, 1878, 1882, 1883, 1889, 1890, 1892, 1894, 1900, 1902, 1907, 1911, 1912, 1914, 1915, 1919, 1928, 1929, 1931], "torch_log": [14, 677, 1875], "torchinductor": [14, 19, 25, 677, 1864, 1875], "decomposit": [14, 15, 27, 47, 71, 941, 1141, 1225, 1226, 1231, 1232, 1233, 1234, 1235, 1237, 1242, 1243, 1244, 1245, 1250, 1254, 1255, 1259, 1260, 1285, 1287, 1615, 1701, 1703, 1707, 1713, 1814, 1815, 1864, 1903], "written": [14, 19, 22, 27, 28, 41, 51, 68, 913, 1028, 1365, 1663, 1683, 1866, 1868, 1876, 1877, 1889, 1893, 1894, 1895, 1900, 1905, 1907, 1911, 1913, 1925, 1928], "fulli": [14, 20, 30, 32, 38, 41, 45, 46, 67, 71, 677, 1032, 1196, 1424, 1425, 1426, 1428, 1865, 1869, 1875, 1894, 1911, 1914], "hint": [14, 20, 677, 970, 1004, 1197, 1434, 1472, 1473, 1474, 1475, 1866, 1868, 1869, 1892], "consult": [14, 1911], "greatli": [14, 32, 71, 1892], "formula": [14, 47, 89, 765, 766, 886, 888, 919, 928, 1153, 1154, 1221, 1287, 1288, 1442, 1495, 1496, 1584, 1683, 1716, 1894, 1897, 1913, 1918], "flatten": [14, 39, 63, 71, 871, 872, 1058, 1158, 1252, 1265, 1479, 1655, 1662, 1666, 1714, 1730, 1735, 1740, 1845, 1846, 1847, 1867, 1882, 1883, 1887, 1907, 1909, 1916, 1927], "awai": [14, 39, 71, 953, 1527, 1864, 1883, 1889, 1895], "bailout": [14, 1909], "express": [14, 16, 28, 30, 43, 64, 68, 69, 71, 319, 1194, 1197, 1810, 1870, 1877, 1884, 1889, 1894, 1934], "meta": [14, 15, 17, 19, 27, 63, 67, 71, 336, 1873, 1919, 1928, 1930], "workflow": [14, 15, 22, 23, 24, 33, 1863, 1894, 1914, 1915, 1931], "shapeenv": [14, 15], "attach": [14, 66, 70, 71, 140, 709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 730, 790, 835, 837, 861, 1599, 1863, 1866, 1868, 1882, 1889, 1894, 1914, 1920, 1932], "faketensormod": [14, 15], "knob": [14, 1892], "faithfulli": 14, "export": [14, 21, 27, 33, 35, 41, 48, 61, 88, 913, 972, 1199, 1201, 1207, 1213, 1642, 1643, 1661, 1662, 1663, 1665, 1666, 1864, 1866, 1868, 1869, 1894, 1908, 1909, 1913, 1914, 1919], "sympi": 14, "induc": [14, 897, 1527, 1565, 1887], "simplif": [14, 43], "assert": [14, 27, 28, 38, 39, 47, 65, 67, 68, 69, 71, 621, 908, 910, 911, 952, 1127, 1129, 1130, 1131, 1132, 1135, 1136, 1137, 1194, 1199, 1200, 1205, 1664, 1856, 1868, 1870, 1894, 1895, 1900, 1911, 1914, 1930], "s0": [14, 28], "occurr": [14, 63, 402, 1194, 1296, 1641, 1846, 1847], "reusabl": 14, "c10": [14, 58, 1899], "symfloat": [14, 1818, 1819, 1931], "symbool": [14, 1822, 1931], "plumb": 14, "symnodeimpl": 14, "csrc": [14, 1906], "python_symnod": 14, "init": [14, 41, 49, 51, 63, 1196, 1428, 1436, 1455, 1648, 1864, 1871, 1889, 1894, 1899, 1900], "_subclass": [14, 15], "fake_tensor": [14, 15], "_meta_registr": 14, "decomp": [14, 15], "primtorch": [14, 15, 19], "ref": [14, 20, 28, 1863], "visibl": [14, 17, 32, 41, 43, 55, 994, 1039, 1429, 1430, 1438, 1439], "simul": [14, 47, 796, 798, 1914, 1917], "counterpart": [14, 854, 861, 1265, 1608, 1869, 1877, 1931, 1932], "symnod": 14, "eras": [14, 71], "mix": [14, 25, 32, 39, 47, 63, 1015, 1608, 1864, 1889, 1891, 1914, 1923], "xla": [14, 1864], "far": [14, 59, 1205, 1527], "vice": [14, 71, 457, 600, 1121, 1122, 1420, 1889, 1917, 1925], "versa": [14, 71, 457, 600, 1121, 1122, 1420, 1889, 1917, 1925], "fairli": [14, 1912], "apparatu": 14, "traceabl": [14, 19, 71, 621, 814, 1866, 1914], "make_fx": [14, 28, 1126], "aka": [14, 41, 914, 1389, 1889, 1926], "aris": [14, 47, 71, 1889], "emerg": [14, 1906], "illeg": [14, 63, 1892], "enhanc": [14, 41, 63, 1608], "precomput": 14, "empty_strid": [14, 1865, 1867, 1871, 1909], "eagerli": [14, 1001, 1007, 1892], "needlessli": [14, 1892], "nontrivi": [14, 41, 1892], "lazi": [14, 961, 1208, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1599, 1864], "constrain_rang": 14, "wherebi": 14, "trash": 15, "bad": [15, 71, 1881, 1907, 1911, 1914], "accur": [15, 21, 51, 972, 1149, 1271, 1370, 1720, 1835, 1892, 1920], "suppos": [15, 17, 41, 71, 1193, 1698, 1876, 1923], "val": [15, 20, 1012, 1202, 1867, 1869, 1887], "stuff": [15, 71], "probabl": [15, 16, 17, 23, 38, 155, 757, 920, 1157, 1273, 1318, 1336, 1340, 1344, 1351, 1364, 1366, 1367, 1368, 1369, 1373, 1380, 1382, 1398, 1434, 1435, 1443, 1499, 1510, 1511, 1512, 1513, 1514, 1515, 1520, 1529, 1539, 1562, 1577, 1713, 1881, 1894, 1906, 1907, 1924, 1928], "wouldn": [15, 1921], "alias": [15, 63, 892, 1126, 1137, 1538, 1856, 1868, 1869, 1873, 1894], "almost": [15, 1242, 1243, 1906], "subclass_zoo": 15, "subgraph": [15, 18, 28, 950, 1665, 1889, 1893, 1907, 1911, 1933], "possibli": [15, 38, 58, 63, 1196, 1211, 1238, 1243, 1428, 1608, 1866, 1873, 1904, 1911], "bunch": 15, "from_real_tensor": 15, "memo": [15, 1196, 1428], "fakeifi": 15, "alia": [15, 43, 47, 52, 92, 93, 112, 188, 189, 353, 406, 435, 436, 443, 538, 679, 863, 864, 865, 866, 867, 868, 869, 886, 946, 959, 960, 1055, 1062, 1065, 1076, 1077, 1078, 1080, 1081, 1107, 1142, 1150, 1151, 1163, 1164, 1165, 1174, 1194, 1196, 1222, 1223, 1230, 1246, 1250, 1253, 1281, 1291, 1292, 1302, 1319, 1321, 1331, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1428, 1538, 1611, 1641, 1657, 1700, 1705, 1708, 1743, 1766, 1781, 1784, 1786, 1812, 1816, 1817, 1836, 1842, 1860, 1865, 1869, 1894, 1909, 1924, 1925, 1929], "faketensor": 15, "turn": [15, 18, 19, 20, 32, 38, 68, 71, 677, 870, 950, 1184, 1211, 1472, 1474, 1796, 1797, 1798, 1799, 1800, 1801, 1876, 1889, 1892, 1903, 1904, 1907, 1913, 1914, 1920, 1923], "__torch_dispatch__": 15, "dispatch_devic": 15, "lie": [15, 1461, 1463, 1583, 1793, 1924, 1928], "prone": [15, 1881, 1902], "earli": [15, 20, 35, 39, 49, 70, 1367, 1368, 1369, 1373, 1864, 1914, 1915, 1932, 1933], "ly": 15, "whatev": [15, 16, 60, 71, 447, 1608, 1753, 1837, 1869, 1895], "derefer": 15, "pointer": [15, 35, 140, 987, 1444, 1892, 1893, 1899, 1919, 1921], "segfault": [15, 1881, 1903], "backtrac": 15, "unexpect": [15, 16, 20, 41, 48, 71, 969, 1120, 1122, 1125, 1196, 1428, 1650, 1666, 1805, 1866, 1889, 1894, 1903], "reinterpret": [15, 47, 497], "magic": [15, 1867, 1870, 1931], "in_kernel_invocation_manag": 15, "underli": [15, 20, 41, 43, 45, 47, 49, 63, 68, 71, 98, 311, 326, 377, 400, 402, 472, 473, 474, 475, 482, 497, 518, 521, 554, 555, 556, 610, 745, 754, 875, 972, 1166, 1170, 1196, 1267, 1327, 1570, 1731, 1834, 1848, 1866, 1869, 1884, 1892, 1896, 1898, 1912, 1919, 1925, 1927], "unwrap": 15, "promot": [15, 63, 682, 923, 926, 935, 1012, 1064, 1112, 1114, 1115, 1116, 1117, 1317, 1367, 1368, 1369, 1373, 1509, 1712, 1732, 1733, 1739, 1754, 1811, 1865, 1869, 1926, 1930], "test_fake_tensor": 15, "fake_mod": 15, "fake_x": 15, "fake_i": 15, "fake_z": 15, "pre": [15, 23, 28, 33, 41, 45, 63, 71, 904, 911, 1196, 1428, 1603, 1605, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1663, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1686, 1692, 1863, 1866, 1869, 1877, 1889, 1891, 1900, 1907, 1912, 1929], "aotautograd": [15, 16, 17, 19, 28, 67, 677, 1875, 1893, 1908], "_guard": 15, "detect_fake_mod": 15, "fake_arg": 15, "lifecycl": [15, 20], "proxy_tensor": [15, 28, 1126], "maybe_disable_fake_tensor_mod": 15, "nich": 15, "faketensorprop": 15, "fake_tensor_prop": 15, "real_input": [15, 1892], "popul": [15, 27, 41, 47, 56, 63, 70, 71, 335, 493, 501, 502, 1296, 1324, 1892], "propagate_dont_convert_input": 15, "fake_input": 15, "real_tensor": 15, "t_": [15, 1297, 1377, 1523, 1687, 1688, 1867, 1923], "opportun": [15, 16, 1226, 1866, 1920], "conserv": [15, 1873, 1876, 1892], "annoi": 15, "practic": [15, 16, 38, 41, 47, 63, 1864, 1866, 1876, 1881, 1883, 1889, 1894, 1897, 1900, 1905, 1911, 1919], "feed": [15, 71, 1866, 1896, 1900, 1932], "somehow": 15, "fakecopymod": 15, "gave": 15, "fakeif": 15, "face": [15, 1894, 1911, 1928], "invalid": [15, 20, 51, 56, 953, 1196, 1318, 1428, 1888, 1889, 1907, 1911, 1912], "old": [15, 20, 41, 48, 71, 851, 1120, 1368, 1660, 1697, 1745, 1862, 1864, 1866, 1889, 1892, 1894, 1906, 1914, 1928], "tension": 15, "seriou": [15, 1881, 1892], "analys": 15, "occasion": [15, 1892, 1923], "mistak": [15, 1869, 1896], "redispatch": 15, "lift": [15, 69, 1137, 1856, 1883, 1909], "recogn": [15, 38, 1869, 1919, 1923], "notimpl": [15, 1869, 1870, 1894], "hopefulli": 15, "desugar": [15, 1869], "plain": [15, 32, 1345, 1429, 1438, 1615, 1798, 1894, 1923], "infinit": [15, 38, 1188, 1268, 1344, 1351, 1511, 1707, 1894, 1903, 1919], "fastpath": [15, 1434], "certain": [15, 16, 20, 22, 28, 38, 39, 41, 55, 56, 68, 70, 71, 683, 686, 732, 918, 930, 994, 1057, 1171, 1193, 1196, 1203, 1267, 1290, 1300, 1356, 1357, 1358, 1359, 1360, 1361, 1381, 1399, 1415, 1428, 1434, 1479, 1528, 1539, 1541, 1654, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1869, 1876, 1883, 1889, 1890, 1892, 1894, 1899, 1900, 1903, 1907, 1912, 1913, 1919, 1920, 1923], "custom_op": [15, 1907], "impl_abstract": 15, "hardcod": 15, "nor": [15, 38, 41, 49, 63, 792, 896, 1231, 1232, 1259, 1434, 1475, 1608, 1655, 1712, 1814, 1894, 1907], "sensit": [15, 39, 1389, 1459, 1907, 1911, 1920], "carefulli": [15, 17, 67, 70, 1895, 1911], "leaf": [15, 55, 151, 223, 335, 447, 501, 502, 788, 835, 837, 876, 890, 1135, 1665, 1828, 1884, 1888, 1889, 1907, 1933], "ness": [15, 59], "whole": [15, 20, 23, 24, 38, 41, 43, 1137, 1196, 1428, 1456, 1467, 1608, 1856, 1889, 1893, 1902, 1903, 1911], "bulk": [15, 38], "metaconvert": 15, "pointwis": [15, 18, 19, 22, 47, 950, 1130, 1131, 1273, 1274, 1394, 1882, 1890], "impli": [15, 39, 58, 63, 1881, 1889, 1907, 1912, 1917, 1919], "ti": [15, 1125, 1650, 1742], "die": 15, "unback": 15, "symint": [15, 1818, 1819, 1820, 1821, 1822, 1865, 1931], "memoiz": [15, 47], "colab": [15, 1873, 1911], "mark": [16, 17, 43, 58, 70, 71, 823, 894, 895, 953, 1309, 1310, 1608, 1665, 1866, 1868, 1889, 1893, 1894, 1900, 1911, 1913, 1920, 1929], "saroufim": 16, "evalfram": 16, "min": [16, 38, 41, 51, 58, 71, 117, 186, 187, 188, 189, 300, 692, 693, 694, 755, 767, 768, 777, 799, 816, 817, 818, 819, 822, 872, 945, 946, 1012, 1049, 1083, 1084, 1156, 1227, 1241, 1242, 1248, 1252, 1254, 1259, 1265, 1285, 1318, 1350, 1387, 1414, 1416, 1436, 1448, 1455, 1501, 1538, 1542, 1571, 1573, 1578, 1596, 1682, 1687, 1688, 1697, 1701, 1703, 1713, 1814, 1838, 1839, 1840, 1841, 1865, 1867, 1879, 1882, 1907, 1909, 1914, 1917, 1919, 1935], "partit": [16, 27, 45, 46, 1336, 1835, 1907, 1909, 1912, 1920, 1921], "usercod": 16, "ddp": [16, 41, 42, 43, 45, 63, 1467, 1608, 1864, 1892, 1893, 1919], "unrol": [16, 1868, 1869, 1907], "fsdp": [16, 43, 46, 63, 1864], "modif": [16, 19, 33, 63, 71, 222, 777, 894, 1121, 1122, 1196, 1428, 1608, 1889, 1894, 1900, 1911, 1914], "delai": [16, 1608, 1921], "outlin": [16, 42, 1912, 1920], "bucket": [16, 28, 39, 45, 1336, 1608, 1867, 1893, 1909], "broadcast": [16, 41, 45, 47, 63, 68, 98, 197, 398, 400, 401, 402, 511, 513, 515, 563, 682, 683, 684, 685, 686, 687, 688, 694, 732, 881, 918, 923, 926, 930, 931, 932, 933, 963, 983, 1012, 1063, 1064, 1069, 1074, 1114, 1115, 1116, 1117, 1138, 1140, 1152, 1162, 1220, 1221, 1228, 1241, 1245, 1250, 1251, 1253, 1256, 1264, 1284, 1289, 1290, 1300, 1317, 1320, 1329, 1332, 1345, 1363, 1382, 1434, 1500, 1509, 1571, 1608, 1666, 1702, 1710, 1733, 1735, 1811, 1830, 1835, 1859, 1864, 1865, 1869, 1882, 1883, 1884, 1893, 1907, 1909, 1924], "fraction": [16, 38, 47, 1039, 1112, 1118, 1313, 1359, 1360, 1361, 1376, 1377, 1434, 1475, 1522, 1523, 1625, 1626, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1714, 1887], "rob": 16, "fusion": [16, 18, 19, 27, 28, 71, 789, 811, 857, 858, 950, 1198, 1204, 1209, 1210, 1211, 1212, 1877, 1900, 1914], "diminish": 16, "vast": 16, "nopython": [16, 19, 20, 28], "250k": 16, "aitempl": 16, "fuse": [16, 18, 19, 27, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 789, 790, 799, 801, 802, 803, 811, 844, 856, 857, 950, 1209, 1210, 1577, 1670, 1671, 1877, 1882, 1907, 1910, 1914, 1915, 1916, 1917], "mobil": [16, 1877, 1914], "ran": [16, 23, 28, 35, 63], "fine": [16, 32, 41, 43, 45, 48, 855, 858, 1120, 1211, 1577, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1863, 1864, 1881, 1889, 1892, 1894, 1907, 1911, 1912, 1914], "succeed": [16, 49, 58, 73, 75, 1285], "aot_eag": [16, 28], "warn": [16, 17, 20, 21, 28, 32, 35, 39, 41, 45, 63, 677, 898, 904, 940, 952, 953, 981, 1028, 1032, 1043, 1046, 1047, 1137, 1177, 1211, 1253, 1297, 1434, 1472, 1473, 1474, 1475, 1617, 1620, 1756, 1764, 1849, 1856, 1863, 1875, 1879, 1890, 1894, 1909, 1911, 1918], "torchdynamo_debug_funct": [16, 28], "desired_function_nam": 16, "replay_record_en": [16, 28], "hundr": [16, 28, 1888, 1899], "thousand": [16, 28], "highli": [16, 58, 1336, 1608, 1863, 1901, 1907, 1923, 1930], "tini": [16, 22, 1929, 1930, 1935], "torchdynamo_repro_aft": [16, 28], "aot": [16, 17, 28, 677, 952, 1875], "your_model": 16, "quickest": 16, "repro": [16, 28, 1665], "torchdynamo_repro_dir": 16, "nvfuser": [16, 19, 28, 1866], "leverag": [16, 18, 950, 1919], "compile_tim": [16, 28], "torch_compile_debug": [16, 19], "_inductor": [16, 18, 21, 28, 950], "diagram": [16, 28, 49, 58, 1196, 1428, 1914, 1921], "guard": [16, 23, 25, 28, 49, 677, 1864, 1875, 1902, 1909, 1911, 1931, 1934], "cache_size_limit": [16, 20, 28], "troubl": [16, 17, 28], "compileprofil": [16, 28], "profiler_model": [16, 28], "upcom": [16, 28, 41, 63, 1888], "tune": [16, 28, 39, 41, 45, 1026, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1889, 1892, 1901, 1914], "traffic": 16, "frozen_toy_exampl": 16, "vertic": [16, 1857, 1858, 1910, 1912, 1928], "cosin": [16, 680, 681, 965, 966, 1362, 1363, 1509, 1687, 1688, 1695, 1773, 1910], "horizont": [16, 948, 1159, 1161, 1910, 1912], "simplest": [16, 20, 21, 38, 43, 49, 71, 855, 1341, 1342, 1343, 1356, 1357, 1358, 1421, 1422, 1423, 1618, 1893, 1894, 1900, 1914, 1921, 1923], "schedul": [16, 43, 49, 51, 57, 63, 70, 677, 1681, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1875, 1893, 1899, 1913], "physic": [16, 59, 1087, 1105, 1870, 1891, 1923], "principl": [16, 1892], "stream": [16, 38, 41, 49, 56, 63, 70, 151, 485, 890, 904, 970, 971, 972, 973, 976, 977, 978, 986, 989, 990, 1004, 1010, 1042, 1045, 1309, 1310, 1315, 1663, 1735, 1864, 1867, 1869, 1919], "multiprocessor": 16, "tile": [16, 491, 1867, 1909], "some_fun": [16, 28], "insurmount": [16, 28], "invis": [16, 28, 1892], "introduc": [16, 21, 23, 28, 35, 47, 68, 757, 1268, 1380, 1398, 1443, 1538, 1740, 1863, 1869, 1890, 1893, 1901, 1907, 1911, 1912, 1913, 1919, 1929], "maxim": [16, 28, 871, 1293, 1424, 1425, 1426, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1681, 1682, 1683, 1684, 1923], "explain": [16, 28, 33, 41, 1684, 1863, 1869, 1888, 1892, 1895], "aggreg": [16, 28, 39, 41, 43, 51, 63, 1372, 1519, 1608, 1631, 1879, 1912], "woo": [16, 28], "out_guard": [16, 28], "ops_per_graph": [16, 28], "builtinvari": [16, 28], "constantvari": [16, 20, 28], "t2": [16, 28, 48, 684, 685, 877, 1120, 1149, 1608, 1919, 1920], "generic_jump": [16, 28], "17": [16, 28, 32, 41, 682, 1193, 1248, 1425, 1787, 1866, 1907, 1909, 1923], "throw": [16, 19, 28, 41, 42, 46, 63, 70, 71, 191, 323, 328, 542, 611, 1181, 1196, 1236, 1285, 1428, 1608, 1610, 1611, 1644, 1655, 1709, 1849, 1884, 1889, 1904, 1919, 1929], "fullgraph": [16, 18, 28, 950], "went": [16, 41, 71], "torchdynamo_dynamic_shap": 16, "cv": 16, "nlp": [16, 39, 1391, 1392, 1393, 1400], "client": [16, 41, 45, 58, 1026, 1911], "app": 16, "unnecessarili": 16, "cold": [16, 24], "metric": [16, 24, 44, 1018, 1020, 1026, 1697, 1879, 1900, 1913, 1928], "visibli": 16, "torchdynamo_repro_level": [16, 28], "bisect": [16, 28], "codegen": [16, 22, 28, 71], "dramat": [16, 28], "impact": [16, 23, 28, 39, 41, 1026, 1757, 1877, 1879, 1889, 1914, 1927], "fallback_random": [16, 18, 28, 950], "alpha": [16, 47, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 152, 153, 312, 313, 551, 558, 559, 560, 561, 682, 683, 686, 687, 688, 741, 767, 772, 918, 1012, 1013, 1153, 1167, 1340, 1350, 1370, 1416, 1455, 1493, 1501, 1516, 1517, 1527, 1545, 1578, 1667, 1681, 1774, 1775, 1788, 1792, 1806, 1811, 1812, 1865, 1867, 1889, 1894, 1907, 1910], "root": [16, 41, 43, 51, 58, 59, 63, 71, 790, 1134, 1233, 1234, 1681, 1744, 1803, 1877, 1889, 1911, 1919, 1920, 1923], "allevi": [16, 1912], "cudagraph": [16, 18, 19, 22, 24, 950, 1004, 1864, 1892], "amen": 17, "portion": [17, 28, 63, 1118, 1365, 1459, 1567, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1915], "usecas": 17, "allow_in_graph": 17, "excel": [17, 71], "unblock": 17, "friendli": 17, "disallow": [17, 71, 1911, 1919, 1926], "nnthi": 17, "suitabl": [17, 38, 47, 934, 1215, 1684, 1749, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1903, 1913, 1915, 1928], "fbgemm": [17, 739, 740, 753, 761, 830, 852, 853, 856, 858, 859, 1914, 1915], "black": 17, "nnnote": 17, "screen": 17, "deploy": [17, 49, 58, 1864], "tl": [17, 19], "dr": 17, "intercept": [17, 63, 71], "a_fn": 17, "b_fn": 17, "aa_fn": 17, "ab_fn": 17, "green": [17, 1868, 1869], "color": [17, 1393, 1868, 1869, 1928], "white": 17, "offend": [17, 1863], "syntax": [17, 1196, 1866, 1869, 1911], "style": [17, 43, 46, 48, 71, 874, 1064, 1120, 1654, 1866, 1868, 1869, 1907, 1911, 1928], "miss": [17, 20, 56, 63, 686, 1125, 1196, 1290, 1300, 1362, 1391, 1392, 1393, 1428, 1544, 1650, 1906, 1907, 1908, 1923], "incorrectli": [17, 35, 63, 973, 1114], "cautiou": 17, "switch": [17, 30, 38, 66, 70, 71, 1238, 1239, 1240, 1368, 1527, 1565, 1612, 1745, 1849, 1881, 1889, 1892, 1900, 1910], "safeti": [17, 49, 71, 952, 953, 1866, 1869, 1883], "bypass": [17, 952, 1069, 1873, 1884, 1892], "sound": [17, 71, 952, 953, 1456, 1873, 1928], "inlin": [17, 32, 70, 1012, 1196, 1200, 1211, 1891], "begin": [17, 28, 35, 38, 39, 41, 42, 50, 58, 63, 71, 494, 757, 781, 817, 818, 862, 919, 963, 970, 1018, 1020, 1089, 1149, 1155, 1216, 1251, 1263, 1343, 1344, 1345, 1362, 1364, 1370, 1380, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1395, 1398, 1399, 1414, 1419, 1422, 1423, 1435, 1436, 1443, 1446, 1459, 1465, 1470, 1477, 1510, 1531, 1532, 1608, 1615, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1687, 1689, 1695, 1762, 1765, 1768, 1810, 1835, 1846, 1859, 1869, 1888, 1889, 1892, 1894, 1897, 1899, 1904, 1907, 1910, 1917, 1924], "deprec": [17, 41, 49, 58, 59, 63, 67, 406, 511, 554, 600, 782, 783, 784, 790, 823, 904, 905, 940, 941, 1019, 1023, 1142, 1196, 1250, 1253, 1285, 1286, 1344, 1345, 1362, 1364, 1387, 1388, 1394, 1395, 1419, 1420, 1428, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1481, 1482, 1499, 1500, 1510, 1539, 1562, 1570, 1596, 1597, 1598, 1600, 1608, 1649, 1650, 1655, 1713, 1729, 1810, 1814, 1837, 1864, 1866, 1871, 1881, 1890, 1913, 1917, 1925, 1929, 1930], "finer": [17, 46], "wishlist": 17, "cc": [17, 32, 41, 1892], "skipfiles_inline_module_allowlist": 17, "breadcrumb": 17, "forgot": 17, "autotun": [18, 21, 22, 950], "list_mode_opt": [18, 21, 950], "notabl": [18, 950, 1869], "epilogue_fus": [18, 950], "templat": [18, 950, 1012, 1013, 1910], "max_autotun": [18, 950], "shape_pad": [18, 950], "graph_diagram": [18, 950], "pictur": [18, 950], "list_opt": [18, 21, 950], "checkout": [19, 1907], "new_fn": 19, "input_tensor": [19, 41], "10000": [19, 35, 39, 691, 1695, 1742, 1896, 1900, 1923, 1928], "Its": [19, 41, 71, 968, 984, 1196, 1243, 1261, 1262, 1287, 1428, 1655, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1677, 1680, 1681, 1682, 1683, 1684, 1853, 1869, 1893], "famou": 19, "suboptim": [19, 39], "crucial": [19, 20, 21, 22, 33, 1873], "bottleneck": [19, 39, 1864, 1900], "bandwidth": [19, 22, 39, 41, 57, 59, 1914, 1919], "crunch": 19, "elimin": [19, 27, 41, 71, 607, 1846, 1847, 1904], "trig": 19, "size_hint": 19, "16384": [19, 1892], "filenam": [19, 32, 38, 71, 1195, 1203, 1206, 1863, 1867, 1878, 1889, 1911, 1925, 1928], "__file__": [19, 1863, 1906, 1911], "fp32": [19, 63, 778, 791, 814, 1054, 1608, 1892, 1903, 1914, 1915, 1917], "i32": 19, "instance_descriptor": 19, "divisible_by_16": 19, "equal_to_1": 19, "in_ptr0": 19, "out_ptr0": 19, "xnumel": 19, "xblock": 19, "constexpr": 19, "xoffset": 19, "program_id": 19, "xindex": 19, "reshap": [19, 33, 41, 47, 496, 497, 511, 541, 614, 689, 948, 1052, 1067, 1068, 1108, 1159, 1216, 1248, 1252, 1261, 1262, 1265, 1328, 1375, 1449, 1450, 1451, 1452, 1453, 1479, 1616, 1649, 1655, 1794, 1795, 1802, 1829, 1830, 1835, 1857, 1858, 1865, 1867, 1876, 1883, 1884, 1907, 1909, 1916, 1927, 1928], "xmask": 19, "x0": [19, 47], "tmp0": 19, "tmp1": 19, "tmp2": 19, "int32": [19, 192, 209, 313, 321, 325, 446, 614, 934, 1071, 1083, 1084, 1119, 1121, 1122, 1226, 1237, 1238, 1239, 1257, 1285, 1351, 1712, 1749, 1914, 1923, 1925, 1926, 1929, 1935], "temporari": [19, 32, 71, 820, 823, 1609, 1889, 1896], "held": [19, 70, 970, 994, 1022, 1306, 1888], "resnet50": [19, 1863, 1928], "hub": [19, 1864, 1878], "v0": 19, "resnet18": [19, 66, 71, 1863, 1866, 1868, 1878, 1911], "opt_model": 19, "64": [19, 66, 67, 69, 1130, 1131, 1135, 1333, 1334, 1335, 1337, 1338, 1339, 1345, 1456, 1577, 1750, 1884, 1906, 1907, 1914, 1918, 1923, 1926, 1928, 1929], "inspir": [19, 63, 1673, 1894], "frequent": [19, 21, 30, 43, 1336, 1864, 1903, 1905], "timm": [19, 21, 24], "download": [19, 1878, 1906, 1928], "huggingfac": [19, 21, 24], "berttoken": 19, "bertmodel": 19, "past": [19, 22, 24, 41, 71, 981, 1028, 1032, 1046, 1047, 1608, 1896], "bert": [19, 1474], "uncas": 19, "token": [19, 58, 970, 1004, 1005, 1863, 1870], "from_pretrain": [19, 1371, 1372], "me": 19, "encoded_input": 19, "return_tensor": 19, "pt": [19, 30, 39, 1201, 1203, 1206, 1213, 1267, 1745, 1866, 1900, 1905, 1911], "trigonometri": 19, "skim": 19, "create_model": 19, "resnext101_32x8d": 19, "7": [19, 24, 32, 38, 39, 41, 47, 71, 260, 313, 315, 317, 321, 401, 402, 470, 511, 557, 604, 614, 682, 694, 742, 743, 901, 903, 926, 929, 934, 940, 944, 948, 1052, 1064, 1066, 1067, 1070, 1085, 1108, 1109, 1112, 1115, 1119, 1149, 1159, 1173, 1217, 1221, 1231, 1236, 1238, 1239, 1242, 1243, 1247, 1248, 1252, 1259, 1326, 1327, 1328, 1334, 1335, 1338, 1339, 1341, 1352, 1371, 1416, 1424, 1425, 1449, 1450, 1451, 1452, 1453, 1479, 1494, 1565, 1633, 1638, 1648, 1655, 1673, 1720, 1724, 1730, 1740, 1741, 1742, 1749, 1762, 1765, 1767, 1778, 1779, 1787, 1794, 1796, 1797, 1802, 1814, 1816, 1817, 1824, 1829, 1830, 1833, 1835, 1844, 1853, 1857, 1866, 1870, 1876, 1883, 1884, 1890, 1892, 1894, 1903, 1905, 1907, 1909, 1914, 1923, 1926, 1927, 1928, 1929, 1930], "highest": [19, 677, 1336, 1724, 1725, 1757, 1915, 1930], "aot_ts_nvfus": 19, "nvprims_nvfus": 19, "onnxrt": 19, "ipex": 19, "tvm": 19, "apach": 19, "symbolic_trac": [19, 71], "partial": [19, 23, 47, 49, 58, 63, 66, 71, 838, 1015, 1059, 1136, 1149, 1242, 1243, 1244, 1286, 1424, 1425, 1426, 1554, 1555, 1556, 1608, 1627, 1794, 1869, 1870, 1883, 1889, 1894, 1897, 1907, 1921, 1930], "smoother": [19, 1863, 1876], "transit": [19, 20, 1196, 1297, 1428, 1810, 1864, 1866], "ux": [20, 64, 69], "perspect": [20, 1893, 1903, 1920], "fn_foo": 20, "grab": 20, "dig": 20, "hole": 20, "perf": [20, 22, 32, 677, 1914], "neutral": 20, "referenc": [20, 71, 973, 1196, 1428, 1837, 1868, 1889, 1907, 1919], "previous": [20, 23, 58, 63, 64, 67, 68, 69, 71, 222, 695, 789, 790, 1137, 1203, 1808, 1809, 1851, 1852, 1856, 1866, 1890, 1892, 1900, 1911, 1912, 1918, 1919, 1924], "translat": [20, 41, 86, 87, 1149, 1889, 1921], "check_fn": 20, "thrown": [20, 41, 46, 63, 70, 614, 875, 877, 1026, 1067, 1159, 1196, 1226, 1235, 1237, 1239, 1242, 1243, 1254, 1428, 1612, 1857, 1911], "_pyinterpreterstate_setevalframefunc": 20, "convert_fram": [20, 28], "convert_frame_assert": 20, "gloss": 20, "proxi": [20, 41, 43, 1914], "222": 20, "compiler_fn": 20, "one_graph": 20, "_convert_frame_assert": 20, "frametyp": 20, "cache_s": [20, 47], "f_code": 20, "unsupport": [20, 23, 68, 83, 1866, 1870, 1883, 1908, 1919, 1923], "drop": [20, 38, 67, 69, 71, 1015, 1201, 1254, 1259, 1340, 1650, 1810, 1866, 1883, 1902], "needless": 20, "evict": 20, "alongsid": [20, 32, 1196, 1428], "transform_code_object": 20, "output_instruct": 20, "rememb": [20, 1896, 1902], "guardedcod": 20, "symbolic_loc": 20, "f_local": 20, "travers": [20, 63, 833, 1608, 1893, 1894, 1920, 1932, 1933], "ordereddict": [20, 1196, 1428, 1429, 1438, 1456, 1599, 1631, 1867, 1900, 1905, 1930], "k": [20, 22, 28, 38, 41, 43, 47, 59, 71, 286, 354, 504, 511, 513, 515, 587, 614, 757, 943, 1056, 1069, 1125, 1138, 1158, 1217, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1240, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1268, 1286, 1290, 1341, 1343, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1376, 1377, 1380, 1381, 1398, 1399, 1413, 1415, 1416, 1421, 1423, 1434, 1435, 1443, 1445, 1510, 1522, 1523, 1545, 1562, 1577, 1615, 1701, 1703, 1713, 1741, 1791, 1792, 1793, 1794, 1796, 1797, 1798, 1800, 1801, 1810, 1832, 1837, 1865, 1867, 1868, 1887, 1892, 1894, 1906, 1923, 1924, 1926], "variablebuild": 20, "localsourc": 20, "_wrap": 20, "construct": [20, 32, 33, 38, 41, 43, 45, 46, 47, 58, 63, 65, 67, 68, 71, 151, 447, 789, 790, 821, 875, 876, 890, 904, 958, 1056, 1072, 1137, 1158, 1196, 1207, 1211, 1212, 1219, 1226, 1266, 1267, 1282, 1297, 1371, 1372, 1428, 1518, 1599, 1608, 1610, 1611, 1641, 1648, 1662, 1703, 1707, 1754, 1789, 1796, 1797, 1798, 1799, 1800, 1801, 1815, 1828, 1831, 1856, 1864, 1866, 1879, 1892, 1893, 1900, 1902, 1905, 1911, 1914, 1919, 1921, 1926, 1928, 1929, 1930], "variabletrack": 20, "make_guard": 20, "outputgraph": [20, 71], "mention": [20, 22, 28, 41, 63, 1863, 1868, 1869, 1883, 1889, 1892, 1900, 1907, 1923, 1927], "recal": [20, 1345, 1894, 1928], "heart": [20, 38], "pump": 20, "cool": 20, "get_instruct": 20, "124": 20, "opnam": 20, "argval": 20, "starts_lin": 20, "is_jump_target": 20, "littl": [20, 41, 1894, 1921], "hasattr": [20, 71, 1867, 1894, 1914], "inst": 20, "unimpl": 20, "getattr": [20, 71, 1867, 1894], "inde": [20, 23, 48, 1866, 1876, 1911, 1921], "onto": [20, 27, 41, 63, 71, 1031, 1203, 1206, 1267, 1620, 1863, 1881, 1892, 1895, 1896, 1900, 1913], "dozen": 20, "symbolic_convert": [20, 28], "spoken": 20, "quiet": 20, "closer": [20, 22, 1149, 1477, 1714, 1894, 1900], "mind": [20, 21, 1241, 1259, 1371, 1889, 1895, 1897], "replace_guard": 20, "add_guard": 20, "visit": [20, 22, 61, 1907], "act": [20, 43, 47, 49, 56, 68, 855, 1345, 1429, 1430, 1439, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1634, 1635, 1636, 1637, 1638, 1849, 1892, 1900, 1904, 1910], "behalf": 20, "python_typ": 20, "as_proxi": 20, "as_python_proxi": 20, "bookkeep": 20, "came": 20, "somewher": [20, 1883, 1899], "flesh": 20, "notimplementederror": [20, 47, 1911], "relianc": 20, "fulfil": [20, 1889, 1895, 1911], "build_tupl": 20, "gist": [20, 22, 67, 790, 1897], "notion": [20, 38, 905, 1346, 1347, 1348, 1391, 1392, 1393, 1467], "popn": 20, "tuplevari": 20, "pydoc": 20, "tensorvari": 20, "instructiontranslatorbas": 20, "pop": [20, 68, 1030, 1429, 1438, 1909, 1912, 1913], "dataclass": [20, 27, 43], "ctor": 20, "guardsourc": 20, "create_fn": 20, "kind": [20, 41, 52, 71, 677, 1215, 1609, 1665, 1712, 1777, 1863, 1873, 1894, 1902, 1907, 1911, 1914, 1924, 1926], "guard_sourc": 20, "elif": [20, 27, 71, 1202, 1394, 1662, 1868, 1869, 1898], "istyp": 20, "guardbuild": 20, "equals_match": 20, "rangevari": 20, "appar": 20, "checkfunctionmanag": 20, "compile_check_fn": 20, "cacheentri": 20, "create_cache_entri": 20, "pyobject": 20, "guarded_cod": 20, "malloc": [20, 63], "sizeof": [20, 1925], "debug_null_check": 20, "pyobject_getattrstr": 20, "null_check": 20, "pycodeobject": 20, "compos": [20, 23, 47, 67, 71, 735, 736, 737, 738, 739, 740, 763, 764, 769, 770, 771, 779, 780, 941, 943, 1127, 1129, 1130, 1131, 1137, 1196, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1376, 1377, 1396, 1397, 1416, 1421, 1422, 1423, 1428, 1476, 1481, 1482, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1545, 1548, 1549, 1551, 1552, 1553, 1718, 1719, 1856, 1864, 1865, 1866, 1869, 1882, 1894, 1895, 1900, 1907, 1911, 1928], "sort_kei": 20, "guard_nn_modul": 20, "is_nn_modul": 20, "local_build": 20, "global_build": 20, "___guarded_cod": 20, "___check_type_id": 20, "94367738391392": 20, "___check_tensor": 20, "id": [20, 24, 28, 35, 38, 41, 45, 49, 57, 58, 59, 63, 71, 771, 821, 970, 1005, 1467, 1553, 1592, 1608, 1665, 1869, 1899, 1907, 1909, 1911, 1918, 1919, 1920, 1925], "deeper": [20, 25, 1864, 1900, 1911], "dive": [20, 22, 25, 1864, 1893, 1897, 1911], "_eval_fram": 20, "anew": 20, "massiv": 20, "role": [20, 43, 49, 50, 58, 59], "weak": 20, "moduleinvalid": 20, "2x": [21, 22, 1928], "compress": [21, 24, 39, 63, 209, 584, 585, 1091, 1092, 1101, 1102, 1608, 1796, 1797, 1798, 1800, 1801, 1834, 1864], "varieti": [21, 1892, 1920], "announc": [21, 58], "compiled_fn": 21, "set_float32_matmul_precis": [21, 1145], "simpler": [21, 69, 1137, 1856, 1866, 1889, 1894, 1897, 1900], "bench_al": 21, "IF": 21, "odd": [21, 47, 1090, 1091, 1092, 1100, 1101, 1102, 1502, 1503, 1504], "quirk": 21, "ask": [21, 41, 67, 68, 1863, 1864, 1895, 1897], "overview": [21, 33, 41, 55, 1608, 1864, 1876, 1881, 1889, 1897, 1900, 1912, 1914, 1919], "nnmodul": 21, "torchinductor_unique_kernel_nam": 22, "triton_": 22, "envvar": 22, "meaning": [22, 49, 51, 52, 1026, 1892], "triton_poi_fused_cat_155": 22, "categori": [22, 23, 47, 51, 1318, 1869, 1871, 1907, 1910, 1913, 1915, 1926], "poi": 22, "torchinductor_benchmark_kernel": 22, "har": 22, "torchinductor_max_autotun": 22, "hope": [22, 1907], "mixnet_l": 22, "timm_model": 22, "amp": [22, 24, 28, 1015, 1864, 1888], "dashboard": [22, 25, 1864], "torchinductor_shunt": 22, "qz": 22, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 22, "shunting314": 22, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 22, "48efc83b12ec3ead950052e4a0220b10": 22, "p": [22, 39, 43, 47, 63, 71, 155, 234, 286, 424, 425, 452, 489, 490, 605, 683, 686, 918, 920, 930, 938, 1063, 1216, 1227, 1233, 1234, 1242, 1243, 1285, 1287, 1290, 1300, 1321, 1340, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1394, 1396, 1397, 1433, 1437, 1439, 1476, 1477, 1493, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1548, 1549, 1559, 1563, 1566, 1567, 1593, 1612, 1618, 1620, 1626, 1635, 1655, 1683, 1734, 1791, 1865, 1867, 1868, 1888, 1889, 1892, 1896, 1897, 1902, 1913, 1923, 1924], "8243734a38b5733ea78479209c0ae893": 22, "chrome": [22, 913, 1913], "compiled_module_profil": 22, "json": [22, 51, 56, 60, 1899, 1913], "browser": 22, "ui": [22, 24, 1897, 1928], "zoom": 22, "percent": [22, 1028, 1047], "regard": [22, 41, 1359, 1360, 1361, 1371, 1372, 1518, 1519, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1866, 1921, 1923], "102": [22, 1336], "88": 22, "distort": 22, "densenet121": 22, "69": 22, "58": [22, 41], "85": [22, 71, 1431, 1695], "89": [22, 614, 1721], "cutlass": 22, "cudnn": [22, 36, 37, 757, 1205, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1380, 1398, 1443, 1444, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1757, 1864, 1867, 1892, 1903, 1904], "conv": [22, 23, 71, 699, 700, 701, 702, 703, 704, 705, 706, 707, 789, 790, 793, 811, 851, 857, 1196, 1205, 1211, 1212, 1356, 1357, 1358, 1359, 1360, 1361, 1428, 1429, 1435, 1877, 1887, 1892, 1903, 1907, 1914, 1915, 1916, 1917], "56": [22, 737], "57": 22, "gain": [22, 1684, 1887], "effort": [22, 41, 1919], "nice": [22, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1421, 1422, 1423, 1479, 1883, 1889, 1911], "triton_red_fused__native_batch_norm_legit_functional_16": 22, "19": [22, 682, 743, 943, 1425, 1866, 1907, 1923], "jk": [22, 1069], "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 22, "renam": [22, 790, 1867, 1882, 1883, 1909], "96a0afef9dce53d6357bf1633094f358": 22, "standalon": [22, 32, 57, 58, 59, 814, 1207, 1211, 1866], "constabl": 23, "edg": [23, 776, 782, 1149, 1157, 1158, 1538, 1596, 1874, 1895, 1920], "orchestr": 23, "_forward_pre_hook": 23, "forward_hook": [23, 1900], "_backward_pre_hook": 23, "_backward_hook": 23, "_state_dict_hook": 23, "load_": 23, "alter": [23, 1888, 1894], "backward_hook": [23, 1900], "avoiabl": 23, "fire": [23, 1196, 1428, 1893, 1899], "presenc": [23, 68, 71, 1205, 1323, 1911, 1923], "opaqu": [23, 41, 48, 970, 1004, 1005, 1120], "skip_nnmodule_hook_guard": 23, "react": [23, 49], "pre_backward": 23, "accordingli": [23, 47, 71, 1205, 1398, 1620, 1884, 1919], "warn_onc": 23, "bin": [24, 49, 56, 58, 300, 301, 816, 921, 1156, 1157, 1158, 1867, 1869, 1909, 1928], "hui": 24, "nightli": 24, "gcp": [24, 41], "a100": [24, 28], "night": 24, "40gb": [24, 28], "2ghz": 24, "xeon": [24, 1864, 1891], "suit": [24, 41, 1866, 1868, 1869, 1907, 1915, 1919], "torchbench": 24, "trend": 24, "droplist": 24, "geometr": [24, 286, 776, 782, 1527, 1538, 1596, 1850, 1864, 1909, 1931], "peak": [24, 43, 45, 63, 1018, 1020, 1026, 1033, 1034, 1035, 1608, 1689, 1695, 1912], "footprint": [24, 39, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1892], "ratio": [24, 47, 49, 614, 1376, 1377, 1522, 1523, 1867], "click": [24, 1931], "with_cudagraph": 24, "kick": [24, 1893, 1919, 1920], "Be": [24, 1907], "wise": [24, 39, 41, 47, 684, 685, 695, 755, 767, 768, 777, 781, 881, 962, 1069, 1074, 1115, 1116, 1139, 1140, 1152, 1161, 1218, 1220, 1277, 1278, 1279, 1280, 1284, 1294, 1297, 1299, 1329, 1350, 1361, 1368, 1370, 1384, 1385, 1386, 1387, 1389, 1414, 1417, 1427, 1436, 1446, 1447, 1448, 1455, 1457, 1458, 1459, 1464, 1466, 1468, 1469, 1501, 1516, 1525, 1526, 1530, 1531, 1532, 1533, 1536, 1540, 1542, 1547, 1557, 1558, 1571, 1572, 1573, 1578, 1579, 1580, 1581, 1585, 1587, 1588, 1589, 1794, 1858, 1891, 1894, 1923, 1924, 1927], "pep": [25, 1866, 1868, 1907], "523": 25, "rewrit": [25, 43, 68, 83, 84, 1877, 1889, 1897, 1907], "customiz": [25, 1870, 1932], "usabl": [25, 28, 70, 1869, 1907], "openmp": [25, 1864, 1891, 1906], "video": [25, 1440, 1441, 1883, 1928], "topic": [25, 30, 1899, 1900], "vmap": [26, 64, 66, 67, 71, 898, 900, 904, 905, 906, 1127, 1130, 1131, 1133, 1135], "jacrev": [26, 65, 67, 68, 900, 1129, 1130, 1895], "100320": 26, "escap": 26, "hatch": 26, "introspect": [26, 71, 952], "jax": [26, 64, 67, 68, 69, 1889, 1895], "promis": 26, "pure": [26, 32, 33, 68, 1199, 1866], "relax": [26, 47, 1211, 1212, 1620, 1914], "pitfal": [26, 1864], "functional_cal": [26, 65, 67, 1135], "sit": 27, "replace_add_with_mul": 27, "insert": [27, 38, 41, 47, 63, 70, 71, 744, 789, 790, 858, 859, 1429, 1430, 1438, 1608, 1749, 1752, 1762, 1783, 1807, 1848, 1866, 1877, 1892, 1909, 1914], "insert_relu_after_add": 27, "inserting_aft": [27, 71], "new_relu_nod": 27, "replace_all_uses_with": [27, 71], "roughli": [27, 38, 1394, 1893], "axi": [27, 511, 513, 515, 819, 822, 960, 1068, 1083, 1109, 1138, 1161, 1715, 1735, 1740, 1741, 1858, 1865, 1867, 1895, 1907, 1912, 1914], "eg": [27, 934, 1742, 1749], "dead": [27, 71], "frequenc": [27, 59, 921, 968, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1193, 1336, 1371, 1372, 1518, 1519, 1689, 1810], "replaceaddwithmul": 27, "transformed_graph_modul": 27, "graph_modul": [27, 856], "replaceaddwithmulsub": 27, "mul_r": 27, "sub": [27, 51, 63, 70, 559, 811, 858, 859, 1207, 1211, 1212, 1293, 1296, 1298, 1440, 1441, 1471, 1472, 1474, 1734, 1812, 1829, 1863, 1865, 1866, 1867, 1882, 1884, 1889, 1907, 1909, 1923, 1926], "removedetachpass": 27, "detach_copi": [27, 1867, 1909], "len": [27, 38, 41, 43, 71, 219, 542, 692, 693, 1088, 1092, 1095, 1099, 1102, 1106, 1136, 1200, 1262, 1283, 1295, 1323, 1326, 1365, 1565, 1626, 1628, 1644, 1688, 1695, 1799, 1802, 1808, 1809, 1813, 1850, 1851, 1852, 1866, 1867, 1869, 1894, 1909, 1923, 1928], "args_map": 27, "schema": [27, 35, 41, 43, 1865, 1866, 1867, 1869, 1873, 1907], "enumer": [27, 38, 47, 71, 1196, 1428, 1430, 1439, 1688, 1867, 1868, 1888, 1892, 1906, 1928], "_schema": 27, "kwarg_onli": 27, "scalartotensorpass": 27, "breakpoint": [27, 71, 1869], "try_coerc": 27, "tensortyp": [27, 1869], "wildcard": [27, 1883, 1911], "subgraph_rewrit": [27, 71], "replace_pattern": 27, "replaced_pattern": 27, "replace_pattern_with_filt": 27, "traced_modul": [27, 71, 1905], "replacedpattern": 27, "nodes_map": [27, 71], "passmanag": 27, "blob": [27, 789, 1126, 1897, 1899, 1928], "infra": [27, 28, 51, 1908], "pass_manag": 27, "__": [27, 1870], "pm": 27, "replace_add_with_div": 27, "replace_div_with_mul": 27, "run_checks_after_each_pass": 27, "suppress_check_failur": 27, "graph_module_out": 27, "set_check": 27, "check_div_target": 27, "div": [27, 39, 236, 1065, 1114, 1117, 1336, 1440, 1441, 1733, 1842, 1865, 1867, 1873, 1882, 1909, 1923, 1926], "valueerror": [27, 70, 1194, 1620, 1621, 1641, 1644, 1894, 1912, 1930], "add_check": 27, "subgraphmatch": 27, "matcher_util": 27, "match_output": 27, "match_placehold": 27, "remove_overlapping_match": 27, "ignore_liter": 27, "liter": [27, 1664, 1867, 1870, 1883, 1911], "largemodel": 27, "_weight": [27, 742, 743, 1371, 1372], "_bia": 27, "large_model_graph": 27, "patternmodel": 27, "_weight_1": 27, "_bias_1": 27, "pattern_graph": 27, "subgraph_match": 27, "match_result": 27, "internalmatch": 27, "default_factori": 27, "placeholder_nod": 27, "returning_nod": 27, "largest": [27, 63, 587, 921, 1113, 1227, 1248, 1250, 1252, 1253, 1268, 1564, 1616, 1832, 1865, 1867, 1868, 1869, 1935], "capabilitybasedpartition": 27, "l34": 27, "operator_support": 27, "operatorsupportbas": 27, "allows_single_node_partit": 27, "non_compute_op": 27, "ex": [27, 50, 1608, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1879], "_oper": 27, "getitem": 27, "allowed_single_node_partition_op": 27, "ll28c1": 27, "l28c1": 27, "is_node_support": 27, "chain": [27, 38, 39, 47, 70, 71, 151, 890, 940, 1251, 1372, 1456, 1685, 1698, 1869, 1889, 1892, 1894, 1897, 1900, 1910], "operatorsuppportbas": 27, "l150": 27, "any_chain": 27, "l164": 27, "addmuloperatorsupport": 27, "capability_partition": 27, "op_support": 27, "partition_list": 27, "propose_partit": 27, "call_modul": [27, 71], "fused_graph_modul": 27, "fuse_partit": 27, "lazo": 28, "meantim": [28, 1344, 1345, 1362, 1364, 1388, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1499, 1500, 1510, 1539, 1562, 1570], "smallest": [28, 51, 939, 1217, 1227, 1248, 1252, 1268, 1712, 1832, 1930, 1935], "suspect": [28, 35, 1684, 1892], "taken": [28, 41, 47, 63, 70, 71, 862, 1090, 1092, 1115, 1116, 1351, 1364, 1372, 1435, 1511, 1519, 1762, 1794, 1887, 1889, 1891, 1892, 1894, 1896, 1899, 1905, 1907, 1911, 1913], "proce": [28, 1888, 1892, 1919], "sampl": [28, 38, 43, 47, 64, 69, 71, 89, 154, 155, 377, 453, 480, 605, 776, 920, 968, 981, 1015, 1028, 1032, 1046, 1047, 1087, 1105, 1127, 1137, 1149, 1193, 1212, 1285, 1318, 1340, 1344, 1345, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1382, 1388, 1391, 1392, 1393, 1394, 1395, 1413, 1415, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1446, 1459, 1460, 1467, 1476, 1492, 1499, 1500, 1510, 1512, 1513, 1514, 1515, 1518, 1519, 1520, 1524, 1527, 1529, 1537, 1538, 1539, 1562, 1570, 1608, 1616, 1656, 1688, 1703, 1706, 1720, 1722, 1724, 1726, 1728, 1792, 1808, 1809, 1810, 1851, 1852, 1856, 1864, 1879, 1887, 1888, 1892, 1899, 1900, 1911, 1914, 1915, 1928], "test_assertion_error": 28, "compiled_test_assertion_error": 28, "mlazo": 28, "837": 28, "build_map": 28, "assertionerror": [28, 71, 731, 1665, 1930], "fortun": [28, 1896], "isol": [28, 71, 1599, 1881, 1912], "test_backend_error": 28, "_foobar": [28, 1909], "dummi": [28, 38, 45, 1889, 1894, 1934], "compiled_test_backend_error": 28, "246": [28, 614], "185": [28, 614], "decomp_fn": 28, "810": 28, "repro_aft": 28, "nearli": [28, 151, 890, 904, 1703, 1902, 1919], "minifier_launch": 28, "base_dir": 28, "successfulli": [28, 41, 49, 55, 73, 74, 75, 1202, 1758, 1881, 1900, 1905, 1919], "runnabl": [28, 71, 1888, 1907, 1928], "rand_strid": 28, "0a0": 28, "gitfddfc44": 28, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 28, "nvcc": [28, 32, 1000], "2005": [28, 680, 1852], "2022": 28, "thu_feb_10_18": 28, "23": [28, 41, 511, 1268, 1773, 1866, 1923], "41_pst_2022": 28, "v11": 28, "112": [28, 614], "cuda_11": 28, "r11": 28, "30978841_0": 28, "sxm4": 28, "float32": [28, 38, 39, 267, 577, 614, 816, 817, 818, 819, 822, 823, 877, 958, 1083, 1084, 1121, 1143, 1145, 1178, 1332, 1345, 1480, 1481, 1482, 1494, 1670, 1671, 1707, 1712, 1720, 1724, 1739, 1754, 1755, 1757, 1799, 1854, 1884, 1888, 1892, 1903, 1907, 1916, 1924, 1925, 1926, 1929, 1930, 1935], "compile_fx": 28, "compile_fx_inn": 28, "walk": [28, 33, 71, 1873, 1894, 1911, 1920, 1921, 1927], "toi": [28, 55], "toy_compil": 28, "debug_util": 28, "run_fwd_maybe_bwd": 28, "opt_mod": 28, "sh": [28, 765, 766, 770, 771, 1495, 1496, 1503, 1504, 1506, 1507, 1552, 1553], "st": [28, 1496, 1504, 1507, 1553], "dt": [28, 1504, 1507, 1924], "requires_grad_": [28, 335, 447, 1196, 1351, 1428, 1511, 1791, 1828, 1867, 1882, 1889, 1929], "rg": 28, "autocast": [28, 1015, 1434, 1864, 1892], "test_model": 28, "layernorm": [28, 1383, 1391, 1392, 1393, 1471, 1475, 1541, 1884, 1916], "overridden": [28, 32, 71, 886, 887, 888, 1012, 1428, 1789, 1869, 1889, 1894, 1903, 1912, 1934], "debug_dir_root": 28, "torch_compile_debug_dir": 28, "timestamp": [28, 51, 52, 55, 59, 1879, 1913, 1928], "cd": [28, 1906, 1911, 1913], "l": [28, 47, 732, 757, 919, 928, 934, 941, 942, 1069, 1153, 1154, 1196, 1215, 1225, 1226, 1231, 1232, 1233, 1234, 1238, 1242, 1243, 1285, 1287, 1341, 1344, 1345, 1346, 1356, 1364, 1367, 1368, 1375, 1380, 1388, 1389, 1391, 1394, 1395, 1398, 1410, 1419, 1421, 1428, 1430, 1434, 1435, 1443, 1459, 1476, 1477, 1479, 1577, 1626, 1635, 1643, 1645, 1673, 1749, 1810, 1867, 1869, 1889, 1928], "run_2023_03_01_08_20_52_143510": 28, "pid_180167": 28, "subfold": [28, 32], "artifact": [28, 677, 1875, 1899, 1911], "model__0_forward_1": 28, "aot_model___0_debug": 28, "fx_graph_read": 28, "fx_graph_runn": 28, "fx_graph_transform": 28, "ir_post_fus": 28, "txt": [28, 1203, 1206, 1911], "ir_pre_fus": 28, "fx_graph": 28, "buf1": 28, "schedulernod": 28, "computedbuff": 28, "memorydep": 28, "unmet_depend": 28, "buf0": 28, "c0": [28, 731, 759, 1398], "met_depend": 28, "primals_2": 28, "buf1_loop_bodi": 28, "var_rang": 28, "z0": 28, "index0": 28, "index1": 28, "bodi": [28, 71, 1207, 1866, 1868, 1869, 1870], "get_index": 28, "get_index_1": 28, "load_1": 28, "get_index_2": 28, "compiled_fun": 28, "hinder": 28, "break_reason": 28, "explanation_verbos": 28, "sublist": [28, 1069], "succe": [28, 41, 46, 58, 68, 1892, 1894, 1906], "compiled_toi": 28, "outweigh": [28, 1684], "readm": [28, 53, 54, 789, 1884], "verify_instal": 28, "log_fil": 28, "bj": 30, "j": [30, 41, 47, 313, 315, 321, 511, 513, 515, 689, 892, 898, 900, 958, 1069, 1085, 1086, 1093, 1099, 1103, 1104, 1138, 1193, 1196, 1231, 1232, 1243, 1259, 1268, 1275, 1283, 1285, 1290, 1367, 1368, 1369, 1373, 1428, 1431, 1513, 1514, 1515, 1520, 1707, 1714, 1793, 1810, 1814, 1853, 1868, 1887, 1889, 1894, 1897, 1905, 1928], "imaginari": [30, 311, 905, 958, 964, 1090, 1092, 1100, 1101, 1102, 1166, 1186, 1188, 1189, 1192, 1810, 1854, 1855, 1870, 1889, 1897, 1930], "satisfi": [30, 36, 39, 47, 614, 691, 757, 791, 899, 905, 906, 934, 1085, 1086, 1088, 1090, 1092, 1100, 1101, 1102, 1117, 1209, 1235, 1261, 1262, 1336, 1351, 1375, 1380, 1398, 1443, 1631, 1648, 1733, 1749, 1789, 1810, 1869, 1889, 1892, 1897, 1910, 1912, 1923, 1926], "equat": [30, 943, 1069, 1141, 1153, 1239, 1240, 1241, 1242, 1243, 1245, 1256, 1258, 1344, 1775, 1837, 1867, 1889, 1897, 1910, 1924], "mathemat": [30, 46, 71, 898, 899, 900, 901, 902, 903, 1117, 1149, 1344, 1346, 1347, 1348, 1391, 1392, 1393, 1394, 1467, 1546, 1584, 1608, 1655, 1733, 1791, 1792, 1869, 1889, 1903, 1924, 1931], "tradition": 30, "torchaudio": [30, 1864], "mimick": 30, "assembli": 30, "lapack": [30, 942, 1141, 1226, 1237, 1238, 1239, 1241, 1244, 1257, 1713, 1814], "spectral": [30, 1215, 1231, 1259, 1616, 1639, 1649, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1903], "fft": [30, 1864, 1892], "4621": 30, "0303j": 30, "2438": [30, 1241, 1518], "5874j": 30, "7706": 30, "1421j": 30, "2110": 30, "1918j": 30, "complex128": [30, 176, 958, 1112, 1121, 1175, 1196, 1225, 1226, 1231, 1232, 1233, 1234, 1235, 1236, 1356, 1357, 1358, 1428, 1502, 1503, 1504, 1664, 1707, 1754, 1925, 1926, 1929, 1930], "complex64": [30, 179, 958, 1086, 1088, 1089, 1094, 1095, 1121, 1175, 1227, 1250, 1253, 1356, 1357, 1358, 1502, 1503, 1504, 1664, 1707, 1754, 1925, 1926, 1929, 1930], "apart": [30, 1869, 1889], "linspac": [30, 921, 945, 1090, 1100, 1297, 1867, 1871, 1909], "logspac": [30, 1867, 1871, 1909], "view_as_r": [30, 1810, 1867, 1909, 1927], "6125": 30, "1681": 30, "3773": 30, "3487": 30, "0861": 30, "7981": 30, "1681j": 30, "3487j": 30, "7981j": 30, "mul_": [30, 1867, 1882, 1884, 1923], "2250": [30, 1252, 1655], "7546": [30, 943], "1722": 30, "x1": [30, 938, 1243, 1363, 1420, 1476, 1477, 1509, 1566, 1867], "3j": [30, 41, 695, 961, 962, 1737, 1738, 1754], "4j": [30, 41, 1765], "0000": [30, 47, 511, 862, 898, 900, 921, 941, 945, 964, 1050, 1056, 1057, 1058, 1083, 1084, 1087, 1089, 1090, 1096, 1097, 1100, 1105, 1117, 1118, 1119, 1149, 1155, 1158, 1162, 1221, 1224, 1225, 1226, 1238, 1239, 1242, 1247, 1248, 1252, 1254, 1266, 1282, 1323, 1371, 1372, 1480, 1481, 1483, 1484, 1518, 1519, 1655, 1707, 1713, 1718, 1719, 1720, 1729, 1733, 1734, 1758, 1765, 1767, 1768, 1770, 1773, 1774, 1775, 1776, 1792, 1837, 1838, 1840, 1859, 1876, 1884, 1892, 1923, 1924, 1929], "6569": [30, 1162], "5708": [30, 1053], "7854": 30, "complex_tensor": 30, "conjug": [30, 330, 457, 689, 905, 943, 961, 962, 1176, 1225, 1226, 1232, 1235, 1238, 1245, 1259, 1264, 1268, 1615, 1701, 1737, 1810, 1814, 1853, 1897, 1910, 1929], "wirting": [30, 905, 1897], "deriv": [30, 41, 63, 151, 735, 736, 737, 738, 739, 740, 778, 797, 821, 890, 904, 905, 906, 1132, 1136, 1149, 1193, 1253, 1285, 1475, 1599, 1864, 1868, 1894, 1895, 1897, 1919, 1923, 1924], "steepest": [30, 1889], "descent": [30, 47, 1667, 1683, 1687, 1688, 1889, 1900], "quantiz": [30, 71, 220, 326, 338, 471, 472, 473, 474, 475, 477, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 914, 1054, 1083, 1084, 1715, 1716, 1717, 1718, 1719, 1864, 1909, 1926, 1929, 1930, 1932, 1933], "parallel_info": [31, 1864, 1891], "cppextens": [32, 1864], "setuptool": 32, "bare": 32, "buildextens": [32, 1864], "ext_modul": 32, "extra_compile_arg": [32, 1906], "cmdclass": 32, "build_ext": 32, "cudaextens": [32, 1864], "cuda_extens": 32, "extension_kernel": 32, "cu": 32, "cxx": 32, "o2": 32, "arch": 32, "card": [32, 1906], "ptx": 32, "road": 32, "newest": [32, 67], "torch_cuda_arch_list": 32, "build_my_extens": 32, "older": [32, 1892, 1905, 1911], "modestli": [32, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684], "pars": [32, 41, 61, 912, 1869, 1911, 1919], "workaround": [32, 38, 71, 1200, 1863, 1904, 1907, 1914], "sigmoidalphablendforwardcuda": 32, "69460": 32, "facebookresearch": 32, "pytorch3d": 32, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 32, "relocat": 32, "link": [32, 33, 47, 71, 83, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1421, 1422, 1423, 1479, 1529, 1883, 1899, 1900, 1923], "rdc": 32, "dc": 32, "anymor": [32, 41, 63, 222], "dlto": 32, "dlink": 32, "protent": 32, "lib": [32, 1906], "nvshmem": 32, "ninja": [32, 1906], "dlink_librari": 32, "dlink_lib": 32, "std": [32, 49, 56, 89, 377, 453, 1083, 1084, 1115, 1116, 1117, 1656, 1707, 1733, 1772, 1777, 1809, 1847, 1865, 1867, 1882, 1887, 1892, 1899, 1906, 1909], "use_ninja": 32, "distutil": 32, "max_job": 32, "extra_cflag": 32, "extra_cuda_cflag": 32, "extra_ldflag": 32, "extra_include_path": 32, "build_directori": 32, "with_cuda": [32, 1906], "is_python_modul": 32, "is_standalon": 32, "keep_intermedi": 32, "torch_extens": 32, "torch_extensions_dir": 32, "o3": 32, "cuh": 32, "Such": [32, 38, 39, 70, 1850, 1923], "lib64": 32, "cudart": [32, 1906], "cuda_hom": 32, "safest": 32, "pybind11": [32, 33, 1868], "union": [32, 38, 43, 46, 49, 52, 56, 59, 63, 71, 1207, 1267, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1376, 1377, 1396, 1397, 1421, 1422, 1423, 1428, 1471, 1473, 1475, 1478, 1620, 1662, 1664, 1745, 1867, 1868, 1869, 1907, 1911, 1925, 1930, 1933], "linker": 32, "workspac": 32, "header": [32, 56, 1906, 1930], "torch_lib_path": 32, "load_inlin": [32, 1864], "cpp_sourc": 32, "cuda_sourc": 32, "with_pytorch_error_handl": 32, "behav": [32, 33, 41, 70, 71, 313, 321, 491, 513, 515, 838, 1136, 1211, 1424, 1425, 1426, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1868, 1869, 1876, 1889, 1895, 1900, 1904, 1911, 1919, 1923], "concaten": [32, 38, 41, 46, 900, 937, 948, 984, 1068, 1161, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1372, 1398, 1511, 1519, 1612, 1620, 1807, 1858, 1867, 1870, 1907, 1909, 1923], "furthermor": [32, 56, 67, 1231, 1232, 1259, 1285, 1366, 1882, 1883, 1889, 1904, 1917, 1919], "cuda_runtim": 32, "se": 32, "macro": [32, 1898], "pybind": 32, "_safe_foo": 32, "redirect": [32, 49, 56, 1931], "obscur": 32, "sin_add": 32, "inline_extens": 32, "include_path": [32, 1864], "get_compiler_abi_compatibility_and_vers": [32, 1864], "abi": [32, 33], "shell": 32, "torchvers": 32, "verify_ninja_avail": [32, 1864], "is_ninja_avail": [32, 1864], "embed": [33, 71, 732, 743, 892, 1060, 1336, 1362, 1372, 1388, 1400, 1434, 1477, 1519, 1577, 1684, 1752, 1867, 1891, 1909, 1914, 1916, 1919, 1923, 1928], "preprocess": [33, 494, 1196], "augment": [33, 1870, 1930], "interfac": [33, 39, 43, 48, 50, 55, 58, 709, 710, 711, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 742, 743, 753, 758, 759, 760, 761, 762, 791, 1122, 1599, 1756, 1810, 1849, 1865, 1869, 1879, 1880, 1894, 1899, 1910, 1917, 1923, 1928], "opencv": [33, 1527, 1538], "struct": [33, 1136, 1137, 1856, 1877, 1899], "classat_1_1_tensor": 33, "tensor_index": 33, "cpp_autograd": 33, "undesir": [33, 1351, 1356, 1357, 1358, 1359, 1360, 1361, 1502, 1503, 1504, 1505, 1506, 1507, 1511, 1577, 1894], "cpp_frontend": 33, "library_root": 33, "libtorch": 33, "linux": [33, 41, 1863], "gcc": 33, "cxx11": 33, "prototyp": [35, 41, 677, 898, 900, 904, 905, 906, 1205, 1475, 1864, 1875, 1876, 1879, 1883, 1884, 1900, 1905, 1917, 1919, 1926, 1932, 1933], "race": [35, 1889], "enable_cuda_sanit": 35, "torch_cuda_sanit": 35, "concurr": [35, 41, 45, 1891, 1892, 1919, 1920], "uniniti": [35, 444, 497, 1070, 1071, 1599, 1610, 1611, 1648, 1884, 1909], "commandlin": 35, "example_error": 35, "csan": 35, "139719969079296": 35, "94646435460352": 35, "_sanit": 35, "364": 35, "_handle_kernel_launch": 35, "stack_trac": [35, 71], "stacksummari": 35, "420": 35, "_handle_memory_alloc": 35, "faulti": [35, 41], "current_stream": [35, 972, 1864, 1892], "wait_stream": [35, 41, 973, 975, 1892], "default_stream": [35, 41, 1864], "float16": [36, 39, 43, 63, 297, 683, 686, 757, 820, 823, 831, 847, 848, 855, 918, 930, 1121, 1178, 1196, 1290, 1300, 1356, 1357, 1358, 1359, 1360, 1361, 1380, 1381, 1398, 1399, 1415, 1428, 1443, 1577, 1670, 1671, 1742, 1888, 1900, 1914, 1916, 1925, 1926, 1929, 1930, 1935], "v100": [36, 757, 1380, 1398, 1443, 1892], "packedsequ": [36, 757, 1380, 1398, 1443, 1642, 1643, 1644, 1646], "rnn": [37, 731, 757, 758, 759, 760, 762, 855, 1380, 1381, 1398, 1399, 1445, 1609, 1618, 1641, 1871, 1896, 1900, 1916, 1928], "enforc": [37, 39, 70, 792, 887, 1196, 1398, 1428, 1443, 1869, 1900, 1927], "cuda_launch_block": [37, 1398, 1443, 1892], "colon": [37, 1398, 1443, 1919], "cublas_workspace_config": [37, 1398, 1443, 1849, 1892, 1904], "4096": [37, 1398, 1443, 1849, 1892, 1907], "dataload": [38, 494, 1608, 1688, 1689, 1695, 1892, 1896, 1906, 1910, 1928], "batch_siz": [38, 47, 67, 69, 889, 1127, 1135, 1137, 1434, 1641, 1643, 1644, 1646, 1856, 1867, 1895, 1896, 1904, 1907, 1928], "shuffl": [38, 1864, 1928], "batch_sampl": 38, "num_work": [38, 49, 1904, 1906], "drop_last": 38, "timeout": [38, 41, 58, 1881, 1919], "worker_init_fn": [38, 1896, 1904], "prefetch_factor": 38, "persistent_work": 38, "__getitem__": [38, 1849], "__len__": [38, 71, 1867], "protocol": [38, 43, 48, 58, 60, 877, 1120, 1122, 1663, 1745, 1894, 1906, 1907, 1919, 1934], "idx": [38, 71, 895, 1196, 1336, 1371, 1428, 1616, 1867, 1883], "th": [38, 155, 313, 315, 321, 757, 898, 900, 920, 940, 1056, 1061, 1170, 1193, 1217, 1235, 1243, 1249, 1285, 1318, 1367, 1368, 1369, 1373, 1380, 1388, 1398, 1443, 1513, 1514, 1515, 1520, 1714, 1810, 1894, 1906, 1924, 1926], "iterabledataset": [38, 1899], "__iter__": [38, 1870], "improb": 38, "fetch": [38, 70, 71, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1664, 1919], "databas": 38, "remot": [38, 41, 45, 49, 1608, 1912, 1919, 1920], "replica": [38, 39, 41, 45, 56, 1365, 1608, 1893], "duplic": [38, 315, 319, 470, 541, 919, 928, 949, 1153, 1154, 1196, 1428, 1846, 1847, 1923], "yield": [38, 39, 63, 71, 1057, 1059, 1196, 1242, 1243, 1428, 1859, 1869, 1870, 1876, 1912, 1914, 1924], "stochast": [38, 47, 1376, 1377, 1522, 1523, 1667, 1669, 1670, 1672, 1683, 1687, 1688, 1900, 1910], "decent": 38, "randomli": [38, 742, 743, 753, 761, 906, 1340, 1366, 1367, 1368, 1369, 1373, 1446, 1512, 1513, 1514, 1515, 1520, 1628, 1884, 1899, 1900], "permut": [38, 1069, 1242, 1243, 1262, 1285, 1287, 1728, 1864, 1865, 1867, 1883, 1909, 1916, 1927, 1929], "mini": [38, 776, 782, 1346, 1347, 1348, 1371, 1372, 1383, 1388, 1391, 1392, 1393, 1400, 1420, 1431, 1433, 1467, 1476, 1518, 1519, 1538, 1596, 1912], "neither": [38, 41, 792, 893, 896, 1052, 1112, 1434, 1475, 1655, 1835, 1894, 1903, 1919], "collat": 38, "minibatch": [38, 765, 766, 769, 770, 771, 1285, 1336, 1344, 1345, 1362, 1364, 1388, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1480, 1494, 1495, 1496, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1510, 1539, 1551, 1552, 1553, 1562, 1570, 1912], "loader": [38, 1910], "dataset_it": 38, "cheaper": [38, 70], "arrai": [38, 49, 447, 757, 817, 818, 876, 877, 921, 939, 964, 968, 1069, 1113, 1121, 1122, 1130, 1131, 1267, 1297, 1375, 1380, 1381, 1398, 1399, 1521, 1735, 1742, 1762, 1796, 1797, 1798, 1800, 1801, 1828, 1835, 1843, 1850, 1866, 1870, 1892, 1900, 1923, 1925, 1929, 1930], "untouch": 38, "slightli": [38, 41, 47, 63, 1655, 1703, 1815, 1863, 1892, 1897, 1903, 1911], "default_col": 38, "channel": [38, 66, 471, 472, 473, 776, 782, 805, 819, 822, 830, 842, 850, 1083, 1346, 1347, 1348, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1366, 1367, 1368, 1369, 1373, 1375, 1383, 1391, 1392, 1393, 1400, 1404, 1405, 1406, 1407, 1408, 1409, 1416, 1436, 1462, 1467, 1479, 1480, 1481, 1482, 1497, 1513, 1514, 1515, 1520, 1537, 1538, 1545, 1571, 1596, 1626, 1627, 1628, 1635, 1636, 1652, 1715, 1883, 1885, 1887, 1889, 1914, 1915, 1917, 1928], "class_index": 38, "namedtupl": [38, 71, 893, 1048, 1049, 1141, 1196, 1207, 1217, 1237, 1287, 1293, 1296, 1298, 1301, 1324, 1336, 1428, 1703, 1713, 1787, 1814, 1832, 1837, 1866, 1868, 1869, 1914], "gil": [38, 41, 45, 1889, 1892, 1919], "descriptor": [38, 1476, 1477, 1870, 1907], "parent": [38, 51, 56, 60, 63, 677, 785, 786, 814, 1428, 1881, 1906, 1911, 1921, 1928], "refcount": [38, 1881, 1902], "panda": 38, "pyarrow": 38, "13246": 38, "get_worker_info": [38, 1919], "seed": [38, 89, 1007, 1016, 1017, 1037, 1172, 1288, 1308, 1703, 1720, 1815, 1864, 1867, 1896, 1904, 1918], "shut": [38, 1919], "garbag": [38, 1921], "subtleti": [38, 1365, 1894, 1896], "multiprocess": [38, 41, 42, 44, 49, 51, 59, 60, 1365, 1608, 1864, 1883, 1893, 1920], "unix": [38, 56, 971, 1881], "fork": [38, 56, 1214, 1608, 1869, 1891, 1892, 1896, 1899, 1902, 1906, 1918, 1919, 1921], "child": [38, 49, 51, 63, 788, 1196, 1428, 1627, 1881, 1900, 1906, 1921], "maco": [38, 41, 1881, 1901], "spawn": [38, 39, 42, 49, 50, 56, 60, 1199, 1608, 1864, 1888, 1893, 1902, 1906, 1920], "__name__": [38, 39, 41, 50, 51, 59, 1893, 1894, 1902, 1906, 1911, 1920], "__main__": [38, 39, 41, 50, 51, 59, 1890, 1893, 1902, 1906, 1920], "base_se": 38, "worker_id": [38, 60, 1904], "therebi": [38, 47, 1910, 1914], "mandatorili": 38, "faq": [38, 1365, 1644, 1864], "initial_se": [38, 89, 1864, 1904, 1918], "simplecustombatch": 38, "transposed_data": 38, "zip": [38, 43, 1863, 1867, 1868, 1878, 1892, 1899, 1923], "tgt": [38, 1471, 1472, 1473], "collate_wrapp": 38, "tensordataset": 38, "batch_ndx": 38, "is_pin": [38, 1641, 1867, 1882, 1909, 1925], "multiprocessing_context": 38, "pin_memory_devic": 38, "reshuffl": 38, "draw": [38, 155, 920, 1032, 1318, 1720, 1928], "mutual": [38, 41, 49, 732, 1930], "subprocess": [38, 41, 56, 58, 60, 1896, 1902], "incomplet": [38, 898, 1871, 1924], "divis": [38, 580, 614, 684, 769, 770, 771, 944, 1064, 1114, 1117, 1206, 1239, 1356, 1357, 1358, 1359, 1360, 1361, 1363, 1383, 1395, 1419, 1437, 1502, 1503, 1504, 1505, 1506, 1507, 1509, 1563, 1733, 1802, 1829, 1869, 1888, 1892], "basecontext": 38, "randomsampl": 38, "prefetch": [38, 63], "unpickl": [38, 41, 1267, 1911], "proper": [38, 49, 70, 71, 1060, 1752, 1868, 1889, 1892, 1894, 1906], "guess": 38, "trust": [38, 41, 1267, 1863, 1911], "inaccur": [38, 39], "kwd": 38, "__getitems__": 38, "myiterabledataset": 38, "worker_info": 38, "iter_start": 38, "iter_end": 38, "per_work": 38, "ceil": [38, 178, 630, 631, 765, 766, 1341, 1342, 1343, 1396, 1397, 1421, 1422, 1423, 1494, 1495, 1496, 1551, 1552, 1553, 1718, 1719, 1742, 1865, 1867, 1882, 1892, 1909, 1923], "mult": 38, "overall_start": 38, "overall_end": 38, "stackdataset": 38, "assembl": 38, "imagedataset": 38, "textdataset": 38, "tuple_stack": 38, "dict_stack": 38, "concatdataset": 38, "chaindataset": 38, "fly": [38, 1012, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1889], "_util": 38, "collate_fn_map": 38, "registri": [38, 1864, 1907], "default_collate_fn_map": 38, "collate_tensor_fn": 38, "custom_col": 38, "collate_map": 38, "outer": [38, 688, 898, 1069, 1127, 1131, 1136, 1142, 1867, 1869, 1909], "unchang": [38, 497, 511, 513, 732, 811, 1108, 1196, 1428, 1471, 1734, 1805, 1888, 1903, 1914], "byte": [38, 41, 47, 58, 242, 434, 555, 877, 977, 1018, 1020, 1022, 1024, 1122, 1195, 1267, 1304, 1305, 1664, 1673, 1745, 1868, 1869, 1870, 1882, 1911, 1923, 1925], "v_i": [38, 1235], "v_1": 38, "v_2": 38, "v1_i": 38, "v2_i": 38, "v1_1": 38, "v1_2": 38, "v2_1": 38, "v2_2": 38, "elem": [38, 1867], "customtyp": 38, "collate_customtype_fn": 38, "custotyp": 38, "default_convert": 38, "np": [38, 938, 1064, 1069, 1109, 1110, 1111, 1567, 1707, 1895, 1904, 1907, 1928, 1929, 1930], "workerinfo": [38, 1919], "random_split": 38, "floor": [38, 271, 644, 645, 765, 766, 1064, 1114, 1206, 1341, 1342, 1343, 1396, 1397, 1421, 1422, 1423, 1494, 1495, 1496, 1551, 1552, 1553, 1718, 1719, 1733, 1742, 1810, 1865, 1867, 1869, 1882, 1905, 1909, 1923], "frac": [38, 47, 279, 377, 646, 647, 684, 757, 769, 770, 771, 862, 919, 928, 964, 968, 1064, 1114, 1149, 1153, 1154, 1215, 1227, 1231, 1232, 1235, 1247, 1259, 1266, 1282, 1336, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 1356, 1357, 1358, 1359, 1360, 1361, 1364, 1366, 1375, 1380, 1381, 1382, 1383, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1413, 1415, 1416, 1417, 1418, 1421, 1422, 1423, 1431, 1432, 1433, 1435, 1443, 1445, 1446, 1458, 1460, 1461, 1463, 1464, 1466, 1467, 1468, 1479, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1547, 1563, 1565, 1567, 1577, 1579, 1583, 1585, 1587, 1588, 1668, 1669, 1672, 1674, 1680, 1687, 1688, 1717, 1729, 1732, 1744, 1765, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1793, 1808, 1809, 1810, 1814, 1835, 1851, 1852, 1867, 1882, 1887, 1889, 1897, 1909, 1924], "robin": [38, 41], "generator1": 38, "manual_se": [38, 68, 89, 1864, 1867, 1882, 1900, 1904, 1907, 1909, 1918], "generator2": 38, "data_sourc": 38, "accedingsequencelengthsampl": 38, "argsort": [38, 1825, 1867, 1895, 1909], "tolist": [38, 352, 1869, 1909, 1925], "accedingsequencelengthbatchsampl": 38, "sequentialsampl": 38, "num_sampl": [38, 420, 1318, 1867], "drawn": [38, 174, 258, 286, 1318, 1656, 1720, 1724, 1725, 1887, 1930, 1931], "subsetrandomsampl": 38, "weightedrandomsampl": 38, "row": [38, 39, 46, 47, 209, 313, 315, 321, 582, 585, 690, 696, 874, 898, 900, 938, 964, 968, 1052, 1082, 1110, 1111, 1131, 1137, 1158, 1217, 1243, 1251, 1254, 1259, 1283, 1285, 1293, 1295, 1296, 1298, 1301, 1318, 1324, 1325, 1326, 1518, 1519, 1567, 1615, 1654, 1711, 1714, 1734, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1813, 1832, 1835, 1839, 1841, 1850, 1856, 1858, 1867, 1897, 1923, 1928], "05": [38, 45, 71, 114, 344, 691, 709, 710, 711, 712, 713, 714, 720, 721, 733, 734, 746, 748, 749, 750, 751, 905, 906, 942, 1083, 1185, 1211, 1212, 1282, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1471, 1473, 1475, 1497, 1528, 1537, 1541, 1608, 1686, 1692, 1693, 1699, 1771, 1772, 1777, 1866, 1867, 1910, 1920, 1930], "batchsampl": 38, "distributedsampl": [38, 1608], "num_replica": 38, "world_siz": [38, 39, 41, 42, 45, 49, 58, 59, 61, 63, 1608, 1893, 1912, 1919, 1920], "evenli": [38, 580, 581, 582, 692, 693, 1067, 1159, 1266, 1282, 1857], "set_epoch": 38, "is_distribut": [38, 1867, 1909], "start_epoch": 38, "n_epoch": 38, "vanilla": [39, 1876], "allreduc": [39, 41, 1608, 1892, 1893, 1909], "register_comm_hook": [39, 45, 63, 1608], "mainli": [39, 47, 824, 1351, 1511, 1932], "gradbucket": [39, 1608], "decompos": [39, 71, 1119, 1126, 1240, 1865, 1889, 1907], "get_per_parameter_tensor": 39, "_distributed_c10d": [39, 41], "1d": [39, 46, 47, 63, 699, 702, 735, 738, 769, 779, 949, 964, 968, 1052, 1066, 1157, 1158, 1173, 1193, 1251, 1252, 1297, 1325, 1333, 1337, 1341, 1351, 1356, 1359, 1364, 1367, 1368, 1372, 1396, 1420, 1421, 1433, 1435, 1480, 1486, 1489, 1492, 1494, 1502, 1505, 1513, 1519, 1548, 1551, 1714, 1715, 1718, 1810, 1835, 1853], "is_last": 39, "set_buff": 39, "stateless": [39, 68, 1885, 1900], "ddp_comm_hook": [39, 45], "default_hook": 39, "allreduce_hook": 39, "process_group": [39, 42, 43, 45, 63, 1467, 1608], "unaffect": [39, 497, 498, 1382], "ddp_model": [39, 41, 1608, 1893], "fp16_compress_hook": 39, "decompress": [39, 1863, 1878], "bf16_compress_hook": 39, "nccl": [39, 42, 43, 59, 63, 1608, 1898], "brain": [39, 1926, 1929], "fp16_compress_wrapp": 39, "powersgdst": 39, "matrix_approximation_rank": 39, "start_powersgd_it": 39, "powersgd_hook": 39, "bf16_compress_wrapp": 39, "wikipedia": [39, 1564, 1889, 1897, 1935], "wiki": [39, 1935], "bfloat16_float": 39, "point_format": 39, "vogel": 39, "et": [39, 47, 63, 1351, 1440, 1441, 1476, 1477, 1683, 1778, 1815, 1887], "al": [39, 47, 63, 1351, 1440, 1441, 1476, 1477, 1683, 1778, 1815, 1887], "neurip": [39, 47], "2019": [39, 47, 1026], "hyperparamet": [39, 63, 71, 1928], "1000": [39, 1084, 1089, 1115, 1116, 1336, 1371, 1477, 1715, 1742, 1762, 1828, 1889, 1905, 1907, 1928], "min_compression_r": 39, "use_error_feedback": 39, "warm_start": 39, "orthogonalization_epsilon": 39, "random_se": 39, "compression_stats_logging_frequ": 39, "batch_tensors_with_same_shap": 39, "stronger": 39, "threshold": [39, 71, 1250, 1253, 1389, 1459, 1464, 1585, 1591, 1697, 1762, 1867, 1888, 1892, 1909, 1928], "exponenti": [39, 258, 1079, 1247, 1273, 1274, 1275, 1283, 1350, 1370, 1516, 1864, 1869, 1909, 1910, 1924, 1931], "grid": [39, 1089, 1297, 1492, 1527, 1865, 1867, 1892, 1928], "satisfactori": 39, "appendix": [39, 1864], "defer": [39, 63, 1892, 1912], "hybrid": [39, 63, 219, 540, 580, 581, 582, 584, 585, 1160], "scheme": [39, 58, 477, 799, 816, 817, 818, 819, 822, 824, 1900], "trajectori": 39, "irrecover": 39, "num_row": 39, "num_col": 39, "1e": [39, 71, 114, 344, 691, 709, 710, 711, 712, 713, 714, 720, 721, 733, 734, 746, 748, 749, 750, 751, 752, 905, 906, 941, 942, 1185, 1211, 1212, 1262, 1346, 1347, 1348, 1363, 1382, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1414, 1437, 1442, 1467, 1471, 1473, 1475, 1476, 1497, 1509, 1524, 1528, 1529, 1537, 1541, 1563, 1566, 1570, 1593, 1616, 1649, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1684, 1697, 1705, 1758, 1866, 1867, 1894, 1900, 1907, 1910, 1924, 1930], "orthogon": [39, 1232, 1235, 1254, 1259, 1268, 1701, 1713, 1887, 1889, 1900, 1923], "epsilon": [39, 71, 816, 817, 818, 819, 822, 862, 1250, 1253, 1346, 1347, 1348, 1363, 1383, 1391, 1392, 1393, 1400, 1437, 1467, 1509, 1563, 1616, 1649, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1717, 1867, 1924], "bucket_cap_mb": [39, 1608, 1893], "memor": 39, "compens": 39, "apex": 39, "uncompress": [39, 1923], "pq": 39, "mq": [39, 1914, 1933], "tp": [39, 46], "comm": [39, 41, 1893], "handler": [39, 41, 51, 52, 1627, 1879, 1899, 1911, 1934], "batched_powersgd_hook": 39, "destroi": [39, 58, 1365, 1889, 1919], "squar": [39, 47, 548, 736, 737, 738, 739, 776, 782, 791, 968, 1056, 1058, 1193, 1227, 1229, 1231, 1232, 1233, 1236, 1237, 1241, 1243, 1245, 1247, 1249, 1253, 1255, 1256, 1258, 1259, 1263, 1276, 1285, 1334, 1338, 1342, 1343, 1357, 1358, 1360, 1361, 1376, 1377, 1389, 1397, 1419, 1422, 1423, 1426, 1459, 1471, 1494, 1503, 1506, 1522, 1523, 1527, 1536, 1538, 1558, 1581, 1596, 1615, 1668, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1744, 1803, 1837, 1850, 1867, 1909, 1923], "truncat": [39, 1114, 1843, 1884, 1887, 1896, 1903], "debugging_hook": 39, "noop_hook": 39, "noop": [39, 1608], "headroom": 39, "desynchron": [39, 41], "trainer": [39, 49, 51, 56, 59, 60, 1608, 1919], "__setstate__": 39, "__getstate__": 39, "reload": [39, 45, 1863], "sy": [39, 50, 59, 61, 1863, 1892, 1911], "tempfil": 39, "simplemodel": 39, "fc2": [39, 1599, 1912], "master_addr": [39, 41, 49, 59, 61, 1893, 1912, 1919, 1920], "localhost": [39, 41, 58, 59, 1893, 1912, 1919, 1920], "master_port": [39, 41, 49, 59, 61, 1893, 1912, 1919, 1920], "12355": 39, "init_process_group": [39, 41, 42, 45, 49, 59, 61, 1608, 1892, 1893, 1919], "cleanup": 39, "destroy_process_group": 39, "run_demo": 39, "demo_fn": 39, "mp": [39, 41, 42, 60, 1608, 1864, 1893, 1902, 1914, 1920, 1925, 1926, 1933], "nproc": [39, 41, 56, 57, 59, 1881, 1893, 1920], "demo_seri": 39, "gettempdir": 39, "device_id": [39, 41, 42, 45, 59, 63, 1267, 1365, 1467, 1592, 1608, 1893], "powersgd_st": 39, "lr": [39, 42, 45, 63, 1599, 1608, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1892, 1893, 1900, 1910, 1920, 1928], "001": [39, 905, 906, 1205, 1666, 1670, 1671, 1680, 1684, 1696, 1893, 1907], "comm_hook": 39, "comm_hook_st": 39, "hook_stat": 39, "barrier": [39, 49, 58, 1909], "map_loc": [39, 1200, 1203, 1267, 1608, 1863, 1878, 1911], "n_gpu": 39, "device_count": [39, 41, 1864], "got": [39, 41, 888, 1894, 1930], "thank": [39, 47, 1894, 1912], "thij": 39, "par": 39, "home": [40, 1892], "brief": [41, 1608, 1881, 1919], "introduct": [41, 47, 1004, 1608, 1864, 1866, 1870, 1882, 1890, 1900, 1907, 1919, 1923, 1928], "mpi": [41, 1608], "gloo": [41, 59, 1608, 1893, 1898, 1919], "recv": [41, 1608, 1909, 1920], "all_reduc": [41, 60, 1608], "all_gath": 41, "scatter": [41, 45, 63, 511, 513, 515, 1365, 1849, 1867, 1896, 1909, 1919], "reduce_scatt": [41, 1909], "all_to_al": 41, "v1": [41, 63, 1264, 1702, 1863, 1893, 1919], "init_method": [41, 1608, 1919], "adher": [41, 1869], "some_fil": 41, "machine_nam": 41, "share_folder_nam": 41, "tcpstore": [41, 58], "infiniband": [41, 1608, 1919], "interconnect": 41, "gpudirect": 41, "ethernet": 41, "ip": [41, 58], "ib": 41, "nccl_socket_ifnam": 41, "eth0": 41, "gloo_socket_ifnam": 41, "comma": [41, 1069, 1869, 1875], "eth1": 41, "eth2": 41, "eth3": 41, "imper": 41, "nccl_debug": 41, "nccl_debug_subsi": 41, "coll": 41, "hang": [41, 42, 45, 1608, 1893], "topologi": [41, 43, 46, 49], "socket": [41, 1881, 1919], "nccl_socket_nthread": 41, "nccl_nsocks_perthread": 41, "cloud": [41, 1923, 1928], "aw": [41, 50, 968], "primit": [41, 45, 58, 1267, 1865, 1866, 1868, 1870, 1891, 1901, 1907, 1919], "connect": [41, 49, 58, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409, 1456, 1881, 1919], "redund": [41, 63, 1085, 1086, 1088, 1090, 1104, 1106, 1810], "averag": [41, 45, 732, 763, 764, 765, 766, 818, 819, 914, 916, 968, 1032, 1046, 1196, 1333, 1334, 1335, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1362, 1364, 1372, 1382, 1388, 1394, 1395, 1396, 1397, 1401, 1402, 1403, 1419, 1420, 1428, 1431, 1432, 1433, 1434, 1435, 1442, 1459, 1460, 1467, 1476, 1486, 1487, 1488, 1494, 1495, 1496, 1499, 1500, 1510, 1524, 1539, 1548, 1549, 1562, 1570, 1608, 1667, 1668, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1835, 1864, 1893, 1913], "thrash": 41, "recurr": [41, 757, 758, 1211, 1351, 1365, 1380, 1381, 1398, 1443, 1618, 1644, 1681, 1864, 1892], "use_distribut": 41, "datetim": [41, 1879], "timedelta": [41, 58, 1879], "1800": 41, "group_nam": [41, 55], "pg_option": 41, "url": [41, 58, 913, 1863, 1878, 1919], "discov": [41, 1919], "encod": [41, 49, 55, 58, 71, 1243, 1267, 1309, 1310, 1344, 1345, 1471, 1472, 1473, 1474, 1475, 1608, 1796, 1797, 1798, 1800, 1801, 1866, 1869, 1870, 1894, 1905, 1911, 1920, 1923], "ucc": 41, "lowercas": 41, "deadlock": [41, 1608], "job": [41, 49, 51, 52, 54, 55, 57, 58, 59, 60, 1608, 1689, 1695, 1899, 1913, 1928], "exchang": [41, 58, 973, 1057, 1892, 1907], "nccl_blocking_wait": 41, "nccl_async_error_handl": [41, 1892], "abort": [41, 1892], "crash": [41, 51, 58, 1881, 1889, 1919, 1921, 1928], "caught": [41, 1608, 1881], "watch": 41, "dog": 41, "processgroupopt": 41, "processgroupnccl": [41, 1893], "is_high_priority_stream": 41, "backend_nam": 41, "custom_backend": 41, "is_initi": [41, 1864], "is_mpi_avail": 41, "is_nccl_avail": 41, "is_gloo_avail": 41, "is_torchelastic_launch": 41, "elast": [41, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 1864], "torchelast": [41, 44, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61], "torchelastic_run_id": [41, 59], "rendezv": [41, 44, 49, 55, 57, 61, 1893, 1919], "null": [41, 50, 52, 55], "discoveri": [41, 58, 1892, 1911], "reachabl": 41, "multicast": 41, "23456": 41, "clean": [41, 49, 71, 957, 1008, 1863, 1881, 1911], "fcntl": 41, "nf": 41, "brand": 41, "unsuccess": 41, "mnt": 41, "sharedfil": 41, "port": [41, 49, 57, 58, 59, 1898], "backend_str": 41, "uppercas": 41, "classmethod": [41, 58, 729, 735, 736, 737, 742, 743, 753, 761, 789, 790, 791, 812, 813, 814, 821, 851, 972, 1371, 1372, 1467, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1664, 1869, 1870, 1894, 1914, 1919, 1925, 1934], "extended_api": 41, "instanti": [41, 45, 57, 58, 59, 71, 838, 1073, 1171, 1372, 1519, 1617, 1641, 1648, 1653, 1863, 1866, 1868, 1869, 1892, 1894, 1900, 1925], "3rd": [41, 47, 58, 614, 1697, 1890], "processgroup": [41, 43, 45, 63, 1608], "four": [41, 1241, 1357, 1894, 1897, 1919, 1921], "c10d": [41, 49, 57, 59, 61, 1608, 1893, 1909], "distributedbackendopt": 41, "get_backend": [41, 58], "get_rank": [41, 1467], "get_world_s": 41, "filestor": [41, 58], "hashstor": 41, "host_nam": 41, "hostnam": [41, 49, 58, 1913], "listen": 41, "is_mast": 41, "300": [41, 49, 1273, 1345, 1645, 1647, 1910], "wait_for_work": 41, "server_stor": 41, "127": [41, 791, 1883, 1914, 1928], "1234": [41, 58, 1173], "client_stor": 41, "first_kei": 41, "first_valu": 41, "hashmap": 41, "file_nam": [41, 1863, 1878, 1911], "store1": 41, "store2": 41, "prefixstor": 41, "quantiti": [41, 64, 69, 1231, 1232, 1259, 1394, 1625, 1626, 1628, 1629, 1631, 1634, 1635, 1636, 1637, 1697, 1895, 1897], "compare_set": 41, "arg2": 41, "expected_valu": 41, "desired_valu": 41, "second_valu": 41, "overload": [41, 71, 614, 1868, 1869, 1873], "bad_kei": 41, "num_kei": 41, "destruct": [41, 1879, 1919, 1921], "delete_kei": 41, "set_timeout": 41, "grain": [41, 855, 858, 1577, 1864, 1889, 1907], "plai": 41, "new_group": [41, 63, 1467], "use_local_synchron": 41, "enqueu": [41, 70, 973, 975, 976, 1892, 1920], "get_group_rank": 41, "global_rank": [41, 49], "get_global_rank": 41, "group_rank": [41, 49, 59], "get_process_group_rank": 41, "dst": [41, 1863, 1911], "destin": [41, 43, 52, 55, 63, 210, 415, 416, 600, 984, 985, 1138, 1196, 1302, 1303, 1428, 1662, 1663, 1867, 1919, 1920, 1925], "unspecifi": [41, 480, 817, 818, 819, 822, 905, 906, 1461, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1793, 1876, 1923, 1928], "sender": [41, 1921], "isend": 41, "irecv": 41, "is_complet": 41, "finish": [41, 43, 49, 55, 56, 58, 60, 70, 1126, 1892, 1893, 1906, 1913, 1919, 1921], "batch_isend_irecv": 41, "p2p_op_list": 41, "p2pop": 41, "op_list": 41, "send_tensor": 41, "recv_tensor": 41, "send_op": 41, "recv_op": 41, "req": 41, "pg": [41, 1608], "set_devic": [41, 43, 63, 1608, 1753, 1864, 1919, 1926], "p2p": [41, 58], "async_op": 41, "get_futur": [41, 1608], "add_": [41, 66, 68, 222, 1126, 1867, 1882, 1890, 1923], "101": [41, 1336], "overwrot": 41, "sent": [41, 43, 1008, 1869, 1881, 1902, 1919, 1920, 1921], "broadcast_object_list": 41, "object_list": 41, "picklabl": [41, 1196, 1428, 1911], "current_devic": [41, 43, 981, 989, 990, 997, 998, 1014, 1018, 1020, 1021, 1022, 1024, 1026, 1027, 1028, 1032, 1033, 1034, 1035, 1045, 1046, 1047, 1864, 1926], "insecur": [41, 1267], "malici": [41, 1267, 1911], "ineffici": [41, 1892, 1914], "redoptyp": 41, "bitwis": [41, 922, 924, 925, 927, 1870, 1903, 1915, 1931], "reduceop": 41, "int64": [41, 192, 209, 313, 321, 393, 862, 921, 934, 1070, 1083, 1084, 1121, 1510, 1641, 1724, 1728, 1729, 1749, 1796, 1797, 1798, 1800, 1801, 1892, 1923, 1925, 1926, 1929, 1935], "1j": [41, 695, 961, 962, 1192, 1737, 1738, 1853, 1889, 1897, 1905], "2j": [41, 695, 961, 962, 1737, 1738, 1765, 1853, 1889], "tensor_list": [41, 1884], "all_gather_into_tensor": 41, "output_tensor": 41, "accommod": [41, 1424, 1425, 1426], "ii": [41, 964, 1069, 1398, 1399], "tensor_in": 41, "tensor_out": 41, "tensor_out2": 41, "all_gather_object": 41, "obj": [41, 71, 877, 993, 1182, 1183, 1202, 1207, 1745, 1867, 1906, 1911], "pickabl": 41, "responsibl": 41, "gather_object": 41, "gather_list": 41, "object_gather_list": 41, "scatter_list": 41, "tensor_s": 41, "t_one": 41, "t_five": 41, "scatter_object_list": 41, "scatter_object_output_list": 41, "scatter_object_input_list": 41, "output_list": 41, "input_list": 41, "reduce_scatter_tensor": 41, "all_to_all_singl": 41, "output_split_s": 41, "input_split_s": 41, "15": [41, 71, 614, 1067, 1139, 1149, 1159, 1218, 1232, 1352, 1425, 1426, 1645, 1647, 1705, 1778, 1787, 1833, 1857, 1866, 1867, 1870, 1907, 1923], "uneven": [41, 42, 45, 1608], "21": [41, 47, 682, 940, 1052, 1254, 1713, 1835, 1866, 1923], "31": [41, 926, 1343, 1423, 1599, 1773, 1907], "33": [41, 735, 736, 737, 738, 739, 740, 769, 1196, 1356, 1357, 1358, 1360, 1361, 1426, 1428, 1502, 1504, 1505, 1507, 1866, 1907], "35": [41, 1254, 1347, 1348, 1392, 1393, 1467, 1713], "input_split": 41, "output_split": 41, "5j": 41, "6j": 41, "7j": 41, "8j": 41, "9j": 41, "10j": 41, "11j": 41, "12j": 41, "13j": 41, "14j": 41, "15j": 41, "16j": 41, "output_tensor_list": 41, "input_tensor_list": 41, "monitored_barri": [41, 1909], "wait_all_rank": 41, "band": 41, "bor": 41, "bxor": 41, "premul_sum": 41, "_make_nccl_premul_sum": 41, "all_reduce_multigpu": 41, "__members__": 41, "reduce_op": 41, "revisit": 41, "broadcast_multigpu": 41, "reduce_multigpu": 41, "all_gather_multigpu": 41, "reduce_scatter_multigpu": 41, "distributed_test": 41, "dev_idx": 41, "src_tensor": 41, "resid": [41, 63, 70, 197, 289, 337, 1267, 1608, 1892, 1912, 1919], "dst_tensor": 41, "cpp_extens": [41, 1864, 1894], "cpp_c10d_extens": 41, "torchrun": [41, 44, 50, 57, 61], "benefici": [41, 1900], "nproc_per_nod": [41, 50], "num_gpus_you_hav": 41, "your_training_script": [41, 57, 59], "arg3": 41, "192": [41, 614, 1907], "168": 41, "nnode": [41, 57, 59], "local_process_rank": 41, "local_rank": [41, 49, 51, 56, 59, 61, 1467], "argpars": [41, 59, 1892], "parser": [41, 59, 1892], "argumentpars": [41, 59, 1892], "add_argu": [41, 59, 1892], "parse_arg": [41, 50, 59, 61, 1892, 1907], "output_devic": [41, 45, 59, 1365, 1467, 1592, 1608], "adjust": [41, 43, 45, 47, 63, 1864, 1891, 1915], "launcher": [41, 59], "filesystem": [41, 43, 971, 1863, 1911], "12042": 41, "imagenet": [41, 1887], "inconsist": [41, 63, 862, 1729, 1894], "group_gloo": 41, "29501": 41, "monitoredbarri": 41, "transport": [41, 1919], "598": 41, "2401": 41, "db00": 41, "eef0": 41, "1100": 41, "3560": 41, "1c05": 41, "25d": 41, "8594": 41, "torch_cpp_log_level": 41, "twolinlayernet": 41, "i0607": 41, "739390": 41, "515217": 41, "logger": [41, 1661, 1932, 1933], "173": 41, "broadcast_buff": [41, 1608], "bucket_cap_byt": 41, "26214400": 41, "find_unused_paramet": [41, 1608, 1893], "gradient_as_bucket_view": [41, 1608], "is_multi_device_modul": 41, "num_parameter_tensor": 41, "total_parameter_size_byt": 41, "440": 41, "bucket_s": 41, "cuda_visible_devic": [41, 1038, 1608, 1892], "module_nam": [41, 71, 814, 851, 1911], "nccl_ib_timeout": 41, "nccl_nthread": 41, "085681": 41, "544067": 41, "344": 41, "unused_parameter_s": 41, "40838608": 41, "5983335": 41, "4326421": 41, "comp": [41, 47], "4207652": 41, "085693": 41, "544066": 41, "42850427": 41, "3885553": 41, "2357981": 41, "2234674": 41, "unus": [41, 45, 71, 904, 1008, 1022, 1201, 1207, 1390, 1608, 1666, 1866, 1868, 1869, 1892, 1893, 1898, 1911], "wasn": [41, 1267, 1866], "va": 41, "lue": 41, "indirectli": 41, "outstand": [41, 1919], "stuck": [41, 49, 60], "uninform": 41, "reveal": [41, 1893], "default_pg": 41, "longtensor": [41, 135, 136, 137, 315, 317, 319, 451, 470, 511, 513, 515, 871, 872, 1138, 1170, 1217, 1318, 1371, 1372, 1431, 1518, 1519, 1564, 1654, 1749, 1787, 1799, 1824, 1832, 1859, 1926, 1929], "set_debug_level": 41, "set_debug_level_from_env": 41, "get_debug_level": 41, "torch_show_cpp_stacktrac": 41, "distbackenderror": 41, "facilit": [42, 47, 68, 973, 1057, 1754, 1863, 1866, 1869, 1904], "joinabl": [42, 45, 1608, 1864], "joinhook": [42, 1864], "throw_on_early_termin": [42, 1608], "shadow": [42, 45, 1608, 1932, 1933], "notify_join_context": 42, "zeroredundancyoptim": [42, 45, 1608, 1864], "01": [42, 45, 60, 752, 777, 818, 819, 1070, 1112, 1414, 1542, 1543, 1599, 1665, 1667, 1669, 1671, 1681, 1682, 1689, 1695, 1715, 1769, 1771, 1772, 1777, 1778, 1865, 1867, 1887, 1899, 1907, 1910], "vacuou": 42, "inherit": [42, 1633, 1866, 1868, 1884, 1894, 1900, 1902], "join_hook": [42, 45, 1608], "join_devic": 42, "join_process_group": 42, "repeatedli": [42, 1892, 1923], "main_hook": 42, "post_hook": 42, "is_last_join": 42, "dcp": 43, "reshard": [43, 46, 63], "entrypoint": [43, 46, 49, 51, 56, 59, 1881], "storage_read": 43, "coordinator_rank": 43, "no_dist": 43, "planner": 43, "spmd": 43, "fullfil": 43, "shardedtensor": [43, 63], "po": [43, 1907], "storageread": [43, 1864], "rank0": [43, 63], "mymodul": [43, 63, 71, 1200, 1201, 1202, 1206, 1207, 1213, 1429, 1430, 1438, 1439, 1866, 1868, 1869, 1896, 1905, 1919], "adagrad": [43, 1371, 1876, 1910, 1919], "model_state_dict": 43, "fs_storage_load": 43, "filesystemload": 43, "save_state_dict": [43, 1864], "storage_writ": 43, "storagewrit": [43, 1864], "fs_storage_writ": 43, "filesystemwrit": [43, 1864], "told": [43, 1868], "read_metadata": 43, "set_up_storage_read": 43, "prepare_local_plan": 43, "prepare_global_plan": 43, "read_data": 43, "central": [43, 1149, 1897, 1899], "loadplan": [43, 1864], "storage_data": 43, "loadplann": [43, 1864], "load_byt": 43, "bytesio": [43, 1203, 1206, 1267, 1745, 1907, 1914], "resolve_tensor": 43, "storagelay": 43, "is_coordin": 43, "set_up_storage_writ": 43, "write_data": 43, "recover": 43, "writeresult": 43, "saveplan": [43, 1864], "saveplann": [43, 1864], "resolve_data": 43, "writeitem": [43, 1864], "tensor_data": 43, "set_up_plann": 43, "create_local_plan": 43, "create_global_plan": 43, "commit_tensor": 43, "defaultloadplann": [43, 1864], "requit": 43, "intrincaci": 43, "renameplann": 43, "original_state_dict": 43, "foo_": [43, 1126], "v": [43, 55, 67, 71, 486, 541, 892, 899, 901, 902, 903, 934, 1125, 1135, 1137, 1193, 1209, 1231, 1235, 1259, 1263, 1268, 1434, 1476, 1477, 1518, 1563, 1577, 1647, 1652, 1681, 1683, 1703, 1736, 1795, 1799, 1814, 1815, 1856, 1864, 1866, 1867, 1868, 1869, 1879, 1889, 1897, 1906, 1911, 1923, 1928], "read_item": 43, "dest_index": 43, "fqn": [43, 46, 1933], "metamodelmateri": 43, "defaultsaveplann": [43, 1864], "empty_lik": [43, 1867, 1871, 1882, 1884, 1909, 1923], "global_plan": 43, "finish_plan": 43, "central_plan": 43, "readitem": [43, 1864], "planner_data": 43, "loaditemtyp": 43, "metadataindex": 43, "dest_offset": 43, "storage_index": 43, "storage_offset": [43, 139, 518, 614, 875, 1865, 1867, 1909], "tandem": 43, "fp16planner": 43, "write_item": 43, "writeitemtyp": 43, "byte_io": 43, "itertool": [43, 47, 936, 949], "islic": 43, "ddploadbalancingplann": 43, "all_plan": 43, "saveextradataplann": 43, "merged_data": 43, "new_plan": 43, "idempot": [43, 1919, 1921], "hi": [43, 1398, 1399, 1866, 1868, 1897], "late": [43, 58], "tensorwritedata": 43, "nonetyp": [43, 1867, 1869], "filesystemread": [43, 1864], "single_file_per_rank": 43, "sync_fil": 43, "thread_count": 43, "per_thread_copy_ahead": 43, "10000000": 43, "atom": [43, 58, 71, 1870], "distributedtensor": [43, 46], "flatten_state_dict": 43, "flatten_sharded_tensor": 43, "dedup_replicated_tensor": 43, "lookup_object": 43, "transform_object": 43, "lookup_tensor": 43, "transform_tensor": 43, "fault": [44, 49, 57, 58, 1122], "toler": [44, 49, 57, 58, 71, 691, 905, 906, 1185, 1211, 1212, 1250, 1253, 1268, 1666, 1673, 1866, 1930], "quickstart": 44, "agent": [44, 50, 51, 52, 55, 57, 59, 60, 1919], "expir": 44, "kubernet": 44, "distributedoptim": [45, 1608, 1864, 1919, 1920], "rref": [45, 1608, 1864, 1869, 1912, 1920], "optimizer_class": 45, "params_rref": 45, "get_gradi": [45, 1909, 1919, 1920], "multithread": [45, 917, 1892], "dist_autograd": [45, 1608, 1919, 1920], "rpc": [45, 70, 1608, 1864, 1869, 1912, 1920, 1921], "context_id": [45, 1608, 1919, 1920], "rref1": [45, 1919, 1920], "worker1": [45, 70, 1608, 1919, 1920], "rref2": [45, 1919, 1920], "to_her": [45, 1608, 1909, 1919, 1920, 1921], "dist_optim": [45, 1608, 1920], "postlocalsgdoptim": [45, 1864], "afer": 45, "modelaverag": 45, "localsgd": 45, "model_averag": 45, "post_localsgd_hook": 45, "postlocalsgdst": 45, "subgroup": 45, "start_localsgd_it": 45, "warmup_step": 45, "local_optim": 45, "periodicmodelaverag": 45, "intra": [45, 1891, 1893, 1912], "unnecessari": [45, 1648, 1869, 1889, 1892, 1894, 1905, 1911, 1927], "parameters_as_bucket_view": 45, "overlap_with_ddp": 45, "consumpt": [45, 67, 1653, 1923, 1928], "intact": [45, 1919], "ddp_zero_hook": 45, "disjointli": 45, "trail": [45, 1643, 1645, 1884, 1887, 1890, 1894], "wari": 45, "static_graph": [45, 1608, 1893], "third": [45, 47, 1068, 1069, 1285, 1336, 1343, 1358, 1361, 1423, 1695, 1864, 1866, 1892, 1895, 1900, 1911, 1913], "add_param_group": [45, 1620, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "param_group": [45, 63, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1680, 1681, 1682, 1683, 1684, 1691, 1694], "frozen": [45, 1200, 1205, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1870, 1906], "trainabl": [45, 1015, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1680, 1681, 1682, 1683, 1684, 1894], "consolidate_state_dict": 45, "consolid": [45, 63, 1912], "pertain": 45, "preced": [45, 49, 63, 677, 1603, 1695, 1834, 1870, 1891, 1910, 1914], "dtensor": 46, "rowwis": 46, "colwis": 46, "pairwis": [46, 47, 1388, 1437, 1476], "parallelize_modul": [46, 1864], "device_mesh": 46, "parallelize_plan": 46, "tp_mesh_dim": 46, "sub_modul": 46, "parallelstyl": 46, "devicemesh": 46, "mesh": [46, 1928], "prepar": [46, 71, 794, 836, 838, 854, 856, 858, 859, 860, 1135, 1205, 1870, 1907, 1932, 1933], "pairwiseparallel": [46, 1864], "granular": [46, 63, 1209, 1888], "rowwiseparallel": [46, 1864], "_prepare_input": 46, "make_input_shard_1d_last_dim": [46, 1864], "_prepare_output": 46, "make_output_tensor": [46, 1864], "colwiseparallel": [46, 1864], "make_input_replicate_1d": [46, 1864], "make_sharded_output_tensor": 46, "megatron": 46, "lm": 46, "arxiv": [46, 47, 1398, 1446, 1447, 1474, 1652, 1703, 1815, 1889], "1909": [46, 875], "08053": 46, "multihead": [46, 1434, 1473], "mlp": [46, 1599, 1914], "sequenceparallel": [46, 1864], "pdf": [46, 1351, 1446, 1778, 1889], "2205": 46, "05198": 46, "expectedli": 46, "make_input_reshard_repl": [46, 1864], "make_input_shard_1d": [46, 1864], "make_output_replicate_1d": [46, 1864], "make_output_reshard_tensor": [46, 1864], "make_output_shard_1d": [46, 1864], "multiheadattent": [46, 1471, 1473, 1475, 1914], "multihead_attent": 46, "swap": [46, 71, 614, 785, 786, 787, 790, 794, 861, 1285, 1476, 1477, 1593, 1594, 1834, 1867, 1870, 1892, 1914, 1923, 1925, 1932], "multihead_attention_tp": 46, "tensorparallelmultiheadattent": [46, 1864], "embed_dim": [46, 732, 1434], "num_head": [46, 732, 1434, 1867], "add_bias_kv": [46, 732, 1434], "add_zero_attn": [46, 732, 1434, 1867], "kdim": [46, 732, 1434], "vdim": [46, 732, 1434], "batch_first": [46, 731, 732, 757, 1380, 1398, 1434, 1443, 1444, 1471, 1473, 1475, 1642, 1644, 1645, 1647, 1867, 1896], "tp_size": 46, "self_attent": 46, "head": [46, 732, 1336, 1434, 1471, 1473, 1475], "fullyshardeddataparallel": [46, 1864], "enable_2d_with_fsdp": [46, 1864], "parameteriz": 47, "tensorflow": [47, 1681, 1889, 1928], "backpropag": [47, 906, 1682, 1713, 1896], "surrog": 47, "likelihood": [47, 1336, 1382, 1435, 1442, 1524, 1562, 1570], "reinforc": [47, 1457, 1580], "polici": [47, 49, 51, 63, 1689, 1695], "reparameter": [47, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638, 1639, 1640, 1652], "trick": [47, 901, 1345, 1529, 1889, 1897, 1899], "autoencod": 47, "whilst": [47, 1892], "densiti": [47, 301, 1157, 1158, 1778, 1867, 1924], "log_prob": [47, 1336, 1351, 1511, 1867], "theta": [47, 1492, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1867], "pi": [47, 174, 377, 695, 928, 1153, 1154, 1247, 1378, 1442, 1525, 1570, 1687, 1688, 1707, 1769, 1770, 1773, 1774, 1775, 1776, 1810, 1868, 1869, 1911, 1924], "reward": 47, "ascent": 47, "prob": [47, 1867], "policy_network": 47, "next_stat": 47, "rsampl": 47, "parameter": [47, 377, 453, 1202, 1885, 1923], "has_rsampl": 47, "batch_shap": 47, "event_shap": 47, "validate_arg": 47, "arg_constraint": 47, "cdf": 47, "cumul": [47, 1048, 1049, 1050, 1051, 1052, 1275, 1346, 1347, 1348, 1378, 1401, 1402, 1403, 1467, 1525], "mass": 47, "enumerate_support": 47, "discret": [47, 62, 480, 1085, 1086, 1087, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1098, 1099, 1104, 1106, 1529, 1778, 1928, 1931], "cardin": [47, 1297], "univari": 47, "singleton": [47, 254, 1400, 1848, 1890], "cartesian": [47, 936, 1297, 1707], "_instanc": 47, "icdf": 47, "perplex": 47, "sample_shap": 47, "sample_n": 47, "set_default_validate_arg": 47, "mimic": [47, 1695], "stddev": 47, "varianc": [47, 968, 1346, 1347, 1348, 1373, 1382, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1520, 1524, 1680, 1681, 1717, 1726, 1727, 1851, 1852, 1887, 1900], "exp_famili": 47, "famili": 47, "p_": [47, 940, 1287, 1683], "langl": 47, "rangl": 47, "denot": [47, 71, 968, 1216, 1235, 1241, 1254, 1264, 1356, 1357, 1394, 1617, 1620, 1683, 1796, 1797, 1798, 1800, 1801, 1853, 1897, 1917, 1920, 1923], "carrier": 47, "analyt": [47, 905, 906, 1518, 1923], "bregman": 47, "courtesi": 47, "frank": 47, "nielsen": 47, "richard": 47, "nock": 47, "logit": [47, 391, 1345, 1364, 1500, 1510, 1529, 1867, 1909, 1924], "70": [47, 1254, 1713, 1884], "lower_bound": 47, "upper_bound": 47, "has_enumerate_support": 47, "param_shap": 47, "concentration1": 47, "concentration0": 47, "concentr": 47, "1046": 47, "1st": [47, 1890], "2nd": [47, 614, 1436, 1462, 1565, 1890], "greaterthan": 47, "total_count": 47, "71": 47, "trial": 47, "integergreaterthan": 47, "ldot": [47, 1227, 1235, 1266, 1282, 1297, 1400, 1421, 1422, 1423, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "unnorm": [47, 1364, 1500, 1510, 1529], "likewis": [47, 1834], "25": [47, 494, 583, 584, 585, 938, 1157, 1263, 1268, 1374, 1431, 1433, 1436, 1599, 1608, 1645, 1647, 1673, 1695, 1714, 1850, 1866, 1924], "independentconstraint": 47, "simplex": 47, "loc": [47, 1267], "lorentz": 47, "3214": 47, "width": [47, 776, 782, 855, 1156, 1157, 1158, 1342, 1343, 1357, 1358, 1360, 1361, 1397, 1422, 1423, 1435, 1462, 1480, 1538, 1596, 1883], "df": 47, "chi": 47, "continuous_bernoulli": 47, "lim": [47, 1193], "499": 47, "501": 47, "2538": [47, 1227], "pervas": 47, "loaiza": 47, "ganem": 47, "cunningham": 47, "jp": 47, "1907": 47, "06845": 47, "8954": 47, "greaterthaneq": 47, "df1": 47, "df2": 47, "fisher": 47, "snedecor": 47, "2453": 47, "degre": [47, 968, 1046, 1053, 1196, 1233, 1234, 1428, 1437, 1476, 1608, 1721, 1741, 1808, 1809, 1851, 1852, 1867, 1897, 1909, 1923], "freedom": [47, 968, 1808, 1809, 1851, 1852, 1897], "0124": 47, "half_cauchi": 47, "half_norm": 47, "base_distribut": 47, "reinterpreted_batch_ndim": 47, "diagon": [47, 68, 225, 260, 592, 593, 594, 595, 929, 964, 968, 1056, 1057, 1058, 1060, 1069, 1082, 1130, 1131, 1141, 1225, 1237, 1239, 1242, 1254, 1258, 1567, 1577, 1794, 1833, 1837, 1838, 1839, 1840, 1841, 1867, 1894, 1909, 1927], "multivari": [47, 1924], "multivariate_norm": 47, "mvn": 47, "scale_tril": 47, "diag": [47, 69, 1129, 1130, 1131, 1231, 1232, 1259, 1703, 1794, 1814, 1815, 1867, 1909], "diagn": 47, "1729": [47, 1900], "lkj_choleski": 47, "lkj": 47, "matric": [47, 260, 683, 686, 918, 930, 931, 940, 941, 942, 943, 1057, 1141, 1216, 1225, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1245, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1268, 1276, 1285, 1287, 1300, 1379, 1437, 1492, 1526, 1615, 1620, 1701, 1703, 1713, 1762, 1788, 1791, 1792, 1814, 1815, 1837, 1838, 1840, 1867, 1882, 1897, 1903, 1923, 1929], "eta": [47, 1667, 1669, 1682], "proport": [47, 1396, 1397, 1434, 1475], "det": [47, 1233, 1234, 1255, 1276, 1867, 1909], "lkjcorr": 47, "onion": 47, "3x3": [47, 1052, 1835], "3516": 47, "9361": 47, "1899": [47, 1298], "4748": 47, "8593": 47, "vine": 47, "2009": [47, 1703, 1815], "lewandowski": 47, "dorota": 47, "kurowicka": 47, "harri": [47, 1778], "joe": 47, "journal": [47, 1720], "1016": 47, "jmva": 47, "04": [47, 1112, 1273, 1771, 1778], "008": 47, "corrcholeski": 47, "log_norm": [47, 1909], "lowrank_multivariate_norm": 47, "cov_factor": 47, "cov_diag": 47, "covari": [47, 931, 964, 968, 1346, 1347, 1348, 1467, 1703], "covariance_matrix": 47, "2102": 47, "5429": [47, 1837], "woodburi": 47, "lemma": 47, "capacit": 47, "precision_matrix": 47, "mixture_same_famili": 47, "mixture_distribut": 47, "component_distribut": 47, "rightmost": [47, 931, 1157, 1158, 1869], "gaussian": [47, 1378, 1382, 1457, 1524, 1525, 1580, 1777, 1924], "gmm": 47, "bivari": 47, "innermost": [47, 71, 955, 1149, 1158, 1749], "1338": 47, "mathbf": [47, 1216, 1616, 1649, 1652, 1682], "sigma": [47, 174, 377, 757, 1345, 1379, 1380, 1381, 1398, 1399, 1457, 1458, 1526, 1580, 1616, 1649, 1772, 1808, 1809, 1851, 1852, 1867], "triangular": [47, 941, 942, 943, 1225, 1226, 1232, 1234, 1242, 1243, 1250, 1253, 1254, 1256, 1258, 1567, 1689, 1713, 1837, 1838, 1839, 1840, 1841], "positivedefinit": 47, "lowercholeski": 47, "negative_binomi": 47, "halfopeninterv": 47, "mu": [47, 377, 1681, 1683], "one_hot_categor": 47, "onehot": 47, "5623": 47, "nonneg": [47, 1477, 1703, 1815, 1924], "pmf": 47, "mathrm": [47, 920, 1233, 1234, 1235, 1236, 1247, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1437, 1442, 1467, 1615, 1670, 1671, 1672, 1682, 1717, 1889, 1924], "relaxed_bernoulli": 47, "temperatur": [47, 1529, 1864], "parametr": [47, 1125, 1617, 1624, 1649, 1650, 1885, 1894], "reparametriz": 47, "99": [47, 1207, 1681, 1866], "2951": [47, 1295], "3442": 47, "8918": 47, "9021": 47, "maddison": 47, "2017": [47, 1471, 1473, 1475, 1795, 1906], "reparametr": [47, 1529, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1632], "jang": 47, "relaxed_categor": 47, "1294": [47, 941], "2324": [47, 1196, 1428], "3859": 47, "2523": 47, "student": 47, "transformed_distribut": 47, "composit": [47, 68, 1129, 1243, 1615, 1866, 1869, 1895, 1900, 1907], "basedistribut": 47, "dx": [47, 1052, 1344, 1835, 1867, 1894, 1895, 1924], "dy": 47, "logist": [47, 1457, 1460, 1580, 1924], "sigmoidtransform": 47, "affinetransform": 47, "invert": [47, 71, 943, 1187, 1227, 1236, 1237, 1243, 1249, 1256, 1258, 1261, 1262, 1276, 1424, 1425, 1426, 1837, 1867, 1903, 1919], "3418": 47, "upper": [47, 182, 183, 184, 591, 792, 929, 934, 941, 942, 943, 945, 1083, 1084, 1156, 1157, 1225, 1226, 1232, 1234, 1242, 1243, 1254, 1258, 1446, 1567, 1575, 1576, 1689, 1695, 1713, 1728, 1749, 1837, 1840, 1841, 1867, 1887, 1909, 1924, 1930], "von_mis": 47, "circular": [47, 1356, 1357, 1358, 1404, 1405, 1406, 1565], "von": 47, "mise": 47, "unconstrain": [47, 1620], "angl": [47, 752, 881, 1053, 1276, 1414, 1707, 1721, 1765, 1864, 1867, 1909, 1923], "9777": 47, "radian": [47, 695, 881, 1053, 1721, 1867, 1909], "nichola": 47, "1979": 47, "152": [47, 614], "157": 47, "4784": [47, 1300], "symmetr": [47, 799, 817, 919, 928, 941, 942, 943, 1090, 1091, 1092, 1097, 1099, 1103, 1104, 1106, 1153, 1154, 1215, 1225, 1226, 1231, 1232, 1234, 1238, 1239, 1240, 1247, 1250, 1253, 1259, 1268, 1615, 1620, 1695, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1914, 1917], "x_ij": 47, "wu": [47, 1268], "chu": 47, "2018": [47, 1268, 1711], "sawyer": 47, "2007": 47, "anderson": 47, "w": [47, 69, 151, 757, 886, 888, 890, 896, 904, 919, 928, 968, 1127, 1138, 1153, 1154, 1193, 1235, 1334, 1335, 1342, 1343, 1345, 1347, 1348, 1352, 1357, 1358, 1364, 1368, 1369, 1371, 1372, 1373, 1380, 1392, 1393, 1400, 1411, 1412, 1422, 1423, 1433, 1434, 1435, 1440, 1441, 1462, 1478, 1479, 1481, 1482, 1492, 1500, 1518, 1519, 1527, 1562, 1568, 1569, 1616, 1649, 1652, 1867, 1882, 1883, 1887, 1889, 1894, 1897, 1910, 1911, 1928], "2003": 47, "ed": [47, 68, 1367, 1368, 1889, 1911, 1934], "odel": 47, "feiveson": 47, "1966": 47, "samplecovari": 47, "jasa": 47, "61": 47, "313": 47, "199": 47, "203": [47, 614], "ku": 47, "bloomfield": 47, "2010": [47, 1887], "ox": 47, "max_try_correct": 47, "bartlett": [47, 919], "singular": [47, 1227, 1241, 1242, 1248, 1250, 1252, 1253, 1259, 1260, 1268, 1276, 1285, 1616, 1620, 1703, 1814, 1815, 1903], "kl_diverg": 47, "kullback": [47, 1394, 1539], "leibler": [47, 1394, 1539], "register_kl": 47, "type_p": 47, "type_q": 47, "kl_normal_norm": 47, "ambigu": [47, 71, 1181, 1359, 1360, 1361, 1375, 1424, 1425, 1426, 1480, 1869], "runtimewarn": 47, "basep": 47, "derivedq": 47, "kl_version1": 47, "derivedp": 47, "baseq": 47, "kl_version2": 47, "tie": 47, "abstransform": 47, "event_dim": 47, "affin": [47, 471, 472, 473, 474, 475, 746, 748, 749, 750, 799, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1492, 1892, 1900], "cattransform": 47, "tseq": 47, "functor": [47, 1012, 1013], "submatrix": 47, "t0": [47, 1149, 1667, 1868], "exptransform": 47, "identity_transform": 47, "composetransform": 47, "corrcholeskytransform": 47, "uncontrain": 47, "euclidean": [47, 938, 1563], "x_i": [47, 68, 945, 1048, 1049, 1050, 1051, 1264, 1271, 1418, 1437, 1461, 1463, 1476, 1547, 1583, 1710, 1793, 1808, 1809, 1835, 1851, 1852, 1853, 1924], "stickbreakingtransform": 47, "r_i": 47, "tanh": [47, 574, 757, 762, 792, 882, 1378, 1380, 1381, 1398, 1399, 1427, 1443, 1445, 1469, 1525, 1557, 1589, 1865, 1867, 1882, 1883, 1887, 1909, 1916, 1923], "unsign": [47, 1917, 1926, 1929, 1930], "z_i": 47, "s_i": 47, "y_i": [47, 945, 1048, 1049, 1050, 1051, 1264, 1271, 1476, 1835, 1853, 1897], "sqrt": [47, 71, 377, 546, 670, 671, 757, 964, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1162, 1215, 1297, 1346, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1378, 1380, 1381, 1383, 1391, 1392, 1393, 1396, 1397, 1398, 1399, 1400, 1413, 1415, 1443, 1445, 1467, 1525, 1577, 1620, 1668, 1669, 1670, 1671, 1674, 1680, 1681, 1717, 1744, 1777, 1808, 1809, 1865, 1867, 1882, 1887, 1888, 1889, 1909, 1923, 1924, 1930], "cumulativedistributiontransform": 47, "copula": 47, "base_dist": 47, "independenttransform": 47, "base_transform": 47, "log_abs_det_jacobian": 47, "lowercholeskytransform": 47, "positivedefinitetransform": 47, "powertransform": 47, "expon": [47, 268, 269, 280, 467, 468, 1112, 1119, 1219, 1249, 1336, 1416, 1563, 1710, 1720, 1865, 1867, 1926, 1929], "reshapetransform": 47, "in_shap": 47, "out_shap": 47, "softplustransform": 47, "tanhtransform": 47, "softmaxtransform": 47, "biject": 47, "hmc": 47, "stacktransform": 47, "stick": 47, "primarili": [47, 70, 812, 813, 814, 820, 1328, 1879, 1914], "_call": 47, "_invers": 47, "codomain": [47, 1889], "iff": [47, 1434], "weaker": [47, 1892], "pseudoinvers": [47, 1236, 1253, 1261], "monoton": [47, 1427, 1557, 1749], "forward_shap": 47, "inverse_shap": 47, "corr_choleski": 47, "greater_than": 47, "greater_than_eq": 47, "integer_interv": 47, "less_than": 47, "lower_choleski": 47, "lower_triangular": 47, "nonnegative_integ": 47, "one_hot": [47, 1867, 1909], "positive_integ": 47, "positive_semidefinit": 47, "positive_definit": 47, "real_vector": 47, "unit_interv": 47, "is_discret": 47, "constrain": [47, 1464, 1869, 1900], "_cat": 47, "dependent_properti": 47, "_dependentproperti": 47, "_greaterthan": 47, "_greaterthaneq": 47, "_independentconstraint": 47, "_integerinterv": 47, "_interv": 47, "half_open_interv": 47, "_halfopeninterv": 47, "_lessthan": 47, "_multinomi": 47, "_stack": [47, 1909], "constraintregistri": 47, "biject_to": 47, "transform_to": 47, "overparameter": 47, "rotat": [47, 1741, 1814], "hamiltonian": 47, "mont": 47, "carlo": 47, "potential_energi": 47, "cheap": [47, 1336], "svi": 47, "fewer": [47, 68, 690, 692, 693, 696, 944, 1216, 1217, 1283, 1293, 1295, 1296, 1298, 1301, 1323, 1326, 1382, 1509, 1711, 1795, 1808, 1809, 1813, 1831, 1851, 1852, 1875, 1890, 1905, 1930], "my_constraint": 47, "my_transform": 47, "myconstraintclass": 47, "my_factori": 47, "mytransform": 47, "param1": [47, 1900], "param2": [47, 1900], "constraint_registri": 47, "my_registri": 47, "construct_transform": 47, "myconstraint": 47, "from_dlpack": [48, 877, 1864], "ext_tensor": [48, 1120], "extern": [48, 973, 1120, 1211, 1879, 1891, 1892, 1903, 1907], "immut": [48, 1120, 1869], "__dlpack__": [48, 1120], "capsul": [48, 877, 1120], "ndarrai": [48, 457, 876, 1120, 1121, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1907, 1928, 1930], "pycapsul": [48, 1120], "to_dlpack": [48, 1120, 1864], "dltensor": [48, 1120], "t3": [48, 1120, 1920], "legaci": [48, 59, 1529, 1913, 1926], "idiomat": 48, "plane": [49, 58, 735, 736, 737, 738, 739, 740, 763, 764, 765, 766, 769, 770, 771, 779, 780, 1057, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1376, 1377, 1396, 1397, 1400, 1416, 1421, 1422, 1423, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1545, 1548, 1549, 1551, 1552, 1553, 1652, 1718, 1719, 1741], "monitor": [49, 59, 60, 972, 1697, 1864, 1892, 1898], "unhealthi": 49, "tear": 49, "decentr": 49, "elasticag": 49, "quad": [49, 1344, 1345, 1364, 1395, 1419, 1435, 1477], "group_result": 49, "is_fail": [49, 50], "exit_cod": 49, "get_worker_group": 49, "workergroup": [49, 59], "mutabl": [49, 1211, 1866, 1911, 1928], "implementor": 49, "defens": 49, "retri": [49, 51, 60, 63, 1026, 1919, 1921], "max_restart": [49, 50, 59], "runresult": 49, "workerspec": [49, 50, 59, 60], "local_world_s": [49, 50, 59], "rdzv_handler": [49, 50, 58], "monitor_interv": [49, 50], "local_addr": [49, 58], "tee": [49, 56], "blueprint": 49, "spec": [49, 50, 60, 85, 790, 791, 816, 817, 818, 821, 822, 823, 1916], "homogen": [49, 59], "rendezvoushandl": [49, 50, 58, 59], "rdzv": [49, 57, 59], "consol": [49, 52, 55, 56, 59, 1928], "get_entrypoint_nam": 49, "__qualname__": 49, "workerst": 49, "unknown": [49, 1610, 1611, 1921], "unrecover": 49, "interrupt": [49, 1881], "termin": [49, 58, 60, 71, 1673, 1881, 1919], "uncaught": [49, 51], "unhandl": 49, "recov": [49, 892, 1090, 1255, 1287, 1608, 1641, 1810, 1888, 1896, 1897, 1915], "is_run": 49, "role_rank": [49, 59], "role_world_s": [49, 59], "pid": [49, 51, 59, 60, 1467, 1896, 1913], "local_elastic_ag": 49, "localelasticag": [49, 50, 60], "start_method": [49, 50, 56, 60, 1881], "exit_barrier_timeout": 49, "log_dir": [49, 56, 1879, 1928], "inter": [49, 51, 1146, 1760, 1891, 1893, 1912, 1919], "advis": [49, 541, 614, 862, 1902], "pipe": [49, 60, 1864, 1919], "torchelastic_enable_file_tim": 49, "torchelastic_timer_fil": 49, "shared_queu": 49, "get_context": [49, 60, 1902], "nproc_per_process": 49, "foobar": [49, 51, 55, 56], "other_param": [49, 60], "usr": [49, 56, 58, 1892], "simpleelasticag": 49, "scaffold": 49, "_assign_worker_rank": 49, "group_world_s": 49, "_exit_barri": 49, "_initialize_work": 49, "worker_group": 49, "fresh": [49, 957, 1060, 1752, 1783, 1863], "start_work": 49, "_stop_work": 49, "optimist": 49, "deleg": 49, "_monitor_work": 49, "_rendezv": 49, "_restart_work": 49, "_shutdown": 49, "death_sig": 49, "sigterm": 49, "_start_work": 49, "gracefulli": [49, 59, 68, 1226, 1895], "meaningless": 49, "intention": [49, 1066, 1853, 1898, 1919], "ship": [50, 1126, 1891, 1919], "programmat": [50, 71, 1900], "my_launch": 50, "argv": [50, 61], "trainer_entrypoint_fn": 50, "fn_arg": 50, "run_result": 50, "myrendezvoushandl": 50, "elastic_ag": 50, "metrichandl": [50, 55], "mymetrichandl": 50, "metric_data": [50, 55], "metricdata": 50, "sink": [50, 55, 1879], "eventhandl": 50, "cloudwatch": 50, "nulleventhandl": 50, "myeventhandl": 50, "start_process": [51, 56, 1881], "torchelastic_error_fil": 51, "error_handl": 51, "sugar": [51, 1868], "get_error_handl": 51, "childfailederror": 51, "get_first_failur": 51, "dump_error_fil": 51, "error_fil": [51, 56], "exitcod": [51, 59], "nanni": 51, "diagnost": [51, 72, 77, 78, 79, 80, 81, 82, 83, 84, 1662, 1864, 1866], "torchelastic_ag": 51, "trainer_0": 51, "trainer_1": 51, "trainer_n": 51, "errorhandl": 51, "record_except": 51, "processfailur": 51, "test_ev": 52, "eventsourc": 52, "get_logging_handl": 52, "millisecond": [52, 55, 972, 1879], "eventmetadatavalu": 52, "telemetri": 55, "timeseri": 55, "metric_group": 55, "metric_nam": 55, "sensibl": 55, "my_modul": [55, 63, 71, 1866, 1911], "nullmetricshandl": 55, "consolemetricshandl": 55, "my_method": 55, "put_metr": 55, "calculate_lat": 55, "succinctli": 55, "baz": [55, 71, 851, 1911, 1930], "leaf_modul": 55, "classnam": [55, 1869], "threw": 55, "my_app": 55, "consolemetrichandl": 55, "stdout": [55, 56, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1699, 1907], "stdoutmetrichandl": 55, "1574213883": 55, "4182858": 55, "my_metr": 55, "1574213940": 55, "5237644": 55, "nullmetrichandl": 55, "class_nam": [55, 71], "def_nam": 55, "metric_valu": 55, "metric_group_nam": 55, "popen": 56, "stderr": [56, 1863, 1878], "err": 56, "echo": 56, "hello": [56, 68, 1868, 1907, 1911], "pcontext": 56, "multiprocesscontext": 56, "subprocesscontext": 56, "keyset": 56, "bitmask": 56, "mask": [56, 399, 400, 401, 402, 403, 541, 732, 905, 906, 1289, 1340, 1351, 1373, 1434, 1471, 1472, 1473, 1474, 1475, 1520, 1577, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1684, 1864, 1867, 1882, 1883, 1923], "bar0": 56, "bar1": 56, "file1": 56, "file2": 56, "caution": 56, "short": [56, 71, 731, 760, 1069, 1193, 1351, 1398, 1399, 1511, 1664, 1762, 1810, 1868, 1882, 1889, 1890, 1900, 1919, 1925, 1926, 1929], "ing": 56, "cmd": [56, 59], "forkserv": [56, 1608, 1881, 1902], "tee_stdout": 56, "tee_stderr": 56, "processcontext": [56, 1881], "superset": [56, 59], "runprocsresult": 56, "num_nod": [57, 59], "trainers_per_nod": 57, "num_allowed_failur": 57, "job_id": [57, 58, 59], "endpoint": [57, 58, 59], "host_node_addr": [57, 59], "min_siz": [57, 59], "num_allowed_failures_or_membership_chang": 57, "node1": [57, 59], "29400": [57, 59], "sidecar": [57, 58], "agre": [58, 1254, 1921], "resum": [58, 1689, 1695, 1697, 1919, 1921, 1928], "retryabl": 58, "lose": [58, 61, 63, 192, 209, 1883], "train_loop": [58, 859], "arriv": [58, 59, 1919, 1921], "dynamicrendezvoushandl": 58, "rendezvousbackend": 58, "c10drendezvousbackend": 58, "etcdrendezvousbackend": 58, "supersed": 58, "etcdrendezvoushandl": 58, "my_run_id": 58, "from_backend": 58, "run_id": [58, 59], "min_nod": 58, "max_nod": 58, "rendezvousparamet": 58, "admit": [58, 59, 1892], "get_as_bool": 58, "get_as_int": 58, "rendezvoushandlerregistri": 58, "create_handl": 58, "creator": [58, 1889, 1919, 1921], "get_run_id": 58, "is_clos": 58, "set_clos": 58, "next_rendezv": 58, "rendezvousclosederror": 58, "rendezvousconnectionerror": 58, "rendezvousstateerror": 58, "rendezvoustimeouterror": 58, "num_nodes_wait": 58, "shutdown": [58, 1919, 1920], "rendezvouserror": 58, "dynamic_rendezv": 58, "join_timeout": 58, "600": 58, "last_call_timeout": 58, "close_timeout": 58, "rendezvoustimeout": 58, "get_stat": [58, 89], "fenc": 58, "set_stat": [58, 89], "condition": [58, 1759], "last_cal": 58, "heartbeat": 58, "keep_al": 58, "c10d_rendezvous_backend": 58, "create_backend": 58, "store_typ": 58, "tcp": [58, 59, 1919], "read_timeout": 58, "60": [58, 60, 1382, 1699, 1825, 1830, 1879, 1919], "is_host": 58, "cname": 58, "fqdn": [58, 59], "etcd_rendezvous_backend": 58, "ssl_cert": 58, "ssl": 58, "certif": 58, "ssl_cert_kei": 58, "ca_cert": 58, "rool": 58, "key_prefix": 58, "ttl": 58, "hour": 58, "etcd_rendezv": 58, "rdzv_impl": 58, "etcdrendezv": 58, "etcd_address": 58, "min_work": 58, "max_work": 58, "noqa": 58, "w605": 58, "2379": [58, 1293], "etcd_prefix": 58, "etcdstor": 58, "etcd_stor": 58, "etcd_client": 58, "etcd_store_prefix": 58, "piggyback": 58, "num": [58, 742, 743, 757, 1318, 1380, 1383, 1398, 1434, 1443, 1471], "lookuperror": 58, "override_timeout": 58, "etcdserv": 58, "cumbersom": [58, 1869], "etcd_serv": 58, "data_dir": 58, "v3": [58, 59], "substitut": [58, 71, 1208, 1889, 1926], "torchelastic_etcd_binary_path": 58, "get_client": 58, "etcd_binary_path": 58, "migrat": [59, 64, 1297, 1917], "train_script": 59, "aforment": 59, "suffic": [59, 71], "compliant": [59, 61], "num_train": 59, "wors": [59, 1849], "port_k": 59, "etcd": 59, "v2": [59, 1264, 1702, 1863], "revis": 59, "localworkergroup": 59, "rdzv_id": 59, "rdzv_backend": [59, 61], "rdzv_endpoint": [59, 61], "max_nnod": 59, "torchelastic_restart_count": 59, "torchelastic_max_restart": 59, "python_exec": 59, "gang": 59, "departur": 59, "surviv": 59, "kill": [59, 60, 1881, 1896], "load_checkpoint": [59, 61], "checkpoint_path": [59, 61], "dataset": [59, 61, 795, 1336, 1345, 1394, 1864, 1896, 1899, 1906, 1910, 1914, 1915, 1928], "train_step": 59, "should_checkpoint": 59, "save_checkpoint": [59, 61], "acquir": [60, 71, 1900, 1921, 1923], "deadlin": 60, "message_queu": 60, "localtimerserv": 60, "max_interv": 60, "trainer_func": 60, "localtimercli": 60, "expiri": 60, "timer_cli": 60, "countdown": 60, "timefram": [60, 1919], "elig": [60, 1921], "reap": 60, "timerserv": 60, "mp_queue": 60, "daemon": [60, 1881], "filetimerserv": 60, "file_path": 60, "log_ev": [60, 1879], "filetimercli": 60, "fifo": 60, "watchdog": 60, "filetimerrequest": 60, "sigkil": 60, "named_pip": 60, "mkfifo": 60, "timercli": 60, "timerrequest": 60, "scope_id": 60, "expiration_tim": 60, "acquisit": 60, "request_queu": 60, "entiti": [60, 71], "clear_tim": 60, "get_expired_tim": 60, "register_tim": 60, "timer_request": 60, "use_env": 61, "expositori": 61, "worst": [61, 1894], "total_num_epoch": 61, "sharding_strategi": 63, "cpu_offload": 63, "auto_wrap_polici": 63, "backward_prefetch": 63, "backwardprefetch": [63, 1864], "backward_pr": [63, 1196, 1428], "mixed_precis": [63, 1608], "ignored_modul": 63, "param_init_fn": 63, "sync_module_st": 63, "forward_prefetch": 63, "limit_all_gath": 63, "use_orig_param": 63, "ignored_st": 63, "deepspe": 63, "shorten": 63, "sharded_modul": 63, "0001": [63, 71, 1050, 1240, 1416, 1545, 1667, 1697, 1867, 1910], "stale": 63, "dev_id": 63, "no_sync": [63, 1608], "offload": 63, "ping": 63, "77724": 63, "summon_full_param": 63, "shardingstrategi": [63, 1864], "shard_grad_op": 63, "unshard": 63, "full_shard": 63, "with_grad": 63, "reacquir": 63, "hybrid_shard": 63, "cpuoffload": [63, 1864], "_fsdppolici": 63, "modulewrappolici": 63, "nonwrapped_numel": 63, "subtre": 63, "size_based_auto_wrap_polici": 63, "exce": [63, 1273, 1892], "100m": 63, "numel": [63, 434, 443, 948, 968, 1100, 1181, 1867, 1882, 1889, 1909, 1923], "custom_auto_wrap_polici": 63, "min_num_param": 63, "1e8": 63, "my_auto_wrap_polici": 63, "functool": [63, 66, 838, 1894, 1930], "1e5": 63, "mixedprecis": [63, 1864], "is_meta": [63, 1909], "reset_paramet": 63, "torchdistx": 63, "deferred_init": 63, "materialize_modul": 63, "my_init_fn": 63, "fsdp_model": 63, "fullstatedictconfig": 63, "flight": 63, "named_paramet": [63, 65, 67, 1125, 1196, 1200, 1428, 1900, 1905], "flatparamet": 63, "ignored_paramet": 63, "norm_typ": [63, 742, 743, 1371, 1372, 1396, 1397, 1518, 1519, 1548, 1549, 1612, 1867], "infin": [63, 966, 1186, 1188, 1190, 1191, 1322, 1344, 1421, 1422, 1423, 1551, 1552, 1553, 1612, 1672, 1782, 1793, 1923, 1924], "no_shard": 63, "flatten_sharded_optim_state_dict": 63, "sharded_optim_state_dict": 63, "shard_full_optim_state_dict": 63, "unflatten": [63, 1867, 1882, 1883, 1909, 1927], "fsdp_modul": 63, "root_onli": 63, "full_optim_state_dict": 63, "optim_input": 63, "rank0_onli": 63, "convent": [63, 71, 335, 939, 1069, 1087, 1089, 1113, 1135, 1346, 1347, 1348, 1391, 1392, 1393, 1467, 1742, 1745, 1843, 1863, 1878, 1884, 1889, 1897, 1900, 1905], "load_optim_state_dict_pre_hook": 63, "optim_state_dict": 63, "namedoptim": 63, "optim_state_dict_to_load": 63, "named_buff": [63, 1196, 1428, 1900, 1905], "state_dict_typ": 63, "oom": [63, 1896], "unflattend": 63, "statedicttyp": 63, "fulloptimstatedictconfig": 63, "set_state_dict_typ": 63, "full_state_dict": 63, "save_a_checkpoint": 63, "load_a_checkpoint": 63, "optim_state_dict_post_hook": 63, "is_named_optim": 63, "load_directli": 63, "original_osd": 63, "keyedoptim": 63, "torchrec": [63, 1864], "gossipgrad": [63, 1608], "latter": [63, 684, 788, 1196, 1398, 1428, 1435, 1895, 1900, 1902, 1904], "rekey_optim_state_dict": 63, "optim_state_key_typ": 63, "loadabl": [63, 1863], "wrapped_model": 63, "wrapped_optim": 63, "full_osd": 63, "nonwrapped_model": 63, "nonwrapped_optim": 63, "rekeyed_osd": 63, "optimstatekeytyp": 63, "param_id": 63, "osd": 63, "param_nam": 63, "sharded_osd": 63, "scatter_full_optim_state_dict": 63, "new_model": 63, "new_optim": 63, "remap": [63, 89, 1200, 1203, 1267, 1288, 1863, 1878, 1918], "state_dict_config": 63, "optim_state_dict_config": 63, "descend": [63, 71, 137, 539, 873, 1196, 1259, 1260, 1428, 1787, 1814, 1867], "transpar": [63, 1893, 1912, 1919, 1921], "sharded_state_dict": 63, "shardedstatedictconfig": 63, "offload_to_cpu": 63, "optimstatedictconfig": 63, "param_state_dict": 63, "statedictconfig": 63, "statedictset": 63, "writeback": 63, "summon": 63, "discard": [63, 1193, 1253, 1618, 1863, 1868, 1879], "redundantli": [63, 1888], "materi": [63, 897, 961, 1610, 1611, 1684, 1737, 1738, 1894], "throughput": [63, 1866, 1891], "contend": 63, "backward_post": 63, "reorder": [63, 1089, 1251], "volum": [63, 1158], "_hybrid_shard_zero2": 63, "param_dtyp": 63, "reduce_dtyp": 63, "buffer_dtyp": 63, "keep_low_precision_grad": 63, "cast_forward_input": 63, "cast_root_forward_input": 63, "_module_classes_to_ignor": 63, "batchnorm": [63, 697, 698, 1134, 1196, 1205, 1428, 1467, 1608, 1877, 1889, 1900, 1910, 1912, 1914, 1916, 1917], "_batchnorm": 63, "permit": [63, 1923], "thereaft": 63, "upcast": 63, "offload_param": 63, "love": 64, "hear": 64, "arbitrarili": [64, 69, 511, 1199, 1492, 1869, 1889, 1895], "stock": [64, 69], "ensembl": [64, 67, 69, 1135], "maml": [64, 69], "vjp": [64, 67, 68, 886, 887, 1131, 1137, 1856, 1894, 1895], "whirlwind": 64, "tour": 64, "running_mean": [66, 1134, 1196, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1467, 1497, 1537, 1865, 1867, 1900, 1905], "running_var": [66, 1134, 1196, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1467, 1497, 1537, 1865, 1867, 1905], "groupnorm": [66, 1528], "anywher": [66, 1888], "batchnorm2d": [66, 710, 713, 715, 720, 811, 1205, 1365, 1402, 1497, 1877, 1889, 1900, 1914, 1916], "track_running_stat": [66, 748, 749, 750, 1134, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1905], "resnet": [66, 1863, 1866, 1868, 1900, 1911, 1928, 1932], "regnet": 66, "norm_lay": 66, "num_group": [66, 746, 1383, 1528, 1867], "fragil": 66, "replace_all_batch_norm_modules_": 66, "upstream": [67, 1906], "kept": [67, 71, 694, 776, 782, 1346, 1347, 1348, 1391, 1392, 1393, 1467, 1538, 1596, 1869, 1881, 1917], "jvp": [67, 68, 887, 891, 892, 893, 897, 1133, 1894], "jacfwd": [67, 68, 900, 1129, 1895], "make_functional_with_buff": 67, "hurri": 67, "emul": [67, 796, 1870, 1894], "fmodel": 67, "compute_loss": [67, 69, 1125, 1127], "predict": [67, 1336, 1345, 1382, 1510, 1910, 1928], "argnum": [67, 1127, 1128, 1129, 1130, 1131], "stack_module_st": 67, "num_model": [67, 1135], "in_featur": [67, 717, 725, 726, 729, 730, 753, 761, 1135, 1196, 1336, 1413, 1415, 1428, 1599, 1615, 1616, 1648, 1649, 1652, 1900], "out_featur": [67, 717, 725, 726, 729, 730, 753, 761, 1135, 1196, 1349, 1413, 1415, 1428, 1599, 1615, 1616, 1648, 1649, 1652, 1900], "base_model": 67, "deepcopi": [67, 1914, 1933], "clearer": [67, 1252, 1684, 1894, 1908], "call_single_model": 67, "stori": [67, 1897], "grad_x": [68, 1895], "has_aux": [68, 1127, 1128, 1130, 1131, 1132, 1136], "mental": [68, 1126], "absenc": 68, "unbind": [68, 1137, 1856, 1864, 1867, 1882, 1909, 1927], "lst": 68, "in_dim": [68, 69, 889, 1127, 1137, 1856, 1895], "batchedtensor": 68, "batched_tensor_input": 68, "new_": [68, 1892, 1929], "new_zero": [68, 1867, 1909], "new_empti": [68, 1867, 1909], "diag_emb": [68, 1059, 1231, 1232, 1259, 1814, 1867, 1909], "vec": [68, 108, 109, 423, 687, 1320, 1651, 1865, 1867, 1923], "copy_": [68, 222, 1126, 1480, 1866, 1867, 1882, 1892, 1925], "arithmet": [68, 923, 926, 940, 1251, 1739, 1870, 1879, 1882, 1883, 1903, 1914, 1926], "extra_arg": 68, "theoret": 68, "custom_dot": 68, "lax": 68, "cond": [68, 1903], "while_loop": 68, "is_nonzero": [68, 1867, 1909, 1923], "rag": 68, "unclear": [68, 614], "add_nois": 68, "prng": 68, "cos_x": [69, 1127], "neg_sin_x": [69, 1127], "hide": [69, 1137, 1856, 1895], "feature_s": [69, 1127, 1137, 1856], "feature_vec": [69, 1127, 1137, 1856], "mseloss": [69, 1127, 1389, 1459, 1558, 1892, 1893], "grad_weight_per_exampl": [69, 1127], "cotang": [69, 1136], "vjp_fn": [69, 1136], "out_tang": 69, "hessian0": 69, "hessian1": 69, "hess": [69, 1129], "rpc_async": [70, 1869, 1909, 1919, 1921], "add_done_callback": 70, "fut": [70, 1199, 1608, 1891, 1919], "set_result": [70, 1608, 1919], "haven": [70, 1900], "set_except": 70, "baseexcept": 70, "slow_set_futur": 70, "sleep": 70, "cb1": 70, "cb2": 70, "dedic": [70, 1892], "didn": [70, 1894, 1906, 1910], "cb_fut": 70, "chain_cb_fut": 70, "cb": [70, 1919], "collect_al": [70, 1864], "fut0": 70, "fut1": [70, 1919], "fut_list": 70, "wait_al": [70, 1864], "toolkit": 71, "clamp": [71, 187, 188, 796, 799, 946, 1202, 1344, 1382, 1527, 1538, 1596, 1865, 1867, 1877, 1882, 1907, 1909, 1914, 1916, 1917, 1924, 1930], "get_attr": 71, "fake": [71, 709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 790, 796, 797, 807, 809, 835, 858, 859, 1083, 1084, 1864, 1911, 1914, 1917], "theses": 71, "callsit": 71, "constitut": 71, "tracer_class": 71, "treatment": 71, "topk": [71, 1865, 1867, 1882, 1909], "linear_weight": 71, "add_1": [71, 1126], "linear_1": 71, "relu_1": 71, "topk_1": 71, "pose": [71, 1920], "explor": [71, 1863, 1889, 1900, 1911], "edit": [71, 1911, 1927], "lint": 71, "new_nod": 71, "tediou": 71, "unwieldi": 71, "machineri": [71, 1894], "imagin": [71, 1919], "requisit": 71, "relu_decomposit": 71, "decomposition_rul": 71, "constitu": [71, 1884], "new_graph": 71, "graphappendingtrac": 71, "proxy_arg": 71, "output_proxi": 71, "node_copi": 71, "ari": [71, 1907], "unari": [71, 1130, 1131, 1471, 1473, 1475, 1870, 1882], "organiz": 71, "shapeprop": 71, "named_modul": [71, 1196, 1428, 1900], "args_it": 71, "load_arg": 71, "map_arg": 71, "fetch_attr": 71, "target_atom": 71, "attr_itr": 71, "nonexist": [71, 1868, 1869], "self_obj": 71, "encompass": 71, "prove": [71, 1881], "disprov": 71, "led": 71, "auxiliari": [71, 1127, 1128, 1130, 1131, 1132, 1136, 1863, 1899], "unord": [71, 1429, 1438], "nondetermin": [71, 906, 1904], "dedupl": 71, "torchvis": [71, 1863, 1864, 1866, 1868, 1907, 1911, 1914, 1928, 1932], "transformed_resnet18": 71, "input_imag": 71, "224": [71, 858, 859, 1866, 1868, 1907], "margin": [71, 1362, 1388, 1420, 1431, 1433, 1476, 1477, 1508, 1535, 1550, 1559, 1593, 1594, 1867, 1928], "commut": 71, "toolbox": 71, "tradit": [71, 1475], "luckili": 71, "my_pass": 71, "my_module_transform": 71, "input_valu": 71, "prompt": [71, 1863, 1906], "set_trac": [71, 1201, 1207, 1213, 1866], "examin": [71, 1900, 1907, 1913], "undergon": 71, "subclassm": 71, "untrac": 71, "pre_trac": 71, "post_trac": 71, "sake": 71, "tabular": [71, 677, 1875], "transform_graph": 71, "session": 71, "luck": 71, "input_nod": 71, "stepwis": 71, "onlin": [71, 1669], "realpython": 71, "pycharm": 71, "vscode": 71, "graphic": [71, 1906], "parlanc": 71, "func_to_trac": 71, "dyn": 71, "155": 71, "__bool__": [71, 1867, 1869], "to_bool": 71, "traceerror": [71, 1914], "architectur": [71, 996, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1364, 1471, 1510, 1758, 1892, 1903, 1914], "hyper": [71, 1459, 1868, 1928], "do_activ": 71, "512": [71, 1471, 1472, 1473, 1474, 1475, 1892], "without_activ": 71, "with_activ": 71, "traced_without_activ": 71, "traced_with_activ": 71, "concrete_arg": 71, "truli": [71, 1907], "__torch_function__": [71, 1934], "161": 71, "len_1": 71, "sqrt_1": 71, "mycustomtrac": 71, "traced_graph": 71, "myspecialsubmodul": 71, "submod": 71, "neg_1": 71, "is_leaf_modul": [71, 1933], "sparse_coo_tensor": [71, 541, 578, 1795, 1867, 1871, 1909, 1923], "ones_lik": [71, 1130, 1131, 1136, 1867, 1884, 1892, 1895, 1900, 1909], "zeros_lik": [71, 895, 897, 1867, 1871, 1884, 1892, 1909, 1923], "viabl": [71, 1892], "torch_randn": 71, "gotcha": 71, "bake": [71, 1200, 1205, 1670, 1671, 1910], "dropoutrepro": 71, "assert_clos": [71, 1086, 1088, 1089, 1094, 1095, 1100, 1101, 1102, 1104, 1106, 1864, 1866, 1930], "greatest": [71, 1139, 1322, 1907, 1930], "6207983493804932": 71, "dropoutrepro2": 71, "pytre": [71, 1895], "overspeci": 71, "ph": 71, "shouldn": [71, 970, 1911, 1923, 1927], "fn_or_nam": 71, "callfunct": 71, "my_custom_funct": 71, "fn_to_be_trac": 71, "reassign": [71, 1892], "regener": 71, "unset": [71, 1903], "add_submodul": 71, "subpath": 71, "get_submodul": [71, 1196, 1428], "delete_all_unused_submodul": 71, "delete_submodul": 71, "print_read": 71, "print_output": 71, "date": [71, 1911], "pythoncod": 71, "fxmodul": 71, "pathlik": [71, 1267, 1745, 1911], "owning_modul": 71, "tracer_cl": 71, "tracer_extra": 71, "the_funct": 71, "type_expr": 71, "create_nod": 71, "method_nam": 71, "0th": [71, 1137, 1856], "inserting_befor": 71, "influenc": [71, 1661, 1907, 1923], "eliminate_dead_cod": 71, "topolog": [71, 1907], "attr_1": 71, "is_impur": 71, "erase_nod": 71, "to_eras": 71, "qualified_nam": 71, "graph_copi": 71, "val_map": 71, "return_output_nod": 71, "slice": [71, 604, 692, 693, 1346, 1347, 1348, 1461, 1463, 1467, 1583, 1584, 1734, 1751, 1752, 1783, 1793, 1844, 1865, 1866, 1870, 1884, 1907, 1909, 1923, 1924, 1927, 1929], "memory_format": [71, 156, 171, 173, 176, 179, 180, 181, 190, 196, 207, 210, 240, 267, 297, 325, 331, 393, 497, 498, 522, 577, 947, 1070, 1071, 1124, 1196, 1428, 1608, 1660, 1723, 1725, 1727, 1862, 1864, 1865, 1867, 1930], "layout": [71, 151, 192, 209, 342, 343, 434, 444, 445, 446, 447, 448, 457, 541, 578, 579, 580, 581, 582, 584, 585, 614, 686, 862, 890, 892, 919, 928, 985, 1070, 1071, 1072, 1082, 1087, 1105, 1123, 1124, 1153, 1154, 1215, 1266, 1282, 1290, 1300, 1328, 1544, 1659, 1660, 1684, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1834, 1839, 1841, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1871, 1884, 1892, 1909, 1911, 1923, 1928, 1929, 1930], "companion": 71, "__exit__": [71, 1869, 1870, 1911], "arg_transform": 71, "value_remap": 71, "_node_list": 71, "doubli": 71, "on_generate_cod": 71, "make_transform": 71, "transformcodefunc": 71, "insert_pdb": 71, "current_tran": 71, "default_valu": 71, "_not_": 71, "tabul": 71, "process_input": 71, "process_output": 71, "python_cod": 71, "root_modul": [71, 790, 1916], "set_codegen": 71, "return_typ": [71, 694, 1048, 1049, 1158, 1217, 1255, 1293, 1296, 1298, 1301, 1324, 1787, 1832, 1837], "all_input_nod": 71, "format_nod": 71, "placeholder_nam": 71, "maybe_return_typenam": 71, "autogener": [71, 1895], "impur": 71, "normalized_argu": 71, "arg_typ": 71, "kwarg_typ": 71, "normalize_to_only_use_kwarg": 71, "vararg": 71, "argskwargspair": 71, "bx": 71, "ax": [71, 1227, 1241, 1245, 1256, 1257, 1258, 1286, 1297, 1436, 1446, 1837, 1907], "prev": [71, 1682], "replace_with": 71, "delete_user_cb": 71, "propagate_meta": 71, "replace_input_with": 71, "old_input": 71, "new_input": 71, "create_proxi": 71, "record_stack_trac": 71, "update_arg": 71, "update_kwarg": 71, "autowrap_modul": 71, "autowrap_funct": 71, "create_arg": 71, "create_args_for_root": 71, "root_fn": 71, "is_modul": 71, "proxy_factory_fn": 71, "attr": [71, 151, 890, 1297, 1742], "attr_val": 71, "parameter_proxy_cach": 71, "module_qualified_nam": [71, 1933], "path_of_modul": 71, "some_hyperparamet": 71, "indexed_item": 71, "proxied_valu": 71, "garbage_collect_valu": 71, "run_nod": 71, "negsigmswapinterpret": 71, "call_self": 71, "args_tail": 71, "boxed_run": 71, "args_list": 71, "promptli": [71, 1268], "fetch_args_kwargs_from_env": 71, "map_nodes_to_valu": 71, "initial_env": 71, "enable_io_process": 71, "negsigmswapxform": 71, "w1": 71, "w2": 71, "m1": [71, 1854, 1855], "m2": [71, 1648, 1854, 1855, 1914], "despit": [71, 1211, 1212, 1897], "stack_1": 71, "stack_2": 71, "sum_2": 71, "max_1": 71, "max_2": 71, "add_2": 71, "onnx": [83, 86, 87, 88, 1642, 1643, 1661, 1662, 1663, 1664, 1665, 1666, 1864, 1883, 1914], "dynamo_export": [83, 1662, 1663, 1907], "opset_vers": [88, 1661, 1907, 1909], "g_cpu": 89, "g_cuda": 89, "bytetensor": [89, 1001, 1002, 1040, 1041, 1148, 1307, 1314, 1763, 1918, 1926, 1929], "2147483647": 89, "0x8000_0000_0000_0000": [89, 1288, 1918], "0xffff_ffff_ffff_ffff": [89, 1288, 1918], "random_devic": 89, "1516516984916": 89, "new_stat": [89, 1040, 1041, 1314, 1763, 1918], "void": [89, 971, 1013, 1892, 1899], "g_cpu_oth": 89, "abs_": [93, 1867, 1882, 1929], "acosh": [97, 123, 864, 1865, 1867, 1882, 1909], "batch1": [100, 101, 152, 153, 683, 918, 1867], "batch2": [100, 101, 152, 153, 170, 683, 918, 1867], "tensor1": [102, 103, 104, 105, 684, 685, 1290, 1739, 1867], "tensor2": [102, 103, 104, 105, 314, 404, 684, 685, 1290, 1739, 1867], "mat1": [106, 107, 551, 686, 1160, 1216, 1300, 1788, 1791, 1792, 1806, 1865, 1867], "mat2": [106, 107, 413, 551, 686, 930, 1160, 1216, 1300, 1788, 1791, 1792, 1806, 1865, 1867], "mat": [108, 109, 537, 687, 1320, 1720, 1785, 1788, 1806, 1867, 1928], "vec1": [110, 111, 688, 1867], "vec2": [110, 111, 288, 460, 688, 1142, 1702, 1867], "keepdim": [113, 115, 116, 117, 119, 135, 136, 354, 392, 407, 409, 410, 411, 414, 428, 429, 430, 431, 452, 469, 478, 552, 562, 612, 690, 692, 693, 694, 696, 871, 872, 1217, 1248, 1252, 1265, 1283, 1293, 1295, 1296, 1298, 1301, 1323, 1324, 1325, 1326, 1437, 1566, 1655, 1711, 1714, 1808, 1809, 1813, 1851, 1852, 1865, 1867, 1882, 1924], "rtol": [114, 344, 691, 905, 906, 1185, 1250, 1253, 1666, 1866, 1867, 1930], "atol": [114, 344, 691, 905, 906, 1185, 1250, 1253, 1262, 1666, 1866, 1867, 1894, 1930], "08": [114, 344, 691, 928, 1185, 1242, 1363, 1442, 1570, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1697, 1769, 1867], "equal_nan": [114, 344, 691, 1185, 1867, 1930], "arcco": [122, 1867, 1909, 1930], "acosh_": [124, 1867, 1882], "arccosh": [124, 1867, 1909], "arcsin": [126, 878, 1867, 1909, 1923], "arcsinh": [128, 1867, 1909], "atan2_": [131, 1867, 1882], "arctan2": [131, 1867, 1909], "arctan": [132, 1867, 1909], "arctanh": [134, 1867, 1909], "cl": [140, 1894, 1914, 1919, 1934], "asinh": [144, 866, 1865, 1867, 1882, 1909, 1923], "atan": [148, 628, 629, 867, 1865, 1867, 1882, 1909, 1923], "atanh": [150, 869, 1865, 1867, 1882, 1909, 1923], "wrt": [151, 905, 906], "60521": [151, 890], "issuecom": [151, 890], "867061780": [151, 890], "texttt": [154, 155, 691, 1185, 1336, 1930], "bernoulli": [155, 757, 1340, 1366, 1367, 1368, 1369, 1373, 1380, 1398, 1512, 1513, 1514, 1515, 1520, 1864, 1867, 1882, 1909, 1931], "preserve_format": [156, 171, 173, 176, 179, 180, 181, 190, 207, 210, 240, 267, 297, 325, 393, 522, 577, 947, 1071, 1124, 1660, 1723, 1725, 1727, 1862, 1926], "minlength": [157, 921, 1867], "bitwise_and": [159, 1865, 1867, 1909], "bitwise_left_shift": [161, 1867, 1909], "bitwise_not": [163, 1865, 1867, 1882, 1909], "bitwise_or": [165, 1865, 1867, 1909], "bitwise_right_shift": [167, 1867, 1909], "bitwise_xor": [169, 1865, 1867, 1909], "uint8": [173, 242, 614, 690, 696, 1121, 1712, 1715, 1716, 1739, 1914, 1925, 1926, 1928, 1929, 1935], "cauchi": [174, 1864, 1889, 1897, 1909, 1931], "dfrac": [174, 377, 605, 1363, 1509, 1616, 1649, 1652], "complex32": [180, 1356, 1357, 1358, 1502, 1503, 1504, 1664, 1929, 1930], "int8": [181, 447, 726, 922, 923, 924, 925, 926, 927, 1121, 1277, 1278, 1279, 1280, 1914, 1917, 1925, 1926, 1929, 1935], "input2": [184, 458, 459, 515, 757, 943, 1349, 1362, 1363, 1420, 1437, 1498, 1508, 1509, 1550, 1867, 1888, 1907], "clamp_": [189, 1867, 1882], "uncoalesc": [191, 328, 1799], "coo": [191, 323, 328, 342, 611, 1160, 1788, 1791, 1796, 1797, 1798, 1799, 1800, 1801, 1864, 1876, 1926, 1930], "inttensor": [192, 209, 1170, 1285, 1286, 1371, 1926, 1929], "csr": [192, 209, 343, 580, 585, 1372, 1788, 1791, 1792, 1798, 1801, 1876, 1930], "sparse_csr": [192, 209, 580, 585, 1791, 1792, 1794, 1798, 1801, 1923], "nnz": [192, 541, 580, 581, 582, 584, 585, 905, 1328, 1789, 1791, 1792, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1923], "mkl": [192, 209, 1864, 1891, 1906, 1909, 1923], "routin": [192, 209, 873, 942, 1268, 1787, 1814, 1923], "downcast": [192, 209], "to_sparse_csr": [192, 209, 581, 582, 1791, 1792, 1867, 1909, 1923], "conj_phys": [195, 961, 1865, 1867, 1909, 1923], "contiguous_format": [196, 331, 497, 498, 1070, 1608, 1926], "non_block": [197, 210, 577, 600, 1196, 1428, 1641, 1865, 1867, 1892, 1925], "copysign": [199, 1867, 1909], "fweight": [206, 968, 1867], "aweight": [206, 968, 1867], "sparse_dim": [219, 542, 543, 1788, 1791, 1795, 1799, 1867, 1909, 1923], "resize_": [222, 498, 1126, 1217, 1866, 1867, 1868, 1882, 1916, 1925], "resize_as_": [222, 1867, 1882, 1923], "set_": [222, 497, 1867], "transpose_": [222, 1867, 1923], "zero_": [222, 1241, 1518, 1867, 1882, 1883, 1900, 1923], "dim1": [226, 228, 229, 566, 589, 590, 1057, 1059, 1060, 1230, 1817, 1834, 1867], "dim2": [226, 228, 229, 1057, 1059, 1060, 1230, 1867], "digamma": [232, 1865, 1867, 1882, 1909, 1924], "rounding_mod": [235, 236, 237, 238, 1064, 1065, 1114, 1117, 1733, 1842, 1867], "split_size_or_sect": [241, 302, 616, 1802], "eq": [244, 1865, 1867, 1882, 1909], "erf": [247, 636, 637, 1865, 1867, 1882, 1909, 1923, 1924], "erfc": [249, 638, 639, 1865, 1867, 1882, 1909, 1924], "front": [254, 1268, 1431, 1883, 1895], "lambd": [258, 298, 1384, 1465, 1530, 1586, 1667, 1867], "fill_valu": [260, 445, 1123, 1124, 1351, 1865, 1867, 1892], "tall": [260, 1254, 1259, 1894], "start_dim": [263, 1108, 1374, 1867], "end_dim": [263, 1108, 1374, 1867], "float_pow": [269, 1867, 1909], "floor_divid": [273, 1064, 1867, 1909, 1923], "divisor": [276, 277, 487, 488, 765, 766, 1064, 1114, 1117, 1139, 1342, 1343, 1375, 1479, 1495, 1496, 1733, 1842], "fmod": [277, 1733, 1865, 1867, 1909], "mantissa": [280, 480, 1119, 1219, 1867, 1892, 1903], "gcd": [283, 1865, 1867, 1909], "ge": [285, 1151, 1289, 1385, 1386, 1531, 1532, 1865, 1867, 1882, 1909], "ordin": [289, 1796, 1797, 1798, 1800, 1801, 1926], "greater_equ": [294, 1867, 1909], "gt": [296, 1150, 1865, 1867, 1882, 1897, 1909], "hypot": [304, 1865, 1867, 1909], "i0": [306, 1215, 1777, 1867, 1909, 1924], "igamma": [308, 1865, 1867, 1909], "igammac": [310, 1865, 1867, 1909], "3100": [311, 482, 1166, 1731], "3553j": [311, 482, 1166, 1731], "5445": [311, 482, 1166, 1731], "7896j": [311, 482, 1166, 1731], "6492": [311, 482, 1166, 1731], "0633j": [311, 482, 1166, 1731], "0638": [311, 482, 1166, 1731], "8119j": [311, 482, 1166, 1731], "3553": [311, 1166], "7896": [311, 1166], "0633": [311, 1166, 1242, 1884], "8119": [311, 1166], "index_add_": [312, 895, 1167, 1168, 1867, 1904], "index_copy_": [314, 1867], "index_fill_": [316, 1867, 1882], "index_put_": [318, 1867], "include_self": [321, 514, 515, 1169, 1748, 1865, 1867], "identit": 321, "amax": [321, 515, 693, 694, 1791, 1865, 1867, 1909], "amin": [321, 515, 692, 694, 1791, 1865, 1867, 1909], "fill_": [321, 1196, 1221, 1428, 1734, 1867, 1882, 1900, 1925], "72": [321, 614, 1149], "uint8_t": [326, 1664], "retain_grad": [335, 1867, 1889, 1909], "n_fft": [351, 553, 1193, 1810, 1867], "hop_length": [351, 553, 1193, 1810, 1867], "win_length": [351, 553, 1193, 1810, 1867], "center": [351, 553, 776, 782, 1089, 1193, 1492, 1527, 1538, 1596, 1681, 1703, 1771, 1810, 1867, 1889, 1909, 1928], "onesid": [351, 553, 1193, 1810, 1865, 1867], "return_complex": [351, 553, 1193, 1810, 1867], "element_s": [353, 434, 1867, 1882, 1909, 1925], "lcm": [356, 1867, 1909], "ldexp": [358, 1119, 1867, 1909], "le": [360, 1223, 1385, 1386, 1531, 1532, 1865, 1867, 1882, 1909, 1930], "lerp": [362, 1867, 1909], "less_equ": [366, 1867, 1909], "lgamma": [368, 648, 649, 1865, 1867, 1909], "ln": [377, 1224, 1924], "logical_and": [383, 1865, 1867, 1909], "logical_not": [385, 1865, 1867, 1882, 1884, 1909], "logical_or": [387, 1865, 1867, 1909], "logical_xor": [389, 1867, 1909], "pivot": [396, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1285, 1286, 1287, 1713, 1867], "get_info": [396, 1285], "lu_data": [397, 1286, 1287, 1867], "lu_pivot": [397, 1286, 1287, 1867], "masked_fill_": [399, 1867, 1882, 1883], "booltensor": [400, 402, 732, 1289, 1471, 1859, 1926, 1929], "masked_scatter_": [401, 1867], "mvlgamma": [425, 1867, 1909], "posinf": [426, 427, 1322, 1867], "neginf": [426, 427, 1322, 1867], "nan_to_num": [427, 1867, 1909], "interpol": [430, 478, 782, 783, 784, 816, 1221, 1325, 1480, 1481, 1482, 1492, 1527, 1596, 1597, 1598, 1714, 1849, 1867, 1916], "ne": [438, 1616, 1649, 1657, 1865, 1867, 1882, 1909], "8182e": 444, "5765e": 444, "41": [444, 1072, 1254, 1599, 1648, 1713], "0545e": 444, "0949e": 444, "4842e": [444, 1072], "0000e": [444, 1072, 1112, 1273, 1282, 1322, 1648, 1769, 1771, 1772, 1777, 1778], "00": [444, 1072, 1112, 1273, 1282, 1322, 1648, 1665, 1769, 1771, 1772, 1777, 1778, 1866, 1907], "141592": [445, 1123], "1416": [445, 1053, 1123, 1828], "from_numpi": [447, 876, 877, 1828], "array_lik": [447, 876, 1796, 1797, 1798, 1799, 1800, 1801, 1828, 1884], "nextaft": [450, 1865, 1867, 1909], "fro": [452, 1227, 1248, 1252, 1265, 1626, 1635, 1655, 1867], "not_equ": [455, 1867, 1909], "resolve_conj": [457, 961, 1867, 1909], "resolve_neg": [457, 1867, 1909], "shorthand": [457, 1215], "input3": [459, 1867], "transpos": [459, 590, 591, 614, 689, 738, 739, 740, 943, 1069, 1136, 1225, 1226, 1232, 1235, 1238, 1245, 1256, 1259, 1359, 1360, 1361, 1479, 1505, 1506, 1507, 1577, 1615, 1644, 1701, 1814, 1816, 1817, 1823, 1837, 1865, 1867, 1882, 1884, 1889, 1903, 1907, 1909, 1916, 1923, 1927, 1929], "polygamma": [465, 1867, 1909, 1924], "q_per_channel_axi": [472, 473, 1867, 1909], "zero_point": [473, 475, 735, 736, 737, 738, 739, 740, 741, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 767, 769, 770, 771, 772, 774, 777, 778, 796, 799, 816, 817, 818, 819, 822, 849, 1083, 1084, 1715, 1716, 1717, 1718, 1719, 1867, 1914, 1915], "qtensor": [477, 1867], "uniform": [480, 605, 920, 1364, 1446, 1510, 1722, 1723, 1771, 1864, 1865, 1887, 1909, 1931], "queu": [485, 976, 1892], "life": [485, 973], "cycl": [485, 890, 973, 1689, 1695, 1889, 1913], "unexpectedli": [485, 1929], "maxnorm": [489, 490, 1734, 1867], "repeat_interleav": [491, 1849, 1867, 1909, 1916], "output_s": [492, 738, 739, 740, 763, 764, 1333, 1334, 1335, 1337, 1338, 1339, 1360, 1375, 1376, 1377, 1424, 1425, 1426, 1479, 1486, 1487, 1488, 1489, 1490, 1491, 1521, 1522, 1523, 1554, 1555, 1556, 1735, 1865, 1867, 1884], "is_leaf": [493, 1867, 1882, 1884, 1909], "saved_weight": 494, "loaded_weight": 494, "5503": 494, "4926": [494, 1900], "1158": 494, "8303": 494, "1007": 494, "9853": 494, "2316": 494, "6606": 494, "resiz": [497, 498, 521, 542, 543, 1121, 1122, 1126, 1480, 1527, 1538, 1865, 1867, 1882, 1909, 1925], "shift": [503, 923, 926, 1089, 1096, 1340, 1346, 1347, 1348, 1373, 1467, 1520, 1740, 1867, 1870], "decim": [505, 506, 1742, 1867, 1903, 1935], "scatter_": [510, 513, 1746, 1867], "scatter_add_": [511, 512, 1747, 1849, 1867], "scatter_reduce_": [511, 514, 1748, 1867], "4600": 511, "2300": 511, "scatter_reduc": [515, 1849, 1865, 1867, 1909], "sgn": [520, 1118, 1767, 1867, 1882, 1884, 1909, 1923], "int16": [522, 1121, 1278, 1925, 1926, 1929, 1935], "dense_dim": [540, 542, 543, 580, 581, 582, 584, 585, 1799, 1867, 1909, 1923], "nse": [541, 1923], "randint": [541, 921, 968, 1112, 1301, 1351, 1477, 1510, 1511, 1795, 1867, 1871, 1883, 1909, 1928, 1931], "6550": 541, "2397": 541, "1611": 541, "0779": [541, 1232, 1710, 1859], "2326": 541, "0558": 541, "4711": 541, "9678": 541, "5138": 541, "0411": 541, "9417": 541, "5158": 541, "0793": 541, "0036": [541, 1293], "2569": 541, "1055": 541, "sparse_coo": [541, 580, 1328, 1791, 1794, 1795, 1799, 1923, 1926], "split_siz": [544, 1802, 1867], "squeez": [550, 690, 692, 693, 694, 696, 1217, 1283, 1293, 1295, 1296, 1298, 1301, 1323, 1326, 1509, 1711, 1795, 1808, 1809, 1813, 1851, 1852, 1865, 1867, 1882, 1907, 1909, 1916, 1927], "pad_mod": [553, 1810, 1867], "typedstorag": [554, 1864, 1925], "untypedstorag": [554, 610, 1864, 1925], "untyped_storag": 554, "compute_uv": [564, 1259, 1260, 1814, 1867], "axis0": [565, 1816, 1867], "axis1": [565, 1816, 1867], "dim0": [566, 589, 590, 1817, 1834, 1867], "indices_or_sect": [575, 1067, 1159, 1829, 1857], "rep": 576, "5044": 577, "0005": [577, 1693, 1699], "3310": 577, "0584": [577, 1814], "cuda0": [577, 1892, 1898, 1929], "masked_grad": [578, 1867], "sparse_mask": [578, 1867, 1909], "mkldnn": [579, 1205, 1864, 1909], "sparsedim": 580, "blocksiz": [580, 581, 582, 1796, 1797, 1798, 1867, 1923], "sparse_csc": [580, 584, 1794, 1798, 1800, 1923], "sparse_bsr": [580, 582, 1797, 1798, 1923], "sparse_bsc": [580, 581, 1796, 1798, 1923], "bsr": [580, 582, 1797, 1798, 1930], "bsc": [580, 581, 1796, 1798, 1930], "csc": [580, 584, 1798, 1800, 1930], "minu": [580, 581, 582, 584, 585, 1924], "crow_indic": [580, 582, 585, 1789, 1791, 1792, 1794, 1797, 1798, 1801, 1867, 1909, 1923, 1930], "col_indic": [580, 582, 585, 1791, 1792, 1794, 1797, 1798, 1801, 1867, 1909, 1923, 1930], "sparsecsr": [580, 1834, 1923], "row_indic": [581, 584, 1796, 1800, 1867, 1909, 1923, 1930], "ccol_indic": [581, 584, 1796, 1800, 1867, 1909, 1923, 1930], "_nnz": [583, 584, 585, 1909], "012766935862600803": 586, "5415473580360413": 586, "08909505605697632": 586, "7729271650314331": 586, "unitriangular": [591, 1258, 1837, 1867], "tril": [593, 1577, 1867, 1909], "triu": [595, 1620, 1837, 1867, 1907, 1909], "trunc": [599, 674, 675, 684, 1064, 1107, 1114, 1117, 1742, 1865, 1867, 1882, 1909, 1923], "sizedim": 604, "return_invers": [606, 607, 1846, 1847, 1867], "return_count": [606, 607, 1846, 1847, 1867], "unsqueez": [609, 1089, 1216, 1256, 1371, 1447, 1620, 1831, 1865, 1867, 1894, 1909, 1916, 1923, 1927, 1928], "subspac": [614, 1259, 1434, 1703, 1814, 1815], "span": [614, 1030, 1031, 1364, 1814, 1913, 1919], "foral": 614, "proportion": [614, 782, 1480, 1596], "met": [614, 1235, 1242, 1243, 1254, 1268, 1475], "9482": [614, 1173], "0310": 614, "4999": 614, "5316": 614, "1520": 614, "7472": 614, "5617": 614, "8649": 614, "4724": [614, 1900], "0334": 614, "2976": 614, "8499": 614, "2109": 614, "9913": 614, "9607": 614, "6123": 614, "1064483442": 614, "1124191867": 614, "1069546515": 614, "1089989247": 614, "1105482831": 614, "1061112040": 614, "1057999968": 614, "1084397505": 614, "1071760287": 614, "1123489973": 614, "1097310419": 614, "1084649136": 614, "1101533110": 614, "1073668768": 614, "1082790149": 614, "1088634448": 614, "1000000000": 614, "0047": 614, "0310j": 614, "5316j": 614, "7472j": 614, "8649j": 614, "0334j": 614, "8499j": 614, "9913j": 614, "6123j": 614, "202": 614, "154": [614, 1906], "59": [614, 1839, 1841], "182": 614, "243": [614, 1193, 1814], "253": 614, "188": 614, "252": [614, 1906], "191": 614, "63": [614, 1906, 1914], "240": 614, "227": 614, "165": 614, "190": 614, "128": [614, 717, 725, 726, 753, 761, 791, 816, 817, 1349, 1363, 1390, 1415, 1437, 1476, 1477, 1509, 1577, 1883, 1884, 1914, 1916, 1917, 1919, 1926, 1929], "146": 614, "106": 614, "205": 614, "206": 614, "189": 614, "95": [614, 1691, 1694, 1695], "147": 614, "43": 614, "87": 614, "235": 614, "226": 614, "254": [614, 1906], "111": [614, 1665, 1907], "117": 614, "177": 614, "xlogi": [619, 1867, 1909, 1924], "aot_graph": [677, 1875], "aot_joint_graph": [677, 1875], "ddp_graph": [677, 1875], "graph_cod": [677, 1875], "perf_hint": 677, "toggl": [677, 1892], "supress": 677, "silenc": 677, "lowest": [677, 940, 1322, 1625, 1626, 1634, 1635, 1724, 1725, 1894, 1930], "notset": 677, "joint": [677, 1875], "ddpoptim": [677, 1875], "unregist": [677, 1875, 1879, 1907], "3348": 680, "5889": 680, "1584": 680, "2294": [680, 1295], "2004": 680, "3690": 680, "7298": [680, 1732], "hyperbol": [681, 879, 882, 966, 1468, 1782, 1827], "uniform_": [681, 882, 920, 1864, 1867, 1882, 1887, 1894, 1924, 1931], "3192": 681, "9915": 681, "9674": 681, "7151": 681, "7791": 681, "3120": [681, 963], "2979": 681, "1341": 681, "_i": [682, 683, 684, 685, 686, 918, 920, 923, 926, 930, 945, 1064, 1114, 1219, 1221, 1317, 1476, 1706, 1710, 1729, 1765, 1811, 1859, 1924], "0202": 682, "0985": 682, "3506": [682, 1285], "6056": 682, "3944": 682, "9732": 682, "3497": 682, "6245": [682, 1227], "4022": [682, 1051, 1814], "3743": 682, "7724": 682, "5811": 682, "8017": 682, "7695": 682, "3930": 682, "3672": [682, 969, 1228], "1450": [682, 1795], "6971": 682, "0736": [682, 1900], "0994": 682, "3216": 682, "7845": 682, "1610": 682, "1868": 682, "4090": 682, "9902": [682, 969, 1228], "3667": [682, 963], "3925": 682, "6147": 682, "sum_": [683, 1193, 1247, 1264, 1341, 1342, 1343, 1356, 1357, 1358, 1364, 1396, 1397, 1416, 1431, 1435, 1437, 1808, 1809, 1810, 1830, 1835, 1851, 1852, 1853, 1924], "mathbin": [683, 686, 687, 918, 930, 1792], "doubletensor": [683, 684, 685, 686, 687, 918, 1755, 1926, 1929], "tensorfloat32": [683, 686, 918, 930, 1290, 1300, 1356, 1357, 1358, 1359, 1360, 1361, 1415, 1502, 1503, 1504, 1505, 1506, 1507, 1544, 1757, 1892, 1903], "rocm": [683, 686, 918, 930, 1290, 1300, 1356, 1357, 1358, 1359, 1360, 1361, 1381, 1399, 1415, 1864], "6311": 683, "0503": 683, "9768": [683, 1900], "0362": 683, "1653": 683, "8185": 683, "4255": [683, 1317], "6760": 683, "9453": 683, "5743": 683, "8202": 683, "3691": 683, "0943": 683, "1109": [683, 1382, 1778], "4730": [683, 1830], "histor": [684, 1026, 1368, 1891, 1900, 1905], "t1": [684, 685, 877, 1149, 1608, 1868, 1919, 1920], "2312": [684, 1795], "6496": 684, "1312": 684, "0428": 684, "4292": 684, "1030": 684, "5369": 684, "9829": 684, "0430": 684, "8635": 685, "6391": 685, "6174": 685, "7617": 685, "5879": 685, "7388": 685, "8353": 685, "6249": 685, "6511": 685, "8716": 686, "4671": 686, "3746": 686, "7573": 686, "9555": 686, "8681": 686, "3768": 687, "5565": 687, "otim": [688, 1216, 1379, 1526], "conj": [689, 962, 1085, 1086, 1088, 1090, 1097, 1099, 1103, 1104, 1106, 1225, 1226, 1232, 1234, 1253, 1737, 1738, 1865, 1867, 1897, 1909, 1929], "mh": [689, 941, 1232, 1814, 1867, 1909, 1927, 1929], "lvert": [691, 1185, 1476, 1563, 1930], "rvert": [691, 1185, 1930], "leq": [691, 919, 920, 963, 1087, 1089, 1185, 1216, 1220, 1235, 1241, 1351, 1370, 1431, 1433, 1435, 1511, 1562, 1565, 1768, 1810, 1887, 1924], "elementwis": [691, 963, 985, 1012, 1013, 1112, 1114, 1332, 1391, 1392, 1393, 1465, 1586, 1850, 1869, 1884, 1897, 1924], "07": [691, 816, 817, 818, 819, 822, 941, 942, 1072, 1233, 1236, 1241, 1253, 1254, 1260, 1283, 1286, 1615, 1666, 1673, 1772, 1777, 1814, 1907], "09": [691, 1673, 1685, 1930], "8177": 692, "4878": 692, "2491": 692, "9130": 692, "7158": 692, "1775": 692, "0992": 692, "4817": 692, "0053": 692, "0164": 692, "3738": 692, "0507": [692, 1907], "9700": 692, "1106": 692, "0318": 692, "0816": [692, 1285], "6451": 693, "4866": 693, "2987": 693, "3312": 693, "5744": 693, "2980": [693, 1884], "8397": 693, "2713": 693, "9128": 693, "9214": 693, "7268": 693, "2995": 693, "9023": [693, 1226], "4853": 693, "9075": 693, "6165": 693, "180": [695, 1053, 1721], "14159": [695, 1828], "135": 695, "45": [695, 1347, 1348, 1392, 1393, 1467, 1648, 1907], "ao": [697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 1914, 1915, 1916], "batch_norm": [697, 698, 1205, 1867, 1909], "3d": [698, 701, 704, 732, 737, 740, 764, 766, 771, 776, 1297, 1335, 1339, 1343, 1346, 1348, 1358, 1361, 1368, 1369, 1375, 1377, 1391, 1393, 1423, 1434, 1480, 1488, 1491, 1492, 1496, 1504, 1507, 1515, 1521, 1523, 1538, 1553, 1565, 1596, 1884, 1903, 1914, 1923, 1928], "bn": [699, 700, 701, 702, 703, 704, 811, 857, 1069, 1205, 1905, 1910, 1914, 1915], "qat": [709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 727, 728, 729, 730, 789, 790, 843, 1914, 1915, 1916], "in_channel": [709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 1205, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409], "out_channel": [709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 1205, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409], "kernel_s": [709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 765, 766, 779, 780, 1196, 1205, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1376, 1377, 1396, 1397, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1424, 1425, 1426, 1428, 1479, 1494, 1495, 1496, 1505, 1506, 1507, 1521, 1522, 1523, 1548, 1549, 1551, 1552, 1553, 1554, 1555, 1556, 1595, 1718, 1719, 1865, 1867, 1928], "dilat": [709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 769, 770, 771, 779, 780, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1404, 1405, 1406, 1407, 1408, 1409, 1421, 1422, 1423, 1479, 1502, 1503, 1504, 1505, 1506, 1507, 1521, 1551, 1552, 1553, 1595, 1718, 1719, 1865, 1867, 1907], "padding_mod": [709, 710, 711, 712, 713, 714, 715, 716, 722, 723, 724, 727, 728, 735, 736, 737, 738, 739, 740, 769, 770, 771, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409, 1527, 1865, 1867], "ep": [709, 710, 711, 712, 713, 714, 720, 721, 733, 734, 746, 748, 749, 750, 751, 792, 816, 817, 818, 819, 822, 823, 905, 906, 1205, 1281, 1332, 1346, 1347, 1348, 1363, 1382, 1383, 1391, 1392, 1393, 1400, 1401, 1402, 1403, 1410, 1411, 1412, 1437, 1442, 1467, 1471, 1473, 1475, 1476, 1497, 1509, 1524, 1528, 1529, 1537, 1541, 1563, 1566, 1570, 1593, 1616, 1649, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1684, 1697, 1717, 1865, 1867, 1894, 1897, 1924, 1935], "momentum": [709, 710, 711, 712, 713, 714, 720, 721, 733, 734, 748, 749, 750, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1467, 1497, 1537, 1674, 1681, 1683, 1689, 1695, 1697, 1865, 1867, 1900, 1910], "freeze_bn": [709, 710, 711, 712, 713, 714], "qconfig": [709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 730, 785, 786, 788, 791, 792, 793, 794, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 855, 856, 858, 859, 1933], "batchnorm1d": [709, 712, 1401, 1467, 1497, 1905, 1916], "fakequant": [709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 730, 799, 859], "weight_fake_qu": [709, 710, 711, 712, 713, 714, 715, 716, 727, 728], "quant": [709, 710, 711, 712, 713, 714, 715, 716, 717, 727, 728, 729, 787, 789, 790, 835, 858, 859, 1083, 1084, 1914, 1915], "batchnorm3d": [711, 714, 716, 721, 1403, 1467, 1497, 1916], "num_featur": [720, 721, 733, 734, 748, 749, 750, 1196, 1346, 1347, 1348, 1391, 1392, 1393, 1401, 1402, 1403, 1410, 1411, 1412, 1428, 1467, 1529, 1900], "qint8": [725, 726, 753, 758, 761, 762, 769, 770, 771, 778, 789, 791, 796, 817, 838, 855, 856, 858, 859, 1664, 1715, 1716, 1914, 1916, 1917, 1925, 1929, 1930], "highlight": [727, 728, 1869], "from_float": [729, 735, 736, 737, 742, 743, 753, 761, 794, 814, 820, 823, 835, 1914], "qparams_dict": [729, 735, 736, 737, 761], "hidden_s": [731, 757, 758, 762, 1380, 1381, 1398, 1399, 1443, 1444, 1445, 1867], "num_lay": [731, 757, 1380, 1398, 1443, 1444, 1472, 1474, 1867, 1900], "bidirect": [731, 757, 1380, 1398, 1443, 1444, 1867], "_lstmlayer": 731, "nnqa": 731, "h0": [731, 757, 759, 1380, 1398, 1443], "hn": [731, 757, 759, 1380, 1381, 1398, 1443], "cn": [731, 759, 1196, 1398], "weight_ih": [731, 1381, 1399, 1445], "weight_hh": [731, 1381, 1399, 1445], "dequant": [732, 785, 787, 789, 790, 796, 798, 858, 1867, 1909, 1915, 1917, 1930, 1932], "mha": [732, 1434], "conver": 732, "key_padding_mask": [732, 1434, 1867], "need_weight": [732, 1434, 1867], "attn_mask": [732, 1434, 1577, 1867], "average_attn_weight": [732, 1434, 1867], "is_caus": [732, 1434, 1474, 1475, 1577, 1867], "attn_output_weight": [732, 1434], "unmask": [732, 1471], "causal": [732, 1434, 1472, 1473, 1474, 1475, 1577], "attn_weight": [732, 1434, 1577], "attn_output": [732, 1434], "quint8": [735, 736, 737, 738, 739, 740, 742, 743, 753, 769, 770, 771, 778, 789, 791, 796, 816, 817, 818, 819, 822, 824, 856, 858, 1664, 1715, 1716, 1717, 1718, 1719, 1914, 1916, 1917, 1925, 1929, 1930], "learnabl": [735, 736, 737, 738, 739, 740, 742, 743, 753, 757, 761, 1346, 1347, 1348, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1371, 1372, 1380, 1381, 1383, 1391, 1392, 1393, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1415, 1436, 1443, 1445, 1467, 1519, 1571, 1900], "q_input": [735, 736, 737, 738, 739, 740, 769, 770, 771], "quantize_per_tensor": [735, 736, 737, 738, 739, 740, 753, 754, 755, 769, 770, 771, 1717, 1718, 1719, 1867, 1909, 1914], "unequ": [736, 737, 738, 739, 740, 1357, 1358, 1360, 1361], "50": [736, 738, 739, 740, 769, 821, 1251, 1301, 1342, 1343, 1351, 1356, 1357, 1358, 1360, 1361, 1376, 1377, 1396, 1397, 1421, 1422, 1423, 1478, 1504, 1505, 1507, 1511, 1522, 1523, 1682, 1825, 1884], "output_pad": [738, 739, 740, 1359, 1360, 1361, 1407, 1408, 1409, 1505, 1506, 1507, 1865, 1867], "qnnpack": [738, 739, 753, 761, 852, 853, 856, 858, 859, 1914, 1916], "convtranspose2d": [738, 1408, 1506, 1849, 1916], "nnq": [738, 739, 740, 785, 786, 787, 861, 1914], "downsampl": [738, 739, 740, 1360, 1480, 1492, 1527, 1538], "upsampl": [738, 739, 740, 776, 783, 784, 816, 1360, 1481, 1482, 1492, 1527, 1538, 1597, 1598], "cubic": [740, 1377, 1523, 1527], "num_embed": [742, 743, 1371, 1372, 1519], "embedding_dim": [742, 743, 1371, 1372, 1400, 1518, 1519], "padding_idx": [742, 1371, 1372, 1518, 1519, 1865, 1867], "scale_grad_by_freq": [742, 743, 1371, 1372, 1518, 1519, 1865, 1867], "_embed": [742, 743], "_dim": [742, 743, 1371], "include_last_offset": [743, 1372, 1519, 1867], "embedding_bag": [743, 1867, 1909], "floatfunct": [744, 1914], "activation_post_process": [744, 796, 1914], "add_relu": [744, 745, 754, 1877, 1909, 1932], "add_scalar": [744, 745, 754, 1909, 1928, 1932], "mul_scalar": [744, 745, 754, 1909, 1932], "collector": 745, "f_add": 745, "num_channel": [746, 1383, 1883], "normalized_shap": [751, 1400, 1541, 1865, 1867, 1884], "elementwise_affin": [751, 1400], "negative_slop": [752, 777, 1414, 1542, 1543, 1865, 1867, 1887], "slope": [752, 777, 1414, 1459, 1887], "bias_": [753, 761], "_featur": [753, 761, 778, 1336, 1349, 1413, 1415, 1498, 1544], "from_refer": [753, 761], "ref_qlinear": [753, 761], "output_scal": [753, 756, 1717, 1867], "output_zero_point": [753, 756, 1717, 1867], "q_add": 754, "qint32": [754, 755, 1664, 1715, 1716, 1914, 1917, 1925, 1929, 1930], "x_0": [755, 1835], "gate": [757, 758, 1379, 1380, 1381, 1398, 1457, 1526, 1580], "r_t": [757, 1380, 1680], "w_": [757, 1334, 1335, 1338, 1339, 1342, 1343, 1345, 1353, 1354, 1355, 1357, 1358, 1360, 1361, 1364, 1376, 1377, 1380, 1381, 1397, 1398, 1399, 1422, 1423, 1425, 1426, 1435, 1440, 1441, 1443, 1445, 1449, 1450, 1451, 1452, 1453, 1454, 1480, 1481, 1482, 1483, 1484, 1485, 1523, 1527], "x_t": [757, 891, 893, 1346, 1347, 1348, 1380, 1391, 1392, 1393, 1398, 1443, 1467, 1668], "b_": [757, 1380, 1381, 1398, 1399, 1416, 1443, 1445, 1830, 1923], "hr": [757, 1380, 1381, 1398, 1897], "h_": [757, 1334, 1335, 1338, 1339, 1342, 1343, 1349, 1354, 1355, 1357, 1358, 1360, 1361, 1376, 1377, 1380, 1381, 1397, 1398, 1415, 1422, 1423, 1424, 1425, 1426, 1440, 1441, 1443, 1445, 1450, 1451, 1453, 1454, 1480, 1481, 1482, 1484, 1485, 1498, 1523, 1527], "z_t": [757, 1380], "iz": [757, 1380, 1381], "hz": [757, 981, 1380, 1381, 1928], "n_t": [757, 1380], "h_t": [757, 1380, 1398, 1443], "hadamard": [757, 1380, 1381, 1398, 1399], "multilay": [757, 1380, 1398], "_t": [757, 1380, 1398, 1681, 1683, 1894, 1910], "b_ih": [757, 1380, 1381, 1398, 1399, 1443, 1445, 1867], "b_hh": [757, 1380, 1381, 1398, 1399, 1443, 1445, 1867], "h_0": [757, 1380, 1398, 1399, 1443], "seq_len": [757, 1380, 1398, 1434, 1443], "pack_padded_sequ": [757, 1380, 1398, 1443, 1641, 1643, 1644, 1896], "num_direct": [757, 1380, 1398, 1443], "h_n": [757, 1380, 1398, 1443], "input1": [757, 1349, 1362, 1363, 1420, 1437, 1498, 1508, 1509, 1550, 1867, 1888, 1907], "_size": [757, 1333, 1334, 1335, 1337, 1338, 1339, 1341, 1342, 1343, 1356, 1357, 1358, 1359, 1360, 1361, 1375, 1376, 1377, 1380, 1381, 1396, 1397, 1398, 1399, 1421, 1422, 1423, 1424, 1425, 1426, 1443, 1445, 1479, 1523], "_layer": [757, 1380, 1398, 1443], "_direct": 757, "output1": [757, 1336, 1888, 1907], "output2": [757, 1336], "weight_ih_l": [757, 1380, 1398, 1443], "w_ir": [757, 1380], "w_iz": [757, 1380], "w_in": [757, 1380], "weight_hh_l": [757, 1380, 1398, 1443], "w_hr": [757, 1380], "w_hz": [757, 1380], "w_hn": [757, 1380], "bias_ih_l": [757, 1380, 1398, 1443], "b_ir": [757, 1380], "b_iz": [757, 1380], "b_in": [757, 1380], "bias_hh_l": [757, 1380, 1398, 1443], "b_hr": [757, 1380], "b_hz": [757, 1380], "b_hn": [757, 1380], "mathcal": [757, 1349, 1356, 1357, 1358, 1359, 1360, 1361, 1371, 1372, 1380, 1381, 1398, 1399, 1413, 1415, 1443, 1445, 1446, 1467, 1726, 1887, 1897], "subtli": [757, 1380, 1683], "gru": [758, 1381, 1867, 1892, 1909, 1914, 1916], "cell": [758, 760, 762, 1380, 1381, 1398, 1399, 1443, 1445], "hx": [758, 760, 762, 1381, 1399, 1445, 1867], "cx": [760, 1399, 1867], "nonlinear": [762, 1344, 1362, 1388, 1443, 1445, 1455, 1864, 1887, 1923], "elman": [762, 1443, 1445], "adaptiveavgpool2d": [763, 1487, 1849, 1916], "adaptiveavgpool3d": [764, 1488, 1849, 1916], "ceil_mod": [765, 766, 779, 780, 1341, 1342, 1343, 1396, 1397, 1421, 1422, 1423, 1494, 1495, 1496, 1548, 1549, 1551, 1552, 1553, 1718, 1719, 1865, 1867], "count_include_pad": [765, 766, 1341, 1342, 1343, 1494, 1495, 1496, 1865, 1867], "divisor_overrid": [765, 766, 1342, 1343, 1495, 1496, 1865, 1867], "kh": [765, 766, 770, 771, 1342, 1343, 1376, 1377, 1422, 1423, 1495, 1496, 1503, 1504, 1506, 1507, 1522, 1523, 1552, 1553], "kw": [765, 766, 770, 771, 1342, 1343, 1376, 1377, 1422, 1423, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1522, 1523, 1551, 1552, 1553], "sw": [765, 766, 769, 770, 771, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1551, 1552, 1553], "avgpool2d": [765, 1495, 1916], "_channel": [765, 766, 769, 770, 771, 1356, 1357, 1358, 1359, 1360, 1361, 1383, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1551, 1552, 1553, 1919], "ih": [765, 766, 770, 771, 1443, 1445, 1495, 1496, 1503, 1504, 1506, 1507, 1552, 1553], "iw": [765, 766, 769, 770, 771, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1551, 1552, 1553], "padh": [765, 766, 770, 771, 1495, 1496, 1503, 1504, 1506, 1507], "padw": [765, 766, 769, 770, 771, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507], "kd": [766, 771, 1343, 1423], "sd": [766, 771], "padd": [766, 771], "formul": [767, 1350, 1370, 1384, 1418, 1464, 1465, 1546, 1563, 1577, 1897, 1923], "min_": [768, 1231, 1232, 1241, 1259, 1814], "max_": [768, 1421, 1422, 1423, 1616, 1649], "convolv": [769, 770, 771, 1356, 1357, 1358, 1359, 1360, 1361, 1404, 1405, 1406, 1407, 1408, 1409, 1502, 1503, 1504, 1505, 1506, 1507], "dw": [769, 770, 771, 1502, 1503, 1504, 1505, 1506, 1507], "qf": [769, 770, 771], "dtype_input": [769, 770, 771], "dtype_filt": [769, 770, 771], "q_filter": [769, 770, 771], "dh": [770, 771, 1503, 1504, 1506, 1507], "dd": 771, "min_val": [775, 1387, 1533, 1534, 1865, 1867], "max_val": [775, 1387, 1533, 1534, 1865, 1867], "scale_factor": [776, 782, 783, 784, 1480, 1481, 1482, 1538, 1577, 1596, 1597, 1598, 1865, 1867], "nearest": [776, 782, 784, 1325, 1480, 1482, 1527, 1538, 1596, 1598, 1714, 1742, 1892], "align_corn": [776, 782, 783, 1480, 1481, 1492, 1527, 1538, 1596, 1597, 1865, 1867], "height": [776, 782, 1342, 1343, 1357, 1358, 1360, 1361, 1397, 1422, 1423, 1435, 1462, 1480, 1538, 1596, 1883], "spatial": [776, 782, 783, 784, 938, 1089, 1347, 1375, 1400, 1440, 1441, 1462, 1479, 1480, 1481, 1482, 1492, 1527, 1538, 1567, 1568, 1569, 1596, 1597, 1598], "pixel": [776, 782, 784, 1357, 1364, 1367, 1368, 1369, 1373, 1435, 1440, 1441, 1480, 1492, 1527, 1538, 1596, 1598], "corner": [776, 782, 929, 1480, 1492, 1527, 1538, 1596], "leakyrelu": [777, 1429, 1542, 1900, 1916], "_slope": [777, 1414, 1542, 1887], "xa": [778, 1245, 1256, 1257, 1258, 1415, 1544], "return_indic": [779, 780, 1337, 1338, 1339, 1376, 1377, 1421, 1422, 1423, 1424, 1425, 1426, 1489, 1490, 1491, 1522, 1523, 1551, 1552, 1553, 1867], "maxpool1d": [779, 1424, 1551, 1554, 1916], "maxpool2d": [780, 1425, 1429, 1552, 1555, 1907, 1916], "linearli": [782, 1133, 1254, 1480, 1596, 1692, 1713, 1896, 1910, 1917], "neighbour": [784, 1416, 1538, 1598], "stub": [785, 786, 1911], "calibr": [785, 786, 794, 835, 836, 854, 856, 858, 1888, 1914, 1915, 1917, 1933], "quantstub": [787, 1914], "dequantstub": [787, 1914], "quantwrapp": 788, "backend_config": [789, 790, 791, 792, 793, 814, 815, 856, 857, 858, 859, 1933], "acycl": [789, 1889], "backendpatternconfig": [789, 858], "dtypeconfig": [789, 790, 792, 858], "observationtyp": [789, 790, 858, 1916], "weighted_int8_dtype_config": [789, 858], "input_dtyp": [789, 791, 858, 1916], "output_dtyp": [789, 791, 858, 1865, 1916], "weight_dtyp": [789, 791, 858, 1916], "bias_dtyp": [789, 791, 1916], "fuse_conv2d_relu": 789, "is_qat": [789, 790], "convrelu2d": [789, 1916], "linear_config": 789, "set_observation_typ": [789, 790, 858], "output_use_different_observer_as_input": [789, 790, 793, 858, 1916], "add_dtype_config": [789, 790, 858], "set_root_modul": [789, 790], "set_qat_modul": [789, 790], "set_reference_quantized_modul": [789, 790], "conv_relu_config": 789, "set_fused_modul": [789, 790], "set_fuser_method": [789, 790], "fused_conv_relu_config": 789, "set_backend_pattern_config": [789, 858], "from_dict": [789, 790, 791, 812, 813, 814, 851], "backend_config_dict": [789, 1914], "set_nam": 789, "to_dict": [789, 790, 791, 812, 813, 814, 851], "backendconfig": [790, 815, 856, 858, 1917], "dtype_config": [790, 1916], "backend_pattern_config_dict": 790, "observation_typ": [790, 1916], "qat_modul": [790, 1916], "reference_quantized_modul": 790, "fused_modul": [790, 1916], "fuser_method": [790, 811, 1916], "pattern_complex_format": 790, "set_dtype_config": 790, "fuser": [790, 1209, 1866], "fuse_linear_relu": 790, "linearrelu": [790, 1916], "8bea7180a8ba3c279f2c9b050f2a69a6": 790, "understood": [790, 937], "output_share_observer_with_input": [790, 793, 1916], "quantdequantstub": 790, "set_pattern": 790, "is_dynam": [791, 823, 1916], "quant1": 791, "dequant1": 791, "fp32_linear": 791, "quant2": 791, "dequant2": 791, "bracket": [791, 1920], "dtype_config1": 791, "dtype_config2": 791, "dtypewithconstraint": [791, 1916], "quant_min_lower_bound": [791, 792, 1916], "quant_max_upper_bound": [791, 792, 1916], "255": [791, 799, 1083, 1084, 1122, 1527, 1538, 1596, 1914, 1916, 1928], "input_dtype_with_constraint": 791, "scale_min_lower_bound": [791, 792, 1916], "scale_max_upper_bound": [791, 792, 1916], "dtype_config_dict": 791, "bias_typ": [791, 858], "scale_exact_match": [792, 1916], "zero_point_exact_match": [792, 1916], "quant_min": [792, 796, 799, 816, 817, 818, 819, 822, 823, 1083, 1084, 1867, 1914], "quant_max": [792, 796, 799, 816, 817, 818, 819, 822, 823, 1083, 1084, 1867, 1914], "fixedqparamsobserv": 792, "fixedqparamsfakequant": 792, "input_output_not_observ": [793, 1916], "maxpool": [793, 1376, 1377, 1522, 1523, 1907], "remove_qconfig": 794, "is_refer": 794, "convert_custom_config_dict": [794, 812, 1914], "from_observ": [794, 812, 1914], "observed_to_quantized_custom_module_class": [794, 812, 1914], "observedcustommodul": [794, 812, 814, 835, 1914], "quantizedcustommodul": [794, 812], "calib_data": 795, "fake_quant": [796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 859, 1083, 1084, 1933], "movingaverageminmaxobserv": [796, 799, 819], "observer_kwarg": [796, 799], "x_out": [796, 799], "fake_quant_en": 796, "observer_en": 796, "calculate_qparam": [797, 816, 817, 821], "qscheme": [799, 816, 817, 818, 819, 822, 823, 824, 1867, 1909, 1914, 1917, 1930], "fake_qu": [800, 804, 805, 806, 1914], "default_fake_qu": 801, "default_per_channel_weight_fake_qu": 802, "default_weight_fake_qu": 803, "histogram": [804, 816, 828, 1156, 1158, 1867, 1909, 1928], "memoryless": [805, 806], "averaging_const": [805, 806, 818, 819, 1867], "modules_to_fus": 811, "fuser_func": 811, "fuse_known_modul": 811, "fuse_custom_config_dict": [811, 813], "convmodul": 811, "bnmodul": 811, "convbnmodul": 811, "additional_fuser_method_map": 811, "fuse_conv_bn": [811, 1916], "conv1": [811, 1207, 1428, 1456, 1866, 1914, 1928], "bn1": 811, "relu1": [811, 1456, 1599], "fused_m": 811, "custom_config": [812, 813, 814, 815], "convert_fx": [812, 1914, 1933], "convert_custom_config": [812, 856, 1914], "set_observed_to_quantized_map": 812, "set_preserved_attribut": [812, 813, 814], "attr1": [812, 813, 814, 1907], "attr2": [812, 813, 814, 1907], "floatcustommodul": [812, 814], "weight_onli": [812, 856, 1914], "preserved_attribut": [812, 813, 814], "observed_class": [812, 814], "quantized_class": 812, "quant_typ": [812, 814], "quanttyp": [812, 814], "fuse_fx": [813, 1914], "fuse_custom_config": [813, 857], "convertcustomconfig": [813, 856], "prepare_fx": [814, 837, 856, 859, 1914, 1933], "prepare_qat_fx": [814, 856, 1914], "prepare_custom_config": [814, 815, 858, 859, 1914], "set_standalone_module_nam": 814, "module1": [814, 851, 1892], "qconfig_map": [814, 815, 851, 852, 853, 856, 858, 859, 1914], "child_prepare_custom_config": 814, "set_standalone_module_class": 814, "mystandalonemodul": 814, "set_float_to_observed_map": 814, "set_non_traceable_module_nam": 814, "module2": [814, 851, 1892], "module3": [814, 1892], "set_non_traceable_module_class": 814, "nontraceablemodule1": 814, "nontraceablemodule2": 814, "set_input_quantized_index": 814, "set_output_quantized_index": 814, "prepare_custom_config_dict": [814, 835, 837, 1914], "standalone_module_nam": 814, "standalone_module_class": 814, "module_class": 814, "float_to_observed_custom_module_class": [814, 835, 1914], "non_traceable_module_nam": 814, "non_traceable_module_class": 814, "input_quantized_idx": 814, "output_quantized_idx": 814, "float_class": 814, "qconfigmap": [815, 852, 853, 856, 858, 1914, 1917], "preparecustomconfig": [815, 858], "2048": [816, 1471, 1473, 1475, 1892], "upsample_r": 816, "per_tensor_affin": [816, 817, 818, 1716, 1717, 1718, 1719, 1914, 1917], "reduce_rang": [816, 817, 818, 819, 822, 824, 1867, 1914, 1915], "factory_kwarg": [816, 817, 822], "1920928955078125e": [816, 817, 818, 819, 822], "finfo": [816, 817, 818, 819, 822, 1250, 1253, 1332, 1864, 1930], "minmaxobserv": [816, 818, 822, 838, 858, 859, 1917], "x_": [817, 818, 968, 1079, 1269, 1270, 1272, 1275, 1283, 1345, 1364, 1418, 1435, 1461, 1463, 1583, 1791, 1793, 1835, 1889, 1917, 1924], "q_": [817, 1917], "x_orig": 817, "reset_min_max_v": [817, 822], "ch_axi": [819, 822, 1867], "per_channel_affin": [819, 822, 1715, 1914, 1917], "custom_op_nam": [820, 823], "with_arg": [821, 838, 858, 859], "_callable_arg": 821, "_with_arg": 821, "foo_build": 821, "foo_instance1": 821, "foo_instance2": 821, "with_callable_arg": 821, "_with_callable_arg": 821, "cur_tim": 821, "get_time_func": 821, "dan": 821, "creation_tim": 821, "compute_dtyp": 823, "ptq": [828, 1914, 1915, 1917], "obs_dict": 834, "get_observer_state_dict": 834, "allow_list": [835, 1932], "observer_non_leaf_module_list": 835, "preemptiv": [835, 836, 1608], "custommodul": [835, 1914], "propagate_qconfig_": 837, "qconfig_dict": [837, 851], "my_qconfig": 838, "default_observ": 838, "default_qat_config": 844, "set_glob": [851, 856, 858, 1914], "set_object_typ": [851, 856, 858], "set_module_name_regex": 851, "regex": 851, "set_module_nam": [851, 856, 858], "set_module_name_object_type_ord": 851, "global_qconfig": 851, "qconfig1": 851, "qconfig2": 851, "qconfig3": 851, "object_typ": 851, "module_name_regex": 851, "module_name_object_type_ord": 851, "conv0": 851, "x86": [852, 853, 1758, 1914, 1916], "run_arg": [854, 860], "qconfig_spec": 855, "quantize_fx": [856, 857, 858, 859, 1914, 1933], "_remove_qconfig": 856, "qconfig_from_prepar": 856, "prepared_model": [856, 858, 859], "xnnpack": [856, 1877, 1914], "get_default_backend_config": [856, 858, 859], "quantized_model": 856, "fusion_pattern": 857, "fusecustomconfig": 857, "_equalization_config": 858, "get_default_qconfig_map": [858, 1914], "float_model": [858, 859, 1932], "data_load": [858, 859, 1689, 1695, 1902], "get_default_qconfig": [858, 859, 1914], "linear_pattern_config": 858, "suer": 858, "sample_inference_data": 858, "get_default_qat_qconfig_map": [859, 1914], "load_weight": 859, "train_data": 859, "get_default_qat_qconfig": [859, 1914], "custom_module_class_map": 861, "lceil": [862, 939], "rceil": [862, 939], "gap": [862, 1729, 1864, 1914], "adjac": [862, 929, 1367, 1368, 1369, 1373, 1729, 1923], "set_default_tensor_typ": [862, 919, 928, 1070, 1072, 1082, 1087, 1105, 1123, 1143, 1153, 1154, 1215, 1266, 1282, 1659, 1722, 1724, 1726, 1728, 1729, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1796, 1797, 1798, 1799, 1800, 1801, 1839, 1841, 1861], "get_default_dtyp": [862, 1266, 1282, 1664, 1729, 1925, 1926, 1935], "5000": [862, 877, 883, 884, 885, 921, 945, 1087, 1089, 1090, 1097, 1100, 1105, 1115, 1117, 1118, 1119, 1149, 1155, 1158, 1221, 1247, 1266, 1323, 1325, 1353, 1354, 1372, 1480, 1714, 1718, 1719, 1720, 1729, 1733, 1924, 1929], "3398": 871, "2663": [871, 1892], "2686": 871, "2450": 871, "7401": 871, "8805": 871, "3402": 871, "1936": 871, "4907": [871, 1283], "3948": [871, 963], "0691": 871, "3132": 871, "6092": 871, "5419": 871, "2993": [871, 1813], "3195": 871, "1139": 872, "2254": 872, "1381": [872, 1813], "3687": 872, "0100": [872, 1249, 1715], "1975": [872, 1884], "0102": 872, "4732": 872, "9240": 872, "1207": [872, 1317], "7506": 872, "0213": 872, "7809": 872, "2960": 872, "9384": 872, "1438": 872, "ascend": [873, 1089, 1232, 1234, 1263, 1316, 1749, 1787, 1846], "0785": 873, "5267": 873, "8521": 873, "4065": 873, "1598": 873, "0788": 873, "0745": 873, "2700": 873, "2208": 873, "0722": 873, "7064": 873, "2564": 873, "0669": 873, "2318": 873, "8229": 873, "9280": 873, "lexicograph": [874, 1654, 1869, 1923], "9039": 875, "6291": 875, "0795": [875, 1714, 1900], "1586": 875, "1939": 875, "4900": 875, "7503": 875, "9355": 875, "histori": [876, 877, 1135, 1673, 1828, 1876, 1884, 1894, 1896, 1920], "dlpack": [877, 1120, 1864], "frombuff": 877, "data_ptr": [877, 1882, 1925, 1927], "addbackward0": [877, 1900, 1905], "__array_interface__": 877, "5962": 878, "4985": 878, "4396": 878, "4525": [878, 1884], "6387": 878, "4552": 878, "sine": [879, 1770, 1780, 1782], "1606": 879, "4267": 879, "0899": 879, "0250": 879, "1599": 879, "1534": 879, "9435": 879, "8990": [879, 1064], "arctang": [880, 881], "2341": 880, "2539": 880, "6256": 880, "6448": 880, "2299": 880, "2487": 880, "5591": [880, 902], "5727": 880, "quadrant": 881, "9041": [881, 938], "0196": [881, 938], "3108": [881, 938], "4423": [881, 938], "9833": 881, "0811": 881, "9743": 881, "4151": 881, "tangent": [882, 892, 893, 1132, 1133, 1468, 1826, 1827], "9385": 882, "2968": 882, "8591": 882, "1871": 882, "7253": 882, "3060": 882, "2899": 882, "1893": 882, "needs_input_grad": [886, 1894], "setup_context": [887, 1895], "save_for_forward": [887, 1895], "grad_input": [888, 895, 897, 910, 1196, 1428, 1604, 1894, 1900], "underneath": 889, "generate_vmap_rul": [889, 1895], "out_dim": [889, 1137, 1856, 1867, 1883, 1895], "grad_tensor": [890, 904, 1867, 1892], "grad_vari": 890, "forward_ad": 891, "dual": [891, 892, 893, 1653, 1895], "make_du": [891, 893], "your_fn": 891, "unpack_du": [891, 892], "grad_aft": 891, "dual_level": [892, 893], "primal": [893, 1128, 1132, 1133, 1136], "x_npy": 894, "once_differenti": [894, 895, 896, 897, 1894], "g1": [895, 897, 1892, 1921], "g2": [895, 897, 1892, 1921], "oppos": [896, 1895], "weren": 896, "grad_out": [896, 1865, 1867, 1897], "gx": 896, "gy": 896, "gz": 896, "simplefunc": 897, "outer_jacobian_strategi": 898, "disconnect": [898, 899, 900, 901, 902, 903], "said": [898, 899, 900, 901, 902, 903, 1876, 1903], "cliff": [898, 900, 904], "_debug_only_display_vmap_fallback_warn": [898, 904], "pow_reduc": [898, 899, 902], "2265": 898, "8221": 898, "9456": [898, 920], "2550": 898, "viewbackward": [898, 900], "pow_adder_reduc": [898, 899, 902], "func_output": [899, 901, 902, 903], "1448": 899, "0239": 899, "6456": 899, "4988": 899, "4310": 899, "sumbackward0": [899, 902], "3030": 899, "vhp": 899, "batched_grad": 900, "exp_reduc": [900, 901, 903], "4917": 900, "4352": 900, "4369": 900, "3799": 900, "exp_add": 900, "8052": 900, "3963": 900, "3090": 901, "6742": 901, "9114": 901, "2106": 901, "sumbackward1": [901, 903], "squeezebackward1": 901, "adder": [901, 903], "2399": 901, "5005": 901, "0689": 902, "2431": 902, "0989": 902, "4456": 902, "8053": [902, 1744], "7817": 903, "2458": 903, "7830": 903, "7782": 903, "4458": 903, "3962": 903, "3042": [903, 1253], "6354": 903, "1288": [903, 1773], "0652": 903, "5483": 903, "5035": 903, "2046": [903, 963], "1292": 903, "1432": 903, "3059": 903, "3225": 903, "6652": 903, "7753": 903, "0152": 903, "4225": 903, "3340": 903, "only_input": 904, "allow_unus": [904, 1867], "is_grads_batch": 904, "materialize_grad": 904, "require_grad": [904, 1869, 1889], "06": [905, 906, 1236, 1241, 1242, 1253, 1254, 1259, 1382, 1437, 1476, 1479, 1524, 1593, 1668, 1682, 1814, 1867, 1930], "raise_except": [905, 906], "check_sparse_nnz": 905, "nondet_tol": [905, 906], "check_undefined_grad": [905, 906], "check_grad_dtyp": [905, 906], "check_batched_grad": [905, 906], "check_batched_forward_grad": 905, "check_forward_ad": 905, "check_backward_ad": 905, "fast_mod": [905, 906, 1897], "differenc": [905, 1894], "perturb": [905, 906, 1897], "sparsetensor": [905, 1799], "gradgradcheck": [905, 1894], "gen_non_contig_grad_output": 906, "check_fwd_over_rev": 906, "check_rev_over_rev": 906, "noncontigu": [906, 1012, 1930], "inaccuraci": 906, "clonebackward0": 908, "gi": [910, 911, 1900], "removablehandl": [910, 911, 1196, 1428, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1911], "eventlist": [913, 914], "group_by_stack_n": [914, 1913], "roof": 914, "functioneventavg": [914, 916], "window_length": [919, 928, 1153, 1154, 1215, 1867], "2n": [919, 1768], "trim": [919, 928, 1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1153, 1154, 1193], "_length": [919, 928, 1153, 1154, 1193, 1351, 1810], "sim": [920, 1442, 1570, 1706, 1726], "pseudorandom": [920, 1318, 1656, 1703, 1706, 1722, 1724, 1726, 1728, 1815], "1737": 920, "0950": [920, 1792], "3609": 920, "7148": 920, "0289": [920, 1838], "2676": 920, "8937": 920, "7202": 920, "2500": [921, 1087, 1089, 1090, 1100, 1105, 1266, 1480, 1720], "7500": [921, 1090, 1100, 1119, 1149, 1251, 1266, 1480, 1720, 1776], "AND": [922, 1277, 1869, 1889], "OR": [925, 1279, 1869], "xor": [927, 1280, 1869], "blackman": [928, 1778], "arrang": 929, "broadcast_tensor": [931, 1867, 1909], "out_int32": [934, 1749, 1867], "formal": [934, 1749, 1876, 1883], "tensor_a": [936, 949], "tensor_b": 936, "6580": 937, "0969": 937, "4614": 937, "1034": [937, 1069], "5790": 937, "1497": 937, "x2": [938, 1243, 1420, 1476, 1477, 1509, 1566, 1867], "compute_mod": 938, "use_mm_for_euclid_dist_if_necessari": 938, "distanc": [938, 1193, 1231, 1232, 1259, 1388, 1437, 1476, 1477, 1567, 1689, 1810, 1814, 1864], "infti": [938, 1193, 1247, 1344, 1396, 1397, 1459, 1567, 1680, 1924], "use_mm_for_euclid_dist": 938, "donot_use_mm_for_euclid_dist": 938, "minkowski": [938, 1567], "ham": [938, 1153, 1567, 1774], "closest": [938, 1567], "xn": [938, 1567], "4821": [938, 941], "059": 938, "0590": 938, "1763": [938, 1732], "4713": [938, 1732], "6986": [938, 1732], "3702": [938, 1732], "1193": [938, 1285], "0959": 938, "7138": 938, "8322": 938, "2830": [938, 1840], "3791": 938, "6341": 939, "4208": 939, "0900": 939, "5826": 939, "clr": [940, 1689], "3375": 940, "9790": 940, "1119": 940, "6577": 940, "5609": [940, 1518], "5095": 940, "2614": 940, "4038": 940, "3378": [940, 1840], "4982": 940, "2457": [940, 1298], "2561": 940, "4684": 940, "7163": 940, "9647": 940, "8917": [940, 1276], "3213": [940, 1272], "2284": [940, 1049], "8615": 940, "2816": 940, "tu": 941, "mt": [941, 942, 1225, 1232, 1234, 1238, 1239, 1240, 1245, 1254, 1713, 1814, 1867, 1876, 1909, 1927, 1929], "4112": 941, "7486": 941, "4551": 941, "3544": 941, "6724": 941, "5528": 941, "0592": [941, 1900], "9371": 941, "5487": 941, "7023": 941, "03": [941, 942, 1273, 1771, 1772, 1777], "3842e": [941, 1241], "dpotri": 942, "spotri": 942, "uu": 942, "9935": 942, "6353": 942, "5806": 942, "8769": 942, "7183": [942, 1247, 1900], "6618": 942, "9314": 942, "2251": [942, 969, 1228, 1270], "0889": 942, "4439": 942, "2122": 942, "1412": 942, "5894e": 942, "semidefinit": 943, "7747": 943, "9549": 943, "3086": 943, "4114": 943, "8733": 943, "6355": 943, "9891": 943, "1974": 943, "4706": 943, "4115": 943, "6225": 943, "1625": 943, "6097": 943, "8398": 943, "2387": [943, 964], "3771": [943, 1242], "4173": 943, "1626": [943, 969, 1228], "tensor_split": [944, 1067, 1159, 1857, 1867, 1909, 1927], "min_valu": [945, 1387], "max_valu": [945, 1387, 1867], "_valu": [945, 1336, 1613, 1799, 1894, 1909, 1923], "7120": 945, "1734": [945, 1170], "0478": [945, 1859], "0922": 945, "3333": [945, 1149, 1158, 1480, 1481, 1828], "hstack": [948, 1867, 1909, 1923], "with_replac": [949, 1867], "combinations_with_replac": 949, "_glibcxx_use_cxx11_abi": 951, "my_funct": [953, 955, 1911], "marked_funct": 953, "innermost_fn": 955, "compi": 955, "exclude_tag": 956, "valid_backend": 956, "flip": [961, 1110, 1111, 1263, 1865, 1867, 1909, 1910], "writeabl": [961, 962], "is_conj": [961, 1737, 1867, 1909], "geq": [963, 1140, 1227, 1235, 1364, 1414, 1435, 1436, 1446, 1510, 1562, 1615, 1887, 1924], "signbit": [963, 1865, 1867, 1909, 1923], "2557": 963, "0026": 963, "5387": 963, "4740": 963, "9244": 963, "7079": 963, "2778": 963, "0249": [963, 1271], "5719": 963, "0059": 963, "2600": 963, "4475": 963, "9567": [963, 1231, 1813], "5757": 963, "1751": 963, "0742": 963, "2998": 963, "1054": 963, "2373": 963, "3190": [963, 1892], "1128": [963, 1253, 1398], "pearson": 964, "coeffici": [964, 1153, 1668, 1670, 1671, 1672, 1674, 1680, 1684, 1773, 1774, 1775, 1837], "r_": [964, 1830], "ij": [964, 1069, 1275, 1283, 1297, 1431, 1791], "c_": [964, 1356, 1357, 1358, 1359, 1360, 1361, 1398, 1440, 1441], "jj": 964, "hermitian": [964, 1085, 1086, 1088, 1090, 1091, 1092, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1225, 1226, 1231, 1232, 1234, 1238, 1239, 1240, 1250, 1253, 1259, 1867], "cov": [964, 1867, 1909], "2678": [964, 1371], "0908": 964, "3766": 964, "2780": 964, "5812": 964, "1535": [964, 1371], "2350": 964, "3582": 964, "4309": 965, "2706": 965, "8562": 965, "9796": [965, 1241], "1395": 965, "2957": 965, "6553": 965, "5574": 965, "1632": 966, "1835": 966, "6979": 966, "7325": [966, 1059], "0133": 966, "7860": 966, "2536": 966, "2805": 966, "sleef": [966, 1782], "unbias": [968, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1467, 1808, 1809, 1851, 1852, 1865, 1867], "_w": 968, "y_": [968, 1079, 1269, 1270, 1272, 1345, 1364, 1394, 1791, 1835, 1889, 1924], "w_i": [968, 1235], "mu_x": 968, "mu_i": [968, 1674], "whichev": [968, 1137, 1527, 1714, 1856, 1892], "w_ix_": 968, "bessel": [968, 1215, 1777, 1808, 1809, 1851, 1852, 1924], "corrcoef": [968, 1867, 1909], "6667": [968, 1158, 1480, 1481, 1734, 1768, 1905], "fw": 968, "4282": 968, "0255": [968, 1056], "4144": [968, 1892], "4169": 968, "3956": [969, 1228], "1455": [969, 1228, 1906], "6895": [969, 1228], "5849": [969, 1228], "3599": [969, 1228], "7180": [969, 1228], "0521": [969, 1228], "1339": [969, 1228], "0225": [969, 1228, 1241], "0257": [969, 1228], "4725": [969, 1228], "1479": [969, 1228], "7005": [969, 1228], "9757": [969, 1228], "3904": [969, 1228], "3726": [969, 1228], "1836": [969, 1228], "9688": [969, 1228], "7153": [969, 1228, 1924], "2159": [969, 1228], "0844": [969, 1228], "5281": [969, 1228], "6120": [969, 1228], "4490": [969, 1228], "5687": [969, 1228], "9792": [969, 1050, 1228], "8304": [969, 1228], "3037": [969, 1228, 1900], "5650": [969, 1228], "2329": [969, 1228], "9883": [969, 1228], "0551": [969, 1228], "capture_begin": [970, 1892], "make_graphed_cal": [970, 1892], "graph_pool_handl": [970, 1004], "other_graph_inst": [970, 1004], "capture_end": [970, 1892], "debug_dump": 970, "debug_path": 970, "enable_debug_mod": 970, "path_to_so_fil": 971, "alloc_fn_nam": 971, "free_fn_nam": 971, "ctype": 971, "change_current_alloc": [971, 1892], "ssize_t": [971, 1892], "cudastream_t": [971, 973, 1892], "ptr": [971, 1892], "size_t": 971, "oss": 971, "enable_tim": [972, 1892], "interprocess": 972, "marker": 972, "elapsed_tim": [972, 1892], "end_ev": [972, 1892], "elaps": [972, 1879], "from_ipc_handl": 972, "reconstruct": [972, 1285, 1344, 1345, 1897, 1905, 1911], "ipc": [972, 1008], "ipc_handl": 972, "proceed": [972, 1382, 1920, 1921], "cudaeventsynchron": 972, "cudastreamwaitev": [972, 973, 975], "stream_ptr": 973, "record_ev": [973, 975], "cudastreamsynchron": [973, 975], "wait_ev": [973, 975], "interoper": 977, "caching_allocator_delet": 977, "mem_ptr": 978, "caching_allocator_alloc": 978, "peer_devic": 979, "_cudaalloc": 980, "clock": 981, "sm": 981, "hertz": 981, "smi": [981, 994, 1022, 1028, 1032, 1046, 1047, 1892, 1896, 1898], "buffer_s": 983, "10485760": 983, "chunk_siz": [986, 1131, 1137, 1856], "cublashandle_t": 987, "unoccupi": [994, 1306], "pytorch_cuda_alloc_conf": [995, 1892], "cudamallocasync": [995, 1026, 1892], "_cudadeviceproperti": 999, "gencod": 1000, "cuda_graph": 1004, "ordinari": [1006, 1608, 1888], "code_str": [1012, 1013], "temp": 1012, "typenam": [1012, 1013], "my_kernel": [1012, 1013], "jitted_fn": [1012, 1013], "create_jit_fn": [1012, 1013], "util_fn": 1012, "gelu": [1012, 1457, 1471, 1473, 1475, 1580, 1865, 1867, 1884, 1909], "my_gelu": 1012, "my_lib": [1012, 1873, 1906], "impl": [1012, 1873], "num_output": 1013, "sample_arg": 1015, "num_warmup_it": 1015, "allow_unused_input": 1015, "datadistributedparallel": 1015, "manual_seed_al": 1016, "occupi": [1018, 1022, 1033, 1304, 1416, 1545, 1892, 1898, 1935], "reset_peak_memory_stat": [1018, 1020, 1033, 1034], "max_memory_reserv": [1019, 1892, 1898], "cudamemgetinfo": 1021, "memory_reserv": [1023, 1892, 1898], "snapshot": [1025, 1869, 1892, 1898], "large_pool": 1026, "small_pool": 1026, "allocated_byt": 1026, "cudamalloc": [1026, 1892], "reserved_byt": 1026, "active_byt": 1026, "inactive_split": 1026, "inactive_split_byt": 1026, "octob": 1026, "1mb": 1026, "num_alloc_retri": 1026, "num_oom": 1026, "assist": [1026, 1893], "max_split_s": 1026, "oversize_alloc": 1026, "oversize_seg": 1026, "requested_byt": 1026, "abbrevi": 1027, "msg": [1029, 1031, 1913, 1930], "instantan": [1029, 1913], "ascii": [1029, 1031, 1267, 1869, 1913], "sensor": [1032, 1046], "mw": 1032, "milliwatt": 1032, "fermi": 1032, "max_memory_alloc": [1033, 1892, 1898], "max_memory_cach": 1034, "memory_stat": [1035, 1892, 1898], "seed_al": 1036, "environment": 1038, "total_memori": [1039, 1313], "debug_mod": [1043, 1756], "streamcontext": [1044, 1864], "centigrad": 1046, "x_1": [1048, 1049, 1050, 1051, 1263, 1349, 1362, 1363, 1498, 1509, 1835], "x_2": [1048, 1049, 1050, 1051, 1263, 1349, 1362, 1363, 1498, 1509], "x_3": [1048, 1049, 1050, 1051, 1263], "3449": 1048, "5447": 1048, "0685": 1048, "5104": [1048, 1892], "1706": 1048, "2259": 1048, "4696": 1048, "3284": 1048, "9946": 1048, "8209": [1048, 1051], "6628": 1049, "0975": 1049, "2680": [1049, 1891], "3298": [1049, 1056], "4220": 1049, "3885": 1049, "1762": 1049, "9165": 1049, "6684": [1049, 1173], "6001": 1050, "2069": 1050, "1919": 1050, "6727": [1050, 1063], "0062": 1050, "4126": 1050, "2129": 1050, "4206": 1050, "1968": [1050, 1924], "1241": 1050, "0238": 1050, "0233": [1050, 1721], "0157": 1050, "0158": [1050, 1814], "0065": 1050, "0014": [1050, 1924], "0006": 1050, "8286": 1051, "4890": 1051, "5155": 1051, "8443": 1051, "1865": 1051, "1752": [1051, 1059], "0595": 1051, "1850": 1051, "1571": [1051, 1900, 1905], "4243": 1051, "3175": 1051, "8020": [1051, 1711], "0423": 1051, "2289": 1051, "0537": 1051, "0058": 1051, "9780": 1051, "trapezoid": [1052, 1836, 1867, 1909], "360": 1053, "2832": 1053, "diagflat": [1056, 1867, 1909], "5950": 1056, "0872": 1056, "4264": 1056, "1064": [1056, 1900], "8795": 1056, "2429": 1056, "1374": 1056, "1029": 1056, "6482": 1056, "6300": 1056, "5410": 1057, "2934": 1057, "1788": [1057, 1924], "5684": 1057, "0845": [1057, 1782, 1900], "3986": 1057, "2956": [1058, 1228], "9068": 1058, "1695": 1058, "2094": [1058, 1892], "3018": 1058, "1516": 1058, "9342": 1058, "0854": 1059, "1431": 1059, "8536": 1059, "0905": 1059, "0360": [1059, 1317], "6927": 1059, "3735": 1059, "4945": 1059, "2631": [1059, 1316, 1892], "3755": 1059, "5977": 1059, "8172": 1059, "1065": [1059, 1900], "0401": 1059, "2235": [1059, 1813], "7938": 1059, "3081": 1059, "6166": 1059, "2335": 1059, "0500": 1059, "7336": 1059, "3836": 1059, "1015": 1059, "emb": [1060, 1752, 1783], "5393": 1063, "8675": 1063, "5916": 1063, "6321": 1063, "0967": 1063, "0511": 1063, "6295": 1063, "8360": 1063, "6973": 1063, "6537": 1063, "dividend": [1064, 1114, 1117, 1733, 1842], "true_divid": [1064, 1867, 1909], "3810": [1064, 1157], "2774": 1064, "2972": 1064, "3719": 1064, "4637": 1064, "7620": 1064, "5548": 1064, "5944": 1064, "7438": 1064, "9274": 1064, "3711": 1064, "9353": 1064, "4605": 1064, "2917": 1064, "1815": [1064, 1276], "0111": [1064, 1771], "9805": 1064, "5923": 1064, "1062": 1064, "4581": [1064, 1235], "7759": 1064, "2344": 1064, "1830": 1064, "0313": 1064, "1908": 1064, "4757": 1064, "8032": 1064, "2930": 1064, "8113": 1064, "2308": 1064, "4620": [1064, 1859], "6051": 1064, "5676": 1064, "2639": 1064, "2260": 1064, "4509": [1064, 1249], "2086": 1064, "1322": 1064, "9764": 1064, "9564": 1064, "3484": 1064, "2278": 1064, "1068": [1064, 1170], "4678": 1064, "3938": [1064, 1823], "depthwis": [1067, 1068, 1356, 1357, 1358], "atleast_3d": [1068, 1867, 1909], "operand": [1069, 1869, 1870, 1894, 1923, 1926], "notat": [1069, 1394, 1762, 1870, 1900, 1929], "einstein": 1069, "summat": [1069, 1193, 1275, 1283, 1923], "subscript": [1069, 1870], "ik": [1069, 1268, 1791], "za": 1069, "alphabet": [1069, 1511, 1919], "arrow": [1069, 1921], "ki": 1069, "ellipsi": [1069, 1869, 1870, 1883], "fourth": 1069, "whitespac": [1069, 1870], "opt_einsum": [1069, 1864], "_the_": 1069, "disclaim": 1069, "52": 1069, "op1": [1069, 1869], "sublist1": 1069, "op2": [1069, 1869], "sublist2": 1069, "subslist_out": 1069, "2104": 1069, "7952": 1069, "2433": 1069, "4545": 1069, "1156": 1069, "2897": [1069, 1900], "3918": 1069, "4963": 1069, "3744": 1069, "9381": 1069, "2685": 1069, "6070": 1069, "7208": 1069, "8058": 1069, "4419": 1069, "0936": 1069, "1713": 1069, "4291": 1069, "5802": 1069, "7350": [1069, 1924], "5704": 1069, "4290": 1069, "9323": 1069, "4480": 1069, "bij": 1069, "bjk": 1069, "bik": 1069, "0564": 1069, "5904": 1069, "2023": 1069, "1271": 1069, "6706": [1069, 1714], "8097": 1069, "8025": 1069, "1183": 1069, "2239": [1069, 1255], "3107": 1069, "5756": 1069, "2354": 1069, "4558": 1069, "3460": 1069, "5087": 1069, "8530": [1069, 1353, 1483], "8153": 1069, "8787": 1069, "3839": [1069, 1855], "2112": [1069, 1838], "3728": 1069, "1131": [1069, 1711], "0921": 1069, "8305": 1069, "ji": 1069, "anm": 1069, "bm": 1069, "ba": 1069, "3430": [1069, 1276], "2405": 1069, "4494": 1069, "3311": 1069, "5201": 1069, "0356": 1069, "4064e": 1070, "8000e": 1070, "3493e": 1070, "5751e": 1070, "1428e": 1070, "5955e": 1070, "9683e": 1072, "1239e": 1072, "0705e": 1072, "set_grad_en": [1073, 1867, 1909, 1931], "parenthesi": [1073, 1171, 1653], "doubler": [1073, 1653], "elsewher": [1074, 1082, 1140, 1152, 1186, 1188, 1189, 1192, 1220, 1284, 1329, 1792, 1863], "_max": [1083, 1084, 1914], "_min": [1083, 1084, 1914], "nearbi": [1083, 1084], "_int": [1083, 1084], "_point": [1083, 1084], "2525": 1083, "0466": 1083, "3491": [1083, 1249], "2168": [1083, 1830], "5906": [1083, 1924], "6258": 1083, "6444": 1083, "0542": 1083, "0475": [1083, 1924], "0486": 1083, "3405": 1083, "6134": [1083, 1298], "6323": 1083, "0552": 1084, "9730": 1084, "3973": 1084, "0780": 1084, "4000": [1084, 1087, 1096, 1105, 1480, 1717, 1768], "6000": [1084, 1471, 1473, 1475, 1480, 1717, 1765, 1768], "fourier": [1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1193, 1778, 1810, 1864], "rfft": [1085, 1090, 1100, 1104, 1105, 1106], "compact": [1085, 1086, 1088, 1238, 1240, 1243, 1894, 1907, 1914], "chalf": [1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1100, 1101, 1102, 1867, 1909, 1929], "sm53": [1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106], "ortho": [1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1268], "orthonorm": [1085, 1086, 1088, 1090, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1259, 1615, 1814], "ifft": [1085, 1089, 1090, 1094, 1095, 1097, 1098, 1099, 1100, 1101, 1102], "fftn": [1086, 1089, 1095, 1098, 1106], "rfft2": [1086, 1101], "ifft2": [1086, 1098], "two_fft": [1086, 1088, 1098, 1104, 1106], "check_strid": [1086, 1088, 1089, 1094, 1095, 1100, 1101, 1102, 1104, 1106, 1930], "nyquist": [1087, 1089, 1097, 1099, 1103, 1104, 1105, 1106], "i_1": [1088, 1106, 1216], "i_n": [1088, 1106, 1137, 1216, 1830, 1856], "rfftn": [1088, 1092, 1098, 1102, 1104], "ifftn": [1088, 1094, 1099], "rearrang": [1089, 1096, 1352, 1440, 1441, 1568, 1569, 1883], "fftfreq": [1089, 1096, 1105], "9000": [1089, 1828], "8000": [1089, 1323, 1480, 1714, 1768], "uncent": 1089, "ifftshift": 1089, "x_center": 1089, "x_uncent": 1089, "fft_uncent": 1089, "fft_center": 1089, "x_centered_2": 1089, "ihfft": [1090, 1098, 1099], "irfft": [1090, 1102, 1103], "symmetri": [1090, 1092, 1810], "opposit": [1090, 1092, 1814, 1834], "transformed_dim_s": [1090, 1100], "0000j": [1090, 1097, 1100, 1225, 1226, 1231, 1232, 1234, 1707, 1765], "1250": [1090, 1316], "1720j": 1090, "0406j": 1090, "2809": 1090, "6250": [1090, 1100, 1119, 1480], "9691": 1090, "hfftn": [1091, 1099], "last_dim_s": [1091, 1092, 1101, 1102, 1865], "ihfft2": 1091, "roundtrip": [1091, 1092, 1100, 1101, 1102], "ihfftn": [1092, 1098], "irfftn": [1092, 1101, 1106], "fft2": [1094, 1104], "two_ifft": [1094, 1095, 1099], "fftshift": 1096, "hfft": 1097, "6882j": 1097, "1625j": 1097, "hfft2": 1098, "8602j": 1100, "2031j": 1100, "1562": 1100, "3511": 1100, "7812": 1100, "2114": 1100, "irfft2": 1104, "wider": [1112, 1866, 1869, 1910, 1923], "49": [1112, 1251, 1891], "2500e": 1112, "1000e": 1112, "7656e": 1112, "lfloor": [1113, 1118, 1336, 1341, 1342, 1343, 1356, 1357, 1358, 1375, 1396, 1397, 1421, 1422, 1423, 1479, 1480, 1481, 1482, 1496, 1565, 1729, 1810], "rfloor": [1113, 1118, 1336, 1341, 1342, 1343, 1356, 1357, 1358, 1375, 1396, 1397, 1421, 1422, 1423, 1479, 1480, 1481, 1482, 1496, 1565, 1729, 1810], "8166": 1113, "5308": 1113, "2530": 1113, "2091": 1113, "7000": [1115, 1372, 1767], "3000": [1116, 1371, 1767, 1892], "entrywis": [1117, 1733], "modulu": [1117, 1255, 1733], "operatornam": [1118, 1231, 1232, 1233, 1234, 1251, 1259, 1344, 1345, 1351, 1388, 1389, 1395, 1419, 1459, 1477, 1767], "8750": [1119, 1480], "char": [1122, 1664, 1882, 1925], "parameter_and_buffer_dict": 1125, "tie_weight": [1125, 1650], "submodule_nam": [1125, 1650], "parameter_nam": [1125, 1650], "ty": [1125, 1650], "foo_ti": [1125, 1650], "new_a": [1125, 1650], "mutlipl": 1125, "grad_weight": [1125, 1894], "detached_param": 1125, "parameters_and_buffer_dict": 1125, "reparamater": [1125, 1650], "paramat": 1125, "intermediate_upd": 1126, "mutations_and_view": 1126, "intermeid": 1126, "inpt": 1126, "out1": [1126, 1867], "out2": [1126, 1867], "f_trace": 1126, "f_no_mutations_trac": 1126, "f_no_mutations_and_views_trac": 1126, "a_1": [1126, 1216], "view_1": 1126, "view_copi": [1126, 1867, 1909, 1931], "view_copy_1": 1126, "as_strid": [1126, 1865, 1867, 1909, 1927], "writ": 1126, "native_funct": [1126, 1865], "yaml": [1126, 1865], "aux": [1127, 1128, 1130, 1131, 1132, 1136], "my_loss_func": 1127, "y_pred": [1127, 1892], "loss_per_sampl": 1127, "y_true": 1127, "autodiff": [1130, 1131, 1132, 1254], "jacobian_f": [1130, 1131], "f_x": [1130, 1131], "jacboian": [1130, 1131], "expectedx": [1130, 1131], "expectedi": [1130, 1131], "_preallocate_and_copi": 1131, "stand": [1132, 1136, 1868, 1911, 1921], "jvp_out": 1132, "jvp_fn": 1133, "requr": 1133, "optimiz": [1135, 1866], "l1": [1135, 1388, 1389, 1459, 1536, 1581, 1625, 1634, 1900, 1905], "l2": [1135, 1389, 1419, 1459, 1667, 1668, 1669, 1670, 1672, 1674, 1680, 1681, 1683, 1888], "vjpfunc": 1136, "unsuccessfulli": [1137, 1856], "rummag": [1137, 1856], "batched_dot": [1137, 1856], "imposs": [1137, 1856, 1888], "jacobian_row": [1137, 1856], "get_vjp": [1137, 1856], "n1": [1137, 1735, 1856], "n0": [1137, 1856], "batched_pow": [1137, 1856], "autobatch": [1137, 1856], "sparse_grad": [1138, 1865, 1867], "tau": [1141, 1235, 1529, 1669, 1683, 1700, 1701, 1771, 1867], "elementari": [1141, 1889, 1897], "reflector": [1141, 1615, 1701], "household": [1141, 1235, 1615, 1701], "householder_product": [1141, 1615, 1700], "gel": [1141, 1241], "set_default_dtyp": 1143, "set_deterministic_debug_mod": [1144, 1849], "edge_ord": [1149, 1867], "mathbb": [1149, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1236, 1241, 1242, 1245, 1247, 1254, 1256, 1258, 1259, 1364, 1435, 1615], "rightarrow": 1149, "interior": 1149, "theorem": 1149, "h_l": 1149, "h_r": 1149, "neighbor": [1149, 1193, 1480, 1482, 1810], "xi_1": 1149, "xi_2": 1149, "approx": [1149, 1815, 1897], "outermost": 1149, "80": [1149, 1251, 1693, 1762, 1892, 1910], "halv": 1149, "coord": 1149, "54": [1153, 1390, 1774], "46": [1153, 1773], "hann_window": [1153, 1810, 1867, 1871, 1909], "hann": [1154, 1774], "hist": [1157, 1158, 1867], "bin_edg": [1157, 1158, 1867], "9524": 1157, "leftmost": [1158, 1884], "leg": 1162, "triangl": [1162, 1928], "hypotenus": 1162, "4031": 1162, "gammainc": [1164, 1924], "gammaincc": [1165, 1924], "index_reduce_": [1169, 1867], "realloc": 1170, "1427": 1170, "0231": 1170, "5414": 1170, "0009": 1170, "4664": [1170, 1830], "2647": 1170, "1228": 1170, "6571": 1170, "7230": 1170, "6004": 1170, "inferencemod": [1171, 1889], "bump": 1171, "_version": [1171, 1909], "multidimension": [1173, 1265, 1391], "8173": 1173, "0874": 1173, "1784": 1173, "3279": 1173, "7894": 1173, "4682": 1173, "7159": 1173, "1506": 1173, "4034": 1173, "3657": 1173, "0387": 1173, "9892": 1173, "1774": 1173, "3261": 1173, "3917": 1173, "4537": [1173, 1599], "7493": 1173, "1724": 1173, "2291": 1173, "5749": 1173, "2267": 1173, "7920": 1173, "3607": 1173, "3701": 1173, "3666": 1173, "5850": [1173, 1226], "7242": 1173, "9837": 1173, "1560": 1173, "2907": 1173, "6785": 1173, "5671": [1173, 1227], "5452": 1173, "6912": 1173, "5509": 1173, "1782": 1173, "9843": 1173, "7366": 1173, "5672": [1173, 1656], "5115": 1173, "4864": 1173, "2476": 1173, "4337": 1173, "6347": 1173, "1748": 1173, "3567": [1173, 1226], "6558": 1173, "2469": [1173, 1900], "5787": [1173, 1276], "typecheck": [1183, 1909], "mypi": [1183, 1868, 1869], "warn_alwai": 1184, "set_warn_alwai": 1184, "nonfinit": 1185, "test_el": [1187, 1867], "assume_uniqu": [1187, 1867], "0j": [1192, 1853], "nola": 1193, "envelop": 1193, "hop": [1193, 1810], "shorter": [1193, 1907, 1919], "griffin": 1193, "ieee": [1193, 1382, 1778, 1903], "tran": 1193, "assp": 1193, "vol": [1193, 1382, 1778], "pp": [1193, 1382, 1778], "236": 1193, "apr": 1193, "1984": 1193, "slide": [1193, 1341, 1342, 1343, 1375, 1421, 1422, 1423, 1479, 1521, 1551, 1552, 1553, 1595, 1718, 1719, 1810], "fft_size": 1193, "scriptmodul": [1194, 1195, 1200, 1203, 1205, 1206, 1207, 1211, 1212, 1666, 1866, 1868, 1877, 1907], "implic": [1194, 1211, 1919, 1923], "attributemodul": 1194, "names_ag": 1194, "9223372036854775807": [1194, 1641, 1879], "get_debug_st": 1195, "graphexecutorst": 1195, "_extra_fil": [1195, 1196, 1203, 1206, 1899], "save_to_buff": 1195, "add_modul": [1196, 1428], "init_weight": [1196, 1428, 1900], "buf": [1196, 1428], "20l": [1196, 1428], "1l": [1196, 1428], "5l": [1196, 1428], "code_with_const": 1196, "constmap": 1196, "extra_repr": [1196, 1428, 1894], "get_buff": [1196, 1428], "attributeerror": [1196, 1428, 1894, 1914], "get_extra_st": [1196, 1428], "set_extra_st": [1196, 1428], "get_paramet": [1196, 1428], "net_b": [1196, 1428], "net_c": [1196, 1428], "inlined_graph": 1196, "ipu": [1196, 1428], "missing_kei": [1196, 1428], "unexpected_kei": [1196, 1428], "remove_dupl": [1196, 1428], "named_children": [1196, 1428, 1900], "conv4": [1196, 1428], "conv5": [1196, 1428], "register_backward_hook": [1196, 1428, 1604], "register_full_backward_hook": [1196, 1428, 1900], "register_buff": [1196, 1428, 1601, 1866, 1868, 1894, 1900], "register_forward_hook": [1196, 1428, 1602, 1900], "with_kwarg": [1196, 1428], "register_module_forward_hook": [1196, 1428, 1900], "register_forward_pre_hook": [1196, 1365, 1428, 1603, 1900], "forward_pr": [1196, 1428], "register_module_forward_pre_hook": [1196, 1428, 1900], "register_module_full_backward_hook": [1196, 1428, 1600, 1889, 1900], "register_full_backward_pre_hook": [1196, 1428, 1900], "register_module_full_backward_pre_hook": [1196, 1428, 1900], "register_load_state_dict_post_hook": [1196, 1428], "incompatible_kei": [1196, 1428], "register_modul": [1196, 1428, 1606], "register_paramet": [1196, 1428, 1607, 1894, 1900], "register_state_dict_pre_hook": [1196, 1428], "keep_var": [1196, 1428], "finetun": [1196, 1428], "gan": [1196, 1428, 1616, 1649], "share_memori": [1196, 1428, 1902], "share_memory_": [1196, 1428, 1881, 1925], "shallow": [1196, 1365, 1428, 1476, 1477], "channels_last": [1196, 1428, 1608, 1926], "4d": [1196, 1347, 1375, 1392, 1428, 1480, 1521, 1538, 1565, 1596, 1717], "1913": [1196, 1428], "3420": [1196, 1428], "5113": [1196, 1428, 1830], "2325": [1196, 1228, 1428], "gpu1": [1196, 1428], "1914": [1196, 1428], "5112": [1196, 1428, 1892], "3741": [1196, 1428], "2382": [1196, 1317, 1428], "5593": [1196, 1428], "4443": [1196, 1428], "6122": [1196, 1428], "1150": [1196, 1428], "to_empti": [1196, 1428], "dst_type": [1196, 1428], "xpu": [1196, 1428, 1913], "set_to_non": [1196, 1428, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684, 1892], "the_typ": 1197, "the_valu": 1197, "script_bar": 1199, "addmod": 1199, "preserved_attr": 1200, "optimize_numer": 1200, "run_frozen_optim": 1200, "scripted_modul": [1200, 1207, 1905], "frozen_modul": 1200, "modified_tensor": 1200, "mymodule2": 1200, "dump_alias_db": 1200, "pdb": [1201, 1207, 1213, 1866, 1868], "training_method": 1201, "target_typ": 1202, "refin": [1202, 1883], "testcod": [1202, 1868], "key1": 1202, "val1": 1202, "key2": 1202, "val2": 1202, "_restore_shap": 1203, "scriptfunct": [1203, 1207, 1208, 1211, 1907], "readlin": [1203, 1267, 1911], "seek": [1203, 1267, 1911, 1914], "retrac": 1203, "rb": [1203, 1267], "extra_fil": [1203, 1206], "other_method": 1205, "lesser": [1205, 1889, 1891], "extent": [1205, 1891, 1923], "frozen_mod": 1205, "offlin": 1206, "_frames_up": 1207, "_rcb": 1207, "scriptdict": 1207, "scriptlist": 1207, "test_sum": 1207, "scripted_fn": [1207, 1866], "conv2": [1207, 1428, 1456, 1866, 1914], "some_entry_point": 1207, "python_only_fn": 1207, "testnnmodul": 1207, "pdt_model": 1207, "scripted_model": [1207, 1911], "un": [1209, 1351, 1914], "unfus": 1209, "nb": 1209, "check_trac": [1211, 1212], "check_input": [1211, 1212, 1866], "check_toler": [1211, 1212], "_force_outplac": [1211, 1212], "_module_class": [1211, 1212], "_compilation_unit": [1211, 1212], "compilationunit": [1211, 1212], "example_kwarg_input": 1211, "_store_input": [1211, 1212], "trace_modul": [1211, 1866, 1869], "untrack": 1211, "checker": [1211, 1212, 1869, 1907], "diverg": [1211, 1212, 1394, 1539, 1864, 1869], "traced_foo": [1211, 1866], "example_weight": [1211, 1212], "example_forward_input": [1211, 1212], "example_inputs_is_kwarg": 1212, "method2": 1212, "example_method2_input": 1212, "weighted_kernel_sum": 1212, "use_memory_effici": 1213, "memory_effici": 1213, "scriptabl": 1213, "kaiser": [1215, 1471, 1473, 1475], "i_0": [1215, 1216, 1777, 1830, 1924], "zeroth": [1215, 1777, 1924], "out_i": 1215, "kroneck": 1216, "a_0": 1216, "a_n": 1216, "b_0": 1216, "b_1": 1216, "b_n": 1216, "k_0": [1216, 1830], "k_1": 1216, "k_n": 1216, "j_0": 1216, "j_1": 1216, "j_n": 1216, "k_t": 1216, "i_t": [1216, 1398, 1682], "b_t": 1216, "j_t": 1216, "bmatrix": 1216, "a_": [1216, 1287, 1416, 1830], "cdot": [1216, 1241, 1253, 1344, 1345, 1363, 1364, 1386, 1394, 1431, 1432, 1433, 1434, 1435, 1471, 1509, 1532, 1707, 1810, 1924, 1930], "vdot": [1216, 1263, 1264, 1867, 1909], "ddot": [1216, 1263], "kth": 1217, "full_lik": [1221, 1867, 1871, 1909], "logarithm": [1224, 1229, 1255, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1282, 1351, 1511, 1546, 1790, 1924], "gamma": [1224, 1346, 1347, 1348, 1383, 1391, 1392, 1393, 1400, 1467, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1685, 1689, 1690, 1693, 1698, 1699, 1717, 1864, 1867, 1907, 1909, 1910, 1924], "5724": [1224, 1924], "1208": [1224, 1924], "mathrlap": [1225, 1231, 1232, 1233, 1234, 1242, 1245, 1254, 1256, 1258, 1259, 1615], "qquad": [1225, 1227, 1231, 1232, 1233, 1234, 1235, 1242, 1245, 1254, 1256, 1258, 1259, 1615], "eigenvalu": [1225, 1231, 1232, 1233, 1234, 1247, 1250, 1253, 1258, 1259, 1268, 1703, 1867], "resp": [1225, 1232, 1234, 1258, 1259, 1276], "5266": 1225, "9586": 1225, "0626j": 1225, "4160": 1225, "5895": 1225, "2322": 1225, "2976j": 1225, "4928": [1225, 1830], "4692e": 1225, "8747e": 1225, "check_error": [1226, 1237, 1239, 1244, 1257, 1867], "performantli": 1226, "3792": 1226, "9831j": 1226, "8757": 1226, "5425": 1226, "6374j": 1226, "kappa": 1227, "_p": [1227, 1437], "frobeniu": [1227, 1241, 1248, 1252, 1655], "nuc": [1227, 1248, 1252, 1265, 1626, 1635, 1655], "nuclear": [1227, 1248, 1252, 1655], "sigma_1": [1227, 1241, 1250, 1253], "sigma_n": 1227, "kappa_2": 1227, "kappa_": 1227, "4142": [1227, 1252, 1655, 1707], "1623": [1227, 1248], "2426": [1227, 1252, 1655], "7071": [1227, 1770], "5917": 1227, "9941": 1228, "5132": 1228, "5681": 1228, "4653": 1228, "4507": 1228, "4119": 1228, "6163": 1228, "1073": 1228, "3957": 1228, "9666": [1228, 1518], "0840": 1228, "3357": 1228, "2139": 1228, "slogdet": [1229, 1276, 1867, 1909], "0934": 1229, "1990": [1229, 1276], "4099": [1229, 1276], "7386": [1229, 1276], "diagonaliz": [1231, 1233], "eigenvector": [1231, 1232, 1268, 1867], "neq": [1231, 1232, 1235, 1259, 1329, 1431, 1433, 1668, 1669, 1670, 1672, 1674, 1680, 1681, 1683, 1687, 1814], "phi": [1231, 1232, 1259, 1378, 1525, 1814], "shall": [1231, 1232, 1259, 1617, 1621], "lambda_i": [1231, 1232, 1247], "lambda_j": [1231, 1232], "eigval": [1231, 1867], "9828": [1231, 1838, 1900], "3889j": 1231, "4617": 1231, "3010j": 1231, "1662": 1231, "7435j": 1231, "6139": 1231, "0562j": 1231, "1226": [1231, 1233], "5738j": [1231, 1233], "7537": [1231, 1233], "1286j": [1231, 1233], "9218": 1231, "1882": 1231, "2220j": 1231, "0270": 1231, "3867j": 1231, "7119e": 1231, "2841e": 1231, "uplo": [1232, 1234, 1867], "unitari": [1232, 1235, 1254, 1259, 1615, 1701], "eigvalsh": [1232, 1250], "9228": [1232, 1234], "2029": [1232, 1234], "0862j": [1232, 1234], "3464": [1232, 1234], "3277": [1232, 1234], "9415": [1232, 1234], "0846": 1232, "9964": 1232, "9170": 1232, "3898j": 1232, "0331j": 1232, "1062e": 1232, "5423e": 1232, "polynomi": [1233, 1234, 1696], "_n": [1233, 1234, 1236, 1615, 1894], "4576e": [1233, 1260], "5797": 1234, "4629": 1234, "1605": 1234, "3780": 1234, "1113": [1234, 1900], "7381": 1234, "h_1h_2": 1235, "h_k": 1235, "h_i": [1235, 1462], "_m": [1235, 1615], "tau_i": 1235, "8034": 1235, "4184j": 1235, "2588": 1235, "0174j": 1235, "6853": 1235, "7953j": 1235, "0790": 1235, "5620j": 1235, "6989j": 1235, "5360": 1235, "1193j": 1235, "3877": 1235, "6691j": 1235, "3512": 1235, "3024j": 1235, "4766": 1235, "5783j": 1235, "0361": [1235, 1900], "6587j": 1235, "6396": [1235, 1900], "1612j": 1235, "3693": 1235, "4481j": 1235, "aa": 1236, "pinv": [1236, 1241, 1705], "moor": [1236, 1253], "penros": [1236, 1253], "ainv": [1236, 1237, 1257, 1261], "1921e": 1236, "9073e": [1236, 1479], "5107e": 1236, "ldl": [1238, 1240], "indefinit": 1238, "ld": [1238, 1239, 1240, 1867], "sytrf": [1238, 1239], "ldl_solv": 1238, "ldl_factor_ex": [1238, 1240], "2079": [1238, 1239, 1924], "2414": [1238, 1239], "9428": [1238, 1239], "4554": [1238, 1239], "3264": [1238, 1239], "3823": [1238, 1239], "5884": [1238, 1239], "9595": [1238, 1239, 1770], "2695": [1238, 1239], "8513": [1238, 1239], "1633": [1238, 1239], "ldl_factor": 1239, "rcond": [1241, 1253, 1705, 1867], "_f": 1241, "gelsi": 1241, "gelsd": 1241, "gelss": 1241, "tridiagon": 1241, "sigma_i": [1241, 1259, 1814], "residu": [1241, 1268, 1867, 1900], "singular_valu": [1241, 1867], "lh": 1241, "rh": [1241, 1286], "0838": [1241, 1900], "2275": [1241, 1316], "3844": 1241, "5499": 1241, "1175": 1241, "9102": 1241, "0870": 1241, "6772": 1241, "7758": 1241, "5109": 1241, "4382": 1241, "3769": 1241, "1818": 1241, "3450": 1241, "0806": [1241, 1900], "3967": 1241, "3994": 1241, "1521": 1241, "1473": 1241, "9194": 1241, "0458": 1241, "6705": [1241, 1300], "1802": 1241, "4086": 1241, "5152e": 1241, "5007": 1242, "9755": 1242, "0489": 1242, "9644": [1242, 1295], "9605e": 1242, "0376e": 1242, "lu_factor_ex": [1243, 1285], "lu_unpack": [1243, 1285, 1867, 1909], "b1": 1243, "b2": [1243, 1892, 1898], "a_factor": 1243, "getrf": [1244, 1257], "adjoint": [1245, 1867, 1909, 1927, 1929], "_exp": 1247, "3891": 1247, "8660": 1247, "ord": [1248, 1252, 1265, 1655, 1867, 1869, 1909], "la": [1248, 1252, 1265, 1900], "2829": 1248, "2627": 1248, "0756": 1249, "4980": 1249, "6617": 1249, "4994": 1249, "9980": 1249, "2731": 1249, "8001": 1249, "2640": 1249, "4571": 1249, "5511": 1249, "0163": [1249, 1295], "5292": 1249, "4899": 1249, "0822": 1249, "2773": [1249, 1884], "varepsilon": [1250, 1253], "tol": [1250, 1268, 1867], "fewest": 1251, "nd": [1251, 1903], "bc": [1251, 1910], "75000": 1251, "148": 1251, "vector_norm": [1252, 1655], "matrix_norm": [1252, 1265, 1616, 1655], "7460": [1252, 1655], "3485": 1252, "8570e": 1252, "8480": 1252, "2361": [1252, 1655, 1656], "7417": [1252, 1655], "computation": [1253, 1897], "5495": [1253, 1316], "0979": 1253, "4092": 1253, "4132": [1253, 1776], "1143": 1253, "3662": 1253, "6374": 1253, "9294": 1253, "3269": [1253, 1900], "5745": [1253, 1808, 1809, 1851, 1852], "0382": [1253, 1317], "5922": 1253, "6759": 1253, "0600": 1253, "1933": 1253, "2090": 1253, "0903": 1253, "0817": 1253, "4752": [1253, 1813], "7124": 1253, "1631": 1253, "2272": 1253, "1356": 1253, "3933": 1253, "5023": 1253, "0308": 1253, "1725": 1253, "5216": 1253, "apinv": 1253, "5633e": 1253, "0830e": 1253, "wide": [1254, 1259, 1615, 1772, 1891, 1894, 1900, 1910], "51": [1254, 1426, 1713], "167": [1254, 1713], "68": [1254, 1713, 1866, 1868], "8571": [1254, 1713], "3943": [1254, 1713], "3314": [1254, 1713], "4286": [1254, 1713], "9029": [1254, 1713], "0343": [1254, 1713], "2857": [1254, 1713], "1714": [1254, 1713, 1900], "9429": [1254, 1713], "175": [1254, 1713], "q2": 1254, "r2": [1254, 1467], "6099e": 1254, "2158e": 1254, "logabsdet": [1255, 1867], "0032": 1255, "1219": [1255, 1732], "6690": 1255, "1161": 1255, "4053": 1255, "6218": [1255, 1827], "9273": 1255, "0082": 1255, "7576": 1255, "logdet": [1255, 1867, 1909], "linalg_slogdet": [1255, 1867, 1909], "2776": 1255, "solve_triangular": [1256, 1837], "expand_a": [1256, 1867, 1894, 1909, 1927], "rectangular": [1258, 1259, 1287, 1887], "triu_": [1258, 1867], "tril_": [1258, 1867], "full_matric": [1259, 1260, 1620, 1814, 1865, 1867], "vh": [1259, 1620, 1814, 1865, 1867], "gesvdj": [1259, 1260, 1814], "jacobi": 1259, "gesvda": [1259, 1260], "gesvd": [1259, 1260, 1814], "u_k": 1259, "v_k": 1259, "sigma_j": [1259, 1814], "eigendecomposit": 1259, "0486e": 1259, "0957e": 1259, "5139": 1260, "1087": 1260, "1066": 1260, "ind": [1261, 1262, 1867, 1895], "tensorsolv": 1261, "atensorinv": 1261, "movedim": [1262, 1302, 1867, 1895, 1909, 1927], "tensorinv": 1262, "vandermond": [1263, 1850], "pmatrix": 1263, "x_n": [1263, 1344, 1345, 1388, 1389, 1395, 1419, 1459, 1835, 1889], "125": [1263, 1446, 1850, 1867], "overlin": [1264, 1853], "3223": 1264, "2815": 1264, "1944": [1264, 1900], "4345": 1265, "pickle_modul": [1267, 1745], "weights_onli": [1267, 1863, 1878], "pickle_load_arg": 1267, "register_packag": 1267, "binaryio": [1267, 1745, 1911], "untrust": [1267, 1863, 1878, 1911], "unsaf": [1267, 1617, 1620, 1867, 1892, 1911], "tamper": [1267, 1911], "ram": [1267, 1892], "surg": 1267, "decod": [1267, 1471, 1472, 1473, 1608, 1911], "utf": [1267, 1907, 1911], "unicodedecodeerror": 1267, "codec": 1267, "0x": 1267, "latin1": 1267, "byte_arrai": 1267, "niter": [1268, 1703, 1815], "ortho_iparam": 1268, "ortho_fparam": 1268, "ortho_bparam": 1268, "knyazev": 1268, "knyazev2001": 1268, "stathopoulosetal2002": 1268, "converg": [1268, 1459, 1615, 1670, 1671, 1695, 1888, 1900, 1903], "precondition": 1268, "eigenpair": 1268, "criterion": [1268, 1344, 1345, 1362, 1364, 1389, 1395, 1419, 1420, 1431, 1432, 1433, 1459, 1460, 1476, 1477, 1510, 1688, 1720, 1896], "fep": 1268, "eigenproblem": 1268, "iparam": 1268, "fparam": 1268, "bparam": 1268, "ivar": 1268, "fvar": 1268, "bvar": 1268, "tvar": 1268, "istep": 1268, "converged_count": 1268, "rerr": 1268, "force_stop": 1268, "2001": 1268, "precondit": 1268, "eigensolv": 1268, "siam": 1268, "sci": 1268, "517": 1268, "541": 1268, "epub": 1268, "doi": [1268, 1382, 1778], "1137": 1268, "s1064827500366124": 1268, "andrea": 1268, "stathopoulo": 1268, "kesheng": 1268, "2002": [1268, 1778], "2165": 1268, "2182": 1268, "s1064827500370883": 1268, "duerschetal2018": 1268, "jed": 1268, "duersch": 1268, "meiyu": 1268, "shao": 1268, "chao": 1268, "ming": 1268, "gu": 1268, "c655": 1268, "c676": 1268, "17m1129830": 1268, "log_": [1269, 1270, 1271, 1272, 1867, 1882], "7767": 1269, "3234": 1269, "2156": 1269, "2411": 1269, "5739": 1269, "5637": 1269, "4640": 1269, "1952": 1269, "4226": 1269, "5204": [1269, 1722], "5224": 1270, "9354": 1270, "7257": 1270, "1301": 1270, "2820": 1270, "0290": 1270, "1392": 1270, "8857": 1270, "6476": 1270, "0090": [1271, 1330, 1709, 1924], "9923": 1271, "5372": 1271, "2492": 1271, "8653": 1271, "7055": 1271, "7705": 1271, "2225": 1271, "8419": 1272, "8003": [1272, 1904], "9971": 1272, "5287": 1272, "0490": 1272, "2483": 1272, "0042": 1272, "9196": 1272, "3504": [1272, 1830], "logsumexp": [1273, 1867, 1882, 1909, 1924], "3069": 1273, "6867": 1273, "8731": 1273, "30000": 1273, "1269e": 1273, "log_2": 1274, "logaddexp": [1274, 1867, 1909], "limits_": 1275, "42296738": 1275, "04462666": 1275, "86278635": 1275, "94622083": 1275, "05277811": 1275, "39202815": 1275, "83525007": 1275, "84492621": 1275, "06084887": 1275, "06844475": 1275, "2611": [1276, 1827], "9254": 1276, "6213": [1276, 1900], "6843": 1276, "3242": 1276, "9665": 1276, "4539": 1276, "0887": [1276, 1924], "1336": 1276, "4025": 1276, "7089": [1276, 1371], "9032": 1276, "3031": 1276, "2589": 1282, "1135": 1282, "5481": [1282, 1295, 1900], "9566": 1282, "sum_j": [1283, 1418, 1461, 1463, 1583, 1793, 1924], "0593": [1283, 1900], "5696": 1283, "6859e": 1283, "compute_pivot": 1285, "transposit": [1285, 1834, 1923], "perm": 1285, "a_lu": 1285, "5558": 1285, "1684": 1285, "1551": 1285, "1940": 1285, "6189": 1285, "5497": 1285, "4526": 1285, "2526": 1285, "3285": 1285, "7988": 1285, "7175": 1285, "9701": 1285, "2634": 1285, "9255": 1285, "3459": 1285, "00000e": 1286, "8312": 1286, "unpack_data": [1287, 1867], "unpack_pivot": [1287, 1867], "l_": [1287, 1333, 1337, 1341, 1345, 1356, 1357, 1358, 1359, 1396, 1421], "u_": [1287, 1668, 1672], "3552": [1289, 1519], "3825": 1289, "8297": 1289, "3477": 1289, "2035": [1289, 1808, 1809, 1851, 1852], "2252": [1289, 1924], "5002": 1289, "6248": [1289, 1298], "1307": 1289, "0608": [1289, 1787], "1244": 1289, "0139": 1289, "6763": 1293, "7445": 1293, "2369": 1293, "argmax": [1293, 1336, 1421, 1551, 1552, 1553, 1825, 1865, 1867, 1909], "max_indic": 1293, "2360": 1293, "2942": 1293, "1222": [1293, 1900], "8475": 1293, "1949": 1293, "1127": 1293, "6702": 1293, "5717": 1293, "9207": 1293, "1297": 1293, "8768": 1293, "6172": 1293, "6060": 1293, "2432": 1293, "3288": 1295, "3367": 1295, "nanmean": [1295, 1867, 1909], "3841": 1295, "6320": 1295, "4254": 1295, "7384": 1295, "0131": 1295, "6549": [1295, 1770], "4279": 1295, "3350": 1295, "7694": 1295, "5600": [1295, 1480], "0842": 1295, "9580": 1295, "3623": 1295, "2343": [1295, 1884], "5085": 1295, "4599": 1295, "1807": 1295, "5219": 1296, "5212": 1296, "2202": 1296, "2505": 1296, "3982": 1296, "9948": 1296, "3518": 1296, "3131": 1296, "3180": [1296, 1923], "6993": 1296, "0436": 1296, "0438": 1296, "2270": 1296, "2751": 1296, "7303": 1296, "2192": 1296, "3321": 1296, "2488": 1296, "0778": 1296, "9510": 1296, "7048": 1296, "4742": [1296, 1843, 1924], "7125": [1296, 1795], "plot": [1297, 1891, 1913, 1928], "t_0": [1297, 1688], "s_0": 1297, "s_": [1297, 1334, 1335, 1374, 1478], "g_0": 1297, "g_": [1297, 1672, 1682, 1683], "g_i": 1297, "t_i": 1297, "0d": [1297, 1420], "xy": 1297, "50276": 1297, "cartesian_prod": [1297, 1867, 1909], "grid_x": 1297, "grid_i": 1297, "dstack": [1297, 1867, 1909, 1923], "matplotlib": [1297, 1928], "pyplot": [1297, 1928], "plt": 1297, "plot_surfac": 1297, "6750": 1298, "0857": [1298, 1840], "7197": [1298, 1859], "argmin": [1298, 1865, 1867, 1909], "min_indic": [1298, 1867], "1334": 1298, "2803": 1298, "4644": [1298, 1808, 1809, 1851, 1852], "2635": [1298, 1900], "3651": 1298, "0384": 1298, "0128": 1298, "7015": 1298, "1153": 1298, "9849": 1298, "1458": [1298, 1924], "5788": 1298, "deduc": [1300, 1923], "4851": 1300, "5037": 1300, "3633": 1300, "0760": 1300, "3362": [1302, 1303], "8437": [1302, 1303], "9627": [1302, 1303], "1727": [1302, 1303], "5173": [1302, 1303], "1398": [1302, 1303], "mpsalloc": [1304, 1305], "metal": [1305, 1313, 1877, 1901], "mpsgraph": 1305, "wait_until_complet": [1309, 1310], "signpost": [1309, 1310, 1311], "xcode": 1310, "recommendedmaxworkingsets": 1313, "unlimit": [1313, 1892], "1321": 1316, "4370": 1316, "1289": 1316, "0527": 1316, "3077": [1316, 1804], "0881": 1316, "1259": 1316, "0284": 1316, "2015": [1317, 1887, 1900], "6087": 1317, "1494": 1317, "5491": 1317, "260": 1317, "8663": 1317, "3137": 1317, "0700": 1317, "8378": 1317, "5146": 1317, "1216": 1317, "5244": 1317, "5767": 1317, "1363": 1317, "5877": 1317, "5083": 1317, "1614": 1317, "1645": 1317, "7021": 1317, "0085": 1317, "0367": 1317, "1567": 1317, "4312": 1317, "1019": 1317, "4394": 1317, "8753": 1317, "_sampl": 1318, "thtensorrandom": 1318, "320": [1318, 1454], "0404": 1320, "6361": 1320, "multigammaln": [1321, 1924], "4028e": 1322, "1400e": 1322, "isnan": [1323, 1865, 1867, 1909, 1923], "midpoint": [1325, 1714], "weakli": [1327, 1328, 1924], "to_spars": [1328, 1791, 1867, 1904, 1909, 1923], "2262": [1330, 1709], "0682": [1330, 1709], "2866": [1330, 1709], "3940": [1330, 1709], "5x7": [1334, 1338], "7x7": [1334, 1338], "10x7": [1334, 1338], "cube": [1335, 1339, 1720], "d_": [1335, 1339, 1343, 1355, 1358, 1361, 1423, 1426, 1451, 1454, 1480, 1485, 1527, 1838, 1839, 1840, 1841], "5x7x9": [1335, 1339], "7x7x7": [1335, 1339], "7x9x8": [1335, 1339], "n_class": 1336, "cutoff": [1336, 1887], "div_valu": 1336, "head_bia": 1336, "edouard": 1336, "grave": [1336, 1351], "armand": 1336, "joulin": 1336, "moustapha": 1336, "ciss\u00e9": 1336, "grangier": 1336, "herv\u00e9": 1336, "j\u00e9gou": 1336, "imbalanc": 1336, "zipf": 1336, "law": 1336, "1001": 1336, "1002": 1336, "_class": 1336, "maxunpool1d": [1337, 1421, 1554, 1849], "maxunpool2d": [1338, 1376, 1422, 1555, 1849], "maxunpool3d": [1339, 1377, 1423, 1556, 1849], "selu": [1340, 1373, 1520, 1867, 1887, 1907, 1909], "n_i": [1341, 1342, 1343, 1356, 1357, 1358, 1421, 1422, 1423, 1476, 1477], "c_j": [1341, 1342, 1343, 1421, 1422, 1423], "size_averag": [1344, 1345, 1362, 1364, 1388, 1394, 1395, 1419, 1420, 1431, 1432, 1433, 1435, 1442, 1459, 1460, 1476, 1499, 1500, 1508, 1510, 1535, 1539, 1540, 1550, 1558, 1559, 1560, 1561, 1562, 1570, 1581, 1582, 1593, 1867], "unreduc": [1344, 1345, 1364, 1389, 1395, 1419, 1435, 1459, 1477], "ell": [1344, 1345, 1364, 1388, 1389, 1395, 1419, 1435, 1459, 1477], "l_1": [1344, 1345, 1364, 1388, 1389, 1395, 1419, 1435, 1459, 1477], "l_n": [1344, 1345, 1364, 1388, 1389, 1395, 1419, 1435, 1459, 1477], "w_n": [1344, 1345, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778], "y_n": [1344, 1345, 1364, 1388, 1389, 1395, 1419, 1435, 1459, 1835, 1889], "lim_": [1344, 1889], "secondli": 1344, "straight": [1344, 1529], "rescal": [1344, 1345, 1364, 1432, 1433, 1435, 1461, 1463, 1499, 1500, 1510, 1562, 1620, 1649], "nbatch": [1344, 1345], "pos_weight": [1345, 1500, 1867], "classif": [1345, 1351, 1364, 1431, 1433, 1435, 1460, 1511, 1864, 1887, 1915], "ell_c": 1345, "l_c": 1345, "p_c": 1345, "pai": [1345, 1500, 1906, 1927], "spacial": [1345, 1500], "random_": [1345, 1364, 1435, 1500, 1867, 1882, 1931], "hat": [1346, 1347, 1348, 1391, 1392, 1393, 1467], "terminologi": [1346, 1347, 1348, 1467], "tempor": [1346, 1348, 1351, 1467, 1480, 1511, 1538, 1596], "5d": [1348, 1393, 1480, 1527, 1538, 1565, 1596], "volumetr": [1348, 1467, 1480, 1527, 1538, 1596, 1597, 1598], "spatio": [1348, 1467], "in1_featur": 1349, "in2_featur": 1349, "in1": [1349, 1498], "in2": [1349, 1498], "blank": [1351, 1511, 1867, 1870], "zero_infin": [1351, 1511, 1867], "connectionist": [1351, 1511], "unseg": 1351, "longest": [1351, 1642, 1644, 1645, 1896], "input_length": [1351, 1511, 1867, 1896], "target_length": [1351, 1511, 1867], "s_n": 1351, "target_n": 1351, "unbatch": [1351, 1364, 1375, 1380, 1391, 1398, 1434, 1443, 1471, 1521], "s_min": 1351, "toronto": 1351, "edu": [1351, 1720], "icml_2006": 1351, "256": [1351, 1710, 1892, 1907], "background": [1351, 1359, 1527, 1565, 1902, 1919], "channel_shuffl": [1352, 1867, 1909], "_left": [1353, 1354, 1355, 1449, 1450, 1451, 1452, 1453, 1454, 1483, 1484, 1485, 1565], "_right": [1353, 1354, 1355, 1449, 1450, 1451, 1452, 1453, 1454, 1483, 1484, 1485, 1565], "0491": [1353, 1483], "7152": [1353, 1483], "0749": [1353, 1483], "3287": [1353, 1483], "8966": [1353, 1483], "1466": [1353, 1483], "2771": [1353, 1483], "6616": [1353, 1483], "4523": [1353, 1483], "1255": [1353, 1483], "6372": [1353, 1483, 1814], "1182": [1353, 1483], "8652": [1353, 1483], "_top": [1354, 1355, 1450, 1451, 1453, 1454, 1484, 1485, 1565], "_bottom": [1354, 1355, 1450, 1451, 1453, 1454, 1484, 1485, 1565], "6585": 1354, "4320": [1354, 1823], "8701": 1354, "4649": 1354, "_front": [1355, 1451, 1454, 1485, 1565], "_back": [1355, 1451, 1454, 1485, 1565], "_j": [1356, 1357], "star": [1356, 1357, 1358, 1869], "\u00e0": [1356, 1357, 1358, 1359, 1360, 1361, 1375, 1479], "trou": [1356, 1357, 1358, 1359, 1360, 1361, 1375, 1479], "harder": [1356, 1357, 1358, 1359, 1360, 1361, 1375, 1422, 1423, 1479], "prod_": [1357, 1358, 1360, 1361, 1374, 1478, 1674], "out_j": 1358, "deconvolut": [1359, 1360, 1361, 1505, 1506, 1507], "_pad": [1359, 1360, 1361], "dissimilar": [1362, 1388], "semi": [1362, 1388, 1887], "supervis": [1362, 1388], "vert": [1363, 1437, 1509], "_2": [1363, 1509, 1616, 1649], "ast_1": [1363, 1379], "ast_2": [1363, 1379], "ignore_index": [1364, 1435, 1510, 1562, 1867], "label_smooth": [1364, 1510, 1867], "unbalanc": [1364, 1435], "d_1": [1364, 1435, 1510, 1562], "d_2": [1364, 1435, 1510, 1562], "d_k": [1364, 1435, 1510, 1562], "_index": [1364, 1435], "logsoftmax": [1364, 1435, 1461, 1546], "nllloss": [1364, 1461, 1562, 1583, 1849], "blend": 1364, "smooth": [1364, 1389, 1459, 1464, 1510, 1681], "w_c": 1364, "truth": [1364, 1510, 1876, 1928], "rethink": [1364, 1510], "incept": [1364, 1510], "spectral_norm": [1365, 1639], "neuron": 1366, "detector": 1366, "dropout1d": [1368, 1867], "_freez": 1371, "sparseadam": [1371, 1910], "0251": 1371, "6902": [1371, 1711], "7172": 1371, "6431": 1371, "0748": 1371, "6969": 1371, "4970": 1371, "3448": 1371, "9685": 1371, "3677": 1371, "7265": 1371, "1685": 1371, "4362": 1371, "4004": [1371, 1795], "9400": 1371, "9124": 1371, "3616": 1371, "1151": 1371, "0309": 1371, "9315": 1371, "1655": [1371, 1892], "9897": 1371, "0635": 1371, "7895": 1371, "0364": 1371, "6778": 1371, "5803": 1371, "bag": [1372, 1519], "per_sample_weight": [1372, 1519, 1867], "embedding_sum": 1372, "8861": 1372, "4350": 1372, "0523": 1372, "1306": 1372, "5798": 1372, "0044": 1372, "7082": [1372, 1519], "2145": [1372, 1519], "6251": [1372, 1519], "6500": 1372, "satur": [1373, 1520], "alphadropout": [1373, 1493], "160": [1374, 1910], "unfold": [1375, 1867, 1909, 1927], "prod_d": [1375, 1479], "neighborhood": [1375, 1479], "col2im": [1375, 1865, 1867, 1909], "fold_param": [1375, 1479], "input_on": [1375, 1479], "output_ratio": [1376, 1377, 1522, 1523, 1867], "_random_sampl": [1376, 1377, 1522, 1523, 1867], "ben": [1376, 1377, 1522, 1523], "graham": [1376, 1377, 1522, 1523], "oh": [1376, 1377, 1522, 1523], "ow": [1376, 1377, 1522, 1523], "_ratio": [1376, 1377, 1523], "13x12": [1376, 1522], "kt": [1377, 1496, 1504, 1507, 1523, 1553], "ot": [1377, 1523], "13x12x11": [1377, 1523], "044715": [1378, 1525], "pack_sequ": [1380, 1398, 1443, 1644, 1646], "bias_ih": [1381, 1399, 1445], "bias_hh": [1381, 1399, 1445], "const": [1382, 1899], "homoscedast": [1382, 1524], "heteroscedast": [1382, 1524], "nix": 1382, "weigend": 1382, "1994": 1382, "icnn": 1382, "94": 1382, "orlando": 1382, "fl": 1382, "usa": [1382, 1928], "374138": 1382, "instancenorm": [1383, 1916], "shrinkag": [1384, 1465, 1530, 1586], "mobilenetv3": [1386, 1532], "_val": 1387, "l1loss": [1389, 1459, 1540], "outlier": [1389, 1459, 1914, 1915], "huber": [1389, 1459], "smoothl1loss": [1389, 1581], "insensit": 1390, "unused_argument1": 1390, "unused_argument2": 1390, "ingredi": [1391, 1392, 1393], "styliz": [1391, 1392, 1393], "rgb": [1392, 1393, 1928], "log_target": [1394, 1539, 1867], "pred": [1394, 1608, 1865, 1901, 1910, 1919], "kl": [1394, 1539, 1864], "summaris": 1394, "loss_pointwis": 1394, "batchmean": [1394, 1539], "kl_loss": 1394, "mae": 1395, "f_t": [1398, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "hf": [1398, 1399], "g_t": [1398, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "ig": [1398, 1399], "hg": [1398, 1399], "o_t": 1398, "ho": [1398, 1399], "c_t": 1398, "odot": 1398, "forget": [1398, 1868, 1869], "proj_siz": [1398, 1444], "1402": 1398, "c_0": [1398, 1399], "proj": 1398, "c_n": 1398, "w_ii": 1398, "w_if": 1398, "w_ig": 1398, "w_io": 1398, "w_hi": 1398, "w_hf": 1398, "w_hg": 1398, "w_ho": 1398, "b_ii": 1398, "b_if": 1398, "b_ig": 1398, "b_io": 1398, "b_hi": 1398, "b_hf": 1398, "b_hg": 1398, "b_ho": 1398, "weight_hr_l": 1398, "_revers": 1398, "h_1": 1399, "c_1": 1399, "time_step": 1399, "_shape": 1400, "sentence_length": 1400, "lazymodulemixin": [1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413], "cls_to_becom": [1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1611], "convtranspose1d": [1407, 1505, 1849, 1916], "convtranspose3d": [1409, 1507, 1849, 1916], "instancenorm1d": [1410, 1537, 1916], "instancenorm2d": [1411, 1537, 1916], "instancenorm3d": [1412, 1537, 1916], "uninitializedparamet": [1413, 1599, 1864], "lrn": 1416, "signal_2d": 1416, "signal_4d": 1416, "output_2d": 1416, "output_4d": 1416, "x_j": [1418, 1461, 1463, 1583, 1793, 1897, 1924], "80827": [1424, 1425, 1426], "unpool": [1424, 1425, 1426], "maxpool3d": [1426, 1553, 1556, 1849, 1916], "unpooled_output": 1426, "t_destin": 1428, "lrelu": [1429, 1900], "hing": [1431, 1433], "sum_i": [1432, 1433, 1460], "nelement": [1432, 1460], "jointli": 1434, "concat": [1434, 1867, 1909], "head_1": 1434, "head_h": 1434, "head_i": 1434, "qw_i": 1434, "kw_i": 1434, "vw_i": 1434, "scaled_dot_product_attent": [1434, 1867, 1909], "inference_mod": [1434, 1475], "nestedtensor": [1434, 1475, 1884], "multihead_attn": 1434, "e_q": 1434, "e_k": 1434, "e_v": 1434, "_head": [1434, 1471], "merge_mask": 1434, "mask_typ": 1434, "merged_mask": 1434, "nll": 1435, "crossentropyloss": [1435, 1510], "num_paramet": 1436, "nchannel": 1436, "decai": [1436, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1686, 1690, 1692, 1693, 1696, 1697, 1699, 1771, 1910], "legitim": [1436, 1527, 1895], "vert_p": 1437, "fromkei": 1438, "popitem": [1438, 1909], "setdefault": [1438, 1909], "upscale_factor": [1440, 1568, 1867], "upscal": 1440, "shi": [1440, 1441], "2016": [1440, 1441, 1477], "_factor": [1440, 1441, 1480, 1481, 1482], "pixel_shuffl": [1440, 1867, 1909, 1916], "downscale_factor": [1441, 1569, 1867], "pixelshuffl": [1441, 1568, 1569, 1916], "downscal": 1441, "pixel_unshuffl": [1441, 1867, 1909, 1916], "log_input": [1442, 1570, 1867], "poisson": [1442, 1570, 1771, 1864, 1867, 1909], "stirl": [1442, 1570], "hh": [1443, 1445], "flatten_paramet": 1444, "3333333333333333": [1446, 1686, 1692, 1867], "leaki": [1446, 1575, 1887], "rectifi": [1446, 1447, 1572, 1887], "liner": 1446, "empir": 1446, "1505": 1446, "00853": 1446, "crelu": 1447, "1603": 1447, "05201": 1447, "480": 1454, "6732632423543772848170429916717": [1455, 1578], "0507009873554804934193349852946": [1455, 1578], "kaiming_norm": 1455, "kaiming_normal_": [1455, 1864, 1871, 1887], "initialis": 1455, "calculate_gain": [1455, 1864, 1871, 1887], "modulelist": [1456, 1900], "cascad": 1456, "relu2": [1456, 1599], "swish": [1457, 1580], "coin": [1457, 1580], "explod": 1459, "cnn": [1459, 1914], "ross": 1459, "girshick": 1459, "quadrat": [1459, 1896], "huberloss": [1459, 1536], "w_j": 1462, "soft": [1465, 1529, 1586], "softshrinkag": 1465, "convert_sync_batchnorm": 1467, "r1": 1467, "sync_bn_network": 1467, "ddp_sync_bn_network": 1467, "sync_bn_modul": 1467, "d_model": [1471, 1472, 1473, 1474, 1475], "nhead": [1471, 1472, 1473, 1474, 1475], "num_encoder_lay": 1471, "num_decoder_lay": 1471, "dim_feedforward": [1471, 1473, 1475], "custom_encod": 1471, "custom_decod": 1471, "layer_norm_ep": [1471, 1473, 1475], "norm_first": [1471, 1473, 1475], "ashish": [1471, 1473, 1475], "vaswani": [1471, 1473, 1475], "noam": [1471, 1473, 1475], "shazeer": [1471, 1473, 1475], "niki": [1471, 1473, 1475], "parmar": [1471, 1473, 1475], "jakob": [1471, 1473, 1475], "uszkoreit": [1471, 1473, 1475], "llion": [1471, 1473, 1475], "jone": [1471, 1473, 1475], "aidan": [1471, 1473, 1475], "gomez": [1471, 1473, 1475], "lukasz": [1471, 1473, 1475], "illia": [1471, 1473, 1475], "polosukhin": [1471, 1473, 1475], "6010": [1471, 1473, 1475], "feedforward": [1471, 1473, 1475, 1887], "transformer_model": 1471, "word_language_model": 1471, "src_mask": [1471, 1475], "tgt_mask": [1471, 1472, 1473], "memory_mask": [1471, 1472, 1473], "src_key_padding_mask": [1471, 1474, 1475], "tgt_key_padding_mask": [1471, 1472, 1473], "memory_key_padding_mask": [1471, 1472, 1473], "_mask": [1471, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638], "_key_padding_mask": 1471, "generate_square_subsequent_mask": 1471, "sz": 1471, "decoder_lay": [1472, 1473], "transformerdecoderlay": 1472, "transformer_decod": 1472, "tgt_is_caus": [1472, 1473], "memory_is_caus": [1472, 1473], "attn": [1473, 1475], "encoder_lay": [1474, 1475], "enable_nested_tensor": 1474, "mask_check": 1474, "1810": 1474, "04805": 1474, "transformerencoderlay": 1474, "transformer_encod": 1474, "flashattent": [1475, 1577], "triplet": [1476, 1477], "x3": 1476, "balnta": [1476, 1477], "riba": [1476, 1477], "a_i": [1476, 1477, 1773], "p_i": [1476, 1477], "rm": [1476, 1477], "bf": [1476, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "rvert_p": [1476, 1563], "tripletmarginwithdistanceloss": [1476, 1594], "triplet_loss": [1476, 1477], "distance_funct": [1477, 1594], "l_i": 1477, "tripletmarginloss": [1477, 1593], "l_p": [1477, 1563], "pairwisedist": [1477, 1566], "penal": [1477, 1900], "distant": 1477, "anchor_id": 1477, "positive_id": 1477, "negative_id": 1477, "l_infin": 1477, "bmva": 1477, "bmvc": 1477, "paper119": 1477, "unflattened_s": 1478, "namedtensor": 1478, "namedshap": 1478, "u_1": 1478, "u_n": 1478, "u_i": 1478, "im2col": [1479, 1867, 1909], "fold": [1479, 1815, 1867, 1877, 1907, 1917, 1923], "2x3": 1479, "3x4": 1479, "inp_unf": 1479, "out_unf": 1479, "recompute_scale_factor": [1480, 1538], "bicub": [1480, 1527, 1538, 1596, 1849], "trilinear": [1480, 1527, 1538, 1596, 1849], "input_3x3": 1480, "4375": 1480, "8125": 1480, "9375": 1480, "2400": [1480, 1830], "1200": [1480, 1742, 1892], "8800": 1480, "4400": [1480, 1830], "7200": 1480, "0400": 1480, "2800": [1480, 1765], "3600": 1480, "5200": 1480, "6400": 1480, "1678": 1484, "4418": 1484, "9466": [1484, 1924], "9604": 1484, "4219": 1484, "5241": 1484, "9162": 1484, "5436": [1484, 1830], "6446": 1484, "adaptiveavgpool1d": [1486, 1916], "tripl": [1488, 1491], "adaptivemaxpool1d": 1489, "adaptivemaxpool2d": [1490, 1849], "adaptivemaxpool3d": 1491, "ill": [1492, 1903], "avgpool1d": [1494, 1916], "avgpool3d": [1496, 1849, 1916], "iT": [1496, 1504, 1507], "padt": [1496, 1504, 1507], "score": [1500, 1577, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635, 1864], "out_padw": [1505, 1506, 1507], "out_padh": [1506, 1507], "out_padt": 1507, "cosineembeddingloss": 1508, "ctcloss": [1511, 1849], "charact": [1511, 1762, 1866, 1869, 1883, 1919], "elu": [1517, 1867, 1907, 1909, 1916], "embedding_matrix": [1518, 1519], "8490": 1518, "9625": 1518, "6753": 1518, "7761": 1518, "6108": 1518, "6246": 1518, "9751": 1518, "3618": 1518, "4161": [1518, 1923], "2419": 1518, "7383": 1518, "0237": 1518, "7794": 1518, "0528": 1518, "3385": 1518, "8612": 1518, "1867": 1518, "5384": 1518, "8720": 1518, "6262": 1518, "7471": 1518, "embeddingbag": [1519, 1849, 1914, 1916, 1929], "3397": 1519, "5545": 1519, "5893": 1519, "4386": 1519, "5882": 1519, "featurealphadropout": 1520, "gaussiannllloss": 1524, "border": 1527, "affine_grid": [1527, 1867], "extrema": 1527, "pil": [1527, 1538], "overshoot": [1527, 1538, 1596], "gumbel": [1529, 1864], "y_hard": 1529, "y_soft": 1529, "hardtanh": [1534, 1865, 1867, 1877, 1909, 1916], "hingeembeddingloss": 1535, "use_input_stat": [1537, 1867], "antialia": 1538, "anti": 1538, "pillow": [1538, 1928], "buggi": 1538, "inter_nearest": 1538, "kldivloss": 1539, "batchsiz": [1539, 1796, 1797, 1798, 1800, 1801, 1923], "leaky_relu": [1543, 1865, 1867, 1887, 1909, 1916], "localresponsenorm": 1545, "_stacklevel": [1546, 1583, 1584, 1867], "lppool1d": 1548, "lppool2d": 1549, "marginrankingloss": 1550, "max_unpool1d": [1551, 1867], "multimarginloss": 1559, "multilabelmarginloss": 1560, "multilabelsoftmarginloss": 1561, "n_0": 1563, "n_": 1563, "n_k": 1563, "everywher": [1564, 1810, 1910], "constantpad2d": 1565, "reflectionpad2d": [1565, 1849], "replicationpad2d": [1565, 1849], "t4d": 1565, "p1d": 1565, "p2d": 1565, "p3d": 1565, "pixelunshuffl": [1569, 1916], "poissonnllloss": 1570, "rrelu": [1576, 1867, 1909], "dropout_p": [1577, 1867], "masked_fil": [1577, 1867, 1882, 1884, 1909], "ev": 1577, "legend": 1577, "softmarginloss": 1582, "module_kwarg": 1592, "upsample_trilinear": 1597, "fo": 1597, "spatia": 1598, "mixin": [1599, 1864], "dry": 1599, "lazymlp": 1599, "lazylinear": 1599, "lazy_mlp": 1599, "8832e": 1599, "5636e": 1599, "1598e": 1599, "5637e": 1599, "8788e": 1599, "0042e": 1599, "0019": 1599, "lazymodul": 1599, "full_mlp": 1599, "3837": [1599, 1711], "0907": 1599, "6708": 1599, "5223": 1599, "9028": 1599, "2851": 1599, "6813": 1599, "5766": 1599, "8678": 1599, "1320": 1599, "2938": 1599, "0679": [1599, 1840], "2793": [1599, 1656], "1088": 1599, "1795": 1599, "2301": 1599, "2807": 1599, "2479": 1599, "1091": 1599, "has_uninitialized_param": 1599, "initialize_paramet": 1599, "register_backward_pre_hook": 1605, "check_reduct": 1608, "delay_all_reduce_named_param": 1608, "param_to_hook_all_reduc": 1608, "optimizer_param": 1608, "loss_func": [1608, 1919], "consume_prefix_in_state_dict_if_pres": 1608, "nccl2": 1608, "dictat": [1608, 1869], "megabyt": 1608, "mb": [1608, 1892], "detach_": [1608, 1867, 1882, 1916, 1923], "ddp_logging_data": 1608, "can_set_static_graph": 1608, "model_ddp": 1608, "_get_ddp_logging_data": 1608, "divide_by_initial_world_s": 1608, "syncbatchnorm": 1608, "exhaust": 1608, "deplet": 1608, "pariti": 1608, "discrep": [1608, 1720, 1897], "another_input": 1608, "predivid": 1608, "encode_and_decod": 1608, "encoded_tensor": 1608, "decoded_tensor": 1608, "error_if_nonfinit": 1612, "foreach": [1612, 1613, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683, 1910], "clip_valu": 1613, "orthogonal_map": 1615, "use_trivi": 1615, "qq": 1615, "matrix_exp": [1615, 1867, 1909], "caylei": 1615, "thin": [1615, 1713], "manifold": 1615, "register_parametr": [1615, 1616, 1617, 1618, 1649, 1885], "orth_linear": 1615, "parametrizedlinear": [1615, 1616], "moduledict": [1615, 1616, 1868, 1900], "parametrizationlist": [1615, 1616, 1620], "_orthogon": 1615, "9332e": 1615, "n_power_iter": [1616, 1649], "sn": [1616, 1649], "discrimin": [1616, 1649], "adversari": [1616, 1649], "lipschitz": 1616, "reimplement": [1616, 1649], "_spectralnorm": 1616, "convtranspos": [1616, 1649], "snm": 1616, "0081": 1616, "amaxbackward0": 1616, "original0": [1617, 1620], "original1": [1617, 1620], "tensor_nam": [1617, 1619, 1620, 1621], "right_invers": [1617, 1620], "out_rnn": 1618, "rnn_cell": 1618, "simplic": [1620, 1920], "inbuilt": 1620, "unparametr": 1620, "rankon": 1620, "surject": 1620, "s0_sqrt": 1620, "linear_rank_on": 1620, "matrix_rank": 1620, "leave_parametr": 1621, "unparametris": 1621, "prune": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1923], "skeleton": 1622, "compute_mask": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "importance_scor": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1634, 1635], "apply_mask": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "pruned_tensor": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "default_mask": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629], "_orig": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1638], "undon": [1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1638], "unprun": [1625, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637], "indexerror": [1626, 1628], "basepruningmethod": [1627, 1633], "add_pruning_method": 1627, "pruning_typ": [1627, 1631], "unstructur": [1627, 1631], "ravel": [1627, 1867, 1909], "nonmask": 1627, "bias_mask": [1630, 1632], "pruning_method": 1631, "typeerror": [1631, 1894, 1912, 1930, 1934], "parameters_to_prun": 1631, "l1unstructur": 1631, "parameters_to_vector": 1631, "forward_pre_hook": [1633, 1900], "random_unstructur": [1633, 1638], "odict_kei": 1634, "weight_orig": 1634, "weight_mask": [1634, 1637], "columns_prun": 1636, "t_modul": [1639, 1640, 1649, 1652], "weight_norm": 1640, "sorted_indic": [1641, 1643, 1644, 1646], "unsorted_indic": [1641, 1643, 1644, 1646], "abc": [1641, 1869], "axbc": 1641, "throughout": [1641, 1897, 1900, 1914], "conform": [1641, 1900], "is_cuda": [1641, 1882, 1909, 1925], "enforce_sort": [1642, 1643, 1644], "unsort": [1642, 1643, 1749], "shortest": 1642, "uncondition": [1642, 1863, 1894, 1934], "pad_sequ": [1643, 1647, 1867, 1909], "padding_valu": [1644, 1645, 1867], "total_length": [1644, 1896], "seq_unpack": 1644, "lens_unpack": 1644, "packed_sequ": 1646, "unpacked_sequ": 1646, "padded_sequ": 1647, "unpad": 1647, "unstack": 1647, "as_tensor": [1647, 1828, 1867, 1884, 1894, 1909, 1928, 1929, 1930], "unpadded_sequ": 1647, "module_cl": [1648, 1919], "5846e": 1648, "29": [1648, 1778, 1907], "8307e": 1648, "5250e": 1648, "1210e": 1648, "4677e": 1648, "5915e": 1648, "4013e": 1648, "weight_u": 1649, "parameters_and_buff": 1650, "decoupl": [1652, 1671], "weight_g": [1652, 1867], "weight_v": 1652, "1602": 1652, "07868": 1652, "as_tupl": [1654, 1859], "complexfloat": [1655, 1664], "0425": 1656, "7969": 1656, "2925": 1656, "7229": 1656, "2134": 1656, "0505": 1656, "1408": 1656, "0563": 1656, "0566": 1656, "0732": [1656, 1830], "0687": 1656, "1177": 1656, "2303": 1656, "1552": 1656, "6148": 1656, "6535": 1656, "8318": 1656, "3987": 1656, "9544": [1656, 1721], "6048": 1656, "7909": 1656, "120": [1658, 1928], "op_level_debug": 1661, "model_proto": [1662, 1663], "input_adapt": 1662, "output_adapt": 1662, "diagnostic_context": 1662, "adapt_torch_inputs_to_onnx": 1662, "model_arg": [1662, 1907], "model_kwarg": [1662, 1907], "xdoctest": 1662, "torch_doctest_onnx": 1662, "func_with_nested_input_structur": 1662, "x_dict": 1662, "y_tupl": 1662, "y3": 1662, "export_output": [1662, 1663], "adapt_torch_outputs_to_onnx": 1662, "model_output": 1662, "func_returning_tupl": 1662, "pt_output": 1662, "diagnosticcontext": 1662, "modelproto": [1662, 1663], "protobuf": [1662, 1663, 1907], "exportoutput": [1663, 1907], "bufferediobas": 1663, "protobufexportoutputseri": 1663, "serializetostr": 1663, "exported_model": 1663, "from_valu": 1664, "onnx_typ": 1664, "tensorprotodatatyp": 1664, "torch_c_value_with_type_float": 1664, "from_dtyp": 1664, "jit_type_bas": 1664, "safer": [1664, 1876], "onnxexportererror": [1664, 1907], "symbolicvalueerror": 1664, "onnx_compat": 1664, "scalar_nam": 1664, "complexhalf": 1664, "complexdoubl": 1664, "torch_nam": 1664, "int8_t": 1664, "int64_t": 1664, "int16_t": 1664, "verif": [1665, 1666, 1907], "input_arg": [1665, 1907], "params_dict": 1665, "export_opt": [1665, 1907], "_excluded_node_kind": 1665, "frozenset": [1665, 1869], "scalarimplicit": [1665, 1909], "prim": [1665, 1866, 1907, 1909], "listconstruct": [1665, 1866], "all_mismatch_leaf_graph_info": 1665, "essential_node_count": 1665, "essential_node_kind": 1665, "export_repro": 1665, "repro_dir": 1665, "test_": 1665, "test_data_set_0": 1665, "input_0": [1665, 1907], "pb": [1665, 1907], "input_1": [1665, 1907], "output_0": 1665, "output_1": 1665, "find_mismatch": [1665, 1907], "verificationopt": [1665, 1907], "find_partit": 1665, "has_mismatch": 1665, "pretty_print_mismatch": 1665, "pretty_print_tre": 1665, "graph_info": [1665, 1907], "__2": [1665, 1907], "__1": [1665, 1907], "__3": [1665, 1907], "110": [1665, 1907], "verify_export": 1665, "onnx_graph": 1665, "onnx_out": 1665, "pt_out": 1665, "ignore_non": 1666, "check_shap": 1666, "check_dtyp": [1666, 1930], "onnxbackend": 1666, "onnx_runtime_cpu": 1666, "remained_onnx_input_idx": 1666, "acceptable_error_percentag": 1666, "percentag": [1666, 1695, 1771], "weight_decai": [1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1683, 1900], "1e6": 1667, "impair": [1667, 1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "register_step_post_hook": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "removeablehandl": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "register_step_pre_hook": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "new_arg": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "new_kwarg": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1680, 1681, 1682, 1683, 1684], "altogeth": [1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1679, 1680, 1681, 1682, 1683, 1684], "rho": 1668, "110mm": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "4pt": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "textbf": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "theta_0": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "v_0": [1668, 1670, 1671, 1674, 1680, 1681], "leftarrow": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "u_0": [1668, 1672], "hspace": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "5mm": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "nabla_": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "theta_": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "10mm": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "v_t": [1668, 1670, 1671, 1674, 1680, 1681], "v_": [1668, 1670, 1671, 1674, 1680, 1681, 1683], "2_t": [1668, 1669, 1670, 1671, 1674, 1680, 1681], "21mm": 1668, "u_t": [1668, 1672], "theta_t": [1668, 1669, 1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "lr_decai": 1669, "initial_accumulator_valu": 1669, "12mm": [1669, 1680], "_sum_0": 1669, "tild": [1669, 1681], "_sum_t": 1669, "_sum_": 1669, "subgradi": 1669, "999": [1670, 1671, 1672, 1674, 1680, 1684, 1905, 1910], "amsgrad": [1670, 1671], "beta_1": [1670, 1671, 1672, 1674, 1680], "beta_2": [1670, 1671, 1672, 1674, 1680], "13mm": [1670, 1671, 1672, 1674, 1680, 1681, 1682, 1683], "textit": [1670, 1671, 1683], "m_0": [1670, 1671, 1672, 1674, 1680], "widehat": [1670, 1671, 1674, 1680], "m_t": [1670, 1671, 1672, 1674, 1680], "m_": [1670, 1671, 1672, 1674, 1680], "ungraph": [1670, 1671], "002": [1672, 1674], "t_1": 1672, "2e": [1672, 1674], "max_it": 1673, "max_ev": 1673, "tolerance_grad": 1673, "tolerance_chang": 1673, "history_s": 1673, "line_search_fn": 1673, "bfg": 1673, "minfunc": 1673, "intens": [1673, 1903], "param_byt": 1673, "strong_wolf": 1673, "reevalu": [1673, 1678, 1684, 1910], "momentum_decai": 1674, "004": 1674, "gamma_t": 1674, "psi": [1674, 1924], "mu_t": 1674, "96": 1674, "mu_": 1674, "11mm": 1674, "incorpor": [1674, 1914], "nesterov": [1674, 1683], "4e": 1674, "weightdecai": 1680, "18mm": 1680, "rho_": 1680, "6mm": 1680, "rho_t": 1680, "t_2": 1680, "l_t": 1680, "adamw": [1680, 1910], "_0": [1681, 1895, 1911], "av": 1681, "8mm": 1681, "3mm": 1681, "lectur": 1681, "hinton": 1681, "step_siz": [1682, 1699], "resili": [1682, 1903], "eta_": [1682, 1687, 1688], "etaplu": 1682, "etaminu": 1682, "gamma_": [1682, 1924], "0_": 1682, "eta_0": 1682, "i_": [1682, 1830], "15mm": [1682, 1683], "eta_t": [1682, 1687, 1688], "dampen": 1683, "sutskev": 1683, "veloc": 1683, "conflat": 1684, "is_spars": [1684, 1882, 1909, 1923, 1925], "maskedtensor": [1684, 1923], "rig": 1684, "insist": 1684, "lr_schedul": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1910], "chainabl": [1685, 1695], "081": 1685, "729": [1685, 1698], "6561": [1685, 1854], "59049": 1685, "scheduler1": [1685, 1698, 1910], "constantlr": [1685, 1698], "total_it": [1685, 1686, 1692, 1696, 1698], "scheduler2": [1685, 1698, 1910], "exponentiallr": [1685, 1698, 1910], "get_last_lr": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "print_lr": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "is_verbos": [1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "__dict__": [1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "last_epoch": [1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1698, 1699], "mileston": [1686, 1692, 1693, 1698, 1910], "simultan": [1686, 1687, 1692, 1693, 1699, 1889, 1919], "025": [1686, 1692], "t_max": [1687, 1910], "eta_min": [1687, 1688], "anneal": [1687, 1688, 1695, 1910], "cur": [1687, 1688], "sgdr": [1687, 1688], "2k": 1687, "sole": 1687, "t_mult": 1688, "interleav": 1688, "base_lr": [1689, 1695], "max_lr": [1689, 1695], "step_size_up": 1689, "step_size_down": 1689, "scale_fn": 1689, "scale_mod": 1689, "cycle_momentum": [1689, 1695], "base_momentum": [1689, 1695], "max_momentum": [1689, 1695], "cyclic": 1689, "amplitud": [1689, 1695], "triangular2": 1689, "exp_rang": 1689, "bckenstler": 1689, "train_batch": [1689, 1695], "get_lr": 1689, "lr_lambda": [1691, 1694], "lambda1": 1691, "lambda2": 1691, "start_factor": 1692, "end_factor": 1692, "03125": 1692, "0375": 1692, "04375": 1692, "005": [1693, 1699], "lmbda": 1694, "total_step": 1695, "steps_per_epoch": 1695, "pct_start": 1695, "anneal_strategi": [1695, 1910], "div_factor": 1695, "final_div_factor": 1695, "three_phas": 1695, "1cycl": 1695, "fastai": 1695, "unpublish": 1695, "initial_lr": 1695, "min_lr": [1695, 1697], "1e4": 1695, "annihil": 1695, "00075": 1696, "00050": 1696, "00025": 1696, "patienc": 1697, "threshold_mod": 1697, "cooldown": 1697, "stagnat": 1697, "new_lr": 1697, "hasn": [1697, 1879, 1911], "optimum": 1697, "dynamic_threshold": 1697, "val_loss": 1697, "81": 1698, "mn": 1701, "pca": [1703, 1923], "overestim": [1703, 1815], "nathan": [1703, 1815], "halko": [1703, 1815], "gunnar": [1703, 1815], "martinsson": [1703, 1815], "tropp": [1703, 1815], "probabilist": [1703, 1815], "0909": [1703, 1815], "4061": [1703, 1815], "na": [1703, 1815], "cmath": [1707, 1867], "4142j": 1707, "4331": 1710, "2475": [1710, 1813], "6834": 1710, "2791": 1710, "1875": 1710, "5561": 1710, "4670": 1710, "5428": 1711, "5854": 1711, "5261": [1711, 1814], "1857": 1711, "2498": 1711, "1646": [1711, 1892], "0705": 1711, "0629": 1711, "2962": 1711, "0821": [1711, 1771], "1831": 1711, "type1": [1712, 1867], "type2": [1712, 1867], "2117": 1714, "9765": 1714, "1707": 1714, "4884": 1714, "5661": 1714, "5795": 1714, "5280": 1714, "9206": 1714, "quantization_schem": [1715, 1716, 1717, 1718, 1719], "int_repr": [1715, 1716, 1867, 1909], "nchw": [1717, 1928], "qx": [1717, 1718, 1719], "00001": 1717, "max_pool1d": [1718, 1867, 1909, 1916], "max_pool2d": [1719, 1867, 1909, 1916], "quasirandom": 1720, "scrambl": 1720, "sobol": 1720, "quasi": 1720, "21201": 1720, "web": 1720, "unsw": 1720, "au": [1720, 1911], "fkuo": 1720, "art": 1720, "owen": 1720, "niederreit": 1720, "xing": 1720, "466": 1720, "489": 1720, "decemb": 1720, "1998": 1720, "zh": 1720, "vychisl": 1720, "phy": 1720, "784": 1720, "802": 1720, "1967": 1720, "soboleng": 1720, "draw_base2": 1720, "base2": 1720, "fast_forward": 1720, "142": 1721, "283": 1721, "570": 1721, "359": 1721, "9894": 1721, "2503": 1722, "3525": 1722, "5673": 1722, "8237": 1722, "5781": 1722, "6879": 1722, "3816": 1722, "7249": 1722, "0998": 1722, "1436": 1726, "9966": 1726, "3426": 1726, "6366": 1726, "5954": 1726, "8929": 1726, "0923": 1726, "1719": 1726, "4709": 1726, "1996": 1726, "4595": 1732, "4314": 1732, "flat": [1735, 1778, 1867, 1884, 1907], "n2": 1735, "n3": 1735, "negat": [1738, 1822, 1869], "is_neg": [1738, 1867, 1909], "equidist": 1742, "inexact": 1742, "1234567": 1742, "1230": 1742, "vstack": [1743, 1867, 1909, 1923], "0370": 1744, "2970": 1744, "5420": 1744, "9105": 1744, "8351": 1744, "pickle_protocol": [1745, 1911], "default_protocol": 1745, "_use_new_zipfile_seri": 1745, "zipfil": [1745, 1911], "sorted_sequ": [1749, 1867], "sorter": [1749, 1867], "sorted_sequence_1d": 1749, "select_copi": [1751, 1867, 1909], "slight": [1753, 1923, 1926], "92701": [1753, 1926], "complaint": 1754, "bfloat16_3x": 1757, "denorm": [1758, 1903], "sse3": 1758, "323": 1758, "88131e": 1758, "324": 1758, "is_train": [1759, 1931], "interop": 1760, "intraop": 1761, "edgeitem": 1762, "linewidth": 1762, "sci_mod": 1762, "shamelessli": 1762, "repr": [1762, 1869], "sane": 1762, "_tensor_str": 1762, "_formatt": 1762, "12345": 1762, "1235": 1762, "excess": 1764, "24j": 1765, "8000j": 1765, "9600j": 1765, "4472": [1765, 1900], "8944j": 1765, "expit": [1766, 1924], "sym": [1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778], "2222": [1768, 1828], "4444": 1768, "8889": 1768, "4901e": 1769, "4000e": 1769, "0077e": 1769, "4923e": 1769, "waveform": [1770, 1771, 1772], "1564": 1770, "4540": 1770, "8910": 1770, "9877": 1770, "1423": [1770, 1792], "4154": 1770, "8413": [1770, 1924], "0302": 1771, "2231": 1771, "6065": 1771, "5400e": 1771, "3546e": 1771, "4788e": 1771, "8316e": 1771, "02": [1771, 1772, 1777], "3534e": 1771, "0065e": [1772, 1777], "1875e": [1772, 1777], "3937e": [1772, 1777], "2465e": [1772, 1777], "8250e": [1772, 1777], "9858e": [1772, 1777], "1365e": [1772, 1777], "8659e": [1772, 1777], "4658e": [1772, 1777], "3941e": [1772, 1777], "5400": 1773, "3376": 1773, "4200": 1773, "9136": 1773, "wit": [1773, 1866], "0955": [1773, 1774, 1776], "3455": [1773, 1774, 1776], "6545": [1773, 1774, 1776], "9045": [1773, 1774, 1776], "0800": [1774, 1775], "1876": [1774, 1775], "4601": [1774, 1775], "7700": [1774, 1775], "9723": [1774, 1775], "1679": 1775, "3979": 1775, "6821": 1775, "9121": 1775, "1170": 1776, "9698": 1776, "36358": 1778, "z_n": [1778, 1889], "48917": 1778, "2z_n": 1778, "13659": 1778, "3z_n": 1778, "01064": 1778, "4z_n": 1778, "\u03c0": 1778, "sidelob": 1778, "transact": 1778, "acoust": 1778, "speech": 1778, "84": 1778, "91": 1778, "feb": 1778, "1981": 1778, "tassp": 1778, "1163506": 1778, "heinzel": 1778, "spectrum": [1778, 1903], "dft": 1778, "comprehens": [1778, 1869, 1870, 1883, 1892, 1898, 1914], "februari": 1778, "holomet": 1778, "fnal": 1778, "gov": 1778, "gh_fft": 1778, "nutal": 1778, "general_ham": 1778, "6280e": 1778, "2698e": 1778, "1052e": 1778, "9826e": 1778, "5461": [1780, 1900], "1347": 1780, "7266": 1780, "2746": 1780, "5194": 1780, "1343": 1780, "4032": 1780, "2711": 1780, "5380": 1782, "8632": 1782, "1265": 1782, "9399": 1782, "5644": 1782, "9744": 1782, "1268": 1782, "2162": 1787, "6719": 1787, "3332": 1787, "5793": [1787, 1900], "0061": 1787, "6058": 1787, "9497": 1787, "5071": 1787, "3343": 1787, "9553": 1787, "0960": 1787, "derivati": [1788, 1791], "sparsr": 1789, "run_my_model": 1789, "prev_checks_en": 1789, "check_invari": [1789, 1796, 1797, 1798, 1799, 1800, 1801, 1923], "sparse_csr_tensor": [1789, 1867, 1909, 1923], "z_": [1791, 1889, 1924], "bigoplus_": 1791, "kj": 1791, "bigoplu": 1791, "sparseaddmmbackward0": 1791, "sparsemmreduceimplbackward0": 1791, "sparsiti": [1792, 1864, 1876, 1887], "spy": 1792, "2847": 1792, "7805": 1792, "1900": [1792, 1904], "to_dens": [1792, 1794, 1867, 1909, 1923], "3903": 1792, "x_k": 1793, "6438": 1795, "6467": 1795, "3411": 1795, "0918": 1795, "5348": 1795, "0634": 1795, "0494": 1795, "0646": 1795, "1844": 1795, "1276": 1795, "1874": 1795, "6334": 1795, "9682": 1795, "5340": 1795, "7483": 1795, "4512": 1795, "4073": 1795, "8901": 1795, "3183": 1795, "7539": 1795, "6596": 1795, "ncolblock": [1796, 1923], "array_list": [1796, 1797, 1798, 1800, 1801], "nrow": [1796, 1797, 1798, 1800, 1801, 1923], "ncol": [1796, 1797, 1798, 1800, 1801, 1923], "denses": [1796, 1797, 1798, 1800, 1801, 1923], "check_sparse_tensor_invari": [1796, 1797, 1798, 1799, 1800, 1801, 1923], "nrowblock": [1797, 1923], "compressed_indic": [1798, 1867, 1923], "plain_indic": [1798, 1867, 1923], "compressed_dim_s": [1798, 1923], "rdinat": 1799, "_indic": [1799, 1909, 1923], "0755": [1803, 1804], "0226": [1803, 1804], "0831": [1803, 1804], "4806": [1803, 1804], "0112": 1803, "2883": 1803, "6933": 1803, "0457": 1804, "0069": 1804, "2310": 1804, "2959": [1808, 1809, 1851, 1852], "8101": [1808, 1809, 1851, 1852], "5027": [1808, 1809, 1851, 1852], "3270": [1808, 1809, 1851, 1852], "5905": [1808, 1809, 1851, 1852], "6538": [1808, 1809, 1851, 1852, 1900], "3330": [1808, 1809, 1851, 1852], "5596": [1808, 1809, 1851, 1852], "6548": [1808, 1809, 1851, 1852], "1264": [1808, 1809, 1851, 1852], "5080": [1808, 1809, 1814, 1851, 1852, 1900], "6420": [1808, 1809, 1851, 1852], "1992": [1808, 1809, 1851, 1852], "0311": [1808, 1924], "7477": 1808, "2204": 1808, "9087": 1808, "2620": 1809, "0028": [1809, 1834], "0957": 1809, "6038": 1809, "0645": [1809, 1852], "4485": [1809, 1852], "8707": [1809, 1852], "0665": [1809, 1852], "librosa": 1810, "omega": 1810, "win": [1810, 1889], "_fft": [1810, 1867], "dimnsion": 1810, "1133": 1813, "2958": 1813, "5475": 1813, "0569": 1813, "0737": 1813, "3429": 1813, "9138": 1813, "9337": 1813, "6864": [1813, 1838], "1132": 1813, "7892": 1813, "1003": 1813, "5688": 1813, "3637": 1813, "9906": 1813, "5197": 1813, "4598": 1813, "3708": 1813, "6217": 1813, "435": 1813, "1335": 1813, "3135": 1813, "gesdd": 1814, "conquer": 1814, "gesvdjbatch": 1814, "fortran": 1814, "\u00b9": 1814, "2364": 1814, "7752": 1814, "7201": 1814, "7394": 1814, "0504": 1814, "3371": 1814, "5296": 1814, "3550": 1814, "5569": 1814, "2445": 1814, "1414": 1814, "4027": 1814, "0287": 1814, "5434": 1814, "1946": 1814, "8833": 1814, "3679": 1814, "4296": 1814, "2890": 1814, "6604": 1814, "2717": 1814, "2618": 1814, "4234": 1814, "2481": 1814, "4733": 1814, "3289": [1814, 1905], "0315": 1814, "7806": 1814, "0199": 1814, "8766": 1814, "4809": 1814, "4054": 1814, "7600": 1814, "8611": 1814, "2594": 1814, "4373": 1814, "6531e": 1814, "a_big": 1814, "6503e": 1814, "swapax": [1817, 1867, 1909, 1927], "1995": 1823, "4608": 1823, "7702": 1823, "4875": 1823, "9158": 1823, "5872": 1823, "6929": 1823, "6932": 1823, "take_along_axi": [1825, 1895], "max_idx": 1825, "sorted_idx": 1825, "2027": 1826, "7687": 1826, "4412": 1826, "3856": 1826, "5930": 1826, "9859": 1826, "4722": 1826, "3366": 1826, "8986": 1827, "7279": 1827, "1745": 1827, "7156": 1827, "8257": 1827, "2553": 1827, "11111": 1828, "222222": 1828, "3333333": 1828, "1111": 1828, "array_split": 1829, "i_d": 1830, "k_": 1830, "4532": 1830, "4874": 1830, "5018": 1830, "4796": [1830, 1904], "5162": 1830, "5306": 1830, "2922": 1830, "7556": 1830, "2741": 1830, "3161": 1830, "0704": 1830, "0187": 1830, "4079": 1830, "3126": 1830, "8744": 1830, "8223": 1830, "9445": 1830, "4117": 1830, "7780": 1830, "7193": 1830, "4867": 1830, "3204": 1830, "5513": 1830, "4737": [1830, 1855], "2850": 1830, "2573": 1830, "5997": 1830, "sparsebsr": 1834, "sparsecsc": 1834, "sparsebsc": 1834, "9893": 1834, "5809": 1834, "1669": 1834, "7299": 1834, "4942": [1834, 1900], "y_0": 1835, "y_1": 1835, "x_diff": 1835, "y_diff": 1835, "riemann": [1835, 1889, 1897, 1924], "badli": 1837, "cloned_coeffici": 1837, "1527": 1837, "0753": 1837, "7986": 1837, "0210": 1837, "3513": 1837, "5492": 1837, "7403": 1837, "0243": 1837, "7841": 1837, "9046": 1837, "5405": 1837, "9320": 1837, "9270": 1837, "2826": 1837, "lbrace": [1838, 1839, 1840, 1841], "rbrace": [1838, 1839, 1840, 1841], "0813": 1838, "8619": 1838, "7105": 1838, "0935": 1838, "1380": 1838, "3409": [1838, 1904], "2219": 1838, "5653": 1838, "2521": 1838, "2345": 1838, "2544": 1838, "3461": 1838, "4785": 1838, "4477": 1838, "6049": 1838, "6368": 1838, "8775": 1838, "7145": 1838, "1502": 1838, "2716": 1838, "1243": 1838, "5413": 1838, "3615": 1838, "0614": 1838, "7344": 1838, "3164": 1838, "7648": 1838, "4024": 1838, "0978": 1838, "col": [1839, 1841, 1867], "2309": 1840, "5207": 1840, "0049": 1840, "2072": 1840, "0680": 1840, "6602": 1840, "3480": 1840, "5211": 1840, "4573": 1840, "5876": 1840, "0794": [1840, 1924], "8373": 1840, "6654": 1840, "2604": 1840, "5235": 1840, "2447": 1840, "9556": 1840, "2919": 1840, "1768": 1840, "4333": 1840, "3146": [1840, 1900], "6576": 1840, "0432": 1840, "9348": [1840, 1924], "4410": 1840, "9888": 1840, "3337": 1840, "6556": 1840, "4798": 1840, "5466": 1843, "8008": 1843, "9079": 1843, "unique_consecut": [1846, 1867, 1909], "inverse_indic": [1846, 1847], "warn_onli": 1849, "alon": [1849, 1868, 1911], "put_": [1849, 1867], "index_add": [1849, 1867, 1909], "index_select": [1849, 1865, 1867, 1909, 1923], "fractionalmaxpool2d": 1849, "fractionalmaxpool3d": 1849, "reflectionpad1d": 1849, "reflectionpad3d": 1849, "replicationpad1d": 1849, "replicationpad3d": 1849, "histc": [1849, 1867, 1909], "bincount": [1849, 1867, 1909], "kthvalu": [1849, 1867, 1882, 1909], "cublasapi_reproduc": [1849, 1904], "avg_pool3d_backward_cuda": 1849, "alexandr": 1850, "theophil": 1850, "0631": 1851, "5590": 1851, "4893": 1851, "8258": 1851, "5926": 1852, "0056": 1852, "3646": 1852, "vecdot": 1853, "mi": [1854, 1855], "6116": 1854, "5772": [1854, 1924], "4606": 1854, "9120": 1854, "0786": 1854, "7497": 1854, "6623": 1854, "5772j": 1854, "9120j": 1854, "7497j": 1854, "6623j": 1854, "3839j": 1855, "2098": 1855, "6699j": 1855, "3470": 1855, "9451j": 1855, "5174": 1855, "3136j": 1855, "6699": 1855, "9451": 1855, "3136": 1855, "atleast_2d": [1858, 1867, 1909], "3139": 1859, "3898": 1859, "1657": 1859, "0383": 1859, "8785": 1859, "1089": 1859, "hubconf": 1863, "entrypoint_nam": 1863, "_resnet18": 1863, "underscor": [1863, 1883, 1919, 1929], "load_state_dict_from_url": [1863, 1878], "2gb": 1863, "relative_path_to_checkpoint": 1863, "pth": [1863, 1878, 1905], "dirnam": 1863, "5c106cde": [1863, 1878], "force_reload": 1863, "skip_valid": 1863, "trust_repo": 1863, "repo_own": 1863, "repo_nam": 1863, "torchhub": 1863, "owner": [1863, 1894, 1909, 1919, 1920], "github_token": 1863, "repo_or_dir": 1863, "mute": 1863, "resnet50_weight": 1863, "imagenet1k_v1": 1863, "download_url_to_fil": 1863, "hash_prefix": 1863, "temporary_fil": 1863, "sha256": [1863, 1878], "s3": [1863, 1878, 1906], "amazonaw": [1863, 1878, 1906], "model_dir": [1863, 1878], "check_hash": [1863, 1878], "hub_dir": [1863, 1878], "get_dir": [1863, 1878], "ext": [1863, 1878], "eight": [1863, 1878], "hash": [1863, 1867, 1869, 1878, 1909], "succinct": 1863, "set_dir": 1863, "path_to_hub_dir": 1863, "torch_hom": 1863, "xdg_cache_hom": [1863, 1892], "reiniti": 1863, "path_importer_cach": 1863, "subpackag": [1863, 1911], "classifi": [1864, 1869, 1907, 1910, 1914, 1928], "pypi": 1864, "conda": [1864, 1906], "hip": 1864, "disallow_in_graph": 1864, "breakdown": 1864, "_log": [1864, 1869], "javadoc": 1864, "uninitializedbuff": 1864, "anomali": 1864, "can_device_access_p": 1864, "current_blas_handl": 1864, "device_of": 1864, "get_arch_list": 1864, "get_device_cap": 1864, "get_device_nam": 1864, "get_device_properti": 1864, "get_gencode_flag": 1864, "get_sync_debug_mod": 1864, "ipc_collect": 1864, "memory_usag": 1864, "set_stream": 1864, "set_sync_debug_mod": 1864, "power_draw": 1864, "clock_rat": 1864, "outofmemoryerror": 1864, "jiter": 1864, "sanit": 1864, "get_rng_stat": [1864, 1918], "set_rng_stat": [1864, 1918], "empty_cach": [1864, 1892, 1898], "set_per_process_memory_fract": 1864, "current_allocated_memori": 1864, "driver_allocated_memori": 1864, "pathwis": 1864, "exponentialfamili": 1864, "binomi": [1864, 1867, 1909], "chi2": 1864, "continuousbernoulli": 1864, "dirichlet": 1864, "fishersnedecor": 1864, "halfcauchi": 1864, "halfnorm": 1864, "kumaraswami": 1864, "lkjcholeski": 1864, "laplac": 1864, "lognorm": 1864, "lowrankmultivariatenorm": 1864, "mixturesamefamili": 1864, "multinomi": [1864, 1867, 1909], "multivariatenorm": 1864, "negativebinomi": 1864, "onehotcategor": 1864, "relaxedbernoulli": 1864, "logitrelaxedbernoulli": 1864, "relaxedonehotcategor": 1864, "studentt": 1864, "transformeddistribut": 1864, "vonmis": 1864, "weibul": 1864, "wishart": 1864, "solver": [1864, 1903], "misc": 1864, "normal_": [1864, 1867, 1882, 1887, 1892, 1931], "constant_": [1864, 1887], "ones_": [1864, 1887], "zeros_": [1864, 1887], "eye_": [1864, 1871, 1887], "dirac_": [1864, 1871, 1887], "xavier_uniform_": [1864, 1887], "xavier_normal_": [1864, 1887, 1900], "kaiming_uniform_": [1864, 1887], "trunc_normal_": [1864, 1887], "orthogonal_": [1864, 1871, 1887, 1900], "sparse_": [1864, 1887], "alexnet": 1864, "preview": 1864, "swa": 1864, "ema": 1864, "powersgd": 1864, "remotemodul": 1864, "fork_rng": [1864, 1918], "doublestorag": [1864, 1925], "floatstorag": [1864, 1925], "halfstorag": [1864, 1925], "longstorag": [1864, 1925], "intstorag": [1864, 1925], "shortstorag": [1864, 1925], "charstorag": [1864, 1925], "bytestorag": [1864, 1925], "boolstorag": [1864, 1925], "bfloat16storag": [1864, 1925], "complexdoublestorag": [1864, 1925], "complexfloatstorag": [1864, 1925], "quint8storag": [1864, 1925], "qint8storag": [1864, 1925], "qint32storag": [1864, 1925], "quint4x2storag": [1864, 1925], "quint2x4storag": [1864, 1925], "make_tensor": [1864, 1930], "assert_allclos": [1864, 1930], "sampler": 1864, "mobile_optim": 1864, "optimize_for_mobil": [1864, 1877], "model_zoo": 1864, "load_url": [1864, 1878], "tensorboard": [1864, 1879, 1913], "summarywrit": [1864, 1879, 1928], "iinfo": 1864, "unifi": [1864, 1883], "__config__": [1864, 1891], "set_log": [1864, 1875], "torchdata": 1864, "torchserv": 1864, "torchtext": 1864, "_out": [1865, 1887, 1897], "_adaptive_avg_pool2d": [1865, 1909], "_adaptive_avg_pool2d_backward": 1865, "_log_softmax": [1865, 1909], "half_to_float": 1865, "_native_batch_norm_legit": [1865, 1909], "no_stat": 1865, "_softmax": [1865, 1909, 1924], "_to_copi": [1865, 1909], "scalartyp": 1865, "memoryformat": 1865, "start_step": 1865, "avg_pool2d": [1865, 1867, 1909, 1916], "avg_pool2d_backward": 1865, "constant_pad_nd": [1865, 1867, 1909], "convolution_backward": 1865, "bias_siz": 1865, "output_mask": 1865, "embedding_dense_backward": 1865, "num_weight": 1865, "interpolation_mod": [1865, 1867], "isinf": [1865, 1867, 1909, 1923], "max_pool2d_with_indic": [1865, 1867, 1909], "max_pool2d_with_indices_backward": 1865, "max_pool3d_with_indic": [1865, 1867, 1909], "native_batch_norm": [1865, 1867, 1909], "native_dropout": [1865, 1867, 1909], "native_group_norm": [1865, 1867, 1909], "hxw": [1865, 1867], "native_group_norm_backward": 1865, "rstd": 1865, "native_layer_norm": [1865, 1867, 1909], "native_layer_norm_backward": 1865, "tensor_scalar": 1865, "tensor_tensor": 1865, "scalar_tensor": [1865, 1867, 1909], "slice_scatt": [1865, 1867, 1909], "dim_intlist": 1865, "upsample_bilinear2d": [1865, 1867, 1909], "upsample_nearest2d": [1865, 1867, 1909], "convert_element_typ": [1865, 1909], "broadcast_in_dim": [1865, 1909], "bessel_i0": [1865, 1909], "bessel_i1": [1865, 1909], "bessel_j0": [1865, 1909, 1924], "bessel_j1": [1865, 1909, 1924], "cbrt": [1865, 1909], "erf_inv": [1865, 1909], "erfcx": [1865, 1909, 1924], "exp2": [1865, 1867, 1909, 1924, 1928], "isfinit": [1865, 1867, 1903, 1909], "ndtri": [1865, 1909, 1924], "spherical_bessel_j0": [1865, 1909, 1924], "fmax": [1865, 1867, 1909], "fmin": [1865, 1867, 1909], "shift_left": [1865, 1909], "shift_right_arithmet": [1865, 1909], "zeta": [1865, 1892, 1909, 1924], "broadcast_dimens": 1865, "collapse_view": [1865, 1909], "start_indic": 1865, "limit_indic": 1865, "slice_in_dim": [1865, 1909], "start_index": 1865, "limit_index": 1865, "split_dim": [1865, 1909], "outer_length": 1865, "view_of": [1865, 1909], "as_strided_scatt": [1865, 1867, 1909], "collaps": [1865, 1882, 1909], "rev": [1865, 1909], "device_put": [1865, 1909], "maximum_valu": [1865, 1909], "minimum_valu": [1865, 1909], "copy_strid": [1865, 1909], "copy_to": [1865, 1909], "xor_sum": [1865, 1909], "empty_permut": [1865, 1867, 1909], "physical_layout": [1865, 1867], "iota": [1865, 1909], "fft_r2c": [1865, 1909], "fft_c2c": [1865, 1909], "fft_c2r": [1865, 1909], "disadvantag": 1866, "gentl": 1866, "beam": 1866, "traced_bar": 1866, "myscriptmodul": 1866, "103": [1866, 1868], "939": [1866, 1868], "116": [1866, 1868], "779": [1866, 1868], "123": [1866, 1868], "my_script_modul": [1866, 1868], "ins": 1866, "pytorch_jit": 1866, "traced_fn": 1866, "disable_jit_exampl": 1866, "printer": 1866, "rv": 1866, "rv0": 1866, "rv1": 1866, "ssa": 1866, "block0": 1866, "block1": 1866, "loop_in_traced_fn": 1866, "input_tupl": 1866, "fill_row_zero": 1866, "tracerwarn": 1866, "disjoint": 1866, "nr": 1866, "09115803241729736": 1866, "6782537698745728": 1866, "cpu_model": 1866, "gpu_model": 1866, "sample_input_cpu": 1866, "sample_input_gpu": 1866, "traced_cpu": 1866, "traced_gpu": 1866, "use_gpu": 1866, "__constants__": [1866, 1868], "my_module_inst": 1866, "redeclar": 1866, "nn_module_inst": 1866, "my_scripted_model": 1866, "526": [1866, 1868, 1907], "script_method": 1866, "implicitly_compiled_method": 1866, "another_forward": 1866, "unused_method": 1866, "some_fn": 1866, "ever": [1866, 1925], "some_fn2": 1866, "some_fn3": 1866, "some_fn4": 1866, "my_dict": [1866, 1868], "my_int": [1866, 1868], "my_const": 1866, "make_dict": 1866, "nnc": 1866, "__and__": 1867, "__iand__": 1867, "__ilshift__": 1867, "__ior__": 1867, "__irshift__": 1867, "__ixor__": 1867, "__lshift__": 1867, "__or__": 1867, "__rshift__": 1867, "__xor__": 1867, "absolute_": 1867, "acos_": [1867, 1882], "addbmm_": 1867, "addcdiv_": 1867, "addcmul_": 1867, "addmv_": [1867, 1882], "addr_": 1867, "align_a": [1867, 1882, 1883, 1909], "align_to": [1867, 1882, 1883, 1909], "ellipsis_idx": 1867, "aminmax": [1867, 1909], "arccos_": 1867, "arccosh_": 1867, "arcsin_": [1867, 1923], "arcsinh_": 1867, "arctan2_": 1867, "arctan_": 1867, "arctanh_": 1867, "argwher": [1867, 1909], "as_strided_": 1867, "asin_": [1867, 1882, 1923], "asinh_": [1867, 1882], "atan_": [1867, 1882], "atanh_": [1867, 1882], "baddbmm_": 1867, "bernoulli_": [1867, 1882, 1931], "bitwise_and_": 1867, "bitwise_left_shift_": 1867, "bitwise_not_": [1867, 1882], "bitwise_or_": 1867, "bitwise_right_shift_": 1867, "bitwise_xor_": 1867, "broadcast_to": [1867, 1909], "cauchy_": [1867, 1882, 1931], "ceil_": [1867, 1882], "clamp_max": [1867, 1909], "clamp_max_": 1867, "clamp_min": [1867, 1909], "clamp_min_": 1867, "clip_": 1867, "conj_physical_": 1867, "copysign_": 1867, "cos_": [1867, 1882, 1889], "cosh_": [1867, 1882], "count_nonzero": [1867, 1909], "cummax": [1867, 1909], "cummin": [1867, 1909], "cumprod_": 1867, "cumsum_": 1867, "deg2rad": [1867, 1882, 1909, 1923], "deg2rad_": [1867, 1882, 1923], "outdim": 1867, "diagonal_scatt": [1867, 1909], "digamma_": [1867, 1882], "div_": [1867, 1882, 1923], "divide_": 1867, "dsplit": [1867, 1909], "eq_": 1867, "erf_": [1867, 1882], "erfc_": [1867, 1882], "erfinv_": [1867, 1882], "exp2_": 1867, "exp_": [1867, 1882], "expm1_": [1867, 1882], "exponential_": [1867, 1882, 1931], "fill_diagonal_": 1867, "fix_": 1867, "fliplr": [1867, 1909], "flipud": [1867, 1909], "float_power_": 1867, "floor_": [1867, 1882], "floor_divide_": [1867, 1923], "fmod_": 1867, "frac_": [1867, 1882], "frexp": [1867, 1909], "gcd_": 1867, "ge_": 1867, "geometric_": [1867, 1931], "ger": [1867, 1909], "get_devic": [1867, 1882, 1909, 1923, 1925, 1926], "greater_": 1867, "greater_equal_": 1867, "gt_": 1867, "hardshrink": [1867, 1909], "heavisid": [1867, 1909], "heaviside_": 1867, "hsplit": [1867, 1909, 1927], "hypot_": 1867, "i0_": 1867, "igamma_": 1867, "igammac_": 1867, "index_fil": [1867, 1882, 1909], "index_reduc": [1867, 1909], "is_coalesc": [1867, 1909, 1923], "is_complex": [1867, 1909, 1923, 1926], "is_contigu": [1867, 1882, 1909, 1927], "is_floating_point": [1867, 1882, 1909, 1923, 1926], "is_infer": [1867, 1909], "is_same_s": [1867, 1909, 1923], "is_set_to": [1867, 1909], "is_sign": [1867, 1882, 1909, 1923], "isclos": [1867, 1909], "isneginf": [1867, 1909, 1923], "isposinf": [1867, 1909, 1923], "isreal": [1867, 1909], "istft": [1867, 1909], "kron": [1867, 1909], "lcm_": 1867, "ldexp_": 1867, "le_": 1867, "lerp_": 1867, "less_": 1867, "less_equal_": 1867, "lgamma_": 1867, "log10_": [1867, 1882], "log1p_": [1867, 1882, 1923], "log2_": [1867, 1882], "log_normal_": [1867, 1882, 1931], "logaddexp2": [1867, 1909], "logcumsumexp": [1867, 1909], "logical_and_": 1867, "logical_not_": [1867, 1882], "logical_or_": 1867, "logical_xor_": 1867, "logit_": 1867, "lt_": 1867, "masked_scatt": [1867, 1909], "masked_select": [1867, 1882, 1909], "matrix_pow": [1867, 1909], "moveaxi": [1867, 1909], "msort": [1867, 1909], "multiply_": 1867, "mvlgamma_": 1867, "nan_to_num_": 1867, "nanmedian": [1867, 1882, 1909], "nansum": [1867, 1909], "narrow_copi": [1867, 1909, 1923], "ne_": 1867, "neg_": [1867, 1882, 1923], "negative_": [1867, 1923], "new_empty_strid": [1867, 1909], "new_ful": [1867, 1892, 1909], "new_on": [1867, 1909], "nextafter_": 1867, "nonzero_stat": [1867, 1909], "not_equal_": 1867, "output_nr": [1867, 1909], "polygamma_": 1867, "pow_": [1867, 1882], "q_per_channel_scal": [1867, 1909], "q_per_channel_zero_point": [1867, 1909], "q_scale": [1867, 1909], "q_zero_point": [1867, 1909], "rad2deg": [1867, 1882, 1909, 1923], "rad2deg_": [1867, 1882, 1923], "reciprocal_": [1867, 1882], "record_stream": [1867, 1892, 1909], "refine_nam": [1867, 1882, 1883, 1909], "relu_": [1867, 1916], "remainder_": 1867, "rename_": [1867, 1882, 1883], "renorm_": 1867, "reshape_a": [1867, 1884, 1909, 1927], "resize_a": [1867, 1909], "the_templ": 1867, "resize_as_sparse_": 1867, "retains_grad": [1867, 1909], "roll": [1867, 1909], "rot90": [1867, 1909], "round_": [1867, 1882], "rsqrt_": [1867, 1882], "select_scatt": [1867, 1909], "sgn_": [1867, 1882], "sigmoid_": [1867, 1882, 1916], "sign_": [1867, 1882], "sinc_": 1867, "sinh_": [1867, 1882], "smm": [1867, 1909, 1923], "sparse_resize_": 1867, "sparse_resize_and_clear_": 1867, "split_with_s": [1867, 1909, 1927], "sqrt_": [1867, 1882], "square_": 1867, "squeeze_": [1867, 1916], "sspaddmm": [1867, 1909, 1923], "sub_": [1867, 1882, 1923], "subtract_": 1867, "sum_to_s": [1867, 1909], "swapaxes_": 1867, "swapdim": [1867, 1909, 1927], "swapdims_": 1867, "take_along_dim": [1867, 1909], "tan_": [1867, 1882], "tanh_": [1867, 1882, 1916], "tensor_indices_or_sect": 1867, "to_mkldnn": [1867, 1909], "to_padded_tensor": [1867, 1884, 1909], "to_sparse_bsc": [1867, 1909], "to_sparse_bsr": [1867, 1909, 1923], "to_sparse_csc": [1867, 1909, 1923], "true_divide_": 1867, "trunc_": [1867, 1882], "type_a": [1867, 1882, 1909], "out0": [1867, 1905], "unsafe_chunk": [1867, 1909], "unsafe_split": [1867, 1909], "unsafe_split_with_s": [1867, 1909], "unsqueeze_": [1867, 1916], "view_a": [1867, 1909, 1927], "vsplit": [1867, 1909, 1927], "xlogy_": 1867, "adaptive_avg_pool2d": [1867, 1894, 1909, 1916], "adaptive_max_pool1d_with_indic": [1867, 1894], "adaptive_max_pool2d_with_indic": 1867, "adaptive_max_pool3d_with_indic": 1867, "alpha_dropout": [1867, 1909], "assert_int_or_pair": 1867, "arg_nam": 1867, "binary_cross_entropi": [1867, 1909], "binary_cross_entropy_with_logit": [1867, 1909], "celu": [1867, 1909], "dropout2d": 1867, "dropout3d": 1867, "feature_alpha_dropout": [1867, 1909], "fractional_max_pool2d_with_indic": 1867, "fractional_max_pool3d_with_indic": 1867, "gaussian_nll_loss": 1867, "glu": [1867, 1909], "gumbel_softmax": 1867, "hardsigmoid": [1867, 1909, 1916], "hardswish": [1867, 1909, 1916], "huber_loss": [1867, 1909], "instance_norm": [1867, 1909, 1916], "local_response_norm": 1867, "lp_pool1d": 1867, "lp_pool2d": 1867, "max_pool1d_with_indic": [1867, 1909], "mish": [1867, 1909], "multi_head_attention_forward": 1867, "embed_dim_to_check": 1867, "in_proj_weight": 1867, "in_proj_bia": 1867, "bias_k": 1867, "bias_v": 1867, "out_proj_weight": 1867, "out_proj_bia": 1867, "use_separate_proj_weight": 1867, "q_proj_weight": 1867, "k_proj_weight": 1867, "v_proj_weight": 1867, "static_k": 1867, "static_v": 1867, "multilabel_soft_margin_loss": 1867, "relu6": [1867, 1909, 1916], "silu": [1867, 1884, 1909], "softsign": 1867, "tanhshrink": 1867, "adaptive_avg_pool1d": [1867, 1894, 1909, 1916], "adaptive_max_pool1d": [1867, 1894, 1909], "affine_grid_gener": [1867, 1909], "alias_copi": [1867, 1909], "align_tensor": [1867, 1909], "alpha_dropout_": 1867, "as_strided_copi": [1867, 1909], "atleast_1d": [1867, 1909], "avg_pool1d": [1867, 1909, 1916], "bartlett_window": [1867, 1871, 1909], "cudnn_en": 1867, "batch_norm_backward_elemt": 1867, "invstd": 1867, "mean_di": 1867, "mean_dy_xmu": 1867, "batch_norm_backward_reduc": 1867, "input_g": 1867, "bias_g": 1867, "out3": 1867, "batch_norm_elemt": [1867, 1909], "batch_norm_gather_stat": [1867, 1909], "batch_norm_gather_stats_with_count": [1867, 1909], "batch_norm_stat": [1867, 1909], "batch_norm_update_stat": [1867, 1909], "blackman_window": [1867, 1871, 1909], "block_diag": [1867, 1909], "can_cast": [1867, 1909], "ccol_indices_copi": [1867, 1909], "celu_": 1867, "choose_qparams_optim": [1867, 1909], "n_bin": 1867, "bit_width": 1867, "col_indices_copi": [1867, 1909], "column_stack": [1867, 1909], "conv_tbc": [1867, 1909], "crow_indices_copi": [1867, 1909], "cudnn_affine_grid_gener": [1867, 1909], "cudnn_batch_norm": [1867, 1909], "exponential_average_factor": 1867, "cudnn_convolut": [1867, 1909], "cudnn_convolution_add_relu": [1867, 1909], "cudnn_convolution_relu": [1867, 1909], "cudnn_convolution_transpos": [1867, 1909], "cudnn_grid_sampl": [1867, 1909], "cudnn_is_accept": [1867, 1909], "cumulative_trapezoid": [1867, 1909], "diagonal_copi": [1867, 1909], "dropout_": [1867, 1877], "embedding_renorm_": 1867, "empty_quant": [1867, 1909], "anyenumtyp": 1867, "expand_copi": [1867, 1909], "fake_quantize_per_channel_affin": [1867, 1909], "fbgemm_linear_fp16_weight": [1867, 1909], "packed_weight": 1867, "fbgemm_linear_fp16_weight_fp32_activ": [1867, 1909], "fbgemm_linear_int8_weight": [1867, 1909], "col_offset": 1867, "weight_scal": 1867, "weight_zero_point": 1867, "fbgemm_linear_int8_weight_fp32_activ": [1867, 1909], "fbgemm_linear_quantize_weight": [1867, 1909], "fbgemm_pack_gemm_matrix_fp16": [1867, 1909], "fbgemm_pack_quantized_matrix": [1867, 1909], "feature_alpha_dropout_": 1867, "feature_dropout": [1867, 1909], "feature_dropout_": 1867, "frobenius_norm": [1867, 1909], "from_fil": [1867, 1909, 1925], "fused_moving_avg_obs_fake_qu": [1867, 1909], "observer_on": 1867, "fake_quant_on": 1867, "running_min": 1867, "running_max": 1867, "per_row_fake_qu": 1867, "symmetric_qu": 1867, "has_bias": 1867, "gru_cel": [1867, 1909], "w_ih": 1867, "w_hh": 1867, "hamming_window": [1867, 1871, 1909], "histogramdd": [1867, 1909], "hspmm": [1867, 1909, 1923], "indices_copi": [1867, 1909], "is_autocast_cpu_en": [1867, 1909], "is_autocast_en": [1867, 1909], "is_grad_en": [1867, 1909], "is_vulkan_avail": [1867, 1909], "isin": [1867, 1909], "kaiser_window": [1867, 1909], "lstm_cell": [1867, 1909], "meshgrid": [1867, 1909], "miopen_batch_norm": [1867, 1909], "miopen_convolut": [1867, 1909], "miopen_convolution_add_relu": [1867, 1909], "miopen_convolution_relu": [1867, 1909], "miopen_convolution_transpos": [1867, 1909], "miopen_depthwise_convolut": [1867, 1909], "miopen_rnn": [1867, 1909], "weight_stride0": 1867, "dropout_st": 1867, "out4": 1867, "mkldnn_adaptive_avg_pool2d": [1867, 1909], "mkldnn_convolut": [1867, 1909], "mkldnn_linear_backward_weight": 1867, "bias_defin": 1867, "mkldnn_max_pool2d": [1867, 1909], "mkldnn_max_pool3d": [1867, 1909], "mkldnn_rnn_layer": [1867, 1909], "weight0": 1867, "weight1": 1867, "weight2": 1867, "weight3": 1867, "hx_": 1867, "cx_": 1867, "save_mean": 1867, "save_invstd": 1867, "native_channel_shuffl": [1867, 1909], "native_norm": [1867, 1909, 1923], "norm_except_dim": [1867, 1909], "nuclear_norm": [1867, 1909], "pairwise_dist": [1867, 1909], "permute_copi": [1867, 1909], "promote_typ": [1867, 1909, 1930], "quantize_per_channel": [1867, 1909, 1914], "quantize_per_tensor_dynam": [1867, 1909, 1914], "quantized_batch_norm": [1867, 1909], "quantized_gru_cel": [1867, 1909], "packed_ih": 1867, "packed_hh": 1867, "col_offsets_ih": 1867, "col_offsets_hh": 1867, "scale_ih": 1867, "scale_hh": 1867, "zero_point_ih": 1867, "zero_point_hh": 1867, "quantized_lstm_cel": [1867, 1909], "quantized_max_pool1d": [1867, 1909], "quantized_max_pool2d": [1867, 1909], "quantized_max_pool3d": [1867, 1909], "quantized_rnn_relu_cel": [1867, 1909], "quantized_rnn_tanh_cel": [1867, 1909], "randint_lik": [1867, 1871, 1909, 1931], "randn_lik": [1867, 1871, 1884, 1909, 1931], "randperm": [1867, 1871, 1909, 1931], "result_typ": [1867, 1909], "scalar1": 1867, "scalar2": 1867, "rnn_relu": [1867, 1909], "rnn_relu_cel": [1867, 1909], "rnn_tanh": [1867, 1909], "rnn_tanh_cel": [1867, 1909], "row_indices_copi": [1867, 1909], "row_stack": [1867, 1909], "rrelu_": 1867, "rsub": [1867, 1909], "searchsort": [1867, 1909], "segment_reduc": [1867, 1909], "selu_": 1867, "slice_copi": [1867, 1909], "sparse_bsc_tensor": [1867, 1909, 1923], "sparse_bsr_tensor": [1867, 1909, 1923], "sparse_compressed_tensor": [1867, 1909, 1923], "sparse_csc_tensor": [1867, 1909, 1923], "split_copi": [1867, 1909], "split_with_sizes_copi": [1867, 1909], "squeeze_copi": [1867, 1909], "std_mean": [1867, 1882, 1909], "t_copi": [1867, 1909], "threshold_": 1867, "transpose_copi": [1867, 1909], "trapz": [1867, 1909], "tril_indic": [1867, 1871, 1909], "triu_indic": [1867, 1871, 1909], "unbind_copi": [1867, 1909], "unfold_copi": [1867, 1909], "unsqueeze_copi": [1867, 1909], "values_copi": [1867, 1909], "vander": [1867, 1871, 1909], "var_mean": [1867, 1882, 1909], "view_as_complex_copi": [1867, 1909], "view_as_real_copi": [1867, 1909], "_nn": 1867, "adaptive_max_pool2d": [1867, 1909], "conv_depthwise3d": [1867, 1909], "cross_entropy_loss": [1867, 1909], "input_scal": 1867, "elu_": 1867, "flatten_dense_tensor": [1867, 1909], "random_sampl": 1867, "gelu_": 1867, "hardsigmoid_": [1867, 1916], "hardswish_": 1867, "hardtanh_": [1867, 1916], "leaky_relu_": 1867, "log_sigmoid": [1867, 1909], "mish_": 1867, "mkldnn_linear": [1867, 1909], "mkldnn_reorder_conv2d_weight": [1867, 1909], "mkldnn_reorder_conv3d_weight": [1867, 1909], "nll_loss2d": [1867, 1909], "nll_loss_nd": [1867, 1909], "reflection_pad3d": [1867, 1909], "relu6_": 1867, "rrelu_with_nois": [1867, 1909], "rrelu_with_noise_": 1867, "silu_": 1867, "slow_conv3d": [1867, 1909], "slow_conv_dilated2d": [1867, 1909], "slow_conv_dilated3d": [1867, 1909], "slow_conv_transpose2d": [1867, 1909], "slow_conv_transpose3d": [1867, 1909], "softshrink": [1867, 1909], "thnn_conv2d": [1867, 1909], "unflatten_dense_tensor": [1867, 1909], "upsample_bicubic2d": [1867, 1909], "scales_h": 1867, "scales_w": 1867, "upsample_linear1d": [1867, 1909], "upsample_nearest1d": [1867, 1909], "upsample_nearest3d": [1867, 1909], "scales_d": 1867, "upsample_trilinear3d": [1867, 1909], "fft_fftfreq": [1867, 1909], "fft_fftshift": [1867, 1909], "fft_hfft2": [1867, 1909], "fft_hfftn": [1867, 1909], "fft_ifftshift": [1867, 1909], "fft_ihfft2": [1867, 1909], "fft_ihfftn": [1867, 1909], "fft_rfftfreq": [1867, 1909], "_linalg": 1867, "linalg_cross": [1867, 1909], "linalg_det": [1867, 1909], "linalg_diagon": [1867, 1909], "eigvec": 1867, "linalg_ldl_factor": [1867, 1909], "linalg_ldl_factor_ex": [1867, 1909], "linalg_ldl_solv": [1867, 1909], "linalg_lu": [1867, 1909], "linalg_lu_factor": [1867, 1909], "linalg_lu_factor_ex": [1867, 1909], "linalg_lu_solv": [1867, 1909], "linalg_matmul": [1867, 1909], "linalg_matrix_exp": [1867, 1909], "linalg_matrix_pow": [1867, 1909], "linalg_multi_dot": [1867, 1909], "linalg_norm": [1867, 1909], "linalg_pinv": [1867, 1909], "linalg_solve_ex": [1867, 1909], "linalg_solve_triangular": [1867, 1909], "linalg_vand": [1867, 1909], "linalg_vecdot": [1867, 1909], "linalg_vector_norm": [1867, 1909], "_nest": 1867, "nested_to_padded_tensor": [1867, 1909], "_spars": 1867, "sparse_sampled_addmm": [1867, 1909], "_special": 1867, "special_airy_ai": [1867, 1909], "special_bessel_j0": [1867, 1909], "special_bessel_j1": [1867, 1909], "special_bessel_y0": [1867, 1909], "special_bessel_y1": [1867, 1909], "special_chebyshev_polynomial_t": [1867, 1909], "special_chebyshev_polynomial_u": [1867, 1909], "special_chebyshev_polynomial_v": [1867, 1909], "special_chebyshev_polynomial_w": [1867, 1909], "special_digamma": [1867, 1909], "special_entr": [1867, 1909], "special_erf": [1867, 1909], "special_erfc": [1867, 1909], "special_erfcx": [1867, 1909], "special_erfinv": [1867, 1909], "special_exp2": [1867, 1909], "special_expit": [1867, 1909], "special_expm1": [1867, 1909], "special_gammainc": [1867, 1909], "special_gammaincc": [1867, 1909], "special_gammaln": [1867, 1909], "special_hermite_polynomial_h": [1867, 1909], "special_i0": [1867, 1909], "special_i1": [1867, 1909], "special_laguerre_polynomial_l": [1867, 1909], "special_legendre_polynomial_p": [1867, 1909], "special_log1p": [1867, 1909], "special_log_ndtr": [1867, 1909], "special_log_softmax": [1867, 1909], "special_logit": [1867, 1909], "special_logsumexp": [1867, 1909], "special_modified_bessel_i0": [1867, 1909], "special_modified_bessel_i1": [1867, 1909], "special_modified_bessel_k0": [1867, 1909], "special_modified_bessel_k1": [1867, 1909], "special_multigammaln": [1867, 1909], "special_ndtr": [1867, 1909], "special_ndtri": [1867, 1909], "special_polygamma": [1867, 1909], "special_psi": [1867, 1909], "special_round": [1867, 1909], "special_scaled_modified_bessel_k0": [1867, 1909], "special_scaled_modified_bessel_k1": [1867, 1909], "special_shifted_chebyshev_polynomial_t": [1867, 1909], "special_shifted_chebyshev_polynomial_u": [1867, 1909], "special_shifted_chebyshev_polynomial_v": [1867, 1909], "special_shifted_chebyshev_polynomial_w": [1867, 1909], "special_sinc": [1867, 1909], "special_softmax": [1867, 1909], "special_spherical_bessel_j0": [1867, 1909], "special_xlog1pi": [1867, 1909], "special_xlogi": [1867, 1909], "special_zeta": [1867, 1909], "tval": 1867, "is_accept": 1867, "rect": 1867, "__complex__": 1867, "__float__": 1867, "__int__": 1867, "hex": [1867, 1869, 1909], "__hex__": 1867, "oct": [1867, 1909], "__oct__": 1867, "divmod": [1867, 1869, 1909], "chr": [1867, 1869, 1909], "int_float": 1867, "float_int": 1867, "fab": [1867, 1909], "int_int": 1867, "float_float": 1867, "complex_complex": 1867, "int_complex": 1867, "complex_int": 1867, "float_complex": 1867, "complex_float": [1867, 1925], "scalar_scalar": 1867, "int_to_int": 1867, "modf": [1867, 1909], "mathremaind": [1867, 1909], "programm": [1868, 1869], "tn": 1868, "subtyp": 1868, "an_error": 1868, "noreturn": [1868, 1869], "classvar": [1868, 1869], "anystr": [1868, 1869], "nomin": 1868, "newtyp": [1868, 1869], "tup": [1868, 1869], "emptydatastructur": 1868, "my_list": 1868, "aug_add_x": 1868, "inc": [1868, 1869], "assign_x": [1868, 1869], "polymorph": 1868, "sum_pair": 1868, "red": [1868, 1869], "enum_fn": [1868, 1869], "my_variable_nam": 1868, "top_level_method": 1868, "other_help": 1868, "ten": [1868, 1928], "my_paramet": 1868, "my_submodul": 1868, "tuple_or_list": 1868, "a_tupl": 1868, "de": [1868, 1911, 1914], "is_script": [1868, 1869, 1909], "unsupported_linear_op": 1868, "is_trac": [1868, 1869], "univers": 1868, "typing_extens": 1868, "a_dict": 1868, "some_dict": 1868, "delimit": [1869, 1870], "tstype": 1869, "tsmoduletyp": 1869, "tsalltyp": 1869, "tsmetatyp": 1869, "tsprimitivetyp": 1869, "tsstructuraltyp": 1869, "tsnominaltyp": 1869, "myclass": [1869, 1911], "printabl": [1869, 1911], "sortabl": 1869, "nevertheless": [1869, 1921], "inc_first_el": 1869, "cpufloattyp": 1869, "tstupl": 1869, "tsnamedtupl": 1869, "tslist": 1869, "tsdict": 1869, "tsoption": 1869, "tsunion": 1869, "tsfutur": 1869, "tsrref": 1869, "tsawait": 1869, "await": [1869, 1870, 1919], "keytyp": 1869, "_await": 1869, "mytupl": 1869, "scripted_inc": 1869, "_annotatednamedtupl": 1869, "_namedtupleannot": 1869, "_unannotatednamedtupl": 1869, "nameerror": 1869, "remedi": 1869, "tsbuiltinclass": 1869, "tscustomclass": 1869, "tsenum": 1869, "tstensor": 1869, "subtensor": [1869, 1894, 1934], "subwithtorchfunct": 1869, "script_g": 1869, "tsclassdef": 1869, "methoddefinit": 1869, "__torch__": [1869, 1907], "class2": 1869, "tsenumdef": 1869, "tsenumtyp": 1869, "memberidentifi": 1869, "intenum": 1869, "intflag": 1869, "basecolor": 1869, "compli": [1869, 1911], "classbodydefinit": 1869, "moduleobj": 1869, "testmodul": 1869, "mymodel": [1869, 1888, 1902], "dosometh": 1869, "strateg": 1869, "congruent": 1869, "python3": 1869, "unannot": 1869, "python3annot": 1869, "paramannot": 1869, "returnannot": 1869, "funcormethodbodi": 1869, "mypyannot": 1869, "localvarannot": 1869, "setval": 1869, "moduletyp": [1869, 1911], "classidentifi": 1869, "instanceattridentifi": 1869, "offset_": 1869, "tsstructualtyp": 1869, "grammar": 1869, "chapter": [1869, 1897], "floattyp": 1869, "inttyp": 1869, "stringtyp": 1869, "devicetyp": 1869, "bullet": 1869, "tupletyp": 1869, "listtyp": 1869, "enclosur": 1869, "parenth_form": 1869, "list_displai": 1869, "dict_displai": 1869, "legal": 1869, "stringliter": 1869, "floatnumb": 1869, "expression_list": 1869, "list_comprehens": 1869, "comp_for": 1869, "target_list": 1869, "or_expr": 1869, "key_datum_list": 1869, "dict_comprehens": 1869, "key_datum": 1869, "ongo": [1869, 1907, 1917, 1919], "enclos": 1869, "datum": [1869, 1933], "attributeref": 1869, "slice_list": 1869, "slice_item": 1869, "proper_slic": 1869, "argument_list": 1869, "u_expr": 1869, "tightli": [1869, 1900], "m_expr": 1869, "a_expr": 1869, "shift_expr": 1869, "and_expr": 1869, "xor_expr": 1869, "comp_oper": 1869, "__contains__": 1869, "or_test": 1869, "and_test": 1869, "not_test": 1869, "conditional_express": 1869, "starred_item": 1869, "expression_stmt": 1869, "starred_express": 1869, "assignment_express": 1869, "assignment_stmt": 1869, "augmented_assignment_stmt": 1869, "augtarget": 1869, "augop": 1869, "annotated_assignment_stmt": 1869, "raise_stmt": 1869, "assert_stmt": 1869, "return_stmt": 1869, "del_stmt": 1869, "pass_stmt": 1869, "print_stmt": 1869, "break_stmt": 1869, "continue_stmt": 1869, "if_stmt": 1869, "while_stmt": 1869, "for_stmt": 1869, "with_stmt": 1869, "with_item": 1869, "__enter__": 1869, "suppress": [1869, 1918], "tuple_stmt": 1869, "getattr_stmt": 1869, "hasattr_stmt": 1869, "zip_stmt": 1869, "iterable1": 1869, "iterable2": 1869, "enumerate_stmt": 1869, "add_stat_valu": 1869, "sugaredvalu": 1869, "unrecogn": 1869, "honor": 1869, "__abs__": 1869, "bytearrai": 1869, "delattr": 1869, "exec": 1869, "__index__": 1869, "isint": 1869, "issubclass": [1869, 1894], "ndigit": 1869, "setattr": 1869, "__import__": [1869, 1911], "rpc_sync": [1869, 1909, 1919, 1920, 1921], "synonym": 1869, "_fork": [1869, 1891], "_wait": [1869, 1891], "lexic": 1870, "indent": 1870, "coroutin": 1870, "__del__": [1870, 1889], "__bytes__": 1870, "__slots__": 1870, "metaclass": 1870, "mro": 1870, "__r": 1870, "nonloc": 1870, "bytesliter": 1870, "imagnumb": 1870, "parenthes": 1870, "ifs": 1870, "compound": 1870, "exc_typ": 1870, "exc_valu": 1870, "adaptivelogsoftmaxwithloss": 1871, "enable_grad": [1871, 1931], "overload_nam": 1873, "handi": [1873, 1889, 1892], "spotti": 1873, "googl": 1873, "keynam": 1873, "alias_analysi": 1873, "op_nam": 1873, "opoverload": 1873, "div_cpu": 1873, "off_by_default": 1875, "_registr": 1875, "born": 1876, "citizen": 1876, "afterthought": 1876, "unlock": 1876, "intuit": 1876, "alik": 1876, "grai": 1876, "systemat": 1876, "onboard": 1876, "maskedarrai": 1876, "masked_tensor": 1876, "blocklist": [1877, 1911], "mobileoptimizertyp": 1877, "conv_bn_fus": 1877, "correspondingli": 1877, "prepack": [1877, 1909], "insert_fold_prepack_op": 1877, "arm": [1877, 1914], "remove_dropout": 1877, "hoist": 1877, "hoist_conv_packed_param": 1877, "fuse_add_relu": 1877, "vulkan": 1877, "vulkan_automatic_gpu_transf": 1877, "freeze_modul": 1877, "script_modul": 1877, "optimization_blocklist": 1877, "preserved_method": 1877, "_mobileoptimizertyp": 1877, "recursivescriptmodul": [1877, 1905], "infrequ": 1879, "window_s": 1879, "max_sampl": 1879, "cap": 1879, "_monitor": 1879, "data_value_t": 1879, "eventhandlerhandl": 1879, "register_event_handl": 1879, "unregister_event_handl": 1879, "tensorboardeventhandl": 1879, "writer": [1879, 1900, 1928], "shared_memori": 1881, "abruptli": 1881, "get_all_sharing_strategi": 1881, "get_sharing_strategi": 1881, "set_sharing_strategi": 1881, "new_strategi": 1881, "abnorm": [1881, 1902], "fatal": [1881, 1902], "forev": [1881, 1893], "asap": 1881, "queue_2": 1881, "x_clone": 1881, "shm_open": 1881, "mmap": 1881, "destructor": [1881, 1921], "torch_shm_manag": 1881, "unnot": 1881, "spawncontext": 1881, "has_nam": 1882, "is_shar": [1882, 1925], "is_sparse_csr": [1882, 1909, 1925], "is_tensor": [1882, 1923], "items": [1882, 1909], "unifies_names_from_input_tensor": 1882, "nbyte": [1882, 1909, 1925], "ndimens": 1882, "position": [1882, 1883], "unnam": [1882, 1883], "misalign": 1882, "inher": 1882, "disappear": 1882, "img": [1883, 1928], "renamed_img": 1883, "coexist": 1883, "scale_channel": 1883, "more_img": 1883, "named_tensor": 1883, "named_img": 1883, "flat_img": 1883, "named_flat_img": 1883, "unflattened_img": 1883, "unflattened_named_img": 1883, "grad_loss": 1883, "8107": 1883, "6357": 1883, "0783": 1883, "untest": 1883, "rename_map": 1883, "greedili": 1883, "unment": 1883, "49152": 1883, "datastructur": 1884, "seamless": 1884, "nested_tensor": 1884, "nt": 1884, "vein": 1884, "as_nested_tensor": 1884, "irregular": 1884, "indistinguish": 1884, "2286": 1884, "4842": 1884, "7827": 1884, "6745": [1884, 1924], "0658": 1884, "1247": 1884, "4078": 1884, "8083": 1884, "2871": 1884, "5559": 1884, "9885": 1884, "4074": 1884, "4855": 1884, "0733": 1884, "8285": 1884, "6858": 1884, "7030": 1884, "3481": 1884, "0236": 1884, "fake_grad": 1884, "6862": 1884, "1282": 1884, "1031": 1884, "0464": 1884, "3276": 1884, "9967": 1884, "0054": 1884, "8972": 1884, "9174": 1884, "4995": 1884, "8546": 1884, "7194": 1884, "2918": 1884, "1846": 1884, "8793": 1884, "5183": 1884, "6447": 1884, "8009": 1884, "8468": 1884, "9832": 1884, "5272": 1884, "pt_infer": 1884, "pt_larg": 1884, "pt_small": 1884, "bitwidth": [1885, 1900, 1914], "asymmetr": [1885, 1914, 1917], "sacrific": [1887, 1892], "dirac": 1887, "glorot": 1887, "bengio": 1887, "fan": 1887, "_in": 1887, "fan_in": 1887, "delv": 1887, "surpass": 1887, "he": 1887, "_mode": 1887, "fan_out": 1887, "redrawn": 1887, "sax": 1887, "2013": 1887, "marten": 1887, "walkthrough": 1888, "clip_grad_value_": 1888, "optimizer2": 1888, "batch_per_it": 1888, "iters_to_accumul": 1888, "num_proc": 1888, "grad_param": 1888, "grad_norm": 1888, "scaled_grad_param": 1888, "inv_scal": 1888, "optimizer0": 1888, "optimizer1": 1888, "output0": 1888, "model0": 1888, "model1": 1888, "loss0": 1888, "loss1": 1888, "imped": 1888, "poor": [1888, 1889], "dp_model": 1888, "imported_funct": 1888, "mymm": 1888, "myfloat32func": 1888, "fwd_output": 1888, "cleaner": 1889, "mapsto": 1889, "educ": 1889, "_save": 1889, "_saved_self": 1889, "convex": 1889, "concav": 1889, "togglabl": 1889, "drawback": 1889, "0011": 1889, "dirti": 1889, "hogwild": 1889, "train_fn": 1889, "graphtask": 1889, "copyslic": 1889, "mutex": 1889, "gotten": 1889, "curiou": 1889, "\u2102": 1889, "yj": 1889, "holomorph": 1889, "theori": 1889, "homomorph": 1889, "mathematician": 1889, "im": 1889, "studi": [1889, 1913], "beauti": 1889, "somewhat": [1889, 1892, 1923], "counterintuit": 1889, "0906": 1889, "4835": 1889, "audio": [1889, 1928], "\u211d": 1889, "_output": 1889, "vj": 1889, "selfdeletingtempfil": 1889, "tmp_dir": 1889, "uuid": 1889, "uuid4": 1889, "temp_fil": 1889, "forbidden": 1889, "savedtensor": 1889, "_raw_saved_": 1889, "_raw_saved_self": 1889, "save_on_disk_threshold": 1889, "tensor_or_sctf": 1889, "_saved_oth": 1889, "4th": 1890, "backcompat": 1890, "broadcast_warn": 1890, "userwarn": 1890, "compute_z": 1891, "w_z": 1891, "w_y": 1891, "tbb": 1891, "aten_thread": 1891, "omp": 1891, "mkl_thread": 1891, "bla": 1891, "mkldnn_cpu_runtim": 1891, "use_mkldnn": 1891, "use_tbb": 1891, "use_openmp": 1891, "ON": [1891, 1898, 1899], "set_num_interop_thread": 1891, "get_num_interop_thread": 1891, "set_num_thread": 1891, "get_num_thread": 1891, "omp_num_thread": 1891, "mkl_num_thread": 1891, "1024": [1891, 1892], "e5": 1891, "oversubscript": 1891, "irrespect": 1892, "spread": 1892, "cuda2": [1892, 1898], "a_ful": 1892, "10240": 1892, "b_full": 1892, "ab_ful": 1892, "7277": 1892, "ab_tf32": 1892, "016": 1892, "ga100": 1892, "1747": 1892, "relative_error": 1892, "0022": 1892, "ab_fp32": 1892, "0031": 1892, "000039": 1892, "7x": 1892, "globalcontext": 1892, "setallowtf32cubla": 1892, "setallowtf32cudnn": 1892, "bench_gemm_transform": 1892, "allow_fp16_reduc": 1892, "4048": 1892, "1634": 1892, "1639": 1892, "4056": 1892, "1670": 1892, "1661": 1892, "4080": 1892, "1664": 1892, "1658": 1892, "1651": 1892, "4104": 1892, "1677": 1892, "1674": 1892, "4128": 1892, "1796": [1892, 1900], "2519": 1892, "5096": 1892, "2144": 1892, "2149": 1892, "2766": 1892, "5120": 1892, "2142": 1892, "9728": 1892, "3875": 1892, "5779": 1892, "6182": 1892, "9656": 1892, "setallowfp16reductioncubla": 1892, "instabl": 1892, "setallowbf16reductioncubla": 1892, "start_ev": 1892, "elapsed_time_m": 1892, "exploit": 1892, "paragraph": [1892, 1897], "initial_grad": 1892, "memory_alloc": [1892, 1898], "memory_snapshot": [1892, 1898], "memcheck": 1892, "pytorch_no_cuda_memory_cach": [1892, 1898], "option2": 1892, "value2": 1892, "max_split_size_mb": 1892, "borderlin": 1892, "memory_summari": 1892, "resort": [1892, 1897, 1911], "roundup_power2_divis": 1892, "cudacachingalloc": 1892, "1280": 1892, "1536": 1892, "1792": 1892, "256mb": 1892, "512mb": 1892, "1gb": 1892, "roundup_bypass_threshold_mb": 1892, "garbage_collection_threshold": 1892, "release_cached_block": 1892, "unfavor": 1892, "cuda_runtime_api": 1892, "iostream": 1892, "fpic": 1892, "my_malloc": 1892, "cout": 1892, "endl": [1892, 1899], "my_fre": 1892, "cudafre": 1892, "cudapluggablealloc": 1892, "new_alloc": 1892, "_cuda_clearcublasworkspac": 1892, "kib": 1892, "lru": 1892, "geometri": 1892, "1023": 1892, "use_pytorch_kernel_cach": 1892, "pytorch_kernel_cache_path": 1892, "store_tru": 1892, "disable_cuda": 1892, "assess": 1892, "cudagetdevicecount": 1892, "cuinit": 1892, "pytorch_nvml_based_cuda_check": 1892, "nvml": 1892, "nvmldevicegetcount_v2": 1892, "poison": 1892, "aforement": [1892, 1902], "train_load": 1892, "x_cpu": 1892, "x_gpu": 1892, "x_cpu_long": 1892, "y_cpu": 1892, "y_gpu": 1892, "y_cpu_long": 1892, "new_tensor": 1892, "overus": 1892, "cudagraphlaunch": 1892, "elid": 1892, "versatil": 1892, "static_input": 1892, "static_output": 1892, "realist": 1892, "sophist": [1892, 1910], "violat": [1892, 1895], "prohibit": [1892, 1905], "virtual": 1892, "d_in": 1892, "d_out": 1892, "640": 1892, "static_target": 1892, "static_y_pr": 1892, "static_loss": 1892, "real_target": 1892, "refil": 1892, "dag": 1892, "rejoin": 1892, "cuda_work": 1892, "nsight": 1892, "reorgan": 1892, "graphabl": 1892, "econom": 1892, "static_out_1": 1892, "g1_workload": 1892, "static_in_1": 1892, "static_out_2": 1892, "g2_workload": 1892, "static_in_2": 1892, "real_data_1": 1892, "real_data_2": 1892, "29500": [1893, 1912, 1919, 1920], "prerequisit": 1893, "grad0": 1893, "grad1": 1893, "bucket1": 1893, "bucket0": 1893, "hurt": 1893, "earliest": 1893, "unreadi": 1893, "absent": 1893, "hpp": 1893, "processgroupgloo": 1893, "processgroupmpi": 1893, "_sync_param": 1893, "autograd_hook": 1893, "prepare_for_backward": 1893, "_after_": 1893, "optimize_ddp": 1893, "mark_dirti": 1894, "mark_non_differenti": [1894, 1895], "set_materialize_grad": 1894, "linearfunct": 1894, "grad_bia": 1894, "mulconst": 1894, "mycub": [1894, 1895], "grad_dx": [1894, 1895], "my_cub": [1894, 1895], "input_featur": 1894, "output_featur": 1894, "duck": [1894, 1911], "__array_function__": 1894, "nep": 1894, "0018": 1894, "scalartensor": 1894, "handled_funct": 1894, "mandat": 1894, "update_wrapp": 1894, "ensure_tensor": 1894, "metadatatensor": 1894, "__add__": 1894, "subtensor2": 1894, "othersubtensor": 1894, "loggingtensor": 1894, "permiss": 1894, "_metadata": 1894, "ndata": 1894, "ret": [1894, 1919], "ministri": 1894, "silli": 1894, "superclass": 1894, "troublesom": 1894, "_get_overridable_funct": 1894, "overriden": 1894, "get_overridable_funct": [1894, 1934], "func_dict": 1894, "nn_func": 1894, "labori": 1894, "_get_testing_overrid": 1894, "get_testing_overrid": [1894, 1934], "override_dict": 1894, "dummy_add": 1894, "get_ignored_funct": [1894, 1934], "custom_vjp": 1895, "custom_jvp": 1895, "to_numpi": 1895, "numpysort": 1895, "ind_inv": 1895, "_1": [1895, 1911], "numpytak": 1895, "numpy_sort": 1895, "saniti": 1895, "ggx": 1895, "vmappabl": 1895, "x_bdim": 1895, "ind_bdim": 1895, "ind_inv_bdim": 1895, "expanded_x": 1895, "expanded_ind": 1895, "expanded_ind_inv": 1895, "new_dim": 1895, "logical_dim": 1895, "maybe_expand_bdim_at_front": 1895, "pseudocod": 1895, "rapidli": 1896, "abridg": 1896, "total_loss": 1896, "extrud": 1896, "phenomenon": 1896, "plenti": 1896, "bptt": 1896, "repackag": 1896, "nm": 1896, "blow": 1896, "elf": 1896, "grep": 1896, "run_model": 1896, "recoveri": 1896, "data_parallel": 1896, "pad_packed_sequ": 1896, "padded_input": 1896, "packed_input": 1896, "packed_output": 1896, "my_lstm": 1896, "dp_m": 1896, "padding_input": 1896, "ur": 1897, "rewritten": 1897, "j_f": 1897, "calculu": 1897, "cw": 1897, "bigger": 1897, "articl": 1897, "58eb23378f2a376565a66ac32c93a316c45b6131": 1897, "l99": 1897, "l105": 1897, "ds_dx": 1897, "compute_gradi": 1897, "ds_dy": 1897, "conj_w_d": 1897, "w_d": 1897, "d_idx": 1897, "albeit": 1897, "wonder": 1897, "amd": 1898, "dialect": 1898, "portabl": 1898, "rocmdoc": 1898, "programming_guid": 1898, "hip_api_guid": 1898, "cuda_vers": 1898, "cudaruntimegetvers": 1898, "cudadrivergetvers": 1898, "hip_vers": 1898, "hipruntimegetvers": 1898, "hipdrivergetvers": 1898, "11000": 1898, "use_rocm": 1898, "rocm_vers": 1898, "40300": 1898, "cmake": [1898, 1906], "drocm_force_enable_gpu_assert": 1898, "addglobalcallback": 1899, "recordfunct": 1899, "ivalu": 1899, "threadlocaldebuginfo": 1899, "debuginfoguard": 1899, "recordfunctioncallback": 1899, "onfunctionent": 1899, "onfunctionexit": 1899, "needsinput": 1899, "samplingprob": 1899, "enablerecordfunct": 1899, "cerr": 1899, "broader": [1899, 1931], "inject": 1899, "setapiusagehandl": 1899, "setapiusagelogg": 1899, "event_nam": 1899, "c10_log_api_usage_onc": 1899, "my_api": 1899, "_log_api_usage_onc": 1899, "archiv": 1899, "bundl": 1899, "akin": 1899, "jpeg": 1899, "camera": [1899, 1928], "setexportmoduleextrafileshook": 1899, "extrafilesmap": 1899, "producer_info": 1899, "getenv": 1899, "getsourc": 1899, "precompil": 1899, "pyc": 1899, "loos": 1899, "elabor": 1900, "tpu": 1900, "mylinear": 1900, "sample_input": 1900, "0413": 1900, "2057": 1900, "0597": 1900, "8247": 1900, "1045": 1900, "4299": 1900, "5457": 1900, "4793": 1900, "3634": 1900, "8525": 1900, "6749": 1900, "l0": [1900, 1905], "bignet": 1900, "big_net": 1900, "dynamicnet": 1900, "dynamic_net": 1900, "2051": 1900, "7601": 1900, "1963": 1900, "4354": 1900, "6598": 1900, "4446": 1900, "4628": 1900, "8774": 1900, "6848": 1900, "5458": 1900, "4647": 1900, "5310": 1900, "0609": 1900, "0940": 1900, "1266": 1900, "0623": 1900, "3508": 1900, "0550": 1900, "5317": 1900, "5562": 1900, "4028": 1900, "6942": 1900, "0140": 1900, "0329": 1900, "1160": 1900, "0434": 1900, "3889": 1900, "1613": 1900, "6340": 1900, "3887": 1900, "9979": 1900, "0767": 1900, "3526": 1900, "8756": 1900, "5847": 1900, "6016": 1900, "1608": 1900, "0829": 1900, "6338": 1900, "9239": 1900, "6943": 1900, "5034": 1900, "0268": 1900, "4489": 1900, "9403": 1900, "2509": 1900, "5052": 1900, "3088": 1900, "4951": 1900, "3381": 1900, "5166": 1900, "boilerpl": [1900, 1911], "beginn": 1900, "examples_nn": 1900, "polynomial_modul": 1900, "teach": 1900, "0013": [1900, 1924], "0030": 1900, "0008": 1900, "modalmodul": 1900, "6614": 1900, "2669": 1900, "0617": 1900, "4519": 1900, "two_layer_net_optim": 1900, "blitz": 1900, "neural_networks_tutori": 1900, "autograd_tutori": 1900, "new_net": 1900, "runningmean": 1900, "1041": 1900, "0647": 1900, "1515": 1900, "m_load": 1900, "unserialized_th": 1900, "statefulmodul": 1900, "param3": 1900, "param_list": 1900, "parameterlist": 1900, "param_dict": 1900, "parameterdict": 1900, "buffer1": 1900, "buffer2": 1900, "buffer3": 1900, "0322": 1900, "9066": 1900, "1409": 1900, "4852": 1900, "6949": 1900, "2911": 1900, "1044": 1900, "4202": 1900, "1953": 1900, "5299": 1900, "8747": 1900, "6289": 1900, "4898": 1900, "6434": 1900, "5187": 1900, "0346": 1900, "4077": 1900, "4324": 1900, "7022": 1900, "3915": 1900, "6176": 1900, "6062": 1900, "5992": 1900, "4452": 1900, "2843": 1900, "3710": 1900, "3947": 1900, "saving_loading_model": 1900, "what_is_state_dict": 1900, "skip_init": 1900, "skip_param_init": 1900, "new_grad_input": 1900, "5059": 1900, "8158": 1900, "2390": 1900, "0043": 1900, "addmmbackward": 1900, "forward_pre_hook_handl": 1900, "5752": 1900, "7421": 1900, "forward_hook_handl": 1900, "0980": 1900, "4666": 1900, "0256": 1900, "4497": 1900, "5046": 1900, "combat": 1900, "shader": 1901, "mps_devic": 1901, "yourfavoritenet": 1901, "a3c": 1902, "set_start_method": 1902, "simplequeu": 1902, "cope": 1902, "eleg": 1902, "num_process": 1902, "modern": 1903, "754": 1903, "1e20": 1903, "4142e": 1903, "struggl": 1903, "benign": 1903, "v_dot2": 1903, "mfma": 1903, "fp64": 1903, "rocbla": 1903, "miopen": 1903, "rocblas_internal_fp16_alt_impl": 1903, "miopen_debug_convolution_attrib_fp16_alt_impl": 1903, "_convbackend": 1903, "slownd": 1903, "slownd_transpos": 1903, "slownd_dil": 1903, "slownd_dilated_transpos": 1903, "convbackend": 1903, "miopendepthwis": 1903, "miopentranspos": 1903, "svd_lowrank": [1904, 1923], "22modul": 1904, "20determin": 1904, "index_add_cuda_": 1904, "1509": 1904, "8027": 1904, "0333": 1904, "1444": 1904, "rese": 1904, "seed_work": 1904, "worker_se": 1904, "train_dataset": 1904, "tensor_dict": 1905, "loaded_numb": 1905, "loaded_even": 1905, "scene": [1905, 1928], "loaded_smal": 1905, "num_batches_track": 1905, "bn_state_dict": 1905, "new_bn": 1905, "out0_relu": 1905, "1400": 1905, "4563": 1905, "0271": 1905, "4406": 1905, "2827": 1905, "4588": 1905, "2031": 1905, "0300": 1905, "1316": 1905, "6533": 1905, "3413": 1905, "1112": 1905, "m_state_dict": 1905, "new_m": 1905, "original_nam": 1905, "controlflowmodul": 1905, "controlflowmodule_trac": 1905, "3793": 1905, "controlflowmodule_script": 1905, "rem": 1906, "7z": 1906, "curl": 1906, "ossci": 1906, "mkl_2020": 1906, "aoa": 1906, "omkl": 1906, "cuda_prefix": 1906, "cuda102": 1906, "magma_2": 1906, "4_": 1906, "omagma": 1906, "cmake_include_path": 1906, "magma_hom": 1906, "studio": 1906, "pip": [1906, 1907, 1928], "cmake_gener": 1906, "ffi": 1906, "create_extens": 1906, "_ext": 1906, "define_macro": 1906, "relative_to": 1906, "c99": 1906, "x86_x64": 1906, "packagesnotfounderror": 1906, "anaconda": 1906, "noarch": 1906, "continuum": 1906, "pkg": 1906, "pro": [1906, 1928], "msys2": 1906, "importerror": [1906, 1911], "dll": 1906, "vc2017": 1906, "redistribut": 1906, "vc": 1906, "vs2017_runtim": 1906, "mkl_fft": 1906, "intel_openmp": 1906, "vs2017": 1906, "openbla": 1906, "forg": 1906, "bootstrap": 1906, "forgotten": 1906, "idiom": 1906, "freeze_support": 1906, "forkingpickl": 1906, "brokenpipeerror": 1906, "errno": 1906, "couldn": [1906, 1907], "torch_14808_1591070686": 1906, "thalloc": 1906, "tdr": 1906, "thcudacheck": 1906, "storageshar": 1906, "dummy_input": 1907, "input_nam": 1907, "actual_input_1": 1907, "learned_": 1907, "output_nam": 1907, "learned_0": 1907, "learned_1": 1907, "learned_2": 1907, "learned_3": 1907, "learned_14": 1907, "learned_15": 1907, "kernel_shap": 1907, "9216": 1907, "transb": 1907, "check_model": 1907, "printable_graph": 1907, "onnxruntim": 1907, "ort": 1907, "ort_sess": 1907, "inferencesess": 1907, "astyp": 1907, "seq_length": 1907, "real_seq_length": 1907, "experienc": 1907, "new_data": 1907, "symbolic_opset": 1907, "symbolic_opset9": 1907, "_variablefunct": 1907, "pyi": 1907, "___torch_mangle_0": 1907, "alpha_f": 1907, "myrelu": 1907, "value_t": 1907, "pythonop": [1907, 1909], "mylogexp": 1907, "operator_export_typ": 1907, "onnx_fallthrough": 1907, "onnx_aten_fallback": 1907, "onnxscript": 1907, "onnx_opset": 1907, "opset15": 1907, "custom_opset": 1907, "67326": 1907, "alphax": 1907, "castlik": 1907, "gammax": 1907, "settyp": 1907, "custom_selu": 1907, "jit_util": 1907, "graphcontext": 1907, "onnxscript_op": 1907, "register_custom_op_symbol": 1907, "symbolic_nam": 1907, "symbolic_fn": 1907, "symbolic_help": 1907, "symbolic_foo_forward": 1907, "custom_domain": 1907, "attr1_f": 1907, "attr2_i": 1907, "foo_forward": 1907, "foomodel": 1907, "example_input1": 1907, "caffe2": [1907, 1928], "torch_script_graph": 1907, "unconvertible_op": 1907, "dynamic_ax": 1907, "export_param": 1907, "trainingmod": 1907, "operatorexporttyp": 1907, "do_constant_fold": 1907, "keep_initializers_as_input": 1907, "export_modules_as_funct": 1907, "OF": 1907, "WITH": 1907, "input_i": 1907, "input_z": 1907, "fileno": 1907, "untrain": 1907, "doc_str": 1907, "onnx_aten": 1907, "build_caffe2": 1907, "summodul": 1907, "dim_valu": 1907, "my_custom_axis_nam": 1907, "dim_param": 1907, "sum_dynamic_axes_1": 1907, "predefin": 1907, "checkererror": 1907, "unsupportedoperatorerror": 1907, "export_to_pretty_str": 1907, "export_typ": 1907, "google_print": 1907, "add_node_nam": 1907, "nodeproto": 1907, "debugstr": 1907, "contrib": 1907, "test_aten_embedding_2": 1907, "test_oper": 1907, "unregister_custom_op_symbol": 1907, "select_model_mode_for_export": 1907, "is_in_onnx_export": 1907, "middl": 1907, "enable_log": 1907, "disable_log": 1907, "graphinfo": 1907, "incorrect_relu_symbolic_funct": 1907, "2328854203224182": 1907, "699536174352349": 1907, "rapid": 1907, "exportopt": 1907, "my_nn_modul": 1907, "my_nn_module_attribut": 1907, "underdevelop": 1908, "parsabl": 1908, "sarif": 1908, "diagsys0001": 1908, "fxe0001": 1908, "fxe0002": 1908, "fxe0003": 1908, "fxe0004": 1908, "fxe0005": 1908, "fxe0006": 1908, "atenlib": 1908, "fxe0007": 1908, "fxe0008": 1908, "fxe0009": 1908, "fxe0010": 1908, "fxe0011": 1908, "fxe0012": 1908, "poe0001": 1908, "poe0002": 1908, "poe0003": 1908, "poe0004": 1908, "_intern": [1908, 1925], "exportdiagnost": 1908, "frames_to_skip": 1908, "cpp_stack": 1908, "record_cpp_call_stack": 1908, "constantchunk": 1909, "__and_": 1909, "__contains_": 1909, "__derive_index": 1909, "__getitem_": 1909, "__interpol": 1909, "__is_": 1909, "__isnot_": 1909, "__lshift_": 1909, "__not_": 1909, "__or_": 1909, "__range_length": 1909, "__rshift_": 1909, "__xor_": 1909, "_cast_byt": 1909, "_cast_char": 1909, "_cast_doubl": 1909, "_cast_float": 1909, "_cast_half": 1909, "_cast_int": 1909, "_cast_long": 1909, "_cast_short": 1909, "_conj": 1909, "_convolution_mod": 1909, "_dim_arang": 1909, "_pack_padded_sequ": 1909, "_pad_packed_sequ": 1909, "_reshape_from_tensor": 1909, "_sample_dirichlet": 1909, "_set_item": 1909, "_shape_as_tensor": 1909, "_standard_gamma": 1909, "_uniqu": 1909, "_unique2": 1909, "_weight_norm": 1909, "conv1d_relu": 1909, "conv2d_relu": 1909, "embedding_renorm": 1909, "floordiv": [1909, 1916], "nonzero_numpi": 1909, "numpy_t": 1909, "unchecked_cast": 1909, "unique_dim": 1909, "_quantiz": 1909, "conv2d_prepack": 1909, "conv3d_prepack": 1909, "conv3d_relu": 1909, "conv_transpose1d_prepack": 1909, "conv_transpose2d_prepack": 1909, "conv_transpose3d_prepack": 1909, "linear_dynam": 1909, "linear_prepack": 1909, "linear_prepack_fp16": 1909, "linear_prepack_fp16_legaci": 1909, "linear_prepack_legaci": 1909, "_test": 1909, "get_first": 1909, "compleximplicit": 1909, "floatimplicit": 1909, "intimplicit": 1909, "__iand_": 1909, "__ilshift_": 1909, "__ior_": 1909, "__irshift_": 1909, "__ixor_": 1909, "__round_to_zero_floordiv": 1909, "__upsampl": 1909, "__upsample_bilinear": 1909, "__upsample_nearest": 1909, "_adaptive_avg_pool3d": 1909, "_add_batch_dim": 1909, "_add_relu": 1909, "_addmm_activ": 1909, "_aminmax": 1909, "_amp_foreach_non_finite_check_and_unscal": 1909, "_amp_update_scal": 1909, "_assert_async": 1909, "_assert_tensor_metadata": 1909, "_autocast_to_full_precis": 1909, "_autocast_to_reduced_precis": 1909, "_batch_norm_impl_index": 1909, "_cdist_forward": 1909, "_cholesky_solve_help": 1909, "_choose_qparams_per_tensor": 1909, "_chunk_grad_outputs_efficient_attent": 1909, "_coalesc": 1909, "_compute_linear_combin": 1909, "_conj_copi": 1909, "_conj_phys": 1909, "_conv_depthwise2d": 1909, "_convert_indices_from_coo_to_csr": 1909, "_convert_indices_from_csr_to_coo": 1909, "_copy_from": 1909, "_copy_from_and_res": 1909, "_ctc_loss": 1909, "_cudnn_ctc_loss": 1909, "_cudnn_init_dropout_st": 1909, "_cudnn_rnn": 1909, "_cudnn_rnn_flatten_weight": 1909, "_cufft_clear_plan_cach": 1909, "_cufft_get_plan_cache_max_s": 1909, "_cufft_get_plan_cache_s": 1909, "_cufft_set_plan_cache_max_s": 1909, "_cummax_help": 1909, "_cummin_help": 1909, "_debug_has_internal_overlap": 1909, "_dimi": 1909, "_dimv": 1909, "_dirichlet_grad": 1909, "_efficient_attention_forward": 1909, "_efficientzerotensor": 1909, "_embedding_bag": 1909, "_embedding_bag_forward_onli": 1909, "_empty_affine_quant": 1909, "_empty_per_channel_affine_quant": 1909, "_euclidean_dist": 1909, "_fake_quantize_learnable_per_channel_affin": 1909, "_fake_quantize_learnable_per_tensor_affin": 1909, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1909, "_fft_c2c": 1909, "_fft_c2r": 1909, "_fft_r2c": 1909, "_flash_attention_forward": 1909, "_foreach_ab": 1909, "_foreach_aco": 1909, "_foreach_add": 1909, "_foreach_addcdiv": 1909, "_foreach_addcmul": 1909, "_foreach_asin": 1909, "_foreach_atan": 1909, "_foreach_ceil": 1909, "_foreach_clamp_max": 1909, "_foreach_clamp_min": 1909, "_foreach_co": 1909, "_foreach_cosh": 1909, "_foreach_div": 1909, "_foreach_erf": 1909, "_foreach_erfc": 1909, "_foreach_exp": 1909, "_foreach_expm1": 1909, "_foreach_floor": 1909, "_foreach_frac": 1909, "_foreach_lerp": 1909, "_foreach_lgamma": 1909, "_foreach_log": 1909, "_foreach_log10": 1909, "_foreach_log1p": 1909, "_foreach_log2": 1909, "_foreach_maximum": 1909, "_foreach_minimum": 1909, "_foreach_mul": 1909, "_foreach_neg": 1909, "_foreach_norm": 1909, "_foreach_pow": 1909, "_foreach_reciproc": 1909, "_foreach_round": 1909, "_foreach_sigmoid": 1909, "_foreach_sin": 1909, "_foreach_sinh": 1909, "_foreach_sqrt": 1909, "_foreach_sub": 1909, "_foreach_tan": 1909, "_foreach_tanh": 1909, "_foreach_trunc": 1909, "_foreach_zero": 1909, "_fused_adam": 1909, "_fused_adamw": 1909, "_fused_dropout": 1909, "_fused_moving_avg_obs_fq_help": 1909, "_fused_moving_avg_obs_fq_helper_funct": 1909, "_fused_sdp_choic": 1909, "_fw_primal": 1909, "_fw_primal_copi": 1909, "_get_cpu_cap": 1909, "_get_tracing_st": 1909, "_grad_sum_to_s": 1909, "_has_compatible_shallow_copy_typ": 1909, "_has_same_storage_numel": 1909, "_histogramdd_bin_edg": 1909, "_histogramdd_from_bin_ct": 1909, "_histogramdd_from_bin_tensor": 1909, "_index_put_impl": 1909, "_indices_copi": 1909, "_infer_s": 1909, "_int_mm": 1909, "_is_all_tru": 1909, "_is_any_tru": 1909, "_is_zerotensor": 1909, "_linalg_check_error": 1909, "_linalg_det": 1909, "_linalg_eigh": 1909, "_linalg_slogdet": 1909, "_linalg_solve_ex": 1909, "_linalg_svd": 1909, "_list_to_tensor": 1909, "_local_scalar_dens": 1909, "_logcumsumexp": 1909, "_lstm_mp": 1909, "_make_du": 1909, "_make_dual_copi": 1909, "_make_per_channel_quantized_tensor": 1909, "_make_per_tensor_quantized_tensor": 1909, "_masked_scal": 1909, "_masked_softmax": 1909, "_mkldnn_reshap": 1909, "_mkldnn_transpos": 1909, "_mps_convolut": 1909, "_mps_convolution_transpos": 1909, "_native_batch_norm_legit_funct": 1909, "_native_batch_norm_legit_no_train": 1909, "_native_multi_head_attent": 1909, "_ncf_unsqueez": 1909, "_ncf_view": 1909, "_neg_view": 1909, "_neg_view_copi": 1909, "_nested_from_pad": 1909, "_nested_from_padded_and_nested_exampl": 1909, "_nested_tensor_from_mask": 1909, "_nested_tensor_from_mask_left_align": 1909, "_nested_tensor_from_tensor_list": 1909, "_nested_tensor_s": 1909, "_nested_tensor_softmax_with_shap": 1909, "_nested_tensor_storage_offset": 1909, "_nested_tensor_strid": 1909, "_nested_view_from_buff": 1909, "_nested_view_from_buffer_copi": 1909, "_new_zeros_with_same_feature_meta": 1909, "_nnpack_avail": 1909, "_nnpack_spatial_convolut": 1909, "_no_grad_embedding_renorm": 1909, "_no_grad_fil": 1909, "_no_grad_norm": 1909, "_no_grad_uniform": 1909, "_no_grad_zero": 1909, "_pack_sequ": 1909, "_pad_circular": 1909, "_pad_enum": 1909, "_pdist_forward": 1909, "_pin_memori": 1909, "_prelu_kernel": 1909, "_propagate_xla_data": 1909, "_remove_batch_dim": 1909, "_reshape_alia": 1909, "_reshape_alias_copi": 1909, "_reshape_copi": 1909, "_resize_output": 1909, "_rowwise_prun": 1909, "_saturate_weight_to_fp16": 1909, "_scaled_dot_product_attent": 1909, "_scaled_dot_product_attention_math": 1909, "_scaled_dot_product_efficient_attent": 1909, "_scaled_dot_product_flash_attent": 1909, "_size_if_not_equ": 1909, "_slow_conv2d_forward": 1909, "_sobol_engine_draw": 1909, "_sobol_engine_ff": 1909, "_sobol_engine_initialize_st": 1909, "_sobol_engine_scrambl": 1909, "_sparse_addmm": 1909, "_sparse_broadcast_to": 1909, "_sparse_broadcast_to_copi": 1909, "_sparse_bsc_tensor_unsaf": 1909, "_sparse_bsr_tensor_unsaf": 1909, "_sparse_compressed_tensor_unsaf": 1909, "_sparse_coo_tensor_unsaf": 1909, "_sparse_coo_tensor_with_dim": 1909, "_sparse_coo_tensor_with_dims_and_tensor": 1909, "_sparse_csc_tensor_unsaf": 1909, "_sparse_csr_prod": 1909, "_sparse_csr_sum": 1909, "_sparse_csr_tensor_unsaf": 1909, "_sparse_log_softmax": 1909, "_sparse_mm": 1909, "_sparse_mm_reduce_impl": 1909, "_sparse_softmax": 1909, "_sparse_sparse_matmul": 1909, "_sparse_sum": 1909, "_spdiag": 1909, "_standard_gamma_grad": 1909, "_structured_sparse_linear": 1909, "_tensor_to_list": 1909, "_test_ambiguous_default": 1909, "_test_autograd_multiple_dispatch": 1909, "_test_autograd_multiple_dispatch_view": 1909, "_test_autograd_multiple_dispatch_view_copi": 1909, "_test_check_tensor": 1909, "_test_functorch_fallback": 1909, "_test_optional_filled_intlist": 1909, "_test_optional_floatlist": 1909, "_test_optional_intlist": 1909, "_test_serialization_subcmul": 1909, "_test_string_default": 1909, "_test_warn_in_autograd": 1909, "_thnn_fused_gru_cel": 1909, "_thnn_fused_lstm_cel": 1909, "_to_cpu": 1909, "_to_dens": 1909, "_transform_bias_rescale_qkv": 1909, "_transformer_encoder_layer_fwd": 1909, "_trilinear": 1909, "_triton_multi_head_attent": 1909, "_triton_scaled_dot_attent": 1909, "_unpack_du": 1909, "_unsafe_index": 1909, "_unsafe_index_put": 1909, "_unsafe_view": 1909, "_unwrap_opt": 1909, "_upsample_bicubic2d_aa": 1909, "_upsample_bilinear2d_aa": 1909, "_upsample_nearest_exact1d": 1909, "_upsample_nearest_exact2d": 1909, "_upsample_nearest_exact3d": 1909, "_use_cudnn_ctc_loss": 1909, "_use_cudnn_rnn_flatten_weight": 1909, "_validate_compressed_sparse_indic": 1909, "_validate_sparse_bsc_tensor_arg": 1909, "_validate_sparse_bsr_tensor_arg": 1909, "_validate_sparse_compressed_tensor_arg": 1909, "_validate_sparse_coo_tensor_arg": 1909, "_validate_sparse_csc_tensor_arg": 1909, "_validate_sparse_csr_tensor_arg": 1909, "_values_copi": 1909, "_weight_norm_interfac": 1909, "capit": 1909, "confirmed_by_own": [1909, 1919], "convolution_overrid": 1909, "copy_sparse_to_spars": 1909, "endswith": 1909, "expandtab": 1909, "fake_quantize_per_channel_affine_cachemask": 1909, "fake_quantize_per_tensor_affine_cachemask": 1909, "fill_diagon": 1909, "glu_jvp": 1909, "has_torch_funct": [1909, 1934], "is_non_overlapping_and_dens": 1909, "is_own": 1909, "is_strides_like_format": 1909, "isalnum": 1909, "isalpha": 1909, "isdecim": 1909, "isdigit": 1909, "isidentifi": 1909, "islow": 1909, "isnumer": 1909, "isprint": 1909, "isspac": 1909, "istitl": 1909, "isupp": 1909, "lift_fresh": 1909, "lift_fresh_copi": 1909, "ljust": 1909, "local_valu": [1909, 1912], "log_sigmoid_forward": 1909, "lstrip": 1909, "matrix_h": 1909, "nll_loss2d_forward": 1909, "nll_loss_forward": 1909, "normal_funct": 1909, "owner_nam": 1909, "percentformat": 1909, "quantized_gru": 1909, "quantized_lstm": 1909, "resize_as_spars": 1909, "rfind": 1909, "rindex": 1909, "rjust": 1909, "rpartit": 1909, "rsplit": 1909, "rstrip": 1909, "set_data": 1909, "slow_conv3d_forward": 1909, "sparse_res": 1909, "sparse_resize_and_clear": 1909, "splitlin": 1909, "startswith": 1909, "swapcas": 1909, "sym_numel": 1909, "sym_siz": 1909, "sym_storage_offset": 1909, "sym_strid": 1909, "unique_dim_consecut": 1909, "zfill": 1909, "_allgather_bas": 1909, "_reduce_scatter_bas": 1909, "allgath": 1909, "allgather_coalesc": 1909, "allgather_into_tensor_coalesc": 1909, "allreduce_coalesc": 1909, "alltoal": 1909, "alltoall_bas": 1909, "recv_any_sourc": 1909, "debugprim": 1909, "load_tensor": 1909, "_mkl_linear": 1909, "_mkl_reorder_linear_weight": 1909, "_convolution_pointwis": 1909, "_convolution_transpose_pointwis": 1909, "_is_mkldnn_bf16_support": 1909, "_linear_pointwis": 1909, "_reorder_convolution_transpose_weight": 1909, "_reorder_linear_weight": 1909, "mkldnn_prepack": 1909, "conv2d_run": 1909, "nvprim": 1909, "conv2d_clamp_prepack": 1909, "conv2d_clamp_run": 1909, "conv2d_transpose_clamp_prepack": 1909, "conv2d_transpose_clamp_run": 1909, "linear_clamp_prepack": 1909, "linear_clamp_run": 1909, "unpack_prepacked_sizes_conv2d": 1909, "unpack_prepacked_sizes_linear": 1909, "addstatvalu": 1909, "autogradadd": 1909, "autogradallnonzero": 1909, "autogradallzero": 1909, "autogradanynonzero": 1909, "autogradzero": 1909, "bailouttempl": 1909, "broadcastmkldnntensor": 1909, "broadcasts": 1909, "chunksiz": 1909, "constantmkldnntensor": 1909, "differentiablegraph": 1909, "enumnam": 1909, "enumvalu": 1909, "fallbackgraph": 1909, "fusedconcat": 1909, "fusiongroup": 1909, "ifthenels": 1909, "ignoredpythonop": 1909, "mkldnnclamp": 1909, "mkldnnhardsigmoid": 1909, "mkldnnhardswish": 1909, "mkldnnhardtanh": 1909, "mkldnnlayernorm": 1909, "mkldnnscalarmul": 1909, "mmbatchsid": 1909, "mmtreereduc": 1909, "modulecontainerindex": 1909, "numtotensor": 1909, "raiseexcept": 1909, "reductions": 1909, "requiresgradcheck": 1909, "staticruntimecopyout": 1909, "staticsubgraph": 1909, "stringindex": 1909, "tensorexprdynamicgroup": 1909, "tensorexprdynamicguard": 1909, "tensorexprgroup": 1909, "timepoint": 1909, "tupleindex": 1909, "tupleunpack": 1909, "varconcat": 1909, "varstack": 1909, "awaitable_nowait": 1909, "awaitable_wait": 1909, "is_cpu": 1909, "is_ipu": 1909, "is_mkldnn": 1909, "is_mp": 1909, "is_nest": 1909, "is_ort": 1909, "is_quant": 1909, "is_vulkan": 1909, "is_xpu": 1909, "onednnfusiongroup": 1909, "onednnfusionguard": 1909, "profile_ivalu": 1909, "rangelist": 1909, "rpc_remot": 1909, "unchecked_unwrap_opt": 1909, "_call_end_callbacks_on_jit_fut": 1909, "_record_function_ent": 1909, "_record_function_enter_new": 1909, "_record_function_exit": 1909, "_bfloat16quantizedtofloat": 1909, "_floattobfloat16quant": 1909, "add_out": 1909, "add_relu_out": 1909, "add_scalar_out": 1909, "add_scalar_relu": 1909, "add_scalar_relu_out": 1909, "batch_norm1d": 1909, "batch_norm1d_relu": 1909, "batch_norm2d": 1909, "batch_norm2d_relu": 1909, "batch_norm3d": 1909, "batch_norm3d_relu": 1909, "batch_norm_relu": 1909, "cat_out": 1909, "cat_relu": 1909, "cat_relu_out": 1909, "conv1d_dynam": 1909, "conv1d_prepack": 1909, "conv1d_unpack": 1909, "conv2d_add": 1909, "conv2d_add_relu": 1909, "conv2d_dil": 1909, "conv2d_dynam": 1909, "conv2d_group": 1909, "conv2d_output_pad": 1909, "conv2d_pad": 1909, "conv2d_strid": 1909, "conv2d_transpos": 1909, "conv2d_unpack": 1909, "conv2d_unpack_s": 1909, "conv3d_dil": 1909, "conv3d_dynam": 1909, "conv3d_group": 1909, "conv3d_output_pad": 1909, "conv3d_pad": 1909, "conv3d_strid": 1909, "conv3d_transpos": 1909, "conv3d_unpack": 1909, "conv_prepack": 1909, "conv_transpose1d_dynam": 1909, "conv_transpose1d_unpack": 1909, "conv_transpose2d_dil": 1909, "conv_transpose2d_dynam": 1909, "conv_transpose2d_group": 1909, "conv_transpose2d_output_pad": 1909, "conv_transpose2d_pad": 1909, "conv_transpose2d_strid": 1909, "conv_transpose2d_transpos": 1909, "conv_transpose2d_unpack": 1909, "conv_transpose3d_dil": 1909, "conv_transpose3d_dynam": 1909, "conv_transpose3d_group": 1909, "conv_transpose3d_output_pad": 1909, "conv_transpose3d_pad": 1909, "conv_transpose3d_strid": 1909, "conv_transpose3d_transpos": 1909, "conv_transpose3d_unpack": 1909, "conv_unpack": 1909, "embedding_4bit": 1909, "embedding_bag_2bit_prepack": 1909, "embedding_bag_2bit_rowwise_offset": 1909, "embedding_bag_2bit_unpack": 1909, "embedding_bag_4bit": 1909, "embedding_bag_4bit_prepack": 1909, "embedding_bag_4bit_rowwise_offset": 1909, "embedding_bag_4bit_unpack": 1909, "embedding_bag_byt": 1909, "embedding_bag_byte_prepack": 1909, "embedding_bag_byte_rowwise_offset": 1909, "embedding_bag_byte_unpack": 1909, "embedding_bag_prepack": 1909, "embedding_bag_unpack": 1909, "embedding_byt": 1909, "linear_dynamic_fp16": 1909, "linear_leaky_relu": 1909, "linear_relu": [1909, 1916], "linear_relu_dynam": 1909, "linear_relu_dynamic_fp16": 1909, "linear_tanh": 1909, "linear_unpack": 1909, "linear_unpack_fp16": 1909, "linear_with_input_q_dq_qweight_dq_output_fp32": 1909, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1909, "make_quantized_cell_param": 1909, "make_quantized_cell_params_dynam": 1909, "make_quantized_cell_params_fp16": 1909, "mul_out": 1909, "mul_relu": 1909, "mul_relu_out": 1909, "mul_scalar_out": 1909, "mul_scalar_relu": 1909, "mul_scalar_relu_out": 1909, "quantized_gru_cell_dynam": 1909, "quantized_lstm_cell_dynam": 1909, "quantized_rnn_relu_cell_dynam": 1909, "quantized_rnn_tanh_cell_dynam": 1909, "rngprim": 1909, "philox_rand": 1909, "qlinear": 1909, "qlinear_dynam": 1909, "qlinear_prepack": 1909, "qlinear_relu": 1909, "qlinear_relu_dynam": 1909, "qlinear_unpack": 1909, "static_runtim": 1909, "vartupleunpack": 1909, "clamp_nan_to_num": 1909, "create_owned_ref": 1909, "dequantize_copi": 1909, "dict_unpack": 1909, "expand_dims_copi": 1909, "flatten_copi": 1909, "fused_equally_split": 1909, "reshape_copi": 1909, "select_tensor": 1909, "signed_log1p": 1909, "to_copi": 1909, "to_maybe_copy_out": 1909, "var1": 1910, "var2": 1910, "lbfg": 1910, "adadelta": 1910, "adamax": 1910, "asgd": 1910, "nadam": 1910, "radam": 1910, "rmsprop": 1910, "rprop": 1910, "reducelronplateau": 1910, "multisteplr": 1910, "upgrad": [1910, 1930], "swa_util": 1910, "averagedmodel": 1910, "swalr": 1910, "update_bn": 1910, "optima": 1910, "polyak": 1910, "averaged_model": 1910, "multi_avg_fn": 1910, "get_ema_multi_avg_fn": 1910, "textrm": 1910, "update_paramet": 1910, "avg_fn": 1910, "_foreach": 1910, "ema_model": 1910, "ema_avg": 1910, "averaged_model_paramet": 1910, "model_paramet": 1910, "num_averag": 1910, "swa_schedul": 1910, "anneal_epoch": 1910, "swa_lr": 1910, "swa_model": 1910, "cosineannealinglr": 1910, "swa_start": 1910, "test_input": 1910, "secur": 1911, "unpackag": 1911, "exercis": 1911, "unzip": 1911, "my_packag": 1911, "freeli": 1911, "94304870911616": 1911, "94304900784016": 1911, "extern_modul": 1911, "model_1": 1911, "pkl": 1911, "myzip": 1911, "file_byt": 1911, "writestr": 1911, "new_file_byt": 1911, "vim": 1911, "vimrc": 1911, "bufreadcmd": 1911, "brows": 1911, "amatch": 1911, "vi": 1911, "packageimport": 1911, "queryabl": 1911, "glob": 1911, "packageexport": 1911, "pe": 1911, "save_pickl": 1911, "has_fil": 1911, "importer_file_structur": 1911, "package_a": 1911, "get_rdep": 1911, "all_path": 1911, "dependency_graph_str": 1911, "save_text": 1911, "save_binari": 1911, "my_resourc": 1911, "config_stuff": 1911, "raw_data": 1911, "my_byt": 1911, "complementari": [1911, 1924], "load_pickl": 1911, "load_text": 1911, "load_binari": 1911, "my_tensor": 1911, "__reduce_package__": 1911, "my_str": 1911, "time_import": 1911, "time_export": 1911, "pickler": 1911, "persistent_id": 1911, "persistent_load": 1911, "generated_module_nam": 1911, "get_unique_id": 1911, "clock_gettim": 1911, "unpackage_foo": 1911, "depickl": 1911, "foo_1": 1911, "foo_2": 1911, "foo_packag": 1911, "foo_collect": 1911, "foo1": 1911, "foo2": 1911, "imported_foo": 1911, "9857706": 1911, "650140837": 1911, "652698385": 1911, "__torch_package__": 1911, "is_in_packag": 1911, "userexcept": 1911, "unpackageableexcept": 1911, "loaded_modul": 1911, "import_modul": 1911, "save_source_str": 1911, "save_modul": 1911, "textwrap": 1911, "dedent": 1911, "is_packag": 1911, "importlib": 1911, "my_pickl": 1911, "get_my_resourc": 1911, "read_text": 1911, "torch_package_import": 1911, "get_my_pickl": 1911, "is_from_packag": 1911, "stdlib": 1911, "my_test": 1911, "f2": [1911, 1912], "sys_import": 1911, "script_model": 1911, "mixed_model": 1911, "python_model_with_scripted_submodul": 1911, "loaded_script": 1911, "loaded_mix": 1911, "convention": 1911, "94286146172688": 1911, "94286146172784": 1911, "essai": 1911, "another_packag": 1911, "pickletool": 1911, "ast": 1911, "deni": 1911, "my_export": 1911, "my_interned_modul": 1911, "package_export": 1911, "my_externed_modul": 1911, "my_mocked_modul": 1911, "unwant": [1911, 1928], "hodg": 1911, "podg": 1911, "bazel": 1911, "buck": 1911, "my_class_inst": 1911, "imported_myclass": 1911, "okai": 1911, "torch_package_0": 1911, "handle_me_this_wai": 1911, "inadvert": 1911, "pun": 1911, "packagingerror": 1911, "dependency_graph": 1911, "emptymatcherror": 1911, "allow_empti": 1911, "_sysimport": 1911, "hermet": 1911, "scan": 1911, "orderedimport": 1911, "add_depend": 1911, "graphviz": 1911, "lang": 1911, "denied_modul": 1911, "my_subpackag": 1911, "digraph": 1911, "externed_modul": 1911, "interned_modul": 1911, "mocked_modul": 1911, "register_extern_hook": 1911, "register_intern_hook": 1911, "register_mock_hook": 1911, "myobject": 1911, "save_source_fil": 1911, "file_or_directori": 1911, "my_subsubpackag": 1911, "file_or_buff": 1911, "module_allow": 1911, "pytorchfileread": 1911, "python_vers": 1911, "is_dir": 1911, "gpipe": 1912, "suffer": 1912, "microbatch": 1912, "bubbl": 1912, "except_last": 1912, "deferred_batch_norm": 1912, "torchgpip": 1912, "withdevic": 1912, "micro": 1912, "fc": [1912, 1914], "init_rpc": [1912, 1919, 1920], "output_rref": 1912, "fed": [1912, 1928], "nochunk": 1912, "resnext": 1912, "till": 1912, "skippabl": 1912, "perfectli": 1912, "1to3": 1912, "layer1": 1912, "f1": 1912, "layer2": 1912, "layer3": 1912, "skip_1to3": 1912, "f3": 1912, "alic": 1912, "bob": 1912, "carol": 1912, "stashstashpop": 1912, "f_alic": 1912, "f_bob": 1912, "verify_skipp": 1912, "unmatch": [1912, 1933], "fairscal": 1912, "_kinetoprofil": 1913, "profileract": 1913, "add_metadata": 1913, "add_metadata_json": 1913, "unaggreg": 1913, "export_chrome_trac": 1913, "export_memory_timelin": 1913, "gzip": 1913, "export_stack": 1913, "self_cuda_time_tot": 1913, "flamegraph": 1913, "brendangregg": 1913, "pl": 1913, "countnam": 1913, "perf_viz": 1913, "svg": 1913, "on_trace_readi": 1913, "record_and_sav": 1913, "tensorboard_trace_handl": 1913, "dir_nam": 1913, "logdir": [1913, 1928], "code_to_profil": 1913, "row_limit": 1913, "trace_handl": 1913, "test_trace_": 1913, "step_num": 1913, "code_iteration_to_profil": 1913, "mtia": 1913, "skip_first": 1913, "worker_nam": [1913, 1919], "use_gzip": 1913, "range_push": 1913, "range_pop": 1913, "4x": 1914, "broadli": 1914, "domin": 1914, "previous_layer_fp32": 1914, "linear_fp32": 1914, "activation_fp32": 1914, "next_layer_fp32": 1914, "linear_weight_fp32": 1914, "linear_int8_w_fp32_inp": 1914, "linear_weight_int8": 1914, "ptdq": 1914, "model_fp32": 1914, "model_int8": 1914, "quantize_dynam": 1914, "input_fp32": 1914, "previous_layer_int8": 1914, "linear_with_activation_int8": 1914, "next_layer_int8": 1914, "ptsq": 1914, "minmax": 1914, "l2norm": 1914, "model_fp32_fus": 1914, "fuse_modul": [1914, 1915], "model_fp32_prepar": 1914, "fq": 1914, "prepare_qat": 1914, "training_loop": 1914, "requant": 1914, "linear1": 1914, "custom_qconfig": 1914, "fxptq": 1914, "model_fp": 1914, "usermodel": 1914, "model_to_quant": 1914, "default_dynamic_qconfig": 1914, "model_prepar": 1914, "model_quant": 1914, "model_fus": 1914, "per_tensor_symmetr": [1914, 1917], "per_channel_symmetr": [1914, 1917], "per_channel_scal": 1914, "per_channel_zero_point": 1914, "quantized_tensor": 1914, "qengin": 1914, "in4": 1914, "fx2trt": 1914, "float_modul": [1914, 1932], "staticquantcustommodul": 1914, "observed_modul": 1914, "default_qconfig": [1914, 1933], "test_quantized_op": 1914, "testquantizedop": 1914, "test_custom_module_lstm": 1914, "test_quantize_fx": 1914, "testquantizefx": 1914, "test_static_lstm": 1914, "some_oper": 1914, "e2": 1914, "thnn_conv2d_forward": 1914, "quantizedcpu": 1914, "some_qconfig": 1914, "linearpackedparam": 1914, "_modul": 1914, "prepare_orig": 1914, "quantized_orig": 1914, "scripted_quant": 1914, "fp32_op": 1915, "int8_op": 1915, "cooperlak": 1915, "audit": 1915, "op_fp32": 1915, "op_int8": 1915, "_numeric_suit": 1915, "_numeric_suite_fx": 1915, "0x7f8b6c4c4680": 1916, "0x7f8b582c9280": 1916, "0x7f8b582c9310": 1916, "num_tensor_args_to_observation_typ": 1916, "convbn1d": 1916, "0x7f8b5774bdc0": 1916, "reference_quantized_module_for_root": 1916, "fuse_convtranspose_bn": 1916, "0x7f8b5774bf70": 1916, "linearbn1d": 1916, "fuse_linear_bn": 1916, "0x7f8b5774bee0": 1916, "convbn2d": 1916, "convbn3d": 1916, "bnrelu2d": 1916, "bnrelu3d": 1916, "input_type_to_index": 1916, "conv_fus": 1916, "convbnrelu1d": 1916, "convbnrelu2d": 1916, "convbnrelu3d": 1916, "convrelu1d": 1916, "convrelu3d": 1916, "0x7f8b582c93a0": 1916, "0x7f8b582c99d0": 1916, "quint4x2": [1916, 1925, 1929, 1930], "embedding_op": 1916, "0x7f8b582cd8b0": 1916, "00390625": 1916, "0x7f8b582cd1f0": 1916, "0x7f8b582cd3a0": 1916, "0x7f8b582c98b0": 1916, "0x7f8b582cd790": 1916, "0x7f8b582c1f70": 1916, "0x7f8b582cd820": 1916, "0x7f8b582c9b80": 1916, "linear_fus": 1916, "_sequential_wrapper2": 1916, "0x7f8b73611430": 1916, "0x7f8b582c9790": 1916, "0x7f8b555c4550": 1916, "fuse_conv_bn_relu": 1916, "0x7f8b5774be50": 1916, "0x7f8b555c45e0": 1916, "0x7f8b555c4670": 1916, "0x7f8b555c4700": 1916, "0x7f8b555c4790": 1916, "0x7f8b555c4820": 1916, "0x7f8b555c48b0": 1916, "0x7f8b555c4940": 1916, "0x7f8b555c49d0": 1916, "0x7f8b555c4a60": 1916, "0x7f8b555c4af0": 1916, "0x7f8b582c9940": 1916, "0078125": 1916, "customconfig": 1917, "custom_module_config": 1917, "_caller": 1918, "_devices_kw": 1918, "slowli": 1918, "unind": 1918, "deivc": 1918, "privateuse1": 1918, "shortcom": 1919, "stitch": 1919, "rpc_backend_opt": 1919, "trainer3": 1919, "parameterserver2": 1919, "dash": [1919, 1921], "backendtyp": 1919, "rpcbackendopt": 1919, "rpcagent": 1919, "transmit": 1919, "calle": [1919, 1921], "_set_rpc_timeout": 1919, "5678": 1919, "worker0": 1919, "my_script_add": 1919, "wire": 1919, "fut2": 1919, "meth": 1919, "grace": 1919, "userrref": [1919, 1921], "async_execut": 1919, "paus": 1919, "outmost": 1919, "async_add_chain": 1919, "worker2": 1919, "script_add": 1919, "async_add": 1919, "asyncexecutionclass": 1919, "static_async_add": 1919, "class_async_add": 1919, "ret_fut": 1919, "bound_async_add": 1919, "rpc_timeout": 1919, "incid": [1919, 1921], "nvlink": 1919, "multiplex": 1919, "tensorpiperpcbackendopt": 1919, "num_worker_thread": 1919, "device_map": 1919, "_transport": 1919, "tensorpipeag": 1919, "set_device_map": 1919, "intermitt": 1919, "remote_modul": 1919, "forward_async": 1919, "remote_devic": 1919, "workernam": 1919, "trainer0": 1919, "ps0": 1919, "remote_linear_modul": 1919, "get_module_rref": 1919, "remote_paramet": 1919, "my_add": [1920, 1934], "t4": 1920, "t5": 1920, "autograd_message_id": 1920, "autograd_context_id": 1920, "send1": 1920, "kickoff": 1920, "recv2": 1920, "heard": 1920, "send2": 1920, "recv1": 1920, "dist_autograd_simpl": 1920, "random_tensor": 1920, "_run_process": 1920, "dst_rank": 1920, "dst_name": 1920, "run_process": 1920, "rrefid": 1921, "ownerrref": 1921, "transient": 1921, "udf": 1921, "deliveri": 1921, "knowledg": 1921, "danger": 1921, "ancestor": 1921, "trickier": 1921, "forkid": 1921, "ack": 1921, "solid": 1921, "gc": 1921, "followup": 1921, "lil": 1923, "stark": 1923, "9093": 1923, "1411": 1923, "7568": 1923, "9589": 1923, "2794": 1923, "catastroph": 1923, "9900": 1923, "000": 1923, "400": 1923, "s2": 1923, "plain_dim_s": 1923, "lp64": 1923, "280": 1923, "310": 1923, "sp": 1923, "9078": 1923, "conception": 1923, "lobpcg": 1923, "geneig": 1923, "pca_lowrank": 1923, "kindli": 1923, "airy_ai": 1924, "airi": 1924, "onward": 1924, "9635": 1924, "entr": 1924, "3466": 1924, "int_": 1924, "8427": 1924, "0561": 1924, "4769": 1924, "9213": 1924, "8858": 1924, "7683": 1924, "7481": 1924, "2920": 1924, "int_0": 1924, "gammaln": 1924, "a1": 1924, "a2": 1924, "3528": 1924, "5665": 1924, "6472": 1924, "4335": 1924, "2650": 1924, "2661": 1924, "2796": 1924, "8808": 1924, "3019": 1924, "4658": 1924, "3085": 1924, "2430": 1924, "2070": 1924, "i1": 1924, "5652": 1924, "9534": 1924, "7595": 1924, "2153": 1924, "log_ndtr": 1924, "_ndtr": 1924, "6077": 1924, "7832": 1924, "841": 1924, "6931": 1924, "1728": 1924, "023": 1924, "9331": 1924, "6486": 1924, "1523": 1924, "6516": 1924, "6352": 1924, "6131": 1924, "7169": 1924, "6261": 1924, "displaystyl": 1924, "undefiend": 1924, "6835": 1924, "8474": 1924, "1929": 1924, "7162": 1924, "4180": 1924, "3928": 1924, "4007": 1924, "7586": 1924, "3901": 1924, "5049": 1924, "ndtr": 1924, "0228": 1924, "1587": 1924, "9772": 1924, "9987": 1924, "2p": 1924, "64493": 1924, "4041": 1924, "8288": 1924, "4939": 1924, "97": 1924, "4091": 1924, "8863": 1924, "771": 1924, "scaled_modified_bessel_k0": 1924, "scaled_modified_bessel_k1": 1924, "2948": 1924, "0267": 1924, "1566": 1924, "9186": 1924, "8631": 1924, "0259": 1924, "1300": 1924, "spheric": 1924, "xlog1pi": 1924, "3863": 1924, "1972": 1924, "6094": 1924, "2189": 1924, "8283": 1924, "7726": 1924, "0986": 1924, "1589": 1924, "hurwitz": 1924, "6449": 1924, "0823": 1924, "untyp": 1925, "wrap_storag": 1925, "complex_doubl": 1925, "from_buff": 1925, "pickle_storage_typ": 1925, "byteswap": 1925, "quint2x4": [1925, 1930], "twelv": 1926, "halftensor": [1926, 1929], "bfloat16tensor": [1926, 1929], "chartensor": [1926, 1929], "shorttensor": [1926, 1929], "binary16": [1926, 1929], "significand": [1926, 1929], "float_tensor": 1926, "double_tensor": 1926, "complex_float_tensor": 1926, "complex_double_tensor": 1926, "int_tensor": 1926, "long_tensor": 1926, "uint_tensor": 1926, "bool_tensor": 1926, "long_zerodim": 1926, "int_zerodim": 1926, "set_default_devic": 1926, "cuda1": 1926, "nhwc": [1926, 1928], "channels_last_3d": 1926, "ndhwc": 1926, "blogpost": 1927, "totensor": 1928, "trainset": 1928, "mnist": 1928, "mnist_train": 1928, "trainload": 1928, "grayscal": 1928, "make_grid": 1928, "add_imag": 1928, "add_graph": 1928, "clutter": 1928, "n_iter": 1928, "purge_step": 1928, "max_queu": 1928, "flush_sec": 1928, "filename_suffix": 1928, "current_datetime_hostnam": 1928, "exp1": 1928, "suffix": [1928, 1929], "global_step": 1928, "purg": 1928, "event_file_writ": 1928, "eventfilewrit": 1928, "may04_22": 1928, "54_": 1928, "macbook": 1928, "my_experi": 1928, "lr_0": 1928, "1_batch_16": 1928, "locallr_0": 1928, "scalar_valu": 1928, "walltim": 1928, "new_styl": 1928, "double_precis": 1928, "blobnam": 1928, "simple_valu": 1928, "main_tag": 1928, "tag_scalar_dict": 1928, "run_14h": 1928, "xsinx": 1928, "xcosx": 1928, "tanx": 1928, "add_histogram": 1928, "max_bin": 1928, "fd": 1928, "img_tensor": 1928, "dataformat": 1928, "chw": 1928, "hwc": 1928, "hw": 1928, "wh": 1928, "3xhxw": 1928, "img_hwc": 1928, "my_imag": 1928, "my_image_hwc": 1928, "img_batch": 1928, "my_image_batch": 1928, "add_figur": 1928, "add_video": 1928, "vid_tensor": 1928, "fp": 1928, "moviepi": 1928, "add_audio": 1928, "snd_tensor": 1928, "sample_r": 1928, "44100": 1928, "add_text": 1928, "text_str": 1928, "input_to_model": 1928, "use_strict_trac": 1928, "add_embed": 1928, "label_img": 1928, "metadata_head": 1928, "projector": 1928, "kwlist": 1928, "add_pr_curv": 1928, "num_threshold": 1928, "pr_curv": 1928, "add_custom_scalar": 1928, "chart": 1928, "categorynam": 1928, "chartnam": 1928, "listofproperti": 1928, "multilin": 1928, "taiwan": 1928, "twse": 1928, "0050": 1928, "2330": 1928, "dow": 1928, "aaa": 1928, "bbb": 1928, "ccc": 1928, "nasdaq": 1928, "add_mesh": 1928, "config_dict": 1928, "threej": 1928, "vertex": 1928, "number_of_vertic": 1928, "vertices_tensor": 1928, "colors_tensor": 1928, "faces_tensor": 1928, "my_mesh": 1928, "add_hparam": 1928, "hparam_dict": 1928, "metric_dict": 1928, "hparam_domain_discret": 1928, "run_nam": 1928, "hparam": 1928, "bsize": 1928, "_like": 1929, "allow_subclass": 1930, "check_devic": 1930, "check_layout": 1930, "6e": 1930, "3e": 1930, "assert_equ": 1930, "000000000000001e": 1930, "1e0": 1930, "argh": 1930, "nfooter": 1930, "66": 1930, "footer": 1930, "exclude_zero": 1930, "1205": 1930, "2282": 1930, "6380": 1930, "default_gener": 1931, "data_dependent_output": 1931, "dynamic_output_shap": 1931, "inplace_view": 1931, "nondeterministic_bitwis": 1931, "nondeterministic_seed": 1931, "compare_weight": 1932, "float_dict": 1932, "quantized_dict": 1932, "wt_compare_dict": 1932, "qmodel": 1932, "compute_error": 1932, "weight_dict": 1932, "get_logger_dict": 1932, "shadowlogg": 1932, "outputlogg": [1932, 1933], "target_dict": 1932, "q_modul": 1932, "logger_cl": [1932, 1933], "prepare_model_with_stub": 1932, "module_swap_list": 1932, "q_model": 1932, "ob_dict": 1932, "compare_model_stub": 1932, "quantizablebasicblock": 1932, "get_matching_activ": 1932, "act_dict": 1932, "prepare_model_output": 1932, "compare_model_output": 1932, "act_compare_dict": 1932, "weight_comparison": 1933, "extract_weight": 1933, "sqnr": 1933, "extend_logger_results_with_comparison": 1933, "compute_sqnr": 1933, "mp_n": 1933, "mq_n": 1933, "add_logg": 1933, "act_comparison": 1933, "extract_logger_info": 1933, "mp_shadows_mq": 1933, "add_shadow_logg": 1933, "shadow_act_comparison": 1933, "extract_shadow_logger_info": 1933, "ref_node_nam": 1933, "prev_node_nam": 1933, "model_nam": 1933, "ref_nam": 1933, "prev_node_target_typ": 1933, "ref_node_target_typ": 1933, "results_typ": 1933, "index_within_arg": 1933, "index_of_arg": 1933, "qconfig_str": 1933, "outputcomparisonlogg": 1933, "x_ref": 1933, "nstracer": 1933, "skipped_module_nam": 1933, "skipped_module_class": 1933, "model_name_a": 1933, "model_a": 1933, "model_name_b": 1933, "model_b": 1933, "base_name_to_sets_of_related_op": 1933, "unmatchable_types_map": 1933, "op_to_type_to_weight_extraction_fn": 1933, "nsresultstyp": 1933, "name_a": 1933, "name_b": 1933, "should_log_input": 1933, "model_a_with_logg": 1933, "model_b_with_logg": 1933, "model_name_to_use_for_layer_nam": 1933, "node_type_to_io_type_map": 1933, "model_a_shadows_b": 1933, "model_name_1": 1933, "model_name_2": 1933, "comparison_fn": 1933, "comparison_nam": 1933, "prepare_n_shadows_model": 1933, "qconfig_multi_map": 1933, "custom_prepare_fn": 1933, "custom_prepare_kwarg": 1933, "custom_trac": 1933, "args_kwargs_m": 1933, "op_m": 1933, "output_m": 1933, "op_m_n": 1933, "log_m_n": 1933, "log_m_0": 1933, "qconfig_n": 1933, "args_m": 1933, "op_m_prepared_with_qconfig_n": 1933, "out_m_n": 1933, "kwargs_m": 1933, "docblock": 1933, "loggers_set_en": 1933, "loggers_set_save_activ": 1933, "save_activ": 1933, "convert_n_shadows_model": 1933, "custom_convert_fn": 1933, "custom_convert_kwarg": 1933, "extract_results_n_shadows_model": 1933, "print_comparisons_n_shadows_model": 1933, "compute_normalized_l2_error": 1933, "compute_cosine_similar": 1933, "as_subclass": 1934, "resolve_nam": 1934, "handle_torch_funct": 1934, "public_api": 1934, "relevant_arg": 1934, "has_torch_function_unari": 1934, "is_tensor_lik": 1934, "notatensor": 1934, "tensorlik": 1934, "is_tensor_method_or_properti": 1934, "__get__": 1934, "__module__": 1934, "slot": 1934, "wrap_torch_funct": 1934, "smallest_norm": 1935, "subnorm": 1935, "denormal_numb": 1935}, "objects": {"": [[1931, 0, 0, "-", "torch"], [1866, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1925, 1, 1, "", "BFloat16Storage"], [1925, 1, 1, "", "BoolStorage"], [1925, 1, 1, "", "ByteStorage"], [1925, 1, 1, "", "CharStorage"], [1925, 1, 1, "", "ComplexDoubleStorage"], [1925, 1, 1, "", "ComplexFloatStorage"], [1925, 1, 1, "", "DoubleStorage"], [1925, 1, 1, "", "FloatStorage"], [89, 1, 1, "", "Generator"], [1925, 1, 1, "", "HalfStorage"], [1925, 1, 1, "", "IntStorage"], [1925, 1, 1, "", "LongStorage"], [1925, 1, 1, "", "QInt32Storage"], [1925, 1, 1, "", "QInt8Storage"], [1925, 1, 1, "", "QUInt2x4Storage"], [1925, 1, 1, "", "QUInt4x2Storage"], [1925, 1, 1, "", "QUInt8Storage"], [1925, 1, 1, "", "ShortStorage"], [1931, 1, 1, "", "SymBool"], [1931, 1, 1, "", "SymFloat"], [1931, 1, 1, "", "SymInt"], [1931, 1, 1, "", "Tag"], [1929, 1, 1, "", "Tensor"], [1925, 1, 1, "", "TypedStorage"], [1925, 1, 1, "", "UntypedStorage"], [31, 0, 0, "-", "__config__"], [621, 5, 1, "", "_assert"], [622, 5, 1, "", "_foreach_abs"], [623, 5, 1, "", "_foreach_abs_"], [624, 5, 1, "", "_foreach_acos"], [625, 5, 1, "", "_foreach_acos_"], [626, 5, 1, "", "_foreach_asin"], [627, 5, 1, "", "_foreach_asin_"], [628, 5, 1, "", "_foreach_atan"], [629, 5, 1, "", "_foreach_atan_"], [630, 5, 1, "", "_foreach_ceil"], [631, 5, 1, "", "_foreach_ceil_"], [632, 5, 1, "", "_foreach_cos"], [633, 5, 1, "", "_foreach_cos_"], [634, 5, 1, "", "_foreach_cosh"], [635, 5, 1, "", "_foreach_cosh_"], [636, 5, 1, "", "_foreach_erf"], [637, 5, 1, "", "_foreach_erf_"], [638, 5, 1, "", "_foreach_erfc"], [639, 5, 1, "", "_foreach_erfc_"], [640, 5, 1, "", "_foreach_exp"], [641, 5, 1, "", "_foreach_exp_"], [642, 5, 1, "", "_foreach_expm1"], [643, 5, 1, "", "_foreach_expm1_"], [644, 5, 1, "", "_foreach_floor"], [645, 5, 1, "", "_foreach_floor_"], [646, 5, 1, "", "_foreach_frac"], [647, 5, 1, "", "_foreach_frac_"], [648, 5, 1, "", "_foreach_lgamma"], [649, 5, 1, "", "_foreach_lgamma_"], [650, 5, 1, "", "_foreach_log"], [651, 5, 1, "", "_foreach_log10"], [652, 5, 1, "", "_foreach_log10_"], [653, 5, 1, "", "_foreach_log1p"], [654, 5, 1, "", "_foreach_log1p_"], [655, 5, 1, "", "_foreach_log2"], [656, 5, 1, "", "_foreach_log2_"], [657, 5, 1, "", "_foreach_log_"], [658, 5, 1, "", "_foreach_neg"], [659, 5, 1, "", "_foreach_neg_"], [660, 5, 1, "", "_foreach_reciprocal"], [661, 5, 1, "", "_foreach_reciprocal_"], [662, 5, 1, "", "_foreach_round"], [663, 5, 1, "", "_foreach_round_"], [664, 5, 1, "", "_foreach_sigmoid"], [665, 5, 1, "", "_foreach_sigmoid_"], [666, 5, 1, "", "_foreach_sin"], [667, 5, 1, "", "_foreach_sin_"], [668, 5, 1, "", "_foreach_sinh"], [669, 5, 1, "", "_foreach_sinh_"], [670, 5, 1, "", "_foreach_sqrt"], [671, 5, 1, "", "_foreach_sqrt_"], [672, 5, 1, "", "_foreach_tan"], [673, 5, 1, "", "_foreach_tan_"], [674, 5, 1, "", "_foreach_trunc"], [675, 5, 1, "", "_foreach_trunc_"], [676, 5, 1, "", "_foreach_zero_"], [1875, 0, 0, "-", "_logging"], [678, 5, 1, "", "abs"], [679, 5, 1, "", "absolute"], [680, 5, 1, "", "acos"], [681, 5, 1, "", "acosh"], [682, 5, 1, "", "add"], [683, 5, 1, "", "addbmm"], [684, 5, 1, "", "addcdiv"], [685, 5, 1, "", "addcmul"], [686, 5, 1, "", "addmm"], [687, 5, 1, "", "addmv"], [688, 5, 1, "", "addr"], [689, 5, 1, "", "adjoint"], [690, 5, 1, "", "all"], [691, 5, 1, "", "allclose"], [692, 5, 1, "", "amax"], [693, 5, 1, "", "amin"], [694, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [695, 5, 1, "", "angle"], [696, 5, 1, "", "any"], [1914, 0, 0, "-", "ao"], [862, 5, 1, "", "arange"], [863, 5, 1, "", "arccos"], [864, 5, 1, "", "arccosh"], [865, 5, 1, "", "arcsin"], [866, 5, 1, "", "arcsinh"], [867, 5, 1, "", "arctan"], [868, 5, 1, "", "arctan2"], [869, 5, 1, "", "arctanh"], [870, 5, 1, "", "are_deterministic_algorithms_enabled"], [871, 5, 1, "", "argmax"], [872, 5, 1, "", "argmin"], [873, 5, 1, "", "argsort"], [874, 5, 1, "", "argwhere"], [875, 5, 1, "", "as_strided"], [876, 5, 1, "", "as_tensor"], [877, 5, 1, "", "asarray"], [878, 5, 1, "", "asin"], [879, 5, 1, "", "asinh"], [880, 5, 1, "", "atan"], [881, 5, 1, "", "atan2"], [882, 5, 1, "", "atanh"], [883, 5, 1, "", "atleast_1d"], [884, 5, 1, "", "atleast_2d"], [885, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1931, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [918, 5, 1, "", "baddbmm"], [919, 5, 1, "", "bartlett_window"], [920, 5, 1, "", "bernoulli"], [921, 5, 1, "", "bincount"], [922, 5, 1, "", "bitwise_and"], [923, 5, 1, "", "bitwise_left_shift"], [924, 5, 1, "", "bitwise_not"], [925, 5, 1, "", "bitwise_or"], [926, 5, 1, "", "bitwise_right_shift"], [927, 5, 1, "", "bitwise_xor"], [928, 5, 1, "", "blackman_window"], [929, 5, 1, "", "block_diag"], [930, 5, 1, "", "bmm"], [931, 5, 1, "", "broadcast_shapes"], [932, 5, 1, "", "broadcast_tensors"], [933, 5, 1, "", "broadcast_to"], [934, 5, 1, "", "bucketize"], [935, 5, 1, "", "can_cast"], [936, 5, 1, "", "cartesian_prod"], [937, 5, 1, "", "cat"], [938, 5, 1, "", "cdist"], [939, 5, 1, "", "ceil"], [940, 5, 1, "", "chain_matmul"], [941, 5, 1, "", "cholesky"], [942, 5, 1, "", "cholesky_inverse"], [943, 5, 1, "", "cholesky_solve"], [944, 5, 1, "", "chunk"], [945, 5, 1, "", "clamp"], [946, 5, 1, "", "clip"], [947, 5, 1, "", "clone"], [948, 5, 1, "", "column_stack"], [949, 5, 1, "", "combinations"], [18, 5, 1, "", "compile"], [951, 5, 1, "", "compiled_with_cxx11_abi"], [29, 0, 0, "-", "compiler"], [958, 5, 1, "", "complex"], [959, 5, 1, "", "concat"], [960, 5, 1, "", "concatenate"], [961, 5, 1, "", "conj"], [962, 5, 1, "", "conj_physical"], [1931, 0, 0, "-", "contrib"], [963, 5, 1, "", "copysign"], [964, 5, 1, "", "corrcoef"], [965, 5, 1, "", "cos"], [966, 5, 1, "", "cosh"], [967, 5, 1, "", "count_nonzero"], [968, 5, 1, "", "cov"], [0, 0, 0, "-", "cpu"], [969, 5, 1, "", "cross"], [34, 0, 0, "-", "cuda"], [1048, 5, 1, "", "cummax"], [1049, 5, 1, "", "cummin"], [1050, 5, 1, "", "cumprod"], [1051, 5, 1, "", "cumsum"], [1052, 5, 1, "", "cumulative_trapezoid"], [1053, 5, 1, "", "deg2rad"], [1054, 5, 1, "", "dequantize"], [1055, 5, 1, "", "det"], [1926, 1, 1, "", "device"], [1056, 5, 1, "", "diag"], [1057, 5, 1, "", "diag_embed"], [1058, 5, 1, "", "diagflat"], [1059, 5, 1, "", "diagonal"], [1060, 5, 1, "", "diagonal_scatter"], [1061, 5, 1, "", "diff"], [1062, 5, 1, "", "digamma"], [1063, 5, 1, "", "dist"], [41, 0, 0, "-", "distributed"], [47, 0, 0, "-", "distributions"], [1064, 5, 1, "", "div"], [1065, 5, 1, "", "divide"], [1066, 5, 1, "", "dot"], [1067, 5, 1, "", "dsplit"], [1068, 5, 1, "", "dstack"], [1926, 1, 1, "", "dtype"], [1069, 5, 1, "", "einsum"], [1070, 5, 1, "", "empty"], [1071, 5, 1, "", "empty_like"], [1072, 5, 1, "", "empty_strided"], [1073, 1, 1, "", "enable_grad"], [1074, 5, 1, "", "eq"], [1075, 5, 1, "", "equal"], [1076, 5, 1, "", "erf"], [1077, 5, 1, "", "erfc"], [1078, 5, 1, "", "erfinv"], [1079, 5, 1, "", "exp"], [1080, 5, 1, "", "exp2"], [1081, 5, 1, "", "expm1"], [1082, 5, 1, "", "eye"], [1083, 5, 1, "", "fake_quantize_per_channel_affine"], [1084, 5, 1, "", "fake_quantize_per_tensor_affine"], [62, 0, 0, "-", "fft"], [1107, 5, 1, "", "fix"], [1108, 5, 1, "", "flatten"], [1109, 5, 1, "", "flip"], [1110, 5, 1, "", "fliplr"], [1111, 5, 1, "", "flipud"], [1112, 5, 1, "", "float_power"], [1113, 5, 1, "", "floor"], [1114, 5, 1, "", "floor_divide"], [1115, 5, 1, "", "fmax"], [1116, 5, 1, "", "fmin"], [1117, 5, 1, "", "fmod"], [1118, 5, 1, "", "frac"], [1119, 5, 1, "", "frexp"], [1120, 5, 1, "", "from_dlpack"], [1121, 5, 1, "", "from_numpy"], [1122, 5, 1, "", "frombuffer"], [1123, 5, 1, "", "full"], [1124, 5, 1, "", "full_like"], [65, 0, 0, "-", "func"], [70, 0, 0, "-", "futures"], [71, 0, 0, "-", "fx"], [1138, 5, 1, "", "gather"], [1139, 5, 1, "", "gcd"], [1140, 5, 1, "", "ge"], [1141, 5, 1, "", "geqrf"], [1142, 5, 1, "", "ger"], [1143, 5, 1, "", "get_default_dtype"], [1144, 5, 1, "", "get_deterministic_debug_mode"], [1145, 5, 1, "", "get_float32_matmul_precision"], [1146, 5, 1, "", "get_num_interop_threads"], [1147, 5, 1, "", "get_num_threads"], [1148, 5, 1, "", "get_rng_state"], [1149, 5, 1, "", "gradient"], [1150, 5, 1, "", "greater"], [1151, 5, 1, "", "greater_equal"], [1152, 5, 1, "", "gt"], [1153, 5, 1, "", "hamming_window"], [1154, 5, 1, "", "hann_window"], [1155, 5, 1, "", "heaviside"], [1156, 5, 1, "", "histc"], [1157, 5, 1, "", "histogram"], [1158, 5, 1, "", "histogramdd"], [1159, 5, 1, "", "hsplit"], [1160, 5, 1, "", "hspmm"], [1161, 5, 1, "", "hstack"], [1863, 0, 0, "-", "hub"], [1162, 5, 1, "", "hypot"], [1163, 5, 1, "", "i0"], [1164, 5, 1, "", "igamma"], [1165, 5, 1, "", "igammac"], [1166, 5, 1, "", "imag"], [1167, 5, 1, "", "index_add"], [1168, 5, 1, "", "index_copy"], [1169, 5, 1, "", "index_reduce"], [1170, 5, 1, "", "index_select"], [1171, 1, 1, "", "inference_mode"], [1172, 5, 1, "", "initial_seed"], [1173, 5, 1, "", "inner"], [1174, 5, 1, "", "inverse"], [1175, 5, 1, "", "is_complex"], [1176, 5, 1, "", "is_conj"], [1177, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1178, 5, 1, "", "is_floating_point"], [1179, 5, 1, "", "is_grad_enabled"], [1180, 5, 1, "", "is_inference_mode_enabled"], [1181, 5, 1, "", "is_nonzero"], [1182, 5, 1, "", "is_storage"], [1183, 5, 1, "", "is_tensor"], [1184, 5, 1, "", "is_warn_always_enabled"], [1185, 5, 1, "", "isclose"], [1186, 5, 1, "", "isfinite"], [1187, 5, 1, "", "isin"], [1188, 5, 1, "", "isinf"], [1189, 5, 1, "", "isnan"], [1190, 5, 1, "", "isneginf"], [1191, 5, 1, "", "isposinf"], [1192, 5, 1, "", "isreal"], [1193, 5, 1, "", "istft"], [1866, 0, 0, "-", "jit"], [1215, 5, 1, "", "kaiser_window"], [1216, 5, 1, "", "kron"], [1217, 5, 1, "", "kthvalue"], [1926, 1, 1, "", "layout"], [1218, 5, 1, "", "lcm"], [1219, 5, 1, "", "ldexp"], [1220, 5, 1, "", "le"], [1221, 5, 1, "", "lerp"], [1222, 5, 1, "", "less"], [1223, 5, 1, "", "less_equal"], [1224, 5, 1, "", "lgamma"], [1874, 0, 0, "-", "linalg"], [1266, 5, 1, "", "linspace"], [1267, 5, 1, "", "load"], [1268, 5, 1, "", "lobpcg"], [1269, 5, 1, "", "log"], [1270, 5, 1, "", "log10"], [1271, 5, 1, "", "log1p"], [1272, 5, 1, "", "log2"], [1273, 5, 1, "", "logaddexp"], [1274, 5, 1, "", "logaddexp2"], [1275, 5, 1, "", "logcumsumexp"], [1276, 5, 1, "", "logdet"], [1277, 5, 1, "", "logical_and"], [1278, 5, 1, "", "logical_not"], [1279, 5, 1, "", "logical_or"], [1280, 5, 1, "", "logical_xor"], [1281, 5, 1, "", "logit"], [1282, 5, 1, "", "logspace"], [1283, 5, 1, "", "logsumexp"], [1284, 5, 1, "", "lt"], [1285, 5, 1, "", "lu"], [1286, 5, 1, "", "lu_solve"], [1287, 5, 1, "", "lu_unpack"], [1288, 5, 1, "", "manual_seed"], [1876, 0, 0, "-", "masked"], [1289, 5, 1, "", "masked_select"], [1290, 5, 1, "", "matmul"], [1291, 5, 1, "", "matrix_exp"], [1292, 5, 1, "", "matrix_power"], [1293, 5, 1, "", "max"], [1294, 5, 1, "", "maximum"], [1295, 5, 1, "", "mean"], [1296, 5, 1, "", "median"], [1926, 1, 1, "", "memory_format"], [1297, 5, 1, "", "meshgrid"], [1298, 5, 1, "", "min"], [1299, 5, 1, "", "minimum"], [1300, 5, 1, "", "mm"], [1301, 5, 1, "", "mode"], [1879, 0, 0, "-", "monitor"], [1302, 5, 1, "", "moveaxis"], [1303, 5, 1, "", "movedim"], [1880, 0, 0, "-", "mps"], [1316, 5, 1, "", "msort"], [1317, 5, 1, "", "mul"], [1318, 5, 1, "", "multinomial"], [1319, 5, 1, "", "multiply"], [1881, 0, 0, "-", "multiprocessing"], [1320, 5, 1, "", "mv"], [1321, 5, 1, "", "mvlgamma"], [1322, 5, 1, "", "nan_to_num"], [1323, 5, 1, "", "nanmean"], [1324, 5, 1, "", "nanmedian"], [1325, 5, 1, "", "nanquantile"], [1326, 5, 1, "", "nansum"], [1327, 5, 1, "", "narrow"], [1328, 5, 1, "", "narrow_copy"], [1329, 5, 1, "", "ne"], [1330, 5, 1, "", "neg"], [1331, 5, 1, "", "negative"], [1884, 0, 0, "-", "nested"], [1332, 5, 1, "", "nextafter"], [1885, 0, 0, "-", "nn"], [1653, 1, 1, "", "no_grad"], [1654, 5, 1, "", "nonzero"], [1655, 5, 1, "", "norm"], [1656, 5, 1, "", "normal"], [1657, 5, 1, "", "not_equal"], [1658, 5, 1, "", "numel"], [1659, 5, 1, "", "ones"], [1660, 5, 1, "", "ones_like"], [1907, 0, 0, "-", "onnx"], [1910, 0, 0, "-", "optim"], [1700, 5, 1, "", "orgqr"], [1701, 5, 1, "", "ormqr"], [1702, 5, 1, "", "outer"], [1911, 0, 0, "-", "package"], [1703, 5, 1, "", "pca_lowrank"], [1704, 5, 1, "", "permute"], [1705, 5, 1, "", "pinverse"], [1706, 5, 1, "", "poisson"], [1707, 5, 1, "", "polar"], [1708, 5, 1, "", "polygamma"], [1709, 5, 1, "", "positive"], [1710, 5, 1, "", "pow"], [1711, 5, 1, "", "prod"], [1913, 0, 0, "-", "profiler"], [1712, 5, 1, "", "promote_types"], [1713, 5, 1, "", "qr"], [1714, 5, 1, "", "quantile"], [1917, 0, 0, "-", "quantization"], [1715, 5, 1, "", "quantize_per_channel"], [1716, 5, 1, "", "quantize_per_tensor"], [1717, 5, 1, "", "quantized_batch_norm"], [1718, 5, 1, "", "quantized_max_pool1d"], [1719, 5, 1, "", "quantized_max_pool2d"], [1721, 5, 1, "", "rad2deg"], [1722, 5, 1, "", "rand"], [1723, 5, 1, "", "rand_like"], [1724, 5, 1, "", "randint"], [1725, 5, 1, "", "randint_like"], [1726, 5, 1, "", "randn"], [1727, 5, 1, "", "randn_like"], [1918, 0, 0, "-", "random"], [1728, 5, 1, "", "randperm"], [1729, 5, 1, "", "range"], [1730, 5, 1, "", "ravel"], [1731, 5, 1, "", "real"], [1732, 5, 1, "", "reciprocal"], [1733, 5, 1, "", "remainder"], [1734, 5, 1, "", "renorm"], [1735, 5, 1, "", "repeat_interleave"], [1736, 5, 1, "", "reshape"], [1737, 5, 1, "", "resolve_conj"], [1738, 5, 1, "", "resolve_neg"], [1739, 5, 1, "", "result_type"], [1740, 5, 1, "", "roll"], [1741, 5, 1, "", "rot90"], [1742, 5, 1, "", "round"], [1743, 5, 1, "", "row_stack"], [1744, 5, 1, "", "rsqrt"], [1745, 5, 1, "", "save"], [1746, 5, 1, "", "scatter"], [1747, 5, 1, "", "scatter_add"], [1748, 5, 1, "", "scatter_reduce"], [1749, 5, 1, "", "searchsorted"], [1750, 5, 1, "", "seed"], [1751, 5, 1, "", "select"], [1752, 5, 1, "", "select_scatter"], [1753, 5, 1, "", "set_default_device"], [1754, 5, 1, "", "set_default_dtype"], [1755, 5, 1, "", "set_default_tensor_type"], [1756, 5, 1, "", "set_deterministic_debug_mode"], [1757, 5, 1, "", "set_float32_matmul_precision"], [1758, 5, 1, "", "set_flush_denormal"], [1759, 1, 1, "", "set_grad_enabled"], [1760, 5, 1, "", "set_num_interop_threads"], [1761, 5, 1, "", "set_num_threads"], [1762, 5, 1, "", "set_printoptions"], [1763, 5, 1, "", "set_rng_state"], [1764, 5, 1, "", "set_warn_always"], [1765, 5, 1, "", "sgn"], [1766, 5, 1, "", "sigmoid"], [1767, 5, 1, "", "sign"], [1922, 0, 0, "-", "signal"], [1779, 5, 1, "", "signbit"], [1780, 5, 1, "", "sin"], [1781, 5, 1, "", "sinc"], [1782, 5, 1, "", "sinh"], [1783, 5, 1, "", "slice_scatter"], [1784, 5, 1, "", "slogdet"], [1785, 5, 1, "", "smm"], [1786, 5, 1, "", "softmax"], [1787, 5, 1, "", "sort"], [1923, 0, 0, "-", "sparse"], [1796, 5, 1, "", "sparse_bsc_tensor"], [1797, 5, 1, "", "sparse_bsr_tensor"], [1798, 5, 1, "", "sparse_compressed_tensor"], [1799, 5, 1, "", "sparse_coo_tensor"], [1800, 5, 1, "", "sparse_csc_tensor"], [1801, 5, 1, "", "sparse_csr_tensor"], [1924, 0, 0, "-", "special"], [1802, 5, 1, "", "split"], [1803, 5, 1, "", "sqrt"], [1804, 5, 1, "", "square"], [1805, 5, 1, "", "squeeze"], [1806, 5, 1, "", "sspaddmm"], [1807, 5, 1, "", "stack"], [1808, 5, 1, "", "std"], [1809, 5, 1, "", "std_mean"], [1810, 5, 1, "", "stft"], [1811, 5, 1, "", "sub"], [1812, 5, 1, "", "subtract"], [1813, 5, 1, "", "sum"], [1814, 5, 1, "", "svd"], [1815, 5, 1, "", "svd_lowrank"], [1816, 5, 1, "", "swapaxes"], [1817, 5, 1, "", "swapdims"], [1818, 5, 1, "", "sym_float"], [1819, 5, 1, "", "sym_int"], [1820, 5, 1, "", "sym_max"], [1821, 5, 1, "", "sym_min"], [1822, 5, 1, "", "sym_not"], [1823, 5, 1, "", "t"], [1824, 5, 1, "", "take"], [1825, 5, 1, "", "take_along_dim"], [1826, 5, 1, "", "tan"], [1827, 5, 1, "", "tanh"], [1828, 5, 1, "", "tensor"], [1829, 5, 1, "", "tensor_split"], [1830, 5, 1, "", "tensordot"], [1930, 0, 0, "-", "testing"], [1831, 5, 1, "", "tile"], [1832, 5, 1, "", "topk"], [1833, 5, 1, "", "trace"], [1834, 5, 1, "", "transpose"], [1835, 5, 1, "", "trapezoid"], [1836, 5, 1, "", "trapz"], [1837, 5, 1, "", "triangular_solve"], [1838, 5, 1, "", "tril"], [1839, 5, 1, "", "tril_indices"], [1840, 5, 1, "", "triu"], [1841, 5, 1, "", "triu_indices"], [1842, 5, 1, "", "true_divide"], [1843, 5, 1, "", "trunc"], [1844, 5, 1, "", "unbind"], [1845, 5, 1, "", "unflatten"], [1846, 5, 1, "", "unique"], [1847, 5, 1, "", "unique_consecutive"], [1848, 5, 1, "", "unsqueeze"], [1849, 5, 1, "", "use_deterministic_algorithms"], [1931, 0, 0, "-", "utils"], [1850, 5, 1, "", "vander"], [1851, 5, 1, "", "var"], [1852, 5, 1, "", "var_mean"], [1853, 5, 1, "", "vdot"], [1854, 5, 1, "", "view_as_complex"], [1855, 5, 1, "", "view_as_real"], [1856, 5, 1, "", "vmap"], [1857, 5, 1, "", "vsplit"], [1858, 5, 1, "", "vstack"], [1859, 5, 1, "", "where"], [1860, 5, 1, "", "xlogy"], [1861, 5, 1, "", "zeros"], [1862, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1925, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1925, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1925, 2, 1, "", "dtype"]], "torch.CharStorage": [[1925, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1925, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1925, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1925, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1925, 2, 1, "", "dtype"]], "torch.Generator": [[89, 2, 1, "", "device"], [89, 3, 1, "", "get_state"], [89, 3, 1, "", "initial_seed"], [89, 3, 1, "", "manual_seed"], [89, 3, 1, "", "seed"], [89, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1925, 2, 1, "", "dtype"]], "torch.IntStorage": [[1925, 2, 1, "", "dtype"]], "torch.LongStorage": [[1925, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1925, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1925, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1925, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1925, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1925, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1925, 2, 1, "", "dtype"]], "torch.Tag": [[1931, 4, 1, "", "name"]], "torch.Tensor": [[1929, 2, 1, "", "H"], [1929, 2, 1, "", "T"], [90, 3, 1, "", "abs"], [91, 3, 1, "", "abs_"], [92, 3, 1, "", "absolute"], [93, 3, 1, "", "absolute_"], [94, 3, 1, "", "acos"], [95, 3, 1, "", "acos_"], [96, 3, 1, "", "acosh"], [97, 3, 1, "", "acosh_"], [98, 3, 1, "", "add"], [99, 3, 1, "", "add_"], [100, 3, 1, "", "addbmm"], [101, 3, 1, "", "addbmm_"], [102, 3, 1, "", "addcdiv"], [103, 3, 1, "", "addcdiv_"], [104, 3, 1, "", "addcmul"], [105, 3, 1, "", "addcmul_"], [106, 3, 1, "", "addmm"], [107, 3, 1, "", "addmm_"], [108, 3, 1, "", "addmv"], [109, 3, 1, "", "addmv_"], [110, 3, 1, "", "addr"], [111, 3, 1, "", "addr_"], [112, 3, 1, "", "adjoint"], [1883, 3, 1, "", "align_as"], [1883, 3, 1, "", "align_to"], [113, 3, 1, "", "all"], [114, 3, 1, "", "allclose"], [115, 3, 1, "", "amax"], [116, 3, 1, "", "amin"], [117, 3, 1, "", "aminmax"], [118, 3, 1, "", "angle"], [119, 3, 1, "", "any"], [120, 3, 1, "", "apply_"], [121, 3, 1, "", "arccos"], [122, 3, 1, "", "arccos_"], [123, 3, 1, "", "arccosh"], [124, 3, 1, "", "arccosh_"], [125, 3, 1, "", "arcsin"], [126, 3, 1, "", "arcsin_"], [127, 3, 1, "", "arcsinh"], [128, 3, 1, "", "arcsinh_"], [129, 3, 1, "", "arctan"], [130, 3, 1, "", "arctan2"], [131, 3, 1, "", "arctan2_"], [132, 3, 1, "", "arctan_"], [133, 3, 1, "", "arctanh"], [134, 3, 1, "", "arctanh_"], [135, 3, 1, "", "argmax"], [136, 3, 1, "", "argmin"], [137, 3, 1, "", "argsort"], [138, 3, 1, "", "argwhere"], [139, 3, 1, "", "as_strided"], [140, 3, 1, "", "as_subclass"], [141, 3, 1, "", "asin"], [142, 3, 1, "", "asin_"], [143, 3, 1, "", "asinh"], [144, 3, 1, "", "asinh_"], [145, 3, 1, "", "atan"], [146, 3, 1, "", "atan2"], [147, 3, 1, "", "atan2_"], [148, 3, 1, "", "atan_"], [149, 3, 1, "", "atanh"], [150, 3, 1, "", "atanh_"], [151, 3, 1, "", "backward"], [152, 3, 1, "", "baddbmm"], [153, 3, 1, "", "baddbmm_"], [154, 3, 1, "", "bernoulli"], [155, 3, 1, "", "bernoulli_"], [156, 3, 1, "", "bfloat16"], [157, 3, 1, "", "bincount"], [158, 3, 1, "", "bitwise_and"], [159, 3, 1, "", "bitwise_and_"], [160, 3, 1, "", "bitwise_left_shift"], [161, 3, 1, "", "bitwise_left_shift_"], [162, 3, 1, "", "bitwise_not"], [163, 3, 1, "", "bitwise_not_"], [164, 3, 1, "", "bitwise_or"], [165, 3, 1, "", "bitwise_or_"], [166, 3, 1, "", "bitwise_right_shift"], [167, 3, 1, "", "bitwise_right_shift_"], [168, 3, 1, "", "bitwise_xor"], [169, 3, 1, "", "bitwise_xor_"], [170, 3, 1, "", "bmm"], [171, 3, 1, "", "bool"], [172, 3, 1, "", "broadcast_to"], [173, 3, 1, "", "byte"], [174, 3, 1, "", "cauchy_"], [175, 3, 1, "", "ccol_indices"], [176, 3, 1, "", "cdouble"], [177, 3, 1, "", "ceil"], [178, 3, 1, "", "ceil_"], [179, 3, 1, "", "cfloat"], [180, 3, 1, "", "chalf"], [181, 3, 1, "", "char"], [182, 3, 1, "", "cholesky"], [183, 3, 1, "", "cholesky_inverse"], [184, 3, 1, "", "cholesky_solve"], [185, 3, 1, "", "chunk"], [186, 3, 1, "", "clamp"], [187, 3, 1, "", "clamp_"], [188, 3, 1, "", "clip"], [189, 3, 1, "", "clip_"], [190, 3, 1, "", "clone"], [191, 3, 1, "", "coalesce"], [192, 3, 1, "", "col_indices"], [193, 3, 1, "", "conj"], [194, 3, 1, "", "conj_physical"], [195, 3, 1, "", "conj_physical_"], [196, 3, 1, "", "contiguous"], [197, 3, 1, "", "copy_"], [198, 3, 1, "", "copysign"], [199, 3, 1, "", "copysign_"], [200, 3, 1, "", "corrcoef"], [201, 3, 1, "", "cos"], [202, 3, 1, "", "cos_"], [203, 3, 1, "", "cosh"], [204, 3, 1, "", "cosh_"], [205, 3, 1, "", "count_nonzero"], [206, 3, 1, "", "cov"], [207, 3, 1, "", "cpu"], [208, 3, 1, "", "cross"], [209, 3, 1, "", "crow_indices"], [210, 3, 1, "", "cuda"], [211, 3, 1, "", "cummax"], [212, 3, 1, "", "cummin"], [213, 3, 1, "", "cumprod"], [214, 3, 1, "", "cumprod_"], [215, 3, 1, "", "cumsum"], [216, 3, 1, "", "cumsum_"], [217, 3, 1, "", "data_ptr"], [218, 3, 1, "", "deg2rad"], [219, 3, 1, "", "dense_dim"], [220, 3, 1, "", "dequantize"], [221, 3, 1, "", "det"], [222, 3, 1, "", "detach"], [223, 3, 1, "", "detach_"], [224, 2, 1, "", "device"], [225, 3, 1, "", "diag"], [226, 3, 1, "", "diag_embed"], [227, 3, 1, "", "diagflat"], [228, 3, 1, "", "diagonal"], [229, 3, 1, "", "diagonal_scatter"], [230, 3, 1, "", "diff"], [231, 3, 1, "", "digamma"], [232, 3, 1, "", "digamma_"], [233, 3, 1, "", "dim"], [234, 3, 1, "", "dist"], [235, 3, 1, "", "div"], [236, 3, 1, "", "div_"], [237, 3, 1, "", "divide"], [238, 3, 1, "", "divide_"], [239, 3, 1, "", "dot"], [240, 3, 1, "", "double"], [241, 3, 1, "", "dsplit"], [242, 3, 1, "", "element_size"], [243, 3, 1, "", "eq"], [244, 3, 1, "", "eq_"], [245, 3, 1, "", "equal"], [246, 3, 1, "", "erf"], [247, 3, 1, "", "erf_"], [248, 3, 1, "", "erfc"], [249, 3, 1, "", "erfc_"], [250, 3, 1, "", "erfinv"], [251, 3, 1, "", "erfinv_"], [252, 3, 1, "", "exp"], [253, 3, 1, "", "exp_"], [254, 3, 1, "", "expand"], [255, 3, 1, "", "expand_as"], [256, 3, 1, "", "expm1"], [257, 3, 1, "", "expm1_"], [258, 3, 1, "", "exponential_"], [259, 3, 1, "", "fill_"], [260, 3, 1, "", "fill_diagonal_"], [261, 3, 1, "", "fix"], [262, 3, 1, "", "fix_"], [263, 3, 1, "", "flatten"], [264, 3, 1, "", "flip"], [265, 3, 1, "", "fliplr"], [266, 3, 1, "", "flipud"], [267, 3, 1, "", "float"], [268, 3, 1, "", "float_power"], [269, 3, 1, "", "float_power_"], [270, 3, 1, "", "floor"], [271, 3, 1, "", "floor_"], [272, 3, 1, "", "floor_divide"], [273, 3, 1, "", "floor_divide_"], [274, 3, 1, "", "fmax"], [275, 3, 1, "", "fmin"], [276, 3, 1, "", "fmod"], [277, 3, 1, "", "fmod_"], [278, 3, 1, "", "frac"], [279, 3, 1, "", "frac_"], [280, 3, 1, "", "frexp"], [281, 3, 1, "", "gather"], [282, 3, 1, "", "gcd"], [283, 3, 1, "", "gcd_"], [284, 3, 1, "", "ge"], [285, 3, 1, "", "ge_"], [286, 3, 1, "", "geometric_"], [287, 3, 1, "", "geqrf"], [288, 3, 1, "", "ger"], [289, 3, 1, "", "get_device"], [290, 2, 1, "", "grad"], [291, 3, 1, "", "greater"], [292, 3, 1, "", "greater_"], [293, 3, 1, "", "greater_equal"], [294, 3, 1, "", "greater_equal_"], [295, 3, 1, "", "gt"], [296, 3, 1, "", "gt_"], [297, 3, 1, "", "half"], [298, 3, 1, "", "hardshrink"], [299, 3, 1, "", "heaviside"], [300, 3, 1, "", "histc"], [301, 3, 1, "", "histogram"], [302, 3, 1, "", "hsplit"], [303, 3, 1, "", "hypot"], [304, 3, 1, "", "hypot_"], [305, 3, 1, "", "i0"], [306, 3, 1, "", "i0_"], [307, 3, 1, "", "igamma"], [308, 3, 1, "", "igamma_"], [309, 3, 1, "", "igammac"], [310, 3, 1, "", "igammac_"], [311, 2, 1, "", "imag"], [312, 3, 1, "", "index_add"], [313, 3, 1, "", "index_add_"], [314, 3, 1, "", "index_copy"], [315, 3, 1, "", "index_copy_"], [316, 3, 1, "", "index_fill"], [317, 3, 1, "", "index_fill_"], [318, 3, 1, "", "index_put"], [319, 3, 1, "", "index_put_"], [320, 3, 1, "", "index_reduce"], [321, 3, 1, "", "index_reduce_"], [322, 3, 1, "", "index_select"], [323, 3, 1, "", "indices"], [324, 3, 1, "", "inner"], [325, 3, 1, "", "int"], [326, 3, 1, "", "int_repr"], [327, 3, 1, "", "inverse"], [328, 3, 1, "", "is_coalesced"], [329, 3, 1, "", "is_complex"], [330, 3, 1, "", "is_conj"], [331, 3, 1, "", "is_contiguous"], [332, 2, 1, "", "is_cuda"], [333, 3, 1, "", "is_floating_point"], [334, 3, 1, "", "is_inference"], [335, 2, 1, "", "is_leaf"], [336, 2, 1, "", "is_meta"], [337, 3, 1, "", "is_pinned"], [338, 2, 1, "", "is_quantized"], [339, 3, 1, "", "is_set_to"], [340, 3, 1, "", "is_shared"], [341, 3, 1, "", "is_signed"], [342, 2, 1, "", "is_sparse"], [343, 2, 1, "", "is_sparse_csr"], [344, 3, 1, "", "isclose"], [345, 3, 1, "", "isfinite"], [346, 3, 1, "", "isinf"], [347, 3, 1, "", "isnan"], [348, 3, 1, "", "isneginf"], [349, 3, 1, "", "isposinf"], [350, 3, 1, "", "isreal"], [351, 3, 1, "", "istft"], [352, 3, 1, "", "item"], [353, 2, 1, "", "itemsize"], [354, 3, 1, "", "kthvalue"], [355, 3, 1, "", "lcm"], [356, 3, 1, "", "lcm_"], [357, 3, 1, "", "ldexp"], [358, 3, 1, "", "ldexp_"], [359, 3, 1, "", "le"], [360, 3, 1, "", "le_"], [361, 3, 1, "", "lerp"], [362, 3, 1, "", "lerp_"], [363, 3, 1, "", "less"], [364, 3, 1, "", "less_"], [365, 3, 1, "", "less_equal"], [366, 3, 1, "", "less_equal_"], [367, 3, 1, "", "lgamma"], [368, 3, 1, "", "lgamma_"], [369, 3, 1, "", "log"], [370, 3, 1, "", "log10"], [371, 3, 1, "", "log10_"], [372, 3, 1, "", "log1p"], [373, 3, 1, "", "log1p_"], [374, 3, 1, "", "log2"], [375, 3, 1, "", "log2_"], [376, 3, 1, "", "log_"], [377, 3, 1, "", "log_normal_"], [378, 3, 1, "", "logaddexp"], [379, 3, 1, "", "logaddexp2"], [380, 3, 1, "", "logcumsumexp"], [381, 3, 1, "", "logdet"], [382, 3, 1, "", "logical_and"], [383, 3, 1, "", "logical_and_"], [384, 3, 1, "", "logical_not"], [385, 3, 1, "", "logical_not_"], [386, 3, 1, "", "logical_or"], [387, 3, 1, "", "logical_or_"], [388, 3, 1, "", "logical_xor"], [389, 3, 1, "", "logical_xor_"], [390, 3, 1, "", "logit"], [391, 3, 1, "", "logit_"], [392, 3, 1, "", "logsumexp"], [393, 3, 1, "", "long"], [394, 3, 1, "", "lt"], [395, 3, 1, "", "lt_"], [396, 3, 1, "", "lu"], [397, 3, 1, "", "lu_solve"], [1929, 2, 1, "", "mH"], [1929, 2, 1, "", "mT"], [398, 3, 1, "", "map_"], [399, 3, 1, "", "masked_fill"], [400, 3, 1, "", "masked_fill_"], [401, 3, 1, "", "masked_scatter"], [402, 3, 1, "", "masked_scatter_"], [403, 3, 1, "", "masked_select"], [404, 3, 1, "", "matmul"], [405, 3, 1, "", "matrix_exp"], [406, 3, 1, "", "matrix_power"], [407, 3, 1, "", "max"], [408, 3, 1, "", "maximum"], [409, 3, 1, "", "mean"], [410, 3, 1, "", "median"], [411, 3, 1, "", "min"], [412, 3, 1, "", "minimum"], [413, 3, 1, "", "mm"], [414, 3, 1, "", "mode"], [415, 3, 1, "", "moveaxis"], [416, 3, 1, "", "movedim"], [417, 3, 1, "", "msort"], [418, 3, 1, "", "mul"], [419, 3, 1, "", "mul_"], [420, 3, 1, "", "multinomial"], [421, 3, 1, "", "multiply"], [422, 3, 1, "", "multiply_"], [423, 3, 1, "", "mv"], [424, 3, 1, "", "mvlgamma"], [425, 3, 1, "", "mvlgamma_"], [1883, 2, 1, "", "names"], [426, 3, 1, "", "nan_to_num"], [427, 3, 1, "", "nan_to_num_"], [428, 3, 1, "", "nanmean"], [429, 3, 1, "", "nanmedian"], [430, 3, 1, "", "nanquantile"], [431, 3, 1, "", "nansum"], [432, 3, 1, "", "narrow"], [433, 3, 1, "", "narrow_copy"], [434, 2, 1, "", "nbytes"], [435, 2, 1, "", "ndim"], [436, 3, 1, "", "ndimension"], [437, 3, 1, "", "ne"], [438, 3, 1, "", "ne_"], [439, 3, 1, "", "neg"], [440, 3, 1, "", "neg_"], [441, 3, 1, "", "negative"], [442, 3, 1, "", "negative_"], [443, 3, 1, "", "nelement"], [444, 3, 1, "", "new_empty"], [445, 3, 1, "", "new_full"], [446, 3, 1, "", "new_ones"], [447, 3, 1, "", "new_tensor"], [448, 3, 1, "", "new_zeros"], [449, 3, 1, "", "nextafter"], [450, 3, 1, "", "nextafter_"], [451, 3, 1, "", "nonzero"], [452, 3, 1, "", "norm"], [453, 3, 1, "", "normal_"], [454, 3, 1, "", "not_equal"], [455, 3, 1, "", "not_equal_"], [456, 3, 1, "", "numel"], [457, 3, 1, "", "numpy"], [458, 3, 1, "", "orgqr"], [459, 3, 1, "", "ormqr"], [460, 3, 1, "", "outer"], [461, 3, 1, "", "permute"], [462, 3, 1, "", "pin_memory"], [463, 3, 1, "", "pinverse"], [464, 3, 1, "", "polygamma"], [465, 3, 1, "", "polygamma_"], [466, 3, 1, "", "positive"], [467, 3, 1, "", "pow"], [468, 3, 1, "", "pow_"], [469, 3, 1, "", "prod"], [470, 3, 1, "", "put_"], [471, 3, 1, "", "q_per_channel_axis"], [472, 3, 1, "", "q_per_channel_scales"], [473, 3, 1, "", "q_per_channel_zero_points"], [474, 3, 1, "", "q_scale"], [475, 3, 1, "", "q_zero_point"], [476, 3, 1, "", "qr"], [477, 3, 1, "", "qscheme"], [478, 3, 1, "", "quantile"], [479, 3, 1, "", "rad2deg"], [480, 3, 1, "", "random_"], [481, 3, 1, "", "ravel"], [482, 2, 1, "", "real"], [483, 3, 1, "", "reciprocal"], [484, 3, 1, "", "reciprocal_"], [485, 3, 1, "", "record_stream"], [1883, 3, 1, "", "refine_names"], [486, 3, 1, "", "register_hook"], [487, 3, 1, "", "remainder"], [488, 3, 1, "", "remainder_"], [1883, 3, 1, "", "rename"], [1883, 3, 1, "", "rename_"], [489, 3, 1, "", "renorm"], [490, 3, 1, "", "renorm_"], [491, 3, 1, "", "repeat"], [492, 3, 1, "", "repeat_interleave"], [493, 2, 1, "", "requires_grad"], [494, 3, 1, "", "requires_grad_"], [495, 3, 1, "", "reshape"], [496, 3, 1, "", "reshape_as"], [497, 3, 1, "", "resize_"], [498, 3, 1, "", "resize_as_"], [499, 3, 1, "", "resolve_conj"], [500, 3, 1, "", "resolve_neg"], [501, 3, 1, "", "retain_grad"], [502, 2, 1, "", "retains_grad"], [503, 3, 1, "", "roll"], [504, 3, 1, "", "rot90"], [505, 3, 1, "", "round"], [506, 3, 1, "", "round_"], [507, 3, 1, "", "row_indices"], [508, 3, 1, "", "rsqrt"], [509, 3, 1, "", "rsqrt_"], [510, 3, 1, "", "scatter"], [511, 3, 1, "", "scatter_"], [512, 3, 1, "", "scatter_add"], [513, 3, 1, "", "scatter_add_"], [514, 3, 1, "", "scatter_reduce"], [515, 3, 1, "", "scatter_reduce_"], [516, 3, 1, "", "select"], [517, 3, 1, "", "select_scatter"], [518, 3, 1, "", "set_"], [519, 3, 1, "", "sgn"], [520, 3, 1, "", "sgn_"], [521, 3, 1, "", "share_memory_"], [522, 3, 1, "", "short"], [523, 3, 1, "", "sigmoid"], [524, 3, 1, "", "sigmoid_"], [525, 3, 1, "", "sign"], [526, 3, 1, "", "sign_"], [527, 3, 1, "", "signbit"], [528, 3, 1, "", "sin"], [529, 3, 1, "", "sin_"], [530, 3, 1, "", "sinc"], [531, 3, 1, "", "sinc_"], [532, 3, 1, "", "sinh"], [533, 3, 1, "", "sinh_"], [534, 3, 1, "", "size"], [535, 3, 1, "", "slice_scatter"], [536, 3, 1, "", "slogdet"], [537, 3, 1, "", "smm"], [538, 3, 1, "", "softmax"], [539, 3, 1, "", "sort"], [540, 3, 1, "", "sparse_dim"], [541, 3, 1, "", "sparse_mask"], [542, 3, 1, "", "sparse_resize_"], [543, 3, 1, "", "sparse_resize_and_clear_"], [544, 3, 1, "", "split"], [545, 3, 1, "", "sqrt"], [546, 3, 1, "", "sqrt_"], [547, 3, 1, "", "square"], [548, 3, 1, "", "square_"], [549, 3, 1, "", "squeeze"], [550, 3, 1, "", "squeeze_"], [551, 3, 1, "", "sspaddmm"], [552, 3, 1, "", "std"], [553, 3, 1, "", "stft"], [554, 3, 1, "", "storage"], [555, 3, 1, "", "storage_offset"], [556, 3, 1, "", "storage_type"], [557, 3, 1, "", "stride"], [558, 3, 1, "", "sub"], [559, 3, 1, "", "sub_"], [560, 3, 1, "", "subtract"], [561, 3, 1, "", "subtract_"], [562, 3, 1, "", "sum"], [563, 3, 1, "", "sum_to_size"], [564, 3, 1, "", "svd"], [565, 3, 1, "", "swapaxes"], [566, 3, 1, "", "swapdims"], [567, 3, 1, "", "t"], [568, 3, 1, "", "t_"], [569, 3, 1, "", "take"], [570, 3, 1, "", "take_along_dim"], [571, 3, 1, "", "tan"], [572, 3, 1, "", "tan_"], [573, 3, 1, "", "tanh"], [574, 3, 1, "", "tanh_"], [575, 3, 1, "", "tensor_split"], [576, 3, 1, "", "tile"], [577, 3, 1, "", "to"], [578, 3, 1, "", "to_dense"], [579, 3, 1, "", "to_mkldnn"], [580, 3, 1, "", "to_sparse"], [581, 3, 1, "", "to_sparse_bsc"], [582, 3, 1, "", "to_sparse_bsr"], [583, 3, 1, "", "to_sparse_coo"], [584, 3, 1, "", "to_sparse_csc"], [585, 3, 1, "", "to_sparse_csr"], [586, 3, 1, "", "tolist"], [587, 3, 1, "", "topk"], [588, 3, 1, "", "trace"], [589, 3, 1, "", "transpose"], [590, 3, 1, "", "transpose_"], [591, 3, 1, "", "triangular_solve"], [592, 3, 1, "", "tril"], [593, 3, 1, "", "tril_"], [594, 3, 1, "", "triu"], [595, 3, 1, "", "triu_"], [596, 3, 1, "", "true_divide"], [597, 3, 1, "", "true_divide_"], [598, 3, 1, "", "trunc"], [599, 3, 1, "", "trunc_"], [600, 3, 1, "", "type"], [601, 3, 1, "", "type_as"], [602, 3, 1, "", "unbind"], [603, 3, 1, "", "unflatten"], [604, 3, 1, "", "unfold"], [605, 3, 1, "", "uniform_"], [606, 3, 1, "", "unique"], [607, 3, 1, "", "unique_consecutive"], [608, 3, 1, "", "unsqueeze"], [609, 3, 1, "", "unsqueeze_"], [610, 3, 1, "", "untyped_storage"], [611, 3, 1, "", "values"], [612, 3, 1, "", "var"], [613, 3, 1, "", "vdot"], [614, 3, 1, "", "view"], [615, 3, 1, "", "view_as"], [616, 3, 1, "", "vsplit"], [617, 3, 1, "", "where"], [618, 3, 1, "", "xlogy"], [619, 3, 1, "", "xlogy_"], [620, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1925, 3, 1, "", "bfloat16"], [1925, 3, 1, "", "bool"], [1925, 3, 1, "", "byte"], [1925, 3, 1, "", "char"], [1925, 3, 1, "", "clone"], [1925, 3, 1, "", "complex_double"], [1925, 3, 1, "", "complex_float"], [1925, 3, 1, "", "copy_"], [1925, 3, 1, "", "cpu"], [1925, 3, 1, "", "cuda"], [1925, 3, 1, "", "data_ptr"], [1925, 4, 1, "", "device"], [1925, 3, 1, "", "double"], [1925, 2, 1, "", "dtype"], [1925, 3, 1, "", "element_size"], [1925, 3, 1, "", "fill_"], [1925, 3, 1, "", "float"], [1925, 3, 1, "", "from_buffer"], [1925, 3, 1, "", "from_file"], [1925, 3, 1, "", "get_device"], [1925, 3, 1, "", "half"], [1925, 3, 1, "", "int"], [1925, 4, 1, "", "is_cuda"], [1925, 3, 1, "", "is_pinned"], [1925, 3, 1, "", "is_shared"], [1925, 2, 1, "", "is_sparse"], [1925, 3, 1, "", "long"], [1925, 3, 1, "", "nbytes"], [1925, 3, 1, "", "pickle_storage_type"], [1925, 3, 1, "", "pin_memory"], [1925, 3, 1, "", "resize_"], [1925, 3, 1, "", "share_memory_"], [1925, 3, 1, "", "short"], [1925, 3, 1, "", "size"], [1925, 3, 1, "", "tolist"], [1925, 3, 1, "", "type"], [1925, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1925, 3, 1, "", "bfloat16"], [1925, 3, 1, "", "bool"], [1925, 3, 1, "", "byte"], [1925, 3, 1, "", "byteswap"], [1925, 3, 1, "", "char"], [1925, 3, 1, "", "clone"], [1925, 3, 1, "", "complex_double"], [1925, 3, 1, "", "complex_float"], [1925, 3, 1, "", "copy_"], [1925, 3, 1, "", "cpu"], [1925, 3, 1, "", "cuda"], [1925, 3, 1, "", "data_ptr"], [1925, 2, 1, "", "device"], [1925, 3, 1, "", "double"], [1925, 3, 1, "", "element_size"], [1925, 3, 1, "", "fill_"], [1925, 3, 1, "", "float"], [1925, 3, 1, "", "from_buffer"], [1925, 3, 1, "", "from_file"], [1925, 3, 1, "", "get_device"], [1925, 3, 1, "", "half"], [1925, 3, 1, "", "int"], [1925, 4, 1, "", "is_cuda"], [1925, 3, 1, "", "is_pinned"], [1925, 3, 1, "", "is_shared"], [1925, 2, 1, "", "is_sparse"], [1925, 2, 1, "", "is_sparse_csr"], [1925, 3, 1, "", "long"], [1925, 3, 1, "", "mps"], [1925, 3, 1, "", "nbytes"], [1925, 3, 1, "", "new"], [1925, 3, 1, "", "pin_memory"], [1925, 3, 1, "", "resize_"], [1925, 3, 1, "", "share_memory_"], [1925, 3, 1, "", "short"], [1925, 3, 1, "", "size"], [1925, 3, 1, "", "tolist"], [1925, 3, 1, "", "type"], [1925, 3, 1, "", "untyped"]], "torch.__config__": [[31, 5, 1, "", "parallel_info"], [31, 5, 1, "", "show"]], "torch._logging": [[677, 5, 1, "", "set_logs"]], "torch.ao": [[1914, 0, 0, "-", "nn"], [1914, 0, 0, "-", "ns"], [1914, 0, 0, "-", "pruning"], [1914, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1917, 0, 0, "-", "intrinsic"], [1917, 0, 0, "-", "qat"], [1914, 0, 0, "-", "quantizable"], [1914, 0, 0, "-", "quantized"], [1914, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[697, 1, 1, "", "BNReLU2d"], [698, 1, 1, "", "BNReLU3d"], [699, 1, 1, "", "ConvBn1d"], [700, 1, 1, "", "ConvBn2d"], [701, 1, 1, "", "ConvBn3d"], [702, 1, 1, "", "ConvBnReLU1d"], [703, 1, 1, "", "ConvBnReLU2d"], [704, 1, 1, "", "ConvBnReLU3d"], [705, 1, 1, "", "ConvReLU1d"], [706, 1, 1, "", "ConvReLU2d"], [707, 1, 1, "", "ConvReLU3d"], [708, 1, 1, "", "LinearReLU"], [1917, 0, 0, "-", "modules"], [1917, 0, 0, "-", "qat"], [1917, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[709, 1, 1, "", "ConvBn1d"], [710, 1, 1, "", "ConvBn2d"], [711, 1, 1, "", "ConvBn3d"], [712, 1, 1, "", "ConvBnReLU1d"], [713, 1, 1, "", "ConvBnReLU2d"], [714, 1, 1, "", "ConvBnReLU3d"], [715, 1, 1, "", "ConvReLU2d"], [716, 1, 1, "", "ConvReLU3d"], [717, 1, 1, "", "LinearReLU"], [718, 1, 1, "", "freeze_bn_stats"], [1917, 0, 0, "-", "modules"], [719, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[720, 1, 1, "", "BNReLU2d"], [721, 1, 1, "", "BNReLU3d"], [722, 1, 1, "", "ConvReLU1d"], [723, 1, 1, "", "ConvReLU2d"], [724, 1, 1, "", "ConvReLU3d"], [725, 1, 1, "", "LinearReLU"], [1917, 0, 0, "-", "dynamic"], [1917, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[726, 1, 1, "", "LinearReLU"], [1917, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[727, 1, 1, "", "Conv2d"], [728, 1, 1, "", "Conv3d"], [729, 1, 1, "", "Linear"], [1917, 0, 0, "-", "dynamic"], [1917, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[729, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[730, 1, 1, "", "Linear"], [1917, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[731, 1, 1, "", "LSTM"], [732, 1, 1, "", "MultiheadAttention"], [1914, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[732, 3, 1, "", "dequantize"], [732, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[733, 1, 1, "", "BatchNorm2d"], [734, 1, 1, "", "BatchNorm3d"], [735, 1, 1, "", "Conv1d"], [736, 1, 1, "", "Conv2d"], [737, 1, 1, "", "Conv3d"], [738, 1, 1, "", "ConvTranspose1d"], [739, 1, 1, "", "ConvTranspose2d"], [740, 1, 1, "", "ConvTranspose3d"], [741, 1, 1, "", "ELU"], [742, 1, 1, "", "Embedding"], [743, 1, 1, "", "EmbeddingBag"], [744, 1, 1, "", "FXFloatFunctional"], [745, 1, 1, "", "FloatFunctional"], [746, 1, 1, "", "GroupNorm"], [747, 1, 1, "", "Hardswish"], [748, 1, 1, "", "InstanceNorm1d"], [749, 1, 1, "", "InstanceNorm2d"], [750, 1, 1, "", "InstanceNorm3d"], [751, 1, 1, "", "LayerNorm"], [752, 1, 1, "", "LeakyReLU"], [753, 1, 1, "", "Linear"], [754, 1, 1, "", "QFunctional"], [755, 1, 1, "", "ReLU6"], [756, 1, 1, "", "Sigmoid"], [1917, 0, 0, "-", "dynamic"], [1917, 0, 0, "-", "functional"], [1917, 0, 0, "-", "modules"], [1914, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[735, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[736, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[737, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[742, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[743, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[753, 3, 1, "", "from_float"], [753, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[757, 1, 1, "", "GRU"], [758, 1, 1, "", "GRUCell"], [759, 1, 1, "", "LSTM"], [760, 1, 1, "", "LSTMCell"], [761, 1, 1, "", "Linear"], [762, 1, 1, "", "RNNCell"], [1917, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[761, 3, 1, "", "from_float"], [761, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[763, 1, 1, "", "adaptive_avg_pool2d"], [764, 1, 1, "", "adaptive_avg_pool3d"], [765, 1, 1, "", "avg_pool2d"], [766, 1, 1, "", "avg_pool3d"], [767, 1, 1, "", "celu"], [768, 1, 1, "", "clamp"], [769, 1, 1, "", "conv1d"], [770, 1, 1, "", "conv2d"], [771, 1, 1, "", "conv3d"], [772, 1, 1, "", "elu"], [773, 1, 1, "", "hardsigmoid"], [774, 1, 1, "", "hardswish"], [775, 1, 1, "", "hardtanh"], [776, 1, 1, "", "interpolate"], [777, 1, 1, "", "leaky_relu"], [778, 1, 1, "", "linear"], [779, 1, 1, "", "max_pool1d"], [780, 1, 1, "", "max_pool2d"], [781, 1, 1, "", "threshold"], [782, 1, 1, "", "upsample"], [783, 1, 1, "", "upsample_bilinear"], [784, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1914, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1914, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1914, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1932, 0, 0, "-", "_numeric_suite"], [1933, 0, 0, "-", "_numeric_suite_fx"], [1914, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1932, 1, 1, "", "Logger"], [1932, 1, 1, "", "OutputLogger"], [1932, 1, 1, "", "Shadow"], [1932, 1, 1, "", "ShadowLogger"], [1932, 5, 1, "", "compare_model_outputs"], [1932, 5, 1, "", "compare_model_stub"], [1932, 5, 1, "", "compare_weights"], [1932, 5, 1, "", "get_logger_dict"], [1932, 5, 1, "", "get_matching_activations"], [1932, 5, 1, "", "prepare_model_outputs"], [1932, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1932, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1932, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1932, 3, 1, "", "add"], [1932, 3, 1, "", "add_relu"], [1932, 3, 1, "", "add_scalar"], [1932, 3, 1, "", "cat"], [1932, 3, 1, "", "forward"], [1932, 3, 1, "", "mul"], [1932, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1932, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1933, 1, 1, "", "NSTracer"], [1933, 1, 1, "", "OutputComparisonLogger"], [1933, 1, 1, "", "OutputLogger"], [1933, 5, 1, "", "add_loggers"], [1933, 5, 1, "", "add_shadow_loggers"], [1933, 5, 1, "", "convert_n_shadows_model"], [1933, 5, 1, "", "extend_logger_results_with_comparison"], [1933, 5, 1, "", "extract_logger_info"], [1933, 5, 1, "", "extract_results_n_shadows_model"], [1933, 5, 1, "", "extract_shadow_logger_info"], [1933, 5, 1, "", "extract_weights"], [1933, 5, 1, "", "loggers_set_enabled"], [1933, 5, 1, "", "loggers_set_save_activations"], [1933, 5, 1, "", "prepare_n_shadows_model"], [1933, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1933, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1933, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1933, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1933, 5, 1, "", "compute_cosine_similarity"], [1933, 5, 1, "", "compute_normalized_l2_error"], [1933, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1914, 0, 0, "-", "scheduler"], [1914, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[785, 1, 1, "", "DeQuantStub"], [786, 1, 1, "", "QuantStub"], [787, 1, 1, "", "QuantWrapper"], [788, 1, 1, "", "add_quant_dequant"], [1914, 0, 0, "-", "backend_config"], [794, 1, 1, "", "convert"], [795, 1, 1, "", "default_eval_fn"], [811, 1, 1, "", "fuse_modules"], [1914, 0, 0, "-", "fx"], [835, 1, 1, "", "prepare"], [836, 1, 1, "", "prepare_qat"], [837, 1, 1, "", "propagate_qconfig_"], [854, 1, 1, "", "quantize"], [855, 1, 1, "", "quantize_dynamic"], [860, 1, 1, "", "quantize_qat"], [861, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[789, 1, 1, "", "BackendConfig"], [790, 1, 1, "", "BackendPatternConfig"], [791, 1, 1, "", "DTypeConfig"], [792, 1, 1, "", "DTypeWithConstraints"], [793, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[789, 4, 1, "", "configs"], [789, 3, 1, "", "from_dict"], [789, 3, 1, "", "set_backend_pattern_config"], [789, 3, 1, "", "set_backend_pattern_configs"], [789, 3, 1, "", "set_name"], [789, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[790, 3, 1, "", "add_dtype_config"], [790, 3, 1, "", "from_dict"], [790, 3, 1, "", "set_dtype_configs"], [790, 3, 1, "", "set_fused_module"], [790, 3, 1, "", "set_fuser_method"], [790, 3, 1, "", "set_observation_type"], [790, 3, 1, "", "set_pattern"], [790, 3, 1, "", "set_qat_module"], [790, 3, 1, "", "set_reference_quantized_module"], [790, 3, 1, "", "set_root_module"], [790, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[791, 3, 1, "", "from_dict"], [791, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[793, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [793, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [793, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[796, 1, 1, "", "FakeQuantize"], [797, 1, 1, "", "FakeQuantizeBase"], [798, 1, 1, "", "FixedQParamsFakeQuantize"], [799, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [800, 2, 1, "", "default_fake_quant"], [801, 2, 1, "", "default_fused_act_fake_quant"], [802, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [803, 2, 1, "", "default_fused_wt_fake_quant"], [804, 2, 1, "", "default_histogram_fake_quant"], [805, 2, 1, "", "default_per_channel_weight_fake_quant"], [806, 2, 1, "", "default_weight_fake_quant"], [807, 1, 1, "", "disable_fake_quant"], [808, 1, 1, "", "disable_observer"], [809, 1, 1, "", "enable_fake_quant"], [810, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[812, 1, 1, "", "ConvertCustomConfig"], [813, 1, 1, "", "FuseCustomConfig"], [814, 1, 1, "", "PrepareCustomConfig"], [815, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[812, 3, 1, "", "from_dict"], [812, 3, 1, "", "set_observed_to_quantized_mapping"], [812, 3, 1, "", "set_preserved_attributes"], [812, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[813, 3, 1, "", "from_dict"], [813, 3, 1, "", "set_preserved_attributes"], [813, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[814, 3, 1, "", "from_dict"], [814, 3, 1, "", "set_float_to_observed_mapping"], [814, 3, 1, "", "set_input_quantized_indexes"], [814, 3, 1, "", "set_non_traceable_module_classes"], [814, 3, 1, "", "set_non_traceable_module_names"], [814, 3, 1, "", "set_output_quantized_indexes"], [814, 3, 1, "", "set_preserved_attributes"], [814, 3, 1, "", "set_standalone_module_class"], [814, 3, 1, "", "set_standalone_module_name"], [814, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[816, 1, 1, "", "HistogramObserver"], [817, 1, 1, "", "MinMaxObserver"], [818, 1, 1, "", "MovingAverageMinMaxObserver"], [819, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [820, 1, 1, "", "NoopObserver"], [821, 1, 1, "", "ObserverBase"], [822, 1, 1, "", "PerChannelMinMaxObserver"], [823, 1, 1, "", "PlaceholderObserver"], [824, 1, 1, "", "RecordingObserver"], [825, 2, 1, "", "default_debug_observer"], [826, 2, 1, "", "default_dynamic_quant_observer"], [827, 2, 1, "", "default_float_qparams_observer"], [828, 2, 1, "", "default_histogram_observer"], [829, 2, 1, "", "default_observer"], [830, 2, 1, "", "default_per_channel_weight_observer"], [831, 2, 1, "", "default_placeholder_observer"], [832, 2, 1, "", "default_weight_observer"], [833, 1, 1, "", "get_observer_state_dict"], [834, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[817, 3, 1, "", "calculate_qparams"], [817, 3, 1, "", "forward"], [817, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[821, 3, 1, "", "with_args"], [821, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[822, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.qconfig": [[838, 1, 1, "", "QConfig"], [839, 2, 1, "", "default_activation_only_qconfig"], [840, 2, 1, "", "default_debug_qconfig"], [841, 2, 1, "", "default_dynamic_qconfig"], [842, 2, 1, "", "default_per_channel_qconfig"], [843, 2, 1, "", "default_qat_qconfig"], [844, 2, 1, "", "default_qat_qconfig_v2"], [845, 2, 1, "", "default_qconfig"], [846, 2, 1, "", "default_weight_only_qconfig"], [847, 2, 1, "", "float16_dynamic_qconfig"], [848, 2, 1, "", "float16_static_qconfig"], [849, 2, 1, "", "float_qparams_weight_only_qconfig"], [850, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[851, 1, 1, "", "QConfigMapping"], [852, 1, 1, "", "get_default_qat_qconfig_mapping"], [853, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[851, 3, 1, "", "from_dict"], [851, 3, 1, "", "set_global"], [851, 3, 1, "", "set_module_name"], [851, 3, 1, "", "set_module_name_object_type_order"], [851, 3, 1, "", "set_module_name_regex"], [851, 3, 1, "", "set_object_type"], [851, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[856, 1, 1, "", "convert_fx"], [857, 1, 1, "", "fuse_fx"], [858, 1, 1, "", "prepare_fx"], [859, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [890, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [904, 5, 1, "", "grad"], [905, 5, 1, "", "gradcheck"], [906, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"], [917, 1, 1, "", "set_multithreading_enabled"]], "torch.autograd.Function": [[886, 3, 1, "", "backward"], [887, 3, 1, "", "forward"], [888, 3, 1, "", "jvp"], [889, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[891, 1, 1, "", "dual_level"], [892, 5, 1, "", "make_dual"], [893, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[894, 3, 1, "", "mark_dirty"], [895, 3, 1, "", "mark_non_differentiable"], [896, 3, 1, "", "save_for_backward"], [897, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[898, 5, 1, "", "hessian"], [899, 5, 1, "", "hvp"], [900, 5, 1, "", "jacobian"], [901, 5, 1, "", "jvp"], [902, 5, 1, "", "vhp"], [903, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[907, 3, 1, "", "metadata"], [908, 3, 1, "", "name"], [909, 4, 1, "", "next_functions"], [910, 3, 1, "", "register_hook"], [911, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [912, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[913, 3, 1, "", "export_chrome_trace"], [914, 3, 1, "", "key_averages"], [915, 4, 1, "", "self_cpu_time_total"], [916, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[952, 5, 1, "", "allow_in_graph"], [953, 5, 1, "", "assume_constant_result"], [954, 5, 1, "", "compile"], [955, 5, 1, "", "disable"], [956, 5, 1, "", "list_backends"], [957, 5, 1, "", "reset"]], "torch.cpu": [[0, 0, 0, "-", "amp"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[970, 1, 1, "", "CUDAGraph"], [971, 1, 1, "", "CUDAPluggableAllocator"], [972, 1, 1, "", "Event"], [973, 1, 1, "", "ExternalStream"], [974, 6, 1, "", "OutOfMemoryError"], [975, 1, 1, "", "Stream"], [976, 1, 1, "", "StreamContext"], [35, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [977, 5, 1, "", "caching_allocator_alloc"], [978, 5, 1, "", "caching_allocator_delete"], [979, 5, 1, "", "can_device_access_peer"], [980, 5, 1, "", "change_current_allocator"], [981, 5, 1, "", "clock_rate"], [987, 5, 1, "", "current_blas_handle"], [988, 5, 1, "", "current_device"], [989, 5, 1, "", "current_stream"], [990, 5, 1, "", "default_stream"], [991, 1, 1, "", "device"], [992, 5, 1, "", "device_count"], [993, 1, 1, "", "device_of"], [994, 5, 1, "", "empty_cache"], [995, 5, 1, "", "get_allocator_backend"], [996, 5, 1, "", "get_arch_list"], [997, 5, 1, "", "get_device_capability"], [998, 5, 1, "", "get_device_name"], [999, 5, 1, "", "get_device_properties"], [1000, 5, 1, "", "get_gencode_flags"], [1001, 5, 1, "", "get_rng_state"], [1002, 5, 1, "", "get_rng_state_all"], [1003, 5, 1, "", "get_sync_debug_mode"], [1004, 1, 1, "", "graph"], [1005, 5, 1, "", "graph_pool_handle"], [1006, 5, 1, "", "init"], [1007, 5, 1, "", "initial_seed"], [1008, 5, 1, "", "ipc_collect"], [1009, 5, 1, "", "is_available"], [1010, 5, 1, "", "is_current_stream_capturing"], [1011, 5, 1, "", "is_initialized"], [1014, 5, 1, "", "list_gpu_processes"], [1015, 5, 1, "", "make_graphed_callables"], [1016, 5, 1, "", "manual_seed"], [1017, 5, 1, "", "manual_seed_all"], [1018, 5, 1, "", "max_memory_allocated"], [1019, 5, 1, "", "max_memory_cached"], [1020, 5, 1, "", "max_memory_reserved"], [1021, 5, 1, "", "mem_get_info"], [1022, 5, 1, "", "memory_allocated"], [1023, 5, 1, "", "memory_cached"], [1024, 5, 1, "", "memory_reserved"], [1025, 5, 1, "", "memory_snapshot"], [1026, 5, 1, "", "memory_stats"], [1027, 5, 1, "", "memory_summary"], [1028, 5, 1, "", "memory_usage"], [1032, 5, 1, "", "power_draw"], [1033, 5, 1, "", "reset_max_memory_allocated"], [1034, 5, 1, "", "reset_max_memory_cached"], [1035, 5, 1, "", "reset_peak_memory_stats"], [1036, 5, 1, "", "seed"], [1037, 5, 1, "", "seed_all"], [1038, 5, 1, "", "set_device"], [1039, 5, 1, "", "set_per_process_memory_fraction"], [1040, 5, 1, "", "set_rng_state"], [1041, 5, 1, "", "set_rng_state_all"], [1042, 5, 1, "", "set_stream"], [1043, 5, 1, "", "set_sync_debug_mode"], [1044, 5, 1, "", "stream"], [1045, 5, 1, "", "synchronize"], [1046, 5, 1, "", "temperature"], [1047, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[970, 3, 1, "", "capture_begin"], [970, 3, 1, "", "capture_end"], [970, 3, 1, "", "debug_dump"], [970, 3, 1, "", "enable_debug_mode"], [970, 3, 1, "", "pool"], [970, 3, 1, "", "replay"], [970, 3, 1, "", "reset"]], "torch.cuda.Event": [[972, 3, 1, "", "elapsed_time"], [972, 3, 1, "", "from_ipc_handle"], [972, 3, 1, "", "ipc_handle"], [972, 3, 1, "", "query"], [972, 3, 1, "", "record"], [972, 3, 1, "", "synchronize"], [972, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[973, 3, 1, "", "query"], [973, 3, 1, "", "record_event"], [973, 3, 1, "", "synchronize"], [973, 3, 1, "", "wait_event"], [973, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[975, 3, 1, "", "query"], [975, 3, 1, "", "record_event"], [975, 3, 1, "", "synchronize"], [975, 3, 1, "", "wait_event"], [975, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[35, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[982, 5, 1, "", "broadcast"], [983, 5, 1, "", "broadcast_coalesced"], [984, 5, 1, "", "gather"], [985, 5, 1, "", "reduce_add"], [986, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1012, 5, 1, "", "_create_jit_fn"], [1013, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1029, 5, 1, "", "mark"], [1030, 5, 1, "", "range_pop"], [1031, 5, 1, "", "range_push"]], "torch.distributed": [[41, 1, 1, "", "Backend"], [41, 1, 1, "", "DistBackendError"], [41, 1, 1, "", "FileStore"], [39, 1, 1, "", "GradBucket"], [41, 1, 1, "", "HashStore"], [41, 1, 1, "", "P2POp"], [41, 1, 1, "", "PrefixStore"], [41, 1, 1, "", "ReduceOp"], [41, 1, 1, "", "Store"], [41, 1, 1, "", "TCPStore"], [41, 0, 0, "-", "algorithms"], [41, 5, 1, "", "all_gather"], [41, 5, 1, "", "all_gather_into_tensor"], [41, 5, 1, "", "all_gather_multigpu"], [41, 5, 1, "", "all_gather_object"], [41, 5, 1, "", "all_reduce"], [41, 5, 1, "", "all_reduce_multigpu"], [41, 5, 1, "", "all_to_all"], [41, 5, 1, "", "all_to_all_single"], [1919, 0, 0, "-", "autograd"], [41, 5, 1, "", "barrier"], [41, 5, 1, "", "batch_isend_irecv"], [41, 5, 1, "", "broadcast"], [41, 5, 1, "", "broadcast_multigpu"], [41, 5, 1, "", "broadcast_object_list"], [43, 0, 0, "-", "checkpoint"], [41, 0, 0, "-", "elastic"], [63, 0, 0, "-", "fsdp"], [41, 5, 1, "", "gather"], [41, 5, 1, "", "gather_object"], [41, 5, 1, "", "get_backend"], [41, 5, 1, "", "get_global_rank"], [41, 5, 1, "", "get_group_rank"], [41, 5, 1, "", "get_process_group_ranks"], [41, 5, 1, "", "get_rank"], [41, 5, 1, "", "get_world_size"], [41, 5, 1, "", "init_process_group"], [41, 5, 1, "", "irecv"], [41, 5, 1, "", "is_available"], [41, 5, 1, "", "is_gloo_available"], [41, 5, 1, "", "is_initialized"], [41, 5, 1, "", "is_mpi_available"], [41, 5, 1, "", "is_nccl_available"], [41, 5, 1, "", "is_torchelastic_launched"], [41, 5, 1, "", "isend"], [41, 0, 0, "-", "launch"], [41, 0, 0, "-", "launcher"], [41, 5, 1, "", "monitored_barrier"], [41, 5, 1, "", "new_group"], [41, 0, 0, "-", "nn"], [45, 0, 0, "-", "optim"], [41, 0, 0, "-", "pipeline"], [41, 5, 1, "", "recv"], [41, 5, 1, "", "reduce"], [41, 5, 1, "", "reduce_multigpu"], [41, 1, 1, "", "reduce_op"], [41, 5, 1, "", "reduce_scatter"], [41, 5, 1, "", "reduce_scatter_multigpu"], [41, 5, 1, "", "reduce_scatter_tensor"], [1919, 0, 0, "-", "rpc"], [59, 0, 0, "-", "run"], [41, 5, 1, "", "scatter"], [41, 5, 1, "", "scatter_object_list"], [41, 5, 1, "", "send"], [41, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[41, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[39, 5, 1, "", "buffer"], [39, 5, 1, "", "gradients"], [39, 5, 1, "", "index"], [39, 5, 1, "", "is_last"], [39, 5, 1, "", "parameters"], [39, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[41, 5, 1, "", "add"], [41, 5, 1, "", "compare_set"], [41, 5, 1, "", "delete_key"], [41, 5, 1, "", "get"], [41, 5, 1, "", "num_keys"], [41, 5, 1, "", "set"], [41, 5, 1, "", "set_timeout"], [41, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[42, 1, 1, "", "Join"], [42, 1, 1, "", "JoinHook"], [42, 1, 1, "", "Joinable"], [41, 0, 0, "-", "ddp_comm_hooks"], [41, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[42, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[42, 3, 1, "", "main_hook"], [42, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[42, 4, 1, "", "join_device"], [42, 3, 1, "", "join_hook"], [42, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[39, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[39, 5, 1, "", "allreduce_hook"], [39, 5, 1, "", "bf16_compress_hook"], [39, 5, 1, "", "bf16_compress_wrapper"], [39, 5, 1, "", "fp16_compress_hook"], [39, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[39, 1, 1, "", "PowerSGDState"], [39, 5, 1, "", "batched_powerSGD_hook"], [39, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[39, 3, 1, "", "__getstate__"], [39, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1919, 5, 1, "", "backward"], [1919, 1, 1, "", "context"], [1919, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[43, 1, 1, "", "DefaultLoadPlanner"], [43, 1, 1, "", "DefaultSavePlanner"], [43, 1, 1, "", "FileSystemReader"], [43, 1, 1, "", "FileSystemWriter"], [43, 1, 1, "", "LoadPlan"], [43, 1, 1, "", "LoadPlanner"], [43, 1, 1, "", "ReadItem"], [43, 1, 1, "", "SavePlan"], [43, 1, 1, "", "SavePlanner"], [43, 1, 1, "", "StorageReader"], [43, 1, 1, "", "StorageWriter"], [43, 1, 1, "", "WriteItem"], [43, 5, 1, "", "load_state_dict"], [43, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[43, 3, 1, "", "lookup_tensor"], [43, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[43, 3, 1, "", "lookup_object"], [43, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[43, 3, 1, "", "commit_tensor"], [43, 3, 1, "", "create_global_plan"], [43, 3, 1, "", "create_local_plan"], [43, 3, 1, "", "finish_plan"], [43, 3, 1, "", "load_bytes"], [43, 3, 1, "", "resolve_tensor"], [43, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[43, 3, 1, "", "create_global_plan"], [43, 3, 1, "", "create_local_plan"], [43, 3, 1, "", "finish_plan"], [43, 3, 1, "", "resolve_data"], [43, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[43, 3, 1, "", "prepare_global_plan"], [43, 3, 1, "", "prepare_local_plan"], [43, 3, 1, "", "read_data"], [43, 3, 1, "", "read_metadata"], [43, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[43, 3, 1, "", "finish"], [43, 3, 1, "", "prepare_global_plan"], [43, 3, 1, "", "prepare_local_plan"], [43, 3, 1, "", "set_up_storage_writer"], [43, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[49, 0, 0, "-", "agent"], [52, 0, 0, "-", "events"], [55, 0, 0, "-", "metrics"], [56, 0, 0, "-", "multiprocessing"], [58, 0, 0, "-", "rendezvous"], [60, 0, 0, "-", "timer"], [41, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[49, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[49, 1, 1, "", "ElasticAgent"], [49, 1, 1, "", "SimpleElasticAgent"], [49, 1, 1, "", "Worker"], [49, 1, 1, "", "WorkerGroup"], [49, 1, 1, "", "WorkerSpec"], [49, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[49, 3, 1, "", "get_worker_group"], [49, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[49, 3, 1, "", "_assign_worker_ranks"], [49, 3, 1, "", "_exit_barrier"], [49, 3, 1, "", "_initialize_workers"], [49, 3, 1, "", "_monitor_workers"], [49, 3, 1, "", "_rendezvous"], [49, 3, 1, "", "_restart_workers"], [49, 3, 1, "", "_shutdown"], [49, 3, 1, "", "_start_workers"], [49, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[49, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[49, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[49, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[49, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[52, 1, 1, "", "Event"], [52, 2, 1, "", "EventMetadataValue"], [52, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[52, 5, 1, "", "get_logging_handler"], [52, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[55, 1, 1, "", "ConsoleMetricHandler"], [55, 1, 1, "", "MetricHandler"], [55, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[55, 5, 1, "", "configure"], [55, 5, 1, "", "prof"], [55, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[56, 1, 1, "", "MultiprocessContext"], [56, 1, 1, "", "PContext"], [56, 1, 1, "", "RunProcsResult"], [56, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[51, 0, 0, "-", "errors"], [56, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[51, 1, 1, "", "ChildFailedError"], [51, 1, 1, "", "ErrorHandler"], [51, 1, 1, "", "ProcessFailure"], [51, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[58, 1, 1, "", "RendezvousClosedError"], [58, 1, 1, "", "RendezvousConnectionError"], [58, 1, 1, "", "RendezvousError"], [58, 1, 1, "", "RendezvousHandler"], [58, 1, 1, "", "RendezvousHandlerRegistry"], [58, 1, 1, "", "RendezvousParameters"], [58, 1, 1, "", "RendezvousStateError"], [58, 1, 1, "", "RendezvousTimeoutError"], [58, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[58, 3, 1, "", "get_backend"], [58, 3, 1, "", "get_run_id"], [58, 3, 1, "", "is_closed"], [58, 3, 1, "", "next_rendezvous"], [58, 3, 1, "", "num_nodes_waiting"], [58, 3, 1, "", "set_closed"], [58, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[58, 3, 1, "", "create_handler"], [58, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[58, 3, 1, "", "get"], [58, 3, 1, "", "get_as_bool"], [58, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[58, 1, 1, "", "C10dRendezvousBackend"], [58, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[58, 3, 1, "", "get_state"], [58, 4, 1, "", "name"], [58, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[58, 1, 1, "", "DynamicRendezvousHandler"], [58, 1, 1, "", "RendezvousBackend"], [58, 1, 1, "", "RendezvousTimeout"], [58, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[58, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[58, 3, 1, "", "get_state"], [58, 4, 1, "", "name"], [58, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[58, 4, 1, "", "close"], [58, 4, 1, "", "heartbeat"], [58, 4, 1, "", "join"], [58, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[58, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[58, 1, 1, "", "EtcdRendezvousBackend"], [58, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[58, 3, 1, "", "get_state"], [58, 4, 1, "", "name"], [58, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[58, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[58, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[58, 3, 1, "", "add"], [58, 3, 1, "", "check"], [58, 3, 1, "", "get"], [58, 3, 1, "", "set"], [58, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[60, 1, 1, "", "FileTimerClient"], [60, 1, 1, "", "FileTimerServer"], [60, 1, 1, "", "LocalTimerClient"], [60, 1, 1, "", "LocalTimerServer"], [60, 1, 1, "", "TimerClient"], [60, 1, 1, "", "TimerRequest"], [60, 1, 1, "", "TimerServer"], [60, 5, 1, "", "configure"], [60, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[60, 3, 1, "", "acquire"], [60, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[60, 3, 1, "", "clear_timers"], [60, 3, 1, "", "get_expired_timers"], [60, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[41, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[63, 1, 1, "", "BackwardPrefetch"], [63, 1, 1, "", "CPUOffload"], [63, 1, 1, "", "FullyShardedDataParallel"], [63, 1, 1, "", "MixedPrecision"], [63, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[63, 3, 1, "", "apply"], [63, 3, 1, "", "clip_grad_norm_"], [63, 3, 1, "", "flatten_sharded_optim_state_dict"], [63, 3, 1, "", "forward"], [63, 3, 1, "", "fsdp_modules"], [63, 3, 1, "", "full_optim_state_dict"], [63, 3, 1, "", "load_optim_state_dict_pre_hook"], [63, 4, 1, "", "module"], [63, 3, 1, "", "named_buffers"], [63, 3, 1, "", "named_parameters"], [63, 3, 1, "", "no_sync"], [63, 3, 1, "", "optim_state_dict"], [63, 3, 1, "", "optim_state_dict_post_hook"], [63, 3, 1, "", "optim_state_dict_to_load"], [63, 3, 1, "", "register_comm_hook"], [63, 3, 1, "", "rekey_optim_state_dict"], [63, 3, 1, "", "scatter_full_optim_state_dict"], [63, 3, 1, "", "set_state_dict_type"], [63, 3, 1, "", "shard_full_optim_state_dict"], [63, 3, 1, "", "sharded_optim_state_dict"], [63, 3, 1, "", "state_dict_type"], [63, 3, 1, "", "summon_full_params"]], "torch.distributed.nn": [[41, 0, 0, "-", "api"], [41, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1919, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1919, 3, 1, "", "get_module_rref"], [1919, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[41, 0, 0, "-", "templates"]], "torch.distributed.optim": [[45, 1, 1, "", "DistributedOptimizer"], [45, 1, 1, "", "PostLocalSGDOptimizer"], [45, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[45, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[45, 3, 1, "", "load_state_dict"], [45, 3, 1, "", "state_dict"], [45, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[45, 3, 1, "", "add_param_group"], [45, 3, 1, "", "consolidate_state_dict"], [45, 3, 1, "", "join_hook"], [45, 3, 1, "", "load_state_dict"], [45, 3, 1, "", "state_dict"], [45, 3, 1, "", "step"]], "torch.distributed.pipeline": [[41, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1912, 1, 1, "", "Pipe"], [41, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1912, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1912, 1, 1, "", "pop"], [1912, 5, 1, "", "skippable"], [1912, 1, 1, "", "stash"], [1912, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1919, 1, 1, "", "BackendType"], [1919, 1, 1, "", "RRef"], [1919, 1, 1, "", "RpcBackendOptions"], [1919, 1, 1, "", "TensorPipeRpcBackendOptions"], [1919, 1, 1, "", "WorkerInfo"], [1919, 5, 1, "", "get_worker_info"], [1919, 5, 1, "", "init_rpc"], [1919, 5, 1, "", "remote"], [1919, 5, 1, "", "rpc_async"], [1919, 5, 1, "", "rpc_sync"], [1919, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1919, 4, 1, "", "init_method"], [1919, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1919, 4, 1, "", "device_maps"], [1919, 4, 1, "", "devices"], [1919, 4, 1, "", "init_method"], [1919, 4, 1, "", "num_worker_threads"], [1919, 4, 1, "", "rpc_timeout"], [1919, 3, 1, "", "set_device_map"], [1919, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1919, 4, 1, "", "id"], [1919, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1919, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[46, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[46, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[46, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[46, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[46, 1, 1, "", "ColwiseParallel"], [46, 1, 1, "", "PairwiseParallel"], [46, 1, 1, "", "RowwiseParallel"], [46, 1, 1, "", "SequenceParallel"], [46, 5, 1, "", "make_input_replicate_1d"], [46, 5, 1, "", "make_input_reshard_replicate"], [46, 5, 1, "", "make_input_shard_1d"], [46, 5, 1, "", "make_input_shard_1d_last_dim"], [46, 5, 1, "", "make_output_replicate_1d"], [46, 5, 1, "", "make_output_reshard_tensor"], [46, 5, 1, "", "make_output_shard_1d"], [46, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[47, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "enumerate_support"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_enumerate_support"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.beta": [[47, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[47, 2, 1, "", "arg_constraints"], [47, 4, 1, "", "concentration0"], [47, 4, 1, "", "concentration1"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.binomial": [[47, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "enumerate_support"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_enumerate_support"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.categorical": [[47, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "enumerate_support"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_enumerate_support"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[47, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.chi2": [[47, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[47, 2, 1, "", "arg_constraints"], [47, 4, 1, "", "df"], [47, 3, 1, "", "expand"]], "torch.distributions": [[47, 0, 0, "-", "constraint_registry"], [47, 0, 0, "-", "constraints"], [47, 0, 0, "-", "kl"], [47, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[47, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[47, 3, 1, "", "register"]], "torch.distributions.constraints": [[47, 1, 1, "", "Constraint"], [47, 2, 1, "", "cat"], [47, 2, 1, "", "dependent_property"], [47, 2, 1, "", "greater_than"], [47, 2, 1, "", "greater_than_eq"], [47, 2, 1, "", "half_open_interval"], [47, 2, 1, "", "independent"], [47, 2, 1, "", "integer_interval"], [47, 2, 1, "", "interval"], [47, 2, 1, "", "less_than"], [47, 2, 1, "", "multinomial"], [47, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[47, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[47, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "rsample"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "stddev"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[47, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.distribution": [[47, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[47, 4, 1, "", "arg_constraints"], [47, 4, 1, "", "batch_shape"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "enumerate_support"], [47, 4, 1, "", "event_shape"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "perplexity"], [47, 3, 1, "", "rsample"], [47, 3, 1, "", "sample"], [47, 3, 1, "", "sample_n"], [47, 3, 1, "", "set_default_validate_args"], [47, 4, 1, "", "stddev"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[47, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[47, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[47, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 4, 1, "", "stddev"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[47, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.gamma": [[47, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.geometric": [[47, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[47, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "stddev"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[47, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "scale"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[47, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "scale"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.independent": [[47, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "enumerate_support"], [47, 3, 1, "", "expand"], [47, 4, 1, "", "has_enumerate_support"], [47, 4, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.kl": [[47, 5, 1, "", "kl_divergence"], [47, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[47, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.laplace": [[47, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 4, 1, "", "stddev"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[47, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"]], "torch.distributions.log_normal": [[47, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 4, 1, "", "loc"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "scale"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[47, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[47, 2, 1, "", "arg_constraints"], [47, 4, 1, "", "covariance_matrix"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "precision_matrix"], [47, 3, 1, "", "rsample"], [47, 4, 1, "", "scale_tril"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[47, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 4, 1, "", "component_distribution"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mixture_distribution"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[47, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "support"], [47, 2, 1, "", "total_count"], [47, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[47, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[47, 2, 1, "", "arg_constraints"], [47, 4, 1, "", "covariance_matrix"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "precision_matrix"], [47, 3, 1, "", "rsample"], [47, 4, 1, "", "scale_tril"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[47, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.normal": [[47, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "stddev"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[47, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "enumerate_support"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_enumerate_support"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.pareto": [[47, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.poisson": [[47, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[47, 1, 1, "", "LogitRelaxedBernoulli"], [47, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "param_shape"], [47, 4, 1, "", "probs"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "probs"], [47, 2, 1, "", "support"], [47, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[47, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 4, 1, "", "logits"], [47, 4, 1, "", "probs"], [47, 2, 1, "", "support"], [47, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[47, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[47, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "expand"], [47, 4, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 3, 1, "", "rsample"], [47, 3, 1, "", "sample"], [47, 4, 1, "", "support"]], "torch.distributions.transforms": [[47, 1, 1, "", "AbsTransform"], [47, 1, 1, "", "AffineTransform"], [47, 1, 1, "", "CatTransform"], [47, 1, 1, "", "ComposeTransform"], [47, 1, 1, "", "CorrCholeskyTransform"], [47, 1, 1, "", "CumulativeDistributionTransform"], [47, 1, 1, "", "ExpTransform"], [47, 1, 1, "", "IndependentTransform"], [47, 1, 1, "", "LowerCholeskyTransform"], [47, 1, 1, "", "PositiveDefiniteTransform"], [47, 1, 1, "", "PowerTransform"], [47, 1, 1, "", "ReshapeTransform"], [47, 1, 1, "", "SigmoidTransform"], [47, 1, 1, "", "SoftmaxTransform"], [47, 1, 1, "", "SoftplusTransform"], [47, 1, 1, "", "StackTransform"], [47, 1, 1, "", "StickBreakingTransform"], [47, 1, 1, "", "TanhTransform"], [47, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[47, 3, 1, "", "forward_shape"], [47, 4, 1, "", "inv"], [47, 3, 1, "", "inverse_shape"], [47, 3, 1, "", "log_abs_det_jacobian"], [47, 4, 1, "", "sign"]], "torch.distributions.uniform": [[47, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "cdf"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "icdf"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "rsample"], [47, 4, 1, "", "stddev"], [47, 4, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[47, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 3, 1, "", "sample"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.weibull": [[47, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[47, 2, 1, "", "arg_constraints"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.distributions.wishart": [[47, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[47, 2, 1, "", "arg_constraints"], [47, 4, 1, "", "covariance_matrix"], [47, 3, 1, "", "entropy"], [47, 3, 1, "", "expand"], [47, 2, 1, "", "has_rsample"], [47, 3, 1, "", "log_prob"], [47, 4, 1, "", "mean"], [47, 4, 1, "", "mode"], [47, 4, 1, "", "precision_matrix"], [47, 3, 1, "", "rsample"], [47, 4, 1, "", "scale_tril"], [47, 2, 1, "", "support"], [47, 4, 1, "", "variance"]], "torch.fft": [[1085, 5, 1, "", "fft"], [1086, 5, 1, "", "fft2"], [1087, 5, 1, "", "fftfreq"], [1088, 5, 1, "", "fftn"], [1089, 5, 1, "", "fftshift"], [1090, 5, 1, "", "hfft"], [1091, 5, 1, "", "hfft2"], [1092, 5, 1, "", "hfftn"], [1093, 5, 1, "", "ifft"], [1094, 5, 1, "", "ifft2"], [1095, 5, 1, "", "ifftn"], [1096, 5, 1, "", "ifftshift"], [1097, 5, 1, "", "ihfft"], [1098, 5, 1, "", "ihfft2"], [1099, 5, 1, "", "ihfftn"], [1100, 5, 1, "", "irfft"], [1101, 5, 1, "", "irfft2"], [1102, 5, 1, "", "irfftn"], [1103, 5, 1, "", "rfft"], [1104, 5, 1, "", "rfft2"], [1105, 5, 1, "", "rfftfreq"], [1106, 5, 1, "", "rfftn"]], "torch.func": [[1125, 5, 1, "", "functional_call"], [1126, 5, 1, "", "functionalize"], [1127, 5, 1, "", "grad"], [1128, 5, 1, "", "grad_and_value"], [1129, 5, 1, "", "hessian"], [1130, 5, 1, "", "jacfwd"], [1131, 5, 1, "", "jacrev"], [1132, 5, 1, "", "jvp"], [1133, 5, 1, "", "linearize"], [1134, 5, 1, "", "replace_all_batch_norm_modules_"], [1135, 5, 1, "", "stack_module_state"], [1136, 5, 1, "", "vjp"], [1137, 5, 1, "", "vmap"]], "torch.futures": [[70, 1, 1, "", "Future"], [70, 5, 1, "", "collect_all"], [70, 5, 1, "", "wait_all"]], "torch.futures.Future": [[70, 3, 1, "", "add_done_callback"], [70, 3, 1, "", "done"], [70, 3, 1, "", "set_exception"], [70, 3, 1, "", "set_result"], [70, 3, 1, "", "then"], [70, 3, 1, "", "value"], [70, 3, 1, "", "wait"]], "torch.fx": [[71, 1, 1, "", "Graph"], [71, 1, 1, "", "GraphModule"], [71, 1, 1, "", "Interpreter"], [71, 1, 1, "", "Node"], [71, 1, 1, "", "Proxy"], [71, 1, 1, "", "Tracer"], [71, 1, 1, "", "Transformer"], [71, 0, 0, "-", "experimental"], [71, 0, 0, "-", "passes"], [71, 5, 1, "", "replace_pattern"], [71, 5, 1, "", "symbolic_trace"], [71, 5, 1, "", "wrap"]], "torch.fx.Graph": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "call_function"], [71, 3, 1, "", "call_method"], [71, 3, 1, "", "call_module"], [71, 3, 1, "", "create_node"], [71, 3, 1, "", "eliminate_dead_code"], [71, 3, 1, "", "erase_node"], [71, 3, 1, "", "get_attr"], [71, 3, 1, "", "graph_copy"], [71, 3, 1, "", "inserting_after"], [71, 3, 1, "", "inserting_before"], [71, 3, 1, "", "lint"], [71, 3, 1, "", "node_copy"], [71, 4, 1, "", "nodes"], [71, 3, 1, "", "on_generate_code"], [71, 3, 1, "", "output"], [71, 3, 1, "", "placeholder"], [71, 3, 1, "", "print_tabular"], [71, 3, 1, "", "process_inputs"], [71, 3, 1, "", "process_outputs"], [71, 3, 1, "", "python_code"], [71, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "add_submodule"], [71, 4, 1, "", "code"], [71, 3, 1, "", "delete_all_unused_submodules"], [71, 3, 1, "", "delete_submodule"], [71, 4, 1, "", "graph"], [71, 3, 1, "", "print_readable"], [71, 3, 1, "", "recompile"], [71, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[71, 3, 1, "", "boxed_run"], [71, 3, 1, "", "call_function"], [71, 3, 1, "", "call_method"], [71, 3, 1, "", "call_module"], [71, 3, 1, "", "fetch_args_kwargs_from_env"], [71, 3, 1, "", "fetch_attr"], [71, 3, 1, "", "get_attr"], [71, 3, 1, "", "map_nodes_to_values"], [71, 3, 1, "", "output"], [71, 3, 1, "", "placeholder"], [71, 3, 1, "", "run"], [71, 3, 1, "", "run_node"]], "torch.fx.Node": [[71, 4, 1, "", "all_input_nodes"], [71, 3, 1, "", "append"], [71, 4, 1, "", "args"], [71, 3, 1, "", "format_node"], [71, 3, 1, "", "is_impure"], [71, 4, 1, "", "kwargs"], [71, 4, 1, "", "next"], [71, 3, 1, "", "normalized_arguments"], [71, 3, 1, "", "prepend"], [71, 4, 1, "", "prev"], [71, 3, 1, "", "replace_all_uses_with"], [71, 3, 1, "", "replace_input_with"], [71, 4, 1, "", "stack_trace"], [71, 3, 1, "", "update_arg"], [71, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[71, 3, 1, "", "call_module"], [71, 3, 1, "", "create_arg"], [71, 3, 1, "", "create_args_for_root"], [71, 3, 1, "", "create_node"], [71, 3, 1, "", "create_proxy"], [71, 3, 1, "", "getattr"], [71, 3, 1, "", "is_leaf_module"], [71, 3, 1, "", "iter"], [71, 3, 1, "", "keys"], [71, 3, 1, "", "path_of_module"], [71, 3, 1, "", "proxy"], [71, 3, 1, "", "to_bool"], [71, 3, 1, "", "trace"]], "torch.fx.Transformer": [[71, 3, 1, "", "call_function"], [71, 3, 1, "", "call_module"], [71, 3, 1, "", "get_attr"], [71, 3, 1, "", "placeholder"], [71, 3, 1, "", "transform"]], "torch.fx.experimental": [[71, 0, 0, "-", "migrate_gradual_types"], [71, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[71, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[71, 0, 0, "-", "backends"], [71, 0, 0, "-", "dialect"], [71, 0, 0, "-", "infra"], [71, 0, 0, "-", "tests"], [71, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[71, 0, 0, "-", "common"]], "torch.hub": [[1863, 5, 1, "", "download_url_to_file"], [1863, 5, 1, "", "get_dir"], [1863, 5, 1, "", "help"], [1863, 5, 1, "", "list"], [1863, 5, 1, "", "load"], [1863, 5, 1, "", "load_state_dict_from_url"], [1863, 5, 1, "", "set_dir"]], "torch.jit": [[1194, 1, 1, "", "Attribute"], [1195, 1, 1, "", "ScriptFunction"], [1196, 1, 1, "", "ScriptModule"], [1197, 5, 1, "", "annotate"], [1198, 5, 1, "", "enable_onednn_fusion"], [1866, 5, 1, "", "export"], [1199, 5, 1, "", "fork"], [1200, 5, 1, "", "freeze"], [1201, 5, 1, "", "ignore"], [1868, 5, 1, "", "is_scripting"], [1868, 5, 1, "", "is_tracing"], [1202, 5, 1, "", "isinstance"], [1203, 5, 1, "", "load"], [1866, 0, 0, "-", "mobile"], [1204, 5, 1, "", "onednn_fusion_enabled"], [1205, 5, 1, "", "optimize_for_inference"], [1206, 5, 1, "", "save"], [1207, 5, 1, "", "script"], [1208, 5, 1, "", "script_if_tracing"], [1209, 5, 1, "", "set_fusion_strategy"], [1210, 1, 1, "", "strict_fusion"], [1867, 0, 0, "-", "supported_ops"], [1211, 5, 1, "", "trace"], [1212, 5, 1, "", "trace_module"], [1871, 0, 0, "-", "unsupported_tensor_ops"], [1213, 5, 1, "", "unused"], [1214, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1194, 3, 1, "", "count"], [1194, 3, 1, "", "index"], [1194, 2, 1, "", "type"], [1194, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1195, 3, 1, "", "get_debug_state"], [1195, 3, 1, "", "save"], [1195, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1196, 3, 1, "", "add_module"], [1196, 3, 1, "", "apply"], [1196, 3, 1, "", "bfloat16"], [1196, 3, 1, "", "buffers"], [1196, 3, 1, "", "children"], [1196, 4, 1, "", "code"], [1196, 4, 1, "", "code_with_constants"], [1196, 3, 1, "", "compile"], [1196, 3, 1, "", "cpu"], [1196, 3, 1, "", "cuda"], [1196, 3, 1, "", "double"], [1196, 3, 1, "", "eval"], [1196, 3, 1, "", "extra_repr"], [1196, 3, 1, "", "float"], [1196, 3, 1, "", "get_buffer"], [1196, 3, 1, "", "get_extra_state"], [1196, 3, 1, "", "get_parameter"], [1196, 3, 1, "", "get_submodule"], [1196, 4, 1, "", "graph"], [1196, 3, 1, "", "half"], [1196, 4, 1, "", "inlined_graph"], [1196, 3, 1, "", "ipu"], [1196, 3, 1, "", "load_state_dict"], [1196, 3, 1, "", "modules"], [1196, 3, 1, "", "named_buffers"], [1196, 3, 1, "", "named_children"], [1196, 3, 1, "", "named_modules"], [1196, 3, 1, "", "named_parameters"], [1196, 3, 1, "", "parameters"], [1196, 3, 1, "", "register_backward_hook"], [1196, 3, 1, "", "register_buffer"], [1196, 3, 1, "", "register_forward_hook"], [1196, 3, 1, "", "register_forward_pre_hook"], [1196, 3, 1, "", "register_full_backward_hook"], [1196, 3, 1, "", "register_full_backward_pre_hook"], [1196, 3, 1, "", "register_load_state_dict_post_hook"], [1196, 3, 1, "", "register_module"], [1196, 3, 1, "", "register_parameter"], [1196, 3, 1, "", "register_state_dict_pre_hook"], [1196, 3, 1, "", "requires_grad_"], [1196, 3, 1, "", "save"], [1196, 3, 1, "", "set_extra_state"], [1196, 3, 1, "", "share_memory"], [1196, 3, 1, "", "state_dict"], [1196, 3, 1, "", "to"], [1196, 3, 1, "", "to_empty"], [1196, 3, 1, "", "train"], [1196, 3, 1, "", "type"], [1196, 3, 1, "", "xpu"], [1196, 3, 1, "", "zero_grad"]], "torch.library": [[1873, 1, 1, "", "Library"]], "torch.library.Library": [[1873, 3, 1, "", "define"], [1873, 3, 1, "", "impl"]], "torch.linalg": [[1225, 5, 1, "", "cholesky"], [1226, 5, 1, "", "cholesky_ex"], [1227, 5, 1, "", "cond"], [1228, 5, 1, "", "cross"], [1229, 5, 1, "", "det"], [1230, 5, 1, "", "diagonal"], [1231, 5, 1, "", "eig"], [1232, 5, 1, "", "eigh"], [1233, 5, 1, "", "eigvals"], [1234, 5, 1, "", "eigvalsh"], [1235, 5, 1, "", "householder_product"], [1236, 5, 1, "", "inv"], [1237, 5, 1, "", "inv_ex"], [1238, 5, 1, "", "ldl_factor"], [1239, 5, 1, "", "ldl_factor_ex"], [1240, 5, 1, "", "ldl_solve"], [1241, 5, 1, "", "lstsq"], [1242, 5, 1, "", "lu"], [1243, 5, 1, "", "lu_factor"], [1244, 5, 1, "", "lu_factor_ex"], [1245, 5, 1, "", "lu_solve"], [1246, 5, 1, "", "matmul"], [1247, 5, 1, "", "matrix_exp"], [1248, 5, 1, "", "matrix_norm"], [1249, 5, 1, "", "matrix_power"], [1250, 5, 1, "", "matrix_rank"], [1251, 5, 1, "", "multi_dot"], [1252, 5, 1, "", "norm"], [1253, 5, 1, "", "pinv"], [1254, 5, 1, "", "qr"], [1255, 5, 1, "", "slogdet"], [1256, 5, 1, "", "solve"], [1257, 5, 1, "", "solve_ex"], [1258, 5, 1, "", "solve_triangular"], [1259, 5, 1, "", "svd"], [1260, 5, 1, "", "svdvals"], [1261, 5, 1, "", "tensorinv"], [1262, 5, 1, "", "tensorsolve"], [1263, 5, 1, "", "vander"], [1264, 5, 1, "", "vecdot"], [1265, 5, 1, "", "vector_norm"]], "torch.masked": [[1876, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1879, 1, 1, "", "Aggregation"], [1879, 1, 1, "", "Event"], [1879, 1, 1, "", "EventHandlerHandle"], [1879, 1, 1, "", "Stat"], [1879, 1, 1, "", "TensorboardEventHandler"], [1879, 1, 1, "", "data_value_t"], [1879, 5, 1, "", "log_event"], [1879, 5, 1, "", "register_event_handler"], [1879, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1879, 4, 1, "", "name"]], "torch.monitor.Event": [[1879, 3, 1, "", "__init__"], [1879, 4, 1, "", "data"], [1879, 4, 1, "", "name"], [1879, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1879, 3, 1, "", "__init__"], [1879, 3, 1, "", "add"], [1879, 4, 1, "", "count"], [1879, 3, 1, "", "get"], [1879, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1879, 3, 1, "", "__init__"]], "torch.mps": [[1304, 5, 1, "", "current_allocated_memory"], [1305, 5, 1, "", "driver_allocated_memory"], [1306, 5, 1, "", "empty_cache"], [1307, 5, 1, "", "get_rng_state"], [1308, 5, 1, "", "manual_seed"], [1312, 5, 1, "", "seed"], [1313, 5, 1, "", "set_per_process_memory_fraction"], [1314, 5, 1, "", "set_rng_state"], [1315, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1309, 5, 1, "", "profile"], [1310, 5, 1, "", "start"], [1311, 5, 1, "", "stop"]], "torch.multiprocessing": [[1881, 1, 1, "", "SpawnContext"], [1881, 5, 1, "", "get_all_sharing_strategies"], [1881, 5, 1, "", "get_sharing_strategy"], [1881, 5, 1, "", "set_sharing_strategy"], [1881, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1881, 3, 1, "", "join"]], "torch.nested": [[1884, 5, 1, "", "as_nested_tensor"], [1884, 5, 1, "", "nested_tensor"], [1884, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1333, 1, 1, "", "AdaptiveAvgPool1d"], [1334, 1, 1, "", "AdaptiveAvgPool2d"], [1335, 1, 1, "", "AdaptiveAvgPool3d"], [1336, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1337, 1, 1, "", "AdaptiveMaxPool1d"], [1338, 1, 1, "", "AdaptiveMaxPool2d"], [1339, 1, 1, "", "AdaptiveMaxPool3d"], [1340, 1, 1, "", "AlphaDropout"], [1341, 1, 1, "", "AvgPool1d"], [1342, 1, 1, "", "AvgPool2d"], [1343, 1, 1, "", "AvgPool3d"], [1344, 1, 1, "", "BCELoss"], [1345, 1, 1, "", "BCEWithLogitsLoss"], [1346, 1, 1, "", "BatchNorm1d"], [1347, 1, 1, "", "BatchNorm2d"], [1348, 1, 1, "", "BatchNorm3d"], [1349, 1, 1, "", "Bilinear"], [1350, 1, 1, "", "CELU"], [1351, 1, 1, "", "CTCLoss"], [1352, 1, 1, "", "ChannelShuffle"], [1353, 1, 1, "", "ConstantPad1d"], [1354, 1, 1, "", "ConstantPad2d"], [1355, 1, 1, "", "ConstantPad3d"], [1356, 1, 1, "", "Conv1d"], [1357, 1, 1, "", "Conv2d"], [1358, 1, 1, "", "Conv3d"], [1359, 1, 1, "", "ConvTranspose1d"], [1360, 1, 1, "", "ConvTranspose2d"], [1361, 1, 1, "", "ConvTranspose3d"], [1362, 1, 1, "", "CosineEmbeddingLoss"], [1363, 1, 1, "", "CosineSimilarity"], [1364, 1, 1, "", "CrossEntropyLoss"], [1365, 1, 1, "", "DataParallel"], [1366, 1, 1, "", "Dropout"], [1367, 1, 1, "", "Dropout1d"], [1368, 1, 1, "", "Dropout2d"], [1369, 1, 1, "", "Dropout3d"], [1370, 1, 1, "", "ELU"], [1371, 1, 1, "", "Embedding"], [1372, 1, 1, "", "EmbeddingBag"], [1373, 1, 1, "", "FeatureAlphaDropout"], [1374, 1, 1, "", "Flatten"], [1375, 1, 1, "", "Fold"], [1376, 1, 1, "", "FractionalMaxPool2d"], [1377, 1, 1, "", "FractionalMaxPool3d"], [1378, 1, 1, "", "GELU"], [1379, 1, 1, "", "GLU"], [1380, 1, 1, "", "GRU"], [1381, 1, 1, "", "GRUCell"], [1382, 1, 1, "", "GaussianNLLLoss"], [1383, 1, 1, "", "GroupNorm"], [1384, 1, 1, "", "Hardshrink"], [1385, 1, 1, "", "Hardsigmoid"], [1386, 1, 1, "", "Hardswish"], [1387, 1, 1, "", "Hardtanh"], [1388, 1, 1, "", "HingeEmbeddingLoss"], [1389, 1, 1, "", "HuberLoss"], [1390, 1, 1, "", "Identity"], [1391, 1, 1, "", "InstanceNorm1d"], [1392, 1, 1, "", "InstanceNorm2d"], [1393, 1, 1, "", "InstanceNorm3d"], [1394, 1, 1, "", "KLDivLoss"], [1395, 1, 1, "", "L1Loss"], [1396, 1, 1, "", "LPPool1d"], [1397, 1, 1, "", "LPPool2d"], [1398, 1, 1, "", "LSTM"], [1399, 1, 1, "", "LSTMCell"], [1400, 1, 1, "", "LayerNorm"], [1401, 1, 1, "", "LazyBatchNorm1d"], [1402, 1, 1, "", "LazyBatchNorm2d"], [1403, 1, 1, "", "LazyBatchNorm3d"], [1404, 1, 1, "", "LazyConv1d"], [1405, 1, 1, "", "LazyConv2d"], [1406, 1, 1, "", "LazyConv3d"], [1407, 1, 1, "", "LazyConvTranspose1d"], [1408, 1, 1, "", "LazyConvTranspose2d"], [1409, 1, 1, "", "LazyConvTranspose3d"], [1410, 1, 1, "", "LazyInstanceNorm1d"], [1411, 1, 1, "", "LazyInstanceNorm2d"], [1412, 1, 1, "", "LazyInstanceNorm3d"], [1413, 1, 1, "", "LazyLinear"], [1414, 1, 1, "", "LeakyReLU"], [1415, 1, 1, "", "Linear"], [1416, 1, 1, "", "LocalResponseNorm"], [1417, 1, 1, "", "LogSigmoid"], [1418, 1, 1, "", "LogSoftmax"], [1419, 1, 1, "", "MSELoss"], [1420, 1, 1, "", "MarginRankingLoss"], [1421, 1, 1, "", "MaxPool1d"], [1422, 1, 1, "", "MaxPool2d"], [1423, 1, 1, "", "MaxPool3d"], [1424, 1, 1, "", "MaxUnpool1d"], [1425, 1, 1, "", "MaxUnpool2d"], [1426, 1, 1, "", "MaxUnpool3d"], [1427, 1, 1, "", "Mish"], [1428, 1, 1, "", "Module"], [1429, 1, 1, "", "ModuleDict"], [1430, 1, 1, "", "ModuleList"], [1431, 1, 1, "", "MultiLabelMarginLoss"], [1432, 1, 1, "", "MultiLabelSoftMarginLoss"], [1433, 1, 1, "", "MultiMarginLoss"], [1434, 1, 1, "", "MultiheadAttention"], [1435, 1, 1, "", "NLLLoss"], [1436, 1, 1, "", "PReLU"], [1437, 1, 1, "", "PairwiseDistance"], [1438, 1, 1, "", "ParameterDict"], [1439, 1, 1, "", "ParameterList"], [1440, 1, 1, "", "PixelShuffle"], [1441, 1, 1, "", "PixelUnshuffle"], [1442, 1, 1, "", "PoissonNLLLoss"], [1443, 1, 1, "", "RNN"], [1444, 1, 1, "", "RNNBase"], [1445, 1, 1, "", "RNNCell"], [1446, 1, 1, "", "RReLU"], [1447, 1, 1, "", "ReLU"], [1448, 1, 1, "", "ReLU6"], [1449, 1, 1, "", "ReflectionPad1d"], [1450, 1, 1, "", "ReflectionPad2d"], [1451, 1, 1, "", "ReflectionPad3d"], [1452, 1, 1, "", "ReplicationPad1d"], [1453, 1, 1, "", "ReplicationPad2d"], [1454, 1, 1, "", "ReplicationPad3d"], [1455, 1, 1, "", "SELU"], [1456, 1, 1, "", "Sequential"], [1457, 1, 1, "", "SiLU"], [1458, 1, 1, "", "Sigmoid"], [1459, 1, 1, "", "SmoothL1Loss"], [1460, 1, 1, "", "SoftMarginLoss"], [1461, 1, 1, "", "Softmax"], [1462, 1, 1, "", "Softmax2d"], [1463, 1, 1, "", "Softmin"], [1464, 1, 1, "", "Softplus"], [1465, 1, 1, "", "Softshrink"], [1466, 1, 1, "", "Softsign"], [1467, 1, 1, "", "SyncBatchNorm"], [1468, 1, 1, "", "Tanh"], [1469, 1, 1, "", "Tanhshrink"], [1470, 1, 1, "", "Threshold"], [1471, 1, 1, "", "Transformer"], [1472, 1, 1, "", "TransformerDecoder"], [1473, 1, 1, "", "TransformerDecoderLayer"], [1474, 1, 1, "", "TransformerEncoder"], [1475, 1, 1, "", "TransformerEncoderLayer"], [1476, 1, 1, "", "TripletMarginLoss"], [1477, 1, 1, "", "TripletMarginWithDistanceLoss"], [1478, 1, 1, "", "Unflatten"], [1479, 1, 1, "", "Unfold"], [1480, 1, 1, "", "Upsample"], [1481, 1, 1, "", "UpsamplingBilinear2d"], [1482, 1, 1, "", "UpsamplingNearest2d"], [1483, 1, 1, "", "ZeroPad1d"], [1484, 1, 1, "", "ZeroPad2d"], [1485, 1, 1, "", "ZeroPad3d"], [1885, 0, 0, "-", "backends"], [1917, 0, 0, "-", "intrinsic"], [1885, 0, 0, "-", "modules"], [1885, 0, 0, "-", "parallel"], [1917, 0, 0, "-", "qat"], [1917, 0, 0, "-", "quantizable"], [1917, 0, 0, "-", "quantized"], [1885, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1336, 3, 1, "", "log_prob"], [1336, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1371, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1372, 3, 1, "", "forward"], [1372, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1401, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1402, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1403, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1404, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1405, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1406, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1407, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1408, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1409, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1410, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1411, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1412, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1413, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1428, 3, 1, "", "add_module"], [1428, 3, 1, "", "apply"], [1428, 3, 1, "", "bfloat16"], [1428, 3, 1, "", "buffers"], [1428, 3, 1, "", "children"], [1428, 3, 1, "", "compile"], [1428, 3, 1, "", "cpu"], [1428, 3, 1, "", "cuda"], [1428, 3, 1, "", "double"], [1428, 3, 1, "", "eval"], [1428, 3, 1, "", "extra_repr"], [1428, 3, 1, "", "float"], [1428, 3, 1, "", "forward"], [1428, 3, 1, "", "get_buffer"], [1428, 3, 1, "", "get_extra_state"], [1428, 3, 1, "", "get_parameter"], [1428, 3, 1, "", "get_submodule"], [1428, 3, 1, "", "half"], [1428, 3, 1, "", "ipu"], [1428, 3, 1, "", "load_state_dict"], [1428, 3, 1, "", "modules"], [1428, 3, 1, "", "named_buffers"], [1428, 3, 1, "", "named_children"], [1428, 3, 1, "", "named_modules"], [1428, 3, 1, "", "named_parameters"], [1428, 3, 1, "", "parameters"], [1428, 3, 1, "", "register_backward_hook"], [1428, 3, 1, "", "register_buffer"], [1428, 3, 1, "", "register_forward_hook"], [1428, 3, 1, "", "register_forward_pre_hook"], [1428, 3, 1, "", "register_full_backward_hook"], [1428, 3, 1, "", "register_full_backward_pre_hook"], [1428, 3, 1, "", "register_load_state_dict_post_hook"], [1428, 3, 1, "", "register_module"], [1428, 3, 1, "", "register_parameter"], [1428, 3, 1, "", "register_state_dict_pre_hook"], [1428, 3, 1, "", "requires_grad_"], [1428, 3, 1, "", "set_extra_state"], [1428, 3, 1, "", "share_memory"], [1428, 3, 1, "", "state_dict"], [1428, 3, 1, "", "to"], [1428, 3, 1, "", "to_empty"], [1428, 3, 1, "", "train"], [1428, 3, 1, "", "type"], [1428, 3, 1, "", "xpu"], [1428, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1429, 3, 1, "", "clear"], [1429, 3, 1, "", "items"], [1429, 3, 1, "", "keys"], [1429, 3, 1, "", "pop"], [1429, 3, 1, "", "update"], [1429, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1430, 3, 1, "", "append"], [1430, 3, 1, "", "extend"], [1430, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1434, 3, 1, "", "forward"], [1434, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1438, 3, 1, "", "clear"], [1438, 3, 1, "", "copy"], [1438, 3, 1, "", "fromkeys"], [1438, 3, 1, "", "get"], [1438, 3, 1, "", "items"], [1438, 3, 1, "", "keys"], [1438, 3, 1, "", "pop"], [1438, 3, 1, "", "popitem"], [1438, 3, 1, "", "setdefault"], [1438, 3, 1, "", "update"], [1438, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1439, 3, 1, "", "append"], [1439, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1444, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1456, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1467, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1471, 3, 1, "", "forward"], [1471, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1472, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1473, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1474, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1475, 3, 1, "", "forward"]], "torch.nn.functional": [[1486, 5, 1, "", "adaptive_avg_pool1d"], [1487, 5, 1, "", "adaptive_avg_pool2d"], [1488, 5, 1, "", "adaptive_avg_pool3d"], [1489, 5, 1, "", "adaptive_max_pool1d"], [1490, 5, 1, "", "adaptive_max_pool2d"], [1491, 5, 1, "", "adaptive_max_pool3d"], [1492, 5, 1, "", "affine_grid"], [1493, 5, 1, "", "alpha_dropout"], [1494, 5, 1, "", "avg_pool1d"], [1495, 5, 1, "", "avg_pool2d"], [1496, 5, 1, "", "avg_pool3d"], [1497, 5, 1, "", "batch_norm"], [1498, 5, 1, "", "bilinear"], [1499, 5, 1, "", "binary_cross_entropy"], [1500, 5, 1, "", "binary_cross_entropy_with_logits"], [1501, 5, 1, "", "celu"], [1502, 5, 1, "", "conv1d"], [1503, 5, 1, "", "conv2d"], [1504, 5, 1, "", "conv3d"], [1505, 5, 1, "", "conv_transpose1d"], [1506, 5, 1, "", "conv_transpose2d"], [1507, 5, 1, "", "conv_transpose3d"], [1508, 5, 1, "", "cosine_embedding_loss"], [1509, 5, 1, "", "cosine_similarity"], [1510, 5, 1, "", "cross_entropy"], [1511, 5, 1, "", "ctc_loss"], [1512, 5, 1, "", "dropout"], [1513, 5, 1, "", "dropout1d"], [1514, 5, 1, "", "dropout2d"], [1515, 5, 1, "", "dropout3d"], [1516, 5, 1, "", "elu"], [1517, 5, 1, "", "elu_"], [1518, 5, 1, "", "embedding"], [1519, 5, 1, "", "embedding_bag"], [1520, 5, 1, "", "feature_alpha_dropout"], [1521, 5, 1, "", "fold"], [1522, 5, 1, "", "fractional_max_pool2d"], [1523, 5, 1, "", "fractional_max_pool3d"], [1524, 5, 1, "", "gaussian_nll_loss"], [1525, 5, 1, "", "gelu"], [1526, 5, 1, "", "glu"], [1527, 5, 1, "", "grid_sample"], [1528, 5, 1, "", "group_norm"], [1529, 5, 1, "", "gumbel_softmax"], [1530, 5, 1, "", "hardshrink"], [1531, 5, 1, "", "hardsigmoid"], [1532, 5, 1, "", "hardswish"], [1533, 5, 1, "", "hardtanh"], [1534, 5, 1, "", "hardtanh_"], [1535, 5, 1, "", "hinge_embedding_loss"], [1536, 5, 1, "", "huber_loss"], [1537, 5, 1, "", "instance_norm"], [1538, 5, 1, "", "interpolate"], [1539, 5, 1, "", "kl_div"], [1540, 5, 1, "", "l1_loss"], [1541, 5, 1, "", "layer_norm"], [1542, 5, 1, "", "leaky_relu"], [1543, 5, 1, "", "leaky_relu_"], [1544, 5, 1, "", "linear"], [1545, 5, 1, "", "local_response_norm"], [1546, 5, 1, "", "log_softmax"], [1547, 5, 1, "", "logsigmoid"], [1548, 5, 1, "", "lp_pool1d"], [1549, 5, 1, "", "lp_pool2d"], [1550, 5, 1, "", "margin_ranking_loss"], [1551, 5, 1, "", "max_pool1d"], [1552, 5, 1, "", "max_pool2d"], [1553, 5, 1, "", "max_pool3d"], [1554, 5, 1, "", "max_unpool1d"], [1555, 5, 1, "", "max_unpool2d"], [1556, 5, 1, "", "max_unpool3d"], [1557, 5, 1, "", "mish"], [1558, 5, 1, "", "mse_loss"], [1559, 5, 1, "", "multi_margin_loss"], [1560, 5, 1, "", "multilabel_margin_loss"], [1561, 5, 1, "", "multilabel_soft_margin_loss"], [1562, 5, 1, "", "nll_loss"], [1563, 5, 1, "", "normalize"], [1564, 5, 1, "", "one_hot"], [1565, 5, 1, "", "pad"], [1566, 5, 1, "", "pairwise_distance"], [1567, 5, 1, "", "pdist"], [1568, 5, 1, "", "pixel_shuffle"], [1569, 5, 1, "", "pixel_unshuffle"], [1570, 5, 1, "", "poisson_nll_loss"], [1571, 5, 1, "", "prelu"], [1572, 5, 1, "", "relu"], [1573, 5, 1, "", "relu6"], [1574, 5, 1, "", "relu_"], [1575, 5, 1, "", "rrelu"], [1576, 5, 1, "", "rrelu_"], [1577, 5, 1, "", "scaled_dot_product_attention"], [1578, 5, 1, "", "selu"], [1579, 5, 1, "", "sigmoid"], [1580, 5, 1, "", "silu"], [1581, 5, 1, "", "smooth_l1_loss"], [1582, 5, 1, "", "soft_margin_loss"], [1583, 5, 1, "", "softmax"], [1584, 5, 1, "", "softmin"], [1585, 5, 1, "", "softplus"], [1586, 5, 1, "", "softshrink"], [1587, 5, 1, "", "softsign"], [1588, 5, 1, "", "tanh"], [1589, 5, 1, "", "tanhshrink"], [1590, 5, 1, "", "threshold"], [1591, 5, 1, "", "threshold_"], [1593, 5, 1, "", "triplet_margin_loss"], [1594, 5, 1, "", "triplet_margin_with_distance_loss"], [1595, 5, 1, "", "unfold"], [1596, 5, 1, "", "upsample"], [1597, 5, 1, "", "upsample_bilinear"], [1598, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1887, 5, 1, "", "calculate_gain"], [1887, 5, 1, "", "constant_"], [1887, 5, 1, "", "dirac_"], [1887, 5, 1, "", "eye_"], [1887, 5, 1, "", "kaiming_normal_"], [1887, 5, 1, "", "kaiming_uniform_"], [1887, 5, 1, "", "normal_"], [1887, 5, 1, "", "ones_"], [1887, 5, 1, "", "orthogonal_"], [1887, 5, 1, "", "sparse_"], [1887, 5, 1, "", "trunc_normal_"], [1887, 5, 1, "", "uniform_"], [1887, 5, 1, "", "xavier_normal_"], [1887, 5, 1, "", "xavier_uniform_"], [1887, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1917, 0, 0, "-", "modules"], [1917, 0, 0, "-", "qat"], [1917, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1917, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1917, 0, 0, "-", "dynamic"], [1917, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1917, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1599, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1599, 3, 1, "", "has_uninitialized_params"], [1599, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1600, 5, 1, "", "register_module_backward_hook"], [1601, 5, 1, "", "register_module_buffer_registration_hook"], [1602, 5, 1, "", "register_module_forward_hook"], [1603, 5, 1, "", "register_module_forward_pre_hook"], [1604, 5, 1, "", "register_module_full_backward_hook"], [1605, 5, 1, "", "register_module_full_backward_pre_hook"], [1606, 5, 1, "", "register_module_module_registration_hook"], [1607, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1608, 1, 1, "", "DistributedDataParallel"], [1592, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1608, 3, 1, "", "join"], [1608, 3, 1, "", "join_hook"], [1608, 3, 1, "", "no_sync"], [1608, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1609, 1, 1, "", "Parameter"], [1610, 1, 1, "", "UninitializedBuffer"], [1611, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1611, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1917, 0, 0, "-", "dynamic"], [1917, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1917, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1917, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1917, 0, 0, "-", "dynamic"], [1917, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1917, 0, 0, "-", "modules"]], "torch.nn.utils": [[1612, 5, 1, "", "clip_grad_norm_"], [1613, 5, 1, "", "clip_grad_value_"], [1614, 5, 1, "", "parameters_to_vector"], [1639, 5, 1, "", "remove_spectral_norm"], [1640, 5, 1, "", "remove_weight_norm"], [1648, 5, 1, "", "skip_init"], [1649, 5, 1, "", "spectral_norm"], [1885, 0, 0, "-", "stateless"], [1651, 5, 1, "", "vector_to_parameters"], [1652, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1615, 5, 1, "", "orthogonal"], [1616, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1617, 1, 1, "", "ParametrizationList"], [1618, 5, 1, "", "cached"], [1619, 5, 1, "", "is_parametrized"], [1620, 5, 1, "", "register_parametrization"], [1621, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1617, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1622, 1, 1, "", "BasePruningMethod"], [1623, 1, 1, "", "CustomFromMask"], [1624, 1, 1, "", "Identity"], [1625, 1, 1, "", "L1Unstructured"], [1626, 1, 1, "", "LnStructured"], [1627, 1, 1, "", "PruningContainer"], [1628, 1, 1, "", "RandomStructured"], [1629, 1, 1, "", "RandomUnstructured"], [1630, 5, 1, "", "custom_from_mask"], [1631, 5, 1, "", "global_unstructured"], [1632, 5, 1, "", "identity"], [1633, 5, 1, "", "is_pruned"], [1634, 5, 1, "", "l1_unstructured"], [1635, 5, 1, "", "ln_structured"], [1636, 5, 1, "", "random_structured"], [1637, 5, 1, "", "random_unstructured"], [1638, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1622, 3, 1, "", "apply"], [1622, 3, 1, "", "apply_mask"], [1622, 3, 1, "", "compute_mask"], [1622, 3, 1, "", "prune"], [1622, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1623, 3, 1, "", "apply"], [1623, 3, 1, "", "apply_mask"], [1623, 3, 1, "", "prune"], [1623, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1624, 3, 1, "", "apply"], [1624, 3, 1, "", "apply_mask"], [1624, 3, 1, "", "prune"], [1624, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1625, 3, 1, "", "apply"], [1625, 3, 1, "", "apply_mask"], [1625, 3, 1, "", "prune"], [1625, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1626, 3, 1, "", "apply"], [1626, 3, 1, "", "apply_mask"], [1626, 3, 1, "", "compute_mask"], [1626, 3, 1, "", "prune"], [1626, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1627, 3, 1, "", "add_pruning_method"], [1627, 3, 1, "", "apply"], [1627, 3, 1, "", "apply_mask"], [1627, 3, 1, "", "compute_mask"], [1627, 3, 1, "", "prune"], [1627, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1628, 3, 1, "", "apply"], [1628, 3, 1, "", "apply_mask"], [1628, 3, 1, "", "compute_mask"], [1628, 3, 1, "", "prune"], [1628, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1629, 3, 1, "", "apply"], [1629, 3, 1, "", "apply_mask"], [1629, 3, 1, "", "prune"], [1629, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1641, 1, 1, "", "PackedSequence"], [1642, 5, 1, "", "pack_padded_sequence"], [1643, 5, 1, "", "pack_sequence"], [1644, 5, 1, "", "pad_packed_sequence"], [1645, 5, 1, "", "pad_sequence"], [1646, 5, 1, "", "unpack_sequence"], [1647, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1641, 2, 1, "", "batch_sizes"], [1641, 3, 1, "", "count"], [1641, 2, 1, "", "data"], [1641, 3, 1, "", "index"], [1641, 4, 1, "", "is_cuda"], [1641, 3, 1, "", "is_pinned"], [1641, 2, 1, "", "sorted_indices"], [1641, 3, 1, "", "to"], [1641, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1650, 5, 1, "", "functional_call"]], "torch.onnx": [[1661, 1, 1, "", "ExportOptions"], [1662, 1, 1, "", "ExportOutput"], [1663, 1, 1, "", "ExportOutputSerializer"], [1664, 1, 1, "", "JitScalarType"], [1907, 5, 1, "", "disable_log"], [1907, 5, 1, "", "dynamo_export"], [1907, 5, 1, "", "enable_log"], [1907, 5, 1, "", "export"], [1907, 5, 1, "", "export_to_pretty_string"], [1907, 5, 1, "", "is_in_onnx_export"], [1907, 5, 1, "", "register_custom_op_symbolic"], [1907, 5, 1, "", "select_model_mode_for_export"], [1907, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1662, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1662, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1662, 4, 1, "", "diagnostic_context"], [1662, 4, 1, "", "model_proto"], [1662, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1663, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1664, 3, 1, "", "dtype"], [1664, 3, 1, "", "from_dtype"], [1664, 3, 1, "", "from_value"], [1664, 3, 1, "", "onnx_compatible"], [1664, 3, 1, "", "onnx_type"], [1664, 3, 1, "", "scalar_name"], [1664, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1908, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1908, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1908, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1665, 1, 1, "", "GraphInfo"], [1666, 1, 1, "", "VerificationOptions"], [1907, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1665, 3, 1, "", "all_mismatch_leaf_graph_info"], [1665, 3, 1, "", "clear"], [1665, 3, 1, "", "essential_node_count"], [1665, 3, 1, "", "essential_node_kinds"], [1665, 3, 1, "", "export_repro"], [1665, 3, 1, "", "find_mismatch"], [1665, 3, 1, "", "find_partition"], [1665, 3, 1, "", "has_mismatch"], [1665, 3, 1, "", "pretty_print_mismatch"], [1665, 3, 1, "", "pretty_print_tree"], [1665, 3, 1, "", "verify_export"]], "torch.optim": [[1667, 1, 1, "", "ASGD"], [1668, 1, 1, "", "Adadelta"], [1669, 1, 1, "", "Adagrad"], [1670, 1, 1, "", "Adam"], [1671, 1, 1, "", "AdamW"], [1672, 1, 1, "", "Adamax"], [1673, 1, 1, "", "LBFGS"], [1674, 1, 1, "", "NAdam"], [1910, 1, 1, "", "Optimizer"], [1680, 1, 1, "", "RAdam"], [1681, 1, 1, "", "RMSprop"], [1682, 1, 1, "", "Rprop"], [1683, 1, 1, "", "SGD"], [1684, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1667, 3, 1, "", "add_param_group"], [1667, 3, 1, "", "load_state_dict"], [1667, 3, 1, "", "register_step_post_hook"], [1667, 3, 1, "", "register_step_pre_hook"], [1667, 3, 1, "", "state_dict"], [1667, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1668, 3, 1, "", "add_param_group"], [1668, 3, 1, "", "load_state_dict"], [1668, 3, 1, "", "register_step_post_hook"], [1668, 3, 1, "", "register_step_pre_hook"], [1668, 3, 1, "", "state_dict"], [1668, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1669, 3, 1, "", "add_param_group"], [1669, 3, 1, "", "load_state_dict"], [1669, 3, 1, "", "register_step_post_hook"], [1669, 3, 1, "", "register_step_pre_hook"], [1669, 3, 1, "", "state_dict"], [1669, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1670, 3, 1, "", "add_param_group"], [1670, 3, 1, "", "load_state_dict"], [1670, 3, 1, "", "register_step_post_hook"], [1670, 3, 1, "", "register_step_pre_hook"], [1670, 3, 1, "", "state_dict"], [1670, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1671, 3, 1, "", "add_param_group"], [1671, 3, 1, "", "load_state_dict"], [1671, 3, 1, "", "register_step_post_hook"], [1671, 3, 1, "", "register_step_pre_hook"], [1671, 3, 1, "", "state_dict"], [1671, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1672, 3, 1, "", "add_param_group"], [1672, 3, 1, "", "load_state_dict"], [1672, 3, 1, "", "register_step_post_hook"], [1672, 3, 1, "", "register_step_pre_hook"], [1672, 3, 1, "", "state_dict"], [1672, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1673, 3, 1, "", "add_param_group"], [1673, 3, 1, "", "load_state_dict"], [1673, 3, 1, "", "register_step_post_hook"], [1673, 3, 1, "", "register_step_pre_hook"], [1673, 3, 1, "", "state_dict"], [1673, 3, 1, "", "step"], [1673, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1674, 3, 1, "", "add_param_group"], [1674, 3, 1, "", "load_state_dict"], [1674, 3, 1, "", "register_step_post_hook"], [1674, 3, 1, "", "register_step_pre_hook"], [1674, 3, 1, "", "state_dict"], [1674, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1675, 3, 1, "", "add_param_group"], [1676, 3, 1, "", "load_state_dict"], [1677, 3, 1, "", "state_dict"], [1678, 3, 1, "", "step"], [1679, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1680, 3, 1, "", "add_param_group"], [1680, 3, 1, "", "load_state_dict"], [1680, 3, 1, "", "register_step_post_hook"], [1680, 3, 1, "", "register_step_pre_hook"], [1680, 3, 1, "", "state_dict"], [1680, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1681, 3, 1, "", "add_param_group"], [1681, 3, 1, "", "load_state_dict"], [1681, 3, 1, "", "register_step_post_hook"], [1681, 3, 1, "", "register_step_pre_hook"], [1681, 3, 1, "", "state_dict"], [1681, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1682, 3, 1, "", "add_param_group"], [1682, 3, 1, "", "load_state_dict"], [1682, 3, 1, "", "register_step_post_hook"], [1682, 3, 1, "", "register_step_pre_hook"], [1682, 3, 1, "", "state_dict"], [1682, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1683, 3, 1, "", "add_param_group"], [1683, 3, 1, "", "load_state_dict"], [1683, 3, 1, "", "register_step_post_hook"], [1683, 3, 1, "", "register_step_pre_hook"], [1683, 3, 1, "", "state_dict"], [1683, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1684, 3, 1, "", "add_param_group"], [1684, 3, 1, "", "load_state_dict"], [1684, 3, 1, "", "register_step_post_hook"], [1684, 3, 1, "", "register_step_pre_hook"], [1684, 3, 1, "", "state_dict"], [1684, 3, 1, "", "step"], [1684, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1685, 1, 1, "", "ChainedScheduler"], [1686, 1, 1, "", "ConstantLR"], [1687, 1, 1, "", "CosineAnnealingLR"], [1688, 1, 1, "", "CosineAnnealingWarmRestarts"], [1689, 1, 1, "", "CyclicLR"], [1690, 1, 1, "", "ExponentialLR"], [1691, 1, 1, "", "LambdaLR"], [1692, 1, 1, "", "LinearLR"], [1693, 1, 1, "", "MultiStepLR"], [1694, 1, 1, "", "MultiplicativeLR"], [1695, 1, 1, "", "OneCycleLR"], [1696, 1, 1, "", "PolynomialLR"], [1697, 1, 1, "", "ReduceLROnPlateau"], [1698, 1, 1, "", "SequentialLR"], [1699, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1685, 3, 1, "", "get_last_lr"], [1685, 3, 1, "", "load_state_dict"], [1685, 3, 1, "", "print_lr"], [1685, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1686, 3, 1, "", "get_last_lr"], [1686, 3, 1, "", "load_state_dict"], [1686, 3, 1, "", "print_lr"], [1686, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1687, 3, 1, "", "get_last_lr"], [1687, 3, 1, "", "load_state_dict"], [1687, 3, 1, "", "print_lr"], [1687, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1688, 3, 1, "", "get_last_lr"], [1688, 3, 1, "", "load_state_dict"], [1688, 3, 1, "", "print_lr"], [1688, 3, 1, "", "state_dict"], [1688, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1689, 3, 1, "", "get_last_lr"], [1689, 3, 1, "", "get_lr"], [1689, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1690, 3, 1, "", "get_last_lr"], [1690, 3, 1, "", "load_state_dict"], [1690, 3, 1, "", "print_lr"], [1690, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1691, 3, 1, "", "get_last_lr"], [1691, 3, 1, "", "load_state_dict"], [1691, 3, 1, "", "print_lr"], [1691, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1692, 3, 1, "", "get_last_lr"], [1692, 3, 1, "", "load_state_dict"], [1692, 3, 1, "", "print_lr"], [1692, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1693, 3, 1, "", "get_last_lr"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "print_lr"], [1693, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1694, 3, 1, "", "get_last_lr"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "print_lr"], [1694, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1695, 3, 1, "", "get_last_lr"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "print_lr"], [1695, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1696, 3, 1, "", "get_last_lr"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "print_lr"], [1696, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1698, 3, 1, "", "get_last_lr"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "print_lr"], [1698, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1699, 3, 1, "", "get_last_lr"], [1699, 3, 1, "", "load_state_dict"], [1699, 3, 1, "", "print_lr"], [1699, 3, 1, "", "state_dict"]], "torch.overrides": [[1934, 5, 1, "", "get_ignored_functions"], [1934, 5, 1, "", "get_overridable_functions"], [1934, 5, 1, "", "get_testing_overrides"], [1934, 5, 1, "", "handle_torch_function"], [1934, 5, 1, "", "has_torch_function"], [1934, 5, 1, "", "is_tensor_like"], [1934, 5, 1, "", "is_tensor_method_or_property"], [1934, 5, 1, "", "resolve_name"], [1934, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1911, 1, 1, "", "Directory"], [1911, 1, 1, "", "EmptyMatchError"], [1911, 1, 1, "", "PackageExporter"], [1911, 1, 1, "", "PackageImporter"], [1911, 1, 1, "", "PackagingError"], [1911, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1911, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1911, 3, 1, "", "__init__"], [1911, 3, 1, "", "add_dependency"], [1911, 3, 1, "", "all_paths"], [1911, 3, 1, "", "close"], [1911, 3, 1, "", "denied_modules"], [1911, 3, 1, "", "deny"], [1911, 3, 1, "", "dependency_graph_string"], [1911, 3, 1, "", "extern"], [1911, 3, 1, "", "externed_modules"], [1911, 3, 1, "", "get_rdeps"], [1911, 3, 1, "", "get_unique_id"], [1911, 3, 1, "", "intern"], [1911, 3, 1, "", "interned_modules"], [1911, 3, 1, "", "mock"], [1911, 3, 1, "", "mocked_modules"], [1911, 3, 1, "", "register_extern_hook"], [1911, 3, 1, "", "register_intern_hook"], [1911, 3, 1, "", "register_mock_hook"], [1911, 3, 1, "", "save_binary"], [1911, 3, 1, "", "save_module"], [1911, 3, 1, "", "save_pickle"], [1911, 3, 1, "", "save_source_file"], [1911, 3, 1, "", "save_source_string"], [1911, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1911, 3, 1, "", "__init__"], [1911, 3, 1, "", "file_structure"], [1911, 3, 1, "", "id"], [1911, 3, 1, "", "import_module"], [1911, 3, 1, "", "load_binary"], [1911, 3, 1, "", "load_pickle"], [1911, 3, 1, "", "load_text"], [1911, 3, 1, "", "python_version"]], "torch.profiler": [[1913, 1, 1, "", "ProfilerAction"], [1913, 1, 1, "", "ProfilerActivity"], [1913, 1, 1, "", "_KinetoProfile"], [1913, 1, 1, "", "profile"], [1913, 5, 1, "", "schedule"], [1913, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1913, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1913, 3, 1, "", "add_metadata"], [1913, 3, 1, "", "add_metadata_json"], [1913, 3, 1, "", "events"], [1913, 3, 1, "", "export_chrome_trace"], [1913, 3, 1, "", "export_memory_timeline"], [1913, 3, 1, "", "export_stacks"], [1913, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1913, 5, 1, "", "is_available"], [1913, 5, 1, "", "mark"], [1913, 5, 1, "", "range_pop"], [1913, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1913, 3, 1, "", "step"]], "torch.quantization": [[1917, 0, 0, "-", "fx"]], "torch.quasirandom": [[1720, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1720, 3, 1, "", "draw"], [1720, 3, 1, "", "draw_base2"], [1720, 3, 1, "", "fast_forward"], [1720, 3, 1, "", "reset"]], "torch.random": [[1918, 5, 1, "", "fork_rng"], [1918, 5, 1, "", "get_rng_state"], [1918, 5, 1, "", "initial_seed"], [1918, 5, 1, "", "manual_seed"], [1918, 5, 1, "", "seed"], [1918, 5, 1, "", "set_rng_state"]], "torch.signal": [[1922, 0, 0, "-", "windows"]], "torch.signal.windows": [[1768, 5, 1, "", "bartlett"], [1769, 5, 1, "", "blackman"], [1770, 5, 1, "", "cosine"], [1771, 5, 1, "", "exponential"], [1772, 5, 1, "", "gaussian"], [1773, 5, 1, "", "general_cosine"], [1774, 5, 1, "", "general_hamming"], [1775, 5, 1, "", "hamming"], [1776, 5, 1, "", "hann"], [1777, 5, 1, "", "kaiser"], [1778, 5, 1, "", "nuttall"]], "torch.sparse": [[1788, 5, 1, "", "addmm"], [1789, 1, 1, "", "check_sparse_tensor_invariants"], [1790, 5, 1, "", "log_softmax"], [1791, 5, 1, "", "mm"], [1792, 5, 1, "", "sampled_addmm"], [1793, 5, 1, "", "softmax"], [1794, 5, 1, "", "spdiags"], [1795, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1789, 3, 1, "", "disable"], [1789, 3, 1, "", "enable"], [1789, 3, 1, "", "is_enabled"]], "torch.special": [[1924, 5, 1, "", "airy_ai"], [1924, 5, 1, "", "bessel_j0"], [1924, 5, 1, "", "bessel_j1"], [1924, 5, 1, "", "digamma"], [1924, 5, 1, "", "entr"], [1924, 5, 1, "", "erf"], [1924, 5, 1, "", "erfc"], [1924, 5, 1, "", "erfcx"], [1924, 5, 1, "", "erfinv"], [1924, 5, 1, "", "exp2"], [1924, 5, 1, "", "expit"], [1924, 5, 1, "", "expm1"], [1924, 5, 1, "", "gammainc"], [1924, 5, 1, "", "gammaincc"], [1924, 5, 1, "", "gammaln"], [1924, 5, 1, "", "i0"], [1924, 5, 1, "", "i0e"], [1924, 5, 1, "", "i1"], [1924, 5, 1, "", "i1e"], [1924, 5, 1, "", "log1p"], [1924, 5, 1, "", "log_ndtr"], [1924, 5, 1, "", "log_softmax"], [1924, 5, 1, "", "logit"], [1924, 5, 1, "", "logsumexp"], [1924, 5, 1, "", "multigammaln"], [1924, 5, 1, "", "ndtr"], [1924, 5, 1, "", "ndtri"], [1924, 5, 1, "", "polygamma"], [1924, 5, 1, "", "psi"], [1924, 5, 1, "", "round"], [1924, 5, 1, "", "scaled_modified_bessel_k0"], [1924, 5, 1, "", "scaled_modified_bessel_k1"], [1924, 5, 1, "", "sinc"], [1924, 5, 1, "", "softmax"], [1924, 5, 1, "", "spherical_bessel_j0"], [1924, 5, 1, "", "xlog1py"], [1924, 5, 1, "", "xlogy"], [1924, 5, 1, "", "zeta"]], "torch.testing": [[1930, 5, 1, "", "assert_allclose"], [1930, 5, 1, "", "assert_close"], [1930, 5, 1, "", "make_tensor"]], "torch.torch": [[1931, 2, 1, "", "default_generator"], [1935, 1, 1, "", "finfo"], [1935, 1, 1, "", "iinfo"]], "torch.utils": [[1931, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [38, 0, 0, "-", "data"], [1931, 0, 0, "-", "hipify"], [1872, 0, 0, "-", "jit"], [1931, 0, 0, "-", "model_dump"], [1878, 0, 0, "-", "model_zoo"], [1928, 0, 0, "-", "tensorboard"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[32, 5, 1, "", "BuildExtension"], [32, 5, 1, "", "CUDAExtension"], [32, 5, 1, "", "CppExtension"], [32, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [32, 5, 1, "", "include_paths"], [32, 5, 1, "", "is_ninja_available"], [32, 5, 1, "", "load"], [32, 5, 1, "", "load_inline"], [32, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[38, 1, 1, "", "BatchSampler"], [38, 1, 1, "", "ChainDataset"], [38, 1, 1, "", "ConcatDataset"], [38, 1, 1, "", "DataLoader"], [38, 1, 1, "", "Dataset"], [38, 1, 1, "", "IterableDataset"], [38, 1, 1, "", "RandomSampler"], [38, 1, 1, "", "Sampler"], [38, 1, 1, "", "SequentialSampler"], [38, 1, 1, "", "StackDataset"], [38, 1, 1, "", "Subset"], [38, 1, 1, "", "SubsetRandomSampler"], [38, 1, 1, "", "TensorDataset"], [38, 1, 1, "", "WeightedRandomSampler"], [38, 0, 0, "-", "datapipes"], [38, 5, 1, "", "default_collate"], [38, 5, 1, "", "default_convert"], [38, 5, 1, "", "get_worker_info"], [38, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[38, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[38, 0, 0, "-", "dataframe"], [38, 0, 0, "-", "iter"], [38, 0, 0, "-", "map"], [38, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[38, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[48, 5, 1, "", "from_dlpack"], [48, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1877, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1878, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1928, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1928, 3, 1, "", "__init__"], [1928, 3, 1, "", "add_audio"], [1928, 3, 1, "", "add_custom_scalars"], [1928, 3, 1, "", "add_embedding"], [1928, 3, 1, "", "add_figure"], [1928, 3, 1, "", "add_graph"], [1928, 3, 1, "", "add_histogram"], [1928, 3, 1, "", "add_hparams"], [1928, 3, 1, "", "add_image"], [1928, 3, 1, "", "add_images"], [1928, 3, 1, "", "add_mesh"], [1928, 3, 1, "", "add_pr_curve"], [1928, 3, 1, "", "add_scalar"], [1928, 3, 1, "", "add_scalars"], [1928, 3, 1, "", "add_text"], [1928, 3, 1, "", "add_video"], [1928, 3, 1, "", "close"], [1928, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 38, 1866, 1888, 1895], "mix": [0, 1866, 1888], "precis": [0, 1888, 1892, 1903], "packag": [0, 1, 33, 41, 1881, 1906, 1911], "torch": [0, 1, 2, 3, 4, 5, 10, 17, 18, 21, 26, 29, 31, 32, 34, 38, 40, 41, 43, 44, 46, 47, 48, 59, 62, 64, 65, 67, 68, 69, 70, 71, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1675, 1676, 1677, 1678, 1679, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1887, 1892, 1894, 1895, 1898, 1903, 1905, 1907, 1908, 1910, 1911, 1913, 1917, 1918, 1922, 1923, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935], "amp": [0, 1892], "autocast": [0, 1888], "gradient": [0, 1, 69, 1149, 1888, 1889, 1895, 1931], "scale": [0, 1888, 1899], "op": [0, 1871, 1888, 1907, 1931], "refer": [0, 29, 35, 65, 71, 1866, 1868, 1869, 1870, 1879, 1883, 1898, 1908, 1911, 1913, 1914, 1917, 1921, 1929], "elig": 0, "cuda": [0, 2, 10, 11, 34, 35, 210, 974, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1881, 1888, 1892, 1896, 1898, 1902, 1904, 1906], "specif": [0, 38, 1923], "behavior": [0, 38, 1889, 1897], "can": [0, 24, 1889, 1896], "float16": 0, "float32": 0, "promot": [0, 7], "widest": 0, "input": [0, 1882, 1888, 1897], "type": [0, 38, 600, 1868, 1869, 1894, 1907, 1911, 1929, 1935], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1500], "over": [0, 8, 1868], "binary_cross_entropi": [0, 1499], "cpu": [0, 2, 10, 207, 1889, 1891, 1914], "bfloat16": [0, 156], "differenti": [1, 1889], "autograd": [1, 10, 30, 33, 68, 886, 887, 888, 889, 890, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 1883, 1888, 1889, 1894, 1895, 1907, 1919, 1920], "forward": [1, 887, 1894, 1920], "mode": [1, 59, 66, 414, 1301, 1889, 1894, 1897, 1907, 1914, 1920], "function": [1, 26, 41, 47, 62, 64, 65, 67, 69, 71, 78, 83, 86, 87, 886, 887, 888, 889, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 1126, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1866, 1867, 1868, 1869, 1871, 1874, 1876, 1882, 1884, 1885, 1886, 1888, 1889, 1895, 1897, 1907, 1917, 1923, 1924, 1934], "higher": 1, "level": [1, 10, 1917], "api": [1, 10, 14, 15, 17, 29, 33, 35, 44, 52, 65, 68, 71, 1864, 1866, 1869, 1879, 1883, 1891, 1892, 1894, 1898, 1899, 1908, 1911, 1912, 1913, 1914, 1917], "local": [1, 24, 27, 1869, 1889, 1931], "disabl": [1, 17, 38, 955, 1866, 1889, 1931], "comput": [1, 69, 1889, 1903, 1920, 1931], "default": [1, 38, 39, 1868, 1889, 1892, 1897, 1916], "layout": [1, 1926], "manual": 1, "In": [1, 8, 1889, 1890, 1931], "place": [1, 68, 1882, 1889, 1890, 1907, 1931], "oper": [1, 10, 15, 39, 41, 68, 88, 1868, 1869, 1874, 1876, 1882, 1883, 1884, 1889, 1894, 1899, 1906, 1907, 1909, 1914, 1923, 1929, 1931], "tensor": [1, 15, 30, 33, 46, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 1828, 1867, 1871, 1874, 1881, 1882, 1883, 1884, 1889, 1894, 1905, 1907, 1914, 1917, 1923, 1926, 1927, 1929, 1931], "correct": [1, 71, 1889], "check": [1, 24, 71, 1866, 1889, 1898], "variabl": [1, 20, 22, 41, 59, 1866, 1868, 1869, 1892], "deprec": 1, "context": [1, 42, 56, 1920], "method": [1, 51, 52, 55, 60, 1867, 1868, 1871, 1907, 1917, 1923], "mixin": 1, "numer": [1, 1897, 1903, 1915], "profil": [1, 22, 28, 41, 912, 913, 914, 915, 916, 1309, 1310, 1311, 1880, 1899, 1900, 1913], "anomali": 1, "detect": 1, "graph": [1, 11, 16, 27, 28, 34, 71, 907, 908, 909, 910, 911, 1004, 1866, 1889, 1892, 1914], "backend": [2, 12, 19, 28, 41, 58, 59, 1866, 1898, 1901, 1914, 1916, 1919], "cudnn": 2, "mp": [2, 10, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1880, 1901], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 22, 1904], "util": [3, 4, 5, 10, 27, 32, 38, 41, 48, 65, 67, 1047, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1872, 1877, 1878, 1885, 1917, 1928, 1931, 1933], "bottleneck": 4, "checkpoint": [5, 39, 43], "pytorch": [6, 7, 8, 9, 10, 11, 19, 23, 24, 28, 33, 40, 41, 68, 1864, 1866, 1867, 1871, 1889, 1892, 1894, 1904, 1905, 1907, 1912], "govern": [6, 9, 10], "build": [6, 7, 10, 1891, 1899, 1900, 1906], "ci": [6, 10], "how": [6, 15, 16, 24, 39, 66, 1863, 1889, 1894, 1910, 1911], "add": [6, 9, 77, 98, 682], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1907], "guid": 7, "process": [7, 9, 38, 56, 1888], "get": [7, 16, 19, 44, 1907], "start": [7, 19, 44, 56, 1310], "propos": 7, "featur": [7, 1899, 1900], "report": [7, 1896], "issu": [7, 28, 1866], "implement": [7, 15, 49, 58, 60, 1863, 1893, 1897, 1907, 1915, 1921], "fix": [7, 59, 66, 261, 1107], "bug": 7, "ad": [7, 1894, 1907], "tutori": [7, 10, 1911, 1912, 1919], "improv": [7, 1900], "document": [7, 44, 1864], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 16, 19, 71, 1866, 1892, 1911], "readabl": 7, "test": [7, 24, 1869, 1894, 1911, 1930], "case": [7, 1866], "make": [7, 9, 11, 20, 81], "codebas": 7, "more": [7, 21, 64, 1919], "robust": 7, "triag": 7, "about": [7, 15, 1889, 1919], "sourc": [7, 1904, 1906, 1911], "develop": [7, 1864, 1907], "common": [7, 41, 71, 1899, 1914], "mistak": 7, "To": 7, "avoid": [7, 1902, 1904, 1907, 1911], "frequent": [7, 16, 1866, 1896, 1907, 1914], "ask": [7, 16, 1866, 1896, 1907, 1914], "question": [7, 16, 1866, 1896, 1907, 1914], "On": [7, 39, 1868], "python": [7, 8, 20, 68, 1864, 1866, 1867, 1868, 1869, 1870, 1871, 1904, 1907], "doc": [7, 10, 1898], "c": [7, 10, 33, 1889, 1894, 1898, 1905, 1907], "overview": [7, 12, 20, 25, 35, 71, 1908, 1911, 1913, 1923], "design": [8, 1869, 1893, 1919, 1920, 1921], "philosophi": 8, "principl": [8, 9], "1": [8, 17, 59, 66, 1866, 1895], "usabl": 8, "perform": [8, 10, 15, 24, 28, 1900, 1905], "2": [8, 17, 23, 24, 26, 28, 66, 1866, 1892, 1895, 1896], "simpl": [8, 1868, 1869, 1900, 1920], "easi": 8, "3": [8, 17, 59, 66], "first": [8, 1911], "best": [8, 1892, 1902, 1914], "class": [8, 51, 71, 1866, 1868, 1869, 1871, 1907, 1910, 1911, 1929], "languag": [8, 1864, 1866, 1868, 1869, 1870], "interoper": 8, "mechan": [9, 1886, 1889, 1897], "summari": [9, 17, 20, 1914], "modul": [9, 10, 23, 65, 67, 71, 1428, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1866, 1867, 1868, 1869, 1871, 1885, 1889, 1894, 1900, 1905, 1911, 1914], "core": [9, 10, 1865], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1869], "confirm": 9, "remov": [9, 1638, 1882], "The": [9, 14, 71, 1869, 1889], "re": [9, 1911], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 16, 59, 66], "controversi": 9, "gener": [9, 34, 42, 68, 71, 89, 1890, 1895, 1904, 1914, 1915, 1931], "polici": [9, 14], "faq": [9, 17, 1906], "respons": 10, "nn": [10, 23, 65, 67, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1612, 1613, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1868, 1869, 1885, 1886, 1887, 1889, 1892, 1894, 1905, 1917], "optim": [10, 19, 21, 45, 1675, 1676, 1677, 1678, 1679, 1888, 1889, 1910, 1919, 1920, 1931], "compil": [10, 16, 18, 21, 26, 28, 29, 67, 950, 952, 953, 954, 955, 956, 957, 1864, 1892], "jit": [10, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1211, 1212, 1213, 1214, 1866, 1869, 1872], "torchscript": [10, 33, 1866, 1867, 1868, 1869, 1871, 1891, 1899, 1909, 1911], "fx": [10, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 1900, 1914, 1917, 1933], "torchdynamo": [10, 11, 13, 16, 17, 28, 1893, 1907], "distribut": [10, 16, 41, 43, 44, 45, 46, 47, 59, 1885, 1886, 1893, 1898, 1900, 1919, 1920], "rng": 10, "multiprocess": [10, 56, 1881, 1892, 1902, 1906], "dataload": [10, 1904], "linear": [10, 30, 729, 730, 753, 761, 778, 1133, 1415, 1544, 1885, 1886, 1903, 1923], "algebra": [10, 30, 1903, 1923], "linalg": [10, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1874, 1903], "spars": [10, 1788, 1790, 1791, 1792, 1793, 1794, 1795, 1885, 1886, 1923], "nestedtensor": 10, "nest": [10, 1884], "maskedtensor": [10, 1876], "mask": [10, 1876], "fast": [10, 62, 1897, 1920], "fourier": [10, 62], "transform": [10, 26, 27, 47, 62, 64, 65, 67, 69, 71, 1471, 1885, 1894, 1900], "fft": [10, 62, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106], "inductor": [10, 16], "gpu": [10, 22, 41, 1885, 1886, 1888, 1896, 1912], "triton": [10, 22], "nvfuser": 10, "amd": [10, 1903], "rocm": [10, 1898], "hip": [10, 1898], "tool": [10, 34, 1915, 1923], "c10": 10, "dispatch": 10, "onnx": [10, 79, 80, 85, 1907, 1908, 1909], "export": [10, 16, 1907, 1911], "mobil": 10, "edg": [10, 1866, 1911], "model": [10, 14, 22, 33, 1863, 1888, 1896, 1899, 1910, 1911, 1912, 1914, 1917], "compress": [10, 1923], "window": [10, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1906, 1922], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1864, 1873, 1904], "xla": 10, "torchserv": 10, "torchvis": [10, 66], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "cudagraph": [11, 970], "tree": 11, "background": [11, 1897, 1920, 1921], "integr": 11, "callabl": 11, "previou": 11, "limit": [11, 17, 23, 68, 71, 1863, 1895, 1907], "comparison": [11, 1866, 1868, 1869, 1931], "custom": [12, 50, 60, 71, 86, 1869, 1888, 1892, 1894, 1895, 1900, 1907, 1910, 1911, 1914], "regist": [12, 1889], "after": 12, "aotautograd": [12, 75], "exampl": [12, 53, 71, 1888, 1893, 1894, 1895, 1907, 1920], "debug": [12, 28, 39, 41, 71, 1866, 1914, 1915], "speedi": 12, "compos": [12, 64, 69], "deeper": 13, "dive": 13, "what": [13, 24, 39, 64, 66, 69, 1876, 1889, 1911], "i": [13, 15, 16, 24, 69, 1876, 1889, 1911], "guard": [13, 14, 20], "dynamo": [13, 16, 81], "do": [13, 16, 19, 1911], "dynam": [14, 15, 58, 68, 71, 1914, 1917], "shape": [14, 15, 68, 85, 1907], "motiv": [14, 15, 1876], "abridg": 14, "public": 14, "overal": [14, 15], "architectur": [14, 15], "intern": [14, 1893, 1907, 1911], "dimdynam": 14, "unback": 14, "symint": 14, "fake": 15, "relat": [15, 1917], "work": [15, 26, 38, 65, 1888, 1896, 1923], "import": [15, 59, 1863, 1906, 1911], "bit": 15, "detail": 15, "subclass": [15, 1894], "each": [15, 1911], "individu": [15, 22], "doe": [15, 39, 1889], "convert": [15, 76, 794], "characterist": 15, "interact": [15, 26], "other": [15, 41, 1885, 1904, 1911, 1923, 1931], "resourc": [15, 1911], "you": [16, 19], "support": [16, 23, 88, 1867, 1869, 1876, 1882, 1883, 1884, 1895, 1907, 1909, 1914, 1923], "still": 16, "need": [16, 19, 1888], "whole": [16, 1892], "why": [16, 19, 64, 69, 1892, 1897, 1911, 1923], "my": [16, 24, 1863, 1889, 1896, 1911], "crash": 16, "error": [16, 28, 51, 1896, 1906, 1914, 1915], "torchinductor": [16, 22, 24, 28], "slow": 16, "excess": [16, 28], "recompil": [16, 28], "ar": [16, 64, 69, 1863, 1889, 1911], "product": [16, 69, 1874], "speed": [16, 1906], "up": [16, 59], "am": 16, "see": [16, 1911], "speedup": 16, "break": [16, 28, 1868, 1869], "identifi": [16, 28, 1869], "caus": [16, 28], "didn": 16, "t": [16, 26, 567, 1823, 1869, 1896], "when": [16, 1869, 1889, 1894, 1907, 1914, 1923], "incorrect": 16, "result": 16, "oom": 16, "control": [17, 68, 71, 1904], "fine": 17, "grain": 17, "trace": [17, 71, 588, 1211, 1833, 1866, 1907, 1913, 1914], "section": 17, "tabl": [17, 1864, 1905], "_dynamo": [17, 26], "disallow_in_graph": 17, "4": [17, 59, 66], "5": 17, "6": [17, 1892], "exist": 19, "anoth": [19, 1895], "wai": 19, "cach": [20, 1618, 1863, 1892, 1898], "frame": 20, "evalu": [20, 1889, 1897], "pep": 20, "523": 20, "instructiontransl": 20, "troubleshoot": [21, 28], "gotcha": [21, 1895], "learn": [21, 1910], "relev": 22, "environ": [22, 41, 59, 1892, 1899, 1911], "breakdown": 22, "time": [22, 1892], "kernel": [22, 1898, 1914], "0": [23, 24, 26, 28], "nnmodul": 23, "hook": [23, 39, 1889, 1900], "__call__": 23, "usag": [23, 35, 44, 59, 1892, 1895, 1899, 1900, 1906], "state_dict": [23, 1677], "dashboard": 24, "read": [24, 64, 1907], "measur": 24, "pr": 24, "affect": 24, "": [24, 66, 1911], "befor": 24, "merg": 24, "run": [24, 1863], "ani": [24, 119, 696, 1869], "technic": 25, "func": [26, 64, 65, 67, 69, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1894, 1895], "appli": 26, "d": 26, "doesn": [26, 1896], "pt": 26, "call": [26, 83, 1868, 1869, 1895], "insid": [26, 1911], "ed": 26, "workaround": 26, "us": [26, 28, 39, 41, 71, 1868, 1889, 1892, 1894, 1897, 1907, 1910, 1911, 1912, 1914, 1923], "allow_in_graph": [26, 952], "write": [27, 60, 71, 1889, 1894, 1907], "aten": [27, 1865, 1907], "ir": [27, 77, 1865], "pass": [27, 76, 82, 1869, 1892, 1902, 1914, 1920], "One": [27, 1906], "x": 27, "none": 27, "inform": [27, 1897, 1919], "subgraph": [27, 71], "rewrit": [27, 71], "manag": [27, 34, 42, 1881, 1892, 1898, 1911], "partition": 27, "matcher": 27, "capabl": 27, "base": [27, 1910], "titl": 28, "diagnos": 28, "runtim": [28, 1891, 1896], "minifi": 28, "access": [28, 30, 1868, 1911], "torch_compile_debug": 28, "accuraci": [28, 1903, 1914, 1915], "file": [28, 41, 1881, 1911], "an": [28, 1863, 1907, 1910, 1911], "complex": [30, 958, 1889, 1897], "number": [30, 34, 59, 1889, 1891, 1896, 1904, 1931], "creat": [30, 1866, 1883], "transit": [30, 59], "from": [30, 59, 67, 71, 1863, 1882, 1906, 1907, 1911], "old": 30, "represent": 30, "real": [30, 482, 1731, 1897], "imag": [30, 311, 1166], "angl": [30, 118, 695], "ab": [30, 90, 678], "serial": [30, 1905, 1931], "__config__": 31, "cpp_extens": 32, "extend": [33, 49, 1894, 1895], "extens": [33, 34, 1894, 1899, 1906], "author": [33, 71], "random": [34, 38, 68, 1896, 1904, 1918, 1931], "commun": [34, 39, 41, 1864], "collect": [34, 41], "stream": [34, 35, 975, 1044, 1892], "event": [34, 50, 52, 972], "beta": [34, 47], "memori": [34, 38, 1892, 1896, 1898, 1900], "nvidia": [34, 1903], "nvtx": [34, 1029, 1030, 1031], "jiter": [34, 1012, 1013], "sanit": [34, 35], "prototyp": [34, 1914, 1915], "data": [38, 68, 1869, 1893, 1896, 1907, 1915, 1929], "dataset": 38, "map": [38, 1898], "style": 38, "iter": [38, 1868], "load": [38, 1203, 1267, 1863, 1905, 1911, 1914], "order": [38, 1889], "sampler": 38, "batch": [38, 66, 1903, 1910], "non": [38, 71, 1885, 1886, 1889, 1892, 1903, 1911, 1914], "collate_fn": 38, "singl": [38, 59, 1888], "multi": [38, 41, 59, 1885, 1886], "platform": 38, "pin": [38, 1892], "ddp": 39, "powersgd": 39, "state": [39, 1900, 1911], "acknowledg": [39, 1912], "deploi": 40, "ha": 40, "been": 40, "move": 40, "multipi": 40, "come": [41, 1889], "which": [41, 1889], "choos": 41, "network": [41, 1892, 1896, 1900], "interfac": [41, 1898], "nccl": [41, 1892], "basic": [41, 1869, 1883, 1895, 1919, 1929], "initi": [41, 1885, 1900, 1929], "tcp": 41, "share": [41, 1881, 1892, 1911, 1921], "system": [41, 1869, 1881, 1895], "post": [41, 1914], "kei": [41, 1906], "valu": [41, 611, 1868, 1869, 1903, 1916, 1921], "store": [41, 58], "group": 41, "point": [41, 1899], "synchron": [41, 1045, 1315], "asynchron": [41, 1869, 1892, 1902], "third": 41, "parti": 41, "launch": [41, 59], "spawn": [41, 1881], "applic": 41, "monitor": [41, 1879], "barrier": 41, "torch_distributed_debug": 41, "log": [41, 369, 1269, 1899], "join": [42, 1931], "elast": [44, 49, 59], "advanc": [44, 1900], "plugin": 44, "parallel": [46, 1592, 1892, 1893, 1896, 1912, 1931], "probabl": 47, "score": 47, "pathwis": 47, "deriv": [47, 1889], "exponentialfamili": 47, "bernoulli": [47, 154, 920], "binomi": 47, "categor": 47, "cauchi": 47, "chi2": 47, "continuousbernoulli": 47, "dirichlet": 47, "exponenti": [47, 1771], "fishersnedecor": 47, "gamma": 47, "geometr": 47, "gumbel": 47, "halfcauchi": 47, "halfnorm": 47, "independ": 47, "kumaraswami": 47, "lkjcholeski": 47, "laplac": 47, "lognorm": 47, "lowrankmultivariatenorm": 47, "mixturesamefamili": 47, "multinomi": [47, 420, 1318], "multivariatenorm": 47, "negativebinomi": 47, "normal": [47, 1563, 1656, 1885, 1910], "onehotcategor": 47, "pareto": 47, "poisson": [47, 1706], "relaxedbernoulli": 47, "logitrelaxedbernoulli": 47, "relaxedonehotcategor": 47, "studentt": 47, "transformeddistribut": 47, "uniform": 47, "vonmis": 47, "weibul": 47, "wishart": 47, "kl": 47, "diverg": [47, 1871], "constraint": [47, 1892], "registri": [47, 58], "dlpack": 48, "agent": 49, "server": [49, 58, 60], "concept": 49, "watchdog": 49, "launcher": 50, "rendezv": [50, 58, 59], "handler": [50, 55, 58, 1896], "metric": [50, 55], "propag": [51, 1883], "object": [52, 1911], "torchelast": 54, "kubernet": 54, "multipl": [56, 1888, 1892, 1894, 1912], "worker": [56, 59, 1896], "quickstart": 57, "except": [58, 1896], "c10d": 58, "etcd": 58, "legaci": 58, "torchrun": 59, "node": [59, 77, 80, 84, 85, 907, 908, 909, 910, 911, 1889], "stack": [59, 1807, 1914], "fault": 59, "toler": 59, "size": [59, 534, 1884], "failur": [59, 74], "min": [59, 411, 1298], "max": [59, 407, 1293], "membership": [59, 1869], "note": [59, 1864, 1869, 1892, 1914, 1919], "definit": [59, 1869], "deploy": [59, 1899], "notic": [59, 1863], "expir": 60, "timer": 60, "client": 60, "train": [61, 1888, 1900, 1902, 1914], "script": [61, 1207, 1866, 1906, 1907], "helper": 62, "fullyshardeddataparallel": 63, "patch": [66, 1911], "norm": [66, 452, 1252, 1655], "happen": 66, "option": [66, 1868, 1891, 1906, 1910], "batchnorm": 66, "paramet": [66, 1609, 1868, 1910], "functorch": [66, 67], "eval": [66, 1889], "migrat": [67, 1866], "make_funct": 67, "combine_state_for_ensembl": 67, "ux": 68, "vmap": [68, 69, 889, 1137, 1856, 1894, 1895], "mutat": [68, 1931], "arbitrari": [68, 1911], "structur": [68, 1869], "out": [68, 1882, 1896], "depend": [68, 1911, 1920], "flow": [68, 71, 1914], "item": [68, 352], "nonzero": [68, 451, 1654], "friend": 68, "whirlwind": 69, "tour": 69, "grad": [69, 290, 904, 1127, 1889, 1892], "auto": 69, "vector": 69, "vjp": [69, 903, 1136], "jacobian": [69, 900], "jvp": [69, 888, 901, 1132, 1895], "jacrev": [69, 1131], "jacfwd": [69, 1130], "hessian": [69, 898, 1129], "futur": 70, "A": [71, 1900], "quick": 71, "primer": 71, "manipul": [71, 1883], "direct": 71, "With": [71, 1871], "replace_pattern": 71, "proxi": 71, "retrac": 71, "interpret": [71, 1866], "pattern": [71, 1868, 1907, 1911], "introduct": [71, 1876, 1884, 1914], "pitfal": [71, 1907], "pdb": 71, "print": [71, 1868, 1869], "to_fold": 71, "graphmodul": 71, "avail": 71, "debugg": 71, "symbol": [71, 78, 83, 86, 87, 1907, 1914, 1931], "static": [71, 1907, 1914], "tracer": [71, 73, 74, 1866], "leaf": 71, "miscellanea": 71, "diagsys0001": 72, "arg": 72, "format": [72, 1911], "too": 72, "verbos": 72, "fxe0001": 73, "success": 73, "fxe0002": 74, "fxe0003": 75, "frontend": [75, 81], "fxe0004": 76, "neg": [76, 439, 441, 1330, 1331], "sigmoid": [76, 523, 756, 1458, 1579, 1766], "fxe0005": 77, "fxe0006": 78, "atenlib": [78, 79], "fxe0007": 79, "fxe0008": 80, "fxe0009": 81, "fxe0010": 82, "fxe0011": 83, "fxe0012": 84, "unsupport": [84, 1868, 1869, 1871, 1907, 1909], "analysi": 84, "poe0001": 85, "miss": [85, 86, 87], "infer": [85, 1883, 1889, 1891, 1905], "poe0002": 86, "poe0003": 87, "standard": 87, "poe0004": 88, "newer": 88, "opset": 88, "version": [88, 1905], "abs_": 91, "absolut": [92, 679], "absolute_": 93, "aco": [94, 680], "acos_": 95, "acosh": [96, 681], "acosh_": 97, "add_": 99, "addbmm": [100, 683], "addbmm_": 101, "addcdiv": [102, 684], "addcdiv_": 103, "addcmul": [104, 685], "addcmul_": 105, "addmm": [106, 686, 1788], "addmm_": 107, "addmv": [108, 687], "addmv_": 109, "addr": [110, 688], "addr_": 111, "adjoint": [112, 689], "all": [113, 690, 1907, 1910], "allclos": [114, 691], "amax": [115, 692], "amin": [116, 693], "aminmax": [117, 694], "apply_": 120, "arcco": [121, 863], "arccos_": 122, "arccosh": [123, 864], "arccosh_": 124, "arcsin": [125, 865], "arcsin_": 126, "arcsinh": [127, 866], "arcsinh_": 128, "arctan": [129, 867], "arctan2": [130, 868], "arctan2_": 131, "arctan_": 132, "arctanh": [133, 869], "arctanh_": 134, "argmax": [135, 871], "argmin": [136, 872], "argsort": [137, 873], "argwher": [138, 874], "as_strid": [139, 875], "as_subclass": 140, "asin": [141, 878], "asin_": 142, "asinh": [143, 879], "asinh_": 144, "atan": [145, 880], "atan2": [146, 881], "atan2_": 147, "atan_": 148, "atanh": [149, 882], "atanh_": 150, "backward": [151, 886, 890, 1889, 1890, 1892, 1897, 1920], "baddbmm": [152, 918], "baddbmm_": 153, "bernoulli_": 155, "bincount": [157, 921], "bitwise_and": [158, 922], "bitwise_and_": 159, "bitwise_left_shift": [160, 923], "bitwise_left_shift_": 161, "bitwise_not": [162, 924], "bitwise_not_": 163, "bitwise_or": [164, 925], "bitwise_or_": 165, "bitwise_right_shift": [166, 926], "bitwise_right_shift_": 167, "bitwise_xor": [168, 927], "bitwise_xor_": 169, "bmm": [170, 930], "bool": 171, "broadcast_to": [172, 933], "byte": 173, "cauchy_": 174, "ccol_indic": 175, "cdoubl": 176, "ceil": [177, 939], "ceil_": 178, "cfloat": 179, "chalf": 180, "char": 181, "choleski": [182, 941, 1225], "cholesky_invers": [183, 942], "cholesky_solv": [184, 943], "chunk": [185, 944], "clamp": [186, 768, 945], "clamp_": 187, "clip": [188, 946, 1888], "clip_": 189, "clone": [190, 947], "coalesc": 191, "col_indic": 192, "conj": [193, 961], "conj_phys": [194, 962], "conj_physical_": 195, "contigu": 196, "copy_": 197, "copysign": [198, 963], "copysign_": 199, "corrcoef": [200, 964], "co": [201, 965], "cos_": 202, "cosh": [203, 966], "cosh_": 204, "count_nonzero": [205, 967], "cov": [206, 968], "cross": [208, 969, 1228, 1889], "crow_indic": 209, "cummax": [211, 1048], "cummin": [212, 1049], "cumprod": [213, 1050], "cumprod_": 214, "cumsum": [215, 1051], "cumsum_": 216, "data_ptr": 217, "deg2rad": [218, 1053], "dense_dim": 219, "dequant": [220, 1054, 1914], "det": [221, 1055, 1229], "detach": 222, "detach_": 223, "devic": [224, 991, 1892, 1903, 1926], "diag": [225, 1056], "diag_emb": [226, 1057], "diagflat": [227, 1058], "diagon": [228, 1059, 1230], "diagonal_scatt": [229, 1060], "diff": [230, 1061], "digamma": [231, 1062], "digamma_": 232, "dim": [233, 1882], "dist": [234, 1063], "div": [235, 1064, 1905], "div_": 236, "divid": [237, 1065], "divide_": 238, "dot": [239, 1066], "doubl": 240, "dsplit": [241, 1067], "element_s": 242, "eq": [243, 1074], "eq_": 244, "equal": [245, 1075], "erf": [246, 1076], "erf_": 247, "erfc": [248, 1077], "erfc_": 249, "erfinv": [250, 1078], "erfinv_": 251, "exp": [252, 1079], "exp_": 253, "expand": 254, "expand_a": 255, "expm1": [256, 1081], "expm1_": 257, "exponential_": 258, "fill_": 259, "fill_diagonal_": 260, "fix_": 262, "flatten": [263, 1108, 1374], "flip": [264, 1109], "fliplr": [265, 1110], "flipud": [266, 1111], "float": [267, 1905], "float_pow": [268, 1112], "float_power_": 269, "floor": [270, 1113], "floor_": 271, "floor_divid": [272, 1114], "floor_divide_": 273, "fmax": [274, 1115], "fmin": [275, 1116], "fmod": [276, 1117], "fmod_": 277, "frac": [278, 1118], "frac_": 279, "frexp": [280, 1119], "gather": [281, 984, 1138], "gcd": [282, 1139], "gcd_": 283, "ge": [284, 1140], "ge_": 285, "geometric_": 286, "geqrf": [287, 1141], "ger": [288, 1142], "get_devic": 289, "greater": [291, 1150], "greater_": 292, "greater_equ": [293, 1151], "greater_equal_": 294, "gt": [295, 1152], "gt_": 296, "half": 297, "hardshrink": [298, 1384, 1530], "heavisid": [299, 1155], "histc": [300, 1156], "histogram": [301, 1157], "hsplit": [302, 1159], "hypot": [303, 1162], "hypot_": 304, "i0": [305, 1163], "i0_": 306, "igamma": [307, 1164], "igamma_": 308, "igammac": [309, 1165], "igammac_": 310, "index_add": [312, 1167], "index_add_": 313, "index_copi": [314, 1168], "index_copy_": 315, "index_fil": 316, "index_fill_": 317, "index_put": 318, "index_put_": 319, "index_reduc": [320, 1169], "index_reduce_": 321, "index_select": [322, 1170], "indic": [323, 1864], "inner": [324, 1173], "int": 325, "int_repr": 326, "invers": [327, 1174, 1874], "is_coalesc": 328, "is_complex": [329, 1175], "is_conj": [330, 1176], "is_contigu": 331, "is_cuda": 332, "is_floating_point": [333, 1178], "is_infer": 334, "is_leaf": 335, "is_meta": 336, "is_pin": 337, "is_quant": 338, "is_set_to": 339, "is_shar": 340, "is_sign": 341, "is_spars": 342, "is_sparse_csr": 343, "isclos": [344, 1185], "isfinit": [345, 1186], "isinf": [346, 1188], "isnan": [347, 1189], "isneginf": [348, 1190], "isposinf": [349, 1191], "isreal": [350, 1192], "istft": [351, 1193], "items": 353, "kthvalu": [354, 1217], "lcm": [355, 1218], "lcm_": 356, "ldexp": [357, 1219], "ldexp_": 358, "le": [359, 1220], "le_": 360, "lerp": [361, 1221], "lerp_": 362, "less": [363, 1222], "less_": 364, "less_equ": [365, 1223], "less_equal_": 366, "lgamma": [367, 1224], "lgamma_": 368, "log10": [370, 1270], "log10_": 371, "log1p": [372, 1271], "log1p_": 373, "log2": [374, 1272], "log2_": 375, "log_": 376, "log_normal_": 377, "logaddexp": [378, 1273], "logaddexp2": [379, 1274], "logcumsumexp": [380, 1275], "logdet": [381, 1276], "logical_and": [382, 1277], "logical_and_": 383, "logical_not": [384, 1278], "logical_not_": 385, "logical_or": [386, 1279], "logical_or_": 387, "logical_xor": [388, 1280], "logical_xor_": 389, "logit": [390, 1281], "logit_": 391, "logsumexp": [392, 1283], "long": 393, "lt": [394, 1284], "lt_": 395, "lu": [396, 1242, 1285], "lu_solv": [397, 1245, 1286], "map_": 398, "masked_fil": 399, "masked_fill_": 400, "masked_scatt": 401, "masked_scatter_": 402, "masked_select": [403, 1289], "matmul": [404, 1246, 1290], "matrix_exp": [405, 1247, 1291], "matrix_pow": [406, 1249, 1292], "maximum": [408, 1294], "mean": [409, 1295], "median": [410, 1296], "minimum": [412, 1299], "mm": [413, 1300, 1791], "moveaxi": [415, 1302], "movedim": [416, 1303], "msort": [417, 1316], "mul": [418, 1317], "mul_": 419, "multipli": [421, 1319], "multiply_": 422, "mv": [423, 1320], "mvlgamma": [424, 1321], "mvlgamma_": 425, "nan_to_num": [426, 1322], "nan_to_num_": 427, "nanmean": [428, 1323], "nanmedian": [429, 1324], "nanquantil": [430, 1325], "nansum": [431, 1326], "narrow": [432, 1327], "narrow_copi": [433, 1328], "nbyte": 434, "ndim": 435, "ndimens": 436, "ne": [437, 1329], "ne_": 438, "neg_": 440, "negative_": 442, "nelement": 443, "new_empti": 444, "new_ful": 445, "new_on": 446, "new_tensor": 447, "new_zero": 448, "nextaft": [449, 1332], "nextafter_": 450, "normal_": 453, "not_equ": [454, 1657], "not_equal_": 455, "numel": [456, 1658], "numpi": [457, 1907], "orgqr": [458, 1700], "ormqr": [459, 1701], "outer": [460, 1702], "permut": [461, 1704, 1882], "pin_memori": 462, "pinvers": [463, 1705], "polygamma": [464, 1708], "polygamma_": 465, "posit": [466, 1709], "pow": [467, 1710], "pow_": 468, "prod": [469, 1711], "put_": 470, "q_per_channel_axi": 471, "q_per_channel_scal": 472, "q_per_channel_zero_point": 473, "q_scale": 474, "q_zero_point": 475, "qr": [476, 1254, 1713], "qscheme": 477, "quantil": [478, 1714], "rad2deg": [479, 1721], "random_": 480, "ravel": [481, 1730], "reciproc": [483, 1732], "reciprocal_": 484, "record_stream": 485, "register_hook": [486, 910], "remaind": [487, 1733], "remainder_": 488, "renorm": [489, 1734], "renorm_": 490, "repeat": 491, "repeat_interleav": [492, 1735], "requires_grad": [493, 1889], "requires_grad_": 494, "reshap": [495, 1736], "reshape_a": 496, "resize_": 497, "resize_as_": 498, "resolve_conj": [499, 1737], "resolve_neg": [500, 1738], "retain_grad": 501, "retains_grad": 502, "roll": [503, 1740], "rot90": [504, 1741], "round": [505, 1742], "round_": 506, "row_indic": 507, "rsqrt": [508, 1744], "rsqrt_": 509, "scatter": [510, 986, 1746], "scatter_": 511, "scatter_add": [512, 1747], "scatter_add_": 513, "scatter_reduc": [514, 1748], "scatter_reduce_": 515, "select": [516, 1751, 1876], "select_scatt": [517, 1752], "set_": 518, "sgn": [519, 1765], "sgn_": 520, "share_memory_": 521, "short": 522, "sigmoid_": 524, "sign": [525, 1767], "sign_": 526, "signbit": [527, 1779], "sin": [528, 1780], "sin_": 529, "sinc": [530, 1781], "sinc_": 531, "sinh": [532, 1782], "sinh_": 533, "slice_scatt": [535, 1783], "slogdet": [536, 1255, 1784], "smm": [537, 1785], "softmax": [538, 1461, 1583, 1786, 1793], "sort": [539, 1787], "sparse_dim": 540, "sparse_mask": 541, "sparse_resize_": 542, "sparse_resize_and_clear_": 543, "split": [544, 1802], "sqrt": [545, 1803], "sqrt_": 546, "squar": [547, 1804], "square_": 548, "squeez": [549, 1805], "squeeze_": 550, "sspaddmm": [551, 1806], "std": [552, 1808], "stft": [553, 1810], "storag": [554, 1925], "storage_offset": 555, "storage_typ": 556, "stride": 557, "sub": [558, 1811], "sub_": 559, "subtract": [560, 1812], "subtract_": 561, "sum": [562, 1795, 1813, 1885], "sum_to_s": 563, "svd": [564, 1259, 1814], "swapax": [565, 1816], "swapdim": [566, 1817], "t_": 568, "take": [569, 1824, 1910], "take_along_dim": [570, 1825], "tan": [571, 1826], "tan_": 572, "tanh": [573, 1468, 1588, 1827], "tanh_": 574, "tensor_split": [575, 1829], "tile": [576, 1831], "to_dens": 578, "to_mkldnn": 579, "to_spars": 580, "to_sparse_bsc": 581, "to_sparse_bsr": 582, "to_sparse_coo": 583, "to_sparse_csc": 584, "to_sparse_csr": 585, "tolist": 586, "topk": [587, 1832], "transpos": [589, 1834], "transpose_": 590, "triangular_solv": [591, 1837], "tril": [592, 1838], "tril_": 593, "triu": [594, 1840], "triu_": 595, "true_divid": [596, 1842], "true_divide_": 597, "trunc": [598, 1843], "trunc_": 599, "type_a": 601, "unbind": [602, 1844, 1884], "unflatten": [603, 1478, 1845], "unfold": [604, 1479, 1595], "uniform_": 605, "uniqu": [606, 1846], "unique_consecut": [607, 1847], "unsqueez": [608, 1848], "unsqueeze_": 609, "untyped_storag": 610, "var": [612, 1851], "vdot": [613, 1853], "view": [614, 1876, 1905, 1927], "view_a": 615, "vsplit": [616, 1857], "where": [617, 1859, 1863], "xlogi": [618, 1860], "xlogy_": 619, "zero_": 620, "_assert": 621, "_foreach_ab": 622, "_foreach_abs_": 623, "_foreach_aco": 624, "_foreach_acos_": 625, "_foreach_asin": 626, "_foreach_asin_": 627, "_foreach_atan": 628, "_foreach_atan_": 629, "_foreach_ceil": 630, "_foreach_ceil_": 631, "_foreach_co": 632, "_foreach_cos_": 633, "_foreach_cosh": 634, "_foreach_cosh_": 635, "_foreach_erf": 636, "_foreach_erf_": 637, "_foreach_erfc": 638, "_foreach_erfc_": 639, "_foreach_exp": 640, "_foreach_exp_": 641, "_foreach_expm1": 642, "_foreach_expm1_": 643, "_foreach_floor": 644, "_foreach_floor_": 645, "_foreach_frac": 646, "_foreach_frac_": 647, "_foreach_lgamma": 648, "_foreach_lgamma_": 649, "_foreach_log": 650, "_foreach_log10": 651, "_foreach_log10_": 652, "_foreach_log1p": 653, "_foreach_log1p_": 654, "_foreach_log2": 655, "_foreach_log2_": 656, "_foreach_log_": 657, "_foreach_neg": 658, "_foreach_neg_": 659, "_foreach_reciproc": 660, "_foreach_reciprocal_": 661, "_foreach_round": 662, "_foreach_round_": 663, "_foreach_sigmoid": 664, "_foreach_sigmoid_": 665, "_foreach_sin": 666, "_foreach_sin_": 667, "_foreach_sinh": 668, "_foreach_sinh_": 669, "_foreach_sqrt": 670, "_foreach_sqrt_": 671, "_foreach_tan": 672, "_foreach_tan_": 673, "_foreach_trunc": 674, "_foreach_trunc_": 675, "_foreach_zero_": 676, "_log": [677, 1875], "set_log": 677, "bnrelu2d": [697, 720], "bnrelu3d": [698, 721], "convbn1d": [699, 709], "convbn2d": [700, 710], "convbn3d": [701, 711], "convbnrelu1d": [702, 712], "convbnrelu2d": [703, 713], "convbnrelu3d": [704, 714], "convrelu1d": [705, 722], "convrelu2d": [706, 715, 723], "convrelu3d": [707, 716, 724], "linearrelu": [708, 717, 725, 726], "freeze_bn_stat": 718, "update_bn_stat": 719, "conv2d": [727, 736, 770, 1357, 1503], "conv3d": [728, 737, 771, 1358, 1504], "lstm": [731, 759, 1398, 1904], "multiheadattent": [732, 1434], "batchnorm2d": [733, 1347], "batchnorm3d": [734, 1348], "conv1d": [735, 769, 1356, 1502], "convtranspose1d": [738, 1359], "convtranspose2d": [739, 1360], "convtranspose3d": [740, 1361], "elu": [741, 772, 1370, 1516], "embed": [742, 1371, 1518], "embeddingbag": [743, 1372], "fxfloatfunct": 744, "floatfunct": 745, "groupnorm": [746, 1383], "hardswish": [747, 774, 1386, 1532], "instancenorm1d": [748, 1391], "instancenorm2d": [749, 1392], "instancenorm3d": [750, 1393], "layernorm": [751, 1400], "leakyrelu": [752, 1414], "qfunction": 754, "relu6": [755, 1448, 1573], "gru": [757, 1380], "grucel": [758, 1381], "lstmcell": [760, 1399], "rnncell": [762, 1445], "adaptive_avg_pool2d": [763, 1487], "adaptive_avg_pool3d": [764, 1488], "avg_pool2d": [765, 1495], "avg_pool3d": [766, 1496], "celu": [767, 1350, 1501], "hardsigmoid": [773, 1385, 1531], "hardtanh": [775, 1387, 1533], "interpol": [776, 1538], "leaky_relu": [777, 1542], "max_pool1d": [779, 1551], "max_pool2d": [780, 1552], "threshold": [781, 1470, 1590], "upsampl": [782, 1480, 1596], "upsample_bilinear": [783, 1597], "upsample_nearest": [784, 1598], "dequantstub": 785, "quantstub": 786, "quantwrapp": 787, "add_quant_dequ": 788, "backendconfig": 789, "backendpatternconfig": 790, "dtypeconfig": 791, "dtypewithconstraint": 792, "observationtyp": 793, "default_eval_fn": 795, "fakequant": [796, 1914], "fakequantizebas": 797, "fixedqparamsfakequant": 798, "fusedmovingavgobsfakequant": 799, "default_fake_qu": 800, "default_fused_act_fake_qu": 801, "default_fused_per_channel_wt_fake_qu": 802, "default_fused_wt_fake_qu": 803, "default_histogram_fake_qu": 804, "default_per_channel_weight_fake_qu": 805, "default_weight_fake_qu": 806, "disable_fake_qu": 807, "disable_observ": 808, "enable_fake_qu": 809, "enable_observ": 810, "fuse_modul": 811, "convertcustomconfig": 812, "fusecustomconfig": 813, "preparecustomconfig": 814, "standalonemoduleconfigentri": 815, "histogramobserv": 816, "minmaxobserv": 817, "movingaverageminmaxobserv": 818, "movingaverageperchannelminmaxobserv": 819, "noopobserv": 820, "observerbas": 821, "perchannelminmaxobserv": 822, "placeholderobserv": 823, "recordingobserv": 824, "default_debug_observ": 825, "default_dynamic_quant_observ": 826, "default_float_qparams_observ": 827, "default_histogram_observ": 828, "default_observ": 829, "default_per_channel_weight_observ": 830, "default_placeholder_observ": 831, "default_weight_observ": 832, "get_observer_state_dict": 833, "load_observer_state_dict": 834, "prepar": [835, 1914, 1917], "prepare_qat": 836, "propagate_qconfig": 837, "qconfig": [838, 1914, 1917], "default_activation_only_qconfig": 839, "default_debug_qconfig": 840, "default_dynamic_qconfig": 841, "default_per_channel_qconfig": 842, "default_qat_qconfig": 843, "default_qat_qconfig_v2": 844, "default_qconfig": 845, "default_weight_only_qconfig": 846, "float16_dynamic_qconfig": 847, "float16_static_qconfig": 848, "float_qparams_weight_only_qconfig": 849, "per_channel_dynamic_qconfig": 850, "qconfigmap": 851, "get_default_qat_qconfig_map": 852, "get_default_qconfig_map": 853, "quantiz": [854, 1885, 1900, 1907, 1914, 1915, 1916, 1917], "quantize_dynam": 855, "convert_fx": 856, "fuse_fx": 857, "prepare_fx": 858, "prepare_qat_fx": 859, "quantize_qat": 860, "swap_modul": 861, "arang": 862, "are_deterministic_algorithms_en": 870, "as_tensor": 876, "asarrai": 877, "atleast_1d": 883, "atleast_2d": 884, "atleast_3d": 885, "dual_level": 891, "forward_ad": [892, 893], "make_du": 892, "unpack_du": 893, "functionctx": [894, 895, 896, 897], "mark_dirti": 894, "mark_non_differenti": 895, "save_for_backward": 896, "set_materialize_grad": 897, "hvp": 899, "vhp": 902, "gradcheck": [905, 1897], "gradgradcheck": [906, 1897], "metadata": [907, 1899], "name": [908, 1868, 1882, 1883], "next_funct": 909, "register_prehook": 911, "load_nvprof": 912, "export_chrome_trac": 913, "key_averag": 914, "self_cpu_time_tot": 915, "total_averag": 916, "set_multithreading_en": 917, "bartlett_window": 919, "blackman_window": 928, "block_diag": 929, "broadcast_shap": 931, "broadcast_tensor": 932, "bucket": 934, "can_cast": 935, "cartesian_prod": 936, "cat": 937, "cdist": 938, "chain_matmul": 940, "column_stack": 948, "combin": [949, 1894], "compiled_with_cxx11_abi": 951, "assume_constant_result": 953, "list_backend": 956, "reset": 957, "concat": 959, "concaten": 960, "cudapluggablealloc": 971, "externalstream": 973, "outofmemoryerror": 974, "streamcontext": 976, "caching_allocator_alloc": 977, "caching_allocator_delet": 978, "can_device_access_p": 979, "change_current_alloc": 980, "clock_rat": 981, "comm": [982, 983, 984, 985, 986], "broadcast": [982, 1890], "broadcast_coalesc": 983, "reduce_add": 985, "current_blas_handl": 987, "current_devic": 988, "current_stream": 989, "default_stream": 990, "device_count": 992, "device_of": 993, "empty_cach": [994, 1306], "get_allocator_backend": 995, "get_arch_list": 996, "get_device_cap": 997, "get_device_nam": 998, "get_device_properti": 999, "get_gencode_flag": 1000, "get_rng_stat": [1001, 1148, 1307], "get_rng_state_al": 1002, "get_sync_debug_mod": 1003, "graph_pool_handl": 1005, "init": [1006, 1887], "initial_se": [1007, 1172], "ipc_collect": 1008, "is_avail": 1009, "is_current_stream_captur": 1010, "is_initi": 1011, "_create_jit_fn": 1012, "_create_multi_output_jit_fn": 1013, "list_gpu_process": 1014, "make_graphed_cal": 1015, "manual_se": [1016, 1288, 1308], "manual_seed_al": 1017, "max_memory_alloc": 1018, "max_memory_cach": 1019, "max_memory_reserv": 1020, "mem_get_info": 1021, "memory_alloc": 1022, "memory_cach": 1023, "memory_reserv": 1024, "memory_snapshot": 1025, "memory_stat": 1026, "memory_summari": 1027, "memory_usag": 1028, "mark": 1029, "range_pop": 1030, "range_push": 1031, "power_draw": 1032, "reset_max_memory_alloc": 1033, "reset_max_memory_cach": 1034, "reset_peak_memory_stat": 1035, "seed": [1036, 1312, 1750], "seed_al": 1037, "set_devic": 1038, "set_per_process_memory_fract": [1039, 1313], "set_rng_stat": [1040, 1314, 1763], "set_rng_state_al": 1041, "set_stream": 1042, "set_sync_debug_mod": 1043, "temperatur": 1046, "cumulative_trapezoid": 1052, "dstack": 1068, "einsum": 1069, "empti": 1070, "empty_lik": 1071, "empty_strid": 1072, "enable_grad": 1073, "exp2": 1080, "ey": 1082, "fake_quantize_per_channel_affin": 1083, "fake_quantize_per_tensor_affin": 1084, "fft2": 1086, "fftfreq": 1087, "fftn": 1088, "fftshift": 1089, "hfft": 1090, "hfft2": 1091, "hfftn": 1092, "ifft": 1093, "ifft2": 1094, "ifftn": 1095, "ifftshift": 1096, "ihfft": 1097, "ihfft2": 1098, "ihfftn": 1099, "irfft": 1100, "irfft2": 1101, "irfftn": 1102, "rfft": 1103, "rfft2": 1104, "rfftfreq": 1105, "rfftn": 1106, "from_dlpack": 1120, "from_numpi": 1121, "frombuff": 1122, "full": [1123, 1905], "full_lik": 1124, "functional_cal": [1125, 1650], "grad_and_valu": 1128, "replace_all_batch_norm_modules_": 1134, "stack_module_st": 1135, "get_default_dtyp": 1143, "get_deterministic_debug_mod": 1144, "get_float32_matmul_precis": 1145, "get_num_interop_thread": 1146, "get_num_thread": 1147, "hamming_window": 1153, "hann_window": 1154, "histogramdd": 1158, "hspmm": 1160, "hstack": 1161, "inference_mod": 1171, "is_deterministic_algorithms_warn_only_en": 1177, "is_grad_en": 1179, "is_inference_mode_en": 1180, "is_nonzero": 1181, "is_storag": 1182, "is_tensor": 1183, "is_warn_always_en": 1184, "isin": 1187, "attribut": [1194, 1866, 1868, 1869, 1871, 1926], "scriptfunct": 1195, "scriptmodul": [1196, 1905], "annot": [1197, 1869], "enable_onednn_fus": 1198, "fork": 1199, "freez": 1200, "ignor": 1201, "isinst": 1202, "onednn_fusion_en": 1204, "optimize_for_infer": 1205, "save": [1206, 1745, 1863, 1889, 1899, 1905, 1914], "script_if_trac": 1208, "set_fusion_strategi": 1209, "strict_fus": 1210, "trace_modul": 1212, "unus": 1213, "wait": 1214, "kaiser_window": 1215, "kron": 1216, "cholesky_ex": 1226, "cond": 1227, "eig": 1231, "eigh": 1232, "eigval": 1233, "eigvalsh": 1234, "householder_product": 1235, "inv": 1236, "inv_ex": 1237, "ldl_factor": 1238, "ldl_factor_ex": 1239, "ldl_solv": 1240, "lstsq": 1241, "lu_factor": 1243, "lu_factor_ex": 1244, "matrix_norm": 1248, "matrix_rank": 1250, "multi_dot": 1251, "pinv": 1253, "solv": 1256, "solve_ex": 1257, "solve_triangular": 1258, "svdval": 1260, "tensorinv": 1261, "tensorsolv": 1262, "vander": [1263, 1850], "vecdot": 1264, "vector_norm": 1265, "linspac": 1266, "lobpcg": 1268, "logspac": 1282, "lu_unpack": 1287, "meshgrid": 1297, "current_allocated_memori": 1304, "driver_allocated_memori": 1305, "stop": 1311, "adaptiveavgpool1d": 1333, "adaptiveavgpool2d": 1334, "adaptiveavgpool3d": 1335, "adaptivelogsoftmaxwithloss": 1336, "adaptivemaxpool1d": 1337, "adaptivemaxpool2d": 1338, "adaptivemaxpool3d": 1339, "alphadropout": 1340, "avgpool1d": 1341, "avgpool2d": 1342, "avgpool3d": 1343, "bceloss": 1344, "bcewithlogitsloss": 1345, "batchnorm1d": 1346, "bilinear": [1349, 1498], "ctcloss": 1351, "channelshuffl": 1352, "constantpad1d": 1353, "constantpad2d": 1354, "constantpad3d": 1355, "cosineembeddingloss": 1362, "cosinesimilar": 1363, "crossentropyloss": 1364, "dataparallel": [1365, 1885, 1886, 1888, 1892], "dropout": [1366, 1512, 1885, 1886], "dropout1d": [1367, 1513], "dropout2d": [1368, 1514], "dropout3d": [1369, 1515], "featurealphadropout": 1373, "fold": [1375, 1521], "fractionalmaxpool2d": 1376, "fractionalmaxpool3d": 1377, "gelu": [1378, 1525], "glu": [1379, 1526], "gaussiannllloss": 1382, "hingeembeddingloss": 1388, "huberloss": 1389, "ident": [1390, 1624, 1632, 1869, 1896], "kldivloss": 1394, "l1loss": 1395, "lppool1d": 1396, "lppool2d": 1397, "lazybatchnorm1d": 1401, "lazybatchnorm2d": 1402, "lazybatchnorm3d": 1403, "lazyconv1d": 1404, "lazyconv2d": 1405, "lazyconv3d": 1406, "lazyconvtranspose1d": 1407, "lazyconvtranspose2d": 1408, "lazyconvtranspose3d": 1409, "lazyinstancenorm1d": 1410, "lazyinstancenorm2d": 1411, "lazyinstancenorm3d": 1412, "lazylinear": 1413, "localresponsenorm": 1416, "logsigmoid": [1417, 1547], "logsoftmax": 1418, "mseloss": 1419, "marginrankingloss": 1420, "maxpool1d": 1421, "maxpool2d": 1422, "maxpool3d": 1423, "maxunpool1d": 1424, "maxunpool2d": 1425, "maxunpool3d": 1426, "mish": [1427, 1557], "moduledict": [1429, 1869], "modulelist": [1430, 1868, 1869], "multilabelmarginloss": 1431, "multilabelsoftmarginloss": 1432, "multimarginloss": 1433, "nllloss": 1435, "prelu": [1436, 1571], "pairwisedist": 1437, "parameterdict": 1438, "parameterlist": 1439, "pixelshuffl": 1440, "pixelunshuffl": 1441, "poissonnllloss": 1442, "rnn": [1443, 1642, 1643, 1644, 1645, 1646, 1647, 1904], "rnnbase": 1444, "rrelu": [1446, 1575], "relu": [1447, 1572], "reflectionpad1d": 1449, "reflectionpad2d": 1450, "reflectionpad3d": 1451, "replicationpad1d": 1452, "replicationpad2d": 1453, "replicationpad3d": 1454, "selu": [1455, 1578], "sequenti": 1456, "silu": [1457, 1580], "smoothl1loss": 1459, "softmarginloss": 1460, "softmax2d": 1462, "softmin": [1463, 1584], "softplu": [1464, 1585], "softshrink": [1465, 1586], "softsign": [1466, 1587], "syncbatchnorm": 1467, "tanhshrink": [1469, 1589], "transformerdecod": 1472, "transformerdecoderlay": 1473, "transformerencod": 1474, "transformerencoderlay": 1475, "tripletmarginloss": 1476, "tripletmarginwithdistanceloss": 1477, "upsamplingbilinear2d": 1481, "upsamplingnearest2d": 1482, "zeropad1d": 1483, "zeropad2d": 1484, "zeropad3d": 1485, "adaptive_avg_pool1d": 1486, "adaptive_max_pool1d": 1489, "adaptive_max_pool2d": 1490, "adaptive_max_pool3d": 1491, "affine_grid": 1492, "alpha_dropout": 1493, "avg_pool1d": 1494, "batch_norm": 1497, "conv_transpose1d": 1505, "conv_transpose2d": 1506, "conv_transpose3d": 1507, "cosine_embedding_loss": 1508, "cosine_similar": 1509, "cross_entropi": 1510, "ctc_loss": 1511, "elu_": 1517, "embedding_bag": 1519, "feature_alpha_dropout": 1520, "fractional_max_pool2d": 1522, "fractional_max_pool3d": 1523, "gaussian_nll_loss": 1524, "grid_sampl": 1527, "group_norm": 1528, "gumbel_softmax": 1529, "hardtanh_": 1534, "hinge_embedding_loss": 1535, "huber_loss": 1536, "instance_norm": 1537, "kl_div": 1539, "l1_loss": 1540, "layer_norm": 1541, "leaky_relu_": 1543, "local_response_norm": 1545, "log_softmax": [1546, 1790], "lp_pool1d": 1548, "lp_pool2d": 1549, "margin_ranking_loss": 1550, "max_pool3d": 1553, "max_unpool1d": 1554, "max_unpool2d": 1555, "max_unpool3d": 1556, "mse_loss": 1558, "multi_margin_loss": 1559, "multilabel_margin_loss": 1560, "multilabel_soft_margin_loss": 1561, "nll_loss": 1562, "one_hot": 1564, "pad": [1565, 1885], "pairwise_dist": 1566, "pdist": 1567, "pixel_shuffl": 1568, "pixel_unshuffl": 1569, "poisson_nll_loss": 1570, "relu_": 1574, "rrelu_": 1576, "scaled_dot_product_attent": 1577, "smooth_l1_loss": 1581, "soft_margin_loss": 1582, "threshold_": 1591, "data_parallel": [1592, 1886], "triplet_margin_loss": 1593, "triplet_margin_with_distance_loss": 1594, "lazymodulemixin": 1599, "register_module_backward_hook": 1600, "register_module_buffer_registration_hook": 1601, "register_module_forward_hook": 1602, "register_module_forward_pre_hook": 1603, "register_module_full_backward_hook": 1604, "register_module_full_backward_pre_hook": 1605, "register_module_module_registration_hook": 1606, "register_module_parameter_registration_hook": 1607, "distributeddataparallel": [1608, 1888, 1892, 1893], "uninitializedbuff": 1610, "uninitializedparamet": 1611, "clip_grad_norm_": 1612, "clip_grad_value_": 1613, "parameters_to_vector": 1614, "parametr": [1615, 1616, 1618, 1619, 1620, 1621, 1900], "orthogon": 1615, "spectral_norm": [1616, 1649], "parametrizationlist": 1617, "is_parametr": 1619, "register_parametr": 1620, "remove_parametr": 1621, "basepruningmethod": 1622, "customfrommask": 1623, "l1unstructur": 1625, "lnstructur": 1626, "pruningcontain": 1627, "randomstructur": 1628, "randomunstructur": 1629, "prune": [1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1900], "custom_from_mask": 1630, "global_unstructur": 1631, "is_prun": 1633, "l1_unstructur": 1634, "ln_structur": 1635, "random_structur": 1636, "random_unstructur": 1637, "remove_spectral_norm": 1639, "remove_weight_norm": 1640, "packedsequ": 1641, "pack_padded_sequ": 1642, "pack_sequ": 1643, "pad_packed_sequ": 1644, "pad_sequ": 1645, "unpack_sequ": 1646, "unpad_sequ": 1647, "skip_init": 1648, "stateless": 1650, "vector_to_paramet": 1651, "weight_norm": 1652, "no_grad": 1653, "ones": 1659, "ones_lik": 1660, "exportopt": 1661, "exportoutput": 1662, "exportoutputseri": 1663, "jitscalartyp": 1664, "graphinfo": 1665, "verificationopt": 1666, "asgd": 1667, "adadelta": 1668, "adagrad": 1669, "adam": 1670, "adamw": 1671, "adamax": 1672, "lbfg": 1673, "nadam": 1674, "add_param_group": 1675, "load_state_dict": 1676, "step": [1678, 1910], "zero_grad": 1679, "radam": 1680, "rmsprop": 1681, "rprop": 1682, "sgd": 1683, "sparseadam": 1684, "chainedschedul": 1685, "constantlr": 1686, "cosineannealinglr": 1687, "cosineannealingwarmrestart": 1688, "cycliclr": 1689, "exponentiallr": 1690, "lambdalr": 1691, "linearlr": 1692, "multisteplr": 1693, "multiplicativelr": 1694, "onecyclelr": 1695, "polynomiallr": 1696, "reducelronplateau": 1697, "sequentiallr": 1698, "steplr": 1699, "pca_lowrank": 1703, "polar": 1707, "promote_typ": 1712, "quantize_per_channel": 1715, "quantize_per_tensor": 1716, "quantized_batch_norm": 1717, "quantized_max_pool1d": 1718, "quantized_max_pool2d": 1719, "sobolengin": 1720, "rand": 1722, "rand_lik": 1723, "randint": 1724, "randint_lik": 1725, "randn": 1726, "randn_lik": 1727, "randperm": 1728, "rang": [1729, 1868], "result_typ": 1739, "row_stack": 1743, "searchsort": 1749, "set_default_devic": 1753, "set_default_dtyp": 1754, "set_default_tensor_typ": 1755, "set_deterministic_debug_mod": 1756, "set_float32_matmul_precis": 1757, "set_flush_denorm": 1758, "set_grad_en": 1759, "set_num_interop_thread": 1760, "set_num_thread": 1761, "set_printopt": 1762, "set_warn_alwai": 1764, "signal": [1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1922], "bartlett": 1768, "blackman": 1769, "cosin": 1770, "gaussian": 1772, "general_cosin": 1773, "general_ham": 1774, "ham": 1775, "hann": 1776, "kaiser": 1777, "nuttal": 1778, "check_sparse_tensor_invari": 1789, "sampled_addmm": 1792, "spdiag": 1794, "sparse_bsc_tensor": 1796, "sparse_bsr_tensor": 1797, "sparse_compressed_tensor": 1798, "sparse_coo_tensor": 1799, "sparse_csc_tensor": 1800, "sparse_csr_tensor": 1801, "std_mean": 1809, "svd_lowrank": 1815, "sym_float": 1818, "sym_int": 1819, "sym_max": 1820, "sym_min": 1821, "sym_not": 1822, "tensordot": 1830, "trapezoid": 1835, "trapz": 1836, "tril_indic": 1839, "triu_indic": 1841, "use_deterministic_algorithm": 1849, "var_mean": 1852, "view_as_complex": 1854, "view_as_r": 1855, "vstack": 1858, "zero": 1861, "zeros_lik": 1862, "hub": 1863, "publish": 1863, "entrypoint": 1863, "download": 1863, "logic": [1863, 1868], "known": [1863, 1866], "bind": 1864, "prim": 1865, "built": [1866, 1867, 1869, 1907], "inspect": 1866, "warn": 1866, "appendix": [1866, 1869], "recurs": 1866, "constant": [1866, 1868], "fusion": 1866, "builtin": 1867, "math": [1867, 1931], "construct": [1868, 1869, 1871, 1884, 1910, 1923], "refin": [1868, 1869], "enum": [1868, 1869], "tupl": [1868, 1869], "express": [1868, 1869], "liter": [1868, 1869], "list": [1868, 1869, 1907], "dict": 1868, "arithmet": [1868, 1869], "subscript": [1868, 1869], "slice": [1868, 1869, 1903, 1931], "ternari": [1868, 1869], "cast": 1868, "statement": [1868, 1869], "assign": [1868, 1869], "match": [1868, 1883], "If": 1868, "while": [1868, 1869], "loop": 1868, "For": 1868, "continu": [1868, 1869], "return": [1868, 1869, 1896, 1921], "resolut": [1868, 1869], "lookup": 1868, "defin": [1868, 1894, 1895], "terminologi": 1869, "meta": 1869, "primit": 1869, "special": [1869, 1889, 1924], "instanc": 1869, "signatur": 1869, "expr": 1869, "convers": [1869, 1884], "atom": 1869, "parenthes": 1869, "form": 1869, "dictionari": 1869, "displai": 1869, "primari": 1869, "power": 1869, "unari": [1869, 1876, 1923], "bitwis": 1869, "binari": [1869, 1876], "shift": 1869, "boolean": 1869, "condit": 1869, "augment": 1869, "rais": 1869, "assert": [1869, 1898], "del": 1869, "compound": 1869, "els": 1869, "getattr": 1869, "hasattr": 1869, "zip": [1869, 1911], "enumer": 1869, "rule": [1869, 1883, 1895, 1908], "remot": [1869, 1921], "procedur": 1869, "execut": [1869, 1889, 1892, 1911, 1912], "program": 1869, "coverag": [1870, 1882, 1894], "properti": [1871, 1874], "Not": 1871, "correctli": 1871, "bound": 1871, "schema": 1871, "between": [1871, 1911], "matrix": [1874, 1914], "decomposit": 1874, "solver": 1874, "misc": 1874, "experiment": 1874, "reduct": [1876, 1892, 1903, 1931], "mobile_optim": 1877, "model_zoo": 1878, "strategi": [1881, 1910], "descriptor": 1881, "file_descriptor": 1881, "file_system": 1881, "subprocess": 1881, "keep": [1882, 1911], "dimens": [1882, 1883], "unifi": 1882, "contract": 1882, "awai": 1882, "factori": 1882, "variant": 1882, "semant": [1883, 1890, 1892, 1898, 1905], "explicit": 1883, "align": 1883, "current": 1883, "subsystem": 1883, "constructor": 1884, "contain": 1885, "convolut": [1885, 1886, 1903, 1904], "layer": 1885, "pool": [1885, 1886], "activ": [1885, 1886], "weight": [1885, 1910], "nonlinear": 1885, "recurr": [1885, 1896], "distanc": [1885, 1886], "loss": [1885, 1886, 1888], "vision": [1885, 1886], "shuffl": 1885, "lazi": 1885, "attent": 1886, "typic": 1888, "unscal": 1888, "accumul": 1888, "penalti": 1888, "one": 1888, "per": [1888, 1910], "particular": [1888, 1889], "dtype": [1888, 1905, 1917, 1926], "encod": 1889, "histori": 1889, "set": [1889, 1907], "No": 1889, "multithread": 1889, "concurr": 1889, "determin": [1889, 1904], "retain": 1889, "thread": [1889, 1891], "safeti": 1889, "wirting": 1889, "calculu": 1889, "pictur": 1889, "conjug": 1889, "own": 1889, "formula": 1889, "domain": 1889, "whether": [1889, 1911], "fire": 1889, "differ": [1889, 1907], "modifi": 1889, "compat": 1890, "tune": 1891, "tensorfloat": [1892, 1898, 1903], "32": [1892, 1898, 1903, 1906], "tf32": [1892, 1898, 1903], "amper": [1892, 1903], "reduc": [1892, 1903], "fp16": [1892, 1903], "gemm": [1892, 1903], "bf16": [1892, 1903], "bc": 1892, "alloc": [1892, 1896], "cubla": 1892, "workspac": 1892, "cufft": 1892, "plan": [1892, 1898], "just": 1892, "practic": [1892, 1902, 1914], "agnost": 1892, "buffer": [1892, 1902], "instead": 1892, "captur": 1892, "partial": 1892, "9": 1892, "across": [1892, 1905], "processgroup": 1893, "ddpoptim": 1893, "separ": 1894, "setup_context": 1894, "like": [1894, 1911], "wrapper": 1894, "__torch_function__": 1894, "overrid": [1894, 1934], "specifi": 1895, "staticmethod": 1895, "isn": 1896, "freed": 1896, "properli": 1896, "loader": 1896, "notat": 1897, "analyt": 1897, "output": 1897, "u": 1897, "reus": [1898, 1902], "hipfft": 1898, "rocfft": 1898, "enabl": 1898, "larg": 1899, "fleet": 1899, "wide": 1899, "attach": 1899, "consider": 1899, "block": 1900, "neural": 1900, "tip": [1902, 1915], "fight": 1902, "deadlock": 1902, "through": 1902, "queue": 1902, "e": 1902, "g": 1902, "hogwild": 1902, "extrem": 1903, "finit": 1903, "instinct": 1903, "mi200": 1903, "reproduc": 1904, "nondeterminist": 1904, "algorithm": [1904, 1910, 1920], "content": [1905, 1911], "preserv": 1905, "them": [1905, 1911], "integ": 1905, "divis": 1905, "alwai": 1905, "includ": [1906, 1911], "compon": 1906, "instal": 1906, "cffi": 1906, "cpp": 1906, "found": 1906, "win": 1906, "channel": 1906, "without": 1906, "claus": 1906, "protect": 1906, "broken": 1906, "pipe": [1906, 1912], "driver": 1906, "shut": 1906, "down": 1906, "ipc": 1906, "alexnet": 1907, "v": 1907, "index": [1907, 1931], "inlin": 1907, "discov": 1907, "unconvert": 1907, "onc": 1907, "preview": 1907, "diagnost": 1908, "closur": 1910, "adjust": 1910, "rate": 1910, "averag": 1910, "swa": 1910, "ema": 1910, "schedul": 1910, "care": 1910, "put": 1910, "togeth": 1910, "your": 1911, "treat": 1911, "archiv": 1911, "file_structur": 1911, "given": 1911, "wa": 1911, "later": 1911, "distinguish": 1911, "explan": 1911, "framework": [1911, 1919], "user": [1911, 1921], "find": 1911, "analyz": 1911, "extern": 1911, "mock": 1911, "refactor": 1911, "sharp": 1911, "global": 1911, "isol": 1911, "mangl": 1911, "pipelin": 1912, "skip": 1912, "connect": 1912, "intel": 1913, "instrument": 1913, "technologi": 1913, "eager": 1914, "awar": 1914, "engin": [1914, 1931], "observ": [1914, 1917], "hardwar": 1914, "nativ": [1914, 1916], "configur": [1914, 1916, 1931], "insensit": 1915, "int8": 1915, "sensit": 1915, "ao": [1917, 1932, 1933], "top": 1917, "quantize_fx": 1917, "qconfig_map": 1917, "backend_config": 1917, "custom_config": 1917, "fake_quant": 1917, "intrins": 1917, "qat": 1917, "scheme": 1917, "rpc": 1919, "tensorpip": 1919, "rref": [1919, 1921], "remotemodul": 1919, "record": 1920, "dure": 1920, "smart": 1920, "end": 1920, "protocol": 1921, "assumpt": 1921, "lifetim": 1921, "reason": 1921, "scenario": 1921, "owner": 1921, "argument": 1921, "sparsiti": 1923, "coo": 1923, "hybrid": 1923, "uncoalesc": 1923, "csr": 1923, "csc": 1923, "bsr": 1923, "bsc": 1923, "memory_format": 1926, "tensorboard": 1928, "creation": 1931, "sampl": 1931, "quasi": 1931, "pointwis": 1931, "spectral": 1931, "bla": 1931, "lapack": 1931, "foreach": 1931, "tag": 1931, "n": [1932, 1933], "_numeric_suit": 1932, "_numeric_suite_fx": 1933, "info": 1935, "finfo": 1935, "iinfo": 1935}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.argmax": [[135, "torch-tensor-argmax"]], "torch.Tensor.addcdiv": [[102, "torch-tensor-addcdiv"]], "torch.Tensor.asin_": [[142, "torch-tensor-asin"]], "torch.Tensor.addbmm_": [[101, "torch-tensor-addbmm"]], "torch.Tensor.arctan2_": [[131, "torch-tensor-arctan2"]], "torch.Tensor.angle": [[118, "torch-tensor-angle"]], "torch.Tensor.arccosh": [[123, "torch-tensor-arccosh"]], "torch.Tensor.add_": [[99, "torch-tensor-add"]], "torch.Tensor.arctanh_": [[134, "torch-tensor-arctanh"]], "torch.Tensor.addcmul": [[104, "torch-tensor-addcmul"]], "torch.Tensor.arctanh": [[133, "torch-tensor-arctanh"]], "torch.Tensor.addcdiv_": [[103, "torch-tensor-addcdiv"]], "torch.Tensor.any": [[119, "torch-tensor-any"]], "torch.Tensor.arccosh_": [[124, "torch-tensor-arccosh"]], "torch.Tensor.addr_": [[111, "torch-tensor-addr"]], "torch.Tensor.argwhere": [[138, "torch-tensor-argwhere"]], "torch.Tensor.arcsin": [[125, "torch-tensor-arcsin"]], "torch.Tensor.asinh": [[143, "torch-tensor-asinh"]], "torch.Tensor.arcsinh_": [[128, "torch-tensor-arcsinh"]], "torch.Tensor.asinh_": [[144, "torch-tensor-asinh"]], "torch.Tensor.as_strided": [[139, "torch-tensor-as-strided"]], "torch.Tensor.arcsinh": [[127, "torch-tensor-arcsinh"]], "torch.Tensor.addmv": [[108, "torch-tensor-addmv"]], "torch.Tensor.addmv_": [[109, "torch-tensor-addmv"]], "torch.Tensor.arccos": [[121, "torch-tensor-arccos"]], "torch.Tensor.addmm": [[106, "torch-tensor-addmm"]], "torch.Tensor.aminmax": [[117, "torch-tensor-aminmax"]], "torch.Tensor.addr": [[110, "torch-tensor-addr"]], "torch.Tensor.addbmm": [[100, "torch-tensor-addbmm"]], "torch.Tensor.argsort": [[137, "torch-tensor-argsort"]], "torch.Tensor.arcsin_": [[126, "torch-tensor-arcsin"]], "torch.Tensor.as_subclass": [[140, "torch-tensor-as-subclass"]], "torch.Tensor.amin": [[116, "torch-tensor-amin"]], "torch.Tensor.apply_": [[120, "torch-tensor-apply"]], "torch.Tensor.amax": [[115, "torch-tensor-amax"]], "torch.Tensor.allclose": [[114, "torch-tensor-allclose"]], "torch.Tensor.atan2": [[146, "torch-tensor-atan2"]], "torch.Tensor.add": [[98, "torch-tensor-add"]], "torch.Tensor.addcmul_": [[105, "torch-tensor-addcmul"]], "torch.Tensor.arctan": [[129, "torch-tensor-arctan"]], "torch.Tensor.adjoint": [[112, "torch-tensor-adjoint"]], "torch.Tensor.arccos_": [[122, "torch-tensor-arccos"]], "torch.Tensor.arctan_": [[132, "torch-tensor-arctan"]], "torch.Tensor.argmin": [[136, "torch-tensor-argmin"]], "torch.Tensor.addmm_": [[107, "torch-tensor-addmm"]], "torch.Tensor.all": [[113, "torch-tensor-all"]], "torch.Tensor.atan": [[145, "torch-tensor-atan"]], "torch.Tensor.arctan2": [[130, "torch-tensor-arctan2"]], "torch.Tensor.asin": [[141, "torch-tensor-asin"]], "torch.Tensor.detach": [[222, "torch-tensor-detach"]], "torch.Tensor.diagonal_scatter": [[229, "torch-tensor-diagonal-scatter"]], "torch.Tensor.diag_embed": [[226, "torch-tensor-diag-embed"]], "torch.Tensor.cummax": [[211, "torch-tensor-cummax"]], "torch.Tensor.cpu": [[207, "torch-tensor-cpu"]], "torch.Tensor.divide_": [[238, "torch-tensor-divide"]], "torch.Tensor.diff": [[230, "torch-tensor-diff"]], "torch.Tensor.cumprod_": [[214, "torch-tensor-cumprod"]], "torch.Tensor.cummin": [[212, "torch-tensor-cummin"]], "torch.Tensor.diagflat": [[227, "torch-tensor-diagflat"]], "torch.Tensor.contiguous": [[196, "torch-tensor-contiguous"]], "torch.Tensor.cumprod": [[213, "torch-tensor-cumprod"]], "torch.Tensor.cov": [[206, "torch-tensor-cov"]], "torch.Tensor.cumsum": [[215, "torch-tensor-cumsum"]], "torch.Tensor.dsplit": [[241, "torch-tensor-dsplit"]], "torch.Tensor.eq_": [[244, "torch-tensor-eq"]], "torch.Tensor.crow_indices": [[209, "torch-tensor-crow-indices"]], "torch.Tensor.cos_": [[202, "torch-tensor-cos"]], "torch.Tensor.detach_": [[223, "torch-tensor-detach"]], "torch.Tensor.diagonal": [[228, "torch-tensor-diagonal"]], "torch.Tensor.cosh": [[203, "torch-tensor-cosh"]], "torch.Tensor.cumsum_": [[216, "torch-tensor-cumsum"]], "torch.Tensor.corrcoef": [[200, "torch-tensor-corrcoef"]], "torch.Tensor.copysign_": [[199, "torch-tensor-copysign"]], "torch.Tensor.digamma_": [[232, "torch-tensor-digamma"]], "torch.Tensor.det": [[221, "torch-tensor-det"]], "torch.Tensor.dim": [[233, "torch-tensor-dim"]], "torch.Tensor.dequantize": [[220, "torch-tensor-dequantize"]], "torch.Tensor.copysign": [[198, "torch-tensor-copysign"]], "torch.Tensor.device": [[224, "torch-tensor-device"]], "torch.Tensor.dot": [[239, "torch-tensor-dot"]], "torch.Tensor.cuda": [[210, "torch-tensor-cuda"]], "torch.Tensor.count_nonzero": [[205, "torch-tensor-count-nonzero"]], "torch.Tensor.double": [[240, "torch-tensor-double"]], "torch.Tensor.dense_dim": [[219, "torch-tensor-dense-dim"]], "torch.Tensor.element_size": [[242, "torch-tensor-element-size"]], "torch.Tensor.copy_": [[197, "torch-tensor-copy"]], "torch.Tensor.data_ptr": [[217, "torch-tensor-data-ptr"]], "torch.Tensor.cos": [[201, "torch-tensor-cos"]], "torch.Tensor.diag": [[225, "torch-tensor-diag"]], "torch.Tensor.deg2rad": [[218, "torch-tensor-deg2rad"]], "torch.Tensor.digamma": [[231, "torch-tensor-digamma"]], "torch.Tensor.dist": [[234, "torch-tensor-dist"]], "torch.Tensor.eq": [[243, "torch-tensor-eq"]], "torch.Tensor.cross": [[208, "torch-tensor-cross"]], "torch.Tensor.cosh_": [[204, "torch-tensor-cosh"]], "torch.Tensor.div_": [[236, "torch-tensor-div"]], "torch.Tensor.divide": [[237, "torch-tensor-divide"]], "torch.Tensor.div": [[235, "torch-tensor-div"]], "torch.Tensor.grad": [[290, "torch-tensor-grad"]], "torch.Tensor.float_power_": [[269, "torch-tensor-float-power"]], "torch.Tensor.greater": [[291, "torch-tensor-greater"]], "torch.Tensor.gcd": [[282, "torch-tensor-gcd"]], "torch.Tensor.fmod": [[276, "torch-tensor-fmod"]], "torch.Tensor.float": [[267, "torch-tensor-float"]], "torch.Tensor.expand_as": [[255, "torch-tensor-expand-as"]], "torch.Tensor.gcd_": [[283, "torch-tensor-gcd"]], "torch.Tensor.expm1_": [[257, "torch-tensor-expm1"]], "torch.Tensor.erfc_": [[249, "torch-tensor-erfc"]], "torch.Tensor.frac": [[278, "torch-tensor-frac"]], "torch.Tensor.expm1": [[256, "torch-tensor-expm1"]], "torch.Tensor.frac_": [[279, "torch-tensor-frac"]], "torch.Tensor.geometric_": [[286, "torch-tensor-geometric"]], "torch.Tensor.floor_divide_": [[273, "torch-tensor-floor-divide"]], "torch.Tensor.exp": [[252, "torch-tensor-exp"]], "torch.Tensor.exp_": [[253, "torch-tensor-exp"]], "torch.Tensor.erf_": [[247, "torch-tensor-erf"]], "torch.Tensor.erfinv": [[250, "torch-tensor-erfinv"]], "torch.Tensor.ger": [[288, "torch-tensor-ger"]], "torch.Tensor.ge_": [[285, "torch-tensor-ge"]], "torch.Tensor.erfc": [[248, "torch-tensor-erfc"]], "torch.Tensor.get_device": [[289, "torch-tensor-get-device"]], "torch.Tensor.flipud": [[266, "torch-tensor-flipud"]], "torch.Tensor.float_power": [[268, "torch-tensor-float-power"]], "torch.Tensor.ge": [[284, "torch-tensor-ge"]], "torch.Tensor.expand": [[254, "torch-tensor-expand"]], "torch.Tensor.geqrf": [[287, "torch-tensor-geqrf"]], "torch.Tensor.flip": [[264, "torch-tensor-flip"]], "torch.Tensor.floor_": [[271, "torch-tensor-floor"]], "torch.Tensor.fmin": [[275, "torch-tensor-fmin"]], "torch.Tensor.flatten": [[263, "torch-tensor-flatten"]], "torch.Tensor.fmax": [[274, "torch-tensor-fmax"]], "torch.Tensor.erf": [[246, "torch-tensor-erf"]], "torch.Tensor.equal": [[245, "torch-tensor-equal"]], "torch.Tensor.floor": [[270, "torch-tensor-floor"]], "torch.Tensor.exponential_": [[258, "torch-tensor-exponential"]], "torch.Tensor.fix_": [[262, "torch-tensor-fix"]], "torch.Tensor.fmod_": [[277, "torch-tensor-fmod"]], "torch.Tensor.greater_equal": [[293, "torch-tensor-greater-equal"]], "torch.Tensor.fill_diagonal_": [[260, "torch-tensor-fill-diagonal"]], "torch.Tensor.gather": [[281, "torch-tensor-gather"]], "torch.Tensor.floor_divide": [[272, "torch-tensor-floor-divide"]], "torch.Tensor.fix": [[261, "torch-tensor-fix"]], "torch.Tensor.fliplr": [[265, "torch-tensor-fliplr"]], "torch.Tensor.greater_": [[292, "torch-tensor-greater"]], "torch.Tensor.erfinv_": [[251, "torch-tensor-erfinv"]], "torch.Tensor.fill_": [[259, "torch-tensor-fill"]], "torch.Tensor.frexp": [[280, "torch-tensor-frexp"]], "torch.Tensor.bitwise_and": [[158, "torch-tensor-bitwise-and"]], "torch.Tensor.baddbmm": [[152, "torch-tensor-baddbmm"]], "torch.Tensor.col_indices": [[192, "torch-tensor-col-indices"]], "torch.Tensor.bernoulli_": [[155, "torch-tensor-bernoulli"]], "torch.Tensor.cauchy_": [[174, "torch-tensor-cauchy"]], "torch.Tensor.conj_physical": [[194, "torch-tensor-conj-physical"]], "torch.Tensor.atanh_": [[150, "torch-tensor-atanh"]], "torch.Tensor.bitwise_left_shift_": [[161, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bincount": [[157, "torch-tensor-bincount"]], "torch.Tensor.bitwise_not_": [[163, "torch-tensor-bitwise-not"]], "torch.Tensor.coalesce": [[191, "torch-tensor-coalesce"]], "torch.Tensor.cholesky_inverse": [[183, "torch-tensor-cholesky-inverse"]], "torch.Tensor.bernoulli": [[154, "torch-tensor-bernoulli"]], "torch.Tensor.bitwise_and_": [[159, "torch-tensor-bitwise-and"]], "torch.Tensor.bool": [[171, "torch-tensor-bool"]], "torch.Tensor.bitwise_xor": [[168, "torch-tensor-bitwise-xor"]], "torch.Tensor.conj_physical_": [[195, "torch-tensor-conj-physical"]], "torch.Tensor.bitwise_right_shift_": [[167, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.clip": [[188, "torch-tensor-clip"]], "torch.Tensor.bitwise_or": [[164, "torch-tensor-bitwise-or"]], "torch.Tensor.chalf": [[180, "torch-tensor-chalf"]], "torch.Tensor.bitwise_xor_": [[169, "torch-tensor-bitwise-xor"]], "torch.Tensor.bitwise_left_shift": [[160, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.cholesky_solve": [[184, "torch-tensor-cholesky-solve"]], "torch.Tensor.atanh": [[149, "torch-tensor-atanh"]], "torch.Tensor.clamp_": [[187, "torch-tensor-clamp"]], "torch.Tensor.baddbmm_": [[153, "torch-tensor-baddbmm"]], "torch.Tensor.clone": [[190, "torch-tensor-clone"]], "torch.Tensor.clip_": [[189, "torch-tensor-clip"]], "torch.Tensor.bitwise_not": [[162, "torch-tensor-bitwise-not"]], "torch.Tensor.cholesky": [[182, "torch-tensor-cholesky"]], "torch.Tensor.conj": [[193, "torch-tensor-conj"]], "torch.Tensor.byte": [[173, "torch-tensor-byte"]], "torch.Tensor.bfloat16": [[156, "torch-tensor-bfloat16"]], "torch.Tensor.chunk": [[185, "torch-tensor-chunk"]], "torch.Tensor.atan2_": [[147, "torch-tensor-atan2"]], "torch.Tensor.broadcast_to": [[172, "torch-tensor-broadcast-to"]], "torch.Tensor.char": [[181, "torch-tensor-char"]], "torch.Tensor.bitwise_or_": [[165, "torch-tensor-bitwise-or"]], "torch.Tensor.ceil": [[177, "torch-tensor-ceil"]], "torch.Tensor.bitwise_right_shift": [[166, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.backward": [[151, "torch-tensor-backward"]], "torch.Tensor.atan_": [[148, "torch-tensor-atan"]], "torch.Tensor.ccol_indices": [[175, "torch-tensor-ccol-indices"]], "torch.Tensor.cdouble": [[176, "torch-tensor-cdouble"]], "torch.Tensor.cfloat": [[179, "torch-tensor-cfloat"]], "torch.Tensor.ceil_": [[178, "torch-tensor-ceil"]], "torch.Tensor.bmm": [[170, "torch-tensor-bmm"]], "torch.Tensor.clamp": [[186, "torch-tensor-clamp"]], "torch.Tensor.hypot": [[303, "torch-tensor-hypot"]], "torch.Tensor.imag": [[311, "torch-tensor-imag"]], "torch.Tensor.hypot_": [[304, "torch-tensor-hypot"]], "torch.Tensor.igammac": [[309, "torch-tensor-igammac"]], "torch.Tensor.hsplit": [[302, "torch-tensor-hsplit"]], "torch.Tensor.i0": [[305, "torch-tensor-i0"]], "torch.Tensor.index_put_": [[319, "torch-tensor-index-put"]], "torch.Tensor.is_signed": [[341, "torch-tensor-is-signed"]], "torch.Tensor.greater_equal_": [[294, "torch-tensor-greater-equal"]], "torch.Tensor.is_shared": [[340, "torch-tensor-is-shared"]], "torch.Tensor.histc": [[300, "torch-tensor-histc"]], "torch.Tensor.index_put": [[318, "torch-tensor-index-put"]], "torch.Tensor.index_copy_": [[315, "torch-tensor-index-copy"]], "torch.Tensor.index_copy": [[314, "torch-tensor-index-copy"]], "torch.Tensor.inverse": [[327, "torch-tensor-inverse"]], "torch.Tensor.igammac_": [[310, "torch-tensor-igammac"]], "torch.Tensor.is_set_to": [[339, "torch-tensor-is-set-to"]], "torch.Tensor.index_reduce_": [[321, "torch-tensor-index-reduce"]], "torch.Tensor.inner": [[324, "torch-tensor-inner"]], "torch.Tensor.is_coalesced": [[328, "torch-tensor-is-coalesced"]], "torch.Tensor.heaviside": [[299, "torch-tensor-heaviside"]], "torch.Tensor.is_pinned": [[337, "torch-tensor-is-pinned"]], "torch.Tensor.gt_": [[296, "torch-tensor-gt"]], "torch.Tensor.is_quantized": [[338, "torch-tensor-is-quantized"]], "torch.Tensor.histogram": [[301, "torch-tensor-histogram"]], "torch.Tensor.is_sparse": [[342, "torch-tensor-is-sparse"]], "torch.Tensor.index_fill": [[316, "torch-tensor-index-fill"]], "torch.Tensor.is_meta": [[336, "torch-tensor-is-meta"]], "torch.Tensor.is_conj": [[330, "torch-tensor-is-conj"]], "torch.Tensor.half": [[297, "torch-tensor-half"]], "torch.Tensor.is_leaf": [[335, "torch-tensor-is-leaf"]], "torch.Tensor.int": [[325, "torch-tensor-int"]], "torch.Tensor.is_floating_point": [[333, "torch-tensor-is-floating-point"]], "torch.Tensor.i0_": [[306, "torch-tensor-i0"]], "torch.Tensor.index_select": [[322, "torch-tensor-index-select"]], "torch.Tensor.is_complex": [[329, "torch-tensor-is-complex"]], "torch.Tensor.is_cuda": [[332, "torch-tensor-is-cuda"]], "torch.Tensor.igamma_": [[308, "torch-tensor-igamma"]], "torch.Tensor.int_repr": [[326, "torch-tensor-int-repr"]], "torch.Tensor.index_reduce": [[320, "torch-tensor-index-reduce"]], "torch.Tensor.index_add_": [[313, "torch-tensor-index-add"]], "torch.Tensor.indices": [[323, "torch-tensor-indices"]], "torch.Tensor.hardshrink": [[298, "torch-tensor-hardshrink"]], "torch.Tensor.is_inference": [[334, "torch-tensor-is-inference"]], "torch.Tensor.index_add": [[312, "torch-tensor-index-add"]], "torch.Tensor.index_fill_": [[317, "torch-tensor-index-fill"]], "torch.Tensor.is_contiguous": [[331, "torch-tensor-is-contiguous"]], "torch.Tensor.gt": [[295, "torch-tensor-gt"]], "torch.Tensor.igamma": [[307, "torch-tensor-igamma"]], "torch.Tensor.logical_not_": [[385, "torch-tensor-logical-not"]], "torch.Tensor.log1p_": [[373, "torch-tensor-log1p"]], "torch.Tensor.logcumsumexp": [[380, "torch-tensor-logcumsumexp"]], "torch.Tensor.logical_xor_": [[389, "torch-tensor-logical-xor"]], "torch.Tensor.isfinite": [[345, "torch-tensor-isfinite"]], "torch.Tensor.ldexp": [[357, "torch-tensor-ldexp"]], "torch.Tensor.isnan": [[347, "torch-tensor-isnan"]], "torch.Tensor.log": [[369, "torch-tensor-log"]], "torch.Tensor.is_sparse_csr": [[343, "torch-tensor-is-sparse-csr"]], "torch.Tensor.lcm_": [[356, "torch-tensor-lcm"]], "torch.Tensor.log1p": [[372, "torch-tensor-log1p"]], "torch.Tensor.isclose": [[344, "torch-tensor-isclose"]], "torch.Tensor.log2_": [[375, "torch-tensor-log2"]], "torch.Tensor.isinf": [[346, "torch-tensor-isinf"]], "torch.Tensor.kthvalue": [[354, "torch-tensor-kthvalue"]], "torch.Tensor.le_": [[360, "torch-tensor-le"]], "torch.Tensor.isposinf": [[349, "torch-tensor-isposinf"]], "torch.Tensor.logdet": [[381, "torch-tensor-logdet"]], "torch.Tensor.logical_and_": [[383, "torch-tensor-logical-and"]], "torch.Tensor.log10_": [[371, "torch-tensor-log10"]], "torch.Tensor.logaddexp": [[378, "torch-tensor-logaddexp"]], "torch.Tensor.isneginf": [[348, "torch-tensor-isneginf"]], "torch.Tensor.isreal": [[350, "torch-tensor-isreal"]], "torch.Tensor.less_equal": [[365, "torch-tensor-less-equal"]], "torch.Tensor.log2": [[374, "torch-tensor-log2"]], "torch.Tensor.lerp_": [[362, "torch-tensor-lerp"]], "torch.Tensor.less": [[363, "torch-tensor-less"]], "torch.Tensor.less_": [[364, "torch-tensor-less"]], "torch.Tensor.log10": [[370, "torch-tensor-log10"]], "torch.Tensor.lerp": [[361, "torch-tensor-lerp"]], "torch.Tensor.logical_or_": [[387, "torch-tensor-logical-or"]], "torch.Tensor.log_": [[376, "torch-tensor-log"]], "torch.Tensor.le": [[359, "torch-tensor-le"]], "torch.Tensor.istft": [[351, "torch-tensor-istft"]], "torch.Tensor.less_equal_": [[366, "torch-tensor-less-equal"]], "torch.Tensor.logit": [[390, "torch-tensor-logit"]], "torch.Tensor.logit_": [[391, "torch-tensor-logit"]], "torch.Tensor.logical_not": [[384, "torch-tensor-logical-not"]], "torch.Tensor.logical_or": [[386, "torch-tensor-logical-or"]], "torch.Tensor.lcm": [[355, "torch-tensor-lcm"]], "torch.Tensor.lgamma": [[367, "torch-tensor-lgamma"]], "torch.Tensor.lgamma_": [[368, "torch-tensor-lgamma"]], "torch.Tensor.logaddexp2": [[379, "torch-tensor-logaddexp2"]], "torch.Tensor.item": [[352, "torch-tensor-item"]], "torch.Tensor.itemsize": [[353, "torch-tensor-itemsize"]], "torch.Tensor.log_normal_": [[377, "torch-tensor-log-normal"]], "torch.Tensor.logical_and": [[382, "torch-tensor-logical-and"]], "torch.Tensor.ldexp_": [[358, "torch-tensor-ldexp"]], "torch.Tensor.logical_xor": [[388, "torch-tensor-logical-xor"]], "torch.unique_consecutive": [[1847, "torch-unique-consecutive"]], "torch.svd": [[1814, "torch-svd"]], "torch.transpose": [[1834, "torch-transpose"]], "torch.unique": [[1846, "torch-unique"]], "torch.xlogy": [[1860, "torch-xlogy"]], "torch.view_as_complex": [[1854, "torch-view-as-complex"]], "torch.sym_float": [[1818, "torch-sym-float"]], "torch.sym_not": [[1822, "torch-sym-not"]], "torch.var": [[1851, "torch-var"]], "torch.tensor": [[1828, "torch-tensor"]], "torch.take": [[1824, "torch-take"]], "torch.sum": [[1813, "torch-sum"]], "torch.unbind": [[1844, "torch-unbind"]], "torch.tril_indices": [[1839, "torch-tril-indices"]], "torch.vsplit": [[1857, "torch-vsplit"]], "torch.svd_lowrank": [[1815, "torch-svd-lowrank"]], "torch.swapaxes": [[1816, "torch-swapaxes"]], "torch.vdot": [[1853, "torch-vdot"]], "torch.sym_max": [[1820, "torch-sym-max"]], "torch.sym_min": [[1821, "torch-sym-min"]], "torch.zeros": [[1861, "torch-zeros"]], "torch.triu": [[1840, "torch-triu"]], "torch.vander": [[1850, "torch-vander"]], "torch.trapz": [[1836, "torch-trapz"]], "torch.tan": [[1826, "torch-tan"]], "torch.take_along_dim": [[1825, "torch-take-along-dim"]], "torch.trunc": [[1843, "torch-trunc"]], "torch.tensor_split": [[1829, "torch-tensor-split"]], "torch.t": [[1823, "torch-t"]], "torch.tile": [[1831, "torch-tile"]], "torch.true_divide": [[1842, "torch-true-divide"]], "torch.tril": [[1838, "torch-tril"]], "torch.unflatten": [[1845, "torch-unflatten"]], "torch.vstack": [[1858, "torch-vstack"]], "torch.triangular_solve": [[1837, "torch-triangular-solve"]], "torch.view_as_real": [[1855, "torch-view-as-real"]], "torch.swapdims": [[1817, "torch-swapdims"]], "torch.trace": [[1833, "torch-trace"]], "torch.triu_indices": [[1841, "torch-triu-indices"]], "torch.topk": [[1832, "torch-topk"]], "torch.use_deterministic_algorithms": [[1849, "torch-use-deterministic-algorithms"]], "torch.tensordot": [[1830, "torch-tensordot"]], "torch.vmap": [[1856, "torch-vmap"]], "torch.trapezoid": [[1835, "torch-trapezoid"]], "torch.var_mean": [[1852, "torch-var-mean"]], "torch.sym_int": [[1819, "torch-sym-int"]], "torch.unsqueeze": [[1848, "torch-unsqueeze"]], "torch.where": [[1859, "torch-where"]], "torch.tanh": [[1827, "torch-tanh"]], "torch.save": [[1745, "torch-save"]], "torch.randint_like": [[1725, "torch-randint-like"]], "torch.set_deterministic_debug_mode": [[1756, "torch-set-deterministic-debug-mode"]], "torch.repeat_interleave": [[1735, "torch-repeat-interleave"]], "torch.scatter_reduce": [[1748, "torch-scatter-reduce"]], "torch.select": [[1751, "torch-select"]], "torch.set_rng_state": [[1763, "torch-set-rng-state"]], "torch.rand_like": [[1723, "torch-rand-like"]], "torch.range": [[1729, "torch-range"]], "torch.scatter_add": [[1747, "torch-scatter-add"]], "torch.set_default_device": [[1753, "torch-set-default-device"]], "torch.real": [[1731, "torch-real"]], "torch.roll": [[1740, "torch-roll"]], "torch.row_stack": [[1743, "torch-row-stack"]], "torch.remainder": [[1733, "torch-remainder"]], "torch.quantize_per_channel": [[1715, "torch-quantize-per-channel"]], "torch.set_printoptions": [[1762, "torch-set-printoptions"]], "torch.select_scatter": [[1752, "torch-select-scatter"]], "torch.set_flush_denormal": [[1758, "torch-set-flush-denormal"]], "torch.rot90": [[1741, "torch-rot90"]], "torch.set_default_tensor_type": [[1755, "torch-set-default-tensor-type"]], "SobolEngine": [[1720, "sobolengine"]], "torch.quantized_max_pool1d": [[1718, "torch-quantized-max-pool1d"]], "torch.resolve_neg": [[1738, "torch-resolve-neg"]], "torch.round": [[1742, "torch-round"]], "torch.ravel": [[1730, "torch-ravel"]], "torch.seed": [[1750, "torch-seed"]], "torch.quantized_batch_norm": [[1717, "torch-quantized-batch-norm"]], "torch.set_float32_matmul_precision": [[1757, "torch-set-float32-matmul-precision"]], "set_grad_enabled": [[1759, "set-grad-enabled"]], "torch.reshape": [[1736, "torch-reshape"]], "torch.quantized_max_pool2d": [[1719, "torch-quantized-max-pool2d"]], "torch.searchsorted": [[1749, "torch-searchsorted"]], "torch.set_num_interop_threads": [[1760, "torch-set-num-interop-threads"]], "torch.rsqrt": [[1744, "torch-rsqrt"]], "torch.randn_like": [[1727, "torch-randn-like"]], "torch.set_num_threads": [[1761, "torch-set-num-threads"]], "torch.randperm": [[1728, "torch-randperm"]], "torch.randn": [[1726, "torch-randn"]], "torch.resolve_conj": [[1737, "torch-resolve-conj"]], "torch.result_type": [[1739, "torch-result-type"]], "torch.rad2deg": [[1721, "torch-rad2deg"]], "torch.quantize_per_tensor": [[1716, "torch-quantize-per-tensor"]], "torch.set_default_dtype": [[1754, "torch-set-default-dtype"]], "torch.randint": [[1724, "torch-randint"]], "torch.renorm": [[1734, "torch-renorm"]], "torch.scatter": [[1746, "torch-scatter"]], "torch.reciprocal": [[1732, "torch-reciprocal"]], "torch.rand": [[1722, "torch-rand"]], "torch.set_warn_always": [[1764, "torch-set-warn-always"]], "torch.softmax": [[1786, "torch-softmax"]], "torch.sparse_bsc_tensor": [[1796, "torch-sparse-bsc-tensor"]], "torch.signal.windows.exponential": [[1771, "torch-signal-windows-exponential"]], "torch.sparse.log_softmax": [[1790, "torch-sparse-log-softmax"]], "torch.sparse.addmm": [[1788, "torch-sparse-addmm"]], "torch.sparse.mm": [[1791, "torch-sparse-mm"]], "torch.sparse.sum": [[1795, "torch-sparse-sum"]], "torch.sparse_coo_tensor": [[1799, "torch-sparse-coo-tensor"]], "torch.subtract": [[1812, "torch-subtract"]], "torch.sinh": [[1782, "torch-sinh"]], "torch.signal.windows.cosine": [[1770, "torch-signal-windows-cosine"]], "torch.sgn": [[1765, "torch-sgn"]], "torch.signal.windows.general_cosine": [[1773, "torch-signal-windows-general-cosine"]], "torch.sqrt": [[1803, "torch-sqrt"]], "torch.sparse.sampled_addmm": [[1792, "torch-sparse-sampled-addmm"]], "torch.squeeze": [[1805, "torch-squeeze"]], "torch.sparse_bsr_tensor": [[1797, "torch-sparse-bsr-tensor"]], "torch.signal.windows.nuttall": [[1778, "torch-signal-windows-nuttall"]], "torch.sparse_csr_tensor": [[1801, "torch-sparse-csr-tensor"]], "torch.signbit": [[1779, "torch-signbit"]], "torch.signal.windows.hann": [[1776, "torch-signal-windows-hann"]], "torch.signal.windows.blackman": [[1769, "torch-signal-windows-blackman"]], "torch.signal.windows.general_hamming": [[1774, "torch-signal-windows-general-hamming"]], "torch.sign": [[1767, "torch-sign"]], "torch.sparse_csc_tensor": [[1800, "torch-sparse-csc-tensor"]], "torch.square": [[1804, "torch-square"]], "torch.smm": [[1785, "torch-smm"]], "torch.sub": [[1811, "torch-sub"]], "torch.signal.windows.gaussian": [[1772, "torch-signal-windows-gaussian"]], "torch.split": [[1802, "torch-split"]], "torch.sinc": [[1781, "torch-sinc"]], "torch.stft": [[1810, "torch-stft"]], "torch.sparse.spdiags": [[1794, "torch-sparse-spdiags"]], "torch.sigmoid": [[1766, "torch-sigmoid"]], "check_sparse_tensor_invariants": [[1789, "check-sparse-tensor-invariants"]], "torch.signal.windows.hamming": [[1775, "torch-signal-windows-hamming"]], "torch.slice_scatter": [[1783, "torch-slice-scatter"]], "torch.std_mean": [[1809, "torch-std-mean"]], "torch.signal.windows.bartlett": [[1768, "torch-signal-windows-bartlett"]], "torch.slogdet": [[1784, "torch-slogdet"]], "torch.sspaddmm": [[1806, "torch-sspaddmm"]], "torch.stack": [[1807, "torch-stack"]], "torch.sparse_compressed_tensor": [[1798, "torch-sparse-compressed-tensor"]], "torch.sort": [[1787, "torch-sort"]], "torch.signal.windows.kaiser": [[1777, "torch-signal-windows-kaiser"]], "torch.sparse.softmax": [[1793, "torch-sparse-softmax"]], "torch.std": [[1808, "torch-std"]], "torch.sin": [[1780, "torch-sin"]], "torch.polygamma": [[1708, "torch-polygamma"]], "torch.ormqr": [[1701, "torch-ormqr"]], "Adadelta": [[1668, "adadelta"]], "RMSprop": [[1681, "rmsprop"]], "torch.poisson": [[1706, "torch-poisson"]], "ExponentialLR": [[1690, "exponentiallr"]], "SGD": [[1683, "sgd"]], "Adamax": [[1672, "adamax"]], "OneCycleLR": [[1695, "onecyclelr"]], "AdamW": [[1671, "adamw"]], "torch.optim.Optimizer.zero_grad": [[1679, "torch-optim-optimizer-zero-grad"]], "ChainedScheduler": [[1685, "chainedscheduler"]], "torch.outer": [[1702, "torch-outer"]], "torch.promote_types": [[1712, "torch-promote-types"]], "MultiplicativeLR": [[1694, "multiplicativelr"]], "torch.permute": [[1704, "torch-permute"]], "LBFGS": [[1673, "lbfgs"]], "LinearLR": [[1692, "linearlr"]], "SparseAdam": [[1684, "sparseadam"]], "torch.optim.Optimizer.load_state_dict": [[1676, "torch-optim-optimizer-load-state-dict"]], "Adam": [[1670, "adam"]], "VerificationOptions": [[1666, "verificationoptions"]], "torch.orgqr": [[1700, "torch-orgqr"]], "CosineAnnealingWarmRestarts": [[1688, "cosineannealingwarmrestarts"]], "CosineAnnealingLR": [[1687, "cosineannealinglr"]], "ConstantLR": [[1686, "constantlr"]], "torch.pca_lowrank": [[1703, "torch-pca-lowrank"]], "torch.positive": [[1709, "torch-positive"]], "torch.prod": [[1711, "torch-prod"]], "torch.pinverse": [[1705, "torch-pinverse"]], "torch.quantile": [[1714, "torch-quantile"]], "torch.polar": [[1707, "torch-polar"]], "RAdam": [[1680, "radam"]], "torch.qr": [[1713, "torch-qr"]], "LambdaLR": [[1691, "lambdalr"]], "NAdam": [[1674, "nadam"]], "torch.optim.Optimizer.state_dict": [[1677, "torch-optim-optimizer-state-dict"]], "StepLR": [[1699, "steplr"]], "Rprop": [[1682, "rprop"]], "PolynomialLR": [[1696, "polynomiallr"]], "MultiStepLR": [[1693, "multisteplr"]], "ASGD": [[1667, "asgd"]], "Adagrad": [[1669, "adagrad"]], "torch.pow": [[1710, "torch-pow"]], "CyclicLR": [[1689, "cycliclr"]], "SequentialLR": [[1698, "sequentiallr"]], "torch.optim.Optimizer.add_param_group": [[1675, "torch-optim-optimizer-add-param-group"]], "ReduceLROnPlateau": [[1697, "reducelronplateau"]], "torch.optim.Optimizer.step": [[1678, "torch-optim-optimizer-step"]], "UninitializedParameter": [[1611, "uninitializedparameter"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1607, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1603, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.functional.rrelu_": [[1576, "torch-nn-functional-rrelu"]], "torch.nn.functional.upsample": [[1596, "torch-nn-functional-upsample"]], "torch.nn.functional.prelu": [[1571, "torch-nn-functional-prelu"]], "torch.nn.functional.sigmoid": [[1579, "torch-nn-functional-sigmoid"]], "torch.nn.functional.relu6": [[1573, "torch-nn-functional-relu6"]], "torch.nn.functional.scaled_dot_product_attention": [[1577, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.tanh": [[1588, "torch-nn-functional-tanh"]], "torch.nn.functional.softshrink": [[1586, "torch-nn-functional-softshrink"]], "torch.nn.functional.smooth_l1_loss": [[1581, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softmin": [[1584, "torch-nn-functional-softmin"]], "torch.nn.functional.threshold_": [[1591, "torch-nn-functional-threshold"]], "torch.nn.functional.pixel_unshuffle": [[1569, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.upsample_nearest": [[1598, "torch-nn-functional-upsample-nearest"]], "torch.nn.functional.relu_": [[1574, "torch-nn-functional-relu"]], "torch.nn.functional.softmax": [[1583, "torch-nn-functional-softmax"]], "torch.nn.functional.tanhshrink": [[1589, "torch-nn-functional-tanhshrink"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1606, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.functional.softplus": [[1585, "torch-nn-functional-softplus"]], "torch.nn.functional.upsample_bilinear": [[1597, "torch-nn-functional-upsample-bilinear"]], "torch.nn.functional.poisson_nll_loss": [[1570, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1601, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1602, "torch-nn-modules-module-register-module-forward-hook"]], "torch.nn.utils.parametrizations.orthogonal": [[1615, "torch-nn-utils-parametrizations-orthogonal"]], "torch.nn.utils.clip_grad_value_": [[1613, "torch-nn-utils-clip-grad-value"]], "torch.nn.functional.threshold": [[1590, "torch-nn-functional-threshold"]], "torch.nn.functional.silu": [[1580, "torch-nn-functional-silu"]], "torch.nn.functional.softsign": [[1587, "torch-nn-functional-softsign"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1594, "torch-nn-functional-triplet-margin-with-distance-loss"]], "Parameter": [[1609, "parameter"]], "torch.nn.functional.soft_margin_loss": [[1582, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1592, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "LazyModuleMixin": [[1599, "lazymodulemixin"]], "torch.nn.functional.unfold": [[1595, "torch-nn-functional-unfold"]], "torch.nn.modules.module.register_module_backward_hook": [[1600, "torch-nn-modules-module-register-module-backward-hook"]], "DistributedDataParallel": [[1608, "distributeddataparallel"], [1893, "distributeddataparallel"]], "torch.nn.utils.clip_grad_norm_": [[1612, "torch-nn-utils-clip-grad-norm"]], "torch.nn.functional.triplet_margin_loss": [[1593, "torch-nn-functional-triplet-margin-loss"]], "torch.nn.functional.pixel_shuffle": [[1568, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.relu": [[1572, "torch-nn-functional-relu"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1605, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "torch.nn.functional.selu": [[1578, "torch-nn-functional-selu"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1604, "torch-nn-modules-module-register-module-full-backward-hook"]], "UninitializedBuffer": [[1610, "uninitializedbuffer"]], "torch.nn.functional.rrelu": [[1575, "torch-nn-functional-rrelu"]], "torch.nn.utils.parameters_to_vector": [[1614, "torch-nn-utils-parameters-to-vector"]], "torch.nn.utils.parametrizations.spectral_norm": [[1616, "torch-nn-utils-parametrizations-spectral-norm"]], "ExportOptions": [[1661, "exportoptions"]], "JitScalarType": [[1664, "jitscalartype"]], "torch.nn.utils.prune.random_unstructured": [[1637, "torch-nn-utils-prune-random-unstructured"]], "L1Unstructured": [[1625, "l1unstructured"]], "torch.nn.utils.prune.random_structured": [[1636, "torch-nn-utils-prune-random-structured"]], "RandomStructured": [[1628, "randomstructured"]], "PruningContainer": [[1627, "pruningcontainer"]], "torch.nn.utils.rnn.unpad_sequence": [[1647, "torch-nn-utils-rnn-unpad-sequence"]], "torch.nn.utils.spectral_norm": [[1649, "torch-nn-utils-spectral-norm"]], "torch.nn.utils.rnn.unpack_sequence": [[1646, "torch-nn-utils-rnn-unpack-sequence"]], "ParametrizationList": [[1617, "parametrizationlist"]], "torch.nn.utils.prune.global_unstructured": [[1631, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.utils.prune.l1_unstructured": [[1634, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.vector_to_parameters": [[1651, "torch-nn-utils-vector-to-parameters"]], "torch.nn.utils.rnn.pad_sequence": [[1645, "torch-nn-utils-rnn-pad-sequence"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1621, "torch-nn-utils-parametrize-remove-parametrizations"]], "torch.norm": [[1655, "torch-norm"]], "RandomUnstructured": [[1629, "randomunstructured"]], "BasePruningMethod": [[1622, "basepruningmethod"]], "torch.nn.utils.stateless.functional_call": [[1650, "torch-nn-utils-stateless-functional-call"]], "no_grad": [[1653, "no-grad"]], "ExportOutput": [[1662, "exportoutput"]], "torch.nn.utils.weight_norm": [[1652, "torch-nn-utils-weight-norm"]], "torch.nn.utils.prune.is_pruned": [[1633, "torch-nn-utils-prune-is-pruned"]], "torch.normal": [[1656, "torch-normal"]], "PackedSequence": [[1641, "packedsequence"]], "torch.nn.utils.prune.remove": [[1638, "torch-nn-utils-prune-remove"]], "torch.nn.utils.parametrize.register_parametrization": [[1620, "torch-nn-utils-parametrize-register-parametrization"]], "torch.not_equal": [[1657, "torch-not-equal"]], "Identity": [[1624, "identity"], [1390, "identity"]], "torch.nn.utils.rnn.pack_sequence": [[1643, "torch-nn-utils-rnn-pack-sequence"]], "GraphInfo": [[1665, "graphinfo"]], "torch.nn.utils.prune.ln_structured": [[1635, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.parametrize.cached": [[1618, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.parametrize.is_parametrized": [[1619, "torch-nn-utils-parametrize-is-parametrized"]], "CustomFromMask": [[1623, "customfrommask"]], "torch.nn.utils.remove_weight_norm": [[1640, "torch-nn-utils-remove-weight-norm"]], "ExportOutputSerializer": [[1663, "exportoutputserializer"]], "torch.nn.utils.remove_spectral_norm": [[1639, "torch-nn-utils-remove-spectral-norm"]], "torch.nonzero": [[1654, "torch-nonzero"]], "torch.nn.utils.prune.identity": [[1632, "torch-nn-utils-prune-identity"]], "torch.numel": [[1658, "torch-numel"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1642, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1644, "torch-nn-utils-rnn-pad-packed-sequence"]], "torch.nn.utils.prune.custom_from_mask": [[1630, "torch-nn-utils-prune-custom-from-mask"]], "torch.ones": [[1659, "torch-ones"]], "torch.ones_like": [[1660, "torch-ones-like"]], "torch.nn.utils.skip_init": [[1648, "torch-nn-utils-skip-init"]], "LnStructured": [[1626, "lnstructured"]], "torch.nn.functional.grid_sample": [[1527, "torch-nn-functional-grid-sample"]], "torch.nn.functional.lp_pool2d": [[1549, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.instance_norm": [[1537, "torch-nn-functional-instance-norm"]], "torch.nn.functional.pairwise_distance": [[1566, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.glu": [[1526, "torch-nn-functional-glu"]], "torch.nn.functional.pdist": [[1567, "torch-nn-functional-pdist"]], "torch.nn.functional.kl_div": [[1539, "torch-nn-functional-kl-div"]], "torch.nn.functional.max_pool3d": [[1553, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.normalize": [[1563, "torch-nn-functional-normalize"]], "torch.nn.functional.fold": [[1521, "torch-nn-functional-fold"]], "torch.nn.functional.gelu": [[1525, "torch-nn-functional-gelu"]], "torch.nn.functional.gaussian_nll_loss": [[1524, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.max_unpool2d": [[1555, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.hinge_embedding_loss": [[1535, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.max_pool1d": [[1551, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.lp_pool1d": [[1548, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.logsigmoid": [[1547, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.layer_norm": [[1541, "torch-nn-functional-layer-norm"]], "torch.nn.functional.group_norm": [[1528, "torch-nn-functional-group-norm"]], "torch.nn.functional.log_softmax": [[1546, "torch-nn-functional-log-softmax"]], "torch.nn.functional.max_pool2d": [[1552, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.fractional_max_pool3d": [[1523, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.max_unpool3d": [[1556, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.gumbel_softmax": [[1529, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.nll_loss": [[1562, "torch-nn-functional-nll-loss"]], "torch.nn.functional.one_hot": [[1564, "torch-nn-functional-one-hot"]], "torch.nn.functional.feature_alpha_dropout": [[1520, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.leaky_relu": [[1542, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.linear": [[1544, "torch-nn-functional-linear"]], "torch.nn.functional.hardshrink": [[1530, "torch-nn-functional-hardshrink"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1561, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.local_response_norm": [[1545, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.fractional_max_pool2d": [[1522, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.multilabel_margin_loss": [[1560, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.hardtanh_": [[1534, "torch-nn-functional-hardtanh"]], "torch.nn.functional.huber_loss": [[1536, "torch-nn-functional-huber-loss"]], "torch.nn.functional.hardsigmoid": [[1531, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.multi_margin_loss": [[1559, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.margin_ranking_loss": [[1550, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.embedding_bag": [[1519, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.hardtanh": [[1533, "torch-nn-functional-hardtanh"]], "torch.nn.functional.leaky_relu_": [[1543, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.mish": [[1557, "torch-nn-functional-mish"]], "torch.nn.functional.max_unpool1d": [[1554, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.hardswish": [[1532, "torch-nn-functional-hardswish"]], "torch.nn.functional.interpolate": [[1538, "torch-nn-functional-interpolate"]], "torch.nn.functional.pad": [[1565, "torch-nn-functional-pad"]], "torch.nn.functional.l1_loss": [[1540, "torch-nn-functional-l1-loss"]], "torch.nn.functional.mse_loss": [[1558, "torch-nn-functional-mse-loss"]], "POE0002:missing-custom-symbolic-function": [[86, "poe0002-missing-custom-symbolic-function"]], "torch.Tensor.abs": [[90, "torch-tensor-abs"]], "FXE0009:fx-frontend-dynamo-make-fx": [[81, "fxe0009-fx-frontend-dynamo-make-fx"]], "UX Limitations": [[68, "ux-limitations"]], "General limitations": [[68, "general-limitations"]], "torch.autograd APIs": [[68, "torch-autograd-apis"]], "vmap limitations": [[68, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[68, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[68, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[68, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[68, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[68, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[68, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[68, "randomness"]], "torch.Tensor.acos_": [[95, "torch-tensor-acos"]], "Expiration Timers": [[60, "module-torch.distributed.elastic.timer"]], "Client Methods": [[60, "client-methods"]], "Server/Client Implementations": [[60, "server-client-implementations"]], "Writing a custom timer server/client": [[60, "writing-a-custom-timer-server-client"]], "FXE0010:fx-pass": [[82, "fxe0010-fx-pass"]], "FXE0005:fx-ir-add-node": [[77, "fxe0005-fx-ir-add-node"]], "torch.Tensor.absolute_": [[93, "torch-tensor-absolute"]], "torch.Tensor.absolute": [[92, "torch-tensor-absolute"]], "Quickstart": [[57, "quickstart"]], "Metrics": [[55, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[55, "metric-handlers"]], "Methods": [[55, "methods"]], "POE0001:node-missing-onnx-shape-inference": [[85, "poe0001-node-missing-onnx-shape-inference"]], "Rendezvous": [[58, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[58, "registry"]], "Handler": [[58, "handler"]], "Exceptions": [[58, "exceptions"]], "Implementations": [[58, "implementations"], [49, "implementations"]], "Dynamic Rendezvous": [[58, "dynamic-rendezvous"]], "C10d Backend": [[58, "c10d-backend"]], "Etcd Backend": [[58, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[58, "etcd-rendezvous-legacy"]], "Etcd Store": [[58, "etcd-store"]], "Etcd Server": [[58, "etcd-server"]], "TorchElastic Kubernetes": [[54, "torchelastic-kubernetes"]], "FXE0011:no-symbolic-function-for-call-function": [[83, "fxe0011-no-symbolic-function-for-call-function"]], "torch.func": [[64, "torch-func"]], "What are composable function transforms?": [[64, "what-are-composable-function-transforms"]], "Why composable function transforms?": [[64, "why-composable-function-transforms"], [69, "why-composable-function-transforms"]], "Read More": [[64, "read-more"]], "POE0003:missing-standard-symbolic-function": [[87, "poe0003-missing-standard-symbolic-function"]], "FXE0007:atenlib-fx-to-onnx": [[79, "fxe0007-atenlib-fx-to-onnx"]], "Error Propagation": [[51, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[51, "methods-and-classes"]], "torch.Tensor.abs_": [[91, "torch-tensor-abs"]], "Events": [[52, "module-torch.distributed.elastic.events"]], "API Methods": [[52, "api-methods"]], "Event Objects": [[52, "event-objects"]], "Examples": [[53, "examples"], [12, "examples"]], "FXE0006:atenlib-symbolic-function": [[78, "fxe0006-atenlib-symbolic-function"]], "DIAGSYS0001:arg-format-too-verbose": [[72, "diagsys0001-arg-format-too-verbose"]], "Patching Batch Norm": [[66, "patching-batch-norm"]], "What\u2019s happening?": [[66, "what-s-happening"]], "How to fix": [[66, "how-to-fix"]], "Option 1: Change the BatchNorm": [[66, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[66, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[66, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[66, "option-4-eval-mode"]], "torchrun (Elastic Launch)": [[59, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[59, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Usage": [[59, "usage"], [35, "usage"], [44, null]], "Single-node multi-worker": [[59, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[59, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[59, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[59, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[59, "note-on-rendezvous-backend"]], "Definitions": [[59, "definitions"]], "Environment Variables": [[59, "environment-variables"]], "Deployment": [[59, "deployment"]], "Failure Modes": [[59, "failure-modes"]], "Membership Changes": [[59, "membership-changes"]], "Important Notices": [[59, "important-notices"]], "torch.func API Reference": [[65, "module-torch.func"]], "Function Transforms": [[65, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[65, "utilities-for-working-with-torch-nn-modules"]], "FXE0002:fx-tracer-failure": [[74, "fxe0002-fx-tracer-failure"]], "torch.fx": [[71, "torch-fx"]], "Overview": [[71, "module-torch.fx"], [35, "module-torch.cuda._sanitizer"], [12, "overview"], [1908, "overview"], [1913, "module-torch.profiler"]], "Writing Transformations": [[71, "writing-transformations"]], "A Quick Primer on Graphs": [[71, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[71, "graph-manipulation"]], "Direct Graph Manipulation": [[71, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[71, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[71, "graph-manipulation-examples"]], "Proxy/Retracing": [[71, "proxy-retracing"]], "The Interpreter Pattern": [[71, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[71, "examples-of-the-interpreter-pattern"]], "Debugging": [[71, "debugging"], [1866, "debugging"]], "Introduction": [[71, "introduction"], [1876, "introduction"], [1884, "introduction"]], "Common Pitfalls in Transform Authoring": [[71, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[71, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[71, "debugging-the-generated-code"]], "Use pdb": [[71, "use-pdb"]], "Print the Generated Code": [[71, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[71, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[71, "debugging-the-transformation"]], "Available Debuggers": [[71, "available-debuggers"]], "Limitations of Symbolic Tracing": [[71, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[71, "dynamic-control-flow"]], "Static Control Flow": [[71, "static-control-flow"]], "Non-torch Functions": [[71, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[71, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[71, "leaf-modules"]], "Miscellanea": [[71, "miscellanea"]], "API Reference": [[71, "api-reference"], [35, "api-reference"], [1879, "module-torch.monitor"], [1908, "api-reference"], [1913, "api-reference"], [1911, "api-reference"]], "torch.fft": [[62, "torch-fft"]], "Fast Fourier Transforms": [[62, "fast-fourier-transforms"]], "Helper Functions": [[62, "helper-functions"]], "torch.Tensor.acosh_": [[97, "torch-tensor-acosh"]], "FXE0001:fx-tracer-success": [[73, "fxe0001-fx-tracer-success"]], "FXE0008:fx-node-to-onnx": [[80, "fxe0008-fx-node-to-onnx"]], "POE0004:operator-supported-in-newer-opset-version": [[88, "poe0004-operator-supported-in-newer-opset-version"]], "Train script": [[61, "train-script"]], "torch.Tensor.acos": [[94, "torch-tensor-acos"]], "FXE0003:fx-frontend-aotautograd": [[75, "fxe0003-fx-frontend-aotautograd"]], "torch.func Whirlwind Tour": [[69, "torch-func-whirlwind-tour"]], "What is torch.func?": [[69, "what-is-torch-func"]], "What are the transforms?": [[69, "what-are-the-transforms"]], "grad() (gradient computation)": [[69, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[69, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[69, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[69, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[69, "jacrev-jacfwd-and-hessian"]], "torch.futures": [[70, "torch-futures"]], "torch.Tensor.acosh": [[96, "torch-tensor-acosh"]], "Multiprocessing": [[56, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[56, "starting-multiple-workers"]], "Process Context": [[56, "process-context"]], "FXE0012:unsupported-fx-node-analysis": [[84, "fxe0012-unsupported-fx-node-analysis"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[76, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "Elastic Agent": [[49, "module-torch.distributed.elastic.agent"]], "Server": [[49, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[49, "concepts"]], "Extending the Agent": [[49, "extending-the-agent"]], "Watchdog in the Agent": [[49, "watchdog-in-the-agent"]], "Customization": [[50, "customization"]], "Launcher": [[50, "launcher"]], "Rendezvous Handler": [[50, "rendezvous-handler"]], "Metric Handler": [[50, "metric-handler"]], "Events Handler": [[50, "events-handler"]], "Migrating from functorch to torch.func": [[67, "migrating-from-functorch-to-torch-func"]], "function transforms": [[67, "function-transforms"]], "NN module utilities": [[67, "nn-module-utilities"]], "functorch.make_functional": [[67, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[67, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[67, "functorch-compile"]], "Generator": [[89, "generator"]], "FullyShardedDataParallel": [[63, "module-torch.distributed.fsdp"]], "ZeroPad2d": [[1484, "zeropad2d"]], "torch.nn.functional.dropout": [[1512, "torch-nn-functional-dropout"]], "torch.nn.functional.conv2d": [[1503, "torch-nn-functional-conv2d"]], "torch.nn.functional.cosine_embedding_loss": [[1508, "torch-nn-functional-cosine-embedding-loss"]], "TransformerDecoderLayer": [[1473, "transformerdecoderlayer"]], "TripletMarginWithDistanceLoss": [[1477, "tripletmarginwithdistanceloss"]], "torch.nn.functional.adaptive_max_pool1d": [[1489, "torch-nn-functional-adaptive-max-pool1d"]], "torch.nn.functional.alpha_dropout": [[1493, "torch-nn-functional-alpha-dropout"]], "TripletMarginLoss": [[1476, "tripletmarginloss"]], "TransformerEncoder": [[1474, "transformerencoder"]], "UpsamplingNearest2d": [[1482, "upsamplingnearest2d"]], "torch.nn.functional.avg_pool2d": [[1495, "torch-nn-functional-avg-pool2d"]], "Unfold": [[1479, "unfold"]], "torch.nn.functional.dropout1d": [[1513, "torch-nn-functional-dropout1d"]], "torch.nn.functional.dropout3d": [[1515, "torch-nn-functional-dropout3d"]], "UpsamplingBilinear2d": [[1481, "upsamplingbilinear2d"]], "TransformerDecoder": [[1472, "transformerdecoder"]], "ZeroPad1d": [[1483, "zeropad1d"]], "torch.nn.functional.binary_cross_entropy": [[1499, "torch-nn-functional-binary-cross-entropy"]], "TransformerEncoderLayer": [[1475, "transformerencoderlayer"]], "torch.nn.functional.adaptive_max_pool3d": [[1491, "torch-nn-functional-adaptive-max-pool3d"]], "torch.nn.functional.affine_grid": [[1492, "torch-nn-functional-affine-grid"]], "torch.nn.functional.elu_": [[1517, "torch-nn-functional-elu"]], "torch.nn.functional.adaptive_max_pool2d": [[1490, "torch-nn-functional-adaptive-max-pool2d"]], "torch.nn.functional.bilinear": [[1498, "torch-nn-functional-bilinear"]], "torch.nn.functional.adaptive_avg_pool3d": [[1488, "torch-nn-functional-adaptive-avg-pool3d"]], "torch.nn.functional.avg_pool1d": [[1494, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.adaptive_avg_pool1d": [[1486, "torch-nn-functional-adaptive-avg-pool1d"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1500, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.conv1d": [[1502, "torch-nn-functional-conv1d"]], "torch.nn.functional.conv_transpose3d": [[1507, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.celu": [[1501, "torch-nn-functional-celu"]], "torch.nn.functional.embedding": [[1518, "torch-nn-functional-embedding"]], "torch.nn.functional.elu": [[1516, "torch-nn-functional-elu"]], "Transformer": [[1471, "transformer"], [27, "transformer"]], "Upsample": [[1480, "upsample"]], "torch.nn.functional.cross_entropy": [[1510, "torch-nn-functional-cross-entropy"]], "ZeroPad3d": [[1485, "zeropad3d"]], "torch.nn.functional.ctc_loss": [[1511, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.adaptive_avg_pool2d": [[1487, "torch-nn-functional-adaptive-avg-pool2d"]], "torch.nn.functional.dropout2d": [[1514, "torch-nn-functional-dropout2d"]], "torch.nn.functional.conv3d": [[1504, "torch-nn-functional-conv3d"]], "Threshold": [[1470, "threshold"]], "torch.nn.functional.conv_transpose1d": [[1505, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.cosine_similarity": [[1509, "torch-nn-functional-cosine-similarity"]], "Unflatten": [[1478, "unflatten"]], "torch.nn.functional.avg_pool3d": [[1496, "torch-nn-functional-avg-pool3d"]], "torch.nn.functional.batch_norm": [[1497, "torch-nn-functional-batch-norm"]], "torch.nn.functional.conv_transpose2d": [[1506, "torch-nn-functional-conv-transpose2d"]], "FeatureAlphaDropout": [[1373, "featurealphadropout"]], "LazyBatchNorm2d": [[1402, "lazybatchnorm2d"]], "LazyLinear": [[1413, "lazylinear"]], "InstanceNorm1d": [[1391, "instancenorm1d"], [748, "instancenorm1d"]], "L1Loss": [[1395, "l1loss"]], "LayerNorm": [[1400, "layernorm"], [751, "layernorm"]], "LazyInstanceNorm2d": [[1411, "lazyinstancenorm2d"]], "Hardtanh": [[1387, "hardtanh"]], "HingeEmbeddingLoss": [[1388, "hingeembeddingloss"]], "LazyConv2d": [[1405, "lazyconv2d"]], "LPPool1d": [[1396, "lppool1d"]], "LazyConv1d": [[1404, "lazyconv1d"]], "LazyConvTranspose3d": [[1409, "lazyconvtranspose3d"]], "LazyConvTranspose1d": [[1407, "lazyconvtranspose1d"]], "EmbeddingBag": [[1372, "embeddingbag"], [743, "embeddingbag"]], "MSELoss": [[1419, "mseloss"]], "GRU": [[1380, "gru"], [757, "gru"]], "Flatten": [[1374, "flatten"]], "GRUCell": [[1381, "grucell"], [758, "grucell"]], "LeakyReLU": [[1414, "leakyrelu"], [752, "leakyrelu"]], "InstanceNorm3d": [[1393, "instancenorm3d"], [750, "instancenorm3d"]], "Linear": [[1415, "linear"], [753, "linear"], [761, "linear"], [729, "linear"], [730, "linear"]], "LogSigmoid": [[1417, "logsigmoid"]], "KLDivLoss": [[1394, "kldivloss"]], "HuberLoss": [[1389, "huberloss"]], "GroupNorm": [[1383, "groupnorm"], [746, "groupnorm"]], "Hardswish": [[1386, "hardswish"], [747, "hardswish"]], "LogSoftmax": [[1418, "logsoftmax"]], "MarginRankingLoss": [[1420, "marginrankingloss"]], "LSTMCell": [[1399, "lstmcell"], [760, "lstmcell"]], "FractionalMaxPool2d": [[1376, "fractionalmaxpool2d"]], "FractionalMaxPool3d": [[1377, "fractionalmaxpool3d"]], "GELU": [[1378, "gelu"]], "LSTM": [[1398, "lstm"], [759, "lstm"], [731, "lstm"]], "Hardshrink": [[1384, "hardshrink"]], "Hardsigmoid": [[1385, "hardsigmoid"]], "LazyBatchNorm1d": [[1401, "lazybatchnorm1d"]], "LazyInstanceNorm3d": [[1412, "lazyinstancenorm3d"]], "LPPool2d": [[1397, "lppool2d"]], "LocalResponseNorm": [[1416, "localresponsenorm"]], "LazyInstanceNorm1d": [[1410, "lazyinstancenorm1d"]], "LazyConvTranspose2d": [[1408, "lazyconvtranspose2d"]], "LazyBatchNorm3d": [[1403, "lazybatchnorm3d"]], "GaussianNLLLoss": [[1382, "gaussiannllloss"]], "InstanceNorm2d": [[1392, "instancenorm2d"], [749, "instancenorm2d"]], "LazyConv3d": [[1406, "lazyconv3d"]], "GLU": [[1379, "glu"]], "Fold": [[1375, "fold"]], "ChannelShuffle": [[1352, "channelshuffle"]], "torch.nanmean": [[1323, "torch-nanmean"]], "BatchNorm2d": [[1347, "batchnorm2d"], [733, "batchnorm2d"]], "AvgPool1d": [[1341, "avgpool1d"]], "ConstantPad1d": [[1353, "constantpad1d"]], "Dropout2d": [[1368, "dropout2d"]], "AvgPool3d": [[1343, "avgpool3d"]], "torch.narrow": [[1327, "torch-narrow"]], "BCELoss": [[1344, "bceloss"]], "CosineSimilarity": [[1363, "cosinesimilarity"]], "BatchNorm1d": [[1346, "batchnorm1d"]], "torch.neg": [[1330, "torch-neg"]], "AdaptiveAvgPool2d": [[1334, "adaptiveavgpool2d"]], "CTCLoss": [[1351, "ctcloss"]], "AdaptiveLogSoftmaxWithLoss": [[1336, "adaptivelogsoftmaxwithloss"]], "Conv1d": [[1356, "conv1d"], [735, "conv1d"]], "AdaptiveMaxPool2d": [[1338, "adaptivemaxpool2d"]], "ConstantPad2d": [[1354, "constantpad2d"]], "BatchNorm3d": [[1348, "batchnorm3d"], [734, "batchnorm3d"]], "AvgPool2d": [[1342, "avgpool2d"]], "torch.ne": [[1329, "torch-ne"]], "torch.nanquantile": [[1325, "torch-nanquantile"]], "torch.nansum": [[1326, "torch-nansum"]], "ConvTranspose2d": [[1360, "convtranspose2d"], [739, "convtranspose2d"]], "ConstantPad3d": [[1355, "constantpad3d"]], "AdaptiveAvgPool1d": [[1333, "adaptiveavgpool1d"]], "AlphaDropout": [[1340, "alphadropout"]], "Dropout3d": [[1369, "dropout3d"]], "torch.negative": [[1331, "torch-negative"]], "Embedding": [[1371, "embedding"], [742, "embedding"]], "ConvTranspose1d": [[1359, "convtranspose1d"], [738, "convtranspose1d"]], "Conv2d": [[1357, "conv2d"], [736, "conv2d"], [727, "conv2d"]], "Conv3d": [[1358, "conv3d"], [737, "conv3d"], [728, "conv3d"]], "CrossEntropyLoss": [[1364, "crossentropyloss"]], "torch.narrow_copy": [[1328, "torch-narrow-copy"]], "CosineEmbeddingLoss": [[1362, "cosineembeddingloss"]], "torch.nanmedian": [[1324, "torch-nanmedian"]], "DataParallel": [[1365, "dataparallel"]], "ConvTranspose3d": [[1361, "convtranspose3d"], [740, "convtranspose3d"]], "BCEWithLogitsLoss": [[1345, "bcewithlogitsloss"]], "AdaptiveAvgPool3d": [[1335, "adaptiveavgpool3d"]], "AdaptiveMaxPool1d": [[1337, "adaptivemaxpool1d"]], "Dropout1d": [[1367, "dropout1d"]], "Dropout": [[1366, "dropout"]], "AdaptiveMaxPool3d": [[1339, "adaptivemaxpool3d"]], "torch.nextafter": [[1332, "torch-nextafter"]], "Bilinear": [[1349, "bilinear"]], "ELU": [[1370, "elu"], [741, "elu"]], "CELU": [[1350, "celu"]], "ModuleDict": [[1429, "moduledict"]], "Tanhshrink": [[1469, "tanhshrink"]], "MaxPool2d": [[1422, "maxpool2d"]], "SiLU": [[1457, "silu"]], "MultiheadAttention": [[1434, "multiheadattention"], [732, "multiheadattention"]], "SmoothL1Loss": [[1459, "smoothl1loss"]], "ReplicationPad2d": [[1453, "replicationpad2d"]], "MaxPool1d": [[1421, "maxpool1d"]], "ReLU": [[1447, "relu"]], "ParameterList": [[1439, "parameterlist"]], "Softmax2d": [[1462, "softmax2d"]], "ReflectionPad3d": [[1451, "reflectionpad3d"]], "SoftMarginLoss": [[1460, "softmarginloss"]], "Sequential": [[1456, "sequential"]], "RNNBase": [[1444, "rnnbase"]], "ReflectionPad1d": [[1449, "reflectionpad1d"]], "Mish": [[1427, "mish"]], "RReLU": [[1446, "rrelu"]], "Softshrink": [[1465, "softshrink"]], "ReplicationPad3d": [[1454, "replicationpad3d"]], "ReplicationPad1d": [[1452, "replicationpad1d"]], "ModuleList": [[1430, "modulelist"]], "NLLLoss": [[1435, "nllloss"]], "RNNCell": [[1445, "rnncell"], [762, "rnncell"]], "SELU": [[1455, "selu"]], "Softmax": [[1461, "softmax"]], "MaxPool3d": [[1423, "maxpool3d"]], "MaxUnpool1d": [[1424, "maxunpool1d"]], "MultiLabelMarginLoss": [[1431, "multilabelmarginloss"]], "Softplus": [[1464, "softplus"]], "PReLU": [[1436, "prelu"]], "ReflectionPad2d": [[1450, "reflectionpad2d"]], "Sigmoid": [[1458, "sigmoid"], [756, "sigmoid"]], "Module": [[1428, "module"]], "RNN": [[1443, "rnn"]], "MultiMarginLoss": [[1433, "multimarginloss"]], "Tanh": [[1468, "tanh"]], "PairwiseDistance": [[1437, "pairwisedistance"]], "ReLU6": [[1448, "relu6"], [755, "relu6"]], "MaxUnpool2d": [[1425, "maxunpool2d"]], "Softsign": [[1466, "softsign"]], "SyncBatchNorm": [[1467, "syncbatchnorm"]], "ParameterDict": [[1438, "parameterdict"]], "PixelShuffle": [[1440, "pixelshuffle"]], "PoissonNLLLoss": [[1442, "poissonnllloss"]], "PixelUnshuffle": [[1441, "pixelunshuffle"]], "MultiLabelSoftMarginLoss": [[1432, "multilabelsoftmarginloss"]], "Softmin": [[1463, "softmin"]], "MaxUnpool3d": [[1426, "maxunpool3d"]], "torch.logical_xor": [[1280, "torch-logical-xor"]], "torch.mps.set_rng_state": [[1314, "torch-mps-set-rng-state"]], "torch.mps.current_allocated_memory": [[1304, "torch-mps-current-allocated-memory"]], "torch.max": [[1293, "torch-max"]], "torch.maximum": [[1294, "torch-maximum"]], "torch.mps.synchronize": [[1315, "torch-mps-synchronize"]], "torch.lu_unpack": [[1287, "torch-lu-unpack"]], "torch.mv": [[1320, "torch-mv"]], "torch.logical_or": [[1279, "torch-logical-or"]], "torch.mps.set_per_process_memory_fraction": [[1313, "torch-mps-set-per-process-memory-fraction"]], "torch.min": [[1298, "torch-min"]], "torch.nan_to_num": [[1322, "torch-nan-to-num"]], "torch.movedim": [[1303, "torch-movedim"]], "torch.logspace": [[1282, "torch-logspace"]], "torch.mps.seed": [[1312, "torch-mps-seed"]], "torch.logit": [[1281, "torch-logit"]], "torch.mul": [[1317, "torch-mul"]], "torch.masked_select": [[1289, "torch-masked-select"]], "torch.minimum": [[1299, "torch-minimum"]], "torch.matmul": [[1290, "torch-matmul"]], "torch.moveaxis": [[1302, "torch-moveaxis"]], "torch.multiply": [[1319, "torch-multiply"]], "torch.lt": [[1284, "torch-lt"]], "torch.lu_solve": [[1286, "torch-lu-solve"]], "torch.logical_not": [[1278, "torch-logical-not"]], "torch.logdet": [[1276, "torch-logdet"]], "torch.matrix_power": [[1292, "torch-matrix-power"]], "torch.mps.profiler.profile": [[1309, "torch-mps-profiler-profile"]], "torch.mps.profiler.stop": [[1311, "torch-mps-profiler-stop"]], "torch.mm": [[1300, "torch-mm"]], "torch.matrix_exp": [[1291, "torch-matrix-exp"]], "torch.logaddexp2": [[1274, "torch-logaddexp2"]], "torch.mps.manual_seed": [[1308, "torch-mps-manual-seed"]], "torch.mps.empty_cache": [[1306, "torch-mps-empty-cache"]], "torch.msort": [[1316, "torch-msort"]], "torch.logcumsumexp": [[1275, "torch-logcumsumexp"]], "torch.logsumexp": [[1283, "torch-logsumexp"]], "torch.mode": [[1301, "torch-mode"]], "torch.multinomial": [[1318, "torch-multinomial"]], "torch.logical_and": [[1277, "torch-logical-and"]], "torch.mvlgamma": [[1321, "torch-mvlgamma"]], "torch.manual_seed": [[1288, "torch-manual-seed"]], "torch.mps.profiler.start": [[1310, "torch-mps-profiler-start"]], "torch.mps.get_rng_state": [[1307, "torch-mps-get-rng-state"]], "torch.lu": [[1285, "torch-lu"]], "torch.mean": [[1295, "torch-mean"]], "torch.meshgrid": [[1297, "torch-meshgrid"]], "torch.median": [[1296, "torch-median"]], "torch.mps.driver_allocated_memory": [[1305, "torch-mps-driver-allocated-memory"]], "torch.linalg.eig": [[1231, "torch-linalg-eig"]], "torch.linalg.eigvalsh": [[1234, "torch-linalg-eigvalsh"]], "torch.linalg.slogdet": [[1255, "torch-linalg-slogdet"]], "torch.linalg.svdvals": [[1260, "torch-linalg-svdvals"]], "torch.linalg.lu_factor_ex": [[1244, "torch-linalg-lu-factor-ex"]], "torch.linalg.matrix_norm": [[1248, "torch-linalg-matrix-norm"]], "torch.log2": [[1272, "torch-log2"]], "torch.linalg.matrix_rank": [[1250, "torch-linalg-matrix-rank"]], "torch.linalg.eigvals": [[1233, "torch-linalg-eigvals"]], "torch.linalg.cross": [[1228, "torch-linalg-cross"]], "torch.linalg.lu_factor": [[1243, "torch-linalg-lu-factor"]], "torch.linalg.norm": [[1252, "torch-linalg-norm"]], "torch.linalg.pinv": [[1253, "torch-linalg-pinv"]], "torch.linalg.solve": [[1256, "torch-linalg-solve"]], "torch.linalg.lu_solve": [[1245, "torch-linalg-lu-solve"]], "torch.linalg.ldl_factor": [[1238, "torch-linalg-ldl-factor"]], "torch.linalg.cholesky_ex": [[1226, "torch-linalg-cholesky-ex"]], "torch.log10": [[1270, "torch-log10"]], "torch.linalg.qr": [[1254, "torch-linalg-qr"]], "torch.log1p": [[1271, "torch-log1p"]], "torch.lobpcg": [[1268, "torch-lobpcg"]], "torch.linalg.householder_product": [[1235, "torch-linalg-householder-product"]], "torch.linalg.solve_triangular": [[1258, "torch-linalg-solve-triangular"]], "torch.linalg.vector_norm": [[1265, "torch-linalg-vector-norm"]], "torch.log": [[1269, "torch-log"]], "torch.linalg.eigh": [[1232, "torch-linalg-eigh"]], "torch.linalg.tensorsolve": [[1262, "torch-linalg-tensorsolve"]], "torch.linalg.vecdot": [[1264, "torch-linalg-vecdot"]], "torch.linalg.ldl_factor_ex": [[1239, "torch-linalg-ldl-factor-ex"]], "torch.linspace": [[1266, "torch-linspace"]], "torch.linalg.matrix_power": [[1249, "torch-linalg-matrix-power"]], "torch.load": [[1267, "torch-load"]], "torch.linalg.svd": [[1259, "torch-linalg-svd"]], "torch.linalg.det": [[1229, "torch-linalg-det"]], "torch.linalg.ldl_solve": [[1240, "torch-linalg-ldl-solve"]], "torch.linalg.lstsq": [[1241, "torch-linalg-lstsq"]], "torch.linalg.cond": [[1227, "torch-linalg-cond"]], "torch.linalg.diagonal": [[1230, "torch-linalg-diagonal"]], "torch.linalg.lu": [[1242, "torch-linalg-lu"]], "torch.linalg.matmul": [[1246, "torch-linalg-matmul"]], "torch.linalg.inv_ex": [[1237, "torch-linalg-inv-ex"]], "torch.linalg.matrix_exp": [[1247, "torch-linalg-matrix-exp"]], "torch.linalg.multi_dot": [[1251, "torch-linalg-multi-dot"]], "torch.logaddexp": [[1273, "torch-logaddexp"]], "torch.linalg.inv": [[1236, "torch-linalg-inv"]], "torch.linalg.tensorinv": [[1261, "torch-linalg-tensorinv"]], "torch.linalg.vander": [[1263, "torch-linalg-vander"]], "torch.linalg.cholesky": [[1225, "torch-linalg-cholesky"]], "torch.linalg.solve_ex": [[1257, "torch-linalg-solve-ex"]], "torch.hsplit": [[1159, "torch-hsplit"]], "torch.is_complex": [[1175, "torch-is-complex"]], "torch.inner": [[1173, "torch-inner"]], "torch.greater": [[1150, "torch-greater"]], "inference_mode": [[1171, "inference-mode"]], "torch.inverse": [[1174, "torch-inverse"]], "torch.get_deterministic_debug_mode": [[1144, "torch-get-deterministic-debug-mode"]], "torch.initial_seed": [[1172, "torch-initial-seed"]], "torch.get_float32_matmul_precision": [[1145, "torch-get-float32-matmul-precision"]], "torch.hstack": [[1161, "torch-hstack"]], "torch.greater_equal": [[1151, "torch-greater-equal"]], "torch.func.linearize": [[1133, "torch-func-linearize"]], "torch.igamma": [[1164, "torch-igamma"]], "torch.index_add": [[1167, "torch-index-add"]], "torch.gather": [[1138, "torch-gather"]], "torch.func.grad": [[1127, "torch-func-grad"]], "torch.ger": [[1142, "torch-ger"]], "torch.get_num_threads": [[1147, "torch-get-num-threads"]], "torch.heaviside": [[1155, "torch-heaviside"]], "torch.func.jacrev": [[1131, "torch-func-jacrev"]], "torch.hspmm": [[1160, "torch-hspmm"]], "torch.index_reduce": [[1169, "torch-index-reduce"]], "torch.geqrf": [[1141, "torch-geqrf"]], "torch.gradient": [[1149, "torch-gradient"]], "torch.func.hessian": [[1129, "torch-func-hessian"]], "torch.hypot": [[1162, "torch-hypot"]], "torch.index_select": [[1170, "torch-index-select"]], "torch.index_copy": [[1168, "torch-index-copy"]], "torch.func.jacfwd": [[1130, "torch-func-jacfwd"]], "torch.func.grad_and_value": [[1128, "torch-func-grad-and-value"]], "torch.hann_window": [[1154, "torch-hann-window"]], "torch.get_num_interop_threads": [[1146, "torch-get-num-interop-threads"]], "torch.ge": [[1140, "torch-ge"]], "torch.func.vjp": [[1136, "torch-func-vjp"]], "torch.gcd": [[1139, "torch-gcd"]], "torch.hamming_window": [[1153, "torch-hamming-window"]], "torch.igammac": [[1165, "torch-igammac"]], "torch.i0": [[1163, "torch-i0"]], "torch.gt": [[1152, "torch-gt"]], "torch.get_default_dtype": [[1143, "torch-get-default-dtype"]], "torch.func.replace_all_batch_norm_modules_": [[1134, "torch-func-replace-all-batch-norm-modules"]], "torch.get_rng_state": [[1148, "torch-get-rng-state"]], "torch.imag": [[1166, "torch-imag"]], "torch.histogram": [[1157, "torch-histogram"]], "torch.histogramdd": [[1158, "torch-histogramdd"]], "torch.func.vmap": [[1137, "torch-func-vmap"]], "torch.func.jvp": [[1132, "torch-func-jvp"]], "torch.histc": [[1156, "torch-histc"]], "torch.func.stack_module_state": [[1135, "torch-func-stack-module-state"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1177, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.jit.ignore": [[1201, "torch-jit-ignore"]], "torch.jit.annotate": [[1197, "torch-jit-annotate"]], "ScriptModule": [[1196, "scriptmodule"]], "torch.is_nonzero": [[1181, "torch-is-nonzero"]], "torch.jit.script_if_tracing": [[1208, "torch-jit-script-if-tracing"]], "torch.jit.trace": [[1211, "torch-jit-trace"]], "torch.jit.optimize_for_inference": [[1205, "torch-jit-optimize-for-inference"]], "torch.isclose": [[1185, "torch-isclose"]], "torch.jit.unused": [[1213, "torch-jit-unused"]], "Attribute": [[1194, "attribute"]], "torch.isposinf": [[1191, "torch-isposinf"]], "torch.is_tensor": [[1183, "torch-is-tensor"]], "torch.jit.script": [[1207, "torch-jit-script"]], "torch.isinf": [[1188, "torch-isinf"]], "torch.jit.wait": [[1214, "torch-jit-wait"]], "torch.jit.onednn_fusion_enabled": [[1204, "torch-jit-onednn-fusion-enabled"]], "torch.lerp": [[1221, "torch-lerp"]], "torch.kthvalue": [[1217, "torch-kthvalue"]], "torch.jit.set_fusion_strategy": [[1209, "torch-jit-set-fusion-strategy"]], "torch.le": [[1220, "torch-le"]], "torch.kron": [[1216, "torch-kron"]], "strict_fusion": [[1210, "strict-fusion"]], "ScriptFunction": [[1195, "scriptfunction"]], "torch.jit.fork": [[1199, "torch-jit-fork"]], "torch.istft": [[1193, "torch-istft"]], "torch.jit.load": [[1203, "torch-jit-load"]], "torch.isin": [[1187, "torch-isin"]], "torch.isneginf": [[1190, "torch-isneginf"]], "torch.lgamma": [[1224, "torch-lgamma"]], "torch.isfinite": [[1186, "torch-isfinite"]], "torch.jit.trace_module": [[1212, "torch-jit-trace-module"]], "torch.isnan": [[1189, "torch-isnan"]], "torch.kaiser_window": [[1215, "torch-kaiser-window"]], "torch.is_grad_enabled": [[1179, "torch-is-grad-enabled"]], "torch.jit.save": [[1206, "torch-jit-save"]], "torch.isreal": [[1192, "torch-isreal"]], "torch.is_warn_always_enabled": [[1184, "torch-is-warn-always-enabled"]], "torch.is_storage": [[1182, "torch-is-storage"]], "torch.jit.isinstance": [[1202, "torch-jit-isinstance"]], "torch.jit.enable_onednn_fusion": [[1198, "torch-jit-enable-onednn-fusion"]], "torch.is_inference_mode_enabled": [[1180, "torch-is-inference-mode-enabled"]], "torch.less_equal": [[1223, "torch-less-equal"]], "torch.lcm": [[1218, "torch-lcm"]], "torch.less": [[1222, "torch-less"]], "torch.is_conj": [[1176, "torch-is-conj"]], "torch.is_floating_point": [[1178, "torch-is-floating-point"]], "torch.jit.freeze": [[1200, "torch-jit-freeze"]], "torch.ldexp": [[1219, "torch-ldexp"]], "torch.fft.irfft2": [[1101, "torch-fft-irfft2"]], "torch.fmin": [[1116, "torch-fmin"]], "torch.flip": [[1109, "torch-flip"]], "torch.fft.fft2": [[1086, "torch-fft-fft2"]], "torch.fix": [[1107, "torch-fix"]], "torch.frac": [[1118, "torch-frac"]], "torch.fft.rfftfreq": [[1105, "torch-fft-rfftfreq"]], "torch.exp2": [[1080, "torch-exp2"]], "torch.fmod": [[1117, "torch-fmod"]], "torch.from_dlpack": [[1120, "torch-from-dlpack"]], "torch.fft.irfft": [[1100, "torch-fft-irfft"]], "torch.fft.rfft2": [[1104, "torch-fft-rfft2"]], "torch.full_like": [[1124, "torch-full-like"]], "torch.fft.fft": [[1085, "torch-fft-fft"]], "torch.fft.ihfftn": [[1099, "torch-fft-ihfftn"]], "torch.fake_quantize_per_channel_affine": [[1083, "torch-fake-quantize-per-channel-affine"]], "torch.fft.ifft2": [[1094, "torch-fft-ifft2"]], "torch.fft.irfftn": [[1102, "torch-fft-irfftn"]], "torch.fft.fftn": [[1088, "torch-fft-fftn"]], "torch.floor_divide": [[1114, "torch-floor-divide"]], "torch.erfinv": [[1078, "torch-erfinv"]], "torch.fft.fftfreq": [[1087, "torch-fft-fftfreq"]], "torch.flipud": [[1111, "torch-flipud"]], "torch.fmax": [[1115, "torch-fmax"]], "torch.from_numpy": [[1121, "torch-from-numpy"]], "torch.fft.rfftn": [[1106, "torch-fft-rfftn"]], "torch.fft.hfft2": [[1091, "torch-fft-hfft2"]], "torch.full": [[1123, "torch-full"]], "torch.func.functional_call": [[1125, "torch-func-functional-call"]], "torch.frombuffer": [[1122, "torch-frombuffer"]], "torch.float_power": [[1112, "torch-float-power"]], "torch.fft.hfftn": [[1092, "torch-fft-hfftn"]], "torch.fft.ifftn": [[1095, "torch-fft-ifftn"]], "torch.eye": [[1082, "torch-eye"]], "torch.expm1": [[1081, "torch-expm1"]], "torch.flatten": [[1108, "torch-flatten"]], "torch.exp": [[1079, "torch-exp"]], "torch.fft.fftshift": [[1089, "torch-fft-fftshift"]], "torch.fft.ihfft": [[1097, "torch-fft-ihfft"]], "torch.fft.ifftshift": [[1096, "torch-fft-ifftshift"]], "torch.fliplr": [[1110, "torch-fliplr"]], "torch.floor": [[1113, "torch-floor"]], "torch.frexp": [[1119, "torch-frexp"]], "torch.fake_quantize_per_tensor_affine": [[1084, "torch-fake-quantize-per-tensor-affine"]], "torch.fft.ihfft2": [[1098, "torch-fft-ihfft2"]], "torch.fft.rfft": [[1103, "torch-fft-rfft"]], "torch.func.functionalize": [[1126, "torch-func-functionalize"]], "torch.fft.ifft": [[1093, "torch-fft-ifft"]], "torch.fft.hfft": [[1090, "torch-fft-hfft"]], "torch.equal": [[1075, "torch-equal"]], "torch.cuda.utilization": [[1047, "torch-cuda-utilization"]], "torch.cumsum": [[1051, "torch-cumsum"]], "torch.dist": [[1063, "torch-dist"]], "torch.dequantize": [[1054, "torch-dequantize"]], "torch.diagonal": [[1059, "torch-diagonal"]], "torch.cuda.set_per_process_memory_fraction": [[1039, "torch-cuda-set-per-process-memory-fraction"]], "torch.cummin": [[1049, "torch-cummin"]], "torch.einsum": [[1069, "torch-einsum"]], "torch.cuda.nvtx.range_push": [[1031, "torch-cuda-nvtx-range-push"]], "torch.diagflat": [[1058, "torch-diagflat"]], "torch.cuda.set_rng_state_all": [[1041, "torch-cuda-set-rng-state-all"]], "torch.dstack": [[1068, "torch-dstack"]], "torch.cuda.nvtx.range_pop": [[1030, "torch-cuda-nvtx-range-pop"]], "torch.cuda.set_rng_state": [[1040, "torch-cuda-set-rng-state"]], "torch.cumulative_trapezoid": [[1052, "torch-cumulative-trapezoid"]], "torch.empty_like": [[1071, "torch-empty-like"]], "torch.cuda.reset_max_memory_cached": [[1034, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.seed": [[1036, "torch-cuda-seed"]], "torch.cuda.seed_all": [[1037, "torch-cuda-seed-all"]], "torch.dsplit": [[1067, "torch-dsplit"]], "enable_grad": [[1073, "enable-grad"]], "torch.cumprod": [[1050, "torch-cumprod"]], "torch.cuda.nvtx.mark": [[1029, "torch-cuda-nvtx-mark"]], "torch.erf": [[1076, "torch-erf"]], "torch.diag_embed": [[1057, "torch-diag-embed"]], "torch.erfc": [[1077, "torch-erfc"]], "torch.cuda.temperature": [[1046, "torch-cuda-temperature"]], "torch.div": [[1064, "torch-div"]], "torch.dot": [[1066, "torch-dot"]], "torch.cuda.set_sync_debug_mode": [[1043, "torch-cuda-set-sync-debug-mode"]], "torch.diff": [[1061, "torch-diff"]], "torch.empty": [[1070, "torch-empty"]], "torch.deg2rad": [[1053, "torch-deg2rad"]], "torch.cummax": [[1048, "torch-cummax"]], "torch.empty_strided": [[1072, "torch-empty-strided"]], "torch.cuda.set_device": [[1038, "torch-cuda-set-device"]], "torch.eq": [[1074, "torch-eq"]], "torch.cuda.power_draw": [[1032, "torch-cuda-power-draw"]], "torch.cuda.synchronize": [[1045, "torch-cuda-synchronize"]], "torch.cuda.stream": [[1044, "torch-cuda-stream"]], "torch.digamma": [[1062, "torch-digamma"]], "torch.cuda.set_stream": [[1042, "torch-cuda-set-stream"]], "torch.cuda.reset_max_memory_allocated": [[1033, "torch-cuda-reset-max-memory-allocated"]], "torch.diagonal_scatter": [[1060, "torch-diagonal-scatter"]], "torch.det": [[1055, "torch-det"]], "torch.divide": [[1065, "torch-divide"]], "torch.diag": [[1056, "torch-diag"]], "torch.cuda.reset_peak_memory_stats": [[1035, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.current_device": [[988, "torch-cuda-current-device"]], "torch.cuda.max_memory_allocated": [[1018, "torch-cuda-max-memory-allocated"]], "torch.cuda.memory_stats": [[1026, "torch-cuda-memory-stats"]], "torch.cuda.max_memory_reserved": [[1020, "torch-cuda-max-memory-reserved"]], "torch.cuda.list_gpu_processes": [[1014, "torch-cuda-list-gpu-processes"]], "torch.cuda.change_current_allocator": [[980, "torch-cuda-change-current-allocator"]], "torch.cuda.comm.reduce_add": [[985, "torch-cuda-comm-reduce-add"]], "torch.cuda.make_graphed_callables": [[1015, "torch-cuda-make-graphed-callables"]], "torch.cuda.device_count": [[992, "torch-cuda-device-count"]], "torch.cuda.memory_summary": [[1027, "torch-cuda-memory-summary"]], "torch.cuda.get_gencode_flags": [[1000, "torch-cuda-get-gencode-flags"]], "torch.cuda.get_device_name": [[998, "torch-cuda-get-device-name"]], "torch.cuda.is_current_stream_capturing": [[1010, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.graph_pool_handle": [[1005, "torch-cuda-graph-pool-handle"]], "device_of": [[993, "device-of"]], "torch.cuda.clock_rate": [[981, "torch-cuda-clock-rate"]], "torch.cuda.ipc_collect": [[1008, "torch-cuda-ipc-collect"]], "torch.cuda.memory_snapshot": [[1025, "torch-cuda-memory-snapshot"]], "torch.cuda.comm.gather": [[984, "torch-cuda-comm-gather"]], "torch.cuda.get_allocator_backend": [[995, "torch-cuda-get-allocator-backend"]], "torch.cuda.empty_cache": [[994, "torch-cuda-empty-cache"]], "graph": [[1004, "graph"]], "torch.cuda.is_available": [[1009, "torch-cuda-is-available"]], "torch.cuda.jiterator._create_jit_fn": [[1012, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.memory_allocated": [[1022, "torch-cuda-memory-allocated"]], "torch.cuda.comm.broadcast_coalesced": [[983, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.memory_reserved": [[1024, "torch-cuda-memory-reserved"]], "torch.cuda.get_rng_state": [[1001, "torch-cuda-get-rng-state"]], "torch.cuda.initial_seed": [[1007, "torch-cuda-initial-seed"]], "torch.cuda.init": [[1006, "torch-cuda-init"]], "torch.cuda.manual_seed_all": [[1017, "torch-cuda-manual-seed-all"]], "torch.cuda.memory_usage": [[1028, "torch-cuda-memory-usage"]], "torch.cuda.current_stream": [[989, "torch-cuda-current-stream"]], "torch.cuda.memory_cached": [[1023, "torch-cuda-memory-cached"]], "torch.cuda.max_memory_cached": [[1019, "torch-cuda-max-memory-cached"]], "torch.cuda.comm.broadcast": [[982, "torch-cuda-comm-broadcast"]], "torch.cuda.get_sync_debug_mode": [[1003, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.get_device_properties": [[999, "torch-cuda-get-device-properties"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1013, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.default_stream": [[990, "torch-cuda-default-stream"]], "torch.cuda.get_rng_state_all": [[1002, "torch-cuda-get-rng-state-all"]], "device": [[991, "device"]], "torch.cuda.comm.scatter": [[986, "torch-cuda-comm-scatter"]], "torch.cuda.get_device_capability": [[997, "torch-cuda-get-device-capability"]], "torch.cuda.get_arch_list": [[996, "torch-cuda-get-arch-list"]], "torch.cuda.mem_get_info": [[1021, "torch-cuda-mem-get-info"]], "torch.cuda.current_blas_handle": [[987, "torch-cuda-current-blas-handle"]], "torch.cuda.is_initialized": [[1011, "torch-cuda-is-initialized"]], "torch.cuda.manual_seed": [[1016, "torch-cuda-manual-seed"]], "torch.cuda.OutOfMemoryError": [[974, "torch-cuda-outofmemoryerror"]], "torch.cdist": [[938, "torch-cdist"]], "torch.chain_matmul": [[940, "torch-chain-matmul"]], "torch.cartesian_prod": [[936, "torch-cartesian-prod"]], "CUDAPluggableAllocator": [[971, "cudapluggableallocator"]], "torch.cuda.caching_allocator_delete": [[978, "torch-cuda-caching-allocator-delete"]], "Stream": [[975, "stream"]], "ExternalStream": [[973, "externalstream"]], "torch.clone": [[947, "torch-clone"]], "torch.complex": [[958, "torch-complex"]], "torch.ceil": [[939, "torch-ceil"]], "torch.conj": [[961, "torch-conj"]], "torch.cross": [[969, "torch-cross"]], "torch.combinations": [[949, "torch-combinations"]], "torch.compile": [[950, "torch-compile"], [21, "torch-compile"], [18, "torch-compile"], [1864, null]], "torch.count_nonzero": [[967, "torch-count-nonzero"]], "torch.compiler.disable": [[955, "torch-compiler-disable"]], "torch.cos": [[965, "torch-cos"]], "torch.cosh": [[966, "torch-cosh"]], "torch.column_stack": [[948, "torch-column-stack"]], "torch.cholesky": [[941, "torch-cholesky"]], "torch.copysign": [[963, "torch-copysign"]], "CUDAGraph": [[970, "cudagraph"]], "torch.can_cast": [[935, "torch-can-cast"]], "torch.clip": [[946, "torch-clip"]], "torch.corrcoef": [[964, "torch-corrcoef"]], "torch.broadcast_tensors": [[932, "torch-broadcast-tensors"]], "torch.compiler.list_backends": [[956, "torch-compiler-list-backends"]], "StreamContext": [[976, "streamcontext"]], "torch.concatenate": [[960, "torch-concatenate"]], "torch.compiler.reset": [[957, "torch-compiler-reset"]], "torch.clamp": [[945, "torch-clamp"]], "torch.bucketize": [[934, "torch-bucketize"]], "torch.conj_physical": [[962, "torch-conj-physical"]], "torch.compiler.assume_constant_result": [[953, "torch-compiler-assume-constant-result"]], "torch.cholesky_solve": [[943, "torch-cholesky-solve"]], "torch.cholesky_inverse": [[942, "torch-cholesky-inverse"]], "torch.compiler.allow_in_graph": [[952, "torch-compiler-allow-in-graph"]], "torch.cuda.caching_allocator_alloc": [[977, "torch-cuda-caching-allocator-alloc"]], "torch.chunk": [[944, "torch-chunk"]], "torch.cuda.can_device_access_peer": [[979, "torch-cuda-can-device-access-peer"]], "torch.cov": [[968, "torch-cov"]], "torch.broadcast_shapes": [[931, "torch-broadcast-shapes"]], "torch.cat": [[937, "torch-cat"]], "Event": [[972, "event"]], "torch.compiled_with_cxx11_abi": [[951, "torch-compiled-with-cxx11-abi"]], "torch.concat": [[959, "torch-concat"]], "torch.compiler.compile": [[954, "torch-compiler-compile"]], "torch.broadcast_to": [[933, "torch-broadcast-to"]], "PyTorch 2.0 NNModule Support": [[23, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[23, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[23, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[23, "state-dict-hooks"]], "torch.compiler": [[29, "module-torch.compiler"]], "torch.compiler API reference": [[29, "torch-compiler-api-reference"]], "C++": [[33, "c"]], "TorchScript C++ API": [[33, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[33, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[33, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[33, "authoring-models-in-c"]], "Packaging for C++": [[33, "packaging-for-c"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "TorchInductor GPU Profiling": [[22, "torchinductor-gpu-profiling"]], "Relevant Environment Variables": [[22, "relevant-environment-variables"]], "Breakdown Model GPU Time": [[22, "breakdown-model-gpu-time"]], "Benchmark Individual Triton Kernel": [[22, "benchmark-individual-triton-kernel"]], "TorchDynamo APIs to control fine-grained tracing": [[17, "torchdynamo-apis-to-control-fine-grained-tracing"], [17, "id7"]], "Section 1 - Summary Table": [[17, "section-1-summary-table"]], "Section 2 - torch._dynamo.disable": [[17, "section-2-torch-dynamo-disable"]], "Section 3 - torch._dynamo.disallow_in_graph": [[17, "section-3-torch-dynamo-disallow-in-graph"]], "Section 4 - torch._dynamo.disallow_in_graph": [[17, "section-4-torch-dynamo-disallow-in-graph"]], "Section 5 - Limitations": [[17, "section-5-limitations"]], "Section 6 - FAQ": [[17, "section-6-faq"]], "torch.utils.cpp_extension": [[32, "torch-utils-cpp-extension"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [9, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[10, "core-maintainers"], [9, "core-maintainers"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "torch.utils.dlpack": [[48, "torch-utils-dlpack"]], "CUDA Stream Sanitizer": [[35, "cuda-stream-sanitizer"]], "Optimizations": [[21, "optimizations"], [1931, "optimizations"]], "Troubleshooting and Gotchas": [[21, "troubleshooting-and-gotchas"]], "Learn more": [[21, "learn-more"]], "TorchDynamo Deeper Dive": [[13, "torchdynamo-deeper-dive"]], "What is a guard?": [[13, "what-is-a-guard"]], "What is Dynamo doing?": [[13, "what-is-dynamo-doing"]], "torch.utils.data": [[38, "module-torch.utils.data"]], "Dataset Types": [[38, "dataset-types"]], "Map-style datasets": [[38, "map-style-datasets"]], "Iterable-style datasets": [[38, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[38, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[38, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[38, "automatic-batching-default"]], "Disable automatic batching": [[38, "disable-automatic-batching"]], "Working with collate_fn": [[38, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[38, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[38, "single-process-data-loading-default"]], "Multi-process data loading": [[38, "multi-process-data-loading"]], "Platform-specific behaviors": [[38, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[38, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[38, "memory-pinning"]], "Generic Join Context Manager": [[42, "generic-join-context-manager"]], "Fake tensor": [[15, "fake-tensor"]], "Motivation": [[15, "motivation"], [14, "motivation"], [1876, "motivation"]], "Related work": [[15, "related-work"]], "Overall architecture": [[15, "overall-architecture"], [14, "overall-architecture"]], "API: the important bits": [[15, "api-the-important-bits"]], "Details": [[15, "details"]], "About the tensor subclass": [[15, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[15, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[15, "how-does-the-converter-work"]], "Performance characteristics": [[15, "performance-characteristics"]], "Fake tensor of fake tensor?": [[15, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[15, "interaction-with-dynamic-shapes"]], "Other resources": [[15, "other-resources"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[43, "distributed-checkpoint-torch-distributed-checkpoint"]], "Dynamic shapes": [[14, "dynamic-shapes"]], "Abridged public API": [[14, "abridged-public-api"]], "The Guard Model": [[14, "the-guard-model"]], "Abridged internal API": [[14, "abridged-internal-api"]], "DimDynamic policy": [[14, "dimdynamic-policy"]], "Unbacked SymInts": [[14, "unbacked-symints"]], "DDP Communication Hooks": [[39, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[39, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[39, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[39, "default-communication-hooks"]], "PowerSGD Communication Hook": [[39, "powersgd-communication-hook"]], "PowerSGD State": [[39, "powersgd-state"]], "PowerSGD Hooks": [[39, "powersgd-hooks"]], "Debugging Communication Hooks": [[39, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[39, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[39, "acknowledgements"], [1912, "acknowledgements"]], "Probability distributions - torch.distributions": [[47, "module-torch.distributions"]], "Score function": [[47, "score-function"]], "Pathwise derivative": [[47, "pathwise-derivative"]], "Distribution": [[47, "distribution"]], "ExponentialFamily": [[47, "exponentialfamily"]], "Bernoulli": [[47, "bernoulli"]], "Beta": [[47, "beta"]], "Binomial": [[47, "binomial"]], "Categorical": [[47, "categorical"]], "Cauchy": [[47, "cauchy"]], "Chi2": [[47, "chi2"]], "ContinuousBernoulli": [[47, "continuousbernoulli"]], "Dirichlet": [[47, "dirichlet"]], "Exponential": [[47, "exponential"]], "FisherSnedecor": [[47, "fishersnedecor"]], "Gamma": [[47, "gamma"]], "Geometric": [[47, "geometric"]], "Gumbel": [[47, "gumbel"]], "HalfCauchy": [[47, "halfcauchy"]], "HalfNormal": [[47, "halfnormal"]], "Independent": [[47, "independent"]], "Kumaraswamy": [[47, "kumaraswamy"]], "LKJCholesky": [[47, "lkjcholesky"]], "Laplace": [[47, "laplace"]], "LogNormal": [[47, "lognormal"]], "LowRankMultivariateNormal": [[47, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[47, "mixturesamefamily"]], "Multinomial": [[47, "multinomial"]], "MultivariateNormal": [[47, "multivariatenormal"]], "NegativeBinomial": [[47, "negativebinomial"]], "Normal": [[47, "normal"]], "OneHotCategorical": [[47, "onehotcategorical"]], "Pareto": [[47, "pareto"]], "Poisson": [[47, "poisson"]], "RelaxedBernoulli": [[47, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[47, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[47, "relaxedonehotcategorical"]], "StudentT": [[47, "studentt"]], "TransformedDistribution": [[47, "transformeddistribution"]], "Uniform": [[47, "uniform"]], "VonMises": [[47, "vonmises"]], "Weibull": [[47, "weibull"]], "Wishart": [[47, "wishart"]], "KL Divergence": [[47, "module-torch.distributions.kl"]], "Transforms": [[47, "module-torch.distributions.transforms"]], "Constraints": [[47, "module-torch.distributions.constraints"], [1892, "constraints"]], "Constraint Registry": [[47, "module-torch.distributions.constraint_registry"]], "Frequently Asked Questions": [[16, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1896, "frequently-asked-questions"], [1907, "frequently-asked-questions"], [1866, "frequently-asked-questions"], [1914, "frequently-asked-questions"]], "Do you support Distributed code?": [[16, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[16, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[16, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[16, "torchdynamo-errors"]], "TorchInductor Errors": [[16, "torchinductor-errors"], [28, "torchinductor-errors"]], "Why is compilation slow?": [[16, "why-is-compilation-slow"]], "Dynamo Compilation": [[16, "dynamo-compilation"]], "Inductor Compilation": [[16, "inductor-compilation"]], "Excessive Recompilation": [[16, "excessive-recompilation"], [28, "excessive-recompilation"]], "Why are you recompiling in production?": [[16, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[16, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[16, "why-am-i-not-seeing-speedups"]], "Graph Breaks": [[16, "graph-breaks"], [28, "graph-breaks"]], "Identifying the cause of a graph break": [[16, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[16, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[16, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[16, "why-am-i-getting-ooms"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Locally disabling gradient computation": [[1, "locally-disabling-gradient-computation"], [1889, "locally-disabling-gradient-computation"], [1931, "locally-disabling-gradient-computation"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "In-place correctness checks": [[1, "in-place-correctness-checks"], [1889, "in-place-correctness-checks"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "PyTorch 2.0 Troubleshooting": [[28, "pytorch-2-0-troubleshooting"]], "Title": [[28, "id1"]], "Diagnosing Runtime Errors": [[28, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[28, "torchdynamo-errors"]], "Minifying TorchInductor Errors": [[28, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[28, "minifying-backend-compiler-errors"]], "Performance Profiling": [[28, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[28, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[28, "torchinductor-debugging-using-torch-compile-debug"]], "Identifying the Cause of a Graph Break": [[28, "identifying-the-cause-of-a-graph-break"]], "Accuracy Debugging": [[28, "accuracy-debugging"]], "File an Issue": [[28, "file-an-issue"]], "torch.__config__": [[31, "module-torch.__config__"]], "Distributed Optimizers": [[45, "distributed-optimizers"]], "Custom Backends": [[12, "custom-backends"]], "Registering Custom Backends": [[12, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[12, "custom-backends-after-aotautograd"]], "Debugging Backend": [[12, "debugging-backend"]], "Speedy Backend": [[12, "speedy-backend"]], "Composable Backends": [[12, "composable-backends"]], "Torch Distributed Elastic": [[44, "torch-distributed-elastic"]], "Get Started": [[44, "get-started"]], "Documentation": [[44, "documentation"]], "API": [[44, null]], "Advanced": [[44, null]], "Plugins": [[44, null]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "Writing Graph Transformations on ATen IR": [[27, "writing-graph-transformations-on-aten-ir"]], "Passes": [[27, "passes"]], "One-to-One Pass": [[27, "one-to-one-pass"]], "One-to-X Pass": [[27, "one-to-x-pass"]], "One-to-None Pass": [[27, "one-to-none-pass"]], "Utilizing Local Information": [[27, "utilizing-local-information"]], "Subgraph Rewriter": [[27, "subgraph-rewriter"]], "Pass Manager": [[27, "pass-manager"]], "Partitioner": [[27, "partitioner"]], "Subgraph Matcher": [[27, "subgraph-matcher"]], "Capability Based Partitioner": [[27, "capability-based-partitioner"]], "torch.cuda": [[34, "module-torch.cuda"]], "Random Number Generator": [[34, "random-number-generator"]], "Communication collectives": [[34, "communication-collectives"]], "Streams and events": [[34, "streams-and-events"]], "Graphs (beta)": [[34, "graphs-beta"]], "Memory management": [[34, "memory-management"], [1892, "memory-management"], [1898, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[34, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[34, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[34, "stream-sanitizer-prototype"]], "Guards Overview": [[20, "guards-overview"]], "Caching and Guards Overview": [[20, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[20, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[20, "instructiontranslator"]], "Variables": [[20, "variables"], [1868, "variables"], [1866, "variables"]], "Making Guards": [[20, "making-guards"]], "Summary": [[20, "summary"], [9, "summary"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Technical Overview": [[25, "technical-overview"]], "PyTorch 2.0 Performance Dashboard": [[24, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[24, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[24, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[24, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[24, "how-can-i-run-any-performance-test-locally"]], "torch.func interaction with torch.compile": [[26, "torch-func-interaction-with-torch-compile"]], "Applying a torch.func transform to a torch.compile\u2019d function": [[26, "applying-a-torch-func-transform-to-a-torch-compile-d-function"]], "Doesn\u2019t work (PT 2.0): calling a torch.func transform inside of a torch.compile\u2019ed function": [[26, "doesn-t-work-pt-2-0-calling-a-torch-func-transform-inside-of-a-torch-compile-ed-function"]], "Workaround: use torch._dynamo.allow_in_graph": [[26, "workaround-use-torch-dynamo-allow-in-graph"]], "Complex Numbers": [[30, "complex-numbers"]], "Creating Complex Tensors": [[30, "creating-complex-tensors"]], "Transition from the old representation": [[30, "transition-from-the-old-representation"]], "Accessing real and imag": [[30, "accessing-real-and-imag"]], "Angle and abs": [[30, "angle-and-abs"]], "Linear Algebra": [[30, "linear-algebra"]], "Serialization": [[30, "serialization"], [1931, "serialization"]], "Autograd": [[30, "autograd"]], "Distributed communication package - torch.distributed": [[41, "distributed-communication-package-torch-distributed"]], "Backends": [[41, "backends"], [1919, "backends"]], "Backends that come with PyTorch": [[41, "backends-that-come-with-pytorch"]], "Which backend to use?": [[41, "which-backend-to-use"]], "Common environment variables": [[41, "common-environment-variables"]], "Choosing the network interface to use": [[41, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[41, "other-nccl-environment-variables"]], "Basics": [[41, "basics"], [1919, "basics"]], "Initialization": [[41, "initialization"]], "TCP initialization": [[41, "tcp-initialization"]], "Shared file-system initialization": [[41, "shared-file-system-initialization"]], "Environment variable initialization": [[41, "environment-variable-initialization"]], "Post-Initialization": [[41, "post-initialization"]], "Distributed Key-Value Store": [[41, "distributed-key-value-store"]], "Groups": [[41, "groups"]], "Point-to-point communication": [[41, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[41, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[41, "collective-functions"]], "Profiling Collective Communication": [[41, "profiling-collective-communication"]], "Multi-GPU collective functions": [[41, "multi-gpu-collective-functions"]], "Third-party backends": [[41, "third-party-backends"]], "Launch utility": [[41, "launch-utility"]], "Spawn utility": [[41, "spawn-utility"]], "Debugging torch.distributed applications": [[41, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[41, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[41, "torch-distributed-debug"]], "Logging": [[41, "logging"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[46, "tensor-parallelism-torch-distributed-tensor-parallel"]], "torch::deploy has been moved to pytorch/multipy": [[40, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Getting Started": [[19, "getting-started"], [7, "getting-started"]], "Existing Backends": [[19, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[19, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "CUDAGraph Trees": [[11, "cudagraph-trees"]], "CUDAGraph Background": [[11, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[11, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[11, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[11, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[11, "cudagraph-trees-integration"]], "Limitations": [[11, "limitations"], [1907, "limitations"]], "Comparisons": [[11, "comparisons"], [1869, "comparisons"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Module Maintainers": [[9, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1912, "tutorials"], [1919, "tutorials"], [1911, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "CUDA semantics": [[1892, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1892, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1892, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1892, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1892, "asynchronous-execution"]], "CUDA streams": [[1892, "cuda-streams"]], "Stream semantics of backward passes": [[1892, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1892, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1892, "environment-variables"]], "Using custom memory allocators for CUDA": [[1892, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1892, "cublas-workspaces"]], "cuFFT plan cache": [[1892, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1892, "just-in-time-compilation"]], "Best practices": [[1892, "best-practices"]], "Device-agnostic code": [[1892, "device-agnostic-code"]], "Use pinned memory buffers": [[1892, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1892, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1892, "cuda-graphs"]], "Why CUDA Graphs?": [[1892, "why-cuda-graphs"]], "PyTorch API": [[1892, "pytorch-api"]], "Non-constraints": [[1892, "non-constraints"]], "Whole-network capture": [[1892, "whole-network-capture"]], "Partial-network capture": [[1892, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1892, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1892, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1892, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1892, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1892, "id5"]], "Graph memory management": [[1892, "graph-memory-management"]], "Sharing memory across captures": [[1892, "sharing-memory-across-captures"]], "torch._logging": [[1875, "torch-logging"]], "Serialization semantics": [[1905, "serialization-semantics"]], "Table of Contents": [[1905, "table-of-contents"]], "Saving and loading tensors": [[1905, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1905, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1905, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1905, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1905, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1905, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1905, "torch-full-always-inferring-a-float-dtype"]], "torch.utils.model_zoo": [[1878, "torch-utils-model-zoo"]], "torch.nn.init": [[1887, "torch-nn-init"]], "Multiprocessing best practices": [[1902, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1902, "cuda-in-multiprocessing"]], "Best practices and tips": [[1902, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1902, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1902, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1902, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1902, "hogwild"]], "JIT Utils - torch.utils.jit": [[1872, "module-torch.utils.jit"]], "Reproducibility": [[1904, "reproducibility"]], "Controlling sources of randomness": [[1904, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1904, "pytorch-random-number-generator"]], "Python": [[1904, "python"]], "Random number generators in other libraries": [[1904, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1904, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1904, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1904, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1904, "cuda-rnn-and-lstm"]], "DataLoader": [[1904, "dataloader"]], "TorchScript Language Reference": [[1869, "torchscript-language-reference"], [1868, "torchscript-language-reference"]], "Terminology": [[1869, "terminology"]], "Type System": [[1869, "id1"]], "TorchScript Types": [[1869, "torchscript-types"]], "Meta Types": [[1869, "meta-types"]], "Any Type": [[1869, "any-type"]], "Operators Supported for Any Type": [[1869, "operators-supported-for-any-type"]], "Design Notes": [[1869, "design-notes"], [1919, "design-notes"]], "Primitive Types": [[1869, "primitive-types"]], "Structural Types": [[1869, "structural-types"]], "Nominal Types": [[1869, "nominal-types"]], "Built-in Class": [[1869, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1869, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1869, "custom-class"]], "Enum Type": [[1869, "enum-type"]], "TorchScript Module Class": [[1869, "torchscript-module-class"]], "Module Instance Class": [[1869, "module-instance-class"]], "Type Annotation": [[1869, "type-annotation"]], "When to Annotate Types": [[1869, "when-to-annotate-types"]], "Annotate Function Signature": [[1869, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1869, "annotate-variables-and-data-attributes"]], "Local Variables": [[1869, "local-variables"]], "Instance Data Attributes": [[1869, "instance-data-attributes"]], "Type Annotation APIs": [[1869, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1869, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1869, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1869, "torchscript-type-system-definition"]], "Unsupported Typing Constructs": [[1869, "unsupported-typing-constructs"], [1868, "unsupported-typing-constructs"]], "Expressions": [[1869, "expressions"], [1868, "expressions"]], "Arithmetic Conversions": [[1869, "arithmetic-conversions"]], "Atoms": [[1869, "atoms"]], "Identifiers": [[1869, "identifiers"]], "Literals": [[1869, "literals"], [1868, "literals"]], "Parenthesized Forms": [[1869, "parenthesized-forms"]], "List and Dictionary Displays": [[1869, "list-and-dictionary-displays"]], "Primaries": [[1869, "primaries"]], "Attribute References": [[1869, "attribute-references"]], "Subscriptions": [[1869, "subscriptions"]], "Slicings": [[1869, "slicings"]], "Calls": [[1869, "calls"]], "Power Operator": [[1869, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1869, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1869, "binary-arithmetic-operations"]], "Shifting Operations": [[1869, "shifting-operations"]], "Binary Bitwise Operations": [[1869, "binary-bitwise-operations"]], "Value Comparisons": [[1869, "value-comparisons"]], "Membership Test Operations": [[1869, "membership-test-operations"]], "Identity Comparisons": [[1869, "identity-comparisons"]], "Boolean Operations": [[1869, "boolean-operations"]], "Conditional Expressions": [[1869, "conditional-expressions"]], "Expression Lists": [[1869, "expression-lists"]], "Simple Statements": [[1869, "simple-statements"]], "Expression Statements": [[1869, "expression-statements"]], "Assignment Statements": [[1869, "assignment-statements"]], "Augmented Assignment Statements": [[1869, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1869, "annotated-assignment-statements"]], "The raise Statement": [[1869, "the-raise-statement"]], "The assert Statement": [[1869, "the-assert-statement"]], "The return Statement": [[1869, "the-return-statement"]], "The del Statement": [[1869, "the-del-statement"]], "The pass Statement": [[1869, "the-pass-statement"]], "The print Statement": [[1869, "the-print-statement"]], "The break Statement": [[1869, "the-break-statement"]], "The continue Statement:": [[1869, "the-continue-statement"]], "Compound Statements": [[1869, "compound-statements"]], "The if Statement": [[1869, "the-if-statement"]], "Basic if/else Statement": [[1869, "basic-if-else-statement"]], "Ternary if/else Statement": [[1869, "ternary-if-else-statement"]], "The while Statement": [[1869, "the-while-statement"]], "The for-in Statement": [[1869, "the-for-in-statement"]], "The with Statement": [[1869, "the-with-statement"]], "The tuple Statement": [[1869, "the-tuple-statement"]], "The getattr Statement": [[1869, "the-getattr-statement"]], "The hasattr Statement": [[1869, "the-hasattr-statement"]], "The zip Statement": [[1869, "the-zip-statement"]], "The enumerate Statement": [[1869, "the-enumerate-statement"]], "Python Values": [[1869, "python-values"]], "Resolution Rules": [[1869, "resolution-rules"]], "Python Built-in Functions Support": [[1869, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1869, "id5"]], "Python Built-in Values Support": [[1869, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1869, "id6"]], "torch.* APIs": [[1869, "torch-apis"]], "Remote Procedure Calls": [[1869, "remote-procedure-calls"]], "Asynchronous Execution": [[1869, "asynchronous-execution"]], "Type Annotations": [[1869, "type-annotations"]], "Meta Programming": [[1869, "meta-programming"]], "Type Refinement": [[1869, "type-refinement"]], "Multiprocessing package - torch.multiprocessing": [[1881, "module-torch.multiprocessing"]], "Strategy management": [[1881, "strategy-management"]], "Sharing CUDA tensors": [[1881, "sharing-cuda-tensors"]], "Sharing strategies": [[1881, "sharing-strategies"]], "File descriptor - file_descriptor": [[1881, "file-descriptor-file-descriptor"]], "File system - file_system": [[1881, "file-system-file-system"]], "Spawning subprocesses": [[1881, "spawning-subprocesses"]], "PyTorch documentation": [[1864, "pytorch-documentation"]], "Community": [[1864, null]], "Developer Notes": [[1864, null]], "Language Bindings": [[1864, null]], "Python API": [[1864, null]], "Libraries": [[1864, null]], "Indices and tables": [[1864, "indices-and-tables"]], "torch.optim": [[1910, "module-torch.optim"]], "How to use an optimizer": [[1910, "how-to-use-an-optimizer"]], "Constructing it": [[1910, "constructing-it"]], "Per-parameter options": [[1910, "per-parameter-options"]], "Taking an optimization step": [[1910, "taking-an-optimization-step"]], "optimizer.step()": [[1910, "optimizer-step"]], "optimizer.step(closure)": [[1910, "optimizer-step-closure"]], "Base class": [[1910, "base-class"]], "Algorithms": [[1910, "algorithms"]], "How to adjust learning rate": [[1910, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1910, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1910, "constructing-averaged-models"]], "Custom averaging strategies": [[1910, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1910, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1910, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1910, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1910, "putting-it-all-together-ema"]], "HIP (ROCm) semantics": [[1898, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1898, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1898, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1898, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1898, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1898, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1898, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1898, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1898, "enabling-kernel-asserts"]], "Features for large-scale deployments": [[1899, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1899, "fleet-wide-operator-profiling"]], "API usage logging": [[1899, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1899, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1899, "build-environment-considerations"]], "Common extension points": [[1899, "common-extension-points"]], "torch.hub": [[1863, "torch-hub"]], "Publishing models": [[1863, "publishing-models"]], "How to implement an entrypoint?": [[1863, "how-to-implement-an-entrypoint"]], "Important Notice": [[1863, "important-notice"]], "Loading models from Hub": [[1863, "loading-models-from-hub"]], "Running a loaded model:": [[1863, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1863, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1863, "caching-logic"]], "Known limitations:": [[1863, "known-limitations"]], "TorchScript Unsupported PyTorch Constructs": [[1871, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1871, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1871, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1871, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1871, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1871, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1871, "pytorch-unsupported-modules-and-classes"]], "Autograd mechanics": [[1889, "autograd-mechanics"]], "How autograd encodes the history": [[1889, "how-autograd-encodes-the-history"]], "Saved tensors": [[1889, "saved-tensors"]], "Gradients for non-differentiable functions": [[1889, "gradients-for-non-differentiable-functions"]], "Setting requires_grad": [[1889, "setting-requires-grad"]], "Grad Modes": [[1889, "grad-modes"]], "Default Mode (Grad Mode)": [[1889, "default-mode-grad-mode"]], "No-grad Mode": [[1889, "no-grad-mode"]], "Inference Mode": [[1889, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1889, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1889, "in-place-operations-with-autograd"]], "Multithreaded Autograd": [[1889, "multithreaded-autograd"]], "Concurrency on CPU": [[1889, "concurrency-on-cpu"]], "Non-determinism": [[1889, "non-determinism"]], "Graph retaining": [[1889, "graph-retaining"]], "Thread Safety on Autograd Node": [[1889, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1889, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1889, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1889, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1889, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1889, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1889, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1889, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1889, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1889, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1889, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1889, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1889, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1889, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1889, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1889, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1889, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Distributed Data Parallel": [[1893, "distributed-data-parallel"]], "Example": [[1893, "example"], [1894, "example"]], "Internal Design": [[1893, "internal-design"]], "Implementation": [[1893, "implementation"], [1921, "implementation"]], "ProcessGroup": [[1893, "processgroup"]], "TorchDynamo DDPOptimizer": [[1893, "id1"]], "torch.masked": [[1876, "torch-masked"]], "What is a MaskedTensor?": [[1876, "what-is-a-maskedtensor"]], "Supported Operators": [[1876, "supported-operators"]], "Unary Operators": [[1876, "unary-operators"]], "Binary Operators": [[1876, "binary-operators"]], "Reductions": [[1876, "reductions"]], "View and select functions": [[1876, "view-and-select-functions"]], "torch.linalg": [[1874, "torch-linalg"]], "Matrix Properties": [[1874, "matrix-properties"]], "Decompositions": [[1874, "decompositions"]], "Solvers": [[1874, "solvers"]], "Inverses": [[1874, "inverses"]], "Matrix Functions": [[1874, "matrix-functions"]], "Matrix Products": [[1874, "matrix-products"]], "Tensor Operations": [[1874, "tensor-operations"]], "Misc": [[1874, "misc"]], "Experimental Functions": [[1874, "experimental-functions"]], "TorchScript Builtins": [[1867, "torchscript-builtins"]], "Supported Tensor Methods": [[1867, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1867, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1867, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1867, "python-built-in-functions"]], "math Module": [[1867, "math-module"]], "torch.zeros_like": [[1862, "torch-zeros-like"]], "torch.monitor": [[1879, "torch-monitor"]], "Named Tensors operator coverage": [[1882, "named-tensors-operator-coverage"]], "Supported Operations": [[1882, "id1"]], "Keeps input names": [[1882, "keeps-input-names"]], "Removes dimensions": [[1882, "removes-dimensions"]], "Unifies names from inputs": [[1882, "unifies-names-from-inputs"]], "Permutes dimensions": [[1882, "permutes-dimensions"]], "Contracts away dims": [[1882, "contracts-away-dims"]], "Factory functions": [[1882, "factory-functions"]], "out function and in-place variants": [[1882, "out-function-and-in-place-variants"]], "Numerical accuracy": [[1903, "numerical-accuracy"]], "Batched computations or slice computations": [[1903, "batched-computations-or-slice-computations"]], "Extremal values": [[1903, "extremal-values"]], "Linear algebra (torch.linalg)": [[1903, "linear-algebra-torch-linalg"]], "Non-finite values": [[1903, "non-finite-values"]], "Extremal values in linalg": [[1903, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1903, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1903, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1903, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "ONNX supported TorchScript operators": [[1909, "onnx-supported-torchscript-operators"]], "Supported operators": [[1909, "supported-operators"]], "ONNX support for TorchScript operators": [[1909, "id1"]], "Unsupported operators": [[1909, "unsupported-operators"], [1909, "id2"]], "Python Language Reference Coverage": [[1870, "python-language-reference-coverage"]], "torch.mps": [[1880, "module-torch.mps"]], "MPS Profiler": [[1880, "mps-profiler"]], "IRs": [[1865, "irs"]], "Core Aten IR": [[1865, "core-aten-ir"]], "Prims IR": [[1865, "prims-ir"]], "torch.utils.mobile_optimizer": [[1877, "torch-utils-mobile-optimizer"]], "torch.nn.functional": [[1886, "torch-nn-functional"]], "Convolution functions": [[1886, "convolution-functions"]], "Pooling functions": [[1886, "pooling-functions"]], "Attention Mechanisms": [[1886, "attention-mechanisms"]], "Non-linear activation functions": [[1886, "non-linear-activation-functions"]], "Linear functions": [[1886, "linear-functions"]], "Dropout functions": [[1886, "dropout-functions"]], "Sparse functions": [[1886, "sparse-functions"]], "Distance functions": [[1886, "distance-functions"]], "Loss functions": [[1886, "loss-functions"]], "Vision functions": [[1886, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1886, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1886, "data-parallel"]], "Gradcheck mechanics": [[1897, "gradcheck-mechanics"]], "Notations and background information": [[1897, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1897, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1897, "real-to-real-functions"]], "Default real input numerical evaluation": [[1897, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1897, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1897, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1897, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1897, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1897, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1897, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1897, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1897, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1897, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1897, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1897, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1897, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1897, "gradgradcheck-implementation"]], "Types": [[1868, "supported-type"], [1907, "types"]], "Default Types": [[1868, "default-types"]], "Optional Type Refinement": [[1868, "optional-type-refinement"]], "TorchScript Classes": [[1868, "id2"], [1866, "torchscript-classes"]], "TorchScript Enums": [[1868, "id4"]], "Named Tuples": [[1868, "named-tuples"]], "Iterables": [[1868, "iterables"]], "List Construction": [[1868, "list-construction"]], "Tuple Construction": [[1868, "tuple-construction"]], "Dict Construction": [[1868, "dict-construction"]], "Arithmetic Operators": [[1868, "arithmetic-operators"]], "Comparison Operators": [[1868, "comparison-operators"]], "Logical Operators": [[1868, "logical-operators"]], "Subscripts and Slicing": [[1868, "subscripts-and-slicing"]], "Function Calls": [[1868, "function-calls"]], "Method Calls": [[1868, "method-calls"]], "Ternary Expressions": [[1868, "ternary-expressions"]], "Casts": [[1868, "casts"]], "Accessing Module Parameters": [[1868, "accessing-module-parameters"]], "Statements": [[1868, "statements"]], "Simple Assignments": [[1868, "simple-assignments"]], "Pattern Matching Assignments": [[1868, "pattern-matching-assignments"]], "Print Statements": [[1868, "print-statements"]], "If Statements": [[1868, "if-statements"]], "While Loops": [[1868, "while-loops"]], "For loops with range": [[1868, "for-loops-with-range"]], "For loops over tuples": [[1868, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1868, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1868, "break-and-continue"]], "Return": [[1868, "return"]], "Variable Resolution": [[1868, "variable-resolution"]], "Use of Python Values": [[1868, "use-of-python-values"]], "Functions": [[1868, "functions"], [1907, "functions"], [1866, "functions"], [1934, "functions"], [1924, "functions"]], "Attribute Lookup On Python Modules": [[1868, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1868, "python-defined-constants"]], "Module Attributes": [[1868, "module-attributes"]], "Windows FAQ": [[1906, "windows-faq"]], "Building from source": [[1906, "building-from-source"]], "Include optional components": [[1906, "include-optional-components"]], "Speeding CUDA build for Windows": [[1906, "speeding-cuda-build-for-windows"]], "One key install script": [[1906, "one-key-install-script"]], "Extension": [[1906, "extension"]], "CFFI Extension": [[1906, "cffi-extension"]], "Cpp Extension": [[1906, "cpp-extension"]], "Installation": [[1906, "installation"]], "Package not found in win-32 channel.": [[1906, "package-not-found-in-win-32-channel"]], "Import error": [[1906, "import-error"]], "Usage (multiprocessing)": [[1906, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1906, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1906, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1906, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1906, "cuda-ipc-operations"]], "Extending PyTorch": [[1894, "extending-pytorch"]], "Extending torch.autograd": [[1894, "extending-torch-autograd"]], "When to use": [[1894, "when-to-use"]], "When not to use": [[1894, "when-not-to-use"]], "How to use": [[1894, "how-to-use"]], "Combined or separate forward() and setup_context()": [[1894, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1894, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1894, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1894, "extending-torch-nn"]], "Adding a Module": [[1894, "adding-a-module"]], "Extending torch": [[1894, "extending-torch"]], "Extending torch with a Tensor-like type": [[1894, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1894, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1894, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1894, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1894, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Writing custom C++ extensions": [[1894, "writing-custom-c-extensions"]], "Writing custom C extensions": [[1894, "id2"]], "torch.nested": [[1884, "module-torch.nested"]], "Construction": [[1884, "construction"], [1923, "construction"]], "size": [[1884, "size"]], "unbind": [[1884, "unbind"]], "Nested tensor constructor and conversion functions": [[1884, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1884, "supported-operations"], [1923, "supported-operations"]], "Broadcasting semantics": [[1890, "broadcasting-semantics"]], "General semantics": [[1890, "general-semantics"]], "In-place semantics": [[1890, "in-place-semantics"]], "Backwards compatibility": [[1890, "backwards-compatibility"]], "Extending torch.func with autograd.Function": [[1895, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1895, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1895, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1895, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1895, "limitations-and-gotchas"]], "torch.vmap() Support": [[1895, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1895, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1895, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1895, "torch-func-jvp-support"]], "CPU threading and TorchScript inference": [[1891, "cpu-threading-and-torchscript-inference"]], "Build options": [[1891, "build-options"]], "Runtime API": [[1891, "runtime-api"]], "Tuning the number of threads": [[1891, "tuning-the-number-of-threads"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1896, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1896, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1896, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1896, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1896, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "torch.onnx": [[1907, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1907, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1907, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1907, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1907, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1907, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1907, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1907, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1907, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1907, "reads-gets"]], "Writes / Sets": [[1907, "writes-sets"]], "Adding support for operators": [[1907, "adding-support-for-operators"]], "ONNX exporter internals": [[1907, "onnx-exporter-internals"]], "ATen operators": [[1907, "aten-operators"]], "List of supported operators": [[1907, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1907, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1907, "torch-autograd-functions"]], "Static Symbolic Method": [[1907, "static-symbolic-method"]], "Inline Autograd Function": [[1907, "inline-autograd-function"]], "Custom operators": [[1907, "custom-operators"]], "ONNX-script functions": [[1907, "onnx-script-functions"]], "C++ Operators": [[1907, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1907, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1907, "contributing-developing"]], "Classes": [[1907, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1907, "preview-torch-onnx-torchdynamo-exporter"]], "torch.nn": [[1885, "module-torch.nn"], [1885, "id1"]], "Containers": [[1885, "containers"]], "Convolution Layers": [[1885, "convolution-layers"]], "Pooling layers": [[1885, "pooling-layers"]], "Padding Layers": [[1885, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1885, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1885, "non-linear-activations-other"]], "Normalization Layers": [[1885, "normalization-layers"]], "Recurrent Layers": [[1885, "recurrent-layers"]], "Transformer Layers": [[1885, "transformer-layers"]], "Linear Layers": [[1885, "linear-layers"]], "Dropout Layers": [[1885, "dropout-layers"]], "Sparse Layers": [[1885, "sparse-layers"]], "Distance Functions": [[1885, "distance-functions"]], "Loss Functions": [[1885, "loss-functions"]], "Vision Layers": [[1885, "vision-layers"]], "Shuffle Layers": [[1885, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1885, "module-torch.nn.parallel"]], "Utilities": [[1885, "module-torch.nn.utils"], [1931, "utilities"]], "Quantized Functions": [[1885, "quantized-functions"]], "Lazy Modules Initialization": [[1885, "lazy-modules-initialization"]], "CUDA Automatic Mixed Precision examples": [[1888, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1888, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1888, "working-with-unscaled-gradients"]], "Gradient clipping": [[1888, "gradient-clipping"]], "Working with Scaled Gradients": [[1888, "working-with-scaled-gradients"]], "Gradient accumulation": [[1888, "gradient-accumulation"]], "Gradient penalty": [[1888, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1888, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1888, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1888, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1888, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1888, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1888, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1888, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1888, "functions-that-need-a-particular-dtype"]], "torch.onnx diagnostics": [[1908, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1908, "diagnostic-rules"]], "Named Tensors": [[1883, "named-tensors"]], "Creating named tensors": [[1883, "creating-named-tensors"]], "Named dimensions": [[1883, "named-dimensions"]], "Name propagation semantics": [[1883, "name-propagation-semantics"]], "match semantics": [[1883, "match-semantics"]], "Basic name inference rules": [[1883, "basic-name-inference-rules"]], "Explicit alignment by names": [[1883, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1883, "manipulating-dimensions"]], "Autograd support": [[1883, "autograd-support"]], "Currently supported operations and subsystems": [[1883, "currently-supported-operations-and-subsystems"]], "Operators": [[1883, "operators"]], "Subsystems": [[1883, "subsystems"]], "Named tensor API reference": [[1883, "named-tensor-api-reference"]], "Modules": [[1900, "modules"], [1866, "modules"]], "A Simple Custom Module": [[1900, "a-simple-custom-module"]], "Modules as Building Blocks": [[1900, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1900, "neural-network-training-with-modules"]], "Module State": [[1900, "module-state"]], "Module Initialization": [[1900, "module-initialization"]], "Module Hooks": [[1900, "module-hooks"]], "Advanced Features": [[1900, "advanced-features"]], "Distributed Training": [[1900, "distributed-training"]], "Profiling Performance": [[1900, "profiling-performance"]], "Improving Performance with Quantization": [[1900, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1900, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1900, "parametrizations"]], "Transforming Modules with FX": [[1900, "transforming-modules-with-fx"]], "torch.library": [[1873, "torch-library"]], "MPS backend": [[1901, "mps-backend"]], "TorchScript": [[1866, "torchscript"]], "Creating TorchScript Code": [[1866, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1866, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1866, "torchscript-language"]], "Built-in Functions and Modules": [[1866, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1866, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1866, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1866, "python-language-reference-comparison"]], "Disable JIT for Debugging": [[1866, "disable-jit-for-debugging"]], "Inspecting Code": [[1866, "inspecting-code"]], "Interpreting Graphs": [[1866, "interpreting-graphs"]], "Tracer": [[1866, "tracer"]], "Tracing Edge Cases": [[1866, "tracing-edge-cases"]], "Automatic Trace Checking": [[1866, "automatic-trace-checking"]], "Tracer Warnings": [[1866, "tracer-warnings"]], "Known Issues": [[1866, "known-issues"]], "Appendix": [[1866, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1866, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Attributes": [[1866, "attributes"]], "Constants": [[1866, "constants"]], "Fusion Backends": [[1866, "fusion-backends"]], "References": [[1866, "references"]], "torch.autograd.Function.jvp": [[888, "torch-autograd-function-jvp"]], "torch.autograd.profiler.profile.key_averages": [[914, "torch-autograd-profiler-profile-key-averages"]], "torch.bitwise_left_shift": [[923, "torch-bitwise-left-shift"]], "torch.autograd.functional.jacobian": [[900, "torch-autograd-functional-jacobian"]], "torch.autograd.graph.Node.register_prehook": [[911, "torch-autograd-graph-node-register-prehook"]], "torch.bitwise_right_shift": [[926, "torch-bitwise-right-shift"]], "torch.autograd.graph.Node.register_hook": [[910, "torch-autograd-graph-node-register-hook"]], "torch.autograd.Function.vmap": [[889, "torch-autograd-function-vmap"]], "torch.autograd.profiler.load_nvprof": [[912, "torch-autograd-profiler-load-nvprof"]], "torch.bitwise_and": [[922, "torch-bitwise-and"]], "torch.atleast_2d": [[884, "torch-atleast-2d"]], "torch.bmm": [[930, "torch-bmm"]], "torch.bitwise_xor": [[927, "torch-bitwise-xor"]], "torch.atleast_3d": [[885, "torch-atleast-3d"]], "set_multithreading_enabled": [[917, "set-multithreading-enabled"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[897, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.atanh": [[882, "torch-atanh"]], "dual_level": [[891, "dual-level"]], "torch.autograd.functional.vhp": [[902, "torch-autograd-functional-vhp"]], "torch.autograd.functional.vjp": [[903, "torch-autograd-functional-vjp"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[915, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.autograd.gradgradcheck": [[906, "torch-autograd-gradgradcheck"]], "torch.bitwise_not": [[924, "torch-bitwise-not"]], "torch.autograd.profiler.profile.total_average": [[916, "torch-autograd-profiler-profile-total-average"]], "torch.bernoulli": [[920, "torch-bernoulli"]], "torch.bincount": [[921, "torch-bincount"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[896, "torch-autograd-function-functionctx-save-for-backward"]], "torch.autograd.forward_ad.unpack_dual": [[893, "torch-autograd-forward-ad-unpack-dual"]], "torch.baddbmm": [[918, "torch-baddbmm"]], "torch.autograd.graph.Node.name": [[908, "torch-autograd-graph-node-name"]], "torch.autograd.Function.backward": [[886, "torch-autograd-function-backward"]], "torch.atleast_1d": [[883, "torch-atleast-1d"]], "torch.autograd.forward_ad.make_dual": [[892, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.profiler.profile.export_chrome_trace": [[913, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.block_diag": [[929, "torch-block-diag"]], "torch.blackman_window": [[928, "torch-blackman-window"]], "torch.autograd.functional.hessian": [[898, "torch-autograd-functional-hessian"]], "torch.autograd.grad": [[904, "torch-autograd-grad"]], "torch.autograd.functional.jvp": [[901, "torch-autograd-functional-jvp"]], "torch.autograd.functional.hvp": [[899, "torch-autograd-functional-hvp"]], "torch.autograd.graph.Node.next_functions": [[909, "torch-autograd-graph-node-next-functions"]], "torch.autograd.backward": [[890, "torch-autograd-backward"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[895, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.autograd.Function.forward": [[887, "torch-autograd-function-forward"]], "torch.bartlett_window": [[919, "torch-bartlett-window"]], "torch.autograd.graph.Node.metadata": [[907, "torch-autograd-graph-node-metadata"]], "torch.bitwise_or": [[925, "torch-bitwise-or"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[894, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.gradcheck": [[905, "torch-autograd-gradcheck"]], "Quantization API Reference": [[1917, "quantization-api-reference"], [1914, "quantization-api-reference"]], "torch.ao.quantization": [[1917, "torch-ao-quantization"]], "Top level APIs": [[1917, "top-level-apis"]], "Preparing model for quantization": [[1917, "preparing-model-for-quantization"]], "Utility functions": [[1917, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1917, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1917, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1917, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1917, "torch-ao-quantization-fx-custom-config"]], "torch (quantization related functions)": [[1917, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1917, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1917, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1917, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1917, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1917, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1917, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1917, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1917, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1917, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1917, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1917, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1917, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1917, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1917, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1917, "quantized-dtypes-and-quantization-schemes"]], "torch.ao.ns._numeric_suite_fx": [[1933, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1933, "torch-ao-ns-fx-utils"]], "torch.overrides": [[1934, "torch-overrides"]], "Pipeline Parallelism": [[1912, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1912, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1912, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1912, "pipe-apis-in-pytorch"]], "Skip connections": [[1912, "skip-connections"]], "torch.sparse": [[1923, "torch-sparse"]], "Why and when to use sparsity": [[1923, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1923, "functionality-overview"]], "Operator overview": [[1923, "operator-overview"]], "Sparse COO tensors": [[1923, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1923, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1923, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1923, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1923, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1923, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1923, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1923, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1923, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1923, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1923, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1923, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1923, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1923, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1923, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1923, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1923, "linear-algebra-operations"]], "Tensor methods and sparse": [[1923, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1923, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1923, "other-functions"]], "Unary functions": [[1923, "unary-functions"]], "torch": [[1931, "module-torch"]], "Tensors": [[1931, "tensors"]], "Creation Ops": [[1931, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1931, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1931, "generators"]], "Random sampling": [[1931, "random-sampling"]], "In-place random sampling": [[1931, "in-place-random-sampling"]], "Quasi-random sampling": [[1931, "quasi-random-sampling"]], "Parallelism": [[1931, "parallelism"]], "Math operations": [[1931, "math-operations"]], "Pointwise Ops": [[1931, "pointwise-ops"]], "Reduction Ops": [[1931, "reduction-ops"]], "Comparison Ops": [[1931, "comparison-ops"]], "Spectral Ops": [[1931, "spectral-ops"]], "Other Operations": [[1931, "other-operations"]], "BLAS and LAPACK Operations": [[1931, "blas-and-lapack-operations"]], "Foreach Operations": [[1931, "foreach-operations"]], "Symbolic Numbers": [[1931, "symbolic-numbers"]], "Operator Tags": [[1931, "operator-tags"]], "Engine Configuration": [[1931, "engine-configuration"]], "torch.Tensor": [[1929, "torch-tensor"]], "Data types": [[1929, "data-types"]], "Initializing and basic operations": [[1929, "initializing-and-basic-operations"]], "Tensor class reference": [[1929, "tensor-class-reference"]], "torch.signal": [[1922, "module-torch.signal"]], "torch.signal.windows": [[1922, "module-torch.signal.windows"]], "Quantization Backend Configuration": [[1916, "quantization-backend-configuration"], [1914, "quantization-backend-configuration"]], "Default values for native configurations": [[1916, "default-values-for-native-configurations"]], "Tensor Views": [[1927, "tensor-views"]], "Quantization": [[1914, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1914, "introduction-to-quantization"]], "Quantization API Summary": [[1914, "quantization-api-summary"]], "Eager Mode Quantization": [[1914, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1914, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1914, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1914, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1914, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1914, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1914, "quantization-stack"]], "Quantized Model": [[1914, "quantized-model"]], "Quantized Tensor": [[1914, "quantized-tensor"]], "Quantize and Dequantize": [[1914, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1914, "quantized-operators-modules"]], "Quantized Engine": [[1914, "quantized-engine"]], "Quantization Flow": [[1914, "quantization-flow"]], "Observer and FakeQuantize": [[1914, "observer-and-fakequantize"]], "QConfig": [[1914, "qconfig"], [838, "qconfig"]], "General Quantization Flow": [[1914, "general-quantization-flow"]], "Quantization Support Matrix": [[1914, "quantization-support-matrix"]], "Quantization Mode Support": [[1914, "quantization-mode-support"]], "Quantization Flow Support": [[1914, "quantization-flow-support"]], "Backend/Hardware Support": [[1914, "backend-hardware-support"]], "Note for native CPU backends": [[1914, "note-for-native-cpu-backends"]], "Operator Support": [[1914, "operator-support"]], "Quantization Accuracy Debugging": [[1914, "quantization-accuracy-debugging"], [1915, "quantization-accuracy-debugging"]], "Quantization Customizations": [[1914, "quantization-customizations"]], "Quantization Custom Module API": [[1914, "quantization-custom-module-api"]], "Best Practices": [[1914, "best-practices"]], "Common Errors": [[1914, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1914, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1914, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1914, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1914, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "torch.profiler": [[1913, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1913, "intel-instrumentation-and-tracing-technology-apis"]], "Remote Reference Protocol": [[1921, "remote-reference-protocol"]], "Background": [[1921, "background"], [1920, "background"]], "Assumptions": [[1921, "assumptions"]], "RRef Lifetime": [[1921, "rref-lifetime"]], "Design Reasoning": [[1921, "design-reasoning"]], "Protocol Scenarios": [[1921, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1921, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1921, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1921, "owner-share-rref-with-user"]], "User Share RRef with User": [[1921, "user-share-rref-with-user"]], "torch.special": [[1924, "torch-special"]], "Type Info": [[1935, "type-info"]], "torch.finfo": [[1935, "torch-finfo"]], "torch.iinfo": [[1935, "torch-iinfo"]], "torch.ao.ns._numeric_suite": [[1932, "torch-ao-ns-numeric-suite"]], "Distributed RPC Framework": [[1919, "distributed-rpc-framework"]], "RPC": [[1919, "rpc"]], "TensorPipe Backend": [[1919, "tensorpipe-backend"]], "RRef": [[1919, "rref"]], "More Information about RRef": [[1919, null]], "RemoteModule": [[1919, "remotemodule"]], "Distributed Autograd Framework": [[1919, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1919, null]], "Distributed Optimizer": [[1919, "distributed-optimizer"], [1920, "distributed-optimizer"]], "Distributed Autograd Design": [[1920, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1920, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1920, "distributed-autograd-context"]], "Distributed Backward Pass": [[1920, "distributed-backward-pass"]], "Computing dependencies": [[1920, "computing-dependencies"]], "FAST mode algorithm": [[1920, "fast-mode-algorithm"]], "SMART mode algorithm": [[1920, "smart-mode-algorithm"]], "Simple end to end example": [[1920, "simple-end-to-end-example"]], "torch.testing": [[1930, "module-torch.testing"]], "torch.random": [[1918, "module-torch.random"]], "torch.utils.tensorboard": [[1928, "module-torch.utils.tensorboard"]], "torch.Storage": [[1925, "torch-storage"]], "torch.package": [[1911, "torch-package"]], "Packaging your first model": [[1911, "packaging-your-first-model"]], "How do I\u2026": [[1911, "how-do-i"]], "See what is inside a package?": [[1911, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1911, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1911, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1911, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1911, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1911, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1911, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1911, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1911, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1911, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1911, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1911, "package-a-torchscript-module"]], "Explanation": [[1911, "explanation"]], "torch.package Format Overview": [[1911, "torch-package-format-overview"]], "Framework files": [[1911, "framework-files"]], "User files": [[1911, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1911, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1911, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1911, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1911, "dependency-management"]], "intern": [[1911, "intern"]], "extern": [[1911, "extern"]], "mock": [[1911, "mock"]], "Refactoring": [[1911, "refactoring"]], "Patterns": [[1911, "patterns"]], "torch.package sharp edges": [[1911, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1911, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1911, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1911, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1911, "mangling"]], "Data insensitive error": [[1915, "data-insensitive-error"]], "General tips": [[1915, "general-tips"]], "Int8 quantization tips": [[1915, "int8-quantization-tips"]], "Data sensitive error": [[1915, "data-sensitive-error"]], "Implementation error": [[1915, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1915, "numerical-debugging-tooling-prototype"]], "Tensor Attributes": [[1926, "tensor-attributes"]], "torch.dtype": [[1926, "torch-dtype"]], "torch.device": [[1926, "torch-device"]], "torch.layout": [[1926, "torch-layout"]], "torch.memory_format": [[1926, "torch-memory-format"]], "torch.argmin": [[872, "torch-argmin"]], "torch.arccosh": [[864, "torch-arccosh"]], "load_observer_state_dict": [[834, "load-observer-state-dict"]], "torch.asarray": [[877, "torch-asarray"]], "torch.as_tensor": [[876, "torch-as-tensor"]], "quantize_dynamic": [[855, "quantize-dynamic"]], "default_dynamic_qconfig": [[841, "default-dynamic-qconfig"]], "torch.as_strided": [[875, "torch-as-strided"]], "float_qparams_weight_only_qconfig": [[849, "float-qparams-weight-only-qconfig"]], "torch.asinh": [[879, "torch-asinh"]], "torch.atan2": [[881, "torch-atan2"]], "default_qat_qconfig_v2": [[844, "default-qat-qconfig-v2"]], "torch.arcsin": [[865, "torch-arcsin"]], "torch.argwhere": [[874, "torch-argwhere"]], "swap_module": [[861, "swap-module"]], "float16_static_qconfig": [[848, "float16-static-qconfig"]], "default_qat_qconfig": [[843, "default-qat-qconfig"]], "default_debug_qconfig": [[840, "default-debug-qconfig"]], "get_default_qat_qconfig_mapping": [[852, "get-default-qat-qconfig-mapping"]], "per_channel_dynamic_qconfig": [[850, "per-channel-dynamic-qconfig"]], "convert_fx": [[856, "convert-fx"]], "prepare_fx": [[858, "prepare-fx"]], "torch.argsort": [[873, "torch-argsort"]], "prepare_qat_fx": [[859, "prepare-qat-fx"]], "propagate_qconfig": [[837, "propagate-qconfig"]], "default_activation_only_qconfig": [[839, "default-activation-only-qconfig"]], "prepare_qat": [[836, "prepare-qat"]], "default_weight_only_qconfig": [[846, "default-weight-only-qconfig"]], "fuse_fx": [[857, "fuse-fx"]], "float16_dynamic_qconfig": [[847, "float16-dynamic-qconfig"]], "torch.arctan": [[867, "torch-arctan"]], "QConfigMapping": [[851, "qconfigmapping"]], "default_per_channel_qconfig": [[842, "default-per-channel-qconfig"]], "torch.arctan2": [[868, "torch-arctan2"]], "prepare": [[835, "prepare"]], "get_default_qconfig_mapping": [[853, "get-default-qconfig-mapping"]], "torch.atan": [[880, "torch-atan"]], "torch.are_deterministic_algorithms_enabled": [[870, "torch-are-deterministic-algorithms-enabled"]], "torch.arctanh": [[869, "torch-arctanh"]], "torch.argmax": [[871, "torch-argmax"]], "quantize": [[854, "quantize"]], "torch.arange": [[862, "torch-arange"]], "torch.arccos": [[863, "torch-arccos"]], "torch.asin": [[878, "torch-asin"]], "default_qconfig": [[845, "default-qconfig"]], "get_observer_state_dict": [[833, "get-observer-state-dict"]], "quantize_qat": [[860, "quantize-qat"]], "torch.arcsinh": [[866, "torch-arcsinh"]], "PlaceholderObserver": [[823, "placeholderobserver"]], "default_fused_wt_fake_quant": [[803, "default-fused-wt-fake-quant"]], "FuseCustomConfig": [[813, "fusecustomconfig"]], "ObserverBase": [[821, "observerbase"]], "default_histogram_fake_quant": [[804, "default-histogram-fake-quant"]], "enable_observer": [[810, "enable-observer"]], "ObservationType": [[793, "observationtype"]], "FakeQuantize": [[796, "fakequantize"]], "NoopObserver": [[820, "noopobserver"]], "add_quant_dequant": [[788, "add-quant-dequant"]], "default_debug_observer": [[825, "default-debug-observer"]], "default_eval_fn": [[795, "default-eval-fn"]], "default_fake_quant": [[800, "default-fake-quant"]], "PrepareCustomConfig": [[814, "preparecustomconfig"]], "PerChannelMinMaxObserver": [[822, "perchannelminmaxobserver"]], "StandaloneModuleConfigEntry": [[815, "standalonemoduleconfigentry"]], "DeQuantStub": [[785, "dequantstub"]], "disable_observer": [[808, "disable-observer"]], "default_observer": [[829, "default-observer"]], "default_dynamic_quant_observer": [[826, "default-dynamic-quant-observer"]], "ConvertCustomConfig": [[812, "convertcustomconfig"]], "HistogramObserver": [[816, "histogramobserver"]], "default_histogram_observer": [[828, "default-histogram-observer"]], "RecordingObserver": [[824, "recordingobserver"]], "enable_fake_quant": [[809, "enable-fake-quant"]], "default_weight_observer": [[832, "default-weight-observer"]], "FakeQuantizeBase": [[797, "fakequantizebase"]], "disable_fake_quant": [[807, "disable-fake-quant"]], "default_fused_act_fake_quant": [[801, "default-fused-act-fake-quant"]], "BackendPatternConfig": [[790, "backendpatternconfig"]], "QuantWrapper": [[787, "quantwrapper"]], "BackendConfig": [[789, "backendconfig"]], "default_weight_fake_quant": [[806, "default-weight-fake-quant"]], "convert": [[794, "convert"]], "default_per_channel_weight_observer": [[830, "default-per-channel-weight-observer"]], "FixedQParamsFakeQuantize": [[798, "fixedqparamsfakequantize"]], "QuantStub": [[786, "quantstub"]], "MovingAveragePerChannelMinMaxObserver": [[819, "movingaverageperchannelminmaxobserver"]], "MinMaxObserver": [[817, "minmaxobserver"]], "DTypeConfig": [[791, "dtypeconfig"]], "default_placeholder_observer": [[831, "default-placeholder-observer"]], "fuse_modules": [[811, "fuse-modules"]], "FusedMovingAvgObsFakeQuantize": [[799, "fusedmovingavgobsfakequantize"]], "default_per_channel_weight_fake_quant": [[805, "default-per-channel-weight-fake-quant"]], "MovingAverageMinMaxObserver": [[818, "movingaverageminmaxobserver"]], "default_fused_per_channel_wt_fake_quant": [[802, "default-fused-per-channel-wt-fake-quant"]], "default_float_qparams_observer": [[827, "default-float-qparams-observer"]], "upsample_nearest": [[784, "upsample-nearest"]], "DTypeWithConstraints": [[792, "dtypewithconstraints"]], "FXFloatFunctional": [[744, "fxfloatfunctional"]], "avg_pool3d": [[766, "avg-pool3d"]], "interpolate": [[776, "interpolate"]], "conv2d": [[770, "conv2d"]], "conv1d": [[769, "conv1d"]], "adaptive_avg_pool2d": [[763, "adaptive-avg-pool2d"]], "QFunctional": [[754, "qfunctional"]], "adaptive_avg_pool3d": [[764, "adaptive-avg-pool3d"]], "elu": [[772, "elu"]], "hardtanh": [[775, "hardtanh"]], "leaky_relu": [[777, "leaky-relu"]], "clamp": [[768, "clamp"]], "linear": [[778, "linear"]], "FloatFunctional": [[745, "floatfunctional"]], "upsample_bilinear": [[783, "upsample-bilinear"]], "upsample": [[782, "upsample"]], "hardsigmoid": [[773, "hardsigmoid"]], "max_pool1d": [[779, "max-pool1d"]], "conv3d": [[771, "conv3d"]], "max_pool2d": [[780, "max-pool2d"]], "hardswish": [[774, "hardswish"]], "threshold": [[781, "threshold"]], "celu": [[767, "celu"]], "avg_pool2d": [[765, "avg-pool2d"]], "ConvReLU2d": [[723, "convrelu2d"], [706, "convrelu2d"], [715, "convrelu2d"]], "ConvBn2d": [[710, "convbn2d"], [700, "convbn2d"]], "torch.aminmax": [[694, "torch-aminmax"]], "torch.allclose": [[691, "torch-allclose"]], "BNReLU3d": [[698, "bnrelu3d"], [721, "bnrelu3d"]], "ConvBnReLU2d": [[713, "convbnrelu2d"], [703, "convbnrelu2d"]], "ConvBn3d": [[701, "convbn3d"], [711, "convbn3d"]], "update_bn_stats": [[719, "update-bn-stats"]], "ConvBnReLU1d": [[712, "convbnrelu1d"], [702, "convbnrelu1d"]], "torch.all": [[690, "torch-all"]], "torch.any": [[696, "torch-any"]], "torch.angle": [[695, "torch-angle"]], "LinearReLU": [[726, "linearrelu"], [708, "linearrelu"], [717, "linearrelu"], [725, "linearrelu"]], "BNReLU2d": [[697, "bnrelu2d"], [720, "bnrelu2d"]], "ConvBn1d": [[699, "convbn1d"], [709, "convbn1d"]], "torch.amax": [[692, "torch-amax"]], "torch.addmm": [[686, "torch-addmm"]], "ConvReLU1d": [[705, "convrelu1d"], [722, "convrelu1d"]], "ConvBnReLU3d": [[704, "convbnrelu3d"], [714, "convbnrelu3d"]], "ConvReLU3d": [[716, "convrelu3d"], [707, "convrelu3d"], [724, "convrelu3d"]], "torch.adjoint": [[689, "torch-adjoint"]], "torch.amin": [[693, "torch-amin"]], "torch.addr": [[688, "torch-addr"]], "freeze_bn_stats": [[718, "freeze-bn-stats"]], "torch.addmv": [[687, "torch-addmv"]], "torch.acos": [[680, "torch-acos"]], "torch._foreach_trunc_": [[675, "torch-foreach-trunc"]], "torch._foreach_round_": [[663, "torch-foreach-round"]], "torch._foreach_lgamma_": [[649, "torch-foreach-lgamma"]], "torch._foreach_sqrt": [[670, "torch-foreach-sqrt"]], "torch._foreach_expm1_": [[643, "torch-foreach-expm1"]], "torch._foreach_zero_": [[676, "torch-foreach-zero"]], "torch._foreach_log": [[650, "torch-foreach-log"]], "torch._foreach_floor_": [[645, "torch-foreach-floor"]], "torch._foreach_floor": [[644, "torch-foreach-floor"]], "torch._foreach_round": [[662, "torch-foreach-round"]], "torch._foreach_sigmoid": [[664, "torch-foreach-sigmoid"]], "torch._foreach_erf_": [[637, "torch-foreach-erf"]], "torch._foreach_log10": [[651, "torch-foreach-log10"]], "torch._foreach_sin": [[666, "torch-foreach-sin"]], "torch._foreach_tan_": [[673, "torch-foreach-tan"]], "torch._foreach_erfc_": [[639, "torch-foreach-erfc"]], "torch._logging.set_logs": [[677, "torch-logging-set-logs"]], "torch.addbmm": [[683, "torch-addbmm"]], "torch._foreach_log2": [[655, "torch-foreach-log2"]], "torch._foreach_erfc": [[638, "torch-foreach-erfc"]], "torch._foreach_neg_": [[659, "torch-foreach-neg"]], "torch._foreach_exp": [[640, "torch-foreach-exp"]], "torch._foreach_tan": [[672, "torch-foreach-tan"]], "torch._foreach_log_": [[657, "torch-foreach-log"]], "torch._foreach_exp_": [[641, "torch-foreach-exp"]], "torch._foreach_sinh": [[668, "torch-foreach-sinh"]], "torch._foreach_sqrt_": [[671, "torch-foreach-sqrt"]], "torch._foreach_log10_": [[652, "torch-foreach-log10"]], "torch._foreach_log1p_": [[654, "torch-foreach-log1p"]], "torch.add": [[682, "torch-add"]], "torch._foreach_trunc": [[674, "torch-foreach-trunc"]], "torch.acosh": [[681, "torch-acosh"]], "torch.addcdiv": [[684, "torch-addcdiv"]], "torch._foreach_log1p": [[653, "torch-foreach-log1p"]], "torch._foreach_reciprocal_": [[661, "torch-foreach-reciprocal"]], "torch._foreach_sinh_": [[669, "torch-foreach-sinh"]], "torch._foreach_frac": [[646, "torch-foreach-frac"]], "torch._foreach_expm1": [[642, "torch-foreach-expm1"]], "torch._foreach_frac_": [[647, "torch-foreach-frac"]], "torch.abs": [[678, "torch-abs"]], "torch.absolute": [[679, "torch-absolute"]], "torch._foreach_neg": [[658, "torch-foreach-neg"]], "torch.addcmul": [[685, "torch-addcmul"]], "torch._foreach_lgamma": [[648, "torch-foreach-lgamma"]], "torch._foreach_log2_": [[656, "torch-foreach-log2"]], "torch._foreach_reciprocal": [[660, "torch-foreach-reciprocal"]], "torch._foreach_sin_": [[667, "torch-foreach-sin"]], "torch._foreach_sigmoid_": [[665, "torch-foreach-sigmoid"]], "torch.Tensor.vdot": [[613, "torch-tensor-vdot"]], "torch._foreach_atan_": [[629, "torch-foreach-atan"]], "torch._foreach_cos": [[632, "torch-foreach-cos"]], "torch._foreach_acos": [[624, "torch-foreach-acos"]], "torch.Tensor.triangular_solve": [[591, "torch-tensor-triangular-solve"]], "torch.Tensor.transpose_": [[590, "torch-tensor-transpose"]], "torch.Tensor.tril": [[592, "torch-tensor-tril"]], "torch._foreach_ceil": [[630, "torch-foreach-ceil"]], "torch.Tensor.unbind": [[602, "torch-tensor-unbind"]], "torch.Tensor.view_as": [[615, "torch-tensor-view-as"]], "torch.Tensor.triu": [[594, "torch-tensor-triu"]], "torch._foreach_acos_": [[625, "torch-foreach-acos"]], "torch.Tensor.transpose": [[589, "torch-tensor-transpose"]], "torch.Tensor.unique": [[606, "torch-tensor-unique"]], "torch.Tensor.triu_": [[595, "torch-tensor-triu"]], "torch.Tensor.tril_": [[593, "torch-tensor-tril"]], "torch.Tensor.type": [[600, "torch-tensor-type"]], "torch.Tensor.xlogy_": [[619, "torch-tensor-xlogy"]], "torch._foreach_ceil_": [[631, "torch-foreach-ceil"]], "torch._foreach_asin_": [[627, "torch-foreach-asin"]], "torch.Tensor.trunc_": [[599, "torch-tensor-trunc"]], "torch.Tensor.where": [[617, "torch-tensor-where"]], "torch._assert": [[621, "torch-assert"]], "torch._foreach_atan": [[628, "torch-foreach-atan"]], "torch._foreach_cos_": [[633, "torch-foreach-cos"]], "torch.Tensor.unsqueeze_": [[609, "torch-tensor-unsqueeze"]], "torch.Tensor.unsqueeze": [[608, "torch-tensor-unsqueeze"]], "torch.Tensor.trace": [[588, "torch-tensor-trace"]], "torch.Tensor.unfold": [[604, "torch-tensor-unfold"]], "torch.Tensor.trunc": [[598, "torch-tensor-trunc"]], "torch.Tensor.vsplit": [[616, "torch-tensor-vsplit"]], "torch.Tensor.zero_": [[620, "torch-tensor-zero"]], "torch.Tensor.unique_consecutive": [[607, "torch-tensor-unique-consecutive"]], "torch.Tensor.type_as": [[601, "torch-tensor-type-as"]], "torch.Tensor.true_divide": [[596, "torch-tensor-true-divide"]], "torch.Tensor.untyped_storage": [[610, "torch-tensor-untyped-storage"]], "torch._foreach_cosh": [[634, "torch-foreach-cosh"]], "torch.Tensor.xlogy": [[618, "torch-tensor-xlogy"]], "torch.Tensor.var": [[612, "torch-tensor-var"]], "torch._foreach_cosh_": [[635, "torch-foreach-cosh"]], "torch._foreach_asin": [[626, "torch-foreach-asin"]], "torch.Tensor.values": [[611, "torch-tensor-values"]], "torch.Tensor.uniform_": [[605, "torch-tensor-uniform"]], "torch._foreach_abs_": [[623, "torch-foreach-abs"]], "torch.Tensor.true_divide_": [[597, "torch-tensor-true-divide"]], "torch.Tensor.view": [[614, "torch-tensor-view"]], "torch._foreach_abs": [[622, "torch-foreach-abs"]], "torch._foreach_erf": [[636, "torch-foreach-erf"]], "torch.Tensor.unflatten": [[603, "torch-tensor-unflatten"]], "torch.Tensor.storage_type": [[556, "torch-tensor-storage-type"]], "torch.Tensor.to_dense": [[578, "torch-tensor-to-dense"]], "torch.Tensor.swapaxes": [[565, "torch-tensor-swapaxes"]], "torch.Tensor.tan_": [[572, "torch-tensor-tan"]], "torch.Tensor.tanh_": [[574, "torch-tensor-tanh"]], "torch.Tensor.std": [[552, "torch-tensor-std"]], "torch.Tensor.sspaddmm": [[551, "torch-tensor-sspaddmm"]], "torch.Tensor.tanh": [[573, "torch-tensor-tanh"]], "torch.Tensor.to_sparse_bsr": [[582, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.square": [[547, "torch-tensor-square"]], "torch.Tensor.subtract_": [[561, "torch-tensor-subtract"]], "torch.Tensor.to": [[577, "torch-tensor-to"]], "torch.Tensor.storage_offset": [[555, "torch-tensor-storage-offset"]], "torch.Tensor.square_": [[548, "torch-tensor-square"]], "torch.Tensor.subtract": [[560, "torch-tensor-subtract"]], "torch.Tensor.take": [[569, "torch-tensor-take"]], "torch.Tensor.to_sparse": [[580, "torch-tensor-to-sparse"]], "torch.Tensor.topk": [[587, "torch-tensor-topk"]], "torch.Tensor.tan": [[571, "torch-tensor-tan"]], "torch.Tensor.to_sparse_coo": [[583, "torch-tensor-to-sparse-coo"]], "torch.Tensor.swapdims": [[566, "torch-tensor-swapdims"]], "torch.Tensor.t_": [[568, "torch-tensor-t"]], "torch.Tensor.to_sparse_bsc": [[581, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.stride": [[557, "torch-tensor-stride"]], "torch.Tensor.tile": [[576, "torch-tensor-tile"]], "torch.Tensor.split": [[544, "torch-tensor-split"]], "torch.Tensor.sqrt": [[545, "torch-tensor-sqrt"]], "torch.Tensor.to_sparse_csr": [[585, "torch-tensor-to-sparse-csr"]], "torch.Tensor.sparse_resize_": [[542, "torch-tensor-sparse-resize"]], "torch.Tensor.tensor_split": [[575, "torch-tensor-tensor-split"]], "torch.Tensor.storage": [[554, "torch-tensor-storage"]], "torch.Tensor.sub_": [[559, "torch-tensor-sub"]], "torch.Tensor.sum": [[562, "torch-tensor-sum"]], "torch.Tensor.sqrt_": [[546, "torch-tensor-sqrt"]], "torch.Tensor.to_sparse_csc": [[584, "torch-tensor-to-sparse-csc"]], "torch.Tensor.sort": [[539, "torch-tensor-sort"]], "torch.Tensor.sum_to_size": [[563, "torch-tensor-sum-to-size"]], "torch.Tensor.sparse_dim": [[540, "torch-tensor-sparse-dim"]], "torch.Tensor.stft": [[553, "torch-tensor-stft"]], "torch.Tensor.svd": [[564, "torch-tensor-svd"]], "torch.Tensor.sparse_resize_and_clear_": [[543, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.squeeze": [[549, "torch-tensor-squeeze"]], "torch.Tensor.tolist": [[586, "torch-tensor-tolist"]], "torch.Tensor.squeeze_": [[550, "torch-tensor-squeeze"]], "torch.Tensor.sparse_mask": [[541, "torch-tensor-sparse-mask"]], "torch.Tensor.sub": [[558, "torch-tensor-sub"]], "torch.Tensor.take_along_dim": [[570, "torch-tensor-take-along-dim"]], "torch.Tensor.to_mkldnn": [[579, "torch-tensor-to-mkldnn"]], "torch.Tensor.t": [[567, "torch-tensor-t"]], "torch.Tensor.requires_grad": [[493, "torch-tensor-requires-grad"]], "torch.Tensor.slogdet": [[536, "torch-tensor-slogdet"]], "torch.Tensor.retain_grad": [[501, "torch-tensor-retain-grad"]], "torch.Tensor.set_": [[518, "torch-tensor-set"]], "torch.Tensor.scatter_reduce": [[514, "torch-tensor-scatter-reduce"]], "torch.Tensor.scatter_add": [[512, "torch-tensor-scatter-add"]], "torch.Tensor.scatter_reduce_": [[515, "torch-tensor-scatter-reduce"]], "torch.Tensor.sinc_": [[531, "torch-tensor-sinc"]], "torch.Tensor.round": [[505, "torch-tensor-round"]], "torch.Tensor.retains_grad": [[502, "torch-tensor-retains-grad"]], "torch.Tensor.rsqrt": [[508, "torch-tensor-rsqrt"]], "torch.Tensor.short": [[522, "torch-tensor-short"]], "torch.Tensor.reshape_as": [[496, "torch-tensor-reshape-as"]], "torch.Tensor.resolve_neg": [[500, "torch-tensor-resolve-neg"]], "torch.Tensor.repeat_interleave": [[492, "torch-tensor-repeat-interleave"]], "torch.Tensor.sigmoid": [[523, "torch-tensor-sigmoid"]], "torch.Tensor.sinh_": [[533, "torch-tensor-sinh"]], "torch.Tensor.signbit": [[527, "torch-tensor-signbit"]], "torch.Tensor.sign": [[525, "torch-tensor-sign"]], "torch.Tensor.sign_": [[526, "torch-tensor-sign"]], "torch.Tensor.sigmoid_": [[524, "torch-tensor-sigmoid"]], "torch.Tensor.select": [[516, "torch-tensor-select"]], "torch.Tensor.sinc": [[530, "torch-tensor-sinc"]], "torch.Tensor.rot90": [[504, "torch-tensor-rot90"]], "torch.Tensor.resolve_conj": [[499, "torch-tensor-resolve-conj"]], "torch.Tensor.size": [[534, "torch-tensor-size"]], "torch.Tensor.repeat": [[491, "torch-tensor-repeat"]], "torch.Tensor.resize_as_": [[498, "torch-tensor-resize-as"]], "torch.Tensor.resize_": [[497, "torch-tensor-resize"]], "torch.Tensor.reshape": [[495, "torch-tensor-reshape"]], "torch.Tensor.scatter_add_": [[513, "torch-tensor-scatter-add"]], "torch.Tensor.sgn_": [[520, "torch-tensor-sgn"]], "torch.Tensor.softmax": [[538, "torch-tensor-softmax"]], "torch.Tensor.round_": [[506, "torch-tensor-round"]], "torch.Tensor.sin_": [[529, "torch-tensor-sin"]], "torch.Tensor.smm": [[537, "torch-tensor-smm"]], "torch.Tensor.roll": [[503, "torch-tensor-roll"]], "torch.Tensor.select_scatter": [[517, "torch-tensor-select-scatter"]], "torch.Tensor.share_memory_": [[521, "torch-tensor-share-memory"]], "torch.Tensor.rsqrt_": [[509, "torch-tensor-rsqrt"]], "torch.Tensor.sinh": [[532, "torch-tensor-sinh"]], "torch.Tensor.renorm_": [[490, "torch-tensor-renorm"]], "torch.Tensor.requires_grad_": [[494, "torch-tensor-requires-grad"]], "torch.Tensor.row_indices": [[507, "torch-tensor-row-indices"]], "torch.Tensor.scatter": [[510, "torch-tensor-scatter"]], "torch.Tensor.scatter_": [[511, "torch-tensor-scatter"]], "torch.Tensor.sgn": [[519, "torch-tensor-sgn"]], "torch.Tensor.sin": [[528, "torch-tensor-sin"]], "torch.Tensor.slice_scatter": [[535, "torch-tensor-slice-scatter"]], "torch.Tensor.q_per_channel_axis": [[471, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.renorm": [[489, "torch-tensor-renorm"]], "torch.Tensor.polygamma_": [[465, "torch-tensor-polygamma"]], "torch.Tensor.qscheme": [[477, "torch-tensor-qscheme"]], "torch.Tensor.orgqr": [[458, "torch-tensor-orgqr"]], "torch.Tensor.new_ones": [[446, "torch-tensor-new-ones"]], "torch.Tensor.permute": [[461, "torch-tensor-permute"]], "torch.Tensor.qr": [[476, "torch-tensor-qr"]], "torch.Tensor.remainder_": [[488, "torch-tensor-remainder"]], "torch.Tensor.q_per_channel_zero_points": [[473, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.pow_": [[468, "torch-tensor-pow"]], "torch.Tensor.q_scale": [[474, "torch-tensor-q-scale"]], "torch.Tensor.pow": [[467, "torch-tensor-pow"]], "torch.Tensor.nelement": [[443, "torch-tensor-nelement"]], "torch.Tensor.prod": [[469, "torch-tensor-prod"]], "torch.Tensor.rad2deg": [[479, "torch-tensor-rad2deg"]], "torch.Tensor.q_per_channel_scales": [[472, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.nextafter_": [[450, "torch-tensor-nextafter"]], "torch.Tensor.not_equal": [[454, "torch-tensor-not-equal"]], "torch.Tensor.negative_": [[442, "torch-tensor-negative"]], "torch.Tensor.quantile": [[478, "torch-tensor-quantile"]], "torch.Tensor.nonzero": [[451, "torch-tensor-nonzero"]], "torch.Tensor.ormqr": [[459, "torch-tensor-ormqr"]], "torch.Tensor.polygamma": [[464, "torch-tensor-polygamma"]], "torch.Tensor.reciprocal_": [[484, "torch-tensor-reciprocal"]], "torch.Tensor.normal_": [[453, "torch-tensor-normal"]], "torch.Tensor.pinverse": [[463, "torch-tensor-pinverse"]], "torch.Tensor.new_empty": [[444, "torch-tensor-new-empty"]], "torch.Tensor.new_tensor": [[447, "torch-tensor-new-tensor"]], "torch.Tensor.ravel": [[481, "torch-tensor-ravel"]], "torch.Tensor.new_zeros": [[448, "torch-tensor-new-zeros"]], "torch.Tensor.register_hook": [[486, "torch-tensor-register-hook"]], "torch.Tensor.nextafter": [[449, "torch-tensor-nextafter"]], "torch.Tensor.pin_memory": [[462, "torch-tensor-pin-memory"]], "torch.Tensor.new_full": [[445, "torch-tensor-new-full"]], "torch.Tensor.random_": [[480, "torch-tensor-random"]], "torch.Tensor.positive": [[466, "torch-tensor-positive"]], "torch.Tensor.not_equal_": [[455, "torch-tensor-not-equal"]], "torch.Tensor.remainder": [[487, "torch-tensor-remainder"]], "torch.Tensor.real": [[482, "torch-tensor-real"]], "torch.Tensor.negative": [[441, "torch-tensor-negative"]], "torch.Tensor.q_zero_point": [[475, "torch-tensor-q-zero-point"]], "torch.Tensor.norm": [[452, "torch-tensor-norm"]], "torch.Tensor.record_stream": [[485, "torch-tensor-record-stream"]], "torch.Tensor.put_": [[470, "torch-tensor-put"]], "torch.Tensor.outer": [[460, "torch-tensor-outer"]], "torch.Tensor.numpy": [[457, "torch-tensor-numpy"]], "torch.Tensor.reciprocal": [[483, "torch-tensor-reciprocal"]], "torch.Tensor.numel": [[456, "torch-tensor-numel"]], "torch.Tensor.ne": [[437, "torch-tensor-ne"]], "torch.Tensor.matmul": [[404, "torch-tensor-matmul"]], "torch.Tensor.max": [[407, "torch-tensor-max"]], "torch.Tensor.mv": [[423, "torch-tensor-mv"]], "torch.Tensor.msort": [[417, "torch-tensor-msort"]], "torch.Tensor.lt_": [[395, "torch-tensor-lt"]], "torch.Tensor.mul_": [[419, "torch-tensor-mul"]], "torch.Tensor.masked_select": [[403, "torch-tensor-masked-select"]], "torch.Tensor.lt": [[394, "torch-tensor-lt"]], "torch.Tensor.nanquantile": [[430, "torch-tensor-nanquantile"]], "torch.Tensor.multinomial": [[420, "torch-tensor-multinomial"]], "torch.Tensor.mm": [[413, "torch-tensor-mm"]], "torch.Tensor.mean": [[409, "torch-tensor-mean"]], "torch.Tensor.logsumexp": [[392, "torch-tensor-logsumexp"]], "torch.Tensor.masked_fill_": [[400, "torch-tensor-masked-fill"]], "torch.Tensor.median": [[410, "torch-tensor-median"]], "torch.Tensor.ndim": [[435, "torch-tensor-ndim"]], "torch.Tensor.matrix_exp": [[405, "torch-tensor-matrix-exp"]], "torch.Tensor.nan_to_num_": [[427, "torch-tensor-nan-to-num"]], "torch.Tensor.ndimension": [[436, "torch-tensor-ndimension"]], "torch.Tensor.moveaxis": [[415, "torch-tensor-moveaxis"]], "torch.Tensor.nanmedian": [[429, "torch-tensor-nanmedian"]], "torch.Tensor.movedim": [[416, "torch-tensor-movedim"]], "torch.Tensor.multiply": [[421, "torch-tensor-multiply"]], "torch.Tensor.nan_to_num": [[426, "torch-tensor-nan-to-num"]], "torch.Tensor.map_": [[398, "torch-tensor-map"]], "torch.Tensor.min": [[411, "torch-tensor-min"]], "torch.Tensor.mode": [[414, "torch-tensor-mode"]], "torch.Tensor.nbytes": [[434, "torch-tensor-nbytes"]], "torch.Tensor.masked_scatter": [[401, "torch-tensor-masked-scatter"]], "torch.Tensor.mvlgamma": [[424, "torch-tensor-mvlgamma"]], "torch.Tensor.nanmean": [[428, "torch-tensor-nanmean"]], "torch.Tensor.neg": [[439, "torch-tensor-neg"]], "torch.Tensor.mul": [[418, "torch-tensor-mul"]], "torch.Tensor.long": [[393, "torch-tensor-long"]], "torch.Tensor.mvlgamma_": [[425, "torch-tensor-mvlgamma"]], "torch.Tensor.lu_solve": [[397, "torch-tensor-lu-solve"]], "torch.Tensor.nansum": [[431, "torch-tensor-nansum"]], "torch.Tensor.neg_": [[440, "torch-tensor-neg"]], "torch.Tensor.narrow": [[432, "torch-tensor-narrow"]], "torch.Tensor.masked_fill": [[399, "torch-tensor-masked-fill"]], "torch.Tensor.maximum": [[408, "torch-tensor-maximum"]], "torch.Tensor.lu": [[396, "torch-tensor-lu"]], "torch.Tensor.ne_": [[438, "torch-tensor-ne"]], "torch.Tensor.masked_scatter_": [[402, "torch-tensor-masked-scatter"]], "torch.Tensor.matrix_power": [[406, "torch-tensor-matrix-power"]], "torch.Tensor.narrow_copy": [[433, "torch-tensor-narrow-copy"]], "torch.Tensor.multiply_": [[422, "torch-tensor-multiply"]], "torch.Tensor.minimum": [[412, "torch-tensor-minimum"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [29, "module-torch.compiler"], [31, "module-torch.__config__"], [34, "module-torch.cuda"], [35, "module-torch.cuda._sanitizer"], [38, "module-torch.utils.data"], [38, "module-torch.utils.data.datapipes"], [38, "module-torch.utils.data.datapipes.dataframe"], [38, "module-torch.utils.data.datapipes.iter"], [38, "module-torch.utils.data.datapipes.map"], [38, "module-torch.utils.data.datapipes.utils"], [41, "module-torch.distributed"], [41, "module-torch.distributed.algorithms"], [41, "module-torch.distributed.algorithms.ddp_comm_hooks"], [41, "module-torch.distributed.algorithms.model_averaging"], [41, "module-torch.distributed.elastic"], [41, "module-torch.distributed.elastic.utils"], [41, "module-torch.distributed.elastic.utils.data"], [41, "module-torch.distributed.launch"], [41, "module-torch.distributed.launcher"], [41, "module-torch.distributed.nn"], [41, "module-torch.distributed.nn.api"], [41, "module-torch.distributed.nn.jit"], [41, "module-torch.distributed.nn.jit.templates"], [41, "module-torch.distributed.pipeline"], [41, "module-torch.distributed.pipeline.sync"], [41, "module-torch.distributed.pipeline.sync.skip"], [41, "module-torch.distributed.tensor"], [43, "module-torch.distributed.checkpoint"], [45, "module-torch.distributed.optim"], [46, "module-torch.distributed.tensor.parallel"], [47, "module-torch.distributions"], [47, "module-torch.distributions.constraint_registry"], [47, "module-torch.distributions.constraints"], [47, "module-torch.distributions.kl"], [47, "module-torch.distributions.transforms"], [49, "module-torch.distributed.elastic.agent"], [49, "module-torch.distributed.elastic.agent.server"], [51, "module-torch.distributed.elastic.multiprocessing.errors"], [52, "module-torch.distributed.elastic.events"], [55, "module-torch.distributed.elastic.metrics"], [56, "module-torch.distributed.elastic.multiprocessing"], [58, "module-torch.distributed.elastic.rendezvous"], [58, "module-torch.distributed.elastic.rendezvous.registry"], [59, "module-torch.distributed.run"], [60, "module-torch.distributed.elastic.timer"], [62, "module-torch.fft"], [63, "module-torch.distributed.fsdp"], [65, "module-torch.func"], [70, "module-torch.futures"], [71, "module-torch.fx"], [71, "module-torch.fx.experimental"], [71, "module-torch.fx.experimental.migrate_gradual_types"], [71, "module-torch.fx.experimental.unification"], [71, "module-torch.fx.experimental.unification.multipledispatch"], [71, "module-torch.fx.passes"], [71, "module-torch.fx.passes.backends"], [71, "module-torch.fx.passes.dialect"], [71, "module-torch.fx.passes.dialect.common"], [71, "module-torch.fx.passes.infra"], [71, "module-torch.fx.passes.tests"], [71, "module-torch.fx.passes.utils"], [1863, "module-torch.hub"], [1866, "module-torch.jit"], [1866, "module-torch.jit.mobile"], [1867, "module-torch.jit.supported_ops"], [1871, "module-torch.jit.unsupported_tensor_ops"], [1872, "module-torch.utils.jit"], [1874, "module-torch.linalg"], [1875, "module-torch._logging"], [1876, "module-torch.masked"], [1876, "module-torch.masked.maskedtensor"], [1878, "module-torch.utils.model_zoo"], [1879, "module-torch.monitor"], [1880, "module-torch.mps"], [1881, "module-torch.multiprocessing"], [1884, "module-torch.nested"], [1885, "module-torch.nn"], [1885, "module-torch.nn.backends"], [1885, "module-torch.nn.modules"], [1885, "module-torch.nn.parallel"], [1885, "module-torch.nn.utils"], [1885, "module-torch.nn.utils.stateless"], [1907, "module-torch.onnx"], [1908, "module-torch.onnx._internal.diagnostics"], [1910, "module-torch.optim"], [1911, "module-torch.package"], [1911, "module-torch.package.analyze"], [1913, "module-torch.profiler"], [1914, "module-torch.ao"], [1914, "module-torch.ao.nn"], [1914, "module-torch.ao.nn.quantizable"], [1914, "module-torch.ao.nn.quantizable.modules"], [1914, "module-torch.ao.nn.quantized"], [1914, "module-torch.ao.nn.quantized.reference"], [1914, "module-torch.ao.nn.quantized.reference.modules"], [1914, "module-torch.ao.nn.sparse"], [1914, "module-torch.ao.nn.sparse.quantized"], [1914, "module-torch.ao.nn.sparse.quantized.dynamic"], [1914, "module-torch.ao.ns"], [1914, "module-torch.ao.ns.fx"], [1914, "module-torch.ao.pruning"], [1914, "module-torch.ao.pruning.scheduler"], [1914, "module-torch.ao.pruning.sparsifier"], [1914, "module-torch.ao.quantization"], [1914, "module-torch.ao.quantization.backend_config"], [1914, "module-torch.ao.quantization.fx"], [1917, "module-torch.ao.nn.intrinsic"], [1917, "module-torch.ao.nn.intrinsic.modules"], [1917, "module-torch.ao.nn.intrinsic.qat"], [1917, "module-torch.ao.nn.intrinsic.qat.modules"], [1917, "module-torch.ao.nn.intrinsic.quantized"], [1917, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1917, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1917, "module-torch.ao.nn.intrinsic.quantized.modules"], [1917, "module-torch.ao.nn.qat"], [1917, "module-torch.ao.nn.qat.dynamic"], [1917, "module-torch.ao.nn.qat.dynamic.modules"], [1917, "module-torch.ao.nn.qat.modules"], [1917, "module-torch.ao.nn.quantized.dynamic"], [1917, "module-torch.ao.nn.quantized.dynamic.modules"], [1917, "module-torch.ao.nn.quantized.functional"], [1917, "module-torch.ao.nn.quantized.modules"], [1917, "module-torch.nn.intrinsic"], [1917, "module-torch.nn.intrinsic.modules"], [1917, "module-torch.nn.intrinsic.qat"], [1917, "module-torch.nn.intrinsic.qat.modules"], [1917, "module-torch.nn.intrinsic.quantized"], [1917, "module-torch.nn.intrinsic.quantized.dynamic"], [1917, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1917, "module-torch.nn.intrinsic.quantized.modules"], [1917, "module-torch.nn.qat"], [1917, "module-torch.nn.qat.dynamic"], [1917, "module-torch.nn.qat.dynamic.modules"], [1917, "module-torch.nn.qat.modules"], [1917, "module-torch.nn.quantizable"], [1917, "module-torch.nn.quantizable.modules"], [1917, "module-torch.nn.quantized"], [1917, "module-torch.nn.quantized.dynamic"], [1917, "module-torch.nn.quantized.dynamic.modules"], [1917, "module-torch.nn.quantized.modules"], [1917, "module-torch.quantization"], [1917, "module-torch.quantization.fx"], [1918, "module-torch.random"], [1919, "module-torch.distributed.autograd"], [1919, "module-torch.distributed.rpc"], [1922, "module-torch.signal"], [1922, "module-torch.signal.windows"], [1923, "module-torch.sparse"], [1924, "module-torch.special"], [1928, "module-torch.utils.tensorboard"], [1930, "module-torch.testing"], [1931, "module-torch"], [1931, "module-torch.autograd"], [1931, "module-torch.contrib"], [1931, "module-torch.utils"], [1931, "module-torch.utils.backcompat"], [1931, "module-torch.utils.hipify"], [1931, "module-torch.utils.model_dump"], [1932, "module-torch.ao.ns._numeric_suite"], [1933, "module-torch.ao.ns._numeric_suite_fx"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu": [[0, "module-torch.cpu"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"], [1931, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "compile() (in module torch)": [[18, "torch.compile"], [950, "torch.compile"]], "torch.compiler": [[29, "module-torch.compiler"]], "parallel_info() (in module torch.__config__)": [[31, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[31, "torch.__config__.show"]], "torch.__config__": [[31, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[32, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cuda": [[34, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[35, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[35, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[38, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[38, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[38, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[38, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[38, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[38, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[38, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[38, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[38, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[38, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[38, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[38, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[38, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[38, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[38, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[38, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[38, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[38, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[38, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[38, "torch.utils.data.random_split"]], "torch.utils.data": [[38, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[38, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[38, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[38, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[38, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[38, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[39, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[39, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[39, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[39, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[39, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[39, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[39, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[39, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[41, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[41, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[41, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[41, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[41, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[41, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[41, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[41, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[41, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[41, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[41, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[41, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[41, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[41, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[41, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[41, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[41, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[41, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[41, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[41, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[41, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[41, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[41, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[41, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[41, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[41, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[41, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[41, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[41, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[41, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[41, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[41, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[41, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[41, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[41, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[41, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[41, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[41, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[41, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[41, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[41, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[41, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[41, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[41, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[41, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[41, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[41, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[41, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[41, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[41, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[41, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[41, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[41, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[41, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[41, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[41, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[41, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[41, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[41, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[41, "module-torch.distributed"]], "torch.distributed.algorithms": [[41, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[41, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[41, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[41, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[41, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[41, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[41, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[41, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[41, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[41, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[41, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[41, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[41, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[41, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[41, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[41, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[41, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[42, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[42, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[42, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[42, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[42, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[42, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[42, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[42, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[42, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[43, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[43, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[43, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[43, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[43, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[43, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[43, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[43, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[43, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[43, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[43, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[43, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[43, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[43, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[43, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[43, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[43, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[43, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[43, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[43, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[43, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[43, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[45, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[45, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[45, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[45, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[45, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[45, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[45, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[45, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[46, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[46, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[46, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[46, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[46, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[47, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[47, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[47, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[47, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[47, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[47, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[47, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[47, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[47, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[47, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[47, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[47, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[47, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[47, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[47, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[47, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[47, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[47, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[47, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[47, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[47, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[47, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[47, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[47, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[47, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[47, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[47, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[47, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[47, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[47, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[47, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[47, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[47, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[47, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[47, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[47, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[47, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[47, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[47, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[47, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[47, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[47, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[47, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[47, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[47, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[47, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[47, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[47, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[47, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[47, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[47, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[47, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[47, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[47, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[47, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[47, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[47, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[47, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[47, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[47, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[47, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[47, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[47, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[47, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[47, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[47, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[47, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[47, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[47, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[47, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[47, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[47, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[47, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[47, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[47, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[47, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[47, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[47, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[47, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[47, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[47, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[47, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[47, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[47, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[47, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[47, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[47, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[47, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[47, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[47, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[47, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[47, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[47, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[47, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[47, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[47, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[47, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[47, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[47, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[47, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[47, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[47, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[47, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[47, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[47, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[47, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[47, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[47, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[47, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[47, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[47, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[47, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[47, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[47, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[47, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[47, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[47, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[47, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[47, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[47, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[47, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[47, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[47, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[47, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[47, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[47, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[47, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[47, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[47, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[47, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[47, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[47, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[47, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[47, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[47, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[47, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[47, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[47, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[47, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[47, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[47, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[47, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[47, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[47, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[47, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[47, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[47, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[47, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[47, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[47, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[47, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[47, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[47, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[47, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[47, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[47, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[47, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[47, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[47, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[47, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[47, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[47, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[47, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[47, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[47, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[47, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[47, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[47, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[47, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[47, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[47, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[47, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[47, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[47, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[47, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[47, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[47, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[47, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[47, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[47, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[47, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[47, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[47, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[47, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[47, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[47, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[47, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[47, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[47, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[47, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[47, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[47, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[47, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[47, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[47, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[47, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[47, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[47, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[47, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[47, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[47, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[47, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[47, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[47, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[47, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[47, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[47, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[47, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[47, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[47, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[47, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[47, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[47, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[47, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[47, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[47, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[47, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[47, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[47, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[47, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[47, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[47, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[47, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[47, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[47, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[47, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[47, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[47, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[47, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[47, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[47, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[47, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[47, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[47, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[47, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[47, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[47, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[47, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[47, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[47, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[47, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[47, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[47, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[47, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[47, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[47, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[47, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[47, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[47, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[47, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[47, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[47, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[47, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[47, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[47, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[47, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[47, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[47, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[47, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[47, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[47, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[47, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[47, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[47, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[47, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[47, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[47, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[47, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[47, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[47, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[47, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[47, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[47, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[47, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[47, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[47, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[47, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[47, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[47, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[47, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[47, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[47, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[47, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[47, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[47, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[47, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[47, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[47, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[47, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[47, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[47, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[47, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[47, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[47, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[47, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[47, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[47, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[47, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[47, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[47, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[47, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[47, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[47, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[47, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[47, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[47, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[47, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[47, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[47, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[47, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[47, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[47, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[47, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[47, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[47, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[47, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[47, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[47, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[47, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[47, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[47, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[47, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[47, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[47, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[47, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[47, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[48, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[48, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[49, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[49, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[49, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[49, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[49, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[49, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[49, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[49, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[49, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[49, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[49, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[49, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[49, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[49, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[51, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[51, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[51, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[51, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[51, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[52, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[52, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[52, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[52, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[52, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[52, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[55, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[55, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[55, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[55, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[55, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[55, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[55, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[56, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[56, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[56, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[56, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[56, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[56, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[58, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[58, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[58, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[58, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[58, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[58, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[58, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[58, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[58, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[58, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[58, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[58, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[58, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[58, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[58, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[58, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[58, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[58, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[58, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[58, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[58, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[58, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[58, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[59, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[60, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[60, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[60, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[60, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[60, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[60, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[60, "module-torch.distributed.elastic.timer"]], "torch.fft": [[62, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[63, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[63, "torch.distributed.fsdp.CPUOffload"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel"]], "mixedprecision (class in torch.distributed.fsdp)": [[63, "torch.distributed.fsdp.MixedPrecision"]], "shardingstrategy (class in torch.distributed.fsdp)": [[63, "torch.distributed.fsdp.ShardingStrategy"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "load_optim_state_dict_pre_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.load_optim_state_dict_pre_hook"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_post_hook() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_post_hook"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[63, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[63, "module-torch.distributed.fsdp"]], "torch.func": [[65, "module-torch.func"]], "future (class in torch.futures)": [[70, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[70, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[70, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[70, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[70, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[70, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[70, "torch.futures.Future.then"]], "torch.futures": [[70, "module-torch.futures"]], "value() (torch.futures.future method)": [[70, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[70, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[70, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[71, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[71, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[71, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[71, "torch.fx.Node"]], "proxy (class in torch.fx)": [[71, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[71, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[71, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[71, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[71, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[71, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[71, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[71, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[71, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[71, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[71, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[71, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[71, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[71, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[71, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[71, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[71, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[71, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[71, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[71, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[71, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[71, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[71, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[71, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[71, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[71, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[71, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[71, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[71, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[71, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[71, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[71, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[71, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[71, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[71, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[71, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[71, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[71, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[71, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[71, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[71, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[71, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[71, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[71, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[71, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[71, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[71, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[71, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[71, "module-torch.fx"]], "torch.fx.experimental": [[71, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[71, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[71, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[71, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[71, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[71, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[71, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[71, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[71, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[71, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[71, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[71, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[71, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[71, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[71, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[71, "torch.fx.wrap"]], "generator (class in torch)": [[89, "torch.Generator"]], "device (torch.generator attribute)": [[89, "torch.Generator.device"]], "get_state() (torch.generator method)": [[89, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[89, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[89, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[89, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[89, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[90, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[91, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[92, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[93, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[94, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[95, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[96, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[97, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[98, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[99, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[100, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[101, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[102, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[103, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[104, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[105, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[106, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[107, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[108, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[109, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[110, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[111, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[112, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[113, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[114, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[115, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[116, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[117, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[118, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[119, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[120, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[121, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[122, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[123, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[124, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[125, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[126, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[127, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[128, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[129, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[130, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[131, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[132, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[133, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[134, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[135, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[136, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[137, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[138, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[139, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[140, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[141, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[142, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[143, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[144, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[145, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[146, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[147, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[148, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[149, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[150, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[151, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[152, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[153, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[154, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[155, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[156, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[157, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[158, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[159, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[160, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[161, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[162, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[163, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[164, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[165, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[166, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[167, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[168, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[169, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[170, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[171, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[172, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[173, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[174, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[175, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[176, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[177, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[178, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[179, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[180, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[181, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[182, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[183, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[184, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[185, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[186, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[187, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[188, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[189, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[190, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[191, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[192, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[193, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[194, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[195, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[196, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[197, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[198, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[199, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[200, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[201, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[202, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[203, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[204, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[205, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[206, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[207, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[208, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[209, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[210, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[211, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[212, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[213, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[214, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[215, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[216, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[217, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[218, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[219, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[220, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[221, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[222, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[223, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[224, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[225, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[226, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[227, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[228, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[229, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[230, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[231, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[232, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[233, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[234, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[235, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[236, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[237, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[238, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[239, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[240, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[241, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[242, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[243, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[244, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[245, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[246, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[247, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[248, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[249, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[250, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[251, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[252, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[253, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[254, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[255, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[256, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[257, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[258, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[259, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[260, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[261, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[262, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[263, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[264, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[265, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[266, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[267, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[268, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[269, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[270, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[271, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[272, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[273, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[274, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[275, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[276, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[277, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[278, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[279, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[280, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[281, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[282, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[283, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[284, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[285, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[286, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[287, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[288, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[289, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[290, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[291, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[292, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[293, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[294, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[295, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[296, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[297, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[298, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[299, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[300, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[301, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[302, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[303, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[304, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[305, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[306, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[307, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[308, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[309, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[310, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[311, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[312, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[313, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[314, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[315, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[316, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[317, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[318, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[319, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[320, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[321, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[322, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[323, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[324, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[325, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[326, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[327, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[328, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[329, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[330, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[331, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[332, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[333, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[334, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[335, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[336, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[337, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[338, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[339, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[340, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[341, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[342, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[343, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[344, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[345, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[346, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[347, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[348, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[349, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[350, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[351, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[352, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[353, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[354, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[355, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[356, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[357, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[358, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[359, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[360, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[361, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[362, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[363, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[364, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[365, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[366, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[367, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[368, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[369, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[370, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[371, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[372, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[373, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[374, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[375, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[376, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[377, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[378, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[379, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[380, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[381, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[382, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[383, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[384, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[385, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[386, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[387, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[388, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[389, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[390, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[391, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[392, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[393, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[394, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[395, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[396, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[397, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[398, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[399, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[400, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[401, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[402, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[403, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[404, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[405, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[406, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[407, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[408, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[409, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[410, "torch.Tensor.median"]], "min() (torch.tensor method)": [[411, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[412, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[413, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[414, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[415, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[416, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[417, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[418, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[419, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[420, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[421, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[422, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[423, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[424, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[425, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[426, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[427, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[428, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[429, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[430, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[431, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[432, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[433, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[434, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[435, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[436, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[437, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[438, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[439, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[440, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[441, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[442, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[443, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[444, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[445, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[446, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[447, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[448, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[449, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[450, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[451, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[452, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[453, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[454, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[455, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[456, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[457, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[458, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[459, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[460, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[461, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[462, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[463, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[464, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[465, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[466, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[467, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[468, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[469, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[470, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[471, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[472, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[473, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[474, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[475, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[476, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[477, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[478, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[479, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[480, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[481, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[482, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[483, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[484, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[485, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[486, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[487, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[488, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[489, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[490, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[491, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[492, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[493, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[494, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[495, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[496, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[497, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[498, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[499, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[500, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[501, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[502, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[503, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[504, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[505, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[506, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[507, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[508, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[509, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[510, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[511, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[512, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[513, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[514, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[515, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[516, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[517, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[518, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[519, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[520, "torch.Tensor.sgn_"]], "share_memory_() (torch.tensor method)": [[521, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[522, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[523, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[524, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[525, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[526, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[527, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[528, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[529, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[530, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[531, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[532, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[533, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[534, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[535, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[536, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[537, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[538, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[539, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[540, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[541, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[542, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[543, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[544, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[545, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[546, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[547, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[548, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[549, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[550, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[551, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[552, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[553, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[554, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[555, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[556, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[557, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[558, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[559, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[560, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[561, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[562, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[563, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[564, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[565, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[566, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[567, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[568, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[569, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[570, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[571, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[572, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[573, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[574, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[575, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[576, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[577, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[578, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[579, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[580, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[581, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[582, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[583, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[584, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[585, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[586, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[587, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[588, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[589, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[590, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[591, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[592, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[593, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[594, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[595, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[596, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[597, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[598, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[599, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[600, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[601, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[602, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[603, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[604, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[605, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[606, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[607, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[608, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[609, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[610, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[611, "torch.Tensor.values"]], "var() (torch.tensor method)": [[612, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[613, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[614, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[615, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[616, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[617, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[618, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[619, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[620, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[621, "torch._assert"]], "_foreach_abs() (in module torch)": [[622, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[623, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[624, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[625, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[626, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[627, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[628, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[629, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[630, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[631, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[632, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[633, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[634, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[635, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[636, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[637, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[638, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[639, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[640, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[641, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[642, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[643, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[644, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[645, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[646, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[647, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[648, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[649, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[650, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[651, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[652, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[653, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[654, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[655, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[656, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[657, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[658, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[659, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[660, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[661, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[662, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[663, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[664, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[665, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[666, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[667, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[668, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[669, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[670, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[671, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[672, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[673, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[674, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[675, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[676, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[677, "torch._logging.set_logs"]], "abs() (in module torch)": [[678, "torch.abs"]], "absolute() (in module torch)": [[679, "torch.absolute"]], "acos() (in module torch)": [[680, "torch.acos"]], "acosh() (in module torch)": [[681, "torch.acosh"]], "add() (in module torch)": [[682, "torch.add"]], "addbmm() (in module torch)": [[683, "torch.addbmm"]], "addcdiv() (in module torch)": [[684, "torch.addcdiv"]], "addcmul() (in module torch)": [[685, "torch.addcmul"]], "addmm() (in module torch)": [[686, "torch.addmm"]], "addmv() (in module torch)": [[687, "torch.addmv"]], "addr() (in module torch)": [[688, "torch.addr"]], "adjoint() (in module torch)": [[689, "torch.adjoint"]], "all() (in module torch)": [[690, "torch.all"]], "allclose() (in module torch)": [[691, "torch.allclose"]], "amax() (in module torch)": [[692, "torch.amax"]], "amin() (in module torch)": [[693, "torch.amin"]], "aminmax() (in module torch)": [[694, "torch.aminmax"]], "angle() (in module torch)": [[695, "torch.angle"]], "any() (in module torch)": [[696, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[697, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[698, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[699, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[700, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[701, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[702, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[703, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[704, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[705, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[706, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[707, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[708, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[709, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[710, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[711, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[712, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[713, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[714, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[715, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[716, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[717, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[718, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[719, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[720, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[721, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[722, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[723, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[724, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[725, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[726, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[727, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[728, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[729, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[729, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[730, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[731, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[732, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[732, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[732, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[733, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[734, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[735, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[735, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[736, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[736, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[737, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[737, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[738, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[739, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[740, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[741, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[742, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[742, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[743, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[743, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[744, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[745, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[746, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[747, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[748, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[749, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[750, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[751, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[753, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[753, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[757, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[758, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[759, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[760, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[761, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[761, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[761, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[762, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[763, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[764, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[765, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[766, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[767, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[768, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[769, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[770, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[771, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[772, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[773, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[774, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[775, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[776, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[777, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[778, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[779, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[780, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[781, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[785, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[786, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[787, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[788, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[789, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[789, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[789, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[789, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[789, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[789, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[789, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[790, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[791, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[791, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[791, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[792, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[793, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[793, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[793, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[793, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[794, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[795, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[796, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[797, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[798, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[799, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[800, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[801, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[802, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[803, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[804, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[805, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[806, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[807, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[808, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[809, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[810, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[811, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[812, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[812, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[812, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[813, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[813, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[813, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[814, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[815, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[816, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[817, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[817, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[817, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[817, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[818, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[819, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[820, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[821, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[821, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[821, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[822, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[822, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[823, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[824, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[825, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[826, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[827, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[828, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[829, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[830, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[831, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[832, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[833, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[834, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[835, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[836, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[837, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[838, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[839, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[840, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[841, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[842, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[843, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[844, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[845, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[846, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[847, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[848, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[849, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[850, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[851, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[852, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[853, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[854, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[855, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[856, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[857, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[858, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[859, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[860, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[861, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[862, "torch.arange"]], "arccos() (in module torch)": [[863, "torch.arccos"]], "arccosh() (in module torch)": [[864, "torch.arccosh"]], "arcsin() (in module torch)": [[865, "torch.arcsin"]], "arcsinh() (in module torch)": [[866, "torch.arcsinh"]], "arctan() (in module torch)": [[867, "torch.arctan"]], "arctan2() (in module torch)": [[868, "torch.arctan2"]], "arctanh() (in module torch)": [[869, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[870, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[871, "torch.argmax"]], "argmin() (in module torch)": [[872, "torch.argmin"]], "argsort() (in module torch)": [[873, "torch.argsort"]], "argwhere() (in module torch)": [[874, "torch.argwhere"]], "as_strided() (in module torch)": [[875, "torch.as_strided"]], "as_tensor() (in module torch)": [[876, "torch.as_tensor"]], "asarray() (in module torch)": [[877, "torch.asarray"]], "asin() (in module torch)": [[878, "torch.asin"]], "asinh() (in module torch)": [[879, "torch.asinh"]], "atan() (in module torch)": [[880, "torch.atan"]], "atan2() (in module torch)": [[881, "torch.atan2"]], "atanh() (in module torch)": [[882, "torch.atanh"]], "atleast_1d() (in module torch)": [[883, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[884, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[885, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[886, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[887, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[888, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[889, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[890, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[891, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[892, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[893, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[894, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[895, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[896, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[897, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[898, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[899, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[900, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[901, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[902, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[903, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[904, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[905, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[906, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[907, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[908, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[909, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[910, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[911, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[912, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[913, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[914, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[915, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[916, "torch.autograd.profiler.profile.total_average"]], "set_multithreading_enabled (class in torch.autograd)": [[917, "torch.autograd.set_multithreading_enabled"]], "baddbmm() (in module torch)": [[918, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[919, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[920, "torch.bernoulli"]], "bincount() (in module torch)": [[921, "torch.bincount"]], "bitwise_and() (in module torch)": [[922, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[923, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[924, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[925, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[926, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[927, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[928, "torch.blackman_window"]], "block_diag() (in module torch)": [[929, "torch.block_diag"]], "bmm() (in module torch)": [[930, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[931, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[932, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[933, "torch.broadcast_to"]], "bucketize() (in module torch)": [[934, "torch.bucketize"]], "can_cast() (in module torch)": [[935, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[936, "torch.cartesian_prod"]], "cat() (in module torch)": [[937, "torch.cat"]], "cdist() (in module torch)": [[938, "torch.cdist"]], "ceil() (in module torch)": [[939, "torch.ceil"]], "chain_matmul() (in module torch)": [[940, "torch.chain_matmul"]], "cholesky() (in module torch)": [[941, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[942, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[943, "torch.cholesky_solve"]], "chunk() (in module torch)": [[944, "torch.chunk"]], "clamp() (in module torch)": [[945, "torch.clamp"]], "clip() (in module torch)": [[946, "torch.clip"]], "clone() (in module torch)": [[947, "torch.clone"]], "column_stack() (in module torch)": [[948, "torch.column_stack"]], "combinations() (in module torch)": [[949, "torch.combinations"]], "compiled_with_cxx11_abi() (in module torch)": [[951, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[952, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[953, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[954, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[955, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[956, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[957, "torch.compiler.reset"]], "complex() (in module torch)": [[958, "torch.complex"]], "concat() (in module torch)": [[959, "torch.concat"]], "concatenate() (in module torch)": [[960, "torch.concatenate"]], "conj() (in module torch)": [[961, "torch.conj"]], "conj_physical() (in module torch)": [[962, "torch.conj_physical"]], "copysign() (in module torch)": [[963, "torch.copysign"]], "corrcoef() (in module torch)": [[964, "torch.corrcoef"]], "cos() (in module torch)": [[965, "torch.cos"]], "cosh() (in module torch)": [[966, "torch.cosh"]], "count_nonzero() (in module torch)": [[967, "torch.count_nonzero"]], "cov() (in module torch)": [[968, "torch.cov"]], "cross() (in module torch)": [[969, "torch.cross"]], "cudagraph (class in torch.cuda)": [[970, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[970, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[971, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[972, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[972, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[972, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[972, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[972, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[972, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[972, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[972, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[973, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[973, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[973, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[973, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[973, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[973, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[974, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[975, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[975, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[975, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[975, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[975, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[975, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[976, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[977, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[978, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[979, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[980, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[981, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[982, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[983, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[984, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[985, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[986, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[987, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[988, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[989, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[990, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[991, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[992, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[993, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[994, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[995, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[996, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[997, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[998, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[999, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1000, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1001, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1002, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1003, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1004, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1005, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1006, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1007, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1008, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1009, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1010, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1011, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1012, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1013, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1014, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1015, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1016, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1017, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1018, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1019, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1020, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1021, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1022, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1023, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1024, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1025, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1026, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1027, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1028, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1029, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1030, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1031, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1032, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1033, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1034, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1035, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1036, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1037, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1038, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1039, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1040, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1041, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1042, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1043, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1044, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1045, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1046, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1047, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1048, "torch.cummax"]], "cummin() (in module torch)": [[1049, "torch.cummin"]], "cumprod() (in module torch)": [[1050, "torch.cumprod"]], "cumsum() (in module torch)": [[1051, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1052, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1053, "torch.deg2rad"]], "dequantize() (in module torch)": [[1054, "torch.dequantize"]], "det() (in module torch)": [[1055, "torch.det"]], "diag() (in module torch)": [[1056, "torch.diag"]], "diag_embed() (in module torch)": [[1057, "torch.diag_embed"]], "diagflat() (in module torch)": [[1058, "torch.diagflat"]], "diagonal() (in module torch)": [[1059, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1060, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1061, "torch.diff"]], "digamma() (in module torch)": [[1062, "torch.digamma"]], "dist() (in module torch)": [[1063, "torch.dist"]], "div() (in module torch)": [[1064, "torch.div"]], "divide() (in module torch)": [[1065, "torch.divide"]], "dot() (in module torch)": [[1066, "torch.dot"]], "dsplit() (in module torch)": [[1067, "torch.dsplit"]], "dstack() (in module torch)": [[1068, "torch.dstack"]], "einsum() (in module torch)": [[1069, "torch.einsum"]], "empty() (in module torch)": [[1070, "torch.empty"]], "empty_like() (in module torch)": [[1071, "torch.empty_like"]], "empty_strided() (in module torch)": [[1072, "torch.empty_strided"]], "enable_grad (class in torch)": [[1073, "torch.enable_grad"]], "eq() (in module torch)": [[1074, "torch.eq"]], "equal() (in module torch)": [[1075, "torch.equal"]], "erf() (in module torch)": [[1076, "torch.erf"]], "erfc() (in module torch)": [[1077, "torch.erfc"]], "erfinv() (in module torch)": [[1078, "torch.erfinv"]], "exp() (in module torch)": [[1079, "torch.exp"]], "exp2() (in module torch)": [[1080, "torch.exp2"]], "expm1() (in module torch)": [[1081, "torch.expm1"]], "eye() (in module torch)": [[1082, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1083, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1084, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1085, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1086, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1087, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1088, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1089, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1090, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1091, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1092, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1093, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1094, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1095, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1096, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1097, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1098, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1099, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1100, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1101, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1102, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1103, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1104, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1105, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1106, "torch.fft.rfftn"]], "fix() (in module torch)": [[1107, "torch.fix"]], "flatten() (in module torch)": [[1108, "torch.flatten"]], "flip() (in module torch)": [[1109, "torch.flip"]], "fliplr() (in module torch)": [[1110, "torch.fliplr"]], "flipud() (in module torch)": [[1111, "torch.flipud"]], "float_power() (in module torch)": [[1112, "torch.float_power"]], "floor() (in module torch)": [[1113, "torch.floor"]], "floor_divide() (in module torch)": [[1114, "torch.floor_divide"]], "fmax() (in module torch)": [[1115, "torch.fmax"]], "fmin() (in module torch)": [[1116, "torch.fmin"]], "fmod() (in module torch)": [[1117, "torch.fmod"]], "frac() (in module torch)": [[1118, "torch.frac"]], "frexp() (in module torch)": [[1119, "torch.frexp"]], "from_dlpack() (in module torch)": [[1120, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1121, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1122, "torch.frombuffer"]], "full() (in module torch)": [[1123, "torch.full"]], "full_like() (in module torch)": [[1124, "torch.full_like"]], "functional_call() (in module torch.func)": [[1125, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1126, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1127, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1128, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1129, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1130, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1131, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1132, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1133, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1134, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1135, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1136, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1137, "torch.func.vmap"]], "gather() (in module torch)": [[1138, "torch.gather"]], "gcd() (in module torch)": [[1139, "torch.gcd"]], "ge() (in module torch)": [[1140, "torch.ge"]], "geqrf() (in module torch)": [[1141, "torch.geqrf"]], "ger() (in module torch)": [[1142, "torch.ger"]], "get_default_dtype() (in module torch)": [[1143, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1144, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1145, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1146, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1147, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1148, "torch.get_rng_state"]], "gradient() (in module torch)": [[1149, "torch.gradient"]], "greater() (in module torch)": [[1150, "torch.greater"]], "greater_equal() (in module torch)": [[1151, "torch.greater_equal"]], "gt() (in module torch)": [[1152, "torch.gt"]], "hamming_window() (in module torch)": [[1153, "torch.hamming_window"]], "hann_window() (in module torch)": [[1154, "torch.hann_window"]], "heaviside() (in module torch)": [[1155, "torch.heaviside"]], "histc() (in module torch)": [[1156, "torch.histc"]], "histogram() (in module torch)": [[1157, "torch.histogram"]], "histogramdd() (in module torch)": [[1158, "torch.histogramdd"]], "hsplit() (in module torch)": [[1159, "torch.hsplit"]], "hspmm() (in module torch)": [[1160, "torch.hspmm"]], "hstack() (in module torch)": [[1161, "torch.hstack"]], "hypot() (in module torch)": [[1162, "torch.hypot"]], "i0() (in module torch)": [[1163, "torch.i0"]], "igamma() (in module torch)": [[1164, "torch.igamma"]], "igammac() (in module torch)": [[1165, "torch.igammac"]], "imag() (in module torch)": [[1166, "torch.imag"]], "index_add() (in module torch)": [[1167, "torch.index_add"]], "index_copy() (in module torch)": [[1168, "torch.index_copy"]], "index_reduce() (in module torch)": [[1169, "torch.index_reduce"]], "index_select() (in module torch)": [[1170, "torch.index_select"]], "inference_mode (class in torch)": [[1171, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1172, "torch.initial_seed"]], "inner() (in module torch)": [[1173, "torch.inner"]], "inverse() (in module torch)": [[1174, "torch.inverse"]], "is_complex() (in module torch)": [[1175, "torch.is_complex"]], "is_conj() (in module torch)": [[1176, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1177, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1178, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1179, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1180, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1181, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1182, "torch.is_storage"]], "is_tensor() (in module torch)": [[1183, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1184, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1185, "torch.isclose"]], "isfinite() (in module torch)": [[1186, "torch.isfinite"]], "isin() (in module torch)": [[1187, "torch.isin"]], "isinf() (in module torch)": [[1188, "torch.isinf"]], "isnan() (in module torch)": [[1189, "torch.isnan"]], "isneginf() (in module torch)": [[1190, "torch.isneginf"]], "isposinf() (in module torch)": [[1191, "torch.isposinf"]], "isreal() (in module torch)": [[1192, "torch.isreal"]], "istft() (in module torch)": [[1193, "torch.istft"]], "attribute (class in torch.jit)": [[1194, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1194, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1194, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1194, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1194, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1195, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1195, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1195, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1195, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1196, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1196, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1196, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1196, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1196, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1196, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1197, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1198, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1199, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1200, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1201, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1202, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1203, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1204, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1205, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1206, "torch.jit.save"]], "script() (in module torch.jit)": [[1207, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1208, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1209, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1210, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1211, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1212, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1213, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1214, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1215, "torch.kaiser_window"]], "kron() (in module torch)": [[1216, "torch.kron"]], "kthvalue() (in module torch)": [[1217, "torch.kthvalue"]], "lcm() (in module torch)": [[1218, "torch.lcm"]], "ldexp() (in module torch)": [[1219, "torch.ldexp"]], "le() (in module torch)": [[1220, "torch.le"]], "lerp() (in module torch)": [[1221, "torch.lerp"]], "less() (in module torch)": [[1222, "torch.less"]], "less_equal() (in module torch)": [[1223, "torch.less_equal"]], "lgamma() (in module torch)": [[1224, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1225, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1226, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1227, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1228, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1229, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1230, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1231, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1232, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1233, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1234, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1235, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1236, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1237, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1238, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1239, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1240, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1241, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1242, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1243, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1244, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1245, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1246, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1247, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1248, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1249, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1250, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1251, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1252, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1253, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1254, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1255, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1256, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1257, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1258, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1259, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1260, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1261, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1262, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1263, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1264, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1265, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1266, "torch.linspace"]], "load() (in module torch)": [[1267, "torch.load"]], "lobpcg() (in module torch)": [[1268, "torch.lobpcg"]], "log() (in module torch)": [[1269, "torch.log"]], "log10() (in module torch)": [[1270, "torch.log10"]], "log1p() (in module torch)": [[1271, "torch.log1p"]], "log2() (in module torch)": [[1272, "torch.log2"]], "logaddexp() (in module torch)": [[1273, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1274, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1275, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1276, "torch.logdet"]], "logical_and() (in module torch)": [[1277, "torch.logical_and"]], "logical_not() (in module torch)": [[1278, "torch.logical_not"]], "logical_or() (in module torch)": [[1279, "torch.logical_or"]], "logical_xor() (in module torch)": [[1280, "torch.logical_xor"]], "logit() (in module torch)": [[1281, "torch.logit"]], "logspace() (in module torch)": [[1282, "torch.logspace"]], "logsumexp() (in module torch)": [[1283, "torch.logsumexp"]], "lt() (in module torch)": [[1284, "torch.lt"]], "lu() (in module torch)": [[1285, "torch.lu"]], "lu_solve() (in module torch)": [[1286, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1287, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1288, "torch.manual_seed"]], "masked_select() (in module torch)": [[1289, "torch.masked_select"]], "matmul() (in module torch)": [[1290, "torch.matmul"]], "matrix_exp() (in module torch)": [[1291, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1292, "torch.matrix_power"]], "max() (in module torch)": [[1293, "torch.max"]], "maximum() (in module torch)": [[1294, "torch.maximum"]], "mean() (in module torch)": [[1295, "torch.mean"]], "median() (in module torch)": [[1296, "torch.median"]], "meshgrid() (in module torch)": [[1297, "torch.meshgrid"]], "min() (in module torch)": [[1298, "torch.min"]], "minimum() (in module torch)": [[1299, "torch.minimum"]], "mm() (in module torch)": [[1300, "torch.mm"]], "mode() (in module torch)": [[1301, "torch.mode"]], "moveaxis() (in module torch)": [[1302, "torch.moveaxis"]], "movedim() (in module torch)": [[1303, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1304, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1305, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1306, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1307, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1308, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1309, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1310, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1311, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1312, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1313, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1314, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1315, "torch.mps.synchronize"]], "msort() (in module torch)": [[1316, "torch.msort"]], "mul() (in module torch)": [[1317, "torch.mul"]], "multinomial() (in module torch)": [[1318, "torch.multinomial"]], "multiply() (in module torch)": [[1319, "torch.multiply"]], "mv() (in module torch)": [[1320, "torch.mv"]], "mvlgamma() (in module torch)": [[1321, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1322, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1323, "torch.nanmean"]], "nanmedian() (in module torch)": [[1324, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1325, "torch.nanquantile"]], "nansum() (in module torch)": [[1326, "torch.nansum"]], "narrow() (in module torch)": [[1327, "torch.narrow"]], "narrow_copy() (in module torch)": [[1328, "torch.narrow_copy"]], "ne() (in module torch)": [[1329, "torch.ne"]], "neg() (in module torch)": [[1330, "torch.neg"]], "negative() (in module torch)": [[1331, "torch.negative"]], "nextafter() (in module torch)": [[1332, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1333, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1334, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1335, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1336, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1336, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1336, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1337, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1338, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1339, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1340, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1341, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1342, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1343, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1344, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1345, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1346, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1347, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1348, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1349, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1350, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1351, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1352, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1353, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1354, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1355, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1356, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1357, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1358, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1359, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1360, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1361, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1362, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1363, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1364, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1365, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1366, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1367, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1368, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1369, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1370, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1371, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1371, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1372, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1372, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1372, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1373, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1374, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1375, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1376, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1377, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1378, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1379, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1380, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1381, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1382, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1383, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1384, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1385, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1386, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1387, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1388, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1389, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1390, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1391, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1392, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1393, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1394, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1395, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1396, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1397, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1398, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1399, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1400, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1401, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1401, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1402, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1402, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1403, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1403, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1404, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1404, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1405, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1405, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1406, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1406, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1407, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1407, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1408, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1408, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1409, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1409, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1410, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1410, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1411, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1411, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1412, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1412, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1413, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1413, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1414, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1415, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1416, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1417, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1418, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1419, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1420, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1421, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1422, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1423, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1424, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1425, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1426, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1427, "torch.nn.Mish"]], "module (class in torch.nn)": [[1428, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1428, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1428, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1428, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1428, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1428, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1428, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1428, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1428, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1428, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1428, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1428, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1428, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1428, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1428, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1428, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1428, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1428, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1428, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1428, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1428, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1428, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1428, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1428, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1428, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1428, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1428, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1428, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1428, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1428, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1428, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1428, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1428, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1428, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1428, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1428, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1428, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1428, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1428, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1428, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1428, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1429, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1429, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1429, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1429, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1429, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1429, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1429, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1430, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1430, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1430, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1430, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1431, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1432, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1433, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1434, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1434, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1434, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1435, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1436, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1437, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1438, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1438, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1439, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1439, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1439, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1440, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1441, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1442, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1443, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1444, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1444, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1445, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1446, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1447, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1448, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1449, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1450, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1451, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1452, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1453, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1454, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1455, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1456, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1456, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1457, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1458, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1459, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1460, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1461, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1462, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1463, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1464, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1465, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1466, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1467, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1467, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1468, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1469, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1470, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1471, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1471, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1471, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1472, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1472, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1473, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1473, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1474, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1474, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1475, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1475, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1476, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1477, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1478, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1479, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1480, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1481, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1482, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1483, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1484, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1485, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1486, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1487, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1488, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1489, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1490, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1491, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1492, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1493, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1494, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1495, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1496, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1497, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1498, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1499, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1500, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1501, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1502, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1503, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1504, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1505, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1506, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1507, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1508, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1509, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1510, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1511, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1512, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1514, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1515, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1516, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1517, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1518, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1519, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1520, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1521, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1522, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1523, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1524, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1525, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1526, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1527, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1528, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1529, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1530, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1531, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1532, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1533, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1534, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1535, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1536, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1537, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1538, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1539, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1540, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1541, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1542, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1543, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1544, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1545, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1546, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1547, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1548, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1549, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1550, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1551, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1552, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1553, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1554, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1555, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1556, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1557, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1558, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1559, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1560, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1562, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1563, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1564, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1565, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1566, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1567, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1568, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1569, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1570, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1571, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1572, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1573, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1574, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1575, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1576, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1577, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1578, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1579, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1580, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1581, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1582, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1583, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1584, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1585, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1586, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1587, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1588, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1589, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1590, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1591, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1592, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1593, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1594, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1595, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1596, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1597, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1598, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1599, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1599, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1599, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1600, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1601, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1602, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1603, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1604, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1605, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1606, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1607, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1608, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1608, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1608, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1608, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1608, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1609, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1610, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1611, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1611, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1612, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1613, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1614, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1615, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1616, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1617, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1617, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1618, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1619, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1620, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1621, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1622, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1622, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1622, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1622, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1622, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1622, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1623, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1623, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1623, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1623, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1623, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1624, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1624, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1624, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1624, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1624, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1625, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1625, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1625, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1625, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1625, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1626, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1626, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1626, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1626, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1626, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1626, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1627, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1627, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1627, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1627, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1627, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1627, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1627, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1628, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1628, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1628, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1628, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1628, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1628, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1629, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1629, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1629, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1629, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1629, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1630, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1631, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1632, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1633, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1634, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1635, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1636, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1637, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1638, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1639, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1640, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1641, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1641, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1641, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1641, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1641, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1641, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1641, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1641, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1641, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1641, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1642, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1643, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1644, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1645, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1646, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1647, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1648, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1649, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1650, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1651, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1652, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1653, "torch.no_grad"]], "nonzero() (in module torch)": [[1654, "torch.nonzero"]], "norm() (in module torch)": [[1655, "torch.norm"]], "normal() (in module torch)": [[1656, "torch.normal"]], "not_equal() (in module torch)": [[1657, "torch.not_equal"]], "numel() (in module torch)": [[1658, "torch.numel"]], "ones() (in module torch)": [[1659, "torch.ones"]], "ones_like() (in module torch)": [[1660, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1661, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1662, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1662, "torch.onnx.ExportOutput.diagnostic_context"]], "model_proto (torch.onnx.exportoutput property)": [[1662, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1662, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1663, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1663, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1664, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1664, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1664, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1664, "torch.onnx.JitScalarType.torch_name"]], "graphinfo (class in torch.onnx.verification)": [[1665, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1665, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1666, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1667, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.state_dict"]], "zero_grad() (torch.optim.asgd method)": [[1667, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1668, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.state_dict"]], "zero_grad() (torch.optim.adadelta method)": [[1668, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1669, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.state_dict"]], "zero_grad() (torch.optim.adagrad method)": [[1669, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1670, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1670, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1670, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1670, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1670, "torch.optim.Adam.state_dict"]], "zero_grad() (torch.optim.adam method)": [[1670, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1671, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.state_dict"]], "zero_grad() (torch.optim.adamw method)": [[1671, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1672, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.state_dict"]], "zero_grad() (torch.optim.adamax method)": [[1672, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1673, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1673, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1674, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.state_dict"]], "zero_grad() (torch.optim.nadam method)": [[1674, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1675, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1676, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1677, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1678, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1679, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1680, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.state_dict"]], "zero_grad() (torch.optim.radam method)": [[1680, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1681, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.state_dict"]], "zero_grad() (torch.optim.rmsprop method)": [[1681, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1682, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.state_dict"]], "zero_grad() (torch.optim.rprop method)": [[1682, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1683, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.state_dict"]], "zero_grad() (torch.optim.sgd method)": [[1683, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1684, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1684, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1685, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1686, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1686, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1687, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1688, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1689, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1689, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1689, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1689, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1690, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1690, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1691, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1691, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1692, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1692, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1693, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1693, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1694, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1695, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1695, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1696, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1696, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1697, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1698, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1698, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1699, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1699, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1700, "torch.orgqr"]], "ormqr() (in module torch)": [[1701, "torch.ormqr"]], "outer() (in module torch)": [[1702, "torch.outer"]], "pca_lowrank() (in module torch)": [[1703, "torch.pca_lowrank"]], "permute() (in module torch)": [[1704, "torch.permute"]], "pinverse() (in module torch)": [[1705, "torch.pinverse"]], "poisson() (in module torch)": [[1706, "torch.poisson"]], "polar() (in module torch)": [[1707, "torch.polar"]], "polygamma() (in module torch)": [[1708, "torch.polygamma"]], "positive() (in module torch)": [[1709, "torch.positive"]], "pow() (in module torch)": [[1710, "torch.pow"]], "prod() (in module torch)": [[1711, "torch.prod"]], "promote_types() (in module torch)": [[1712, "torch.promote_types"]], "qr() (in module torch)": [[1713, "torch.qr"]], "quantile() (in module torch)": [[1714, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1715, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1716, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1717, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1718, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1719, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1720, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1720, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1721, "torch.rad2deg"]], "rand() (in module torch)": [[1722, "torch.rand"]], "rand_like() (in module torch)": [[1723, "torch.rand_like"]], "randint() (in module torch)": [[1724, "torch.randint"]], "randint_like() (in module torch)": [[1725, "torch.randint_like"]], "randn() (in module torch)": [[1726, "torch.randn"]], "randn_like() (in module torch)": [[1727, "torch.randn_like"]], "randperm() (in module torch)": [[1728, "torch.randperm"]], "range() (in module torch)": [[1729, "torch.range"]], "ravel() (in module torch)": [[1730, "torch.ravel"]], "real() (in module torch)": [[1731, "torch.real"]], "reciprocal() (in module torch)": [[1732, "torch.reciprocal"]], "remainder() (in module torch)": [[1733, "torch.remainder"]], "renorm() (in module torch)": [[1734, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1735, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1736, "torch.reshape"]], "resolve_conj() (in module torch)": [[1737, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1738, "torch.resolve_neg"]], "result_type() (in module torch)": [[1739, "torch.result_type"]], "roll() (in module torch)": [[1740, "torch.roll"]], "rot90() (in module torch)": [[1741, "torch.rot90"]], "round() (in module torch)": [[1742, "torch.round"]], "row_stack() (in module torch)": [[1743, "torch.row_stack"]], "rsqrt() (in module torch)": [[1744, "torch.rsqrt"]], "save() (in module torch)": [[1745, "torch.save"]], "scatter() (in module torch)": [[1746, "torch.scatter"]], "scatter_add() (in module torch)": [[1747, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1748, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1749, "torch.searchsorted"]], "seed() (in module torch)": [[1750, "torch.seed"]], "select() (in module torch)": [[1751, "torch.select"]], "select_scatter() (in module torch)": [[1752, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1753, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1754, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1755, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1756, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1757, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1758, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1759, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1760, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1761, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1762, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1763, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1764, "torch.set_warn_always"]], "sgn() (in module torch)": [[1765, "torch.sgn"]], "sigmoid() (in module torch)": [[1766, "torch.sigmoid"]], "sign() (in module torch)": [[1767, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1768, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1769, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1770, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1771, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1772, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1773, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1774, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1775, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1776, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1777, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1778, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1779, "torch.signbit"]], "sin() (in module torch)": [[1780, "torch.sin"]], "sinc() (in module torch)": [[1781, "torch.sinc"]], "sinh() (in module torch)": [[1782, "torch.sinh"]], "slice_scatter() (in module torch)": [[1783, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1784, "torch.slogdet"]], "smm() (in module torch)": [[1785, "torch.smm"]], "softmax() (in module torch)": [[1786, "torch.softmax"]], "sort() (in module torch)": [[1787, "torch.sort"]], "addmm() (in module torch.sparse)": [[1788, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1789, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1789, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1789, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1789, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1790, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1791, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1792, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1793, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1794, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1795, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1796, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1797, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1798, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1799, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1800, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1801, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1802, "torch.split"]], "sqrt() (in module torch)": [[1803, "torch.sqrt"]], "square() (in module torch)": [[1804, "torch.square"]], "squeeze() (in module torch)": [[1805, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1806, "torch.sspaddmm"]], "stack() (in module torch)": [[1807, "torch.stack"]], "std() (in module torch)": [[1808, "torch.std"]], "std_mean() (in module torch)": [[1809, "torch.std_mean"]], "stft() (in module torch)": [[1810, "torch.stft"]], "sub() (in module torch)": [[1811, "torch.sub"]], "subtract() (in module torch)": [[1812, "torch.subtract"]], "sum() (in module torch)": [[1813, "torch.sum"]], "svd() (in module torch)": [[1814, "torch.svd"]], "svd_lowrank() (in module torch)": [[1815, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1816, "torch.swapaxes"]], "swapdims() (in module torch)": [[1817, "torch.swapdims"]], "sym_float() (in module torch)": [[1818, "torch.sym_float"]], "sym_int() (in module torch)": [[1819, "torch.sym_int"]], "sym_max() (in module torch)": [[1820, "torch.sym_max"]], "sym_min() (in module torch)": [[1821, "torch.sym_min"]], "sym_not() (in module torch)": [[1822, "torch.sym_not"]], "t() (in module torch)": [[1823, "torch.t"]], "take() (in module torch)": [[1824, "torch.take"]], "take_along_dim() (in module torch)": [[1825, "torch.take_along_dim"]], "tan() (in module torch)": [[1826, "torch.tan"]], "tanh() (in module torch)": [[1827, "torch.tanh"]], "tensor() (in module torch)": [[1828, "torch.tensor"]], "tensor_split() (in module torch)": [[1829, "torch.tensor_split"]], "tensordot() (in module torch)": [[1830, "torch.tensordot"]], "tile() (in module torch)": [[1831, "torch.tile"]], "topk() (in module torch)": [[1832, "torch.topk"]], "trace() (in module torch)": [[1833, "torch.trace"]], "transpose() (in module torch)": [[1834, "torch.transpose"]], "trapezoid() (in module torch)": [[1835, "torch.trapezoid"]], "trapz() (in module torch)": [[1836, "torch.trapz"]], "triangular_solve() (in module torch)": [[1837, "torch.triangular_solve"]], "tril() (in module torch)": [[1838, "torch.tril"]], "tril_indices() (in module torch)": [[1839, "torch.tril_indices"]], "triu() (in module torch)": [[1840, "torch.triu"]], "triu_indices() (in module torch)": [[1841, "torch.triu_indices"]], "true_divide() (in module torch)": [[1842, "torch.true_divide"]], "trunc() (in module torch)": [[1843, "torch.trunc"]], "unbind() (in module torch)": [[1844, "torch.unbind"]], "unflatten() (in module torch)": [[1845, "torch.unflatten"]], "unique() (in module torch)": [[1846, "torch.unique"]], "unique_consecutive() (in module torch)": [[1847, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1848, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1849, "torch.use_deterministic_algorithms"]], "vander() (in module torch)": [[1850, "torch.vander"]], "var() (in module torch)": [[1851, "torch.var"]], "var_mean() (in module torch)": [[1852, "torch.var_mean"]], "vdot() (in module torch)": [[1853, "torch.vdot"]], "view_as_complex() (in module torch)": [[1854, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1855, "torch.view_as_real"]], "vmap() (in module torch)": [[1856, "torch.vmap"]], "vsplit() (in module torch)": [[1857, "torch.vsplit"]], "vstack() (in module torch)": [[1858, "torch.vstack"]], "where() (in module torch)": [[1859, "torch.where"]], "xlogy() (in module torch)": [[1860, "torch.xlogy"]], "zeros() (in module torch)": [[1861, "torch.zeros"]], "zeros_like() (in module torch)": [[1862, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1863, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1863, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1863, "torch.hub.help"]], "list() (in module torch.hub)": [[1863, "torch.hub.list"]], "load() (in module torch.hub)": [[1863, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1863, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1863, "torch.hub.set_dir"]], "torch.hub": [[1863, "module-torch.hub"]], "pytorch_jit": [[1866, "envvar-PYTORCH_JIT"]], "environment variable": [[1866, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1866, "torch.jit.export"]], "torch.jit": [[1866, "module-torch.jit"]], "torch.jit.mobile": [[1866, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1867, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1868, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1868, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1871, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1872, "module-torch.utils.jit"]], "library (class in torch.library)": [[1873, "torch.library.Library"]], "define() (torch.library.library method)": [[1873, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1873, "torch.library.Library.impl"]], "torch.linalg": [[1874, "module-torch.linalg"]], "torch._logging": [[1875, "module-torch._logging"]], "torch.masked": [[1876, "module-torch.masked"]], "torch.masked.maskedtensor": [[1876, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1877, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1878, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1878, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1879, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1879, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1879, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1879, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1879, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1879, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1879, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1879, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1879, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1879, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1879, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1879, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1879, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1879, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1879, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1879, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1879, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1879, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1879, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1879, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1879, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1880, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1881, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1881, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1881, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1881, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1883, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1883, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1883, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1883, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1883, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1883, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1884, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1884, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1884, "torch.nested.to_padded_tensor"]], "torch.nested": [[1884, "module-torch.nested"]], "torch.nn": [[1885, "module-torch.nn"]], "torch.nn.backends": [[1885, "module-torch.nn.backends"]], "torch.nn.modules": [[1885, "module-torch.nn.modules"]], "torch.nn.parallel": [[1885, "module-torch.nn.parallel"]], "torch.nn.utils": [[1885, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1885, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1887, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1887, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1887, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1887, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1887, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1887, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1887, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1887, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1887, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1887, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1887, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1887, "torch.nn.init.zeros_"]], "disable_log() (in module torch.onnx)": [[1907, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1907, "torch.onnx.dynamo_export"]], "enable_log() (in module torch.onnx)": [[1907, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1907, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1907, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1907, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1907, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1907, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1907, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1907, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1907, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1908, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1908, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1908, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1910, "torch.optim.Optimizer"]], "torch.optim": [[1910, "module-torch.optim"]], "directory (class in torch.package)": [[1911, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1911, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1911, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1911, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1911, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1911, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1911, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1911, "torch.package.PackageExporter.save_text"]], "torch.package": [[1911, "module-torch.package"]], "torch.package.analyze": [[1911, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1912, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1912, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1912, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1912, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1912, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1912, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1913, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1913, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1913, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1913, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1913, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1913, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1913, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1913, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1913, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1913, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1913, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1913, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1913, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1913, "module-torch.profiler"]], "torch.ao": [[1914, "module-torch.ao"]], "torch.ao.nn": [[1914, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1914, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1914, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1914, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1914, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1914, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1914, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1914, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1914, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1914, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1914, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1914, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1914, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1914, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1914, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1914, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1914, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1917, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1917, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1917, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1917, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1917, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1917, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1917, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1917, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1917, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1917, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1917, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1917, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1917, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1917, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1917, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1917, "module-torch.ao.nn.quantized.modules"]], "torch.nn.intrinsic": [[1917, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1917, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1917, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1917, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1917, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1917, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1917, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1917, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1917, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1917, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1917, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1917, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1917, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1917, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1917, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1917, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1917, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1917, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1917, "module-torch.quantization"]], "torch.quantization.fx": [[1917, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1918, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1918, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1918, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1918, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1918, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1918, "torch.random.set_rng_state"]], "torch.random": [[1918, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1919, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1919, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1919, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1919, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1919, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1919, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1919, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1919, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1919, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1919, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1919, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1919, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1919, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1919, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1919, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1919, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1919, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1919, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1919, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1919, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1919, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1919, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1919, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1919, "module-torch.distributed.rpc"]], "torch.signal": [[1922, "module-torch.signal"]], "torch.signal.windows": [[1922, "module-torch.signal.windows"]], "torch.sparse": [[1923, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1924, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1924, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1924, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1924, "torch.special.digamma"]], "entr() (in module torch.special)": [[1924, "torch.special.entr"]], "erf() (in module torch.special)": [[1924, "torch.special.erf"]], "erfc() (in module torch.special)": [[1924, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1924, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1924, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1924, "torch.special.exp2"]], "expit() (in module torch.special)": [[1924, "torch.special.expit"]], "expm1() (in module torch.special)": [[1924, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1924, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1924, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1924, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1924, "torch.special.i0"]], "i0e() (in module torch.special)": [[1924, "torch.special.i0e"]], "i1() (in module torch.special)": [[1924, "torch.special.i1"]], "i1e() (in module torch.special)": [[1924, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1924, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1924, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1924, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1924, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1924, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1924, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1924, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1924, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1924, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1924, "torch.special.psi"]], "round() (in module torch.special)": [[1924, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1924, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1924, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1924, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1924, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1924, "torch.special.spherical_bessel_j0"]], "torch.special": [[1924, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1924, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1924, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1924, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1925, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1925, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1925, "torch.ByteStorage"]], "charstorage (class in torch)": [[1925, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1925, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1925, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1925, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1925, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1925, "torch.HalfStorage"]], "intstorage (class in torch)": [[1925, "torch.IntStorage"]], "longstorage (class in torch)": [[1925, "torch.LongStorage"]], "qint32storage (class in torch)": [[1925, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1925, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1925, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1925, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1925, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1925, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1925, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1925, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1925, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1925, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1925, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1925, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1925, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1925, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1925, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1925, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1925, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1925, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1925, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1925, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1925, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1925, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1925, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1925, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1925, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1925, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1925, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1925, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1925, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1925, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1925, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1925, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1925, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1925, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1925, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1925, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1925, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1925, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1925, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1925, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1925, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1925, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1925, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1925, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1925, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1925, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1925, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1925, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1925, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.half"]], "int() (torch.typedstorage method)": [[1925, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1925, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1925, "torch.UntypedStorage.is_cuda"]], "is_pinned() (torch.typedstorage method)": [[1925, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1925, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1925, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1925, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1925, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1925, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1925, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1925, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1925, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1925, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1925, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1925, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1925, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1925, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1925, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1925, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1925, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1926, "torch.device"]], "dtype (class in torch)": [[1926, "torch.dtype"]], "layout (class in torch)": [[1926, "torch.layout"]], "memory_format (class in torch)": [[1926, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1928, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1928, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1929, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1929, "torch.Tensor.T"]], "tensor (class in torch)": [[1929, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1929, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1929, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1930, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1930, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1930, "torch.testing.make_tensor"]], "torch.testing": [[1930, "module-torch.testing"]], "symbool (class in torch)": [[1931, "torch.SymBool"]], "symfloat (class in torch)": [[1931, "torch.SymFloat"]], "symint (class in torch)": [[1931, "torch.SymInt"]], "tag (class in torch)": [[1931, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1931, "torch.torch.default_generator"]], "name (torch.tag property)": [[1931, "torch.Tag.name"]], "torch": [[1931, "module-torch"]], "torch.contrib": [[1931, "module-torch.contrib"]], "torch.utils": [[1931, "module-torch.utils"]], "torch.utils.backcompat": [[1931, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1931, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1931, "module-torch.utils.model_dump"]], "logger (class in torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1932, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1932, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1932, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1932, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1932, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1932, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1933, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1933, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1933, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1933, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1933, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1933, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1933, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1933, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1934, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1934, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1934, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1934, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1934, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1934, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1934, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1934, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1934, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1935, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1935, "torch.torch.iinfo"]]}})