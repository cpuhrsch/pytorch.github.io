Search.setIndex({"docnames": ["amp", "autograd", "backends", "benchmark_utils", "bottleneck", "checkpoint", "community/build_ci_governance", "community/contribution_guide", "community/design", "community/governance", "community/persons_of_interest", "compile/best-practices-for-backends", "compile/cudagraph_trees", "compile/custom-backends", "compile/deep-dive", "compile/dynamic-shapes", "compile/fake-tensor", "compile/faq", "compile/fine_grained_apis", "compile/get-started", "compile/guards-overview", "compile/index", "compile/inductor_profiling", "compile/nn-module", "compile/performance-dashboard", "compile/profiling_torch_compile", "compile/technical-overview", "compile/torchfunc-and-torchcompile", "compile/transformations", "compile/troubleshooting", "compiler", "complex_numbers", "config_mod", "cpp_extension", "cpp_index", "cpu", "cuda", "cuda._sanitizer", "cudnn_persistent_rnn", "cudnn_rnn_determinism", "data", "ddp_comm_hooks", "deploy", "distributed", "distributed.algorithms.join", "distributed.checkpoint", "distributed.elastic", "distributed.optim", "distributed.tensor.parallel", "distributions", "dlpack", "elastic/agent", "elastic/customization", "elastic/errors", "elastic/events", "elastic/examples", "elastic/kubernetes", "elastic/metrics", "elastic/multiprocessing", "elastic/quickstart", "elastic/rendezvous", "elastic/run", "elastic/timer", "elastic/train_script", "export", "fft", "fsdp", "func", "func.api", "func.batch_norm", "func.migrating", "func.ux_limitations", "func.whirlwind_tour", "futures", "fx", "generated/exportdb/index", "generated/exportdb/python.assert", "generated/exportdb/python.builtin", "generated/exportdb/python.closure", "generated/exportdb/python.context-manager", "generated/exportdb/python.control-flow", "generated/exportdb/python.data-structure", "generated/exportdb/torch.cond", "generated/exportdb/torch.dynamic-shape", "generated/exportdb/torch.escape-hatch", "generated/exportdb/torch.map", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx", "generated/onnx_diagnostics_rules/FXE0010:fx-pass", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version", "generated/torch.Generator", "generated/torch.Tensor.abs", "generated/torch.Tensor.abs_", "generated/torch.Tensor.absolute", "generated/torch.Tensor.absolute_", "generated/torch.Tensor.acos", "generated/torch.Tensor.acos_", "generated/torch.Tensor.acosh", "generated/torch.Tensor.acosh_", "generated/torch.Tensor.add", "generated/torch.Tensor.add_", "generated/torch.Tensor.addbmm", "generated/torch.Tensor.addbmm_", "generated/torch.Tensor.addcdiv", "generated/torch.Tensor.addcdiv_", "generated/torch.Tensor.addcmul", "generated/torch.Tensor.addcmul_", "generated/torch.Tensor.addmm", "generated/torch.Tensor.addmm_", "generated/torch.Tensor.addmv", "generated/torch.Tensor.addmv_", "generated/torch.Tensor.addr", "generated/torch.Tensor.addr_", "generated/torch.Tensor.adjoint", "generated/torch.Tensor.all", "generated/torch.Tensor.allclose", "generated/torch.Tensor.amax", "generated/torch.Tensor.amin", "generated/torch.Tensor.aminmax", "generated/torch.Tensor.angle", "generated/torch.Tensor.any", "generated/torch.Tensor.apply_", "generated/torch.Tensor.arccos", "generated/torch.Tensor.arccos_", "generated/torch.Tensor.arccosh", "generated/torch.Tensor.arccosh_", "generated/torch.Tensor.arcsin", "generated/torch.Tensor.arcsin_", "generated/torch.Tensor.arcsinh", "generated/torch.Tensor.arcsinh_", "generated/torch.Tensor.arctan", "generated/torch.Tensor.arctan2", "generated/torch.Tensor.arctan2_", "generated/torch.Tensor.arctan_", "generated/torch.Tensor.arctanh", "generated/torch.Tensor.arctanh_", "generated/torch.Tensor.argmax", "generated/torch.Tensor.argmin", "generated/torch.Tensor.argsort", "generated/torch.Tensor.argwhere", "generated/torch.Tensor.as_strided", "generated/torch.Tensor.as_subclass", "generated/torch.Tensor.asin", "generated/torch.Tensor.asin_", "generated/torch.Tensor.asinh", "generated/torch.Tensor.asinh_", "generated/torch.Tensor.atan", "generated/torch.Tensor.atan2", "generated/torch.Tensor.atan2_", "generated/torch.Tensor.atan_", "generated/torch.Tensor.atanh", "generated/torch.Tensor.atanh_", "generated/torch.Tensor.backward", "generated/torch.Tensor.baddbmm", "generated/torch.Tensor.baddbmm_", "generated/torch.Tensor.bernoulli", "generated/torch.Tensor.bernoulli_", "generated/torch.Tensor.bfloat16", "generated/torch.Tensor.bincount", "generated/torch.Tensor.bitwise_and", "generated/torch.Tensor.bitwise_and_", "generated/torch.Tensor.bitwise_left_shift", "generated/torch.Tensor.bitwise_left_shift_", "generated/torch.Tensor.bitwise_not", "generated/torch.Tensor.bitwise_not_", "generated/torch.Tensor.bitwise_or", "generated/torch.Tensor.bitwise_or_", "generated/torch.Tensor.bitwise_right_shift", "generated/torch.Tensor.bitwise_right_shift_", "generated/torch.Tensor.bitwise_xor", "generated/torch.Tensor.bitwise_xor_", "generated/torch.Tensor.bmm", "generated/torch.Tensor.bool", "generated/torch.Tensor.broadcast_to", "generated/torch.Tensor.byte", "generated/torch.Tensor.cauchy_", "generated/torch.Tensor.ccol_indices", "generated/torch.Tensor.cdouble", "generated/torch.Tensor.ceil", "generated/torch.Tensor.ceil_", "generated/torch.Tensor.cfloat", "generated/torch.Tensor.chalf", "generated/torch.Tensor.char", "generated/torch.Tensor.cholesky", "generated/torch.Tensor.cholesky_inverse", "generated/torch.Tensor.cholesky_solve", "generated/torch.Tensor.chunk", "generated/torch.Tensor.clamp", "generated/torch.Tensor.clamp_", "generated/torch.Tensor.clip", "generated/torch.Tensor.clip_", "generated/torch.Tensor.clone", "generated/torch.Tensor.coalesce", "generated/torch.Tensor.col_indices", "generated/torch.Tensor.conj", "generated/torch.Tensor.conj_physical", "generated/torch.Tensor.conj_physical_", "generated/torch.Tensor.contiguous", "generated/torch.Tensor.copy_", "generated/torch.Tensor.copysign", "generated/torch.Tensor.copysign_", "generated/torch.Tensor.corrcoef", "generated/torch.Tensor.cos", "generated/torch.Tensor.cos_", "generated/torch.Tensor.cosh", "generated/torch.Tensor.cosh_", "generated/torch.Tensor.count_nonzero", "generated/torch.Tensor.cov", "generated/torch.Tensor.cpu", "generated/torch.Tensor.cross", "generated/torch.Tensor.crow_indices", "generated/torch.Tensor.cuda", "generated/torch.Tensor.cummax", "generated/torch.Tensor.cummin", "generated/torch.Tensor.cumprod", "generated/torch.Tensor.cumprod_", "generated/torch.Tensor.cumsum", "generated/torch.Tensor.cumsum_", "generated/torch.Tensor.data_ptr", "generated/torch.Tensor.deg2rad", "generated/torch.Tensor.dense_dim", "generated/torch.Tensor.dequantize", "generated/torch.Tensor.det", "generated/torch.Tensor.detach", "generated/torch.Tensor.detach_", "generated/torch.Tensor.device", "generated/torch.Tensor.diag", "generated/torch.Tensor.diag_embed", "generated/torch.Tensor.diagflat", "generated/torch.Tensor.diagonal", "generated/torch.Tensor.diagonal_scatter", "generated/torch.Tensor.diff", "generated/torch.Tensor.digamma", "generated/torch.Tensor.digamma_", "generated/torch.Tensor.dim", "generated/torch.Tensor.dist", "generated/torch.Tensor.div", "generated/torch.Tensor.div_", "generated/torch.Tensor.divide", "generated/torch.Tensor.divide_", "generated/torch.Tensor.dot", "generated/torch.Tensor.double", "generated/torch.Tensor.dsplit", "generated/torch.Tensor.element_size", "generated/torch.Tensor.eq", "generated/torch.Tensor.eq_", "generated/torch.Tensor.equal", "generated/torch.Tensor.erf", "generated/torch.Tensor.erf_", "generated/torch.Tensor.erfc", "generated/torch.Tensor.erfc_", "generated/torch.Tensor.erfinv", "generated/torch.Tensor.erfinv_", "generated/torch.Tensor.exp", "generated/torch.Tensor.exp_", "generated/torch.Tensor.expand", "generated/torch.Tensor.expand_as", "generated/torch.Tensor.expm1", "generated/torch.Tensor.expm1_", "generated/torch.Tensor.exponential_", "generated/torch.Tensor.fill_", "generated/torch.Tensor.fill_diagonal_", "generated/torch.Tensor.fix", "generated/torch.Tensor.fix_", "generated/torch.Tensor.flatten", "generated/torch.Tensor.flip", "generated/torch.Tensor.fliplr", "generated/torch.Tensor.flipud", "generated/torch.Tensor.float", "generated/torch.Tensor.float_power", "generated/torch.Tensor.float_power_", "generated/torch.Tensor.floor", "generated/torch.Tensor.floor_", "generated/torch.Tensor.floor_divide", "generated/torch.Tensor.floor_divide_", "generated/torch.Tensor.fmax", "generated/torch.Tensor.fmin", "generated/torch.Tensor.fmod", "generated/torch.Tensor.fmod_", "generated/torch.Tensor.frac", "generated/torch.Tensor.frac_", "generated/torch.Tensor.frexp", "generated/torch.Tensor.gather", "generated/torch.Tensor.gcd", "generated/torch.Tensor.gcd_", "generated/torch.Tensor.ge", "generated/torch.Tensor.ge_", "generated/torch.Tensor.geometric_", "generated/torch.Tensor.geqrf", "generated/torch.Tensor.ger", "generated/torch.Tensor.get_device", "generated/torch.Tensor.grad", "generated/torch.Tensor.greater", "generated/torch.Tensor.greater_", "generated/torch.Tensor.greater_equal", "generated/torch.Tensor.greater_equal_", "generated/torch.Tensor.gt", "generated/torch.Tensor.gt_", "generated/torch.Tensor.half", "generated/torch.Tensor.hardshrink", "generated/torch.Tensor.heaviside", "generated/torch.Tensor.histc", "generated/torch.Tensor.histogram", "generated/torch.Tensor.hsplit", "generated/torch.Tensor.hypot", "generated/torch.Tensor.hypot_", "generated/torch.Tensor.i0", "generated/torch.Tensor.i0_", "generated/torch.Tensor.igamma", "generated/torch.Tensor.igamma_", "generated/torch.Tensor.igammac", "generated/torch.Tensor.igammac_", "generated/torch.Tensor.imag", "generated/torch.Tensor.index_add", "generated/torch.Tensor.index_add_", "generated/torch.Tensor.index_copy", "generated/torch.Tensor.index_copy_", "generated/torch.Tensor.index_fill", "generated/torch.Tensor.index_fill_", "generated/torch.Tensor.index_put", "generated/torch.Tensor.index_put_", "generated/torch.Tensor.index_reduce", "generated/torch.Tensor.index_reduce_", "generated/torch.Tensor.index_select", "generated/torch.Tensor.indices", "generated/torch.Tensor.inner", "generated/torch.Tensor.int", "generated/torch.Tensor.int_repr", "generated/torch.Tensor.inverse", "generated/torch.Tensor.is_coalesced", "generated/torch.Tensor.is_complex", "generated/torch.Tensor.is_conj", "generated/torch.Tensor.is_contiguous", "generated/torch.Tensor.is_cuda", "generated/torch.Tensor.is_floating_point", "generated/torch.Tensor.is_inference", "generated/torch.Tensor.is_leaf", "generated/torch.Tensor.is_meta", "generated/torch.Tensor.is_pinned", "generated/torch.Tensor.is_quantized", "generated/torch.Tensor.is_set_to", "generated/torch.Tensor.is_shared", "generated/torch.Tensor.is_signed", "generated/torch.Tensor.is_sparse", "generated/torch.Tensor.is_sparse_csr", "generated/torch.Tensor.isclose", "generated/torch.Tensor.isfinite", "generated/torch.Tensor.isinf", "generated/torch.Tensor.isnan", "generated/torch.Tensor.isneginf", "generated/torch.Tensor.isposinf", "generated/torch.Tensor.isreal", "generated/torch.Tensor.istft", "generated/torch.Tensor.item", "generated/torch.Tensor.itemsize", "generated/torch.Tensor.kthvalue", "generated/torch.Tensor.lcm", "generated/torch.Tensor.lcm_", "generated/torch.Tensor.ldexp", "generated/torch.Tensor.ldexp_", "generated/torch.Tensor.le", "generated/torch.Tensor.le_", "generated/torch.Tensor.lerp", "generated/torch.Tensor.lerp_", "generated/torch.Tensor.less", "generated/torch.Tensor.less_", "generated/torch.Tensor.less_equal", "generated/torch.Tensor.less_equal_", "generated/torch.Tensor.lgamma", "generated/torch.Tensor.lgamma_", "generated/torch.Tensor.log", "generated/torch.Tensor.log10", "generated/torch.Tensor.log10_", "generated/torch.Tensor.log1p", "generated/torch.Tensor.log1p_", "generated/torch.Tensor.log2", "generated/torch.Tensor.log2_", "generated/torch.Tensor.log_", "generated/torch.Tensor.log_normal_", "generated/torch.Tensor.logaddexp", "generated/torch.Tensor.logaddexp2", "generated/torch.Tensor.logcumsumexp", "generated/torch.Tensor.logdet", "generated/torch.Tensor.logical_and", "generated/torch.Tensor.logical_and_", "generated/torch.Tensor.logical_not", "generated/torch.Tensor.logical_not_", "generated/torch.Tensor.logical_or", "generated/torch.Tensor.logical_or_", "generated/torch.Tensor.logical_xor", "generated/torch.Tensor.logical_xor_", "generated/torch.Tensor.logit", "generated/torch.Tensor.logit_", "generated/torch.Tensor.logsumexp", "generated/torch.Tensor.long", "generated/torch.Tensor.lt", "generated/torch.Tensor.lt_", "generated/torch.Tensor.lu", "generated/torch.Tensor.lu_solve", "generated/torch.Tensor.map_", "generated/torch.Tensor.masked_fill", "generated/torch.Tensor.masked_fill_", "generated/torch.Tensor.masked_scatter", "generated/torch.Tensor.masked_scatter_", "generated/torch.Tensor.masked_select", "generated/torch.Tensor.matmul", "generated/torch.Tensor.matrix_exp", "generated/torch.Tensor.matrix_power", "generated/torch.Tensor.max", "generated/torch.Tensor.maximum", "generated/torch.Tensor.mean", "generated/torch.Tensor.median", "generated/torch.Tensor.min", "generated/torch.Tensor.minimum", "generated/torch.Tensor.mm", "generated/torch.Tensor.mode", "generated/torch.Tensor.moveaxis", "generated/torch.Tensor.movedim", "generated/torch.Tensor.msort", "generated/torch.Tensor.mul", "generated/torch.Tensor.mul_", "generated/torch.Tensor.multinomial", "generated/torch.Tensor.multiply", "generated/torch.Tensor.multiply_", "generated/torch.Tensor.mv", "generated/torch.Tensor.mvlgamma", "generated/torch.Tensor.mvlgamma_", "generated/torch.Tensor.nan_to_num", "generated/torch.Tensor.nan_to_num_", "generated/torch.Tensor.nanmean", "generated/torch.Tensor.nanmedian", "generated/torch.Tensor.nanquantile", "generated/torch.Tensor.nansum", "generated/torch.Tensor.narrow", "generated/torch.Tensor.narrow_copy", "generated/torch.Tensor.nbytes", "generated/torch.Tensor.ndim", "generated/torch.Tensor.ndimension", "generated/torch.Tensor.ne", "generated/torch.Tensor.ne_", "generated/torch.Tensor.neg", "generated/torch.Tensor.neg_", "generated/torch.Tensor.negative", "generated/torch.Tensor.negative_", "generated/torch.Tensor.nelement", "generated/torch.Tensor.new_empty", "generated/torch.Tensor.new_full", "generated/torch.Tensor.new_ones", "generated/torch.Tensor.new_tensor", "generated/torch.Tensor.new_zeros", "generated/torch.Tensor.nextafter", "generated/torch.Tensor.nextafter_", "generated/torch.Tensor.nonzero", "generated/torch.Tensor.norm", "generated/torch.Tensor.normal_", "generated/torch.Tensor.not_equal", "generated/torch.Tensor.not_equal_", "generated/torch.Tensor.numel", "generated/torch.Tensor.numpy", "generated/torch.Tensor.orgqr", "generated/torch.Tensor.ormqr", "generated/torch.Tensor.outer", "generated/torch.Tensor.permute", "generated/torch.Tensor.pin_memory", "generated/torch.Tensor.pinverse", "generated/torch.Tensor.polygamma", "generated/torch.Tensor.polygamma_", "generated/torch.Tensor.positive", "generated/torch.Tensor.pow", "generated/torch.Tensor.pow_", "generated/torch.Tensor.prod", "generated/torch.Tensor.put_", "generated/torch.Tensor.q_per_channel_axis", "generated/torch.Tensor.q_per_channel_scales", "generated/torch.Tensor.q_per_channel_zero_points", "generated/torch.Tensor.q_scale", "generated/torch.Tensor.q_zero_point", "generated/torch.Tensor.qr", "generated/torch.Tensor.qscheme", "generated/torch.Tensor.quantile", "generated/torch.Tensor.rad2deg", "generated/torch.Tensor.random_", "generated/torch.Tensor.ravel", "generated/torch.Tensor.real", "generated/torch.Tensor.reciprocal", "generated/torch.Tensor.reciprocal_", "generated/torch.Tensor.record_stream", "generated/torch.Tensor.register_hook", "generated/torch.Tensor.remainder", "generated/torch.Tensor.remainder_", "generated/torch.Tensor.renorm", "generated/torch.Tensor.renorm_", "generated/torch.Tensor.repeat", "generated/torch.Tensor.repeat_interleave", "generated/torch.Tensor.requires_grad", "generated/torch.Tensor.requires_grad_", "generated/torch.Tensor.reshape", "generated/torch.Tensor.reshape_as", "generated/torch.Tensor.resize_", "generated/torch.Tensor.resize_as_", "generated/torch.Tensor.resolve_conj", "generated/torch.Tensor.resolve_neg", "generated/torch.Tensor.retain_grad", "generated/torch.Tensor.retains_grad", "generated/torch.Tensor.roll", "generated/torch.Tensor.rot90", "generated/torch.Tensor.round", "generated/torch.Tensor.round_", "generated/torch.Tensor.row_indices", "generated/torch.Tensor.rsqrt", "generated/torch.Tensor.rsqrt_", "generated/torch.Tensor.scatter", "generated/torch.Tensor.scatter_", "generated/torch.Tensor.scatter_add", "generated/torch.Tensor.scatter_add_", "generated/torch.Tensor.scatter_reduce", "generated/torch.Tensor.scatter_reduce_", "generated/torch.Tensor.select", "generated/torch.Tensor.select_scatter", "generated/torch.Tensor.set_", "generated/torch.Tensor.sgn", "generated/torch.Tensor.sgn_", "generated/torch.Tensor.shape", "generated/torch.Tensor.share_memory_", "generated/torch.Tensor.short", "generated/torch.Tensor.sigmoid", "generated/torch.Tensor.sigmoid_", "generated/torch.Tensor.sign", "generated/torch.Tensor.sign_", "generated/torch.Tensor.signbit", "generated/torch.Tensor.sin", "generated/torch.Tensor.sin_", "generated/torch.Tensor.sinc", "generated/torch.Tensor.sinc_", "generated/torch.Tensor.sinh", "generated/torch.Tensor.sinh_", "generated/torch.Tensor.size", "generated/torch.Tensor.slice_scatter", "generated/torch.Tensor.slogdet", "generated/torch.Tensor.smm", "generated/torch.Tensor.softmax", "generated/torch.Tensor.sort", "generated/torch.Tensor.sparse_dim", "generated/torch.Tensor.sparse_mask", "generated/torch.Tensor.sparse_resize_", "generated/torch.Tensor.sparse_resize_and_clear_", "generated/torch.Tensor.split", "generated/torch.Tensor.sqrt", "generated/torch.Tensor.sqrt_", "generated/torch.Tensor.square", "generated/torch.Tensor.square_", "generated/torch.Tensor.squeeze", "generated/torch.Tensor.squeeze_", "generated/torch.Tensor.sspaddmm", "generated/torch.Tensor.std", "generated/torch.Tensor.stft", "generated/torch.Tensor.storage", "generated/torch.Tensor.storage_offset", "generated/torch.Tensor.storage_type", "generated/torch.Tensor.stride", "generated/torch.Tensor.sub", "generated/torch.Tensor.sub_", "generated/torch.Tensor.subtract", "generated/torch.Tensor.subtract_", "generated/torch.Tensor.sum", "generated/torch.Tensor.sum_to_size", "generated/torch.Tensor.svd", "generated/torch.Tensor.swapaxes", "generated/torch.Tensor.swapdims", "generated/torch.Tensor.t", "generated/torch.Tensor.t_", "generated/torch.Tensor.take", "generated/torch.Tensor.take_along_dim", "generated/torch.Tensor.tan", "generated/torch.Tensor.tan_", "generated/torch.Tensor.tanh", "generated/torch.Tensor.tanh_", "generated/torch.Tensor.tensor_split", "generated/torch.Tensor.tile", "generated/torch.Tensor.to", "generated/torch.Tensor.to_dense", "generated/torch.Tensor.to_mkldnn", "generated/torch.Tensor.to_sparse", "generated/torch.Tensor.to_sparse_bsc", "generated/torch.Tensor.to_sparse_bsr", "generated/torch.Tensor.to_sparse_coo", "generated/torch.Tensor.to_sparse_csc", "generated/torch.Tensor.to_sparse_csr", "generated/torch.Tensor.tolist", "generated/torch.Tensor.topk", "generated/torch.Tensor.trace", "generated/torch.Tensor.transpose", "generated/torch.Tensor.transpose_", "generated/torch.Tensor.triangular_solve", "generated/torch.Tensor.tril", "generated/torch.Tensor.tril_", "generated/torch.Tensor.triu", "generated/torch.Tensor.triu_", "generated/torch.Tensor.true_divide", "generated/torch.Tensor.true_divide_", "generated/torch.Tensor.trunc", "generated/torch.Tensor.trunc_", "generated/torch.Tensor.type", "generated/torch.Tensor.type_as", "generated/torch.Tensor.unbind", "generated/torch.Tensor.unflatten", "generated/torch.Tensor.unfold", "generated/torch.Tensor.uniform_", "generated/torch.Tensor.unique", "generated/torch.Tensor.unique_consecutive", "generated/torch.Tensor.unsqueeze", "generated/torch.Tensor.unsqueeze_", "generated/torch.Tensor.untyped_storage", "generated/torch.Tensor.values", "generated/torch.Tensor.var", "generated/torch.Tensor.vdot", "generated/torch.Tensor.view", "generated/torch.Tensor.view_as", "generated/torch.Tensor.vsplit", "generated/torch.Tensor.where", "generated/torch.Tensor.xlogy", "generated/torch.Tensor.xlogy_", "generated/torch.Tensor.zero_", "generated/torch._assert", "generated/torch._foreach_abs", "generated/torch._foreach_abs_", "generated/torch._foreach_acos", "generated/torch._foreach_acos_", "generated/torch._foreach_asin", "generated/torch._foreach_asin_", "generated/torch._foreach_atan", "generated/torch._foreach_atan_", "generated/torch._foreach_ceil", "generated/torch._foreach_ceil_", "generated/torch._foreach_cos", "generated/torch._foreach_cos_", "generated/torch._foreach_cosh", "generated/torch._foreach_cosh_", "generated/torch._foreach_erf", "generated/torch._foreach_erf_", "generated/torch._foreach_erfc", "generated/torch._foreach_erfc_", "generated/torch._foreach_exp", "generated/torch._foreach_exp_", "generated/torch._foreach_expm1", "generated/torch._foreach_expm1_", "generated/torch._foreach_floor", "generated/torch._foreach_floor_", "generated/torch._foreach_frac", "generated/torch._foreach_frac_", "generated/torch._foreach_lgamma", "generated/torch._foreach_lgamma_", "generated/torch._foreach_log", "generated/torch._foreach_log10", "generated/torch._foreach_log10_", "generated/torch._foreach_log1p", "generated/torch._foreach_log1p_", "generated/torch._foreach_log2", "generated/torch._foreach_log2_", "generated/torch._foreach_log_", "generated/torch._foreach_neg", "generated/torch._foreach_neg_", "generated/torch._foreach_reciprocal", "generated/torch._foreach_reciprocal_", "generated/torch._foreach_round", "generated/torch._foreach_round_", "generated/torch._foreach_sigmoid", "generated/torch._foreach_sigmoid_", "generated/torch._foreach_sin", "generated/torch._foreach_sin_", "generated/torch._foreach_sinh", "generated/torch._foreach_sinh_", "generated/torch._foreach_sqrt", "generated/torch._foreach_sqrt_", "generated/torch._foreach_tan", "generated/torch._foreach_tan_", "generated/torch._foreach_trunc", "generated/torch._foreach_trunc_", "generated/torch._foreach_zero_", "generated/torch._logging.set_logs", "generated/torch.abs", "generated/torch.absolute", "generated/torch.acos", "generated/torch.acosh", "generated/torch.add", "generated/torch.addbmm", "generated/torch.addcdiv", "generated/torch.addcmul", "generated/torch.addmm", "generated/torch.addmv", "generated/torch.addr", "generated/torch.adjoint", "generated/torch.all", "generated/torch.allclose", "generated/torch.amax", "generated/torch.amin", "generated/torch.aminmax", "generated/torch.angle", "generated/torch.any", "generated/torch.ao.nn.intrinsic.BNReLU2d", "generated/torch.ao.nn.intrinsic.BNReLU3d", "generated/torch.ao.nn.intrinsic.ConvBn1d", "generated/torch.ao.nn.intrinsic.ConvBn2d", "generated/torch.ao.nn.intrinsic.ConvBn3d", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.ConvReLU1d", "generated/torch.ao.nn.intrinsic.ConvReLU2d", "generated/torch.ao.nn.intrinsic.ConvReLU3d", "generated/torch.ao.nn.intrinsic.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d", "generated/torch.ao.nn.intrinsic.qat.LinearReLU", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU", "generated/torch.ao.nn.qat.Conv2d", "generated/torch.ao.nn.qat.Conv3d", "generated/torch.ao.nn.qat.Linear", "generated/torch.ao.nn.qat.dynamic.Linear", "generated/torch.ao.nn.quantizable.LSTM", "generated/torch.ao.nn.quantizable.MultiheadAttention", "generated/torch.ao.nn.quantized.BatchNorm2d", "generated/torch.ao.nn.quantized.BatchNorm3d", "generated/torch.ao.nn.quantized.Conv1d", "generated/torch.ao.nn.quantized.Conv2d", "generated/torch.ao.nn.quantized.Conv3d", "generated/torch.ao.nn.quantized.ConvTranspose1d", "generated/torch.ao.nn.quantized.ConvTranspose2d", "generated/torch.ao.nn.quantized.ConvTranspose3d", "generated/torch.ao.nn.quantized.ELU", "generated/torch.ao.nn.quantized.Embedding", "generated/torch.ao.nn.quantized.EmbeddingBag", "generated/torch.ao.nn.quantized.FXFloatFunctional", "generated/torch.ao.nn.quantized.FloatFunctional", "generated/torch.ao.nn.quantized.GroupNorm", "generated/torch.ao.nn.quantized.Hardswish", "generated/torch.ao.nn.quantized.InstanceNorm1d", "generated/torch.ao.nn.quantized.InstanceNorm2d", "generated/torch.ao.nn.quantized.InstanceNorm3d", "generated/torch.ao.nn.quantized.LayerNorm", "generated/torch.ao.nn.quantized.LeakyReLU", "generated/torch.ao.nn.quantized.Linear", "generated/torch.ao.nn.quantized.QFunctional", "generated/torch.ao.nn.quantized.ReLU6", "generated/torch.ao.nn.quantized.Sigmoid", "generated/torch.ao.nn.quantized.dynamic.GRU", "generated/torch.ao.nn.quantized.dynamic.GRUCell", "generated/torch.ao.nn.quantized.dynamic.LSTM", "generated/torch.ao.nn.quantized.dynamic.LSTMCell", "generated/torch.ao.nn.quantized.dynamic.Linear", "generated/torch.ao.nn.quantized.dynamic.RNNCell", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d", "generated/torch.ao.nn.quantized.functional.avg_pool2d", "generated/torch.ao.nn.quantized.functional.avg_pool3d", "generated/torch.ao.nn.quantized.functional.celu", "generated/torch.ao.nn.quantized.functional.clamp", "generated/torch.ao.nn.quantized.functional.conv1d", "generated/torch.ao.nn.quantized.functional.conv2d", "generated/torch.ao.nn.quantized.functional.conv3d", "generated/torch.ao.nn.quantized.functional.elu", "generated/torch.ao.nn.quantized.functional.hardsigmoid", "generated/torch.ao.nn.quantized.functional.hardswish", "generated/torch.ao.nn.quantized.functional.hardtanh", "generated/torch.ao.nn.quantized.functional.interpolate", "generated/torch.ao.nn.quantized.functional.leaky_relu", "generated/torch.ao.nn.quantized.functional.linear", "generated/torch.ao.nn.quantized.functional.max_pool1d", "generated/torch.ao.nn.quantized.functional.max_pool2d", "generated/torch.ao.nn.quantized.functional.threshold", "generated/torch.ao.nn.quantized.functional.upsample", "generated/torch.ao.nn.quantized.functional.upsample_bilinear", "generated/torch.ao.nn.quantized.functional.upsample_nearest", "generated/torch.ao.quantization.DeQuantStub", "generated/torch.ao.quantization.QuantStub", "generated/torch.ao.quantization.QuantWrapper", "generated/torch.ao.quantization.add_quant_dequant", "generated/torch.ao.quantization.backend_config.BackendConfig", "generated/torch.ao.quantization.backend_config.BackendPatternConfig", "generated/torch.ao.quantization.backend_config.DTypeConfig", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints", "generated/torch.ao.quantization.backend_config.ObservationType", "generated/torch.ao.quantization.convert", "generated/torch.ao.quantization.default_eval_fn", "generated/torch.ao.quantization.fake_quantize.FakeQuantize", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "generated/torch.ao.quantization.fake_quantize.default_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant", "generated/torch.ao.quantization.fake_quantize.disable_observer", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant", "generated/torch.ao.quantization.fake_quantize.enable_observer", "generated/torch.ao.quantization.fuse_modules", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "generated/torch.ao.quantization.observer.HistogramObserver", "generated/torch.ao.quantization.observer.MinMaxObserver", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.NoopObserver", "generated/torch.ao.quantization.observer.ObserverBase", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver", "generated/torch.ao.quantization.observer.PlaceholderObserver", "generated/torch.ao.quantization.observer.RecordingObserver", "generated/torch.ao.quantization.observer.default_debug_observer", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer", "generated/torch.ao.quantization.observer.default_float_qparams_observer", "generated/torch.ao.quantization.observer.default_histogram_observer", "generated/torch.ao.quantization.observer.default_observer", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer", "generated/torch.ao.quantization.observer.default_placeholder_observer", "generated/torch.ao.quantization.observer.default_weight_observer", "generated/torch.ao.quantization.observer.get_observer_state_dict", "generated/torch.ao.quantization.observer.load_observer_state_dict", "generated/torch.ao.quantization.prepare", "generated/torch.ao.quantization.prepare_qat", "generated/torch.ao.quantization.propagate_qconfig_", "generated/torch.ao.quantization.qconfig.QConfig", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig", "generated/torch.ao.quantization.qconfig.default_debug_qconfig", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2", "generated/torch.ao.quantization.qconfig.default_qconfig", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig", "generated/torch.ao.quantization.qconfig.float16_static_qconfig", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping", "generated/torch.ao.quantization.quantize", "generated/torch.ao.quantization.quantize_dynamic", "generated/torch.ao.quantization.quantize_fx.convert_fx", "generated/torch.ao.quantization.quantize_fx.fuse_fx", "generated/torch.ao.quantization.quantize_fx.prepare_fx", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx", "generated/torch.ao.quantization.quantize_qat", "generated/torch.ao.quantization.swap_module", "generated/torch.arange", "generated/torch.arccos", "generated/torch.arccosh", "generated/torch.arcsin", "generated/torch.arcsinh", "generated/torch.arctan", "generated/torch.arctan2", "generated/torch.arctanh", "generated/torch.are_deterministic_algorithms_enabled", "generated/torch.argmax", "generated/torch.argmin", "generated/torch.argsort", "generated/torch.argwhere", "generated/torch.as_strided", "generated/torch.as_tensor", "generated/torch.asarray", "generated/torch.asin", "generated/torch.asinh", "generated/torch.atan", "generated/torch.atan2", "generated/torch.atanh", "generated/torch.atleast_1d", "generated/torch.atleast_2d", "generated/torch.atleast_3d", "generated/torch.autograd.Function.backward", "generated/torch.autograd.Function.forward", "generated/torch.autograd.Function.jvp", "generated/torch.autograd.Function.vmap", "generated/torch.autograd.backward", "generated/torch.autograd.forward_ad.dual_level", "generated/torch.autograd.forward_ad.make_dual", "generated/torch.autograd.forward_ad.unpack_dual", "generated/torch.autograd.function.FunctionCtx.mark_dirty", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable", "generated/torch.autograd.function.FunctionCtx.save_for_backward", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads", "generated/torch.autograd.functional.hessian", "generated/torch.autograd.functional.hvp", "generated/torch.autograd.functional.jacobian", "generated/torch.autograd.functional.jvp", "generated/torch.autograd.functional.vhp", "generated/torch.autograd.functional.vjp", "generated/torch.autograd.grad", "generated/torch.autograd.gradcheck", "generated/torch.autograd.gradgradcheck", "generated/torch.autograd.graph.Node.metadata", "generated/torch.autograd.graph.Node.name", "generated/torch.autograd.graph.Node.next_functions", "generated/torch.autograd.graph.Node.register_hook", "generated/torch.autograd.graph.Node.register_prehook", "generated/torch.autograd.profiler.load_nvprof", "generated/torch.autograd.profiler.profile.export_chrome_trace", "generated/torch.autograd.profiler.profile.key_averages", "generated/torch.autograd.profiler.profile.self_cpu_time_total", "generated/torch.autograd.profiler.profile.total_average", "generated/torch.baddbmm", "generated/torch.bartlett_window", "generated/torch.bernoulli", "generated/torch.bincount", "generated/torch.bitwise_and", "generated/torch.bitwise_left_shift", "generated/torch.bitwise_not", "generated/torch.bitwise_or", "generated/torch.bitwise_right_shift", "generated/torch.bitwise_xor", "generated/torch.blackman_window", "generated/torch.block_diag", "generated/torch.bmm", "generated/torch.broadcast_shapes", "generated/torch.broadcast_tensors", "generated/torch.broadcast_to", "generated/torch.bucketize", "generated/torch.can_cast", "generated/torch.cartesian_prod", "generated/torch.cat", "generated/torch.cdist", "generated/torch.ceil", "generated/torch.chain_matmul", "generated/torch.cholesky", "generated/torch.cholesky_inverse", "generated/torch.cholesky_solve", "generated/torch.chunk", "generated/torch.clamp", "generated/torch.clip", "generated/torch.clone", "generated/torch.column_stack", "generated/torch.combinations", "generated/torch.compile", "generated/torch.compiled_with_cxx11_abi", "generated/torch.compiler.allow_in_graph", "generated/torch.compiler.assume_constant_result", "generated/torch.compiler.compile", "generated/torch.compiler.disable", "generated/torch.compiler.list_backends", "generated/torch.compiler.reset", "generated/torch.complex", "generated/torch.concat", "generated/torch.concatenate", "generated/torch.conj", "generated/torch.conj_physical", "generated/torch.copysign", "generated/torch.corrcoef", "generated/torch.cos", "generated/torch.cosh", "generated/torch.count_nonzero", "generated/torch.cov", "generated/torch.cpu.Stream", "generated/torch.cpu.StreamContext", "generated/torch.cpu.current_stream", "generated/torch.cpu.device_count", "generated/torch.cpu.is_available", "generated/torch.cpu.stream", "generated/torch.cpu.synchronize", "generated/torch.cross", "generated/torch.cuda.CUDAGraph", "generated/torch.cuda.CUDAPluggableAllocator", "generated/torch.cuda.Event", "generated/torch.cuda.ExternalStream", "generated/torch.cuda.OutOfMemoryError", "generated/torch.cuda.Stream", "generated/torch.cuda.StreamContext", "generated/torch.cuda.caching_allocator_alloc", "generated/torch.cuda.caching_allocator_delete", "generated/torch.cuda.can_device_access_peer", "generated/torch.cuda.change_current_allocator", "generated/torch.cuda.clock_rate", "generated/torch.cuda.comm.broadcast", "generated/torch.cuda.comm.broadcast_coalesced", "generated/torch.cuda.comm.gather", "generated/torch.cuda.comm.reduce_add", "generated/torch.cuda.comm.scatter", "generated/torch.cuda.current_blas_handle", "generated/torch.cuda.current_device", "generated/torch.cuda.current_stream", "generated/torch.cuda.default_stream", "generated/torch.cuda.device", "generated/torch.cuda.device_count", "generated/torch.cuda.device_of", "generated/torch.cuda.empty_cache", "generated/torch.cuda.get_allocator_backend", "generated/torch.cuda.get_arch_list", "generated/torch.cuda.get_device_capability", "generated/torch.cuda.get_device_name", "generated/torch.cuda.get_device_properties", "generated/torch.cuda.get_gencode_flags", "generated/torch.cuda.get_rng_state", "generated/torch.cuda.get_rng_state_all", "generated/torch.cuda.get_sync_debug_mode", "generated/torch.cuda.graph", "generated/torch.cuda.graph_pool_handle", "generated/torch.cuda.init", "generated/torch.cuda.initial_seed", "generated/torch.cuda.ipc_collect", "generated/torch.cuda.is_available", "generated/torch.cuda.is_current_stream_capturing", "generated/torch.cuda.is_initialized", "generated/torch.cuda.jiterator._create_jit_fn", "generated/torch.cuda.jiterator._create_multi_output_jit_fn", "generated/torch.cuda.list_gpu_processes", "generated/torch.cuda.make_graphed_callables", "generated/torch.cuda.manual_seed", "generated/torch.cuda.manual_seed_all", "generated/torch.cuda.max_memory_allocated", "generated/torch.cuda.max_memory_cached", "generated/torch.cuda.max_memory_reserved", "generated/torch.cuda.mem_get_info", "generated/torch.cuda.memory_allocated", "generated/torch.cuda.memory_cached", "generated/torch.cuda.memory_reserved", "generated/torch.cuda.memory_snapshot", "generated/torch.cuda.memory_stats", "generated/torch.cuda.memory_summary", "generated/torch.cuda.memory_usage", "generated/torch.cuda.nvtx.mark", "generated/torch.cuda.nvtx.range_pop", "generated/torch.cuda.nvtx.range_push", "generated/torch.cuda.power_draw", "generated/torch.cuda.reset_max_memory_allocated", "generated/torch.cuda.reset_max_memory_cached", "generated/torch.cuda.reset_peak_memory_stats", "generated/torch.cuda.seed", "generated/torch.cuda.seed_all", "generated/torch.cuda.set_device", "generated/torch.cuda.set_per_process_memory_fraction", "generated/torch.cuda.set_rng_state", "generated/torch.cuda.set_rng_state_all", "generated/torch.cuda.set_stream", "generated/torch.cuda.set_sync_debug_mode", "generated/torch.cuda.stream", "generated/torch.cuda.synchronize", "generated/torch.cuda.temperature", "generated/torch.cuda.utilization", "generated/torch.cummax", "generated/torch.cummin", "generated/torch.cumprod", "generated/torch.cumsum", "generated/torch.cumulative_trapezoid", "generated/torch.deg2rad", "generated/torch.dequantize", "generated/torch.det", "generated/torch.diag", "generated/torch.diag_embed", "generated/torch.diagflat", "generated/torch.diagonal", "generated/torch.diagonal_scatter", "generated/torch.diff", "generated/torch.digamma", "generated/torch.dist", "generated/torch.div", "generated/torch.divide", "generated/torch.dot", "generated/torch.dsplit", "generated/torch.dstack", "generated/torch.einsum", "generated/torch.empty", "generated/torch.empty_like", "generated/torch.empty_strided", "generated/torch.enable_grad", "generated/torch.eq", "generated/torch.equal", "generated/torch.erf", "generated/torch.erfc", "generated/torch.erfinv", "generated/torch.exp", "generated/torch.exp2", "generated/torch.expm1", "generated/torch.eye", "generated/torch.fake_quantize_per_channel_affine", "generated/torch.fake_quantize_per_tensor_affine", "generated/torch.fft.fft", "generated/torch.fft.fft2", "generated/torch.fft.fftfreq", "generated/torch.fft.fftn", "generated/torch.fft.fftshift", "generated/torch.fft.hfft", "generated/torch.fft.hfft2", "generated/torch.fft.hfftn", "generated/torch.fft.ifft", "generated/torch.fft.ifft2", "generated/torch.fft.ifftn", "generated/torch.fft.ifftshift", "generated/torch.fft.ihfft", "generated/torch.fft.ihfft2", "generated/torch.fft.ihfftn", "generated/torch.fft.irfft", "generated/torch.fft.irfft2", "generated/torch.fft.irfftn", "generated/torch.fft.rfft", "generated/torch.fft.rfft2", "generated/torch.fft.rfftfreq", "generated/torch.fft.rfftn", "generated/torch.fix", "generated/torch.flatten", "generated/torch.flip", "generated/torch.fliplr", "generated/torch.flipud", "generated/torch.float_power", "generated/torch.floor", "generated/torch.floor_divide", "generated/torch.fmax", "generated/torch.fmin", "generated/torch.fmod", "generated/torch.frac", "generated/torch.frexp", "generated/torch.from_dlpack", "generated/torch.from_numpy", "generated/torch.frombuffer", "generated/torch.full", "generated/torch.full_like", "generated/torch.func.functional_call", "generated/torch.func.functionalize", "generated/torch.func.grad", "generated/torch.func.grad_and_value", "generated/torch.func.hessian", "generated/torch.func.jacfwd", "generated/torch.func.jacrev", "generated/torch.func.jvp", "generated/torch.func.linearize", "generated/torch.func.replace_all_batch_norm_modules_", "generated/torch.func.stack_module_state", "generated/torch.func.vjp", "generated/torch.func.vmap", "generated/torch.gather", "generated/torch.gcd", "generated/torch.ge", "generated/torch.geqrf", "generated/torch.ger", "generated/torch.get_default_dtype", "generated/torch.get_deterministic_debug_mode", "generated/torch.get_float32_matmul_precision", "generated/torch.get_num_interop_threads", "generated/torch.get_num_threads", "generated/torch.get_rng_state", "generated/torch.gradient", "generated/torch.greater", "generated/torch.greater_equal", "generated/torch.gt", "generated/torch.hamming_window", "generated/torch.hann_window", "generated/torch.heaviside", "generated/torch.histc", "generated/torch.histogram", "generated/torch.histogramdd", "generated/torch.hsplit", "generated/torch.hspmm", "generated/torch.hstack", "generated/torch.hypot", "generated/torch.i0", "generated/torch.igamma", "generated/torch.igammac", "generated/torch.imag", "generated/torch.index_add", "generated/torch.index_copy", "generated/torch.index_reduce", "generated/torch.index_select", "generated/torch.inference_mode", "generated/torch.initial_seed", "generated/torch.inner", "generated/torch.inverse", "generated/torch.is_complex", "generated/torch.is_conj", "generated/torch.is_deterministic_algorithms_warn_only_enabled", "generated/torch.is_floating_point", "generated/torch.is_grad_enabled", "generated/torch.is_inference_mode_enabled", "generated/torch.is_nonzero", "generated/torch.is_storage", "generated/torch.is_tensor", "generated/torch.is_warn_always_enabled", "generated/torch.isclose", "generated/torch.isfinite", "generated/torch.isin", "generated/torch.isinf", "generated/torch.isnan", "generated/torch.isneginf", "generated/torch.isposinf", "generated/torch.isreal", "generated/torch.istft", "generated/torch.jit.Attribute", "generated/torch.jit.ScriptFunction", "generated/torch.jit.ScriptModule", "generated/torch.jit.annotate", "generated/torch.jit.enable_onednn_fusion", "generated/torch.jit.fork", "generated/torch.jit.freeze", "generated/torch.jit.ignore", "generated/torch.jit.isinstance", "generated/torch.jit.load", "generated/torch.jit.onednn_fusion_enabled", "generated/torch.jit.optimize_for_inference", "generated/torch.jit.save", "generated/torch.jit.script", "generated/torch.jit.script_if_tracing", "generated/torch.jit.set_fusion_strategy", "generated/torch.jit.strict_fusion", "generated/torch.jit.trace", "generated/torch.jit.trace_module", "generated/torch.jit.unused", "generated/torch.jit.wait", "generated/torch.kaiser_window", "generated/torch.kron", "generated/torch.kthvalue", "generated/torch.lcm", "generated/torch.ldexp", "generated/torch.le", "generated/torch.lerp", "generated/torch.less", "generated/torch.less_equal", "generated/torch.lgamma", "generated/torch.linalg.cholesky", "generated/torch.linalg.cholesky_ex", "generated/torch.linalg.cond", "generated/torch.linalg.cross", "generated/torch.linalg.det", "generated/torch.linalg.diagonal", "generated/torch.linalg.eig", "generated/torch.linalg.eigh", "generated/torch.linalg.eigvals", "generated/torch.linalg.eigvalsh", "generated/torch.linalg.householder_product", "generated/torch.linalg.inv", "generated/torch.linalg.inv_ex", "generated/torch.linalg.ldl_factor", "generated/torch.linalg.ldl_factor_ex", "generated/torch.linalg.ldl_solve", "generated/torch.linalg.lstsq", "generated/torch.linalg.lu", "generated/torch.linalg.lu_factor", "generated/torch.linalg.lu_factor_ex", "generated/torch.linalg.lu_solve", "generated/torch.linalg.matmul", "generated/torch.linalg.matrix_exp", "generated/torch.linalg.matrix_norm", "generated/torch.linalg.matrix_power", "generated/torch.linalg.matrix_rank", "generated/torch.linalg.multi_dot", "generated/torch.linalg.norm", "generated/torch.linalg.pinv", "generated/torch.linalg.qr", "generated/torch.linalg.slogdet", "generated/torch.linalg.solve", "generated/torch.linalg.solve_ex", "generated/torch.linalg.solve_triangular", "generated/torch.linalg.svd", "generated/torch.linalg.svdvals", "generated/torch.linalg.tensorinv", "generated/torch.linalg.tensorsolve", "generated/torch.linalg.vander", "generated/torch.linalg.vecdot", "generated/torch.linalg.vector_norm", "generated/torch.linspace", "generated/torch.load", "generated/torch.lobpcg", "generated/torch.log", "generated/torch.log10", "generated/torch.log1p", "generated/torch.log2", "generated/torch.logaddexp", "generated/torch.logaddexp2", "generated/torch.logcumsumexp", "generated/torch.logdet", "generated/torch.logical_and", "generated/torch.logical_not", "generated/torch.logical_or", "generated/torch.logical_xor", "generated/torch.logit", "generated/torch.logspace", "generated/torch.logsumexp", "generated/torch.lt", "generated/torch.lu", "generated/torch.lu_solve", "generated/torch.lu_unpack", "generated/torch.manual_seed", "generated/torch.masked_select", "generated/torch.matmul", "generated/torch.matrix_exp", "generated/torch.matrix_power", "generated/torch.max", "generated/torch.maximum", "generated/torch.mean", "generated/torch.median", "generated/torch.meshgrid", "generated/torch.min", "generated/torch.minimum", "generated/torch.mm", "generated/torch.mode", "generated/torch.moveaxis", "generated/torch.movedim", "generated/torch.mps.current_allocated_memory", "generated/torch.mps.driver_allocated_memory", "generated/torch.mps.empty_cache", "generated/torch.mps.get_rng_state", "generated/torch.mps.manual_seed", "generated/torch.mps.profiler.profile", "generated/torch.mps.profiler.start", "generated/torch.mps.profiler.stop", "generated/torch.mps.seed", "generated/torch.mps.set_per_process_memory_fraction", "generated/torch.mps.set_rng_state", "generated/torch.mps.synchronize", "generated/torch.msort", "generated/torch.mul", "generated/torch.multinomial", "generated/torch.multiply", "generated/torch.mv", "generated/torch.mvlgamma", "generated/torch.nan_to_num", "generated/torch.nanmean", "generated/torch.nanmedian", "generated/torch.nanquantile", "generated/torch.nansum", "generated/torch.narrow", "generated/torch.narrow_copy", "generated/torch.ne", "generated/torch.neg", "generated/torch.negative", "generated/torch.nextafter", "generated/torch.nn.AdaptiveAvgPool1d", "generated/torch.nn.AdaptiveAvgPool2d", "generated/torch.nn.AdaptiveAvgPool3d", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss", "generated/torch.nn.AdaptiveMaxPool1d", "generated/torch.nn.AdaptiveMaxPool2d", "generated/torch.nn.AdaptiveMaxPool3d", "generated/torch.nn.AlphaDropout", "generated/torch.nn.AvgPool1d", "generated/torch.nn.AvgPool2d", "generated/torch.nn.AvgPool3d", "generated/torch.nn.BCELoss", "generated/torch.nn.BCEWithLogitsLoss", "generated/torch.nn.BatchNorm1d", "generated/torch.nn.BatchNorm2d", "generated/torch.nn.BatchNorm3d", "generated/torch.nn.Bilinear", "generated/torch.nn.CELU", "generated/torch.nn.CTCLoss", "generated/torch.nn.ChannelShuffle", "generated/torch.nn.ConstantPad1d", "generated/torch.nn.ConstantPad2d", "generated/torch.nn.ConstantPad3d", "generated/torch.nn.Conv1d", "generated/torch.nn.Conv2d", "generated/torch.nn.Conv3d", "generated/torch.nn.ConvTranspose1d", "generated/torch.nn.ConvTranspose2d", "generated/torch.nn.ConvTranspose3d", "generated/torch.nn.CosineEmbeddingLoss", "generated/torch.nn.CosineSimilarity", "generated/torch.nn.CrossEntropyLoss", "generated/torch.nn.DataParallel", "generated/torch.nn.Dropout", "generated/torch.nn.Dropout1d", "generated/torch.nn.Dropout2d", "generated/torch.nn.Dropout3d", "generated/torch.nn.ELU", "generated/torch.nn.Embedding", "generated/torch.nn.EmbeddingBag", "generated/torch.nn.FeatureAlphaDropout", "generated/torch.nn.Flatten", "generated/torch.nn.Fold", "generated/torch.nn.FractionalMaxPool2d", "generated/torch.nn.FractionalMaxPool3d", "generated/torch.nn.GELU", "generated/torch.nn.GLU", "generated/torch.nn.GRU", "generated/torch.nn.GRUCell", "generated/torch.nn.GaussianNLLLoss", "generated/torch.nn.GroupNorm", "generated/torch.nn.Hardshrink", "generated/torch.nn.Hardsigmoid", "generated/torch.nn.Hardswish", "generated/torch.nn.Hardtanh", "generated/torch.nn.HingeEmbeddingLoss", "generated/torch.nn.HuberLoss", "generated/torch.nn.Identity", "generated/torch.nn.InstanceNorm1d", "generated/torch.nn.InstanceNorm2d", "generated/torch.nn.InstanceNorm3d", "generated/torch.nn.KLDivLoss", "generated/torch.nn.L1Loss", "generated/torch.nn.LPPool1d", "generated/torch.nn.LPPool2d", "generated/torch.nn.LSTM", "generated/torch.nn.LSTMCell", "generated/torch.nn.LayerNorm", "generated/torch.nn.LazyBatchNorm1d", "generated/torch.nn.LazyBatchNorm2d", "generated/torch.nn.LazyBatchNorm3d", "generated/torch.nn.LazyConv1d", "generated/torch.nn.LazyConv2d", "generated/torch.nn.LazyConv3d", "generated/torch.nn.LazyConvTranspose1d", "generated/torch.nn.LazyConvTranspose2d", "generated/torch.nn.LazyConvTranspose3d", "generated/torch.nn.LazyInstanceNorm1d", "generated/torch.nn.LazyInstanceNorm2d", "generated/torch.nn.LazyInstanceNorm3d", "generated/torch.nn.LazyLinear", "generated/torch.nn.LeakyReLU", "generated/torch.nn.Linear", "generated/torch.nn.LocalResponseNorm", "generated/torch.nn.LogSigmoid", "generated/torch.nn.LogSoftmax", "generated/torch.nn.MSELoss", "generated/torch.nn.MarginRankingLoss", "generated/torch.nn.MaxPool1d", "generated/torch.nn.MaxPool2d", "generated/torch.nn.MaxPool3d", "generated/torch.nn.MaxUnpool1d", "generated/torch.nn.MaxUnpool2d", "generated/torch.nn.MaxUnpool3d", "generated/torch.nn.Mish", "generated/torch.nn.Module", "generated/torch.nn.ModuleDict", "generated/torch.nn.ModuleList", "generated/torch.nn.MultiLabelMarginLoss", "generated/torch.nn.MultiLabelSoftMarginLoss", "generated/torch.nn.MultiMarginLoss", "generated/torch.nn.MultiheadAttention", "generated/torch.nn.NLLLoss", "generated/torch.nn.PReLU", "generated/torch.nn.PairwiseDistance", "generated/torch.nn.ParameterDict", "generated/torch.nn.ParameterList", "generated/torch.nn.PixelShuffle", "generated/torch.nn.PixelUnshuffle", "generated/torch.nn.PoissonNLLLoss", "generated/torch.nn.RNN", "generated/torch.nn.RNNBase", "generated/torch.nn.RNNCell", "generated/torch.nn.RReLU", "generated/torch.nn.ReLU", "generated/torch.nn.ReLU6", "generated/torch.nn.ReflectionPad1d", "generated/torch.nn.ReflectionPad2d", "generated/torch.nn.ReflectionPad3d", "generated/torch.nn.ReplicationPad1d", "generated/torch.nn.ReplicationPad2d", "generated/torch.nn.ReplicationPad3d", "generated/torch.nn.SELU", "generated/torch.nn.Sequential", "generated/torch.nn.SiLU", "generated/torch.nn.Sigmoid", "generated/torch.nn.SmoothL1Loss", "generated/torch.nn.SoftMarginLoss", "generated/torch.nn.Softmax", "generated/torch.nn.Softmax2d", "generated/torch.nn.Softmin", "generated/torch.nn.Softplus", "generated/torch.nn.Softshrink", "generated/torch.nn.Softsign", "generated/torch.nn.SyncBatchNorm", "generated/torch.nn.Tanh", "generated/torch.nn.Tanhshrink", "generated/torch.nn.Threshold", "generated/torch.nn.Transformer", "generated/torch.nn.TransformerDecoder", "generated/torch.nn.TransformerDecoderLayer", "generated/torch.nn.TransformerEncoder", "generated/torch.nn.TransformerEncoderLayer", "generated/torch.nn.TripletMarginLoss", "generated/torch.nn.TripletMarginWithDistanceLoss", "generated/torch.nn.Unflatten", "generated/torch.nn.Unfold", "generated/torch.nn.Upsample", "generated/torch.nn.UpsamplingBilinear2d", "generated/torch.nn.UpsamplingNearest2d", "generated/torch.nn.ZeroPad1d", "generated/torch.nn.ZeroPad2d", "generated/torch.nn.ZeroPad3d", "generated/torch.nn.functional.adaptive_avg_pool1d", "generated/torch.nn.functional.adaptive_avg_pool2d", "generated/torch.nn.functional.adaptive_avg_pool3d", "generated/torch.nn.functional.adaptive_max_pool1d", "generated/torch.nn.functional.adaptive_max_pool2d", "generated/torch.nn.functional.adaptive_max_pool3d", "generated/torch.nn.functional.affine_grid", "generated/torch.nn.functional.alpha_dropout", "generated/torch.nn.functional.avg_pool1d", "generated/torch.nn.functional.avg_pool2d", "generated/torch.nn.functional.avg_pool3d", "generated/torch.nn.functional.batch_norm", "generated/torch.nn.functional.bilinear", "generated/torch.nn.functional.binary_cross_entropy", "generated/torch.nn.functional.binary_cross_entropy_with_logits", "generated/torch.nn.functional.celu", "generated/torch.nn.functional.conv1d", "generated/torch.nn.functional.conv2d", "generated/torch.nn.functional.conv3d", "generated/torch.nn.functional.conv_transpose1d", "generated/torch.nn.functional.conv_transpose2d", "generated/torch.nn.functional.conv_transpose3d", "generated/torch.nn.functional.cosine_embedding_loss", "generated/torch.nn.functional.cosine_similarity", "generated/torch.nn.functional.cross_entropy", "generated/torch.nn.functional.ctc_loss", "generated/torch.nn.functional.dropout", "generated/torch.nn.functional.dropout1d", "generated/torch.nn.functional.dropout2d", "generated/torch.nn.functional.dropout3d", "generated/torch.nn.functional.elu", "generated/torch.nn.functional.elu_", "generated/torch.nn.functional.embedding", "generated/torch.nn.functional.embedding_bag", "generated/torch.nn.functional.feature_alpha_dropout", "generated/torch.nn.functional.fold", "generated/torch.nn.functional.fractional_max_pool2d", "generated/torch.nn.functional.fractional_max_pool3d", "generated/torch.nn.functional.gaussian_nll_loss", "generated/torch.nn.functional.gelu", "generated/torch.nn.functional.glu", "generated/torch.nn.functional.grid_sample", "generated/torch.nn.functional.group_norm", "generated/torch.nn.functional.gumbel_softmax", "generated/torch.nn.functional.hardshrink", "generated/torch.nn.functional.hardsigmoid", "generated/torch.nn.functional.hardswish", "generated/torch.nn.functional.hardtanh", "generated/torch.nn.functional.hardtanh_", "generated/torch.nn.functional.hinge_embedding_loss", "generated/torch.nn.functional.huber_loss", "generated/torch.nn.functional.instance_norm", "generated/torch.nn.functional.interpolate", "generated/torch.nn.functional.kl_div", "generated/torch.nn.functional.l1_loss", "generated/torch.nn.functional.layer_norm", "generated/torch.nn.functional.leaky_relu", "generated/torch.nn.functional.leaky_relu_", "generated/torch.nn.functional.linear", "generated/torch.nn.functional.local_response_norm", "generated/torch.nn.functional.log_softmax", "generated/torch.nn.functional.logsigmoid", "generated/torch.nn.functional.lp_pool1d", "generated/torch.nn.functional.lp_pool2d", "generated/torch.nn.functional.margin_ranking_loss", "generated/torch.nn.functional.max_pool1d", "generated/torch.nn.functional.max_pool2d", "generated/torch.nn.functional.max_pool3d", "generated/torch.nn.functional.max_unpool1d", "generated/torch.nn.functional.max_unpool2d", "generated/torch.nn.functional.max_unpool3d", "generated/torch.nn.functional.mish", "generated/torch.nn.functional.mse_loss", "generated/torch.nn.functional.multi_margin_loss", "generated/torch.nn.functional.multilabel_margin_loss", "generated/torch.nn.functional.multilabel_soft_margin_loss", "generated/torch.nn.functional.nll_loss", "generated/torch.nn.functional.normalize", "generated/torch.nn.functional.one_hot", "generated/torch.nn.functional.pad", "generated/torch.nn.functional.pairwise_distance", "generated/torch.nn.functional.pdist", "generated/torch.nn.functional.pixel_shuffle", "generated/torch.nn.functional.pixel_unshuffle", "generated/torch.nn.functional.poisson_nll_loss", "generated/torch.nn.functional.prelu", "generated/torch.nn.functional.relu", "generated/torch.nn.functional.relu6", "generated/torch.nn.functional.relu_", "generated/torch.nn.functional.rrelu", "generated/torch.nn.functional.rrelu_", "generated/torch.nn.functional.scaled_dot_product_attention", "generated/torch.nn.functional.selu", "generated/torch.nn.functional.sigmoid", "generated/torch.nn.functional.silu", "generated/torch.nn.functional.smooth_l1_loss", "generated/torch.nn.functional.soft_margin_loss", "generated/torch.nn.functional.softmax", "generated/torch.nn.functional.softmin", "generated/torch.nn.functional.softplus", "generated/torch.nn.functional.softshrink", "generated/torch.nn.functional.softsign", "generated/torch.nn.functional.tanh", "generated/torch.nn.functional.tanhshrink", "generated/torch.nn.functional.threshold", "generated/torch.nn.functional.threshold_", "generated/torch.nn.functional.torch.nn.parallel.data_parallel", "generated/torch.nn.functional.triplet_margin_loss", "generated/torch.nn.functional.triplet_margin_with_distance_loss", "generated/torch.nn.functional.unfold", "generated/torch.nn.functional.upsample", "generated/torch.nn.functional.upsample_bilinear", "generated/torch.nn.functional.upsample_nearest", "generated/torch.nn.modules.lazy.LazyModuleMixin", "generated/torch.nn.modules.module.register_module_backward_hook", "generated/torch.nn.modules.module.register_module_buffer_registration_hook", "generated/torch.nn.modules.module.register_module_forward_hook", "generated/torch.nn.modules.module.register_module_forward_pre_hook", "generated/torch.nn.modules.module.register_module_full_backward_hook", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook", "generated/torch.nn.modules.module.register_module_module_registration_hook", "generated/torch.nn.modules.module.register_module_parameter_registration_hook", "generated/torch.nn.parallel.DistributedDataParallel", "generated/torch.nn.parameter.Parameter", "generated/torch.nn.parameter.UninitializedBuffer", "generated/torch.nn.parameter.UninitializedParameter", "generated/torch.nn.utils.clip_grad_norm_", "generated/torch.nn.utils.clip_grad_value_", "generated/torch.nn.utils.parameters_to_vector", "generated/torch.nn.utils.parametrizations.orthogonal", "generated/torch.nn.utils.parametrizations.spectral_norm", "generated/torch.nn.utils.parametrize.ParametrizationList", "generated/torch.nn.utils.parametrize.cached", "generated/torch.nn.utils.parametrize.is_parametrized", "generated/torch.nn.utils.parametrize.register_parametrization", "generated/torch.nn.utils.parametrize.remove_parametrizations", "generated/torch.nn.utils.prune.BasePruningMethod", "generated/torch.nn.utils.prune.CustomFromMask", "generated/torch.nn.utils.prune.Identity", "generated/torch.nn.utils.prune.L1Unstructured", "generated/torch.nn.utils.prune.LnStructured", "generated/torch.nn.utils.prune.PruningContainer", "generated/torch.nn.utils.prune.RandomStructured", "generated/torch.nn.utils.prune.RandomUnstructured", "generated/torch.nn.utils.prune.custom_from_mask", "generated/torch.nn.utils.prune.global_unstructured", "generated/torch.nn.utils.prune.identity", "generated/torch.nn.utils.prune.is_pruned", "generated/torch.nn.utils.prune.l1_unstructured", "generated/torch.nn.utils.prune.ln_structured", "generated/torch.nn.utils.prune.random_structured", "generated/torch.nn.utils.prune.random_unstructured", "generated/torch.nn.utils.prune.remove", "generated/torch.nn.utils.remove_spectral_norm", "generated/torch.nn.utils.remove_weight_norm", "generated/torch.nn.utils.rnn.PackedSequence", "generated/torch.nn.utils.rnn.pack_padded_sequence", "generated/torch.nn.utils.rnn.pack_sequence", "generated/torch.nn.utils.rnn.pad_packed_sequence", "generated/torch.nn.utils.rnn.pad_sequence", "generated/torch.nn.utils.rnn.unpack_sequence", "generated/torch.nn.utils.rnn.unpad_sequence", "generated/torch.nn.utils.skip_init", "generated/torch.nn.utils.spectral_norm", "generated/torch.nn.utils.stateless.functional_call", "generated/torch.nn.utils.vector_to_parameters", "generated/torch.nn.utils.weight_norm", "generated/torch.no_grad", "generated/torch.nonzero", "generated/torch.norm", "generated/torch.normal", "generated/torch.not_equal", "generated/torch.numel", "generated/torch.ones", "generated/torch.ones_like", "generated/torch.onnx.ExportOptions", "generated/torch.onnx.ExportOutput", "generated/torch.onnx.ExportOutputSerializer", "generated/torch.onnx.JitScalarType", "generated/torch.onnx.OnnxExporterError", "generated/torch.onnx.verification.GraphInfo", "generated/torch.onnx.verification.VerificationOptions", "generated/torch.optim.ASGD", "generated/torch.optim.Adadelta", "generated/torch.optim.Adagrad", "generated/torch.optim.Adam", "generated/torch.optim.AdamW", "generated/torch.optim.Adamax", "generated/torch.optim.LBFGS", "generated/torch.optim.NAdam", "generated/torch.optim.Optimizer.add_param_group", "generated/torch.optim.Optimizer.load_state_dict", "generated/torch.optim.Optimizer.state_dict", "generated/torch.optim.Optimizer.step", "generated/torch.optim.Optimizer.zero_grad", "generated/torch.optim.RAdam", "generated/torch.optim.RMSprop", "generated/torch.optim.Rprop", "generated/torch.optim.SGD", "generated/torch.optim.SparseAdam", "generated/torch.optim.lr_scheduler.ChainedScheduler", "generated/torch.optim.lr_scheduler.ConstantLR", "generated/torch.optim.lr_scheduler.CosineAnnealingLR", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "generated/torch.optim.lr_scheduler.CyclicLR", "generated/torch.optim.lr_scheduler.ExponentialLR", "generated/torch.optim.lr_scheduler.LambdaLR", "generated/torch.optim.lr_scheduler.LinearLR", "generated/torch.optim.lr_scheduler.MultiStepLR", "generated/torch.optim.lr_scheduler.MultiplicativeLR", "generated/torch.optim.lr_scheduler.OneCycleLR", "generated/torch.optim.lr_scheduler.PolynomialLR", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau", "generated/torch.optim.lr_scheduler.SequentialLR", "generated/torch.optim.lr_scheduler.StepLR", "generated/torch.orgqr", "generated/torch.ormqr", "generated/torch.outer", "generated/torch.pca_lowrank", "generated/torch.permute", "generated/torch.pinverse", "generated/torch.poisson", "generated/torch.polar", "generated/torch.polygamma", "generated/torch.positive", "generated/torch.pow", "generated/torch.prod", "generated/torch.promote_types", "generated/torch.qr", "generated/torch.quantile", "generated/torch.quantize_per_channel", "generated/torch.quantize_per_tensor", "generated/torch.quantized_batch_norm", "generated/torch.quantized_max_pool1d", "generated/torch.quantized_max_pool2d", "generated/torch.quasirandom.SobolEngine", "generated/torch.rad2deg", "generated/torch.rand", "generated/torch.rand_like", "generated/torch.randint", "generated/torch.randint_like", "generated/torch.randn", "generated/torch.randn_like", "generated/torch.randperm", "generated/torch.range", "generated/torch.ravel", "generated/torch.real", "generated/torch.reciprocal", "generated/torch.remainder", "generated/torch.renorm", "generated/torch.repeat_interleave", "generated/torch.reshape", "generated/torch.resolve_conj", "generated/torch.resolve_neg", "generated/torch.result_type", "generated/torch.roll", "generated/torch.rot90", "generated/torch.round", "generated/torch.row_stack", "generated/torch.rsqrt", "generated/torch.save", "generated/torch.scatter", "generated/torch.scatter_add", "generated/torch.scatter_reduce", "generated/torch.searchsorted", "generated/torch.seed", "generated/torch.select", "generated/torch.select_scatter", "generated/torch.set_default_device", "generated/torch.set_default_dtype", "generated/torch.set_default_tensor_type", "generated/torch.set_deterministic_debug_mode", "generated/torch.set_float32_matmul_precision", "generated/torch.set_flush_denormal", "generated/torch.set_grad_enabled", "generated/torch.set_num_interop_threads", "generated/torch.set_num_threads", "generated/torch.set_printoptions", "generated/torch.set_rng_state", "generated/torch.set_warn_always", "generated/torch.sgn", "generated/torch.sigmoid", "generated/torch.sign", "generated/torch.signal.windows.bartlett", "generated/torch.signal.windows.blackman", "generated/torch.signal.windows.cosine", "generated/torch.signal.windows.exponential", "generated/torch.signal.windows.gaussian", "generated/torch.signal.windows.general_cosine", "generated/torch.signal.windows.general_hamming", "generated/torch.signal.windows.hamming", "generated/torch.signal.windows.hann", "generated/torch.signal.windows.kaiser", "generated/torch.signal.windows.nuttall", "generated/torch.signbit", "generated/torch.sin", "generated/torch.sinc", "generated/torch.sinh", "generated/torch.slice_scatter", "generated/torch.slogdet", "generated/torch.smm", "generated/torch.softmax", "generated/torch.sort", "generated/torch.sparse.addmm", "generated/torch.sparse.check_sparse_tensor_invariants", "generated/torch.sparse.log_softmax", "generated/torch.sparse.mm", "generated/torch.sparse.sampled_addmm", "generated/torch.sparse.softmax", "generated/torch.sparse.spdiags", "generated/torch.sparse.sum", "generated/torch.sparse_bsc_tensor", "generated/torch.sparse_bsr_tensor", "generated/torch.sparse_compressed_tensor", "generated/torch.sparse_coo_tensor", "generated/torch.sparse_csc_tensor", "generated/torch.sparse_csr_tensor", "generated/torch.split", "generated/torch.sqrt", "generated/torch.square", "generated/torch.squeeze", "generated/torch.sspaddmm", "generated/torch.stack", "generated/torch.std", "generated/torch.std_mean", "generated/torch.stft", "generated/torch.sub", "generated/torch.subtract", "generated/torch.sum", "generated/torch.svd", "generated/torch.svd_lowrank", "generated/torch.swapaxes", "generated/torch.swapdims", "generated/torch.sym_float", "generated/torch.sym_int", "generated/torch.sym_max", "generated/torch.sym_min", "generated/torch.sym_not", "generated/torch.t", "generated/torch.take", "generated/torch.take_along_dim", "generated/torch.tan", "generated/torch.tanh", "generated/torch.tensor", "generated/torch.tensor_split", "generated/torch.tensordot", "generated/torch.tile", "generated/torch.topk", "generated/torch.trace", "generated/torch.transpose", "generated/torch.trapezoid", "generated/torch.trapz", "generated/torch.triangular_solve", "generated/torch.tril", "generated/torch.tril_indices", "generated/torch.triu", "generated/torch.triu_indices", "generated/torch.true_divide", "generated/torch.trunc", "generated/torch.unbind", "generated/torch.unflatten", "generated/torch.unique", "generated/torch.unique_consecutive", "generated/torch.unsqueeze", "generated/torch.use_deterministic_algorithms", "generated/torch.utils.generate_methods_for_privateuse1_backend", "generated/torch.utils.get_cpp_backtrace", "generated/torch.utils.rename_privateuse1_backend", "generated/torch.utils.set_module", "generated/torch.vander", "generated/torch.var", "generated/torch.var_mean", "generated/torch.vdot", "generated/torch.view_as_complex", "generated/torch.view_as_real", "generated/torch.vmap", "generated/torch.vsplit", "generated/torch.vstack", "generated/torch.where", "generated/torch.xlogy", "generated/torch.zeros", "generated/torch.zeros_like", "hub", "index", "ir", "jit", "jit_builtin_functions", "jit_language_reference", "jit_language_reference_v2", "jit_python_reference", "jit_unsupported", "jit_utils", "library", "linalg", "logging", "masked", "mobile_optimizer", "model_zoo", "monitor", "mps", "multiprocessing", "name_inference", "named_tensor", "nested", "nn", "nn.functional", "nn.init", "notes/amp_examples", "notes/autograd", "notes/broadcasting", "notes/cpu_threading_torchscript_inference", "notes/cuda", "notes/ddp", "notes/extending", "notes/extending.func", "notes/faq", "notes/gradcheck", "notes/hip", "notes/large_scale_deployments", "notes/modules", "notes/mps", "notes/multiprocessing", "notes/numerical_accuracy", "notes/randomness", "notes/serialization", "notes/windows", "onnx", "onnx_diagnostics", "onnx_supported_aten_ops", "optim", "package", "pipeline", "profiler", "quantization", "quantization-accuracy-debugging", "quantization-backend-configuration", "quantization-support", "random", "rpc", "rpc/distributed_autograd", "rpc/rref", "signal", "sparse", "special", "storage", "tensor_attributes", "tensor_view", "tensorboard", "tensors", "testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "type_info", "utils"], "filenames": ["amp.rst", "autograd.rst", "backends.rst", "benchmark_utils.rst", "bottleneck.rst", "checkpoint.rst", "community/build_ci_governance.rst", "community/contribution_guide.rst", "community/design.rst", "community/governance.rst", "community/persons_of_interest.rst", "compile/best-practices-for-backends.rst", "compile/cudagraph_trees.rst", "compile/custom-backends.rst", "compile/deep-dive.rst", "compile/dynamic-shapes.rst", "compile/fake-tensor.rst", "compile/faq.rst", "compile/fine_grained_apis.rst", "compile/get-started.rst", "compile/guards-overview.rst", "compile/index.rst", "compile/inductor_profiling.rst", "compile/nn-module.rst", "compile/performance-dashboard.rst", "compile/profiling_torch_compile.rst", "compile/technical-overview.rst", "compile/torchfunc-and-torchcompile.rst", "compile/transformations.rst", "compile/troubleshooting.rst", "compiler.rst", "complex_numbers.rst", "config_mod.rst", "cpp_extension.rst", "cpp_index.rst", "cpu.rst", "cuda.rst", "cuda._sanitizer.rst", "cudnn_persistent_rnn.rst", "cudnn_rnn_determinism.rst", "data.rst", "ddp_comm_hooks.rst", "deploy.rst", "distributed.rst", "distributed.algorithms.join.rst", "distributed.checkpoint.rst", "distributed.elastic.rst", "distributed.optim.rst", "distributed.tensor.parallel.rst", "distributions.rst", "dlpack.rst", "elastic/agent.rst", "elastic/customization.rst", "elastic/errors.rst", "elastic/events.rst", "elastic/examples.rst", "elastic/kubernetes.rst", "elastic/metrics.rst", "elastic/multiprocessing.rst", "elastic/quickstart.rst", "elastic/rendezvous.rst", "elastic/run.rst", "elastic/timer.rst", "elastic/train_script.rst", "export.rst", "fft.rst", "fsdp.rst", "func.rst", "func.api.rst", "func.batch_norm.rst", "func.migrating.rst", "func.ux_limitations.rst", "func.whirlwind_tour.rst", "futures.rst", "fx.rst", "generated/exportdb/index.rst", "generated/exportdb/python.assert.rst", "generated/exportdb/python.builtin.rst", "generated/exportdb/python.closure.rst", "generated/exportdb/python.context-manager.rst", "generated/exportdb/python.control-flow.rst", "generated/exportdb/python.data-structure.rst", "generated/exportdb/torch.cond.rst", "generated/exportdb/torch.dynamic-shape.rst", "generated/exportdb/torch.escape-hatch.rst", "generated/exportdb/torch.map.rst", "generated/onnx_diagnostics_rules/DIAGSYS0001:arg-format-too-verbose.md", "generated/onnx_diagnostics_rules/FXE0001:fx-tracer-success.md", "generated/onnx_diagnostics_rules/FXE0002:fx-tracer-failure.md", "generated/onnx_diagnostics_rules/FXE0003:fx-frontend-aotautograd.md", "generated/onnx_diagnostics_rules/FXE0004:fx-pass-convert-neg-to-sigmoid.md", "generated/onnx_diagnostics_rules/FXE0005:fx-ir-add-node.md", "generated/onnx_diagnostics_rules/FXE0006:atenlib-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0007:atenlib-fx-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0008:fx-node-to-onnx.md", "generated/onnx_diagnostics_rules/FXE0009:fx-frontend-dynamo-make-fx.md", "generated/onnx_diagnostics_rules/FXE0010:fx-pass.md", "generated/onnx_diagnostics_rules/FXE0011:no-symbolic-function-for-call-function.md", "generated/onnx_diagnostics_rules/FXE0012:unsupported-fx-node-analysis.md", "generated/onnx_diagnostics_rules/FXE0013:op-level-debugging.md", "generated/onnx_diagnostics_rules/FXE0014:find-opschema-matched-symbolic-function.md", "generated/onnx_diagnostics_rules/FXE0015:fx-node-insert-type-promotion.md", "generated/onnx_diagnostics_rules/FXE0016:find-operator-overloads-in-onnx-registry.md", "generated/onnx_diagnostics_rules/POE0001:node-missing-onnx-shape-inference.md", "generated/onnx_diagnostics_rules/POE0002:missing-custom-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0003:missing-standard-symbolic-function.md", "generated/onnx_diagnostics_rules/POE0004:operator-supported-in-newer-opset-version.md", "generated/torch.Generator.rst", "generated/torch.Tensor.abs.rst", "generated/torch.Tensor.abs_.rst", "generated/torch.Tensor.absolute.rst", "generated/torch.Tensor.absolute_.rst", "generated/torch.Tensor.acos.rst", "generated/torch.Tensor.acos_.rst", "generated/torch.Tensor.acosh.rst", "generated/torch.Tensor.acosh_.rst", "generated/torch.Tensor.add.rst", "generated/torch.Tensor.add_.rst", "generated/torch.Tensor.addbmm.rst", "generated/torch.Tensor.addbmm_.rst", "generated/torch.Tensor.addcdiv.rst", "generated/torch.Tensor.addcdiv_.rst", "generated/torch.Tensor.addcmul.rst", "generated/torch.Tensor.addcmul_.rst", "generated/torch.Tensor.addmm.rst", "generated/torch.Tensor.addmm_.rst", "generated/torch.Tensor.addmv.rst", "generated/torch.Tensor.addmv_.rst", "generated/torch.Tensor.addr.rst", "generated/torch.Tensor.addr_.rst", "generated/torch.Tensor.adjoint.rst", "generated/torch.Tensor.all.rst", "generated/torch.Tensor.allclose.rst", "generated/torch.Tensor.amax.rst", "generated/torch.Tensor.amin.rst", "generated/torch.Tensor.aminmax.rst", "generated/torch.Tensor.angle.rst", "generated/torch.Tensor.any.rst", "generated/torch.Tensor.apply_.rst", "generated/torch.Tensor.arccos.rst", "generated/torch.Tensor.arccos_.rst", "generated/torch.Tensor.arccosh.rst", "generated/torch.Tensor.arccosh_.rst", "generated/torch.Tensor.arcsin.rst", "generated/torch.Tensor.arcsin_.rst", "generated/torch.Tensor.arcsinh.rst", "generated/torch.Tensor.arcsinh_.rst", "generated/torch.Tensor.arctan.rst", "generated/torch.Tensor.arctan2.rst", "generated/torch.Tensor.arctan2_.rst", "generated/torch.Tensor.arctan_.rst", "generated/torch.Tensor.arctanh.rst", "generated/torch.Tensor.arctanh_.rst", "generated/torch.Tensor.argmax.rst", "generated/torch.Tensor.argmin.rst", "generated/torch.Tensor.argsort.rst", "generated/torch.Tensor.argwhere.rst", "generated/torch.Tensor.as_strided.rst", "generated/torch.Tensor.as_subclass.rst", "generated/torch.Tensor.asin.rst", "generated/torch.Tensor.asin_.rst", "generated/torch.Tensor.asinh.rst", "generated/torch.Tensor.asinh_.rst", "generated/torch.Tensor.atan.rst", "generated/torch.Tensor.atan2.rst", "generated/torch.Tensor.atan2_.rst", "generated/torch.Tensor.atan_.rst", "generated/torch.Tensor.atanh.rst", "generated/torch.Tensor.atanh_.rst", "generated/torch.Tensor.backward.rst", "generated/torch.Tensor.baddbmm.rst", "generated/torch.Tensor.baddbmm_.rst", "generated/torch.Tensor.bernoulli.rst", "generated/torch.Tensor.bernoulli_.rst", "generated/torch.Tensor.bfloat16.rst", "generated/torch.Tensor.bincount.rst", "generated/torch.Tensor.bitwise_and.rst", "generated/torch.Tensor.bitwise_and_.rst", "generated/torch.Tensor.bitwise_left_shift.rst", "generated/torch.Tensor.bitwise_left_shift_.rst", "generated/torch.Tensor.bitwise_not.rst", "generated/torch.Tensor.bitwise_not_.rst", "generated/torch.Tensor.bitwise_or.rst", "generated/torch.Tensor.bitwise_or_.rst", "generated/torch.Tensor.bitwise_right_shift.rst", "generated/torch.Tensor.bitwise_right_shift_.rst", "generated/torch.Tensor.bitwise_xor.rst", "generated/torch.Tensor.bitwise_xor_.rst", "generated/torch.Tensor.bmm.rst", "generated/torch.Tensor.bool.rst", "generated/torch.Tensor.broadcast_to.rst", "generated/torch.Tensor.byte.rst", "generated/torch.Tensor.cauchy_.rst", "generated/torch.Tensor.ccol_indices.rst", "generated/torch.Tensor.cdouble.rst", "generated/torch.Tensor.ceil.rst", "generated/torch.Tensor.ceil_.rst", "generated/torch.Tensor.cfloat.rst", "generated/torch.Tensor.chalf.rst", "generated/torch.Tensor.char.rst", "generated/torch.Tensor.cholesky.rst", "generated/torch.Tensor.cholesky_inverse.rst", "generated/torch.Tensor.cholesky_solve.rst", "generated/torch.Tensor.chunk.rst", "generated/torch.Tensor.clamp.rst", "generated/torch.Tensor.clamp_.rst", "generated/torch.Tensor.clip.rst", "generated/torch.Tensor.clip_.rst", "generated/torch.Tensor.clone.rst", "generated/torch.Tensor.coalesce.rst", "generated/torch.Tensor.col_indices.rst", "generated/torch.Tensor.conj.rst", "generated/torch.Tensor.conj_physical.rst", "generated/torch.Tensor.conj_physical_.rst", "generated/torch.Tensor.contiguous.rst", "generated/torch.Tensor.copy_.rst", "generated/torch.Tensor.copysign.rst", "generated/torch.Tensor.copysign_.rst", "generated/torch.Tensor.corrcoef.rst", "generated/torch.Tensor.cos.rst", "generated/torch.Tensor.cos_.rst", "generated/torch.Tensor.cosh.rst", "generated/torch.Tensor.cosh_.rst", "generated/torch.Tensor.count_nonzero.rst", "generated/torch.Tensor.cov.rst", "generated/torch.Tensor.cpu.rst", "generated/torch.Tensor.cross.rst", "generated/torch.Tensor.crow_indices.rst", "generated/torch.Tensor.cuda.rst", "generated/torch.Tensor.cummax.rst", "generated/torch.Tensor.cummin.rst", "generated/torch.Tensor.cumprod.rst", "generated/torch.Tensor.cumprod_.rst", "generated/torch.Tensor.cumsum.rst", "generated/torch.Tensor.cumsum_.rst", "generated/torch.Tensor.data_ptr.rst", "generated/torch.Tensor.deg2rad.rst", "generated/torch.Tensor.dense_dim.rst", "generated/torch.Tensor.dequantize.rst", "generated/torch.Tensor.det.rst", "generated/torch.Tensor.detach.rst", "generated/torch.Tensor.detach_.rst", "generated/torch.Tensor.device.rst", "generated/torch.Tensor.diag.rst", "generated/torch.Tensor.diag_embed.rst", "generated/torch.Tensor.diagflat.rst", "generated/torch.Tensor.diagonal.rst", "generated/torch.Tensor.diagonal_scatter.rst", "generated/torch.Tensor.diff.rst", "generated/torch.Tensor.digamma.rst", "generated/torch.Tensor.digamma_.rst", "generated/torch.Tensor.dim.rst", "generated/torch.Tensor.dist.rst", "generated/torch.Tensor.div.rst", "generated/torch.Tensor.div_.rst", "generated/torch.Tensor.divide.rst", "generated/torch.Tensor.divide_.rst", "generated/torch.Tensor.dot.rst", "generated/torch.Tensor.double.rst", "generated/torch.Tensor.dsplit.rst", "generated/torch.Tensor.element_size.rst", "generated/torch.Tensor.eq.rst", "generated/torch.Tensor.eq_.rst", "generated/torch.Tensor.equal.rst", "generated/torch.Tensor.erf.rst", "generated/torch.Tensor.erf_.rst", "generated/torch.Tensor.erfc.rst", "generated/torch.Tensor.erfc_.rst", "generated/torch.Tensor.erfinv.rst", "generated/torch.Tensor.erfinv_.rst", "generated/torch.Tensor.exp.rst", "generated/torch.Tensor.exp_.rst", "generated/torch.Tensor.expand.rst", "generated/torch.Tensor.expand_as.rst", "generated/torch.Tensor.expm1.rst", "generated/torch.Tensor.expm1_.rst", "generated/torch.Tensor.exponential_.rst", "generated/torch.Tensor.fill_.rst", "generated/torch.Tensor.fill_diagonal_.rst", "generated/torch.Tensor.fix.rst", "generated/torch.Tensor.fix_.rst", "generated/torch.Tensor.flatten.rst", "generated/torch.Tensor.flip.rst", "generated/torch.Tensor.fliplr.rst", "generated/torch.Tensor.flipud.rst", "generated/torch.Tensor.float.rst", "generated/torch.Tensor.float_power.rst", "generated/torch.Tensor.float_power_.rst", "generated/torch.Tensor.floor.rst", "generated/torch.Tensor.floor_.rst", "generated/torch.Tensor.floor_divide.rst", "generated/torch.Tensor.floor_divide_.rst", "generated/torch.Tensor.fmax.rst", "generated/torch.Tensor.fmin.rst", "generated/torch.Tensor.fmod.rst", "generated/torch.Tensor.fmod_.rst", "generated/torch.Tensor.frac.rst", "generated/torch.Tensor.frac_.rst", "generated/torch.Tensor.frexp.rst", "generated/torch.Tensor.gather.rst", "generated/torch.Tensor.gcd.rst", "generated/torch.Tensor.gcd_.rst", "generated/torch.Tensor.ge.rst", "generated/torch.Tensor.ge_.rst", "generated/torch.Tensor.geometric_.rst", "generated/torch.Tensor.geqrf.rst", "generated/torch.Tensor.ger.rst", "generated/torch.Tensor.get_device.rst", "generated/torch.Tensor.grad.rst", "generated/torch.Tensor.greater.rst", "generated/torch.Tensor.greater_.rst", "generated/torch.Tensor.greater_equal.rst", "generated/torch.Tensor.greater_equal_.rst", "generated/torch.Tensor.gt.rst", "generated/torch.Tensor.gt_.rst", "generated/torch.Tensor.half.rst", "generated/torch.Tensor.hardshrink.rst", "generated/torch.Tensor.heaviside.rst", "generated/torch.Tensor.histc.rst", "generated/torch.Tensor.histogram.rst", "generated/torch.Tensor.hsplit.rst", "generated/torch.Tensor.hypot.rst", "generated/torch.Tensor.hypot_.rst", "generated/torch.Tensor.i0.rst", "generated/torch.Tensor.i0_.rst", "generated/torch.Tensor.igamma.rst", "generated/torch.Tensor.igamma_.rst", "generated/torch.Tensor.igammac.rst", "generated/torch.Tensor.igammac_.rst", "generated/torch.Tensor.imag.rst", "generated/torch.Tensor.index_add.rst", "generated/torch.Tensor.index_add_.rst", "generated/torch.Tensor.index_copy.rst", "generated/torch.Tensor.index_copy_.rst", "generated/torch.Tensor.index_fill.rst", "generated/torch.Tensor.index_fill_.rst", "generated/torch.Tensor.index_put.rst", "generated/torch.Tensor.index_put_.rst", "generated/torch.Tensor.index_reduce.rst", "generated/torch.Tensor.index_reduce_.rst", "generated/torch.Tensor.index_select.rst", "generated/torch.Tensor.indices.rst", "generated/torch.Tensor.inner.rst", "generated/torch.Tensor.int.rst", "generated/torch.Tensor.int_repr.rst", "generated/torch.Tensor.inverse.rst", "generated/torch.Tensor.is_coalesced.rst", "generated/torch.Tensor.is_complex.rst", "generated/torch.Tensor.is_conj.rst", "generated/torch.Tensor.is_contiguous.rst", "generated/torch.Tensor.is_cuda.rst", "generated/torch.Tensor.is_floating_point.rst", "generated/torch.Tensor.is_inference.rst", "generated/torch.Tensor.is_leaf.rst", "generated/torch.Tensor.is_meta.rst", "generated/torch.Tensor.is_pinned.rst", "generated/torch.Tensor.is_quantized.rst", "generated/torch.Tensor.is_set_to.rst", "generated/torch.Tensor.is_shared.rst", "generated/torch.Tensor.is_signed.rst", "generated/torch.Tensor.is_sparse.rst", "generated/torch.Tensor.is_sparse_csr.rst", "generated/torch.Tensor.isclose.rst", "generated/torch.Tensor.isfinite.rst", "generated/torch.Tensor.isinf.rst", "generated/torch.Tensor.isnan.rst", "generated/torch.Tensor.isneginf.rst", "generated/torch.Tensor.isposinf.rst", "generated/torch.Tensor.isreal.rst", "generated/torch.Tensor.istft.rst", "generated/torch.Tensor.item.rst", "generated/torch.Tensor.itemsize.rst", "generated/torch.Tensor.kthvalue.rst", "generated/torch.Tensor.lcm.rst", "generated/torch.Tensor.lcm_.rst", "generated/torch.Tensor.ldexp.rst", "generated/torch.Tensor.ldexp_.rst", "generated/torch.Tensor.le.rst", "generated/torch.Tensor.le_.rst", "generated/torch.Tensor.lerp.rst", "generated/torch.Tensor.lerp_.rst", "generated/torch.Tensor.less.rst", "generated/torch.Tensor.less_.rst", "generated/torch.Tensor.less_equal.rst", "generated/torch.Tensor.less_equal_.rst", "generated/torch.Tensor.lgamma.rst", "generated/torch.Tensor.lgamma_.rst", "generated/torch.Tensor.log.rst", "generated/torch.Tensor.log10.rst", "generated/torch.Tensor.log10_.rst", "generated/torch.Tensor.log1p.rst", "generated/torch.Tensor.log1p_.rst", "generated/torch.Tensor.log2.rst", "generated/torch.Tensor.log2_.rst", "generated/torch.Tensor.log_.rst", "generated/torch.Tensor.log_normal_.rst", "generated/torch.Tensor.logaddexp.rst", "generated/torch.Tensor.logaddexp2.rst", "generated/torch.Tensor.logcumsumexp.rst", "generated/torch.Tensor.logdet.rst", "generated/torch.Tensor.logical_and.rst", "generated/torch.Tensor.logical_and_.rst", "generated/torch.Tensor.logical_not.rst", "generated/torch.Tensor.logical_not_.rst", "generated/torch.Tensor.logical_or.rst", "generated/torch.Tensor.logical_or_.rst", "generated/torch.Tensor.logical_xor.rst", "generated/torch.Tensor.logical_xor_.rst", "generated/torch.Tensor.logit.rst", "generated/torch.Tensor.logit_.rst", "generated/torch.Tensor.logsumexp.rst", "generated/torch.Tensor.long.rst", "generated/torch.Tensor.lt.rst", "generated/torch.Tensor.lt_.rst", "generated/torch.Tensor.lu.rst", "generated/torch.Tensor.lu_solve.rst", "generated/torch.Tensor.map_.rst", "generated/torch.Tensor.masked_fill.rst", "generated/torch.Tensor.masked_fill_.rst", "generated/torch.Tensor.masked_scatter.rst", "generated/torch.Tensor.masked_scatter_.rst", "generated/torch.Tensor.masked_select.rst", "generated/torch.Tensor.matmul.rst", "generated/torch.Tensor.matrix_exp.rst", "generated/torch.Tensor.matrix_power.rst", "generated/torch.Tensor.max.rst", "generated/torch.Tensor.maximum.rst", "generated/torch.Tensor.mean.rst", "generated/torch.Tensor.median.rst", "generated/torch.Tensor.min.rst", "generated/torch.Tensor.minimum.rst", "generated/torch.Tensor.mm.rst", "generated/torch.Tensor.mode.rst", "generated/torch.Tensor.moveaxis.rst", "generated/torch.Tensor.movedim.rst", "generated/torch.Tensor.msort.rst", "generated/torch.Tensor.mul.rst", "generated/torch.Tensor.mul_.rst", "generated/torch.Tensor.multinomial.rst", "generated/torch.Tensor.multiply.rst", "generated/torch.Tensor.multiply_.rst", "generated/torch.Tensor.mv.rst", "generated/torch.Tensor.mvlgamma.rst", "generated/torch.Tensor.mvlgamma_.rst", "generated/torch.Tensor.nan_to_num.rst", "generated/torch.Tensor.nan_to_num_.rst", "generated/torch.Tensor.nanmean.rst", "generated/torch.Tensor.nanmedian.rst", "generated/torch.Tensor.nanquantile.rst", "generated/torch.Tensor.nansum.rst", "generated/torch.Tensor.narrow.rst", "generated/torch.Tensor.narrow_copy.rst", "generated/torch.Tensor.nbytes.rst", "generated/torch.Tensor.ndim.rst", "generated/torch.Tensor.ndimension.rst", "generated/torch.Tensor.ne.rst", "generated/torch.Tensor.ne_.rst", "generated/torch.Tensor.neg.rst", "generated/torch.Tensor.neg_.rst", "generated/torch.Tensor.negative.rst", "generated/torch.Tensor.negative_.rst", "generated/torch.Tensor.nelement.rst", "generated/torch.Tensor.new_empty.rst", "generated/torch.Tensor.new_full.rst", "generated/torch.Tensor.new_ones.rst", "generated/torch.Tensor.new_tensor.rst", "generated/torch.Tensor.new_zeros.rst", "generated/torch.Tensor.nextafter.rst", "generated/torch.Tensor.nextafter_.rst", "generated/torch.Tensor.nonzero.rst", "generated/torch.Tensor.norm.rst", "generated/torch.Tensor.normal_.rst", "generated/torch.Tensor.not_equal.rst", "generated/torch.Tensor.not_equal_.rst", "generated/torch.Tensor.numel.rst", "generated/torch.Tensor.numpy.rst", "generated/torch.Tensor.orgqr.rst", "generated/torch.Tensor.ormqr.rst", "generated/torch.Tensor.outer.rst", "generated/torch.Tensor.permute.rst", "generated/torch.Tensor.pin_memory.rst", "generated/torch.Tensor.pinverse.rst", "generated/torch.Tensor.polygamma.rst", "generated/torch.Tensor.polygamma_.rst", "generated/torch.Tensor.positive.rst", "generated/torch.Tensor.pow.rst", "generated/torch.Tensor.pow_.rst", "generated/torch.Tensor.prod.rst", "generated/torch.Tensor.put_.rst", "generated/torch.Tensor.q_per_channel_axis.rst", "generated/torch.Tensor.q_per_channel_scales.rst", "generated/torch.Tensor.q_per_channel_zero_points.rst", "generated/torch.Tensor.q_scale.rst", "generated/torch.Tensor.q_zero_point.rst", "generated/torch.Tensor.qr.rst", "generated/torch.Tensor.qscheme.rst", "generated/torch.Tensor.quantile.rst", "generated/torch.Tensor.rad2deg.rst", "generated/torch.Tensor.random_.rst", "generated/torch.Tensor.ravel.rst", "generated/torch.Tensor.real.rst", "generated/torch.Tensor.reciprocal.rst", "generated/torch.Tensor.reciprocal_.rst", "generated/torch.Tensor.record_stream.rst", "generated/torch.Tensor.register_hook.rst", "generated/torch.Tensor.remainder.rst", "generated/torch.Tensor.remainder_.rst", "generated/torch.Tensor.renorm.rst", "generated/torch.Tensor.renorm_.rst", "generated/torch.Tensor.repeat.rst", "generated/torch.Tensor.repeat_interleave.rst", "generated/torch.Tensor.requires_grad.rst", "generated/torch.Tensor.requires_grad_.rst", "generated/torch.Tensor.reshape.rst", "generated/torch.Tensor.reshape_as.rst", "generated/torch.Tensor.resize_.rst", "generated/torch.Tensor.resize_as_.rst", "generated/torch.Tensor.resolve_conj.rst", "generated/torch.Tensor.resolve_neg.rst", "generated/torch.Tensor.retain_grad.rst", "generated/torch.Tensor.retains_grad.rst", "generated/torch.Tensor.roll.rst", "generated/torch.Tensor.rot90.rst", "generated/torch.Tensor.round.rst", "generated/torch.Tensor.round_.rst", "generated/torch.Tensor.row_indices.rst", "generated/torch.Tensor.rsqrt.rst", "generated/torch.Tensor.rsqrt_.rst", "generated/torch.Tensor.scatter.rst", "generated/torch.Tensor.scatter_.rst", "generated/torch.Tensor.scatter_add.rst", "generated/torch.Tensor.scatter_add_.rst", "generated/torch.Tensor.scatter_reduce.rst", "generated/torch.Tensor.scatter_reduce_.rst", "generated/torch.Tensor.select.rst", "generated/torch.Tensor.select_scatter.rst", "generated/torch.Tensor.set_.rst", "generated/torch.Tensor.sgn.rst", "generated/torch.Tensor.sgn_.rst", "generated/torch.Tensor.shape.rst", "generated/torch.Tensor.share_memory_.rst", "generated/torch.Tensor.short.rst", "generated/torch.Tensor.sigmoid.rst", "generated/torch.Tensor.sigmoid_.rst", "generated/torch.Tensor.sign.rst", "generated/torch.Tensor.sign_.rst", "generated/torch.Tensor.signbit.rst", "generated/torch.Tensor.sin.rst", "generated/torch.Tensor.sin_.rst", "generated/torch.Tensor.sinc.rst", "generated/torch.Tensor.sinc_.rst", "generated/torch.Tensor.sinh.rst", "generated/torch.Tensor.sinh_.rst", "generated/torch.Tensor.size.rst", "generated/torch.Tensor.slice_scatter.rst", "generated/torch.Tensor.slogdet.rst", "generated/torch.Tensor.smm.rst", "generated/torch.Tensor.softmax.rst", "generated/torch.Tensor.sort.rst", "generated/torch.Tensor.sparse_dim.rst", "generated/torch.Tensor.sparse_mask.rst", "generated/torch.Tensor.sparse_resize_.rst", "generated/torch.Tensor.sparse_resize_and_clear_.rst", "generated/torch.Tensor.split.rst", "generated/torch.Tensor.sqrt.rst", "generated/torch.Tensor.sqrt_.rst", "generated/torch.Tensor.square.rst", "generated/torch.Tensor.square_.rst", "generated/torch.Tensor.squeeze.rst", "generated/torch.Tensor.squeeze_.rst", "generated/torch.Tensor.sspaddmm.rst", "generated/torch.Tensor.std.rst", "generated/torch.Tensor.stft.rst", "generated/torch.Tensor.storage.rst", "generated/torch.Tensor.storage_offset.rst", "generated/torch.Tensor.storage_type.rst", "generated/torch.Tensor.stride.rst", "generated/torch.Tensor.sub.rst", "generated/torch.Tensor.sub_.rst", "generated/torch.Tensor.subtract.rst", "generated/torch.Tensor.subtract_.rst", "generated/torch.Tensor.sum.rst", "generated/torch.Tensor.sum_to_size.rst", "generated/torch.Tensor.svd.rst", "generated/torch.Tensor.swapaxes.rst", "generated/torch.Tensor.swapdims.rst", "generated/torch.Tensor.t.rst", "generated/torch.Tensor.t_.rst", "generated/torch.Tensor.take.rst", "generated/torch.Tensor.take_along_dim.rst", "generated/torch.Tensor.tan.rst", "generated/torch.Tensor.tan_.rst", "generated/torch.Tensor.tanh.rst", "generated/torch.Tensor.tanh_.rst", "generated/torch.Tensor.tensor_split.rst", "generated/torch.Tensor.tile.rst", "generated/torch.Tensor.to.rst", "generated/torch.Tensor.to_dense.rst", "generated/torch.Tensor.to_mkldnn.rst", "generated/torch.Tensor.to_sparse.rst", "generated/torch.Tensor.to_sparse_bsc.rst", "generated/torch.Tensor.to_sparse_bsr.rst", "generated/torch.Tensor.to_sparse_coo.rst", "generated/torch.Tensor.to_sparse_csc.rst", "generated/torch.Tensor.to_sparse_csr.rst", "generated/torch.Tensor.tolist.rst", "generated/torch.Tensor.topk.rst", "generated/torch.Tensor.trace.rst", "generated/torch.Tensor.transpose.rst", "generated/torch.Tensor.transpose_.rst", "generated/torch.Tensor.triangular_solve.rst", "generated/torch.Tensor.tril.rst", "generated/torch.Tensor.tril_.rst", "generated/torch.Tensor.triu.rst", "generated/torch.Tensor.triu_.rst", "generated/torch.Tensor.true_divide.rst", "generated/torch.Tensor.true_divide_.rst", "generated/torch.Tensor.trunc.rst", "generated/torch.Tensor.trunc_.rst", "generated/torch.Tensor.type.rst", "generated/torch.Tensor.type_as.rst", "generated/torch.Tensor.unbind.rst", "generated/torch.Tensor.unflatten.rst", "generated/torch.Tensor.unfold.rst", "generated/torch.Tensor.uniform_.rst", "generated/torch.Tensor.unique.rst", "generated/torch.Tensor.unique_consecutive.rst", "generated/torch.Tensor.unsqueeze.rst", "generated/torch.Tensor.unsqueeze_.rst", "generated/torch.Tensor.untyped_storage.rst", "generated/torch.Tensor.values.rst", "generated/torch.Tensor.var.rst", "generated/torch.Tensor.vdot.rst", "generated/torch.Tensor.view.rst", "generated/torch.Tensor.view_as.rst", "generated/torch.Tensor.vsplit.rst", "generated/torch.Tensor.where.rst", "generated/torch.Tensor.xlogy.rst", "generated/torch.Tensor.xlogy_.rst", "generated/torch.Tensor.zero_.rst", "generated/torch._assert.rst", "generated/torch._foreach_abs.rst", "generated/torch._foreach_abs_.rst", "generated/torch._foreach_acos.rst", "generated/torch._foreach_acos_.rst", "generated/torch._foreach_asin.rst", "generated/torch._foreach_asin_.rst", "generated/torch._foreach_atan.rst", "generated/torch._foreach_atan_.rst", "generated/torch._foreach_ceil.rst", "generated/torch._foreach_ceil_.rst", "generated/torch._foreach_cos.rst", "generated/torch._foreach_cos_.rst", "generated/torch._foreach_cosh.rst", "generated/torch._foreach_cosh_.rst", "generated/torch._foreach_erf.rst", "generated/torch._foreach_erf_.rst", "generated/torch._foreach_erfc.rst", "generated/torch._foreach_erfc_.rst", "generated/torch._foreach_exp.rst", "generated/torch._foreach_exp_.rst", "generated/torch._foreach_expm1.rst", "generated/torch._foreach_expm1_.rst", "generated/torch._foreach_floor.rst", "generated/torch._foreach_floor_.rst", "generated/torch._foreach_frac.rst", "generated/torch._foreach_frac_.rst", "generated/torch._foreach_lgamma.rst", "generated/torch._foreach_lgamma_.rst", "generated/torch._foreach_log.rst", "generated/torch._foreach_log10.rst", "generated/torch._foreach_log10_.rst", "generated/torch._foreach_log1p.rst", "generated/torch._foreach_log1p_.rst", "generated/torch._foreach_log2.rst", "generated/torch._foreach_log2_.rst", "generated/torch._foreach_log_.rst", "generated/torch._foreach_neg.rst", "generated/torch._foreach_neg_.rst", "generated/torch._foreach_reciprocal.rst", "generated/torch._foreach_reciprocal_.rst", "generated/torch._foreach_round.rst", "generated/torch._foreach_round_.rst", "generated/torch._foreach_sigmoid.rst", "generated/torch._foreach_sigmoid_.rst", "generated/torch._foreach_sin.rst", "generated/torch._foreach_sin_.rst", "generated/torch._foreach_sinh.rst", "generated/torch._foreach_sinh_.rst", "generated/torch._foreach_sqrt.rst", "generated/torch._foreach_sqrt_.rst", "generated/torch._foreach_tan.rst", "generated/torch._foreach_tan_.rst", "generated/torch._foreach_trunc.rst", "generated/torch._foreach_trunc_.rst", "generated/torch._foreach_zero_.rst", "generated/torch._logging.set_logs.rst", "generated/torch.abs.rst", "generated/torch.absolute.rst", "generated/torch.acos.rst", "generated/torch.acosh.rst", "generated/torch.add.rst", "generated/torch.addbmm.rst", "generated/torch.addcdiv.rst", "generated/torch.addcmul.rst", "generated/torch.addmm.rst", "generated/torch.addmv.rst", "generated/torch.addr.rst", "generated/torch.adjoint.rst", "generated/torch.all.rst", "generated/torch.allclose.rst", "generated/torch.amax.rst", "generated/torch.amin.rst", "generated/torch.aminmax.rst", "generated/torch.angle.rst", "generated/torch.any.rst", "generated/torch.ao.nn.intrinsic.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBn3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU1d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvBnReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.qat.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.qat.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.qat.freeze_bn_stats.rst", "generated/torch.ao.nn.intrinsic.qat.update_bn_stats.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.BNReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU1d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU2d.rst", "generated/torch.ao.nn.intrinsic.quantized.ConvReLU3d.rst", "generated/torch.ao.nn.intrinsic.quantized.LinearReLU.rst", "generated/torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU.rst", "generated/torch.ao.nn.qat.Conv2d.rst", "generated/torch.ao.nn.qat.Conv3d.rst", "generated/torch.ao.nn.qat.Linear.rst", "generated/torch.ao.nn.qat.dynamic.Linear.rst", "generated/torch.ao.nn.quantizable.LSTM.rst", "generated/torch.ao.nn.quantizable.MultiheadAttention.rst", "generated/torch.ao.nn.quantized.BatchNorm2d.rst", "generated/torch.ao.nn.quantized.BatchNorm3d.rst", "generated/torch.ao.nn.quantized.Conv1d.rst", "generated/torch.ao.nn.quantized.Conv2d.rst", "generated/torch.ao.nn.quantized.Conv3d.rst", "generated/torch.ao.nn.quantized.ConvTranspose1d.rst", "generated/torch.ao.nn.quantized.ConvTranspose2d.rst", "generated/torch.ao.nn.quantized.ConvTranspose3d.rst", "generated/torch.ao.nn.quantized.ELU.rst", "generated/torch.ao.nn.quantized.Embedding.rst", "generated/torch.ao.nn.quantized.EmbeddingBag.rst", "generated/torch.ao.nn.quantized.FXFloatFunctional.rst", "generated/torch.ao.nn.quantized.FloatFunctional.rst", "generated/torch.ao.nn.quantized.GroupNorm.rst", "generated/torch.ao.nn.quantized.Hardswish.rst", "generated/torch.ao.nn.quantized.InstanceNorm1d.rst", "generated/torch.ao.nn.quantized.InstanceNorm2d.rst", "generated/torch.ao.nn.quantized.InstanceNorm3d.rst", "generated/torch.ao.nn.quantized.LayerNorm.rst", "generated/torch.ao.nn.quantized.LeakyReLU.rst", "generated/torch.ao.nn.quantized.Linear.rst", "generated/torch.ao.nn.quantized.QFunctional.rst", "generated/torch.ao.nn.quantized.ReLU6.rst", "generated/torch.ao.nn.quantized.Sigmoid.rst", "generated/torch.ao.nn.quantized.dynamic.GRU.rst", "generated/torch.ao.nn.quantized.dynamic.GRUCell.rst", "generated/torch.ao.nn.quantized.dynamic.LSTM.rst", "generated/torch.ao.nn.quantized.dynamic.LSTMCell.rst", "generated/torch.ao.nn.quantized.dynamic.Linear.rst", "generated/torch.ao.nn.quantized.dynamic.RNNCell.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.adaptive_avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool2d.rst", "generated/torch.ao.nn.quantized.functional.avg_pool3d.rst", "generated/torch.ao.nn.quantized.functional.celu.rst", "generated/torch.ao.nn.quantized.functional.clamp.rst", "generated/torch.ao.nn.quantized.functional.conv1d.rst", "generated/torch.ao.nn.quantized.functional.conv2d.rst", "generated/torch.ao.nn.quantized.functional.conv3d.rst", "generated/torch.ao.nn.quantized.functional.elu.rst", "generated/torch.ao.nn.quantized.functional.hardsigmoid.rst", "generated/torch.ao.nn.quantized.functional.hardswish.rst", "generated/torch.ao.nn.quantized.functional.hardtanh.rst", "generated/torch.ao.nn.quantized.functional.interpolate.rst", "generated/torch.ao.nn.quantized.functional.leaky_relu.rst", "generated/torch.ao.nn.quantized.functional.linear.rst", "generated/torch.ao.nn.quantized.functional.max_pool1d.rst", "generated/torch.ao.nn.quantized.functional.max_pool2d.rst", "generated/torch.ao.nn.quantized.functional.threshold.rst", "generated/torch.ao.nn.quantized.functional.upsample.rst", "generated/torch.ao.nn.quantized.functional.upsample_bilinear.rst", "generated/torch.ao.nn.quantized.functional.upsample_nearest.rst", "generated/torch.ao.quantization.DeQuantStub.rst", "generated/torch.ao.quantization.QuantStub.rst", "generated/torch.ao.quantization.QuantWrapper.rst", "generated/torch.ao.quantization.add_quant_dequant.rst", "generated/torch.ao.quantization.backend_config.BackendConfig.rst", "generated/torch.ao.quantization.backend_config.BackendPatternConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeConfig.rst", "generated/torch.ao.quantization.backend_config.DTypeWithConstraints.rst", "generated/torch.ao.quantization.backend_config.ObservationType.rst", "generated/torch.ao.quantization.convert.rst", "generated/torch.ao.quantization.default_eval_fn.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FakeQuantizeBase.rst", "generated/torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize.rst", "generated/torch.ao.quantization.fake_quantize.default_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_act_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_histogram_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.default_weight_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.disable_observer.rst", "generated/torch.ao.quantization.fake_quantize.enable_fake_quant.rst", "generated/torch.ao.quantization.fake_quantize.enable_observer.rst", "generated/torch.ao.quantization.fuse_modules.rst", "generated/torch.ao.quantization.fx.custom_config.ConvertCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.FuseCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.PrepareCustomConfig.rst", "generated/torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry.rst", "generated/torch.ao.quantization.observer.HistogramObserver.rst", "generated/torch.ao.quantization.observer.MinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAverageMinMaxObserver.rst", "generated/torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.NoopObserver.rst", "generated/torch.ao.quantization.observer.ObserverBase.rst", "generated/torch.ao.quantization.observer.PerChannelMinMaxObserver.rst", "generated/torch.ao.quantization.observer.PlaceholderObserver.rst", "generated/torch.ao.quantization.observer.RecordingObserver.rst", "generated/torch.ao.quantization.observer.default_debug_observer.rst", "generated/torch.ao.quantization.observer.default_dynamic_quant_observer.rst", "generated/torch.ao.quantization.observer.default_float_qparams_observer.rst", "generated/torch.ao.quantization.observer.default_histogram_observer.rst", "generated/torch.ao.quantization.observer.default_observer.rst", "generated/torch.ao.quantization.observer.default_per_channel_weight_observer.rst", "generated/torch.ao.quantization.observer.default_placeholder_observer.rst", "generated/torch.ao.quantization.observer.default_weight_observer.rst", "generated/torch.ao.quantization.observer.get_observer_state_dict.rst", "generated/torch.ao.quantization.observer.load_observer_state_dict.rst", "generated/torch.ao.quantization.prepare.rst", "generated/torch.ao.quantization.prepare_qat.rst", "generated/torch.ao.quantization.propagate_qconfig_.rst", "generated/torch.ao.quantization.qconfig.QConfig.rst", "generated/torch.ao.quantization.qconfig.default_activation_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_debug_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_per_channel_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_qat_qconfig_v2.rst", "generated/torch.ao.quantization.qconfig.default_qconfig.rst", "generated/torch.ao.quantization.qconfig.default_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig.float16_static_qconfig.rst", "generated/torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig.rst", "generated/torch.ao.quantization.qconfig.per_channel_dynamic_qconfig.rst", "generated/torch.ao.quantization.qconfig_mapping.QConfigMapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping.rst", "generated/torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping.rst", "generated/torch.ao.quantization.quantize.rst", "generated/torch.ao.quantization.quantize_dynamic.rst", "generated/torch.ao.quantization.quantize_fx.convert_fx.rst", "generated/torch.ao.quantization.quantize_fx.fuse_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_fx.rst", "generated/torch.ao.quantization.quantize_fx.prepare_qat_fx.rst", "generated/torch.ao.quantization.quantize_qat.rst", "generated/torch.ao.quantization.swap_module.rst", "generated/torch.arange.rst", "generated/torch.arccos.rst", "generated/torch.arccosh.rst", "generated/torch.arcsin.rst", "generated/torch.arcsinh.rst", "generated/torch.arctan.rst", "generated/torch.arctan2.rst", "generated/torch.arctanh.rst", "generated/torch.are_deterministic_algorithms_enabled.rst", "generated/torch.argmax.rst", "generated/torch.argmin.rst", "generated/torch.argsort.rst", "generated/torch.argwhere.rst", "generated/torch.as_strided.rst", "generated/torch.as_tensor.rst", "generated/torch.asarray.rst", "generated/torch.asin.rst", "generated/torch.asinh.rst", "generated/torch.atan.rst", "generated/torch.atan2.rst", "generated/torch.atanh.rst", "generated/torch.atleast_1d.rst", "generated/torch.atleast_2d.rst", "generated/torch.atleast_3d.rst", "generated/torch.autograd.Function.backward.rst", "generated/torch.autograd.Function.forward.rst", "generated/torch.autograd.Function.jvp.rst", "generated/torch.autograd.Function.vmap.rst", "generated/torch.autograd.backward.rst", "generated/torch.autograd.forward_ad.dual_level.rst", "generated/torch.autograd.forward_ad.make_dual.rst", "generated/torch.autograd.forward_ad.unpack_dual.rst", "generated/torch.autograd.function.FunctionCtx.mark_dirty.rst", "generated/torch.autograd.function.FunctionCtx.mark_non_differentiable.rst", "generated/torch.autograd.function.FunctionCtx.save_for_backward.rst", "generated/torch.autograd.function.FunctionCtx.set_materialize_grads.rst", "generated/torch.autograd.functional.hessian.rst", "generated/torch.autograd.functional.hvp.rst", "generated/torch.autograd.functional.jacobian.rst", "generated/torch.autograd.functional.jvp.rst", "generated/torch.autograd.functional.vhp.rst", "generated/torch.autograd.functional.vjp.rst", "generated/torch.autograd.grad.rst", "generated/torch.autograd.gradcheck.rst", "generated/torch.autograd.gradgradcheck.rst", "generated/torch.autograd.graph.Node.metadata.rst", "generated/torch.autograd.graph.Node.name.rst", "generated/torch.autograd.graph.Node.next_functions.rst", "generated/torch.autograd.graph.Node.register_hook.rst", "generated/torch.autograd.graph.Node.register_prehook.rst", "generated/torch.autograd.profiler.load_nvprof.rst", "generated/torch.autograd.profiler.profile.export_chrome_trace.rst", "generated/torch.autograd.profiler.profile.key_averages.rst", "generated/torch.autograd.profiler.profile.self_cpu_time_total.rst", "generated/torch.autograd.profiler.profile.total_average.rst", "generated/torch.baddbmm.rst", "generated/torch.bartlett_window.rst", "generated/torch.bernoulli.rst", "generated/torch.bincount.rst", "generated/torch.bitwise_and.rst", "generated/torch.bitwise_left_shift.rst", "generated/torch.bitwise_not.rst", "generated/torch.bitwise_or.rst", "generated/torch.bitwise_right_shift.rst", "generated/torch.bitwise_xor.rst", "generated/torch.blackman_window.rst", "generated/torch.block_diag.rst", "generated/torch.bmm.rst", "generated/torch.broadcast_shapes.rst", "generated/torch.broadcast_tensors.rst", "generated/torch.broadcast_to.rst", "generated/torch.bucketize.rst", "generated/torch.can_cast.rst", "generated/torch.cartesian_prod.rst", "generated/torch.cat.rst", "generated/torch.cdist.rst", "generated/torch.ceil.rst", "generated/torch.chain_matmul.rst", "generated/torch.cholesky.rst", "generated/torch.cholesky_inverse.rst", "generated/torch.cholesky_solve.rst", "generated/torch.chunk.rst", "generated/torch.clamp.rst", "generated/torch.clip.rst", "generated/torch.clone.rst", "generated/torch.column_stack.rst", "generated/torch.combinations.rst", "generated/torch.compile.rst", "generated/torch.compiled_with_cxx11_abi.rst", "generated/torch.compiler.allow_in_graph.rst", "generated/torch.compiler.assume_constant_result.rst", "generated/torch.compiler.compile.rst", "generated/torch.compiler.disable.rst", "generated/torch.compiler.list_backends.rst", "generated/torch.compiler.reset.rst", "generated/torch.complex.rst", "generated/torch.concat.rst", "generated/torch.concatenate.rst", "generated/torch.conj.rst", "generated/torch.conj_physical.rst", "generated/torch.copysign.rst", "generated/torch.corrcoef.rst", "generated/torch.cos.rst", "generated/torch.cosh.rst", "generated/torch.count_nonzero.rst", "generated/torch.cov.rst", "generated/torch.cpu.Stream.rst", "generated/torch.cpu.StreamContext.rst", "generated/torch.cpu.current_stream.rst", "generated/torch.cpu.device_count.rst", "generated/torch.cpu.is_available.rst", "generated/torch.cpu.stream.rst", "generated/torch.cpu.synchronize.rst", "generated/torch.cross.rst", "generated/torch.cuda.CUDAGraph.rst", "generated/torch.cuda.CUDAPluggableAllocator.rst", "generated/torch.cuda.Event.rst", "generated/torch.cuda.ExternalStream.rst", "generated/torch.cuda.OutOfMemoryError.rst", "generated/torch.cuda.Stream.rst", "generated/torch.cuda.StreamContext.rst", "generated/torch.cuda.caching_allocator_alloc.rst", "generated/torch.cuda.caching_allocator_delete.rst", "generated/torch.cuda.can_device_access_peer.rst", "generated/torch.cuda.change_current_allocator.rst", "generated/torch.cuda.clock_rate.rst", "generated/torch.cuda.comm.broadcast.rst", "generated/torch.cuda.comm.broadcast_coalesced.rst", "generated/torch.cuda.comm.gather.rst", "generated/torch.cuda.comm.reduce_add.rst", "generated/torch.cuda.comm.scatter.rst", "generated/torch.cuda.current_blas_handle.rst", "generated/torch.cuda.current_device.rst", "generated/torch.cuda.current_stream.rst", "generated/torch.cuda.default_stream.rst", "generated/torch.cuda.device.rst", "generated/torch.cuda.device_count.rst", "generated/torch.cuda.device_of.rst", "generated/torch.cuda.empty_cache.rst", "generated/torch.cuda.get_allocator_backend.rst", "generated/torch.cuda.get_arch_list.rst", "generated/torch.cuda.get_device_capability.rst", "generated/torch.cuda.get_device_name.rst", "generated/torch.cuda.get_device_properties.rst", "generated/torch.cuda.get_gencode_flags.rst", "generated/torch.cuda.get_rng_state.rst", "generated/torch.cuda.get_rng_state_all.rst", "generated/torch.cuda.get_sync_debug_mode.rst", "generated/torch.cuda.graph.rst", "generated/torch.cuda.graph_pool_handle.rst", "generated/torch.cuda.init.rst", "generated/torch.cuda.initial_seed.rst", "generated/torch.cuda.ipc_collect.rst", "generated/torch.cuda.is_available.rst", "generated/torch.cuda.is_current_stream_capturing.rst", "generated/torch.cuda.is_initialized.rst", "generated/torch.cuda.jiterator._create_jit_fn.rst", "generated/torch.cuda.jiterator._create_multi_output_jit_fn.rst", "generated/torch.cuda.list_gpu_processes.rst", "generated/torch.cuda.make_graphed_callables.rst", "generated/torch.cuda.manual_seed.rst", "generated/torch.cuda.manual_seed_all.rst", "generated/torch.cuda.max_memory_allocated.rst", "generated/torch.cuda.max_memory_cached.rst", "generated/torch.cuda.max_memory_reserved.rst", "generated/torch.cuda.mem_get_info.rst", "generated/torch.cuda.memory_allocated.rst", "generated/torch.cuda.memory_cached.rst", "generated/torch.cuda.memory_reserved.rst", "generated/torch.cuda.memory_snapshot.rst", "generated/torch.cuda.memory_stats.rst", "generated/torch.cuda.memory_summary.rst", "generated/torch.cuda.memory_usage.rst", "generated/torch.cuda.nvtx.mark.rst", "generated/torch.cuda.nvtx.range_pop.rst", "generated/torch.cuda.nvtx.range_push.rst", "generated/torch.cuda.power_draw.rst", "generated/torch.cuda.reset_max_memory_allocated.rst", "generated/torch.cuda.reset_max_memory_cached.rst", "generated/torch.cuda.reset_peak_memory_stats.rst", "generated/torch.cuda.seed.rst", "generated/torch.cuda.seed_all.rst", "generated/torch.cuda.set_device.rst", "generated/torch.cuda.set_per_process_memory_fraction.rst", "generated/torch.cuda.set_rng_state.rst", "generated/torch.cuda.set_rng_state_all.rst", "generated/torch.cuda.set_stream.rst", "generated/torch.cuda.set_sync_debug_mode.rst", "generated/torch.cuda.stream.rst", "generated/torch.cuda.synchronize.rst", "generated/torch.cuda.temperature.rst", "generated/torch.cuda.utilization.rst", "generated/torch.cummax.rst", "generated/torch.cummin.rst", "generated/torch.cumprod.rst", "generated/torch.cumsum.rst", "generated/torch.cumulative_trapezoid.rst", "generated/torch.deg2rad.rst", "generated/torch.dequantize.rst", "generated/torch.det.rst", "generated/torch.diag.rst", "generated/torch.diag_embed.rst", "generated/torch.diagflat.rst", "generated/torch.diagonal.rst", "generated/torch.diagonal_scatter.rst", "generated/torch.diff.rst", "generated/torch.digamma.rst", "generated/torch.dist.rst", "generated/torch.div.rst", "generated/torch.divide.rst", "generated/torch.dot.rst", "generated/torch.dsplit.rst", "generated/torch.dstack.rst", "generated/torch.einsum.rst", "generated/torch.empty.rst", "generated/torch.empty_like.rst", "generated/torch.empty_strided.rst", "generated/torch.enable_grad.rst", "generated/torch.eq.rst", "generated/torch.equal.rst", "generated/torch.erf.rst", "generated/torch.erfc.rst", "generated/torch.erfinv.rst", "generated/torch.exp.rst", "generated/torch.exp2.rst", "generated/torch.expm1.rst", "generated/torch.eye.rst", "generated/torch.fake_quantize_per_channel_affine.rst", "generated/torch.fake_quantize_per_tensor_affine.rst", "generated/torch.fft.fft.rst", "generated/torch.fft.fft2.rst", "generated/torch.fft.fftfreq.rst", "generated/torch.fft.fftn.rst", "generated/torch.fft.fftshift.rst", "generated/torch.fft.hfft.rst", "generated/torch.fft.hfft2.rst", "generated/torch.fft.hfftn.rst", "generated/torch.fft.ifft.rst", "generated/torch.fft.ifft2.rst", "generated/torch.fft.ifftn.rst", "generated/torch.fft.ifftshift.rst", "generated/torch.fft.ihfft.rst", "generated/torch.fft.ihfft2.rst", "generated/torch.fft.ihfftn.rst", "generated/torch.fft.irfft.rst", "generated/torch.fft.irfft2.rst", "generated/torch.fft.irfftn.rst", "generated/torch.fft.rfft.rst", "generated/torch.fft.rfft2.rst", "generated/torch.fft.rfftfreq.rst", "generated/torch.fft.rfftn.rst", "generated/torch.fix.rst", "generated/torch.flatten.rst", "generated/torch.flip.rst", "generated/torch.fliplr.rst", "generated/torch.flipud.rst", "generated/torch.float_power.rst", "generated/torch.floor.rst", "generated/torch.floor_divide.rst", "generated/torch.fmax.rst", "generated/torch.fmin.rst", "generated/torch.fmod.rst", "generated/torch.frac.rst", "generated/torch.frexp.rst", "generated/torch.from_dlpack.rst", "generated/torch.from_numpy.rst", "generated/torch.frombuffer.rst", "generated/torch.full.rst", "generated/torch.full_like.rst", "generated/torch.func.functional_call.rst", "generated/torch.func.functionalize.rst", "generated/torch.func.grad.rst", "generated/torch.func.grad_and_value.rst", "generated/torch.func.hessian.rst", "generated/torch.func.jacfwd.rst", "generated/torch.func.jacrev.rst", "generated/torch.func.jvp.rst", "generated/torch.func.linearize.rst", "generated/torch.func.replace_all_batch_norm_modules_.rst", "generated/torch.func.stack_module_state.rst", "generated/torch.func.vjp.rst", "generated/torch.func.vmap.rst", "generated/torch.gather.rst", "generated/torch.gcd.rst", "generated/torch.ge.rst", "generated/torch.geqrf.rst", "generated/torch.ger.rst", "generated/torch.get_default_dtype.rst", "generated/torch.get_deterministic_debug_mode.rst", "generated/torch.get_float32_matmul_precision.rst", "generated/torch.get_num_interop_threads.rst", "generated/torch.get_num_threads.rst", "generated/torch.get_rng_state.rst", "generated/torch.gradient.rst", "generated/torch.greater.rst", "generated/torch.greater_equal.rst", "generated/torch.gt.rst", "generated/torch.hamming_window.rst", "generated/torch.hann_window.rst", "generated/torch.heaviside.rst", "generated/torch.histc.rst", "generated/torch.histogram.rst", "generated/torch.histogramdd.rst", "generated/torch.hsplit.rst", "generated/torch.hspmm.rst", "generated/torch.hstack.rst", "generated/torch.hypot.rst", "generated/torch.i0.rst", "generated/torch.igamma.rst", "generated/torch.igammac.rst", "generated/torch.imag.rst", "generated/torch.index_add.rst", "generated/torch.index_copy.rst", "generated/torch.index_reduce.rst", "generated/torch.index_select.rst", "generated/torch.inference_mode.rst", "generated/torch.initial_seed.rst", "generated/torch.inner.rst", "generated/torch.inverse.rst", "generated/torch.is_complex.rst", "generated/torch.is_conj.rst", "generated/torch.is_deterministic_algorithms_warn_only_enabled.rst", "generated/torch.is_floating_point.rst", "generated/torch.is_grad_enabled.rst", "generated/torch.is_inference_mode_enabled.rst", "generated/torch.is_nonzero.rst", "generated/torch.is_storage.rst", "generated/torch.is_tensor.rst", "generated/torch.is_warn_always_enabled.rst", "generated/torch.isclose.rst", "generated/torch.isfinite.rst", "generated/torch.isin.rst", "generated/torch.isinf.rst", "generated/torch.isnan.rst", "generated/torch.isneginf.rst", "generated/torch.isposinf.rst", "generated/torch.isreal.rst", "generated/torch.istft.rst", "generated/torch.jit.Attribute.rst", "generated/torch.jit.ScriptFunction.rst", "generated/torch.jit.ScriptModule.rst", "generated/torch.jit.annotate.rst", "generated/torch.jit.enable_onednn_fusion.rst", "generated/torch.jit.fork.rst", "generated/torch.jit.freeze.rst", "generated/torch.jit.ignore.rst", "generated/torch.jit.isinstance.rst", "generated/torch.jit.load.rst", "generated/torch.jit.onednn_fusion_enabled.rst", "generated/torch.jit.optimize_for_inference.rst", "generated/torch.jit.save.rst", "generated/torch.jit.script.rst", "generated/torch.jit.script_if_tracing.rst", "generated/torch.jit.set_fusion_strategy.rst", "generated/torch.jit.strict_fusion.rst", "generated/torch.jit.trace.rst", "generated/torch.jit.trace_module.rst", "generated/torch.jit.unused.rst", "generated/torch.jit.wait.rst", "generated/torch.kaiser_window.rst", "generated/torch.kron.rst", "generated/torch.kthvalue.rst", "generated/torch.lcm.rst", "generated/torch.ldexp.rst", "generated/torch.le.rst", "generated/torch.lerp.rst", "generated/torch.less.rst", "generated/torch.less_equal.rst", "generated/torch.lgamma.rst", "generated/torch.linalg.cholesky.rst", "generated/torch.linalg.cholesky_ex.rst", "generated/torch.linalg.cond.rst", "generated/torch.linalg.cross.rst", "generated/torch.linalg.det.rst", "generated/torch.linalg.diagonal.rst", "generated/torch.linalg.eig.rst", "generated/torch.linalg.eigh.rst", "generated/torch.linalg.eigvals.rst", "generated/torch.linalg.eigvalsh.rst", "generated/torch.linalg.householder_product.rst", "generated/torch.linalg.inv.rst", "generated/torch.linalg.inv_ex.rst", "generated/torch.linalg.ldl_factor.rst", "generated/torch.linalg.ldl_factor_ex.rst", "generated/torch.linalg.ldl_solve.rst", "generated/torch.linalg.lstsq.rst", "generated/torch.linalg.lu.rst", "generated/torch.linalg.lu_factor.rst", "generated/torch.linalg.lu_factor_ex.rst", "generated/torch.linalg.lu_solve.rst", "generated/torch.linalg.matmul.rst", "generated/torch.linalg.matrix_exp.rst", "generated/torch.linalg.matrix_norm.rst", "generated/torch.linalg.matrix_power.rst", "generated/torch.linalg.matrix_rank.rst", "generated/torch.linalg.multi_dot.rst", "generated/torch.linalg.norm.rst", "generated/torch.linalg.pinv.rst", "generated/torch.linalg.qr.rst", "generated/torch.linalg.slogdet.rst", "generated/torch.linalg.solve.rst", "generated/torch.linalg.solve_ex.rst", "generated/torch.linalg.solve_triangular.rst", "generated/torch.linalg.svd.rst", "generated/torch.linalg.svdvals.rst", "generated/torch.linalg.tensorinv.rst", "generated/torch.linalg.tensorsolve.rst", "generated/torch.linalg.vander.rst", "generated/torch.linalg.vecdot.rst", "generated/torch.linalg.vector_norm.rst", "generated/torch.linspace.rst", "generated/torch.load.rst", "generated/torch.lobpcg.rst", "generated/torch.log.rst", "generated/torch.log10.rst", "generated/torch.log1p.rst", "generated/torch.log2.rst", "generated/torch.logaddexp.rst", "generated/torch.logaddexp2.rst", "generated/torch.logcumsumexp.rst", "generated/torch.logdet.rst", "generated/torch.logical_and.rst", "generated/torch.logical_not.rst", "generated/torch.logical_or.rst", "generated/torch.logical_xor.rst", "generated/torch.logit.rst", "generated/torch.logspace.rst", "generated/torch.logsumexp.rst", "generated/torch.lt.rst", "generated/torch.lu.rst", "generated/torch.lu_solve.rst", "generated/torch.lu_unpack.rst", "generated/torch.manual_seed.rst", "generated/torch.masked_select.rst", "generated/torch.matmul.rst", "generated/torch.matrix_exp.rst", "generated/torch.matrix_power.rst", "generated/torch.max.rst", "generated/torch.maximum.rst", "generated/torch.mean.rst", "generated/torch.median.rst", "generated/torch.meshgrid.rst", "generated/torch.min.rst", "generated/torch.minimum.rst", "generated/torch.mm.rst", "generated/torch.mode.rst", "generated/torch.moveaxis.rst", "generated/torch.movedim.rst", "generated/torch.mps.current_allocated_memory.rst", "generated/torch.mps.driver_allocated_memory.rst", "generated/torch.mps.empty_cache.rst", "generated/torch.mps.get_rng_state.rst", "generated/torch.mps.manual_seed.rst", "generated/torch.mps.profiler.profile.rst", "generated/torch.mps.profiler.start.rst", "generated/torch.mps.profiler.stop.rst", "generated/torch.mps.seed.rst", "generated/torch.mps.set_per_process_memory_fraction.rst", "generated/torch.mps.set_rng_state.rst", "generated/torch.mps.synchronize.rst", "generated/torch.msort.rst", "generated/torch.mul.rst", "generated/torch.multinomial.rst", "generated/torch.multiply.rst", "generated/torch.mv.rst", "generated/torch.mvlgamma.rst", "generated/torch.nan_to_num.rst", "generated/torch.nanmean.rst", "generated/torch.nanmedian.rst", "generated/torch.nanquantile.rst", "generated/torch.nansum.rst", "generated/torch.narrow.rst", "generated/torch.narrow_copy.rst", "generated/torch.ne.rst", "generated/torch.neg.rst", "generated/torch.negative.rst", "generated/torch.nextafter.rst", "generated/torch.nn.AdaptiveAvgPool1d.rst", "generated/torch.nn.AdaptiveAvgPool2d.rst", "generated/torch.nn.AdaptiveAvgPool3d.rst", "generated/torch.nn.AdaptiveLogSoftmaxWithLoss.rst", "generated/torch.nn.AdaptiveMaxPool1d.rst", "generated/torch.nn.AdaptiveMaxPool2d.rst", "generated/torch.nn.AdaptiveMaxPool3d.rst", "generated/torch.nn.AlphaDropout.rst", "generated/torch.nn.AvgPool1d.rst", "generated/torch.nn.AvgPool2d.rst", "generated/torch.nn.AvgPool3d.rst", "generated/torch.nn.BCELoss.rst", "generated/torch.nn.BCEWithLogitsLoss.rst", "generated/torch.nn.BatchNorm1d.rst", "generated/torch.nn.BatchNorm2d.rst", "generated/torch.nn.BatchNorm3d.rst", "generated/torch.nn.Bilinear.rst", "generated/torch.nn.CELU.rst", "generated/torch.nn.CTCLoss.rst", "generated/torch.nn.ChannelShuffle.rst", "generated/torch.nn.ConstantPad1d.rst", "generated/torch.nn.ConstantPad2d.rst", "generated/torch.nn.ConstantPad3d.rst", "generated/torch.nn.Conv1d.rst", "generated/torch.nn.Conv2d.rst", "generated/torch.nn.Conv3d.rst", "generated/torch.nn.ConvTranspose1d.rst", "generated/torch.nn.ConvTranspose2d.rst", "generated/torch.nn.ConvTranspose3d.rst", "generated/torch.nn.CosineEmbeddingLoss.rst", "generated/torch.nn.CosineSimilarity.rst", "generated/torch.nn.CrossEntropyLoss.rst", "generated/torch.nn.DataParallel.rst", "generated/torch.nn.Dropout.rst", "generated/torch.nn.Dropout1d.rst", "generated/torch.nn.Dropout2d.rst", "generated/torch.nn.Dropout3d.rst", "generated/torch.nn.ELU.rst", "generated/torch.nn.Embedding.rst", "generated/torch.nn.EmbeddingBag.rst", "generated/torch.nn.FeatureAlphaDropout.rst", "generated/torch.nn.Flatten.rst", "generated/torch.nn.Fold.rst", "generated/torch.nn.FractionalMaxPool2d.rst", "generated/torch.nn.FractionalMaxPool3d.rst", "generated/torch.nn.GELU.rst", "generated/torch.nn.GLU.rst", "generated/torch.nn.GRU.rst", "generated/torch.nn.GRUCell.rst", "generated/torch.nn.GaussianNLLLoss.rst", "generated/torch.nn.GroupNorm.rst", "generated/torch.nn.Hardshrink.rst", "generated/torch.nn.Hardsigmoid.rst", "generated/torch.nn.Hardswish.rst", "generated/torch.nn.Hardtanh.rst", "generated/torch.nn.HingeEmbeddingLoss.rst", "generated/torch.nn.HuberLoss.rst", "generated/torch.nn.Identity.rst", "generated/torch.nn.InstanceNorm1d.rst", "generated/torch.nn.InstanceNorm2d.rst", "generated/torch.nn.InstanceNorm3d.rst", "generated/torch.nn.KLDivLoss.rst", "generated/torch.nn.L1Loss.rst", "generated/torch.nn.LPPool1d.rst", "generated/torch.nn.LPPool2d.rst", "generated/torch.nn.LSTM.rst", "generated/torch.nn.LSTMCell.rst", "generated/torch.nn.LayerNorm.rst", "generated/torch.nn.LazyBatchNorm1d.rst", "generated/torch.nn.LazyBatchNorm2d.rst", "generated/torch.nn.LazyBatchNorm3d.rst", "generated/torch.nn.LazyConv1d.rst", "generated/torch.nn.LazyConv2d.rst", "generated/torch.nn.LazyConv3d.rst", "generated/torch.nn.LazyConvTranspose1d.rst", "generated/torch.nn.LazyConvTranspose2d.rst", "generated/torch.nn.LazyConvTranspose3d.rst", "generated/torch.nn.LazyInstanceNorm1d.rst", "generated/torch.nn.LazyInstanceNorm2d.rst", "generated/torch.nn.LazyInstanceNorm3d.rst", "generated/torch.nn.LazyLinear.rst", "generated/torch.nn.LeakyReLU.rst", "generated/torch.nn.Linear.rst", "generated/torch.nn.LocalResponseNorm.rst", "generated/torch.nn.LogSigmoid.rst", "generated/torch.nn.LogSoftmax.rst", "generated/torch.nn.MSELoss.rst", "generated/torch.nn.MarginRankingLoss.rst", "generated/torch.nn.MaxPool1d.rst", "generated/torch.nn.MaxPool2d.rst", "generated/torch.nn.MaxPool3d.rst", "generated/torch.nn.MaxUnpool1d.rst", "generated/torch.nn.MaxUnpool2d.rst", "generated/torch.nn.MaxUnpool3d.rst", "generated/torch.nn.Mish.rst", "generated/torch.nn.Module.rst", "generated/torch.nn.ModuleDict.rst", "generated/torch.nn.ModuleList.rst", "generated/torch.nn.MultiLabelMarginLoss.rst", "generated/torch.nn.MultiLabelSoftMarginLoss.rst", "generated/torch.nn.MultiMarginLoss.rst", "generated/torch.nn.MultiheadAttention.rst", "generated/torch.nn.NLLLoss.rst", "generated/torch.nn.PReLU.rst", "generated/torch.nn.PairwiseDistance.rst", "generated/torch.nn.ParameterDict.rst", "generated/torch.nn.ParameterList.rst", "generated/torch.nn.PixelShuffle.rst", "generated/torch.nn.PixelUnshuffle.rst", "generated/torch.nn.PoissonNLLLoss.rst", "generated/torch.nn.RNN.rst", "generated/torch.nn.RNNBase.rst", "generated/torch.nn.RNNCell.rst", "generated/torch.nn.RReLU.rst", "generated/torch.nn.ReLU.rst", "generated/torch.nn.ReLU6.rst", "generated/torch.nn.ReflectionPad1d.rst", "generated/torch.nn.ReflectionPad2d.rst", "generated/torch.nn.ReflectionPad3d.rst", "generated/torch.nn.ReplicationPad1d.rst", "generated/torch.nn.ReplicationPad2d.rst", "generated/torch.nn.ReplicationPad3d.rst", "generated/torch.nn.SELU.rst", "generated/torch.nn.Sequential.rst", "generated/torch.nn.SiLU.rst", "generated/torch.nn.Sigmoid.rst", "generated/torch.nn.SmoothL1Loss.rst", "generated/torch.nn.SoftMarginLoss.rst", "generated/torch.nn.Softmax.rst", "generated/torch.nn.Softmax2d.rst", "generated/torch.nn.Softmin.rst", "generated/torch.nn.Softplus.rst", "generated/torch.nn.Softshrink.rst", "generated/torch.nn.Softsign.rst", "generated/torch.nn.SyncBatchNorm.rst", "generated/torch.nn.Tanh.rst", "generated/torch.nn.Tanhshrink.rst", "generated/torch.nn.Threshold.rst", "generated/torch.nn.Transformer.rst", "generated/torch.nn.TransformerDecoder.rst", "generated/torch.nn.TransformerDecoderLayer.rst", "generated/torch.nn.TransformerEncoder.rst", "generated/torch.nn.TransformerEncoderLayer.rst", "generated/torch.nn.TripletMarginLoss.rst", "generated/torch.nn.TripletMarginWithDistanceLoss.rst", "generated/torch.nn.Unflatten.rst", "generated/torch.nn.Unfold.rst", "generated/torch.nn.Upsample.rst", "generated/torch.nn.UpsamplingBilinear2d.rst", "generated/torch.nn.UpsamplingNearest2d.rst", "generated/torch.nn.ZeroPad1d.rst", "generated/torch.nn.ZeroPad2d.rst", "generated/torch.nn.ZeroPad3d.rst", "generated/torch.nn.functional.adaptive_avg_pool1d.rst", "generated/torch.nn.functional.adaptive_avg_pool2d.rst", "generated/torch.nn.functional.adaptive_avg_pool3d.rst", "generated/torch.nn.functional.adaptive_max_pool1d.rst", "generated/torch.nn.functional.adaptive_max_pool2d.rst", "generated/torch.nn.functional.adaptive_max_pool3d.rst", "generated/torch.nn.functional.affine_grid.rst", "generated/torch.nn.functional.alpha_dropout.rst", "generated/torch.nn.functional.avg_pool1d.rst", "generated/torch.nn.functional.avg_pool2d.rst", "generated/torch.nn.functional.avg_pool3d.rst", "generated/torch.nn.functional.batch_norm.rst", "generated/torch.nn.functional.bilinear.rst", "generated/torch.nn.functional.binary_cross_entropy.rst", "generated/torch.nn.functional.binary_cross_entropy_with_logits.rst", "generated/torch.nn.functional.celu.rst", "generated/torch.nn.functional.conv1d.rst", "generated/torch.nn.functional.conv2d.rst", "generated/torch.nn.functional.conv3d.rst", "generated/torch.nn.functional.conv_transpose1d.rst", "generated/torch.nn.functional.conv_transpose2d.rst", "generated/torch.nn.functional.conv_transpose3d.rst", "generated/torch.nn.functional.cosine_embedding_loss.rst", "generated/torch.nn.functional.cosine_similarity.rst", "generated/torch.nn.functional.cross_entropy.rst", "generated/torch.nn.functional.ctc_loss.rst", "generated/torch.nn.functional.dropout.rst", "generated/torch.nn.functional.dropout1d.rst", "generated/torch.nn.functional.dropout2d.rst", "generated/torch.nn.functional.dropout3d.rst", "generated/torch.nn.functional.elu.rst", "generated/torch.nn.functional.elu_.rst", "generated/torch.nn.functional.embedding.rst", "generated/torch.nn.functional.embedding_bag.rst", "generated/torch.nn.functional.feature_alpha_dropout.rst", "generated/torch.nn.functional.fold.rst", "generated/torch.nn.functional.fractional_max_pool2d.rst", "generated/torch.nn.functional.fractional_max_pool3d.rst", "generated/torch.nn.functional.gaussian_nll_loss.rst", "generated/torch.nn.functional.gelu.rst", "generated/torch.nn.functional.glu.rst", "generated/torch.nn.functional.grid_sample.rst", "generated/torch.nn.functional.group_norm.rst", "generated/torch.nn.functional.gumbel_softmax.rst", "generated/torch.nn.functional.hardshrink.rst", "generated/torch.nn.functional.hardsigmoid.rst", "generated/torch.nn.functional.hardswish.rst", "generated/torch.nn.functional.hardtanh.rst", "generated/torch.nn.functional.hardtanh_.rst", "generated/torch.nn.functional.hinge_embedding_loss.rst", "generated/torch.nn.functional.huber_loss.rst", "generated/torch.nn.functional.instance_norm.rst", "generated/torch.nn.functional.interpolate.rst", "generated/torch.nn.functional.kl_div.rst", "generated/torch.nn.functional.l1_loss.rst", "generated/torch.nn.functional.layer_norm.rst", "generated/torch.nn.functional.leaky_relu.rst", "generated/torch.nn.functional.leaky_relu_.rst", "generated/torch.nn.functional.linear.rst", "generated/torch.nn.functional.local_response_norm.rst", "generated/torch.nn.functional.log_softmax.rst", "generated/torch.nn.functional.logsigmoid.rst", "generated/torch.nn.functional.lp_pool1d.rst", "generated/torch.nn.functional.lp_pool2d.rst", "generated/torch.nn.functional.margin_ranking_loss.rst", "generated/torch.nn.functional.max_pool1d.rst", "generated/torch.nn.functional.max_pool2d.rst", "generated/torch.nn.functional.max_pool3d.rst", "generated/torch.nn.functional.max_unpool1d.rst", "generated/torch.nn.functional.max_unpool2d.rst", "generated/torch.nn.functional.max_unpool3d.rst", "generated/torch.nn.functional.mish.rst", "generated/torch.nn.functional.mse_loss.rst", "generated/torch.nn.functional.multi_margin_loss.rst", "generated/torch.nn.functional.multilabel_margin_loss.rst", "generated/torch.nn.functional.multilabel_soft_margin_loss.rst", "generated/torch.nn.functional.nll_loss.rst", "generated/torch.nn.functional.normalize.rst", "generated/torch.nn.functional.one_hot.rst", "generated/torch.nn.functional.pad.rst", "generated/torch.nn.functional.pairwise_distance.rst", "generated/torch.nn.functional.pdist.rst", "generated/torch.nn.functional.pixel_shuffle.rst", "generated/torch.nn.functional.pixel_unshuffle.rst", "generated/torch.nn.functional.poisson_nll_loss.rst", "generated/torch.nn.functional.prelu.rst", "generated/torch.nn.functional.relu.rst", "generated/torch.nn.functional.relu6.rst", "generated/torch.nn.functional.relu_.rst", "generated/torch.nn.functional.rrelu.rst", "generated/torch.nn.functional.rrelu_.rst", "generated/torch.nn.functional.scaled_dot_product_attention.rst", "generated/torch.nn.functional.selu.rst", "generated/torch.nn.functional.sigmoid.rst", "generated/torch.nn.functional.silu.rst", "generated/torch.nn.functional.smooth_l1_loss.rst", "generated/torch.nn.functional.soft_margin_loss.rst", "generated/torch.nn.functional.softmax.rst", "generated/torch.nn.functional.softmin.rst", "generated/torch.nn.functional.softplus.rst", "generated/torch.nn.functional.softshrink.rst", "generated/torch.nn.functional.softsign.rst", "generated/torch.nn.functional.tanh.rst", "generated/torch.nn.functional.tanhshrink.rst", "generated/torch.nn.functional.threshold.rst", "generated/torch.nn.functional.threshold_.rst", "generated/torch.nn.functional.torch.nn.parallel.data_parallel.rst", "generated/torch.nn.functional.triplet_margin_loss.rst", "generated/torch.nn.functional.triplet_margin_with_distance_loss.rst", "generated/torch.nn.functional.unfold.rst", "generated/torch.nn.functional.upsample.rst", "generated/torch.nn.functional.upsample_bilinear.rst", "generated/torch.nn.functional.upsample_nearest.rst", "generated/torch.nn.modules.lazy.LazyModuleMixin.rst", "generated/torch.nn.modules.module.register_module_backward_hook.rst", "generated/torch.nn.modules.module.register_module_buffer_registration_hook.rst", "generated/torch.nn.modules.module.register_module_forward_hook.rst", "generated/torch.nn.modules.module.register_module_forward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_hook.rst", "generated/torch.nn.modules.module.register_module_full_backward_pre_hook.rst", "generated/torch.nn.modules.module.register_module_module_registration_hook.rst", "generated/torch.nn.modules.module.register_module_parameter_registration_hook.rst", "generated/torch.nn.parallel.DistributedDataParallel.rst", "generated/torch.nn.parameter.Parameter.rst", "generated/torch.nn.parameter.UninitializedBuffer.rst", "generated/torch.nn.parameter.UninitializedParameter.rst", "generated/torch.nn.utils.clip_grad_norm_.rst", "generated/torch.nn.utils.clip_grad_value_.rst", "generated/torch.nn.utils.parameters_to_vector.rst", "generated/torch.nn.utils.parametrizations.orthogonal.rst", "generated/torch.nn.utils.parametrizations.spectral_norm.rst", "generated/torch.nn.utils.parametrize.ParametrizationList.rst", "generated/torch.nn.utils.parametrize.cached.rst", "generated/torch.nn.utils.parametrize.is_parametrized.rst", "generated/torch.nn.utils.parametrize.register_parametrization.rst", "generated/torch.nn.utils.parametrize.remove_parametrizations.rst", "generated/torch.nn.utils.prune.BasePruningMethod.rst", "generated/torch.nn.utils.prune.CustomFromMask.rst", "generated/torch.nn.utils.prune.Identity.rst", "generated/torch.nn.utils.prune.L1Unstructured.rst", "generated/torch.nn.utils.prune.LnStructured.rst", "generated/torch.nn.utils.prune.PruningContainer.rst", "generated/torch.nn.utils.prune.RandomStructured.rst", "generated/torch.nn.utils.prune.RandomUnstructured.rst", "generated/torch.nn.utils.prune.custom_from_mask.rst", "generated/torch.nn.utils.prune.global_unstructured.rst", "generated/torch.nn.utils.prune.identity.rst", "generated/torch.nn.utils.prune.is_pruned.rst", "generated/torch.nn.utils.prune.l1_unstructured.rst", "generated/torch.nn.utils.prune.ln_structured.rst", "generated/torch.nn.utils.prune.random_structured.rst", "generated/torch.nn.utils.prune.random_unstructured.rst", "generated/torch.nn.utils.prune.remove.rst", "generated/torch.nn.utils.remove_spectral_norm.rst", "generated/torch.nn.utils.remove_weight_norm.rst", "generated/torch.nn.utils.rnn.PackedSequence.rst", "generated/torch.nn.utils.rnn.pack_padded_sequence.rst", "generated/torch.nn.utils.rnn.pack_sequence.rst", "generated/torch.nn.utils.rnn.pad_packed_sequence.rst", "generated/torch.nn.utils.rnn.pad_sequence.rst", "generated/torch.nn.utils.rnn.unpack_sequence.rst", "generated/torch.nn.utils.rnn.unpad_sequence.rst", "generated/torch.nn.utils.skip_init.rst", "generated/torch.nn.utils.spectral_norm.rst", "generated/torch.nn.utils.stateless.functional_call.rst", "generated/torch.nn.utils.vector_to_parameters.rst", "generated/torch.nn.utils.weight_norm.rst", "generated/torch.no_grad.rst", "generated/torch.nonzero.rst", "generated/torch.norm.rst", "generated/torch.normal.rst", "generated/torch.not_equal.rst", "generated/torch.numel.rst", "generated/torch.ones.rst", "generated/torch.ones_like.rst", "generated/torch.onnx.ExportOptions.rst", "generated/torch.onnx.ExportOutput.rst", "generated/torch.onnx.ExportOutputSerializer.rst", "generated/torch.onnx.JitScalarType.rst", "generated/torch.onnx.OnnxExporterError.rst", "generated/torch.onnx.verification.GraphInfo.rst", "generated/torch.onnx.verification.VerificationOptions.rst", "generated/torch.optim.ASGD.rst", "generated/torch.optim.Adadelta.rst", "generated/torch.optim.Adagrad.rst", "generated/torch.optim.Adam.rst", "generated/torch.optim.AdamW.rst", "generated/torch.optim.Adamax.rst", "generated/torch.optim.LBFGS.rst", "generated/torch.optim.NAdam.rst", "generated/torch.optim.Optimizer.add_param_group.rst", "generated/torch.optim.Optimizer.load_state_dict.rst", "generated/torch.optim.Optimizer.state_dict.rst", "generated/torch.optim.Optimizer.step.rst", "generated/torch.optim.Optimizer.zero_grad.rst", "generated/torch.optim.RAdam.rst", "generated/torch.optim.RMSprop.rst", "generated/torch.optim.Rprop.rst", "generated/torch.optim.SGD.rst", "generated/torch.optim.SparseAdam.rst", "generated/torch.optim.lr_scheduler.ChainedScheduler.rst", "generated/torch.optim.lr_scheduler.ConstantLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingLR.rst", "generated/torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.rst", "generated/torch.optim.lr_scheduler.CyclicLR.rst", "generated/torch.optim.lr_scheduler.ExponentialLR.rst", "generated/torch.optim.lr_scheduler.LambdaLR.rst", "generated/torch.optim.lr_scheduler.LinearLR.rst", "generated/torch.optim.lr_scheduler.MultiStepLR.rst", "generated/torch.optim.lr_scheduler.MultiplicativeLR.rst", "generated/torch.optim.lr_scheduler.OneCycleLR.rst", "generated/torch.optim.lr_scheduler.PolynomialLR.rst", "generated/torch.optim.lr_scheduler.ReduceLROnPlateau.rst", "generated/torch.optim.lr_scheduler.SequentialLR.rst", "generated/torch.optim.lr_scheduler.StepLR.rst", "generated/torch.orgqr.rst", "generated/torch.ormqr.rst", "generated/torch.outer.rst", "generated/torch.pca_lowrank.rst", "generated/torch.permute.rst", "generated/torch.pinverse.rst", "generated/torch.poisson.rst", "generated/torch.polar.rst", "generated/torch.polygamma.rst", "generated/torch.positive.rst", "generated/torch.pow.rst", "generated/torch.prod.rst", "generated/torch.promote_types.rst", "generated/torch.qr.rst", "generated/torch.quantile.rst", "generated/torch.quantize_per_channel.rst", "generated/torch.quantize_per_tensor.rst", "generated/torch.quantized_batch_norm.rst", "generated/torch.quantized_max_pool1d.rst", "generated/torch.quantized_max_pool2d.rst", "generated/torch.quasirandom.SobolEngine.rst", "generated/torch.rad2deg.rst", "generated/torch.rand.rst", "generated/torch.rand_like.rst", "generated/torch.randint.rst", "generated/torch.randint_like.rst", "generated/torch.randn.rst", "generated/torch.randn_like.rst", "generated/torch.randperm.rst", "generated/torch.range.rst", "generated/torch.ravel.rst", "generated/torch.real.rst", "generated/torch.reciprocal.rst", "generated/torch.remainder.rst", "generated/torch.renorm.rst", "generated/torch.repeat_interleave.rst", "generated/torch.reshape.rst", "generated/torch.resolve_conj.rst", "generated/torch.resolve_neg.rst", "generated/torch.result_type.rst", "generated/torch.roll.rst", "generated/torch.rot90.rst", "generated/torch.round.rst", "generated/torch.row_stack.rst", "generated/torch.rsqrt.rst", "generated/torch.save.rst", "generated/torch.scatter.rst", "generated/torch.scatter_add.rst", "generated/torch.scatter_reduce.rst", "generated/torch.searchsorted.rst", "generated/torch.seed.rst", "generated/torch.select.rst", "generated/torch.select_scatter.rst", "generated/torch.set_default_device.rst", "generated/torch.set_default_dtype.rst", "generated/torch.set_default_tensor_type.rst", "generated/torch.set_deterministic_debug_mode.rst", "generated/torch.set_float32_matmul_precision.rst", "generated/torch.set_flush_denormal.rst", "generated/torch.set_grad_enabled.rst", "generated/torch.set_num_interop_threads.rst", "generated/torch.set_num_threads.rst", "generated/torch.set_printoptions.rst", "generated/torch.set_rng_state.rst", "generated/torch.set_warn_always.rst", "generated/torch.sgn.rst", "generated/torch.sigmoid.rst", "generated/torch.sign.rst", "generated/torch.signal.windows.bartlett.rst", "generated/torch.signal.windows.blackman.rst", "generated/torch.signal.windows.cosine.rst", "generated/torch.signal.windows.exponential.rst", "generated/torch.signal.windows.gaussian.rst", "generated/torch.signal.windows.general_cosine.rst", "generated/torch.signal.windows.general_hamming.rst", "generated/torch.signal.windows.hamming.rst", "generated/torch.signal.windows.hann.rst", "generated/torch.signal.windows.kaiser.rst", "generated/torch.signal.windows.nuttall.rst", "generated/torch.signbit.rst", "generated/torch.sin.rst", "generated/torch.sinc.rst", "generated/torch.sinh.rst", "generated/torch.slice_scatter.rst", "generated/torch.slogdet.rst", "generated/torch.smm.rst", "generated/torch.softmax.rst", "generated/torch.sort.rst", "generated/torch.sparse.addmm.rst", "generated/torch.sparse.check_sparse_tensor_invariants.rst", "generated/torch.sparse.log_softmax.rst", "generated/torch.sparse.mm.rst", "generated/torch.sparse.sampled_addmm.rst", "generated/torch.sparse.softmax.rst", "generated/torch.sparse.spdiags.rst", "generated/torch.sparse.sum.rst", "generated/torch.sparse_bsc_tensor.rst", "generated/torch.sparse_bsr_tensor.rst", "generated/torch.sparse_compressed_tensor.rst", "generated/torch.sparse_coo_tensor.rst", "generated/torch.sparse_csc_tensor.rst", "generated/torch.sparse_csr_tensor.rst", "generated/torch.split.rst", "generated/torch.sqrt.rst", "generated/torch.square.rst", "generated/torch.squeeze.rst", "generated/torch.sspaddmm.rst", "generated/torch.stack.rst", "generated/torch.std.rst", "generated/torch.std_mean.rst", "generated/torch.stft.rst", "generated/torch.sub.rst", "generated/torch.subtract.rst", "generated/torch.sum.rst", "generated/torch.svd.rst", "generated/torch.svd_lowrank.rst", "generated/torch.swapaxes.rst", "generated/torch.swapdims.rst", "generated/torch.sym_float.rst", "generated/torch.sym_int.rst", "generated/torch.sym_max.rst", "generated/torch.sym_min.rst", "generated/torch.sym_not.rst", "generated/torch.t.rst", "generated/torch.take.rst", "generated/torch.take_along_dim.rst", "generated/torch.tan.rst", "generated/torch.tanh.rst", "generated/torch.tensor.rst", "generated/torch.tensor_split.rst", "generated/torch.tensordot.rst", "generated/torch.tile.rst", "generated/torch.topk.rst", "generated/torch.trace.rst", "generated/torch.transpose.rst", "generated/torch.trapezoid.rst", "generated/torch.trapz.rst", "generated/torch.triangular_solve.rst", "generated/torch.tril.rst", "generated/torch.tril_indices.rst", "generated/torch.triu.rst", "generated/torch.triu_indices.rst", "generated/torch.true_divide.rst", "generated/torch.trunc.rst", "generated/torch.unbind.rst", "generated/torch.unflatten.rst", "generated/torch.unique.rst", "generated/torch.unique_consecutive.rst", "generated/torch.unsqueeze.rst", "generated/torch.use_deterministic_algorithms.rst", "generated/torch.utils.generate_methods_for_privateuse1_backend.rst", "generated/torch.utils.get_cpp_backtrace.rst", "generated/torch.utils.rename_privateuse1_backend.rst", "generated/torch.utils.set_module.rst", "generated/torch.vander.rst", "generated/torch.var.rst", "generated/torch.var_mean.rst", "generated/torch.vdot.rst", "generated/torch.view_as_complex.rst", "generated/torch.view_as_real.rst", "generated/torch.vmap.rst", "generated/torch.vsplit.rst", "generated/torch.vstack.rst", "generated/torch.where.rst", "generated/torch.xlogy.rst", "generated/torch.zeros.rst", "generated/torch.zeros_like.rst", "hub.rst", "index.rst", "ir.rst", "jit.rst", "jit_builtin_functions.rst", "jit_language_reference.rst", "jit_language_reference_v2.rst", "jit_python_reference.rst", "jit_unsupported.rst", "jit_utils.rst", "library.rst", "linalg.rst", "logging.rst", "masked.rst", "mobile_optimizer.rst", "model_zoo.rst", "monitor.rst", "mps.rst", "multiprocessing.rst", "name_inference.rst", "named_tensor.rst", "nested.rst", "nn.rst", "nn.functional.rst", "nn.init.rst", "notes/amp_examples.rst", "notes/autograd.rst", "notes/broadcasting.rst", "notes/cpu_threading_torchscript_inference.rst", "notes/cuda.rst", "notes/ddp.rst", "notes/extending.rst", "notes/extending.func.rst", "notes/faq.rst", "notes/gradcheck.rst", "notes/hip.rst", "notes/large_scale_deployments.rst", "notes/modules.rst", "notes/mps.rst", "notes/multiprocessing.rst", "notes/numerical_accuracy.rst", "notes/randomness.rst", "notes/serialization.rst", "notes/windows.rst", "onnx.rst", "onnx_diagnostics.rst", "onnx_supported_aten_ops.rst", "optim.rst", "package.rst", "pipeline.rst", "profiler.rst", "quantization.rst", "quantization-accuracy-debugging.rst", "quantization-backend-configuration.rst", "quantization-support.rst", "random.rst", "rpc.rst", "rpc/distributed_autograd.rst", "rpc/rref.rst", "signal.rst", "sparse.rst", "special.rst", "storage.rst", "tensor_attributes.rst", "tensor_view.rst", "tensorboard.rst", "tensors.rst", "testing.rst", "torch.rst", "torch.ao.ns._numeric_suite.rst", "torch.ao.ns._numeric_suite_fx.rst", "torch.overrides.rst", "type_info.rst", "utils.rst"], "titles": ["Automatic Mixed Precision package - torch.amp", "Automatic differentiation package - torch.autograd", "torch.backends", "Benchmark Utils - torch.utils.benchmark", "torch.utils.bottleneck", "torch.utils.checkpoint", "PyTorch Governance | Build + CI", "PyTorch Contribution Guide", "PyTorch Design Philosophy", "PyTorch Governance | Mechanics", "PyTorch Governance | Maintainers", "Best Practices for Backends", "CUDAGraph Trees", "Custom Backends", "TorchDynamo Deeper Dive", "Dynamic shapes", "Fake tensor", "Frequently Asked Questions", "TorchDynamo APIs to control fine-grained tracing", "Getting Started", "Guards Overview", "torch.compile", "TorchInductor GPU Profiling", "PyTorch 2.0 NNModule Support", "PyTorch 2.0 Performance Dashboard", "Profiling to understand torch.compile performance", "Technical Overview", "torch.func interaction with torch.compile", "Writing Graph Transformations on ATen IR", "PyTorch 2.0 Troubleshooting", "torch.compiler", "Complex Numbers", "torch.__config__", "torch.utils.cpp_extension", "C++", "torch.cpu", "torch.cuda", "CUDA Stream Sanitizer", "&lt;no title&gt;", "&lt;no title&gt;", "torch.utils.data", "DDP Communication Hooks", "torch::deploy has been moved to pytorch/multipy", "Distributed communication package - torch.distributed", "Generic Join Context Manager", "Distributed Checkpoint - torch.distributed.checkpoint", "Torch Distributed Elastic", "Distributed Optimizers", "Tensor Parallelism - torch.distributed.tensor.parallel", "Probability distributions - torch.distributions", "torch.utils.dlpack", "Elastic Agent", "Customization", "Error Propagation", "Events", "Examples", "TorchElastic Kubernetes", "Metrics", "Multiprocessing", "Quickstart", "Rendezvous", "torchrun (Elastic Launch)", "Expiration Timers", "Train script", "torch._export.export", "torch.fft", "FullyShardedDataParallel", "torch.func", "torch.func API Reference", "Patching Batch Norm", "Migrating from functorch to torch.func", "UX Limitations", "torch.func Whirlwind Tour", "torch.futures", "torch.fx", "ExportDB", "python.assert", "python.builtin", "python.closure", "python.context-manager", "python.control-flow", "python.data-structure", "torch.cond", "torch.dynamic-shape", "torch.escape-hatch", "torch.map", "DIAGSYS0001:arg-format-too-verbose", "FXE0001:fx-tracer-success", "FXE0002:fx-tracer-failure", "FXE0003:fx-frontend-aotautograd", "FXE0004:fx-pass-convert-neg-to-sigmoid", "FXE0005:fx-ir-add-node", "FXE0006:atenlib-symbolic-function", "FXE0007:atenlib-fx-to-onnx", "FXE0008:fx-node-to-onnx", "FXE0009:fx-frontend-dynamo-make-fx", "FXE0010:fx-pass", "FXE0011:no-symbolic-function-for-call-function", "FXE0012:unsupported-fx-node-analysis", "FXE0013:op-level-debugging", "FXE0014:find-opschema-matched-symbolic-function", "FXE0015:fx-node-insert-type-promotion", "FXE0016:find-operator-overloads-in-onnx-registry", "POE0001:node-missing-onnx-shape-inference", "POE0002:missing-custom-symbolic-function", "POE0003:missing-standard-symbolic-function", "POE0004:operator-supported-in-newer-opset-version", "Generator", "torch.Tensor.abs", "torch.Tensor.abs_", "torch.Tensor.absolute", "torch.Tensor.absolute_", "torch.Tensor.acos", "torch.Tensor.acos_", "torch.Tensor.acosh", "torch.Tensor.acosh_", "torch.Tensor.add", "torch.Tensor.add_", "torch.Tensor.addbmm", "torch.Tensor.addbmm_", "torch.Tensor.addcdiv", "torch.Tensor.addcdiv_", "torch.Tensor.addcmul", "torch.Tensor.addcmul_", "torch.Tensor.addmm", "torch.Tensor.addmm_", "torch.Tensor.addmv", "torch.Tensor.addmv_", "torch.Tensor.addr", "torch.Tensor.addr_", "torch.Tensor.adjoint", "torch.Tensor.all", "torch.Tensor.allclose", "torch.Tensor.amax", "torch.Tensor.amin", "torch.Tensor.aminmax", "torch.Tensor.angle", "torch.Tensor.any", "torch.Tensor.apply_", "torch.Tensor.arccos", "torch.Tensor.arccos_", "torch.Tensor.arccosh", "torch.Tensor.arccosh_", "torch.Tensor.arcsin", "torch.Tensor.arcsin_", "torch.Tensor.arcsinh", "torch.Tensor.arcsinh_", "torch.Tensor.arctan", "torch.Tensor.arctan2", "torch.Tensor.arctan2_", "torch.Tensor.arctan_", "torch.Tensor.arctanh", "torch.Tensor.arctanh_", "torch.Tensor.argmax", "torch.Tensor.argmin", "torch.Tensor.argsort", "torch.Tensor.argwhere", "torch.Tensor.as_strided", "torch.Tensor.as_subclass", "torch.Tensor.asin", "torch.Tensor.asin_", "torch.Tensor.asinh", "torch.Tensor.asinh_", "torch.Tensor.atan", "torch.Tensor.atan2", "torch.Tensor.atan2_", "torch.Tensor.atan_", "torch.Tensor.atanh", "torch.Tensor.atanh_", "torch.Tensor.backward", "torch.Tensor.baddbmm", "torch.Tensor.baddbmm_", "torch.Tensor.bernoulli", "torch.Tensor.bernoulli_", "torch.Tensor.bfloat16", "torch.Tensor.bincount", "torch.Tensor.bitwise_and", "torch.Tensor.bitwise_and_", "torch.Tensor.bitwise_left_shift", "torch.Tensor.bitwise_left_shift_", "torch.Tensor.bitwise_not", "torch.Tensor.bitwise_not_", "torch.Tensor.bitwise_or", "torch.Tensor.bitwise_or_", "torch.Tensor.bitwise_right_shift", "torch.Tensor.bitwise_right_shift_", "torch.Tensor.bitwise_xor", "torch.Tensor.bitwise_xor_", "torch.Tensor.bmm", "torch.Tensor.bool", "torch.Tensor.broadcast_to", "torch.Tensor.byte", "torch.Tensor.cauchy_", "torch.Tensor.ccol_indices", "torch.Tensor.cdouble", "torch.Tensor.ceil", "torch.Tensor.ceil_", "torch.Tensor.cfloat", "torch.Tensor.chalf", "torch.Tensor.char", "torch.Tensor.cholesky", "torch.Tensor.cholesky_inverse", "torch.Tensor.cholesky_solve", "torch.Tensor.chunk", "torch.Tensor.clamp", "torch.Tensor.clamp_", "torch.Tensor.clip", "torch.Tensor.clip_", "torch.Tensor.clone", "torch.Tensor.coalesce", "torch.Tensor.col_indices", "torch.Tensor.conj", "torch.Tensor.conj_physical", "torch.Tensor.conj_physical_", "torch.Tensor.contiguous", "torch.Tensor.copy_", "torch.Tensor.copysign", "torch.Tensor.copysign_", "torch.Tensor.corrcoef", "torch.Tensor.cos", "torch.Tensor.cos_", "torch.Tensor.cosh", "torch.Tensor.cosh_", "torch.Tensor.count_nonzero", "torch.Tensor.cov", "torch.Tensor.cpu", "torch.Tensor.cross", "torch.Tensor.crow_indices", "torch.Tensor.cuda", "torch.Tensor.cummax", "torch.Tensor.cummin", "torch.Tensor.cumprod", "torch.Tensor.cumprod_", "torch.Tensor.cumsum", "torch.Tensor.cumsum_", "torch.Tensor.data_ptr", "torch.Tensor.deg2rad", "torch.Tensor.dense_dim", "torch.Tensor.dequantize", "torch.Tensor.det", "torch.Tensor.detach", "torch.Tensor.detach_", "torch.Tensor.device", "torch.Tensor.diag", "torch.Tensor.diag_embed", "torch.Tensor.diagflat", "torch.Tensor.diagonal", "torch.Tensor.diagonal_scatter", "torch.Tensor.diff", "torch.Tensor.digamma", "torch.Tensor.digamma_", "torch.Tensor.dim", "torch.Tensor.dist", "torch.Tensor.div", "torch.Tensor.div_", "torch.Tensor.divide", "torch.Tensor.divide_", "torch.Tensor.dot", "torch.Tensor.double", "torch.Tensor.dsplit", "torch.Tensor.element_size", "torch.Tensor.eq", "torch.Tensor.eq_", "torch.Tensor.equal", "torch.Tensor.erf", "torch.Tensor.erf_", "torch.Tensor.erfc", "torch.Tensor.erfc_", "torch.Tensor.erfinv", "torch.Tensor.erfinv_", "torch.Tensor.exp", "torch.Tensor.exp_", "torch.Tensor.expand", "torch.Tensor.expand_as", "torch.Tensor.expm1", "torch.Tensor.expm1_", "torch.Tensor.exponential_", "torch.Tensor.fill_", "torch.Tensor.fill_diagonal_", "torch.Tensor.fix", "torch.Tensor.fix_", "torch.Tensor.flatten", "torch.Tensor.flip", "torch.Tensor.fliplr", "torch.Tensor.flipud", "torch.Tensor.float", "torch.Tensor.float_power", "torch.Tensor.float_power_", "torch.Tensor.floor", "torch.Tensor.floor_", "torch.Tensor.floor_divide", "torch.Tensor.floor_divide_", "torch.Tensor.fmax", "torch.Tensor.fmin", "torch.Tensor.fmod", "torch.Tensor.fmod_", "torch.Tensor.frac", "torch.Tensor.frac_", "torch.Tensor.frexp", "torch.Tensor.gather", "torch.Tensor.gcd", "torch.Tensor.gcd_", "torch.Tensor.ge", "torch.Tensor.ge_", "torch.Tensor.geometric_", "torch.Tensor.geqrf", "torch.Tensor.ger", "torch.Tensor.get_device", "torch.Tensor.grad", "torch.Tensor.greater", "torch.Tensor.greater_", "torch.Tensor.greater_equal", "torch.Tensor.greater_equal_", "torch.Tensor.gt", "torch.Tensor.gt_", "torch.Tensor.half", "torch.Tensor.hardshrink", "torch.Tensor.heaviside", "torch.Tensor.histc", "torch.Tensor.histogram", "torch.Tensor.hsplit", "torch.Tensor.hypot", "torch.Tensor.hypot_", "torch.Tensor.i0", "torch.Tensor.i0_", "torch.Tensor.igamma", "torch.Tensor.igamma_", "torch.Tensor.igammac", "torch.Tensor.igammac_", "torch.Tensor.imag", "torch.Tensor.index_add", "torch.Tensor.index_add_", "torch.Tensor.index_copy", "torch.Tensor.index_copy_", "torch.Tensor.index_fill", "torch.Tensor.index_fill_", "torch.Tensor.index_put", "torch.Tensor.index_put_", "torch.Tensor.index_reduce", "torch.Tensor.index_reduce_", "torch.Tensor.index_select", "torch.Tensor.indices", "torch.Tensor.inner", "torch.Tensor.int", "torch.Tensor.int_repr", "torch.Tensor.inverse", "torch.Tensor.is_coalesced", "torch.Tensor.is_complex", "torch.Tensor.is_conj", "torch.Tensor.is_contiguous", "torch.Tensor.is_cuda", "torch.Tensor.is_floating_point", "torch.Tensor.is_inference", "torch.Tensor.is_leaf", "torch.Tensor.is_meta", "torch.Tensor.is_pinned", "torch.Tensor.is_quantized", "torch.Tensor.is_set_to", "torch.Tensor.is_shared", "torch.Tensor.is_signed", "torch.Tensor.is_sparse", "torch.Tensor.is_sparse_csr", "torch.Tensor.isclose", "torch.Tensor.isfinite", "torch.Tensor.isinf", "torch.Tensor.isnan", "torch.Tensor.isneginf", "torch.Tensor.isposinf", "torch.Tensor.isreal", "torch.Tensor.istft", "torch.Tensor.item", "torch.Tensor.itemsize", "torch.Tensor.kthvalue", "torch.Tensor.lcm", "torch.Tensor.lcm_", "torch.Tensor.ldexp", "torch.Tensor.ldexp_", "torch.Tensor.le", "torch.Tensor.le_", "torch.Tensor.lerp", "torch.Tensor.lerp_", "torch.Tensor.less", "torch.Tensor.less_", "torch.Tensor.less_equal", "torch.Tensor.less_equal_", "torch.Tensor.lgamma", "torch.Tensor.lgamma_", "torch.Tensor.log", "torch.Tensor.log10", "torch.Tensor.log10_", "torch.Tensor.log1p", "torch.Tensor.log1p_", "torch.Tensor.log2", "torch.Tensor.log2_", "torch.Tensor.log_", "torch.Tensor.log_normal_", "torch.Tensor.logaddexp", "torch.Tensor.logaddexp2", "torch.Tensor.logcumsumexp", "torch.Tensor.logdet", "torch.Tensor.logical_and", "torch.Tensor.logical_and_", "torch.Tensor.logical_not", "torch.Tensor.logical_not_", "torch.Tensor.logical_or", "torch.Tensor.logical_or_", "torch.Tensor.logical_xor", "torch.Tensor.logical_xor_", "torch.Tensor.logit", "torch.Tensor.logit_", "torch.Tensor.logsumexp", "torch.Tensor.long", "torch.Tensor.lt", "torch.Tensor.lt_", "torch.Tensor.lu", "torch.Tensor.lu_solve", "torch.Tensor.map_", "torch.Tensor.masked_fill", "torch.Tensor.masked_fill_", "torch.Tensor.masked_scatter", "torch.Tensor.masked_scatter_", "torch.Tensor.masked_select", "torch.Tensor.matmul", "torch.Tensor.matrix_exp", "torch.Tensor.matrix_power", "torch.Tensor.max", "torch.Tensor.maximum", "torch.Tensor.mean", "torch.Tensor.median", "torch.Tensor.min", "torch.Tensor.minimum", "torch.Tensor.mm", "torch.Tensor.mode", "torch.Tensor.moveaxis", "torch.Tensor.movedim", "torch.Tensor.msort", "torch.Tensor.mul", "torch.Tensor.mul_", "torch.Tensor.multinomial", "torch.Tensor.multiply", "torch.Tensor.multiply_", "torch.Tensor.mv", "torch.Tensor.mvlgamma", "torch.Tensor.mvlgamma_", "torch.Tensor.nan_to_num", "torch.Tensor.nan_to_num_", "torch.Tensor.nanmean", "torch.Tensor.nanmedian", "torch.Tensor.nanquantile", "torch.Tensor.nansum", "torch.Tensor.narrow", "torch.Tensor.narrow_copy", "torch.Tensor.nbytes", "torch.Tensor.ndim", "torch.Tensor.ndimension", "torch.Tensor.ne", "torch.Tensor.ne_", "torch.Tensor.neg", "torch.Tensor.neg_", "torch.Tensor.negative", "torch.Tensor.negative_", "torch.Tensor.nelement", "torch.Tensor.new_empty", "torch.Tensor.new_full", "torch.Tensor.new_ones", "torch.Tensor.new_tensor", "torch.Tensor.new_zeros", "torch.Tensor.nextafter", "torch.Tensor.nextafter_", "torch.Tensor.nonzero", "torch.Tensor.norm", "torch.Tensor.normal_", "torch.Tensor.not_equal", "torch.Tensor.not_equal_", "torch.Tensor.numel", "torch.Tensor.numpy", "torch.Tensor.orgqr", "torch.Tensor.ormqr", "torch.Tensor.outer", "torch.Tensor.permute", "torch.Tensor.pin_memory", "torch.Tensor.pinverse", "torch.Tensor.polygamma", "torch.Tensor.polygamma_", "torch.Tensor.positive", "torch.Tensor.pow", "torch.Tensor.pow_", "torch.Tensor.prod", "torch.Tensor.put_", "torch.Tensor.q_per_channel_axis", "torch.Tensor.q_per_channel_scales", "torch.Tensor.q_per_channel_zero_points", "torch.Tensor.q_scale", "torch.Tensor.q_zero_point", "torch.Tensor.qr", "torch.Tensor.qscheme", "torch.Tensor.quantile", "torch.Tensor.rad2deg", "torch.Tensor.random_", "torch.Tensor.ravel", "torch.Tensor.real", "torch.Tensor.reciprocal", "torch.Tensor.reciprocal_", "torch.Tensor.record_stream", "torch.Tensor.register_hook", "torch.Tensor.remainder", "torch.Tensor.remainder_", "torch.Tensor.renorm", "torch.Tensor.renorm_", "torch.Tensor.repeat", "torch.Tensor.repeat_interleave", "torch.Tensor.requires_grad", "torch.Tensor.requires_grad_", "torch.Tensor.reshape", "torch.Tensor.reshape_as", "torch.Tensor.resize_", "torch.Tensor.resize_as_", "torch.Tensor.resolve_conj", "torch.Tensor.resolve_neg", "torch.Tensor.retain_grad", "torch.Tensor.retains_grad", "torch.Tensor.roll", "torch.Tensor.rot90", "torch.Tensor.round", "torch.Tensor.round_", "torch.Tensor.row_indices", "torch.Tensor.rsqrt", "torch.Tensor.rsqrt_", "torch.Tensor.scatter", "torch.Tensor.scatter_", "torch.Tensor.scatter_add", "torch.Tensor.scatter_add_", "torch.Tensor.scatter_reduce", "torch.Tensor.scatter_reduce_", "torch.Tensor.select", "torch.Tensor.select_scatter", "torch.Tensor.set_", "torch.Tensor.sgn", "torch.Tensor.sgn_", "torch.Tensor.shape", "torch.Tensor.share_memory_", "torch.Tensor.short", "torch.Tensor.sigmoid", "torch.Tensor.sigmoid_", "torch.Tensor.sign", "torch.Tensor.sign_", "torch.Tensor.signbit", "torch.Tensor.sin", "torch.Tensor.sin_", "torch.Tensor.sinc", "torch.Tensor.sinc_", "torch.Tensor.sinh", "torch.Tensor.sinh_", "torch.Tensor.size", "torch.Tensor.slice_scatter", "torch.Tensor.slogdet", "torch.Tensor.smm", "torch.Tensor.softmax", "torch.Tensor.sort", "torch.Tensor.sparse_dim", "torch.Tensor.sparse_mask", "torch.Tensor.sparse_resize_", "torch.Tensor.sparse_resize_and_clear_", "torch.Tensor.split", "torch.Tensor.sqrt", "torch.Tensor.sqrt_", "torch.Tensor.square", "torch.Tensor.square_", "torch.Tensor.squeeze", "torch.Tensor.squeeze_", "torch.Tensor.sspaddmm", "torch.Tensor.std", "torch.Tensor.stft", "torch.Tensor.storage", "torch.Tensor.storage_offset", "torch.Tensor.storage_type", "torch.Tensor.stride", "torch.Tensor.sub", "torch.Tensor.sub_", "torch.Tensor.subtract", "torch.Tensor.subtract_", "torch.Tensor.sum", "torch.Tensor.sum_to_size", "torch.Tensor.svd", "torch.Tensor.swapaxes", "torch.Tensor.swapdims", "torch.Tensor.t", "torch.Tensor.t_", "torch.Tensor.take", "torch.Tensor.take_along_dim", "torch.Tensor.tan", "torch.Tensor.tan_", "torch.Tensor.tanh", "torch.Tensor.tanh_", "torch.Tensor.tensor_split", "torch.Tensor.tile", "torch.Tensor.to", "torch.Tensor.to_dense", "torch.Tensor.to_mkldnn", "torch.Tensor.to_sparse", "torch.Tensor.to_sparse_bsc", "torch.Tensor.to_sparse_bsr", "torch.Tensor.to_sparse_coo", "torch.Tensor.to_sparse_csc", "torch.Tensor.to_sparse_csr", "torch.Tensor.tolist", "torch.Tensor.topk", "torch.Tensor.trace", "torch.Tensor.transpose", "torch.Tensor.transpose_", "torch.Tensor.triangular_solve", "torch.Tensor.tril", "torch.Tensor.tril_", "torch.Tensor.triu", "torch.Tensor.triu_", "torch.Tensor.true_divide", "torch.Tensor.true_divide_", "torch.Tensor.trunc", "torch.Tensor.trunc_", "torch.Tensor.type", "torch.Tensor.type_as", "torch.Tensor.unbind", "torch.Tensor.unflatten", "torch.Tensor.unfold", "torch.Tensor.uniform_", "torch.Tensor.unique", "torch.Tensor.unique_consecutive", "torch.Tensor.unsqueeze", "torch.Tensor.unsqueeze_", "torch.Tensor.untyped_storage", "torch.Tensor.values", "torch.Tensor.var", "torch.Tensor.vdot", "torch.Tensor.view", "torch.Tensor.view_as", "torch.Tensor.vsplit", "torch.Tensor.where", "torch.Tensor.xlogy", "torch.Tensor.xlogy_", "torch.Tensor.zero_", "torch._assert", "torch._foreach_abs", "torch._foreach_abs_", "torch._foreach_acos", "torch._foreach_acos_", "torch._foreach_asin", "torch._foreach_asin_", "torch._foreach_atan", "torch._foreach_atan_", "torch._foreach_ceil", "torch._foreach_ceil_", "torch._foreach_cos", "torch._foreach_cos_", "torch._foreach_cosh", "torch._foreach_cosh_", "torch._foreach_erf", "torch._foreach_erf_", "torch._foreach_erfc", "torch._foreach_erfc_", "torch._foreach_exp", "torch._foreach_exp_", "torch._foreach_expm1", "torch._foreach_expm1_", "torch._foreach_floor", "torch._foreach_floor_", "torch._foreach_frac", "torch._foreach_frac_", "torch._foreach_lgamma", "torch._foreach_lgamma_", "torch._foreach_log", "torch._foreach_log10", "torch._foreach_log10_", "torch._foreach_log1p", "torch._foreach_log1p_", "torch._foreach_log2", "torch._foreach_log2_", "torch._foreach_log_", "torch._foreach_neg", "torch._foreach_neg_", "torch._foreach_reciprocal", "torch._foreach_reciprocal_", "torch._foreach_round", "torch._foreach_round_", "torch._foreach_sigmoid", "torch._foreach_sigmoid_", "torch._foreach_sin", "torch._foreach_sin_", "torch._foreach_sinh", "torch._foreach_sinh_", "torch._foreach_sqrt", "torch._foreach_sqrt_", "torch._foreach_tan", "torch._foreach_tan_", "torch._foreach_trunc", "torch._foreach_trunc_", "torch._foreach_zero_", "torch._logging.set_logs", "torch.abs", "torch.absolute", "torch.acos", "torch.acosh", "torch.add", "torch.addbmm", "torch.addcdiv", "torch.addcmul", "torch.addmm", "torch.addmv", "torch.addr", "torch.adjoint", "torch.all", "torch.allclose", "torch.amax", "torch.amin", "torch.aminmax", "torch.angle", "torch.any", "BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "freeze_bn_stats", "update_bn_stats", "BNReLU2d", "BNReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearReLU", "LinearReLU", "Conv2d", "Conv3d", "Linear", "Linear", "LSTM", "MultiheadAttention", "BatchNorm2d", "BatchNorm3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "ELU", "Embedding", "EmbeddingBag", "FXFloatFunctional", "FloatFunctional", "GroupNorm", "Hardswish", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm", "LeakyReLU", "Linear", "QFunctional", "ReLU6", "Sigmoid", "GRU", "GRUCell", "LSTM", "LSTMCell", "Linear", "RNNCell", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest", "DeQuantStub", "QuantStub", "QuantWrapper", "add_quant_dequant", "BackendConfig", "BackendPatternConfig", "DTypeConfig", "DTypeWithConstraints", "ObservationType", "convert", "default_eval_fn", "FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize", "default_fake_quant", "default_fused_act_fake_quant", "default_fused_per_channel_wt_fake_quant", "default_fused_wt_fake_quant", "default_histogram_fake_quant", "default_per_channel_weight_fake_quant", "default_weight_fake_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer", "fuse_modules", "ConvertCustomConfig", "FuseCustomConfig", "PrepareCustomConfig", "StandaloneModuleConfigEntry", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "default_debug_observer", "default_dynamic_quant_observer", "default_float_qparams_observer", "default_histogram_observer", "default_observer", "default_per_channel_weight_observer", "default_placeholder_observer", "default_weight_observer", "get_observer_state_dict", "load_observer_state_dict", "prepare", "prepare_qat", "propagate_qconfig", "QConfig", "default_activation_only_qconfig", "default_debug_qconfig", "default_dynamic_qconfig", "default_per_channel_qconfig", "default_qat_qconfig", "default_qat_qconfig_v2", "default_qconfig", "default_weight_only_qconfig", "float16_dynamic_qconfig", "float16_static_qconfig", "float_qparams_weight_only_qconfig", "per_channel_dynamic_qconfig", "QConfigMapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping", "quantize", "quantize_dynamic", "convert_fx", "fuse_fx", "prepare_fx", "prepare_qat_fx", "quantize_qat", "swap_module", "torch.arange", "torch.arccos", "torch.arccosh", "torch.arcsin", "torch.arcsinh", "torch.arctan", "torch.arctan2", "torch.arctanh", "torch.are_deterministic_algorithms_enabled", "torch.argmax", "torch.argmin", "torch.argsort", "torch.argwhere", "torch.as_strided", "torch.as_tensor", "torch.asarray", "torch.asin", "torch.asinh", "torch.atan", "torch.atan2", "torch.atanh", "torch.atleast_1d", "torch.atleast_2d", "torch.atleast_3d", "torch.autograd.Function.backward", "torch.autograd.Function.forward", "torch.autograd.Function.jvp", "torch.autograd.Function.vmap", "torch.autograd.backward", "dual_level", "torch.autograd.forward_ad.make_dual", "torch.autograd.forward_ad.unpack_dual", "torch.autograd.function.FunctionCtx.mark_dirty", "torch.autograd.function.FunctionCtx.mark_non_differentiable", "torch.autograd.function.FunctionCtx.save_for_backward", "torch.autograd.function.FunctionCtx.set_materialize_grads", "torch.autograd.functional.hessian", "torch.autograd.functional.hvp", "torch.autograd.functional.jacobian", "torch.autograd.functional.jvp", "torch.autograd.functional.vhp", "torch.autograd.functional.vjp", "torch.autograd.grad", "torch.autograd.gradcheck", "torch.autograd.gradgradcheck", "torch.autograd.graph.Node.metadata", "torch.autograd.graph.Node.name", "torch.autograd.graph.Node.next_functions", "torch.autograd.graph.Node.register_hook", "torch.autograd.graph.Node.register_prehook", "torch.autograd.profiler.load_nvprof", "torch.autograd.profiler.profile.export_chrome_trace", "torch.autograd.profiler.profile.key_averages", "torch.autograd.profiler.profile.self_cpu_time_total", "torch.autograd.profiler.profile.total_average", "torch.baddbmm", "torch.bartlett_window", "torch.bernoulli", "torch.bincount", "torch.bitwise_and", "torch.bitwise_left_shift", "torch.bitwise_not", "torch.bitwise_or", "torch.bitwise_right_shift", "torch.bitwise_xor", "torch.blackman_window", "torch.block_diag", "torch.bmm", "torch.broadcast_shapes", "torch.broadcast_tensors", "torch.broadcast_to", "torch.bucketize", "torch.can_cast", "torch.cartesian_prod", "torch.cat", "torch.cdist", "torch.ceil", "torch.chain_matmul", "torch.cholesky", "torch.cholesky_inverse", "torch.cholesky_solve", "torch.chunk", "torch.clamp", "torch.clip", "torch.clone", "torch.column_stack", "torch.combinations", "torch.compile", "torch.compiled_with_cxx11_abi", "torch.compiler.allow_in_graph", "torch.compiler.assume_constant_result", "torch.compiler.compile", "torch.compiler.disable", "torch.compiler.list_backends", "torch.compiler.reset", "torch.complex", "torch.concat", "torch.concatenate", "torch.conj", "torch.conj_physical", "torch.copysign", "torch.corrcoef", "torch.cos", "torch.cosh", "torch.count_nonzero", "torch.cov", "Stream", "StreamContext", "torch.cpu.current_stream", "torch.cpu.device_count", "torch.cpu.is_available", "torch.cpu.stream", "torch.cpu.synchronize", "torch.cross", "CUDAGraph", "CUDAPluggableAllocator", "Event", "ExternalStream", "torch.cuda.OutOfMemoryError", "Stream", "StreamContext", "torch.cuda.caching_allocator_alloc", "torch.cuda.caching_allocator_delete", "torch.cuda.can_device_access_peer", "torch.cuda.change_current_allocator", "torch.cuda.clock_rate", "torch.cuda.comm.broadcast", "torch.cuda.comm.broadcast_coalesced", "torch.cuda.comm.gather", "torch.cuda.comm.reduce_add", "torch.cuda.comm.scatter", "torch.cuda.current_blas_handle", "torch.cuda.current_device", "torch.cuda.current_stream", "torch.cuda.default_stream", "device", "torch.cuda.device_count", "device_of", "torch.cuda.empty_cache", "torch.cuda.get_allocator_backend", "torch.cuda.get_arch_list", "torch.cuda.get_device_capability", "torch.cuda.get_device_name", "torch.cuda.get_device_properties", "torch.cuda.get_gencode_flags", "torch.cuda.get_rng_state", "torch.cuda.get_rng_state_all", "torch.cuda.get_sync_debug_mode", "graph", "torch.cuda.graph_pool_handle", "torch.cuda.init", "torch.cuda.initial_seed", "torch.cuda.ipc_collect", "torch.cuda.is_available", "torch.cuda.is_current_stream_capturing", "torch.cuda.is_initialized", "torch.cuda.jiterator._create_jit_fn", "torch.cuda.jiterator._create_multi_output_jit_fn", "torch.cuda.list_gpu_processes", "torch.cuda.make_graphed_callables", "torch.cuda.manual_seed", "torch.cuda.manual_seed_all", "torch.cuda.max_memory_allocated", "torch.cuda.max_memory_cached", "torch.cuda.max_memory_reserved", "torch.cuda.mem_get_info", "torch.cuda.memory_allocated", "torch.cuda.memory_cached", "torch.cuda.memory_reserved", "torch.cuda.memory_snapshot", "torch.cuda.memory_stats", "torch.cuda.memory_summary", "torch.cuda.memory_usage", "torch.cuda.nvtx.mark", "torch.cuda.nvtx.range_pop", "torch.cuda.nvtx.range_push", "torch.cuda.power_draw", "torch.cuda.reset_max_memory_allocated", "torch.cuda.reset_max_memory_cached", "torch.cuda.reset_peak_memory_stats", "torch.cuda.seed", "torch.cuda.seed_all", "torch.cuda.set_device", "torch.cuda.set_per_process_memory_fraction", "torch.cuda.set_rng_state", "torch.cuda.set_rng_state_all", "torch.cuda.set_stream", "torch.cuda.set_sync_debug_mode", "torch.cuda.stream", "torch.cuda.synchronize", "torch.cuda.temperature", "torch.cuda.utilization", "torch.cummax", "torch.cummin", "torch.cumprod", "torch.cumsum", "torch.cumulative_trapezoid", "torch.deg2rad", "torch.dequantize", "torch.det", "torch.diag", "torch.diag_embed", "torch.diagflat", "torch.diagonal", "torch.diagonal_scatter", "torch.diff", "torch.digamma", "torch.dist", "torch.div", "torch.divide", "torch.dot", "torch.dsplit", "torch.dstack", "torch.einsum", "torch.empty", "torch.empty_like", "torch.empty_strided", "enable_grad", "torch.eq", "torch.equal", "torch.erf", "torch.erfc", "torch.erfinv", "torch.exp", "torch.exp2", "torch.expm1", "torch.eye", "torch.fake_quantize_per_channel_affine", "torch.fake_quantize_per_tensor_affine", "torch.fft.fft", "torch.fft.fft2", "torch.fft.fftfreq", "torch.fft.fftn", "torch.fft.fftshift", "torch.fft.hfft", "torch.fft.hfft2", "torch.fft.hfftn", "torch.fft.ifft", "torch.fft.ifft2", "torch.fft.ifftn", "torch.fft.ifftshift", "torch.fft.ihfft", "torch.fft.ihfft2", "torch.fft.ihfftn", "torch.fft.irfft", "torch.fft.irfft2", "torch.fft.irfftn", "torch.fft.rfft", "torch.fft.rfft2", "torch.fft.rfftfreq", "torch.fft.rfftn", "torch.fix", "torch.flatten", "torch.flip", "torch.fliplr", "torch.flipud", "torch.float_power", "torch.floor", "torch.floor_divide", "torch.fmax", "torch.fmin", "torch.fmod", "torch.frac", "torch.frexp", "torch.from_dlpack", "torch.from_numpy", "torch.frombuffer", "torch.full", "torch.full_like", "torch.func.functional_call", "torch.func.functionalize", "torch.func.grad", "torch.func.grad_and_value", "torch.func.hessian", "torch.func.jacfwd", "torch.func.jacrev", "torch.func.jvp", "torch.func.linearize", "torch.func.replace_all_batch_norm_modules_", "torch.func.stack_module_state", "torch.func.vjp", "torch.func.vmap", "torch.gather", "torch.gcd", "torch.ge", "torch.geqrf", "torch.ger", "torch.get_default_dtype", "torch.get_deterministic_debug_mode", "torch.get_float32_matmul_precision", "torch.get_num_interop_threads", "torch.get_num_threads", "torch.get_rng_state", "torch.gradient", "torch.greater", "torch.greater_equal", "torch.gt", "torch.hamming_window", "torch.hann_window", "torch.heaviside", "torch.histc", "torch.histogram", "torch.histogramdd", "torch.hsplit", "torch.hspmm", "torch.hstack", "torch.hypot", "torch.i0", "torch.igamma", "torch.igammac", "torch.imag", "torch.index_add", "torch.index_copy", "torch.index_reduce", "torch.index_select", "inference_mode", "torch.initial_seed", "torch.inner", "torch.inverse", "torch.is_complex", "torch.is_conj", "torch.is_deterministic_algorithms_warn_only_enabled", "torch.is_floating_point", "torch.is_grad_enabled", "torch.is_inference_mode_enabled", "torch.is_nonzero", "torch.is_storage", "torch.is_tensor", "torch.is_warn_always_enabled", "torch.isclose", "torch.isfinite", "torch.isin", "torch.isinf", "torch.isnan", "torch.isneginf", "torch.isposinf", "torch.isreal", "torch.istft", "Attribute", "ScriptFunction", "ScriptModule", "torch.jit.annotate", "torch.jit.enable_onednn_fusion", "torch.jit.fork", "torch.jit.freeze", "torch.jit.ignore", "torch.jit.isinstance", "torch.jit.load", "torch.jit.onednn_fusion_enabled", "torch.jit.optimize_for_inference", "torch.jit.save", "torch.jit.script", "torch.jit.script_if_tracing", "torch.jit.set_fusion_strategy", "strict_fusion", "torch.jit.trace", "torch.jit.trace_module", "torch.jit.unused", "torch.jit.wait", "torch.kaiser_window", "torch.kron", "torch.kthvalue", "torch.lcm", "torch.ldexp", "torch.le", "torch.lerp", "torch.less", "torch.less_equal", "torch.lgamma", "torch.linalg.cholesky", "torch.linalg.cholesky_ex", "torch.linalg.cond", "torch.linalg.cross", "torch.linalg.det", "torch.linalg.diagonal", "torch.linalg.eig", "torch.linalg.eigh", "torch.linalg.eigvals", "torch.linalg.eigvalsh", "torch.linalg.householder_product", "torch.linalg.inv", "torch.linalg.inv_ex", "torch.linalg.ldl_factor", "torch.linalg.ldl_factor_ex", "torch.linalg.ldl_solve", "torch.linalg.lstsq", "torch.linalg.lu", "torch.linalg.lu_factor", "torch.linalg.lu_factor_ex", "torch.linalg.lu_solve", "torch.linalg.matmul", "torch.linalg.matrix_exp", "torch.linalg.matrix_norm", "torch.linalg.matrix_power", "torch.linalg.matrix_rank", "torch.linalg.multi_dot", "torch.linalg.norm", "torch.linalg.pinv", "torch.linalg.qr", "torch.linalg.slogdet", "torch.linalg.solve", "torch.linalg.solve_ex", "torch.linalg.solve_triangular", "torch.linalg.svd", "torch.linalg.svdvals", "torch.linalg.tensorinv", "torch.linalg.tensorsolve", "torch.linalg.vander", "torch.linalg.vecdot", "torch.linalg.vector_norm", "torch.linspace", "torch.load", "torch.lobpcg", "torch.log", "torch.log10", "torch.log1p", "torch.log2", "torch.logaddexp", "torch.logaddexp2", "torch.logcumsumexp", "torch.logdet", "torch.logical_and", "torch.logical_not", "torch.logical_or", "torch.logical_xor", "torch.logit", "torch.logspace", "torch.logsumexp", "torch.lt", "torch.lu", "torch.lu_solve", "torch.lu_unpack", "torch.manual_seed", "torch.masked_select", "torch.matmul", "torch.matrix_exp", "torch.matrix_power", "torch.max", "torch.maximum", "torch.mean", "torch.median", "torch.meshgrid", "torch.min", "torch.minimum", "torch.mm", "torch.mode", "torch.moveaxis", "torch.movedim", "torch.mps.current_allocated_memory", "torch.mps.driver_allocated_memory", "torch.mps.empty_cache", "torch.mps.get_rng_state", "torch.mps.manual_seed", "torch.mps.profiler.profile", "torch.mps.profiler.start", "torch.mps.profiler.stop", "torch.mps.seed", "torch.mps.set_per_process_memory_fraction", "torch.mps.set_rng_state", "torch.mps.synchronize", "torch.msort", "torch.mul", "torch.multinomial", "torch.multiply", "torch.mv", "torch.mvlgamma", "torch.nan_to_num", "torch.nanmean", "torch.nanmedian", "torch.nanquantile", "torch.nansum", "torch.narrow", "torch.narrow_copy", "torch.ne", "torch.neg", "torch.negative", "torch.nextafter", "AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveLogSoftmaxWithLoss", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AlphaDropout", "AvgPool1d", "AvgPool2d", "AvgPool3d", "BCELoss", "BCEWithLogitsLoss", "BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "Bilinear", "CELU", "CTCLoss", "ChannelShuffle", "ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "CosineEmbeddingLoss", "CosineSimilarity", "CrossEntropyLoss", "DataParallel", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "ELU", "Embedding", "EmbeddingBag", "FeatureAlphaDropout", "Flatten", "Fold", "FractionalMaxPool2d", "FractionalMaxPool3d", "GELU", "GLU", "GRU", "GRUCell", "GaussianNLLLoss", "GroupNorm", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "HingeEmbeddingLoss", "HuberLoss", "Identity", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "KLDivLoss", "L1Loss", "LPPool1d", "LPPool2d", "LSTM", "LSTMCell", "LayerNorm", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "LazyLinear", "LeakyReLU", "Linear", "LocalResponseNorm", "LogSigmoid", "LogSoftmax", "MSELoss", "MarginRankingLoss", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "Mish", "Module", "ModuleDict", "ModuleList", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "MultiheadAttention", "NLLLoss", "PReLU", "PairwiseDistance", "ParameterDict", "ParameterList", "PixelShuffle", "PixelUnshuffle", "PoissonNLLLoss", "RNN", "RNNBase", "RNNCell", "RReLU", "ReLU", "ReLU6", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "SELU", "Sequential", "SiLU", "Sigmoid", "SmoothL1Loss", "SoftMarginLoss", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "SyncBatchNorm", "Tanh", "Tanhshrink", "Threshold", "Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "Unflatten", "Unfold", "Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d", "ZeroPad1d", "ZeroPad2d", "ZeroPad3d", "torch.nn.functional.adaptive_avg_pool1d", "torch.nn.functional.adaptive_avg_pool2d", "torch.nn.functional.adaptive_avg_pool3d", "torch.nn.functional.adaptive_max_pool1d", "torch.nn.functional.adaptive_max_pool2d", "torch.nn.functional.adaptive_max_pool3d", "torch.nn.functional.affine_grid", "torch.nn.functional.alpha_dropout", "torch.nn.functional.avg_pool1d", "torch.nn.functional.avg_pool2d", "torch.nn.functional.avg_pool3d", "torch.nn.functional.batch_norm", "torch.nn.functional.bilinear", "torch.nn.functional.binary_cross_entropy", "torch.nn.functional.binary_cross_entropy_with_logits", "torch.nn.functional.celu", "torch.nn.functional.conv1d", "torch.nn.functional.conv2d", "torch.nn.functional.conv3d", "torch.nn.functional.conv_transpose1d", "torch.nn.functional.conv_transpose2d", "torch.nn.functional.conv_transpose3d", "torch.nn.functional.cosine_embedding_loss", "torch.nn.functional.cosine_similarity", "torch.nn.functional.cross_entropy", "torch.nn.functional.ctc_loss", "torch.nn.functional.dropout", "torch.nn.functional.dropout1d", "torch.nn.functional.dropout2d", "torch.nn.functional.dropout3d", "torch.nn.functional.elu", "torch.nn.functional.elu_", "torch.nn.functional.embedding", "torch.nn.functional.embedding_bag", "torch.nn.functional.feature_alpha_dropout", "torch.nn.functional.fold", "torch.nn.functional.fractional_max_pool2d", "torch.nn.functional.fractional_max_pool3d", "torch.nn.functional.gaussian_nll_loss", "torch.nn.functional.gelu", "torch.nn.functional.glu", "torch.nn.functional.grid_sample", "torch.nn.functional.group_norm", "torch.nn.functional.gumbel_softmax", "torch.nn.functional.hardshrink", "torch.nn.functional.hardsigmoid", "torch.nn.functional.hardswish", "torch.nn.functional.hardtanh", "torch.nn.functional.hardtanh_", "torch.nn.functional.hinge_embedding_loss", "torch.nn.functional.huber_loss", "torch.nn.functional.instance_norm", "torch.nn.functional.interpolate", "torch.nn.functional.kl_div", "torch.nn.functional.l1_loss", "torch.nn.functional.layer_norm", "torch.nn.functional.leaky_relu", "torch.nn.functional.leaky_relu_", "torch.nn.functional.linear", "torch.nn.functional.local_response_norm", "torch.nn.functional.log_softmax", "torch.nn.functional.logsigmoid", "torch.nn.functional.lp_pool1d", "torch.nn.functional.lp_pool2d", "torch.nn.functional.margin_ranking_loss", "torch.nn.functional.max_pool1d", "torch.nn.functional.max_pool2d", "torch.nn.functional.max_pool3d", "torch.nn.functional.max_unpool1d", "torch.nn.functional.max_unpool2d", "torch.nn.functional.max_unpool3d", "torch.nn.functional.mish", "torch.nn.functional.mse_loss", "torch.nn.functional.multi_margin_loss", "torch.nn.functional.multilabel_margin_loss", "torch.nn.functional.multilabel_soft_margin_loss", "torch.nn.functional.nll_loss", "torch.nn.functional.normalize", "torch.nn.functional.one_hot", "torch.nn.functional.pad", "torch.nn.functional.pairwise_distance", "torch.nn.functional.pdist", "torch.nn.functional.pixel_shuffle", "torch.nn.functional.pixel_unshuffle", "torch.nn.functional.poisson_nll_loss", "torch.nn.functional.prelu", "torch.nn.functional.relu", "torch.nn.functional.relu6", "torch.nn.functional.relu_", "torch.nn.functional.rrelu", "torch.nn.functional.rrelu_", "torch.nn.functional.scaled_dot_product_attention", "torch.nn.functional.selu", "torch.nn.functional.sigmoid", "torch.nn.functional.silu", "torch.nn.functional.smooth_l1_loss", "torch.nn.functional.soft_margin_loss", "torch.nn.functional.softmax", "torch.nn.functional.softmin", "torch.nn.functional.softplus", "torch.nn.functional.softshrink", "torch.nn.functional.softsign", "torch.nn.functional.tanh", "torch.nn.functional.tanhshrink", "torch.nn.functional.threshold", "torch.nn.functional.threshold_", "torch.nn.functional.torch.nn.parallel.data_parallel", "torch.nn.functional.triplet_margin_loss", "torch.nn.functional.triplet_margin_with_distance_loss", "torch.nn.functional.unfold", "torch.nn.functional.upsample", "torch.nn.functional.upsample_bilinear", "torch.nn.functional.upsample_nearest", "LazyModuleMixin", "torch.nn.modules.module.register_module_backward_hook", "torch.nn.modules.module.register_module_buffer_registration_hook", "torch.nn.modules.module.register_module_forward_hook", "torch.nn.modules.module.register_module_forward_pre_hook", "torch.nn.modules.module.register_module_full_backward_hook", "torch.nn.modules.module.register_module_full_backward_pre_hook", "torch.nn.modules.module.register_module_module_registration_hook", "torch.nn.modules.module.register_module_parameter_registration_hook", "DistributedDataParallel", "Parameter", "UninitializedBuffer", "UninitializedParameter", "torch.nn.utils.clip_grad_norm_", "torch.nn.utils.clip_grad_value_", "torch.nn.utils.parameters_to_vector", "torch.nn.utils.parametrizations.orthogonal", "torch.nn.utils.parametrizations.spectral_norm", "ParametrizationList", "torch.nn.utils.parametrize.cached", "torch.nn.utils.parametrize.is_parametrized", "torch.nn.utils.parametrize.register_parametrization", "torch.nn.utils.parametrize.remove_parametrizations", "BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured", "torch.nn.utils.prune.custom_from_mask", "torch.nn.utils.prune.global_unstructured", "torch.nn.utils.prune.identity", "torch.nn.utils.prune.is_pruned", "torch.nn.utils.prune.l1_unstructured", "torch.nn.utils.prune.ln_structured", "torch.nn.utils.prune.random_structured", "torch.nn.utils.prune.random_unstructured", "torch.nn.utils.prune.remove", "torch.nn.utils.remove_spectral_norm", "torch.nn.utils.remove_weight_norm", "PackedSequence", "torch.nn.utils.rnn.pack_padded_sequence", "torch.nn.utils.rnn.pack_sequence", "torch.nn.utils.rnn.pad_packed_sequence", "torch.nn.utils.rnn.pad_sequence", "torch.nn.utils.rnn.unpack_sequence", "torch.nn.utils.rnn.unpad_sequence", "torch.nn.utils.skip_init", "torch.nn.utils.spectral_norm", "torch.nn.utils.stateless.functional_call", "torch.nn.utils.vector_to_parameters", "torch.nn.utils.weight_norm", "no_grad", "torch.nonzero", "torch.norm", "torch.normal", "torch.not_equal", "torch.numel", "torch.ones", "torch.ones_like", "ExportOptions", "ExportOutput", "ExportOutputSerializer", "JitScalarType", "OnnxExporterError", "GraphInfo", "VerificationOptions", "ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "LBFGS", "NAdam", "torch.optim.Optimizer.add_param_group", "torch.optim.Optimizer.load_state_dict", "torch.optim.Optimizer.state_dict", "torch.optim.Optimizer.step", "torch.optim.Optimizer.zero_grad", "RAdam", "RMSprop", "Rprop", "SGD", "SparseAdam", "ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "torch.orgqr", "torch.ormqr", "torch.outer", "torch.pca_lowrank", "torch.permute", "torch.pinverse", "torch.poisson", "torch.polar", "torch.polygamma", "torch.positive", "torch.pow", "torch.prod", "torch.promote_types", "torch.qr", "torch.quantile", "torch.quantize_per_channel", "torch.quantize_per_tensor", "torch.quantized_batch_norm", "torch.quantized_max_pool1d", "torch.quantized_max_pool2d", "SobolEngine", "torch.rad2deg", "torch.rand", "torch.rand_like", "torch.randint", "torch.randint_like", "torch.randn", "torch.randn_like", "torch.randperm", "torch.range", "torch.ravel", "torch.real", "torch.reciprocal", "torch.remainder", "torch.renorm", "torch.repeat_interleave", "torch.reshape", "torch.resolve_conj", "torch.resolve_neg", "torch.result_type", "torch.roll", "torch.rot90", "torch.round", "torch.row_stack", "torch.rsqrt", "torch.save", "torch.scatter", "torch.scatter_add", "torch.scatter_reduce", "torch.searchsorted", "torch.seed", "torch.select", "torch.select_scatter", "torch.set_default_device", "torch.set_default_dtype", "torch.set_default_tensor_type", "torch.set_deterministic_debug_mode", "torch.set_float32_matmul_precision", "torch.set_flush_denormal", "set_grad_enabled", "torch.set_num_interop_threads", "torch.set_num_threads", "torch.set_printoptions", "torch.set_rng_state", "torch.set_warn_always", "torch.sgn", "torch.sigmoid", "torch.sign", "torch.signal.windows.bartlett", "torch.signal.windows.blackman", "torch.signal.windows.cosine", "torch.signal.windows.exponential", "torch.signal.windows.gaussian", "torch.signal.windows.general_cosine", "torch.signal.windows.general_hamming", "torch.signal.windows.hamming", "torch.signal.windows.hann", "torch.signal.windows.kaiser", "torch.signal.windows.nuttall", "torch.signbit", "torch.sin", "torch.sinc", "torch.sinh", "torch.slice_scatter", "torch.slogdet", "torch.smm", "torch.softmax", "torch.sort", "torch.sparse.addmm", "check_sparse_tensor_invariants", "torch.sparse.log_softmax", "torch.sparse.mm", "torch.sparse.sampled_addmm", "torch.sparse.softmax", "torch.sparse.spdiags", "torch.sparse.sum", "torch.sparse_bsc_tensor", "torch.sparse_bsr_tensor", "torch.sparse_compressed_tensor", "torch.sparse_coo_tensor", "torch.sparse_csc_tensor", "torch.sparse_csr_tensor", "torch.split", "torch.sqrt", "torch.square", "torch.squeeze", "torch.sspaddmm", "torch.stack", "torch.std", "torch.std_mean", "torch.stft", "torch.sub", "torch.subtract", "torch.sum", "torch.svd", "torch.svd_lowrank", "torch.swapaxes", "torch.swapdims", "torch.sym_float", "torch.sym_int", "torch.sym_max", "torch.sym_min", "torch.sym_not", "torch.t", "torch.take", "torch.take_along_dim", "torch.tan", "torch.tanh", "torch.tensor", "torch.tensor_split", "torch.tensordot", "torch.tile", "torch.topk", "torch.trace", "torch.transpose", "torch.trapezoid", "torch.trapz", "torch.triangular_solve", "torch.tril", "torch.tril_indices", "torch.triu", "torch.triu_indices", "torch.true_divide", "torch.trunc", "torch.unbind", "torch.unflatten", "torch.unique", "torch.unique_consecutive", "torch.unsqueeze", "torch.use_deterministic_algorithms", "torch.utils.generate_methods_for_privateuse1_backend", "torch.utils.get_cpp_backtrace", "torch.utils.rename_privateuse1_backend", "torch.utils.set_module", "torch.vander", "torch.var", "torch.var_mean", "torch.vdot", "torch.view_as_complex", "torch.view_as_real", "torch.vmap", "torch.vsplit", "torch.vstack", "torch.where", "torch.xlogy", "torch.zeros", "torch.zeros_like", "torch.hub", "PyTorch documentation", "IRs", "TorchScript", "TorchScript Builtins", "TorchScript Language Reference", "TorchScript Language Reference", "Python Language Reference Coverage", "TorchScript Unsupported PyTorch Constructs", "JIT Utils - torch.utils.jit", "torch.library", "torch.linalg", "torch._logging", "torch.masked", "torch.utils.mobile_optimizer", "torch.utils.model_zoo", "torch.monitor", "torch.mps", "Multiprocessing package - torch.multiprocessing", "Named Tensors operator coverage", "Named Tensors", "torch.nested", "torch.nn", "torch.nn.functional", "torch.nn.init", "CUDA Automatic Mixed Precision examples", "Autograd mechanics", "Broadcasting semantics", "CPU threading and TorchScript inference", "CUDA semantics", "Distributed Data Parallel", "Extending PyTorch", "Extending torch.func with autograd.Function", "Frequently Asked Questions", "Gradcheck mechanics", "HIP (ROCm) semantics", "Features for large-scale deployments", "Modules", "MPS backend", "Multiprocessing best practices", "Numerical accuracy", "Reproducibility", "Serialization semantics", "Windows FAQ", "torch.onnx", "torch.onnx diagnostics", "ONNX supported TorchScript operators", "torch.optim", "torch.package", "Pipeline Parallelism", "torch.profiler", "Quantization", "Quantization Accuracy Debugging", "Quantization Backend Configuration", "Quantization API Reference", "torch.random", "Distributed RPC Framework", "Distributed Autograd Design", "Remote Reference Protocol", "torch.signal", "torch.sparse", "torch.special", "torch.Storage", "Tensor Attributes", "Tensor Views", "torch.utils.tensorboard", "torch.Tensor", "torch.testing", "torch", "torch.ao.ns._numeric_suite", "torch.ao.ns._numeric_suite_fx", "torch.overrides", "Type Info", "torch.utils"], "terms": {"provid": [0, 1, 3, 7, 8, 9, 11, 12, 13, 15, 17, 18, 20, 21, 25, 26, 28, 29, 31, 33, 34, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 58, 60, 61, 62, 63, 66, 70, 73, 74, 169, 619, 696, 705, 751, 754, 755, 756, 761, 762, 764, 772, 773, 776, 780, 804, 805, 815, 816, 830, 840, 857, 874, 909, 918, 920, 921, 922, 947, 952, 955, 960, 961, 973, 986, 1005, 1051, 1094, 1114, 1150, 1162, 1174, 1182, 1183, 1218, 1221, 1227, 1228, 1232, 1234, 1236, 1251, 1268, 1293, 1325, 1384, 1385, 1386, 1389, 1405, 1406, 1414, 1419, 1423, 1424, 1449, 1450, 1451, 1453, 1459, 1460, 1463, 1468, 1470, 1481, 1496, 1497, 1498, 1499, 1500, 1524, 1525, 1602, 1633, 1647, 1667, 1675, 1691, 1692, 1721, 1724, 1729, 1765, 1775, 1822, 1823, 1824, 1825, 1826, 1827, 1865, 1867, 1876, 1886, 1893, 1896, 1898, 1899, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1933, 1937, 1940, 1941, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1965], "conveni": [0, 3, 7, 12, 15, 20, 22, 26, 33, 57, 60, 61, 66, 72, 1162, 1278, 1624, 1876, 1878, 1886, 1893, 1898, 1903, 1918, 1919, 1922, 1924, 1929, 1930, 1941, 1948], "method": [0, 3, 7, 9, 13, 14, 19, 20, 25, 29, 33, 34, 37, 40, 43, 44, 45, 47, 49, 50, 51, 52, 58, 60, 66, 73, 74, 75, 77, 82, 83, 240, 241, 341, 503, 504, 513, 514, 515, 536, 630, 809, 813, 815, 831, 832, 833, 854, 857, 870, 890, 891, 892, 909, 913, 914, 915, 916, 929, 930, 1031, 1145, 1174, 1219, 1221, 1222, 1224, 1225, 1226, 1231, 1232, 1236, 1237, 1238, 1266, 1284, 1285, 1292, 1293, 1350, 1353, 1361, 1369, 1396, 1453, 1454, 1455, 1463, 1464, 1481, 1552, 1624, 1633, 1641, 1642, 1645, 1647, 1649, 1652, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1669, 1674, 1687, 1688, 1694, 1695, 1696, 1698, 1708, 1740, 1821, 1836, 1840, 1876, 1893, 1894, 1896, 1899, 1900, 1907, 1909, 1911, 1912, 1913, 1917, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1930, 1932, 1935, 1938, 1940, 1941, 1944, 1946, 1949, 1951, 1955, 1956, 1958, 1959, 1961, 1964], "where": [0, 1, 2, 3, 4, 7, 8, 9, 15, 16, 17, 18, 19, 20, 25, 29, 31, 33, 34, 40, 41, 43, 47, 48, 49, 51, 53, 60, 61, 62, 63, 66, 68, 69, 71, 74, 101, 172, 242, 272, 418, 420, 503, 696, 709, 711, 712, 715, 751, 774, 776, 797, 836, 837, 849, 893, 912, 917, 919, 932, 937, 946, 952, 959, 960, 961, 968, 982, 986, 998, 1000, 1009, 1011, 1073, 1074, 1077, 1081, 1099, 1110, 1111, 1113, 1116, 1117, 1119, 1120, 1122, 1123, 1124, 1126, 1127, 1129, 1131, 1155, 1156, 1157, 1161, 1162, 1165, 1177, 1178, 1179, 1180, 1210, 1211, 1213, 1214, 1217, 1218, 1219, 1222, 1234, 1240, 1241, 1242, 1245, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1289, 1290, 1292, 1293, 1298, 1301, 1308, 1309, 1310, 1311, 1315, 1318, 1320, 1321, 1322, 1323, 1326, 1343, 1348, 1349, 1351, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1523, 1525, 1535, 1536, 1543, 1548, 1550, 1551, 1569, 1570, 1587, 1589, 1590, 1593, 1594, 1596, 1602, 1605, 1633, 1635, 1636, 1640, 1667, 1668, 1669, 1670, 1679, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1727, 1737, 1739, 1740, 1760, 1761, 1797, 1803, 1804, 1809, 1813, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1839, 1840, 1854, 1863, 1864, 1865, 1866, 1867, 1872, 1873, 1881, 1882, 1883, 1884, 1885, 1886, 1895, 1896, 1897, 1899, 1900, 1905, 1906, 1908, 1911, 1914, 1917, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1930, 1932, 1933, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1947, 1949, 1951, 1953, 1954, 1956, 1958, 1963, 1964], "some": [0, 1, 3, 7, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 33, 39, 40, 41, 43, 45, 48, 49, 51, 53, 61, 62, 66, 69, 71, 72, 73, 74, 100, 102, 494, 512, 583, 705, 764, 968, 1047, 1051, 1054, 1094, 1115, 1117, 1125, 1126, 1127, 1142, 1151, 1162, 1196, 1218, 1219, 1221, 1222, 1231, 1234, 1236, 1266, 1284, 1290, 1315, 1322, 1325, 1361, 1365, 1369, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1413, 1416, 1417, 1418, 1419, 1420, 1423, 1444, 1445, 1453, 1456, 1457, 1458, 1460, 1467, 1468, 1484, 1485, 1501, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1564, 1569, 1587, 1590, 1595, 1602, 1624, 1633, 1634, 1635, 1636, 1640, 1673, 1709, 1715, 1721, 1739, 1759, 1783, 1790, 1804, 1840, 1878, 1886, 1893, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1911, 1912, 1913, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1958], "oper": [0, 2, 4, 5, 7, 8, 12, 14, 15, 17, 18, 19, 20, 26, 27, 28, 29, 31, 34, 37, 40, 45, 49, 50, 57, 58, 60, 61, 67, 72, 73, 74, 97, 98, 99, 100, 101, 103, 104, 105, 272, 331, 339, 353, 370, 420, 462, 463, 464, 465, 466, 509, 512, 515, 529, 531, 533, 605, 696, 702, 705, 757, 758, 759, 763, 764, 773, 774, 784, 785, 795, 801, 808, 809, 811, 812, 815, 839, 842, 875, 877, 878, 881, 905, 907, 913, 915, 936, 937, 939, 941, 944, 946, 948, 950, 955, 958, 961, 965, 968, 975, 980, 998, 1000, 1028, 1037, 1068, 1073, 1074, 1075, 1076, 1089, 1094, 1095, 1096, 1097, 1107, 1112, 1130, 1142, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1162, 1169, 1172, 1178, 1179, 1196, 1221, 1231, 1232, 1236, 1237, 1240, 1250, 1263, 1273, 1276, 1277, 1290, 1291, 1300, 1307, 1315, 1320, 1325, 1334, 1335, 1348, 1351, 1365, 1370, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1402, 1410, 1411, 1412, 1413, 1415, 1420, 1439, 1444, 1449, 1450, 1451, 1453, 1466, 1471, 1472, 1473, 1480, 1495, 1496, 1498, 1500, 1504, 1520, 1521, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1537, 1538, 1539, 1540, 1544, 1545, 1547, 1548, 1552, 1556, 1563, 1569, 1571, 1577, 1578, 1588, 1590, 1594, 1602, 1608, 1609, 1620, 1621, 1622, 1623, 1633, 1635, 1636, 1669, 1675, 1680, 1684, 1685, 1707, 1713, 1723, 1727, 1736, 1737, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1759, 1765, 1782, 1783, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1816, 1817, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1839, 1854, 1875, 1876, 1878, 1886, 1889, 1891, 1892, 1894, 1895, 1896, 1900, 1903, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1930, 1931, 1932, 1933, 1934, 1938, 1940, 1943, 1945, 1947, 1948, 1949, 1950, 1954, 1956, 1957, 1960], "us": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 28, 31, 33, 34, 36, 38, 40, 44, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 66, 67, 69, 70, 71, 72, 73, 75, 77, 82, 83, 97, 98, 99, 101, 107, 116, 138, 169, 173, 210, 227, 337, 339, 353, 360, 361, 424, 452, 465, 475, 503, 504, 512, 515, 529, 533, 536, 560, 573, 599, 600, 601, 603, 604, 633, 696, 702, 705, 728, 729, 730, 731, 732, 733, 736, 745, 746, 747, 748, 749, 751, 764, 773, 776, 784, 785, 788, 789, 790, 795, 797, 801, 802, 803, 806, 809, 810, 811, 812, 815, 818, 823, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 848, 849, 850, 853, 870, 874, 875, 877, 878, 881, 894, 895, 896, 905, 906, 907, 909, 910, 911, 912, 914, 915, 917, 918, 919, 920, 923, 924, 925, 929, 930, 933, 936, 937, 938, 946, 948, 949, 956, 958, 960, 968, 971, 975, 979, 982, 984, 994, 995, 996, 997, 998, 1000, 1002, 1003, 1005, 1008, 1018, 1019, 1022, 1023, 1029, 1033, 1037, 1039, 1040, 1041, 1043, 1045, 1046, 1051, 1052, 1061, 1063, 1064, 1070, 1075, 1076, 1077, 1086, 1094, 1095, 1096, 1097, 1107, 1108, 1109, 1112, 1114, 1122, 1124, 1128, 1130, 1137, 1139, 1142, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1166, 1167, 1171, 1172, 1174, 1178, 1179, 1180, 1181, 1195, 1196, 1208, 1218, 1219, 1221, 1222, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1242, 1244, 1252, 1256, 1257, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1273, 1274, 1275, 1277, 1278, 1284, 1285, 1286, 1290, 1291, 1292, 1293, 1298, 1301, 1307, 1310, 1311, 1314, 1315, 1320, 1321, 1322, 1325, 1331, 1343, 1348, 1350, 1351, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1439, 1440, 1441, 1446, 1447, 1448, 1449, 1450, 1453, 1455, 1459, 1460, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1486, 1489, 1492, 1500, 1501, 1502, 1503, 1505, 1508, 1509, 1510, 1517, 1519, 1520, 1521, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1552, 1554, 1561, 1563, 1564, 1571, 1576, 1577, 1578, 1588, 1590, 1596, 1602, 1606, 1608, 1609, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1667, 1668, 1669, 1673, 1674, 1675, 1677, 1678, 1680, 1681, 1684, 1687, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1718, 1719, 1721, 1722, 1724, 1725, 1727, 1737, 1739, 1740, 1741, 1744, 1745, 1746, 1748, 1750, 1752, 1754, 1755, 1761, 1768, 1771, 1776, 1777, 1779, 1780, 1781, 1783, 1785, 1786, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1808, 1813, 1815, 1816, 1818, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1839, 1840, 1841, 1854, 1858, 1861, 1865, 1867, 1872, 1874, 1875, 1876, 1878, 1883, 1886, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1921, 1923, 1925, 1926, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1938, 1943, 1945, 1947, 1948, 1949, 1950, 1951, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1964], "float": [0, 1, 3, 15, 19, 28, 31, 40, 41, 43, 47, 49, 51, 54, 62, 66, 74, 172, 173, 238, 331, 333, 335, 339, 351, 418, 492, 498, 515, 529, 701, 703, 708, 710, 714, 748, 751, 754, 755, 756, 760, 761, 762, 764, 771, 772, 777, 778, 779, 780, 781, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 801, 808, 809, 810, 815, 833, 835, 846, 854, 855, 868, 873, 874, 877, 878, 881, 896, 924, 925, 937, 938, 946, 953, 956, 960, 976, 981, 982, 986, 994, 1064, 1077, 1088, 1089, 1095, 1096, 1097, 1099, 1112, 1130, 1139, 1140, 1141, 1142, 1144, 1165, 1168, 1177, 1178, 1179, 1182, 1183, 1203, 1210, 1211, 1213, 1214, 1215, 1216, 1219, 1221, 1236, 1237, 1240, 1244, 1246, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1298, 1307, 1309, 1311, 1338, 1342, 1343, 1347, 1349, 1350, 1351, 1354, 1357, 1361, 1365, 1371, 1372, 1373, 1375, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1407, 1408, 1409, 1412, 1413, 1414, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1439, 1441, 1445, 1453, 1458, 1459, 1461, 1462, 1467, 1471, 1474, 1475, 1476, 1477, 1478, 1484, 1490, 1492, 1495, 1496, 1498, 1500, 1501, 1502, 1505, 1506, 1507, 1534, 1535, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1549, 1554, 1563, 1588, 1595, 1602, 1621, 1633, 1637, 1638, 1641, 1650, 1651, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1669, 1670, 1674, 1680, 1681, 1687, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1718, 1719, 1721, 1723, 1725, 1727, 1733, 1736, 1740, 1741, 1742, 1743, 1755, 1759, 1760, 1780, 1781, 1784, 1788, 1797, 1798, 1800, 1801, 1803, 1837, 1840, 1844, 1861, 1863, 1875, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1909, 1911, 1912, 1914, 1915, 1917, 1918, 1922, 1924, 1926, 1930, 1933, 1937, 1939, 1941, 1943, 1944, 1945, 1949, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1965], "datatyp": [0, 74, 896, 1218, 1221, 1453, 1635, 1636, 1783, 1933, 1937, 1953], "other": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 15, 17, 18, 19, 20, 21, 25, 28, 29, 33, 34, 37, 40, 41, 44, 47, 49, 50, 51, 53, 57, 58, 60, 61, 66, 67, 69, 71, 72, 73, 74, 116, 117, 132, 148, 149, 152, 164, 165, 168, 169, 178, 179, 184, 185, 215, 216, 217, 226, 252, 257, 261, 262, 263, 273, 292, 293, 300, 301, 302, 303, 309, 310, 311, 312, 313, 314, 321, 322, 325, 326, 327, 328, 331, 333, 339, 342, 362, 370, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 396, 397, 412, 413, 426, 430, 455, 456, 467, 468, 472, 473, 504, 514, 536, 577, 578, 579, 580, 596, 599, 632, 633, 634, 637, 638, 696, 701, 710, 754, 755, 756, 757, 758, 759, 776, 830, 842, 877, 881, 887, 894, 895, 900, 906, 909, 910, 923, 924, 925, 929, 930, 940, 941, 943, 944, 945, 947, 952, 968, 981, 994, 995, 998, 1000, 1002, 1009, 1019, 1040, 1082, 1088, 1089, 1090, 1091, 1098, 1099, 1100, 1114, 1121, 1139, 1140, 1141, 1142, 1145, 1151, 1152, 1153, 1154, 1157, 1161, 1163, 1164, 1165, 1175, 1176, 1177, 1186, 1187, 1189, 1190, 1195, 1196, 1198, 1210, 1219, 1221, 1225, 1232, 1241, 1243, 1244, 1245, 1247, 1248, 1253, 1271, 1273, 1276, 1277, 1290, 1298, 1299, 1300, 1302, 1304, 1305, 1308, 1309, 1315, 1318, 1319, 1323, 1324, 1328, 1331, 1342, 1344, 1354, 1357, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1390, 1400, 1405, 1407, 1419, 1453, 1454, 1463, 1481, 1496, 1500, 1504, 1527, 1528, 1529, 1554, 1563, 1602, 1621, 1624, 1633, 1637, 1638, 1656, 1678, 1682, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1718, 1719, 1725, 1727, 1755, 1759, 1775, 1780, 1783, 1785, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1837, 1838, 1854, 1860, 1864, 1866, 1883, 1884, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1907, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1933, 1935, 1937, 1940, 1944, 1945, 1949, 1950, 1951, 1954, 1958, 1959, 1960, 1964], "lower": [0, 1, 8, 17, 29, 41, 43, 49, 809, 811, 875, 947, 952, 959, 960, 961, 963, 1108, 1109, 1181, 1182, 1250, 1257, 1259, 1267, 1268, 1275, 1278, 1283, 1321, 1343, 1350, 1361, 1471, 1527, 1528, 1529, 1600, 1601, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1715, 1721, 1723, 1738, 1740, 1760, 1775, 1783, 1820, 1863, 1864, 1865, 1895, 1896, 1897, 1899, 1915, 1917, 1919, 1930, 1935, 1939, 1944, 1954, 1960], "point": [0, 1, 7, 8, 9, 13, 14, 17, 19, 20, 23, 28, 31, 40, 41, 44, 47, 51, 57, 60, 61, 66, 74, 107, 172, 173, 339, 351, 357, 498, 515, 714, 754, 755, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 775, 777, 778, 779, 780, 781, 791, 793, 795, 796, 797, 801, 811, 815, 835, 836, 837, 838, 841, 846, 868, 877, 878, 881, 896, 918, 920, 921, 922, 924, 925, 937, 938, 946, 968, 981, 982, 986, 1043, 1045, 1054, 1058, 1059, 1095, 1096, 1097, 1140, 1141, 1142, 1168, 1174, 1178, 1179, 1183, 1203, 1218, 1221, 1236, 1237, 1244, 1246, 1267, 1268, 1291, 1293, 1298, 1307, 1350, 1357, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1446, 1447, 1448, 1453, 1504, 1505, 1517, 1543, 1552, 1563, 1602, 1621, 1633, 1680, 1693, 1724, 1740, 1741, 1742, 1746, 1755, 1768, 1780, 1781, 1788, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1875, 1876, 1894, 1896, 1898, 1899, 1900, 1903, 1909, 1915, 1917, 1918, 1919, 1923, 1927, 1930, 1933, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1953, 1956, 1958, 1959, 1960, 1962, 1965], "lower_precision_fp": 0, "half": [0, 1, 10, 41, 49, 633, 976, 1108, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1221, 1283, 1289, 1381, 1382, 1383, 1384, 1385, 1386, 1401, 1402, 1404, 1453, 1547, 1548, 1551, 1689, 1715, 1768, 1836, 1912, 1930, 1933, 1953, 1955, 1956, 1959], "like": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 31, 33, 34, 40, 41, 43, 48, 49, 58, 60, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 354, 605, 633, 776, 809, 857, 876, 894, 915, 924, 925, 937, 946, 970, 975, 1037, 1038, 1047, 1089, 1094, 1095, 1115, 1137, 1140, 1141, 1147, 1151, 1154, 1155, 1156, 1162, 1178, 1179, 1219, 1221, 1222, 1228, 1231, 1236, 1240, 1267, 1268, 1279, 1292, 1361, 1369, 1397, 1400, 1416, 1417, 1418, 1453, 1454, 1455, 1463, 1464, 1481, 1504, 1546, 1564, 1620, 1624, 1633, 1634, 1635, 1636, 1641, 1666, 1684, 1687, 1710, 1733, 1748, 1752, 1771, 1780, 1783, 1840, 1851, 1876, 1886, 1891, 1893, 1894, 1896, 1898, 1899, 1906, 1911, 1912, 1913, 1918, 1919, 1922, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1947, 1949, 1950, 1953, 1955, 1956, 1960, 1961, 1963, 1964], "linear": [0, 2, 9, 25, 29, 41, 43, 44, 47, 49, 66, 68, 70, 72, 74, 75, 448, 489, 490, 491, 492, 493, 496, 727, 736, 744, 745, 781, 808, 809, 810, 812, 830, 870, 874, 875, 877, 878, 919, 961, 1000, 1094, 1150, 1152, 1160, 1162, 1174, 1221, 1225, 1232, 1246, 1252, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1281, 1283, 1311, 1350, 1369, 1375, 1395, 1403, 1404, 1412, 1438, 1453, 1455, 1468, 1470, 1472, 1480, 1482, 1489, 1492, 1496, 1498, 1500, 1503, 1505, 1541, 1550, 1551, 1563, 1597, 1605, 1610, 1621, 1624, 1633, 1640, 1641, 1645, 1655, 1656, 1657, 1658, 1659, 1661, 1662, 1663, 1664, 1665, 1673, 1674, 1677, 1688, 1718, 1721, 1729, 1740, 1875, 1886, 1894, 1897, 1898, 1904, 1907, 1914, 1917, 1922, 1923, 1924, 1926, 1930, 1935, 1937, 1939, 1940, 1942, 1944, 1945, 1946, 1947, 1949], "layer": [0, 8, 17, 41, 43, 45, 47, 48, 66, 69, 750, 751, 776, 857, 874, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1392, 1393, 1394, 1398, 1405, 1406, 1408, 1416, 1417, 1418, 1423, 1424, 1425, 1438, 1440, 1446, 1447, 1448, 1459, 1460, 1468, 1470, 1481, 1492, 1496, 1497, 1498, 1499, 1500, 1566, 1633, 1640, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1894, 1917, 1922, 1924, 1926, 1929, 1930, 1935, 1937, 1940, 1942, 1944, 1945, 1947, 1953, 1963], "convolut": [0, 1, 2, 754, 755, 756, 757, 758, 759, 788, 789, 790, 968, 1230, 1381, 1382, 1383, 1384, 1385, 1386, 1392, 1393, 1394, 1398, 1429, 1430, 1431, 1432, 1433, 1434, 1465, 1466, 1471, 1501, 1502, 1504, 1527, 1528, 1529, 1530, 1531, 1532, 1551, 1552, 1783, 1894, 1895, 1897, 1907, 1917, 1921, 1922, 1927, 1930, 1939, 1943, 1944, 1947], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 80, 81, 83, 97, 99, 100, 101, 102, 107, 116, 169, 272, 337, 339, 353, 354, 357, 395, 420, 465, 488, 498, 503, 515, 529, 533, 560, 596, 605, 633, 696, 705, 706, 707, 713, 751, 772, 776, 777, 779, 780, 781, 795, 798, 799, 801, 802, 803, 808, 809, 810, 811, 812, 815, 830, 831, 832, 833, 835, 836, 837, 838, 841, 856, 870, 874, 875, 876, 877, 878, 881, 890, 891, 902, 903, 904, 906, 909, 915, 917, 918, 919, 920, 921, 922, 924, 925, 937, 946, 947, 949, 950, 952, 955, 961, 968, 976, 981, 982, 985, 986, 996, 997, 998, 1000, 1001, 1003, 1008, 1020, 1031, 1037, 1040, 1041, 1051, 1061, 1068, 1077, 1082, 1086, 1089, 1094, 1095, 1096, 1097, 1110, 1111, 1112, 1113, 1115, 1117, 1122, 1124, 1130, 1133, 1135, 1136, 1140, 1141, 1142, 1150, 1151, 1156, 1158, 1160, 1161, 1162, 1166, 1174, 1178, 1179, 1181, 1183, 1196, 1198, 1210, 1211, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1225, 1227, 1228, 1231, 1234, 1236, 1237, 1242, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1291, 1292, 1293, 1302, 1303, 1304, 1305, 1307, 1308, 1310, 1312, 1313, 1315, 1318, 1321, 1322, 1323, 1326, 1328, 1343, 1347, 1348, 1349, 1350, 1351, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1400, 1405, 1406, 1407, 1408, 1413, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1468, 1470, 1481, 1484, 1485, 1486, 1492, 1496, 1498, 1500, 1501, 1502, 1504, 1505, 1517, 1523, 1524, 1525, 1535, 1536, 1543, 1544, 1545, 1546, 1552, 1563, 1564, 1587, 1590, 1592, 1595, 1602, 1620, 1621, 1622, 1623, 1624, 1629, 1630, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1645, 1652, 1666, 1670, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1687, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1717, 1720, 1721, 1733, 1739, 1740, 1746, 1755, 1758, 1759, 1766, 1768, 1779, 1780, 1783, 1813, 1814, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1835, 1836, 1839, 1840, 1849, 1851, 1855, 1857, 1858, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1875, 1876, 1878, 1880, 1881, 1882, 1886, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1965], "much": [0, 4, 7, 9, 15, 17, 20, 34, 40, 41, 169, 909, 918, 923, 1051, 1256, 1257, 1284, 1293, 1397, 1633, 1656, 1721, 1896, 1919, 1922, 1927, 1930, 1935, 1941, 1942, 1949, 1950, 1953], "faster": [0, 2, 8, 17, 19, 23, 26, 31, 40, 41, 43, 918, 924, 925, 1150, 1250, 1251, 1256, 1257, 1261, 1266, 1274, 1276, 1278, 1281, 1284, 1286, 1290, 1293, 1469, 1486, 1592, 1608, 1633, 1637, 1638, 1640, 1696, 1697, 1708, 1822, 1823, 1824, 1826, 1827, 1907, 1919, 1922, 1927, 1940, 1944, 1953, 1958], "reduct": [0, 2, 22, 29, 43, 66, 339, 529, 533, 968, 1266, 1298, 1350, 1369, 1370, 1376, 1387, 1389, 1397, 1407, 1413, 1414, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1502, 1524, 1525, 1533, 1535, 1536, 1544, 1549, 1560, 1561, 1564, 1565, 1575, 1583, 1584, 1585, 1586, 1587, 1595, 1606, 1607, 1618, 1619, 1633, 1740, 1817, 1897, 1912, 1923, 1927, 1941, 1944], "often": [0, 2, 4, 7, 8, 16, 17, 21, 25, 29, 33, 40, 43, 49, 61, 66, 69, 74, 169, 909, 923, 1236, 1267, 1268, 1277, 1326, 1396, 1416, 1417, 1418, 1517, 1525, 1543, 1552, 1624, 1640, 1687, 1723, 1899, 1919, 1922, 1926, 1929, 1930, 1932, 1933, 1934, 1941, 1949, 1958], "requir": [0, 1, 5, 8, 9, 12, 13, 14, 16, 17, 19, 23, 25, 33, 34, 40, 41, 43, 44, 45, 47, 49, 51, 59, 60, 66, 69, 71, 73, 74, 138, 169, 240, 353, 475, 512, 529, 531, 533, 576, 809, 811, 839, 842, 896, 905, 909, 914, 917, 918, 919, 920, 921, 922, 923, 968, 994, 995, 1050, 1094, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1135, 1136, 1162, 1163, 1234, 1260, 1291, 1293, 1307, 1389, 1396, 1397, 1496, 1497, 1498, 1499, 1500, 1502, 1544, 1602, 1624, 1633, 1634, 1643, 1645, 1647, 1687, 1688, 1699, 1709, 1727, 1824, 1836, 1875, 1886, 1893, 1896, 1899, 1901, 1906, 1907, 1911, 1913, 1914, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1932, 1935, 1937, 1941, 1942, 1944, 1945, 1949, 1950, 1951, 1953, 1958, 1960, 1963, 1964], "dynam": [0, 14, 17, 21, 24, 26, 29, 33, 34, 40, 75, 76, 77, 80, 81, 82, 85, 696, 745, 749, 776, 777, 778, 779, 780, 781, 810, 831, 842, 845, 860, 866, 867, 868, 869, 874, 875, 968, 996, 1228, 1234, 1236, 1292, 1640, 1894, 1898, 1899, 1900, 1917, 1922, 1930, 1933, 1937, 1940, 1941, 1945], "rang": [0, 1, 3, 13, 15, 20, 25, 29, 40, 43, 44, 47, 49, 60, 61, 63, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 319, 498, 700, 777, 779, 781, 811, 835, 836, 837, 838, 839, 841, 842, 843, 901, 938, 963, 1055, 1056, 1064, 1094, 1144, 1160, 1181, 1182, 1183, 1287, 1298, 1313, 1322, 1338, 1350, 1361, 1389, 1399, 1401, 1402, 1406, 1412, 1424, 1443, 1455, 1460, 1464, 1470, 1486, 1487, 1488, 1492, 1547, 1548, 1552, 1608, 1633, 1638, 1711, 1712, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1740, 1819, 1874, 1896, 1897, 1899, 1919, 1921, 1922, 1926, 1930, 1932, 1933, 1937, 1939, 1940, 1943, 1944, 1947, 1948, 1954, 1956, 1958, 1959, 1960, 1961], "tri": [0, 2, 3, 7, 16, 17, 40, 49, 53, 74, 102, 596, 1221, 1453, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1898, 1899, 1911, 1926, 1937, 1941], "match": [0, 1, 3, 17, 20, 28, 43, 45, 47, 49, 60, 66, 74, 75, 82, 83, 99, 169, 331, 333, 339, 490, 491, 515, 516, 596, 599, 709, 715, 795, 809, 810, 811, 870, 894, 909, 923, 924, 925, 994, 997, 1009, 1010, 1011, 1040, 1086, 1094, 1150, 1162, 1198, 1221, 1234, 1236, 1253, 1292, 1314, 1388, 1397, 1453, 1459, 1505, 1524, 1525, 1563, 1589, 1596, 1602, 1621, 1633, 1645, 1675, 1681, 1741, 1775, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1856, 1886, 1896, 1899, 1906, 1912, 1914, 1919, 1920, 1922, 1924, 1930, 1935, 1937, 1938, 1940, 1941, 1942, 1944, 1945, 1946, 1949, 1956, 1960, 1962], "each": [0, 1, 2, 5, 9, 11, 12, 14, 17, 18, 19, 20, 22, 23, 24, 25, 28, 29, 33, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 58, 61, 62, 63, 66, 67, 69, 71, 72, 74, 98, 101, 116, 138, 172, 173, 416, 420, 509, 529, 531, 533, 561, 623, 633, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 702, 709, 711, 712, 715, 751, 776, 808, 856, 857, 875, 877, 878, 881, 893, 902, 903, 904, 905, 907, 908, 909, 914, 923, 936, 939, 948, 952, 956, 957, 959, 962, 966, 968, 970, 986, 1006, 1007, 1011, 1040, 1043, 1045, 1051, 1053, 1057, 1060, 1066, 1071, 1072, 1073, 1074, 1077, 1078, 1089, 1092, 1094, 1111, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1131, 1135, 1136, 1138, 1143, 1147, 1152, 1153, 1157, 1161, 1162, 1163, 1174, 1180, 1182, 1183, 1184, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1221, 1236, 1237, 1242, 1274, 1292, 1293, 1308, 1310, 1318, 1320, 1321, 1322, 1323, 1326, 1328, 1334, 1335, 1343, 1349, 1351, 1361, 1366, 1369, 1370, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1405, 1406, 1408, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1433, 1434, 1438, 1440, 1444, 1445, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1468, 1470, 1481, 1484, 1485, 1487, 1492, 1495, 1501, 1502, 1504, 1522, 1524, 1525, 1530, 1531, 1532, 1535, 1536, 1538, 1539, 1540, 1543, 1544, 1545, 1549, 1552, 1562, 1564, 1587, 1588, 1590, 1592, 1595, 1602, 1615, 1624, 1629, 1630, 1633, 1666, 1667, 1669, 1679, 1680, 1681, 1687, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1732, 1736, 1737, 1740, 1747, 1755, 1760, 1761, 1766, 1770, 1775, 1788, 1799, 1805, 1821, 1822, 1823, 1824, 1826, 1827, 1828, 1839, 1840, 1855, 1857, 1858, 1861, 1872, 1873, 1880, 1886, 1887, 1893, 1898, 1899, 1905, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1940, 1942, 1943, 1944, 1949, 1950, 1951, 1953, 1954, 1956, 1958, 1959, 1960, 1962, 1963], "its": [0, 1, 4, 5, 7, 8, 9, 12, 14, 15, 16, 17, 19, 20, 22, 23, 33, 34, 37, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 60, 61, 62, 66, 73, 74, 75, 77, 97, 98, 169, 475, 504, 520, 529, 531, 533, 599, 600, 601, 633, 696, 839, 842, 890, 891, 892, 894, 895, 896, 909, 912, 924, 929, 930, 960, 961, 975, 976, 982, 986, 1001, 1029, 1031, 1040, 1077, 1081, 1084, 1094, 1097, 1142, 1147, 1151, 1152, 1153, 1156, 1161, 1182, 1183, 1187, 1201, 1221, 1231, 1256, 1257, 1261, 1266, 1273, 1275, 1278, 1279, 1284, 1290, 1315, 1341, 1369, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1416, 1417, 1418, 1453, 1454, 1463, 1484, 1492, 1500, 1552, 1563, 1590, 1596, 1624, 1629, 1630, 1634, 1635, 1636, 1641, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1667, 1673, 1677, 1681, 1691, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1730, 1755, 1759, 1763, 1764, 1780, 1781, 1785, 1805, 1841, 1860, 1861, 1863, 1871, 1884, 1896, 1898, 1899, 1903, 1907, 1909, 1911, 1918, 1919, 1920, 1922, 1923, 1924, 1926, 1927, 1930, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1949, 1950, 1951, 1953, 1956, 1957, 1959, 1962, 1963], "appropri": [0, 7, 8, 9, 17, 20, 23, 43, 44, 49, 66, 73, 74, 910, 1040, 1236, 1899, 1900, 1903, 1913, 1927, 1932, 1935, 1942, 1944, 1947, 1949, 1950, 1951, 1955, 1964], "ordinarili": [0, 1918], "train": [0, 1, 11, 12, 13, 17, 19, 21, 22, 24, 26, 29, 34, 40, 41, 43, 44, 46, 47, 51, 58, 59, 60, 61, 66, 69, 70, 74, 728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 749, 815, 817, 854, 855, 871, 872, 873, 875, 877, 878, 879, 1039, 1040, 1043, 1045, 1052, 1160, 1196, 1221, 1226, 1232, 1235, 1236, 1361, 1365, 1371, 1372, 1373, 1389, 1390, 1391, 1396, 1397, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1459, 1460, 1471, 1492, 1500, 1518, 1522, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1600, 1601, 1602, 1633, 1641, 1643, 1645, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1893, 1895, 1896, 1897, 1907, 1909, 1917, 1919, 1922, 1923, 1926, 1931, 1933, 1935, 1937, 1940, 1941, 1942, 1943, 1947, 1949, 1951, 1958], "gradscal": [0, 1918, 1922], "togeth": [0, 3, 9, 13, 16, 17, 23, 40, 43, 48, 49, 67, 72, 74, 776, 1037, 1094, 1150, 1152, 1156, 1160, 1161, 1166, 1260, 1405, 1423, 1468, 1563, 1633, 1637, 1861, 1907, 1918, 1924, 1925, 1926, 1929, 1930, 1944, 1949, 1950, 1951, 1953, 1958], "shown": [0, 13, 18, 41, 52, 61, 1037, 1047, 1425, 1645, 1691, 1721, 1788, 1896, 1899, 1918, 1922, 1924, 1926, 1930, 1942, 1944, 1953], "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 33, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 70, 71, 72, 73, 75, 77, 82, 83, 106, 107, 210, 227, 260, 272, 278, 307, 329, 331, 333, 335, 339, 353, 370, 419, 420, 462, 463, 464, 465, 466, 488, 498, 500, 504, 509, 512, 515, 529, 531, 533, 539, 553, 560, 574, 576, 596, 597, 599, 600, 601, 602, 603, 604, 605, 623, 633, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 736, 744, 745, 750, 754, 755, 756, 757, 758, 759, 761, 762, 764, 772, 773, 774, 776, 777, 778, 779, 780, 781, 788, 789, 790, 801, 808, 809, 810, 812, 813, 826, 827, 828, 829, 830, 831, 832, 833, 840, 854, 870, 875, 876, 877, 878, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 927, 929, 930, 936, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 968, 976, 979, 980, 981, 982, 983, 984, 985, 986, 994, 1037, 1038, 1043, 1045, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1158, 1160, 1162, 1163, 1164, 1165, 1168, 1174, 1177, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1191, 1195, 1196, 1198, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1234, 1235, 1236, 1237, 1238, 1239, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1517, 1519, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1543, 1544, 1547, 1548, 1552, 1554, 1587, 1589, 1590, 1593, 1594, 1602, 1621, 1624, 1633, 1640, 1641, 1643, 1645, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1752, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1788, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1813, 1815, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1834, 1835, 1837, 1839, 1840, 1842, 1843, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1900, 1903, 1905, 1906, 1908, 1909, 1912, 1913, 1914, 1917, 1919, 1920, 1921, 1922, 1926, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1951, 1953, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964], "recip": [0, 3, 16, 47, 1453, 1633, 1647, 1918, 1930], "howev": [0, 2, 3, 4, 5, 7, 9, 12, 15, 16, 17, 18, 33, 34, 40, 41, 43, 47, 49, 51, 57, 66, 67, 68, 70, 71, 73, 74, 75, 80, 83, 99, 100, 101, 498, 561, 910, 917, 997, 1019, 1040, 1082, 1084, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1150, 1151, 1155, 1156, 1158, 1161, 1162, 1221, 1224, 1225, 1231, 1233, 1260, 1275, 1276, 1278, 1292, 1293, 1310, 1369, 1372, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1397, 1453, 1527, 1528, 1529, 1552, 1624, 1633, 1666, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1886, 1894, 1899, 1914, 1918, 1919, 1922, 1924, 1928, 1930, 1932, 1934, 1935, 1936, 1937, 1941, 1942, 1949, 1951, 1953], "modular": [0, 1918], "mai": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 15, 16, 17, 20, 22, 25, 27, 29, 33, 39, 40, 41, 43, 47, 49, 50, 51, 53, 57, 59, 60, 64, 66, 67, 71, 73, 74, 99, 215, 240, 272, 331, 339, 475, 531, 533, 572, 619, 633, 696, 705, 831, 832, 833, 877, 908, 915, 917, 919, 923, 924, 933, 939, 950, 962, 968, 979, 980, 982, 984, 994, 995, 997, 998, 1006, 1019, 1029, 1030, 1031, 1037, 1038, 1040, 1051, 1053, 1057, 1071, 1072, 1094, 1133, 1137, 1142, 1145, 1147, 1154, 1155, 1157, 1183, 1218, 1221, 1224, 1225, 1230, 1231, 1233, 1234, 1236, 1242, 1251, 1252, 1256, 1257, 1258, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1276, 1278, 1279, 1282, 1283, 1284, 1290, 1292, 1293, 1298, 1315, 1325, 1338, 1361, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1419, 1423, 1449, 1450, 1451, 1453, 1460, 1468, 1498, 1500, 1505, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1544, 1552, 1554, 1563, 1569, 1590, 1602, 1620, 1621, 1622, 1623, 1624, 1633, 1640, 1642, 1643, 1645, 1680, 1710, 1715, 1739, 1759, 1762, 1780, 1783, 1790, 1808, 1820, 1836, 1840, 1863, 1875, 1893, 1894, 1896, 1898, 1899, 1903, 1905, 1906, 1907, 1909, 1913, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1930, 1933, 1934, 1935, 1936, 1937, 1941, 1943, 1944, 1945, 1947, 1949, 1951, 1953, 1955, 1961, 1964], "separ": [0, 1, 3, 9, 12, 29, 33, 40, 43, 47, 60, 61, 66, 67, 69, 72, 73, 74, 751, 776, 906, 1094, 1111, 1113, 1119, 1120, 1123, 1124, 1129, 1131, 1150, 1231, 1266, 1281, 1408, 1416, 1417, 1418, 1459, 1461, 1571, 1681, 1687, 1893, 1897, 1899, 1905, 1918, 1919, 1921, 1922, 1925, 1935, 1940, 1941, 1950, 1953, 1954, 1958], "desir": [0, 1, 3, 29, 40, 43, 49, 66, 74, 107, 174, 189, 191, 194, 197, 198, 199, 214, 225, 228, 258, 272, 285, 315, 343, 411, 462, 463, 464, 465, 466, 513, 515, 516, 536, 541, 560, 561, 562, 576, 596, 599, 619, 620, 633, 809, 881, 895, 937, 946, 965, 1041, 1042, 1065, 1066, 1075, 1076, 1095, 1096, 1097, 1107, 1112, 1130, 1147, 1148, 1149, 1178, 1179, 1221, 1240, 1291, 1307, 1313, 1320, 1333, 1339, 1348, 1350, 1351, 1369, 1370, 1453, 1503, 1525, 1571, 1608, 1609, 1624, 1666, 1680, 1684, 1685, 1730, 1737, 1740, 1741, 1742, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1789, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1816, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1839, 1854, 1865, 1867, 1891, 1892, 1912, 1913, 1914, 1918, 1919, 1922, 1925, 1928, 1930, 1935, 1942, 1948, 1949, 1954, 1955, 1956], "As": [0, 1, 8, 11, 13, 18, 20, 27, 29, 41, 43, 45, 49, 66, 69, 70, 74, 272, 950, 1094, 1225, 1252, 1256, 1257, 1267, 1268, 1279, 1284, 1392, 1393, 1394, 1398, 1419, 1453, 1484, 1620, 1679, 1685, 1892, 1896, 1898, 1899, 1906, 1914, 1919, 1922, 1924, 1926, 1930, 1933, 1936, 1937, 1941, 1942, 1948, 1949, 1950, 1951, 1953], "section": [0, 1, 7, 13, 18, 20, 25, 27, 29, 40, 49, 51, 52, 70, 74, 101, 138, 1051, 1094, 1174, 1390, 1405, 1423, 1451, 1468, 1535, 1669, 1855, 1896, 1897, 1898, 1899, 1900, 1911, 1913, 1914, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1950, 1958], "infer": [0, 1, 2, 3, 5, 11, 12, 15, 17, 19, 21, 24, 31, 34, 49, 60, 66, 596, 633, 877, 878, 881, 895, 896, 1011, 1147, 1148, 1183, 1196, 1205, 1219, 1222, 1230, 1235, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1459, 1505, 1563, 1589, 1624, 1678, 1710, 1721, 1755, 1762, 1780, 1781, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1871, 1894, 1896, 1898, 1899, 1903, 1912, 1914, 1930, 1937, 1938, 1943, 1944, 1945, 1947, 1953], "onli": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 27, 28, 29, 33, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 58, 60, 61, 66, 70, 71, 73, 74, 97, 98, 99, 138, 272, 329, 339, 341, 353, 370, 462, 463, 464, 465, 466, 475, 498, 503, 529, 531, 533, 573, 599, 600, 601, 603, 604, 630, 633, 696, 711, 712, 751, 754, 755, 756, 757, 759, 788, 789, 790, 795, 801, 802, 803, 807, 809, 817, 830, 833, 836, 837, 840, 844, 858, 865, 874, 894, 910, 913, 914, 915, 916, 917, 919, 924, 937, 938, 946, 968, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 1000, 1007, 1009, 1011, 1037, 1038, 1040, 1061, 1091, 1095, 1097, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1140, 1141, 1145, 1146, 1151, 1162, 1174, 1178, 1179, 1183, 1191, 1202, 1210, 1219, 1221, 1224, 1225, 1232, 1236, 1237, 1240, 1251, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1266, 1267, 1268, 1269, 1279, 1281, 1282, 1284, 1285, 1292, 1293, 1310, 1315, 1361, 1384, 1385, 1386, 1389, 1390, 1396, 1397, 1400, 1423, 1425, 1453, 1456, 1458, 1459, 1461, 1469, 1492, 1500, 1504, 1505, 1535, 1544, 1546, 1552, 1563, 1590, 1620, 1621, 1624, 1627, 1628, 1629, 1630, 1633, 1635, 1636, 1646, 1666, 1667, 1668, 1680, 1687, 1692, 1696, 1697, 1699, 1710, 1713, 1717, 1720, 1721, 1723, 1727, 1739, 1748, 1752, 1754, 1756, 1779, 1783, 1784, 1786, 1790, 1817, 1821, 1831, 1836, 1840, 1854, 1865, 1867, 1872, 1873, 1875, 1876, 1878, 1883, 1884, 1885, 1886, 1893, 1897, 1898, 1899, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1947, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1958, 1959, 1960], "For": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 28, 29, 31, 33, 34, 37, 40, 41, 43, 44, 45, 49, 51, 57, 58, 60, 61, 63, 66, 67, 68, 70, 71, 72, 73, 74, 215, 240, 272, 307, 331, 333, 339, 353, 370, 488, 498, 509, 515, 529, 531, 533, 599, 605, 619, 633, 702, 703, 704, 705, 706, 709, 715, 750, 754, 755, 756, 757, 758, 759, 776, 808, 809, 810, 830, 874, 875, 908, 924, 936, 940, 942, 943, 945, 948, 957, 961, 968, 1029, 1043, 1045, 1051, 1075, 1076, 1077, 1094, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1138, 1160, 1162, 1163, 1174, 1183, 1198, 1221, 1231, 1232, 1234, 1236, 1237, 1252, 1256, 1257, 1260, 1263, 1264, 1265, 1266, 1268, 1277, 1278, 1280, 1284, 1293, 1300, 1308, 1315, 1321, 1325, 1361, 1365, 1369, 1370, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1396, 1397, 1399, 1400, 1405, 1407, 1414, 1419, 1423, 1425, 1453, 1456, 1457, 1458, 1459, 1467, 1468, 1474, 1475, 1476, 1477, 1478, 1479, 1484, 1489, 1503, 1504, 1508, 1509, 1510, 1525, 1527, 1528, 1529, 1552, 1563, 1588, 1590, 1602, 1610, 1624, 1629, 1630, 1633, 1643, 1666, 1667, 1668, 1670, 1680, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1723, 1768, 1777, 1815, 1825, 1831, 1840, 1855, 1857, 1861, 1869, 1876, 1878, 1884, 1885, 1886, 1893, 1894, 1896, 1899, 1901, 1903, 1905, 1906, 1907, 1909, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1964], "api": [0, 2, 3, 5, 8, 9, 12, 21, 26, 41, 43, 44, 48, 51, 52, 53, 57, 58, 59, 60, 61, 66, 67, 70, 73, 75, 80, 83, 816, 840, 877, 910, 911, 912, 920, 957, 995, 1029, 1030, 1031, 1037, 1038, 1040, 1067, 1098, 1138, 1151, 1154, 1155, 1157, 1162, 1231, 1232, 1234, 1338, 1633, 1675, 1677, 1678, 1687, 1689, 1768, 1779, 1785, 1869, 1878, 1886, 1893, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1914, 1919, 1923, 1935, 1937, 1945, 1949, 1950, 1953, 1956, 1958, 1961, 1964], "also": [0, 1, 2, 3, 5, 7, 8, 9, 12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 28, 29, 31, 33, 34, 37, 40, 41, 43, 47, 48, 49, 50, 57, 60, 66, 70, 71, 72, 73, 74, 75, 82, 83, 102, 173, 237, 240, 241, 272, 341, 529, 531, 533, 539, 559, 630, 757, 758, 759, 776, 816, 830, 877, 896, 905, 906, 915, 937, 946, 960, 968, 973, 994, 1037, 1040, 1051, 1075, 1076, 1094, 1098, 1114, 1145, 1151, 1157, 1161, 1162, 1163, 1166, 1168, 1178, 1179, 1183, 1196, 1221, 1224, 1225, 1227, 1230, 1234, 1236, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1289, 1322, 1328, 1341, 1349, 1361, 1369, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1397, 1400, 1405, 1419, 1423, 1453, 1460, 1468, 1482, 1484, 1492, 1501, 1502, 1504, 1530, 1531, 1532, 1552, 1589, 1605, 1624, 1633, 1643, 1645, 1655, 1657, 1659, 1660, 1661, 1662, 1678, 1711, 1717, 1721, 1724, 1727, 1752, 1759, 1771, 1781, 1796, 1797, 1814, 1817, 1831, 1840, 1849, 1851, 1854, 1860, 1861, 1872, 1873, 1886, 1889, 1893, 1894, 1896, 1898, 1899, 1903, 1905, 1906, 1907, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1949, 1950, 1953, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1964], "arg": [0, 1, 3, 4, 5, 13, 14, 16, 20, 28, 29, 33, 40, 41, 43, 47, 48, 49, 51, 52, 58, 59, 61, 62, 63, 66, 73, 74, 75, 80, 81, 82, 83, 106, 596, 619, 696, 748, 763, 765, 767, 768, 769, 770, 776, 778, 779, 840, 877, 906, 908, 913, 914, 972, 1040, 1150, 1154, 1155, 1156, 1162, 1221, 1224, 1310, 1369, 1370, 1387, 1389, 1405, 1413, 1415, 1420, 1423, 1442, 1444, 1445, 1453, 1456, 1457, 1458, 1460, 1467, 1468, 1481, 1483, 1484, 1485, 1487, 1491, 1492, 1493, 1494, 1501, 1524, 1525, 1535, 1564, 1587, 1595, 1624, 1633, 1647, 1652, 1666, 1673, 1675, 1688, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1841, 1873, 1883, 1886, 1893, 1897, 1899, 1900, 1911, 1913, 1919, 1922, 1923, 1924, 1925, 1932, 1937, 1938, 1941, 1942, 1949, 1950, 1951, 1955, 1963, 1964], "i": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 82, 83, 87, 88, 89, 97, 98, 99, 100, 101, 102, 103, 106, 107, 116, 169, 172, 173, 174, 189, 191, 194, 197, 198, 199, 209, 210, 214, 215, 225, 227, 228, 237, 242, 258, 272, 273, 285, 308, 315, 329, 331, 333, 337, 339, 341, 343, 346, 347, 348, 349, 350, 351, 353, 354, 356, 358, 359, 360, 361, 370, 411, 418, 420, 424, 465, 475, 488, 489, 498, 500, 503, 504, 509, 511, 512, 513, 514, 515, 516, 519, 520, 529, 531, 533, 536, 540, 541, 553, 559, 560, 561, 573, 576, 596, 597, 599, 600, 601, 603, 604, 605, 619, 620, 623, 630, 633, 634, 636, 640, 696, 697, 699, 700, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 739, 740, 741, 742, 743, 750, 751, 752, 753, 754, 755, 756, 757, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 784, 785, 788, 789, 790, 791, 792, 793, 794, 795, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 815, 817, 818, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 840, 842, 843, 849, 854, 855, 856, 873, 874, 875, 877, 878, 881, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 933, 936, 937, 938, 939, 941, 944, 946, 948, 949, 952, 953, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 975, 979, 980, 981, 982, 983, 984, 985, 986, 991, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1009, 1011, 1014, 1015, 1016, 1018, 1022, 1023, 1026, 1029, 1030, 1031, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1086, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1104, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1165, 1166, 1167, 1168, 1174, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1195, 1196, 1198, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1240, 1241, 1242, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1303, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1341, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1484, 1485, 1486, 1488, 1489, 1492, 1493, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1517, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1554, 1563, 1564, 1569, 1571, 1573, 1574, 1576, 1577, 1578, 1587, 1588, 1590, 1592, 1593, 1594, 1595, 1596, 1602, 1605, 1608, 1609, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1746, 1748, 1749, 1750, 1752, 1753, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1806, 1808, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1831, 1832, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1871, 1872, 1873, 1875, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "equival": [0, 3, 5, 13, 20, 40, 41, 47, 48, 49, 53, 60, 61, 70, 71, 74, 97, 174, 189, 191, 194, 197, 198, 199, 258, 273, 285, 315, 337, 343, 411, 465, 475, 514, 516, 541, 620, 626, 633, 634, 636, 708, 760, 764, 771, 773, 775, 801, 802, 803, 892, 906, 949, 951, 954, 956, 959, 966, 967, 1082, 1086, 1089, 1092, 1093, 1094, 1096, 1111, 1113, 1116, 1119, 1120, 1123, 1124, 1126, 1129, 1131, 1149, 1151, 1154, 1156, 1162, 1184, 1186, 1198, 1220, 1221, 1231, 1236, 1237, 1240, 1252, 1273, 1277, 1285, 1290, 1322, 1327, 1341, 1348, 1361, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1396, 1397, 1408, 1414, 1416, 1417, 1418, 1419, 1423, 1425, 1453, 1484, 1492, 1504, 1506, 1571, 1592, 1602, 1621, 1622, 1623, 1633, 1685, 1710, 1746, 1749, 1753, 1777, 1783, 1791, 1813, 1819, 1832, 1842, 1843, 1849, 1854, 1873, 1886, 1887, 1888, 1892, 1896, 1898, 1899, 1919, 1937, 1941, 1945, 1953, 1954, 1956, 1959, 1960, 1964, 1965], "support": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 18, 19, 20, 21, 26, 27, 28, 29, 31, 33, 34, 36, 37, 40, 41, 43, 45, 47, 48, 49, 50, 52, 53, 60, 61, 66, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 97, 98, 101, 102, 329, 339, 475, 599, 633, 701, 702, 703, 705, 709, 711, 712, 715, 745, 754, 755, 756, 788, 789, 790, 795, 801, 802, 803, 808, 809, 810, 811, 817, 833, 849, 875, 877, 878, 908, 910, 915, 924, 925, 936, 937, 941, 944, 946, 948, 960, 961, 968, 981, 994, 996, 1037, 1038, 1040, 1057, 1089, 1091, 1094, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1139, 1140, 1141, 1142, 1144, 1145, 1146, 1157, 1161, 1178, 1179, 1191, 1218, 1225, 1232, 1236, 1240, 1241, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1311, 1315, 1319, 1324, 1325, 1342, 1381, 1382, 1383, 1384, 1385, 1386, 1393, 1396, 1397, 1400, 1420, 1440, 1458, 1459, 1492, 1500, 1502, 1504, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1544, 1546, 1552, 1563, 1569, 1602, 1620, 1621, 1623, 1633, 1680, 1685, 1687, 1696, 1697, 1699, 1727, 1739, 1758, 1759, 1780, 1783, 1784, 1814, 1817, 1820, 1837, 1840, 1863, 1865, 1867, 1876, 1878, 1883, 1884, 1885, 1892, 1893, 1894, 1896, 1898, 1900, 1901, 1903, 1907, 1909, 1911, 1915, 1919, 1920, 1921, 1922, 1923, 1924, 1928, 1930, 1932, 1933, 1935, 1936, 1938, 1940, 1941, 1942, 1943, 1947, 1948, 1949, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964], "now": [0, 1, 12, 15, 16, 18, 19, 20, 22, 27, 28, 29, 43, 48, 50, 57, 61, 62, 66, 71, 74, 240, 512, 916, 923, 1009, 1037, 1058, 1059, 1145, 1168, 1218, 1219, 1225, 1236, 1270, 1450, 1469, 1505, 1624, 1645, 1656, 1677, 1699, 1780, 1831, 1836, 1878, 1896, 1906, 1912, 1913, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1930, 1931, 1937, 1941, 1944, 1950, 1951, 1953, 1964], "new": [0, 1, 5, 8, 12, 14, 15, 17, 20, 28, 29, 33, 37, 40, 42, 43, 45, 49, 51, 60, 61, 66, 67, 70, 71, 72, 73, 74, 101, 240, 272, 329, 465, 500, 504, 512, 515, 560, 596, 599, 633, 696, 700, 776, 807, 830, 835, 870, 895, 897, 898, 899, 900, 901, 911, 929, 930, 951, 952, 955, 957, 966, 970, 981, 983, 984, 998, 1000, 1078, 1082, 1104, 1108, 1109, 1135, 1136, 1138, 1151, 1160, 1162, 1191, 1195, 1196, 1210, 1211, 1214, 1217, 1221, 1227, 1232, 1234, 1294, 1295, 1296, 1297, 1314, 1352, 1355, 1371, 1372, 1373, 1405, 1416, 1417, 1418, 1453, 1454, 1459, 1463, 1492, 1503, 1505, 1563, 1626, 1629, 1630, 1631, 1632, 1633, 1641, 1645, 1647, 1651, 1652, 1653, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1670, 1674, 1677, 1678, 1696, 1697, 1723, 1747, 1757, 1758, 1762, 1763, 1764, 1770, 1771, 1775, 1780, 1781, 1791, 1793, 1804, 1806, 1808, 1829, 1830, 1833, 1850, 1852, 1853, 1869, 1871, 1874, 1875, 1884, 1885, 1886, 1893, 1896, 1898, 1899, 1903, 1906, 1907, 1911, 1912, 1913, 1914, 1915, 1919, 1922, 1924, 1925, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1947, 1951, 1953, 1954, 1955, 1957, 1958, 1959, 1960, 1963], "version": [0, 1, 2, 5, 8, 18, 25, 29, 33, 39, 41, 43, 45, 49, 61, 66, 69, 70, 74, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 140, 142, 144, 146, 149, 150, 152, 160, 162, 165, 166, 168, 171, 177, 179, 181, 183, 185, 187, 196, 205, 213, 217, 220, 222, 232, 234, 250, 254, 256, 262, 265, 267, 269, 271, 275, 280, 287, 289, 291, 295, 297, 301, 303, 310, 312, 314, 322, 324, 326, 328, 330, 332, 334, 336, 374, 376, 378, 380, 382, 384, 386, 389, 391, 393, 394, 401, 403, 405, 407, 409, 413, 417, 419, 437, 440, 443, 445, 456, 458, 460, 468, 473, 483, 486, 502, 506, 508, 524, 527, 528, 530, 532, 538, 543, 545, 548, 550, 552, 565, 567, 569, 572, 578, 580, 587, 591, 593, 609, 612, 614, 616, 618, 628, 638, 751, 752, 753, 765, 766, 767, 768, 769, 770, 791, 792, 793, 794, 796, 800, 801, 820, 821, 822, 855, 863, 871, 872, 874, 1040, 1150, 1178, 1196, 1218, 1221, 1224, 1225, 1228, 1231, 1250, 1263, 1264, 1268, 1269, 1282, 1315, 1352, 1370, 1423, 1453, 1454, 1468, 1505, 1517, 1542, 1552, 1559, 1568, 1599, 1601, 1616, 1617, 1621, 1625, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1674, 1675, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1772, 1773, 1774, 1831, 1834, 1835, 1836, 1840, 1860, 1875, 1881, 1882, 1893, 1912, 1913, 1919, 1920, 1922, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1947, 1953, 1960, 1961], "1": [0, 1, 3, 12, 13, 14, 15, 17, 18, 19, 20, 22, 25, 28, 29, 31, 33, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 60, 63, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 155, 170, 171, 192, 210, 224, 227, 244, 246, 247, 248, 260, 272, 276, 281, 304, 307, 329, 330, 331, 333, 335, 339, 370, 395, 419, 420, 462, 464, 465, 471, 488, 498, 500, 504, 509, 512, 515, 529, 531, 533, 553, 554, 558, 560, 570, 571, 572, 574, 576, 577, 578, 579, 580, 597, 599, 600, 601, 603, 604, 623, 624, 631, 633, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 728, 729, 730, 731, 732, 733, 734, 735, 739, 740, 741, 742, 743, 746, 747, 750, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 767, 768, 769, 772, 773, 774, 776, 786, 788, 789, 790, 791, 794, 798, 799, 801, 812, 824, 825, 835, 836, 837, 838, 841, 843, 871, 877, 878, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 910, 913, 915, 916, 917, 918, 919, 920, 921, 922, 929, 930, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 967, 969, 976, 979, 980, 981, 982, 983, 984, 985, 986, 990, 994, 1006, 1037, 1038, 1053, 1057, 1064, 1068, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1097, 1098, 1099, 1100, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1165, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1191, 1192, 1195, 1196, 1198, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1225, 1231, 1232, 1236, 1237, 1240, 1241, 1242, 1244, 1245, 1246, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1266, 1267, 1268, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1296, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1327, 1328, 1338, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1491, 1492, 1495, 1496, 1498, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1517, 1519, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1541, 1542, 1543, 1544, 1546, 1547, 1548, 1550, 1551, 1552, 1554, 1556, 1558, 1559, 1560, 1561, 1562, 1570, 1572, 1576, 1577, 1578, 1584, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1596, 1600, 1601, 1602, 1603, 1604, 1606, 1608, 1609, 1610, 1612, 1617, 1618, 1619, 1620, 1621, 1624, 1633, 1640, 1641, 1645, 1650, 1651, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1778, 1779, 1780, 1781, 1782, 1784, 1785, 1788, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1808, 1809, 1813, 1814, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1874, 1875, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1895, 1897, 1898, 1899, 1900, 1903, 1906, 1907, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1964, 1965], "10": [0, 1, 12, 13, 14, 17, 19, 20, 21, 25, 29, 39, 40, 41, 43, 44, 49, 50, 60, 62, 75, 80, 82, 83, 331, 339, 353, 488, 529, 576, 597, 599, 600, 601, 701, 702, 713, 750, 761, 762, 776, 777, 778, 779, 781, 936, 948, 958, 960, 961, 962, 966, 986, 1073, 1074, 1075, 1076, 1077, 1092, 1094, 1111, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1131, 1137, 1145, 1164, 1174, 1184, 1210, 1226, 1231, 1232, 1238, 1243, 1246, 1273, 1275, 1276, 1291, 1293, 1295, 1300, 1302, 1303, 1304, 1305, 1307, 1315, 1326, 1343, 1359, 1360, 1361, 1363, 1364, 1370, 1373, 1376, 1377, 1380, 1383, 1386, 1396, 1397, 1405, 1406, 1407, 1408, 1418, 1423, 1424, 1425, 1450, 1454, 1455, 1460, 1463, 1464, 1468, 1470, 1492, 1496, 1497, 1498, 1499, 1500, 1504, 1510, 1529, 1532, 1536, 1543, 1544, 1554, 1624, 1633, 1656, 1664, 1678, 1681, 1691, 1695, 1715, 1721, 1723, 1741, 1742, 1750, 1775, 1788, 1794, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1804, 1813, 1828, 1840, 1841, 1851, 1855, 1856, 1859, 1861, 1875, 1887, 1893, 1896, 1897, 1898, 1899, 1900, 1906, 1919, 1922, 1923, 1930, 1933, 1934, 1935, 1936, 1937, 1939, 1953, 1954, 1956, 1958, 1959, 1960, 1965], "class": [0, 1, 2, 3, 13, 14, 15, 20, 23, 25, 28, 29, 34, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 54, 57, 58, 60, 62, 66, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 573, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 852, 853, 854, 855, 856, 857, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 910, 913, 914, 915, 916, 987, 988, 995, 996, 997, 998, 1000, 1001, 1016, 1018, 1029, 1069, 1098, 1160, 1196, 1219, 1220, 1221, 1224, 1226, 1227, 1231, 1232, 1235, 1236, 1237, 1238, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1525, 1535, 1543, 1587, 1589, 1624, 1633, 1634, 1635, 1636, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1666, 1673, 1678, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1746, 1785, 1815, 1876, 1894, 1897, 1900, 1903, 1906, 1909, 1911, 1913, 1918, 1919, 1922, 1924, 1925, 1926, 1930, 1932, 1935, 1938, 1942, 1943, 1944, 1946, 1947, 1949, 1950, 1953, 1955, 1956, 1958, 1960, 1961, 1962, 1963, 1964, 1965], "device_typ": [0, 1, 43, 1918, 1948], "dtype": [0, 1, 5, 14, 16, 29, 31, 37, 38, 40, 43, 45, 48, 66, 74, 75, 80, 82, 83, 100, 172, 173, 210, 227, 231, 232, 233, 234, 260, 329, 331, 333, 335, 337, 339, 427, 446, 449, 462, 463, 464, 465, 466, 470, 475, 487, 498, 500, 529, 531, 581, 596, 597, 619, 633, 703, 705, 708, 709, 713, 715, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 780, 781, 788, 789, 790, 810, 811, 815, 835, 836, 837, 838, 839, 840, 841, 842, 843, 857, 874, 875, 877, 878, 881, 895, 896, 913, 915, 917, 919, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 953, 960, 976, 979, 980, 986, 994, 1010, 1075, 1076, 1095, 1096, 1097, 1107, 1111, 1112, 1113, 1119, 1120, 1130, 1137, 1142, 1144, 1146, 1147, 1148, 1149, 1168, 1178, 1179, 1191, 1221, 1225, 1234, 1240, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1302, 1303, 1304, 1305, 1307, 1310, 1311, 1315, 1319, 1320, 1321, 1324, 1325, 1343, 1347, 1348, 1349, 1351, 1361, 1370, 1371, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1396, 1397, 1400, 1405, 1406, 1408, 1416, 1417, 1418, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1453, 1459, 1460, 1461, 1468, 1469, 1470, 1474, 1475, 1476, 1477, 1478, 1492, 1496, 1498, 1500, 1504, 1505, 1506, 1507, 1519, 1535, 1536, 1563, 1569, 1571, 1602, 1608, 1609, 1624, 1635, 1636, 1642, 1645, 1646, 1666, 1680, 1684, 1685, 1689, 1692, 1727, 1733, 1737, 1738, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1765, 1768, 1780, 1781, 1783, 1784, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1812, 1816, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1839, 1840, 1851, 1854, 1865, 1867, 1872, 1875, 1876, 1878, 1884, 1885, 1889, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1906, 1913, 1914, 1922, 1924, 1930, 1933, 1937, 1939, 1944, 1945, 1946, 1953, 1954, 1955, 1958, 1959, 1960, 1965], "none": [0, 1, 2, 3, 5, 13, 20, 29, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 57, 58, 60, 62, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 131, 133, 134, 135, 137, 153, 154, 157, 169, 172, 173, 175, 192, 204, 205, 206, 207, 223, 224, 226, 228, 231, 232, 233, 234, 248, 253, 254, 255, 256, 276, 304, 308, 319, 353, 369, 372, 395, 425, 427, 428, 429, 432, 438, 444, 445, 446, 447, 448, 449, 462, 463, 464, 465, 466, 470, 471, 487, 496, 498, 504, 510, 519, 529, 536, 553, 554, 568, 569, 571, 572, 581, 596, 597, 599, 604, 606, 619, 624, 625, 626, 631, 642, 644, 646, 648, 650, 652, 654, 656, 658, 660, 662, 664, 666, 668, 671, 673, 675, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 713, 714, 715, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 765, 766, 767, 768, 769, 770, 771, 782, 783, 784, 785, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 809, 810, 811, 813, 815, 830, 833, 835, 836, 837, 838, 841, 842, 854, 855, 856, 873, 874, 875, 876, 877, 878, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 894, 895, 896, 897, 898, 899, 900, 901, 905, 906, 907, 908, 909, 910, 911, 912, 915, 916, 918, 920, 921, 922, 923, 924, 925, 929, 930, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 958, 959, 960, 961, 963, 964, 966, 968, 973, 976, 977, 978, 980, 981, 983, 984, 985, 986, 989, 993, 994, 995, 997, 998, 1000, 1001, 1002, 1006, 1007, 1009, 1010, 1011, 1014, 1015, 1016, 1022, 1023, 1029, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1064, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1086, 1087, 1089, 1090, 1091, 1093, 1095, 1096, 1097, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1148, 1149, 1150, 1151, 1152, 1156, 1159, 1160, 1162, 1163, 1164, 1165, 1166, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1198, 1199, 1215, 1216, 1218, 1220, 1221, 1225, 1228, 1230, 1231, 1232, 1234, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1359, 1360, 1361, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1396, 1397, 1399, 1401, 1402, 1403, 1406, 1407, 1408, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1467, 1469, 1470, 1484, 1485, 1486, 1487, 1488, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1512, 1513, 1517, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1543, 1544, 1547, 1548, 1549, 1550, 1552, 1553, 1560, 1562, 1563, 1564, 1565, 1566, 1569, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1592, 1595, 1602, 1606, 1607, 1608, 1609, 1617, 1618, 1619, 1621, 1622, 1623, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1666, 1668, 1669, 1670, 1671, 1674, 1675, 1677, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1728, 1729, 1732, 1733, 1734, 1736, 1737, 1739, 1740, 1743, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1766, 1768, 1769, 1770, 1775, 1788, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1812, 1813, 1816, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1851, 1852, 1853, 1854, 1856, 1858, 1861, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1873, 1876, 1878, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1917, 1919, 1922, 1924, 1925, 1930, 1932, 1935, 1937, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1954, 1955, 1956, 1958, 1960, 1962, 1963, 1964], "enabl": [0, 1, 2, 5, 8, 11, 13, 16, 17, 18, 20, 21, 22, 25, 29, 37, 38, 40, 41, 43, 44, 45, 47, 48, 49, 51, 61, 66, 100, 102, 519, 520, 696, 776, 828, 829, 910, 915, 968, 995, 1040, 1094, 1098, 1196, 1204, 1205, 1223, 1229, 1334, 1335, 1405, 1423, 1468, 1469, 1499, 1602, 1633, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1678, 1709, 1784, 1785, 1788, 1815, 1875, 1878, 1899, 1905, 1906, 1907, 1910, 1914, 1918, 1919, 1920, 1921, 1922, 1924, 1929, 1931, 1933, 1934, 1937, 1942, 1943, 1948, 1949, 1950, 1953, 1961, 1963, 1964], "true": [0, 1, 2, 3, 5, 14, 15, 17, 19, 20, 21, 23, 25, 28, 29, 33, 40, 41, 43, 44, 45, 47, 48, 49, 51, 62, 66, 71, 72, 73, 74, 75, 82, 83, 169, 215, 228, 278, 337, 339, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 369, 414, 418, 420, 465, 475, 477, 488, 494, 504, 511, 512, 515, 520, 532, 533, 572, 583, 596, 597, 606, 610, 619, 625, 633, 696, 703, 708, 709, 710, 711, 712, 713, 715, 734, 735, 736, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 762, 765, 770, 772, 776, 777, 780, 781, 784, 785, 795, 801, 802, 813, 830, 842, 875, 889, 891, 892, 896, 905, 908, 909, 910, 913, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 929, 930, 937, 940, 943, 945, 946, 952, 953, 959, 960, 961, 967, 968, 971, 973, 979, 997, 1035, 1089, 1095, 1096, 1097, 1098, 1099, 1100, 1116, 1117, 1123, 1124, 1147, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1161, 1162, 1163, 1165, 1177, 1178, 1179, 1182, 1183, 1194, 1196, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1221, 1225, 1226, 1227, 1230, 1236, 1237, 1238, 1240, 1242, 1245, 1250, 1251, 1262, 1263, 1264, 1267, 1268, 1269, 1270, 1273, 1275, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1286, 1287, 1290, 1292, 1293, 1302, 1303, 1304, 1305, 1308, 1309, 1310, 1312, 1314, 1318, 1320, 1321, 1322, 1323, 1326, 1343, 1348, 1351, 1354, 1357, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1401, 1402, 1405, 1406, 1407, 1408, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1467, 1468, 1469, 1470, 1484, 1485, 1492, 1496, 1498, 1499, 1500, 1501, 1502, 1505, 1506, 1517, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1552, 1554, 1556, 1562, 1563, 1564, 1576, 1577, 1578, 1587, 1595, 1602, 1621, 1622, 1624, 1627, 1633, 1634, 1636, 1637, 1640, 1641, 1644, 1645, 1646, 1658, 1666, 1667, 1668, 1669, 1670, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1727, 1729, 1737, 1739, 1740, 1744, 1745, 1746, 1763, 1764, 1771, 1774, 1775, 1783, 1784, 1785, 1788, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1813, 1815, 1817, 1834, 1835, 1836, 1839, 1840, 1854, 1858, 1863, 1872, 1873, 1875, 1878, 1880, 1881, 1882, 1886, 1889, 1893, 1895, 1897, 1898, 1899, 1906, 1908, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1933, 1934, 1935, 1937, 1941, 1942, 1943, 1944, 1945, 1946, 1948, 1949, 1950, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1964], "cache_en": [0, 1040], "sourc": [0, 1, 2, 3, 4, 5, 9, 17, 18, 20, 29, 32, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 62, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 169, 215, 228, 330, 331, 339, 358, 369, 414, 419, 420, 433, 434, 470, 488, 504, 529, 531, 533, 536, 540, 563, 572, 573, 575, 602, 619, 622, 625, 626, 640, 696, 711, 712, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 852, 853, 854, 855, 856, 857, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 889, 902, 903, 904, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 931, 932, 933, 935, 947, 949, 950, 954, 956, 958, 968, 969, 970, 971, 972, 973, 974, 975, 987, 988, 989, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1094, 1098, 1145, 1147, 1163, 1169, 1170, 1173, 1192, 1193, 1194, 1196, 1197, 1202, 1207, 1208, 1209, 1219, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1292, 1293, 1313, 1322, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1517, 1518, 1522, 1524, 1525, 1526, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1573, 1574, 1575, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1595, 1597, 1598, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1729, 1746, 1771, 1776, 1779, 1780, 1781, 1782, 1783, 1785, 1788, 1789, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1815, 1821, 1828, 1836, 1841, 1844, 1845, 1846, 1847, 1848, 1856, 1875, 1876, 1877, 1878, 1879, 1893, 1896, 1897, 1898, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1917, 1926, 1928, 1929, 1933, 1935, 1937, 1938, 1940, 1942, 1943, 1944, 1948, 1949, 1950, 1955, 1958, 1960, 1961, 1962, 1963, 1964], "instanc": [0, 3, 12, 20, 28, 40, 43, 44, 45, 47, 49, 50, 51, 57, 60, 61, 62, 66, 71, 74, 158, 633, 696, 750, 764, 773, 809, 812, 840, 842, 857, 874, 995, 1094, 1145, 1219, 1221, 1232, 1236, 1293, 1396, 1397, 1400, 1416, 1417, 1418, 1425, 1453, 1463, 1497, 1499, 1500, 1504, 1562, 1633, 1641, 1652, 1666, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1825, 1855, 1896, 1898, 1900, 1905, 1907, 1911, 1913, 1918, 1919, 1922, 1923, 1924, 1926, 1930, 1934, 1941, 1944, 1949, 1950, 1951, 1953, 1955, 1960, 1964], "serv": [0, 7, 8, 13, 17, 34, 43, 102, 1895, 1906, 1938, 1940, 1949, 1950], "context": [0, 2, 5, 15, 16, 20, 25, 40, 47, 51, 60, 61, 66, 74, 75, 169, 808, 905, 906, 907, 909, 910, 923, 924, 973, 988, 992, 1001, 1016, 1018, 1029, 1035, 1040, 1047, 1067, 1069, 1098, 1152, 1156, 1161, 1196, 1221, 1334, 1453, 1602, 1624, 1633, 1634, 1643, 1645, 1678, 1687, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1785, 1815, 1894, 1899, 1900, 1911, 1918, 1919, 1922, 1924, 1928, 1929, 1932, 1937, 1941, 1943, 1948, 1949, 1951, 1953, 1956, 1961], "manag": [0, 1, 2, 5, 7, 15, 16, 17, 20, 43, 47, 49, 51, 58, 60, 61, 62, 66, 74, 75, 107, 503, 910, 973, 988, 992, 995, 996, 998, 1001, 1002, 1003, 1005, 1016, 1018, 1019, 1020, 1029, 1030, 1040, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1058, 1059, 1060, 1067, 1069, 1098, 1152, 1156, 1161, 1196, 1334, 1602, 1633, 1642, 1643, 1645, 1678, 1785, 1815, 1894, 1899, 1900, 1919, 1926, 1929, 1937, 1942, 1943, 1948, 1949, 1950, 1953, 1956, 1961], "decor": [0, 1, 13, 18, 26, 49, 53, 57, 61, 74, 84, 915, 970, 973, 1098, 1196, 1226, 1232, 1238, 1678, 1815, 1896, 1898, 1899, 1903, 1918, 1919, 1924, 1942, 1949, 1964], "allow": [0, 1, 2, 3, 5, 7, 8, 9, 14, 15, 16, 17, 19, 20, 23, 28, 29, 31, 33, 34, 40, 41, 43, 44, 49, 51, 52, 60, 61, 66, 67, 69, 70, 71, 72, 74, 75, 77, 169, 529, 696, 751, 809, 813, 815, 840, 909, 911, 923, 924, 953, 967, 971, 1037, 1040, 1064, 1094, 1155, 1221, 1226, 1238, 1276, 1298, 1338, 1352, 1366, 1367, 1368, 1389, 1390, 1407, 1446, 1447, 1448, 1453, 1456, 1459, 1481, 1496, 1633, 1638, 1679, 1687, 1692, 1708, 1817, 1875, 1893, 1898, 1899, 1906, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1953, 1956, 1957, 1958, 1960], "region": [0, 3, 5, 16, 17, 25, 49, 57, 784, 785, 968, 1366, 1367, 1368, 1401, 1402, 1412, 1414, 1446, 1447, 1448, 1520, 1521, 1547, 1548, 1577, 1578, 1896, 1911, 1918, 1922], "your": [0, 1, 2, 4, 7, 8, 9, 11, 12, 13, 16, 17, 18, 19, 21, 23, 24, 25, 27, 29, 31, 33, 34, 36, 40, 43, 47, 48, 49, 52, 53, 57, 59, 60, 61, 62, 63, 66, 70, 71, 73, 74, 909, 915, 917, 918, 923, 968, 971, 1196, 1221, 1225, 1226, 1230, 1233, 1236, 1237, 1238, 1453, 1460, 1500, 1633, 1642, 1645, 1678, 1710, 1784, 1872, 1876, 1878, 1896, 1898, 1899, 1903, 1905, 1911, 1912, 1913, 1915, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1931, 1933, 1934, 1936, 1937, 1940, 1942, 1945, 1948, 1950, 1953, 1958, 1959, 1961, 1964], "script": [0, 4, 11, 13, 19, 22, 24, 29, 37, 40, 43, 46, 51, 53, 59, 61, 62, 1222, 1224, 1225, 1226, 1227, 1230, 1231, 1233, 1235, 1236, 1238, 1893, 1894, 1898, 1899, 1907, 1921, 1929, 1931, 1935, 1941, 1944, 1949], "run": [0, 1, 2, 3, 4, 5, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 33, 34, 37, 40, 41, 43, 44, 47, 49, 51, 52, 53, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 169, 808, 814, 833, 835, 836, 837, 838, 841, 873, 877, 878, 879, 909, 923, 924, 925, 968, 1039, 1040, 1151, 1156, 1162, 1196, 1221, 1222, 1224, 1225, 1228, 1230, 1232, 1234, 1236, 1237, 1266, 1292, 1293, 1321, 1371, 1372, 1373, 1390, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1481, 1492, 1602, 1624, 1627, 1633, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1783, 1787, 1819, 1865, 1867, 1875, 1886, 1894, 1896, 1899, 1907, 1909, 1910, 1911, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1947, 1948, 1949, 1950, 1951, 1953, 1958, 1961, 1962, 1963], "In": [0, 2, 3, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 24, 25, 28, 29, 34, 37, 40, 43, 45, 47, 49, 53, 60, 61, 62, 66, 68, 69, 70, 71, 73, 74, 99, 101, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 140, 142, 144, 146, 149, 150, 152, 160, 162, 165, 166, 168, 171, 173, 177, 179, 181, 183, 185, 187, 196, 205, 213, 217, 220, 222, 232, 234, 240, 250, 254, 256, 262, 265, 267, 269, 271, 275, 280, 287, 289, 291, 295, 297, 301, 303, 310, 312, 314, 322, 324, 326, 328, 374, 376, 378, 380, 382, 384, 386, 389, 391, 393, 394, 401, 403, 405, 407, 409, 413, 437, 440, 443, 445, 456, 458, 460, 468, 473, 483, 486, 502, 506, 508, 524, 527, 538, 543, 545, 548, 550, 552, 565, 567, 569, 578, 580, 587, 591, 593, 609, 612, 614, 616, 618, 628, 638, 696, 776, 816, 840, 870, 915, 944, 952, 979, 980, 994, 1040, 1051, 1063, 1064, 1068, 1069, 1094, 1115, 1117, 1125, 1126, 1127, 1142, 1152, 1156, 1159, 1161, 1219, 1221, 1230, 1233, 1234, 1236, 1252, 1261, 1266, 1267, 1268, 1276, 1279, 1284, 1289, 1293, 1298, 1301, 1310, 1315, 1321, 1322, 1348, 1366, 1367, 1368, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1392, 1393, 1394, 1398, 1400, 1405, 1414, 1423, 1438, 1446, 1447, 1448, 1453, 1459, 1496, 1498, 1500, 1504, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1542, 1552, 1559, 1568, 1596, 1599, 1601, 1602, 1616, 1633, 1640, 1645, 1646, 1678, 1687, 1710, 1721, 1723, 1759, 1775, 1777, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1840, 1841, 1863, 1875, 1876, 1878, 1883, 1884, 1893, 1894, 1895, 1896, 1898, 1899, 1905, 1906, 1911, 1912, 1913, 1914, 1917, 1918, 1921, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1940, 1941, 1943, 1944, 1945, 1946, 1949, 1950, 1951, 1953, 1958, 1960], "an": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 98, 100, 101, 107, 169, 173, 209, 240, 260, 272, 331, 333, 339, 341, 346, 353, 515, 529, 531, 533, 553, 561, 576, 623, 630, 633, 696, 703, 704, 751, 757, 758, 759, 772, 776, 781, 795, 801, 803, 805, 808, 812, 831, 833, 839, 842, 870, 877, 878, 880, 894, 895, 896, 905, 907, 908, 909, 911, 913, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 931, 932, 933, 939, 955, 965, 968, 979, 980, 982, 995, 997, 998, 1000, 1007, 1008, 1009, 1010, 1011, 1029, 1030, 1037, 1038, 1040, 1052, 1054, 1064, 1068, 1069, 1079, 1092, 1094, 1095, 1096, 1097, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1134, 1137, 1145, 1147, 1150, 1151, 1154, 1155, 1156, 1158, 1160, 1162, 1163, 1166, 1174, 1182, 1183, 1184, 1218, 1219, 1221, 1224, 1225, 1228, 1231, 1232, 1234, 1236, 1237, 1238, 1239, 1250, 1251, 1256, 1257, 1262, 1264, 1266, 1269, 1270, 1274, 1277, 1279, 1282, 1283, 1290, 1292, 1293, 1310, 1312, 1315, 1321, 1338, 1343, 1352, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1405, 1413, 1417, 1418, 1421, 1422, 1423, 1425, 1435, 1436, 1437, 1438, 1440, 1441, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1470, 1472, 1481, 1484, 1486, 1487, 1488, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1527, 1528, 1529, 1530, 1531, 1532, 1537, 1543, 1544, 1546, 1547, 1548, 1552, 1563, 1570, 1571, 1573, 1574, 1576, 1577, 1578, 1602, 1606, 1621, 1623, 1624, 1627, 1633, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1652, 1669, 1676, 1678, 1680, 1685, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1739, 1744, 1745, 1746, 1765, 1767, 1771, 1779, 1782, 1791, 1797, 1817, 1820, 1821, 1825, 1828, 1833, 1836, 1840, 1854, 1855, 1871, 1872, 1873, 1875, 1878, 1884, 1885, 1886, 1887, 1892, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1942, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "chosen": [0, 17, 29, 71, 1082, 1242, 1602, 1788, 1813, 1858, 1914, 1918, 1922, 1924, 1932, 1937, 1944], "improv": [0, 1, 3, 9, 22, 23, 25, 29, 33, 38, 41, 43, 66, 74, 776, 820, 821, 822, 917, 919, 923, 982, 1174, 1391, 1405, 1423, 1468, 1499, 1602, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1723, 1894, 1896, 1918, 1923, 1924, 1925, 1933, 1934, 1938, 1944, 1945, 1949], "perform": [0, 1, 2, 3, 4, 5, 11, 13, 15, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 60, 61, 66, 70, 73, 74, 138, 225, 228, 475, 596, 619, 633, 702, 703, 704, 705, 706, 707, 776, 797, 820, 821, 822, 863, 874, 877, 910, 915, 917, 919, 920, 923, 924, 936, 948, 968, 979, 980, 996, 1002, 1051, 1075, 1076, 1089, 1114, 1137, 1139, 1150, 1151, 1154, 1185, 1196, 1221, 1230, 1231, 1236, 1264, 1266, 1269, 1273, 1276, 1277, 1281, 1282, 1290, 1291, 1293, 1298, 1307, 1320, 1325, 1334, 1335, 1345, 1348, 1351, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1393, 1396, 1397, 1405, 1423, 1453, 1459, 1461, 1468, 1481, 1496, 1499, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1571, 1588, 1602, 1608, 1609, 1624, 1633, 1635, 1636, 1641, 1645, 1666, 1673, 1675, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1729, 1737, 1765, 1779, 1783, 1811, 1816, 1817, 1818, 1819, 1839, 1841, 1875, 1894, 1896, 1899, 1909, 1910, 1911, 1912, 1913, 1915, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1931, 1932, 1933, 1934, 1937, 1940, 1941, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1964], "while": [0, 2, 3, 5, 7, 8, 16, 17, 18, 19, 20, 22, 29, 31, 33, 40, 41, 43, 44, 45, 49, 62, 66, 71, 73, 74, 100, 711, 712, 751, 870, 900, 908, 998, 1069, 1151, 1183, 1221, 1224, 1236, 1237, 1293, 1349, 1361, 1377, 1414, 1416, 1417, 1418, 1423, 1453, 1459, 1471, 1484, 1492, 1496, 1500, 1571, 1627, 1633, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1680, 1775, 1900, 1905, 1906, 1913, 1914, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1930, 1932, 1934, 1935, 1937, 1940, 1942, 1944, 1947, 1949, 1951, 1953, 1954, 1957, 1958, 1959], "maintain": [0, 7, 8, 15, 16, 20, 21, 40, 41, 43, 49, 66, 70, 74, 1365, 1393, 1398, 1545, 1633, 1666, 1680, 1894, 1914, 1918, 1919, 1922, 1924, 1930, 1944], "accuraci": [0, 17, 41, 968, 1284, 1602, 1894, 1909, 1918, 1930, 1958, 1962], "see": [0, 1, 2, 3, 4, 5, 7, 8, 9, 13, 14, 15, 18, 19, 20, 22, 25, 27, 28, 29, 33, 34, 36, 39, 40, 43, 44, 49, 52, 60, 61, 63, 66, 71, 72, 73, 74, 108, 112, 114, 116, 118, 120, 122, 124, 126, 128, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 145, 147, 148, 151, 153, 154, 155, 156, 157, 159, 161, 163, 164, 167, 169, 170, 172, 173, 174, 175, 176, 178, 180, 182, 184, 186, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 208, 211, 212, 216, 218, 219, 221, 223, 224, 226, 229, 230, 231, 233, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 252, 253, 255, 257, 258, 259, 261, 263, 264, 266, 268, 270, 273, 274, 279, 281, 282, 283, 284, 285, 286, 288, 290, 292, 293, 294, 296, 298, 299, 300, 302, 305, 306, 309, 311, 313, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 331, 339, 340, 341, 342, 343, 345, 346, 352, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 377, 379, 381, 383, 385, 387, 388, 390, 392, 396, 397, 398, 399, 400, 402, 404, 406, 408, 410, 411, 412, 414, 415, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 444, 446, 447, 448, 449, 450, 451, 455, 457, 459, 467, 469, 470, 472, 474, 476, 477, 478, 479, 481, 482, 484, 485, 487, 494, 496, 497, 499, 501, 504, 505, 507, 509, 510, 511, 513, 514, 515, 517, 518, 521, 522, 523, 526, 531, 533, 534, 535, 537, 539, 541, 542, 544, 546, 547, 549, 551, 554, 555, 556, 558, 559, 563, 564, 566, 568, 570, 571, 572, 577, 579, 581, 583, 584, 585, 586, 588, 589, 590, 592, 594, 595, 606, 607, 608, 610, 611, 613, 615, 617, 621, 622, 625, 626, 627, 630, 631, 632, 634, 635, 636, 637, 696, 709, 711, 712, 715, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 761, 762, 764, 772, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 795, 796, 797, 798, 799, 800, 801, 809, 856, 875, 876, 877, 878, 881, 890, 891, 892, 895, 906, 908, 909, 910, 911, 912, 914, 915, 919, 923, 924, 929, 930, 933, 937, 939, 946, 948, 951, 965, 968, 972, 984, 995, 996, 997, 998, 1000, 1002, 1003, 1005, 1019, 1020, 1029, 1030, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1058, 1059, 1060, 1089, 1092, 1094, 1095, 1097, 1098, 1107, 1112, 1130, 1133, 1148, 1153, 1154, 1155, 1157, 1166, 1174, 1178, 1179, 1183, 1184, 1192, 1193, 1194, 1196, 1221, 1225, 1232, 1236, 1237, 1239, 1240, 1242, 1252, 1260, 1263, 1266, 1268, 1275, 1277, 1278, 1286, 1290, 1291, 1293, 1299, 1301, 1307, 1308, 1310, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1334, 1335, 1341, 1348, 1350, 1351, 1361, 1369, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1396, 1397, 1399, 1405, 1407, 1413, 1414, 1419, 1420, 1423, 1444, 1445, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1465, 1466, 1467, 1468, 1471, 1480, 1482, 1484, 1485, 1497, 1498, 1499, 1500, 1501, 1502, 1505, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1618, 1619, 1620, 1621, 1622, 1623, 1633, 1634, 1640, 1641, 1642, 1645, 1651, 1660, 1669, 1674, 1677, 1678, 1679, 1680, 1684, 1727, 1737, 1738, 1748, 1750, 1752, 1754, 1755, 1759, 1762, 1765, 1771, 1780, 1783, 1785, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1808, 1815, 1816, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1839, 1849, 1851, 1854, 1860, 1861, 1865, 1867, 1875, 1878, 1881, 1882, 1887, 1889, 1891, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1904, 1905, 1906, 1908, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1953, 1954, 1956, 1957, 1959, 1960, 1961, 1964, 1965], "detail": [0, 1, 2, 3, 7, 8, 20, 21, 24, 29, 31, 32, 33, 34, 36, 37, 40, 43, 44, 45, 49, 51, 61, 66, 72, 74, 169, 341, 511, 630, 696, 751, 754, 755, 756, 757, 758, 759, 776, 782, 783, 784, 787, 788, 789, 790, 795, 796, 798, 799, 800, 801, 809, 875, 876, 877, 878, 889, 906, 908, 909, 910, 911, 912, 915, 924, 951, 972, 984, 996, 1000, 1002, 1003, 1005, 1019, 1020, 1029, 1040, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1058, 1059, 1060, 1077, 1094, 1133, 1155, 1166, 1169, 1170, 1174, 1202, 1209, 1221, 1225, 1236, 1260, 1278, 1285, 1293, 1299, 1301, 1321, 1361, 1365, 1375, 1384, 1385, 1386, 1390, 1396, 1397, 1398, 1399, 1401, 1402, 1405, 1423, 1453, 1459, 1465, 1466, 1468, 1480, 1501, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1553, 1555, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1591, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1618, 1619, 1620, 1624, 1633, 1634, 1669, 1679, 1691, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1710, 1715, 1727, 1739, 1771, 1782, 1808, 1816, 1861, 1875, 1878, 1893, 1896, 1897, 1898, 1899, 1906, 1908, 1910, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1933, 1934, 1935, 1937, 1941, 1942, 1944, 1946, 1948, 1949, 1950, 1951, 1953, 1957, 1958, 1960, 1961, 1964], "when": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 18, 20, 22, 23, 25, 28, 29, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 97, 99, 100, 103, 116, 169, 210, 227, 278, 331, 339, 465, 504, 513, 514, 529, 531, 533, 560, 576, 596, 633, 696, 702, 705, 751, 784, 785, 795, 801, 807, 809, 840, 856, 874, 881, 893, 896, 909, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 936, 939, 948, 956, 959, 967, 968, 979, 980, 984, 997, 999, 1009, 1011, 1033, 1039, 1040, 1052, 1077, 1094, 1133, 1137, 1142, 1147, 1151, 1152, 1157, 1160, 1161, 1162, 1174, 1196, 1210, 1211, 1213, 1214, 1217, 1221, 1222, 1224, 1232, 1233, 1234, 1236, 1237, 1241, 1242, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1284, 1285, 1286, 1290, 1291, 1292, 1293, 1301, 1307, 1310, 1315, 1321, 1322, 1325, 1343, 1348, 1349, 1350, 1361, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1396, 1397, 1400, 1403, 1405, 1406, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1440, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1468, 1480, 1481, 1484, 1485, 1486, 1487, 1489, 1492, 1498, 1499, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1517, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1544, 1550, 1552, 1563, 1564, 1587, 1590, 1592, 1595, 1596, 1602, 1610, 1621, 1622, 1623, 1624, 1629, 1630, 1633, 1634, 1635, 1636, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1669, 1674, 1678, 1679, 1680, 1681, 1687, 1689, 1690, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1727, 1729, 1736, 1739, 1740, 1762, 1768, 1775, 1780, 1783, 1790, 1808, 1814, 1817, 1819, 1820, 1821, 1831, 1836, 1840, 1849, 1854, 1856, 1861, 1865, 1867, 1872, 1875, 1876, 1886, 1889, 1893, 1894, 1896, 1898, 1905, 1907, 1909, 1911, 1912, 1913, 1917, 1920, 1921, 1922, 1923, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1940, 1941, 1942, 1943, 1948, 1949, 1950, 1951, 1954, 1956, 1957, 1958, 1959, 1960], "enter": [0, 43, 910, 1196, 1924], "tensor": [0, 2, 5, 7, 8, 12, 13, 14, 15, 17, 19, 20, 21, 27, 28, 29, 33, 36, 37, 40, 41, 43, 44, 45, 47, 49, 50, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 99, 107, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 736, 748, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 766, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 800, 801, 802, 803, 804, 805, 806, 810, 814, 815, 816, 817, 818, 835, 836, 837, 838, 840, 841, 843, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 927, 929, 930, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 994, 1007, 1008, 1009, 1010, 1011, 1018, 1026, 1027, 1033, 1037, 1040, 1043, 1047, 1058, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1200, 1201, 1203, 1206, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1222, 1224, 1225, 1227, 1228, 1231, 1232, 1234, 1236, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1332, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1361, 1365, 1366, 1369, 1370, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1405, 1406, 1407, 1413, 1419, 1420, 1423, 1424, 1440, 1443, 1444, 1445, 1446, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1485, 1486, 1487, 1488, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1629, 1630, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1687, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709, 1710, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1784, 1785, 1788, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1849, 1850, 1851, 1852, 1853, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1894, 1895, 1896, 1898, 1899, 1903, 1906, 1915, 1917, 1918, 1920, 1921, 1922, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1933, 1934, 1936, 1939, 1940, 1941, 1942, 1943, 1945, 1948, 1949, 1950, 1954, 1955, 1958, 1960, 1962, 1963, 1964], "ani": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 23, 25, 27, 28, 29, 31, 33, 37, 40, 41, 43, 44, 45, 47, 49, 51, 53, 54, 58, 59, 60, 61, 63, 66, 71, 73, 74, 107, 169, 272, 515, 561, 633, 713, 774, 797, 808, 809, 810, 816, 826, 827, 828, 829, 831, 832, 833, 834, 839, 840, 842, 870, 881, 905, 906, 907, 909, 915, 917, 923, 924, 925, 944, 950, 954, 955, 979, 997, 1033, 1040, 1051, 1095, 1096, 1097, 1110, 1111, 1113, 1114, 1115, 1117, 1121, 1125, 1126, 1127, 1142, 1150, 1151, 1158, 1159, 1160, 1162, 1183, 1220, 1221, 1225, 1227, 1231, 1232, 1234, 1236, 1242, 1250, 1252, 1256, 1257, 1261, 1266, 1267, 1268, 1273, 1274, 1277, 1281, 1284, 1290, 1292, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1369, 1370, 1374, 1375, 1381, 1382, 1383, 1390, 1391, 1395, 1399, 1400, 1403, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1419, 1420, 1439, 1440, 1442, 1443, 1444, 1452, 1453, 1461, 1463, 1464, 1467, 1471, 1472, 1473, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1502, 1503, 1504, 1523, 1527, 1528, 1529, 1569, 1588, 1589, 1602, 1624, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1657, 1667, 1668, 1670, 1673, 1675, 1680, 1687, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1715, 1755, 1771, 1786, 1788, 1840, 1886, 1893, 1896, 1897, 1898, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1921, 1922, 1924, 1925, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1937, 1939, 1940, 1941, 1942, 1944, 1949, 1950, 1951, 1953, 1955, 1958, 1960, 1962, 1963, 1964], "you": [0, 1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 39, 40, 41, 43, 47, 48, 49, 51, 52, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 83, 97, 98, 169, 272, 353, 465, 515, 696, 705, 750, 751, 764, 773, 797, 905, 906, 907, 908, 909, 914, 915, 917, 918, 919, 923, 950, 968, 995, 1018, 1029, 1031, 1040, 1041, 1061, 1094, 1150, 1151, 1154, 1155, 1156, 1157, 1162, 1196, 1221, 1225, 1226, 1233, 1236, 1237, 1238, 1266, 1284, 1292, 1315, 1322, 1325, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1423, 1449, 1450, 1451, 1453, 1458, 1459, 1460, 1468, 1487, 1496, 1498, 1500, 1505, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1563, 1569, 1602, 1620, 1621, 1624, 1633, 1641, 1667, 1675, 1677, 1678, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1721, 1739, 1762, 1771, 1779, 1822, 1823, 1824, 1826, 1827, 1831, 1876, 1878, 1886, 1893, 1896, 1898, 1899, 1901, 1903, 1906, 1907, 1909, 1911, 1912, 1914, 1917, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1956, 1957, 1958, 1959, 1960, 1961, 1964], "should": [0, 1, 3, 4, 5, 9, 11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 33, 34, 37, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 66, 70, 71, 73, 74, 75, 80, 81, 83, 99, 138, 169, 173, 331, 339, 416, 420, 462, 463, 464, 465, 466, 504, 512, 529, 531, 533, 599, 600, 601, 603, 604, 702, 705, 706, 751, 776, 788, 789, 790, 809, 812, 816, 833, 840, 854, 855, 870, 871, 872, 875, 881, 905, 906, 907, 908, 909, 913, 914, 915, 916, 917, 918, 919, 923, 929, 930, 936, 937, 938, 939, 946, 959, 973, 986, 997, 1000, 1010, 1011, 1029, 1031, 1040, 1085, 1095, 1096, 1097, 1107, 1112, 1115, 1116, 1117, 1125, 1126, 1127, 1130, 1145, 1147, 1148, 1149, 1151, 1152, 1156, 1160, 1161, 1162, 1178, 1179, 1182, 1183, 1218, 1219, 1221, 1222, 1226, 1230, 1232, 1233, 1236, 1237, 1238, 1240, 1265, 1290, 1291, 1292, 1298, 1307, 1310, 1311, 1312, 1361, 1369, 1370, 1374, 1387, 1389, 1390, 1392, 1393, 1394, 1397, 1398, 1419, 1445, 1453, 1459, 1460, 1461, 1480, 1501, 1505, 1517, 1523, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1544, 1552, 1602, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1671, 1673, 1684, 1685, 1688, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1739, 1741, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1762, 1778, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1840, 1854, 1863, 1878, 1886, 1891, 1892, 1893, 1894, 1896, 1898, 1899, 1903, 1905, 1906, 1908, 1909, 1911, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1932, 1933, 1934, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1951, 1953, 1957, 1958, 1960, 1964], "call": [0, 1, 2, 3, 8, 13, 15, 16, 17, 18, 19, 20, 22, 23, 28, 29, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 60, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 83, 90, 101, 169, 308, 341, 353, 475, 503, 504, 572, 596, 630, 633, 696, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 797, 806, 813, 840, 873, 877, 878, 909, 913, 914, 915, 916, 917, 919, 920, 923, 929, 930, 951, 968, 973, 975, 995, 998, 1000, 1029, 1031, 1041, 1042, 1051, 1058, 1059, 1061, 1062, 1092, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1150, 1151, 1162, 1166, 1184, 1196, 1206, 1221, 1224, 1226, 1231, 1232, 1233, 1240, 1276, 1284, 1288, 1290, 1292, 1293, 1322, 1365, 1371, 1372, 1373, 1390, 1391, 1392, 1393, 1394, 1396, 1398, 1400, 1438, 1449, 1450, 1451, 1453, 1460, 1461, 1481, 1492, 1504, 1530, 1531, 1532, 1538, 1539, 1540, 1545, 1563, 1602, 1621, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1642, 1645, 1652, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1668, 1674, 1675, 1677, 1678, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1752, 1779, 1786, 1787, 1815, 1834, 1835, 1836, 1856, 1875, 1876, 1878, 1881, 1882, 1886, 1887, 1893, 1896, 1900, 1903, 1909, 1911, 1913, 1914, 1915, 1918, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1964, 1965], "model": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25, 29, 41, 43, 44, 45, 47, 48, 49, 59, 61, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 97, 98, 106, 808, 809, 810, 813, 814, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 840, 841, 842, 852, 853, 854, 855, 870, 873, 874, 875, 876, 877, 878, 879, 968, 1041, 1061, 1150, 1151, 1152, 1160, 1162, 1196, 1221, 1225, 1226, 1230, 1232, 1236, 1238, 1292, 1361, 1390, 1407, 1418, 1419, 1453, 1459, 1481, 1492, 1496, 1498, 1499, 1500, 1551, 1633, 1634, 1639, 1641, 1643, 1656, 1675, 1676, 1687, 1688, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1715, 1721, 1723, 1836, 1886, 1894, 1896, 1898, 1899, 1900, 1907, 1908, 1914, 1919, 1921, 1922, 1923, 1924, 1928, 1930, 1931, 1932, 1933, 1934, 1935, 1937, 1938, 1943, 1945, 1949, 1950, 1952, 1953, 1954, 1958, 1962, 1963], "": [0, 1, 2, 3, 4, 7, 8, 9, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 25, 27, 28, 29, 33, 34, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 56, 57, 58, 60, 61, 66, 68, 70, 71, 73, 74, 101, 102, 480, 498, 509, 512, 529, 560, 574, 597, 640, 696, 705, 710, 711, 712, 751, 776, 809, 810, 811, 831, 832, 833, 836, 839, 842, 870, 877, 878, 891, 893, 894, 895, 896, 912, 913, 914, 918, 919, 921, 925, 952, 954, 967, 979, 980, 981, 986, 993, 995, 997, 1001, 1016, 1020, 1029, 1031, 1036, 1037, 1040, 1041, 1042, 1061, 1062, 1063, 1069, 1086, 1089, 1091, 1092, 1094, 1108, 1109, 1111, 1112, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1160, 1162, 1166, 1174, 1182, 1183, 1184, 1208, 1210, 1218, 1219, 1221, 1225, 1231, 1232, 1236, 1251, 1252, 1262, 1263, 1264, 1266, 1269, 1273, 1275, 1277, 1278, 1282, 1283, 1284, 1285, 1290, 1292, 1293, 1308, 1315, 1320, 1322, 1325, 1327, 1328, 1334, 1335, 1338, 1347, 1348, 1351, 1353, 1359, 1360, 1361, 1369, 1370, 1371, 1372, 1373, 1376, 1390, 1396, 1407, 1453, 1454, 1459, 1463, 1469, 1481, 1484, 1486, 1492, 1496, 1498, 1500, 1506, 1507, 1524, 1525, 1536, 1549, 1552, 1563, 1564, 1569, 1602, 1608, 1621, 1624, 1629, 1630, 1633, 1634, 1645, 1656, 1669, 1673, 1680, 1681, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709, 1710, 1715, 1727, 1729, 1733, 1740, 1755, 1758, 1759, 1762, 1763, 1764, 1766, 1768, 1775, 1782, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1834, 1835, 1836, 1839, 1840, 1841, 1842, 1843, 1851, 1855, 1857, 1863, 1878, 1881, 1882, 1883, 1886, 1887, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1937, 1939, 1940, 1942, 1943, 1944, 1946, 1947, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1963, 1964], "wrap": [0, 1, 13, 17, 20, 26, 29, 34, 40, 41, 43, 47, 53, 62, 66, 70, 71, 74, 75, 278, 806, 807, 998, 1151, 1221, 1236, 1390, 1453, 1492, 1628, 1633, 1643, 1669, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1896, 1897, 1899, 1906, 1918, 1919, 1922, 1923, 1924, 1925, 1930, 1936, 1937, 1942, 1943, 1944, 1949, 1950, 1961, 1963, 1964], "forward": [0, 5, 7, 8, 12, 13, 17, 20, 22, 23, 25, 28, 29, 33, 41, 43, 44, 47, 49, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 169, 240, 241, 696, 751, 764, 773, 776, 816, 831, 832, 833, 836, 840, 877, 878, 905, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 919, 920, 923, 924, 1040, 1086, 1098, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1151, 1153, 1154, 1155, 1157, 1160, 1196, 1221, 1224, 1225, 1226, 1227, 1231, 1232, 1236, 1237, 1238, 1365, 1369, 1372, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1405, 1423, 1438, 1449, 1450, 1451, 1453, 1454, 1455, 1459, 1460, 1463, 1464, 1468, 1481, 1496, 1497, 1498, 1499, 1500, 1538, 1539, 1540, 1545, 1590, 1624, 1627, 1628, 1629, 1630, 1633, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1674, 1677, 1678, 1688, 1746, 1785, 1814, 1875, 1894, 1895, 1896, 1898, 1899, 1905, 1907, 1911, 1913, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1929, 1930, 1933, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1949, 1961, 1962, 1963], "pass": [0, 1, 3, 5, 6, 7, 13, 16, 17, 20, 21, 24, 29, 33, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 66, 68, 70, 71, 73, 74, 75, 82, 83, 101, 169, 272, 465, 529, 531, 533, 560, 576, 809, 810, 839, 842, 875, 877, 896, 905, 906, 907, 908, 909, 915, 923, 952, 968, 974, 995, 1029, 1040, 1084, 1115, 1116, 1117, 1125, 1126, 1127, 1133, 1147, 1150, 1151, 1155, 1156, 1157, 1160, 1161, 1183, 1219, 1221, 1222, 1225, 1230, 1232, 1236, 1237, 1265, 1281, 1283, 1292, 1338, 1361, 1362, 1363, 1364, 1372, 1390, 1396, 1397, 1401, 1402, 1453, 1458, 1459, 1481, 1497, 1498, 1499, 1500, 1505, 1517, 1547, 1548, 1552, 1563, 1564, 1590, 1602, 1624, 1627, 1628, 1629, 1630, 1633, 1643, 1645, 1647, 1652, 1666, 1669, 1673, 1675, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1771, 1775, 1779, 1840, 1893, 1896, 1900, 1903, 1907, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1921, 1923, 1924, 1925, 1927, 1929, 1930, 1933, 1937, 1938, 1940, 1941, 1942, 1949, 1951, 1953, 1954, 1956, 1958, 1959, 1960, 1963, 1964], "e": [0, 1, 2, 3, 5, 7, 12, 15, 16, 18, 20, 22, 25, 29, 31, 33, 34, 40, 41, 43, 44, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 63, 66, 69, 71, 73, 74, 75, 82, 83, 169, 276, 353, 395, 596, 633, 751, 764, 773, 776, 809, 810, 831, 833, 870, 874, 875, 877, 878, 896, 905, 909, 914, 924, 925, 947, 949, 952, 1026, 1040, 1065, 1094, 1104, 1145, 1151, 1156, 1160, 1171, 1196, 1200, 1201, 1203, 1206, 1218, 1221, 1227, 1228, 1236, 1256, 1257, 1272, 1284, 1292, 1293, 1294, 1296, 1298, 1315, 1326, 1369, 1370, 1371, 1372, 1373, 1376, 1381, 1382, 1383, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1405, 1408, 1413, 1416, 1417, 1418, 1419, 1420, 1423, 1425, 1426, 1427, 1428, 1444, 1453, 1454, 1459, 1460, 1462, 1463, 1467, 1468, 1484, 1492, 1496, 1500, 1501, 1502, 1504, 1527, 1528, 1529, 1536, 1538, 1539, 1540, 1543, 1544, 1545, 1552, 1563, 1595, 1602, 1621, 1623, 1624, 1629, 1633, 1634, 1635, 1636, 1641, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1666, 1667, 1673, 1677, 1680, 1687, 1688, 1696, 1697, 1732, 1743, 1761, 1768, 1775, 1779, 1786, 1791, 1836, 1840, 1893, 1896, 1898, 1899, 1900, 1903, 1906, 1907, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1933, 1935, 1937, 1940, 1941, 1943, 1944, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1958, 1960, 1964, 1965], "network": [0, 1, 7, 8, 15, 34, 47, 49, 60, 857, 1040, 1221, 1236, 1237, 1365, 1371, 1372, 1373, 1376, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1398, 1407, 1419, 1423, 1453, 1460, 1465, 1466, 1471, 1480, 1482, 1492, 1496, 1498, 1500, 1517, 1551, 1552, 1605, 1624, 1641, 1643, 1669, 1674, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1715, 1721, 1896, 1898, 1899, 1917, 1918, 1924, 1933, 1934, 1937, 1940, 1944, 1949, 1950, 1951], "includ": [0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 19, 23, 24, 25, 29, 33, 34, 40, 41, 43, 45, 57, 60, 61, 66, 74, 98, 339, 533, 599, 784, 785, 875, 877, 970, 1122, 1124, 1182, 1219, 1221, 1222, 1250, 1329, 1330, 1366, 1367, 1368, 1374, 1376, 1390, 1399, 1407, 1440, 1449, 1450, 1451, 1453, 1459, 1497, 1498, 1499, 1500, 1503, 1519, 1520, 1521, 1536, 1549, 1569, 1633, 1667, 1668, 1670, 1804, 1864, 1865, 1866, 1867, 1893, 1896, 1898, 1899, 1906, 1907, 1909, 1911, 1919, 1921, 1922, 1926, 1929, 1930, 1935, 1937, 1943, 1944, 1949, 1951, 1958, 1961, 1964], "loss": [0, 1, 41, 43, 44, 47, 49, 66, 1152, 1218, 1256, 1257, 1266, 1284, 1361, 1369, 1370, 1376, 1387, 1389, 1396, 1407, 1413, 1414, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1502, 1524, 1525, 1535, 1536, 1549, 1564, 1587, 1595, 1633, 1667, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1714, 1723, 1783, 1893, 1894, 1909, 1913, 1919, 1922, 1923, 1926, 1927, 1930, 1940, 1944, 1945, 1949, 1950, 1958], "comput": [0, 3, 5, 7, 8, 11, 12, 15, 16, 17, 19, 28, 31, 33, 36, 40, 41, 43, 45, 49, 51, 53, 66, 67, 68, 70, 169, 308, 504, 511, 697, 699, 713, 714, 776, 784, 785, 816, 818, 835, 836, 837, 838, 840, 841, 905, 909, 910, 911, 913, 914, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 940, 941, 942, 943, 944, 945, 956, 958, 959, 960, 967, 980, 982, 994, 1037, 1040, 1077, 1086, 1088, 1091, 1094, 1098, 1099, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1137, 1139, 1140, 1141, 1143, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1164, 1165, 1166, 1174, 1177, 1180, 1181, 1182, 1183, 1196, 1198, 1221, 1224, 1232, 1240, 1241, 1243, 1245, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1293, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1319, 1320, 1321, 1324, 1348, 1350, 1354, 1361, 1365, 1366, 1367, 1368, 1371, 1372, 1373, 1384, 1385, 1386, 1388, 1389, 1391, 1396, 1397, 1405, 1408, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1459, 1460, 1462, 1467, 1468, 1486, 1488, 1492, 1501, 1502, 1505, 1519, 1520, 1521, 1534, 1535, 1543, 1544, 1551, 1552, 1554, 1563, 1571, 1576, 1577, 1578, 1579, 1580, 1581, 1592, 1595, 1602, 1608, 1609, 1624, 1627, 1629, 1630, 1633, 1634, 1637, 1640, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1659, 1660, 1667, 1673, 1677, 1678, 1680, 1694, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1733, 1739, 1740, 1744, 1745, 1759, 1760, 1783, 1785, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1814, 1816, 1817, 1818, 1819, 1836, 1840, 1841, 1856, 1861, 1883, 1886, 1894, 1896, 1899, 1906, 1909, 1912, 1913, 1915, 1918, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1937, 1940, 1944, 1947, 1949, 1953, 1954, 1959, 1962], "backward": [0, 1, 5, 9, 12, 13, 17, 22, 23, 25, 28, 29, 43, 44, 45, 47, 49, 66, 70, 71, 74, 75, 308, 353, 504, 512, 519, 520, 529, 531, 533, 597, 696, 702, 705, 776, 831, 832, 833, 906, 911, 912, 913, 914, 915, 916, 918, 920, 923, 924, 929, 930, 936, 948, 1040, 1098, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1150, 1151, 1221, 1293, 1301, 1315, 1325, 1369, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1396, 1405, 1406, 1407, 1420, 1423, 1424, 1440, 1444, 1445, 1453, 1459, 1460, 1467, 1468, 1497, 1498, 1499, 1500, 1501, 1502, 1524, 1525, 1535, 1536, 1552, 1563, 1587, 1590, 1625, 1629, 1630, 1633, 1645, 1678, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1714, 1727, 1739, 1814, 1817, 1821, 1840, 1875, 1893, 1894, 1897, 1899, 1905, 1913, 1914, 1917, 1918, 1923, 1924, 1925, 1926, 1929, 1930, 1932, 1933, 1937, 1940, 1941, 1943, 1944, 1949, 1953, 1954, 1959], "under": [0, 1, 3, 4, 5, 9, 15, 16, 17, 20, 25, 29, 40, 43, 60, 66, 67, 69, 71, 73, 103, 924, 932, 953, 1196, 1221, 1376, 1453, 1517, 1543, 1544, 1640, 1642, 1645, 1691, 1760, 1895, 1911, 1918, 1919, 1922, 1923, 1925, 1927, 1932, 1937, 1941, 1942, 1944, 1947, 1948, 1951, 1954, 1958, 1961, 1963], "recommend": [0, 1, 5, 17, 40, 41, 43, 45, 49, 51, 60, 61, 66, 70, 73, 74, 75, 99, 100, 102, 465, 909, 975, 979, 980, 994, 1115, 1116, 1117, 1125, 1126, 1127, 1208, 1224, 1266, 1293, 1338, 1361, 1390, 1564, 1633, 1746, 1872, 1876, 1893, 1896, 1908, 1911, 1913, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1930, 1932, 1933, 1935, 1937, 1941, 1944], "same": [0, 1, 3, 7, 11, 12, 13, 15, 16, 17, 20, 23, 25, 28, 29, 33, 34, 36, 37, 40, 41, 43, 44, 45, 47, 49, 51, 57, 58, 60, 61, 62, 63, 66, 69, 71, 73, 74, 75, 82, 83, 158, 172, 214, 240, 273, 329, 331, 333, 337, 339, 357, 462, 463, 464, 465, 466, 488, 500, 513, 514, 516, 529, 531, 533, 536, 560, 596, 633, 634, 702, 705, 709, 711, 712, 713, 715, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 761, 762, 772, 774, 777, 778, 779, 780, 781, 795, 801, 804, 805, 809, 810, 812, 816, 818, 830, 835, 838, 840, 841, 875, 877, 894, 895, 896, 908, 911, 914, 917, 918, 919, 920, 921, 922, 924, 925, 936, 938, 939, 948, 950, 952, 955, 960, 962, 968, 971, 976, 994, 995, 997, 1008, 1010, 1029, 1040, 1077, 1082, 1084, 1085, 1091, 1094, 1096, 1097, 1100, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1142, 1146, 1147, 1149, 1150, 1151, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1166, 1174, 1182, 1183, 1191, 1195, 1212, 1218, 1221, 1231, 1232, 1236, 1237, 1241, 1242, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1288, 1308, 1312, 1314, 1315, 1318, 1320, 1321, 1322, 1323, 1326, 1348, 1351, 1352, 1353, 1359, 1360, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1400, 1403, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1425, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1461, 1462, 1467, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1504, 1505, 1508, 1509, 1510, 1517, 1523, 1524, 1525, 1527, 1528, 1529, 1535, 1544, 1552, 1554, 1563, 1564, 1602, 1621, 1633, 1640, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1666, 1670, 1675, 1680, 1681, 1685, 1687, 1692, 1706, 1727, 1732, 1733, 1736, 1737, 1749, 1751, 1753, 1757, 1759, 1761, 1762, 1766, 1768, 1775, 1778, 1791, 1814, 1822, 1823, 1824, 1826, 1827, 1833, 1834, 1835, 1839, 1840, 1850, 1861, 1872, 1873, 1874, 1875, 1881, 1882, 1883, 1886, 1892, 1893, 1896, 1898, 1899, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1932, 1933, 1934, 1935, 1937, 1940, 1941, 1942, 1944, 1947, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1962, 1963, 1964], "correspond": [0, 1, 7, 18, 24, 25, 29, 37, 40, 41, 43, 45, 47, 48, 49, 60, 66, 74, 97, 490, 491, 529, 531, 533, 560, 561, 696, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 751, 809, 813, 852, 854, 873, 874, 875, 880, 896, 905, 907, 908, 909, 914, 917, 919, 924, 960, 981, 1040, 1060, 1089, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1174, 1183, 1210, 1221, 1237, 1251, 1256, 1257, 1262, 1265, 1284, 1291, 1293, 1307, 1322, 1343, 1390, 1396, 1423, 1453, 1459, 1499, 1543, 1552, 1589, 1629, 1633, 1641, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1674, 1680, 1710, 1715, 1732, 1733, 1743, 1766, 1775, 1791, 1834, 1835, 1840, 1871, 1874, 1881, 1882, 1893, 1896, 1897, 1899, 1903, 1909, 1912, 1913, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1934, 1937, 1941, 1943, 1944, 1949, 1950, 1953, 1954, 1955, 1958, 1960, 1962, 1963], "devic": [0, 1, 2, 5, 8, 12, 14, 16, 19, 24, 25, 29, 33, 35, 37, 40, 41, 43, 44, 45, 48, 61, 62, 66, 70, 73, 74, 75, 80, 83, 107, 215, 225, 228, 307, 331, 339, 353, 462, 463, 464, 465, 466, 531, 533, 596, 702, 705, 739, 740, 741, 742, 743, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 765, 766, 767, 768, 769, 770, 771, 881, 893, 895, 896, 917, 919, 936, 937, 939, 946, 948, 987, 988, 989, 990, 991, 992, 993, 996, 997, 998, 1000, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1018, 1022, 1023, 1024, 1026, 1027, 1035, 1037, 1038, 1039, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1070, 1071, 1072, 1095, 1096, 1097, 1107, 1112, 1130, 1148, 1149, 1178, 1179, 1221, 1225, 1228, 1231, 1234, 1240, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1275, 1278, 1279, 1281, 1282, 1284, 1285, 1291, 1292, 1307, 1310, 1315, 1321, 1325, 1338, 1340, 1361, 1371, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1396, 1397, 1406, 1408, 1416, 1417, 1418, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1453, 1459, 1461, 1469, 1470, 1492, 1496, 1498, 1500, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1544, 1563, 1569, 1602, 1617, 1621, 1622, 1623, 1624, 1633, 1635, 1636, 1637, 1638, 1666, 1673, 1679, 1681, 1684, 1685, 1699, 1739, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1779, 1783, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1817, 1818, 1822, 1823, 1824, 1825, 1826, 1827, 1840, 1854, 1856, 1865, 1867, 1875, 1876, 1878, 1891, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1907, 1912, 1914, 1918, 1923, 1925, 1926, 1928, 1930, 1931, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1944, 1948, 1949, 1953, 1955, 1959, 1960], "creat": [0, 1, 3, 5, 6, 7, 9, 12, 13, 15, 16, 17, 20, 26, 28, 29, 33, 40, 41, 43, 45, 47, 49, 51, 52, 58, 60, 61, 62, 63, 66, 73, 74, 75, 99, 100, 102, 107, 169, 241, 272, 353, 596, 597, 599, 600, 601, 603, 604, 696, 748, 754, 755, 756, 761, 762, 772, 780, 808, 809, 810, 830, 831, 832, 833, 835, 840, 870, 894, 895, 896, 909, 911, 923, 947, 949, 965, 966, 968, 981, 996, 1005, 1037, 1038, 1047, 1082, 1097, 1146, 1147, 1148, 1218, 1221, 1224, 1233, 1239, 1244, 1250, 1251, 1257, 1259, 1278, 1291, 1307, 1322, 1343, 1369, 1387, 1396, 1397, 1400, 1414, 1420, 1444, 1445, 1453, 1456, 1457, 1458, 1481, 1484, 1485, 1492, 1501, 1502, 1504, 1633, 1645, 1666, 1673, 1678, 1687, 1689, 1691, 1710, 1778, 1809, 1820, 1825, 1854, 1861, 1894, 1899, 1900, 1903, 1907, 1911, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1932, 1935, 1937, 1940, 1941, 1943, 1944, 1949, 1950, 1951, 1953, 1955, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1965], "optim": [0, 1, 2, 7, 8, 11, 12, 13, 15, 17, 20, 26, 29, 31, 33, 34, 41, 43, 44, 45, 49, 66, 74, 835, 924, 933, 968, 971, 1094, 1160, 1221, 1225, 1230, 1232, 1236, 1237, 1276, 1293, 1371, 1372, 1373, 1389, 1396, 1416, 1417, 1418, 1453, 1456, 1457, 1458, 1459, 1485, 1492, 1500, 1602, 1624, 1633, 1640, 1645, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1729, 1894, 1896, 1898, 1907, 1913, 1917, 1921, 1922, 1923, 1924, 1926, 1927, 1930, 1932, 1937, 1943, 1944, 1953], "default": [0, 2, 3, 5, 9, 13, 15, 16, 17, 21, 22, 23, 24, 28, 29, 31, 33, 37, 43, 44, 45, 47, 48, 49, 51, 52, 57, 58, 59, 60, 61, 63, 66, 69, 70, 71, 72, 74, 75, 79, 80, 82, 83, 99, 100, 102, 169, 174, 189, 191, 194, 197, 198, 199, 214, 225, 228, 258, 285, 308, 315, 343, 349, 411, 462, 463, 464, 465, 466, 475, 512, 515, 516, 536, 541, 596, 597, 599, 696, 710, 713, 728, 729, 730, 731, 732, 733, 736, 746, 747, 748, 749, 751, 771, 774, 776, 784, 785, 786, 788, 789, 790, 795, 801, 809, 814, 819, 824, 825, 830, 833, 835, 836, 837, 838, 841, 844, 845, 846, 847, 848, 849, 850, 851, 857, 858, 859, 860, 861, 862, 864, 865, 870, 871, 872, 874, 881, 895, 896, 909, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 937, 946, 952, 956, 959, 960, 961, 965, 968, 986, 994, 997, 1000, 1002, 1006, 1009, 1010, 1011, 1014, 1015, 1022, 1023, 1026, 1037, 1039, 1040, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1064, 1065, 1068, 1070, 1071, 1072, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1089, 1094, 1095, 1096, 1097, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1161, 1162, 1166, 1168, 1174, 1178, 1179, 1182, 1183, 1210, 1212, 1218, 1221, 1222, 1225, 1232, 1236, 1237, 1240, 1241, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1307, 1310, 1312, 1318, 1320, 1321, 1322, 1326, 1347, 1348, 1350, 1351, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1470, 1471, 1472, 1473, 1480, 1484, 1485, 1489, 1490, 1492, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1549, 1551, 1552, 1554, 1556, 1563, 1564, 1571, 1576, 1577, 1578, 1587, 1588, 1590, 1595, 1602, 1608, 1609, 1617, 1621, 1627, 1633, 1634, 1635, 1636, 1637, 1638, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1667, 1668, 1670, 1672, 1673, 1674, 1675, 1677, 1679, 1680, 1684, 1685, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1729, 1737, 1739, 1740, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1761, 1767, 1768, 1771, 1775, 1779, 1780, 1781, 1782, 1783, 1788, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1839, 1840, 1841, 1854, 1855, 1861, 1863, 1865, 1867, 1872, 1873, 1875, 1876, 1878, 1880, 1881, 1882, 1886, 1891, 1892, 1893, 1894, 1896, 1899, 1903, 1905, 1907, 1908, 1911, 1914, 1917, 1918, 1921, 1923, 1924, 1925, 1926, 1928, 1930, 1933, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1948, 1949, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1965], "net": [0, 6, 34, 51, 69, 74, 1221, 1236, 1237, 1390, 1453, 1633, 1656, 1714, 1898, 1899, 1918, 1919, 1922, 1930, 1958], "sgd": [0, 40, 41, 47, 1396, 1624, 1633, 1715, 1721, 1723, 1918, 1922, 1923, 1930, 1932, 1940, 1949, 1950], "paramet": [0, 1, 2, 3, 5, 17, 21, 27, 28, 31, 33, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 54, 58, 60, 62, 66, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 169, 174, 189, 191, 194, 197, 198, 199, 214, 215, 225, 228, 258, 272, 273, 278, 285, 315, 331, 333, 335, 337, 339, 343, 349, 411, 418, 420, 462, 463, 464, 465, 466, 475, 488, 509, 512, 513, 514, 515, 516, 529, 531, 533, 536, 541, 553, 560, 561, 562, 576, 582, 599, 600, 601, 603, 604, 619, 620, 623, 633, 634, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 766, 771, 772, 774, 775, 776, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 793, 795, 796, 797, 798, 799, 801, 802, 803, 804, 805, 807, 809, 811, 813, 815, 816, 817, 830, 835, 836, 837, 838, 839, 840, 841, 842, 843, 854, 855, 856, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 909, 917, 918, 919, 920, 921, 922, 923, 924, 925, 931, 932, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 965, 966, 967, 968, 970, 971, 973, 974, 976, 979, 980, 981, 982, 983, 984, 985, 986, 989, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1014, 1015, 1016, 1018, 1022, 1023, 1024, 1026, 1029, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1054, 1056, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1195, 1196, 1198, 1200, 1201, 1203, 1206, 1207, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1227, 1228, 1231, 1232, 1233, 1234, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1333, 1334, 1335, 1338, 1339, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1484, 1485, 1486, 1488, 1489, 1490, 1492, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1549, 1551, 1552, 1554, 1556, 1563, 1564, 1571, 1576, 1577, 1578, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1602, 1608, 1609, 1617, 1621, 1622, 1623, 1624, 1627, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1788, 1789, 1790, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1811, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1844, 1845, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1893, 1894, 1896, 1899, 1901, 1903, 1907, 1908, 1911, 1913, 1914, 1915, 1917, 1918, 1919, 1922, 1923, 1924, 1928, 1929, 1930, 1932, 1934, 1935, 1937, 1941, 1942, 1943, 1944, 1948, 1949, 1950, 1953, 1954, 1955, 1958, 1960, 1962, 1963, 1964], "target": [0, 13, 14, 15, 20, 28, 29, 33, 47, 66, 70, 72, 73, 74, 75, 515, 751, 782, 783, 808, 813, 875, 877, 878, 953, 1152, 1221, 1230, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1369, 1370, 1376, 1387, 1389, 1401, 1402, 1407, 1413, 1414, 1419, 1420, 1444, 1445, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1484, 1485, 1496, 1505, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1524, 1525, 1533, 1535, 1536, 1547, 1548, 1549, 1560, 1561, 1564, 1565, 1575, 1583, 1584, 1585, 1586, 1587, 1595, 1602, 1606, 1607, 1633, 1709, 1875, 1897, 1899, 1918, 1919, 1922, 1932, 1937, 1940, 1941, 1944, 1945, 1949, 1958, 1962], "data": [0, 1, 2, 3, 7, 11, 15, 16, 17, 19, 20, 25, 27, 31, 37, 38, 41, 43, 45, 47, 49, 50, 51, 54, 57, 60, 62, 66, 70, 74, 75, 76, 80, 83, 158, 169, 214, 215, 344, 347, 351, 354, 359, 462, 465, 498, 509, 513, 515, 633, 754, 755, 756, 776, 788, 789, 790, 797, 808, 809, 810, 814, 835, 836, 837, 838, 839, 841, 843, 881, 895, 896, 906, 909, 937, 946, 952, 998, 1075, 1076, 1095, 1096, 1097, 1107, 1108, 1109, 1112, 1114, 1115, 1117, 1125, 1126, 1127, 1130, 1133, 1134, 1135, 1136, 1145, 1147, 1148, 1149, 1151, 1160, 1178, 1179, 1181, 1200, 1203, 1228, 1232, 1236, 1240, 1291, 1292, 1293, 1307, 1312, 1320, 1322, 1334, 1335, 1348, 1350, 1351, 1374, 1376, 1381, 1382, 1383, 1390, 1405, 1408, 1416, 1417, 1418, 1423, 1425, 1440, 1460, 1468, 1469, 1505, 1517, 1522, 1523, 1527, 1528, 1529, 1562, 1569, 1571, 1608, 1609, 1633, 1634, 1635, 1636, 1666, 1667, 1668, 1669, 1671, 1680, 1684, 1685, 1689, 1691, 1715, 1721, 1729, 1737, 1740, 1741, 1742, 1746, 1748, 1749, 1751, 1752, 1753, 1754, 1755, 1762, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1816, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1839, 1840, 1854, 1863, 1865, 1867, 1874, 1875, 1876, 1891, 1892, 1894, 1896, 1897, 1900, 1906, 1907, 1909, 1911, 1914, 1918, 1919, 1920, 1922, 1924, 1925, 1929, 1932, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1944, 1947, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960, 1961, 1962, 1963], "zero_grad": [0, 1, 47, 1221, 1453, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1714, 1918, 1922, 1926, 1930, 1932, 1940], "output": [0, 1, 4, 5, 7, 12, 13, 14, 15, 16, 17, 19, 20, 22, 27, 28, 29, 37, 40, 41, 43, 47, 48, 49, 51, 57, 58, 70, 71, 72, 74, 75, 83, 158, 331, 339, 462, 463, 464, 466, 529, 533, 582, 633, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 713, 714, 715, 736, 744, 745, 750, 751, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 788, 789, 790, 791, 793, 795, 796, 797, 798, 799, 801, 802, 803, 808, 809, 810, 812, 815, 818, 830, 833, 874, 877, 878, 879, 881, 890, 891, 894, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 936, 938, 939, 940, 941, 942, 943, 944, 945, 948, 952, 955, 956, 957, 958, 959, 960, 961, 963, 966, 980, 981, 983, 984, 994, 1007, 1009, 1010, 1011, 1037, 1038, 1040, 1050, 1051, 1073, 1074, 1075, 1076, 1078, 1081, 1082, 1084, 1086, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1099, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1148, 1149, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1174, 1177, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1195, 1198, 1215, 1216, 1218, 1221, 1225, 1232, 1236, 1237, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1543, 1544, 1546, 1547, 1548, 1549, 1552, 1554, 1563, 1564, 1569, 1571, 1576, 1577, 1578, 1587, 1588, 1592, 1593, 1594, 1595, 1602, 1617, 1621, 1622, 1623, 1627, 1629, 1630, 1633, 1641, 1642, 1643, 1646, 1667, 1669, 1670, 1674, 1677, 1679, 1680, 1681, 1684, 1685, 1687, 1691, 1692, 1710, 1714, 1727, 1728, 1736, 1737, 1740, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1763, 1764, 1768, 1770, 1775, 1783, 1788, 1791, 1793, 1805, 1806, 1808, 1813, 1817, 1818, 1820, 1821, 1829, 1830, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1851, 1852, 1853, 1858, 1861, 1863, 1864, 1866, 1869, 1871, 1872, 1873, 1875, 1880, 1881, 1882, 1883, 1886, 1888, 1889, 1891, 1892, 1893, 1896, 1897, 1899, 1905, 1907, 1912, 1913, 1914, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1933, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1950, 1953, 1954, 1956, 1957, 1958, 1960, 1962, 1963], "loss_fn": [0, 47, 1709, 1918, 1922, 1923, 1932, 1940], "exit": [0, 1, 2, 4, 20, 37, 43, 51, 60, 66, 73, 74, 910, 1633, 1899, 1911, 1919, 1924, 1932, 1937, 1951], "befor": [0, 1, 3, 6, 7, 12, 13, 15, 16, 18, 20, 23, 26, 29, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 52, 57, 59, 60, 61, 62, 66, 74, 116, 169, 763, 776, 804, 805, 806, 909, 913, 915, 966, 975, 997, 1075, 1076, 1077, 1086, 1094, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1135, 1136, 1139, 1147, 1150, 1221, 1232, 1234, 1273, 1277, 1290, 1320, 1348, 1351, 1390, 1396, 1397, 1400, 1405, 1453, 1454, 1455, 1492, 1496, 1504, 1552, 1571, 1608, 1609, 1624, 1627, 1628, 1629, 1630, 1633, 1641, 1674, 1677, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1723, 1737, 1740, 1766, 1775, 1786, 1787, 1816, 1819, 1822, 1823, 1824, 1826, 1827, 1836, 1839, 1861, 1872, 1896, 1898, 1899, 1911, 1918, 1919, 1922, 1923, 1924, 1927, 1929, 1930, 1933, 1935, 1936, 1940, 1941, 1942, 1944, 1949, 1950, 1951, 1953, 1954, 1958, 1960], "step": [0, 1, 2, 4, 9, 17, 20, 22, 25, 29, 33, 40, 41, 43, 44, 45, 47, 49, 61, 66, 70, 74, 554, 623, 702, 784, 785, 873, 881, 910, 911, 912, 939, 963, 1180, 1268, 1291, 1292, 1293, 1307, 1310, 1322, 1401, 1402, 1423, 1520, 1521, 1547, 1548, 1633, 1666, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1746, 1755, 1809, 1878, 1895, 1896, 1897, 1913, 1918, 1919, 1922, 1923, 1924, 1926, 1930, 1932, 1934, 1936, 1937, 1941, 1943, 1944, 1949, 1950, 1953, 1958], "usag": [0, 1, 4, 7, 9, 15, 16, 17, 18, 29, 34, 40, 43, 47, 49, 50, 51, 54, 57, 58, 60, 62, 66, 74, 75, 76, 764, 773, 808, 809, 810, 826, 827, 828, 829, 831, 832, 833, 870, 874, 906, 968, 1043, 1063, 1067, 1094, 1145, 1150, 1154, 1155, 1156, 1234, 1293, 1633, 1688, 1896, 1899, 1909, 1913, 1918, 1919, 1924, 1926, 1937, 1943, 1951, 1958, 1959, 1961, 1962, 1963], "along": [0, 33, 37, 40, 43, 49, 53, 60, 75, 81, 331, 333, 335, 339, 509, 529, 531, 533, 702, 713, 835, 891, 892, 955, 962, 985, 994, 1009, 1011, 1077, 1085, 1086, 1093, 1094, 1110, 1115, 1118, 1122, 1125, 1128, 1134, 1162, 1163, 1186, 1195, 1198, 1242, 1253, 1289, 1341, 1348, 1352, 1353, 1362, 1363, 1364, 1370, 1388, 1401, 1402, 1443, 1446, 1447, 1448, 1486, 1488, 1517, 1525, 1534, 1547, 1548, 1551, 1554, 1571, 1576, 1577, 1578, 1588, 1608, 1609, 1651, 1653, 1660, 1661, 1670, 1679, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1721, 1740, 1760, 1761, 1766, 1777, 1813, 1816, 1819, 1820, 1828, 1833, 1851, 1855, 1858, 1861, 1870, 1883, 1886, 1888, 1893, 1898, 1903, 1914, 1920, 1924, 1926, 1929, 1930, 1941, 1944, 1954], "more": [0, 1, 2, 3, 4, 5, 8, 9, 13, 15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 31, 33, 34, 36, 39, 40, 41, 43, 44, 49, 50, 51, 52, 56, 59, 60, 61, 62, 66, 69, 70, 71, 72, 74, 98, 100, 101, 169, 272, 273, 331, 339, 504, 509, 511, 514, 529, 531, 533, 561, 634, 696, 751, 787, 796, 800, 809, 870, 875, 876, 877, 889, 902, 903, 904, 906, 908, 909, 915, 917, 919, 923, 924, 925, 929, 930, 939, 947, 950, 952, 958, 959, 960, 961, 968, 997, 998, 1000, 1002, 1003, 1019, 1038, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1058, 1059, 1060, 1064, 1072, 1077, 1083, 1092, 1094, 1098, 1110, 1111, 1113, 1115, 1134, 1135, 1136, 1137, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1169, 1170, 1174, 1183, 1184, 1196, 1202, 1206, 1208, 1209, 1221, 1234, 1237, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1290, 1293, 1296, 1299, 1301, 1311, 1312, 1334, 1335, 1338, 1349, 1361, 1365, 1370, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1396, 1397, 1398, 1414, 1423, 1449, 1450, 1451, 1453, 1459, 1465, 1466, 1467, 1468, 1480, 1492, 1500, 1517, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1541, 1543, 1544, 1552, 1555, 1556, 1557, 1558, 1563, 1567, 1571, 1572, 1582, 1589, 1596, 1597, 1598, 1600, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1624, 1633, 1634, 1640, 1642, 1643, 1678, 1679, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1727, 1738, 1739, 1765, 1771, 1775, 1785, 1815, 1816, 1840, 1861, 1863, 1875, 1878, 1886, 1887, 1893, 1894, 1895, 1896, 1898, 1899, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1928, 1929, 1930, 1933, 1935, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1950, 1951, 1953, 1956, 1957, 1958, 1959, 1960, 1961, 1964, 1965], "complex": [0, 1, 3, 7, 8, 18, 19, 40, 41, 43, 74, 329, 347, 500, 515, 701, 708, 924, 925, 961, 979, 980, 1089, 1095, 1096, 1097, 1115, 1137, 1142, 1174, 1191, 1200, 1211, 1213, 1214, 1217, 1218, 1221, 1241, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1270, 1273, 1275, 1277, 1278, 1279, 1280, 1284, 1285, 1289, 1290, 1291, 1293, 1301, 1307, 1319, 1324, 1342, 1381, 1382, 1383, 1420, 1453, 1527, 1528, 1529, 1640, 1680, 1733, 1746, 1759, 1780, 1791, 1836, 1837, 1840, 1875, 1883, 1884, 1885, 1893, 1894, 1897, 1899, 1900, 1908, 1932, 1939, 1955, 1956, 1959, 1960], "scenario": [0, 17, 18, 40, 43, 60, 1688, 1689, 1876, 1922, 1927, 1932, 1937, 1943, 1949], "g": [0, 1, 2, 3, 5, 7, 13, 15, 16, 22, 25, 27, 29, 31, 33, 34, 40, 41, 43, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 63, 66, 69, 71, 73, 74, 75, 82, 83, 596, 633, 764, 773, 776, 809, 810, 831, 833, 870, 875, 877, 878, 905, 914, 924, 925, 949, 1040, 1094, 1145, 1151, 1155, 1156, 1171, 1174, 1196, 1218, 1221, 1227, 1228, 1236, 1292, 1376, 1377, 1390, 1392, 1393, 1394, 1398, 1400, 1405, 1413, 1419, 1423, 1424, 1453, 1454, 1463, 1468, 1484, 1536, 1538, 1539, 1540, 1545, 1552, 1633, 1634, 1635, 1636, 1677, 1680, 1687, 1688, 1694, 1695, 1696, 1697, 1700, 1706, 1707, 1708, 1709, 1761, 1768, 1779, 1786, 1804, 1836, 1893, 1896, 1898, 1899, 1900, 1903, 1906, 1911, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1933, 1934, 1937, 1940, 1941, 1943, 1944, 1949, 1953, 1956, 1957, 1958, 1964], "penalti": [0, 23, 797, 1051, 1693, 1694, 1695, 1696, 1698, 1700, 1706, 1707, 1709, 1945], "multipl": [0, 1, 2, 3, 5, 11, 12, 16, 17, 28, 40, 41, 43, 44, 45, 49, 50, 53, 60, 61, 62, 66, 71, 73, 74, 210, 227, 333, 529, 702, 704, 705, 711, 712, 776, 857, 890, 891, 894, 923, 956, 958, 968, 982, 986, 1009, 1010, 1011, 1037, 1092, 1094, 1097, 1147, 1155, 1156, 1157, 1158, 1161, 1162, 1166, 1170, 1184, 1185, 1234, 1237, 1242, 1243, 1258, 1259, 1260, 1276, 1281, 1286, 1287, 1315, 1318, 1323, 1325, 1369, 1370, 1384, 1385, 1386, 1387, 1389, 1397, 1400, 1405, 1413, 1419, 1420, 1441, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1504, 1524, 1525, 1535, 1544, 1564, 1587, 1595, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1708, 1716, 1717, 1718, 1719, 1720, 1725, 1727, 1783, 1811, 1817, 1818, 1822, 1823, 1824, 1826, 1827, 1855, 1856, 1863, 1871, 1875, 1886, 1887, 1893, 1894, 1898, 1899, 1911, 1912, 1913, 1914, 1919, 1921, 1923, 1925, 1927, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1963], "custom": [0, 1, 3, 5, 16, 18, 20, 26, 33, 34, 40, 43, 44, 45, 46, 47, 48, 53, 56, 57, 59, 66, 75, 77, 97, 98, 99, 100, 102, 515, 809, 813, 830, 831, 832, 833, 854, 856, 875, 876, 877, 878, 915, 968, 970, 996, 1005, 1069, 1221, 1453, 1496, 1500, 1501, 1502, 1647, 1656, 1673, 1715, 1876, 1878, 1894, 1900, 1903, 1905, 1911, 1912, 1919, 1929, 1934, 1935, 1936, 1938, 1947, 1948, 1962], "autograd": [0, 4, 5, 7, 8, 17, 18, 23, 29, 43, 47, 49, 66, 67, 70, 75, 158, 353, 462, 463, 464, 465, 466, 512, 705, 881, 895, 896, 910, 937, 946, 965, 970, 1040, 1095, 1096, 1097, 1107, 1112, 1130, 1147, 1148, 1149, 1150, 1151, 1160, 1162, 1178, 1179, 1196, 1221, 1240, 1260, 1291, 1307, 1315, 1325, 1407, 1453, 1459, 1500, 1554, 1569, 1633, 1684, 1685, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1886, 1891, 1892, 1894, 1897, 1901, 1906, 1914, 1917, 1922, 1923, 1926, 1927, 1929, 1930, 1943, 1959, 1960, 1964], "function": [0, 2, 3, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 24, 28, 29, 31, 33, 34, 36, 37, 39, 40, 44, 45, 47, 48, 50, 51, 53, 57, 58, 60, 61, 66, 69, 71, 73, 75, 77, 78, 82, 83, 85, 98, 99, 102, 107, 138, 169, 214, 278, 307, 316, 339, 504, 509, 512, 533, 557, 572, 696, 705, 709, 710, 714, 715, 764, 773, 774, 776, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 806, 807, 808, 809, 813, 814, 816, 830, 831, 832, 833, 840, 842, 854, 857, 870, 873, 875, 877, 878, 879, 893, 894, 909, 910, 911, 912, 923, 924, 925, 929, 930, 933, 937, 946, 948, 956, 958, 962, 965, 968, 970, 971, 972, 973, 975, 979, 980, 989, 990, 991, 992, 993, 994, 995, 996, 998, 1000, 1002, 1005, 1022, 1023, 1026, 1031, 1032, 1037, 1038, 1040, 1041, 1042, 1043, 1045, 1050, 1051, 1058, 1059, 1061, 1062, 1063, 1067, 1077, 1082, 1084, 1085, 1092, 1094, 1098, 1110, 1111, 1113, 1133, 1137, 1140, 1141, 1142, 1145, 1147, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1166, 1167, 1174, 1178, 1179, 1180, 1182, 1184, 1192, 1193, 1194, 1196, 1208, 1218, 1219, 1220, 1221, 1222, 1224, 1226, 1227, 1231, 1232, 1233, 1234, 1236, 1238, 1240, 1241, 1242, 1244, 1249, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1272, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1296, 1298, 1307, 1310, 1311, 1315, 1318, 1321, 1323, 1325, 1326, 1327, 1345, 1348, 1349, 1365, 1369, 1375, 1376, 1378, 1379, 1380, 1387, 1391, 1395, 1398, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1413, 1419, 1421, 1422, 1423, 1424, 1439, 1442, 1443, 1445, 1452, 1453, 1458, 1459, 1461, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1498, 1500, 1501, 1502, 1504, 1506, 1508, 1509, 1510, 1625, 1629, 1630, 1633, 1640, 1641, 1645, 1656, 1666, 1667, 1668, 1670, 1673, 1674, 1675, 1677, 1678, 1680, 1681, 1685, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1711, 1714, 1715, 1717, 1720, 1721, 1722, 1727, 1728, 1729, 1733, 1739, 1746, 1750, 1755, 1768, 1777, 1778, 1779, 1782, 1785, 1791, 1799, 1803, 1804, 1809, 1812, 1814, 1815, 1816, 1817, 1819, 1825, 1832, 1836, 1842, 1843, 1851, 1855, 1857, 1861, 1871, 1872, 1873, 1875, 1876, 1883, 1884, 1885, 1886, 1887, 1892, 1893, 1894, 1895, 1900, 1903, 1905, 1908, 1909, 1911, 1913, 1917, 1920, 1922, 1923, 1924, 1926, 1929, 1930, 1932, 1933, 1938, 1940, 1941, 1942, 1943, 1944, 1946, 1948, 1949, 1950, 1951, 1956, 1958, 1960, 1961, 1962, 1963], "autocastmodel": 0, "nn": [0, 3, 5, 13, 16, 20, 25, 27, 28, 29, 34, 40, 41, 43, 44, 47, 48, 61, 66, 67, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 316, 557, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 808, 809, 830, 870, 875, 876, 877, 878, 880, 1037, 1040, 1094, 1150, 1159, 1160, 1219, 1221, 1222, 1224, 1225, 1226, 1227, 1230, 1231, 1232, 1236, 1237, 1238, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1624, 1633, 1634, 1635, 1636, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1666, 1678, 1688, 1710, 1812, 1836, 1875, 1876, 1893, 1894, 1896, 1897, 1901, 1913, 1914, 1918, 1923, 1926, 1930, 1932, 1933, 1934, 1937, 1940, 1941, 1942, 1944, 1946, 1949, 1958, 1960, 1963], "modul": [0, 1, 3, 5, 6, 8, 13, 16, 17, 21, 22, 25, 27, 28, 29, 31, 33, 37, 41, 43, 45, 47, 48, 52, 54, 57, 60, 61, 66, 67, 69, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 504, 696, 702, 705, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 754, 755, 756, 761, 762, 763, 772, 777, 778, 779, 780, 781, 804, 805, 806, 807, 808, 809, 813, 815, 816, 818, 826, 827, 828, 829, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 854, 855, 856, 870, 873, 874, 875, 876, 877, 878, 880, 929, 930, 936, 948, 968, 1040, 1150, 1159, 1160, 1162, 1196, 1219, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1230, 1231, 1232, 1236, 1237, 1238, 1292, 1315, 1325, 1361, 1365, 1371, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1406, 1408, 1416, 1417, 1418, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1454, 1455, 1463, 1464, 1469, 1481, 1486, 1492, 1496, 1500, 1543, 1544, 1617, 1624, 1633, 1634, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1669, 1673, 1674, 1675, 1677, 1688, 1710, 1771, 1815, 1876, 1878, 1879, 1886, 1893, 1894, 1900, 1905, 1907, 1909, 1911, 1913, 1914, 1917, 1921, 1922, 1923, 1926, 1929, 1931, 1932, 1934, 1936, 1937, 1940, 1942, 1943, 1946, 1947, 1949, 1952, 1953, 1954, 1958, 1961, 1962, 1963, 1964], "def": [0, 1, 12, 13, 15, 17, 19, 20, 21, 25, 27, 28, 29, 40, 41, 43, 44, 45, 49, 51, 52, 53, 57, 58, 61, 62, 63, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 416, 808, 809, 877, 878, 906, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 968, 1098, 1150, 1151, 1152, 1154, 1155, 1156, 1158, 1160, 1161, 1162, 1196, 1219, 1221, 1222, 1224, 1225, 1226, 1227, 1231, 1232, 1235, 1236, 1237, 1238, 1453, 1454, 1455, 1463, 1464, 1502, 1602, 1624, 1633, 1645, 1678, 1687, 1688, 1815, 1886, 1893, 1896, 1898, 1899, 1903, 1913, 1918, 1919, 1921, 1923, 1924, 1925, 1926, 1930, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1949, 1950, 1951, 1964], "self": [0, 1, 9, 13, 20, 25, 28, 29, 37, 40, 41, 43, 45, 48, 51, 52, 57, 62, 66, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 116, 158, 169, 172, 173, 174, 189, 191, 194, 197, 198, 199, 209, 210, 214, 215, 227, 235, 237, 251, 258, 272, 273, 276, 277, 285, 304, 308, 315, 329, 331, 333, 335, 337, 339, 341, 343, 344, 346, 347, 348, 349, 351, 359, 395, 411, 416, 418, 419, 420, 471, 488, 498, 500, 513, 514, 515, 516, 529, 531, 533, 536, 539, 541, 553, 559, 560, 561, 562, 574, 576, 596, 597, 599, 600, 601, 603, 604, 620, 623, 624, 630, 633, 634, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 877, 878, 934, 1150, 1151, 1160, 1191, 1219, 1220, 1221, 1224, 1225, 1226, 1227, 1231, 1232, 1236, 1237, 1238, 1361, 1365, 1398, 1452, 1453, 1454, 1455, 1459, 1463, 1464, 1480, 1482, 1492, 1498, 1500, 1582, 1605, 1624, 1642, 1643, 1645, 1651, 1653, 1666, 1675, 1688, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1736, 1757, 1895, 1896, 1897, 1898, 1899, 1903, 1909, 1912, 1913, 1917, 1919, 1920, 1921, 1924, 1926, 1930, 1935, 1937, 1941, 1942, 1944, 1949, 1955], "produc": [0, 7, 13, 15, 17, 19, 20, 23, 29, 33, 40, 43, 45, 50, 52, 54, 57, 62, 71, 72, 73, 74, 107, 748, 754, 755, 756, 761, 762, 772, 780, 808, 809, 939, 959, 1033, 1125, 1126, 1127, 1145, 1155, 1156, 1162, 1174, 1232, 1236, 1237, 1240, 1256, 1257, 1260, 1267, 1268, 1279, 1284, 1318, 1321, 1322, 1323, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434, 1459, 1536, 1544, 1552, 1563, 1621, 1622, 1623, 1680, 1710, 1739, 1746, 1755, 1840, 1875, 1886, 1896, 1898, 1899, 1911, 1912, 1918, 1919, 1920, 1922, 1924, 1928, 1929, 1930, 1933, 1934, 1935, 1936, 1937, 1953, 1957], "after": [0, 1, 7, 9, 12, 14, 17, 18, 20, 23, 25, 28, 29, 33, 40, 41, 43, 44, 45, 47, 48, 60, 62, 66, 73, 74, 75, 80, 81, 278, 776, 806, 873, 875, 877, 878, 909, 910, 913, 968, 975, 995, 997, 1033, 1040, 1093, 1151, 1206, 1221, 1225, 1276, 1292, 1315, 1357, 1390, 1405, 1438, 1453, 1456, 1496, 1498, 1500, 1517, 1552, 1624, 1627, 1633, 1645, 1647, 1651, 1653, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1714, 1715, 1721, 1723, 1779, 1836, 1861, 1876, 1878, 1888, 1893, 1898, 1899, 1909, 1911, 1917, 1918, 1919, 1922, 1923, 1924, 1926, 1927, 1929, 1930, 1932, 1933, 1937, 1940, 1941, 1943, 1944, 1949, 1950, 1951, 1952, 1954, 1956, 1958], "return": [0, 1, 2, 3, 5, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 27, 28, 29, 31, 32, 33, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 138, 172, 174, 189, 191, 194, 197, 198, 199, 209, 210, 214, 215, 225, 227, 228, 235, 237, 238, 240, 251, 258, 260, 272, 278, 285, 307, 315, 329, 337, 341, 343, 344, 346, 347, 348, 349, 351, 355, 357, 359, 370, 395, 411, 452, 462, 463, 464, 465, 466, 475, 489, 490, 491, 492, 493, 495, 500, 504, 512, 513, 514, 529, 531, 539, 541, 553, 559, 560, 572, 573, 574, 575, 576, 596, 597, 598, 599, 605, 619, 620, 623, 625, 629, 630, 633, 700, 708, 709, 711, 712, 713, 714, 715, 751, 782, 783, 786, 787, 791, 792, 793, 794, 797, 800, 807, 808, 809, 810, 830, 831, 832, 833, 852, 856, 857, 870, 871, 872, 873, 875, 876, 877, 878, 879, 880, 881, 889, 890, 891, 892, 893, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 933, 934, 935, 937, 938, 939, 946, 947, 949, 952, 954, 956, 957, 958, 959, 960, 961, 962, 963, 965, 967, 968, 969, 970, 971, 974, 979, 980, 982, 983, 984, 986, 989, 990, 991, 992, 994, 995, 997, 998, 1000, 1004, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1055, 1056, 1057, 1058, 1059, 1060, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1084, 1085, 1088, 1094, 1095, 1096, 1097, 1098, 1099, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1169, 1170, 1171, 1172, 1173, 1177, 1178, 1179, 1181, 1182, 1183, 1187, 1191, 1195, 1196, 1197, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1235, 1236, 1237, 1238, 1239, 1240, 1242, 1245, 1246, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1288, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1300, 1301, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1326, 1329, 1330, 1332, 1338, 1343, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1357, 1361, 1362, 1363, 1364, 1369, 1370, 1387, 1388, 1389, 1390, 1397, 1401, 1402, 1413, 1419, 1420, 1443, 1444, 1445, 1446, 1447, 1448, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1467, 1481, 1484, 1485, 1486, 1487, 1488, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1522, 1524, 1525, 1526, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1595, 1597, 1598, 1600, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1615, 1617, 1618, 1619, 1620, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1637, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1729, 1730, 1732, 1735, 1736, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1768, 1770, 1775, 1776, 1777, 1778, 1784, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1813, 1815, 1816, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1835, 1836, 1839, 1840, 1841, 1849, 1850, 1851, 1852, 1853, 1854, 1856, 1858, 1859, 1860, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1877, 1878, 1880, 1882, 1884, 1885, 1886, 1889, 1891, 1892, 1893, 1896, 1900, 1903, 1907, 1908, 1909, 1911, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1927, 1928, 1929, 1930, 1933, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "disabl": [0, 2, 5, 16, 17, 18, 22, 24, 29, 44, 49, 66, 74, 826, 827, 968, 1040, 1094, 1098, 1150, 1196, 1221, 1223, 1236, 1237, 1453, 1459, 1492, 1500, 1602, 1633, 1634, 1675, 1678, 1784, 1785, 1788, 1815, 1894, 1898, 1905, 1918, 1921, 1922, 1923, 1924, 1928, 1933, 1934, 1937, 1942, 1948, 1953, 1960], "them": [0, 1, 3, 5, 7, 8, 9, 15, 16, 17, 19, 20, 23, 24, 28, 29, 31, 33, 34, 40, 43, 45, 51, 52, 57, 60, 62, 66, 70, 71, 73, 74, 169, 240, 272, 750, 909, 915, 919, 950, 1040, 1079, 1082, 1094, 1221, 1242, 1251, 1262, 1276, 1288, 1292, 1320, 1351, 1377, 1396, 1453, 1486, 1488, 1608, 1652, 1667, 1670, 1711, 1819, 1821, 1839, 1876, 1878, 1893, 1898, 1899, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1928, 1929, 1930, 1934, 1936, 1940, 1942, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1954, 1958, 1959, 1962], "differ": [0, 1, 3, 5, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 33, 37, 40, 43, 45, 47, 48, 49, 51, 52, 53, 57, 58, 60, 61, 63, 66, 67, 70, 71, 72, 74, 215, 503, 509, 633, 696, 702, 705, 711, 712, 751, 776, 809, 812, 813, 838, 840, 841, 877, 878, 881, 895, 896, 924, 925, 936, 948, 949, 986, 1077, 1082, 1084, 1086, 1094, 1134, 1135, 1136, 1140, 1141, 1147, 1150, 1155, 1156, 1162, 1174, 1195, 1221, 1231, 1236, 1250, 1256, 1257, 1267, 1268, 1276, 1279, 1284, 1288, 1315, 1325, 1361, 1370, 1371, 1372, 1373, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1405, 1406, 1414, 1416, 1417, 1418, 1419, 1423, 1424, 1440, 1453, 1456, 1459, 1474, 1475, 1477, 1478, 1479, 1481, 1484, 1492, 1498, 1500, 1502, 1505, 1508, 1509, 1510, 1517, 1525, 1543, 1552, 1563, 1565, 1576, 1577, 1578, 1602, 1624, 1633, 1635, 1636, 1640, 1675, 1680, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1715, 1723, 1729, 1739, 1761, 1834, 1835, 1840, 1861, 1872, 1873, 1875, 1881, 1882, 1886, 1893, 1896, 1898, 1899, 1901, 1905, 1906, 1911, 1912, 1914, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1932, 1933, 1934, 1936, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1951, 1953, 1956, 1958, 1959, 1960, 1963], "caus": [0, 1, 2, 3, 5, 16, 18, 33, 37, 40, 43, 47, 53, 59, 60, 61, 71, 74, 99, 572, 633, 893, 896, 909, 971, 1147, 1232, 1236, 1256, 1257, 1284, 1338, 1563, 1564, 1621, 1624, 1633, 1679, 1692, 1779, 1790, 1836, 1875, 1896, 1899, 1911, 1920, 1922, 1924, 1926, 1932, 1934, 1936, 1937, 1941, 1944, 1945, 1951, 1953, 1956], "mismatch": [0, 43, 74, 100, 102, 896, 1222, 1691, 1692, 1898, 1918, 1923, 1924, 1926, 1937, 1960], "error": [0, 1, 5, 8, 12, 16, 19, 27, 33, 36, 37, 40, 41, 43, 44, 46, 49, 58, 60, 61, 66, 69, 71, 73, 74, 75, 76, 97, 98, 99, 100, 102, 209, 240, 331, 333, 339, 341, 346, 561, 572, 630, 633, 696, 835, 881, 894, 896, 915, 917, 918, 919, 920, 921, 922, 923, 1005, 1040, 1051, 1064, 1068, 1092, 1150, 1154, 1155, 1157, 1162, 1184, 1221, 1226, 1235, 1250, 1251, 1260, 1262, 1264, 1267, 1268, 1269, 1279, 1282, 1292, 1310, 1338, 1343, 1369, 1370, 1403, 1414, 1420, 1444, 1453, 1482, 1484, 1550, 1561, 1583, 1602, 1605, 1606, 1633, 1635, 1636, 1637, 1675, 1680, 1690, 1691, 1692, 1735, 1775, 1782, 1831, 1836, 1875, 1878, 1886, 1887, 1893, 1894, 1896, 1898, 1899, 1905, 1906, 1911, 1912, 1913, 1914, 1918, 1919, 1922, 1924, 1925, 1927, 1928, 1934, 1937, 1941, 1947, 1949, 1954, 1959, 1960, 1962, 1963], "If": [0, 1, 2, 3, 4, 5, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 31, 33, 34, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 57, 58, 59, 60, 61, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 82, 83, 97, 98, 99, 100, 102, 116, 169, 173, 214, 225, 228, 272, 333, 337, 339, 462, 463, 464, 465, 466, 475, 488, 498, 512, 515, 533, 536, 553, 561, 596, 597, 599, 600, 601, 603, 604, 619, 623, 633, 696, 702, 705, 706, 707, 709, 711, 712, 713, 715, 751, 772, 776, 780, 795, 797, 801, 810, 811, 833, 836, 837, 838, 841, 870, 874, 877, 881, 890, 891, 892, 893, 894, 895, 896, 905, 907, 908, 909, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 936, 937, 939, 946, 948, 949, 950, 952, 956, 958, 959, 960, 961, 962, 963, 970, 976, 979, 980, 981, 985, 986, 994, 997, 998, 1000, 1002, 1005, 1007, 1009, 1011, 1018, 1029, 1035, 1040, 1041, 1061, 1064, 1075, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1094, 1095, 1096, 1097, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1137, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1161, 1162, 1163, 1174, 1178, 1179, 1181, 1182, 1183, 1184, 1195, 1198, 1212, 1218, 1221, 1224, 1225, 1226, 1228, 1230, 1232, 1233, 1236, 1237, 1240, 1241, 1242, 1246, 1250, 1251, 1256, 1257, 1259, 1260, 1262, 1263, 1264, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1286, 1287, 1288, 1290, 1291, 1292, 1293, 1303, 1307, 1308, 1310, 1312, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1338, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1405, 1406, 1407, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1438, 1440, 1444, 1445, 1446, 1447, 1448, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1467, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1484, 1485, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1508, 1509, 1510, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1552, 1554, 1556, 1563, 1564, 1569, 1571, 1573, 1574, 1576, 1577, 1578, 1587, 1588, 1589, 1592, 1595, 1596, 1602, 1608, 1609, 1620, 1621, 1627, 1633, 1634, 1637, 1638, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1669, 1673, 1674, 1675, 1677, 1678, 1679, 1680, 1684, 1685, 1687, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1727, 1728, 1733, 1737, 1739, 1740, 1744, 1745, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1760, 1761, 1766, 1768, 1771, 1775, 1777, 1779, 1782, 1783, 1788, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1813, 1816, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1834, 1835, 1836, 1839, 1840, 1854, 1855, 1857, 1858, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1872, 1873, 1875, 1878, 1880, 1881, 1882, 1886, 1891, 1892, 1893, 1896, 1899, 1901, 1903, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1928, 1929, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1964], "so": [0, 1, 2, 3, 7, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 28, 29, 33, 36, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 53, 60, 61, 63, 66, 69, 70, 71, 73, 74, 353, 475, 512, 696, 875, 910, 915, 917, 918, 923, 965, 968, 996, 1019, 1082, 1084, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1145, 1147, 1150, 1154, 1155, 1157, 1158, 1208, 1218, 1221, 1224, 1225, 1230, 1232, 1234, 1276, 1278, 1288, 1293, 1298, 1310, 1331, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1397, 1400, 1407, 1453, 1469, 1486, 1488, 1504, 1517, 1527, 1528, 1529, 1552, 1608, 1609, 1624, 1633, 1679, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1805, 1819, 1831, 1836, 1840, 1860, 1872, 1876, 1880, 1896, 1898, 1899, 1905, 1907, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1944, 1948, 1949, 1953, 1954, 1956, 1958, 1959, 1961], "cast": [0, 6, 41, 58, 66, 101, 353, 619, 620, 953, 1075, 1076, 1221, 1273, 1277, 1290, 1320, 1348, 1351, 1453, 1571, 1608, 1609, 1680, 1737, 1816, 1819, 1825, 1839, 1844, 1845, 1896, 1918, 1933, 1937, 1954, 1955, 1956], "back": [0, 1, 2, 12, 18, 19, 20, 33, 40, 41, 43, 45, 49, 60, 66, 71, 74, 75, 80, 83, 751, 853, 924, 965, 968, 1114, 1151, 1222, 1234, 1286, 1292, 1499, 1637, 1638, 1821, 1893, 1896, 1899, 1919, 1924, 1925, 1932, 1933, 1934, 1937, 1940, 1941, 1944, 1949, 1953, 1964], "from": [0, 1, 3, 5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 29, 33, 34, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 62, 63, 66, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 85, 99, 107, 172, 173, 192, 215, 240, 241, 276, 304, 331, 333, 337, 339, 395, 420, 465, 471, 488, 490, 491, 498, 503, 504, 509, 515, 529, 531, 533, 560, 562, 576, 596, 623, 624, 626, 633, 696, 728, 729, 730, 731, 732, 733, 736, 744, 745, 748, 751, 754, 755, 756, 757, 758, 759, 761, 762, 772, 776, 780, 788, 789, 790, 797, 804, 805, 808, 809, 810, 813, 816, 831, 832, 833, 840, 842, 856, 870, 874, 876, 877, 878, 880, 881, 895, 896, 907, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 929, 930, 937, 938, 946, 947, 952, 953, 965, 996, 997, 1000, 1009, 1010, 1011, 1029, 1033, 1051, 1078, 1094, 1095, 1096, 1097, 1114, 1116, 1117, 1122, 1123, 1124, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1178, 1179, 1183, 1198, 1218, 1219, 1221, 1222, 1224, 1226, 1227, 1228, 1231, 1232, 1244, 1260, 1264, 1273, 1276, 1277, 1290, 1291, 1292, 1293, 1307, 1311, 1312, 1325, 1330, 1334, 1335, 1336, 1338, 1343, 1352, 1353, 1361, 1365, 1371, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1405, 1406, 1407, 1408, 1414, 1416, 1417, 1418, 1419, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1453, 1454, 1455, 1459, 1463, 1464, 1468, 1470, 1471, 1492, 1497, 1498, 1500, 1502, 1504, 1505, 1517, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1549, 1552, 1554, 1563, 1576, 1577, 1578, 1590, 1620, 1624, 1633, 1637, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1660, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1677, 1681, 1687, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1729, 1732, 1740, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1761, 1762, 1765, 1767, 1768, 1775, 1788, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1837, 1841, 1851, 1854, 1863, 1865, 1867, 1872, 1873, 1875, 1877, 1878, 1880, 1889, 1894, 1896, 1897, 1898, 1899, 1901, 1903, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1915, 1917, 1919, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1940, 1942, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1954, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1964], "alreadi": [0, 1, 12, 16, 31, 40, 41, 43, 44, 60, 61, 66, 73, 74, 214, 225, 228, 480, 503, 540, 596, 619, 620, 808, 856, 870, 874, 895, 1005, 1031, 1221, 1230, 1292, 1453, 1628, 1633, 1666, 1710, 1870, 1872, 1878, 1893, 1896, 1906, 1908, 1912, 1913, 1918, 1919, 1922, 1924, 1927, 1932, 1937, 1940, 1941, 1944, 1950, 1951, 1953, 1955, 1957], "incur": [0, 5, 41, 43, 66, 958, 1932, 1949], "addit": [0, 1, 3, 5, 7, 9, 12, 15, 17, 18, 23, 24, 29, 33, 34, 40, 43, 44, 45, 49, 54, 60, 61, 66, 73, 74, 75, 83, 353, 529, 623, 765, 767, 768, 769, 770, 774, 776, 797, 811, 830, 875, 1051, 1218, 1221, 1225, 1230, 1235, 1361, 1372, 1373, 1374, 1384, 1385, 1386, 1397, 1404, 1405, 1407, 1414, 1417, 1418, 1425, 1432, 1433, 1434, 1438, 1439, 1440, 1441, 1443, 1449, 1450, 1451, 1453, 1459, 1461, 1486, 1488, 1492, 1496, 1498, 1500, 1502, 1523, 1530, 1531, 1532, 1569, 1633, 1699, 1872, 1873, 1884, 1896, 1898, 1899, 1905, 1909, 1912, 1913, 1914, 1919, 1921, 1922, 1924, 1925, 1929, 1932, 1933, 1936, 1937, 1938, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1957, 1960], "overhead": [0, 1, 3, 4, 8, 12, 16, 17, 19, 20, 22, 41, 43, 66, 797, 968, 1051, 1232, 1633, 1919, 1921, 1922, 1923, 1928, 1929, 1932, 1942, 1943, 1950, 1953, 1959], "here": [0, 1, 7, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 27, 29, 34, 37, 40, 41, 43, 44, 49, 59, 61, 68, 69, 70, 71, 73, 74, 100, 102, 596, 809, 810, 984, 1003, 1094, 1111, 1113, 1114, 1119, 1120, 1121, 1123, 1124, 1129, 1131, 1150, 1160, 1219, 1232, 1371, 1372, 1373, 1384, 1385, 1386, 1416, 1417, 1418, 1461, 1492, 1552, 1554, 1642, 1707, 1710, 1721, 1808, 1893, 1896, 1898, 1899, 1901, 1912, 1913, 1914, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1936, 1937, 1940, 1941, 1942, 1944, 1947, 1953, 1957, 1958, 1960], "assum": [0, 14, 15, 23, 31, 40, 43, 48, 49, 51, 53, 60, 61, 66, 69, 72, 74, 833, 1077, 1112, 1115, 1117, 1125, 1126, 1127, 1130, 1212, 1218, 1219, 1222, 1236, 1256, 1257, 1259, 1266, 1275, 1278, 1281, 1283, 1293, 1376, 1445, 1505, 1536, 1602, 1633, 1642, 1645, 1670, 1711, 1712, 1717, 1718, 1719, 1722, 1724, 1725, 1729, 1841, 1861, 1863, 1878, 1893, 1896, 1898, 1899, 1912, 1919, 1922, 1924, 1925, 1927, 1929, 1932, 1933, 1937, 1940, 1941, 1942, 1949, 1950, 1951, 1953], "a_float32": 0, "rand": [0, 1, 25, 37, 49, 74, 353, 709, 715, 917, 918, 919, 920, 921, 922, 986, 1037, 1038, 1111, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1131, 1152, 1227, 1232, 1236, 1237, 1238, 1294, 1295, 1297, 1369, 1419, 1496, 1497, 1498, 1499, 1500, 1524, 1543, 1544, 1602, 1633, 1645, 1678, 1732, 1743, 1744, 1745, 1749, 1895, 1896, 1897, 1898, 1899, 1901, 1912, 1913, 1937, 1939, 1942, 1944, 1949, 1950, 1953, 1954, 1957, 1958, 1961], "8": [0, 1, 14, 20, 29, 33, 39, 40, 41, 43, 49, 51, 75, 80, 331, 333, 335, 339, 419, 420, 488, 529, 533, 576, 623, 633, 701, 702, 713, 714, 761, 762, 777, 779, 781, 789, 790, 836, 837, 838, 841, 920, 939, 947, 958, 961, 962, 966, 1037, 1038, 1073, 1077, 1092, 1097, 1110, 1126, 1127, 1133, 1134, 1137, 1144, 1174, 1183, 1184, 1244, 1273, 1276, 1277, 1278, 1286, 1288, 1291, 1292, 1352, 1353, 1358, 1359, 1360, 1362, 1363, 1364, 1377, 1388, 1423, 1449, 1450, 1456, 1458, 1460, 1467, 1468, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1492, 1496, 1497, 1498, 1499, 1500, 1504, 1528, 1531, 1534, 1590, 1595, 1600, 1601, 1602, 1680, 1681, 1687, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1715, 1723, 1728, 1732, 1736, 1756, 1766, 1767, 1768, 1775, 1788, 1795, 1798, 1803, 1809, 1813, 1820, 1822, 1823, 1828, 1836, 1840, 1850, 1855, 1856, 1857, 1859, 1861, 1870, 1875, 1880, 1887, 1896, 1900, 1906, 1922, 1924, 1935, 1937, 1939, 1941, 1942, 1943, 1944, 1947, 1949, 1953, 1954, 1956, 1957, 1959], "b_float32": 0, "c_float32": 0, "d_float32": 0, "mm": [0, 22, 960, 961, 1225, 1276, 1315, 1463, 1464, 1739, 1840, 1875, 1895, 1897, 1898, 1912, 1918, 1921, 1924, 1933, 1939, 1953], "list": [0, 1, 3, 5, 6, 7, 9, 13, 15, 16, 19, 20, 21, 22, 25, 28, 29, 33, 34, 37, 40, 41, 43, 44, 45, 47, 49, 51, 60, 62, 66, 71, 73, 74, 75, 76, 80, 81, 82, 83, 98, 203, 259, 320, 462, 464, 466, 594, 599, 600, 601, 605, 635, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 808, 809, 814, 830, 831, 832, 833, 854, 870, 877, 895, 902, 903, 904, 950, 951, 954, 958, 962, 967, 968, 970, 974, 1021, 1027, 1079, 1092, 1094, 1095, 1134, 1148, 1160, 1174, 1184, 1221, 1225, 1227, 1232, 1234, 1236, 1237, 1320, 1322, 1351, 1390, 1396, 1425, 1453, 1455, 1464, 1481, 1492, 1503, 1543, 1617, 1633, 1634, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1680, 1684, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1742, 1744, 1745, 1748, 1752, 1767, 1804, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1834, 1835, 1839, 1854, 1855, 1856, 1872, 1873, 1875, 1876, 1878, 1881, 1882, 1887, 1891, 1893, 1896, 1897, 1900, 1901, 1905, 1907, 1909, 1912, 1913, 1914, 1924, 1928, 1930, 1933, 1934, 1935, 1939, 1940, 1941, 1942, 1943, 1944, 1949, 1950, 1953, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963, 1964], "No": [0, 9, 12, 63, 73, 916, 1633, 1678, 1898, 1922, 1937, 1947, 1957, 1960], "manual": [0, 12, 15, 24, 40, 43, 58, 60, 61, 63, 66, 74, 813, 854, 894, 923, 1183, 1225, 1369, 1370, 1389, 1457, 1458, 1460, 1481, 1500, 1524, 1525, 1535, 1587, 1645, 1666, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1896, 1899, 1911, 1918, 1922, 1924, 1925, 1926, 1927, 1930, 1936, 1937, 1944, 1945, 1958], "e_float16": 0, "handl": [0, 1, 5, 9, 12, 16, 17, 18, 19, 20, 23, 31, 33, 40, 41, 43, 44, 45, 47, 51, 52, 53, 60, 61, 66, 73, 74, 504, 856, 906, 916, 929, 930, 970, 981, 997, 1012, 1039, 1052, 1094, 1140, 1141, 1162, 1221, 1251, 1390, 1453, 1500, 1502, 1552, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1759, 1805, 1841, 1886, 1893, 1909, 1911, 1913, 1922, 1924, 1925, 1926, 1927, 1932, 1937, 1941, 1944, 1949, 1951, 1960, 1961], "f_float16": 0, "g_float32": 0, "epoch": [0, 40, 53, 63, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1909, 1918, 1932, 1940, 1958], "eval": [0, 74, 830, 876, 877, 1160, 1221, 1225, 1230, 1236, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1459, 1492, 1500, 1641, 1899, 1907, 1930, 1937, 1944, 1963, 1964], "jit": [0, 13, 15, 19, 26, 27, 31, 33, 1037, 1038, 1069, 1171, 1219, 1220, 1221, 1235, 1689, 1691, 1786, 1787, 1894, 1898, 1901, 1907, 1913, 1921, 1929, 1935, 1937, 1944, 1949, 1958], "trace": [0, 1, 5, 13, 15, 16, 17, 19, 20, 22, 23, 27, 29, 34, 37, 40, 41, 43, 53, 75, 78, 79, 80, 81, 87, 88, 89, 696, 931, 932, 933, 968, 1094, 1224, 1232, 1233, 1237, 1293, 1334, 1335, 1336, 1692, 1877, 1894, 1897, 1898, 1899, 1901, 1905, 1919, 1922, 1923, 1935, 1939, 1941, 1958], "testmodel": 0, "__init__": [0, 1, 13, 15, 25, 28, 29, 40, 41, 43, 49, 74, 75, 80, 82, 83, 84, 877, 878, 1160, 1219, 1222, 1224, 1227, 1232, 1236, 1237, 1238, 1453, 1454, 1455, 1463, 1464, 1624, 1688, 1896, 1898, 1899, 1909, 1919, 1924, 1926, 1930, 1935, 1937, 1941, 1944, 1958], "input_s": [0, 750, 776, 777, 781, 1405, 1406, 1423, 1424, 1468, 1469, 1470, 1897], "num_class": [0, 19, 1589, 1897], "super": [0, 9, 13, 18, 25, 28, 29, 40, 41, 43, 45, 74, 75, 80, 82, 83, 84, 877, 878, 1160, 1219, 1224, 1227, 1232, 1236, 1237, 1238, 1453, 1454, 1455, 1463, 1464, 1465, 1466, 1624, 1688, 1721, 1896, 1898, 1899, 1900, 1919, 1924, 1930, 1935, 1937, 1941, 1944], "fc1": [0, 41, 1624, 1942], "x": [0, 1, 3, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 25, 27, 29, 31, 33, 40, 41, 43, 49, 51, 57, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 192, 272, 276, 304, 307, 329, 331, 333, 335, 339, 370, 395, 465, 500, 509, 515, 574, 576, 599, 623, 624, 633, 708, 774, 776, 786, 795, 796, 800, 801, 812, 815, 818, 836, 837, 877, 878, 894, 900, 902, 903, 904, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 950, 951, 952, 955, 956, 968, 979, 982, 985, 986, 1037, 1038, 1077, 1084, 1088, 1089, 1094, 1098, 1108, 1109, 1110, 1111, 1113, 1114, 1119, 1120, 1122, 1124, 1128, 1129, 1131, 1134, 1135, 1136, 1144, 1150, 1152, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1174, 1191, 1195, 1196, 1208, 1226, 1227, 1231, 1232, 1235, 1236, 1237, 1238, 1242, 1252, 1265, 1266, 1270, 1273, 1277, 1281, 1283, 1286, 1287, 1288, 1289, 1290, 1293, 1298, 1299, 1300, 1308, 1311, 1314, 1315, 1322, 1347, 1348, 1352, 1353, 1359, 1360, 1369, 1370, 1371, 1372, 1373, 1375, 1387, 1389, 1395, 1401, 1402, 1403, 1405, 1406, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1424, 1425, 1439, 1442, 1443, 1444, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1468, 1470, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1485, 1487, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1505, 1526, 1550, 1552, 1556, 1557, 1563, 1567, 1571, 1582, 1587, 1592, 1596, 1598, 1603, 1604, 1605, 1609, 1610, 1612, 1613, 1614, 1621, 1624, 1641, 1643, 1645, 1666, 1667, 1668, 1669, 1670, 1675, 1678, 1679, 1680, 1687, 1688, 1691, 1694, 1715, 1729, 1730, 1741, 1743, 1757, 1760, 1761, 1763, 1764, 1766, 1767, 1771, 1775, 1785, 1813, 1817, 1831, 1834, 1835, 1836, 1842, 1843, 1849, 1855, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1873, 1874, 1880, 1881, 1882, 1884, 1885, 1886, 1889, 1893, 1896, 1897, 1898, 1899, 1900, 1911, 1912, 1913, 1917, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1936, 1937, 1941, 1944, 1949, 1953, 1954, 1956, 1958, 1959, 1961, 1962, 1963], "2": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 28, 31, 33, 37, 38, 39, 40, 41, 43, 44, 47, 49, 50, 51, 53, 58, 60, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 192, 210, 227, 244, 252, 272, 278, 331, 333, 335, 339, 353, 395, 419, 420, 462, 463, 464, 465, 466, 498, 504, 509, 512, 515, 529, 531, 533, 560, 574, 576, 596, 597, 599, 600, 601, 603, 604, 605, 623, 633, 696, 697, 699, 700, 701, 702, 705, 706, 707, 708, 709, 711, 713, 714, 715, 750, 754, 755, 756, 757, 758, 759, 761, 762, 771, 774, 776, 778, 809, 812, 836, 881, 890, 891, 892, 893, 894, 895, 896, 900, 902, 903, 904, 906, 915, 917, 918, 919, 920, 921, 922, 929, 930, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 958, 959, 960, 961, 962, 966, 967, 976, 979, 980, 981, 982, 985, 986, 994, 1068, 1073, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1104, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1155, 1156, 1157, 1161, 1162, 1163, 1164, 1165, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1195, 1196, 1198, 1208, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1221, 1224, 1225, 1230, 1232, 1234, 1236, 1240, 1241, 1242, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1297, 1298, 1299, 1300, 1307, 1309, 1310, 1311, 1312, 1314, 1315, 1318, 1319, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1338, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1357, 1360, 1365, 1366, 1367, 1368, 1369, 1370, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1403, 1404, 1405, 1407, 1409, 1410, 1411, 1412, 1414, 1421, 1422, 1423, 1424, 1425, 1439, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1458, 1459, 1461, 1462, 1464, 1465, 1466, 1467, 1468, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1517, 1519, 1524, 1525, 1536, 1543, 1544, 1550, 1552, 1554, 1556, 1563, 1569, 1576, 1577, 1578, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1602, 1618, 1624, 1633, 1637, 1640, 1641, 1645, 1657, 1658, 1659, 1660, 1662, 1663, 1666, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1678, 1679, 1680, 1681, 1683, 1684, 1685, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1718, 1722, 1723, 1724, 1728, 1729, 1730, 1732, 1733, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1750, 1752, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1771, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1785, 1788, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1809, 1813, 1814, 1815, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1842, 1843, 1849, 1850, 1852, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1891, 1892, 1894, 1895, 1897, 1898, 1899, 1900, 1906, 1907, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1923, 1924, 1927, 1928, 1930, 1931, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1958, 1959, 1960, 1961, 1963], "we": [0, 1, 2, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 40, 41, 43, 45, 47, 48, 49, 50, 51, 60, 61, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 101, 512, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 795, 801, 804, 805, 807, 809, 810, 854, 873, 875, 877, 878, 881, 909, 910, 913, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 937, 946, 968, 994, 1051, 1094, 1112, 1114, 1115, 1116, 1117, 1124, 1129, 1130, 1131, 1145, 1154, 1155, 1157, 1162, 1174, 1178, 1179, 1195, 1219, 1221, 1224, 1225, 1232, 1234, 1236, 1276, 1279, 1284, 1292, 1293, 1312, 1343, 1361, 1369, 1370, 1419, 1453, 1505, 1552, 1554, 1563, 1621, 1628, 1633, 1640, 1642, 1651, 1653, 1656, 1660, 1661, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1712, 1718, 1723, 1740, 1876, 1886, 1893, 1894, 1896, 1898, 1899, 1901, 1903, 1906, 1907, 1911, 1912, 1913, 1914, 1919, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1956, 1958, 1962, 1963], "suggest": [0, 9, 22, 29, 41, 67, 97, 98, 100, 102, 1387, 1893, 1901, 1918, 1919, 1926, 1953], "issu": [0, 2, 3, 5, 9, 10, 12, 17, 18, 21, 27, 31, 33, 39, 40, 43, 50, 66, 67, 69, 71, 74, 75, 99, 100, 917, 923, 968, 970, 971, 1145, 1156, 1158, 1162, 1266, 1310, 1322, 1419, 1423, 1449, 1450, 1451, 1468, 1505, 1563, 1564, 1677, 1779, 1886, 1893, 1894, 1899, 1901, 1906, 1911, 1912, 1913, 1914, 1918, 1919, 1922, 1924, 1932, 1933, 1934, 1936, 1937, 1941, 1944, 1945, 1949, 1953, 1954, 1956], "http": [0, 2, 3, 4, 7, 9, 19, 22, 27, 28, 33, 34, 41, 42, 43, 48, 49, 60, 61, 66, 169, 696, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 808, 809, 909, 968, 1094, 1151, 1293, 1322, 1376, 1423, 1449, 1450, 1451, 1471, 1472, 1496, 1499, 1502, 1677, 1729, 1746, 1779, 1804, 1875, 1878, 1893, 1900, 1908, 1910, 1919, 1920, 1924, 1927, 1928, 1930, 1934, 1936, 1937, 1941, 1943, 1956, 1958, 1965], "github": [0, 7, 9, 17, 22, 27, 28, 29, 33, 42, 43, 56, 66, 67, 71, 169, 808, 809, 909, 923, 1151, 1322, 1449, 1450, 1451, 1496, 1677, 1715, 1779, 1878, 1893, 1901, 1906, 1924, 1927, 1934, 1937, 1943, 1944, 1953, 1954, 1956], "com": [0, 7, 22, 27, 28, 33, 42, 43, 59, 61, 66, 169, 808, 809, 909, 1151, 1322, 1449, 1450, 1451, 1496, 1677, 1779, 1875, 1878, 1893, 1908, 1910, 1924, 1927, 1928, 1934, 1936, 1937, 1943, 1956], "pytorch": [0, 1, 2, 3, 4, 5, 11, 13, 15, 16, 17, 20, 21, 25, 26, 27, 28, 31, 32, 33, 36, 37, 40, 41, 45, 46, 47, 48, 49, 50, 51, 53, 60, 61, 66, 67, 70, 72, 74, 75, 97, 98, 99, 100, 101, 102, 104, 105, 169, 529, 599, 696, 714, 746, 747, 748, 749, 761, 762, 772, 776, 777, 778, 779, 780, 781, 808, 809, 826, 827, 828, 829, 896, 909, 953, 958, 959, 968, 969, 994, 1019, 1020, 1031, 1036, 1094, 1139, 1145, 1151, 1152, 1156, 1161, 1162, 1167, 1207, 1208, 1231, 1251, 1262, 1264, 1265, 1266, 1269, 1282, 1291, 1307, 1310, 1311, 1322, 1369, 1370, 1376, 1405, 1419, 1449, 1450, 1451, 1496, 1525, 1602, 1633, 1666, 1674, 1675, 1677, 1680, 1687, 1692, 1739, 1771, 1779, 1780, 1790, 1836, 1840, 1863, 1875, 1878, 1886, 1893, 1895, 1898, 1899, 1903, 1905, 1906, 1908, 1909, 1913, 1914, 1915, 1920, 1921, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1936, 1940, 1941, 1943, 1944, 1945, 1946, 1949, 1950, 1953, 1954, 1956, 1957, 1958, 1964, 1965], "75956": 0, "_c": [0, 40, 41, 43, 73, 917, 923, 1220, 1232, 1689, 1897, 1899, 1909, 1922, 1929, 1933, 1936, 1937], "_jit_set_autocast_mod": 0, "fals": [0, 1, 3, 5, 12, 17, 18, 20, 23, 28, 29, 33, 40, 41, 43, 44, 45, 47, 48, 49, 51, 66, 69, 74, 75, 80, 82, 83, 131, 132, 133, 134, 135, 137, 153, 154, 155, 169, 200, 201, 202, 215, 228, 278, 319, 336, 337, 339, 346, 350, 353, 354, 356, 360, 361, 362, 369, 372, 410, 414, 425, 427, 428, 429, 432, 438, 446, 447, 448, 449, 462, 463, 464, 465, 466, 470, 475, 477, 487, 488, 496, 511, 512, 520, 533, 558, 571, 572, 581, 596, 610, 619, 625, 626, 631, 633, 696, 709, 710, 711, 712, 713, 715, 728, 729, 730, 731, 732, 733, 750, 751, 761, 762, 767, 768, 769, 771, 774, 776, 784, 785, 792, 794, 795, 796, 798, 799, 801, 813, 830, 835, 836, 837, 838, 840, 841, 842, 854, 855, 873, 874, 879, 881, 890, 891, 892, 896, 909, 910, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 933, 937, 940, 943, 945, 946, 952, 953, 959, 960, 961, 967, 968, 979, 997, 1035, 1040, 1052, 1094, 1095, 1096, 1097, 1099, 1100, 1107, 1111, 1112, 1113, 1114, 1119, 1120, 1125, 1126, 1127, 1129, 1130, 1131, 1147, 1148, 1149, 1150, 1152, 1153, 1155, 1156, 1157, 1159, 1161, 1163, 1165, 1177, 1178, 1179, 1182, 1183, 1196, 1206, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1221, 1226, 1227, 1228, 1236, 1237, 1238, 1240, 1242, 1245, 1250, 1251, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1273, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1285, 1290, 1291, 1292, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1312, 1314, 1318, 1320, 1321, 1323, 1326, 1334, 1335, 1343, 1348, 1349, 1350, 1351, 1354, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1387, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1405, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1438, 1439, 1440, 1444, 1445, 1446, 1447, 1448, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1482, 1484, 1485, 1492, 1495, 1496, 1497, 1498, 1500, 1501, 1502, 1505, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1547, 1548, 1549, 1552, 1554, 1556, 1557, 1558, 1563, 1564, 1567, 1573, 1574, 1576, 1577, 1578, 1582, 1587, 1591, 1595, 1597, 1598, 1600, 1601, 1602, 1603, 1605, 1615, 1618, 1619, 1621, 1627, 1633, 1635, 1637, 1640, 1642, 1645, 1646, 1658, 1667, 1668, 1669, 1670, 1672, 1675, 1678, 1679, 1680, 1684, 1685, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1737, 1739, 1740, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1763, 1764, 1771, 1775, 1783, 1784, 1785, 1788, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1813, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1839, 1840, 1854, 1858, 1863, 1872, 1875, 1878, 1880, 1881, 1882, 1889, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1905, 1906, 1907, 1908, 1911, 1913, 1914, 1918, 1919, 1922, 1923, 1924, 1926, 1930, 1933, 1934, 1937, 1938, 1941, 1942, 1943, 1945, 1948, 1949, 1953, 1954, 1955, 1957, 1958, 1960, 1961, 1963, 1964], "randn": [0, 1, 12, 13, 17, 19, 20, 21, 25, 27, 29, 31, 43, 49, 68, 70, 71, 72, 74, 75, 77, 82, 83, 307, 329, 500, 560, 596, 600, 601, 602, 603, 604, 605, 633, 699, 700, 701, 702, 703, 704, 705, 706, 711, 712, 715, 736, 744, 745, 750, 754, 755, 756, 757, 758, 759, 772, 774, 776, 777, 778, 779, 780, 781, 788, 789, 790, 877, 878, 890, 891, 892, 894, 897, 898, 899, 900, 901, 936, 948, 955, 957, 958, 959, 960, 961, 963, 981, 982, 983, 984, 985, 994, 1073, 1074, 1075, 1076, 1081, 1082, 1083, 1084, 1088, 1094, 1108, 1109, 1138, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1191, 1195, 1198, 1232, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1274, 1275, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1296, 1300, 1301, 1308, 1310, 1311, 1312, 1314, 1315, 1318, 1320, 1321, 1323, 1325, 1326, 1327, 1328, 1341, 1342, 1345, 1355, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1479, 1480, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1503, 1504, 1508, 1509, 1510, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1547, 1548, 1554, 1587, 1593, 1594, 1683, 1687, 1688, 1730, 1735, 1736, 1737, 1739, 1740, 1753, 1757, 1758, 1770, 1806, 1808, 1813, 1818, 1821, 1829, 1830, 1839, 1840, 1849, 1852, 1853, 1856, 1860, 1863, 1864, 1866, 1869, 1871, 1875, 1884, 1885, 1886, 1889, 1895, 1897, 1898, 1899, 1901, 1912, 1913, 1914, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1928, 1930, 1934, 1935, 1937, 1939, 1941, 1944, 1949, 1953, 1954, 1956, 1958, 1961, 1963], "freez": [0, 1221, 1230, 1396, 1397, 1453, 1919], "_": [0, 1, 3, 13, 20, 25, 29, 40, 41, 43, 44, 47, 53, 72, 74, 697, 699, 700, 714, 881, 897, 898, 899, 900, 901, 910, 916, 938, 957, 980, 981, 983, 984, 986, 1138, 1143, 1157, 1161, 1187, 1241, 1249, 1300, 1308, 1371, 1372, 1373, 1416, 1417, 1418, 1492, 1633, 1641, 1674, 1707, 1709, 1729, 1752, 1755, 1758, 1770, 1785, 1791, 1793, 1799, 1806, 1808, 1829, 1840, 1852, 1853, 1919, 1922, 1925, 1926, 1930, 1936, 1940, 1941, 1943, 1954], "3": [0, 1, 3, 4, 6, 9, 12, 14, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 31, 37, 38, 40, 41, 43, 45, 47, 49, 50, 51, 53, 58, 60, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 210, 227, 272, 278, 307, 331, 333, 335, 339, 419, 420, 462, 463, 464, 465, 466, 488, 504, 509, 512, 515, 529, 531, 533, 539, 553, 560, 574, 576, 597, 599, 600, 601, 603, 604, 623, 633, 696, 697, 701, 702, 703, 704, 705, 706, 707, 708, 709, 713, 714, 715, 750, 754, 755, 756, 757, 758, 759, 762, 764, 773, 776, 777, 778, 779, 781, 788, 789, 790, 801, 809, 840, 877, 878, 881, 891, 892, 894, 895, 896, 903, 904, 917, 918, 919, 920, 921, 922, 936, 938, 939, 940, 941, 942, 943, 944, 945, 947, 948, 949, 950, 951, 952, 954, 955, 956, 958, 959, 960, 961, 962, 966, 967, 976, 979, 980, 985, 986, 994, 1037, 1038, 1040, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1107, 1110, 1115, 1118, 1122, 1128, 1133, 1134, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1152, 1157, 1158, 1160, 1162, 1163, 1164, 1165, 1174, 1177, 1180, 1181, 1182, 1183, 1184, 1186, 1187, 1195, 1196, 1198, 1206, 1208, 1210, 1212, 1221, 1225, 1227, 1230, 1232, 1236, 1237, 1241, 1242, 1243, 1244, 1245, 1246, 1250, 1252, 1253, 1254, 1256, 1257, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1298, 1301, 1303, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1351, 1352, 1353, 1354, 1366, 1367, 1368, 1369, 1370, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1389, 1396, 1397, 1400, 1401, 1402, 1403, 1405, 1406, 1408, 1410, 1411, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1456, 1458, 1460, 1465, 1466, 1468, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1479, 1486, 1487, 1488, 1492, 1500, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1517, 1519, 1524, 1525, 1528, 1529, 1531, 1532, 1535, 1543, 1544, 1547, 1548, 1550, 1552, 1556, 1557, 1563, 1571, 1587, 1589, 1590, 1593, 1594, 1600, 1601, 1608, 1609, 1621, 1633, 1641, 1655, 1657, 1659, 1660, 1661, 1662, 1666, 1668, 1669, 1670, 1671, 1674, 1679, 1680, 1681, 1683, 1684, 1685, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1718, 1721, 1722, 1724, 1728, 1730, 1732, 1736, 1737, 1739, 1740, 1743, 1744, 1745, 1746, 1747, 1748, 1750, 1752, 1754, 1755, 1756, 1759, 1760, 1761, 1762, 1763, 1764, 1766, 1767, 1768, 1771, 1775, 1779, 1780, 1781, 1788, 1791, 1793, 1795, 1797, 1798, 1799, 1803, 1804, 1805, 1813, 1815, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1839, 1840, 1842, 1843, 1849, 1850, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1880, 1883, 1886, 1887, 1888, 1889, 1891, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1927, 1930, 1931, 1935, 1936, 1937, 1940, 1941, 1944, 1946, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1958, 1959, 1960, 1961], "bug": [0, 17, 29, 33, 37, 43, 74, 1154, 1155, 1157, 1310, 1918, 1932, 1953], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 73, 74, 75, 77, 82, 83, 97, 98, 99, 100, 101, 102, 103, 138, 169, 173, 214, 215, 225, 228, 240, 241, 242, 273, 278, 307, 308, 331, 339, 341, 353, 355, 358, 370, 462, 463, 464, 465, 466, 475, 503, 504, 509, 511, 512, 513, 514, 515, 516, 519, 520, 529, 531, 533, 540, 572, 582, 599, 600, 601, 603, 604, 605, 619, 620, 630, 633, 634, 696, 700, 702, 705, 709, 710, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 751, 752, 753, 760, 764, 765, 766, 767, 768, 769, 770, 771, 773, 775, 776, 791, 792, 793, 794, 795, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 815, 816, 818, 826, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 870, 875, 877, 878, 890, 891, 892, 893, 894, 901, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 933, 936, 939, 941, 944, 948, 949, 956, 958, 959, 962, 963, 965, 968, 970, 971, 972, 973, 975, 979, 980, 982, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1000, 1001, 1002, 1005, 1016, 1018, 1021, 1022, 1023, 1025, 1026, 1029, 1030, 1031, 1032, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1045, 1047, 1050, 1051, 1052, 1058, 1059, 1061, 1062, 1063, 1067, 1068, 1069, 1075, 1076, 1077, 1082, 1084, 1085, 1089, 1092, 1093, 1094, 1098, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1140, 1141, 1142, 1145, 1147, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1164, 1166, 1167, 1168, 1174, 1178, 1184, 1186, 1196, 1208, 1218, 1219, 1221, 1222, 1224, 1226, 1227, 1228, 1230, 1231, 1232, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1244, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1275, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1292, 1293, 1296, 1298, 1301, 1310, 1311, 1315, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1334, 1335, 1345, 1348, 1349, 1350, 1351, 1353, 1361, 1365, 1369, 1370, 1371, 1372, 1373, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1405, 1406, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1438, 1440, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1459, 1460, 1463, 1465, 1468, 1469, 1481, 1484, 1486, 1489, 1492, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1507, 1517, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1552, 1554, 1556, 1563, 1569, 1571, 1576, 1577, 1578, 1588, 1590, 1592, 1602, 1608, 1609, 1617, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1640, 1641, 1642, 1643, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1666, 1667, 1668, 1669, 1670, 1673, 1674, 1675, 1677, 1678, 1680, 1681, 1685, 1687, 1688, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1718, 1719, 1721, 1723, 1725, 1727, 1728, 1729, 1733, 1737, 1739, 1746, 1750, 1755, 1759, 1761, 1768, 1775, 1777, 1778, 1779, 1781, 1782, 1783, 1785, 1788, 1790, 1791, 1809, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1834, 1835, 1836, 1839, 1840, 1842, 1843, 1849, 1851, 1855, 1857, 1861, 1863, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "what": [0, 1, 3, 5, 7, 8, 9, 12, 13, 15, 16, 17, 18, 20, 21, 27, 29, 43, 48, 49, 53, 57, 58, 66, 68, 70, 71, 74, 75, 908, 1155, 1236, 1237, 1310, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1447, 1448, 1481, 1504, 1576, 1577, 1578, 1602, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1740, 1893, 1894, 1896, 1898, 1899, 1912, 1924, 1925, 1927, 1930, 1932, 1937, 1940, 1943, 1944, 1949, 1950, 1953], "observ": [0, 11, 12, 17, 25, 29, 41, 51, 60, 772, 805, 806, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 824, 825, 827, 829, 831, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 857, 875, 877, 878, 880, 982, 986, 1234, 1322, 1369, 1370, 1371, 1372, 1373, 1387, 1389, 1413, 1416, 1417, 1418, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1492, 1501, 1524, 1525, 1535, 1564, 1587, 1595, 1918, 1919, 1922, 1923, 1929, 1932, 1945, 1963], "pleas": [0, 1, 4, 5, 6, 7, 8, 9, 13, 16, 21, 24, 27, 29, 31, 34, 41, 43, 49, 52, 55, 56, 60, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 101, 272, 273, 514, 529, 634, 705, 746, 747, 748, 749, 750, 751, 757, 758, 759, 761, 762, 772, 777, 778, 779, 780, 781, 877, 878, 908, 910, 911, 912, 917, 919, 920, 923, 950, 1077, 1150, 1154, 1155, 1156, 1157, 1158, 1162, 1221, 1284, 1315, 1325, 1376, 1384, 1419, 1453, 1552, 1563, 1564, 1569, 1590, 1602, 1620, 1633, 1674, 1675, 1677, 1717, 1779, 1886, 1901, 1906, 1912, 1913, 1914, 1915, 1918, 1919, 1924, 1925, 1928, 1933, 1934, 1936, 1937, 1940, 1941, 1944, 1947, 1949, 1950, 1953, 1954, 1956, 1957, 1958, 1960], "file": [0, 1, 3, 6, 7, 9, 13, 15, 17, 18, 22, 24, 25, 31, 33, 37, 40, 45, 51, 53, 58, 60, 62, 69, 71, 74, 917, 923, 931, 932, 996, 1033, 1154, 1155, 1157, 1158, 1196, 1228, 1231, 1292, 1687, 1691, 1771, 1815, 1893, 1896, 1899, 1900, 1901, 1908, 1912, 1913, 1914, 1919, 1922, 1924, 1929, 1932, 1934, 1935, 1936, 1937, 1943, 1947, 1950, 1953, 1955, 1958], "subregion": 0, "nest": [0, 1, 5, 33, 45, 66, 74, 75, 78, 82, 83, 605, 809, 831, 833, 910, 919, 1055, 1056, 1152, 1162, 1221, 1224, 1236, 1453, 1459, 1499, 1500, 1687, 1692, 1886, 1894, 1925, 1937, 1943, 1949], "local": [0, 14, 17, 20, 29, 43, 45, 47, 48, 51, 58, 60, 61, 62, 63, 66, 74, 1037, 1098, 1151, 1196, 1221, 1293, 1392, 1393, 1394, 1398, 1400, 1441, 1453, 1504, 1546, 1570, 1620, 1633, 1634, 1678, 1785, 1815, 1893, 1894, 1898, 1911, 1918, 1922, 1923, 1926, 1937, 1941, 1942, 1946, 1949, 1950, 1951, 1958], "want": [0, 1, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 22, 23, 27, 28, 33, 40, 43, 48, 49, 57, 66, 68, 69, 70, 71, 73, 74, 75, 465, 512, 515, 797, 807, 854, 1033, 1150, 1151, 1233, 1236, 1237, 1322, 1401, 1402, 1505, 1547, 1548, 1563, 1621, 1633, 1634, 1675, 1678, 1696, 1697, 1710, 1771, 1878, 1893, 1903, 1906, 1918, 1919, 1921, 1922, 1924, 1925, 1927, 1930, 1937, 1940, 1941, 1944, 1953, 1958, 1959, 1962], "forc": [0, 1, 12, 14, 33, 37, 66, 475, 896, 968, 1033, 1224, 1235, 1239, 1790, 1893, 1896, 1899, 1918, 1922, 1958, 1961], "particular": [0, 3, 7, 12, 16, 17, 18, 29, 40, 45, 51, 57, 60, 61, 66, 74, 75, 80, 83, 576, 696, 877, 878, 1068, 1162, 1221, 1315, 1390, 1453, 1687, 1886, 1896, 1898, 1906, 1914, 1922, 1924, 1926, 1929, 1930, 1933, 1937, 1940, 1953, 1955, 1961, 1964], "give": [0, 3, 4, 7, 9, 12, 15, 16, 18, 19, 21, 24, 29, 37, 40, 41, 45, 47, 59, 66, 74, 924, 925, 986, 1112, 1114, 1115, 1117, 1121, 1130, 1154, 1155, 1156, 1234, 1250, 1257, 1381, 1382, 1383, 1458, 1504, 1505, 1640, 1679, 1696, 1697, 1836, 1875, 1893, 1896, 1911, 1913, 1917, 1919, 1922, 1924, 1925, 1927, 1928, 1930, 1934, 1937, 1940, 1942, 1953, 1964], "explicit": [0, 8, 43, 66, 70, 74, 1029, 1174, 1208, 1564, 1779, 1856, 1893, 1894, 1895, 1899, 1900, 1912, 1918, 1922, 1924, 1941, 1956, 1957], "control": [0, 1, 2, 12, 13, 15, 19, 20, 33, 40, 41, 43, 44, 45, 49, 51, 56, 59, 60, 75, 81, 83, 771, 815, 874, 877, 892, 896, 910, 937, 946, 1081, 1082, 1083, 1084, 1085, 1178, 1179, 1232, 1233, 1234, 1236, 1251, 1257, 1259, 1262, 1264, 1267, 1269, 1273, 1279, 1282, 1284, 1290, 1310, 1361, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1439, 1447, 1448, 1504, 1602, 1633, 1727, 1783, 1784, 1798, 1813, 1815, 1820, 1836, 1840, 1858, 1864, 1865, 1866, 1867, 1894, 1896, 1905, 1919, 1921, 1922, 1923, 1930, 1932, 1933, 1935, 1937, 1940, 1944, 1951, 1953], "execut": [0, 1, 2, 3, 4, 5, 7, 14, 15, 16, 17, 18, 20, 22, 23, 26, 28, 29, 33, 34, 40, 43, 45, 47, 51, 52, 54, 61, 66, 71, 73, 74, 504, 929, 930, 968, 1000, 1011, 1072, 1151, 1221, 1222, 1224, 1236, 1237, 1292, 1334, 1335, 1390, 1453, 1459, 1497, 1498, 1499, 1500, 1627, 1629, 1633, 1786, 1894, 1896, 1898, 1900, 1907, 1918, 1920, 1921, 1926, 1929, 1930, 1932, 1934, 1936, 1937, 1943, 1944, 1949, 1950, 1953], "surround": [0, 74, 806, 1898, 1918, 1922], "ensur": [0, 1, 4, 6, 7, 9, 12, 16, 17, 29, 40, 43, 44, 45, 47, 51, 60, 61, 63, 66, 73, 74, 498, 503, 751, 835, 913, 915, 975, 1151, 1221, 1365, 1446, 1453, 1456, 1457, 1496, 1552, 1576, 1577, 1578, 1602, 1633, 1787, 1893, 1896, 1898, 1906, 1908, 1911, 1918, 1919, 1922, 1924, 1925, 1927, 1932, 1934, 1941, 1944, 1945, 1949, 1950], "necessari": [0, 1, 3, 9, 17, 29, 33, 40, 45, 51, 60, 61, 66, 73, 107, 210, 227, 576, 605, 916, 1151, 1195, 1232, 1459, 1667, 1668, 1896, 1899, 1913, 1917, 1919, 1920, 1922, 1923, 1928, 1930, 1933, 1936, 1941, 1944, 1949, 1950, 1951, 1956], "becaus": [0, 1, 3, 4, 5, 7, 8, 12, 15, 16, 17, 18, 19, 20, 25, 27, 29, 33, 40, 41, 43, 47, 49, 53, 66, 70, 71, 73, 74, 75, 82, 83, 512, 919, 924, 925, 1115, 1116, 1117, 1125, 1126, 1127, 1152, 1156, 1161, 1162, 1218, 1222, 1225, 1228, 1267, 1268, 1292, 1310, 1371, 1372, 1373, 1390, 1492, 1624, 1633, 1634, 1713, 1755, 1836, 1886, 1894, 1896, 1899, 1901, 1911, 1912, 1913, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1933, 1937, 1941, 1944, 1945, 1949, 1951, 1953, 1958, 1960, 1963, 1964], "wa": [0, 1, 3, 7, 16, 18, 19, 20, 21, 28, 37, 41, 43, 48, 58, 59, 60, 61, 66, 73, 74, 353, 503, 512, 696, 801, 808, 870, 958, 969, 997, 998, 1021, 1025, 1040, 1053, 1072, 1114, 1162, 1218, 1227, 1236, 1251, 1262, 1264, 1268, 1292, 1310, 1343, 1423, 1449, 1450, 1451, 1482, 1505, 1517, 1552, 1605, 1621, 1633, 1634, 1669, 1715, 1721, 1834, 1835, 1872, 1873, 1881, 1882, 1886, 1893, 1896, 1898, 1899, 1900, 1903, 1905, 1906, 1909, 1911, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1929, 1931, 1937, 1940, 1942, 1944, 1948, 1949, 1953, 1960], "f_float32": 0, "re": [0, 1, 4, 5, 7, 12, 15, 16, 17, 19, 21, 28, 29, 33, 40, 43, 47, 50, 57, 60, 66, 67, 68, 69, 70, 71, 73, 74, 948, 1145, 1221, 1225, 1453, 1608, 1634, 1669, 1766, 1819, 1896, 1899, 1906, 1911, 1918, 1919, 1922, 1924, 1925, 1927, 1932, 1944, 1950, 1951, 1954, 1964], "again": [0, 12, 15, 16, 20, 22, 37, 40, 43, 47, 51, 69, 1343, 1919, 1924, 1925, 1930], "regardless": [0, 17, 40, 59, 66, 980, 1221, 1225, 1230, 1453, 1627, 1872, 1918, 1922, 1935, 1949, 1960], "g_float16": 0, "The": [0, 1, 2, 3, 5, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 28, 29, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 70, 71, 72, 73, 75, 82, 83, 87, 88, 89, 97, 98, 99, 100, 101, 102, 107, 169, 210, 215, 227, 228, 240, 273, 308, 329, 331, 333, 337, 339, 416, 418, 419, 420, 465, 475, 500, 503, 504, 509, 511, 514, 515, 529, 531, 533, 553, 560, 599, 619, 633, 634, 696, 700, 703, 704, 705, 706, 710, 711, 712, 713, 751, 764, 773, 776, 782, 783, 784, 785, 788, 789, 790, 795, 796, 798, 799, 801, 802, 803, 808, 809, 810, 811, 815, 818, 831, 833, 835, 836, 837, 838, 841, 843, 853, 854, 870, 875, 880, 893, 894, 896, 900, 901, 905, 906, 908, 909, 910, 911, 912, 917, 918, 920, 921, 922, 923, 924, 925, 929, 930, 932, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 953, 954, 960, 967, 971, 973, 976, 982, 986, 996, 997, 1003, 1010, 1026, 1037, 1038, 1040, 1041, 1042, 1051, 1064, 1065, 1066, 1077, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1094, 1095, 1099, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1142, 1144, 1145, 1146, 1147, 1148, 1151, 1154, 1157, 1160, 1161, 1162, 1165, 1166, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1187, 1191, 1195, 1198, 1218, 1221, 1224, 1226, 1228, 1231, 1232, 1234, 1236, 1237, 1240, 1241, 1245, 1246, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1268, 1270, 1273, 1275, 1276, 1277, 1278, 1279, 1280, 1283, 1284, 1285, 1287, 1290, 1292, 1293, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1329, 1330, 1333, 1334, 1335, 1338, 1339, 1343, 1349, 1352, 1354, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1396, 1397, 1398, 1400, 1401, 1402, 1405, 1406, 1407, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1443, 1444, 1445, 1446, 1447, 1448, 1453, 1456, 1458, 1460, 1467, 1468, 1470, 1471, 1481, 1482, 1484, 1492, 1495, 1496, 1501, 1502, 1504, 1505, 1517, 1520, 1521, 1535, 1536, 1543, 1544, 1545, 1547, 1548, 1551, 1552, 1554, 1563, 1564, 1576, 1577, 1578, 1587, 1590, 1602, 1605, 1621, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1659, 1660, 1663, 1669, 1673, 1674, 1677, 1679, 1680, 1681, 1687, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1729, 1730, 1733, 1736, 1739, 1744, 1745, 1746, 1748, 1750, 1752, 1757, 1759, 1761, 1763, 1764, 1766, 1768, 1771, 1778, 1779, 1780, 1781, 1788, 1789, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1809, 1815, 1817, 1818, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1834, 1835, 1836, 1840, 1841, 1850, 1856, 1857, 1858, 1860, 1861, 1864, 1865, 1866, 1867, 1874, 1875, 1878, 1880, 1881, 1882, 1884, 1886, 1889, 1893, 1896, 1897, 1898, 1900, 1901, 1905, 1906, 1907, 1908, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1965], "state": [0, 1, 2, 5, 9, 12, 14, 15, 16, 17, 23, 27, 40, 43, 45, 47, 49, 51, 53, 60, 63, 66, 74, 107, 764, 776, 852, 975, 1026, 1027, 1031, 1036, 1040, 1050, 1065, 1066, 1151, 1160, 1173, 1221, 1224, 1236, 1293, 1332, 1339, 1405, 1406, 1423, 1424, 1453, 1468, 1470, 1500, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1687, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1746, 1789, 1815, 1878, 1907, 1918, 1919, 1922, 1923, 1924, 1928, 1932, 1935, 1937, 1940, 1948, 1962], "thread": [0, 1, 3, 14, 40, 43, 45, 51, 62, 66, 73, 997, 1098, 1171, 1172, 1196, 1390, 1678, 1785, 1786, 1787, 1877, 1894, 1896, 1909, 1918, 1922, 1929, 1932, 1949, 1951, 1961], "must": [0, 3, 5, 6, 9, 12, 13, 15, 18, 20, 28, 29, 33, 40, 43, 45, 47, 49, 50, 51, 58, 61, 62, 66, 69, 71, 73, 74, 75, 82, 83, 107, 116, 158, 172, 173, 215, 278, 331, 333, 339, 416, 418, 420, 529, 560, 561, 582, 599, 600, 601, 603, 604, 633, 702, 703, 704, 705, 706, 707, 713, 764, 773, 788, 789, 790, 809, 831, 833, 875, 876, 894, 900, 905, 906, 907, 908, 910, 916, 918, 920, 921, 922, 924, 925, 936, 938, 940, 941, 942, 943, 944, 945, 948, 952, 955, 976, 986, 996, 997, 1007, 1008, 1009, 1011, 1037, 1038, 1040, 1082, 1084, 1085, 1086, 1088, 1091, 1092, 1094, 1115, 1116, 1117, 1122, 1124, 1125, 1126, 1127, 1128, 1135, 1136, 1145, 1147, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1174, 1183, 1184, 1187, 1198, 1218, 1221, 1231, 1236, 1243, 1246, 1275, 1276, 1277, 1278, 1284, 1286, 1287, 1290, 1293, 1311, 1313, 1314, 1315, 1321, 1328, 1343, 1349, 1352, 1353, 1357, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1396, 1397, 1400, 1401, 1402, 1407, 1408, 1414, 1446, 1453, 1456, 1459, 1484, 1490, 1505, 1525, 1534, 1536, 1544, 1563, 1576, 1577, 1578, 1596, 1633, 1656, 1666, 1667, 1673, 1675, 1680, 1687, 1688, 1719, 1721, 1728, 1729, 1732, 1733, 1736, 1744, 1745, 1766, 1775, 1778, 1787, 1803, 1814, 1817, 1818, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1841, 1851, 1855, 1856, 1860, 1865, 1867, 1871, 1875, 1878, 1883, 1884, 1886, 1887, 1889, 1896, 1897, 1898, 1899, 1906, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1928, 1932, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1960, 1964], "invok": [0, 2, 8, 12, 16, 18, 20, 27, 34, 37, 40, 43, 58, 60, 61, 73, 74, 917, 919, 1037, 1038, 1221, 1224, 1230, 1390, 1453, 1626, 1628, 1631, 1632, 1677, 1715, 1721, 1896, 1899, 1900, 1907, 1918, 1921, 1922, 1923, 1924, 1925, 1929, 1930, 1941, 1949, 1950], "affect": [0, 1, 2, 7, 9, 23, 25, 37, 39, 50, 66, 240, 241, 801, 998, 1000, 1098, 1145, 1168, 1196, 1221, 1334, 1335, 1423, 1453, 1468, 1505, 1621, 1634, 1678, 1779, 1782, 1783, 1785, 1918, 1919, 1922, 1927, 1930, 1933, 1934, 1955], "dataparallel": [0, 43, 1617, 1633, 1669, 1894, 1919, 1926, 1932, 1949], "parallel": [0, 11, 17, 32, 33, 40, 41, 43, 44, 45, 47, 60, 61, 66, 1171, 1172, 1224, 1390, 1459, 1492, 1552, 1633, 1786, 1787, 1894, 1899, 1918, 1919, 1921, 1932, 1936, 1949, 1951], "distributeddataparallel": [0, 40, 41, 43, 44, 47, 61, 66, 1390, 1492, 1932, 1942, 1949], "than": [0, 3, 4, 5, 6, 8, 9, 12, 13, 16, 17, 19, 22, 23, 25, 29, 31, 33, 40, 41, 43, 44, 45, 49, 50, 51, 53, 57, 60, 61, 62, 66, 71, 74, 75, 76, 83, 169, 272, 515, 561, 633, 696, 709, 715, 795, 801, 909, 918, 919, 933, 939, 950, 957, 958, 962, 963, 1009, 1047, 1051, 1064, 1082, 1083, 1134, 1135, 1136, 1138, 1142, 1147, 1158, 1165, 1177, 1181, 1195, 1206, 1218, 1219, 1222, 1232, 1241, 1242, 1245, 1250, 1251, 1257, 1261, 1266, 1274, 1275, 1277, 1278, 1281, 1286, 1292, 1296, 1309, 1312, 1318, 1321, 1323, 1326, 1338, 1343, 1353, 1369, 1370, 1381, 1382, 1383, 1390, 1396, 1397, 1414, 1445, 1459, 1467, 1484, 1490, 1500, 1501, 1502, 1517, 1527, 1528, 1529, 1543, 1544, 1552, 1563, 1589, 1602, 1620, 1621, 1624, 1633, 1640, 1641, 1642, 1643, 1669, 1674, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1721, 1723, 1737, 1738, 1759, 1760, 1788, 1821, 1822, 1823, 1824, 1826, 1827, 1857, 1865, 1867, 1875, 1893, 1895, 1896, 1898, 1899, 1901, 1913, 1914, 1915, 1917, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1930, 1932, 1933, 1934, 1935, 1937, 1940, 1941, 1942, 1944, 1945, 1949, 1953, 1954, 1956, 1958, 1959, 1960], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 28, 29, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 57, 60, 62, 63, 66, 70, 71, 72, 73, 74, 75, 80, 82, 83, 87, 89, 97, 98, 99, 100, 102, 169, 240, 272, 370, 420, 503, 529, 536, 561, 576, 713, 764, 773, 809, 870, 871, 872, 896, 902, 908, 909, 910, 911, 913, 919, 939, 950, 952, 962, 966, 970, 993, 998, 1000, 1005, 1007, 1011, 1038, 1061, 1072, 1083, 1094, 1098, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1124, 1125, 1126, 1127, 1128, 1130, 1133, 1137, 1140, 1141, 1142, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1174, 1183, 1184, 1196, 1200, 1203, 1206, 1225, 1230, 1234, 1240, 1241, 1251, 1252, 1262, 1265, 1266, 1268, 1273, 1277, 1279, 1281, 1284, 1290, 1291, 1307, 1315, 1319, 1324, 1343, 1349, 1361, 1366, 1369, 1370, 1371, 1372, 1373, 1376, 1381, 1384, 1385, 1386, 1397, 1401, 1402, 1407, 1416, 1417, 1418, 1420, 1421, 1422, 1432, 1433, 1434, 1444, 1453, 1457, 1459, 1492, 1500, 1505, 1517, 1527, 1530, 1531, 1532, 1547, 1548, 1549, 1554, 1589, 1602, 1620, 1624, 1633, 1634, 1639, 1641, 1642, 1646, 1656, 1667, 1676, 1677, 1678, 1679, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1717, 1719, 1720, 1721, 1741, 1742, 1759, 1775, 1783, 1785, 1788, 1791, 1831, 1840, 1855, 1860, 1861, 1863, 1871, 1874, 1875, 1878, 1886, 1894, 1896, 1899, 1903, 1905, 1907, 1909, 1911, 1912, 1913, 1914, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1949, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960], "gpu": [0, 1, 2, 3, 4, 7, 12, 16, 17, 19, 21, 24, 25, 26, 29, 33, 36, 38, 40, 41, 45, 51, 61, 62, 66, 73, 215, 228, 307, 350, 619, 776, 968, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1017, 1018, 1019, 1026, 1032, 1033, 1039, 1041, 1042, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1071, 1072, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1142, 1221, 1230, 1267, 1292, 1321, 1329, 1330, 1331, 1334, 1335, 1361, 1390, 1405, 1423, 1453, 1468, 1469, 1492, 1617, 1633, 1666, 1840, 1894, 1896, 1907, 1910, 1922, 1924, 1928, 1930, 1931, 1933, 1934, 1936, 1944, 1949, 1953, 1955, 1959, 1961], "per": [0, 15, 33, 40, 41, 43, 44, 45, 47, 48, 50, 51, 53, 59, 61, 62, 66, 67, 72, 489, 490, 491, 750, 751, 817, 824, 835, 838, 841, 849, 861, 869, 908, 917, 919, 968, 1001, 1077, 1108, 1152, 1162, 1293, 1369, 1370, 1371, 1372, 1373, 1387, 1389, 1390, 1397, 1408, 1413, 1416, 1417, 1418, 1419, 1420, 1425, 1444, 1445, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1484, 1485, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1524, 1525, 1535, 1564, 1587, 1595, 1633, 1677, 1681, 1699, 1715, 1721, 1729, 1741, 1788, 1790, 1841, 1857, 1861, 1878, 1886, 1909, 1913, 1915, 1921, 1922, 1923, 1925, 1929, 1942, 1944, 1945, 1947, 1950, 1953, 1958], "process": [0, 1, 3, 11, 15, 17, 20, 25, 29, 31, 33, 41, 43, 44, 45, 49, 51, 52, 53, 54, 60, 61, 62, 63, 66, 74, 99, 101, 997, 1033, 1039, 1064, 1221, 1231, 1293, 1330, 1338, 1369, 1370, 1387, 1389, 1396, 1397, 1413, 1420, 1444, 1445, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1492, 1496, 1498, 1500, 1501, 1524, 1525, 1535, 1564, 1587, 1595, 1633, 1718, 1724, 1790, 1804, 1878, 1893, 1894, 1896, 1909, 1911, 1912, 1913, 1919, 1921, 1922, 1923, 1924, 1929, 1930, 1932, 1934, 1936, 1937, 1941, 1942, 1943, 1944, 1947, 1949, 1951, 1953, 1955, 1962], "work": [0, 1, 2, 3, 5, 7, 8, 9, 13, 15, 17, 18, 19, 20, 21, 23, 24, 29, 31, 33, 34, 36, 43, 44, 45, 47, 48, 49, 50, 51, 60, 61, 62, 63, 66, 67, 71, 74, 75, 82, 83, 138, 169, 370, 462, 463, 464, 465, 466, 503, 603, 604, 837, 877, 878, 909, 923, 968, 995, 997, 998, 1000, 1029, 1040, 1041, 1061, 1095, 1097, 1114, 1134, 1135, 1136, 1151, 1221, 1225, 1232, 1233, 1256, 1257, 1284, 1285, 1293, 1390, 1450, 1453, 1469, 1486, 1590, 1608, 1633, 1691, 1721, 1748, 1752, 1754, 1780, 1786, 1851, 1854, 1878, 1893, 1896, 1899, 1900, 1910, 1911, 1912, 1913, 1914, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1930, 1932, 1935, 1936, 1937, 1941, 1942, 1944, 1947, 1949, 1950, 1959, 1961, 1964], "str": [0, 1, 2, 3, 5, 17, 20, 28, 29, 33, 40, 41, 43, 45, 47, 48, 49, 51, 54, 58, 60, 62, 66, 74, 339, 529, 533, 619, 795, 801, 808, 809, 810, 831, 832, 833, 870, 917, 919, 927, 931, 932, 956, 968, 974, 996, 1007, 1008, 1009, 1011, 1020, 1021, 1023, 1024, 1025, 1037, 1038, 1039, 1051, 1052, 1054, 1056, 1068, 1089, 1094, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1150, 1151, 1155, 1160, 1162, 1170, 1219, 1220, 1221, 1222, 1224, 1225, 1227, 1230, 1266, 1279, 1284, 1285, 1292, 1293, 1322, 1334, 1335, 1350, 1369, 1370, 1376, 1381, 1382, 1383, 1387, 1389, 1397, 1403, 1407, 1413, 1414, 1419, 1420, 1429, 1430, 1431, 1444, 1445, 1453, 1454, 1456, 1457, 1458, 1460, 1463, 1467, 1470, 1481, 1484, 1485, 1496, 1498, 1500, 1501, 1502, 1503, 1505, 1524, 1525, 1535, 1536, 1544, 1549, 1552, 1563, 1564, 1587, 1595, 1621, 1633, 1640, 1641, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1674, 1675, 1677, 1687, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1715, 1721, 1723, 1740, 1771, 1775, 1782, 1783, 1817, 1836, 1877, 1878, 1886, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1907, 1908, 1909, 1911, 1913, 1917, 1919, 1935, 1937, 1939, 1940, 1941, 1942, 1943, 1948, 1949, 1955, 1958, 1960, 1962, 1963, 1964], "possibl": [0, 2, 9, 12, 13, 15, 16, 17, 18, 20, 21, 23, 29, 33, 34, 37, 43, 45, 49, 70, 71, 74, 513, 514, 596, 633, 874, 895, 896, 962, 968, 1004, 1095, 1096, 1097, 1142, 1154, 1221, 1234, 1261, 1274, 1277, 1278, 1281, 1286, 1292, 1370, 1376, 1453, 1459, 1543, 1544, 1563, 1596, 1621, 1645, 1646, 1759, 1762, 1777, 1828, 1836, 1854, 1896, 1898, 1899, 1911, 1912, 1917, 1919, 1921, 1922, 1923, 1924, 1927, 1932, 1933, 1934, 1936, 1941, 1944, 1949, 1951, 1956, 1960], "valu": [0, 1, 2, 3, 5, 7, 8, 9, 12, 14, 15, 17, 20, 22, 28, 29, 31, 33, 37, 40, 41, 44, 45, 47, 49, 51, 52, 54, 57, 58, 60, 61, 66, 68, 71, 73, 74, 75, 77, 80, 83, 107, 120, 121, 122, 123, 138, 169, 173, 240, 253, 254, 255, 256, 272, 277, 278, 290, 291, 317, 329, 331, 333, 334, 335, 336, 337, 339, 341, 344, 370, 417, 418, 436, 437, 439, 440, 488, 498, 500, 515, 529, 531, 533, 553, 560, 576, 599, 600, 601, 603, 604, 615, 616, 696, 697, 700, 703, 704, 707, 711, 712, 713, 751, 772, 780, 786, 787, 795, 800, 801, 803, 809, 811, 812, 815, 818, 835, 836, 837, 838, 841, 842, 843, 870, 875, 881, 890, 891, 892, 896, 901, 905, 907, 909, 911, 912, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 937, 938, 939, 944, 946, 952, 956, 961, 963, 973, 981, 982, 985, 998, 1028, 1037, 1038, 1051, 1064, 1073, 1074, 1077, 1085, 1086, 1095, 1096, 1097, 1099, 1108, 1109, 1111, 1113, 1115, 1116, 1117, 1122, 1124, 1125, 1126, 1127, 1128, 1137, 1142, 1148, 1150, 1151, 1152, 1153, 1157, 1158, 1160, 1161, 1163, 1165, 1169, 1170, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1191, 1206, 1211, 1212, 1213, 1214, 1217, 1218, 1219, 1221, 1222, 1224, 1227, 1228, 1236, 1239, 1241, 1242, 1245, 1249, 1250, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1266, 1270, 1273, 1275, 1277, 1278, 1280, 1284, 1285, 1290, 1291, 1292, 1293, 1296, 1301, 1307, 1309, 1310, 1313, 1318, 1320, 1321, 1323, 1326, 1338, 1341, 1343, 1347, 1348, 1349, 1350, 1353, 1354, 1357, 1361, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1395, 1396, 1397, 1398, 1400, 1407, 1408, 1409, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1438, 1439, 1440, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1467, 1481, 1484, 1486, 1487, 1488, 1489, 1490, 1492, 1495, 1496, 1498, 1500, 1501, 1502, 1504, 1505, 1524, 1525, 1527, 1528, 1529, 1534, 1535, 1544, 1545, 1549, 1552, 1554, 1563, 1564, 1565, 1576, 1577, 1578, 1587, 1588, 1589, 1590, 1592, 1595, 1602, 1615, 1616, 1621, 1623, 1624, 1626, 1628, 1631, 1632, 1633, 1638, 1640, 1641, 1642, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1659, 1660, 1666, 1669, 1670, 1673, 1675, 1679, 1680, 1684, 1685, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1715, 1721, 1729, 1733, 1736, 1740, 1742, 1743, 1755, 1757, 1759, 1760, 1761, 1766, 1767, 1768, 1775, 1778, 1788, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1809, 1813, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1840, 1841, 1851, 1855, 1858, 1861, 1864, 1865, 1866, 1867, 1869, 1872, 1873, 1874, 1875, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1906, 1908, 1909, 1911, 1914, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1932, 1934, 1935, 1937, 1939, 1940, 1941, 1943, 1944, 1947, 1948, 1949, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1963], "xpu": [0, 1221, 1453, 1943], "hpu": [0, 1955], "attribut": [0, 1, 20, 28, 31, 40, 41, 43, 44, 50, 74, 75, 100, 169, 308, 511, 512, 743, 754, 755, 756, 757, 758, 759, 761, 762, 772, 780, 807, 818, 831, 832, 833, 854, 855, 856, 874, 875, 905, 909, 911, 915, 1145, 1220, 1221, 1222, 1224, 1225, 1231, 1232, 1293, 1390, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1453, 1496, 1633, 1634, 1644, 1645, 1646, 1667, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1876, 1879, 1894, 1897, 1900, 1914, 1918, 1919, 1922, 1924, 1925, 1930, 1935, 1937, 1941, 1944, 1949, 1959, 1960, 1964, 1965], "thu": [0, 1, 31, 40, 43, 49, 61, 66, 74, 801, 838, 841, 870, 1094, 1115, 1284, 1315, 1393, 1505, 1621, 1633, 1696, 1697, 1707, 1825, 1896, 1899, 1906, 1907, 1919, 1921, 1924, 1926, 1927, 1929, 1930, 1937, 1944, 1949, 1953, 1957, 1959, 1960], "obtain": [0, 3, 25, 40, 43, 49, 53, 73, 74, 512, 934, 1166, 1338, 1376, 1460, 1536, 1633, 1700, 1729, 1746, 1841, 1899, 1911, 1912, 1921, 1934, 1937, 1940, 1943, 1944], "bool": [0, 1, 2, 3, 5, 15, 28, 33, 40, 41, 43, 44, 45, 47, 48, 49, 51, 54, 60, 62, 66, 73, 74, 169, 215, 228, 263, 278, 337, 339, 346, 347, 348, 349, 351, 352, 357, 359, 462, 463, 464, 465, 466, 475, 488, 512, 533, 597, 619, 696, 709, 710, 711, 712, 713, 715, 751, 774, 795, 796, 801, 810, 830, 881, 890, 891, 892, 896, 909, 917, 918, 919, 920, 921, 922, 923, 924, 925, 937, 940, 942, 943, 945, 946, 952, 953, 959, 960, 961, 967, 968, 991, 997, 1004, 1034, 1040, 1052, 1095, 1096, 1097, 1100, 1107, 1112, 1130, 1146, 1147, 1148, 1149, 1150, 1152, 1153, 1155, 1156, 1157, 1161, 1163, 1178, 1179, 1182, 1183, 1196, 1206, 1210, 1212, 1218, 1221, 1225, 1227, 1228, 1236, 1237, 1240, 1242, 1250, 1251, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1273, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1290, 1291, 1292, 1293, 1302, 1303, 1304, 1305, 1307, 1308, 1310, 1312, 1318, 1320, 1321, 1323, 1326, 1334, 1335, 1343, 1348, 1349, 1350, 1351, 1352, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1406, 1407, 1408, 1410, 1411, 1412, 1413, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1444, 1445, 1446, 1447, 1448, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1467, 1470, 1471, 1472, 1473, 1480, 1484, 1485, 1492, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1505, 1517, 1524, 1525, 1535, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1549, 1552, 1554, 1556, 1563, 1564, 1587, 1595, 1602, 1621, 1627, 1633, 1634, 1637, 1638, 1640, 1642, 1644, 1645, 1646, 1667, 1668, 1669, 1670, 1672, 1675, 1680, 1684, 1685, 1687, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1729, 1735, 1737, 1739, 1740, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1775, 1780, 1784, 1785, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1813, 1822, 1823, 1824, 1825, 1826, 1827, 1834, 1835, 1836, 1839, 1840, 1848, 1854, 1858, 1863, 1872, 1873, 1875, 1876, 1878, 1880, 1881, 1882, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1908, 1909, 1911, 1912, 1913, 1914, 1928, 1935, 1937, 1939, 1941, 1942, 1943, 1948, 1949, 1953, 1955, 1956, 1958, 1959, 1960, 1961, 1963, 1964], "option": [0, 1, 3, 5, 17, 18, 19, 20, 21, 24, 28, 29, 33, 40, 43, 47, 48, 49, 51, 54, 58, 59, 60, 62, 63, 66, 74, 98, 107, 169, 174, 189, 191, 194, 197, 198, 199, 214, 225, 228, 258, 285, 315, 343, 349, 411, 462, 463, 464, 465, 466, 504, 515, 516, 529, 536, 541, 553, 576, 596, 597, 599, 600, 601, 603, 604, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 751, 774, 795, 796, 801, 808, 810, 815, 834, 870, 875, 878, 881, 892, 894, 895, 896, 897, 898, 899, 900, 901, 908, 909, 917, 918, 919, 920, 921, 922, 923, 924, 925, 928, 929, 930, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 958, 959, 960, 961, 963, 965, 966, 967, 968, 973, 974, 980, 981, 983, 984, 985, 986, 989, 993, 994, 995, 997, 998, 1000, 1002, 1006, 1007, 1009, 1010, 1011, 1014, 1015, 1022, 1023, 1026, 1029, 1037, 1038, 1039, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1064, 1065, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1091, 1093, 1094, 1095, 1096, 1097, 1099, 1104, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1148, 1149, 1150, 1151, 1154, 1155, 1156, 1163, 1164, 1165, 1166, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1185, 1186, 1187, 1195, 1198, 1210, 1212, 1215, 1216, 1218, 1219, 1221, 1222, 1225, 1227, 1234, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1334, 1335, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1359, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1369, 1370, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1400, 1401, 1402, 1403, 1407, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1439, 1444, 1445, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1467, 1471, 1472, 1473, 1480, 1484, 1485, 1492, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1517, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1543, 1544, 1547, 1548, 1549, 1552, 1554, 1563, 1564, 1571, 1576, 1577, 1578, 1587, 1588, 1595, 1602, 1608, 1609, 1621, 1629, 1630, 1633, 1634, 1640, 1641, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1672, 1674, 1675, 1677, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1714, 1727, 1728, 1729, 1732, 1736, 1737, 1739, 1740, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1768, 1770, 1775, 1788, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1841, 1851, 1852, 1853, 1854, 1855, 1858, 1860, 1863, 1864, 1865, 1866, 1867, 1869, 1872, 1873, 1875, 1880, 1881, 1882, 1883, 1888, 1889, 1891, 1892, 1893, 1896, 1897, 1899, 1901, 1903, 1905, 1907, 1908, 1909, 1914, 1917, 1922, 1924, 1925, 1926, 1929, 1930, 1934, 1935, 1937, 1941, 1943, 1944, 1949, 1953, 1954, 1956, 1958, 1960, 1963], "whether": [0, 1, 2, 7, 17, 20, 29, 33, 40, 41, 43, 44, 45, 48, 49, 51, 59, 60, 66, 74, 102, 337, 339, 488, 533, 633, 696, 709, 711, 712, 715, 890, 891, 896, 905, 913, 916, 917, 919, 924, 925, 937, 946, 959, 960, 961, 967, 968, 969, 971, 973, 1036, 1052, 1150, 1162, 1178, 1179, 1196, 1218, 1221, 1228, 1229, 1237, 1242, 1250, 1251, 1257, 1259, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1275, 1277, 1278, 1281, 1282, 1283, 1284, 1292, 1308, 1310, 1318, 1320, 1321, 1323, 1326, 1343, 1348, 1349, 1350, 1351, 1376, 1387, 1413, 1419, 1453, 1462, 1467, 1502, 1514, 1515, 1516, 1536, 1564, 1595, 1627, 1633, 1640, 1642, 1645, 1658, 1672, 1675, 1680, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1715, 1727, 1737, 1740, 1784, 1785, 1834, 1835, 1836, 1839, 1840, 1858, 1863, 1872, 1873, 1875, 1876, 1881, 1882, 1886, 1893, 1899, 1905, 1906, 1908, 1914, 1918, 1922, 1924, 1928, 1937, 1942, 1944, 1949, 1953, 1955, 1957, 1958, 1963], "torch_dtyp": 0, "weight": [0, 17, 40, 43, 49, 66, 72, 74, 75, 175, 319, 379, 380, 512, 728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 761, 762, 765, 767, 768, 769, 770, 772, 776, 777, 779, 780, 781, 788, 789, 790, 797, 808, 809, 810, 824, 825, 849, 851, 857, 861, 865, 866, 867, 868, 869, 874, 875, 877, 878, 939, 986, 1150, 1152, 1160, 1162, 1182, 1183, 1221, 1225, 1230, 1232, 1237, 1246, 1343, 1369, 1370, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1396, 1397, 1405, 1406, 1408, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1453, 1457, 1458, 1459, 1460, 1461, 1468, 1470, 1482, 1496, 1522, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1543, 1544, 1553, 1562, 1566, 1569, 1584, 1586, 1587, 1596, 1605, 1624, 1633, 1640, 1641, 1643, 1645, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1673, 1674, 1675, 1677, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1709, 1743, 1875, 1886, 1893, 1894, 1895, 1897, 1898, 1899, 1907, 1908, 1913, 1914, 1917, 1924, 1926, 1930, 1935, 1944, 1945, 1946, 1947, 1953, 1958, 1962, 1963], "cach": [0, 2, 3, 12, 17, 22, 25, 29, 49, 74, 503, 968, 975, 1019, 1020, 1037, 1040, 1045, 1047, 1049, 1051, 1059, 1064, 1329, 1330, 1331, 1634, 1645, 1677, 1911, 1926], "insid": [0, 1, 7, 16, 18, 20, 29, 40, 60, 66, 71, 73, 74, 913, 914, 915, 916, 1003, 1040, 1152, 1156, 1161, 1232, 1633, 1896, 1898, 1899, 1907, 1918, 1922, 1924, 1925, 1929, 1937, 1953, 1962], "custom_fwd": [0, 1918], "fwd": [0, 22], "cast_input": [0, 1918], "helper": [0, 3, 5, 28, 43, 70, 74, 1492, 1893, 1894, 1898, 1922, 1923, 1937, 1941, 1949, 1964], "subclass": [0, 1, 14, 20, 33, 40, 45, 49, 53, 71, 74, 158, 553, 905, 906, 907, 1219, 1222, 1231, 1453, 1634, 1647, 1652, 1673, 1896, 1899, 1900, 1906, 1918, 1930, 1937, 1938, 1949, 1953, 1964], "page": [0, 6, 7, 9, 24, 40, 44, 61, 63, 1293, 1496, 1498, 1500, 1922, 1923, 1930, 1939, 1949], "incom": [0, 43, 62, 797, 835, 836, 837, 838, 841, 1374, 1440, 1523, 1569, 1911, 1919], "non": [0, 1, 3, 5, 12, 15, 16, 17, 18, 19, 25, 28, 33, 39, 41, 43, 44, 45, 48, 49, 51, 53, 60, 62, 63, 66, 73, 75, 84, 99, 107, 169, 353, 520, 529, 533, 561, 714, 750, 755, 756, 757, 758, 759, 761, 762, 772, 776, 780, 781, 788, 789, 790, 854, 881, 893, 905, 907, 909, 914, 916, 924, 925, 939, 952, 955, 968, 979, 980, 985, 1051, 1140, 1141, 1147, 1151, 1156, 1162, 1198, 1221, 1224, 1233, 1236, 1237, 1256, 1257, 1264, 1268, 1269, 1282, 1284, 1293, 1303, 1310, 1315, 1320, 1343, 1348, 1349, 1353, 1366, 1367, 1368, 1382, 1383, 1385, 1386, 1389, 1399, 1405, 1422, 1423, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1458, 1460, 1468, 1470, 1484, 1535, 1554, 1582, 1587, 1629, 1630, 1633, 1679, 1710, 1732, 1775, 1776, 1791, 1803, 1817, 1818, 1822, 1823, 1824, 1825, 1826, 1827, 1856, 1872, 1886, 1893, 1894, 1896, 1898, 1899, 1901, 1911, 1914, 1917, 1920, 1924, 1925, 1926, 1930, 1934, 1937, 1942, 1943, 1948, 1949, 1951, 1953, 1954, 1956, 1957, 1958, 1960, 1964], "intern": [0, 3, 8, 9, 17, 20, 21, 29, 33, 40, 41, 43, 45, 49, 51, 57, 66, 71, 74, 995, 1029, 1050, 1151, 1221, 1257, 1259, 1275, 1278, 1301, 1371, 1372, 1373, 1407, 1492, 1527, 1528, 1529, 1552, 1642, 1689, 1783, 1825, 1875, 1900, 1918, 1919, 1921, 1922, 1927, 1933, 1934, 1950, 1951, 1955, 1957], "current": [0, 1, 2, 3, 5, 6, 7, 9, 15, 16, 17, 20, 23, 24, 29, 31, 33, 40, 43, 45, 47, 48, 49, 51, 53, 60, 61, 66, 67, 73, 74, 107, 169, 228, 240, 503, 513, 514, 515, 757, 759, 797, 809, 811, 833, 875, 877, 878, 881, 895, 906, 909, 910, 917, 918, 919, 924, 937, 946, 989, 991, 995, 996, 997, 998, 1000, 1005, 1006, 1009, 1010, 1012, 1013, 1014, 1015, 1018, 1019, 1020, 1022, 1023, 1026, 1028, 1029, 1032, 1034, 1035, 1039, 1040, 1041, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1061, 1063, 1065, 1067, 1070, 1071, 1072, 1095, 1097, 1107, 1112, 1130, 1146, 1148, 1168, 1169, 1170, 1178, 1179, 1204, 1205, 1221, 1225, 1236, 1240, 1291, 1293, 1307, 1322, 1329, 1331, 1393, 1396, 1400, 1453, 1492, 1500, 1504, 1546, 1552, 1563, 1602, 1620, 1621, 1623, 1633, 1646, 1650, 1651, 1652, 1653, 1654, 1659, 1660, 1661, 1662, 1684, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1739, 1748, 1750, 1752, 1754, 1755, 1779, 1783, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1865, 1867, 1872, 1877, 1878, 1891, 1894, 1896, 1898, 1899, 1900, 1901, 1903, 1906, 1909, 1911, 1914, 1918, 1919, 1922, 1923, 1928, 1929, 1930, 1931, 1932, 1935, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1947, 1949, 1950, 1953, 1955, 1956, 1958, 1959, 1962, 1964], "outsid": [0, 5, 9, 23, 27, 40, 53, 66, 71, 700, 811, 901, 1150, 1152, 1156, 1161, 1222, 1552, 1633, 1712, 1713, 1718, 1719, 1725, 1898, 1899, 1917, 1919, 1922, 1925, 1926, 1960], "ha": [0, 1, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 29, 31, 33, 34, 36, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 169, 215, 228, 273, 278, 353, 462, 463, 464, 465, 466, 490, 491, 512, 514, 560, 596, 597, 619, 620, 634, 696, 705, 709, 711, 712, 713, 715, 751, 776, 795, 797, 801, 803, 807, 813, 854, 856, 863, 874, 880, 890, 891, 893, 905, 908, 909, 911, 913, 919, 924, 925, 938, 956, 959, 960, 968, 970, 979, 980, 981, 994, 997, 998, 1000, 1005, 1033, 1036, 1037, 1082, 1084, 1098, 1130, 1142, 1150, 1151, 1154, 1155, 1158, 1162, 1174, 1183, 1184, 1195, 1218, 1221, 1225, 1228, 1231, 1232, 1233, 1236, 1241, 1242, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1274, 1275, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1287, 1288, 1292, 1301, 1308, 1310, 1315, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1348, 1349, 1350, 1351, 1369, 1370, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1397, 1400, 1401, 1402, 1405, 1408, 1413, 1416, 1417, 1418, 1423, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1457, 1458, 1459, 1460, 1461, 1468, 1484, 1486, 1492, 1500, 1504, 1505, 1517, 1527, 1528, 1529, 1535, 1544, 1547, 1548, 1552, 1563, 1587, 1589, 1590, 1592, 1596, 1602, 1608, 1621, 1623, 1624, 1627, 1628, 1633, 1640, 1642, 1644, 1647, 1651, 1653, 1656, 1666, 1667, 1674, 1675, 1679, 1681, 1687, 1691, 1693, 1696, 1697, 1713, 1714, 1715, 1717, 1721, 1723, 1727, 1737, 1739, 1740, 1741, 1742, 1759, 1761, 1771, 1783, 1805, 1818, 1819, 1820, 1831, 1833, 1834, 1835, 1836, 1839, 1840, 1857, 1863, 1881, 1882, 1886, 1896, 1898, 1899, 1905, 1906, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1928, 1929, 1930, 1932, 1933, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1958, 1959, 1960, 1961], "effect": [0, 3, 7, 12, 33, 40, 41, 43, 49, 62, 66, 71, 74, 75, 78, 215, 228, 619, 751, 795, 801, 1029, 1077, 1162, 1221, 1263, 1264, 1265, 1266, 1322, 1361, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1398, 1453, 1459, 1505, 1563, 1590, 1621, 1627, 1633, 1634, 1652, 1707, 1715, 1815, 1820, 1840, 1861, 1876, 1886, 1893, 1896, 1907, 1917, 1918, 1919, 1922, 1924, 1944, 1947, 1955, 1956, 1958], "custom_bwd": [0, 1918], "bwd": 0, "small": [0, 3, 7, 9, 12, 16, 18, 22, 25, 29, 40, 41, 43, 49, 60, 881, 924, 925, 968, 1008, 1051, 1283, 1284, 1296, 1298, 1361, 1388, 1462, 1467, 1481, 1501, 1505, 1534, 1588, 1595, 1633, 1712, 1718, 1727, 1840, 1896, 1898, 1899, 1922, 1924, 1926, 1930, 1933, 1935, 1937, 1941, 1944, 1945, 1953, 1954, 1960], "magnitud": [0, 981, 1677, 1791, 1917, 1918, 1922], "represent": [0, 3, 15, 17, 29, 33, 40, 43, 45, 58, 74, 498, 774, 842, 998, 1110, 1111, 1113, 1137, 1166, 1221, 1260, 1263, 1265, 1268, 1347, 1453, 1459, 1687, 1727, 1894, 1896, 1899, 1914, 1924, 1933, 1937, 1941, 1944, 1953, 1960, 1965], "These": [0, 1, 2, 3, 8, 12, 15, 17, 20, 23, 29, 33, 34, 40, 43, 44, 49, 67, 69, 72, 74, 810, 896, 986, 1094, 1158, 1218, 1221, 1263, 1328, 1361, 1453, 1624, 1641, 1894, 1896, 1897, 1898, 1899, 1909, 1912, 1913, 1915, 1918, 1919, 1922, 1923, 1924, 1930, 1933, 1935, 1937, 1941, 1947, 1949, 1950, 1956, 1961, 1964], "flush": [0, 1, 45, 1051, 1231, 1771, 1784, 1933, 1958], "zero": [0, 1, 2, 16, 41, 43, 44, 47, 49, 62, 66, 71, 74, 169, 278, 333, 529, 531, 560, 561, 600, 601, 603, 604, 639, 695, 707, 714, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 775, 776, 780, 784, 785, 788, 789, 790, 791, 793, 796, 797, 811, 815, 835, 836, 837, 838, 841, 846, 893, 902, 903, 904, 909, 914, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 938, 939, 959, 960, 961, 966, 981, 985, 1040, 1051, 1055, 1056, 1085, 1089, 1107, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1142, 1147, 1150, 1158, 1180, 1181, 1184, 1206, 1218, 1221, 1232, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1293, 1301, 1302, 1303, 1304, 1305, 1310, 1311, 1343, 1347, 1351, 1365, 1366, 1367, 1368, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1405, 1406, 1408, 1421, 1422, 1423, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1459, 1462, 1465, 1466, 1467, 1468, 1470, 1490, 1504, 1505, 1508, 1509, 1510, 1519, 1520, 1521, 1530, 1531, 1532, 1534, 1536, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1552, 1573, 1574, 1588, 1589, 1590, 1602, 1650, 1651, 1652, 1653, 1668, 1675, 1679, 1683, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1727, 1739, 1741, 1742, 1743, 1759, 1768, 1778, 1805, 1809, 1818, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1840, 1854, 1855, 1857, 1863, 1892, 1896, 1897, 1899, 1901, 1909, 1911, 1912, 1913, 1914, 1917, 1919, 1922, 1924, 1930, 1933, 1936, 1937, 1939, 1941, 1943, 1944, 1947, 1953, 1954, 1956, 1958, 1959, 1960, 1961], "underflow": [0, 1419, 1918], "updat": [0, 9, 12, 28, 31, 40, 41, 45, 47, 51, 60, 66, 69, 70, 74, 101, 240, 529, 531, 776, 815, 816, 840, 1150, 1159, 1221, 1371, 1372, 1373, 1390, 1396, 1397, 1405, 1416, 1417, 1418, 1453, 1454, 1463, 1492, 1543, 1544, 1641, 1645, 1675, 1693, 1699, 1704, 1706, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1893, 1896, 1907, 1918, 1919, 1922, 1923, 1924, 1930, 1932, 1935, 1936, 1937, 1939, 1940, 1942, 1944, 1949, 1950, 1951, 1958], "lost": [0, 51, 61, 63, 1390, 1449, 1450, 1451], "To": [0, 1, 2, 3, 4, 5, 6, 9, 12, 13, 15, 16, 17, 20, 21, 25, 27, 28, 29, 33, 34, 40, 41, 43, 44, 47, 48, 49, 51, 52, 58, 59, 61, 62, 66, 71, 74, 97, 98, 101, 353, 515, 573, 750, 910, 923, 965, 968, 996, 1041, 1061, 1082, 1084, 1094, 1122, 1124, 1128, 1139, 1221, 1222, 1224, 1225, 1231, 1232, 1266, 1288, 1293, 1321, 1361, 1370, 1393, 1419, 1449, 1450, 1451, 1453, 1506, 1507, 1525, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1677, 1721, 1729, 1740, 1779, 1787, 1841, 1893, 1896, 1898, 1899, 1903, 1911, 1912, 1913, 1915, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1931, 1932, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1949, 1950, 1951, 1953, 1956, 1957, 1958, 1959], "prevent": [0, 7, 8, 12, 16, 18, 20, 40, 41, 43, 44, 51, 66, 74, 515, 751, 915, 997, 1075, 1076, 1095, 1096, 1097, 1218, 1320, 1348, 1351, 1391, 1459, 1484, 1571, 1608, 1609, 1624, 1633, 1737, 1816, 1819, 1839, 1865, 1867, 1875, 1911, 1918, 1919, 1922, 1923, 1926, 1930, 1941, 1943, 1951, 1953, 1954], "multipli": [0, 17, 43, 331, 339, 440, 529, 701, 702, 703, 704, 705, 706, 707, 776, 795, 801, 802, 803, 936, 948, 1064, 1077, 1094, 1174, 1185, 1244, 1256, 1257, 1261, 1274, 1276, 1278, 1284, 1286, 1315, 1325, 1338, 1342, 1345, 1369, 1381, 1382, 1383, 1386, 1405, 1423, 1505, 1506, 1507, 1563, 1621, 1622, 1623, 1645, 1712, 1718, 1720, 1727, 1811, 1814, 1817, 1818, 1832, 1836, 1837, 1840, 1861, 1897, 1912, 1922, 1927, 1930, 1933, 1939, 1953, 1954], "factor": [0, 3, 17, 41, 49, 74, 705, 706, 707, 815, 835, 936, 959, 960, 961, 1263, 1264, 1265, 1268, 1270, 1310, 1311, 1312, 1391, 1414, 1441, 1465, 1466, 1593, 1594, 1602, 1707, 1708, 1709, 1711, 1712, 1714, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1725, 1739, 1797, 1818, 1840, 1917, 1918, 1944, 1953], "flow": [0, 12, 13, 15, 19, 20, 25, 75, 81, 83, 965, 1233, 1236, 1517, 1552, 1633, 1896, 1917, 1919, 1922, 1924, 1935, 1937, 1951], "through": [0, 5, 7, 9, 12, 13, 15, 16, 17, 18, 20, 26, 28, 29, 34, 40, 43, 45, 49, 53, 66, 71, 73, 74, 75, 78, 80, 512, 808, 856, 870, 877, 878, 915, 924, 925, 1002, 1040, 1121, 1154, 1162, 1219, 1222, 1224, 1236, 1237, 1239, 1256, 1257, 1278, 1284, 1301, 1460, 1497, 1498, 1499, 1500, 1554, 1624, 1633, 1645, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1739, 1886, 1893, 1894, 1898, 1899, 1903, 1905, 1909, 1911, 1912, 1913, 1919, 1922, 1924, 1926, 1927, 1929, 1930, 1936, 1937, 1941, 1942, 1944, 1947, 1949, 1950, 1951, 1953, 1957, 1961, 1963, 1965], "word": [0, 1, 8, 43, 60, 61, 69, 73, 74, 952, 1361, 1381, 1382, 1383, 1396, 1397, 1496, 1543, 1544, 1563, 1621, 1633, 1640, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1898, 1919, 1926, 1941, 1950], "have": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 33, 40, 43, 44, 45, 47, 49, 50, 51, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 74, 75, 82, 83, 99, 172, 173, 240, 241, 331, 333, 339, 353, 416, 420, 465, 475, 488, 503, 504, 519, 529, 531, 533, 536, 560, 633, 696, 705, 709, 711, 712, 713, 715, 831, 833, 857, 896, 905, 909, 917, 919, 929, 930, 937, 938, 946, 955, 956, 968, 971, 986, 1000, 1009, 1010, 1040, 1051, 1085, 1093, 1100, 1114, 1124, 1129, 1131, 1145, 1150, 1151, 1162, 1163, 1164, 1178, 1179, 1182, 1183, 1195, 1196, 1218, 1220, 1221, 1224, 1225, 1228, 1230, 1232, 1233, 1234, 1235, 1236, 1237, 1242, 1243, 1252, 1256, 1257, 1273, 1280, 1281, 1284, 1286, 1292, 1301, 1303, 1308, 1315, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1343, 1348, 1349, 1351, 1353, 1361, 1365, 1369, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1396, 1397, 1401, 1402, 1407, 1412, 1416, 1417, 1418, 1445, 1453, 1456, 1457, 1458, 1459, 1460, 1500, 1502, 1534, 1543, 1544, 1547, 1548, 1552, 1569, 1587, 1589, 1592, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1637, 1638, 1640, 1642, 1645, 1669, 1673, 1678, 1680, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1737, 1763, 1764, 1778, 1791, 1814, 1817, 1821, 1822, 1823, 1824, 1826, 1827, 1834, 1835, 1836, 1839, 1840, 1851, 1855, 1861, 1863, 1875, 1878, 1881, 1882, 1884, 1886, 1888, 1893, 1896, 1897, 1898, 1899, 1901, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1948, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1964], "larger": [0, 9, 20, 22, 24, 25, 28, 43, 49, 74, 272, 515, 925, 939, 1051, 1151, 1275, 1278, 1361, 1390, 1396, 1397, 1445, 1502, 1505, 1543, 1544, 1919, 1922, 1926, 1927, 1929, 1933, 1935, 1953, 1958], "thei": [0, 1, 3, 5, 7, 9, 12, 15, 16, 17, 18, 19, 23, 27, 29, 31, 36, 37, 40, 43, 45, 49, 50, 60, 66, 69, 70, 73, 74, 99, 339, 353, 354, 702, 705, 706, 713, 816, 831, 832, 833, 840, 857, 870, 875, 906, 915, 925, 936, 968, 1040, 1098, 1145, 1150, 1160, 1196, 1210, 1211, 1218, 1221, 1228, 1233, 1242, 1256, 1257, 1263, 1284, 1292, 1314, 1318, 1321, 1323, 1326, 1343, 1366, 1367, 1368, 1384, 1385, 1386, 1400, 1438, 1446, 1447, 1448, 1453, 1459, 1469, 1481, 1504, 1552, 1554, 1624, 1633, 1634, 1637, 1640, 1642, 1643, 1666, 1669, 1678, 1717, 1720, 1779, 1785, 1836, 1840, 1875, 1876, 1880, 1893, 1896, 1898, 1899, 1901, 1903, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1922, 1923, 1924, 1925, 1928, 1930, 1932, 1933, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1949, 1953, 1958, 1960, 1961, 1962, 1964], "don": [0, 1, 4, 7, 9, 15, 16, 17, 18, 20, 21, 31, 43, 59, 67, 69, 71, 74, 169, 801, 811, 909, 910, 923, 1068, 1150, 1236, 1314, 1416, 1417, 1418, 1505, 1621, 1624, 1633, 1681, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1782, 1893, 1896, 1900, 1911, 1912, 1913, 1919, 1922, 1924, 1926, 1930, 1932, 1936, 1937, 1940, 1941, 1942, 1944, 1949, 1950, 1953, 1964], "t": [0, 1, 2, 3, 4, 7, 8, 9, 15, 16, 18, 19, 20, 21, 25, 29, 31, 40, 41, 43, 45, 49, 50, 53, 57, 59, 60, 67, 69, 71, 72, 73, 74, 75, 77, 99, 169, 331, 333, 339, 475, 539, 553, 587, 703, 704, 713, 776, 797, 801, 811, 839, 842, 893, 894, 895, 896, 905, 907, 909, 910, 913, 915, 918, 923, 959, 960, 961, 966, 986, 995, 998, 1019, 1037, 1038, 1068, 1092, 1110, 1115, 1116, 1117, 1118, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1145, 1146, 1147, 1150, 1151, 1152, 1162, 1163, 1174, 1184, 1218, 1219, 1221, 1222, 1224, 1227, 1228, 1232, 1234, 1236, 1239, 1241, 1250, 1251, 1257, 1259, 1260, 1263, 1270, 1278, 1279, 1284, 1292, 1293, 1301, 1314, 1327, 1328, 1341, 1350, 1370, 1374, 1376, 1381, 1382, 1383, 1390, 1396, 1397, 1405, 1414, 1416, 1417, 1418, 1419, 1423, 1440, 1453, 1468, 1484, 1486, 1496, 1504, 1505, 1523, 1527, 1528, 1529, 1536, 1543, 1544, 1564, 1569, 1588, 1608, 1621, 1624, 1627, 1628, 1633, 1634, 1640, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1667, 1669, 1670, 1681, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1713, 1723, 1729, 1735, 1739, 1756, 1781, 1782, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1814, 1817, 1836, 1840, 1841, 1851, 1854, 1860, 1863, 1886, 1887, 1893, 1895, 1896, 1897, 1898, 1900, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1927, 1929, 1930, 1932, 1935, 1936, 1937, 1939, 1940, 1941, 1942, 1944, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1964], "grad": [0, 1, 5, 23, 27, 43, 49, 67, 70, 71, 74, 169, 353, 475, 504, 511, 512, 519, 520, 597, 896, 905, 909, 910, 916, 917, 919, 924, 925, 929, 930, 1040, 1098, 1150, 1151, 1153, 1157, 1161, 1162, 1196, 1204, 1221, 1293, 1453, 1633, 1678, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1785, 1817, 1875, 1886, 1894, 1896, 1897, 1912, 1913, 1914, 1918, 1923, 1924, 1925, 1927, 1930, 1932, 1939, 1949, 1950, 1953, 1959], "unscal": 0, "doe": [0, 1, 3, 4, 5, 7, 8, 9, 12, 19, 20, 27, 29, 33, 43, 47, 49, 51, 53, 57, 59, 60, 62, 66, 69, 70, 71, 73, 74, 75, 169, 272, 353, 452, 475, 599, 633, 696, 711, 712, 764, 773, 776, 806, 810, 877, 896, 948, 1031, 1035, 1085, 1094, 1098, 1147, 1150, 1162, 1195, 1220, 1222, 1225, 1231, 1236, 1246, 1251, 1263, 1264, 1268, 1269, 1276, 1282, 1284, 1290, 1293, 1310, 1314, 1315, 1321, 1325, 1329, 1345, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1393, 1396, 1397, 1400, 1405, 1406, 1416, 1417, 1418, 1423, 1424, 1426, 1427, 1428, 1435, 1436, 1437, 1447, 1448, 1454, 1460, 1463, 1468, 1470, 1492, 1504, 1535, 1587, 1633, 1634, 1642, 1645, 1649, 1675, 1678, 1680, 1685, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1724, 1728, 1733, 1775, 1778, 1779, 1783, 1785, 1809, 1814, 1840, 1860, 1863, 1875, 1876, 1886, 1892, 1893, 1894, 1896, 1898, 1899, 1901, 1907, 1911, 1912, 1913, 1914, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1932, 1933, 1934, 1937, 1941, 1942, 1944, 1949, 1951, 1953, 1956, 1960], "interfer": [0, 17, 1909, 1922, 1937], "learn": [0, 7, 8, 11, 13, 15, 20, 34, 49, 59, 66, 74, 101, 1374, 1387, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1413, 1425, 1438, 1440, 1461, 1482, 1496, 1498, 1500, 1501, 1502, 1605, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1894, 1903, 1915, 1917, 1928, 1930, 1931, 1937, 1941, 1944, 1949, 1951], "rate": [0, 8, 24, 41, 49, 66, 1392, 1393, 1394, 1398, 1499, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1732, 1894, 1929, 1958], "fp16": [0, 2, 745, 1633, 1944, 1945], "everi": [0, 1, 2, 8, 9, 15, 16, 17, 20, 24, 25, 28, 29, 40, 41, 43, 45, 47, 49, 51, 66, 71, 74, 498, 504, 626, 696, 797, 835, 913, 929, 930, 968, 1077, 1094, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1151, 1174, 1183, 1221, 1252, 1266, 1276, 1279, 1310, 1365, 1391, 1392, 1393, 1394, 1398, 1446, 1453, 1486, 1488, 1492, 1538, 1539, 1540, 1545, 1576, 1577, 1578, 1592, 1609, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1641, 1674, 1677, 1678, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1779, 1840, 1873, 1899, 1905, 1909, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1931, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1955, 1956, 1958, 1960], "most": [0, 1, 3, 4, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 28, 29, 34, 40, 43, 45, 47, 49, 50, 51, 52, 59, 60, 62, 63, 66, 71, 72, 73, 74, 75, 515, 809, 913, 914, 915, 920, 924, 933, 968, 1063, 1077, 1094, 1151, 1196, 1206, 1219, 1222, 1326, 1361, 1500, 1552, 1602, 1633, 1645, 1704, 1815, 1861, 1893, 1896, 1898, 1899, 1901, 1906, 1911, 1913, 1914, 1919, 1922, 1924, 1932, 1933, 1934, 1940, 1943, 1944, 1950, 1951, 1953, 1956, 1958, 1960], "bf16": [0, 2], "pretrain": [0, 19, 878, 1396, 1397, 1893, 1919, 1937], "cannot": [0, 3, 8, 9, 12, 19, 40, 41, 43, 49, 50, 53, 60, 66, 67, 71, 72, 73, 74, 75, 104, 105, 241, 272, 540, 561, 896, 1115, 1117, 1125, 1126, 1127, 1133, 1150, 1218, 1226, 1343, 1376, 1396, 1505, 1536, 1602, 1633, 1689, 1841, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1909, 1913, 1914, 1919, 1923, 1924, 1935, 1936, 1937, 1944, 1949, 1951, 1953, 1955, 1956, 1964], "numer": [0, 17, 29, 40, 49, 67, 72, 703, 809, 924, 925, 952, 1225, 1236, 1237, 1252, 1256, 1257, 1261, 1266, 1274, 1275, 1278, 1281, 1284, 1286, 1308, 1310, 1370, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1486, 1489, 1492, 1501, 1543, 1564, 1571, 1602, 1608, 1610, 1641, 1674, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1743, 1775, 1840, 1894, 1899, 1900, 1904, 1907, 1922, 1924, 1925, 1937, 1944, 1954, 1959, 1965], "max": [0, 16, 21, 22, 40, 43, 51, 53, 59, 60, 62, 66, 74, 135, 204, 205, 206, 207, 318, 711, 712, 713, 774, 786, 787, 796, 798, 799, 818, 835, 836, 837, 838, 841, 890, 939, 956, 963, 964, 968, 1073, 1108, 1109, 1181, 1232, 1252, 1266, 1273, 1275, 1277, 1278, 1290, 1362, 1363, 1364, 1375, 1376, 1387, 1388, 1397, 1401, 1402, 1407, 1412, 1413, 1421, 1422, 1439, 1441, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1458, 1461, 1472, 1473, 1480, 1501, 1502, 1504, 1514, 1515, 1516, 1526, 1534, 1544, 1547, 1548, 1563, 1567, 1576, 1577, 1578, 1588, 1592, 1596, 1598, 1603, 1621, 1637, 1669, 1696, 1697, 1698, 1708, 1713, 1714, 1723, 1744, 1745, 1817, 1846, 1847, 1875, 1895, 1896, 1897, 1906, 1909, 1914, 1920, 1922, 1926, 1939, 1944, 1947, 1965], "65504": 0, "overflow": [0, 1075, 1076, 1320, 1348, 1351, 1571, 1608, 1609, 1737, 1768, 1816, 1819, 1839, 1865, 1867, 1922, 1933, 1954], "instead": [0, 1, 3, 5, 8, 9, 12, 13, 15, 16, 17, 18, 20, 23, 28, 29, 33, 40, 41, 43, 45, 48, 49, 51, 57, 60, 61, 66, 69, 70, 71, 74, 75, 77, 83, 240, 424, 475, 515, 529, 764, 773, 784, 785, 809, 833, 842, 896, 906, 917, 918, 919, 920, 923, 924, 952, 958, 1129, 1131, 1155, 1156, 1157, 1158, 1161, 1162, 1167, 1208, 1219, 1221, 1222, 1226, 1250, 1251, 1257, 1259, 1275, 1278, 1284, 1290, 1292, 1321, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1387, 1389, 1390, 1392, 1393, 1394, 1398, 1405, 1413, 1419, 1420, 1421, 1422, 1423, 1444, 1445, 1446, 1447, 1448, 1453, 1456, 1457, 1458, 1460, 1467, 1468, 1480, 1484, 1485, 1486, 1492, 1501, 1519, 1520, 1521, 1524, 1525, 1535, 1545, 1552, 1564, 1576, 1577, 1578, 1587, 1595, 1608, 1633, 1675, 1677, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1714, 1715, 1721, 1744, 1745, 1755, 1775, 1779, 1821, 1836, 1840, 1875, 1886, 1896, 1898, 1899, 1906, 1913, 1917, 1918, 1919, 1923, 1924, 1925, 1926, 1927, 1928, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1943, 1944, 1947, 1950, 1953, 1960, 1961, 1963, 1964], "case": [0, 1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 23, 25, 28, 29, 31, 33, 34, 40, 41, 43, 45, 47, 48, 49, 51, 52, 53, 60, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 99, 169, 173, 215, 370, 512, 515, 696, 776, 800, 807, 810, 836, 837, 839, 842, 874, 881, 909, 917, 919, 923, 937, 939, 944, 981, 994, 1019, 1041, 1042, 1061, 1062, 1063, 1094, 1115, 1117, 1125, 1126, 1127, 1142, 1152, 1156, 1161, 1180, 1206, 1219, 1222, 1230, 1233, 1234, 1236, 1250, 1252, 1256, 1257, 1261, 1266, 1267, 1268, 1270, 1276, 1279, 1284, 1286, 1290, 1292, 1293, 1298, 1301, 1310, 1321, 1343, 1361, 1366, 1367, 1368, 1369, 1370, 1381, 1382, 1383, 1385, 1386, 1387, 1389, 1392, 1393, 1394, 1395, 1397, 1398, 1400, 1409, 1410, 1411, 1412, 1413, 1414, 1420, 1421, 1422, 1439, 1444, 1446, 1447, 1448, 1459, 1460, 1461, 1471, 1484, 1490, 1495, 1500, 1502, 1504, 1517, 1535, 1544, 1552, 1556, 1557, 1587, 1589, 1596, 1633, 1635, 1636, 1640, 1642, 1645, 1646, 1679, 1680, 1687, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1721, 1759, 1762, 1775, 1777, 1791, 1794, 1840, 1841, 1871, 1875, 1889, 1893, 1899, 1904, 1911, 1912, 1913, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1930, 1932, 1933, 1935, 1937, 1940, 1941, 1942, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1957, 1958, 1959, 1960, 1964, 1965], "decreas": [0, 49, 1051, 1266, 1392, 1393, 1394, 1398, 1466, 1667, 1668, 1708, 1715, 1723, 1905, 1907, 1932, 1934, 1953, 1956], "attempt": [0, 1, 8, 15, 16, 17, 29, 33, 43, 60, 61, 71, 100, 962, 968, 971, 982, 1225, 1231, 1310, 1602, 1635, 1636, 1696, 1697, 1875, 1878, 1896, 1899, 1912, 1913, 1918, 1922, 1924, 1936, 1940, 1941, 1949], "bring": [0, 22, 24, 67, 74, 1115, 1517, 1552, 1942], "number": [0, 1, 2, 3, 4, 5, 7, 12, 15, 16, 17, 19, 24, 29, 33, 40, 41, 43, 47, 48, 49, 51, 58, 59, 60, 63, 67, 69, 72, 74, 75, 80, 100, 107, 173, 192, 237, 251, 272, 331, 370, 395, 416, 420, 452, 463, 488, 490, 491, 498, 509, 513, 515, 529, 531, 533, 559, 561, 562, 574, 599, 600, 601, 603, 604, 605, 624, 633, 701, 702, 703, 704, 705, 706, 707, 714, 774, 776, 784, 785, 788, 789, 790, 797, 835, 881, 893, 906, 924, 936, 938, 939, 944, 948, 950, 954, 962, 963, 967, 981, 985, 986, 990, 1000, 1002, 1008, 1017, 1026, 1027, 1038, 1040, 1041, 1042, 1051, 1061, 1062, 1065, 1066, 1086, 1089, 1091, 1094, 1095, 1099, 1107, 1137, 1139, 1142, 1147, 1149, 1163, 1165, 1171, 1172, 1173, 1177, 1181, 1182, 1183, 1195, 1197, 1218, 1219, 1221, 1234, 1241, 1244, 1245, 1252, 1266, 1275, 1284, 1288, 1293, 1298, 1309, 1313, 1321, 1332, 1333, 1337, 1339, 1342, 1343, 1347, 1351, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1395, 1396, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1419, 1420, 1423, 1424, 1429, 1430, 1431, 1432, 1433, 1434, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1468, 1470, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1543, 1544, 1547, 1548, 1553, 1563, 1564, 1566, 1569, 1576, 1577, 1578, 1587, 1589, 1595, 1596, 1602, 1624, 1633, 1641, 1645, 1650, 1651, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1670, 1674, 1679, 1680, 1681, 1683, 1684, 1691, 1699, 1712, 1713, 1714, 1715, 1718, 1719, 1721, 1722, 1723, 1729, 1732, 1736, 1746, 1748, 1749, 1750, 1752, 1753, 1754, 1759, 1761, 1762, 1765, 1766, 1767, 1768, 1776, 1780, 1784, 1786, 1787, 1788, 1789, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1814, 1818, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1833, 1834, 1835, 1836, 1837, 1841, 1855, 1856, 1857, 1865, 1867, 1872, 1873, 1877, 1878, 1880, 1881, 1882, 1883, 1884, 1885, 1891, 1894, 1897, 1898, 1899, 1900, 1901, 1906, 1909, 1911, 1914, 1917, 1920, 1922, 1924, 1927, 1930, 1932, 1933, 1935, 1937, 1940, 1941, 1942, 1943, 1945, 1948, 1949, 1950, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1965], "expect": [0, 1, 3, 5, 7, 9, 13, 16, 17, 22, 23, 29, 40, 41, 43, 45, 47, 51, 58, 60, 62, 66, 71, 72, 74, 696, 713, 776, 870, 917, 918, 919, 920, 921, 922, 1040, 1115, 1117, 1134, 1135, 1136, 1155, 1156, 1195, 1218, 1221, 1236, 1237, 1265, 1286, 1287, 1321, 1372, 1373, 1389, 1405, 1406, 1407, 1408, 1417, 1418, 1419, 1423, 1424, 1425, 1435, 1436, 1437, 1453, 1459, 1460, 1468, 1470, 1486, 1492, 1496, 1498, 1500, 1505, 1543, 1549, 1563, 1587, 1595, 1596, 1608, 1621, 1622, 1623, 1624, 1633, 1667, 1724, 1780, 1849, 1884, 1893, 1894, 1901, 1919, 1922, 1923, 1926, 1927, 1930, 1937, 1940, 1941, 1944, 1945, 1946, 1953, 1958, 1960], "alwai": [0, 5, 7, 12, 15, 16, 33, 36, 40, 41, 43, 58, 62, 66, 70, 74, 358, 465, 475, 810, 896, 914, 917, 923, 937, 946, 956, 962, 968, 990, 1040, 1051, 1081, 1089, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1125, 1126, 1127, 1128, 1130, 1133, 1137, 1178, 1179, 1221, 1231, 1236, 1251, 1256, 1257, 1258, 1259, 1261, 1262, 1274, 1277, 1278, 1279, 1280, 1284, 1286, 1349, 1369, 1371, 1372, 1373, 1390, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1489, 1492, 1624, 1633, 1666, 1763, 1764, 1790, 1836, 1840, 1872, 1875, 1899, 1900, 1911, 1914, 1919, 1920, 1921, 1922, 1923, 1924, 1927, 1929, 1930, 1941, 1942, 1948, 1949, 1951, 1953, 1956, 1959, 1960], "abov": [0, 1, 3, 13, 14, 15, 17, 18, 19, 20, 21, 22, 29, 34, 43, 49, 53, 60, 62, 66, 67, 72, 74, 75, 77, 97, 633, 696, 808, 809, 896, 937, 946, 961, 1051, 1077, 1081, 1082, 1083, 1084, 1085, 1094, 1166, 1178, 1179, 1221, 1222, 1241, 1252, 1256, 1257, 1275, 1277, 1278, 1281, 1284, 1287, 1290, 1293, 1369, 1400, 1453, 1481, 1489, 1504, 1602, 1624, 1681, 1715, 1739, 1750, 1751, 1783, 1788, 1801, 1820, 1861, 1864, 1865, 1866, 1867, 1893, 1896, 1898, 1899, 1906, 1919, 1920, 1921, 1922, 1924, 1925, 1927, 1930, 1932, 1934, 1935, 1937, 1941, 1944, 1949, 1950, 1951, 1953, 1954, 1960], "our": [0, 3, 7, 8, 12, 15, 16, 17, 19, 20, 21, 22, 28, 29, 43, 56, 59, 60, 61, 63, 70, 71, 72, 74, 913, 1114, 1151, 1369, 1919, 1924, 1927, 1932, 1937, 1940, 1944, 1950, 1953], "NOT": [0, 40, 43, 51, 60, 61, 62, 74, 942, 1303, 1393, 1633, 1634, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1678, 1687, 1689, 1696, 1697, 1710, 1919, 1937, 1951, 1953], "make": [0, 1, 2, 3, 4, 5, 8, 15, 16, 17, 18, 19, 21, 22, 23, 26, 28, 29, 33, 34, 40, 41, 43, 45, 46, 48, 49, 51, 52, 57, 60, 61, 62, 63, 70, 71, 74, 75, 84, 158, 241, 512, 795, 801, 877, 878, 909, 959, 960, 961, 997, 998, 1000, 1082, 1098, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1134, 1135, 1136, 1196, 1221, 1225, 1230, 1231, 1250, 1251, 1263, 1264, 1265, 1293, 1369, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1414, 1453, 1463, 1500, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1552, 1554, 1563, 1602, 1621, 1633, 1640, 1656, 1673, 1678, 1717, 1780, 1813, 1822, 1823, 1824, 1826, 1827, 1858, 1875, 1878, 1893, 1896, 1898, 1899, 1903, 1909, 1911, 1912, 1914, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1930, 1932, 1934, 1936, 1937, 1938, 1940, 1941, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1956, 1958, 1962, 1964], "guarante": [0, 1, 5, 9, 15, 40, 43, 45, 47, 49, 60, 62, 71, 73, 74, 75, 892, 968, 1221, 1230, 1390, 1453, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1813, 1875, 1919, 1921, 1922, 1933, 1934, 1941, 1943, 1945, 1949, 1951], "encount": [0, 5, 13, 17, 20, 23, 25, 29, 43, 71, 73, 74, 696, 1633, 1896, 1899, 1901, 1905, 1921, 1933, 1941, 1944], "nan": [0, 1, 49, 444, 445, 515, 700, 702, 705, 706, 707, 710, 713, 714, 897, 901, 936, 952, 1095, 1096, 1097, 1140, 1141, 1142, 1181, 1210, 1211, 1213, 1214, 1260, 1267, 1280, 1283, 1296, 1301, 1319, 1320, 1324, 1347, 1348, 1349, 1350, 1351, 1552, 1637, 1733, 1770, 1775, 1829, 1863, 1875, 1897, 1906, 1918, 1919, 1925, 1933, 1954, 1960], "verifi": [0, 19, 27, 43, 74, 102, 924, 1077, 1691, 1692, 1710, 1861, 1893, 1896, 1908, 1924, 1927, 1937, 1942], "compat": [0, 1, 33, 40, 45, 49, 51, 64, 66, 70, 71, 74, 75, 513, 514, 619, 633, 696, 831, 832, 833, 906, 949, 979, 980, 1221, 1226, 1238, 1251, 1262, 1275, 1278, 1453, 1459, 1497, 1498, 1499, 1500, 1563, 1677, 1687, 1689, 1762, 1893, 1894, 1898, 1899, 1905, 1911, 1912, 1918, 1924, 1935, 1937, 1941, 1943, 1944, 1947, 1949, 1953, 1955], "init_scal": 0, "65536": 0, "0": [0, 1, 3, 12, 13, 14, 15, 17, 19, 20, 21, 22, 25, 28, 31, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 173, 175, 192, 203, 210, 227, 243, 244, 245, 246, 247, 272, 278, 281, 307, 316, 318, 329, 331, 333, 335, 339, 370, 419, 420, 444, 445, 462, 465, 466, 471, 498, 500, 504, 512, 523, 524, 529, 531, 533, 536, 554, 559, 560, 563, 572, 574, 576, 594, 596, 597, 599, 600, 601, 603, 604, 605, 611, 612, 613, 614, 621, 623, 624, 633, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 728, 729, 730, 731, 732, 733, 734, 735, 739, 740, 741, 742, 743, 746, 747, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 767, 768, 769, 771, 772, 773, 774, 776, 784, 785, 786, 788, 789, 790, 791, 794, 796, 798, 799, 801, 810, 812, 815, 818, 833, 836, 837, 838, 841, 870, 872, 881, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 914, 917, 918, 919, 921, 924, 925, 927, 929, 930, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 955, 956, 957, 958, 959, 960, 961, 962, 963, 966, 977, 978, 981, 982, 983, 984, 985, 986, 994, 1000, 1009, 1011, 1037, 1038, 1064, 1068, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1092, 1094, 1096, 1097, 1104, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1150, 1152, 1153, 1154, 1155, 1156, 1160, 1161, 1162, 1163, 1164, 1174, 1178, 1180, 1181, 1182, 1183, 1184, 1187, 1191, 1195, 1198, 1206, 1217, 1218, 1219, 1221, 1225, 1227, 1228, 1232, 1240, 1241, 1242, 1243, 1244, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1262, 1263, 1264, 1265, 1266, 1267, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1300, 1301, 1302, 1303, 1304, 1305, 1307, 1310, 1314, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1327, 1328, 1338, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1355, 1357, 1359, 1360, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1441, 1443, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1480, 1484, 1486, 1487, 1488, 1490, 1492, 1495, 1496, 1498, 1500, 1501, 1502, 1504, 1505, 1508, 1509, 1510, 1517, 1518, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1547, 1548, 1550, 1552, 1555, 1556, 1557, 1560, 1561, 1562, 1563, 1567, 1568, 1570, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1587, 1588, 1589, 1590, 1591, 1592, 1595, 1596, 1598, 1602, 1603, 1606, 1608, 1611, 1617, 1618, 1619, 1620, 1621, 1624, 1633, 1637, 1640, 1641, 1645, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1666, 1667, 1669, 1670, 1672, 1673, 1674, 1675, 1677, 1679, 1680, 1681, 1685, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1730, 1732, 1733, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1758, 1759, 1760, 1761, 1762, 1765, 1766, 1767, 1768, 1770, 1771, 1775, 1777, 1778, 1779, 1782, 1784, 1788, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1809, 1813, 1815, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1833, 1834, 1835, 1836, 1837, 1839, 1840, 1842, 1843, 1849, 1850, 1852, 1853, 1854, 1855, 1856, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1870, 1872, 1873, 1874, 1875, 1877, 1880, 1881, 1882, 1884, 1885, 1886, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1906, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1950, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1964, 1965], "growth_factor": 0, "backoff_factor": 0, "5": [0, 1, 10, 14, 17, 18, 25, 28, 29, 31, 33, 37, 38, 40, 41, 43, 49, 58, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 173, 210, 227, 278, 307, 316, 331, 333, 335, 339, 419, 420, 462, 488, 515, 529, 531, 533, 539, 553, 560, 574, 576, 600, 601, 602, 603, 604, 623, 701, 702, 706, 713, 750, 755, 756, 757, 758, 759, 761, 762, 776, 778, 789, 790, 877, 878, 881, 896, 902, 903, 904, 917, 920, 922, 936, 939, 946, 947, 948, 952, 954, 958, 961, 962, 963, 966, 981, 985, 1073, 1075, 1077, 1084, 1086, 1088, 1089, 1092, 1093, 1094, 1097, 1110, 1112, 1114, 1115, 1121, 1122, 1125, 1130, 1133, 1134, 1137, 1140, 1142, 1143, 1144, 1152, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1164, 1174, 1180, 1182, 1184, 1186, 1187, 1198, 1206, 1210, 1227, 1231, 1232, 1241, 1242, 1243, 1246, 1249, 1250, 1267, 1270, 1273, 1276, 1277, 1278, 1279, 1284, 1285, 1288, 1290, 1291, 1293, 1294, 1295, 1296, 1297, 1303, 1307, 1314, 1315, 1321, 1322, 1326, 1350, 1352, 1353, 1355, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1370, 1371, 1372, 1373, 1377, 1378, 1379, 1380, 1382, 1383, 1385, 1386, 1387, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1407, 1408, 1409, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1441, 1444, 1449, 1450, 1453, 1460, 1463, 1467, 1468, 1474, 1475, 1476, 1477, 1478, 1481, 1484, 1490, 1492, 1496, 1498, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1518, 1519, 1527, 1528, 1530, 1531, 1535, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1547, 1548, 1550, 1552, 1555, 1563, 1587, 1589, 1595, 1611, 1621, 1622, 1623, 1633, 1645, 1655, 1658, 1660, 1661, 1663, 1668, 1669, 1671, 1673, 1679, 1680, 1681, 1683, 1684, 1687, 1691, 1706, 1708, 1710, 1712, 1718, 1722, 1728, 1730, 1732, 1733, 1735, 1736, 1739, 1740, 1743, 1744, 1745, 1746, 1750, 1755, 1756, 1759, 1760, 1766, 1767, 1768, 1775, 1788, 1795, 1797, 1798, 1799, 1800, 1803, 1804, 1813, 1818, 1820, 1821, 1822, 1823, 1825, 1828, 1836, 1839, 1840, 1841, 1842, 1843, 1850, 1852, 1854, 1855, 1856, 1858, 1859, 1861, 1870, 1871, 1875, 1880, 1886, 1887, 1888, 1891, 1896, 1897, 1898, 1899, 1900, 1906, 1913, 1914, 1917, 1918, 1919, 1920, 1922, 1924, 1926, 1927, 1930, 1931, 1935, 1936, 1937, 1940, 1942, 1944, 1949, 1953, 1954, 1956, 1958, 1959, 1960], "growth_interv": 0, "2000": [0, 43, 47, 1112, 1114, 1121, 1130, 1143, 1298, 1505, 1715, 1743, 1793, 1794, 1854], "get_backoff_factor": 0, "python": [0, 1, 3, 4, 9, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 29, 33, 34, 37, 40, 43, 47, 49, 50, 51, 53, 54, 57, 58, 60, 61, 66, 74, 75, 82, 83, 370, 605, 640, 696, 797, 896, 917, 918, 919, 920, 921, 922, 924, 925, 954, 955, 967, 968, 970, 1031, 1037, 1038, 1040, 1089, 1094, 1112, 1114, 1142, 1147, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1197, 1219, 1221, 1222, 1224, 1225, 1226, 1231, 1232, 1236, 1292, 1454, 1455, 1463, 1464, 1602, 1633, 1733, 1755, 1759, 1779, 1780, 1815, 1878, 1879, 1886, 1893, 1903, 1905, 1910, 1911, 1913, 1919, 1920, 1921, 1922, 1923, 1925, 1926, 1929, 1932, 1935, 1936, 1941, 1944, 1948, 1949, 1950, 1951, 1956, 1959, 1960, 1964], "contain": [0, 1, 2, 3, 5, 11, 13, 16, 20, 22, 24, 28, 29, 31, 33, 34, 40, 43, 44, 47, 48, 49, 51, 53, 54, 58, 61, 66, 73, 74, 75, 76, 81, 83, 98, 107, 169, 173, 210, 214, 227, 308, 329, 331, 333, 337, 339, 488, 500, 560, 619, 623, 702, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 776, 830, 853, 857, 893, 908, 909, 917, 918, 919, 920, 921, 922, 923, 933, 936, 937, 938, 946, 948, 952, 970, 981, 982, 986, 996, 1007, 1008, 1009, 1010, 1011, 1040, 1094, 1128, 1129, 1131, 1137, 1157, 1158, 1161, 1162, 1178, 1179, 1182, 1183, 1191, 1195, 1212, 1219, 1221, 1222, 1227, 1228, 1231, 1236, 1237, 1240, 1251, 1257, 1258, 1259, 1260, 1262, 1264, 1266, 1267, 1283, 1292, 1310, 1314, 1321, 1343, 1349, 1361, 1370, 1389, 1390, 1396, 1397, 1400, 1405, 1406, 1408, 1413, 1423, 1424, 1445, 1453, 1454, 1455, 1460, 1463, 1468, 1470, 1481, 1485, 1492, 1504, 1535, 1543, 1544, 1546, 1617, 1624, 1627, 1628, 1633, 1641, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1673, 1674, 1677, 1679, 1687, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1729, 1732, 1757, 1771, 1775, 1835, 1836, 1840, 1856, 1863, 1865, 1867, 1872, 1873, 1877, 1878, 1882, 1886, 1894, 1896, 1898, 1899, 1900, 1906, 1909, 1913, 1914, 1918, 1919, 1923, 1924, 1925, 1926, 1927, 1929, 1930, 1933, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1946, 1947, 1949, 1951, 1953, 1955, 1956, 1958, 1959, 1961, 1962, 1963, 1964], "backoff": [0, 1949], "get_growth_factor": 0, "growth": [0, 8], "get_growth_interv": 0, "int": [0, 2, 3, 15, 20, 28, 37, 40, 41, 43, 45, 47, 48, 49, 51, 54, 57, 58, 60, 61, 63, 66, 74, 75, 82, 83, 84, 107, 235, 237, 251, 260, 272, 331, 333, 335, 339, 454, 461, 462, 464, 466, 474, 489, 493, 509, 513, 515, 529, 531, 533, 536, 553, 559, 561, 562, 574, 576, 582, 599, 600, 601, 603, 604, 623, 633, 696, 709, 711, 712, 713, 715, 771, 772, 791, 793, 795, 796, 801, 802, 803, 835, 890, 891, 892, 894, 908, 915, 928, 937, 939, 946, 953, 955, 962, 967, 985, 986, 989, 990, 993, 994, 996, 998, 1000, 1002, 1003, 1006, 1007, 1008, 1009, 1010, 1011, 1013, 1014, 1015, 1016, 1017, 1022, 1023, 1024, 1026, 1028, 1032, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1063, 1064, 1065, 1068, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1082, 1083, 1084, 1085, 1086, 1092, 1095, 1097, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1147, 1148, 1152, 1153, 1154, 1155, 1156, 1162, 1163, 1169, 1171, 1172, 1174, 1178, 1179, 1181, 1182, 1183, 1184, 1195, 1197, 1218, 1219, 1221, 1222, 1224, 1227, 1232, 1240, 1242, 1252, 1253, 1273, 1274, 1277, 1286, 1287, 1288, 1289, 1290, 1291, 1293, 1300, 1307, 1308, 1313, 1318, 1320, 1321, 1323, 1326, 1328, 1329, 1330, 1333, 1343, 1348, 1349, 1350, 1351, 1352, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1371, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1390, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1406, 1408, 1416, 1417, 1418, 1421, 1422, 1424, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1438, 1440, 1441, 1443, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1455, 1458, 1460, 1461, 1464, 1465, 1466, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1486, 1488, 1489, 1492, 1496, 1498, 1500, 1501, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1534, 1535, 1536, 1543, 1544, 1551, 1554, 1563, 1571, 1587, 1588, 1589, 1593, 1594, 1608, 1609, 1617, 1621, 1622, 1623, 1633, 1641, 1650, 1651, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1667, 1669, 1674, 1677, 1680, 1681, 1683, 1684, 1687, 1689, 1691, 1692, 1699, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1729, 1730, 1737, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1750, 1751, 1752, 1754, 1760, 1761, 1762, 1765, 1766, 1767, 1768, 1771, 1776, 1777, 1778, 1782, 1786, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1809, 1813, 1816, 1819, 1820, 1821, 1828, 1831, 1833, 1834, 1835, 1836, 1839, 1841, 1845, 1851, 1855, 1856, 1858, 1860, 1861, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1874, 1877, 1878, 1880, 1881, 1882, 1886, 1887, 1891, 1895, 1896, 1897, 1898, 1899, 1900, 1909, 1911, 1912, 1914, 1917, 1922, 1925, 1932, 1935, 1937, 1939, 1942, 1943, 1944, 1948, 1949, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1965], "interv": [0, 49, 62, 881, 982, 1144, 1334, 1335, 1724, 1748, 1749, 1797, 1909, 1922, 1943], "get_scal": [0, 1918], "sync": [0, 12, 16, 43, 47, 66, 73, 74, 1633, 1922, 1923, 1942], "is_en": [0, 1815, 1822, 1823, 1824, 1825, 1826, 1827], "indic": [0, 1, 2, 3, 18, 20, 29, 40, 41, 43, 44, 48, 49, 60, 98, 99, 210, 227, 240, 331, 333, 335, 336, 337, 339, 488, 529, 531, 533, 560, 588, 589, 599, 630, 711, 712, 751, 761, 762, 890, 891, 892, 893, 894, 914, 924, 925, 952, 959, 960, 973, 991, 995, 997, 998, 1000, 1034, 1073, 1074, 1097, 1152, 1153, 1155, 1156, 1157, 1161, 1162, 1163, 1174, 1195, 1219, 1221, 1226, 1234, 1237, 1238, 1242, 1251, 1262, 1264, 1275, 1278, 1292, 1300, 1308, 1310, 1312, 1318, 1321, 1323, 1326, 1343, 1349, 1353, 1361, 1362, 1363, 1364, 1389, 1396, 1397, 1401, 1402, 1447, 1448, 1449, 1450, 1451, 1456, 1458, 1459, 1514, 1515, 1516, 1535, 1543, 1544, 1547, 1548, 1564, 1579, 1580, 1581, 1589, 1602, 1617, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1659, 1660, 1679, 1680, 1719, 1721, 1740, 1775, 1813, 1817, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1850, 1851, 1855, 1858, 1864, 1865, 1866, 1867, 1872, 1873, 1875, 1876, 1878, 1886, 1889, 1895, 1896, 1897, 1899, 1903, 1912, 1913, 1924, 1932, 1935, 1937, 1939, 1949, 1953, 1957, 1958, 1960], "load_state_dict": [0, 41, 45, 47, 66, 1221, 1292, 1453, 1624, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1893, 1894, 1930, 1935, 1944], "state_dict": [0, 41, 45, 47, 66, 852, 853, 1221, 1453, 1624, 1659, 1677, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1893, 1908, 1923, 1930, 1932, 1935, 1937, 1944, 1962], "load": [0, 1, 19, 22, 25, 29, 31, 33, 34, 41, 45, 47, 66, 853, 878, 932, 968, 996, 1225, 1231, 1236, 1397, 1624, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1771, 1894, 1896, 1907, 1908, 1913, 1919, 1922, 1929, 1930, 1934, 1936, 1937, 1958], "scaler": [0, 1918, 1922], "dict": [0, 3, 5, 23, 28, 40, 41, 43, 44, 45, 47, 48, 49, 51, 54, 58, 62, 66, 68, 70, 74, 696, 808, 809, 810, 831, 832, 833, 852, 870, 926, 968, 1037, 1038, 1051, 1060, 1150, 1160, 1162, 1219, 1220, 1221, 1222, 1227, 1232, 1236, 1237, 1292, 1293, 1390, 1400, 1453, 1454, 1463, 1504, 1624, 1633, 1656, 1675, 1687, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1886, 1893, 1896, 1897, 1899, 1900, 1908, 1909, 1924, 1930, 1935, 1937, 1939, 1940, 1949, 1950, 1958, 1962, 1963, 1964], "object": [0, 1, 3, 5, 6, 8, 13, 14, 16, 20, 23, 28, 33, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 60, 62, 66, 73, 74, 75, 77, 90, 107, 225, 228, 619, 809, 810, 870, 877, 896, 906, 907, 908, 933, 935, 968, 1018, 1029, 1069, 1094, 1133, 1145, 1147, 1152, 1153, 1155, 1156, 1157, 1161, 1207, 1208, 1221, 1227, 1228, 1231, 1232, 1236, 1237, 1252, 1273, 1277, 1290, 1292, 1293, 1313, 1390, 1392, 1393, 1394, 1398, 1416, 1417, 1418, 1453, 1463, 1492, 1633, 1643, 1658, 1667, 1668, 1671, 1672, 1673, 1687, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1702, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1771, 1844, 1845, 1848, 1876, 1879, 1893, 1898, 1899, 1900, 1903, 1907, 1908, 1911, 1915, 1919, 1921, 1922, 1924, 1925, 1926, 1927, 1929, 1932, 1934, 1935, 1936, 1937, 1940, 1944, 1946, 1947, 1948, 1949, 1951, 1955, 1956, 1958, 1960, 1964, 1965], "unmodifi": [0, 26, 43], "iter": [0, 1, 2, 3, 7, 17, 20, 28, 29, 41, 43, 44, 45, 47, 49, 61, 63, 66, 74, 75, 80, 1007, 1008, 1009, 1010, 1011, 1040, 1043, 1045, 1066, 1221, 1293, 1453, 1454, 1455, 1463, 1464, 1633, 1634, 1637, 1638, 1639, 1641, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1674, 1676, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1718, 1729, 1799, 1841, 1897, 1899, 1900, 1911, 1913, 1918, 1919, 1920, 1922, 1923, 1924, 1927, 1930, 1940, 1943, 1948, 1958, 1964], "set_backoff_factor": 0, "new_factor": 0, "new_scal": 0, "set_growth_factor": 0, "set_growth_interv": 0, "new_interv": 0, "It": [0, 1, 3, 4, 5, 7, 8, 12, 13, 15, 16, 17, 19, 20, 22, 26, 28, 29, 36, 37, 40, 41, 43, 44, 45, 48, 49, 51, 53, 57, 58, 59, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 99, 169, 215, 490, 491, 529, 531, 533, 560, 573, 905, 906, 907, 908, 909, 913, 968, 970, 973, 975, 979, 980, 1011, 1016, 1022, 1023, 1041, 1042, 1061, 1062, 1070, 1117, 1146, 1151, 1154, 1162, 1163, 1182, 1218, 1221, 1222, 1227, 1231, 1253, 1257, 1261, 1264, 1266, 1268, 1269, 1274, 1278, 1279, 1281, 1282, 1284, 1286, 1289, 1290, 1292, 1293, 1301, 1361, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1400, 1447, 1448, 1449, 1450, 1451, 1453, 1460, 1481, 1484, 1504, 1506, 1554, 1564, 1608, 1626, 1627, 1628, 1631, 1632, 1633, 1641, 1642, 1645, 1666, 1669, 1670, 1678, 1687, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1727, 1746, 1759, 1775, 1785, 1791, 1798, 1819, 1871, 1886, 1893, 1898, 1899, 1909, 1911, 1913, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1936, 1937, 1938, 1940, 1941, 1942, 1944, 1949, 1950, 1951, 1953, 1954, 1955, 1957, 1961], "five": [0, 1899, 1935], "entri": [0, 3, 13, 15, 20, 43, 44, 47, 49, 58, 60, 61, 333, 751, 874, 875, 933, 1037, 1038, 1084, 1135, 1136, 1195, 1221, 1241, 1396, 1397, 1453, 1459, 1543, 1544, 1629, 1630, 1651, 1652, 1660, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1819, 1896, 1899, 1900, 1906, 1914, 1919, 1923, 1924, 1927, 1930, 1947, 1953, 1958, 1962], "_growth_track": 0, "recent": [0, 1, 7, 8, 24, 29, 63, 73, 1196, 1206, 1815, 1898, 1899, 1914, 1924, 1933, 1934, 1953, 1960], "consecut": [0, 43, 66, 626, 1668, 1711, 1861, 1872, 1873, 1913, 1937], "unskip": 0, "empti": [0, 3, 15, 16, 25, 43, 45, 51, 58, 66, 71, 74, 339, 529, 531, 539, 553, 561, 833, 938, 939, 949, 955, 1094, 1096, 1219, 1222, 1246, 1266, 1267, 1272, 1279, 1302, 1303, 1304, 1305, 1312, 1370, 1389, 1397, 1460, 1525, 1544, 1590, 1673, 1685, 1689, 1825, 1840, 1854, 1875, 1892, 1895, 1896, 1897, 1898, 1899, 1901, 1907, 1912, 1913, 1914, 1917, 1920, 1922, 1924, 1937, 1939, 1941, 1953, 1954, 1961], "wish": [0, 1157, 1831, 1918, 1922, 1924, 1925], "checkpoint": [0, 12, 47, 61, 63, 66, 932, 1292, 1633, 1687, 1893, 1894, 1908, 1926, 1935, 1942, 1951], "kwarg": [0, 1, 5, 13, 14, 28, 29, 33, 40, 43, 44, 47, 60, 66, 74, 75, 596, 619, 763, 776, 778, 779, 837, 838, 840, 843, 906, 972, 998, 1000, 1037, 1038, 1150, 1161, 1162, 1221, 1224, 1226, 1284, 1310, 1405, 1415, 1423, 1442, 1453, 1468, 1483, 1487, 1491, 1493, 1494, 1624, 1629, 1633, 1647, 1652, 1656, 1666, 1673, 1675, 1678, 1688, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1771, 1873, 1886, 1893, 1899, 1900, 1924, 1925, 1930, 1938, 1940, 1949, 1955, 1963, 1964], "carri": [0, 70, 354, 813, 854, 855, 873, 874, 1920, 1944], "out": [0, 1, 2, 3, 7, 8, 9, 15, 16, 17, 19, 20, 21, 22, 25, 28, 31, 34, 37, 40, 43, 45, 48, 49, 57, 58, 61, 67, 70, 74, 75, 79, 81, 330, 332, 334, 336, 417, 419, 465, 512, 528, 530, 532, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 713, 714, 715, 772, 776, 780, 788, 789, 790, 795, 797, 801, 813, 852, 854, 855, 873, 874, 881, 882, 883, 884, 885, 886, 887, 888, 893, 897, 898, 899, 900, 901, 910, 911, 912, 915, 924, 936, 938, 939, 940, 941, 942, 943, 944, 945, 948, 952, 955, 957, 958, 959, 960, 961, 963, 964, 966, 968, 976, 977, 978, 980, 981, 983, 984, 994, 999, 1007, 1009, 1011, 1038, 1039, 1051, 1052, 1064, 1068, 1073, 1074, 1075, 1076, 1078, 1081, 1086, 1087, 1089, 1090, 1091, 1093, 1094, 1095, 1099, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1147, 1148, 1151, 1152, 1154, 1155, 1157, 1162, 1163, 1164, 1165, 1166, 1167, 1175, 1176, 1177, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1188, 1189, 1190, 1192, 1193, 1194, 1195, 1196, 1198, 1199, 1215, 1216, 1221, 1232, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1338, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1353, 1354, 1355, 1356, 1357, 1358, 1362, 1363, 1364, 1366, 1367, 1368, 1374, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1396, 1398, 1401, 1402, 1405, 1406, 1421, 1422, 1423, 1438, 1440, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1465, 1466, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1496, 1497, 1498, 1499, 1500, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1523, 1527, 1528, 1529, 1530, 1531, 1532, 1538, 1539, 1540, 1545, 1548, 1552, 1563, 1569, 1588, 1590, 1621, 1633, 1650, 1651, 1652, 1653, 1679, 1680, 1681, 1682, 1684, 1685, 1688, 1710, 1727, 1728, 1732, 1733, 1734, 1736, 1739, 1740, 1746, 1747, 1748, 1750, 1752, 1754, 1755, 1758, 1759, 1760, 1764, 1768, 1769, 1770, 1772, 1773, 1774, 1775, 1791, 1792, 1793, 1805, 1806, 1807, 1808, 1813, 1817, 1818, 1829, 1830, 1832, 1833, 1834, 1835, 1837, 1838, 1840, 1851, 1852, 1853, 1856, 1858, 1860, 1863, 1864, 1866, 1868, 1869, 1875, 1881, 1882, 1883, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1906, 1909, 1911, 1913, 1914, 1919, 1920, 1922, 1923, 1924, 1925, 1930, 1932, 1937, 1940, 1941, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1954, 1956, 1958, 1959, 1963, 1964], "follow": [0, 1, 2, 3, 5, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 25, 29, 31, 33, 34, 37, 38, 39, 40, 41, 43, 45, 47, 48, 49, 51, 57, 58, 59, 60, 61, 66, 68, 70, 71, 74, 75, 77, 82, 83, 97, 98, 99, 504, 633, 696, 776, 795, 801, 808, 809, 810, 816, 830, 831, 832, 833, 835, 836, 837, 838, 840, 841, 870, 877, 878, 905, 906, 907, 911, 929, 930, 952, 957, 1037, 1051, 1094, 1112, 1114, 1138, 1147, 1160, 1174, 1221, 1222, 1230, 1234, 1241, 1252, 1263, 1273, 1276, 1277, 1290, 1293, 1312, 1315, 1361, 1370, 1376, 1389, 1397, 1400, 1405, 1423, 1453, 1468, 1484, 1500, 1504, 1571, 1602, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1640, 1680, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1718, 1721, 1729, 1740, 1768, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1815, 1816, 1817, 1818, 1825, 1836, 1861, 1869, 1875, 1878, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1906, 1907, 1908, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1959, 1960, 1964, 1965], "two": [0, 1, 3, 4, 5, 6, 8, 12, 13, 15, 16, 25, 29, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 49, 51, 57, 58, 60, 61, 66, 70, 71, 74, 99, 100, 599, 600, 601, 603, 604, 623, 633, 696, 708, 710, 776, 809, 903, 906, 919, 924, 956, 958, 1004, 1043, 1045, 1073, 1074, 1082, 1091, 1094, 1100, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1140, 1141, 1150, 1160, 1182, 1184, 1210, 1219, 1221, 1231, 1234, 1241, 1244, 1246, 1251, 1253, 1256, 1257, 1262, 1263, 1268, 1273, 1276, 1277, 1279, 1280, 1282, 1284, 1289, 1292, 1315, 1318, 1321, 1323, 1326, 1350, 1367, 1369, 1370, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1400, 1405, 1413, 1414, 1420, 1422, 1423, 1444, 1445, 1447, 1453, 1456, 1457, 1458, 1460, 1461, 1467, 1468, 1484, 1485, 1500, 1501, 1502, 1504, 1524, 1525, 1535, 1554, 1564, 1571, 1587, 1595, 1602, 1640, 1645, 1667, 1677, 1679, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1714, 1715, 1717, 1721, 1740, 1755, 1768, 1820, 1825, 1840, 1856, 1860, 1861, 1863, 1883, 1887, 1893, 1895, 1896, 1898, 1899, 1903, 1905, 1906, 1912, 1913, 1914, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1930, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1945, 1949, 1950, 1951, 1953, 1954, 1958, 1959, 1960, 1962, 1963], "unscale_": [0, 1918], "unless": [0, 1, 4, 7, 15, 41, 43, 62, 66, 67, 74, 169, 515, 856, 874, 913, 939, 1150, 1221, 1264, 1269, 1282, 1292, 1321, 1407, 1453, 1500, 1628, 1656, 1675, 1704, 1710, 1775, 1875, 1899, 1905, 1919, 1922, 1934, 1937, 1941, 1945], "explicitli": [0, 8, 15, 33, 43, 48, 53, 66, 101, 1031, 1082, 1084, 1094, 1183, 1261, 1274, 1278, 1286, 1328, 1563, 1621, 1721, 1836, 1896, 1898, 1899, 1900, 1905, 1922, 1924, 1927, 1929, 1935, 1937, 1941, 1942, 1948, 1949, 1953], "earlier": [0, 1, 6, 18, 66, 1840, 1919, 1922, 1926, 1929, 1935, 1937, 1943], "part": [0, 1, 3, 4, 5, 6, 7, 9, 13, 16, 17, 18, 25, 28, 29, 33, 34, 37, 40, 41, 43, 45, 49, 60, 61, 66, 70, 71, 74, 97, 98, 857, 923, 976, 1094, 1211, 1213, 1214, 1217, 1221, 1231, 1233, 1236, 1237, 1251, 1257, 1259, 1268, 1275, 1278, 1453, 1492, 1602, 1633, 1643, 1713, 1740, 1821, 1861, 1864, 1865, 1866, 1867, 1893, 1894, 1896, 1898, 1899, 1907, 1908, 1918, 1919, 1922, 1924, 1926, 1927, 1930, 1935, 1937, 1941, 1942, 1944, 1949, 1950, 1951, 1953, 1958, 1960], "check": [0, 4, 5, 11, 14, 15, 16, 17, 18, 20, 21, 22, 28, 29, 31, 33, 40, 43, 44, 49, 51, 60, 66, 75, 76, 81, 83, 240, 358, 515, 710, 877, 913, 915, 916, 924, 925, 970, 997, 998, 1000, 1004, 1033, 1051, 1208, 1218, 1221, 1236, 1237, 1250, 1251, 1256, 1257, 1259, 1262, 1264, 1269, 1275, 1278, 1282, 1284, 1285, 1310, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1453, 1624, 1633, 1642, 1645, 1658, 1668, 1691, 1692, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1876, 1878, 1893, 1894, 1898, 1899, 1900, 1912, 1913, 1918, 1922, 1924, 1925, 1926, 1929, 1930, 1931, 1934, 1937, 1940, 1941, 1942, 1943, 1949, 1953, 1958, 1960, 1964], "inf": [0, 29, 49, 66, 700, 702, 705, 706, 707, 901, 936, 952, 1210, 1211, 1213, 1215, 1216, 1252, 1267, 1273, 1277, 1280, 1290, 1301, 1347, 1443, 1486, 1496, 1602, 1637, 1651, 1660, 1680, 1768, 1775, 1918, 1919, 1925, 1933, 1954, 1960], "found": [0, 7, 13, 16, 19, 22, 24, 28, 34, 35, 37, 60, 74, 98, 100, 101, 102, 952, 994, 1073, 1074, 1221, 1225, 1242, 1318, 1321, 1323, 1326, 1349, 1365, 1375, 1398, 1453, 1480, 1775, 1893, 1896, 1899, 1914, 1918, 1924, 1927, 1930, 1932, 1937, 1941, 1943, 1944, 1949, 1958, 1964], "otherwis": [0, 1, 3, 5, 7, 9, 31, 33, 40, 43, 44, 50, 53, 66, 67, 71, 74, 107, 228, 339, 346, 350, 354, 356, 360, 361, 511, 520, 576, 596, 597, 599, 619, 633, 696, 702, 703, 704, 705, 706, 709, 711, 712, 713, 715, 751, 776, 784, 785, 800, 810, 833, 836, 837, 877, 878, 881, 908, 911, 919, 924, 936, 952, 1035, 1094, 1100, 1133, 1145, 1212, 1218, 1221, 1224, 1227, 1233, 1242, 1266, 1281, 1290, 1292, 1293, 1308, 1313, 1318, 1320, 1321, 1323, 1325, 1326, 1348, 1351, 1367, 1368, 1387, 1389, 1392, 1393, 1394, 1398, 1405, 1409, 1410, 1411, 1412, 1414, 1423, 1439, 1453, 1457, 1458, 1459, 1460, 1461, 1463, 1468, 1469, 1471, 1484, 1490, 1492, 1495, 1496, 1498, 1500, 1501, 1502, 1520, 1521, 1554, 1556, 1557, 1561, 1596, 1606, 1633, 1640, 1645, 1666, 1670, 1678, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1704, 1706, 1707, 1708, 1709, 1727, 1729, 1737, 1739, 1746, 1755, 1762, 1775, 1783, 1791, 1834, 1835, 1836, 1839, 1871, 1872, 1873, 1881, 1882, 1889, 1893, 1896, 1898, 1899, 1906, 1907, 1912, 1918, 1924, 1925, 1932, 1937, 1944, 1945, 1947, 1948, 1949, 1951, 1954, 1955, 1956, 1957, 1958, 1960, 1964], "skip": [0, 15, 18, 20, 60, 875, 970, 1094, 1147, 1250, 1251, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1809, 1877, 1896, 1918, 1919, 1922, 1923, 1924, 1930, 1940, 1943], "avoid": [0, 5, 8, 9, 15, 16, 17, 18, 20, 40, 43, 49, 58, 61, 66, 74, 75, 82, 83, 210, 227, 465, 797, 881, 909, 949, 968, 1051, 1221, 1266, 1292, 1388, 1419, 1420, 1444, 1453, 1462, 1467, 1504, 1534, 1564, 1588, 1595, 1633, 1641, 1710, 1761, 1790, 1836, 1854, 1872, 1894, 1909, 1913, 1919, 1921, 1922, 1926, 1927, 1930, 1942, 1949, 1950, 1957, 1958, 1959], "corrupt": [0, 43, 60, 1390, 1922, 1932], "param": [0, 1, 47, 49, 52, 60, 66, 68, 70, 74, 780, 811, 1150, 1160, 1221, 1239, 1453, 1459, 1463, 1464, 1632, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709, 1710, 1723, 1877, 1897, 1907, 1917, 1918, 1922, 1923, 1940, 1964], "appli": [0, 1, 3, 5, 8, 11, 12, 14, 18, 28, 41, 45, 47, 48, 49, 51, 53, 60, 66, 70, 71, 72, 74, 75, 84, 97, 98, 138, 339, 416, 489, 529, 533, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 751, 754, 755, 756, 757, 758, 759, 774, 776, 782, 783, 784, 785, 786, 787, 788, 789, 790, 796, 797, 798, 799, 800, 826, 827, 828, 829, 856, 874, 913, 915, 916, 924, 941, 944, 970, 981, 1082, 1084, 1089, 1098, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1142, 1150, 1151, 1158, 1161, 1162, 1221, 1225, 1270, 1293, 1310, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1395, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1467, 1468, 1471, 1472, 1473, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1545, 1547, 1548, 1549, 1550, 1553, 1555, 1556, 1557, 1558, 1562, 1563, 1564, 1566, 1567, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1582, 1587, 1595, 1596, 1597, 1598, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1624, 1629, 1630, 1633, 1640, 1641, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1666, 1667, 1674, 1675, 1677, 1678, 1680, 1694, 1706, 1710, 1723, 1736, 1741, 1742, 1743, 1744, 1745, 1785, 1816, 1817, 1819, 1836, 1872, 1873, 1874, 1886, 1896, 1899, 1906, 1911, 1913, 1918, 1919, 1922, 1923, 1924, 1925, 1927, 1930, 1933, 1937, 1940, 1941, 1942, 1944, 1947, 1950, 1953, 1954], "argumentkeyword": [0, 1, 5, 40, 43, 44, 47, 71, 74, 75, 81, 99, 107, 331, 339, 462, 463, 464, 465, 466, 597, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 711, 712, 713, 714, 715, 877, 881, 896, 897, 898, 899, 900, 901, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 948, 952, 955, 957, 959, 960, 961, 963, 965, 966, 976, 980, 981, 983, 984, 986, 994, 1007, 1009, 1011, 1037, 1038, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1086, 1089, 1091, 1093, 1095, 1096, 1097, 1099, 1104, 1107, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1137, 1138, 1139, 1140, 1141, 1142, 1144, 1147, 1148, 1149, 1150, 1163, 1164, 1165, 1166, 1174, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1195, 1198, 1215, 1216, 1221, 1224, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1311, 1312, 1314, 1315, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1341, 1342, 1343, 1345, 1347, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1357, 1390, 1412, 1415, 1453, 1627, 1628, 1633, 1645, 1647, 1652, 1656, 1675, 1679, 1681, 1684, 1685, 1687, 1727, 1728, 1732, 1733, 1736, 1737, 1739, 1740, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1760, 1761, 1768, 1770, 1775, 1791, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1808, 1813, 1815, 1818, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1832, 1833, 1834, 1835, 1837, 1839, 1840, 1851, 1852, 1853, 1854, 1858, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1875, 1881, 1882, 1883, 1888, 1889, 1891, 1892, 1893, 1899, 1900, 1913, 1914, 1924, 1933, 1937, 1940, 1949, 1953, 1954, 1958, 1964], "closur": [0, 18, 47, 75, 82, 83, 970, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710], "divid": [0, 5, 41, 43, 47, 256, 599, 600, 601, 1011, 1089, 1092, 1112, 1130, 1139, 1183, 1184, 1231, 1369, 1370, 1376, 1377, 1387, 1413, 1414, 1420, 1444, 1445, 1456, 1457, 1458, 1467, 1484, 1485, 1501, 1502, 1524, 1525, 1535, 1536, 1564, 1587, 1595, 1633, 1840, 1887, 1897, 1939], "need": [0, 1, 2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 20, 23, 25, 29, 33, 34, 40, 41, 43, 44, 45, 47, 48, 49, 52, 53, 58, 60, 61, 63, 66, 68, 69, 71, 74, 75, 100, 101, 169, 272, 488, 511, 515, 599, 696, 750, 751, 835, 836, 837, 840, 841, 842, 857, 874, 905, 909, 913, 914, 923, 949, 950, 958, 1031, 1040, 1047, 1082, 1084, 1094, 1115, 1117, 1137, 1150, 1221, 1314, 1343, 1389, 1396, 1449, 1450, 1451, 1453, 1459, 1496, 1498, 1500, 1527, 1528, 1529, 1620, 1633, 1645, 1647, 1651, 1653, 1681, 1687, 1710, 1756, 1761, 1775, 1833, 1861, 1876, 1878, 1894, 1896, 1898, 1899, 1906, 1907, 1911, 1913, 1914, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1929, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1947, 1949, 1950, 1951, 1953, 1955, 1956, 1960, 1963, 1964], "modifi": [0, 1, 14, 15, 16, 17, 23, 26, 29, 37, 40, 41, 43, 44, 45, 47, 66, 74, 75, 278, 504, 807, 854, 855, 856, 913, 915, 916, 929, 930, 970, 979, 980, 1174, 1218, 1221, 1224, 1225, 1240, 1396, 1453, 1496, 1498, 1500, 1543, 1544, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1637, 1638, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1713, 1721, 1803, 1896, 1899, 1912, 1918, 1922, 1924, 1925, 1930, 1935, 1941, 1942, 1944, 1949, 1954, 1957, 1959, 1963], "inspect": [0, 1, 17, 19, 22, 43, 66, 74, 932, 1221, 1232, 1918, 1924, 1929, 1941, 1945, 1956, 1964], "between": [0, 1, 2, 3, 7, 12, 17, 18, 20, 25, 29, 36, 37, 41, 43, 49, 50, 60, 61, 62, 66, 73, 74, 215, 529, 599, 600, 601, 603, 604, 623, 633, 705, 706, 707, 711, 712, 776, 788, 789, 790, 818, 873, 881, 900, 909, 911, 918, 920, 921, 922, 924, 925, 956, 968, 986, 997, 1004, 1006, 1053, 1057, 1071, 1072, 1077, 1094, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1145, 1174, 1181, 1218, 1221, 1232, 1256, 1257, 1279, 1284, 1350, 1369, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1389, 1392, 1393, 1394, 1398, 1400, 1405, 1414, 1420, 1429, 1430, 1431, 1432, 1433, 1434, 1444, 1446, 1447, 1448, 1453, 1456, 1457, 1458, 1462, 1481, 1484, 1485, 1486, 1501, 1502, 1504, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1551, 1576, 1577, 1578, 1592, 1608, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1687, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1714, 1715, 1721, 1723, 1732, 1740, 1744, 1745, 1750, 1751, 1755, 1780, 1833, 1834, 1835, 1836, 1840, 1860, 1861, 1881, 1882, 1896, 1898, 1899, 1900, 1906, 1911, 1914, 1918, 1919, 1921, 1922, 1923, 1927, 1928, 1930, 1932, 1934, 1935, 1937, 1940, 1942, 1944, 1945, 1949, 1951, 1953, 1955, 1958, 1962], "dure": [0, 1, 5, 12, 13, 17, 19, 20, 24, 25, 28, 29, 33, 37, 41, 43, 45, 51, 52, 54, 60, 66, 73, 74, 75, 98, 99, 353, 519, 520, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 809, 843, 905, 906, 915, 1039, 1040, 1052, 1053, 1072, 1231, 1233, 1234, 1236, 1292, 1365, 1371, 1372, 1373, 1390, 1391, 1396, 1397, 1416, 1417, 1418, 1471, 1492, 1498, 1500, 1537, 1543, 1544, 1624, 1633, 1635, 1636, 1673, 1687, 1691, 1724, 1821, 1865, 1867, 1898, 1905, 1906, 1907, 1909, 1912, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1933, 1934, 1937, 1941, 1943, 1944, 1947, 1949, 1951, 1960], "simpl": [0, 16, 19, 20, 34, 37, 41, 53, 60, 70, 72, 74, 986, 1051, 1152, 1160, 1161, 1162, 1221, 1225, 1232, 1371, 1372, 1373, 1396, 1426, 1427, 1428, 1453, 1492, 1543, 1688, 1796, 1886, 1893, 1896, 1900, 1914, 1921, 1922, 1923, 1924, 1926, 1927, 1929, 1937, 1941, 1949, 1953], "clip": [0, 66, 982, 1637, 1638, 1897, 1925, 1937, 1939], "util": [0, 7, 15, 17, 21, 25, 29, 36, 61, 66, 67, 73, 74, 75, 748, 751, 754, 755, 756, 761, 762, 772, 776, 780, 806, 814, 1011, 1145, 1221, 1405, 1423, 1453, 1468, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1666, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1715, 1721, 1844, 1845, 1846, 1847, 1848, 1894, 1899, 1909, 1918, 1920, 1921, 1922, 1924, 1926, 1927, 1929, 1930, 1932, 1937, 1940, 1941, 1942], "clip_grad_norm_": [0, 66, 1918], "max_norm": [0, 66, 761, 762, 1396, 1397, 1543, 1544, 1637, 1897, 1918], "own": [0, 7, 9, 16, 19, 43, 44, 47, 49, 52, 60, 62, 66, 74, 696, 1029, 1128, 1147, 1183, 1221, 1292, 1381, 1382, 1383, 1384, 1385, 1386, 1453, 1642, 1645, 1899, 1915, 1918, 1922, 1941, 1944, 1945, 1949, 1951, 1953], "onc": [0, 1, 7, 9, 12, 14, 17, 20, 22, 24, 34, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53, 60, 66, 69, 71, 73, 74, 97, 913, 914, 915, 917, 919, 1094, 1221, 1225, 1292, 1390, 1453, 1633, 1643, 1645, 1677, 1719, 1723, 1739, 1786, 1790, 1878, 1896, 1899, 1907, 1909, 1911, 1918, 1919, 1921, 1922, 1924, 1927, 1929, 1930, 1940, 1941, 1953, 1958], "all": [0, 1, 2, 3, 5, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 33, 34, 37, 40, 41, 43, 44, 45, 47, 49, 51, 53, 57, 58, 59, 60, 61, 62, 63, 66, 69, 71, 72, 73, 74, 90, 107, 169, 278, 331, 333, 339, 353, 503, 529, 531, 533, 562, 576, 623, 626, 633, 696, 702, 703, 708, 710, 714, 715, 751, 776, 807, 809, 810, 830, 856, 870, 874, 877, 890, 893, 905, 906, 907, 909, 910, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 933, 934, 935, 938, 947, 949, 954, 955, 959, 962, 963, 967, 968, 970, 975, 985, 993, 997, 998, 1000, 1001, 1009, 1010, 1019, 1027, 1031, 1037, 1041, 1042, 1050, 1051, 1058, 1059, 1061, 1062, 1066, 1068, 1070, 1111, 1112, 1113, 1114, 1117, 1120, 1121, 1124, 1127, 1129, 1131, 1147, 1150, 1151, 1157, 1158, 1160, 1161, 1163, 1183, 1186, 1217, 1218, 1221, 1228, 1231, 1232, 1235, 1236, 1256, 1283, 1292, 1308, 1310, 1318, 1320, 1323, 1331, 1340, 1348, 1349, 1350, 1351, 1361, 1368, 1370, 1374, 1376, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1396, 1397, 1400, 1405, 1406, 1407, 1408, 1413, 1419, 1420, 1423, 1424, 1440, 1444, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1492, 1496, 1498, 1500, 1501, 1504, 1509, 1510, 1517, 1523, 1525, 1543, 1544, 1549, 1554, 1573, 1574, 1602, 1608, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1637, 1640, 1645, 1652, 1656, 1666, 1670, 1678, 1679, 1680, 1681, 1687, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1715, 1718, 1719, 1722, 1723, 1724, 1725, 1737, 1815, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1833, 1834, 1835, 1836, 1839, 1855, 1857, 1864, 1865, 1866, 1867, 1870, 1873, 1878, 1881, 1882, 1884, 1888, 1893, 1896, 1897, 1898, 1899, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1921, 1922, 1923, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1935, 1936, 1938, 1939, 1941, 1942, 1943, 1944, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1960, 1961, 1962, 1963, 1964], "assign": [0, 1, 7, 9, 10, 40, 43, 51, 60, 61, 71, 74, 696, 854, 855, 856, 1219, 1221, 1222, 1361, 1389, 1453, 1460, 1463, 1464, 1634, 1645, 1896, 1900, 1918, 1924, 1925, 1926, 1937, 1944, 1950, 1951, 1957, 1958], "been": [0, 1, 5, 9, 12, 13, 17, 23, 29, 31, 40, 41, 43, 44, 47, 48, 49, 51, 53, 60, 63, 66, 69, 70, 74, 99, 696, 776, 913, 998, 1000, 1005, 1033, 1036, 1093, 1098, 1151, 1224, 1225, 1230, 1235, 1292, 1405, 1412, 1423, 1468, 1517, 1552, 1633, 1642, 1647, 1651, 1653, 1673, 1674, 1687, 1693, 1713, 1714, 1715, 1721, 1723, 1739, 1836, 1878, 1888, 1905, 1909, 1911, 1912, 1913, 1918, 1919, 1921, 1922, 1927, 1928, 1930, 1932, 1934, 1936, 1937, 1940, 1941, 1949, 1951, 1953, 1958], "accumul": [0, 1, 2, 15, 17, 29, 66, 169, 308, 331, 336, 337, 339, 488, 702, 909, 923, 1290, 1633, 1694, 1695, 1875, 1896, 1897, 1909, 1919, 1922, 1923, 1926, 1933, 1940, 1945, 1949, 1950, 1953], "twice": [0, 16, 73, 633, 918, 1158, 1918, 1919, 1926, 1927], "given": [0, 1, 2, 3, 7, 9, 11, 16, 17, 20, 28, 29, 33, 40, 41, 43, 44, 45, 47, 48, 49, 51, 58, 60, 62, 66, 72, 73, 74, 90, 169, 238, 331, 333, 335, 339, 344, 395, 416, 420, 489, 490, 491, 492, 493, 495, 529, 531, 533, 600, 601, 620, 623, 696, 709, 711, 712, 714, 715, 751, 776, 795, 801, 808, 809, 810, 811, 815, 816, 818, 836, 840, 853, 856, 870, 874, 881, 892, 905, 907, 909, 911, 913, 915, 917, 918, 919, 920, 921, 922, 925, 938, 939, 942, 950, 954, 955, 961, 962, 967, 968, 980, 982, 985, 986, 988, 989, 992, 994, 997, 998, 1000, 1001, 1002, 1006, 1014, 1015, 1018, 1022, 1023, 1039, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1069, 1070, 1071, 1072, 1079, 1081, 1086, 1094, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1134, 1150, 1160, 1161, 1187, 1218, 1221, 1228, 1236, 1237, 1242, 1246, 1256, 1258, 1259, 1268, 1270, 1276, 1284, 1293, 1300, 1302, 1303, 1304, 1305, 1308, 1318, 1320, 1322, 1323, 1326, 1351, 1361, 1369, 1370, 1376, 1381, 1382, 1383, 1385, 1386, 1387, 1389, 1390, 1396, 1397, 1401, 1402, 1405, 1413, 1423, 1445, 1449, 1450, 1451, 1453, 1455, 1457, 1458, 1460, 1462, 1464, 1468, 1481, 1487, 1501, 1502, 1505, 1506, 1507, 1517, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1543, 1544, 1547, 1548, 1552, 1563, 1587, 1602, 1617, 1621, 1622, 1623, 1627, 1628, 1629, 1641, 1666, 1673, 1674, 1677, 1680, 1681, 1691, 1717, 1720, 1722, 1724, 1727, 1732, 1737, 1740, 1741, 1742, 1755, 1761, 1766, 1777, 1778, 1809, 1813, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1833, 1836, 1839, 1841, 1850, 1851, 1856, 1858, 1860, 1870, 1875, 1879, 1893, 1894, 1896, 1899, 1903, 1905, 1906, 1908, 1911, 1914, 1915, 1917, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1934, 1935, 1937, 1940, 1943, 1944, 1949, 1950, 1953, 1954, 1955, 1958, 1960, 1963, 1964], "trigger": [0, 7, 9, 12, 14, 17, 23, 24, 29, 43, 60, 73, 99, 100, 102, 240, 1068, 1788, 1918, 1922, 1923, 1924, 1929, 1935, 1949], "runtimeerror": [0, 1, 33, 43, 47, 71, 74, 99, 107, 599, 713, 913, 949, 1142, 1196, 1206, 1221, 1250, 1251, 1252, 1260, 1261, 1262, 1264, 1268, 1274, 1281, 1286, 1287, 1313, 1343, 1453, 1689, 1777, 1815, 1875, 1896, 1898, 1899, 1912, 1914, 1918, 1920, 1926, 1934, 1936, 1937, 1944, 1948, 1953, 1956], "spars": [0, 1, 15, 31, 209, 210, 227, 237, 240, 341, 346, 360, 361, 452, 559, 560, 561, 562, 597, 599, 600, 601, 602, 603, 604, 630, 705, 761, 762, 924, 925, 1068, 1163, 1185, 1206, 1293, 1315, 1325, 1353, 1396, 1397, 1486, 1543, 1544, 1569, 1710, 1729, 1777, 1811, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1841, 1860, 1875, 1876, 1894, 1897, 1901, 1906, 1917, 1933, 1934, 1939, 1946, 1956, 1957, 1960], "place": [0, 3, 7, 15, 16, 20, 24, 27, 28, 31, 40, 41, 43, 45, 50, 51, 66, 69, 70, 74, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 140, 142, 144, 146, 149, 150, 152, 160, 162, 165, 166, 168, 171, 177, 179, 181, 183, 185, 187, 196, 205, 213, 217, 220, 222, 232, 234, 240, 241, 250, 254, 256, 262, 265, 267, 269, 271, 272, 275, 278, 280, 287, 289, 291, 295, 297, 301, 303, 310, 312, 314, 322, 324, 326, 328, 330, 332, 334, 336, 374, 376, 378, 380, 382, 384, 386, 389, 391, 393, 394, 401, 403, 405, 407, 409, 413, 417, 419, 437, 440, 443, 445, 456, 458, 460, 468, 473, 483, 486, 502, 504, 506, 508, 512, 515, 524, 527, 528, 530, 532, 538, 543, 545, 548, 550, 552, 565, 567, 569, 578, 580, 587, 591, 593, 609, 612, 614, 616, 618, 619, 628, 638, 774, 809, 813, 830, 854, 855, 873, 874, 913, 915, 929, 930, 950, 1007, 1008, 1010, 1011, 1031, 1094, 1145, 1150, 1151, 1159, 1221, 1265, 1283, 1343, 1365, 1375, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1410, 1411, 1412, 1439, 1453, 1470, 1471, 1472, 1473, 1480, 1495, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1556, 1559, 1568, 1599, 1601, 1616, 1620, 1624, 1629, 1630, 1633, 1637, 1638, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1675, 1710, 1766, 1768, 1772, 1773, 1774, 1820, 1856, 1894, 1896, 1898, 1899, 1906, 1913, 1918, 1922, 1924, 1929, 1940, 1941, 1942, 1949, 1950, 1955, 1957, 1959], "replac": [0, 1, 13, 15, 19, 28, 33, 40, 41, 43, 45, 59, 61, 66, 68, 69, 70, 71, 72, 74, 97, 99, 100, 102, 138, 438, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 763, 830, 855, 874, 959, 1040, 1094, 1150, 1151, 1226, 1228, 1238, 1310, 1311, 1343, 1347, 1484, 1495, 1624, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1675, 1677, 1739, 1836, 1840, 1863, 1896, 1897, 1899, 1907, 1922, 1924, 1925, 1927, 1929, 1932, 1936, 1937, 1939, 1941, 1944, 1960], "were": [0, 1, 2, 3, 12, 16, 17, 23, 28, 29, 37, 43, 51, 60, 63, 66, 71, 73, 74, 169, 339, 353, 488, 870, 905, 907, 909, 923, 1040, 1151, 1162, 1228, 1292, 1517, 1633, 1637, 1642, 1652, 1669, 1706, 1775, 1779, 1850, 1857, 1886, 1898, 1906, 1918, 1922, 1924, 1935, 1937, 1941], "reduc": [0, 2, 3, 12, 15, 17, 23, 29, 33, 41, 43, 44, 45, 47, 66, 339, 529, 532, 533, 702, 709, 711, 712, 713, 715, 835, 836, 837, 838, 841, 843, 890, 891, 968, 1008, 1019, 1051, 1194, 1273, 1277, 1279, 1284, 1290, 1308, 1318, 1320, 1321, 1323, 1326, 1348, 1349, 1350, 1351, 1369, 1370, 1371, 1372, 1373, 1387, 1389, 1397, 1413, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1492, 1501, 1524, 1525, 1533, 1535, 1544, 1560, 1563, 1564, 1565, 1575, 1583, 1584, 1585, 1586, 1587, 1588, 1595, 1606, 1607, 1618, 1621, 1633, 1641, 1678, 1699, 1723, 1737, 1739, 1740, 1774, 1817, 1821, 1834, 1835, 1839, 1840, 1861, 1875, 1881, 1882, 1895, 1897, 1911, 1912, 1919, 1921, 1923, 1924, 1930, 1932, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1944, 1953, 1964], "occur": [0, 15, 17, 19, 23, 25, 29, 31, 40, 43, 53, 54, 60, 66, 71, 97, 99, 215, 333, 968, 1054, 1094, 1218, 1224, 1234, 1264, 1376, 1492, 1536, 1680, 1690, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1898, 1909, 1913, 1918, 1919, 1922, 1926, 1933, 1937, 1943, 1949, 1951, 1957, 1960, 1964], "increas": [0, 1, 3, 7, 12, 17, 22, 41, 43, 49, 57, 66, 696, 870, 914, 952, 1019, 1051, 1094, 1182, 1183, 1361, 1370, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1465, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1593, 1594, 1602, 1708, 1714, 1715, 1719, 1721, 1723, 1775, 1783, 1861, 1880, 1897, 1905, 1910, 1921, 1922, 1928, 1932, 1945, 1953], "set": [0, 1, 2, 3, 5, 8, 9, 11, 14, 16, 17, 18, 20, 21, 23, 24, 28, 29, 32, 33, 39, 40, 41, 43, 44, 45, 47, 49, 51, 53, 58, 60, 61, 62, 63, 66, 69, 70, 73, 74, 75, 107, 169, 173, 272, 348, 462, 463, 464, 465, 466, 475, 512, 515, 536, 596, 597, 696, 751, 757, 759, 776, 795, 801, 808, 809, 810, 813, 831, 832, 833, 836, 837, 838, 841, 842, 857, 870, 874, 875, 877, 878, 881, 894, 906, 908, 909, 916, 917, 918, 919, 920, 921, 922, 923, 947, 952, 963, 967, 968, 980, 1005, 1020, 1029, 1041, 1042, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1095, 1096, 1097, 1150, 1159, 1168, 1183, 1201, 1202, 1221, 1225, 1228, 1230, 1232, 1234, 1236, 1237, 1256, 1257, 1260, 1266, 1273, 1275, 1277, 1278, 1290, 1291, 1292, 1293, 1307, 1310, 1313, 1333, 1337, 1338, 1339, 1361, 1365, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1398, 1405, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1438, 1440, 1444, 1445, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1463, 1467, 1468, 1484, 1485, 1492, 1496, 1498, 1500, 1501, 1502, 1517, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1537, 1538, 1539, 1540, 1545, 1552, 1556, 1563, 1564, 1573, 1574, 1587, 1589, 1595, 1602, 1621, 1633, 1635, 1636, 1641, 1646, 1675, 1687, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1739, 1746, 1748, 1752, 1754, 1755, 1763, 1764, 1775, 1776, 1779, 1780, 1781, 1782, 1783, 1785, 1786, 1787, 1788, 1789, 1790, 1805, 1820, 1834, 1835, 1854, 1864, 1865, 1866, 1867, 1875, 1878, 1879, 1881, 1882, 1893, 1895, 1896, 1898, 1899, 1900, 1903, 1905, 1907, 1908, 1909, 1911, 1914, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1958, 1960, 1962, 1963, 1964], "directli": [0, 1, 3, 7, 9, 15, 16, 17, 19, 22, 28, 29, 33, 34, 40, 41, 43, 45, 49, 50, 51, 59, 66, 70, 74, 573, 748, 763, 906, 915, 970, 1077, 1145, 1151, 1158, 1160, 1166, 1251, 1459, 1486, 1505, 1563, 1608, 1667, 1861, 1896, 1898, 1899, 1909, 1919, 1922, 1923, 1924, 1925, 1927, 1929, 1930, 1931, 1932, 1935, 1941, 1943, 1944, 1949, 1953, 1958, 1960], "fill": [0, 16, 20, 43, 173, 192, 276, 277, 278, 304, 335, 339, 395, 418, 462, 463, 464, 466, 471, 498, 624, 639, 939, 1082, 1095, 1096, 1097, 1148, 1149, 1251, 1262, 1264, 1397, 1496, 1544, 1590, 1684, 1685, 1748, 1749, 1750, 1751, 1752, 1753, 1840, 1875, 1891, 1892, 1895, 1897, 1903, 1913, 1914, 1917, 1922, 1924, 1935, 1939, 1953, 1960], "later": [0, 1, 3, 7, 20, 23, 39, 41, 43, 66, 73, 74, 761, 762, 772, 780, 932, 1029, 1292, 1423, 1446, 1447, 1448, 1468, 1482, 1576, 1577, 1578, 1605, 1633, 1840, 1896, 1919, 1921, 1922, 1923, 1930, 1935, 1950, 1951], "chang": [0, 1, 2, 3, 7, 12, 15, 16, 18, 19, 20, 21, 23, 24, 29, 31, 37, 41, 43, 45, 47, 48, 49, 51, 59, 64, 66, 67, 70, 71, 73, 74, 158, 240, 272, 339, 475, 512, 515, 533, 536, 572, 633, 696, 835, 893, 924, 925, 968, 979, 980, 994, 995, 996, 1005, 1016, 1018, 1029, 1030, 1037, 1038, 1040, 1082, 1130, 1150, 1168, 1174, 1195, 1218, 1221, 1231, 1232, 1251, 1262, 1264, 1265, 1266, 1269, 1282, 1322, 1393, 1396, 1414, 1423, 1453, 1484, 1505, 1517, 1552, 1576, 1577, 1578, 1602, 1624, 1625, 1633, 1635, 1636, 1642, 1645, 1646, 1675, 1679, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1715, 1718, 1719, 1721, 1723, 1725, 1739, 1779, 1783, 1820, 1831, 1834, 1835, 1836, 1860, 1878, 1881, 1882, 1893, 1894, 1896, 1905, 1906, 1907, 1909, 1911, 1912, 1913, 1914, 1918, 1919, 1920, 1921, 1922, 1924, 1925, 1927, 1928, 1930, 1932, 1933, 1935, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1951, 1953, 1955, 1956, 1957, 1958, 1959, 1961, 1962, 1963], "further": [0, 1, 4, 9, 11, 15, 25, 29, 33, 41, 43, 66, 73, 1166, 1225, 1260, 1361, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1633, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1727, 1895, 1899, 1906, 1930, 1932, 1941, 1943, 1951, 1958, 1963], "floattensor": [0, 43, 339, 504, 702, 703, 704, 705, 706, 751, 924, 925, 936, 1168, 1396, 1397, 1456, 1496, 1781, 1956, 1959], "end": [0, 7, 8, 9, 12, 16, 29, 40, 41, 43, 49, 53, 57, 69, 74, 379, 380, 554, 776, 800, 813, 836, 837, 881, 937, 981, 995, 1055, 1084, 1094, 1133, 1147, 1174, 1180, 1181, 1218, 1221, 1241, 1246, 1276, 1286, 1288, 1291, 1293, 1307, 1352, 1353, 1368, 1369, 1370, 1387, 1389, 1395, 1399, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1420, 1423, 1424, 1439, 1444, 1447, 1448, 1453, 1455, 1460, 1461, 1464, 1468, 1471, 1481, 1484, 1490, 1495, 1502, 1535, 1544, 1556, 1557, 1633, 1640, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1713, 1718, 1755, 1788, 1791, 1794, 1809, 1861, 1872, 1873, 1889, 1895, 1896, 1897, 1898, 1899, 1911, 1918, 1919, 1922, 1923, 1924, 1926, 1927, 1933, 1936, 1937, 1940, 1943, 1944, 1947, 1949, 1954], "reason": [0, 3, 8, 9, 13, 15, 16, 17, 20, 22, 29, 40, 43, 45, 66, 71, 696, 857, 1115, 1117, 1221, 1236, 1237, 1256, 1257, 1284, 1321, 1369, 1393, 1453, 1554, 1602, 1629, 1630, 1645, 1771, 1896, 1898, 1899, 1905, 1919, 1923, 1925, 1933, 1935, 1937, 1949, 1956, 1964], "do": [0, 1, 4, 7, 8, 9, 12, 15, 16, 18, 20, 21, 23, 24, 27, 28, 29, 31, 33, 34, 40, 41, 43, 47, 48, 50, 51, 53, 60, 61, 62, 66, 67, 68, 71, 72, 73, 74, 99, 511, 529, 531, 533, 774, 839, 842, 879, 908, 910, 915, 924, 954, 967, 968, 1040, 1073, 1074, 1075, 1076, 1145, 1147, 1156, 1163, 1183, 1196, 1208, 1218, 1224, 1232, 1236, 1266, 1284, 1293, 1300, 1310, 1312, 1321, 1343, 1353, 1365, 1375, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1410, 1411, 1412, 1439, 1471, 1472, 1473, 1480, 1495, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1554, 1556, 1571, 1624, 1633, 1681, 1689, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1727, 1733, 1875, 1893, 1894, 1896, 1897, 1899, 1901, 1903, 1911, 1912, 1913, 1918, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1943, 1944, 1945, 1949, 1951, 1953, 1954, 1955, 1956, 1957, 1958, 1960], "synchron": [0, 3, 4, 17, 36, 37, 41, 45, 47, 51, 60, 66, 73, 893, 997, 998, 1000, 1008, 1028, 1068, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1268, 1269, 1275, 1278, 1281, 1282, 1284, 1285, 1293, 1492, 1633, 1679, 1681, 1761, 1894, 1921, 1922, 1923, 1928, 1932, 1942, 1949], "fall": [0, 2, 7, 33, 40, 811, 924, 968, 1183, 1234, 1292, 1414, 1484, 1561, 1606, 1637, 1638, 1893, 1937, 1944], "below": [0, 1, 5, 9, 13, 15, 17, 18, 19, 20, 21, 22, 23, 25, 29, 33, 40, 41, 43, 49, 51, 52, 57, 60, 61, 62, 63, 74, 75, 82, 83, 696, 750, 764, 773, 811, 830, 1037, 1081, 1082, 1083, 1084, 1085, 1094, 1122, 1124, 1128, 1166, 1174, 1221, 1237, 1277, 1278, 1283, 1290, 1322, 1384, 1385, 1386, 1405, 1407, 1414, 1423, 1425, 1449, 1450, 1451, 1453, 1468, 1484, 1505, 1535, 1561, 1606, 1633, 1645, 1679, 1710, 1780, 1820, 1851, 1861, 1864, 1865, 1866, 1867, 1896, 1898, 1899, 1901, 1905, 1906, 1911, 1912, 1918, 1919, 1922, 1923, 1924, 1927, 1928, 1930, 1932, 1934, 1935, 1937, 1940, 1941, 1942, 1944, 1946, 1949, 1950, 1951, 1954, 1957, 1960], "someth": [0, 3, 7, 13, 15, 17, 19, 20, 28, 29, 68, 74, 75, 77, 917, 919, 1094, 1221, 1236, 1453, 1901, 1909, 1911, 1912, 1919, 1928, 1936, 1937, 1949, 1964], "wrong": [0, 19, 43, 74, 99, 913, 1219, 1222, 1923, 1932, 1936, 1937, 1940], "incompat": [0, 9, 33, 71, 949, 1218, 1920, 1941], "due": [0, 3, 4, 5, 7, 17, 20, 23, 29, 41, 43, 49, 59, 66, 71, 74, 75, 77, 99, 503, 896, 917, 918, 923, 982, 1233, 1256, 1257, 1284, 1310, 1393, 1407, 1496, 1505, 1563, 1602, 1673, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1841, 1896, 1914, 1922, 1923, 1927, 1928, 1934, 1937, 1944, 1945, 1949, 1951], "float64": [0, 31, 258, 463, 466, 596, 896, 976, 1137, 1146, 1168, 1203, 1221, 1250, 1256, 1257, 1259, 1261, 1277, 1453, 1602, 1696, 1697, 1733, 1741, 1780, 1781, 1784, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1884, 1889, 1930, 1933, 1953, 1955, 1956, 1959, 1960, 1965], "variant": [0, 5, 23, 28, 41, 874, 1251, 1262, 1275, 1278, 1350, 1353, 1696, 1697, 1698, 1710, 1863, 1894, 1895, 1929, 1947, 1959], "suppli": [0, 5, 7, 17, 29, 33, 34, 43, 1029, 1459, 1692, 1899, 1922, 1953], "won": [0, 8, 16, 17, 20, 25, 29, 41, 45, 60, 69, 475, 1221, 1232, 1453, 1588, 1627, 1628, 1893, 1919, 1924, 1949, 1961], "go": [0, 1, 7, 13, 15, 16, 17, 20, 21, 34, 40, 43, 57, 62, 70, 74, 515, 516, 576, 914, 929, 1293, 1366, 1367, 1368, 1446, 1447, 1448, 1898, 1899, 1906, 1911, 1912, 1913, 1919, 1921, 1922, 1924, 1925, 1929, 1930, 1932, 1936, 1937, 1941, 1956, 1958], "addmm": [0, 28, 75, 125, 1832, 1895, 1897, 1912, 1933, 1939, 1953], "b": [0, 1, 3, 13, 14, 17, 19, 20, 28, 29, 31, 40, 43, 45, 49, 58, 74, 75, 78, 100, 102, 278, 353, 416, 633, 701, 702, 764, 773, 797, 840, 896, 913, 915, 916, 927, 929, 930, 936, 947, 948, 950, 954, 956, 958, 961, 966, 981, 987, 988, 989, 990, 991, 992, 993, 994, 1037, 1038, 1086, 1089, 1093, 1094, 1139, 1140, 1141, 1142, 1147, 1151, 1164, 1186, 1198, 1218, 1224, 1231, 1232, 1240, 1241, 1243, 1252, 1253, 1261, 1265, 1266, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1281, 1282, 1283, 1286, 1287, 1290, 1293, 1302, 1304, 1305, 1311, 1319, 1324, 1326, 1342, 1370, 1374, 1396, 1397, 1404, 1440, 1523, 1525, 1544, 1551, 1569, 1640, 1667, 1668, 1669, 1670, 1671, 1672, 1680, 1687, 1707, 1709, 1740, 1746, 1759, 1762, 1778, 1790, 1809, 1817, 1822, 1823, 1824, 1826, 1827, 1831, 1836, 1837, 1839, 1846, 1847, 1856, 1863, 1864, 1866, 1883, 1888, 1895, 1896, 1897, 1898, 1899, 1912, 1913, 1914, 1917, 1918, 1920, 1922, 1924, 1926, 1927, 1928, 1933, 1935, 1943, 1944, 1950, 1951, 1953, 1954, 1957, 1958, 1963], "c": [0, 1, 3, 8, 9, 15, 16, 17, 19, 20, 26, 28, 29, 33, 40, 43, 49, 58, 69, 74, 100, 102, 278, 353, 515, 536, 633, 701, 837, 893, 896, 915, 947, 958, 961, 982, 1031, 1037, 1071, 1086, 1089, 1094, 1140, 1141, 1142, 1151, 1152, 1156, 1161, 1164, 1174, 1221, 1231, 1243, 1250, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1272, 1276, 1277, 1279, 1281, 1283, 1284, 1342, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1389, 1392, 1393, 1394, 1398, 1400, 1401, 1402, 1408, 1416, 1417, 1418, 1421, 1422, 1424, 1425, 1435, 1436, 1437, 1441, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1458, 1460, 1465, 1466, 1474, 1475, 1476, 1477, 1478, 1479, 1487, 1492, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1517, 1525, 1535, 1536, 1548, 1552, 1587, 1593, 1594, 1602, 1640, 1668, 1670, 1671, 1672, 1679, 1680, 1727, 1743, 1759, 1797, 1817, 1831, 1836, 1856, 1873, 1877, 1878, 1894, 1895, 1896, 1897, 1898, 1899, 1903, 1912, 1913, 1921, 1922, 1923, 1925, 1927, 1929, 1936, 1938, 1941, 1950, 1951, 1953, 1954, 1957, 1958, 1964], "addmm_": [0, 1897, 1912, 1953], "d": [0, 1, 16, 17, 19, 25, 29, 31, 40, 41, 43, 48, 49, 67, 74, 331, 339, 353, 488, 529, 531, 533, 560, 599, 633, 702, 706, 881, 896, 915, 936, 937, 939, 946, 947, 948, 952, 958, 1081, 1083, 1093, 1094, 1107, 1111, 1112, 1113, 1114, 1119, 1120, 1123, 1124, 1129, 1130, 1131, 1134, 1135, 1136, 1162, 1163, 1178, 1179, 1186, 1195, 1218, 1222, 1226, 1263, 1264, 1314, 1325, 1345, 1360, 1368, 1369, 1373, 1383, 1387, 1388, 1392, 1393, 1394, 1396, 1398, 1400, 1405, 1407, 1418, 1423, 1425, 1437, 1448, 1462, 1468, 1492, 1501, 1502, 1504, 1517, 1552, 1563, 1569, 1596, 1620, 1621, 1641, 1674, 1679, 1680, 1708, 1728, 1746, 1755, 1767, 1775, 1780, 1831, 1836, 1849, 1850, 1856, 1859, 1864, 1865, 1866, 1867, 1880, 1886, 1888, 1893, 1897, 1906, 1912, 1913, 1914, 1917, 1919, 1922, 1924, 1925, 1927, 1928, 1935, 1937, 1949, 1950, 1953, 1954, 1958, 1959], "best": [0, 1, 7, 17, 22, 26, 34, 37, 40, 43, 49, 61, 66, 69, 877, 878, 933, 955, 968, 1236, 1237, 1266, 1459, 1710, 1723, 1894, 1896, 1898, 1911, 1917, 1918, 1919, 1924, 1926, 1941, 1949, 1953], "stabil": [0, 17, 29, 1252, 1308, 1370, 1371, 1372, 1373, 1407, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1489, 1492, 1501, 1549, 1610, 1641, 1674, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1743, 1925], "respect": [0, 1, 5, 8, 16, 22, 43, 44, 47, 49, 58, 60, 66, 72, 73, 74, 215, 228, 504, 596, 619, 705, 706, 707, 776, 811, 835, 857, 901, 907, 909, 923, 925, 929, 930, 963, 986, 1082, 1084, 1085, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1161, 1174, 1221, 1252, 1256, 1257, 1266, 1276, 1279, 1281, 1284, 1293, 1325, 1347, 1369, 1376, 1384, 1385, 1386, 1390, 1405, 1407, 1423, 1453, 1454, 1468, 1498, 1500, 1501, 1502, 1503, 1505, 1543, 1552, 1629, 1630, 1647, 1651, 1653, 1675, 1677, 1709, 1723, 1814, 1817, 1840, 1856, 1913, 1918, 1919, 1922, 1924, 1927, 1930, 1931, 1942, 1947, 1953, 1954, 1955, 1960], "describ": [0, 5, 7, 8, 9, 18, 23, 40, 41, 45, 47, 48, 51, 52, 58, 60, 74, 529, 808, 809, 810, 831, 832, 833, 857, 875, 953, 1020, 1037, 1054, 1094, 1174, 1241, 1281, 1361, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1392, 1393, 1394, 1395, 1398, 1400, 1401, 1402, 1408, 1411, 1414, 1416, 1417, 1418, 1420, 1425, 1444, 1446, 1447, 1448, 1459, 1460, 1467, 1471, 1484, 1492, 1500, 1501, 1502, 1504, 1535, 1547, 1548, 1557, 1590, 1721, 1861, 1894, 1896, 1898, 1899, 1917, 1918, 1919, 1922, 1923, 1926, 1927, 1929, 1930, 1935, 1937, 1941, 1943, 1944, 1947, 1950, 1951, 1960], "expos": [0, 1, 8, 21, 43, 47, 66, 73, 74, 811, 1147, 1919, 1922, 1929, 1941, 1944, 1964], "namespac": [0, 18, 74, 1068, 1896, 1900, 1903, 1924, 1930, 1937, 1942, 1947, 1964], "defin": [0, 1, 2, 3, 5, 9, 12, 13, 16, 20, 24, 33, 34, 40, 41, 43, 44, 45, 48, 49, 51, 52, 58, 60, 61, 66, 71, 74, 452, 462, 464, 466, 533, 582, 808, 813, 815, 854, 875, 876, 877, 878, 905, 906, 907, 908, 1051, 1077, 1094, 1095, 1114, 1142, 1148, 1164, 1166, 1180, 1182, 1183, 1210, 1221, 1243, 1250, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1272, 1273, 1277, 1278, 1279, 1281, 1283, 1284, 1290, 1326, 1390, 1395, 1401, 1402, 1409, 1410, 1411, 1412, 1419, 1421, 1422, 1453, 1459, 1471, 1486, 1488, 1493, 1495, 1517, 1552, 1602, 1608, 1624, 1627, 1633, 1651, 1653, 1660, 1661, 1681, 1684, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1715, 1718, 1721, 1739, 1748, 1750, 1752, 1759, 1788, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1817, 1819, 1861, 1864, 1865, 1866, 1867, 1889, 1891, 1893, 1896, 1899, 1901, 1903, 1911, 1912, 1914, 1919, 1922, 1923, 1927, 1928, 1930, 1932, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1947, 1949, 1953, 1954, 1959, 1960, 1961, 1964], "still": [0, 1, 2, 7, 8, 16, 19, 20, 21, 23, 29, 40, 43, 48, 49, 51, 60, 66, 73, 74, 810, 815, 914, 919, 1225, 1230, 1238, 1420, 1444, 1633, 1634, 1635, 1636, 1723, 1771, 1895, 1896, 1899, 1911, 1912, 1913, 1914, 1918, 1919, 1922, 1923, 1924, 1926, 1928, 1935, 1936, 1937, 1940, 1941, 1942, 1944, 1949, 1950, 1951, 1953], "which": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 37, 40, 41, 44, 45, 47, 48, 49, 50, 51, 53, 58, 59, 60, 61, 62, 66, 70, 71, 73, 74, 75, 82, 83, 107, 169, 307, 331, 333, 335, 337, 339, 353, 489, 503, 504, 515, 529, 531, 533, 553, 576, 620, 623, 633, 640, 700, 713, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 776, 780, 797, 806, 807, 813, 815, 835, 839, 842, 854, 870, 873, 874, 875, 877, 892, 896, 901, 908, 909, 910, 911, 917, 918, 919, 920, 921, 922, 923, 929, 930, 933, 939, 952, 955, 958, 962, 968, 970, 984, 985, 986, 994, 995, 1000, 1007, 1008, 1009, 1010, 1011, 1022, 1023, 1024, 1051, 1053, 1058, 1059, 1070, 1072, 1077, 1081, 1082, 1083, 1084, 1085, 1094, 1110, 1115, 1118, 1122, 1125, 1128, 1133, 1134, 1135, 1136, 1137, 1142, 1145, 1150, 1151, 1154, 1155, 1156, 1157, 1158, 1162, 1163, 1166, 1183, 1195, 1206, 1212, 1218, 1219, 1221, 1222, 1224, 1230, 1231, 1232, 1236, 1253, 1256, 1257, 1266, 1270, 1272, 1273, 1276, 1277, 1281, 1283, 1284, 1286, 1289, 1290, 1292, 1298, 1314, 1321, 1326, 1343, 1349, 1352, 1353, 1359, 1360, 1361, 1363, 1364, 1365, 1367, 1368, 1371, 1372, 1373, 1376, 1382, 1383, 1385, 1386, 1389, 1390, 1397, 1404, 1405, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1425, 1439, 1443, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1458, 1459, 1481, 1484, 1486, 1488, 1492, 1501, 1502, 1534, 1551, 1552, 1554, 1564, 1571, 1589, 1590, 1608, 1609, 1617, 1624, 1633, 1640, 1642, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1675, 1677, 1680, 1688, 1689, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1729, 1741, 1755, 1759, 1761, 1762, 1766, 1768, 1775, 1779, 1788, 1790, 1808, 1813, 1816, 1817, 1819, 1820, 1828, 1831, 1855, 1860, 1861, 1864, 1865, 1866, 1867, 1871, 1872, 1874, 1875, 1878, 1886, 1893, 1896, 1898, 1899, 1901, 1905, 1906, 1907, 1908, 1909, 1911, 1913, 1914, 1917, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1934, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1962, 1963, 1964, 1965], "unlist": 0, "downstream": [0, 3, 17, 18, 20, 29, 1909], "stabl": [0, 1, 2, 43, 49, 60, 61, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 892, 1094, 1256, 1257, 1261, 1266, 1274, 1278, 1281, 1284, 1286, 1293, 1370, 1813, 1894, 1897, 1917, 1920, 1934, 1949], "believ": [0, 8, 27], "unstabl": [0, 49, 1256, 1257, 1284, 1301, 1310, 1571, 1840, 1954], "__matmul__": 0, "addbmm": [0, 119, 936, 1897, 1933, 1939], "addmv": [0, 127, 1897, 1912, 1939], "addr": [0, 43, 129, 1897, 1939], "baddbmm": [0, 171, 1897, 1933, 1939], "bmm": [0, 1875, 1895, 1897, 1912, 1914, 1933, 1934, 1939, 1953], "chain_matmul": [0, 1897, 1939], "multi_dot": [0, 958], "conv1d": [0, 724, 728, 731, 741, 757, 1384, 1392, 1429, 1875, 1897, 1939, 1944, 1946], "conv2d": [0, 725, 729, 732, 734, 742, 758, 808, 830, 1221, 1230, 1232, 1236, 1237, 1385, 1393, 1430, 1453, 1454, 1460, 1481, 1504, 1660, 1875, 1896, 1897, 1907, 1937, 1939, 1944, 1946, 1947, 1958, 1963], "conv3d": [0, 726, 730, 733, 735, 743, 759, 1386, 1394, 1431, 1875, 1897, 1939, 1944, 1946], "conv_transpose1d": [0, 1897, 1939, 1946], "conv_transpose2d": [0, 1897, 1939, 1946], "conv_transpose3d": [0, 1897, 1939, 1946], "grucel": [0, 1933, 1944, 1946, 1947], "lstmcell": [0, 1933, 1944, 1946, 1947], "matmul": [0, 2, 12, 31, 948, 968, 1161, 1325, 1504, 1729, 1739, 1783, 1840, 1897, 1912, 1914, 1922, 1933, 1939, 1946, 1953], "mv": [0, 31, 1232, 1875, 1897, 1912, 1939, 1953], "prelu": [0, 1454, 1897, 1939, 1946], "rnncell": [0, 1944, 1946, 1947], "__pow__": 0, "__rdiv__": 0, "__rpow__": 0, "__rtruediv__": 0, "aco": [0, 113, 643, 644, 882, 1895, 1897, 1912, 1939, 1960], "asin": [0, 160, 645, 646, 884, 1895, 1897, 1912, 1939, 1953], "cosh": [0, 222, 653, 654, 700, 1895, 1897, 1912, 1939], "cosine_embedding_loss": [0, 1897, 1939], "cdist": [0, 1922, 1939], "cosine_similar": [0, 1502, 1897, 1939], "cross_entropi": [0, 1897], "cumprod": [0, 232, 1897, 1912, 1939], "cumsum": [0, 234, 1077, 1875, 1897, 1912, 1939], "dist": [0, 41, 43, 44, 47, 49, 61, 66, 959, 960, 1250, 1256, 1257, 1258, 1260, 1261, 1262, 1266, 1267, 1278, 1279, 1282, 1284, 1285, 1308, 1311, 1462, 1492, 1633, 1640, 1840, 1897, 1923, 1939, 1949, 1951], "erfinv": [0, 269, 1897, 1912, 1939, 1953, 1954], "exp": [0, 1, 49, 271, 659, 660, 786, 919, 920, 922, 1137, 1280, 1300, 1308, 1370, 1375, 1389, 1395, 1419, 1442, 1443, 1457, 1467, 1480, 1483, 1485, 1486, 1488, 1489, 1493, 1526, 1572, 1595, 1603, 1604, 1608, 1610, 1613, 1640, 1736, 1797, 1798, 1819, 1836, 1895, 1897, 1912, 1919, 1937, 1939, 1954], "expm1": [0, 275, 661, 662, 1895, 1897, 1912, 1939, 1953, 1954], "group_norm": [0, 1897, 1939, 1946], "hinge_embedding_loss": [0, 1897, 1939], "kl_div": [0, 1897, 1939], "l1_loss": [0, 1897, 1939], "layer_norm": [0, 1425, 1897, 1939, 1946], "log": [0, 14, 17, 18, 20, 22, 24, 25, 29, 33, 40, 41, 49, 51, 53, 54, 57, 58, 62, 394, 395, 669, 676, 696, 1104, 1296, 1298, 1300, 1301, 1308, 1335, 1361, 1369, 1370, 1389, 1407, 1419, 1442, 1443, 1457, 1460, 1467, 1485, 1486, 1489, 1549, 1554, 1564, 1571, 1572, 1587, 1595, 1608, 1610, 1633, 1894, 1895, 1897, 1905, 1909, 1912, 1919, 1922, 1924, 1937, 1939, 1943, 1954, 1958, 1961, 1962, 1963], "log_softmax": [0, 1376, 1419, 1536, 1587, 1608, 1897, 1913, 1939, 1954], "log10": [0, 389, 670, 671, 1895, 1897, 1912, 1939], "log1p": [0, 391, 672, 673, 1895, 1897, 1912, 1939, 1953, 1954], "log2": [0, 393, 674, 675, 1895, 1897, 1912, 1939, 1954], "margin_ranking_loss": [0, 1897, 1939], "mse_loss": [0, 70, 1150, 1897, 1939], "multilabel_margin_loss": [0, 1897, 1939], "multi_margin_loss": [0, 1897, 1939], "nll_loss": [0, 1897, 1939], "norm": [0, 49, 66, 68, 74, 718, 719, 720, 721, 722, 723, 956, 1088, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1252, 1256, 1265, 1266, 1273, 1278, 1290, 1396, 1397, 1444, 1462, 1497, 1498, 1499, 1500, 1501, 1543, 1544, 1588, 1592, 1637, 1641, 1650, 1651, 1656, 1659, 1660, 1674, 1677, 1698, 1760, 1897, 1901, 1918, 1919, 1927, 1930, 1933, 1939], "normal": [0, 1, 11, 41, 47, 60, 66, 74, 97, 354, 369, 395, 471, 572, 986, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1182, 1218, 1221, 1226, 1256, 1298, 1365, 1371, 1372, 1373, 1392, 1393, 1394, 1398, 1408, 1416, 1417, 1418, 1425, 1435, 1436, 1437, 1441, 1480, 1492, 1496, 1497, 1498, 1499, 1500, 1522, 1552, 1553, 1562, 1566, 1570, 1596, 1637, 1638, 1641, 1656, 1664, 1665, 1674, 1677, 1707, 1723, 1743, 1752, 1753, 1760, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1836, 1875, 1893, 1894, 1895, 1896, 1897, 1901, 1912, 1914, 1917, 1919, 1922, 1925, 1937, 1939, 1941, 1946, 1949, 1954, 1958, 1960, 1961, 1965], "pdist": [0, 1462, 1897, 1939], "poisson_nll_loss": [0, 1897, 1939], "pow": [0, 1, 486, 512, 917, 918, 921, 1137, 1895, 1897, 1899, 1912, 1918, 1919, 1939, 1953, 1959], "prod": [0, 57, 339, 533, 1111, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1131, 1286, 1287, 1396, 1400, 1504, 1875, 1895, 1897, 1912, 1939, 1953], "reciproc": [0, 502, 679, 680, 1770, 1895, 1897, 1912, 1939], "rsqrt": [0, 527, 1895, 1897, 1912, 1939], "sinh": [0, 552, 687, 688, 898, 1895, 1897, 1912, 1939, 1953], "smooth_l1_loss": [0, 1897, 1939], "soft_margin_loss": [0, 1897, 1939], "softmax": [0, 49, 812, 1361, 1389, 1419, 1443, 1487, 1535, 1554, 1564, 1571, 1602, 1609, 1816, 1897, 1912, 1913, 1914, 1922, 1939, 1946, 1953, 1954], "softmin": [0, 1897], "softplu": [0, 49, 1452, 1582, 1897, 1939], "sum": [0, 1, 12, 13, 14, 17, 20, 25, 27, 29, 40, 43, 44, 47, 49, 51, 66, 71, 72, 74, 512, 533, 582, 762, 909, 917, 918, 919, 920, 921, 922, 923, 929, 930, 934, 986, 1009, 1010, 1011, 1076, 1077, 1094, 1154, 1155, 1156, 1161, 1198, 1252, 1273, 1277, 1290, 1298, 1299, 1300, 1308, 1343, 1351, 1369, 1370, 1376, 1386, 1387, 1389, 1390, 1397, 1400, 1407, 1413, 1414, 1419, 1420, 1421, 1422, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1486, 1488, 1501, 1502, 1504, 1524, 1525, 1535, 1536, 1544, 1549, 1554, 1564, 1573, 1574, 1587, 1595, 1608, 1609, 1633, 1656, 1661, 1662, 1680, 1715, 1761, 1799, 1817, 1819, 1859, 1861, 1875, 1894, 1895, 1897, 1899, 1903, 1909, 1912, 1918, 1919, 1922, 1923, 1924, 1925, 1930, 1933, 1937, 1939, 1949, 1950, 1953, 1954, 1959], "renorm": [0, 508, 1396, 1397, 1543, 1544, 1897, 1939], "tan": [0, 591, 691, 692, 899, 1895, 1897, 1912, 1939, 1953, 1958], "triplet_margin_loss": [0, 1897, 1939], "take": [0, 1, 2, 3, 4, 7, 9, 12, 13, 14, 15, 16, 17, 18, 20, 22, 25, 28, 33, 40, 41, 43, 45, 47, 49, 51, 59, 60, 61, 62, 66, 68, 69, 71, 72, 73, 74, 75, 82, 83, 102, 776, 809, 814, 830, 836, 842, 878, 917, 918, 919, 920, 921, 922, 924, 925, 961, 994, 1031, 1082, 1084, 1085, 1110, 1112, 1115, 1118, 1122, 1123, 1125, 1128, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1253, 1275, 1278, 1361, 1370, 1397, 1401, 1402, 1405, 1423, 1447, 1448, 1449, 1450, 1451, 1453, 1461, 1468, 1496, 1506, 1507, 1547, 1548, 1565, 1589, 1602, 1633, 1678, 1707, 1711, 1736, 1863, 1876, 1886, 1893, 1896, 1897, 1899, 1906, 1907, 1911, 1912, 1913, 1914, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1928, 1930, 1934, 1935, 1936, 1937, 1939, 1941, 1943, 1944, 1949, 1950, 1951, 1953, 1956, 1957, 1958, 1962], "addcdiv": [0, 121, 1897, 1939], "addcmul": [0, 123, 1897, 1939], "atan2": [0, 165, 887, 1895, 1897, 1912, 1939], "bilinear": [0, 795, 801, 802, 1094, 1505, 1506, 1552, 1563, 1621, 1622, 1875, 1897, 1939], "cross": [0, 7, 8, 20, 45, 49, 51, 1369, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1524, 1525, 1535, 1897, 1922, 1936, 1939], "dot": [0, 2, 33, 71, 72, 633, 918, 920, 921, 922, 1073, 1074, 1075, 1076, 1152, 1162, 1198, 1241, 1288, 1289, 1315, 1369, 1370, 1389, 1400, 1413, 1420, 1444, 1459, 1460, 1502, 1602, 1836, 1883, 1884, 1885, 1886, 1897, 1912, 1927, 1939, 1941], "grid_sampl": [0, 1517, 1875, 1897, 1939], "index_put": [0, 1875, 1897, 1939], "scatter_add": [0, 1895, 1897, 1939], "tensordot": [0, 1198, 1286, 1287, 1901, 1922, 1939], "binari": [0, 2, 33, 34, 41, 49, 51, 53, 58, 60, 74, 173, 751, 938, 1314, 1369, 1370, 1459, 1524, 1525, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1688, 1691, 1894, 1900, 1912, 1913, 1929, 1937, 1941, 1958], "add": [0, 1, 3, 7, 12, 13, 14, 15, 18, 22, 25, 28, 29, 34, 36, 40, 43, 45, 47, 57, 60, 66, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 97, 101, 117, 308, 331, 529, 531, 702, 703, 704, 707, 763, 764, 773, 806, 809, 854, 875, 877, 878, 1010, 1040, 1051, 1094, 1151, 1221, 1232, 1361, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434, 1453, 1455, 1459, 1460, 1464, 1467, 1554, 1595, 1624, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1832, 1893, 1895, 1896, 1897, 1898, 1899, 1903, 1907, 1909, 1912, 1914, 1918, 1920, 1921, 1924, 1925, 1928, 1929, 1930, 1932, 1937, 1938, 1939, 1941, 1943, 1944, 1945, 1946, 1947, 1949, 1950, 1951, 1953, 1956, 1957, 1958, 1962, 1963, 1964], "nativ": [0, 2, 31, 41, 48, 66, 74, 1020, 1151, 1231, 1637, 1638, 1783, 1896, 1899, 1911, 1922, 1935, 1940, 1941, 1949], "without": [0, 1, 3, 5, 7, 8, 9, 12, 15, 16, 17, 19, 29, 33, 37, 40, 41, 43, 44, 45, 47, 49, 53, 60, 66, 67, 72, 73, 74, 75, 76, 272, 633, 965, 968, 998, 1000, 1035, 1115, 1116, 1117, 1125, 1126, 1127, 1218, 1219, 1221, 1222, 1267, 1268, 1283, 1290, 1343, 1371, 1372, 1373, 1393, 1397, 1416, 1417, 1418, 1450, 1453, 1461, 1492, 1500, 1544, 1624, 1633, 1657, 1673, 1687, 1715, 1746, 1762, 1779, 1780, 1870, 1893, 1898, 1899, 1906, 1907, 1909, 1911, 1913, 1918, 1919, 1920, 1922, 1923, 1924, 1927, 1928, 1930, 1932, 1934, 1935, 1937, 1941, 1942, 1944, 1948, 1949, 1953, 1958, 1963, 1965], "intervent": [0, 8, 1949], "mixtur": [0, 49, 1389, 1535], "bceloss": [0, 1370, 1524], "aren": [0, 8, 71, 74, 1151, 1912, 1919, 1950, 1964], "mean": [0, 2, 3, 5, 7, 8, 15, 16, 17, 20, 22, 23, 24, 34, 37, 40, 41, 43, 45, 47, 49, 60, 62, 66, 67, 69, 72, 73, 74, 272, 339, 353, 395, 471, 511, 533, 774, 776, 797, 810, 812, 877, 878, 936, 949, 986, 1150, 1152, 1231, 1321, 1338, 1343, 1348, 1352, 1353, 1359, 1360, 1361, 1363, 1364, 1365, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1387, 1389, 1391, 1395, 1397, 1398, 1399, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1439, 1440, 1442, 1443, 1444, 1445, 1452, 1456, 1457, 1458, 1460, 1461, 1467, 1468, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1501, 1502, 1503, 1523, 1524, 1525, 1533, 1535, 1536, 1544, 1545, 1549, 1560, 1561, 1564, 1565, 1569, 1575, 1583, 1584, 1585, 1586, 1587, 1595, 1606, 1607, 1618, 1619, 1633, 1681, 1710, 1743, 1752, 1753, 1797, 1817, 1834, 1835, 1841, 1875, 1881, 1882, 1893, 1895, 1896, 1897, 1898, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1922, 1923, 1924, 1926, 1927, 1930, 1936, 1937, 1939, 1940, 1941, 1943, 1944, 1945, 1946, 1949, 1950, 1951, 1953], "doesn": [0, 1, 2, 7, 8, 16, 29, 31, 40, 43, 45, 69, 71, 73, 74, 99, 839, 842, 896, 913, 923, 998, 1019, 1151, 1162, 1228, 1234, 1260, 1284, 1292, 1301, 1381, 1382, 1383, 1390, 1419, 1486, 1527, 1528, 1529, 1564, 1608, 1633, 1634, 1656, 1699, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1814, 1817, 1886, 1895, 1896, 1899, 1900, 1912, 1914, 1919, 1920, 1922, 1924, 1925, 1929, 1932, 1936, 1940, 1942, 1950, 1953], "help": [0, 1, 4, 7, 8, 16, 18, 19, 20, 22, 25, 29, 31, 33, 40, 41, 43, 57, 60, 66, 71, 74, 924, 925, 933, 1019, 1051, 1151, 1152, 1162, 1221, 1222, 1240, 1322, 1334, 1335, 1392, 1393, 1394, 1398, 1453, 1640, 1790, 1886, 1893, 1899, 1906, 1912, 1913, 1918, 1919, 1920, 1922, 1923, 1925, 1928, 1930, 1933, 1937, 1938, 1941, 1949, 1950, 1953, 1961], "revers": [0, 49, 72, 74, 529, 750, 809, 917, 919, 1112, 1114, 1134, 1154, 1156, 1161, 1288, 1423, 1466, 1594, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1863, 1880, 1897, 1898, 1899, 1919, 1923, 1925, 1939, 1959], "therefor": [0, 3, 5, 18, 20, 40, 41, 43, 49, 50, 58, 66, 69, 75, 80, 81, 101, 465, 560, 923, 937, 946, 970, 1040, 1128, 1145, 1147, 1150, 1178, 1179, 1233, 1236, 1266, 1279, 1396, 1397, 1504, 1543, 1544, 1552, 1675, 1715, 1899, 1918, 1919, 1922, 1924, 1926, 1929, 1937, 1951, 1953], "rais": [0, 1, 5, 7, 16, 20, 27, 28, 29, 33, 43, 47, 49, 51, 53, 60, 66, 71, 73, 74, 75, 107, 331, 333, 339, 713, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 949, 958, 999, 1064, 1137, 1142, 1219, 1221, 1226, 1228, 1236, 1238, 1250, 1252, 1260, 1261, 1264, 1268, 1269, 1274, 1281, 1282, 1286, 1287, 1292, 1313, 1338, 1453, 1602, 1627, 1645, 1646, 1651, 1653, 1656, 1666, 1689, 1690, 1691, 1777, 1875, 1893, 1900, 1906, 1911, 1919, 1922, 1924, 1926, 1933, 1937, 1941, 1942, 1948, 1949, 1960, 1964], "mani": [0, 3, 7, 13, 15, 16, 17, 19, 20, 22, 23, 28, 29, 31, 33, 40, 41, 43, 49, 60, 66, 70, 71, 74, 107, 420, 696, 905, 907, 917, 919, 1094, 1233, 1376, 1710, 1809, 1857, 1864, 1865, 1866, 1867, 1896, 1898, 1912, 1917, 1919, 1920, 1921, 1922, 1924, 1925, 1929, 1930, 1933, 1937, 1940, 1944, 1951, 1953, 1956, 1958, 1959, 1961], "sigmoid": [0, 49, 74, 543, 683, 684, 776, 811, 1369, 1370, 1396, 1405, 1406, 1423, 1424, 1482, 1524, 1551, 1605, 1895, 1897, 1912, 1913, 1917, 1938, 1939, 1946, 1954], "right": [0, 2, 7, 9, 16, 17, 21, 25, 26, 43, 45, 49, 66, 74, 836, 881, 937, 944, 946, 947, 952, 957, 1088, 1094, 1135, 1138, 1139, 1143, 1174, 1178, 1179, 1183, 1187, 1218, 1240, 1265, 1270, 1281, 1283, 1284, 1292, 1298, 1299, 1343, 1361, 1366, 1367, 1368, 1369, 1370, 1381, 1382, 1383, 1400, 1407, 1420, 1421, 1422, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1456, 1457, 1458, 1462, 1463, 1469, 1501, 1504, 1505, 1506, 1507, 1552, 1572, 1590, 1638, 1645, 1699, 1713, 1714, 1755, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1836, 1856, 1861, 1863, 1878, 1880, 1893, 1897, 1899, 1911, 1912, 1913, 1919, 1924, 1927, 1937, 1940, 1947, 1951, 1954], "entropi": [0, 49, 1369, 1389, 1457, 1524, 1525, 1535, 1954], "combin": [0, 3, 13, 20, 40, 41, 43, 60, 72, 73, 633, 705, 728, 729, 730, 731, 732, 733, 734, 735, 809, 870, 906, 1051, 1123, 1124, 1129, 1131, 1183, 1315, 1325, 1370, 1400, 1414, 1459, 1500, 1504, 1546, 1569, 1652, 1896, 1897, 1898, 1918, 1922, 1925, 1937, 1939, 1940, 1942, 1944, 1947, 1949], "bcewithlogitsloss": [0, 1525], "bcewithlogit": 0, "safe": [0, 12, 17, 18, 20, 29, 43, 60, 73, 74, 100, 102, 1041, 1042, 1061, 1062, 1633, 1696, 1697, 1896, 1899, 1918, 1919, 1922, 1925, 1929, 1949], "_convolut": [0, 1939], "avg_pool3d": [0, 1897, 1939, 1946], "grid_sampler_2d": [0, 1895, 1897, 1939], "_grid_sampler_2d_cpu_fallback": [0, 1939], "grid_sampler_3d": [0, 1897, 1939], "polar": [0, 49, 1280, 1897, 1939], "quantil": [0, 1321, 1350, 1897, 1939, 1954], "nanquantil": [0, 1897, 1939], "stft": [0, 937, 946, 1178, 1179, 1218, 1240, 1897, 1939], "view_as_complex": [0, 31, 1897, 1939], "choleski": [0, 2, 49, 960, 961, 1251, 1257, 1293, 1897, 1939], "cholesky_invers": [0, 2, 1897, 1939], "cholesky_solv": [0, 2, 1897, 1939], "invers": [0, 49, 699, 700, 898, 901, 955, 960, 961, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1218, 1261, 1262, 1274, 1278, 1281, 1286, 1287, 1384, 1385, 1386, 1396, 1397, 1400, 1449, 1450, 1451, 1504, 1543, 1544, 1579, 1580, 1581, 1642, 1645, 1669, 1715, 1721, 1871, 1894, 1897, 1899, 1933, 1939, 1954], "lu_solv": [0, 2, 1268, 1897, 1939], "orgqr": [0, 1897, 1939], "ormqr": [0, 1166, 1260, 1897, 1939], "pinvers": [0, 1266, 1897, 1939], "max_pool3d": [0, 1897, 1939, 1946], "max_unpool2d": [0, 1547, 1577, 1897, 1939], "max_unpool3d": [0, 1548, 1578, 1897, 1939], "adaptive_avg_pool3d": [0, 1897, 1924, 1939, 1946], "reflection_pad1d": [0, 1897, 1939], "reflection_pad2d": [0, 1895, 1897, 1939], "replication_pad1d": [0, 1897, 1939], "replication_pad2d": [0, 1895, 1897, 1939], "replication_pad3d": [0, 1895, 1897, 1939], "ctc_loss": [0, 1376, 1897, 1939], "fft_fft": [0, 1897, 1939], "fft_ifft": [0, 1897, 1939], "fft_fft2": [0, 1897, 1939], "fft_ifft2": [0, 1897, 1939], "fft_fftn": [0, 1897, 1939], "fft_ifftn": [0, 1897, 1939], "fft_rfft": [0, 1897, 1939], "fft_irfft": [0, 1897, 1939], "fft_rfft2": [0, 1897, 1939], "fft_irfft2": [0, 1897, 1939], "fft_rfftn": [0, 1897, 1939], "fft_irfftn": [0, 1897, 1939], "fft_hfft": [0, 1897, 1939], "fft_ihfft": [0, 1897, 1939], "linalg_matrix_norm": [0, 1897, 1939], "linalg_cond": [0, 1897, 1939], "linalg_matrix_rank": [0, 1897, 1939], "linalg_solv": [0, 1897, 1939], "linalg_choleski": [0, 1897, 1939], "linalg_svdv": [0, 1897, 1939], "linalg_eigv": [0, 1897, 1939], "linalg_eigvalsh": [0, 1897, 1939], "linalg_inv": [0, 1897, 1939], "linalg_householder_product": [0, 1897, 1939], "linalg_tensorinv": [0, 1897, 1939], "linalg_tensorsolv": [0, 1897, 1939], "fake_quantize_per_tensor_affin": [0, 1897, 1939], "eig": [0, 1257, 1258, 1284, 1933], "geqrf": [0, 1260, 1727, 1897, 1939], "lstsq": [0, 1166, 1252, 1278], "_lu_with_info": [0, 1939], "qr": [0, 2, 1166, 1256, 1257, 1260, 1266, 1284, 1640, 1727, 1897, 1939], "solv": [0, 7, 17, 21, 31, 961, 1166, 1174, 1252, 1261, 1263, 1264, 1267, 1268, 1270, 1274, 1282, 1283, 1287, 1293, 1311, 1863, 1919, 1927, 1933, 1936], "svd": [0, 2, 31, 1256, 1257, 1266, 1278, 1285, 1301, 1645, 1729, 1841, 1895, 1897, 1933, 1939, 1953], "symeig": 0, "triangular_solv": [0, 1897, 1939], "fractional_max_pool2d": [0, 1897, 1939], "fractional_max_pool3d": [0, 1897, 1939], "adaptive_max_pool3d": [0, 1897, 1939], "multilabel_margin_loss_forward": [0, 1939], "linalg_qr": [0, 1897, 1939], "linalg_cholesky_ex": [0, 1897, 1939], "linalg_svd": [0, 1897, 1939], "linalg_eig": [0, 1897, 1939], "linalg_eigh": [0, 1897, 1939], "linalg_lstsq": [0, 1897, 1939], "linalg_inv_ex": [0, 1897, 1939], "cat": [0, 15, 43, 49, 74, 560, 763, 764, 773, 809, 812, 977, 978, 1322, 1472, 1821, 1833, 1895, 1896, 1897, 1912, 1937, 1939, 1941, 1944, 1946, 1953, 1962], "stack": [0, 8, 14, 16, 17, 18, 20, 21, 29, 37, 40, 41, 43, 49, 53, 70, 71, 74, 776, 933, 955, 966, 1055, 1056, 1093, 1160, 1162, 1186, 1322, 1376, 1405, 1423, 1424, 1468, 1497, 1499, 1670, 1877, 1886, 1888, 1894, 1897, 1914, 1922, 1923, 1926, 1938, 1939, 1941, 1943, 1946, 1953], "index_copi": [0, 1875, 1897, 1939], "implement": [1, 2, 5, 8, 12, 15, 20, 23, 35, 36, 40, 41, 43, 44, 45, 47, 48, 49, 52, 57, 58, 61, 66, 71, 74, 75, 77, 83, 99, 169, 529, 531, 533, 703, 754, 755, 756, 757, 758, 759, 776, 795, 797, 801, 809, 816, 835, 836, 837, 840, 841, 842, 894, 896, 909, 918, 924, 925, 984, 1094, 1137, 1142, 1147, 1154, 1155, 1157, 1158, 1221, 1228, 1230, 1231, 1234, 1276, 1279, 1292, 1293, 1321, 1361, 1376, 1390, 1405, 1421, 1422, 1453, 1459, 1465, 1472, 1489, 1498, 1500, 1552, 1590, 1602, 1610, 1633, 1637, 1638, 1640, 1641, 1645, 1656, 1669, 1673, 1674, 1677, 1688, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1713, 1715, 1721, 1739, 1746, 1759, 1768, 1771, 1808, 1817, 1840, 1841, 1856, 1872, 1875, 1876, 1878, 1898, 1899, 1900, 1903, 1906, 1911, 1914, 1915, 1917, 1918, 1919, 1921, 1922, 1924, 1925, 1926, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1940, 1941, 1942, 1944, 1949, 1950, 1953, 1954, 1957, 1959, 1964], "arbitrari": [1, 3, 17, 23, 29, 43, 47, 75, 78, 82, 272, 906, 1077, 1284, 1292, 1390, 1396, 1420, 1444, 1504, 1524, 1525, 1543, 1564, 1590, 1666, 1840, 1861, 1899, 1905, 1919, 1925, 1929, 1930, 1940, 1942, 1944, 1953, 1961, 1964], "scalar": [1, 16, 28, 43, 49, 75, 83, 116, 169, 173, 278, 331, 463, 605, 703, 704, 754, 755, 756, 757, 758, 759, 895, 896, 909, 917, 918, 921, 923, 941, 944, 952, 982, 986, 1089, 1094, 1109, 1142, 1148, 1174, 1181, 1198, 1212, 1245, 1246, 1315, 1322, 1350, 1361, 1369, 1370, 1376, 1387, 1389, 1390, 1407, 1413, 1414, 1419, 1420, 1425, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1502, 1554, 1596, 1679, 1684, 1685, 1689, 1723, 1736, 1738, 1740, 1758, 1759, 1775, 1823, 1824, 1825, 1826, 1827, 1854, 1872, 1873, 1889, 1891, 1892, 1895, 1897, 1898, 1899, 1909, 1914, 1917, 1919, 1924, 1927, 1937, 1949, 1953, 1956, 1958, 1960], "minim": [1, 7, 8, 17, 29, 835, 891, 1323, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1707, 1708, 1709, 1710, 1723, 1893, 1909, 1918, 1922, 1930, 1932, 1935, 1937, 1942, 1944], "exist": [1, 7, 8, 9, 12, 13, 16, 18, 25, 31, 33, 40, 43, 44, 45, 49, 51, 53, 58, 60, 61, 66, 70, 74, 75, 97, 98, 272, 515, 808, 870, 894, 917, 918, 919, 920, 921, 922, 923, 924, 987, 988, 989, 990, 991, 992, 993, 1035, 1221, 1225, 1236, 1256, 1261, 1267, 1268, 1293, 1350, 1453, 1454, 1463, 1815, 1833, 1878, 1893, 1895, 1896, 1903, 1906, 1911, 1912, 1914, 1915, 1919, 1920, 1922, 1924, 1925, 1928, 1929, 1930, 1931, 1933, 1935, 1937, 1941, 1942, 1943, 1944, 1949, 1951, 1953, 1957, 1959], "code": [1, 3, 4, 8, 9, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 33, 34, 35, 40, 41, 43, 49, 51, 61, 62, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 138, 696, 968, 970, 987, 988, 989, 990, 991, 992, 993, 1037, 1038, 1051, 1151, 1196, 1221, 1225, 1226, 1231, 1232, 1233, 1236, 1237, 1238, 1251, 1262, 1264, 1292, 1469, 1481, 1633, 1787, 1893, 1894, 1898, 1899, 1905, 1913, 1919, 1920, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1932, 1935, 1936, 1937, 1940, 1948, 1949, 1950, 1951, 1953, 1956, 1957, 1964], "declar": [1, 9, 33, 40, 61, 1898, 1899, 1900, 1924, 1937, 1941, 1942], "requires_grad": [1, 5, 14, 16, 25, 49, 72, 353, 462, 463, 464, 465, 466, 504, 512, 881, 896, 913, 915, 916, 924, 925, 927, 929, 930, 937, 946, 1040, 1095, 1096, 1097, 1098, 1107, 1112, 1130, 1147, 1148, 1149, 1152, 1162, 1178, 1179, 1196, 1221, 1240, 1291, 1307, 1369, 1370, 1389, 1396, 1397, 1407, 1419, 1420, 1444, 1445, 1453, 1459, 1460, 1467, 1500, 1501, 1524, 1525, 1535, 1587, 1633, 1634, 1635, 1636, 1673, 1678, 1684, 1685, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1785, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1875, 1886, 1891, 1892, 1895, 1897, 1901, 1912, 1913, 1914, 1922, 1924, 1925, 1930, 1935, 1937, 1939, 1949, 1950, 1959, 1960, 1961], "type": [1, 2, 3, 5, 13, 14, 15, 19, 20, 28, 33, 34, 36, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 58, 60, 61, 62, 66, 71, 73, 74, 75, 77, 80, 81, 83, 100, 102, 107, 169, 210, 215, 227, 344, 347, 351, 359, 462, 463, 464, 465, 466, 498, 575, 620, 696, 701, 702, 703, 704, 705, 706, 750, 751, 754, 755, 756, 765, 767, 768, 769, 770, 772, 780, 782, 783, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 800, 808, 809, 810, 813, 831, 832, 833, 835, 836, 837, 838, 839, 841, 843, 856, 870, 871, 872, 873, 874, 875, 876, 877, 878, 881, 895, 905, 906, 907, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 929, 930, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 952, 953, 954, 955, 956, 958, 967, 968, 974, 989, 990, 991, 992, 1004, 1006, 1013, 1014, 1015, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1032, 1034, 1037, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1052, 1053, 1057, 1069, 1071, 1072, 1075, 1076, 1089, 1094, 1095, 1096, 1097, 1107, 1108, 1109, 1112, 1130, 1137, 1139, 1140, 1141, 1142, 1145, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1158, 1159, 1160, 1162, 1164, 1168, 1169, 1170, 1173, 1178, 1179, 1181, 1182, 1183, 1197, 1200, 1203, 1206, 1217, 1218, 1219, 1221, 1222, 1224, 1227, 1230, 1232, 1234, 1236, 1237, 1239, 1240, 1243, 1252, 1256, 1273, 1277, 1284, 1290, 1291, 1292, 1293, 1307, 1310, 1313, 1320, 1322, 1329, 1330, 1332, 1342, 1348, 1351, 1361, 1365, 1381, 1382, 1383, 1390, 1397, 1443, 1453, 1454, 1455, 1459, 1463, 1464, 1481, 1486, 1487, 1488, 1496, 1497, 1498, 1499, 1500, 1512, 1513, 1517, 1518, 1522, 1524, 1525, 1526, 1527, 1528, 1529, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1545, 1546, 1549, 1551, 1552, 1553, 1554, 1556, 1557, 1558, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1570, 1571, 1573, 1574, 1575, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1595, 1597, 1598, 1600, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1615, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1677, 1679, 1680, 1684, 1685, 1687, 1689, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1729, 1737, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759, 1761, 1765, 1768, 1775, 1776, 1779, 1780, 1781, 1783, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1816, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1836, 1837, 1839, 1840, 1841, 1854, 1863, 1865, 1867, 1872, 1873, 1875, 1876, 1877, 1880, 1886, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1907, 1908, 1909, 1912, 1914, 1917, 1918, 1919, 1921, 1922, 1927, 1928, 1929, 1930, 1933, 1935, 1936, 1938, 1939, 1942, 1943, 1944, 1946, 1947, 1948, 1949, 1953, 1954, 1955, 1956, 1958, 1960, 1961, 1962, 1963, 1964], "doubl": [1, 3, 51, 498, 504, 633, 765, 767, 768, 769, 770, 772, 782, 783, 797, 913, 915, 920, 924, 925, 953, 960, 976, 994, 1040, 1109, 1137, 1174, 1221, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1301, 1302, 1303, 1304, 1305, 1311, 1397, 1453, 1512, 1515, 1544, 1624, 1689, 1727, 1733, 1822, 1823, 1824, 1826, 1827, 1840, 1854, 1863, 1889, 1899, 1912, 1922, 1924, 1925, 1933, 1937, 1941, 1955, 1956, 1959], "bfloat16": [1, 41, 66, 1203, 1221, 1272, 1289, 1453, 1689, 1696, 1697, 1783, 1912, 1922, 1953, 1955, 1956, 1959, 1960, 1965], "cfloat": [1, 31, 43, 329, 500, 633, 960, 994, 1191, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1311, 1727, 1757, 1840, 1863, 1885, 1956, 1959], "cdoubl": [1, 31, 960, 994, 1221, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1311, 1453, 1727, 1840, 1863, 1956, 1959], "beta": [1, 2, 31, 67, 73, 118, 119, 124, 125, 126, 127, 128, 129, 170, 171, 339, 533, 570, 702, 705, 706, 707, 936, 995, 1029, 1030, 1037, 1038, 1040, 1178, 1240, 1315, 1325, 1371, 1372, 1373, 1408, 1414, 1416, 1417, 1418, 1425, 1441, 1484, 1489, 1492, 1569, 1570, 1602, 1606, 1610, 1696, 1697, 1698, 1700, 1706, 1710, 1743, 1801, 1803, 1814, 1818, 1832, 1894, 1895, 1897, 1907, 1922, 1937, 1944, 1949, 1953, 1956, 1961], "even": [1, 8, 12, 15, 16, 18, 19, 20, 40, 41, 43, 48, 51, 66, 73, 74, 102, 560, 596, 831, 832, 833, 909, 986, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1125, 1126, 1127, 1130, 1161, 1206, 1233, 1250, 1252, 1256, 1257, 1258, 1259, 1273, 1277, 1279, 1280, 1284, 1285, 1290, 1315, 1321, 1390, 1492, 1527, 1528, 1529, 1590, 1633, 1640, 1678, 1680, 1721, 1768, 1779, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1840, 1884, 1896, 1899, 1900, 1909, 1914, 1918, 1919, 1922, 1924, 1926, 1928, 1930, 1932, 1933, 1934, 1935, 1940, 1941, 1942, 1951, 1956], "though": [1, 16, 43, 74, 75, 78, 169, 810, 906, 909, 919, 1110, 1111, 1113, 1219, 1222, 1315, 1680, 1896, 1900, 1913, 1914, 1919, 1924, 1925, 1932, 1933, 1940, 1944], "signatur": [1, 19, 20, 40, 53, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 99, 416, 504, 572, 929, 930, 996, 1221, 1453, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1645, 1666, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1836, 1922, 1924, 1925, 1937, 1941, 1942, 1949, 1953, 1964], "veri": [1, 4, 7, 8, 16, 17, 18, 19, 20, 28, 29, 37, 40, 41, 43, 70, 72, 74, 970, 984, 1152, 1160, 1162, 1283, 1416, 1417, 1418, 1633, 1634, 1640, 1699, 1721, 1727, 1804, 1808, 1863, 1886, 1898, 1911, 1919, 1924, 1926, 1927, 1928, 1930, 1932, 1933, 1936, 1940, 1941, 1948, 1949, 1950, 1953], "unlik": [1, 3, 7, 15, 18, 49, 66, 72, 509, 1091, 1130, 1133, 1137, 1196, 1256, 1257, 1276, 1279, 1284, 1288, 1318, 1321, 1323, 1425, 1635, 1636, 1758, 1780, 1883, 1898, 1899, 1911, 1914, 1922, 1932, 1934, 1956, 1961], "coverag": [1, 7, 19, 67, 74, 1154, 1155, 1894, 1896, 1901, 1913, 1944, 1953, 1964], "plan": [1, 2, 7, 9, 15, 28, 29, 43, 45, 48, 910, 1633, 1739, 1914, 1919, 1924, 1941, 1953], "consid": [1, 5, 8, 15, 28, 41, 43, 51, 60, 66, 71, 73, 74, 710, 795, 801, 810, 917, 919, 920, 924, 961, 986, 1081, 1082, 1083, 1084, 1085, 1115, 1150, 1210, 1214, 1217, 1221, 1261, 1263, 1264, 1265, 1266, 1274, 1275, 1278, 1283, 1286, 1389, 1400, 1453, 1456, 1504, 1517, 1552, 1563, 1621, 1634, 1640, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1675, 1709, 1777, 1797, 1831, 1864, 1865, 1866, 1867, 1893, 1896, 1899, 1903, 1906, 1918, 1919, 1920, 1924, 1926, 1927, 1930, 1933, 1941, 1943, 1945, 1950, 1951, 1953, 1956, 1959, 1960, 1964], "ad": [1, 3, 9, 13, 16, 17, 19, 23, 28, 33, 40, 41, 43, 47, 49, 57, 66, 69, 71, 72, 73, 74, 240, 241, 331, 337, 488, 531, 696, 702, 703, 704, 705, 706, 707, 751, 910, 911, 912, 917, 918, 919, 920, 924, 936, 1094, 1098, 1154, 1155, 1157, 1196, 1221, 1234, 1298, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1459, 1460, 1462, 1467, 1481, 1492, 1496, 1501, 1504, 1530, 1531, 1532, 1549, 1576, 1577, 1578, 1602, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1645, 1652, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1678, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1743, 1744, 1745, 1785, 1814, 1818, 1832, 1893, 1894, 1895, 1896, 1898, 1903, 1909, 1913, 1918, 1925, 1927, 1929, 1930, 1941, 1944, 1947, 1953, 1958, 1961], "tutori": [1, 3, 9, 16, 19, 21, 34, 43, 44, 47, 74, 910, 911, 912, 915, 1878, 1894, 1896, 1903, 1906, 1915, 1924, 1929, 1930, 1932, 1935, 1937, 1944], "how": [1, 3, 5, 7, 8, 9, 15, 18, 19, 20, 21, 22, 27, 34, 36, 40, 43, 45, 48, 52, 60, 61, 62, 66, 67, 68, 70, 71, 74, 75, 82, 83, 504, 801, 808, 809, 812, 857, 875, 877, 878, 910, 911, 912, 915, 929, 930, 1077, 1098, 1151, 1160, 1174, 1196, 1221, 1231, 1292, 1400, 1453, 1504, 1505, 1590, 1621, 1633, 1666, 1678, 1759, 1783, 1785, 1798, 1809, 1894, 1896, 1898, 1899, 1903, 1906, 1908, 1911, 1912, 1913, 1915, 1918, 1921, 1923, 1925, 1926, 1927, 1930, 1932, 1934, 1935, 1937, 1942, 1944, 1947, 1949, 1950, 1951, 1953, 1958], "major": [1, 6, 7, 8, 9, 15, 17, 19, 22, 1022, 1840, 1894, 1899, 1940], "build": [1, 8, 9, 12, 19, 29, 33, 34, 43, 49, 74, 1221, 1230, 1453, 1499, 1517, 1552, 1894, 1896, 1906, 1915, 1919, 1937, 1942, 1944, 1950, 1958, 1959], "basic": [1, 3, 7, 9, 17, 20, 45, 60, 74, 75, 76, 1154, 1155, 1156, 1227, 1293, 1633, 1715, 1894, 1900, 1915, 1920, 1922, 1923, 1927, 1941, 1950, 1957, 1958], "jacobian": [1, 49, 67, 68, 70, 71, 909, 911, 917, 920, 922, 923, 924, 925, 1155, 1156, 1157, 1161, 1162, 1886, 1919, 1924, 1927], "hessian": [1, 67, 70, 71, 918, 921, 1155, 1156, 1917, 1925], "etc": [1, 3, 5, 12, 14, 18, 20, 27, 31, 40, 41, 43, 49, 51, 60, 61, 66, 875, 876, 877, 970, 1218, 1221, 1389, 1453, 1633, 1687, 1761, 1893, 1898, 1899, 1906, 1924, 1925, 1926, 1930, 1932, 1937, 1940, 1941, 1944, 1949, 1953, 1955, 1958, 1961], "user": [1, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 29, 31, 34, 40, 41, 43, 44, 45, 48, 49, 50, 51, 53, 57, 60, 61, 63, 66, 67, 70, 71, 73, 74, 75, 99, 169, 353, 748, 754, 755, 756, 761, 762, 772, 780, 810, 813, 815, 854, 870, 877, 878, 909, 915, 923, 998, 1031, 1145, 1150, 1151, 1221, 1292, 1453, 1496, 1498, 1499, 1500, 1602, 1627, 1628, 1633, 1642, 1656, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1893, 1894, 1896, 1898, 1899, 1903, 1906, 1911, 1913, 1914, 1918, 1919, 1920, 1922, 1924, 1927, 1928, 1929, 1930, 1932, 1937, 1938, 1940, 1942, 1943, 1944, 1946, 1949, 1950, 1953, 1957, 1958, 1960, 1964], "input": [1, 2, 3, 5, 9, 12, 15, 16, 25, 27, 28, 29, 31, 34, 38, 40, 41, 43, 44, 47, 48, 49, 50, 53, 66, 67, 68, 69, 70, 71, 72, 74, 75, 82, 83, 97, 99, 100, 101, 107, 169, 278, 298, 319, 419, 500, 515, 533, 625, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 736, 744, 745, 750, 751, 754, 755, 756, 757, 758, 759, 761, 762, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 818, 830, 833, 835, 853, 854, 855, 856, 873, 874, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 890, 891, 892, 893, 894, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 909, 913, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 933, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 954, 956, 957, 959, 960, 961, 962, 963, 964, 965, 967, 968, 976, 979, 980, 981, 982, 983, 984, 985, 986, 994, 1010, 1037, 1038, 1040, 1073, 1074, 1075, 1076, 1078, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1162, 1163, 1164, 1165, 1166, 1167, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1198, 1199, 1200, 1201, 1203, 1206, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1221, 1224, 1225, 1227, 1228, 1232, 1234, 1236, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1308, 1309, 1311, 1313, 1314, 1315, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1620, 1621, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1631, 1632, 1633, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1659, 1660, 1661, 1662, 1666, 1667, 1668, 1670, 1675, 1678, 1679, 1680, 1682, 1683, 1685, 1687, 1688, 1691, 1692, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1714, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1749, 1751, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1772, 1773, 1774, 1777, 1778, 1780, 1791, 1792, 1793, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1831, 1832, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1849, 1850, 1851, 1852, 1853, 1855, 1857, 1858, 1859, 1860, 1863, 1864, 1866, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1889, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1903, 1906, 1907, 1913, 1914, 1915, 1917, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1933, 1934, 1935, 1937, 1940, 1942, 1943, 1944, 1945, 1947, 1948, 1949, 1950, 1953, 1954, 1956, 1957, 1960, 1962, 1963, 1964], "can": [1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 45, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 97, 98, 99, 100, 101, 102, 169, 173, 272, 341, 353, 475, 504, 529, 531, 561, 630, 633, 696, 703, 745, 757, 758, 759, 764, 773, 774, 776, 784, 785, 788, 789, 790, 801, 807, 808, 809, 810, 813, 815, 830, 836, 839, 840, 842, 853, 857, 870, 874, 875, 877, 878, 879, 895, 896, 905, 906, 907, 909, 910, 911, 912, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 932, 938, 955, 961, 968, 971, 974, 979, 995, 997, 1007, 1009, 1011, 1018, 1019, 1037, 1039, 1043, 1045, 1047, 1051, 1052, 1077, 1094, 1095, 1098, 1099, 1112, 1114, 1115, 1116, 1117, 1130, 1133, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1160, 1161, 1162, 1165, 1166, 1174, 1177, 1182, 1183, 1196, 1212, 1218, 1219, 1221, 1222, 1224, 1225, 1227, 1231, 1232, 1234, 1236, 1237, 1242, 1245, 1252, 1260, 1263, 1267, 1268, 1273, 1276, 1279, 1280, 1284, 1290, 1292, 1309, 1310, 1312, 1322, 1331, 1350, 1352, 1353, 1354, 1359, 1360, 1361, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1401, 1402, 1405, 1410, 1411, 1412, 1414, 1420, 1422, 1423, 1426, 1427, 1428, 1439, 1443, 1444, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1455, 1458, 1459, 1460, 1462, 1463, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1480, 1481, 1484, 1489, 1492, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1505, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1547, 1548, 1563, 1576, 1577, 1578, 1596, 1602, 1621, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1635, 1636, 1637, 1645, 1666, 1667, 1673, 1678, 1680, 1684, 1687, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1705, 1706, 1707, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1718, 1719, 1721, 1725, 1727, 1736, 1740, 1748, 1752, 1762, 1768, 1771, 1783, 1785, 1786, 1788, 1813, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1834, 1835, 1836, 1840, 1854, 1858, 1861, 1863, 1871, 1874, 1876, 1878, 1881, 1882, 1886, 1891, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1903, 1905, 1906, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1918, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1947, 1949, 1950, 1951, 1953, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965], "lambda": [1, 40, 45, 49, 69, 72, 73, 74, 75, 82, 83, 276, 504, 929, 930, 956, 1152, 1157, 1161, 1162, 1256, 1257, 1258, 1259, 1292, 1409, 1490, 1502, 1592, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1709, 1715, 1717, 1720, 1886, 1900, 1919, 1924, 1925, 1940, 1941, 1949, 1960, 1964], "captur": [1, 12, 14, 15, 17, 20, 25, 27, 29, 34, 74, 75, 78, 82, 83, 696, 995, 997, 1029, 1035, 1040, 1224, 1696, 1697, 1896, 1900, 1905, 1924, 1925, 1928, 1937, 1941, 1944, 1963], "f": [1, 10, 13, 15, 20, 27, 28, 41, 43, 49, 51, 52, 57, 58, 67, 68, 71, 72, 73, 74, 75, 76, 192, 276, 304, 353, 395, 911, 912, 1112, 1114, 1121, 1130, 1151, 1152, 1154, 1155, 1156, 1157, 1161, 1162, 1174, 1221, 1228, 1231, 1232, 1292, 1419, 1421, 1422, 1424, 1453, 1502, 1519, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1543, 1544, 1547, 1548, 1554, 1587, 1589, 1590, 1602, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1771, 1886, 1896, 1898, 1899, 1912, 1913, 1919, 1922, 1924, 1926, 1927, 1928, 1930, 1936, 1937, 1941, 1942, 1953, 1958, 1960, 1964], "three": [1, 2, 6, 9, 24, 43, 47, 48, 66, 68, 71, 74, 102, 904, 1092, 1094, 1174, 1183, 1264, 1267, 1268, 1269, 1284, 1312, 1368, 1383, 1386, 1425, 1448, 1602, 1640, 1680, 1715, 1783, 1899, 1919, 1922, 1923, 1924, 1937, 1941, 1942, 1944, 1949, 1951, 1953, 1958], "anoth": [1, 5, 7, 12, 13, 17, 20, 23, 28, 40, 41, 43, 45, 49, 50, 51, 62, 66, 74, 503, 975, 995, 997, 998, 1000, 1145, 1230, 1256, 1257, 1260, 1284, 1396, 1397, 1454, 1463, 1624, 1641, 1779, 1896, 1898, 1899, 1905, 1918, 1919, 1921, 1922, 1924, 1930, 1932, 1936, 1941, 1942, 1950, 1951, 1953, 1959, 1961], "constant": [1, 16, 19, 20, 40, 74, 75, 76, 80, 81, 83, 84, 760, 791, 837, 838, 971, 1077, 1134, 1135, 1136, 1218, 1221, 1225, 1236, 1268, 1293, 1378, 1379, 1380, 1397, 1400, 1407, 1462, 1484, 1501, 1504, 1549, 1552, 1590, 1641, 1691, 1707, 1712, 1715, 1861, 1897, 1899, 1918, 1924, 1930, 1934, 1937, 1940, 1953], "boolean": [1, 33, 49, 60, 74, 75, 82, 83, 418, 420, 905, 940, 942, 943, 945, 973, 997, 998, 1000, 1099, 1165, 1177, 1210, 1211, 1212, 1213, 1214, 1217, 1245, 1293, 1309, 1314, 1354, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1492, 1602, 1642, 1645, 1739, 1834, 1835, 1858, 1881, 1882, 1898, 1900, 1924, 1955, 1956, 1958, 1959, 1960, 1961], "flag": [1, 2, 17, 18, 28, 29, 33, 43, 44, 50, 61, 63, 66, 69, 71, 74, 751, 889, 917, 919, 937, 946, 959, 960, 968, 1025, 1145, 1150, 1152, 1153, 1155, 1156, 1157, 1161, 1162, 1178, 1179, 1196, 1202, 1209, 1292, 1312, 1459, 1563, 1564, 1633, 1642, 1645, 1675, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1783, 1785, 1790, 1815, 1863, 1875, 1886, 1894, 1896, 1899, 1911, 1919, 1922, 1924, 1933, 1934, 1937, 1941, 1944, 1958, 1959], "inform": [1, 2, 3, 4, 7, 8, 9, 11, 15, 16, 20, 22, 25, 29, 36, 37, 39, 40, 41, 43, 44, 47, 51, 52, 53, 56, 60, 61, 66, 68, 74, 210, 227, 273, 331, 339, 504, 514, 531, 533, 634, 696, 751, 919, 924, 925, 929, 930, 939, 1098, 1129, 1131, 1151, 1196, 1218, 1221, 1237, 1250, 1257, 1266, 1381, 1382, 1383, 1384, 1385, 1386, 1414, 1423, 1449, 1450, 1451, 1453, 1459, 1468, 1480, 1496, 1498, 1500, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1544, 1563, 1602, 1621, 1622, 1623, 1633, 1666, 1678, 1691, 1738, 1765, 1785, 1790, 1815, 1875, 1896, 1899, 1905, 1906, 1914, 1915, 1919, 1921, 1922, 1923, 1924, 1929, 1930, 1933, 1937, 1938, 1941, 1943, 1944, 1956, 1958, 1959, 1960, 1963, 1965], "well": [1, 3, 5, 7, 9, 13, 16, 18, 21, 23, 33, 41, 43, 60, 66, 71, 72, 74, 633, 807, 838, 841, 877, 1037, 1155, 1156, 1221, 1225, 1231, 1236, 1256, 1257, 1258, 1260, 1266, 1279, 1284, 1330, 1371, 1372, 1373, 1389, 1423, 1453, 1492, 1573, 1574, 1633, 1691, 1739, 1896, 1899, 1906, 1912, 1914, 1918, 1919, 1922, 1924, 1925, 1927, 1930, 1932, 1934, 1937, 1941, 1944, 1947, 1949, 1951, 1953, 1957, 1958, 1961], "relat": [1, 6, 7, 9, 40, 43, 51, 65, 66, 71, 75, 76, 81, 83, 696, 1174, 1260, 1400, 1484, 1504, 1633, 1729, 1876, 1914, 1919, 1935, 1941, 1949, 1953, 1954, 1960, 1964], "mechan": [1, 8, 12, 43, 54, 58, 60, 74, 895, 1098, 1196, 1221, 1453, 1602, 1678, 1785, 1854, 1894, 1911, 1914, 1923, 1924, 1929, 1930, 1947, 1949, 1950], "confus": [1, 8, 18, 20, 75, 1221, 1453, 1919, 1922, 1941, 1953], "receiv": [1, 7, 9, 15, 20, 29, 40, 43, 47, 49, 71, 73, 1051, 1221, 1453, 1629, 1630, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1724, 1899, 1909, 1911, 1918, 1919, 1932, 1942, 1949, 1950, 1951, 1953], "initi": [1, 3, 4, 8, 12, 20, 25, 28, 36, 37, 40, 41, 45, 47, 51, 53, 60, 61, 63, 66, 107, 512, 515, 596, 728, 729, 730, 731, 732, 733, 736, 746, 747, 748, 749, 761, 762, 772, 776, 780, 877, 878, 895, 975, 997, 1005, 1026, 1031, 1032, 1035, 1036, 1061, 1095, 1096, 1097, 1168, 1197, 1219, 1221, 1233, 1234, 1292, 1293, 1310, 1371, 1372, 1373, 1374, 1376, 1384, 1385, 1386, 1390, 1396, 1397, 1405, 1406, 1408, 1416, 1417, 1418, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1453, 1461, 1468, 1470, 1492, 1502, 1543, 1624, 1633, 1635, 1636, 1640, 1642, 1645, 1673, 1687, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1725, 1779, 1780, 1781, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1894, 1897, 1898, 1899, 1909, 1914, 1917, 1919, 1922, 1923, 1924, 1929, 1936, 1937, 1940, 1941, 1942, 1948, 1949, 1950], "memori": [1, 2, 3, 5, 12, 16, 17, 19, 21, 24, 28, 31, 41, 45, 47, 49, 50, 66, 70, 74, 169, 174, 189, 191, 194, 197, 198, 199, 214, 225, 228, 258, 272, 285, 315, 343, 349, 355, 357, 358, 411, 462, 463, 464, 465, 466, 475, 480, 503, 515, 516, 540, 541, 596, 619, 633, 750, 779, 894, 896, 909, 915, 924, 925, 950, 965, 968, 995, 996, 999, 1002, 1003, 1005, 1019, 1020, 1029, 1030, 1033, 1037, 1039, 1040, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1053, 1058, 1059, 1060, 1064, 1094, 1095, 1096, 1097, 1145, 1146, 1147, 1149, 1150, 1151, 1156, 1158, 1162, 1221, 1238, 1266, 1292, 1329, 1330, 1331, 1338, 1397, 1423, 1424, 1453, 1496, 1497, 1498, 1500, 1602, 1620, 1633, 1640, 1666, 1678, 1685, 1687, 1688, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1748, 1749, 1751, 1752, 1753, 1754, 1854, 1875, 1886, 1892, 1894, 1896, 1907, 1911, 1913, 1914, 1919, 1924, 1932, 1937, 1942, 1943, 1944, 1949, 1953, 1955, 1956, 1957, 1959, 1960], "overlap": [1, 15, 17, 28, 40, 41, 43, 47, 66, 74, 894, 924, 925, 1097, 1151, 1218, 1400, 1504, 1633, 1836, 1875, 1922, 1923, 1956], "dens": [1, 15, 47, 237, 561, 562, 599, 600, 601, 602, 603, 604, 937, 946, 1178, 1179, 1240, 1293, 1710, 1811, 1814, 1817, 1818, 1821, 1822, 1823, 1824, 1826, 1827, 1832, 1841, 1875, 1914, 1934, 1953, 1956], "stride": [1, 14, 15, 16, 29, 31, 75, 80, 83, 157, 240, 272, 357, 462, 463, 464, 465, 466, 515, 536, 560, 597, 599, 600, 601, 603, 604, 633, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 784, 785, 788, 789, 790, 798, 799, 881, 894, 937, 946, 1095, 1097, 1107, 1112, 1130, 1148, 1149, 1178, 1179, 1185, 1221, 1230, 1234, 1240, 1291, 1307, 1325, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1421, 1422, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1465, 1504, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1546, 1573, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1620, 1633, 1684, 1744, 1745, 1748, 1750, 1751, 1752, 1754, 1755, 1762, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1817, 1860, 1865, 1867, 1884, 1891, 1895, 1897, 1900, 1912, 1937, 1939, 1949, 1953, 1955, 1956, 1958, 1959, 1960], "rowmajor": [1, 1633], "contigu": [1, 31, 41, 45, 349, 515, 536, 633, 1399, 1456, 1592, 1633, 1756, 1762, 1840, 1897, 1913, 1914, 1939, 1946, 1953, 1955, 1957], "create_graph": [1, 169, 909, 917, 918, 919, 920, 921, 922, 923, 1897, 1918], "preserv": [1, 12, 16, 40, 49, 66, 74, 515, 795, 801, 870, 892, 895, 1135, 1136, 1151, 1221, 1225, 1231, 1453, 1454, 1463, 1505, 1563, 1621, 1692, 1771, 1775, 1813, 1854, 1896, 1907, 1912, 1914, 1917, 1922, 1925, 1934, 1937, 1949, 1953, 1956], "preexist": [1, 15, 16], "behavior": [1, 2, 7, 16, 18, 20, 29, 33, 39, 41, 43, 44, 45, 47, 49, 50, 53, 58, 61, 66, 70, 71, 73, 74, 101, 272, 337, 488, 515, 529, 560, 633, 703, 801, 809, 842, 894, 908, 944, 950, 954, 967, 1089, 1094, 1095, 1096, 1097, 1139, 1146, 1147, 1151, 1221, 1231, 1234, 1236, 1266, 1273, 1277, 1290, 1291, 1292, 1307, 1315, 1322, 1390, 1393, 1414, 1423, 1453, 1468, 1492, 1505, 1517, 1552, 1620, 1621, 1624, 1625, 1633, 1634, 1677, 1679, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1733, 1739, 1755, 1762, 1804, 1840, 1861, 1875, 1893, 1896, 1900, 1901, 1903, 1905, 1912, 1914, 1920, 1922, 1924, 1925, 1933, 1934, 1935, 1937, 1940, 1941, 1942, 1945, 1946, 1949, 1954, 1957], "let": [1, 7, 8, 12, 13, 16, 19, 20, 22, 28, 29, 40, 41, 48, 49, 61, 71, 74, 503, 512, 963, 1174, 1221, 1240, 1250, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1272, 1279, 1281, 1283, 1284, 1453, 1633, 1640, 1854, 1903, 1912, 1913, 1919, 1922, 1923, 1924, 1925, 1930, 1932, 1933, 1934, 1935, 1936, 1941, 1950, 1951, 1953, 1958], "first": [1, 4, 5, 7, 9, 12, 13, 14, 15, 16, 17, 20, 25, 28, 29, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 57, 60, 61, 66, 72, 74, 75, 83, 85, 235, 272, 308, 605, 626, 702, 705, 707, 710, 776, 809, 810, 830, 870, 873, 875, 890, 891, 900, 905, 906, 907, 908, 923, 924, 936, 940, 941, 943, 944, 945, 948, 950, 952, 966, 994, 997, 1008, 1082, 1084, 1085, 1086, 1091, 1094, 1099, 1112, 1114, 1133, 1147, 1152, 1153, 1155, 1156, 1157, 1161, 1162, 1165, 1174, 1177, 1185, 1186, 1187, 1198, 1210, 1219, 1228, 1233, 1234, 1240, 1245, 1250, 1253, 1260, 1276, 1279, 1286, 1287, 1289, 1292, 1293, 1309, 1315, 1318, 1321, 1322, 1323, 1325, 1341, 1343, 1349, 1354, 1357, 1361, 1367, 1368, 1374, 1382, 1383, 1385, 1386, 1396, 1397, 1399, 1404, 1405, 1419, 1422, 1423, 1438, 1445, 1447, 1448, 1468, 1481, 1534, 1620, 1624, 1633, 1642, 1643, 1645, 1656, 1666, 1672, 1696, 1697, 1698, 1699, 1700, 1706, 1709, 1710, 1714, 1718, 1721, 1723, 1729, 1739, 1740, 1766, 1767, 1775, 1803, 1817, 1820, 1825, 1855, 1856, 1860, 1865, 1867, 1873, 1880, 1883, 1886, 1888, 1893, 1896, 1898, 1899, 1906, 1908, 1911, 1912, 1914, 1918, 1919, 1922, 1924, 1926, 1927, 1930, 1932, 1933, 1934, 1935, 1936, 1937, 1940, 1942, 1943, 1944, 1949, 1950, 1951, 1953, 1954, 1958, 1962, 1964], "accord": [1, 9, 29, 51, 813, 877, 878, 896, 938, 950, 1092, 1184, 1281, 1314, 1343, 1361, 1397, 1624, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1715, 1721, 1740, 1804, 1828, 1855, 1887, 1899, 1909, 1913, 1914, 1917, 1930, 1934, 1936, 1941, 1951, 1960], "retain": [1, 9, 43, 709, 711, 712, 715, 890, 891, 896, 1225, 1242, 1273, 1277, 1290, 1308, 1318, 1320, 1321, 1323, 1326, 1348, 1349, 1350, 1351, 1680, 1737, 1740, 1771, 1834, 1835, 1839, 1864, 1865, 1866, 1867, 1881, 1882, 1911, 1932, 1953], "over": [1, 9, 12, 15, 16, 17, 20, 21, 29, 40, 41, 43, 44, 48, 49, 51, 58, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 82, 83, 85, 498, 696, 713, 754, 755, 756, 757, 758, 759, 782, 783, 788, 789, 790, 798, 799, 908, 933, 955, 1006, 1051, 1053, 1057, 1071, 1072, 1073, 1074, 1075, 1076, 1094, 1150, 1154, 1156, 1160, 1162, 1174, 1182, 1221, 1236, 1253, 1273, 1277, 1289, 1290, 1292, 1300, 1320, 1322, 1351, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1397, 1400, 1401, 1402, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1425, 1441, 1444, 1445, 1446, 1447, 1448, 1453, 1456, 1457, 1458, 1460, 1467, 1481, 1484, 1485, 1487, 1492, 1501, 1504, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1536, 1547, 1548, 1564, 1570, 1573, 1574, 1576, 1577, 1578, 1587, 1588, 1595, 1602, 1628, 1637, 1677, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1744, 1745, 1760, 1819, 1821, 1834, 1835, 1836, 1839, 1856, 1871, 1881, 1882, 1886, 1899, 1909, 1911, 1912, 1913, 1918, 1920, 1921, 1923, 1924, 1925, 1927, 1930, 1932, 1933, 1940, 1949, 1950, 1953, 1961], "time": [1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 26, 28, 29, 33, 40, 41, 43, 44, 45, 47, 49, 50, 51, 57, 60, 61, 62, 71, 73, 74, 107, 308, 331, 504, 509, 633, 696, 701, 702, 703, 704, 705, 706, 707, 710, 761, 762, 772, 776, 780, 784, 785, 815, 817, 840, 857, 893, 923, 929, 930, 934, 936, 948, 956, 958, 968, 979, 986, 997, 998, 1000, 1040, 1053, 1072, 1075, 1086, 1108, 1109, 1115, 1116, 1117, 1123, 1134, 1135, 1136, 1144, 1147, 1156, 1157, 1158, 1161, 1162, 1210, 1218, 1221, 1228, 1233, 1236, 1237, 1241, 1246, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1266, 1267, 1270, 1272, 1276, 1279, 1281, 1283, 1284, 1292, 1293, 1315, 1325, 1342, 1343, 1345, 1355, 1363, 1364, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1397, 1400, 1401, 1402, 1405, 1416, 1417, 1418, 1423, 1425, 1439, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1465, 1466, 1468, 1489, 1492, 1504, 1505, 1506, 1507, 1517, 1520, 1521, 1547, 1548, 1592, 1593, 1594, 1610, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1640, 1641, 1643, 1645, 1679, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1717, 1727, 1728, 1739, 1761, 1767, 1817, 1831, 1836, 1837, 1856, 1886, 1894, 1898, 1899, 1900, 1905, 1907, 1911, 1917, 1919, 1921, 1923, 1924, 1926, 1927, 1929, 1930, 1932, 1934, 1935, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1945, 1949, 1950, 1951, 1953, 1958, 1963], "4": [1, 3, 12, 14, 15, 17, 18, 20, 25, 29, 31, 37, 38, 40, 41, 43, 45, 47, 49, 50, 51, 58, 60, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 210, 227, 260, 272, 307, 329, 331, 333, 335, 339, 419, 420, 462, 463, 488, 500, 504, 509, 512, 515, 529, 533, 539, 553, 560, 572, 574, 576, 600, 601, 623, 633, 699, 700, 701, 702, 705, 707, 708, 709, 711, 712, 713, 715, 755, 757, 758, 759, 762, 764, 773, 776, 789, 790, 840, 881, 890, 891, 892, 896, 897, 898, 899, 900, 901, 903, 904, 915, 917, 920, 921, 922, 936, 939, 942, 946, 947, 948, 952, 954, 957, 958, 961, 962, 963, 966, 976, 981, 982, 983, 984, 994, 1074, 1077, 1084, 1086, 1088, 1089, 1092, 1093, 1094, 1097, 1099, 1109, 1110, 1112, 1114, 1122, 1128, 1130, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1142, 1144, 1145, 1147, 1150, 1152, 1160, 1161, 1162, 1163, 1164, 1165, 1174, 1177, 1181, 1182, 1183, 1184, 1186, 1187, 1191, 1195, 1198, 1210, 1212, 1218, 1227, 1232, 1234, 1241, 1242, 1243, 1244, 1245, 1246, 1250, 1252, 1253, 1259, 1261, 1263, 1264, 1265, 1268, 1270, 1273, 1275, 1277, 1279, 1281, 1283, 1286, 1287, 1288, 1290, 1291, 1294, 1296, 1297, 1302, 1304, 1305, 1307, 1309, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1341, 1342, 1343, 1351, 1352, 1353, 1354, 1361, 1366, 1377, 1378, 1379, 1382, 1383, 1385, 1386, 1394, 1396, 1397, 1398, 1400, 1404, 1405, 1423, 1424, 1449, 1450, 1456, 1458, 1460, 1465, 1466, 1468, 1474, 1475, 1476, 1477, 1478, 1492, 1504, 1505, 1506, 1507, 1508, 1509, 1517, 1519, 1528, 1531, 1543, 1544, 1552, 1563, 1587, 1590, 1593, 1594, 1620, 1621, 1622, 1623, 1624, 1633, 1640, 1645, 1656, 1668, 1669, 1671, 1673, 1679, 1680, 1681, 1683, 1685, 1687, 1693, 1706, 1711, 1712, 1718, 1722, 1723, 1724, 1728, 1732, 1733, 1736, 1737, 1739, 1740, 1742, 1746, 1748, 1750, 1752, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1766, 1767, 1768, 1770, 1771, 1775, 1788, 1795, 1797, 1798, 1803, 1804, 1806, 1808, 1813, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1836, 1839, 1842, 1843, 1850, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1861, 1864, 1865, 1866, 1867, 1869, 1870, 1871, 1873, 1874, 1875, 1880, 1883, 1884, 1885, 1886, 1887, 1888, 1892, 1895, 1896, 1897, 1898, 1899, 1900, 1906, 1911, 1913, 1914, 1917, 1919, 1920, 1922, 1923, 1924, 1930, 1932, 1935, 1936, 1937, 1941, 1942, 1944, 1946, 1949, 1953, 1954, 1956, 1957, 1958, 1959, 1960], "fact": [1, 3, 8, 12, 16, 22, 66, 511, 937, 946, 980, 1174, 1178, 1179, 1256, 1257, 1284, 1896, 1924, 1927, 1937, 1950, 1953], "reset": [1, 776, 836, 841, 909, 995, 1043, 1045, 1058, 1059, 1060, 1221, 1405, 1453, 1469, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1729, 1746, 1841, 1909, 1937, 1948], "phase": [1, 17, 29, 41, 809, 1256, 1257, 1721, 1840, 1897, 1936], "recreat": [1, 28, 1919], "valid": [1, 15, 20, 23, 29, 43, 49, 58, 60, 74, 99, 103, 107, 763, 764, 773, 807, 959, 971, 974, 1037, 1094, 1219, 1221, 1222, 1242, 1256, 1257, 1266, 1267, 1268, 1279, 1284, 1315, 1381, 1382, 1383, 1527, 1528, 1529, 1552, 1624, 1651, 1656, 1660, 1689, 1691, 1711, 1712, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1739, 1896, 1897, 1898, 1899, 1913, 1914, 1919, 1922, 1924, 1928, 1937, 1940, 1943, 1949, 1950], "altern": [1, 9, 17, 25, 40, 43, 74, 696, 830, 1154, 1155, 1183, 1228, 1292, 1481, 1498, 1500, 1571, 1633, 1685, 1710, 1782, 1875, 1892, 1893, 1900, 1919, 1928, 1930, 1933, 1934, 1936], "never": [1, 5, 7, 12, 15, 41, 43, 60, 61, 240, 241, 812, 895, 956, 968, 1218, 1267, 1268, 1279, 1292, 1633, 1666, 1919, 1922, 1924, 1941, 1942, 1949, 1960], "long": [1, 7, 9, 17, 25, 29, 40, 60, 73, 750, 765, 767, 768, 769, 770, 772, 779, 797, 1151, 1197, 1321, 1326, 1349, 1376, 1389, 1397, 1423, 1424, 1460, 1536, 1689, 1738, 1851, 1855, 1865, 1867, 1872, 1894, 1899, 1906, 1911, 1912, 1913, 1919, 1920, 1922, 1924, 1926, 1932, 1934, 1937, 1941, 1943, 1948, 1955, 1956, 1958, 1959], "hard": [1, 7, 8, 17, 18, 19, 43, 48, 61, 970, 1094, 1293, 1409, 1554, 1555, 1896, 1897, 1898, 1919, 1937, 1941], "matter": [1, 4, 43, 66, 913, 1082, 1094, 1228, 1231, 1236, 1633, 1914, 1919, 1941], "discourag": [1, 1063, 1067, 1919, 1949], "aggress": [1, 17, 66, 1218, 1919, 1949], "buffer": [1, 4, 17, 40, 41, 43, 66, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 896, 1008, 1040, 1147, 1150, 1160, 1221, 1228, 1231, 1242, 1292, 1371, 1372, 1373, 1390, 1426, 1427, 1428, 1453, 1492, 1626, 1633, 1635, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1673, 1675, 1688, 1707, 1709, 1771, 1813, 1858, 1898, 1915, 1919, 1923, 1924, 1930, 1935, 1937, 1942], "free": [1, 7, 15, 43, 45, 49, 51, 60, 61, 66, 74, 75, 82, 83, 1046, 1064, 1224, 1236, 1293, 1907, 1917, 1919, 1922, 1924, 1926, 1932, 1936, 1937, 1953], "reus": [1, 12, 15, 17, 29, 43, 48, 74, 503, 1895, 1919, 1922, 1949], "effici": [1, 2, 3, 8, 31, 40, 49, 66, 67, 72, 169, 776, 909, 914, 923, 958, 1158, 1166, 1238, 1276, 1293, 1312, 1361, 1392, 1393, 1394, 1397, 1398, 1405, 1459, 1465, 1466, 1500, 1602, 1907, 1914, 1919, 1923, 1924, 1927, 1931, 1932, 1933, 1940, 1942, 1944, 1949, 1950, 1953, 1956, 1957, 1961], "few": [1, 7, 8, 15, 17, 19, 20, 21, 22, 25, 29, 41, 45, 51, 1094, 1151, 1397, 1633, 1893, 1899, 1919, 1922, 1924, 1926, 1928, 1933, 1936, 1937, 1940, 1942, 1944, 1947, 1953, 1957, 1959, 1961], "occas": [1, 7, 1919], "actual": [1, 8, 15, 16, 17, 19, 20, 21, 27, 45, 51, 53, 66, 71, 74, 806, 979, 1112, 1130, 1232, 1236, 1384, 1385, 1386, 1552, 1633, 1657, 1687, 1710, 1715, 1893, 1898, 1899, 1912, 1919, 1922, 1923, 1924, 1927, 1932, 1936, 1937, 1944, 1949, 1955, 1960], "signific": [1, 3, 19, 23, 45, 1723, 1919, 1922, 1953], "amount": [1, 2, 3, 4, 7, 15, 22, 25, 29, 40, 43, 45, 51, 60, 74, 925, 1019, 1045, 1047, 1051, 1218, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1400, 1441, 1456, 1504, 1535, 1650, 1651, 1653, 1654, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1913, 1919, 1921, 1922, 1925, 1926, 1928, 1949, 1953], "heavi": [1, 16, 43, 1919, 1936], "pressur": [1, 66, 1919], "might": [1, 3, 4, 9, 12, 15, 16, 17, 18, 19, 20, 21, 28, 29, 33, 34, 37, 43, 45, 47, 49, 60, 71, 73, 74, 100, 102, 169, 503, 560, 909, 994, 1236, 1237, 1552, 1633, 1634, 1893, 1896, 1909, 1914, 1919, 1921, 1922, 1923, 1924, 1927, 1929, 1934, 1937, 1941, 1942, 1944, 1949, 1950, 1951, 1953, 1957, 1959, 1960], "keep": [1, 3, 7, 15, 16, 20, 25, 40, 41, 45, 47, 51, 60, 66, 75, 998, 1292, 1371, 1372, 1373, 1377, 1396, 1416, 1417, 1418, 1462, 1492, 1552, 1563, 1633, 1652, 1692, 1760, 1893, 1894, 1896, 1911, 1913, 1914, 1919, 1922, 1923, 1925, 1926, 1927, 1932, 1938, 1940, 1944, 1949, 1950, 1951], "track": [1, 15, 16, 17, 20, 24, 27, 51, 75, 101, 353, 1003, 1043, 1045, 1058, 1059, 1060, 1150, 1151, 1196, 1322, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1633, 1652, 1909, 1911, 1913, 1914, 1919, 1922, 1924, 1925, 1926, 1929, 1930, 1938, 1940, 1942, 1943, 1950, 1951, 1953], "save": [1, 5, 7, 12, 17, 31, 34, 41, 43, 45, 47, 66, 512, 853, 905, 906, 915, 1158, 1220, 1221, 1226, 1228, 1236, 1238, 1292, 1453, 1633, 1687, 1688, 1711, 1717, 1720, 1724, 1896, 1897, 1908, 1913, 1924, 1925, 1930, 1932, 1934, 1937, 1939, 1940, 1941, 1943, 1953, 1958, 1962], "afterward": [1, 1453, 1624, 1633, 1953], "start": [1, 3, 4, 8, 9, 11, 15, 17, 21, 24, 40, 41, 43, 45, 51, 57, 59, 60, 61, 62, 66, 70, 73, 74, 420, 450, 451, 512, 554, 714, 881, 1043, 1045, 1056, 1058, 1059, 1116, 1117, 1133, 1147, 1219, 1233, 1246, 1291, 1307, 1352, 1353, 1361, 1366, 1367, 1368, 1397, 1399, 1446, 1447, 1448, 1454, 1456, 1544, 1590, 1633, 1647, 1651, 1653, 1666, 1693, 1715, 1721, 1755, 1786, 1809, 1822, 1823, 1824, 1826, 1827, 1893, 1894, 1895, 1897, 1898, 1903, 1906, 1911, 1913, 1919, 1920, 1922, 1923, 1926, 1930, 1931, 1932, 1936, 1937, 1940, 1943, 1949, 1950, 1951, 1953], "sure": [1, 7, 9, 17, 19, 29, 40, 43, 45, 50, 52, 61, 63, 69, 74, 877, 878, 909, 1098, 1145, 1196, 1225, 1236, 1237, 1293, 1633, 1678, 1717, 1858, 1899, 1912, 1919, 1923, 1926, 1927, 1936, 1937, 1943, 1944, 1949, 1950, 1951, 1953, 1958], "longer": [1, 12, 29, 43, 62, 70, 71, 703, 906, 924, 925, 1218, 1225, 1633, 1677, 1680, 1909, 1919, 1922, 1949, 1951], "find": [1, 7, 15, 16, 17, 18, 20, 21, 22, 28, 29, 33, 43, 60, 71, 74, 97, 1094, 1174, 1242, 1293, 1384, 1385, 1386, 1423, 1691, 1729, 1740, 1775, 1841, 1893, 1907, 1911, 1913, 1919, 1921, 1922, 1923, 1924, 1926, 1927, 1932, 1934, 1937, 1938, 1939, 1944, 1949, 1953, 1956, 1958, 1960, 1962, 1964], "quick": [1, 7, 25, 69, 1906, 1930], "guid": [1, 8, 9, 20, 21, 25, 27, 40, 97, 98, 1232, 1677, 1894, 1922, 1925, 1941, 1944], "var": [1, 15, 20, 29, 53, 58, 60, 63, 1371, 1372, 1373, 1407, 1408, 1416, 1417, 1418, 1425, 1492, 1549, 1743, 1882, 1895, 1897, 1899, 1912, 1939], "thing": [1, 3, 7, 8, 12, 16, 17, 20, 22, 25, 27, 29, 43, 71, 74, 1151, 1230, 1322, 1369, 1554, 1814, 1898, 1919, 1922, 1924, 1925, 1926, 1927, 1932, 1937, 1941, 1944, 1945, 1951], "detach": [1, 5, 28, 241, 465, 475, 965, 1150, 1221, 1376, 1453, 1536, 1554, 1817, 1854, 1896, 1897, 1912, 1914, 1926, 1937, 1939, 1946, 1953, 1957, 1959], "register_hook": [1, 1912, 1919], "name": [1, 2, 3, 13, 14, 17, 20, 22, 24, 28, 29, 33, 41, 43, 48, 49, 51, 53, 54, 57, 58, 60, 62, 66, 74, 102, 696, 713, 763, 764, 773, 808, 830, 831, 832, 833, 840, 856, 870, 874, 933, 974, 996, 1023, 1150, 1160, 1219, 1221, 1222, 1228, 1231, 1236, 1237, 1251, 1256, 1257, 1263, 1264, 1266, 1267, 1268, 1269, 1279, 1280, 1282, 1284, 1285, 1292, 1453, 1503, 1626, 1631, 1632, 1633, 1640, 1641, 1642, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1674, 1675, 1677, 1687, 1689, 1691, 1771, 1781, 1876, 1878, 1880, 1893, 1894, 1896, 1897, 1899, 1900, 1903, 1905, 1908, 1909, 1911, 1917, 1919, 1922, 1923, 1924, 1927, 1929, 1930, 1937, 1939, 1941, 1942, 1943, 1949, 1950, 1955, 1958, 1960, 1961, 1962, 1963, 1964, 1965], "factori": [1, 2, 16, 31, 49, 51, 54, 58, 71, 840, 1094, 1678, 1691, 1779, 1894, 1897, 1913, 1922, 1939, 1956], "ones": [1, 17, 22, 28, 29, 40, 43, 47, 49, 66, 71, 72, 73, 74, 75, 77, 80, 82, 83, 169, 272, 331, 420, 462, 463, 465, 531, 810, 875, 909, 918, 920, 921, 922, 923, 924, 938, 950, 968, 1077, 1085, 1107, 1150, 1157, 1158, 1161, 1196, 1218, 1221, 1232, 1241, 1267, 1283, 1292, 1370, 1396, 1400, 1407, 1408, 1425, 1453, 1457, 1458, 1460, 1462, 1504, 1543, 1602, 1620, 1624, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1657, 1670, 1672, 1675, 1685, 1689, 1743, 1760, 1778, 1809, 1857, 1861, 1878, 1889, 1897, 1899, 1901, 1912, 1913, 1919, 1920, 1922, 1924, 1931, 1933, 1934, 1937, 1939, 1940, 1941, 1944, 1949, 1951, 1954, 1956, 1959], "autograd_tensor": 1, "base": [1, 3, 7, 9, 14, 15, 17, 19, 20, 33, 34, 40, 43, 44, 45, 47, 48, 49, 51, 53, 58, 60, 61, 62, 66, 71, 74, 90, 100, 101, 102, 807, 812, 816, 818, 836, 837, 838, 840, 841, 877, 878, 915, 968, 986, 1055, 1056, 1092, 1094, 1137, 1174, 1184, 1223, 1234, 1246, 1284, 1295, 1297, 1299, 1307, 1390, 1453, 1456, 1457, 1458, 1462, 1496, 1498, 1500, 1569, 1602, 1633, 1637, 1638, 1640, 1647, 1651, 1653, 1693, 1694, 1695, 1696, 1697, 1698, 1707, 1708, 1709, 1710, 1736, 1746, 1771, 1785, 1840, 1841, 1855, 1865, 1867, 1887, 1894, 1897, 1899, 1921, 1922, 1923, 1924, 1930, 1938, 1942, 1943, 1944, 1949, 1950, 1953, 1954, 1957, 1958, 1960, 1962, 1963], "static": [1, 3, 8, 12, 14, 15, 20, 33, 44, 49, 51, 66, 75, 80, 81, 83, 810, 831, 833, 842, 848, 873, 875, 877, 905, 906, 907, 908, 1234, 1496, 1633, 1815, 1896, 1897, 1898, 1899, 1922, 1929, 1938, 1942, 1945, 1949, 1955], "Then": [1, 12, 18, 43, 61, 74, 1400, 1504, 1642, 1691, 1876, 1919, 1920, 1923, 1924, 1925, 1933, 1934, 1937, 1940, 1941, 1949, 1950, 1962], "op": [1, 4, 12, 13, 16, 17, 18, 19, 20, 22, 28, 29, 43, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 97, 101, 102, 169, 519, 540, 620, 773, 808, 809, 810, 839, 842, 870, 877, 878, 909, 915, 923, 958, 968, 1001, 1016, 1018, 1022, 1023, 1037, 1038, 1063, 1067, 1069, 1151, 1171, 1222, 1234, 1236, 1237, 1292, 1298, 1469, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1727, 1786, 1863, 1894, 1895, 1899, 1903, 1905, 1906, 1907, 1909, 1912, 1913, 1921, 1922, 1923, 1924, 1932, 1938, 1941, 1943, 1944, 1945, 1946, 1947, 1953, 1955, 1957, 1959, 1963], "ctx": [1, 58, 75, 79, 905, 906, 907, 913, 914, 915, 916, 1918, 1924, 1925, 1937], "gradcheck": [1, 925, 1894, 1924], "extend": [1, 40, 43, 45, 49, 52, 62, 74, 877, 906, 908, 915, 1455, 1464, 1876, 1894, 1903, 1914, 1919, 1929, 1931, 1932, 1937, 1939, 1941, 1947, 1953, 1964], "staticmethod": [1, 75, 906, 908, 913, 914, 915, 916, 1899, 1918, 1924, 1937, 1949], "result": [1, 3, 4, 5, 7, 8, 9, 13, 16, 20, 21, 24, 25, 28, 29, 33, 37, 40, 41, 43, 45, 49, 51, 53, 58, 61, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 99, 100, 102, 172, 240, 241, 272, 273, 333, 353, 416, 512, 514, 515, 572, 599, 600, 601, 603, 604, 634, 702, 703, 704, 705, 706, 709, 711, 712, 713, 715, 776, 809, 893, 895, 911, 912, 917, 918, 919, 920, 921, 922, 924, 925, 936, 939, 950, 954, 959, 965, 967, 968, 971, 982, 984, 1007, 1009, 1011, 1037, 1038, 1051, 1073, 1074, 1075, 1076, 1077, 1089, 1094, 1112, 1115, 1121, 1130, 1137, 1139, 1142, 1146, 1147, 1150, 1151, 1152, 1155, 1156, 1161, 1162, 1166, 1182, 1183, 1185, 1198, 1212, 1221, 1224, 1225, 1232, 1236, 1237, 1239, 1241, 1242, 1246, 1260, 1262, 1264, 1265, 1273, 1277, 1279, 1281, 1282, 1283, 1290, 1300, 1301, 1308, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1348, 1351, 1390, 1392, 1393, 1394, 1398, 1400, 1405, 1419, 1423, 1453, 1459, 1468, 1497, 1498, 1499, 1500, 1504, 1534, 1552, 1563, 1617, 1620, 1621, 1633, 1640, 1642, 1675, 1678, 1679, 1680, 1681, 1691, 1721, 1727, 1729, 1736, 1737, 1740, 1746, 1759, 1765, 1780, 1808, 1818, 1820, 1821, 1832, 1834, 1835, 1836, 1839, 1840, 1841, 1850, 1854, 1855, 1860, 1861, 1863, 1864, 1866, 1878, 1881, 1882, 1886, 1896, 1897, 1898, 1899, 1906, 1907, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1930, 1932, 1933, 1934, 1937, 1938, 1940, 1942, 1943, 1945, 1946, 1949, 1950, 1953, 1956, 1958, 1959, 1960, 1963, 1964], "save_for_backward": [1, 906, 914, 916, 1918, 1919, 1924, 1925, 1937], "grad_output": [1, 75, 905, 913, 923, 925, 929, 930, 1221, 1453, 1629, 1630, 1895, 1897, 1919, 1922, 1924, 1925, 1930], "saved_tensor": [1, 914, 915, 916, 1918, 1919, 1924, 1925], "avail": [1, 2, 5, 8, 9, 17, 19, 21, 29, 33, 34, 40, 43, 51, 60, 61, 97, 98, 991, 1017, 1019, 1020, 1031, 1034, 1041, 1042, 1061, 1062, 1064, 1094, 1227, 1284, 1285, 1310, 1496, 1505, 1563, 1602, 1621, 1729, 1783, 1836, 1841, 1875, 1878, 1893, 1894, 1896, 1898, 1899, 1903, 1906, 1911, 1919, 1922, 1924, 1928, 1930, 1931, 1932, 1934, 1935, 1936, 1940, 1941, 1943, 1944, 1945, 1949, 1963, 1964], "cost": [1, 3, 4, 8, 9, 23, 29, 41, 66, 958, 968, 1276, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1779, 1922, 1934, 1945, 1950, 1956], "both": [1, 2, 3, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 26, 29, 33, 40, 41, 43, 44, 45, 48, 49, 53, 58, 59, 60, 61, 66, 73, 74, 75, 82, 83, 116, 357, 745, 784, 785, 788, 789, 790, 809, 867, 908, 912, 918, 919, 920, 921, 922, 936, 973, 986, 1018, 1089, 1110, 1140, 1141, 1142, 1150, 1164, 1166, 1174, 1181, 1198, 1211, 1212, 1218, 1221, 1234, 1242, 1243, 1291, 1307, 1315, 1321, 1334, 1335, 1366, 1367, 1371, 1372, 1373, 1378, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1408, 1414, 1416, 1417, 1418, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1446, 1447, 1448, 1453, 1459, 1492, 1500, 1504, 1505, 1508, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1576, 1577, 1578, 1602, 1633, 1645, 1675, 1696, 1697, 1721, 1744, 1745, 1814, 1815, 1817, 1836, 1840, 1860, 1861, 1896, 1898, 1899, 1906, 1912, 1913, 1915, 1918, 1919, 1920, 1924, 1925, 1927, 1930, 1933, 1934, 1935, 1937, 1941, 1942, 1944, 1947, 1949, 1951, 1953, 1954, 1960, 1962, 1963], "cpu": [1, 4, 5, 12, 16, 19, 22, 24, 25, 26, 29, 33, 36, 40, 43, 45, 66, 75, 80, 83, 107, 138, 215, 307, 344, 353, 462, 463, 464, 465, 466, 475, 596, 605, 881, 896, 934, 937, 946, 984, 987, 988, 997, 1007, 1008, 1009, 1011, 1095, 1097, 1107, 1112, 1130, 1142, 1147, 1148, 1171, 1172, 1178, 1179, 1221, 1228, 1230, 1231, 1240, 1250, 1252, 1256, 1257, 1258, 1259, 1261, 1263, 1266, 1268, 1269, 1275, 1278, 1281, 1284, 1285, 1291, 1292, 1307, 1310, 1321, 1390, 1396, 1453, 1496, 1617, 1633, 1637, 1638, 1666, 1667, 1681, 1684, 1739, 1748, 1750, 1752, 1754, 1755, 1779, 1784, 1786, 1787, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1808, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1840, 1854, 1855, 1856, 1865, 1867, 1872, 1875, 1891, 1894, 1896, 1897, 1899, 1903, 1907, 1911, 1912, 1914, 1922, 1924, 1925, 1928, 1930, 1933, 1934, 1936, 1937, 1939, 1942, 1943, 1945, 1948, 1949, 1953, 1955, 1956, 1959, 1960, 1961], "There": [1, 5, 6, 7, 9, 12, 15, 16, 17, 20, 21, 22, 28, 29, 33, 39, 43, 45, 60, 67, 71, 72, 74, 99, 100, 102, 696, 750, 809, 906, 968, 1151, 1390, 1423, 1468, 1602, 1633, 1673, 1678, 1893, 1896, 1898, 1899, 1905, 1906, 1913, 1919, 1922, 1924, 1925, 1926, 1929, 1932, 1936, 1937, 1941, 1944, 1945, 1949, 1951, 1959, 1961], "moment": [1, 20, 24, 75, 81, 788, 789, 790, 982, 1696, 1697, 1698, 1700, 1706, 1710, 1907, 1911, 1914, 1943, 1949], "nvprof": [1, 4, 931, 1922], "regist": [1, 16, 19, 23, 34, 41, 43, 47, 48, 49, 60, 62, 66, 74, 97, 98, 99, 100, 102, 504, 696, 808, 809, 870, 929, 930, 968, 1040, 1221, 1292, 1453, 1454, 1455, 1463, 1464, 1481, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1640, 1641, 1642, 1643, 1645, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1876, 1878, 1903, 1909, 1911, 1923, 1924, 1929, 1930, 1935, 1937, 1941, 1949], "activ": [1, 5, 7, 9, 12, 16, 29, 62, 66, 72, 808, 810, 812, 819, 823, 857, 858, 867, 877, 878, 996, 1005, 1020, 1033, 1051, 1150, 1152, 1162, 1293, 1365, 1392, 1393, 1394, 1398, 1408, 1425, 1452, 1454, 1471, 1482, 1496, 1498, 1500, 1545, 1582, 1605, 1633, 1643, 1644, 1645, 1675, 1680, 1886, 1894, 1895, 1907, 1911, 1922, 1924, 1925, 1930, 1937, 1940, 1942, 1943, 1944, 1945, 1946, 1949, 1953, 1962, 1963], "emit_nvtx": [1, 4], "vtune": [1, 4], "emit_itt": [1, 4], "use_cuda": [1, 1943], "use_devic": 1, "record_shap": [1, 1943], "with_flop": [1, 1943], "profile_memori": [1, 1943], "with_stack": [1, 1943], "with_modul": [1, 1943], "use_kineto": 1, "use_cpu": 1, "use_mtia": 1, "experimental_config": [1, 1943], "hold": [1, 15, 20, 43, 58, 60, 62, 63, 66, 70, 73, 74, 553, 1293, 1400, 1454, 1455, 1463, 1464, 1504, 1624, 1633, 1635, 1636, 1642, 1652, 1666, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1822, 1823, 1824, 1825, 1826, 1827, 1920, 1922, 1924, 1926, 1929, 1932, 1940, 1943, 1949, 1950, 1951, 1953, 1955, 1956, 1958, 1959], "summari": [1, 3, 18, 22, 29, 61, 1052, 1788, 1894, 1909, 1958, 1963], "hood": [1, 16, 20, 73, 1911, 1919, 1922, 1923, 1932, 1941, 1951], "just": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 20, 26, 28, 33, 41, 43, 48, 49, 51, 58, 74, 605, 703, 713, 806, 839, 842, 905, 907, 933, 979, 980, 1236, 1237, 1275, 1278, 1283, 1284, 1310, 1392, 1393, 1394, 1398, 1633, 1645, 1646, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1711, 1779, 1864, 1865, 1866, 1867, 1876, 1893, 1896, 1911, 1918, 1919, 1924, 1925, 1927, 1929, 1930, 1931, 1935, 1941, 1942, 1949, 1950, 1953, 1956, 1957, 1959, 1963], "record": [1, 5, 12, 15, 17, 29, 47, 52, 53, 54, 58, 61, 73, 74, 462, 463, 464, 465, 466, 512, 835, 836, 837, 838, 841, 843, 881, 937, 946, 997, 998, 1000, 1095, 1096, 1097, 1107, 1112, 1130, 1147, 1148, 1149, 1178, 1179, 1221, 1236, 1240, 1291, 1307, 1334, 1335, 1390, 1453, 1684, 1685, 1687, 1691, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1891, 1892, 1896, 1898, 1914, 1918, 1919, 1922, 1924, 1937, 1938, 1943, 1949, 1958, 1959, 1960, 1961, 1962, 1963], "event": [1, 25, 46, 49, 51, 59, 62, 73, 933, 934, 935, 998, 1000, 1051, 1054, 1236, 1237, 1298, 1334, 1335, 1602, 1894, 1909, 1911, 1922, 1943, 1958], "being": [1, 3, 5, 9, 12, 15, 16, 17, 19, 20, 25, 27, 29, 40, 43, 45, 47, 49, 51, 53, 60, 61, 62, 66, 70, 71, 73, 74, 75, 83, 116, 420, 776, 809, 815, 908, 917, 923, 966, 998, 1006, 1053, 1057, 1071, 1072, 1107, 1140, 1141, 1151, 1160, 1161, 1210, 1221, 1225, 1310, 1319, 1324, 1369, 1370, 1387, 1389, 1396, 1397, 1401, 1402, 1407, 1413, 1420, 1444, 1445, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1484, 1485, 1501, 1517, 1524, 1525, 1535, 1547, 1548, 1552, 1564, 1587, 1595, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1659, 1660, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1739, 1740, 1834, 1835, 1836, 1881, 1882, 1896, 1899, 1906, 1909, 1912, 1913, 1914, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1930, 1932, 1933, 1937, 1941, 1944, 1947, 1949, 1950, 1953, 1960, 1962, 1964], "those": [1, 2, 4, 5, 12, 14, 16, 17, 19, 20, 22, 24, 29, 33, 40, 41, 43, 45, 47, 49, 66, 71, 73, 74, 840, 924, 1009, 1019, 1082, 1084, 1162, 1236, 1278, 1284, 1292, 1331, 1361, 1369, 1370, 1387, 1389, 1397, 1413, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1505, 1524, 1525, 1535, 1544, 1564, 1587, 1595, 1691, 1710, 1783, 1840, 1861, 1886, 1898, 1912, 1913, 1918, 1919, 1922, 1924, 1925, 1928, 1930, 1934, 1935, 1937, 1940, 1947, 1949, 1951], "report": [1, 3, 4, 17, 22, 24, 29, 37, 43, 53, 61, 73, 74, 99, 100, 102, 1051, 1154, 1155, 1157, 1918, 1922, 1942, 1953], "runtim": [1, 3, 5, 17, 23, 33, 43, 74, 843, 894, 933, 1092, 1094, 1184, 1221, 1236, 1453, 1635, 1636, 1692, 1735, 1875, 1887, 1899, 1912, 1913, 1919, 1922, 1924, 1932, 1937], "note": [1, 2, 3, 5, 8, 15, 17, 18, 19, 22, 25, 28, 29, 31, 33, 34, 37, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 58, 60, 62, 66, 70, 72, 73, 74, 75, 82, 83, 99, 100, 101, 102, 169, 240, 395, 515, 516, 529, 531, 533, 751, 757, 758, 759, 807, 809, 810, 811, 815, 857, 877, 881, 900, 909, 915, 917, 918, 919, 920, 921, 922, 923, 925, 958, 968, 994, 1069, 1077, 1082, 1094, 1115, 1145, 1147, 1162, 1163, 1174, 1196, 1208, 1218, 1219, 1221, 1222, 1227, 1293, 1315, 1334, 1335, 1369, 1370, 1376, 1384, 1385, 1386, 1387, 1389, 1396, 1397, 1405, 1407, 1413, 1419, 1420, 1423, 1444, 1445, 1453, 1454, 1456, 1457, 1458, 1459, 1460, 1463, 1464, 1467, 1468, 1484, 1485, 1492, 1496, 1501, 1505, 1524, 1525, 1535, 1543, 1544, 1552, 1563, 1564, 1587, 1590, 1595, 1596, 1609, 1624, 1633, 1634, 1680, 1688, 1689, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1713, 1715, 1721, 1723, 1739, 1746, 1821, 1822, 1823, 1824, 1826, 1827, 1832, 1836, 1840, 1861, 1875, 1876, 1878, 1886, 1893, 1896, 1897, 1900, 1906, 1911, 1914, 1915, 1919, 1920, 1921, 1923, 1924, 1925, 1927, 1928, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1938, 1940, 1941, 1943, 1945, 1947, 1948, 1950, 1951, 1953, 1957, 1958, 1965], "propag": [1, 15, 16, 20, 28, 45, 46, 49, 51, 60, 74, 75, 83, 529, 702, 705, 706, 707, 711, 712, 713, 714, 782, 783, 784, 785, 795, 798, 799, 801, 802, 803, 854, 856, 936, 1140, 1141, 1348, 1821, 1894, 1911, 1912, 1918, 1922, 1924, 1927, 1929, 1949, 1962, 1963], "async": [1, 43, 44, 73, 619, 1633, 1900, 1922, 1929, 1955], "task": [1, 3, 7, 41, 67, 72, 1224, 1239, 1416, 1417, 1418, 1899, 1921, 1929, 1930, 1932, 1936], "cuda": [1, 3, 4, 5, 16, 17, 19, 21, 24, 29, 33, 35, 39, 40, 41, 43, 45, 47, 66, 107, 169, 307, 331, 339, 353, 358, 531, 533, 540, 596, 881, 893, 895, 909, 923, 937, 939, 946, 968, 995, 996, 997, 998, 1000, 1001, 1016, 1018, 1029, 1095, 1096, 1097, 1107, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1148, 1178, 1179, 1221, 1240, 1242, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1275, 1278, 1281, 1282, 1284, 1285, 1291, 1292, 1307, 1310, 1326, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1396, 1423, 1453, 1468, 1492, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1544, 1552, 1563, 1590, 1602, 1621, 1622, 1623, 1624, 1633, 1635, 1636, 1637, 1638, 1679, 1681, 1684, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1739, 1748, 1750, 1752, 1754, 1755, 1779, 1783, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1818, 1822, 1823, 1824, 1825, 1826, 1827, 1840, 1854, 1856, 1865, 1867, 1872, 1875, 1891, 1894, 1897, 1903, 1912, 1914, 1924, 1925, 1930, 1933, 1937, 1939, 1940, 1942, 1943, 1948, 1949, 1953, 1955, 1956, 1959, 1960, 1961], "cudaev": 1, "approxim": [1, 3, 41, 47, 60, 74, 1158, 1174, 1284, 1293, 1361, 1403, 1467, 1482, 1489, 1550, 1595, 1605, 1641, 1693, 1710, 1729, 1841, 1861, 1895, 1897, 1899, 1922, 1923, 1924, 1927, 1937, 1965], "4u": 1, "shape": [1, 5, 8, 14, 17, 21, 28, 29, 31, 41, 43, 49, 66, 68, 70, 72, 74, 75, 76, 77, 80, 81, 82, 85, 116, 190, 210, 227, 237, 418, 420, 462, 464, 466, 488, 513, 514, 529, 531, 533, 560, 582, 633, 696, 701, 703, 704, 713, 751, 761, 762, 772, 774, 776, 780, 782, 783, 784, 785, 788, 789, 790, 797, 812, 894, 900, 914, 918, 920, 921, 922, 933, 938, 939, 941, 944, 949, 951, 955, 956, 968, 981, 1010, 1084, 1085, 1086, 1088, 1089, 1094, 1095, 1097, 1099, 1114, 1115, 1116, 1117, 1125, 1126, 1127, 1133, 1139, 1140, 1141, 1142, 1148, 1155, 1156, 1160, 1161, 1162, 1163, 1165, 1177, 1182, 1183, 1187, 1195, 1198, 1212, 1218, 1234, 1236, 1237, 1240, 1245, 1246, 1250, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1309, 1310, 1314, 1322, 1327, 1328, 1342, 1343, 1354, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1523, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1543, 1544, 1548, 1552, 1554, 1563, 1564, 1569, 1576, 1577, 1578, 1588, 1589, 1592, 1593, 1594, 1596, 1602, 1621, 1624, 1633, 1635, 1636, 1640, 1642, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1681, 1684, 1689, 1692, 1727, 1736, 1740, 1744, 1745, 1748, 1750, 1751, 1752, 1759, 1761, 1762, 1766, 1775, 1778, 1803, 1817, 1818, 1820, 1823, 1825, 1831, 1836, 1837, 1840, 1850, 1857, 1861, 1871, 1872, 1873, 1886, 1889, 1891, 1894, 1895, 1896, 1897, 1899, 1912, 1913, 1914, 1919, 1920, 1922, 1924, 1925, 1926, 1938, 1939, 1943, 1946, 1949, 1953, 1954, 1958, 1959, 1960, 1961], "about": [1, 8, 9, 13, 15, 17, 18, 20, 21, 23, 29, 36, 40, 43, 44, 47, 51, 53, 57, 59, 61, 67, 71, 74, 101, 273, 514, 634, 924, 925, 1002, 1003, 1019, 1043, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1058, 1059, 1060, 1151, 1250, 1257, 1397, 1666, 1710, 1721, 1782, 1893, 1896, 1898, 1899, 1903, 1906, 1921, 1922, 1923, 1924, 1926, 1929, 1932, 1933, 1935, 1941, 1943, 1944, 1947, 1950, 1951, 1953, 1957, 1959], "dimens": [1, 15, 31, 40, 43, 48, 49, 66, 71, 72, 74, 75, 80, 83, 85, 99, 237, 251, 272, 278, 331, 333, 335, 339, 450, 451, 489, 490, 491, 509, 529, 531, 533, 553, 559, 561, 562, 576, 599, 600, 601, 603, 604, 623, 633, 702, 708, 709, 711, 712, 713, 715, 751, 774, 795, 797, 801, 890, 891, 892, 893, 902, 903, 904, 908, 923, 947, 955, 958, 959, 960, 961, 962, 994, 1009, 1011, 1073, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1086, 1092, 1094, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1162, 1163, 1174, 1183, 1184, 1195, 1198, 1218, 1241, 1242, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1300, 1301, 1308, 1311, 1315, 1318, 1320, 1321, 1322, 1323, 1326, 1328, 1341, 1348, 1349, 1350, 1351, 1352, 1353, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1382, 1383, 1385, 1386, 1387, 1388, 1389, 1390, 1393, 1395, 1396, 1397, 1399, 1400, 1403, 1404, 1407, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1425, 1433, 1434, 1439, 1440, 1441, 1442, 1443, 1444, 1447, 1448, 1452, 1459, 1460, 1461, 1462, 1465, 1466, 1467, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1498, 1500, 1501, 1502, 1503, 1504, 1517, 1523, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1551, 1552, 1553, 1554, 1563, 1566, 1569, 1570, 1571, 1588, 1589, 1590, 1602, 1608, 1609, 1621, 1640, 1641, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1667, 1668, 1670, 1672, 1674, 1677, 1679, 1680, 1727, 1730, 1737, 1739, 1740, 1741, 1746, 1760, 1761, 1762, 1766, 1775, 1777, 1778, 1788, 1809, 1813, 1816, 1819, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1833, 1834, 1835, 1836, 1839, 1840, 1849, 1851, 1855, 1856, 1857, 1858, 1860, 1861, 1863, 1864, 1865, 1866, 1867, 1870, 1871, 1872, 1873, 1874, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1894, 1895, 1897, 1898, 1899, 1914, 1917, 1920, 1922, 1925, 1926, 1927, 1933, 1942, 1944, 1953, 1954, 1956, 1958, 1959], "collect": [1, 3, 7, 17, 20, 24, 28, 29, 40, 44, 45, 47, 51, 60, 66, 73, 74, 815, 816, 840, 877, 878, 956, 1033, 1095, 1183, 1322, 1633, 1656, 1684, 1748, 1752, 1891, 1894, 1897, 1898, 1899, 1909, 1922, 1923, 1925, 1940, 1943, 1944, 1947, 1951, 1953, 1958, 1960], "group": [1, 3, 9, 13, 17, 29, 40, 41, 44, 45, 47, 51, 57, 60, 61, 62, 63, 66, 69, 74, 626, 696, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 788, 789, 790, 896, 933, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1408, 1429, 1430, 1431, 1432, 1433, 1434, 1492, 1527, 1528, 1529, 1530, 1531, 1532, 1553, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1873, 1893, 1894, 1895, 1897, 1899, 1911, 1917, 1922, 1923, 1937, 1940, 1941, 1943, 1949, 1958], "prof": [1, 17, 25, 29, 57, 1943], "key_averag": [1, 1943], "group_by_input_shap": [1, 933, 1943], "skew": [1, 3, 4, 1272, 1640], "neglig": [1, 1233, 1783], "bottom": [1, 25, 66, 1552, 1906], "But": [1, 7, 16, 18, 20, 22, 66, 73, 503, 1236, 1266, 1633, 1919, 1924, 1926, 1927, 1941, 1942, 1953, 1957, 1964], "total": [1, 3, 4, 7, 40, 41, 43, 57, 59, 60, 61, 66, 893, 934, 1011, 1046, 1051, 1064, 1147, 1182, 1183, 1330, 1376, 1400, 1413, 1420, 1444, 1459, 1504, 1589, 1633, 1637, 1679, 1681, 1683, 1715, 1721, 1761, 1788, 1836, 1893, 1898, 1909, 1922, 1928, 1932, 1940, 1953], "artifici": [1, 1953], "estim": [1, 3, 40, 49, 982, 986, 1174, 1218, 1371, 1372, 1373, 1403, 1407, 1408, 1416, 1417, 1418, 1425, 1492, 1550, 1641, 1707, 1804, 1943], "flop": [1, 1943], "hardwar": [1, 8, 17, 29, 875, 877, 878, 1256, 1257, 1284, 1875, 1922, 1932, 1934, 1945, 1953], "matrix": [1, 2, 17, 41, 43, 49, 210, 227, 702, 705, 706, 707, 776, 936, 938, 947, 948, 956, 958, 959, 960, 961, 968, 982, 986, 1077, 1081, 1082, 1084, 1094, 1162, 1166, 1170, 1185, 1241, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1288, 1290, 1293, 1301, 1310, 1312, 1315, 1325, 1343, 1345, 1396, 1397, 1405, 1423, 1504, 1543, 1544, 1640, 1645, 1674, 1680, 1727, 1728, 1729, 1739, 1783, 1811, 1814, 1817, 1818, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1832, 1840, 1841, 1856, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1880, 1886, 1894, 1899, 1912, 1913, 1914, 1917, 1921, 1922, 1924, 1927, 1930, 1933, 1943, 1953, 1958, 1959], "2d": [1, 45, 48, 49, 603, 604, 716, 719, 722, 751, 755, 758, 782, 784, 789, 795, 799, 801, 802, 803, 961, 982, 986, 1082, 1094, 1276, 1277, 1359, 1363, 1367, 1370, 1371, 1372, 1382, 1385, 1389, 1393, 1397, 1401, 1416, 1417, 1422, 1447, 1456, 1458, 1459, 1460, 1505, 1506, 1507, 1512, 1515, 1517, 1520, 1525, 1528, 1531, 1539, 1544, 1547, 1574, 1577, 1587, 1590, 1641, 1674, 1745, 1820, 1825, 1863, 1907, 1917, 1924, 1943, 1944, 1953], "alloc": [1, 4, 11, 12, 15, 16, 25, 31, 37, 41, 45, 49, 51, 60, 66, 272, 349, 462, 463, 464, 465, 466, 503, 996, 998, 1000, 1002, 1003, 1005, 1018, 1019, 1020, 1043, 1045, 1047, 1049, 1050, 1051, 1052, 1059, 1060, 1064, 1095, 1097, 1329, 1330, 1331, 1338, 1688, 1748, 1752, 1754, 1779, 1854, 1911, 1914, 1919, 1923, 1928, 1932, 1937, 1943, 1956], "dealloc": [1, 74, 1147, 1911, 1922, 1926, 1928, 1943], "line": [1, 4, 11, 17, 19, 20, 21, 22, 24, 26, 29, 37, 43, 74, 696, 933, 1094, 1151, 1196, 1221, 1231, 1453, 1517, 1552, 1788, 1815, 1896, 1899, 1900, 1914, 1920, 1924, 1927, 1928, 1934, 1936, 1937, 1943, 1953], "hierarchi": [1, 15, 74, 856, 1225, 1696, 1697, 1900, 1924, 1943, 1944], "callstack": [1, 43, 1943], "A": [1, 2, 3, 5, 7, 8, 9, 12, 13, 16, 17, 19, 20, 21, 25, 27, 28, 29, 33, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 57, 60, 61, 62, 66, 67, 72, 73, 75, 76, 77, 80, 90, 100, 107, 576, 596, 599, 600, 601, 610, 640, 696, 708, 713, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 761, 762, 772, 777, 778, 779, 780, 781, 806, 808, 830, 874, 875, 877, 878, 935, 937, 946, 947, 949, 954, 959, 960, 967, 968, 970, 973, 974, 982, 986, 997, 998, 1000, 1008, 1010, 1011, 1079, 1094, 1099, 1107, 1108, 1109, 1121, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1161, 1162, 1165, 1174, 1177, 1178, 1179, 1183, 1211, 1212, 1213, 1214, 1217, 1219, 1221, 1224, 1228, 1231, 1233, 1236, 1237, 1241, 1245, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1290, 1293, 1301, 1309, 1310, 1311, 1312, 1316, 1354, 1370, 1374, 1376, 1389, 1396, 1397, 1406, 1407, 1415, 1424, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1443, 1452, 1453, 1459, 1481, 1486, 1488, 1496, 1501, 1502, 1517, 1523, 1535, 1543, 1554, 1564, 1571, 1582, 1602, 1608, 1609, 1624, 1633, 1634, 1635, 1636, 1640, 1642, 1645, 1667, 1668, 1671, 1687, 1688, 1689, 1691, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1714, 1715, 1717, 1720, 1721, 1723, 1729, 1739, 1741, 1742, 1743, 1744, 1745, 1756, 1762, 1768, 1771, 1804, 1813, 1815, 1816, 1819, 1831, 1835, 1836, 1840, 1841, 1858, 1863, 1864, 1865, 1866, 1867, 1871, 1872, 1873, 1874, 1875, 1882, 1886, 1889, 1893, 1895, 1896, 1897, 1898, 1899, 1903, 1906, 1907, 1912, 1913, 1917, 1918, 1921, 1922, 1924, 1925, 1926, 1932, 1933, 1935, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1949, 1950, 1951, 1953, 1954, 1955, 1956, 1958, 1959, 1963, 1964, 1965], "aten": [1, 2, 3, 13, 18, 21, 22, 29, 33, 37, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 97, 100, 1037, 1151, 1343, 1689, 1691, 1815, 1894, 1896, 1897, 1903, 1921, 1924, 1936, 1939, 1943, 1944, 1953], "torchscript": [1, 3, 8, 19, 47, 74, 633, 1219, 1222, 1224, 1225, 1226, 1227, 1232, 1236, 1238, 1691, 1894, 1900, 1935, 1937, 1943, 1949], "eager": [1, 8, 12, 15, 17, 18, 19, 24, 29, 968, 1069, 1219, 1222, 1232, 1787, 1899, 1922, 1943, 1945, 1947], "experiment": [1, 2, 15, 16, 21, 29, 41, 43, 47, 48, 66, 74, 75, 78, 82, 83, 85, 917, 919, 923, 968, 974, 1068, 1151, 1251, 1262, 1264, 1265, 1269, 1282, 1633, 1687, 1710, 1894, 1896, 1898, 1912, 1913, 1923, 1934, 1936, 1937, 1941, 1942, 1943], "kineto": [1, 1943], "_experimentalconfig": [1, 1943], "librari": [1, 2, 3, 4, 8, 9, 17, 19, 21, 31, 33, 34, 40, 43, 50, 58, 62, 67, 70, 71, 72, 74, 696, 984, 998, 1021, 1025, 1037, 1145, 1233, 1264, 1310, 1808, 1909, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1932, 1933, 1936, 1937, 1941, 1943, 1944, 1949, 1964], "100": [1, 13, 20, 22, 40, 43, 47, 49, 74, 75, 82, 83, 318, 754, 755, 758, 759, 1181, 1221, 1232, 1238, 1276, 1291, 1298, 1307, 1322, 1342, 1361, 1369, 1370, 1371, 1372, 1373, 1382, 1383, 1385, 1386, 1388, 1389, 1416, 1417, 1418, 1453, 1460, 1462, 1492, 1501, 1534, 1535, 1587, 1699, 1711, 1712, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1741, 1797, 1897, 1899, 1911, 1921, 1922, 1937, 1940, 1945, 1951, 1953, 1958], "realli": [1, 7, 16, 18, 74, 970, 1899, 1919, 1941], "y": [1, 12, 13, 15, 19, 20, 28, 29, 31, 33, 40, 49, 57, 66, 71, 72, 74, 75, 78, 80, 81, 82, 83, 84, 85, 633, 636, 797, 900, 902, 903, 904, 911, 912, 915, 917, 918, 919, 920, 921, 922, 950, 956, 979, 986, 1037, 1038, 1077, 1088, 1094, 1098, 1150, 1152, 1155, 1156, 1157, 1161, 1162, 1196, 1227, 1232, 1236, 1289, 1298, 1299, 1322, 1369, 1370, 1371, 1372, 1373, 1374, 1387, 1389, 1408, 1413, 1414, 1416, 1417, 1418, 1420, 1425, 1440, 1444, 1445, 1456, 1457, 1458, 1460, 1462, 1484, 1485, 1492, 1495, 1501, 1502, 1523, 1552, 1569, 1592, 1624, 1645, 1678, 1687, 1743, 1761, 1763, 1764, 1785, 1817, 1831, 1857, 1861, 1862, 1886, 1889, 1896, 1897, 1898, 1899, 1912, 1913, 1917, 1919, 1920, 1921, 1922, 1925, 1927, 1928, 1931, 1937, 1941, 1944, 1949, 1951, 1954, 1958, 1961, 1962, 1963], "column": [1, 3, 41, 48, 210, 278, 600, 603, 966, 982, 986, 1077, 1107, 1135, 1136, 1186, 1256, 1257, 1260, 1276, 1279, 1284, 1288, 1293, 1343, 1462, 1504, 1543, 1544, 1640, 1729, 1739, 1820, 1822, 1823, 1824, 1826, 1827, 1840, 1861, 1865, 1867, 1880, 1917, 1927, 1953], "remov": [1, 3, 17, 18, 19, 23, 28, 40, 41, 43, 45, 49, 61, 63, 66, 74, 504, 529, 562, 573, 713, 813, 831, 832, 833, 875, 929, 930, 958, 959, 1040, 1151, 1167, 1218, 1221, 1225, 1310, 1311, 1315, 1453, 1454, 1463, 1554, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1641, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1659, 1660, 1661, 1662, 1664, 1665, 1675, 1677, 1680, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1739, 1755, 1777, 1831, 1840, 1863, 1870, 1893, 1894, 1907, 1919, 1930, 1935, 1937, 1939, 1941, 1951, 1955, 1960], "breviti": [1, 74, 1937], "print": [1, 3, 13, 17, 20, 29, 37, 40, 43, 51, 52, 57, 58, 61, 66, 71, 73, 736, 744, 745, 750, 761, 762, 772, 780, 927, 929, 930, 1150, 1151, 1160, 1221, 1225, 1227, 1228, 1232, 1310, 1374, 1377, 1415, 1440, 1453, 1465, 1466, 1534, 1590, 1593, 1594, 1645, 1655, 1656, 1657, 1658, 1661, 1671, 1675, 1687, 1691, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1788, 1879, 1893, 1896, 1897, 1919, 1921, 1922, 1924, 1930, 1931, 1937, 1939, 1941, 1943, 1949, 1958, 1959, 1962, 1963], "tabl": [1, 3, 16, 18, 22, 24, 29, 43, 74, 1396, 1543, 1897, 1899, 1924, 1940, 1941, 1943, 1944, 1949, 1953, 1960], "sort_bi": [1, 1943], "self_cpu_time_tot": [1, 1943], "avg": [1, 43, 1694], "mul": [1, 13, 15, 28, 37, 74, 75, 78, 81, 82, 437, 763, 764, 773, 1198, 1344, 1895, 1896, 1897, 1899, 1912, 1914, 1924, 1937, 1939, 1946, 1950, 1953, 1956, 1962], "32": [1, 2, 14, 20, 22, 41, 43, 107, 762, 1147, 1218, 1230, 1310, 1367, 1392, 1393, 1394, 1398, 1399, 1401, 1402, 1422, 1441, 1447, 1458, 1496, 1497, 1498, 1499, 1500, 1517, 1547, 1548, 1554, 1602, 1913, 1914, 1930, 1934, 1937, 1947, 1953, 1956, 1958, 1959], "048m": 1, "200": [1, 29, 47, 1221, 1298, 1453, 1741, 1899, 1953], "27": [1, 633, 1288, 1714, 1736, 1880, 1937], "041m": 1, "powbackward0": 1, "9": [1, 7, 14, 40, 41, 43, 50, 74, 75, 80, 106, 331, 333, 335, 339, 419, 420, 488, 529, 576, 597, 599, 713, 761, 762, 870, 952, 958, 962, 966, 986, 1077, 1092, 1095, 1116, 1117, 1126, 1127, 1137, 1140, 1141, 1144, 1145, 1174, 1184, 1250, 1252, 1273, 1275, 1277, 1288, 1290, 1352, 1353, 1359, 1360, 1363, 1364, 1377, 1396, 1397, 1449, 1450, 1465, 1466, 1475, 1478, 1543, 1544, 1590, 1593, 1594, 1680, 1681, 1694, 1696, 1697, 1698, 1699, 1700, 1706, 1709, 1710, 1711, 1715, 1721, 1723, 1724, 1728, 1732, 1768, 1775, 1784, 1788, 1798, 1803, 1813, 1820, 1828, 1854, 1855, 1859, 1861, 1870, 1880, 1887, 1896, 1900, 1906, 1926, 1930, 1935, 1936, 1937, 1939, 1940, 1941, 1949, 1953, 1954, 1956, 1960], "727m": 1, "55": [1, 1407, 1937], "483m": 1, "accumulategrad": [1, 1919], "148m": 1, "graphroot": 1, "691": 1, "816u": 1, "emit": [1, 33, 52, 57, 74, 696, 1236, 1790, 1899, 1905, 1938, 1948, 1953], "nvtx": [1, 4, 1894], "program": [1, 3, 4, 8, 12, 15, 16, 17, 19, 21, 23, 25, 26, 29, 37, 40, 43, 52, 61, 63, 66, 74, 633, 979, 980, 1043, 1045, 1151, 1783, 1896, 1898, 1900, 1910, 1919, 1922, 1926, 1929, 1931, 1932, 1935, 1936, 1958], "off": [1, 5, 7, 8, 16, 20, 24, 33, 43, 51, 66, 74, 937, 946, 1055, 1151, 1178, 1179, 1218, 1236, 1284, 1366, 1367, 1368, 1370, 1446, 1447, 1448, 1552, 1590, 1785, 1921, 1922, 1923, 1926, 1929, 1933, 1943, 1944, 1945, 1949, 1950], "o": [1, 29, 41, 43, 44, 49, 61, 62, 63, 74, 1221, 1292, 1334, 1335, 1336, 1424, 1453, 1459, 1633, 1771, 1893, 1900, 1911, 1919, 1922, 1923, 1926, 1936, 1941, 1942, 1949], "trace_nam": 1, "regular": [1, 3, 4, 20, 43, 51, 61, 66, 69, 74, 1037, 1038, 1150, 1268, 1269, 1376, 1391, 1392, 1393, 1394, 1398, 1438, 1452, 1453, 1454, 1455, 1463, 1464, 1545, 1582, 1624, 1635, 1636, 1675, 1697, 1899, 1913, 1914, 1924, 1925, 1929, 1930, 1937, 1941, 1944, 1947, 1949, 1953, 1954, 1961, 1963], "command": [1, 4, 22, 24, 43, 51, 58, 61, 74, 1922, 1928, 1932, 1936, 1942, 1943, 1950], "unfortun": [1, 9, 14, 16, 40, 1633, 1919], "wai": [1, 3, 5, 7, 8, 9, 12, 13, 15, 16, 17, 20, 25, 28, 29, 33, 40, 41, 43, 45, 47, 49, 53, 57, 66, 68, 69, 73, 74, 169, 596, 696, 812, 835, 838, 841, 877, 878, 906, 909, 918, 920, 921, 922, 923, 924, 1115, 1117, 1151, 1174, 1221, 1250, 1251, 1266, 1281, 1369, 1397, 1416, 1417, 1418, 1423, 1435, 1436, 1437, 1453, 1481, 1498, 1500, 1544, 1596, 1633, 1643, 1673, 1710, 1714, 1721, 1896, 1898, 1899, 1903, 1905, 1906, 1909, 1911, 1912, 1913, 1919, 1921, 1924, 1925, 1926, 1927, 1930, 1932, 1933, 1936, 1937, 1938, 1940, 1941, 1944, 1949, 1950, 1953, 1957, 1959, 1963], "disk": [1, 40, 1292, 1771, 1919, 1930, 1941, 1958], "annot": [1, 18, 19, 20, 27, 53, 58, 74, 931, 1219, 1232, 1896, 1898, 1900, 1937, 1949], "wait": [1, 17, 25, 37, 43, 51, 58, 60, 73, 840, 993, 997, 998, 1000, 1070, 1224, 1334, 1335, 1340, 1723, 1897, 1899, 1911, 1921, 1922, 1923, 1939, 1943, 1949], "either": [1, 8, 9, 15, 17, 18, 19, 21, 33, 37, 40, 41, 43, 47, 48, 49, 51, 53, 58, 60, 61, 62, 66, 71, 73, 74, 173, 240, 331, 339, 529, 531, 633, 696, 748, 754, 755, 756, 761, 762, 772, 780, 795, 801, 807, 874, 906, 908, 915, 924, 925, 955, 968, 1008, 1094, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1147, 1151, 1174, 1198, 1214, 1221, 1236, 1276, 1291, 1292, 1307, 1322, 1359, 1360, 1363, 1364, 1367, 1368, 1369, 1370, 1381, 1382, 1383, 1385, 1386, 1387, 1389, 1397, 1407, 1413, 1420, 1422, 1444, 1445, 1447, 1448, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1468, 1470, 1484, 1485, 1500, 1501, 1503, 1505, 1506, 1507, 1524, 1525, 1535, 1563, 1564, 1587, 1595, 1621, 1628, 1633, 1658, 1680, 1687, 1696, 1697, 1699, 1721, 1736, 1738, 1780, 1836, 1840, 1889, 1893, 1896, 1898, 1899, 1901, 1905, 1913, 1917, 1919, 1920, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1932, 1934, 1937, 1940, 1941, 1942, 1944, 1950, 1951, 1953, 1954, 1957, 1960, 1965], "nvidia": [1, 24, 25, 29, 33, 43, 1006, 1019, 1047, 1053, 1057, 1071, 1072, 1875, 1894, 1922, 1926, 1928, 1934, 1936, 1944, 1953, 1961], "visual": [1, 17, 25, 29, 74, 1322, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1446, 1447, 1448, 1504, 1930, 1936, 1943, 1958], "nvvp": 1, "timelin": [1, 4, 1334, 1335, 1943], "load_nvprof": 1, "repl": [1, 19], "append": [1, 20, 28, 43, 73, 74, 75, 80, 248, 272, 623, 777, 779, 781, 1040, 1084, 1086, 1315, 1406, 1424, 1455, 1464, 1470, 1481, 1633, 1897, 1898, 1899, 1919, 1921, 1932, 1936, 1937, 1939, 1953, 1958], "size": [1, 2, 3, 7, 12, 14, 15, 16, 17, 22, 25, 29, 37, 40, 41, 43, 45, 49, 51, 60, 66, 69, 74, 75, 76, 81, 82, 83, 157, 227, 240, 260, 272, 273, 331, 333, 339, 357, 462, 463, 464, 466, 504, 509, 514, 515, 516, 529, 531, 533, 536, 539, 560, 561, 562, 582, 597, 599, 600, 601, 603, 604, 622, 623, 633, 634, 696, 706, 707, 709, 711, 712, 713, 715, 736, 744, 745, 751, 757, 758, 759, 761, 762, 772, 780, 782, 783, 784, 785, 795, 801, 802, 803, 812, 874, 881, 893, 894, 896, 908, 917, 918, 919, 920, 921, 922, 933, 936, 937, 939, 946, 948, 949, 950, 951, 952, 959, 960, 961, 962, 968, 986, 994, 996, 1002, 1008, 1009, 1011, 1051, 1075, 1076, 1082, 1085, 1092, 1094, 1095, 1096, 1097, 1100, 1111, 1112, 1113, 1115, 1116, 1117, 1119, 1120, 1123, 1124, 1125, 1126, 1127, 1129, 1130, 1131, 1147, 1148, 1149, 1156, 1157, 1162, 1163, 1178, 1179, 1183, 1184, 1195, 1198, 1218, 1221, 1242, 1251, 1260, 1265, 1273, 1277, 1281, 1284, 1286, 1287, 1288, 1290, 1291, 1293, 1301, 1307, 1308, 1310, 1311, 1315, 1318, 1320, 1321, 1322, 1323, 1326, 1327, 1328, 1329, 1330, 1343, 1345, 1348, 1351, 1353, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1396, 1397, 1399, 1400, 1401, 1402, 1405, 1407, 1408, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1465, 1466, 1468, 1474, 1475, 1476, 1477, 1478, 1479, 1484, 1492, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1525, 1530, 1531, 1532, 1535, 1536, 1543, 1544, 1547, 1548, 1552, 1563, 1570, 1576, 1577, 1578, 1587, 1588, 1590, 1593, 1594, 1596, 1602, 1621, 1622, 1623, 1624, 1633, 1656, 1666, 1667, 1668, 1669, 1670, 1672, 1674, 1677, 1679, 1681, 1684, 1685, 1699, 1708, 1727, 1728, 1729, 1730, 1732, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1761, 1766, 1775, 1778, 1797, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1833, 1834, 1835, 1836, 1839, 1840, 1841, 1854, 1855, 1856, 1861, 1863, 1871, 1872, 1873, 1874, 1881, 1882, 1884, 1885, 1886, 1887, 1891, 1892, 1894, 1895, 1896, 1897, 1899, 1907, 1909, 1912, 1913, 1918, 1919, 1920, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1934, 1935, 1937, 1939, 1942, 1943, 1944, 1946, 1953, 1955, 1956, 1958, 1959], "format": [1, 25, 29, 38, 41, 43, 45, 53, 62, 74, 174, 189, 191, 194, 197, 198, 199, 214, 225, 228, 258, 285, 315, 343, 349, 411, 515, 516, 541, 596, 599, 600, 601, 602, 603, 604, 696, 751, 776, 808, 809, 965, 1040, 1094, 1095, 1096, 1149, 1218, 1221, 1234, 1263, 1376, 1397, 1405, 1423, 1453, 1468, 1500, 1633, 1667, 1669, 1685, 1687, 1688, 1691, 1749, 1751, 1753, 1771, 1814, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1892, 1893, 1896, 1899, 1900, 1905, 1922, 1924, 1930, 1935, 1937, 1938, 1939, 1943, 1944, 1949, 1950, 1953, 1956, 1958, 1960], "arg0": [1, 43], "arg1": [1, 43, 58, 59, 61, 1688, 1937], "repres": [1, 8, 15, 16, 20, 31, 40, 41, 49, 50, 51, 53, 54, 60, 62, 66, 74, 97, 776, 808, 809, 812, 905, 970, 974, 982, 986, 995, 1027, 1030, 1094, 1115, 1117, 1122, 1124, 1125, 1126, 1127, 1151, 1174, 1181, 1210, 1211, 1214, 1217, 1220, 1236, 1237, 1268, 1310, 1361, 1376, 1453, 1459, 1500, 1502, 1504, 1633, 1639, 1642, 1647, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1666, 1676, 1688, 1691, 1715, 1721, 1727, 1729, 1740, 1822, 1823, 1824, 1826, 1827, 1836, 1840, 1872, 1873, 1878, 1884, 1885, 1896, 1898, 1899, 1906, 1909, 1914, 1919, 1924, 1925, 1927, 1929, 1930, 1933, 1937, 1938, 1942, 1944, 1945, 1947, 1949, 1953, 1956, 1965], "order": [1, 3, 5, 12, 13, 15, 17, 22, 25, 26, 29, 43, 44, 45, 47, 49, 61, 66, 67, 72, 73, 74, 169, 210, 227, 331, 333, 335, 339, 349, 420, 504, 696, 808, 809, 818, 870, 892, 909, 910, 923, 929, 930, 947, 958, 998, 1040, 1051, 1082, 1085, 1086, 1094, 1112, 1114, 1115, 1121, 1133, 1134, 1135, 1136, 1152, 1162, 1174, 1221, 1240, 1251, 1257, 1259, 1266, 1273, 1276, 1277, 1284, 1285, 1288, 1290, 1293, 1322, 1328, 1341, 1343, 1361, 1370, 1376, 1390, 1453, 1454, 1463, 1480, 1481, 1517, 1525, 1552, 1576, 1577, 1578, 1602, 1624, 1633, 1642, 1652, 1666, 1667, 1668, 1669, 1680, 1699, 1721, 1727, 1730, 1740, 1775, 1778, 1803, 1813, 1840, 1858, 1865, 1867, 1872, 1875, 1880, 1886, 1893, 1894, 1896, 1897, 1899, 1900, 1911, 1912, 1913, 1914, 1917, 1920, 1922, 1923, 1924, 1925, 1927, 1930, 1933, 1935, 1937, 1940, 1941, 1942, 1944, 1946, 1949, 1950, 1951, 1953, 1954, 1956, 1960, 1963], "backend": [1, 14, 17, 18, 20, 21, 22, 24, 26, 33, 59, 63, 66, 757, 758, 759, 808, 809, 849, 871, 872, 875, 877, 878, 917, 923, 968, 974, 1020, 1051, 1094, 1151, 1234, 1264, 1266, 1284, 1334, 1335, 1336, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1552, 1590, 1602, 1633, 1691, 1692, 1783, 1876, 1878, 1894, 1895, 1897, 1898, 1903, 1907, 1910, 1921, 1922, 1924, 1933, 1934, 1937, 1945, 1947, 1953], "side": [1, 12, 20, 33, 43, 60, 62, 71, 74, 75, 78, 784, 785, 788, 789, 790, 1029, 1088, 1110, 1111, 1113, 1116, 1117, 1122, 1124, 1125, 1126, 1127, 1130, 1218, 1219, 1265, 1270, 1281, 1283, 1366, 1367, 1368, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1474, 1475, 1477, 1478, 1479, 1504, 1508, 1509, 1510, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1576, 1577, 1578, 1590, 1715, 1744, 1745, 1775, 1836, 1863, 1893, 1896, 1897, 1899, 1918, 1919, 1922, 1924, 1927, 1949], "creation": [1, 2, 15, 20, 40, 43, 45, 74, 761, 762, 772, 780, 840, 997, 1151, 1633, 1634, 1647, 1896, 1900, 1909, 1911, 1919, 1922, 1949, 1951, 1953, 1959], "warmup": [1, 3, 12, 17, 25, 1040, 1922, 1943], "correl": [1, 49, 61, 982, 1381, 1382, 1383, 1384, 1385, 1386, 1392, 1393, 1394, 1398], "view": [1, 7, 8, 15, 16, 24, 28, 29, 31, 37, 40, 41, 45, 47, 51, 66, 74, 75, 83, 241, 272, 452, 513, 514, 515, 623, 634, 708, 713, 776, 894, 902, 903, 904, 912, 950, 962, 979, 980, 1084, 1085, 1092, 1133, 1134, 1135, 1136, 1151, 1184, 1196, 1221, 1276, 1287, 1335, 1397, 1405, 1423, 1453, 1468, 1504, 1505, 1506, 1507, 1544, 1589, 1629, 1630, 1633, 1637, 1730, 1762, 1766, 1767, 1771, 1777, 1778, 1809, 1828, 1839, 1850, 1855, 1859, 1871, 1884, 1885, 1887, 1894, 1895, 1896, 1897, 1911, 1913, 1914, 1920, 1924, 1939, 1946, 1951, 1953, 1955, 1956, 1959], "difficult": [1, 7, 9, 16, 17, 23, 25, 29, 71, 1162, 1886], "eas": [1, 15, 28, 74, 1921, 1924, 1928], "sequenc": [1, 12, 15, 17, 26, 28, 29, 40, 45, 47, 48, 49, 66, 169, 582, 751, 776, 830, 896, 909, 923, 952, 954, 955, 958, 966, 1000, 1007, 1008, 1011, 1079, 1093, 1095, 1162, 1182, 1183, 1186, 1236, 1276, 1322, 1361, 1371, 1376, 1381, 1390, 1397, 1405, 1423, 1459, 1468, 1481, 1496, 1497, 1498, 1499, 1500, 1544, 1602, 1642, 1645, 1652, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1681, 1684, 1687, 1692, 1707, 1746, 1748, 1752, 1775, 1833, 1836, 1886, 1888, 1891, 1896, 1897, 1898, 1914, 1922, 1926, 1937, 1941, 1942, 1949, 1959, 1960], "gener": [1, 2, 3, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 28, 29, 33, 40, 41, 43, 49, 53, 54, 61, 66, 67, 68, 75, 77, 80, 83, 99, 172, 173, 192, 276, 304, 395, 438, 471, 498, 624, 696, 925, 938, 968, 970, 1026, 1029, 1037, 1038, 1041, 1042, 1061, 1062, 1064, 1065, 1066, 1094, 1116, 1117, 1151, 1162, 1173, 1178, 1197, 1225, 1230, 1241, 1252, 1257, 1266, 1283, 1284, 1288, 1293, 1313, 1321, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1343, 1389, 1400, 1414, 1496, 1504, 1505, 1517, 1624, 1641, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1674, 1677, 1681, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1727, 1729, 1732, 1746, 1748, 1750, 1751, 1752, 1754, 1776, 1789, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1841, 1856, 1860, 1876, 1878, 1880, 1886, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1905, 1907, 1912, 1917, 1919, 1922, 1924, 1926, 1927, 1929, 1930, 1932, 1936, 1937, 1940, 1941, 1943, 1948, 1949, 1950, 1953, 1956, 1958, 1960, 1962, 1964], "seq": [1, 621, 776, 955, 967, 1322, 1405, 1423, 1459, 1468, 1496, 1498, 1500, 1669, 1870], "n": [1, 3, 20, 43, 45, 48, 49, 51, 53, 58, 61, 74, 248, 278, 424, 482, 483, 702, 705, 706, 707, 751, 774, 776, 797, 893, 933, 936, 937, 939, 946, 948, 952, 958, 959, 960, 986, 987, 988, 989, 990, 991, 992, 993, 1075, 1076, 1086, 1107, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1134, 1154, 1157, 1162, 1174, 1178, 1179, 1183, 1218, 1221, 1232, 1236, 1237, 1240, 1241, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1293, 1301, 1310, 1315, 1317, 1322, 1325, 1345, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1408, 1413, 1414, 1416, 1417, 1418, 1420, 1421, 1422, 1423, 1425, 1435, 1436, 1437, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1456, 1457, 1458, 1459, 1460, 1462, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1484, 1486, 1487, 1488, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1517, 1523, 1535, 1536, 1544, 1548, 1552, 1587, 1590, 1592, 1602, 1633, 1640, 1651, 1660, 1679, 1727, 1728, 1729, 1734, 1739, 1740, 1746, 1752, 1754, 1767, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1817, 1818, 1834, 1835, 1836, 1840, 1841, 1855, 1856, 1861, 1865, 1867, 1880, 1881, 1882, 1883, 1886, 1895, 1897, 1899, 1903, 1912, 1913, 1917, 1919, 1922, 1924, 1926, 1927, 1932, 1941, 1943, 1944, 1945, 1953, 1954, 1958, 1959, 1960], "counter": [1, 43, 1033, 1051, 1196, 1390, 1909, 1911, 1919], "increment": [1, 12, 43, 60, 1147, 1183, 1225, 1390, 1896, 1898, 1919, 1949], "stash": [1, 5, 1922, 1924, 1942], "associ": [1, 8, 9, 16, 17, 20, 29, 43, 45, 54, 911, 968, 1003, 1054, 1056, 1182, 1183, 1221, 1270, 1281, 1283, 1292, 1376, 1453, 1463, 1536, 1633, 1641, 1687, 1797, 1799, 1896, 1899, 1905, 1912, 1913, 1919, 1927, 1930, 1933, 1935, 1941, 1942, 1943, 1949, 1950, 1956, 1959], "tell": [1, 7, 74, 512, 1222, 1228, 1292, 1692, 1896, 1906, 1919, 1924, 1925, 1941], "top": [1, 3, 7, 8, 14, 24, 25, 40, 45, 48, 49, 53, 66, 70, 74, 763, 933, 1369, 1370, 1389, 1413, 1420, 1444, 1460, 1502, 1505, 1552, 1647, 1651, 1653, 1804, 1858, 1877, 1900, 1906, 1911, 1924, 1940], "m": [1, 4, 8, 11, 19, 41, 43, 48, 49, 57, 61, 74, 702, 705, 706, 707, 736, 744, 745, 754, 755, 756, 757, 758, 759, 761, 762, 772, 774, 780, 830, 876, 877, 878, 936, 948, 952, 956, 961, 1107, 1160, 1183, 1219, 1221, 1226, 1227, 1231, 1232, 1238, 1241, 1252, 1260, 1266, 1267, 1268, 1269, 1273, 1274, 1275, 1277, 1278, 1279, 1284, 1285, 1286, 1287, 1293, 1310, 1311, 1315, 1325, 1343, 1345, 1358, 1359, 1360, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1371, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1401, 1402, 1403, 1404, 1408, 1409, 1410, 1411, 1412, 1415, 1416, 1417, 1418, 1421, 1422, 1439, 1440, 1442, 1443, 1446, 1447, 1448, 1452, 1453, 1460, 1461, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1590, 1592, 1633, 1640, 1645, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1673, 1674, 1677, 1727, 1728, 1729, 1739, 1746, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1817, 1818, 1836, 1840, 1841, 1856, 1863, 1896, 1897, 1898, 1899, 1922, 1924, 1926, 1927, 1930, 1932, 1935, 1944, 1953, 1963], "By": [1, 2, 3, 5, 14, 17, 22, 23, 27, 29, 33, 40, 43, 52, 57, 66, 74, 462, 463, 464, 465, 466, 896, 968, 986, 1000, 1043, 1045, 1077, 1089, 1112, 1114, 1115, 1116, 1117, 1125, 1126, 1127, 1152, 1153, 1155, 1156, 1162, 1174, 1182, 1183, 1225, 1273, 1284, 1292, 1321, 1326, 1347, 1369, 1370, 1371, 1372, 1373, 1387, 1389, 1407, 1413, 1416, 1417, 1418, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1492, 1501, 1524, 1525, 1535, 1564, 1587, 1595, 1677, 1729, 1740, 1761, 1815, 1861, 1886, 1893, 1898, 1903, 1906, 1919, 1922, 1924, 1926, 1930, 1932, 1933, 1935, 1937, 1940, 1948, 1949, 1953, 1960], "compar": [1, 3, 5, 12, 18, 24, 33, 40, 66, 74, 100, 710, 881, 892, 923, 1051, 1098, 1099, 1122, 1123, 1124, 1128, 1129, 1130, 1131, 1140, 1141, 1165, 1177, 1196, 1210, 1245, 1309, 1319, 1324, 1354, 1459, 1633, 1678, 1785, 1899, 1909, 1922, 1924, 1927, 1933, 1936, 1944, 1945, 1949, 1953, 1958, 1960, 1962, 1963], "down": [1, 7, 22, 29, 33, 40, 49, 51, 58, 59, 61, 74, 795, 1051, 1089, 1136, 1142, 1230, 1266, 1563, 1740, 1768, 1924, 1929, 1932, 1937, 1949, 1951, 1953, 1958], "irrelev": [1, 3, 1900], "simpli": [1, 3, 15, 17, 23, 33, 40, 49, 53, 61, 73, 74, 879, 1151, 1208, 1219, 1365, 1391, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1896, 1898, 1919, 1925, 1927, 1930, 1931, 1943, 1953], "hand": [1, 4, 16, 20, 43, 66, 71, 74, 1088, 1094, 1219, 1265, 1270, 1281, 1283, 1365, 1463, 1481, 1863, 1875, 1896, 1898, 1899, 1919, 1927, 1930, 1932, 1935, 1941, 1953], "underwai": [1, 1035, 1922], "up": [1, 6, 7, 8, 9, 12, 14, 16, 19, 20, 21, 23, 25, 29, 33, 40, 41, 43, 47, 49, 51, 53, 57, 59, 60, 62, 63, 66, 69, 74, 795, 801, 906, 968, 1037, 1038, 1040, 1077, 1094, 1123, 1124, 1129, 1131, 1136, 1151, 1212, 1225, 1230, 1233, 1234, 1279, 1361, 1376, 1400, 1459, 1498, 1500, 1504, 1505, 1517, 1543, 1552, 1563, 1621, 1633, 1710, 1746, 1768, 1872, 1873, 1893, 1896, 1898, 1903, 1906, 1909, 1911, 1912, 1913, 1919, 1920, 1921, 1922, 1926, 1927, 1928, 1930, 1933, 1937, 1941, 1943, 1944, 1949, 1950, 1960], "nonzero": [1, 15, 16, 66, 1218, 1302, 1304, 1305, 1310, 1889, 1895, 1897, 1939], "themselv": [1, 9, 49, 60, 66, 809, 857, 1858, 1922, 1941, 1964], "origin": [1, 5, 13, 14, 16, 17, 18, 20, 22, 28, 29, 31, 37, 40, 41, 43, 45, 53, 66, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 225, 228, 240, 503, 561, 619, 623, 633, 696, 776, 813, 854, 855, 870, 873, 874, 953, 958, 998, 1114, 1115, 1117, 1121, 1125, 1126, 1127, 1133, 1150, 1160, 1195, 1218, 1228, 1232, 1233, 1236, 1237, 1314, 1328, 1361, 1365, 1377, 1389, 1390, 1405, 1482, 1492, 1535, 1605, 1640, 1641, 1642, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1666, 1669, 1672, 1674, 1675, 1677, 1691, 1721, 1730, 1766, 1777, 1813, 1828, 1861, 1872, 1873, 1896, 1899, 1905, 1911, 1913, 1919, 1922, 1924, 1926, 1929, 1932, 1933, 1935, 1937, 1941, 1942, 1944, 1945, 1953, 1955, 1962, 1963, 1964], "did": [1, 7, 8, 19, 20, 43, 60, 1350, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1898, 1899, 1927, 1935, 1941], "relationship": [1, 9, 16, 20, 57, 74, 965, 1174, 1502, 1919, 1922, 1935, 1941], "conceptu": [1, 3, 1919, 1925, 1951], "tag": [1, 3, 7, 43, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 974, 1292, 1893, 1894, 1929, 1935, 1941, 1958], "eventu": [1, 7, 15, 16, 60, 66, 1893, 1942], "itt": [1, 1943], "intel": [1, 4, 24, 1894, 1936], "r": [1, 20, 29, 49, 72, 169, 905, 907, 909, 923, 924, 956, 967, 982, 1094, 1152, 1154, 1157, 1162, 1163, 1166, 1174, 1232, 1250, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1272, 1279, 1281, 1283, 1284, 1293, 1396, 1397, 1406, 1465, 1466, 1484, 1543, 1544, 1593, 1594, 1640, 1708, 1739, 1886, 1896, 1897, 1898, 1919, 1921, 1924, 1927, 1936, 1953, 1956, 1958], "instrument": [1, 3, 41, 1335, 1894, 1929, 1963], "technologi": [1, 1894], "applic": [1, 2, 9, 17, 49, 60, 815, 826, 827, 828, 829, 915, 968, 1019, 1156, 1331, 1389, 1390, 1498, 1500, 1535, 1633, 1875, 1894, 1906, 1914, 1919, 1921, 1922, 1923, 1924, 1928, 1929, 1930, 1934, 1937, 1940, 1944, 1949, 1950, 1951, 1953, 1959], "across": [1, 8, 12, 15, 17, 20, 29, 33, 40, 41, 43, 45, 47, 51, 61, 66, 71, 74, 633, 751, 835, 890, 934, 1011, 1050, 1051, 1094, 1108, 1162, 1231, 1236, 1322, 1370, 1390, 1400, 1441, 1459, 1461, 1492, 1504, 1522, 1525, 1554, 1570, 1617, 1633, 1652, 1656, 1680, 1771, 1886, 1894, 1896, 1909, 1912, 1914, 1919, 1923, 1926, 1929, 1930, 1932, 1933, 1934, 1940, 1942, 1945, 1949, 1950, 1955, 1958, 1963], "tool": [1, 4, 8, 9, 17, 19, 21, 22, 25, 29, 37, 43, 61, 74, 877, 932, 1335, 1815, 1893, 1894, 1896, 1898, 1921, 1922, 1936, 1937, 1941, 1943, 1963], "With": [1, 11, 17, 18, 20, 24, 29, 37, 40, 43, 49, 66, 73, 755, 756, 757, 758, 759, 801, 1051, 1115, 1116, 1117, 1125, 1126, 1127, 1237, 1371, 1372, 1373, 1382, 1383, 1385, 1386, 1399, 1416, 1417, 1418, 1492, 1503, 1505, 1528, 1531, 1563, 1588, 1621, 1707, 1750, 1900, 1919, 1922, 1924, 1949, 1953, 1958], "abl": [1, 2, 7, 8, 13, 15, 16, 17, 18, 23, 29, 37, 43, 45, 60, 71, 1151, 1219, 1231, 1496, 1633, 1896, 1903, 1912, 1919, 1924, 1925, 1935, 1937, 1941, 1944, 1949, 1953, 1960], "labl": 1, "gui": 1, "detect_anomali": 1, "check_nan": 1, "engin": [1, 8, 9, 17, 31, 34, 353, 757, 758, 759, 913, 923, 1162, 1746, 1886, 1919, 1922, 1923, 1924, 1949, 1950], "traceback": [1, 29, 37, 53, 61, 73, 74, 1196, 1206, 1815, 1898, 1899, 1900, 1911, 1914, 1924, 1934, 1953, 1960], "fail": [1, 7, 13, 14, 15, 17, 18, 20, 21, 29, 43, 49, 51, 52, 53, 58, 59, 60, 61, 63, 73, 74, 75, 80, 83, 88, 99, 924, 925, 998, 1051, 1222, 1228, 1231, 1250, 1279, 1284, 1292, 1293, 1310, 1689, 1899, 1901, 1911, 1919, 1922, 1924, 1932, 1933, 1936, 1937, 1941, 1949], "debug": [1, 2, 4, 5, 8, 15, 17, 18, 23, 40, 57, 696, 843, 844, 848, 859, 924, 925, 968, 970, 974, 995, 1028, 1068, 1169, 1250, 1627, 1628, 1629, 1630, 1782, 1790, 1894, 1898, 1905, 1919, 1921, 1922, 1923, 1928, 1929, 1930, 1934, 1936, 1937, 1938, 1941, 1962], "test": [1, 3, 16, 17, 29, 33, 37, 43, 48, 58, 60, 61, 74, 75, 82, 83, 709, 715, 968, 1111, 1113, 1114, 1119, 1120, 1125, 1126, 1127, 1129, 1131, 1207, 1208, 1212, 1213, 1215, 1216, 1691, 1805, 1894, 1896, 1900, 1909, 1911, 1919, 1927, 1934, 1937, 1940, 1958, 1963, 1964], "slow": [1, 16, 924, 1230, 1234, 1250, 1251, 1637, 1638, 1673, 1872, 1927, 1932, 1958], "import": [1, 2, 3, 5, 7, 9, 12, 13, 14, 15, 17, 19, 20, 21, 25, 27, 28, 29, 33, 36, 37, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 58, 62, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 99, 240, 696, 750, 757, 758, 759, 788, 789, 790, 808, 876, 877, 878, 927, 929, 947, 954, 986, 1145, 1147, 1150, 1151, 1152, 1154, 1155, 1156, 1157, 1158, 1160, 1196, 1218, 1219, 1222, 1224, 1226, 1227, 1228, 1230, 1231, 1232, 1236, 1237, 1238, 1272, 1273, 1276, 1277, 1290, 1322, 1419, 1453, 1633, 1643, 1645, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1668, 1669, 1670, 1671, 1672, 1673, 1680, 1687, 1688, 1709, 1710, 1733, 1896, 1898, 1899, 1900, 1909, 1911, 1914, 1918, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1929, 1930, 1932, 1933, 1934, 1935, 1937, 1944, 1947, 1949, 1950, 1951, 1953, 1956, 1958, 1959, 1960, 1963, 1964], "myfunc": [1, 1925], "inp": [1, 25, 40, 43, 74, 910, 911, 912, 1504, 1633, 1895, 1964], "clone": [1, 34, 40, 66, 75, 272, 465, 913, 916, 927, 929, 930, 950, 1225, 1396, 1620, 1854, 1863, 1895, 1897, 1911, 1914, 1935, 1939, 1943, 1953, 1955, 1956, 1960], "run_fn": [1, 5, 873, 879], "last": [1, 5, 6, 13, 22, 29, 31, 40, 41, 44, 47, 48, 49, 60, 73, 74, 333, 633, 708, 776, 893, 937, 946, 952, 962, 1037, 1077, 1082, 1086, 1111, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1131, 1133, 1178, 1179, 1183, 1196, 1198, 1206, 1218, 1242, 1276, 1279, 1284, 1321, 1326, 1361, 1374, 1389, 1397, 1399, 1405, 1423, 1425, 1440, 1460, 1463, 1467, 1468, 1481, 1497, 1498, 1504, 1523, 1544, 1553, 1566, 1589, 1590, 1633, 1634, 1679, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1766, 1775, 1813, 1815, 1822, 1823, 1824, 1826, 1827, 1828, 1836, 1840, 1856, 1858, 1861, 1884, 1885, 1898, 1899, 1909, 1912, 1914, 1919, 1922, 1924, 1927, 1934, 1937, 1941, 1942, 1953, 1959, 1960], "stdin": [1, 1196, 1815, 1914, 1924, 1934, 1953], "instal": [1, 3, 13, 15, 20, 23, 33, 34, 43, 74, 1893, 1930, 1931, 1937, 1941, 1949, 1958], "_tensor": [1, 173], "py": [1, 4, 11, 13, 14, 15, 16, 17, 19, 20, 22, 24, 28, 29, 33, 37, 43, 47, 49, 52, 59, 61, 66, 74, 101, 876, 1633, 1893, 1896, 1899, 1905, 1923, 1927, 1929, 1932, 1937, 1941, 1944, 1950], "93": [1, 633], "retain_graph": [1, 169, 909, 923, 929, 930, 1162, 1886, 1897, 1918, 1919, 1949], "90": [1, 1078, 1725, 1767], "allow_unreach": 1, "76": 1, "_forward_cl": 1, "tmp": [1, 3, 22, 33, 43, 58, 60, 1893, 1922, 1943], "53": [1, 498], "44": [1, 14, 339, 462, 1097, 1368, 1448, 1673], "set_detect_anomali": 1, "behaviour": [1, 709, 710, 715, 994, 1552, 1590, 1721, 1790, 1893, 1933], "interpos": [1, 1924], "grad_fn": [1, 169, 353, 896, 909, 917, 918, 919, 920, 921, 922, 927, 929, 930, 1150, 1641, 1817, 1919, 1930, 1935], "node": [1, 15, 16, 17, 24, 28, 29, 43, 47, 51, 53, 59, 60, 66, 74, 97, 104, 105, 696, 835, 836, 837, 840, 841, 842, 1040, 1160, 1235, 1376, 1390, 1633, 1691, 1907, 1922, 1937, 1938, 1941, 1942, 1949, 1950, 1951, 1961, 1963], "grad_mod": [1, 1897], "least": [1, 5, 6, 8, 17, 29, 41, 45, 49, 59, 60, 66, 278, 420, 713, 939, 1082, 1084, 1085, 1094, 1135, 1136, 1174, 1182, 1183, 1218, 1243, 1266, 1293, 1315, 1347, 1361, 1633, 1667, 1893, 1899, 1913, 1917, 1919, 1920, 1922, 1926, 1942, 1945, 1951, 1953, 1954, 1955, 1960], "intermediari": [1, 33, 49, 915, 1919, 1927], "access": [1, 9, 12, 15, 16, 17, 19, 23, 37, 40, 43, 45, 66, 73, 573, 750, 915, 1004, 1221, 1224, 1236, 1283, 1361, 1453, 1624, 1635, 1636, 1641, 1645, 1667, 1677, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1894, 1896, 1897, 1899, 1900, 1903, 1907, 1910, 1911, 1913, 1914, 1919, 1922, 1926, 1927, 1929, 1930, 1949, 1953, 1956, 1957, 1959, 1965], "isinst": [1, 28, 29, 40, 49, 74, 927, 929, 930, 1208, 1219, 1897, 1899, 1919, 1924, 1930, 1941, 1953], "dir": [1, 1037, 1691, 1893, 1899, 1941], "__call__": [1, 1221, 1453], "__class__": [1, 75, 77], "__delattr__": 1, "__dir__": 1, "__doc__": 1, "__eq__": 1, "__format__": [1, 1900], "__ge__": 1, "__getattribute__": 1, "__gt__": 1, "__hash__": [1, 1900], "__init_subclass__": 1, "__le__": 1, "__lt__": [1, 1899], "__ne__": 1, "__new__": [1, 1898, 1900], "__reduce__": [1, 1941], "__reduce_ex__": 1, "__repr__": [1, 3, 1924], "__setattr__": 1, "__sizeof__": 1, "__str__": [1, 74, 1897, 1899], "__subclasshook__": 1, "_raw_saved_result": 1, "_register_hook_dict": 1, "_saved_result": [1, 1919], "metadata": [1, 3, 16, 28, 45, 53, 54, 75, 82, 83, 1292, 1771, 1914, 1919, 1924, 1925, 1935, 1941, 1943, 1949, 1950, 1953, 1958], "next_funct": 1, "register_prehook": [1, 1919], "allclos": [1, 71, 72, 74, 924, 925, 1037, 1116, 1117, 1123, 1124, 1151, 1152, 1154, 1155, 1156, 1157, 1161, 1162, 1268, 1270, 1281, 1283, 1286, 1287, 1312, 1645, 1672, 1739, 1886, 1897, 1925, 1939, 1953], "pack": [1, 47, 754, 755, 756, 757, 758, 759, 761, 762, 776, 797, 1236, 1237, 1312, 1390, 1405, 1423, 1468, 1666, 1667, 1668, 1669, 1897, 1907, 1914, 1919, 1926, 1936, 1944], "unpack": [1, 75, 80, 81, 776, 912, 1236, 1268, 1312, 1390, 1669, 1671, 1678, 1692, 1899, 1900, 1919, 1924, 1926], "hook": [1, 16, 17, 18, 20, 26, 44, 47, 66, 504, 764, 773, 915, 929, 930, 1040, 1221, 1390, 1453, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1674, 1677, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1894, 1915, 1923, 1924, 1929, 1941, 1944], "common": [1, 3, 8, 15, 20, 23, 25, 27, 28, 29, 40, 51, 60, 71, 75, 101, 701, 809, 881, 941, 944, 949, 981, 1089, 1094, 1139, 1140, 1141, 1142, 1164, 1243, 1292, 1342, 1371, 1372, 1373, 1376, 1492, 1534, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1759, 1771, 1837, 1878, 1894, 1899, 1904, 1913, 1919, 1922, 1924, 1925, 1926, 1930, 1932, 1935, 1937, 1941, 1953, 1954, 1957, 1960], "trade": [1, 5, 8, 66, 1284, 1370, 1921, 1926, 1945], "leav": [1, 8, 20, 51, 61, 169, 909, 1226, 1238, 1643, 1646, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1831, 1896, 1898, 1899, 1919, 1941, 1945], "especi": [1, 9, 12, 16, 17, 19, 20, 31, 40, 43, 74, 272, 950, 968, 975, 1620, 1898, 1919, 1924, 1925, 1933, 1935, 1944, 1949, 1953], "notic": [1, 23, 25, 43, 705, 1114, 1128, 1315, 1325, 1369, 1505, 1569, 1712, 1713, 1718, 1719, 1725, 1894, 1896, 1919, 1953], "fit": [1, 9, 29, 52, 70, 71, 515, 933, 1218, 1699, 1761, 1937, 1942, 1960], "evalu": [1, 4, 8, 9, 15, 16, 18, 26, 47, 48, 49, 69, 74, 709, 715, 814, 879, 924, 1051, 1157, 1158, 1221, 1361, 1365, 1371, 1372, 1373, 1391, 1408, 1416, 1417, 1418, 1425, 1453, 1467, 1471, 1492, 1595, 1617, 1643, 1699, 1715, 1746, 1899, 1900, 1924, 1930, 1953, 1961], "saved_tensors_hook": [1, 915, 1919], "pack_hook": [1, 1919], "unpack_hook": [1, 1919], "pair": [1, 17, 43, 45, 48, 49, 60, 62, 633, 751, 881, 956, 986, 1128, 1234, 1284, 1322, 1445, 1454, 1459, 1463, 1592, 1708, 1755, 1898, 1899, 1905, 1912, 1919, 1922, 1942, 1949, 1950, 1951, 1958, 1960, 1963], "retriev": [1, 20, 40, 41, 43, 47, 51, 60, 74, 553, 905, 906, 1396, 1400, 1504, 1543, 1633, 1667, 1691, 1815, 1914, 1919, 1929, 1937, 1941, 1942, 1949, 1950, 1951], "everytim": 1, "store": [1, 3, 5, 16, 19, 20, 33, 37, 41, 45, 51, 61, 66, 74, 344, 350, 416, 702, 838, 841, 906, 948, 1007, 1009, 1011, 1166, 1221, 1228, 1231, 1251, 1262, 1263, 1264, 1293, 1298, 1310, 1372, 1396, 1453, 1481, 1633, 1640, 1642, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1666, 1687, 1820, 1893, 1894, 1896, 1913, 1914, 1915, 1923, 1924, 1925, 1926, 1929, 1941, 1944, 1949, 1950, 1951, 1953, 1955, 1958, 1959, 1963], "content": [1, 3, 7, 23, 29, 45, 53, 74, 915, 1228, 1231, 1251, 1262, 1264, 1269, 1282, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1831, 1860, 1893, 1899, 1908, 1911, 1919, 1932, 1949, 1957, 1958, 1959], "equal": [1, 28, 41, 43, 49, 60, 61, 62, 74, 278, 515, 561, 633, 696, 710, 711, 712, 755, 756, 757, 758, 759, 776, 784, 785, 836, 837, 838, 841, 877, 892, 937, 944, 946, 957, 958, 976, 986, 1009, 1011, 1064, 1083, 1099, 1138, 1152, 1153, 1165, 1178, 1179, 1181, 1182, 1183, 1206, 1210, 1245, 1266, 1279, 1283, 1286, 1287, 1310, 1311, 1322, 1338, 1354, 1358, 1359, 1360, 1362, 1363, 1364, 1369, 1370, 1376, 1382, 1383, 1385, 1386, 1390, 1397, 1400, 1401, 1402, 1405, 1407, 1423, 1458, 1459, 1467, 1468, 1504, 1520, 1521, 1525, 1528, 1531, 1543, 1544, 1547, 1548, 1554, 1633, 1667, 1670, 1727, 1740, 1797, 1798, 1803, 1828, 1836, 1855, 1871, 1876, 1889, 1897, 1900, 1906, 1912, 1913, 1914, 1919, 1920, 1927, 1933, 1939, 1940, 1942, 1954, 1958, 1960], "term": [1, 8, 9, 15, 49, 60, 74, 574, 750, 779, 808, 958, 1110, 1111, 1112, 1113, 1114, 1115, 1117, 1125, 1126, 1127, 1130, 1142, 1252, 1361, 1369, 1407, 1414, 1423, 1424, 1458, 1467, 1484, 1549, 1561, 1595, 1606, 1633, 1640, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1759, 1804, 1894, 1899, 1918, 1919, 1924, 1925, 1926, 1927, 1932, 1937, 1941, 1944, 1950, 1953], "mulbackward0": [1, 918, 921, 922], "inplac": [1, 28, 69, 71, 74, 75, 82, 83, 771, 774, 792, 794, 796, 807, 813, 830, 854, 855, 856, 873, 874, 879, 913, 1151, 1221, 1365, 1375, 1391, 1392, 1393, 1394, 1395, 1398, 1410, 1411, 1412, 1439, 1452, 1453, 1471, 1472, 1473, 1480, 1482, 1495, 1518, 1526, 1537, 1538, 1539, 1540, 1541, 1545, 1556, 1557, 1558, 1567, 1582, 1597, 1598, 1600, 1603, 1605, 1615, 1627, 1875, 1895, 1897, 1906, 1919, 1924, 1937, 1963], "lead": [1, 5, 7, 12, 18, 39, 43, 50, 66, 72, 74, 913, 917, 919, 923, 925, 970, 1145, 1162, 1251, 1423, 1468, 1484, 1831, 1886, 1899, 1913, 1914, 1919, 1921, 1923, 1924, 1925, 1932, 1933, 1936, 1940, 1941, 1944, 1953, 1958, 1959], "undefin": [1, 43, 50, 53, 66, 337, 488, 633, 894, 916, 924, 925, 944, 952, 1097, 1146, 1147, 1369, 1689, 1733, 1919, 1922, 1924, 1925], "recurs": [1, 14, 18, 20, 49, 66, 74, 970, 973, 1086, 1221, 1232, 1234, 1453, 1713, 1898, 1924, 1930, 1941, 1949], "inner": [1, 3, 66, 67, 72, 831, 833, 917, 1077, 1152, 1156, 1161, 1861, 1897, 1939, 1949, 1963], "save_on_cpu": 1, "pin_memori": [1, 40, 75, 80, 83, 462, 463, 464, 465, 466, 1095, 1097, 1748, 1752, 1754, 1854, 1895, 1896, 1897, 1914, 1922, 1939, 1955], "within": [1, 5, 9, 15, 17, 19, 28, 29, 40, 41, 43, 47, 48, 49, 60, 61, 62, 66, 73, 74, 107, 894, 924, 925, 968, 1001, 1077, 1221, 1225, 1313, 1366, 1367, 1368, 1376, 1392, 1393, 1394, 1398, 1400, 1446, 1447, 1448, 1453, 1459, 1492, 1504, 1552, 1576, 1577, 1578, 1633, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1744, 1745, 1775, 1797, 1874, 1878, 1896, 1898, 1899, 1909, 1914, 1917, 1921, 1922, 1924, 1928, 1929, 1930, 1933, 1937, 1940, 1941, 1944, 1947, 1948, 1949, 1950, 1958], "move": [1, 5, 7, 8, 9, 18, 20, 29, 33, 43, 45, 66, 74, 540, 605, 837, 1114, 1221, 1228, 1287, 1292, 1328, 1371, 1372, 1373, 1426, 1427, 1428, 1453, 1492, 1590, 1635, 1636, 1707, 1898, 1907, 1908, 1911, 1913, 1922, 1925, 1926, 1930, 1931, 1932, 1935, 1940, 1941, 1942, 1949, 1955, 1960], "copi": [1, 7, 16, 19, 28, 31, 40, 41, 43, 45, 51, 58, 66, 70, 71, 74, 209, 215, 225, 228, 333, 420, 465, 475, 480, 488, 509, 515, 596, 597, 598, 599, 619, 633, 808, 830, 854, 855, 895, 896, 911, 957, 965, 968, 1007, 1008, 1133, 1134, 1135, 1136, 1138, 1151, 1221, 1232, 1292, 1293, 1353, 1390, 1400, 1453, 1463, 1504, 1633, 1666, 1756, 1762, 1768, 1854, 1863, 1869, 1896, 1897, 1911, 1914, 1919, 1920, 1922, 1924, 1932, 1939, 1941, 1942, 1943, 1944, 1949, 1953, 1955, 1956, 1957, 1959, 1963], "pin": [1, 228, 355, 462, 463, 464, 465, 466, 480, 596, 619, 1095, 1097, 1221, 1453, 1666, 1748, 1752, 1754, 1854, 1894, 1914, 1955], "asynchron": [1, 3, 4, 25, 73, 215, 228, 596, 619, 1020, 1221, 1224, 1239, 1453, 1894, 1900, 1921, 1923, 1949, 1955, 1958], "prod_1": 1, "prod_2": 1, "del": [1, 1900, 1911, 1924, 1926], "illustr": [1, 12, 20, 22, 1899, 1918, 1924, 1953], "aliv": [1, 40, 51, 60, 998, 1919, 1922, 1926, 1932, 1949, 1950, 1951], "live": [1, 12, 16, 47, 1037, 1040, 1221, 1453, 1896, 1922, 1926, 1949, 1951], "releas": [1, 7, 29, 39, 43, 60, 62, 70, 74, 529, 703, 958, 959, 994, 995, 996, 1002, 1019, 1029, 1030, 1033, 1037, 1038, 1040, 1051, 1167, 1221, 1251, 1262, 1264, 1265, 1266, 1269, 1282, 1310, 1311, 1331, 1393, 1423, 1453, 1468, 1576, 1577, 1578, 1680, 1739, 1755, 1771, 1836, 1840, 1863, 1893, 1894, 1898, 1909, 1911, 1919, 1921, 1922, 1928, 1933, 1934, 1935, 1936, 1937, 1944, 1949, 1959, 1960], "delet": [1, 28, 43, 74, 910, 995, 1003, 1893, 1907, 1911, 1919, 1939, 1948, 1949, 1951], "disable_saved_tensors_hook": 1, "error_messag": 1, "featur": [1, 5, 8, 9, 18, 19, 21, 31, 34, 37, 43, 45, 47, 61, 64, 66, 67, 73, 75, 696, 705, 776, 784, 785, 917, 919, 923, 1068, 1232, 1315, 1325, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1371, 1386, 1391, 1392, 1393, 1394, 1398, 1401, 1402, 1405, 1406, 1416, 1423, 1424, 1459, 1468, 1470, 1487, 1496, 1498, 1500, 1501, 1502, 1503, 1520, 1521, 1538, 1539, 1540, 1545, 1547, 1548, 1569, 1633, 1729, 1875, 1894, 1896, 1898, 1899, 1900, 1903, 1905, 1913, 1914, 1919, 1924, 1926, 1927, 1934, 1937, 1938, 1943, 1944, 1949, 1953, 1958], "messag": [1, 2, 5, 29, 37, 43, 53, 62, 71, 74, 75, 76, 98, 99, 640, 696, 1054, 1056, 1250, 1251, 1690, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1893, 1896, 1897, 1899, 1900, 1905, 1926, 1937, 1942, 1943, 1949, 1951, 1960], "get": [1, 8, 12, 15, 16, 20, 21, 22, 26, 27, 29, 33, 40, 43, 44, 45, 60, 61, 62, 63, 66, 71, 73, 74, 107, 169, 353, 702, 750, 804, 805, 877, 878, 909, 912, 952, 1022, 1023, 1024, 1041, 1081, 1151, 1154, 1155, 1156, 1168, 1196, 1236, 1288, 1396, 1397, 1421, 1422, 1449, 1450, 1451, 1463, 1480, 1633, 1634, 1641, 1667, 1674, 1760, 1775, 1878, 1893, 1894, 1896, 1899, 1909, 1911, 1912, 1919, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1931, 1935, 1939, 1941, 1944, 1949, 1951, 1953, 1957, 1958, 1959, 1964], "register_multi_grad_hook": [1, 1919], "fn": [1, 13, 18, 19, 20, 21, 25, 28, 29, 51, 52, 53, 57, 62, 66, 74, 929, 930, 970, 971, 973, 1152, 1158, 1162, 1221, 1222, 1233, 1238, 1453, 1886, 1896, 1898, 1899, 1903, 1911, 1919, 1929, 1949], "multi": [1, 4, 48, 51, 60, 776, 998, 1041, 1061, 1094, 1114, 1183, 1221, 1370, 1390, 1405, 1423, 1453, 1456, 1457, 1458, 1459, 1468, 1496, 1498, 1505, 1525, 1633, 1894, 1896, 1899, 1919, 1921, 1922, 1930, 1934, 1940, 1949, 1953, 1956, 1959, 1961], "specifi": [1, 2, 3, 5, 8, 13, 15, 28, 33, 40, 41, 43, 47, 48, 49, 51, 53, 58, 59, 60, 61, 66, 74, 116, 169, 214, 277, 337, 349, 488, 498, 509, 513, 515, 516, 529, 531, 533, 553, 561, 562, 576, 596, 599, 600, 601, 603, 604, 619, 696, 751, 757, 758, 759, 784, 785, 809, 810, 811, 815, 830, 839, 842, 856, 870, 874, 875, 877, 894, 896, 908, 909, 923, 939, 962, 968, 985, 986, 994, 997, 998, 1007, 1008, 1009, 1011, 1026, 1029, 1040, 1065, 1075, 1076, 1077, 1081, 1082, 1084, 1094, 1097, 1108, 1111, 1113, 1114, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1125, 1126, 1127, 1129, 1131, 1152, 1153, 1156, 1162, 1163, 1174, 1182, 1183, 1221, 1225, 1236, 1237, 1263, 1273, 1275, 1277, 1278, 1287, 1290, 1292, 1293, 1303, 1320, 1322, 1328, 1347, 1348, 1351, 1367, 1368, 1369, 1370, 1376, 1385, 1387, 1389, 1390, 1396, 1397, 1400, 1407, 1413, 1414, 1419, 1420, 1423, 1444, 1445, 1450, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1484, 1485, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1520, 1521, 1524, 1525, 1535, 1536, 1543, 1544, 1549, 1552, 1564, 1571, 1587, 1588, 1595, 1602, 1608, 1609, 1633, 1638, 1640, 1641, 1644, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1677, 1680, 1687, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1704, 1706, 1707, 1708, 1709, 1710, 1715, 1720, 1721, 1729, 1737, 1746, 1762, 1767, 1768, 1771, 1788, 1816, 1818, 1819, 1820, 1822, 1823, 1824, 1825, 1826, 1827, 1831, 1834, 1835, 1839, 1855, 1857, 1861, 1871, 1872, 1873, 1874, 1878, 1880, 1881, 1882, 1886, 1893, 1896, 1898, 1899, 1903, 1905, 1906, 1908, 1909, 1912, 1913, 1919, 1922, 1924, 1928, 1930, 1932, 1936, 1937, 1940, 1941, 1942, 1943, 1944, 1948, 1949, 1953, 1954, 1955, 1956, 1958, 1960], "ignor": [1, 5, 7, 12, 23, 28, 43, 47, 52, 58, 66, 74, 169, 515, 560, 702, 705, 706, 707, 751, 810, 811, 874, 877, 878, 890, 909, 923, 924, 925, 936, 958, 986, 989, 993, 1041, 1042, 1061, 1062, 1115, 1117, 1125, 1126, 1127, 1166, 1181, 1221, 1232, 1238, 1241, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1312, 1348, 1349, 1350, 1366, 1367, 1368, 1369, 1370, 1387, 1389, 1397, 1405, 1407, 1413, 1419, 1420, 1423, 1444, 1445, 1446, 1447, 1448, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1468, 1484, 1485, 1496, 1501, 1524, 1525, 1535, 1544, 1564, 1587, 1595, 1633, 1680, 1692, 1715, 1723, 1727, 1788, 1818, 1819, 1836, 1840, 1863, 1896, 1899, 1900, 1906, 1913, 1919, 1922, 1924, 1937, 1953, 1960], "rel": [1, 8, 9, 20, 33, 41, 43, 49, 66, 74, 504, 710, 892, 924, 925, 929, 930, 986, 1210, 1275, 1278, 1501, 1502, 1517, 1552, 1692, 1696, 1697, 1723, 1906, 1909, 1921, 1922, 1929, 1937, 1941, 1960], "allow_mutation_on_saved_tensor": 1, "mutat": [1, 16, 17, 27, 74, 75, 82, 83, 813, 854, 855, 873, 874, 968, 1151, 1225, 1941, 1959], "_allowmutationonsavedcontext": 1, "purpos": [1, 13, 19, 20, 22, 29, 41, 43, 74, 102, 488, 515, 776, 924, 1230, 1315, 1376, 1405, 1459, 1627, 1628, 1629, 1630, 1788, 1909, 1914, 1919, 1924, 1941, 1950], "clear": [1, 2, 8, 9, 62, 74, 975, 1221, 1453, 1454, 1463, 1691, 1893, 1919, 1922, 1930, 1935, 1939, 1940], "upon": [1, 2, 40, 44, 51, 53, 74, 968, 1633, 1642, 1645, 1911, 1919, 1922, 1937, 1944, 1951], "sin_": [1, 1897, 1912], "8415": [1, 1953], "sinbackward0": 1, "variou": [2, 5, 16, 33, 40, 43, 74, 1293, 1876, 1878, 1903, 1906, 1911, 1914, 1924, 1930, 1932, 1940, 1944, 1946, 1953, 1964], "get_cpu_cap": 2, "capabl": [2, 8, 33, 34, 43, 1022, 1746, 1903, 1922, 1928, 1929, 1931, 1961], "string": [2, 3, 5, 13, 17, 20, 29, 32, 33, 40, 43, 51, 57, 58, 60, 74, 619, 830, 870, 974, 1020, 1037, 1038, 1094, 1151, 1221, 1228, 1231, 1292, 1381, 1382, 1383, 1453, 1454, 1463, 1496, 1498, 1500, 1527, 1528, 1529, 1656, 1687, 1739, 1771, 1779, 1781, 1877, 1878, 1893, 1897, 1898, 1899, 1900, 1913, 1919, 1924, 1929, 1930, 1935, 1937, 1941, 1943, 1949, 1955, 1956, 1958, 1963, 1964], "vsx": 2, "z": [2, 3, 10, 12, 15, 28, 29, 49, 66, 71, 75, 78, 82, 83, 633, 836, 893, 915, 959, 960, 976, 1094, 1098, 1322, 1406, 1552, 1645, 1678, 1679, 1687, 1733, 1763, 1764, 1896, 1897, 1898, 1913, 1919, 1921, 1922, 1927, 1928, 1937, 1941, 1947, 1949, 1951], "vector": [2, 19, 31, 41, 49, 66, 67, 71, 272, 331, 333, 339, 705, 706, 707, 900, 909, 911, 917, 918, 919, 920, 921, 922, 923, 949, 950, 956, 967, 982, 986, 994, 1075, 1076, 1081, 1083, 1157, 1161, 1162, 1166, 1253, 1260, 1268, 1276, 1277, 1281, 1284, 1288, 1289, 1290, 1310, 1315, 1322, 1343, 1345, 1371, 1372, 1373, 1376, 1390, 1396, 1397, 1400, 1408, 1416, 1417, 1418, 1462, 1492, 1501, 1504, 1543, 1544, 1552, 1554, 1588, 1592, 1620, 1637, 1639, 1641, 1645, 1676, 1680, 1728, 1729, 1820, 1840, 1880, 1883, 1886, 1919, 1927, 1944, 1953, 1958], "NO": [2, 100, 102], "avx": [2, 11], "avx2": [2, 11, 1944], "avx512": [2, 11], "is_built": [2, 1931], "built": [2, 3, 7, 8, 13, 14, 20, 29, 33, 41, 43, 48, 53, 69, 74, 969, 1020, 1230, 1502, 1715, 1894, 1914, 1919, 1921, 1922, 1924, 1928, 1930, 1931, 1932, 1946, 1964], "necessarili": [2, 41, 43, 49, 51, 60, 99, 488, 924, 1257, 1279, 1290, 1321, 1389, 1460, 1922, 1924], "machin": [2, 11, 43, 51, 60, 66, 67, 72, 1225, 1230, 1266, 1489, 1928, 1929, 1930, 1931, 1932, 1934, 1937, 1938, 1941, 1948, 1949, 1950], "driver": [2, 25, 29, 1166, 1266, 1284, 1285, 1330, 1897, 1922, 1933, 1949], "would": [2, 3, 5, 8, 9, 12, 13, 15, 16, 17, 19, 22, 23, 28, 29, 31, 33, 40, 43, 49, 51, 53, 60, 61, 66, 68, 71, 74, 169, 462, 463, 464, 465, 466, 714, 776, 810, 870, 909, 913, 923, 958, 1095, 1097, 1115, 1155, 1156, 1219, 1221, 1222, 1226, 1228, 1236, 1237, 1334, 1335, 1366, 1367, 1368, 1369, 1370, 1405, 1419, 1423, 1446, 1447, 1448, 1453, 1463, 1468, 1552, 1563, 1624, 1633, 1634, 1666, 1678, 1710, 1748, 1752, 1754, 1765, 1775, 1854, 1855, 1860, 1896, 1898, 1899, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1927, 1932, 1935, 1937, 1940, 1941, 1942, 1944, 1949, 1950, 1951, 1953], "allow_tf32": [2, 1783, 1897, 1922, 1933], "tensorfloat": 2, "core": [2, 3, 7, 8, 15, 20, 21, 24, 70, 968, 990, 1051, 1689, 1899, 1903, 1921, 1922, 1923, 1932, 1933, 1941, 1961], "amper": [2, 21, 1953], "newer": [2, 19, 33, 1057, 1674, 1921, 1922, 1935, 1938, 1940, 1941, 1945], "tf32": 2, "allow_fp16_reduced_precision_reduct": [2, 1922, 1933], "precis": [2, 3, 8, 24, 31, 33, 41, 49, 66, 702, 705, 924, 925, 936, 948, 1040, 1137, 1170, 1266, 1284, 1290, 1315, 1325, 1366, 1367, 1368, 1370, 1381, 1382, 1383, 1384, 1385, 1386, 1406, 1424, 1440, 1446, 1447, 1448, 1505, 1563, 1602, 1633, 1768, 1783, 1788, 1894, 1899, 1909, 1915, 1919, 1930, 1941, 1944, 1945, 1947, 1954, 1956, 1958, 1959, 1965], "gemm": [2, 17, 1921, 1937], "allow_bf16_reduced_precision_reduct": [2, 1922, 1933], "cufft_plan_cach": [2, 1922], "cufft": 2, "queri": [2, 15, 16, 20, 43, 60, 74, 751, 997, 998, 1000, 1006, 1053, 1057, 1071, 1072, 1221, 1453, 1459, 1602, 1644, 1897, 1922, 1941], "specif": [2, 3, 7, 8, 9, 11, 15, 16, 18, 19, 20, 24, 28, 29, 33, 43, 45, 47, 49, 51, 58, 60, 62, 66, 71, 74, 75, 101, 107, 529, 870, 877, 933, 1000, 1085, 1114, 1183, 1218, 1225, 1230, 1234, 1236, 1237, 1321, 1400, 1425, 1602, 1627, 1628, 1647, 1688, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1778, 1817, 1876, 1893, 1896, 1898, 1899, 1901, 1903, 1905, 1909, 1913, 1915, 1919, 1922, 1924, 1928, 1932, 1934, 1937, 1940, 1941, 1943, 1944, 1945, 1947, 1949, 1951, 1958, 1959], "via": [2, 7, 13, 15, 16, 17, 20, 23, 27, 33, 34, 40, 43, 45, 49, 58, 66, 70, 74, 533, 633, 924, 925, 955, 995, 1031, 1051, 1098, 1154, 1293, 1371, 1372, 1373, 1390, 1408, 1416, 1417, 1418, 1425, 1492, 1640, 1674, 1677, 1721, 1896, 1898, 1899, 1909, 1911, 1914, 1917, 1919, 1922, 1924, 1925, 1926, 1928, 1930, 1932, 1933, 1937, 1941, 1944, 1949, 1950, 1953, 1956, 1957, 1964], "readonli": 2, "show": [2, 4, 7, 21, 22, 24, 25, 29, 32, 37, 40, 41, 43, 45, 50, 66, 74, 917, 923, 968, 1145, 1221, 1322, 1453, 1624, 1691, 1893, 1894, 1899, 1912, 1921, 1922, 1923, 1927, 1928, 1930, 1937, 1940, 1941, 1949, 1951], "max_siz": [2, 59, 61, 1922], "capac": [2, 1064, 1922, 1932], "preferred_linalg_librari": 2, "subject": [2, 3, 15, 21, 24, 31, 37, 43, 47, 48, 66, 73, 74, 881, 1602, 1633, 1899, 1912, 1913, 1919, 1924, 1937, 1938, 1942, 1943, 1944, 1945, 1949, 1953, 1956, 1961, 1962, 1963], "algebra": [2, 9, 1094, 1278, 1894, 1904], "cusolv": [2, 1284, 1285, 1840], "magma": [2, 960, 1266, 1310, 1739, 1840, 1936, 1953], "decid": [2, 4, 7, 16, 17, 18, 22, 43, 60, 70, 1656, 1906, 1937, 1953], "heurist": [2, 17, 22, 29, 33, 40, 60, 61, 74, 1094], "overrid": [2, 28, 33, 41, 43, 44, 49, 53, 61, 66, 71, 74, 808, 809, 870, 906, 908, 1037, 1369, 1370, 1387, 1389, 1413, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1524, 1525, 1535, 1564, 1587, 1595, 1647, 1710, 1771, 1788, 1894, 1899, 1903, 1935, 1940, 1941, 1944, 1949, 1953, 1958, 1963], "wherev": [2, 9, 20, 1912], "pick": [2, 14, 15, 22, 43, 59, 61, 529, 968, 1919, 1949], "prefer": [2, 9, 40, 45, 51, 66, 878, 894, 919, 1219, 1261, 1274, 1278, 1286, 1293, 1460, 1602, 1775, 1836, 1854, 1896, 1919, 1922, 1941, 1953], "achiev": [2, 29, 40, 41, 43, 49, 61, 66, 1094, 1158, 1221, 1370, 1376, 1453, 1459, 1460, 1525, 1554, 1633, 1910, 1922, 1929, 1932, 1941, 1949, 1951], "better": [2, 3, 7, 8, 9, 13, 14, 17, 20, 24, 29, 33, 40, 43, 51, 70, 968, 1063, 1150, 1154, 1155, 1196, 1208, 1236, 1389, 1486, 1608, 1633, 1721, 1746, 1899, 1918, 1919, 1921, 1922, 1927, 1936, 1937, 1940, 1943, 1944, 1945, 1953, 1958, 1963], "select": [2, 5, 20, 24, 34, 38, 40, 43, 49, 51, 331, 333, 335, 339, 776, 958, 988, 989, 992, 1001, 1002, 1006, 1013, 1014, 1015, 1016, 1018, 1039, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1063, 1064, 1067, 1069, 1071, 1072, 1114, 1293, 1322, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1405, 1423, 1468, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1661, 1662, 1778, 1851, 1878, 1889, 1895, 1896, 1897, 1899, 1911, 1912, 1913, 1914, 1919, 1921, 1922, 1927, 1934, 1939, 1944, 1953, 1957, 1960], "incorrect": [2, 4, 5, 66, 74, 99, 100, 102, 272, 529, 572, 915, 924, 950, 1236, 1279, 1292, 1459, 1497, 1498, 1499, 1500, 1620, 1680, 1836, 1896, 1899, 1922, 1933, 1937], "linalg": [2, 424, 958, 959, 960, 961, 994, 1080, 1166, 1199, 1301, 1310, 1311, 1312, 1316, 1317, 1640, 1641, 1645, 1680, 1726, 1731, 1733, 1739, 1810, 1840, 1841, 1863, 1883, 1894], "inv": [2, 49, 960, 1199, 1252, 1256, 1262, 1278, 1282, 1286], "inv_ex": 2, "cholesky_ex": [2, 1250], "lu_factor": [2, 1269, 1270, 1310, 1311, 1312], "lu": [2, 10, 1262, 1268, 1269, 1270, 1311, 1312, 1897], "eigh": [2, 1250, 1256, 1259, 1278, 1284, 1933], "eighval": 2, "svdval": [2, 1252, 1266, 1275, 1284, 1840, 1933], "_linalgbackend": 2, "sdpbackend": 2, "enum": [2, 20, 43, 75, 812, 1924, 1937, 1944, 1949], "scale": [2, 7, 17, 40, 49, 51, 59, 61, 116, 490, 492, 633, 701, 705, 706, 707, 754, 755, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 775, 786, 788, 789, 790, 791, 793, 796, 797, 811, 815, 818, 835, 836, 837, 838, 841, 936, 1108, 1109, 1112, 1130, 1161, 1162, 1307, 1365, 1391, 1396, 1397, 1398, 1414, 1425, 1480, 1505, 1506, 1507, 1543, 1544, 1545, 1561, 1563, 1602, 1603, 1608, 1694, 1715, 1741, 1742, 1743, 1744, 1745, 1818, 1819, 1837, 1886, 1894, 1897, 1913, 1917, 1922, 1926, 1930, 1944, 1945, 1947, 1954], "product": [2, 21, 34, 43, 49, 60, 169, 702, 705, 706, 707, 776, 909, 911, 918, 920, 921, 922, 923, 936, 948, 954, 958, 982, 994, 1006, 1053, 1057, 1071, 1072, 1075, 1091, 1094, 1157, 1161, 1162, 1198, 1241, 1253, 1260, 1286, 1287, 1289, 1315, 1322, 1325, 1345, 1405, 1406, 1423, 1424, 1551, 1602, 1640, 1727, 1728, 1737, 1856, 1871, 1883, 1886, 1894, 1896, 1912, 1919, 1927, 1929, 1933, 1941, 1953], "attent": [2, 7, 48, 751, 1370, 1459, 1496, 1498, 1500, 1525, 1602, 1894, 1936, 1957], "stai": [2, 7, 47, 158, 1390, 1922, 1932, 1944, 1949, 1953], "align": [2, 9, 41, 776, 795, 801, 836, 842, 968, 1094, 1174, 1276, 1368, 1376, 1389, 1405, 1419, 1423, 1447, 1448, 1468, 1505, 1535, 1536, 1563, 1564, 1621, 1640, 1680, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1713, 1861, 1894, 1912, 1919, 1927, 1937, 1947, 1954], "src": [2, 3, 43, 74, 215, 247, 331, 339, 488, 528, 529, 530, 531, 532, 533, 535, 554, 1085, 1151, 1343, 1496, 1499, 1500, 1689, 1772, 1773, 1774, 1778, 1809, 1850, 1875, 1895, 1897, 1941], "transform": [2, 3, 19, 20, 21, 40, 45, 48, 66, 71, 797, 813, 854, 855, 873, 874, 959, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1150, 1151, 1152, 1156, 1161, 1218, 1230, 1374, 1408, 1416, 1417, 1418, 1425, 1440, 1481, 1497, 1498, 1499, 1500, 1517, 1523, 1552, 1569, 1588, 1624, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1804, 1836, 1894, 1925, 1942, 1944, 1953, 1958, 1963], "sdp_utils_cpp": 2, "h": [2, 4, 10, 15, 24, 33, 49, 504, 757, 758, 759, 776, 1250, 1257, 1260, 1270, 1284, 1359, 1360, 1367, 1368, 1370, 1372, 1373, 1377, 1382, 1383, 1385, 1393, 1394, 1396, 1398, 1405, 1406, 1417, 1418, 1423, 1424, 1425, 1436, 1437, 1447, 1448, 1465, 1466, 1468, 1470, 1487, 1503, 1506, 1507, 1517, 1525, 1552, 1587, 1593, 1594, 1640, 1641, 1674, 1689, 1840, 1897, 1912, 1913, 1919, 1922, 1923, 1924, 1926, 1927, 1937, 1957, 1958, 1959], "flash_sdp_en": 2, "flash": 2, "enable_mem_efficient_sdp": [2, 1602], "mem_efficient_sdp_en": 2, "enable_flash_sdp": [2, 1602], "math_sdp_en": 2, "math": [2, 29, 40, 74, 1104, 1270, 1272, 1564, 1602, 1729, 1746, 1841, 1894, 1896, 1898, 1899, 1933, 1953, 1954, 1960], "enable_math_sdp": [2, 1602], "sdp_kernel": [2, 1602], "enable_flash": 2, "enable_math": [2, 1602], "enable_mem_effici": 2, "temporarili": [2, 22, 51, 1779, 1919, 1937, 1943], "previou": [2, 17, 37, 43, 60, 66, 74, 572, 776, 968, 1029, 1139, 1174, 1231, 1291, 1307, 1405, 1423, 1468, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1691, 1746, 1836, 1907, 1919, 1922, 1924, 1930, 1936, 1944, 1951], "restor": [2, 5, 14, 47, 74, 107, 975, 1139, 1291, 1307, 1677, 1766, 1788, 1930, 1935], "is_avail": [2, 36, 43, 1878, 1894, 1922, 1928, 1931, 1935, 1943], "determinist": [2, 3, 5, 39, 43, 49, 74, 99, 107, 529, 889, 1169, 1202, 1224, 1236, 1237, 1318, 1321, 1323, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1423, 1468, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1776, 1782, 1875, 1897, 1919, 1934, 1940, 1948], "algorithm": [2, 3, 7, 31, 38, 41, 44, 47, 49, 51, 66, 107, 776, 795, 801, 958, 1218, 1261, 1268, 1274, 1278, 1284, 1293, 1310, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1403, 1405, 1423, 1468, 1504, 1505, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1552, 1563, 1602, 1621, 1633, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1710, 1729, 1768, 1783, 1840, 1841, 1875, 1894, 1919, 1922, 1933, 1949, 1953], "are_deterministic_algorithms_en": 2, "use_deterministic_algorithm": [2, 515, 889, 1095, 1096, 1097, 1202, 1782, 1934], "benchmark": [2, 12, 17, 21, 22, 24, 1894, 1897, 1922, 1928], "fastest": [2, 893, 1633, 1679, 1696, 1697, 1927, 1934, 1940], "benchmark_limit": 2, "maximum": [2, 15, 49, 60, 61, 515, 711, 713, 787, 811, 836, 837, 838, 841, 842, 890, 1008, 1043, 1045, 1051, 1058, 1059, 1073, 1074, 1095, 1096, 1097, 1140, 1156, 1181, 1182, 1183, 1293, 1318, 1338, 1412, 1543, 1544, 1638, 1713, 1721, 1746, 1760, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1875, 1877, 1895, 1897, 1905, 1917, 1918, 1922, 1932, 1939, 1947, 1960], "try": [2, 3, 4, 7, 8, 13, 15, 16, 17, 19, 29, 43, 45, 52, 53, 57, 60, 66, 70, 71, 97, 98, 968, 1064, 1147, 1156, 1162, 1226, 1227, 1236, 1338, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1497, 1499, 1505, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1886, 1893, 1896, 1899, 1900, 1919, 1922, 1924, 1926, 1927, 1932, 1937, 1940, 1941, 1944, 1945, 1949, 1953], "dispatch": [2, 17, 18, 43, 66, 74, 99, 100, 102, 1226, 1334, 1335, 1876, 1878, 1899, 1903, 1922, 1924, 1937, 1964], "v8": 2, "verbos": [2, 17, 29, 33, 43, 74, 696, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1893, 1905, 1913, 1937, 1938, 1958], "On": [2, 12, 15, 16, 33, 39, 40, 43, 44, 49, 61, 66, 71, 74, 702, 705, 936, 948, 1268, 1315, 1325, 1381, 1382, 1383, 1384, 1385, 1386, 1406, 1421, 1422, 1423, 1424, 1440, 1463, 1468, 1481, 1633, 1696, 1697, 1706, 1709, 1894, 1896, 1906, 1919, 1921, 1922, 1924, 1933, 1941, 1949, 1950, 1951, 1953], "demand": [2, 40, 1031, 1898, 1929, 1932, 1949], "onemkl": 2, "easier": [2, 7, 17, 29, 40, 74, 1896, 1898, 1914, 1919, 1920, 1924, 1925, 1953], "dump": [2, 17, 20, 29, 74, 995, 1923, 1936], "durat": [2, 17, 29, 43, 57, 60, 1334, 1335, 1909, 1937, 1943], "kernel": [2, 3, 4, 12, 16, 17, 18, 19, 22, 25, 29, 31, 33, 37, 43, 66, 73, 755, 756, 757, 758, 759, 788, 789, 790, 968, 993, 998, 1000, 1001, 1037, 1038, 1070, 1072, 1340, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1401, 1402, 1421, 1422, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451, 1504, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1602, 1643, 1876, 1878, 1896, 1903, 1907, 1914, 1922, 1924, 1925, 1931, 1933, 1937, 1940, 1943, 1945, 1953], "environ": [2, 3, 7, 11, 13, 17, 22, 29, 33, 34, 37, 39, 41, 49, 51, 53, 58, 63, 74, 696, 1230, 1236, 1423, 1468, 1875, 1893, 1896, 1905, 1919, 1921, 1923, 1928, 1933, 1934, 1936, 1942, 1949], "variabl": [2, 3, 5, 15, 17, 19, 22, 29, 33, 37, 39, 41, 49, 51, 53, 58, 63, 66, 71, 74, 75, 78, 82, 83, 465, 696, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 744, 745, 746, 747, 748, 750, 754, 755, 756, 757, 758, 759, 761, 762, 772, 776, 780, 815, 913, 982, 986, 1063, 1095, 1162, 1234, 1236, 1293, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1396, 1397, 1405, 1406, 1423, 1424, 1425, 1438, 1440, 1453, 1456, 1461, 1468, 1470, 1633, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1684, 1692, 1694, 1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1748, 1750, 1752, 1875, 1886, 1891, 1893, 1894, 1905, 1906, 1913, 1914, 1919, 1921, 1923, 1926, 1927, 1933, 1934, 1936, 1937, 1940, 1944, 1949, 1955, 1958], "mkl_verbos": 2, "methodologi": 2, "larg": [2, 3, 7, 8, 12, 17, 25, 29, 40, 43, 74, 696, 874, 984, 986, 1051, 1266, 1284, 1361, 1400, 1504, 1546, 1633, 1721, 1808, 1820, 1894, 1911, 1913, 1914, 1921, 1922, 1926, 1930, 1933, 1935, 1937, 1941, 1942, 1945, 1949, 1953, 1956, 1959], "moreov": [2, 66, 529, 1633, 1709], "investig": [2, 7, 25, 43, 71], "singl": [2, 3, 5, 11, 12, 15, 16, 17, 19, 20, 21, 26, 28, 29, 33, 41, 43, 45, 47, 48, 49, 51, 53, 59, 60, 66, 67, 69, 70, 71, 72, 73, 74, 75, 82, 83, 272, 696, 711, 712, 782, 783, 784, 785, 788, 789, 790, 830, 910, 917, 918, 919, 920, 921, 922, 923, 937, 946, 950, 968, 982, 986, 1037, 1040, 1150, 1152, 1153, 1156, 1158, 1162, 1178, 1179, 1183, 1206, 1220, 1221, 1236, 1237, 1240, 1298, 1322, 1334, 1335, 1359, 1360, 1363, 1364, 1367, 1368, 1370, 1381, 1382, 1383, 1385, 1386, 1389, 1390, 1401, 1402, 1408, 1421, 1422, 1425, 1447, 1448, 1453, 1461, 1465, 1466, 1481, 1492, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1549, 1576, 1577, 1578, 1620, 1626, 1628, 1631, 1632, 1633, 1637, 1638, 1639, 1675, 1676, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1715, 1736, 1762, 1828, 1834, 1835, 1872, 1873, 1875, 1881, 1882, 1886, 1894, 1896, 1898, 1899, 1906, 1907, 1911, 1913, 1914, 1919, 1921, 1922, 1924, 1925, 1927, 1930, 1932, 1933, 1934, 1935, 1937, 1940, 1941, 1942, 1943, 1944, 1950, 1951, 1953, 1956, 1959, 1960, 1963], "enough": [2, 8, 18, 41, 74, 1232, 1343, 1502, 1822, 1823, 1824, 1825, 1826, 1827, 1875, 1898, 1911, 1914, 1924, 1927, 1940, 1941, 1956, 1964], "scope": [2, 7, 16, 28, 62, 74, 1147, 1492, 1656, 1896, 1898, 1899, 1922, 1926, 1937, 1941, 1951], "second": [2, 5, 12, 20, 33, 37, 43, 47, 51, 53, 60, 62, 72, 74, 702, 705, 707, 710, 776, 810, 890, 891, 892, 900, 908, 924, 925, 936, 940, 941, 943, 944, 945, 948, 994, 1006, 1053, 1057, 1071, 1072, 1082, 1084, 1085, 1091, 1099, 1140, 1141, 1152, 1155, 1156, 1157, 1161, 1162, 1164, 1165, 1174, 1177, 1185, 1186, 1187, 1198, 1210, 1243, 1245, 1253, 1289, 1292, 1298, 1299, 1309, 1315, 1319, 1321, 1322, 1324, 1325, 1349, 1354, 1357, 1361, 1367, 1368, 1374, 1382, 1383, 1385, 1386, 1396, 1397, 1404, 1405, 1419, 1422, 1423, 1441, 1445, 1447, 1448, 1468, 1481, 1534, 1536, 1570, 1624, 1656, 1696, 1697, 1700, 1706, 1710, 1721, 1767, 1817, 1825, 1860, 1865, 1867, 1880, 1883, 1886, 1898, 1899, 1919, 1922, 1924, 1925, 1926, 1927, 1930, 1934, 1937, 1943, 1949, 1954, 1958], "verbose_on": 2, "level": [2, 3, 7, 8, 9, 15, 17, 18, 20, 25, 26, 28, 29, 34, 37, 40, 43, 51, 52, 53, 57, 66, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100, 101, 102, 515, 696, 763, 910, 911, 912, 920, 1151, 1166, 1390, 1633, 1894, 1895, 1896, 1899, 1900, 1905, 1909, 1911, 1914, 1917, 1919, 1921, 1924, 1927, 1938, 1941, 1943, 1944, 1945, 1949, 1953, 1958, 1962, 1963, 1964], "verbose_off": 2, "dnn": [2, 1921], "onednn": [2, 871, 872, 875, 1223, 1229, 1944], "former": [2, 66, 1423, 1453, 1919], "dnnl_verbos": 2, "verbose_on_cr": 2, "get_opt_einsum": 2, "packag": [2, 7, 8, 13, 35, 36, 41, 49, 70, 73, 1552, 1633, 1893, 1894, 1910, 1924, 1930, 1940, 1947, 1949, 1958, 1961], "els": [2, 7, 12, 13, 15, 28, 40, 43, 45, 49, 51, 52, 60, 74, 75, 619, 776, 939, 1232, 1238, 1419, 1492, 1589, 1602, 1633, 1687, 1696, 1697, 1700, 1706, 1707, 1708, 1709, 1763, 1764, 1797, 1803, 1878, 1896, 1898, 1900, 1901, 1906, 1911, 1914, 1922, 1924, 1925, 1930, 1931, 1937, 1940, 1941, 1955], "einsum": [2, 1897, 1939], "readthedoc": [2, 1094], "io": [2, 7, 40, 45, 1094, 1228, 1231, 1292, 1423, 1424, 1500, 1602, 1688, 1771, 1936, 1944], "en": [2, 41, 1094, 1928, 1958, 1965], "path_find": [2, 1094], "html": [2, 3, 4, 7, 34, 61, 696, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 968, 1094, 1502, 1875, 1878, 1920, 1928, 1930, 1934, 1941, 1958], "calcul": [2, 40, 43, 57, 776, 784, 785, 815, 818, 835, 836, 840, 956, 986, 1082, 1086, 1094, 1098, 1212, 1218, 1276, 1298, 1299, 1301, 1366, 1367, 1368, 1371, 1372, 1373, 1376, 1384, 1385, 1386, 1400, 1405, 1407, 1408, 1416, 1417, 1418, 1425, 1492, 1501, 1504, 1505, 1519, 1520, 1521, 1549, 1552, 1563, 1592, 1641, 1652, 1674, 1678, 1680, 1715, 1761, 1785, 1834, 1835, 1865, 1867, 1881, 1882, 1919, 1920, 1923, 1927, 1933, 1936, 1944, 1953, 1963], "path": [2, 3, 4, 8, 12, 17, 20, 22, 33, 43, 45, 58, 60, 62, 63, 66, 74, 750, 931, 932, 995, 996, 1094, 1221, 1453, 1469, 1500, 1687, 1691, 1893, 1897, 1898, 1919, 1922, 1924, 1928, 1935, 1941, 1943, 1953, 1962], "contract": [2, 13, 20, 1094, 1856, 1894, 1913, 1941], "left": [2, 25, 40, 74, 477, 515, 830, 836, 881, 937, 941, 944, 946, 947, 952, 957, 1094, 1114, 1121, 1135, 1138, 1139, 1143, 1174, 1178, 1179, 1183, 1218, 1219, 1226, 1240, 1261, 1270, 1274, 1278, 1281, 1282, 1283, 1284, 1286, 1298, 1299, 1343, 1361, 1366, 1367, 1368, 1369, 1370, 1381, 1382, 1383, 1400, 1407, 1420, 1421, 1422, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1456, 1457, 1458, 1462, 1463, 1501, 1504, 1505, 1506, 1507, 1552, 1572, 1590, 1638, 1713, 1714, 1727, 1755, 1768, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1836, 1856, 1861, 1880, 1896, 1897, 1899, 1919, 1924, 1930, 1947, 1954], "strategi": [2, 3, 7, 17, 40, 41, 43, 47, 53, 66, 917, 919, 1094, 1154, 1234, 1361, 1633, 1721, 1898, 1925, 1927, 1945], "auto": [2, 16, 43, 67, 97, 98, 1094, 1369, 1370, 1899, 1937, 1958], "greedi": [2, 47, 1094], "doc": [2, 3, 4, 9, 18, 23, 34, 60, 61, 97, 101, 696, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 856, 968, 1162, 1239, 1497, 1498, 1499, 1500, 1875, 1886, 1900, 1911, 1920, 1923, 1924, 1930, 1934, 1937, 1941, 1953, 1958], "timer": [3, 46, 1894], "stmt": [3, 1921], "setup": [3, 13, 33, 41, 60, 61, 836, 837, 838, 841, 1162, 1633, 1886, 1921, 1922, 1931, 1949, 1950], "global_setup": 3, "perf_count": 3, "global": [3, 5, 8, 14, 16, 17, 18, 27, 28, 29, 40, 43, 45, 47, 48, 49, 51, 61, 66, 71, 73, 74, 75, 78, 82, 83, 870, 877, 881, 889, 937, 946, 1046, 1053, 1095, 1097, 1107, 1112, 1130, 1148, 1151, 1178, 1179, 1202, 1209, 1221, 1224, 1236, 1240, 1291, 1307, 1453, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1652, 1656, 1684, 1748, 1750, 1752, 1755, 1779, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1891, 1896, 1899, 1900, 1915, 1918, 1924, 1929, 1930, 1932, 1934, 1935, 1944, 1949, 1950, 1951, 1953, 1956, 1958], "label": [3, 6, 7, 40, 47, 1094, 1361, 1370, 1376, 1387, 1389, 1413, 1445, 1456, 1457, 1536, 1667, 1714, 1923, 1932, 1934, 1958], "sub_label": 3, "descript": [3, 7, 18, 29, 32, 33, 40, 53, 60, 74, 750, 1192, 1193, 1194, 1266, 1293, 1517, 1739, 1898, 1899, 1922, 1924, 1927, 1929, 1930, 1937, 1965], "env": [3, 17, 29, 43, 49, 53, 58, 60, 61, 63, 74, 1051, 1687, 1688, 1923, 1933, 1937, 1949], "num_thread": [3, 1932], "languag": [3, 33, 53, 1232, 1361, 1496, 1551, 1926], "measur": [3, 49, 57, 997, 1043, 1045, 1252, 1369, 1370, 1387, 1413, 1420, 1444, 1445, 1501, 1502, 1524, 1525, 1583, 1723, 1894, 1922, 1929, 1930, 1940, 1953], "statement": [3, 13, 20, 49, 71, 74, 75, 80, 82, 83, 1222, 1236, 1900, 1919, 1924, 1932, 1935, 1937, 1941, 1947, 1949], "full": [3, 7, 8, 14, 17, 20, 21, 22, 29, 34, 40, 41, 43, 47, 49, 60, 63, 66, 67, 71, 74, 75, 80, 83, 529, 916, 937, 946, 968, 1122, 1123, 1124, 1128, 1129, 1131, 1149, 1161, 1162, 1178, 1179, 1225, 1258, 1259, 1266, 1267, 1268, 1279, 1284, 1285, 1293, 1310, 1370, 1376, 1407, 1467, 1496, 1527, 1528, 1529, 1536, 1549, 1595, 1687, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1788, 1840, 1841, 1886, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1913, 1918, 1922, 1923, 1924, 1927, 1930, 1933, 1934, 1939, 1941, 1944, 1947, 1950, 1957, 1960], "org": [3, 4, 7, 9, 10, 34, 41, 48, 49, 61, 696, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 968, 1293, 1423, 1471, 1472, 1499, 1502, 1677, 1729, 1804, 1878, 1893, 1900, 1919, 1920, 1930, 1934, 1936, 1937, 1941, 1958, 1965], "timeit": [3, 1921], "sever": [3, 34, 40, 43, 48, 49, 66, 74, 754, 755, 756, 757, 758, 759, 782, 783, 788, 789, 790, 798, 799, 968, 1040, 1098, 1196, 1221, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1381, 1382, 1383, 1384, 1385, 1386, 1401, 1402, 1421, 1422, 1441, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1570, 1573, 1574, 1576, 1577, 1578, 1633, 1642, 1643, 1645, 1646, 1678, 1689, 1744, 1745, 1785, 1871, 1896, 1918, 1919, 1921, 1922, 1929, 1930, 1932, 1937, 1940, 1944, 1949], "kei": [3, 18, 19, 20, 24, 25, 28, 40, 45, 51, 58, 60, 61, 66, 74, 619, 696, 751, 870, 875, 933, 1060, 1150, 1160, 1221, 1236, 1237, 1292, 1453, 1454, 1459, 1463, 1496, 1497, 1498, 1499, 1500, 1602, 1659, 1675, 1876, 1878, 1894, 1897, 1898, 1899, 1903, 1922, 1924, 1929, 1930, 1935, 1937, 1939, 1940, 1943, 1944, 1947, 1949, 1950, 1955, 1958, 1960, 1962], "awar": [3, 7, 24, 99, 503, 728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 749, 854, 855, 871, 878, 879, 1500, 1602, 1633, 1844, 1845, 1846, 1847, 1848, 1913, 1919, 1922, 1941, 1947, 1950, 1953], "element": [3, 16, 19, 40, 43, 49, 71, 72, 74, 75, 81, 82, 83, 116, 138, 169, 173, 215, 235, 260, 272, 276, 304, 331, 333, 335, 337, 339, 370, 416, 418, 420, 452, 471, 488, 490, 491, 513, 515, 529, 531, 533, 536, 561, 562, 574, 576, 625, 626, 633, 697, 699, 700, 703, 704, 709, 710, 714, 715, 751, 774, 776, 786, 787, 788, 789, 790, 796, 800, 809, 890, 892, 893, 894, 897, 898, 899, 900, 901, 909, 917, 918, 920, 921, 922, 924, 925, 938, 947, 950, 957, 963, 967, 980, 982, 983, 984, 1037, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1085, 1089, 1091, 1094, 1097, 1099, 1100, 1104, 1124, 1128, 1129, 1131, 1133, 1138, 1140, 1141, 1143, 1147, 1152, 1153, 1155, 1156, 1157, 1161, 1162, 1163, 1164, 1165, 1166, 1174, 1177, 1180, 1181, 1182, 1183, 1198, 1206, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1240, 1242, 1243, 1245, 1262, 1264, 1268, 1279, 1283, 1294, 1295, 1297, 1300, 1302, 1303, 1304, 1305, 1309, 1310, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1341, 1343, 1348, 1349, 1351, 1352, 1353, 1354, 1355, 1365, 1366, 1369, 1370, 1371, 1372, 1373, 1375, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1391, 1392, 1393, 1394, 1395, 1397, 1398, 1400, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1419, 1420, 1423, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1439, 1442, 1444, 1445, 1446, 1447, 1448, 1452, 1454, 1456, 1457, 1458, 1459, 1460, 1461, 1463, 1464, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1491, 1492, 1493, 1494, 1495, 1496, 1501, 1502, 1504, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1541, 1544, 1545, 1550, 1551, 1555, 1556, 1557, 1558, 1561, 1564, 1565, 1567, 1572, 1576, 1577, 1578, 1582, 1583, 1587, 1588, 1590, 1593, 1594, 1595, 1596, 1597, 1598, 1602, 1603, 1604, 1605, 1606, 1608, 1610, 1612, 1613, 1614, 1615, 1620, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1659, 1660, 1666, 1667, 1669, 1670, 1679, 1680, 1681, 1683, 1692, 1732, 1733, 1736, 1737, 1744, 1745, 1747, 1758, 1761, 1762, 1766, 1768, 1770, 1788, 1791, 1793, 1805, 1806, 1808, 1809, 1813, 1819, 1822, 1823, 1824, 1825, 1826, 1827, 1829, 1830, 1834, 1835, 1839, 1850, 1852, 1853, 1857, 1858, 1859, 1861, 1863, 1864, 1865, 1866, 1867, 1869, 1871, 1872, 1873, 1875, 1881, 1882, 1883, 1886, 1889, 1897, 1899, 1906, 1914, 1917, 1920, 1921, 1924, 1927, 1933, 1935, 1937, 1940, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1964], "lazili": [3, 25, 36, 45, 997, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1624, 1896, 1924], "threadpool": 3, "comparison": [3, 26, 41, 43, 74, 1221, 1236, 1237, 1453, 1692, 1900, 1924, 1960, 1963], "appl": [3, 1910], "focu": [3, 17, 20, 1723], "replic": [3, 40, 48, 66, 101, 1174, 1231, 1381, 1382, 1383, 1390, 1400, 1429, 1430, 1431, 1477, 1478, 1479, 1504, 1590, 1617, 1942], "particularli": [3, 15, 25, 40, 41, 62, 1389, 1390, 1460, 1896, 1922], "variat": [3, 29, 49, 1899, 1924, 1940, 1945], "confound": 3, "quantifi": [3, 1502], "nois": [3, 29, 1897, 1934], "median": [3, 49, 192, 1349, 1875, 1897, 1912, 1939], "robust": [3, 1293, 1911, 1930], "deviat": [3, 49, 66, 395, 1365, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1492, 1681, 1798, 1803, 1834, 1835, 1917], "merg": [3, 6, 7, 9, 40, 43, 45, 61, 1454, 1459, 1463], "repeat": [3, 49, 71, 510, 986, 1094, 1284, 1310, 1449, 1450, 1451, 1524, 1525, 1729, 1761, 1820, 1840, 1841, 1857, 1895, 1897, 1899, 1939, 1943, 1946, 1953], "autorang": 3, "exact": [3, 16, 17, 24, 29, 33, 40, 51, 62, 100, 357, 757, 758, 759, 811, 890, 891, 892, 924, 925, 968, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1321, 1385, 1423, 1500, 1563, 1602, 1633, 1724, 1814, 1917, 1923, 1932, 1953, 1964], "discuss": [3, 5, 8, 9, 10, 17, 18, 26, 49, 74, 1414, 1563, 1906, 1919, 1924, 1930, 1934, 1949, 1951, 1953], "docstr": [3, 33, 74, 877, 878, 1221, 1453, 1893, 1922], "adapt": [3, 15, 782, 783, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1391, 1511, 1512, 1513, 1514, 1515, 1516, 1687, 1694, 1695, 1706, 1708, 1715, 1922], "field": [3, 7, 20, 28, 29, 43, 47, 51, 53, 57, 58, 74, 842, 909, 1219, 1221, 1361, 1369, 1370, 1387, 1389, 1413, 1419, 1420, 1444, 1445, 1453, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1517, 1524, 1525, 1535, 1552, 1564, 1587, 1595, 1666, 1704, 1710, 1909, 1919, 1923, 1932, 1937, 1949, 1950, 1958], "displai": [3, 17, 29, 37, 1039, 1052, 1563, 1621, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1893, 1900, 1905, 1908, 1937, 1958, 1960], "instruct": [3, 4, 11, 16, 17, 20, 29, 31, 33, 62, 73, 1896, 1899, 1933, 1937, 1944, 1960], "count": [3, 20, 40, 49, 57, 74, 939, 985, 1033, 1147, 1182, 1183, 1219, 1258, 1259, 1666, 1872, 1873, 1897, 1909, 1922, 1939, 1943, 1949, 1951, 1953], "wall": [3, 22], "callgrind": 3, "analog": [3, 15, 20, 74, 710, 1077, 1115, 1117, 1196, 1270, 1423, 1709, 1840, 1857, 1914, 1930], "constructor": [3, 33, 40, 41, 47, 66, 74, 75, 83, 840, 877, 878, 1361, 1458, 1463, 1464, 1481, 1506, 1507, 1633, 1673, 1815, 1894, 1896, 1899, 1900, 1922, 1923, 1930, 1949, 1953, 1955, 1956, 1959, 1965], "snippet": [3, 20, 61, 1893, 1930, 1935], "loop": [3, 12, 16, 20, 21, 28, 41, 62, 67, 71, 72, 74, 75, 80, 878, 879, 923, 1040, 1043, 1045, 1156, 1162, 1236, 1633, 1643, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1886, 1896, 1897, 1899, 1909, 1921, 1922, 1926, 1927, 1930, 1933, 1937, 1940, 1943, 1944, 1958], "callabl": [3, 5, 13, 18, 20, 28, 40, 41, 43, 47, 49, 51, 53, 58, 60, 62, 66, 73, 74, 87, 88, 89, 138, 416, 857, 968, 970, 1037, 1038, 1040, 1151, 1152, 1153, 1158, 1161, 1162, 1221, 1224, 1232, 1236, 1292, 1293, 1453, 1496, 1498, 1500, 1502, 1627, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1717, 1720, 1886, 1893, 1896, 1898, 1899, 1900, 1909, 1922, 1924, 1930, 1935, 1937, 1941, 1942, 1943, 1949, 1960, 1962, 1963, 1964], "present": [3, 9, 18, 23, 40, 43, 60, 66, 1219, 1310, 1361, 1423, 1463, 1666, 1689, 1836, 1893, 1908, 1911, 1912, 1913, 1918, 1919, 1922, 1924, 1927, 1930, 1935, 1937, 1941, 1950, 1953, 1956], "default_tim": 3, "summar": [3, 4, 20, 29, 61, 1788, 1899, 1914, 1953], "relu": [3, 13, 19, 25, 28, 29, 41, 71, 72, 74, 716, 717, 721, 722, 723, 724, 725, 726, 727, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 781, 808, 809, 830, 870, 876, 1037, 1152, 1162, 1232, 1453, 1468, 1470, 1481, 1489, 1496, 1498, 1500, 1599, 1600, 1624, 1691, 1886, 1895, 1896, 1897, 1907, 1913, 1914, 1917, 1919, 1930, 1935, 1937, 1939, 1944, 1946, 1947], "readabl": [3, 29, 32, 40, 58, 74, 1039, 1052, 1854, 1937, 1940, 1964], "supplement": 3, "disambigu": [3, 29, 58, 74, 1298], "ident": [3, 16, 29, 33, 40, 43, 49, 74, 804, 830, 924, 925, 1082, 1258, 1259, 1260, 1261, 1274, 1286, 1289, 1293, 1310, 1348, 1349, 1365, 1391, 1592, 1640, 1642, 1883, 1889, 1900, 1917, 1933, 1934, 1941, 1946, 1953], "easi": [3, 13, 20, 25, 26, 29, 40, 45, 60, 1896, 1919, 1926, 1929, 1930, 1932, 1941, 1944, 1949, 1950, 1953], "differenti": [3, 49, 67, 72, 169, 370, 605, 818, 905, 907, 909, 911, 912, 914, 917, 918, 919, 920, 921, 922, 923, 924, 925, 965, 1040, 1155, 1156, 1157, 1161, 1235, 1267, 1268, 1279, 1310, 1375, 1376, 1396, 1554, 1588, 1633, 1645, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1875, 1894, 1906, 1924, 1926, 1927, 1937, 1940, 1949, 1959], "distinguish": [3, 1944, 1953], "princip": [3, 1267, 1729], "signal": [3, 18, 31, 45, 51, 60, 62, 754, 755, 756, 782, 783, 798, 799, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1218, 1283, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1381, 1382, 1383, 1401, 1402, 1421, 1422, 1441, 1446, 1447, 1448, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1527, 1530, 1547, 1548, 1570, 1573, 1574, 1576, 1577, 1578, 1836, 1894, 1911, 1932, 1943, 1949], "form": [3, 7, 9, 14, 28, 31, 40, 43, 49, 59, 60, 61, 66, 71, 74, 776, 795, 801, 959, 1082, 1122, 1124, 1221, 1260, 1263, 1268, 1279, 1284, 1359, 1360, 1363, 1364, 1376, 1401, 1402, 1405, 1423, 1453, 1468, 1504, 1505, 1536, 1547, 1548, 1551, 1563, 1590, 1621, 1645, 1709, 1727, 1856, 1893, 1896, 1900, 1914, 1919, 1924, 1930, 1937, 1941, 1944, 1953, 1958], "treat": [3, 18, 23, 28, 49, 59, 69, 74, 75, 80, 81, 339, 488, 809, 924, 925, 1037, 1150, 1273, 1276, 1278, 1290, 1292, 1302, 1303, 1304, 1305, 1322, 1351, 1397, 1407, 1425, 1457, 1458, 1459, 1460, 1463, 1481, 1486, 1544, 1633, 1675, 1679, 1715, 1768, 1836, 1850, 1857, 1898, 1899, 1912, 1919, 1949, 1953, 1956, 1963], "distinct": [3, 1150, 1256, 1257, 1301, 1899, 1924, 1935, 1949, 1950], "workload": [3, 8, 11, 25, 40, 43, 66, 1040, 1922, 1929, 1933, 1949], "good": [3, 7, 8, 16, 20, 24, 33, 74, 968, 1154, 1461, 1804, 1893, 1903, 1911, 1924, 1929, 1930, 1932, 1937, 1941, 1942, 1944], "intrins": [3, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 808, 809, 1945, 1946], "contrast": [3, 49, 51, 776, 1405, 1709, 1895, 1917, 1919, 1925, 1953], "blocked_autorang": 3, "callback": [3, 41, 60, 62, 73, 74, 1633, 1909, 1924, 1929, 1943, 1949], "min_run_tim": 3, "minimum": [3, 33, 41, 51, 60, 61, 712, 713, 787, 811, 836, 837, 838, 841, 842, 891, 939, 1074, 1141, 1181, 1182, 1183, 1323, 1376, 1412, 1502, 1713, 1714, 1721, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1895, 1897, 1917, 1919, 1927, 1939, 1947, 1956], "At": [3, 5, 6, 7, 14, 17, 20, 29, 34, 40, 1128, 1372, 1381, 1382, 1383, 1384, 1385, 1386, 1421, 1422, 1876, 1907, 1914, 1921, 1927, 1944, 1949, 1954], "high": [3, 4, 7, 8, 9, 10, 11, 12, 17, 20, 21, 29, 34, 41, 43, 49, 51, 57, 59, 61, 74, 138, 1376, 1499, 1750, 1751, 1783, 1895, 1897, 1909, 1911, 1924, 1927, 1928, 1930, 1931, 1932, 1940, 1944, 1945, 1949, 1953, 1958, 1959, 1960, 1963], "pseudo": [3, 107], "total_tim": 3, "block_siz": 3, "choic": [3, 8, 9, 15, 17, 29, 43, 1236, 1284, 1454, 1463, 1746, 1921, 1937, 1947, 1953], "block": [3, 7, 8, 25, 40, 43, 47, 48, 60, 62, 66, 73, 74, 599, 600, 601, 947, 997, 1051, 1241, 1293, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1429, 1430, 1431, 1432, 1433, 1434, 1456, 1504, 1546, 1620, 1633, 1822, 1823, 1824, 1896, 1898, 1899, 1909, 1911, 1915, 1919, 1922, 1923, 1927, 1937, 1944, 1949, 1953], "qualiti": [3, 7, 41], "balanc": [3, 968], "compet": [3, 1932], "statist": [3, 17, 29, 41, 43, 49, 815, 816, 836, 837, 838, 840, 841, 1006, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1071, 1072, 1298, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1909, 1919, 1926, 1940, 1942, 1944, 1947], "amort": 3, "invoc": [3, 5, 12, 20, 25, 74, 857, 968, 1224, 1236, 1896, 1899, 1922, 1924, 1929, 1937, 1949, 1951], "less": [3, 6, 7, 17, 33, 40, 41, 43, 49, 51, 62, 66, 382, 696, 917, 919, 924, 925, 986, 1047, 1064, 1094, 1138, 1142, 1147, 1150, 1245, 1257, 1293, 1309, 1310, 1361, 1414, 1467, 1484, 1490, 1669, 1759, 1865, 1867, 1893, 1897, 1899, 1914, 1922, 1924, 1932, 1933, 1939, 1942, 1944], "bias": [3, 41, 750, 776, 810, 1371, 1372, 1373, 1405, 1406, 1408, 1416, 1417, 1418, 1423, 1424, 1425, 1468, 1470, 1492], "trivial": [3, 16, 51, 53, 751, 958, 1640, 1937, 1951], "low": [3, 7, 22, 37, 41, 49, 66, 515, 920, 1166, 1376, 1729, 1746, 1750, 1751, 1768, 1841, 1895, 1897, 1909, 1911, 1922, 1932, 1943, 1960, 1964], "digit": [3, 1788, 1893, 1908, 1929, 1933], "microsecond": [3, 1922], "bia": [3, 9, 43, 48, 75, 728, 729, 730, 731, 732, 733, 734, 735, 736, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 754, 755, 756, 757, 758, 759, 765, 767, 768, 769, 770, 772, 776, 777, 780, 781, 788, 789, 790, 797, 808, 1160, 1221, 1230, 1361, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1405, 1406, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1453, 1459, 1468, 1469, 1470, 1496, 1498, 1500, 1522, 1523, 1527, 1528, 1529, 1530, 1531, 1532, 1553, 1562, 1566, 1569, 1624, 1633, 1640, 1641, 1655, 1657, 1659, 1674, 1677, 1743, 1895, 1897, 1907, 1924, 1930, 1935, 1944, 1946, 1953, 1958], "period": [3, 9, 47, 60, 937, 946, 1006, 1039, 1052, 1053, 1057, 1071, 1072, 1114, 1178, 1179, 1240, 1725, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1897, 1909, 1932], "until": [3, 7, 17, 40, 41, 43, 47, 51, 60, 66, 73, 74, 503, 997, 998, 1000, 1031, 1147, 1241, 1293, 1334, 1335, 1552, 1624, 1633, 1712, 1718, 1857, 1911, 1917, 1922, 1926, 1935, 1937, 1943, 1949, 1951], "overal": [3, 9, 22, 40, 43, 60, 924, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1499, 1919, 1921, 1922, 1932, 1945], "main": [3, 7, 13, 17, 20, 28, 40, 41, 43, 44, 49, 51, 52, 53, 58, 60, 61, 62, 63, 74, 278, 512, 968, 1081, 1082, 1083, 1084, 1085, 1283, 1554, 1820, 1864, 1865, 1866, 1867, 1893, 1896, 1909, 1911, 1913, 1914, 1918, 1919, 1922, 1923, 1924, 1925, 1930, 1932, 1936, 1937, 1949, 1950, 1958, 1959], "repetit": [3, 1761, 1857], "collect_callgrind": 3, "collect_baselin": 3, "retain_out_fil": 3, "callgrindstat": [3, 1894], "tupl": [3, 5, 20, 28, 33, 40, 45, 51, 57, 58, 60, 66, 74, 337, 462, 464, 466, 513, 536, 553, 576, 599, 600, 601, 711, 712, 713, 751, 782, 783, 784, 785, 788, 789, 790, 795, 801, 802, 803, 809, 833, 834, 870, 877, 878, 894, 895, 902, 903, 904, 905, 906, 908, 917, 918, 919, 920, 921, 922, 923, 924, 925, 928, 929, 930, 951, 970, 974, 985, 1007, 1008, 1011, 1022, 1040, 1046, 1073, 1074, 1092, 1095, 1097, 1111, 1113, 1114, 1116, 1117, 1119, 1120, 1121, 1123, 1124, 1126, 1127, 1129, 1131, 1134, 1144, 1148, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1166, 1182, 1184, 1221, 1227, 1232, 1236, 1237, 1242, 1251, 1256, 1257, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1273, 1277, 1279, 1280, 1282, 1284, 1287, 1290, 1308, 1310, 1312, 1318, 1320, 1322, 1323, 1326, 1328, 1348, 1351, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1390, 1400, 1401, 1402, 1421, 1422, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1454, 1459, 1463, 1474, 1475, 1476, 1477, 1478, 1479, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1512, 1513, 1515, 1516, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1563, 1576, 1577, 1578, 1588, 1590, 1621, 1622, 1623, 1628, 1629, 1630, 1633, 1645, 1656, 1669, 1675, 1679, 1680, 1684, 1687, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1729, 1730, 1739, 1748, 1750, 1752, 1762, 1766, 1767, 1813, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1831, 1834, 1835, 1839, 1840, 1841, 1854, 1855, 1856, 1857, 1858, 1863, 1870, 1871, 1872, 1873, 1881, 1882, 1886, 1887, 1889, 1891, 1896, 1897, 1900, 1911, 1914, 1919, 1922, 1924, 1925, 1930, 1935, 1937, 1940, 1941, 1944, 1949, 1953, 1958, 1960, 1963, 1964], "modulo": [3, 49, 1142, 1759], "determin": [3, 5, 8, 15, 16, 17, 28, 29, 31, 33, 36, 37, 39, 40, 41, 43, 49, 51, 58, 60, 71, 74, 100, 101, 102, 839, 842, 917, 919, 924, 925, 937, 946, 953, 958, 1041, 1096, 1115, 1125, 1149, 1150, 1178, 1179, 1182, 1183, 1234, 1254, 1266, 1277, 1280, 1301, 1315, 1397, 1401, 1402, 1423, 1459, 1462, 1468, 1544, 1547, 1548, 1563, 1596, 1621, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1675, 1685, 1721, 1749, 1751, 1753, 1780, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1892, 1899, 1900, 1913, 1922, 1923, 1924, 1930, 1937, 1941, 1944, 1949, 1951, 1953, 1955, 1956, 1958, 1960], "itself": [3, 5, 7, 8, 13, 16, 20, 29, 43, 44, 66, 72, 74, 709, 715, 895, 986, 1155, 1156, 1221, 1232, 1236, 1453, 1486, 1608, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1896, 1911, 1930, 1932, 1934, 1937, 1941, 1949, 1953, 1957], "jitter": 3, "interpret": [3, 20, 40, 43, 47, 49, 51, 60, 62, 90, 795, 801, 896, 923, 1050, 1115, 1116, 1117, 1122, 1124, 1125, 1126, 1127, 1147, 1171, 1183, 1221, 1226, 1232, 1236, 1273, 1293, 1393, 1552, 1563, 1564, 1621, 1780, 1786, 1893, 1898, 1899, 1911, 1921, 1922, 1937, 1953, 1955, 1957], "ideal": [3, 17, 59, 61, 1236, 1710, 1913], "analysi": [3, 13, 16, 26, 41, 49, 74, 1240, 1729, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1900, 1930, 1938, 1963], "valgrind": 3, "degrad": [3, 33, 66, 1921, 1923, 1924, 1953], "amelior": 3, "suffici": [3, 17, 29, 33, 41, 49, 52, 60, 66, 1696, 1697, 1893, 1953, 1956], "callgrind_control": 3, "callgrind_annot": 3, "boundari": [3, 17, 74, 795, 801, 952, 1174, 1378, 1379, 1380, 1474, 1475, 1476, 1477, 1478, 1479, 1505, 1508, 1509, 1510, 1563, 1621, 1715, 1721, 1775, 1897, 1923, 1941, 1942, 1949], "caller": [3, 51, 60, 74, 870, 1221, 1453, 1500, 1629, 1630, 1919, 1922, 1949, 1951], "structur": [3, 5, 9, 15, 18, 23, 40, 41, 43, 50, 51, 53, 61, 66, 74, 75, 76, 80, 83, 908, 1145, 1157, 1162, 1236, 1453, 1652, 1656, 1692, 1729, 1841, 1886, 1894, 1898, 1900, 1906, 1909, 1914, 1922, 1923, 1924, 1925, 1932, 1935, 1936, 1937, 1938, 1940, 1941, 1949, 1958, 1959, 1960, 1961, 1963], "restrict": [3, 8, 15, 40, 49, 66, 71, 72, 1292, 1315, 1389, 1898, 1899, 1900, 1913, 1914, 1919, 1922, 1927, 1942, 1944], "builtin": [3, 17, 29, 43, 74, 75, 83, 1233, 1292, 1755, 1896, 1898, 1900, 1949, 1951], "surpris": [3, 8, 16, 66, 1893, 1927, 1933], "serial": [3, 34, 40, 43, 45, 47, 60, 1221, 1230, 1231, 1292, 1453, 1624, 1687, 1688, 1771, 1893, 1894, 1897, 1908, 1913, 1919, 1922, 1929, 1930, 1932, 1941, 1944, 1950], "subsequ": [3, 7, 12, 17, 20, 33, 34, 43, 66, 74, 968, 998, 1221, 1232, 1236, 1381, 1382, 1383, 1384, 1385, 1386, 1453, 1481, 1629, 1630, 1922, 1934, 1937, 1949, 1953], "deseri": [3, 45, 1292, 1624, 1893, 1908, 1935], "globalsbridg": 3, "care": [3, 7, 12, 16, 17, 18, 29, 33, 43, 49, 73, 74, 970, 1115, 1117, 1453, 1911, 1921, 1922, 1923, 1924, 1926, 1930, 1932, 1935, 1937, 1949, 1953], "reli": [3, 9, 16, 17, 18, 22, 33, 40, 41, 51, 53, 66, 74, 169, 909, 924, 970, 1094, 1390, 1710, 1919, 1921, 1923, 1924, 1934, 1935, 1953, 1957], "pickl": [3, 40, 41, 43, 1221, 1292, 1453, 1771, 1893, 1908, 1911, 1935, 1941], "transfer": [3, 40, 43, 66, 1907, 1911, 1922, 1928, 1930, 1941, 1949], "properli": [3, 7, 40, 41, 45, 47, 51, 60, 73, 1115, 1116, 1117, 1125, 1126, 1127, 1322, 1454, 1455, 1463, 1464, 1633, 1876, 1893, 1906, 1924, 1927, 1930, 1932, 1935, 1949, 1950, 1956], "profil": [3, 4, 17, 57, 74, 968, 1234, 1627, 1628, 1629, 1630, 1788, 1894, 1939, 1949], "drive": [3, 9, 20, 43, 1919], "facil": [3, 1292, 1911], "analyz": [3, 4, 29, 37, 74, 1923, 1924, 1933], "manipul": [3, 28, 66, 73, 1225, 1894, 1918, 1926, 1930, 1942, 1947], "1000000": [3, 1693], "mirror": [3, 158], "semant": [3, 9, 36, 43, 60, 61, 66, 74, 169, 810, 890, 891, 892, 909, 923, 950, 1000, 1051, 1151, 1162, 1225, 1231, 1290, 1370, 1525, 1596, 1710, 1873, 1886, 1894, 1898, 1899, 1903, 1906, 1914, 1925, 1930, 1937, 1953], "number_per_run": 3, "raw_tim": 3, "task_spec": 3, "serializ": [3, 41, 1896], "consum": [3, 20, 40, 45, 50, 62, 73, 452, 1094, 1911, 1922, 1932, 1937, 1938, 1958], "extrapol": 3, "sinc": [3, 7, 12, 17, 20, 23, 28, 29, 40, 41, 43, 48, 49, 53, 62, 66, 74, 333, 550, 763, 801, 809, 824, 825, 958, 970, 1043, 1045, 1047, 1094, 1134, 1135, 1136, 1150, 1218, 1221, 1226, 1231, 1234, 1310, 1369, 1396, 1449, 1450, 1451, 1453, 1505, 1517, 1552, 1554, 1621, 1624, 1627, 1656, 1675, 1680, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1713, 1714, 1715, 1721, 1836, 1896, 1897, 1898, 1899, 1905, 1907, 1909, 1914, 1918, 1919, 1922, 1924, 1925, 1926, 1927, 1929, 1930, 1935, 1936, 1937, 1939, 1941, 1942, 1943, 1944, 1948, 1949, 1950, 1951, 1953, 1954, 1956, 1957, 1959, 1960], "properti": [3, 14, 15, 16, 40, 43, 44, 45, 49, 52, 57, 60, 66, 74, 808, 896, 928, 934, 1024, 1110, 1111, 1113, 1115, 1116, 1117, 1125, 1126, 1127, 1221, 1365, 1453, 1486, 1608, 1624, 1634, 1635, 1636, 1666, 1687, 1894, 1899, 1903, 1909, 1919, 1922, 1924, 1927, 1940, 1943, 1949, 1953, 1955, 1956, 1959, 1961, 1964, 1965], "significant_figur": 3, "figur": [3, 7, 8, 17, 45, 74, 1921, 1923, 1924, 1937, 1942, 1951, 1958, 1963], "intend": [3, 60, 74, 906, 915, 1002, 1240, 1517, 1627, 1628, 1629, 1630, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1710, 1899, 1914, 1917, 1919, 1930, 1941], "interquartil": 3, "mitig": [3, 75], "tail": [3, 40, 58], "645": 3, "conjunct": [3, 40, 43, 47, 66, 840, 1517, 1552, 1633, 1947, 1949], "trim_sigfig": 3, "human": [3, 32, 58, 1039, 1052, 1917, 1937, 1964], "raw": [3, 74, 1147, 1279, 1922, 1941], "built_with_debug_symbol": 3, "baseline_inclusive_stat": 3, "baseline_exclusive_stat": 3, "stmt_inclusive_stat": 3, "stmt_exclusive_stat": 3, "stmt_callgrind_out": 3, "done": [3, 13, 15, 16, 20, 24, 28, 34, 40, 43, 45, 48, 49, 51, 58, 66, 73, 74, 512, 696, 776, 924, 1111, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1131, 1236, 1310, 1371, 1372, 1373, 1390, 1393, 1405, 1416, 1417, 1418, 1435, 1436, 1437, 1438, 1463, 1492, 1498, 1500, 1633, 1831, 1899, 1903, 1907, 1911, 1919, 1921, 1922, 1923, 1924, 1925, 1926, 1930, 1933, 1937, 1940, 1942, 1944, 1945, 1949, 1951], "functioncount": [3, 1894], "stat": [3, 17, 29, 69, 842, 852, 853, 1051, 1058, 1059, 1060, 1492, 1633, 1909, 1922, 1962], "as_standard": 3, "strip": [3, 1554, 1633, 1896, 1939, 1953], "prefix": [3, 43, 45, 60, 66, 764, 773, 1221, 1453, 1633, 1893, 1905, 1919, 1937, 1941, 1962], "stumbl": 3, "filepath": 3, "dif": 3, "compon": [3, 7, 9, 13, 18, 20, 29, 34, 37, 43, 49, 74, 696, 924, 1114, 1115, 1117, 1125, 1126, 1127, 1260, 1496, 1497, 1498, 1499, 1500, 1624, 1729, 1836, 1884, 1885, 1900, 1905, 1919, 1923, 1924, 1929, 1930, 1942, 1953], "locat": [3, 9, 12, 16, 17, 33, 43, 49, 57, 102, 169, 173, 272, 529, 696, 950, 952, 1009, 1073, 1074, 1242, 1292, 1318, 1323, 1326, 1343, 1390, 1400, 1487, 1504, 1517, 1552, 1617, 1620, 1633, 1645, 1740, 1775, 1797, 1818, 1821, 1875, 1893, 1896, 1908, 1922, 1935, 1937, 1941, 1943, 1949, 1951, 1953, 1958, 1962], "resembl": [3, 34], "23234231": 3, "first_build_dir": 3, "foo": [3, 12, 33, 43, 57, 58, 73, 74, 75, 82, 83, 840, 870, 875, 968, 1150, 1151, 1160, 1219, 1224, 1228, 1231, 1232, 1235, 1236, 1675, 1876, 1878, 1893, 1896, 1898, 1899, 1903, 1924, 1930, 1937, 1941, 1960], "9823794": 3, "bar": [3, 7, 20, 57, 74, 75, 82, 83, 870, 875, 986, 1150, 1224, 1231, 1834, 1835, 1881, 1882, 1893, 1896, 1898, 1908, 1930, 1937, 1941, 1960], "53453": 3, "function_that_actually_chang": 3, "second_build_dir": 3, "cancel": [3, 1218], "site": [3, 7], "denois": 3, "explan": [3, 9, 17, 18, 24, 29, 53, 878, 1221, 1453, 1894, 1923, 1924, 1930], "delta": [3, 49, 776, 1405, 1414, 1423, 1484, 1561, 1694, 1834, 1835, 1861, 1881, 1882, 1897, 1917], "inclus": [3, 49, 107, 529, 1181, 1183, 1291, 1307, 1313, 1750, 1751, 1833, 1948, 1960], "diff": [3, 7, 1896, 1897, 1939], "One": [3, 8, 13, 15, 16, 22, 25, 33, 43, 45, 66, 69, 71, 74, 599, 947, 1151, 1162, 1212, 1505, 1589, 1640, 1643, 1710, 1715, 1723, 1750, 1751, 1871, 1886, 1896, 1898, 1899, 1913, 1914, 1920, 1921, 1922, 1924, 1929, 1942, 1951, 1958], "unit": [3, 11, 12, 31, 33, 49, 51, 61, 66, 74, 776, 777, 1112, 1130, 1365, 1375, 1395, 1398, 1403, 1404, 1405, 1406, 1471, 1472, 1482, 1517, 1541, 1545, 1550, 1551, 1597, 1605, 1649, 1650, 1654, 1657, 1659, 1662, 1863, 1910, 1919, 1921, 1927, 1941], "next": [3, 14, 15, 17, 19, 20, 27, 40, 43, 49, 60, 66, 74, 576, 776, 1225, 1357, 1406, 1424, 1470, 1633, 1668, 1911, 1918, 1919, 1921, 1924, 1925, 1930, 1932, 1942, 1943, 1949, 1950, 1953, 1956, 1958], "logic": [3, 5, 20, 33, 40, 48, 63, 66, 74, 940, 942, 943, 945, 1111, 1113, 1116, 1117, 1119, 1120, 1123, 1124, 1126, 1127, 1129, 1131, 1151, 1225, 1302, 1303, 1304, 1305, 1315, 1459, 1633, 1738, 1765, 1848, 1899, 1900, 1922, 1923, 1924, 1925, 1927, 1944], "question": [3, 10, 16, 21, 40, 74, 1677, 1894, 1919], "why": [3, 7, 16, 25, 40, 71, 74, 1094, 1225, 1602, 1894, 1906, 1925], "involv": [3, 5, 7, 9, 15, 16, 21, 31, 40, 43, 66, 69, 71, 74, 1633, 1899, 1912, 1914, 1919, 1922, 1923, 1926, 1930, 1937, 1949, 1950, 1951, 1953], "look": [3, 4, 7, 8, 9, 12, 13, 15, 17, 18, 20, 22, 24, 28, 29, 34, 43, 49, 59, 60, 68, 71, 74, 878, 917, 919, 1221, 1315, 1361, 1453, 1543, 1658, 1710, 1822, 1823, 1824, 1826, 1827, 1896, 1898, 1912, 1918, 1919, 1922, 1925, 1929, 1930, 1932, 1936, 1937, 1941, 1944, 1949, 1950, 1963], "autom": [3, 8, 17, 29, 74, 1896, 1944], "easili": [3, 7, 8, 19, 28, 29, 31, 41, 43, 1151, 1460, 1552, 1590, 1710, 1768, 1876, 1924, 1925, 1927, 1930, 1935, 1940, 1948, 1951, 1958], "exclus": [3, 40, 43, 49, 51, 60, 74, 751, 1183, 1633, 1750, 1751, 1754, 1919, 1960], "basi": [3, 9, 10, 49, 1293, 1715, 1922, 1929, 1944, 1949], "thought": [3, 57, 74, 1112, 1114, 1130], "path_and_function_nam": 3, "children": [3, 53, 66, 74, 807, 1221, 1453, 1911, 1930, 1941, 1951], "identifi": [3, 7, 9, 15, 20, 25, 43, 51, 54, 57, 60, 61, 62, 74, 833, 1183, 1292, 1492, 1900, 1911, 1920, 1929, 1930, 1941, 1949, 1950, 1951, 1958], "hot": [3, 20, 49, 1554, 1589, 1927], "spot": 3, "_data": 3, "truncate_row": 3, "_linewidth": 3, "subtract": [3, 331, 580, 881, 1147, 1554, 1822, 1823, 1824, 1826, 1827, 1837, 1897, 1914, 1939, 1953], "index": [3, 16, 29, 34, 40, 41, 45, 49, 58, 74, 210, 227, 299, 330, 331, 332, 333, 334, 335, 337, 339, 340, 488, 489, 528, 529, 530, 531, 532, 533, 534, 535, 711, 712, 833, 870, 893, 908, 952, 1013, 1016, 1073, 1074, 1114, 1154, 1155, 1156, 1160, 1162, 1163, 1192, 1193, 1194, 1195, 1219, 1237, 1242, 1250, 1268, 1286, 1300, 1308, 1310, 1314, 1318, 1321, 1322, 1323, 1326, 1343, 1349, 1352, 1353, 1361, 1376, 1389, 1396, 1397, 1454, 1455, 1460, 1463, 1464, 1502, 1504, 1543, 1544, 1589, 1651, 1653, 1660, 1661, 1666, 1679, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1724, 1725, 1740, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1809, 1819, 1820, 1822, 1823, 1824, 1826, 1827, 1836, 1850, 1871, 1874, 1875, 1878, 1886, 1894, 1895, 1896, 1897, 1899, 1906, 1911, 1912, 1913, 1914, 1919, 1922, 1923, 1925, 1928, 1934, 1939, 1951, 1953, 1956, 1957, 1958, 1959, 1960], "cpython": [3, 26, 74], "known": [3, 7, 9, 15, 18, 29, 39, 43, 47, 54, 67, 70, 72, 1157, 1158, 1236, 1237, 1292, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1423, 1468, 1482, 1484, 1504, 1563, 1605, 1624, 1796, 1797, 1854, 1875, 1894, 1897, 1901, 1909, 1911, 1914, 1917, 1919, 1921, 1934, 1937, 1940, 1951, 1954], "quit": [3, 7, 22, 25, 74, 1899, 1924, 1926, 1941, 1949], "noisi": 3, "higher": [3, 7, 8, 15, 41, 43, 66, 67, 72, 75, 80, 83, 169, 909, 910, 923, 1000, 1040, 1051, 1086, 1152, 1158, 1162, 1181, 1198, 1350, 1389, 1445, 1460, 1602, 1740, 1841, 1886, 1894, 1922, 1924, 1925, 1927, 1929, 1935, 1944, 1945, 1949, 1956], "filter": [3, 29, 560, 788, 789, 790, 1218, 1240, 1381, 1382, 1383, 1384, 1385, 1386, 1527, 1528, 1529, 1530, 1531, 1532, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1836, 1899, 1941], "rather": [3, 8, 9, 12, 13, 16, 19, 20, 33, 43, 51, 53, 62, 66, 74, 75, 83, 795, 801, 933, 958, 1219, 1222, 1292, 1353, 1517, 1552, 1563, 1621, 1641, 1788, 1896, 1899, 1913, 1914, 1920, 1922, 1924, 1925, 1937, 1941, 1944, 1949, 1953, 1958], "unicod": [3, 1900], "dictionari": [3, 23, 33, 40, 41, 49, 70, 74, 696, 808, 809, 810, 813, 831, 832, 833, 854, 855, 856, 870, 874, 880, 968, 1051, 1150, 1160, 1221, 1222, 1228, 1232, 1236, 1237, 1292, 1293, 1396, 1397, 1453, 1454, 1463, 1543, 1656, 1687, 1898, 1900, 1924, 1930, 1937, 1940, 1949, 1958, 1962, 1964], "lookup": [3, 20, 22, 45, 49, 1396, 1543, 1896, 1900, 1921, 1950], "map": [3, 16, 20, 28, 33, 43, 49, 51, 57, 58, 60, 61, 66, 71, 72, 74, 75, 83, 700, 751, 808, 809, 813, 815, 830, 831, 833, 855, 856, 870, 871, 872, 873, 874, 880, 901, 949, 1151, 1162, 1174, 1183, 1228, 1231, 1292, 1293, 1384, 1385, 1386, 1392, 1393, 1394, 1398, 1400, 1449, 1450, 1451, 1454, 1463, 1538, 1539, 1540, 1545, 1640, 1656, 1740, 1742, 1872, 1873, 1886, 1900, 1913, 1915, 1919, 1923, 1924, 1925, 1931, 1936, 1941, 1944, 1947, 1949, 1950, 1951, 1955, 1960, 1964], "agnost": [3, 35, 60, 987, 988, 989, 990, 991, 992, 993, 1552, 1913], "reliabl": [3, 21], "warrant": 3, "except": [3, 5, 7, 9, 13, 16, 25, 28, 33, 43, 44, 48, 49, 51, 52, 53, 57, 61, 66, 73, 74, 599, 603, 604, 633, 700, 709, 711, 712, 715, 776, 901, 924, 925, 955, 962, 966, 999, 1009, 1011, 1039, 1052, 1086, 1092, 1094, 1140, 1141, 1160, 1162, 1184, 1221, 1228, 1236, 1238, 1242, 1276, 1292, 1308, 1318, 1320, 1321, 1323, 1326, 1348, 1351, 1353, 1405, 1423, 1453, 1468, 1505, 1589, 1627, 1633, 1641, 1666, 1673, 1674, 1678, 1680, 1737, 1761, 1777, 1814, 1832, 1834, 1835, 1839, 1861, 1881, 1882, 1886, 1887, 1894, 1896, 1898, 1899, 1900, 1901, 1906, 1911, 1914, 1922, 1924, 1930, 1933, 1936, 1941, 1942, 1949, 1951, 1953, 1955, 1956, 1960], "filter_fn": 3, "map_fn": 3, "coalesc": [3, 17, 20, 341, 346, 560, 630, 1008, 1821, 1871, 1897, 1923, 1939, 1953], "finit": [4, 49, 924, 925, 1210, 1211, 1256, 1257, 1267, 1268, 1284, 1310, 1343, 1347, 1369, 1840, 1924, 1927, 1960], "natur": [4, 7, 8, 31, 43, 49, 66, 75, 77, 99, 924, 925, 1249, 1254, 1280, 1294, 1296, 1301, 1361, 1500, 1602, 1927, 1953, 1954], "against": [4, 5, 24, 33, 43, 51, 60, 810, 881, 924, 925, 1122, 1123, 1124, 1128, 1129, 1131, 1163, 1212, 1221, 1236, 1237, 1453, 1459, 1691, 1893, 1899, 1941, 1963], "cprofil": 4, "mode": [4, 8, 14, 15, 16, 17, 18, 19, 21, 29, 40, 41, 43, 45, 49, 60, 62, 71, 72, 74, 240, 241, 762, 763, 788, 789, 790, 795, 801, 802, 803, 831, 833, 839, 842, 875, 876, 905, 907, 910, 911, 912, 917, 918, 919, 920, 924, 968, 995, 1028, 1068, 1069, 1098, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1151, 1154, 1155, 1156, 1157, 1160, 1161, 1169, 1196, 1204, 1205, 1219, 1221, 1222, 1225, 1236, 1238, 1279, 1292, 1322, 1334, 1335, 1371, 1372, 1373, 1381, 1382, 1383, 1397, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1469, 1492, 1505, 1506, 1527, 1528, 1529, 1544, 1552, 1563, 1590, 1621, 1622, 1623, 1634, 1641, 1645, 1678, 1715, 1723, 1739, 1782, 1784, 1785, 1875, 1894, 1897, 1907, 1912, 1917, 1922, 1923, 1925, 1926, 1930, 1939, 1943, 1945, 1946, 1947, 1949, 1961, 1964], "correct": [4, 6, 7, 28, 41, 43, 44, 45, 49, 60, 224, 225, 228, 240, 571, 596, 619, 620, 631, 913, 925, 986, 1115, 1117, 1125, 1126, 1127, 1195, 1219, 1222, 1236, 1237, 1256, 1390, 1407, 1419, 1624, 1633, 1666, 1787, 1834, 1835, 1881, 1882, 1895, 1896, 1897, 1898, 1912, 1913, 1922, 1924, 1927, 1955], "launch": [4, 12, 19, 33, 40, 46, 51, 52, 53, 58, 59, 60, 63, 73, 998, 1633, 1894, 1919, 1921, 1922, 1923, 1924, 1949], "spent": [4, 17, 25, 29, 43, 934, 1721, 1921, 1930], "appear": [4, 27, 41, 43, 49, 74, 870, 1040, 1094, 1135, 1136, 1162, 1292, 1326, 1328, 1629, 1634, 1761, 1790, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1886, 1896, 1899, 1912, 1913, 1924, 1925, 1930, 1937, 1941], "extrem": [4, 16, 20, 1633, 1919, 1937], "expens": [4, 15, 17, 22, 24, 29, 40, 49, 66, 1640, 1922, 1927, 1929, 1943, 1949, 1959], "bound": [4, 15, 16, 29, 34, 41, 43, 66, 498, 811, 952, 963, 1108, 1109, 1221, 1366, 1367, 1368, 1446, 1447, 1448, 1453, 1471, 1552, 1723, 1754, 1775, 1899, 1900, 1917, 1919, 1941, 1944, 1954], "greater": [4, 43, 60, 75, 76, 310, 633, 696, 944, 957, 958, 963, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1165, 1177, 1275, 1338, 1369, 1501, 1552, 1563, 1589, 1602, 1621, 1641, 1674, 1875, 1897, 1919, 1922, 1934, 1939, 1953, 1954], "spend": [4, 7, 22, 1293], "sens": [4, 18, 49, 60, 74, 1656, 1872, 1873, 1899, 1919], "respons": [4, 7, 9, 16, 43, 45, 47, 49, 51, 57, 62, 66, 73, 998, 1441, 1570, 1633, 1919, 1922, 1924, 1925, 1930, 1949], "Of": [4, 1679, 1893, 1923, 1924], "cours": [4, 17, 20, 74, 1893, 1923, 1924, 1949], "realiti": 4, "complic": [4, 16, 41, 74, 809, 1903, 1913, 1920, 1941, 1949, 1951], "depend": [4, 5, 12, 13, 15, 16, 17, 19, 20, 23, 27, 28, 33, 40, 43, 47, 49, 51, 60, 61, 62, 66, 74, 333, 801, 894, 1006, 1053, 1057, 1071, 1072, 1115, 1117, 1125, 1126, 1127, 1152, 1156, 1161, 1232, 1236, 1256, 1257, 1284, 1310, 1315, 1369, 1370, 1387, 1389, 1397, 1400, 1413, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1504, 1505, 1517, 1524, 1525, 1535, 1544, 1552, 1564, 1587, 1595, 1602, 1621, 1624, 1633, 1645, 1646, 1652, 1687, 1715, 1727, 1729, 1746, 1762, 1822, 1823, 1824, 1826, 1827, 1840, 1863, 1889, 1893, 1896, 1898, 1899, 1906, 1911, 1919, 1921, 1922, 1924, 1925, 1927, 1930, 1932, 1937, 1943, 1944, 1949, 1953, 1959, 1960], "could": [4, 5, 7, 8, 13, 17, 18, 23, 29, 40, 43, 49, 51, 60, 71, 73, 74, 599, 600, 601, 603, 604, 970, 1033, 1115, 1117, 1125, 1126, 1127, 1218, 1251, 1292, 1310, 1334, 1335, 1714, 1817, 1872, 1898, 1899, 1906, 1911, 1919, 1922, 1923, 1936, 1937, 1941, 1944, 1945, 1949, 1950, 1951, 1953, 1957, 1958], "account": [4, 12, 58, 74, 1633, 1917, 1921, 1953], "heavili": [4, 1699, 1921, 1924, 1941], "similarli": [4, 7, 12, 16, 19, 73, 74, 776, 806, 810, 874, 959, 1114, 1221, 1276, 1453, 1500, 1629, 1630, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1864, 1865, 1866, 1867, 1898, 1919, 1924, 1926, 1927, 1933, 1953], "platform": [4, 8, 9, 33, 43, 52, 53, 57, 1267, 1268, 1279, 1739, 1840, 1907, 1928, 1933, 1934, 1944], "startup": 4, "slower": [4, 16, 33, 43, 892, 918, 1134, 1135, 1136, 1250, 1257, 1571, 1640, 1924, 1934, 1940, 1954], "rerun": [5, 43, 1922], "segment": [5, 17, 23, 1051, 1147, 1484, 1941], "persist": [5, 12, 16, 22, 38, 45, 66, 776, 831, 832, 833, 1221, 1405, 1423, 1453, 1468, 1922, 1930, 1935, 1936], "rng": [5, 40, 1026, 1065, 1776, 1922, 1934, 1948], "advanc": [5, 17, 34, 40, 41, 51, 1496, 1498, 1500, 1679, 1688, 1878, 1903, 1906, 1913, 1922, 1924, 1928, 1932, 1957, 1958], "juggl": 5, "dropout": [5, 48, 74, 750, 751, 776, 1221, 1365, 1392, 1393, 1394, 1398, 1405, 1423, 1453, 1459, 1468, 1469, 1496, 1498, 1500, 1518, 1538, 1539, 1540, 1545, 1602, 1894, 1897, 1907, 1913, 1914, 1919, 1922, 1939, 1946], "moder": 5, "hit": [5, 8, 12, 17, 22, 29, 33, 1633, 1893, 1922], "preserve_rng_st": 5, "checkpoint_sequenti": [5, 1894], "omit": [5, 33, 43, 61, 1128, 1129, 1131, 1407, 1467, 1936, 1937, 1949, 1960], "exclud": [5, 9, 14, 41, 60, 74, 974, 1183, 1397, 1544, 1592, 1691, 1864, 1865, 1866, 1867, 1919, 1928, 1941, 1950], "_infer_device_typ": 5, "remain": [5, 8, 49, 60, 74, 1328, 1396, 1397, 1543, 1544, 1624, 1633, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1740, 1762, 1909, 1911, 1918, 1926, 1930], "consequ": [5, 71, 1284, 1423, 1840, 1899, 1919, 1922, 1932, 1934], "random": [5, 17, 29, 49, 51, 60, 61, 67, 74, 99, 107, 173, 776, 908, 938, 1026, 1027, 1032, 1041, 1042, 1061, 1062, 1065, 1066, 1155, 1162, 1173, 1197, 1293, 1313, 1332, 1333, 1337, 1339, 1365, 1376, 1398, 1405, 1423, 1471, 1545, 1595, 1600, 1624, 1641, 1647, 1653, 1654, 1661, 1662, 1681, 1729, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1776, 1789, 1841, 1878, 1886, 1893, 1894, 1897, 1905, 1917, 1925, 1927, 1933, 1937, 1939, 1958], "gradient": [5, 17, 25, 31, 40, 41, 43, 47, 49, 66, 67, 70, 169, 240, 241, 308, 353, 504, 511, 529, 711, 712, 896, 905, 907, 909, 911, 912, 913, 914, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 929, 930, 939, 965, 1098, 1150, 1151, 1152, 1153, 1157, 1162, 1163, 1196, 1221, 1256, 1257, 1260, 1267, 1268, 1284, 1293, 1310, 1312, 1318, 1321, 1323, 1369, 1376, 1384, 1385, 1386, 1389, 1390, 1396, 1397, 1407, 1421, 1422, 1453, 1460, 1484, 1535, 1536, 1543, 1544, 1554, 1563, 1571, 1573, 1574, 1587, 1621, 1622, 1623, 1629, 1630, 1633, 1634, 1637, 1638, 1640, 1645, 1678, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1713, 1714, 1727, 1785, 1821, 1840, 1886, 1894, 1896, 1897, 1906, 1913, 1914, 1917, 1922, 1923, 1924, 1926, 1927, 1930, 1933, 1939, 1940, 1949, 1950, 1953], "among": [5, 16, 40, 41, 43, 47, 49, 60, 1007, 1008, 1011, 1183, 1390, 1681, 1899, 1932], "detect": [5, 15, 17, 29, 33, 36, 37, 40, 43, 44, 51, 53, 66, 917, 918, 919, 920, 921, 922, 968, 1151, 1225, 1497, 1499, 1633, 1875, 1894, 1911, 1914, 1922, 1927, 1933, 1937, 1941, 1949], "priorit": [5, 1154, 1155, 1157, 1696, 1697, 1953], "defaultdevicetyp": 5, "anticip": 5, "belong": [5, 20, 28, 43, 45, 47, 49, 57, 74, 952, 1000, 1711, 1893, 1922, 1940, 1964], "use_reentr": 5, "context_fn": 5, "noop_context_fn": 5, "determinism_check": 5, "techniqu": [5, 11, 20, 29, 74, 1391, 1647, 1861, 1915, 1930, 1940, 1942, 1944], "intermedi": [5, 15, 16, 33, 50, 71, 74, 949, 1145, 1151, 1158, 1310, 1397, 1496, 1498, 1500, 1544, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1896, 1899, 1922, 1924, 1925, 1926, 1933, 1963], "entir": [5, 7, 13, 14, 15, 16, 17, 20, 21, 29, 33, 40, 43, 51, 61, 74, 713, 924, 925, 1151, 1174, 1392, 1393, 1394, 1398, 1416, 1417, 1418, 1425, 1538, 1539, 1540, 1545, 1633, 1651, 1653, 1677, 1899, 1914, 1919, 1922, 1924, 1925, 1926, 1929, 1930, 1937, 1941, 1944, 1949, 1951, 1953], "graph": [5, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 26, 43, 45, 49, 66, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 97, 98, 158, 169, 240, 241, 696, 763, 808, 809, 831, 832, 833, 839, 842, 909, 915, 923, 968, 970, 995, 1030, 1035, 1040, 1151, 1221, 1224, 1225, 1230, 1232, 1236, 1633, 1687, 1688, 1691, 1696, 1697, 1894, 1899, 1905, 1907, 1915, 1918, 1923, 1924, 1927, 1930, 1931, 1937, 1941, 1945, 1946, 1947, 1949, 1950, 1951, 1953, 1958, 1963], "recomput": [5, 15, 915, 1505, 1563, 1677, 1940], "refer": [5, 13, 20, 21, 23, 29, 33, 40, 41, 43, 44, 45, 47, 49, 52, 55, 56, 60, 61, 66, 67, 73, 99, 101, 272, 750, 751, 772, 780, 808, 809, 810, 835, 836, 837, 840, 841, 842, 875, 889, 894, 909, 950, 1033, 1038, 1097, 1147, 1169, 1170, 1202, 1209, 1221, 1224, 1232, 1239, 1252, 1273, 1277, 1290, 1293, 1376, 1407, 1453, 1502, 1517, 1525, 1534, 1552, 1563, 1620, 1633, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1729, 1746, 1782, 1804, 1841, 1875, 1893, 1894, 1897, 1911, 1912, 1914, 1915, 1918, 1919, 1922, 1923, 1924, 1925, 1926, 1927, 1930, 1932, 1934, 1937, 1940, 1945, 1946, 1949, 1950, 1953, 1956, 1957, 1958, 1961], "potenti": [5, 8, 15, 17, 20, 43, 60, 62, 99, 210, 227, 1230, 1266, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1633, 1875, 1898, 1906, 1911, 1919, 1922, 1924, 1941, 1953, 1957], "silent": [5, 19, 1041, 1042, 1061, 1062, 1195, 1236, 1453, 1637, 1638, 1922, 1933, 1937], "consider": [5, 7, 900, 1218, 1397, 1633, 1899, 1921], "limit": [5, 8, 9, 15, 16, 17, 18, 19, 20, 24, 29, 40, 48, 66, 67, 72, 1064, 1151, 1234, 1338, 1376, 1396, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1602, 1633, 1656, 1788, 1894, 1899, 1903, 1911, 1913, 1914, 1919, 1922, 1923, 1930, 1933, 1934, 1935, 1941, 1944, 1947, 1949, 1950, 1953, 1960], "reentrant": [5, 1633], "stop": [5, 18, 49, 51, 60, 61, 62, 881, 1033, 1219, 1293, 1376, 1666, 1723, 1755, 1896, 1899, 1949], "soon": [5, 20, 29, 60, 66, 809, 1919, 1944, 1949, 1951], "set_checkpoint_early_stop": 5, "entireti": 5, "no_grad": [5, 877, 1098, 1152, 1156, 1161, 1196, 1221, 1396, 1453, 1459, 1500, 1634, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1917, 1919, 1930, 1961], "condit": [5, 15, 16, 38, 40, 71, 74, 75, 78, 82, 83, 633, 636, 640, 710, 776, 918, 924, 925, 1218, 1236, 1250, 1252, 1260, 1266, 1267, 1268, 1279, 1284, 1405, 1423, 1468, 1500, 1668, 1673, 1863, 1889, 1895, 1896, 1897, 1898, 1900, 1914, 1919, 1924, 1933, 1942, 1958], "unmet": 5, "particip": [5, 9, 15, 40, 43, 44, 47, 60, 61, 1633, 1950], "wherea": [5, 16, 1276, 1334, 1335, 1348, 1710, 1840, 1899, 1960], "know": [5, 7, 8, 12, 15, 16, 17, 20, 33, 44, 50, 74, 503, 913, 918, 1145, 1151, 1231, 1633, 1896, 1899, 1906, 1918, 1919, 1922, 1924, 1927, 1937, 1941, 1949, 1950, 1951, 1953], "lstm": [5, 779, 1424, 1897, 1922, 1937, 1939, 1944, 1946, 1947, 1958], "hidden": [5, 776, 1160, 1405, 1406, 1423, 1424, 1468, 1470, 1634, 1922, 1958], "correctli": [5, 19, 40, 43, 60, 66, 503, 1151, 1221, 1236, 1453, 1571, 1896, 1898, 1899, 1909, 1913, 1918, 1919, 1923, 1924, 1925, 1932, 1934, 1944, 1949], "entrant": 5, "futur": [5, 8, 9, 15, 17, 41, 43, 45, 51, 60, 61, 64, 71, 74, 308, 339, 529, 533, 573, 696, 703, 809, 831, 832, 833, 842, 877, 915, 958, 959, 968, 979, 980, 994, 995, 997, 998, 1000, 1029, 1030, 1037, 1038, 1040, 1167, 1221, 1224, 1230, 1231, 1234, 1239, 1251, 1262, 1264, 1265, 1266, 1269, 1282, 1310, 1311, 1322, 1393, 1453, 1554, 1576, 1577, 1578, 1625, 1633, 1637, 1674, 1675, 1680, 1699, 1739, 1755, 1836, 1840, 1863, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1905, 1906, 1907, 1909, 1913, 1914, 1921, 1922, 1924, 1935, 1937, 1938, 1940, 1941, 1942, 1943, 1944, 1946, 1949, 1953, 1955, 1959, 1960, 1961, 1963], "turn": [5, 16, 19, 20, 25, 33, 40, 71, 74, 696, 889, 968, 1209, 1236, 1497, 1499, 1822, 1823, 1824, 1825, 1826, 1827, 1906, 1919, 1922, 1933, 1934, 1937, 1943, 1944, 1950, 1953], "open": [5, 8, 9, 17, 25, 33, 40, 49, 60, 67, 705, 931, 1144, 1228, 1292, 1315, 1325, 1569, 1896, 1906, 1911, 1914, 1928, 1936, 1937, 1941, 1944, 1949, 1953, 1954], "ran": [5, 17, 23, 29, 37, 66], "sequenti": [5, 17, 25, 29, 40, 47, 66, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 809, 1162, 1221, 1230, 1399, 1453, 1492, 1503, 1642, 1656, 1724, 1886, 1896, 1911, 1914, 1922, 1930, 1937, 1940, 1942, 1944, 1963], "func": [5, 43, 48, 69, 71, 74, 75, 77, 878, 908, 910, 914, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 1196, 1224, 1236, 1237, 1675, 1878, 1886, 1894, 1899, 1918, 1949, 1951, 1964], "compris": [5, 61], "chunk": [5, 40, 43, 45, 66, 955, 1011, 1156, 1390, 1633, 1828, 1896, 1897, 1912, 1939, 1940, 1942, 1949, 1953, 1957], "input_var": [5, 1390], "person": [6, 7, 9], "land": [6, 9, 10, 24], "six": [6, 1383], "commit": [6, 7, 9, 24, 33, 67, 1893, 1894, 1933, 1934], "repositori": [6, 9, 70, 74, 1893, 1932], "submit": [6, 9, 24, 997, 998, 1000, 1922, 1934], "month": [6, 9], "qualifi": [6, 43, 48, 57, 74, 696, 1221, 1453, 1905, 1941], "pr": [6, 7, 1729, 1841, 1963], "interest": [6, 7, 9, 14, 16, 18, 19, 21, 22, 25, 1919, 1925, 1927, 1930], "merge_rul": 6, "vote": [6, 9], "decis": [6, 15, 45, 51, 60, 62, 74, 1236, 1906, 1918], "criteria": [6, 9, 1293], "approv": [6, 9], "Not": [6, 20, 61, 1351, 1500, 1896, 1898, 1899, 1900, 1924, 1939, 1944, 1949], "busi": [6, 9, 22], "dai": [6, 7, 16, 24], "contributor": [6, 7, 8, 9], "seen": [6, 20, 37, 49, 74, 240, 955, 968, 1322, 1384, 1385, 1386, 1484, 1576, 1577, 1578, 1723, 1896, 1906, 1919, 1922, 1937, 1953], "thumb": [6, 43], "acceler": [7, 12, 17, 41, 1371, 1372, 1373, 1492, 1693, 1928], "deep": [7, 9, 11, 15, 17, 26, 29, 74, 1371, 1372, 1373, 1395, 1492, 1709, 1894, 1917, 1930, 1944], "neural": [7, 8, 15, 34, 74, 1365, 1376, 1391, 1398, 1407, 1419, 1452, 1453, 1460, 1465, 1466, 1480, 1482, 1496, 1498, 1500, 1582, 1605, 1643, 1707, 1715, 1721, 1896, 1898, 1899, 1917, 1922, 1924, 1933, 1937, 1944], "tape": [7, 12], "system": [7, 8, 15, 25, 33, 34, 36, 40, 61, 71, 74, 961, 975, 1174, 1228, 1252, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1281, 1282, 1283, 1287, 1292, 1311, 1338, 1496, 1498, 1500, 1633, 1643, 1645, 1784, 1863, 1900, 1905, 1909, 1919, 1921, 1922, 1929, 1930, 1932, 1936, 1941, 1949], "organ": [7, 17, 20, 1923, 1929, 1941], "govern": [7, 8, 1894, 1944], "technic": [7, 9, 15, 21, 60, 66, 74, 1221, 1453, 1629, 1630, 1894, 1919, 1926, 1932, 1941], "md": [7, 74, 808, 1941], "healthi": [7, 51, 60], "team": [7, 43, 67, 99, 100, 102, 1935, 1942], "commun": [7, 8, 9, 17, 19, 21, 44, 45, 47, 51, 60, 62, 66, 696, 1633, 1919, 1923, 1949, 1950], "project": [7, 28, 45, 1322, 1423, 1459, 1645, 1729, 1893, 1928], "ve": [7, 16, 17, 20, 21, 69, 70, 71, 74, 1225, 1878, 1906, 1911, 1919, 1925, 1950, 1958], "come": [7, 8, 9, 20, 23, 40, 48, 49, 50, 57, 60, 67, 71, 968, 1094, 1145, 1151, 1292, 1392, 1393, 1394, 1398, 1419, 1689, 1903, 1907, 1923, 1925, 1929, 1941, 1949, 1951, 1953], "peopl": [7, 19, 22, 1919, 1944], "scratch": [7, 29, 1919], "itch": 7, "acquaint": 7, "tip": [7, 17, 1922], "tracker": [7, 1293], "confirm": [7, 17, 23, 1893, 1896, 1924, 1937, 1949, 1951], "tend": [7, 919, 1875], "bootcamp": 7, "1hr": 7, "although": [7, 8, 25, 28, 48, 49, 71, 74, 1384, 1385, 1386, 1453, 1461, 1633, 1894, 1899, 1918, 1924, 1933, 1942, 1944], "join": [7, 41, 43, 47, 60, 61, 73, 74, 1633, 1893, 1894, 1900, 1911, 1919, 1923, 1932, 1939, 1959], "u": [7, 8, 15, 17, 20, 22, 29, 67, 72, 74, 75, 776, 917, 959, 960, 961, 1257, 1259, 1263, 1267, 1268, 1284, 1310, 1312, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1405, 1406, 1423, 1424, 1438, 1440, 1468, 1470, 1471, 1492, 1503, 1645, 1729, 1840, 1841, 1895, 1896, 1897, 1906, 1913, 1917, 1919, 1922, 1923, 1924, 1925, 1930, 1941, 1943, 1953, 1957, 1958], "dev": [7, 10, 26, 29, 52, 57], "happi": 7, "research": [7, 8, 9, 1633, 1893, 1919, 1927, 1935], "partner": 7, "speed": [7, 8, 20, 21, 33, 47, 66, 1006, 1094, 1150, 1212, 1225, 1230, 1284, 1361, 1459, 1840, 1919, 1921, 1922, 1923, 1924, 1926, 1928, 1933, 1944, 1949], "reach": [7, 8, 9, 14, 40, 41, 43, 44, 51, 60, 67, 1293, 1633, 1712, 1715, 1718, 1719, 1919, 1924, 1932, 1942, 1944, 1945, 1949], "design": [7, 9, 15, 17, 19, 26, 29, 40, 49, 57, 60, 67, 70, 71, 72, 924, 925, 1221, 1240, 1453, 1687, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1851, 1893, 1894, 1895, 1909, 1922, 1924, 1928, 1930, 1941], "comment": [7, 22, 74, 1677, 1779, 1899, 1900, 1924, 1956, 1958], "crack": 7, "usual": [7, 11, 16, 22, 33, 40, 41, 45, 60, 61, 66, 74, 100, 103, 498, 847, 848, 849, 850, 857, 909, 917, 919, 923, 1162, 1392, 1393, 1394, 1398, 1413, 1416, 1417, 1418, 1419, 1624, 1633, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1886, 1896, 1899, 1914, 1918, 1919, 1921, 1922, 1924, 1926, 1929, 1940, 1945, 1947, 1949, 1958, 1964], "idea": [7, 17, 29, 67, 1094, 1361, 1633, 1922, 1929, 1937, 1950], "rfc": [7, 1919, 1944, 1950], "big": [7, 16, 22, 1696, 1697, 1700, 1706, 1707, 1822, 1823, 1824, 1825, 1826, 1827, 1940, 1944], "post": [7, 8, 16, 26, 29, 44, 45, 47, 66, 872, 873, 877, 1221, 1453, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1894, 1903, 1919, 1923, 1924, 1926, 1936, 1953], "standard": [7, 33, 37, 41, 49, 53, 54, 58, 71, 74, 103, 370, 395, 605, 1114, 1365, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1419, 1425, 1492, 1498, 1500, 1681, 1729, 1752, 1798, 1803, 1834, 1835, 1898, 1900, 1914, 1917, 1921, 1922, 1932, 1933, 1937, 1938, 1941, 1954], "lot": [7, 15, 16, 19, 20, 21, 22, 33, 40, 1911, 1919, 1922, 1927, 1932, 1941, 1942, 1948, 1950, 1958], "boil": 7, "mostli": [7, 49, 1219, 1633, 1922, 1953, 1964], "evid": 7, "peer": [7, 43, 47, 60, 66, 1004, 1633, 1922, 1949], "paper": [7, 9, 41, 49, 776, 1361, 1365, 1371, 1372, 1373, 1375, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1395, 1398, 1401, 1402, 1405, 1408, 1411, 1416, 1417, 1418, 1425, 1459, 1465, 1466, 1471, 1480, 1484, 1492, 1496, 1498, 1500, 1501, 1502, 1547, 1548, 1557, 1696, 1697, 1708, 1715, 1721, 1927, 1942], "framework": [7, 8, 9, 49, 57, 67, 73, 776, 1002, 1330, 1405, 1633, 1640, 1709, 1788, 1894, 1931, 1942, 1944, 1950, 1951], "bit": [7, 19, 20, 22, 74, 107, 348, 475, 777, 779, 781, 835, 836, 837, 838, 841, 843, 874, 941, 944, 979, 980, 1147, 1201, 1763, 1764, 1776, 1805, 1922, 1930, 1933, 1936, 1944, 1947, 1948, 1953, 1956, 1959, 1965], "accept": [7, 9, 29, 40, 43, 45, 48, 66, 67, 68, 70, 72, 169, 529, 818, 905, 906, 907, 908, 909, 914, 923, 958, 1037, 1040, 1146, 1162, 1183, 1221, 1225, 1389, 1453, 1460, 1481, 1500, 1652, 1666, 1667, 1673, 1692, 1780, 1817, 1831, 1886, 1899, 1913, 1922, 1924, 1925, 1937, 1940, 1949, 1956, 1958], "overwhelm": [7, 17, 29, 1949], "newli": [7, 20, 66, 74, 1108, 1109, 1396, 1397, 1741, 1742, 1903], "publish": [7, 9, 52, 57, 60, 1293, 1894], "ground": [7, 9, 1389, 1535, 1958], "break": [7, 12, 14, 15, 18, 20, 22, 23, 49, 64, 69, 74, 696, 909, 968, 970, 1221, 1266, 1453, 1768, 1788, 1894, 1900, 1905, 1923, 1940, 1953], "becom": [7, 8, 9, 17, 20, 29, 40, 43, 49, 74, 308, 776, 892, 1174, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1405, 1423, 1438, 1458, 1468, 1481, 1535, 1552, 1624, 1713, 1813, 1861, 1906, 1907, 1919, 1923, 1924, 1937, 1941, 1943, 1949], "refactor": [7, 18, 74, 1936, 1944], "coordin": [7, 17, 29, 43, 45, 49, 51, 599, 602, 900, 1174, 1183, 1322, 1733, 1825, 1865, 1867, 1919, 1953, 1958], "pace": 7, "branch": [7, 15, 24, 74, 75, 78, 80, 82, 83, 1893, 1898, 1899, 1922], "fast": [7, 8, 16, 19, 22, 40, 43, 924, 1395, 1416, 1417, 1418, 1484, 1500, 1602, 1721, 1727, 1746, 1768, 1783, 1894, 1921, 1922, 1924, 1928, 1940, 1949, 1953, 1956, 1957], "definit": [7, 8, 20, 40, 43, 44, 49, 56, 74, 100, 959, 960, 961, 986, 1037, 1142, 1241, 1250, 1251, 1293, 1419, 1564, 1609, 1680, 1759, 1861, 1893, 1896, 1898, 1900, 1918, 1919, 1924, 1927, 1941, 1944, 1958, 1960], "fundament": [7, 16, 71, 1898, 1930, 1949, 1953], "cut": [7, 17], "guidanc": [7, 9, 15, 34, 68, 1942], "stage": [7, 29, 37, 41, 47, 57, 66, 73, 1894, 1906, 1914, 1942, 1951], "piec": [7, 20, 1905, 1914, 1950], "advic": 7, "readi": [7, 12, 21, 33, 73, 877, 878, 937, 946, 1178, 1179, 1633, 1896, 1923, 1949, 1950], "draft": 7, "convert": [7, 20, 28, 29, 40, 43, 48, 49, 50, 66, 70, 74, 97, 169, 596, 600, 601, 602, 603, 604, 751, 804, 805, 806, 808, 809, 810, 831, 832, 833, 854, 855, 870, 873, 874, 875, 895, 896, 954, 967, 1078, 1114, 1145, 1221, 1290, 1453, 1463, 1464, 1492, 1499, 1624, 1635, 1636, 1639, 1676, 1687, 1689, 1691, 1710, 1741, 1742, 1747, 1822, 1823, 1824, 1825, 1826, 1827, 1896, 1897, 1898, 1899, 1914, 1924, 1928, 1937, 1938, 1944, 1947, 1953, 1958, 1960, 1963], "press": [7, 74], "button": [7, 24], "prepend": [7, 33, 40, 43, 47, 74, 248, 1086, 1221, 1315, 1453, 1857, 1897, 1920], "titl": [7, 1939, 1943], "wip": 7, "progress": [7, 43, 47, 51, 61, 63, 997, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1880, 1893, 1908], "ci": [7, 24, 1894], "folk": 7, "who": [7, 8, 9, 20, 21, 31, 60, 75, 1941], "regularli": 7, "queue": [7, 51, 62, 1911, 1958], "everyth": [7, 15, 17, 20, 22, 29, 40, 49, 70, 75, 1896, 1911, 1941], "happen": [7, 9, 12, 20, 21, 43, 45, 47, 49, 51, 53, 60, 66, 71, 74, 103, 623, 807, 830, 1151, 1492, 1633, 1640, 1712, 1718, 1719, 1725, 1840, 1894, 1909, 1911, 1919, 1922, 1923, 1924, 1925, 1926, 1931, 1932, 1936, 1937, 1944, 1949, 1957], "subsystem": [7, 31, 67, 72, 970, 1894, 1924], "patch": [7, 18, 68, 1400, 1504, 1876], "feel": [7, 1914, 1937, 1953], "ll": [7, 13, 16, 22, 25, 71, 74, 776, 836, 837, 877, 878, 959, 1040, 1250, 1405, 1406, 1423, 1424, 1906, 1919, 1922, 1924, 1925, 1932, 1937, 1944, 1950], "round": [7, 40, 43, 75, 77, 83, 524, 681, 682, 815, 818, 836, 881, 982, 984, 1051, 1089, 1115, 1116, 1117, 1121, 1125, 1126, 1127, 1142, 1266, 1279, 1505, 1563, 1739, 1740, 1759, 1808, 1895, 1897, 1899, 1912, 1922, 1939, 1944, 1947, 1953, 1954], "trip": [7, 74, 1115, 1116, 1117, 1121, 1125, 1126, 1127], "noth": [7, 33, 51, 74, 696, 1031, 1645, 1696, 1697, 1724, 1896, 1898, 1951], "accompani": [7, 98], "solut": [7, 8, 71, 1265, 1266, 1270, 1278, 1281, 1283, 1287, 1369, 1633, 1863, 1896, 1897, 1917, 1918, 1926, 1932], "think": [7, 9, 16, 17, 18, 74, 75, 1710, 1896, 1898, 1919, 1940, 1941, 1951], "confid": [7, 18, 1958], "ahead": [7, 15, 17, 1894, 1944], "search": [7, 13, 16, 24, 29, 31, 41, 835, 952, 1411, 1557, 1633, 1691, 1746, 1775, 1896, 1912, 1913, 1937, 1941, 1953], "repo": [7, 75, 1715, 1893, 1924, 1936], "unabl": [7, 27, 29, 71, 97, 1937, 1940], "similar": [7, 9, 15, 16, 17, 20, 23, 29, 40, 43, 49, 57, 66, 71, 73, 74, 509, 531, 728, 729, 730, 731, 732, 733, 736, 746, 747, 748, 749, 761, 762, 772, 780, 818, 893, 908, 949, 954, 967, 968, 1140, 1141, 1221, 1387, 1388, 1400, 1413, 1416, 1417, 1418, 1453, 1501, 1534, 1666, 1680, 1681, 1710, 1733, 1761, 1768, 1817, 1851, 1857, 1873, 1898, 1899, 1911, 1912, 1914, 1919, 1921, 1922, 1924, 1925, 1927, 1933, 1937, 1941, 1942, 1944, 1949, 1950, 1953, 1954, 1959, 1965], "reproduc": [7, 17, 29, 40, 71, 331, 339, 531, 533, 939, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1449, 1450, 1451, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1544, 1552, 1563, 1590, 1602, 1621, 1622, 1623, 1624, 1875, 1893, 1894, 1940, 1941], "problemat": [7, 40, 74, 1896, 1933, 1945], "insight": [7, 37], "individu": [7, 9, 12, 19, 22, 24, 33, 40, 41, 43, 45, 47, 66, 74, 98, 260, 696, 808, 854, 855, 959, 1060, 1112, 1130, 1221, 1376, 1453, 1492, 1633, 1687, 1899, 1912, 1918, 1919, 1922, 1924, 1929, 1933, 1934, 1937, 1947, 1949, 1960], "intent": [7, 23, 58, 60, 66, 71, 1780, 1906, 1941], "lock": [7, 40, 43, 47, 49, 1919, 1922, 1932, 1941, 1950], "strike": 7, "convers": [7, 16, 28, 475, 596, 599, 809, 953, 1206, 1666, 1894, 1900, 1924, 1928, 1937, 1944, 1945, 1953], "medium": [7, 66, 1783], "prioriti": [7, 9, 10, 43, 696, 870, 1000, 1898, 1935], "entranc": [7, 1922], "great": [7, 12, 15, 1919, 1927], "deal": [7, 8, 15, 16, 20, 22, 40, 51, 62, 1856, 1911, 1926, 1949], "welcom": [7, 1914, 1940, 1953], "aim": [7, 1925, 1953], "rare": [7, 15, 18, 1918, 1937, 1964], "typo": 7, "send": [7, 16, 19, 40, 43, 51, 62, 1033, 1624, 1633, 1911, 1923, 1932, 1936, 1939, 1943, 1949, 1950, 1951, 1961, 1963], "forum": [7, 9, 1926, 1932], "share": [7, 10, 12, 18, 33, 40, 44, 47, 49, 50, 60, 61, 66, 71, 240, 329, 358, 475, 500, 536, 540, 633, 875, 895, 896, 913, 924, 925, 968, 995, 997, 1029, 1033, 1145, 1146, 1147, 1191, 1268, 1352, 1353, 1390, 1633, 1643, 1681, 1757, 1771, 1831, 1854, 1860, 1874, 1897, 1918, 1919, 1921, 1932, 1935, 1936, 1937, 1949, 1953, 1955, 1957, 1962], "resolv": [7, 8, 9, 15, 45, 49, 74, 97, 98, 1221, 1384, 1385, 1386, 1400, 1450, 1453, 1898, 1899, 1900, 1936, 1941, 1955, 1964], "challeng": [7, 17, 43, 1950], "feedback": [7, 29, 37, 41, 66, 67, 1633, 1894, 1953], "direct": [7, 9, 20, 28, 31, 43, 776, 808, 1135, 1136, 1221, 1405, 1423, 1453, 1468, 1677, 1708, 1729, 1746, 1767, 1919, 1922, 1924, 1930, 1949], "yourself": [7, 17, 69, 995, 1876, 1924, 1930, 1932, 1964], "problem": [7, 15, 17, 21, 29, 40, 43, 60, 71, 75, 1094, 1236, 1266, 1278, 1293, 1389, 1460, 1517, 1779, 1911, 1919, 1922, 1926, 1927, 1932, 1936, 1942, 1944, 1945, 1951, 1956], "area": [7, 9, 1563, 1930, 1944, 1954], "appreci": 7, "strive": 7, "respond": [7, 43], "quickli": [7, 8, 19, 41, 60], "ey": [7, 49, 210, 227, 960, 1162, 1241, 1250, 1261, 1272, 1275, 1278, 1279, 1286, 1287, 1640, 1739, 1818, 1886, 1897, 1901, 1924, 1939], "everyon": [7, 51, 60], "touch": [7, 58, 74], "versu": [7, 1457], "write": [7, 8, 9, 15, 17, 19, 21, 22, 29, 35, 37, 40, 43, 45, 48, 51, 53, 57, 58, 59, 60, 66, 71, 72, 97, 98, 272, 529, 713, 950, 970, 1146, 1162, 1198, 1231, 1251, 1262, 1263, 1264, 1268, 1269, 1282, 1620, 1688, 1771, 1863, 1875, 1886, 1894, 1898, 1909, 1913, 1922, 1925, 1926, 1927, 1940, 1941, 1953, 1958], "blog": [7, 8, 1903, 1923, 1924, 1944, 1953], "around": [7, 9, 12, 20, 27, 29, 31, 43, 49, 70, 71, 73, 74, 169, 640, 909, 923, 992, 995, 997, 998, 1000, 1069, 1140, 1141, 1151, 1221, 1633, 1768, 1896, 1911, 1919, 1922, 1937, 1949], "internet": 7, "grow": [7, 8, 19, 74, 1953], "market": [7, 9], "benefit": [7, 8, 29, 43, 74, 863, 1723, 1911, 1922, 1944, 1953], "opinion": [7, 8, 1953], "isn": [7, 16, 40, 74, 475, 1218, 1919, 1922, 1924, 1949, 1960], "categor": [7, 28, 53, 1554, 1894, 1900, 1945, 1949], "aspect": [7, 43, 74, 1924, 1930], "seem": [7, 1937], "unusu": [7, 16], "claim": [7, 1721, 1927], "wast": [7, 1922], "someon": [7, 9, 1219, 1913], "too": [7, 9, 15, 16, 21, 29, 33, 41, 45, 60, 71, 74, 1051, 1150, 1266, 1284, 1349, 1376, 1389, 1453, 1536, 1634, 1675, 1899, 1921, 1926, 1927, 1932, 1933, 1934, 1936, 1937, 1938, 1941, 1942, 1951, 1953], "advisori": 7, "fashion": [7, 40, 43, 62, 531, 1298, 1656, 1896], "rough": [7, 9], "consensu": [7, 9], "corpor": [7, 29], "wrote": [7, 8], "implicitli": [7, 43, 53, 74, 1077, 1166, 1174, 1236, 1237, 1292, 1366, 1367, 1368, 1446, 1447, 1448, 1780, 1861, 1896, 1898, 1899, 1919, 1924, 1928], "lifetim": [7, 16, 1922, 1949], "immedi": [7, 8, 9, 15, 16, 60, 61, 66, 73, 1221, 1224, 1453, 1899, 1930, 1935, 1940, 1949, 1951], "sai": [7, 12, 15, 20, 22, 28, 74, 512, 1154, 1155, 1156, 1221, 1453, 1896, 1918, 1919, 1926, 1941, 1950, 1951, 1953], "bugfix": 7, "Or": [7, 20, 51, 74, 963, 1928, 1931, 1937, 1953], "motiv": [7, 8, 17, 29, 74, 751, 1930, 1950], "ye": [7, 1937, 1940, 1953], "knuth": 7, "bewar": 7, "mere": 7, "proven": [7, 1391, 1633], "ok": [7, 53, 58, 70, 968, 1226, 1951], "sometim": [7, 15, 16, 22, 74, 920, 1051, 1236, 1400, 1504, 1530, 1531, 1532, 1645, 1894, 1899, 1911, 1919, 1922, 1925, 1926, 1930, 1932, 1941, 1956, 1959, 1964], "obvious": [7, 16, 19], "broken": [7, 40, 1051, 1937, 1941], "contrari": [7, 1921], "accident": 7, "put": [7, 9, 16, 18, 27, 40, 43, 51, 70, 73, 74, 337, 1114, 1292, 1408, 1715, 1893, 1897, 1911, 1922, 1932, 1939, 1941, 1950, 1951], "difficulti": [7, 1917], "nonlinearli": 7, "sign": [7, 49, 359, 545, 900, 981, 1082, 1130, 1142, 1147, 1254, 1279, 1280, 1301, 1445, 1708, 1759, 1791, 1805, 1895, 1897, 1912, 1939, 1947, 1953, 1956, 1959, 1960], "split": [7, 25, 40, 43, 74, 633, 788, 789, 790, 875, 877, 878, 955, 962, 1051, 1092, 1184, 1390, 1404, 1405, 1423, 1459, 1468, 1527, 1528, 1529, 1530, 1531, 1532, 1551, 1855, 1887, 1896, 1897, 1912, 1922, 1939, 1941, 1942, 1944, 1949, 1953, 1957], "shippabl": 7, "complet": [7, 11, 18, 20, 24, 25, 27, 33, 40, 43, 45, 51, 52, 58, 60, 62, 71, 73, 503, 696, 877, 970, 993, 997, 998, 1000, 1070, 1150, 1151, 1224, 1232, 1234, 1239, 1251, 1279, 1334, 1335, 1340, 1517, 1633, 1642, 1675, 1739, 1894, 1898, 1899, 1900, 1905, 1911, 1918, 1919, 1922, 1925, 1928, 1934, 1941, 1942, 1949, 1950], "subtl": [7, 16, 17, 29, 1416, 1417, 1418, 1924], "nuanc": [7, 20, 21], "extra": [7, 16, 20, 22, 33, 40, 41, 43, 47, 49, 66, 74, 1094, 1151, 1162, 1221, 1228, 1231, 1266, 1292, 1453, 1460, 1640, 1836, 1886, 1898, 1913, 1919, 1921, 1923, 1924, 1926, 1929, 1941, 1943, 1953, 1960, 1961], "understand": [7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 29, 43, 45, 51, 52, 75, 1151, 1278, 1894, 1903, 1917, 1919, 1922, 1928, 1935, 1943, 1958], "hack": 7, "answer": [7, 10, 16, 74, 840, 1370, 1658], "regress": [7, 12, 23, 1369, 1934], "scrutini": 7, "undertak": 7, "rest": [7, 18, 20, 22, 25, 40, 41, 61, 66, 74, 809, 830, 1147, 1286, 1287, 1855, 1913, 1930, 1934, 1941, 1942, 1944, 1949, 1953], "chanc": [7, 16, 22, 45, 49, 1924], "unrel": [7, 975, 1160, 1918, 1924, 1941], "aid": [7, 29, 74, 1919], "troubleshoot": [7, 43, 1894], "mayb": [7, 16, 1158, 1878], "bracnh": 7, "rebas": 7, "latest": [7, 43, 47, 49, 1652, 1893, 1924, 1928, 1937], "statu": [7, 9, 51, 1310, 1894, 1900, 1911, 1944], "hud": 7, "risk": [7, 8, 66, 1642, 1645], "anyth": [7, 15, 50, 53, 66, 73, 839, 842, 1232, 1710, 1896, 1903, 1914, 1930, 1941], "configur": [7, 15, 17, 24, 25, 29, 32, 40, 41, 43, 51, 52, 57, 60, 61, 62, 66, 804, 805, 808, 809, 813, 830, 831, 832, 833, 839, 842, 854, 855, 856, 859, 861, 864, 874, 875, 876, 877, 878, 968, 1051, 1633, 1666, 1784, 1875, 1894, 1905, 1909, 1922, 1923, 1924, 1934, 1936, 1941, 1947, 1949, 1958, 1960], "riski": 7, "had": [7, 15, 19, 23, 74, 1236, 1624, 1857, 1919, 1925], "beforehand": [7, 17, 73], "hei": 7, "my": [7, 40, 1390, 1929, 1937, 1944], "member": [7, 9, 40, 43, 51, 60, 61, 74, 1221, 1407, 1453, 1549, 1896, 1898, 1899, 1909, 1926, 1943, 1949, 1960, 1961], "sphinx": 7, "folder": [7, 9, 19, 29, 33, 40, 74, 1687, 1691, 1893, 1958], "tree": [7, 53, 70, 968, 1453, 1496, 1691, 1894, 1937, 1941, 1943, 1951], "master": [7, 43, 63, 808, 1151, 1496, 1893, 1949], "doxygen": 7, "special": [7, 14, 15, 16, 20, 23, 31, 53, 62, 71, 74, 75, 80, 82, 83, 757, 758, 759, 839, 842, 924, 968, 1087, 1101, 1102, 1103, 1105, 1106, 1115, 1117, 1188, 1189, 1190, 1234, 1292, 1306, 1346, 1390, 1500, 1634, 1635, 1636, 1679, 1710, 1734, 1792, 1803, 1807, 1890, 1894, 1900, 1905, 1913, 1922, 1924, 1927, 1929, 1937, 1941, 1944, 1957, 1958], "server": [7, 11, 40, 43, 61, 1225, 1922, 1941, 1944, 1949], "cppdoc": [7, 34], "cpp": [7, 15, 33, 43, 1343, 1923], "accomplish": [7, 17, 45, 1930], "holist": 7, "concept": [7, 18, 71, 74, 1903, 1924, 1925, 1930, 1956], "galleri": 7, "restructur": [7, 1941], "text": [7, 19, 40, 49, 86, 91, 92, 93, 94, 95, 96, 172, 173, 192, 624, 633, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 714, 761, 762, 772, 774, 776, 780, 784, 785, 786, 788, 789, 790, 796, 800, 836, 837, 881, 897, 898, 899, 900, 901, 936, 937, 938, 941, 944, 946, 948, 957, 963, 980, 981, 983, 984, 986, 1089, 1108, 1109, 1138, 1139, 1143, 1144, 1165, 1177, 1178, 1179, 1180, 1187, 1210, 1218, 1241, 1244, 1245, 1246, 1249, 1250, 1257, 1260, 1266, 1270, 1275, 1278, 1284, 1291, 1300, 1307, 1308, 1309, 1310, 1342, 1343, 1354, 1355, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1396, 1398, 1399, 1400, 1401, 1402, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1438, 1439, 1440, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1456, 1457, 1458, 1459, 1460, 1461, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1538, 1539, 1540, 1545, 1548, 1550, 1551, 1552, 1556, 1557, 1567, 1572, 1576, 1577, 1578, 1582, 1587, 1590, 1595, 1596, 1598, 1602, 1603, 1604, 1605, 1608, 1609, 1610, 1612, 1613, 1614, 1638, 1640, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1715, 1732, 1733, 1736, 1739, 1752, 1755, 1758, 1770, 1791, 1793, 1794, 1806, 1808, 1818, 1819, 1829, 1836, 1837, 1840, 1852, 1853, 1889, 1914, 1917, 1927, 1937, 1941, 1947, 1954, 1958, 1960], "rst": 7, "rebuild": [7, 41], "circleci": 7, "shard": [7, 17, 40, 45, 47, 48, 66, 1633], "worker": [7, 33, 40, 41, 43, 44, 47, 51, 52, 53, 54, 60, 62, 63, 66, 1633, 1899, 1934, 1942, 1943, 1949, 1950, 1951], "40": [7, 14, 1174, 1293, 1374, 1416, 1640, 1641, 1664, 1665, 1674, 1677, 1851], "minut": [7, 10, 43, 1958], "netlifi": 7, "noplot": 7, "render": [7, 43, 1958], "notebook": 7, "rebuilt": [7, 41, 47], "deploi": [7, 11, 51, 60, 1894, 1929, 1935, 1941], "action": [7, 43, 49, 51, 54, 74, 1922, 1941, 1943, 1951], "document": [8, 9, 10, 13, 17, 20, 22, 23, 28, 36, 40, 43, 66, 67, 74, 696, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 889, 890, 891, 892, 953, 997, 998, 1000, 1051, 1094, 1166, 1169, 1170, 1202, 1209, 1221, 1334, 1335, 1350, 1361, 1396, 1397, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1453, 1642, 1651, 1660, 1680, 1738, 1765, 1782, 1875, 1893, 1896, 1898, 1899, 1910, 1911, 1912, 1913, 1915, 1918, 1924, 1926, 1930, 1934, 1935, 1937, 1940, 1941, 1944, 1945, 1946, 1949, 1953, 1957, 1961], "develop": [8, 9, 10, 21, 29, 33, 41, 43, 74, 1895, 1898, 1899, 1906, 1910, 1919, 1924, 1929, 1930, 1934, 1941, 1944, 1945, 1949, 1953], "meant": [8, 44, 60, 62, 66, 1666, 1918, 1949], "rule": [8, 9, 16, 33, 43, 49, 74, 75, 82, 83, 100, 101, 102, 169, 876, 908, 909, 952, 953, 1077, 1270, 1281, 1371, 1372, 1373, 1416, 1417, 1418, 1492, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1775, 1861, 1894, 1896, 1898, 1912, 1914, 1919, 1920, 1924, 1927, 1956, 1960], "concern": [8, 25, 40, 66, 1911, 1922, 1937], "disagr": 8, "contribut": [8, 9, 45, 933, 1182, 1183, 1389, 1396, 1397, 1460, 1535, 1543, 1544, 1587, 1633, 1894, 1914, 1924, 1925, 1942], "maintainership": [8, 9], "escal": [8, 9], "hacker": 8, "poster": 8, "amaz": 8, "ml": [8, 19], "obsess": 8, "soumith": [8, 10], "goe": [8, 18, 20, 74, 1147, 1365, 1696, 1697, 1926], "depth": [8, 9, 795, 801, 1055, 1056, 1234, 1368, 1383, 1386, 1448, 1505, 1563, 1621, 1906, 1923, 1930, 1943], "primari": [8, 9, 16, 43, 74, 1230, 1900, 1906, 1953], "goal": [8, 19, 57, 70, 74, 1322, 1906, 1919, 1923, 1927, 1938, 1951], "secondari": 8, "abil": [8, 1771, 1906, 1929, 1937, 1941], "flexibl": [8, 20, 41, 66, 70, 1277, 1633, 1906, 1922, 1924, 1930], "abstract": [8, 12, 20, 35, 40, 41, 44, 45, 49, 51, 60, 62, 926, 927, 928, 929, 930, 1647, 1899, 1923, 1944, 1949], "critic": [8, 17, 18, 20, 60, 696, 1641, 1674, 1909, 1921, 1922], "concret": [8, 15, 16, 20, 49, 63, 70, 74, 801, 816, 840, 857, 968, 1505, 1590, 1621, 1896, 1899, 1922, 1924, 1932], "manner": [8, 51, 529, 917, 919, 1913, 1915, 1920], "jump": [8, 576, 1956], "regim": 8, "ei": 8, "tradeoff": [8, 17, 23, 41, 1944, 1950], "temptat": 8, "impos": [8, 62, 72, 1779, 1911, 1918, 1956], "strict": [8, 917, 918, 919, 920, 921, 922, 1150, 1157, 1221, 1236, 1237, 1453, 1675, 1941, 1958, 1960], "upfront": [8, 15], "simplifi": [8, 15, 41, 73, 1228, 1443, 1641, 1710, 1906, 1919, 1927, 1930, 1940, 1950], "worth": [8, 9, 20, 22, 40, 41, 63, 1151, 1893, 1957], "friction": 8, "compel": 8, "narrow": [8, 17, 29, 1290, 1353, 1710, 1798, 1897, 1899, 1912, 1939, 1946, 1957], "subproblem": 8, "fragment": [8, 29, 1019, 1051, 1903, 1922], "ecosystem": [8, 19, 1929, 1931], "incomprehens": 8, "seamlessli": [8, 1914], "softwar": [8, 1256, 1257, 1284, 1875, 1922, 1928], "experi": [8, 9, 18, 21, 26, 29, 31, 41, 72, 86, 91, 92, 93, 94, 95, 96, 1162, 1482, 1605, 1633, 1886, 1906, 1924, 1958], "rich": [8, 1899], "denomin": [8, 703, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1743], "subset": [8, 40, 43, 47, 61, 1232, 1710, 1895, 1896, 1898, 1899, 1924, 1937, 1947], "borrow": 8, "zen": 8, "implicit": [8, 101, 784, 785, 788, 789, 790, 1166, 1174, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1446, 1447, 1448, 1504, 1519, 1520, 1521, 1527, 1528, 1529, 1576, 1577, 1578, 1727, 1895, 1897, 1899, 1900, 1937, 1941, 1957], "concis": [8, 53, 1949], "interchang": [8, 49, 1707, 1860, 1898, 1928, 1938], "everydai": 8, "english": 8, "movement": [8, 1957], "worri": [8, 1949], "placement": [8, 17, 48, 51, 875, 1624, 1944, 1949], "favor": [8, 20, 43, 801, 802, 803, 959, 970, 1063, 1067, 1221, 1275, 1278, 1310, 1311, 1412, 1453, 1506, 1507, 1621, 1622, 1623, 1625, 1739, 1840, 1863], "practition": 8, "debugg": [8, 17, 29, 1226, 1927], "plug": 8, "ir": [8, 15, 16, 17, 21, 29, 74, 776, 1224, 1225, 1405, 1406, 1691, 1894, 1896, 1899, 1937, 1938], "classic": [8, 1919], "sort": [8, 15, 20, 47, 51, 74, 606, 625, 892, 893, 914, 1094, 1181, 1341, 1361, 1667, 1668, 1679, 1740, 1775, 1858, 1872, 1895, 1897, 1899, 1924, 1926, 1939, 1953], "distribut": [8, 21, 31, 40, 41, 44, 51, 52, 53, 54, 57, 58, 59, 60, 62, 63, 66, 73, 192, 276, 304, 395, 471, 498, 624, 696, 711, 712, 835, 938, 1068, 1343, 1361, 1365, 1389, 1390, 1391, 1392, 1393, 1394, 1398, 1403, 1407, 1419, 1467, 1471, 1492, 1535, 1537, 1538, 1539, 1540, 1545, 1549, 1550, 1554, 1564, 1595, 1633, 1681, 1732, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1894, 1899, 1913, 1914, 1917, 1918, 1922, 1942, 1943, 1945, 1951, 1954, 1958, 1961], "tldr": 8, "resourc": [8, 17, 24, 33, 40, 51, 56, 60, 74, 1899, 1911, 1932, 1953], "characterist": [8, 1841, 1925, 1930], "uniformli": [8, 49, 1750, 1751, 1960], "leak": [8, 909, 915, 1899, 1911, 1919], "smart": [8, 1924, 1941, 1949], "anywai": [8, 1919], "obviou": [8, 16, 1926, 1951], "extens": [8, 16, 17, 29, 33, 37, 43, 45, 48, 49, 1292, 1293, 1687, 1771, 1791, 1894, 1906, 1914, 1918, 1935, 1941, 1953], "unavoid": 8, "latenc": [8, 17, 24, 57, 1921, 1922], "caveat": [8, 13, 23, 29, 66, 1624, 1673, 1906, 1911, 1922, 1930, 1935], "valuabl": 8, "certainli": [8, 1906], "heterogen": [8, 1898], "cluster": [8, 43, 45, 59, 60, 61, 1361, 1958], "focus": [8, 29, 1898, 1899, 1924], "beaten": 8, "space": [8, 9, 40, 49, 788, 789, 790, 1077, 1112, 1114, 1116, 1117, 1123, 1130, 1174, 1183, 1236, 1237, 1291, 1307, 1361, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1419, 1429, 1430, 1431, 1432, 1433, 1434, 1447, 1448, 1504, 1527, 1528, 1529, 1530, 1531, 1532, 1564, 1861, 1897, 1915, 1919, 1927, 1930, 1935], "innov": 8, "ultim": [8, 9, 33, 53, 62, 1923], "evidenc": 8, "began": 8, "bind": [8, 33, 43, 74, 1031, 1899, 1900, 1924, 1941], "monolith": 8, "deepli": 8, "integr": [8, 13, 40, 48, 54, 70, 173, 938, 940, 941, 942, 943, 944, 945, 986, 1077, 1182, 1221, 1244, 1288, 1289, 1352, 1453, 1746, 1758, 1861, 1914, 1924, 1929, 1930, 1940, 1942, 1944, 1954, 1956, 1960], "numpi": [8, 40, 71, 465, 509, 709, 710, 715, 893, 895, 896, 913, 1089, 1091, 1092, 1094, 1112, 1133, 1134, 1135, 1136, 1140, 1141, 1146, 1162, 1184, 1251, 1252, 1262, 1273, 1275, 1276, 1277, 1278, 1279, 1284, 1285, 1288, 1290, 1322, 1327, 1733, 1758, 1761, 1768, 1780, 1788, 1822, 1823, 1824, 1825, 1826, 1827, 1840, 1842, 1843, 1851, 1854, 1855, 1857, 1883, 1886, 1887, 1906, 1920, 1924, 1925, 1933, 1934, 1936, 1941, 1956, 1957, 1958, 1959, 1960, 1965], "scipi": [8, 956, 1267, 1268, 1592, 1733, 1941, 1952, 1954, 1958], "scikit": [8, 1563], "favorit": 8, "cython": 8, "numba": 8, "reinvent": 8, "wheel": [8, 1936], "year": [8, 1953], "rewrot": 8, "frontend": [8, 17, 34, 70, 74, 1938], "familiar": [8, 17, 28, 34, 74, 1050, 1896, 1919, 1925, 1941, 1944, 1950, 1951], "perhap": [8, 20, 1925], "importantli": [8, 20], "huge": [8, 1841, 1909], "scientif": [8, 1788], "pareto": [8, 1894], "close": [8, 34, 43, 60, 74, 75, 78, 82, 952, 1033, 1210, 1256, 1257, 1283, 1284, 1310, 1370, 1484, 1502, 1525, 1775, 1840, 1863, 1909, 1919, 1924, 1933, 1937, 1941, 1944, 1949, 1958, 1960], "curv": [8, 1958], "torchdynamo": [8, 13, 15, 19, 20, 26, 75, 84, 696, 968, 970, 1686, 1894, 1905], "frame": [8, 14, 15, 17, 18, 26, 29, 74, 968, 1218, 1836, 1877, 1926, 1958], "torch_funct": [8, 1924], "torch_dispatch": 8, "torch": [8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 28, 29, 31, 34, 37, 38, 41, 44, 47, 51, 52, 53, 54, 57, 58, 60, 62, 63, 66, 69, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 97, 99, 101, 106, 107, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 910, 987, 988, 995, 996, 997, 998, 1000, 1001, 1016, 1018, 1029, 1098, 1196, 1219, 1220, 1221, 1235, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1624, 1633, 1634, 1635, 1636, 1642, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1666, 1678, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1746, 1785, 1815, 1896, 1897, 1898, 1912, 1913, 1918, 1919, 1920, 1921, 1923, 1926, 1927, 1929, 1930, 1931, 1932, 1934, 1936, 1942, 1944, 1945, 1946, 1949, 1950, 1951, 1957], "fx": [8, 13, 14, 15, 16, 17, 19, 20, 26, 28, 29, 97, 696, 763, 831, 832, 833, 834, 876, 1151, 1894, 1938, 1945, 1946], "tracer": [8, 20, 89, 1236, 1937, 1938, 1958, 1963], "functorch": [8, 13, 27, 67, 72, 75, 78, 82, 83, 85], "anchor": [8, 28, 74, 1501, 1502, 1618, 1619, 1897], "hackabl": 8, "todai": [8, 15, 18, 27, 67, 72, 968, 1944], "evolv": [8, 1923], "ai": [8, 1937, 1954], "adopt": [9, 43, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781], "hierarch": [9, 1958], "pull": [9, 10, 16, 34, 74, 169, 909, 1937, 1941], "request": [9, 10, 15, 31, 43, 45, 62, 705, 877, 895, 896, 1051, 1293, 1315, 1325, 1569, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1893, 1914, 1918, 1919, 1921, 1922, 1937, 1941, 1949, 1950, 1951, 1953, 1954], "overseen": 9, "catch": [9, 18, 53, 1896, 1919, 1925, 1927], "maker": 9, "strong": 9, "toward": [9, 75, 1089, 1182, 1183, 1293, 1357, 1633, 1718, 1759, 1767, 1768, 1942], "philosophi": [9, 70, 1894], "beyond": [9, 41, 1338, 1389, 1696, 1697, 1706, 1766, 1926, 1930], "encourag": [9, 51, 1914, 1944, 1953, 1960], "propos": [9, 1693, 1713, 1714, 1906, 1927, 1940, 1950], "review": [9, 10, 20, 41, 1941], "willing": 9, "invest": 9, "anyon": 9, "ownership": [9, 74], "codebas": [9, 1924], "strictli": [9, 40, 169, 210, 227, 909, 952, 1183, 1221, 1225, 1453, 1919, 1954], "compani": 9, "bui": 9, "addition": [9, 40, 41, 43, 49, 66, 169, 529, 633, 909, 1151, 1155, 1156, 1225, 1284, 1361, 1416, 1417, 1418, 1817, 1926, 1961], "membership": [9, 51, 59, 60, 1900], "That": [9, 27, 51, 58, 61, 68, 74, 1218, 1291, 1307, 1875, 1907, 1924, 1925, 1926, 1935, 1941, 1949], "seat": 9, "reserv": [9, 57, 1051, 1900, 1922, 1930], "emploi": [9, 1709, 1930, 1941, 1942], "directori": [9, 17, 18, 29, 33, 43, 45, 58, 1691, 1893, 1908, 1929, 1941, 1943, 1958], "procedur": [9, 29, 49, 875, 1236, 1237, 1293, 1815, 1949], "disput": 9, "made": [9, 12, 15, 20, 29, 45, 47, 48, 61, 74, 915, 925, 1221, 1453, 1498, 1500, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1756, 1898, 1906, 1919, 1936, 1941, 1958, 1960, 1964], "public": [9, 10, 1151, 1924, 1964], "relev": [9, 18, 19, 20, 22, 44, 51, 60, 73, 696, 1284, 1425, 1900, 1918, 1919, 1941, 1944], "resolut": [9, 1465, 1466, 1517, 1552, 1593, 1594, 1861, 1900, 1941, 1965], "conclus": 9, "publicli": [9, 1964], "vision": [9, 19, 1230, 1389, 1535, 1893, 1894], "roadmap": [9, 10], "parti": [9, 60, 1893, 1894, 1896, 1922, 1925, 1930, 1941], "triag": [9, 10], "meet": [9, 10, 59, 1250, 1922], "Their": [9, 16, 1086, 1924], "articul": 9, "cohes": 9, "negoti": [9, 1949], "contenti": 9, "broad": [9, 1930], "stakehold": 9, "power": [9, 21, 59, 1057, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1137, 1244, 1274, 1288, 1421, 1422, 1573, 1574, 1641, 1674, 1693, 1722, 1736, 1760, 1880, 1900, 1922, 1953], "veto": 9, "admin": 9, "amongst": 9, "commonli": [9, 11, 15, 19, 49, 66, 1322, 1899, 1901, 1918, 1919, 1940, 1944, 1956], "merit": 9, "demonstr": [9, 19, 25, 61, 74, 75, 82, 83, 1376, 1896, 1930, 1935, 1942, 1949], "expertis": 9, "continu": [9, 13, 14, 18, 20, 40, 43, 49, 63, 66, 74, 420, 624, 835, 918, 1174, 1256, 1257, 1284, 1375, 1376, 1633, 1900, 1906, 1919, 1935, 1943, 1961], "light": [9, 1958], "mainten": [9, 60, 61], "emeritu": [9, 10], "inact": [9, 1051, 1922], "contact": 9, "item": [9, 12, 15, 16, 20, 40, 45, 75, 84, 599, 600, 601, 605, 808, 809, 810, 830, 831, 832, 833, 1221, 1389, 1453, 1454, 1463, 1645, 1788, 1893, 1895, 1896, 1897, 1898, 1899, 1912, 1922, 1937, 1939, 1941, 1949, 1958, 1959], "nomine": 9, "breadth": 9, "testimoni": 9, "posit": [9, 40, 49, 74, 107, 420, 488, 561, 751, 873, 877, 879, 924, 937, 939, 946, 959, 960, 961, 1110, 1111, 1112, 1113, 1114, 1122, 1124, 1128, 1130, 1147, 1157, 1158, 1161, 1178, 1179, 1213, 1216, 1221, 1224, 1250, 1251, 1262, 1264, 1275, 1278, 1279, 1293, 1313, 1328, 1347, 1352, 1353, 1370, 1381, 1382, 1383, 1388, 1389, 1390, 1397, 1407, 1414, 1453, 1459, 1489, 1496, 1501, 1502, 1517, 1525, 1544, 1549, 1552, 1618, 1619, 1627, 1628, 1629, 1688, 1766, 1768, 1818, 1820, 1864, 1865, 1866, 1867, 1874, 1893, 1897, 1912, 1913, 1924, 1925, 1927, 1937, 1939, 1942, 1948, 1953, 1954, 1960, 1964, 1965], "neg": [9, 15, 31, 33, 40, 43, 49, 62, 74, 107, 458, 460, 475, 677, 678, 714, 771, 796, 939, 944, 981, 984, 1000, 1016, 1022, 1023, 1051, 1063, 1110, 1111, 1112, 1113, 1114, 1115, 1129, 1130, 1131, 1137, 1147, 1211, 1213, 1215, 1274, 1301, 1313, 1334, 1335, 1343, 1347, 1352, 1353, 1361, 1370, 1398, 1407, 1439, 1446, 1447, 1448, 1456, 1460, 1462, 1467, 1484, 1501, 1502, 1545, 1549, 1552, 1554, 1563, 1567, 1576, 1577, 1578, 1587, 1595, 1618, 1619, 1621, 1732, 1733, 1764, 1768, 1803, 1805, 1808, 1819, 1856, 1864, 1865, 1866, 1867, 1874, 1895, 1896, 1897, 1912, 1914, 1917, 1919, 1924, 1925, 1937, 1938, 1939, 1948, 1953, 1954], "interact": [9, 12, 17, 22, 34, 40, 48, 74, 878, 998, 1031, 1196, 1894, 1900, 1923, 1924, 1941, 1958], "final": [9, 12, 14, 15, 29, 43, 45, 47, 49, 51, 60, 66, 70, 71, 702, 705, 706, 776, 936, 954, 967, 1094, 1133, 1151, 1174, 1292, 1310, 1315, 1405, 1407, 1423, 1468, 1481, 1624, 1818, 1861, 1896, 1898, 1899, 1900, 1912, 1924, 1927, 1930, 1933, 1935, 1937, 1941, 1950, 1951], "declin": 9, "conflict": [9, 41, 61, 1941], "lack": [9, 31, 1256, 1257, 1284], "unfit": 9, "conduct": [9, 1633, 1729, 1841, 1949], "filial": 9, "romant": 9, "strength": 9, "candid": [9, 933, 1897, 1941], "letter": [9, 1094], "befit": 9, "candidaci": 9, "behind": [9, 16, 1894, 1935, 1950], "75": [9, 1182, 1441, 1552, 1570, 1693, 1740, 1897, 1954], "choos": [9, 34, 74, 908, 933, 1020, 1266, 1279, 1284, 1369, 1917, 1918, 1921, 1941, 1945, 1958], "unforeseen": 9, "circumst": [9, 60, 968, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1922], "perman": [9, 74, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1919, 1951], "unavail": [9, 1898], "rank": [9, 15, 29, 40, 41, 43, 44, 45, 47, 48, 49, 51, 58, 60, 61, 63, 66, 75, 83, 1266, 1267, 1268, 1275, 1310, 1445, 1492, 1633, 1645, 1729, 1841, 1897, 1923, 1932, 1937, 1942, 1949, 1950], "elect": 9, "invit": [9, 1893], "convinc": 9, "approach": [9, 17, 27, 41, 43, 74, 102, 956, 1162, 1815, 1886, 1896, 1911, 1914, 1922, 1924, 1927, 1944, 1949], "interview": 9, "talk": [9, 62, 1924, 1929], "gather": [9, 43, 60, 66, 529, 1851, 1875, 1895, 1897, 1924, 1926, 1929, 1939, 1941], "read": [9, 12, 17, 19, 20, 26, 29, 37, 40, 43, 45, 50, 51, 53, 60, 61, 66, 70, 74, 465, 1053, 1077, 1145, 1146, 1147, 1228, 1292, 1723, 1894, 1912, 1913, 1919, 1920, 1922, 1923, 1925, 1929, 1933, 1941, 1944, 1949], "attend": [9, 751, 1459, 1496], "confer": [9, 1407], "pipelin": [9, 17, 74, 1894, 1949], "world": [9, 15, 18, 21, 26, 43, 47, 51, 58, 60, 61, 66, 1492, 1633, 1919, 1941, 1944], "cover": [9, 14, 20, 22, 67, 74, 75, 1068, 1094, 1446, 1576, 1577, 1578, 1899, 1901, 1913, 1919, 1924, 1927, 1929, 1930, 1949], "push": [9, 20, 52, 1056, 1162, 1286, 1886, 1943], "codeown": 9, "notifi": [9, 44, 61, 1951], "expert": 9, "strongli": [9, 43, 51, 61, 1392, 1393, 1394, 1398, 1836, 1893], "failur": [9, 17, 20, 29, 43, 49, 51, 52, 53, 57, 58, 59, 60, 63, 696, 924, 925, 968, 1151, 1236, 1237, 1338, 1899, 1905, 1911, 1938, 1942, 1949, 1951, 1960], "revert": [9, 49, 66, 1489, 1610, 1951], "substanti": [9, 12, 41, 1922], "syntact": [9, 53, 74], "establish": [9, 43, 60, 1919], "seri": [9, 12, 23, 74, 1376, 1416, 1934, 1937, 1964], "lf": 9, "llc": 9, "guidelin": [9, 1656, 1932, 1941, 1944, 1945], "trademark": 9, "www": [9, 1376, 1502, 1958], "lfproject": 9, "acknowledg": [9, 43, 1894, 1951, 1953], "copyright": [9, 29], "holder": 9, "independ": [9, 40, 43, 60, 66, 73, 172, 173, 795, 801, 917, 918, 919, 920, 921, 922, 1000, 1174, 1183, 1279, 1391, 1392, 1393, 1394, 1398, 1538, 1539, 1540, 1545, 1563, 1621, 1677, 1739, 1894, 1896, 1918, 1919, 1922, 1935, 1941], "authorship": 9, "claus": [9, 1926], "bsd": 9, "licens": 9, "opensourc": 9, "outbound": 9, "inbound": 9, "q": [9, 16, 41, 49, 448, 496, 774, 1166, 1241, 1257, 1260, 1279, 1321, 1350, 1419, 1459, 1640, 1727, 1729, 1739, 1740, 1841, 1896, 1897, 1924, 1927, 1934, 1937, 1953, 1954], "partli": [9, 1899], "domain": [9, 49, 53, 700, 842, 901, 1108, 1109, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1126, 1127, 1174, 1914, 1937, 1944], "absolut": [9, 31, 33, 74, 111, 697, 710, 924, 925, 1142, 1210, 1249, 1254, 1275, 1278, 1280, 1301, 1414, 1420, 1484, 1561, 1565, 1606, 1650, 1651, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1680, 1692, 1733, 1759, 1791, 1897, 1930, 1937, 1939, 1954, 1959, 1960], "health": 9, "success": [9, 29, 45, 49, 51, 57, 74, 1251, 1262, 1264, 1310, 1652, 1822, 1823, 1824, 1826, 1827, 1922, 1930, 1937, 1938, 1953], "am": 9, "grant": 9, "purchas": 9, "board": 9, "driven": [9, 1937], "clearli": [9, 1906, 1941], "sponsorship": 9, "foundat": [9, 1938], "ptf": 9, "minor": [9, 1022, 1251, 1267, 1953], "committ": 9, "prior": [9, 12, 17, 41, 43, 45, 51, 916, 1293, 1498, 1500, 1602, 1656, 1920, 1922, 1924, 1940, 1944], "facebook": 9, "infrastructur": [9, 15, 52, 1941], "employe": 9, "expand": [9, 49, 273, 509, 894, 916, 924, 925, 951, 1273, 1274, 1322, 1459, 1503, 1596, 1871, 1893, 1895, 1897, 1905, 1912, 1913, 1920, 1925, 1937, 1939, 1941, 1942, 1957], "deliv": [9, 1943], "offici": [9, 43, 102, 1361, 1944], "showcas": [9, 1449, 1922, 1932], "whenev": [9, 16, 20, 896, 1640, 1641, 1909, 1911, 1947, 1950, 1951, 1964], "fix": [10, 12, 17, 25, 29, 37, 40, 43, 48, 49, 51, 60, 68, 71, 74, 97, 98, 280, 811, 817, 1151, 1234, 1266, 1396, 1397, 1471, 1543, 1544, 1563, 1633, 1896, 1897, 1909, 1917, 1918, 1922, 1923, 1926, 1932, 1936, 1937, 1939, 1940], "plu": [10, 33, 45, 917, 1147, 1267, 1953], "quarterli": 10, "chintala": 10, "edward": 10, "yang": [10, 1293], "ezyang": [10, 1924, 1957], "greg": 10, "chanan": 10, "gchanan": 10, "dmytro": 10, "dzhulgakov": 10, "nikita": 10, "shulga": 10, "malfet": 10, "joel": [10, 1729, 1841], "schlosser": 10, "jbschlosser": 10, "alban": 10, "desmaison": 10, "alband": [10, 1924], "sam": 10, "gross": 10, "colesburi": 10, "adam": [10, 44, 47, 49, 66, 1697, 1698, 1700, 1706, 1710, 1940], "paszk": 10, "apaszk": 10, "ilqar": 10, "ramazanli": 10, "iramazanli": 10, "vincent": 10, "quennevil": 10, "belair": 10, "vincentqb": 10, "jeffrei": 10, "wan": 10, "soulitz": 10, "elia": 10, "ellison": 10, "eellison": 10, "michael": [10, 29], "suo": 10, "yanan": 10, "cao": 10, "gmagogsfm": 10, "jame": 10, "reed": 10, "jamesr66a": 10, "jason": [10, 14], "ansel": [10, 14], "jansel": 10, "jiong": 10, "gong": 10, "jgong5": 10, "zach": 10, "devito": 10, "zdevito": 10, "fritz": 10, "obermey": 10, "fritzo": 10, "neeraj": 10, "pradhan": 10, "neerajprad": 10, "alican": 10, "bozkurt": 10, "alicanb": 10, "vishwak": 10, "srinivasan": 10, "vishwakftw": 10, "shen": 10, "li": [10, 1350, 1740, 1922], "mrshenli": 10, "pritam": 10, "damania": 10, "pritamdamania87": 10, "yanli": 10, "zhao": 10, "zhaojuanmao": 10, "rohan": 10, "varma": 10, "wanchao": 10, "liang": 10, "wanchaol": 10, "junji": 10, "wang": [10, 49], "fduwjj": 10, "howard": 10, "huang": 10, "tristan": 10, "rice": 10, "d4l3k": 10, "alisson": 10, "azzolini": 10, "aazzolini": 10, "ke": 10, "wen": 10, "kwen2501": 10, "kiuk": 10, "chung": 10, "kiukchung": 10, "pieter": 10, "noordhui": 10, "pietern": 10, "mingzh": 10, "mingzhe09088": 10, "omkar": 10, "salpekar": 10, "osalpekar": 10, "simon": 10, "ssnl": 10, "vitali": 10, "fedyunin": 10, "vitalyfedyunin": 10, "mike": 10, "ruberri": 10, "mruberri": 10, "mario": 10, "lezcano": 10, "ivan": 10, "yashchuk": 10, "ivanyashchuk": 10, "pearu": 10, "peterson": 10, "vedeneev": 10, "nikitav": 10, "christian": 10, "puhrsch": 10, "cpuhrsch": 10, "andrew": [10, 1293], "amjam": 10, "driss": 10, "guessou": 10, "drisspg": 10, "mikayla": 10, "gawarecki": 10, "mikaylagawarecki": 10, "natalia": 10, "gimelshein": 10, "ngimel": 10, "georg": 10, "qi": 10, "peter": 10, "bell": 10, "peterbell10": 10, "mingfei": 10, "ma": 10, "mingfeima": 10, "xiaob": 10, "zhang": 10, "xiaobingsup": 10, "xiaoqiang": 10, "zheng": 10, "xq": 10, "ilia": 10, "cherniavskii": 10, "cher": 10, "bai": 10, "bddppq": 10, "yinghai": 10, "jianhui": 10, "piotr": 10, "bialecki": 10, "ptrblck": 10, "sarofeen": 10, "csarofeen": 10, "tulloch": 10, "ajtulloch": 10, "alex": 10, "jann": 10, "jjsjann123": 10, "peng": 10, "sun": 10, "sunway513": 10, "jithun": 10, "nair": 10, "jithunnair": 10, "jeff": 10, "daili": 10, "jeffdaili": 10, "eli": 10, "uriega": 10, "seemether": 10, "mikei": 10, "dagits": 10, "zain": 10, "rizvi": 10, "zainrizvi": 10, "nirav": 10, "mehta": 10, "mehtanirav": 10, "andrei": 10, "talman": 10, "atalman": 10, "zhuoji": 10, "zhou": 10, "zhouzhuoji": 10, "karl": 10, "ostmo": 10, "kostmo": 10, "adnan": 10, "aziz": 10, "adnanaziz": 10, "ck": 10, "luk": 10, "ckluk": 10, "taylor": [10, 1174], "robi": 10, "robieta": 10, "xu": [10, 66], "xuzhao9": 10, "geeta": 10, "chauhan": 10, "chauhang": 10, "victor": 10, "bittorf": 10, "bitfort": 10, "gisl": 10, "dankel": 10, "gdankel": 10, "Will": [10, 12, 23, 43, 66, 74, 1825, 1898, 1913, 1937], "feng": 10, "yf225": 10, "brian": 10, "hirsh": 10, "bdhirsh": [10, 1878], "sebastian": 10, "messmer": 10, "smessmer": 10, "bowen": 10, "bao": [10, 24], "bowenbao": 10, "aaron": 10, "bockov": 10, "abock": 10, "gari": 10, "miguel": 10, "garymm": 10, "lara": 10, "haidar": 10, "hdr": 10, "fang": 10, "houseroad": 10, "negin": 10, "raoof": 10, "neginraoof": 10, "spandan": 10, "tiwari": 10, "spandantiwari": 10, "david": [10, 1361], "reiss": 10, "dreiss": 10, "raziel": 10, "guevara": 10, "linbin": 10, "yu": 10, "linbinyu": 10, "kobzarev": 10, "ivankobzarev": 10, "tao": 10, "xta0": 10, "vasilii": 10, "kuznetsov": 10, "vkuzo": 10, "jerri": 10, "jerryzh168": [10, 809], "supriya": 10, "rao": 10, "supriyar": 10, "zafar": 10, "takhirov": 10, "raghuraman": 10, "krishnamoorthi": 10, "raghuramank100": 10, "guoliang": 10, "hua": 10, "nbcsm": 10, "teng": 10, "gao": 10, "gaoteng": 10, "git": [10, 17, 29, 1943], "johnson": 10, "peterjc123": [10, 1936], "kulin": 10, "seth": 10, "kulinseth": 10, "ramin": 10, "azarmehr": 10, "razarmehr": 10, "alfredo": 10, "mendoza": 10, "avmgithub": 10, "svetlana": 10, "karslioglu": 10, "svekar": 10, "jack": 10, "jackcaog": 10, "daniel": [10, 49], "sohn": 10, "jysohn23": 10, "cain": 10, "zcain117": 10, "hirsch": 10, "gregori": 10, "ail": 10, "ailzhang": 10, "libenzi": 10, "dlibenzi": 10, "suhan": 10, "asuhan": 10, "manoj": 10, "mycpuorg": 10, "vamshi": 10, "dantu": 10, "vdantu": 10, "dhanasekar": 10, "karuppasami": 10, "dhanainm": 10, "francisco": 10, "massa": 10, "fmassa": 10, "vasili": 10, "vrynioti": 10, "datumbox": 10, "nicola": 10, "hug": 10, "nicolashug": 10, "yosua": 10, "maranatha": 10, "yosuamichael": 10, "joao": 10, "gome": 10, "jdsgome": 10, "philip": 10, "meier": 10, "pmeier": 10, "fomin": 10, "vfdev": 10, "nayef": 10, "ahm": 10, "nayef211": 10, "parmeet": 10, "singh": 10, "bhatia": 10, "guanheng": 10, "zhangguanheng66": 10, "moto": 10, "hira": 10, "mthrok": 10, "hwang": 10, "hwangjeff": 10, "carolin": 10, "chen": 10, "carolineechen": 10, "xiaohui": 10, "zhaoheng": 10, "ni": 10, "nateanl": 10, "qb": 10, "ivchenko": 10, "divchenko": 10, "colin": 10, "colin2328": 10, "wenlei": 10, "xie": 10, "wenleix": 10, "compil": [11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 26, 33, 34, 66, 67, 74, 696, 996, 1021, 1025, 1037, 1038, 1151, 1219, 1221, 1222, 1225, 1226, 1232, 1233, 1234, 1236, 1237, 1238, 1453, 1895, 1896, 1898, 1899, 1900, 1901, 1905, 1918, 1921, 1923, 1929, 1936, 1937, 1961], "modern": [11, 1677, 1933], "simd": 11, "typic": [11, 13, 15, 16, 25, 29, 33, 40, 41, 43, 49, 50, 51, 53, 60, 61, 62, 66, 74, 98, 986, 995, 1137, 1145, 1221, 1241, 1244, 1292, 1387, 1413, 1453, 1624, 1633, 1696, 1697, 1822, 1823, 1824, 1826, 1827, 1893, 1894, 1896, 1899, 1905, 1919, 1921, 1922, 1933, 1934, 1935, 1937, 1940, 1942, 1944, 1949, 1957, 1965], "slot": [11, 1964], "architectur": [11, 74, 1021, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1389, 1496, 1535, 1784, 1922, 1933, 1944, 1953], "isa": 11, "512": [11, 74, 1496, 1497, 1498, 1499, 1500, 1922], "amx": 11, "collect_env": 11, "grep": [11, 1926], "extract": [11, 13, 18, 26, 27, 37, 74, 852, 1396, 1400, 1504, 1543, 1620, 1943, 1949, 1963], "v": [11, 45, 57, 70, 74, 504, 560, 911, 918, 920, 921, 922, 952, 1150, 1160, 1162, 1218, 1234, 1256, 1260, 1284, 1288, 1293, 1459, 1501, 1502, 1543, 1588, 1672, 1677, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1729, 1762, 1821, 1825, 1840, 1841, 1886, 1894, 1896, 1897, 1898, 1899, 1909, 1919, 1927, 1936, 1941, 1953, 1958], "avx512f": 11, "avx512bw": 11, "avx512_vnni": 11, "amx_til": 11, "amx_bf16": 11, "amx_int8": 11, "boost": [11, 1932], "leverag": [11, 17, 968, 1949], "debut": 12, "encapsul": [12, 73, 74, 1949], "henc": [12, 41, 47, 51, 59, 60, 63, 66, 73, 938, 1147, 1449, 1450, 1451, 1505, 1825, 1914, 1919, 1922, 1923, 1949, 1951], "speedup": [12, 19, 20, 21, 24, 40, 41, 1459, 1500], "address": [12, 40, 43, 60, 63, 71, 235, 924, 925, 1003, 1906, 1911, 1922, 1949, 1950], "host": [12, 16, 40, 43, 51, 53, 59, 60, 61, 62, 215, 228, 596, 619, 893, 1221, 1453, 1633, 1645, 1679, 1922, 1942, 1949, 1950, 1955], "essenti": [12, 40, 43, 48, 51, 74, 1310, 1913, 1922, 1936, 1953], "wrapper": [12, 41, 43, 48, 49, 66, 73, 74, 75, 640, 773, 806, 840, 992, 995, 997, 998, 1000, 1067, 1069, 1140, 1141, 1160, 1221, 1390, 1896, 1898, 1899, 1909, 1911, 1922, 1923, 1937, 1942], "coupl": [12, 27, 28, 70, 1896, 1929, 1950], "tricki": [12, 52, 67, 72, 1919, 1930, 1951], "cachingalloc": 12, "pool": [12, 73, 782, 783, 784, 785, 798, 799, 995, 1029, 1030, 1040, 1051, 1329, 1330, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1401, 1402, 1421, 1422, 1446, 1447, 1448, 1449, 1450, 1451, 1454, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1547, 1548, 1573, 1574, 1576, 1577, 1578, 1744, 1745, 1894, 1921, 1922, 1924, 1930, 1932, 1946, 1949], "freed": [12, 66, 169, 909, 923, 1003, 1051, 1911, 1922, 1928, 1949], "exactli": [12, 20, 33, 41, 43, 49, 62, 924, 925, 962, 1007, 1011, 1094, 1140, 1141, 1218, 1221, 1262, 1397, 1400, 1401, 1402, 1453, 1481, 1484, 1544, 1554, 1633, 1680, 1692, 1906, 1912, 1919, 1922, 1923, 1924, 1927, 1928, 1937, 1941, 1942], "replai": [12, 17, 29, 995, 1029, 1687, 1922], "advantag": [12, 43, 60, 61, 1370, 1414, 1923, 1926, 1949, 1953], "overwrit": [12, 37, 40, 43, 74, 1454, 1463, 1899, 1919], "burn": [12, 75, 84], "forth": [12, 1715, 1880, 1893, 1943], "cudagraph_tre": 12, "reclaim": [12, 1922], "ab": [12, 13, 14, 17, 20, 29, 48, 49, 109, 110, 641, 642, 698, 956, 1094, 1252, 1273, 1274, 1276, 1277, 1290, 1293, 1423, 1472, 1499, 1502, 1504, 1592, 1677, 1680, 1723, 1729, 1733, 1894, 1895, 1897, 1899, 1912, 1913, 1914, 1922, 1930, 1939, 1953, 1959], "_dynamo": [12, 13, 14, 15, 17, 18, 19, 20, 23, 25, 26, 29, 75, 84, 968, 1923], "graph_break": [12, 18, 25, 696, 1905], "rand_lik": [12, 1897, 1901, 1922, 1939, 1961], "warm": [12, 17, 25, 41, 47, 1040, 1713, 1714, 1922, 1943], "cubla": [12, 31, 1012, 1875, 1934], "triton": [12, 17, 19, 22, 26, 29, 968, 1925], "arang": [12, 19, 31, 40, 43, 50, 529, 623, 707, 708, 709, 713, 715, 902, 903, 904, 950, 962, 966, 1077, 1092, 1110, 1114, 1122, 1128, 1130, 1134, 1135, 1136, 1137, 1144, 1145, 1184, 1241, 1242, 1246, 1249, 1273, 1276, 1277, 1290, 1353, 1474, 1475, 1476, 1477, 1478, 1505, 1506, 1507, 1589, 1680, 1681, 1728, 1736, 1740, 1755, 1762, 1767, 1788, 1820, 1828, 1839, 1855, 1856, 1858, 1859, 1861, 1887, 1895, 1897, 1906, 1914, 1935, 1939, 1954, 1958, 1959], "invari": [12, 28, 49, 1666, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1951, 1953], "overwritten": [12, 761, 762, 772, 780, 813, 857, 877, 1919, 1924, 1960], "constraint": [12, 15, 43, 48, 810, 811, 918, 1029, 1040, 1156, 1633, 1641, 1666, 1710, 1894, 1899, 1914, 1925, 1927, 1930, 1953], "pattern": [12, 15, 16, 28, 43, 45, 808, 809, 810, 812, 870, 877, 1037, 1390, 1669, 1818, 1896, 1899, 1919, 1922, 1924, 1926, 1928, 1935, 1945, 1946, 1953], "di": [12, 20, 1911], "yet": [12, 16, 17, 20, 21, 23, 27, 29, 44, 51, 66, 71, 73, 74, 97, 98, 997, 1068, 1224, 1226, 1238, 1326, 1633, 1647, 1651, 1653, 1894, 1898, 1899, 1905, 1913, 1914, 1922, 1937, 1939, 1944, 1949, 1951, 1953, 1954, 1956], "privat": [12, 60, 1922, 1924, 1941], "reflect": [12, 70, 475, 536, 572, 1146, 1147, 1150, 1218, 1381, 1382, 1383, 1429, 1430, 1431, 1474, 1475, 1476, 1552, 1590, 1675, 1724, 1836, 1896, 1897, 1926, 1957], "fallback": [12, 17, 29, 33, 43, 60, 69, 102, 1234, 1284, 1918, 1922, 1935], "inductor": [12, 13, 15, 19, 21, 22, 24, 25, 29, 696, 968, 1905, 1939], "my_model": [12, 17, 29, 45, 1633, 1896, 1937], "y1": [12, 1687, 1817], "y2": [12, 1687, 1817], "naiv": [12, 15, 17, 40, 1942], "pend": [12, 1949, 1958], "todo": [12, 16, 23, 86, 91, 92, 93, 94, 95, 96, 97, 98, 842, 875, 877, 878, 1924, 1963], "storag": [12, 16, 45, 66, 240, 329, 357, 360, 361, 452, 475, 500, 515, 536, 540, 574, 575, 600, 601, 603, 604, 894, 911, 913, 1018, 1085, 1191, 1195, 1207, 1221, 1228, 1292, 1314, 1352, 1353, 1390, 1453, 1757, 1771, 1778, 1809, 1814, 1817, 1831, 1854, 1860, 1876, 1893, 1894, 1897, 1908, 1911, 1919, 1922, 1932, 1935, 1941, 1949, 1953, 1956, 1957, 1959], "footgun": [12, 16], "uniqu": [12, 43, 51, 57, 60, 61, 62, 529, 533, 1212, 1256, 1257, 1261, 1267, 1268, 1270, 1279, 1281, 1283, 1284, 1321, 1328, 1817, 1840, 1873, 1893, 1896, 1905, 1908, 1924, 1941, 1943, 1949, 1950, 1951, 1953, 1958], "straightforward": [13, 20, 74, 1906, 1914, 1930, 1940, 1953], "gm": [13, 16, 20, 28, 29, 74], "graphmodul": [13, 16, 20, 28, 29, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 875, 876, 877, 878, 1963], "example_input": [13, 16, 20, 833, 834, 877, 878, 1232, 1236, 1944, 1963], "my_custom_backend": 13, "f_opt": 13, "register_backend": [13, 43, 1949], "my_compil": [13, 14, 20], "besid": [13, 41, 43, 1687, 1922, 1923, 1958], "plugin": [13, 1943, 1958], "entry_point": [13, 61], "torch_dynamo_backend": 13, "your_modul": 13, "submodul": [13, 28, 34, 66, 74, 807, 813, 830, 854, 855, 856, 874, 877, 878, 1160, 1221, 1225, 1231, 1232, 1390, 1453, 1454, 1455, 1481, 1631, 1896, 1898, 1899, 1907, 1930, 1935, 1941, 1944, 1949, 1963], "registr": [13, 47, 48, 73, 97, 1037, 1626, 1631, 1632, 1633, 1642, 1645, 1903, 1941], "minifi": [13, 17], "consist": [13, 17, 22, 29, 40, 43, 45, 48, 49, 60, 61, 74, 924, 959, 960, 1221, 1250, 1256, 1257, 1259, 1261, 1262, 1263, 1264, 1288, 1290, 1453, 1500, 1642, 1645, 1692, 1739, 1840, 1896, 1899, 1906, 1913, 1914, 1925, 1930, 1932, 1934, 1937, 1940, 1943, 1953], "canon": [13, 16, 51, 53, 1896], "opset": [13, 1895, 1937, 1938, 1939], "significantli": [13, 43, 66, 918, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1783, 1953], "smaller": [13, 40, 74, 515, 561, 986, 1633, 1723, 1738, 1828, 1922, 1935, 1941, 1965], "aot_autograd": 13, "fw_compil": 13, "bw_compil": 13, "box": [13, 15, 18, 19, 31, 43, 48, 61, 74, 1162, 1886, 1913, 1919, 1923], "make_boxed_func": 13, "my_backend": [13, 808], "model_opt": 13, "pretti": [13, 16, 20, 1221, 1691, 1788, 1896], "dynamo": [13, 15, 16, 18, 19, 20, 22, 23, 24, 25, 29, 74, 696, 1905, 1938], "bytecod": [13, 14, 17, 20, 26, 27, 29, 40, 696, 1905, 1941], "print_tabular": [13, 20, 74], "co": [13, 19, 21, 72, 75, 79, 80, 82, 83, 220, 651, 652, 699, 946, 968, 1037, 1152, 1155, 1156, 1161, 1178, 1179, 1272, 1387, 1388, 1391, 1713, 1714, 1721, 1733, 1795, 1796, 1799, 1800, 1801, 1802, 1804, 1822, 1823, 1824, 1826, 1827, 1895, 1897, 1912, 1939, 1940, 1953, 1958, 1960], "sin": [13, 19, 21, 25, 27, 33, 71, 72, 75, 79, 80, 82, 83, 548, 685, 686, 897, 968, 1037, 1152, 1154, 1155, 1156, 1158, 1161, 1179, 1272, 1322, 1733, 1796, 1802, 1895, 1897, 1912, 1919, 1939, 1953, 1954, 1958], "opcod": [13, 14, 20, 74, 1941], "placehold": [13, 14, 28, 74, 86, 91, 92, 93, 94, 95, 96, 850, 1415, 1922], "call_funct": [13, 14, 17, 20, 28, 29, 74, 97, 98], "0x7f1a894649a8": 13, "mockmodul": 13, "mod": [13, 29, 74, 737, 738, 748, 754, 755, 756, 761, 762, 772, 780, 826, 827, 828, 829, 852, 853, 880, 1150, 1224, 1225, 1230, 1237, 1675, 1879, 1898, 1899, 1941, 1962], "optimized_mod": 13, "toy_exampl": [13, 14, 17, 20, 29], "abs_1": [13, 14], "0x7f8d259298a0": 13, "truediv": [13, 14, 74], "call_method": [13, 14, 20, 74], "sum_1": [13, 14, 74], "lt": [13, 14, 381, 413, 1247, 1895, 1896, 1897, 1912, 1939], "mul_1": [13, 75, 81], "nondeterminist": [13, 74, 331, 333, 339, 515, 531, 533, 939, 1095, 1096, 1097, 1242, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1449, 1450, 1451, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1544, 1552, 1563, 1590, 1602, 1621, 1622, 1623, 1782, 1875], "offer": [13, 17, 43, 66, 69, 1633, 1875, 1895, 1922, 1928, 1941, 1953], "superior": 13, "real": [13, 15, 16, 19, 20, 21, 40, 49, 74, 99, 702, 703, 704, 705, 706, 708, 714, 924, 936, 961, 976, 982, 1040, 1110, 1111, 1113, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1211, 1213, 1214, 1217, 1218, 1241, 1250, 1251, 1252, 1256, 1257, 1258, 1259, 1260, 1263, 1264, 1265, 1270, 1273, 1275, 1277, 1278, 1279, 1280, 1284, 1285, 1289, 1290, 1291, 1301, 1307, 1420, 1462, 1465, 1466, 1502, 1640, 1687, 1836, 1840, 1883, 1884, 1885, 1893, 1894, 1895, 1897, 1899, 1919, 1922, 1939, 1941, 1944, 1949, 1951, 1957, 1959, 1960, 1964], "optimize_for_infer": [13, 1225], "optimize_for_inference_compil": 13, "And": [13, 18, 19, 20, 70, 813, 840, 1073, 1074, 1150, 1221, 1242, 1318, 1323, 1376, 1453, 1876, 1878, 1919, 1924, 1925, 1936, 1937, 1944, 1963], "code_to_acceler": 13, "list_backend": [13, 19, 21, 968], "trt_compil": 13, "tensorrt": [13, 17, 19, 1944], "inductor_compil": 13, "author": [14, 17, 19, 23, 24, 29, 41, 60, 61, 66, 1162, 1706, 1746, 1886, 1918], "tensor_match": 14, "function_match": 14, "recaptur": 14, "recompil": [14, 15, 20, 21, 23, 33, 74, 696, 968, 1234, 1905, 1928], "dispatch_kei": [14, 1903], "ndim": [14, 1286, 1287, 1912, 1914, 1953, 1959], "config": [14, 15, 17, 19, 20, 22, 23, 29, 41, 66, 74, 808, 809, 810, 811, 875, 877, 968, 1923, 1936, 1947], "log_level": [14, 17, 29, 1923], "info": [14, 15, 16, 17, 29, 43, 51, 54, 58, 696, 908, 997, 998, 1000, 1251, 1262, 1264, 1265, 1269, 1282, 1310, 1334, 1335, 1689, 1894, 1897, 1905, 1923, 1924, 1925, 1937, 1941], "output_cod": [14, 29, 696, 1905], "spammi": [14, 1905], "printout": [14, 74, 1039, 1052], "__compiled_fn_0": 14, "eval_with_kei": 14, "0x7f9ca082f8a0": 14, "load_fast": [14, 20], "load_glob": 14, "load_method": 14, "6": [14, 17, 18, 24, 29, 33, 37, 40, 41, 43, 49, 58, 74, 75, 76, 80, 81, 82, 83, 331, 333, 335, 339, 419, 420, 488, 504, 515, 529, 533, 576, 623, 701, 702, 707, 713, 757, 758, 759, 761, 762, 774, 777, 779, 781, 917, 918, 920, 921, 922, 939, 947, 952, 958, 961, 962, 966, 986, 1006, 1053, 1057, 1071, 1072, 1073, 1077, 1078, 1089, 1092, 1093, 1110, 1118, 1123, 1124, 1128, 1129, 1131, 1133, 1134, 1137, 1144, 1174, 1184, 1186, 1187, 1210, 1231, 1242, 1246, 1257, 1273, 1277, 1278, 1279, 1286, 1287, 1291, 1293, 1322, 1326, 1351, 1352, 1353, 1366, 1377, 1380, 1385, 1388, 1396, 1397, 1406, 1407, 1408, 1410, 1411, 1449, 1450, 1454, 1462, 1470, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1496, 1497, 1499, 1501, 1504, 1510, 1519, 1549, 1556, 1557, 1589, 1591, 1598, 1624, 1668, 1669, 1671, 1673, 1679, 1680, 1681, 1694, 1708, 1728, 1729, 1732, 1739, 1740, 1746, 1747, 1750, 1756, 1766, 1767, 1771, 1775, 1788, 1809, 1813, 1817, 1820, 1822, 1823, 1828, 1839, 1841, 1842, 1843, 1850, 1855, 1856, 1857, 1858, 1859, 1861, 1864, 1866, 1870, 1875, 1887, 1888, 1895, 1896, 1899, 1900, 1906, 1914, 1917, 1919, 1924, 1925, 1930, 1935, 1937, 1949, 1950, 1953, 1954, 1956, 1959, 1960, 1964], "load_const": [14, 20], "12": [14, 24, 25, 40, 41, 43, 66, 339, 533, 633, 702, 757, 758, 759, 761, 762, 958, 962, 1092, 1110, 1184, 1225, 1240, 1279, 1361, 1377, 1385, 1400, 1401, 1402, 1450, 1465, 1466, 1487, 1496, 1504, 1547, 1548, 1588, 1593, 1594, 1641, 1674, 1728, 1739, 1788, 1803, 1813, 1855, 1871, 1887, 1893, 1896, 1897, 1900, 1906, 1922, 1931, 1935, 1937, 1939, 1953, 1960], "binary_add": 14, "14": [14, 43, 75, 82, 83, 339, 533, 961, 1037, 1038, 1077, 1092, 1184, 1273, 1279, 1347, 1377, 1450, 1739, 1746, 1813, 1855, 1856, 1861, 1887, 1896, 1900, 1937, 1939, 1953, 1957, 1958], "binary_true_divid": 14, "16": [14, 17, 29, 39, 43, 339, 633, 754, 755, 756, 757, 758, 759, 788, 1092, 1110, 1137, 1174, 1184, 1221, 1232, 1244, 1250, 1256, 1257, 1261, 1277, 1353, 1365, 1367, 1368, 1376, 1377, 1380, 1381, 1382, 1383, 1385, 1386, 1391, 1392, 1393, 1394, 1398, 1401, 1402, 1421, 1422, 1423, 1441, 1446, 1447, 1448, 1450, 1451, 1453, 1460, 1468, 1479, 1496, 1510, 1527, 1529, 1530, 1532, 1536, 1547, 1548, 1683, 1736, 1813, 1875, 1883, 1887, 1896, 1900, 1917, 1922, 1930, 1933, 1935, 1937, 1939, 1942, 1949, 1953, 1954, 1956, 1958, 1959], "store_fast": 14, "11": [14, 29, 33, 43, 339, 529, 696, 958, 962, 1040, 1092, 1184, 1241, 1277, 1291, 1307, 1361, 1377, 1402, 1450, 1548, 1680, 1681, 1691, 1813, 1855, 1887, 1896, 1900, 1906, 1913, 1922, 1935, 1936, 1937, 1939, 1953, 1954], "18": [14, 43, 339, 462, 701, 1095, 1174, 1218, 1293, 1450, 1896, 1937, 1939, 1953], "20": [14, 16, 20, 43, 47, 49, 339, 701, 736, 744, 745, 750, 754, 755, 756, 757, 758, 759, 762, 772, 776, 777, 778, 779, 780, 781, 788, 1174, 1219, 1222, 1232, 1243, 1277, 1342, 1365, 1367, 1368, 1370, 1371, 1372, 1373, 1374, 1376, 1380, 1381, 1382, 1383, 1385, 1386, 1391, 1392, 1393, 1394, 1398, 1401, 1402, 1405, 1406, 1408, 1415, 1416, 1417, 1418, 1421, 1422, 1423, 1424, 1425, 1440, 1446, 1447, 1448, 1450, 1451, 1453, 1468, 1470, 1481, 1489, 1492, 1495, 1496, 1497, 1498, 1510, 1527, 1529, 1530, 1532, 1536, 1547, 1548, 1554, 1610, 1640, 1641, 1665, 1674, 1677, 1699, 1714, 1742, 1851, 1896, 1897, 1914, 1923, 1924, 1933, 1940, 1949, 1953], "22": [14, 43, 49, 339, 633, 1293, 1624, 1670, 1672, 1896, 1934, 1953], "24": [14, 41, 43, 49, 941, 1279, 1441, 1517, 1673, 1739, 1856, 1896, 1917, 1921, 1954], "26": [14, 29, 1276, 1714], "compare_op": 14, "28": [14, 22, 633, 762, 1077, 1861, 1937], "pop_jump_if_fals": 14, "38": [14, 1347], "30": [14, 21, 40, 43, 49, 51, 60, 462, 633, 736, 744, 745, 772, 780, 1174, 1243, 1374, 1376, 1380, 1440, 1504, 1510, 1527, 1536, 1624, 1717, 1719, 1725, 1742, 1851, 1924, 1937, 1940, 1949], "34": [14, 20, 29, 43], "binary_multipli": [14, 20], "36": [14, 20, 43, 339, 1137, 1174], "13": [14, 22, 29, 43, 891, 962, 1092, 1095, 1139, 1174, 1184, 1225, 1310, 1377, 1401, 1402, 1450, 1487, 1547, 1548, 1813, 1855, 1887, 1896, 1900, 1939, 1953], "42": [14, 40, 840, 946, 1342, 1795, 1922, 1930], "return_valu": [14, 51, 52, 58], "unpack_sequ": 14, "__resume_at_30_1": 14, "__resume_at_38_2": 14, "offset": [14, 20, 47, 51, 244, 245, 246, 247, 357, 536, 574, 762, 894, 1082, 1083, 1084, 1085, 1147, 1255, 1397, 1544, 1633, 1741, 1742, 1820, 1865, 1867, 1897, 1899], "__resume_at_": 14, "jump_absolut": 14, "resume_at": 14, "remaind": [14, 40, 506, 1142, 1174, 1895, 1897, 1939], "restart": [14, 41, 51, 59, 61, 63, 1713, 1714, 1911, 1958], "symbolic_shap": 15, "assumpt": [15, 17, 23, 29, 45, 57, 61, 924, 971, 1376, 1407, 1919, 1923, 1927, 1949, 1950, 1953], "situat": [15, 16, 17, 19, 40, 49, 62, 74, 100, 102, 968, 982, 1645, 1911, 1924, 1925, 1932, 1933, 1941, 1944, 1951, 1964], "insuffici": [15, 29, 1041], "batch": [15, 16, 17, 22, 25, 29, 41, 43, 49, 61, 63, 66, 67, 68, 71, 72, 74, 75, 82, 83, 599, 600, 601, 603, 604, 702, 718, 719, 720, 721, 722, 723, 751, 776, 795, 801, 923, 924, 925, 936, 948, 949, 956, 959, 960, 961, 968, 994, 1082, 1084, 1094, 1155, 1156, 1162, 1218, 1250, 1251, 1252, 1253, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1288, 1289, 1290, 1293, 1301, 1310, 1311, 1315, 1369, 1370, 1371, 1372, 1373, 1376, 1381, 1382, 1387, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1400, 1405, 1406, 1407, 1408, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1444, 1445, 1456, 1457, 1458, 1459, 1460, 1462, 1465, 1466, 1467, 1468, 1470, 1484, 1485, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1504, 1517, 1522, 1524, 1525, 1535, 1536, 1538, 1539, 1540, 1543, 1544, 1545, 1546, 1549, 1562, 1563, 1564, 1587, 1595, 1602, 1620, 1621, 1624, 1633, 1640, 1666, 1667, 1669, 1670, 1672, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1714, 1715, 1721, 1727, 1729, 1739, 1743, 1822, 1823, 1824, 1826, 1827, 1831, 1836, 1840, 1841, 1860, 1863, 1864, 1866, 1883, 1886, 1894, 1912, 1913, 1914, 1918, 1922, 1925, 1926, 1930, 1932, 1942, 1944, 1949, 1953, 1958, 1959], "length": [15, 17, 29, 40, 41, 43, 45, 49, 278, 331, 333, 339, 369, 450, 451, 599, 600, 601, 751, 776, 830, 909, 923, 967, 1011, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1147, 1162, 1195, 1218, 1236, 1240, 1352, 1353, 1371, 1376, 1381, 1390, 1397, 1400, 1405, 1421, 1423, 1459, 1468, 1496, 1504, 1527, 1528, 1529, 1536, 1544, 1563, 1602, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1746, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1820, 1822, 1823, 1824, 1826, 1827, 1836, 1861, 1886, 1895, 1897, 1899, 1906, 1913, 1914, 1920, 1926, 1953, 1960], "vari": [15, 16, 17, 29, 835, 1484, 1666, 1797, 1909, 1932, 1933, 1940, 1944, 1945, 1953], "servic": [15, 52, 1923], "window": [15, 33, 40, 43, 74, 369, 572, 937, 946, 1178, 1179, 1218, 1240, 1366, 1367, 1368, 1401, 1402, 1421, 1422, 1446, 1447, 1448, 1449, 1450, 1451, 1519, 1547, 1548, 1576, 1577, 1578, 1744, 1745, 1836, 1894, 1897, 1909, 1922], "pad": [15, 40, 41, 728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 751, 754, 755, 756, 757, 758, 759, 784, 785, 788, 789, 790, 795, 798, 799, 801, 968, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1218, 1366, 1367, 1368, 1376, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1396, 1397, 1400, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451, 1456, 1457, 1459, 1474, 1475, 1476, 1477, 1478, 1479, 1499, 1500, 1504, 1508, 1509, 1510, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1543, 1544, 1546, 1552, 1563, 1576, 1577, 1578, 1579, 1580, 1581, 1620, 1621, 1667, 1669, 1670, 1672, 1744, 1745, 1836, 1894, 1895, 1897, 1914, 1926, 1937, 1939, 1944, 1958], "exhibit": [15, 29, 1691, 1937], "imag": [15, 17, 18, 29, 33, 40, 757, 758, 759, 877, 878, 976, 1359, 1363, 1364, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1400, 1401, 1402, 1417, 1425, 1460, 1465, 1466, 1487, 1504, 1506, 1507, 1517, 1528, 1529, 1531, 1532, 1546, 1547, 1552, 1563, 1620, 1621, 1764, 1894, 1895, 1897, 1914, 1927, 1939, 1942, 1957, 1958], "recognit": 15, "jag": 15, "chose": [15, 51, 1918], "whose": [15, 29, 43, 49, 66, 74, 560, 875, 911, 958, 981, 1082, 1094, 1099, 1147, 1165, 1174, 1177, 1183, 1221, 1237, 1245, 1291, 1307, 1309, 1354, 1453, 1633, 1681, 1733, 1791, 1857, 1899, 1919, 1924, 1927, 1941, 1953, 1958, 1960], "dimension": [15, 49, 529, 531, 896, 902, 903, 904, 947, 954, 966, 1082, 1084, 1085, 1094, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1128, 1129, 1131, 1133, 1135, 1136, 1147, 1174, 1183, 1184, 1185, 1253, 1258, 1259, 1260, 1261, 1286, 1291, 1307, 1315, 1322, 1361, 1378, 1379, 1380, 1389, 1390, 1396, 1397, 1425, 1443, 1460, 1474, 1475, 1476, 1477, 1478, 1479, 1486, 1488, 1492, 1508, 1509, 1510, 1535, 1587, 1590, 1622, 1623, 1640, 1679, 1746, 1822, 1823, 1824, 1825, 1826, 1827, 1836, 1851, 1854, 1855, 1861, 1899, 1914, 1917, 1920, 1927, 1933, 1953, 1955, 1956, 1959, 1961], "induct": 15, "symbol": [15, 16, 27, 33, 39, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 98, 99, 102, 640, 833, 970, 1235, 1289, 1423, 1468, 1863, 1883, 1894, 1899, 1938], "pt2": [15, 16, 18], "mark_dynam": 15, "dim": [15, 43, 48, 49, 71, 72, 74, 75, 82, 83, 131, 133, 134, 135, 137, 153, 154, 155, 203, 223, 226, 229, 230, 231, 232, 233, 234, 248, 278, 282, 299, 330, 331, 332, 333, 334, 335, 339, 340, 372, 398, 410, 425, 427, 428, 429, 432, 446, 447, 448, 449, 453, 454, 470, 479, 487, 496, 507, 508, 510, 521, 522, 528, 529, 530, 531, 532, 533, 534, 535, 553, 554, 557, 558, 560, 563, 568, 569, 571, 576, 581, 589, 594, 599, 600, 601, 603, 604, 606, 621, 622, 625, 626, 627, 628, 631, 633, 709, 711, 712, 713, 715, 890, 891, 892, 919, 920, 922, 955, 962, 977, 985, 994, 1009, 1011, 1073, 1074, 1075, 1076, 1077, 1086, 1092, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1133, 1134, 1152, 1162, 1163, 1174, 1184, 1192, 1193, 1194, 1195, 1198, 1242, 1252, 1253, 1273, 1277, 1287, 1289, 1290, 1300, 1308, 1318, 1320, 1321, 1323, 1326, 1328, 1341, 1348, 1349, 1350, 1351, 1352, 1353, 1361, 1388, 1389, 1390, 1393, 1397, 1399, 1404, 1419, 1424, 1443, 1459, 1460, 1461, 1486, 1488, 1500, 1502, 1503, 1534, 1535, 1551, 1554, 1563, 1571, 1576, 1577, 1578, 1587, 1588, 1590, 1592, 1596, 1602, 1608, 1609, 1617, 1633, 1641, 1647, 1651, 1653, 1660, 1661, 1674, 1677, 1680, 1730, 1737, 1740, 1760, 1761, 1766, 1767, 1772, 1773, 1774, 1777, 1778, 1809, 1812, 1813, 1816, 1819, 1821, 1828, 1831, 1833, 1834, 1835, 1836, 1839, 1851, 1855, 1856, 1857, 1858, 1861, 1862, 1870, 1871, 1872, 1873, 1874, 1881, 1882, 1886, 1887, 1894, 1895, 1896, 1897, 1913, 1914, 1925, 1926, 1935, 1937, 1939, 1953, 1954, 1956, 1962], "integ": [15, 40, 43, 49, 60, 107, 307, 462, 464, 466, 515, 561, 576, 582, 701, 702, 703, 704, 705, 706, 782, 783, 801, 803, 881, 908, 936, 937, 946, 957, 981, 998, 1000, 1016, 1022, 1023, 1051, 1089, 1092, 1094, 1095, 1096, 1097, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1148, 1152, 1153, 1154, 1155, 1156, 1164, 1178, 1179, 1182, 1183, 1184, 1231, 1234, 1243, 1244, 1251, 1262, 1264, 1274, 1293, 1342, 1361, 1376, 1381, 1382, 1383, 1425, 1511, 1512, 1513, 1514, 1515, 1516, 1623, 1666, 1681, 1684, 1717, 1720, 1724, 1729, 1741, 1742, 1748, 1750, 1751, 1752, 1754, 1759, 1768, 1780, 1828, 1837, 1841, 1855, 1856, 1869, 1875, 1887, 1891, 1898, 1899, 1900, 1912, 1925, 1927, 1942, 1945, 1947, 1953, 1954, 1956, 1959, 1960, 1965], "opt": [15, 43, 47, 1232, 1711, 1712, 1718, 1722, 1724, 1896, 1927], "automatic_dynamic_shap": 15, "proactiv": 15, "torch_log": [15, 29, 696, 968, 1905], "torchinductor": [15, 19, 26, 696, 1894, 1905], "decomposit": [15, 16, 28, 49, 74, 959, 1166, 1250, 1251, 1256, 1257, 1258, 1259, 1260, 1262, 1267, 1268, 1269, 1270, 1275, 1279, 1280, 1284, 1285, 1310, 1312, 1640, 1727, 1729, 1733, 1739, 1840, 1841, 1894, 1933], "written": [15, 19, 22, 28, 29, 43, 53, 71, 932, 1053, 1390, 1688, 1709, 1896, 1898, 1906, 1907, 1919, 1923, 1924, 1925, 1930, 1935, 1937, 1941, 1943, 1955, 1958], "fulli": [15, 20, 31, 33, 40, 43, 47, 48, 70, 74, 696, 1057, 1221, 1449, 1450, 1451, 1453, 1895, 1899, 1905, 1924, 1941, 1944], "hint": [15, 20, 696, 995, 1029, 1222, 1459, 1497, 1498, 1499, 1500, 1896, 1898, 1899, 1922, 1924], "consult": [15, 1941], "greatli": [15, 33, 74, 1922], "formula": [15, 49, 107, 784, 785, 905, 907, 937, 946, 1178, 1179, 1246, 1312, 1313, 1467, 1520, 1521, 1609, 1709, 1742, 1924, 1927, 1943, 1948, 1953], "flatten": [15, 41, 66, 74, 75, 81, 890, 891, 1083, 1183, 1277, 1290, 1504, 1680, 1687, 1692, 1740, 1756, 1761, 1766, 1871, 1872, 1873, 1897, 1912, 1913, 1917, 1937, 1939, 1946, 1957], "awai": [15, 41, 74, 971, 1552, 1894, 1913, 1919, 1925], "bailout": [15, 1939], "express": [15, 17, 29, 31, 45, 67, 71, 72, 74, 75, 82, 83, 337, 1219, 1222, 1677, 1836, 1900, 1907, 1914, 1919, 1924, 1964], "meta": [15, 16, 18, 19, 28, 66, 70, 74, 354, 1903, 1937, 1949, 1958, 1960], "workflow": [15, 16, 22, 23, 24, 34, 1893, 1924, 1944, 1945, 1961], "shapeenv": [15, 16], "attach": [15, 69, 73, 74, 158, 728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 749, 809, 854, 856, 880, 1624, 1893, 1896, 1898, 1912, 1919, 1924, 1944, 1950, 1962], "faketensormod": [15, 16, 1937], "knob": [15, 1922], "faithfulli": 15, "export": [15, 21, 25, 28, 34, 37, 43, 50, 63, 75, 80, 83, 106, 932, 997, 1224, 1226, 1232, 1238, 1667, 1668, 1686, 1687, 1688, 1690, 1691, 1692, 1894, 1896, 1898, 1899, 1924, 1938, 1939, 1943, 1944, 1949], "sympi": 15, "induc": [15, 916, 1552, 1590, 1917], "simplif": [15, 45], "assert": [15, 28, 29, 40, 41, 49, 68, 70, 71, 72, 74, 75, 81, 83, 640, 927, 929, 930, 1152, 1154, 1155, 1156, 1157, 1160, 1161, 1162, 1219, 1224, 1225, 1230, 1602, 1689, 1886, 1898, 1900, 1924, 1925, 1930, 1935, 1941, 1944, 1960], "s0": [15, 29, 75, 82, 83], "occurr": [15, 66, 420, 1219, 1321, 1666, 1872, 1873], "reusabl": 15, "c10": [15, 60, 1929], "symfloat": [15, 1844, 1845, 1961], "symbool": [15, 1848, 1961], "plumb": 15, "symnodeimpl": 15, "csrc": [15, 1936], "python_symnod": 15, "init": [15, 43, 51, 53, 66, 1221, 1453, 1461, 1480, 1673, 1894, 1901, 1919, 1924, 1929, 1930], "_subclass": [15, 16, 1937], "fake_tensor": [15, 16, 1937], "_meta_registr": 15, "decomp": [15, 16], "primtorch": [15, 16, 19], "ref": [15, 20, 29, 1893, 1953], "visibl": [15, 18, 33, 43, 45, 57, 1019, 1064, 1454, 1455, 1463, 1464], "simul": [15, 49, 815, 817, 1944, 1947], "counterpart": [15, 873, 880, 1290, 1633, 1899, 1907, 1961, 1962], "symnod": 15, "eras": [15, 74, 75, 80, 81], "mix": [15, 26, 33, 41, 49, 66, 1040, 1633, 1894, 1919, 1921, 1944, 1953], "xla": [15, 1894], "far": [15, 61, 1230, 1552], "vice": [15, 74, 475, 619, 1146, 1147, 1445, 1919, 1947, 1955], "versa": [15, 74, 475, 619, 1146, 1147, 1445, 1919, 1947, 1955], "fairli": [15, 1932, 1942], "apparatu": 15, "traceabl": [15, 19, 74, 640, 833, 1896, 1944], "make_fx": [15, 29, 1151], "aka": [15, 43, 75, 82, 83, 933, 1414, 1919, 1956], "aris": [15, 49, 74, 1919], "emerg": [15, 1936], "illeg": [15, 66, 1922], "enhanc": [15, 43, 66, 1633], "precomput": 15, "empty_strid": [15, 1875, 1895, 1897, 1901, 1939], "eagerli": [15, 1026, 1032, 1922], "needlessli": [15, 1922], "nontrivi": [15, 43, 1922], "lazi": [15, 979, 1233, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1624, 1894], "constrain_rang": 15, "wherebi": 15, "trash": 16, "bad": [16, 25, 74, 75, 1911, 1937, 1941, 1944], "accur": [16, 21, 53, 997, 1174, 1296, 1395, 1746, 1861, 1922, 1950], "suppos": [16, 18, 19, 43, 74, 1218, 1724, 1906, 1953], "val": [16, 20, 75, 78, 82, 1037, 1227, 1897, 1899, 1917], "stuff": [16, 74], "probabl": [16, 17, 18, 23, 40, 66, 173, 776, 938, 1182, 1298, 1343, 1361, 1365, 1369, 1376, 1389, 1391, 1392, 1393, 1394, 1398, 1405, 1407, 1423, 1459, 1460, 1468, 1524, 1535, 1536, 1537, 1538, 1539, 1540, 1545, 1554, 1564, 1587, 1602, 1739, 1911, 1924, 1936, 1937, 1954, 1958], "wouldn": [16, 1951], "alias": [16, 66, 911, 1151, 1162, 1563, 1886, 1898, 1899, 1903, 1924], "almost": [16, 1267, 1268, 1936], "subclass_zoo": [16, 1924], "subgraph": [16, 29, 968, 1691, 1919, 1923, 1937, 1941, 1963], "possibli": [16, 40, 60, 66, 1221, 1236, 1263, 1268, 1453, 1633, 1896, 1903, 1934, 1941], "bunch": 16, "from_real_tensor": 16, "memo": [16, 1221, 1453], "fakeifi": 16, "alia": [16, 45, 49, 54, 110, 111, 130, 206, 207, 371, 424, 453, 454, 461, 539, 557, 698, 882, 883, 884, 885, 886, 887, 888, 905, 964, 977, 978, 1080, 1087, 1090, 1101, 1102, 1103, 1105, 1106, 1132, 1167, 1175, 1176, 1188, 1189, 1190, 1199, 1219, 1221, 1247, 1248, 1255, 1271, 1275, 1278, 1306, 1316, 1317, 1327, 1344, 1346, 1356, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1453, 1563, 1636, 1666, 1682, 1726, 1731, 1734, 1769, 1792, 1807, 1810, 1812, 1838, 1842, 1843, 1862, 1868, 1890, 1895, 1899, 1924, 1939, 1954, 1955, 1959], "faketensor": [16, 1937], "automat": [16, 17, 19, 29, 33, 41, 43, 48, 60, 61, 74, 101, 169, 605, 905, 907, 968, 1031, 1040, 1183, 1230, 1236, 1322, 1499, 1602, 1634, 1758, 1788, 1876, 1893, 1894, 1898, 1899, 1907, 1908, 1912, 1913, 1919, 1920, 1922, 1924, 1930, 1932, 1937, 1941, 1942, 1944, 1945, 1949, 1958, 1959], "__torch_dispatch__": [16, 1924, 1953], "dispatch_devic": 16, "lie": [16, 1486, 1488, 1608, 1819, 1954, 1958], "prone": [16, 1911, 1932], "earli": [16, 20, 37, 41, 51, 73, 1392, 1393, 1394, 1398, 1894, 1944, 1945, 1962, 1963], "ly": 16, "whatev": [16, 17, 62, 74, 465, 1633, 1779, 1863, 1899, 1925], "derefer": 16, "pointer": [16, 37, 158, 1012, 1469, 1922, 1923, 1929, 1949, 1951], "segfault": [16, 1911, 1933], "backtrac": 16, "unexpect": [16, 17, 20, 43, 50, 74, 994, 1145, 1147, 1150, 1221, 1453, 1675, 1692, 1831, 1896, 1919, 1924, 1933], "reinterpret": [16, 49, 515], "magic": [16, 1897, 1900, 1961], "in_kernel_invocation_manag": 16, "underli": [16, 20, 43, 45, 47, 49, 51, 66, 71, 74, 116, 329, 344, 395, 418, 420, 490, 491, 492, 493, 500, 515, 536, 540, 573, 574, 575, 629, 764, 773, 894, 997, 1191, 1195, 1221, 1292, 1352, 1595, 1757, 1860, 1874, 1896, 1899, 1914, 1922, 1926, 1928, 1942, 1949, 1955, 1957], "unwrap": 16, "promot": [16, 66, 701, 941, 944, 953, 1037, 1089, 1137, 1139, 1140, 1141, 1142, 1342, 1392, 1393, 1394, 1398, 1534, 1738, 1758, 1759, 1765, 1780, 1837, 1895, 1899, 1938, 1956, 1960], "test_fake_tensor": 16, "fake_mod": 16, "fake_x": 16, "fake_i": 16, "fake_z": 16, "pre": [16, 23, 29, 34, 43, 47, 66, 74, 923, 930, 1221, 1453, 1628, 1630, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1688, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1712, 1718, 1893, 1896, 1899, 1907, 1919, 1921, 1930, 1937, 1942, 1959], "aotautograd": [16, 17, 18, 19, 29, 70, 696, 1905, 1923, 1938], "_guard": 16, "detect_fake_mod": 16, "fake_arg": 16, "lifecycl": [16, 20], "proxy_tensor": [16, 29, 1151], "maybe_disable_fake_tensor_mod": 16, "nich": 16, "faketensorprop": 16, "fake_tensor_prop": 16, "real_input": [16, 1922], "popul": [16, 28, 43, 49, 58, 66, 73, 74, 353, 511, 519, 520, 1321, 1349, 1922, 1924], "propagate_dont_convert_input": 16, "fake_input": 16, "real_tensor": 16, "t_": [16, 1322, 1402, 1548, 1713, 1714, 1897, 1953], "opportun": [16, 17, 1251, 1896, 1950], "conserv": [16, 1903, 1906, 1922], "annoi": 16, "practic": [16, 17, 26, 40, 43, 49, 66, 1894, 1896, 1906, 1911, 1913, 1919, 1924, 1927, 1930, 1935, 1941, 1949], "feed": [16, 74, 1896, 1926, 1930, 1962], "somehow": 16, "fakecopymod": 16, "gave": 16, "fakeif": 16, "face": [16, 1924, 1941, 1958], "invalid": [16, 20, 53, 58, 971, 1221, 1343, 1453, 1918, 1919, 1937, 1941, 1942], "old": [16, 20, 43, 50, 74, 870, 1145, 1393, 1677, 1685, 1723, 1771, 1892, 1894, 1896, 1919, 1922, 1924, 1936, 1944, 1958], "tension": 16, "seriou": [16, 1911, 1922], "analys": 16, "occasion": [16, 1922, 1953], "mistak": [16, 1899, 1926], "redispatch": [16, 1924], "lift": [16, 72, 1162, 1886, 1913, 1939], "recogn": [16, 40, 1899, 1949, 1953], "notimpl": [16, 1899, 1900, 1924], "hopefulli": 16, "desugar": [16, 1899], "plain": [16, 33, 1370, 1454, 1463, 1640, 1824, 1924, 1953], "infinit": [16, 40, 1213, 1293, 1369, 1376, 1536, 1733, 1924, 1933, 1949], "fastpath": [16, 1459], "certain": [16, 17, 20, 22, 29, 40, 41, 43, 57, 58, 71, 73, 74, 99, 702, 705, 751, 936, 948, 1019, 1082, 1196, 1218, 1221, 1228, 1292, 1315, 1325, 1381, 1382, 1383, 1384, 1385, 1386, 1406, 1424, 1440, 1453, 1459, 1504, 1553, 1564, 1566, 1679, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1899, 1906, 1913, 1919, 1920, 1922, 1924, 1929, 1930, 1933, 1937, 1942, 1943, 1949, 1950, 1953], "custom_op": [16, 1937], "impl_abstract": 16, "hardcod": 16, "nor": [16, 40, 43, 51, 66, 811, 915, 1256, 1257, 1284, 1459, 1500, 1633, 1680, 1738, 1840, 1924, 1937], "sensit": [16, 41, 1414, 1484, 1937, 1941, 1950], "carefulli": [16, 18, 70, 73, 1925, 1941], "leaf": [16, 57, 169, 241, 353, 465, 519, 520, 807, 854, 856, 895, 909, 1160, 1691, 1854, 1914, 1918, 1919, 1937, 1963], "ness": [16, 61], "whole": [16, 20, 23, 24, 40, 43, 45, 1162, 1221, 1453, 1481, 1492, 1633, 1886, 1919, 1923, 1932, 1933, 1941], "bulk": [16, 40], "metaconvert": 16, "pointwis": [16, 19, 22, 49, 968, 1155, 1156, 1298, 1299, 1419, 1912, 1920], "impli": [16, 41, 60, 66, 1911, 1919, 1937, 1942, 1947, 1949], "ti": [16, 1150, 1675, 1768], "die": 16, "unback": 16, "symint": [16, 1844, 1845, 1846, 1847, 1848, 1895, 1961], "memoiz": [16, 49], "colab": [16, 1903, 1941], "mark": [17, 18, 45, 60, 73, 74, 75, 80, 83, 842, 913, 914, 971, 1334, 1335, 1633, 1691, 1896, 1898, 1919, 1923, 1924, 1930, 1935, 1941, 1943, 1950, 1959], "saroufim": 17, "evalfram": 17, "min": [17, 40, 43, 53, 60, 74, 135, 204, 205, 206, 207, 318, 711, 712, 713, 774, 786, 787, 796, 818, 835, 836, 837, 838, 841, 891, 963, 964, 1037, 1074, 1108, 1109, 1181, 1252, 1266, 1267, 1273, 1277, 1279, 1284, 1290, 1310, 1343, 1375, 1412, 1439, 1441, 1461, 1473, 1480, 1526, 1563, 1567, 1596, 1598, 1603, 1621, 1708, 1713, 1714, 1723, 1727, 1729, 1739, 1840, 1864, 1865, 1866, 1867, 1895, 1897, 1909, 1912, 1937, 1939, 1944, 1947, 1949, 1965], "partit": [17, 28, 47, 48, 1361, 1861, 1937, 1939, 1942, 1950, 1951], "usercod": 17, "ddp": [17, 43, 44, 45, 47, 66, 1492, 1633, 1894, 1922, 1923, 1949], "unrol": [17, 75, 80, 1898, 1899, 1937], "fsdp": [17, 45, 48, 66, 1894], "modif": [17, 19, 34, 66, 74, 240, 796, 913, 1146, 1147, 1221, 1453, 1633, 1919, 1924, 1930, 1941, 1944], "delai": [17, 66, 1633, 1951], "outlin": [17, 44, 1942, 1950], "bucket": [17, 29, 41, 47, 1361, 1633, 1897, 1923, 1939], "broadcast": [17, 43, 47, 49, 66, 71, 116, 215, 416, 418, 419, 420, 529, 531, 533, 582, 701, 702, 703, 704, 705, 706, 707, 713, 751, 900, 936, 941, 944, 948, 949, 950, 951, 981, 1008, 1037, 1088, 1089, 1094, 1099, 1139, 1140, 1141, 1142, 1163, 1165, 1177, 1187, 1245, 1246, 1253, 1266, 1270, 1275, 1276, 1278, 1281, 1289, 1309, 1314, 1315, 1325, 1342, 1345, 1354, 1357, 1370, 1388, 1407, 1459, 1525, 1534, 1596, 1633, 1692, 1728, 1736, 1759, 1761, 1837, 1856, 1861, 1889, 1894, 1895, 1899, 1912, 1913, 1914, 1923, 1937, 1939, 1954], "fraction": [17, 40, 49, 1064, 1137, 1143, 1338, 1384, 1385, 1386, 1401, 1402, 1459, 1500, 1547, 1548, 1650, 1651, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1740, 1917], "rob": 17, "fusion": [17, 19, 28, 29, 74, 808, 830, 876, 877, 968, 1223, 1229, 1234, 1235, 1236, 1237, 1907, 1930, 1944], "diminish": 17, "vast": 17, "nopython": [17, 19, 20, 29], "250k": 17, "aitempl": 17, "fuse": [17, 19, 28, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 808, 809, 818, 820, 821, 822, 830, 863, 875, 876, 968, 1234, 1235, 1602, 1696, 1697, 1907, 1912, 1937, 1940, 1944, 1945, 1946, 1947], "mobil": [17, 1907, 1944], "fine": [17, 29, 33, 43, 45, 47, 50, 874, 877, 1145, 1236, 1602, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1893, 1894, 1911, 1919, 1922, 1924, 1937, 1941, 1942, 1944, 1953], "succeed": [17, 51, 60, 87, 89, 1310], "aot_eag": [17, 29], "warn": [17, 18, 20, 21, 29, 33, 37, 41, 43, 47, 99, 100, 102, 696, 917, 923, 958, 1006, 1053, 1057, 1068, 1071, 1072, 1162, 1202, 1236, 1278, 1322, 1459, 1497, 1498, 1499, 1500, 1642, 1645, 1782, 1790, 1875, 1886, 1893, 1905, 1909, 1920, 1924, 1939, 1941, 1948], "torchdynamo_debug_funct": [17, 29], "desired_function_nam": 17, "replay_record_en": [17, 29], "hundr": [17, 29, 1918, 1929], "thousand": [17, 29], "highli": [17, 60, 1361, 1633, 1893, 1931, 1937, 1953, 1960], "tini": [17, 22, 1959, 1960, 1965], "torchdynamo_repro_aft": [17, 29], "aot": [17, 18, 29, 696, 970, 1905], "your_model": 17, "quickest": 17, "repro": [17, 29, 1691], "torchdynamo_repro_dir": 17, "nvfuser": [17, 19, 29, 1896], "compile_tim": [17, 25, 29], "torch_compile_debug": [17, 19], "_inductor": [17, 21, 29, 968], "diagram": [17, 29, 51, 60, 1221, 1453, 1944, 1951], "guard": [17, 23, 26, 29, 51, 75, 80, 83, 696, 968, 1894, 1905, 1932, 1939, 1941, 1961, 1964], "cache_size_limit": [17, 20, 29, 968], "troubl": [17, 18, 29], "compileprofil": [17, 29], "profiler_model": [17, 29], "upcom": [17, 29, 43, 1918], "tune": [17, 29, 41, 43, 47, 1051, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1919, 1922, 1931, 1944], "traffic": 17, "frozen_toy_exampl": 17, "vertic": [17, 1887, 1888, 1940, 1942, 1958], "cosin": [17, 699, 700, 983, 984, 1387, 1388, 1534, 1713, 1714, 1721, 1799, 1940], "horizont": [17, 966, 1184, 1186, 1940, 1942], "simplest": [17, 20, 21, 40, 45, 51, 74, 874, 1366, 1367, 1368, 1381, 1382, 1383, 1446, 1447, 1448, 1643, 1923, 1924, 1930, 1944, 1951, 1953], "schedul": [17, 45, 51, 53, 59, 73, 696, 1707, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1905, 1923, 1929, 1943], "physic": [17, 61, 1112, 1130, 1900, 1921, 1932, 1953], "principl": [17, 1922], "stream": [17, 40, 43, 51, 58, 66, 73, 169, 503, 909, 923, 988, 989, 993, 995, 996, 997, 998, 1001, 1002, 1003, 1011, 1014, 1015, 1029, 1035, 1067, 1070, 1334, 1335, 1340, 1688, 1761, 1894, 1897, 1899, 1949], "multiprocessor": 17, "tile": [17, 509, 1897, 1939, 1953], "some_fun": [17, 29], "insurmount": [17, 29], "invis": [17, 29, 1922], "introduc": [17, 21, 23, 29, 37, 49, 71, 776, 1293, 1405, 1423, 1468, 1563, 1766, 1893, 1899, 1920, 1923, 1931, 1937, 1941, 1942, 1943, 1949, 1953, 1959], "maxim": [17, 29, 890, 1318, 1449, 1450, 1451, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1707, 1708, 1709, 1710, 1953], "explain": [17, 29, 34, 43, 1710, 1893, 1899, 1918, 1922, 1925, 1932, 1953], "aggreg": [17, 29, 41, 43, 45, 53, 66, 1397, 1544, 1633, 1656, 1909, 1942], "woo": [17, 29], "out_guard": [17, 29], "ops_per_graph": [17, 29], "builtinvari": [17, 29], "constantvari": [17, 20, 29], "t2": [17, 29, 50, 703, 704, 896, 1145, 1174, 1633, 1949, 1950], "generic_jump": [17, 29], "17": [17, 29, 33, 43, 701, 1218, 1273, 1450, 1813, 1896, 1937, 1939, 1953], "throw": [17, 19, 29, 43, 44, 48, 73, 74, 209, 341, 346, 561, 630, 1206, 1221, 1261, 1310, 1453, 1633, 1635, 1636, 1669, 1680, 1735, 1875, 1914, 1919, 1934, 1949, 1959], "fullgraph": [17, 29, 968], "went": [17, 43, 74], "torchdynamo_dynamic_shap": 17, "cv": 17, "nlp": [17, 41, 1416, 1417, 1418, 1425], "client": [17, 43, 47, 60, 1051, 1941], "app": 17, "unnecessarili": 17, "cold": [17, 24], "metric": [17, 24, 46, 1043, 1045, 1051, 1723, 1909, 1930, 1943, 1958], "visibli": 17, "torchdynamo_repro_level": [17, 29], "bisect": [17, 29], "codegen": [17, 22, 29, 74, 1924], "dramat": [17, 29], "impact": [17, 23, 29, 41, 43, 1051, 1783, 1907, 1909, 1919, 1944, 1957], "fallback_random": [17, 29, 968], "alpha": [17, 49, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 170, 171, 330, 331, 570, 577, 578, 579, 580, 701, 702, 705, 706, 707, 760, 786, 791, 936, 1037, 1038, 1178, 1192, 1365, 1375, 1395, 1441, 1480, 1518, 1526, 1541, 1542, 1552, 1570, 1603, 1693, 1707, 1800, 1801, 1814, 1818, 1832, 1837, 1838, 1895, 1897, 1919, 1924, 1937, 1940], "root": [17, 43, 45, 53, 60, 61, 66, 74, 809, 1159, 1258, 1259, 1707, 1770, 1829, 1907, 1919, 1941, 1949, 1950, 1953], "allevi": [17, 1942], "cudagraph": [17, 19, 22, 24, 968, 1029, 1894, 1922], "amen": 18, "portion": [18, 29, 66, 1143, 1390, 1484, 1592, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1945], "usecas": 18, "disallow_in_graph": 18, "allow_in_graph": [18, 75], "excel": [18, 74], "unblock": 18, "friendli": 18, "disallow": [18, 74, 1941, 1949, 1956], "nnthi": 18, "suitabl": [18, 40, 49, 952, 1240, 1710, 1775, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1933, 1943, 1945, 1958], "fbgemm": [18, 758, 759, 772, 780, 849, 871, 872, 875, 877, 878, 1944, 1945], "black": 18, "nnnote": 18, "screen": [18, 25], "deploy": [18, 51, 60, 1894], "tl": [18, 19], "dr": 18, "intercept": [18, 66, 74, 1924], "a_fn": 18, "b_fn": 18, "aa_fn": 18, "ab_fn": 18, "green": [18, 1898, 1899], "color": [18, 1418, 1898, 1899, 1958], "white": 18, "offend": [18, 1893], "syntax": [18, 1221, 1896, 1899, 1941], "style": [18, 45, 48, 50, 74, 893, 1089, 1145, 1679, 1896, 1898, 1899, 1937, 1941, 1958], "miss": [18, 20, 58, 705, 1150, 1221, 1315, 1325, 1387, 1416, 1417, 1418, 1453, 1569, 1675, 1924, 1936, 1937, 1938, 1953], "incorrectli": [18, 37, 66, 998, 1139], "cautiou": 18, "switch": [18, 31, 40, 69, 73, 74, 1263, 1264, 1265, 1393, 1552, 1590, 1637, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1771, 1875, 1911, 1919, 1922, 1930, 1932, 1940], "safeti": [18, 51, 74, 970, 971, 1896, 1899, 1913], "bypass": [18, 970, 1094, 1903, 1914, 1922, 1924], "sound": [18, 74, 970, 971, 1481, 1903, 1958], "faq": [18, 40, 1390, 1669, 1894], "inlin": [18, 33, 73, 75, 77, 81, 1037, 1221, 1225, 1236, 1921], "begin": [18, 29, 37, 40, 41, 43, 44, 52, 60, 66, 74, 512, 696, 776, 800, 836, 837, 881, 937, 981, 995, 1043, 1045, 1114, 1174, 1180, 1241, 1276, 1288, 1368, 1369, 1370, 1387, 1389, 1395, 1405, 1406, 1409, 1410, 1411, 1412, 1413, 1414, 1420, 1423, 1424, 1439, 1444, 1447, 1448, 1460, 1461, 1468, 1471, 1484, 1490, 1495, 1502, 1535, 1556, 1557, 1633, 1640, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1713, 1715, 1721, 1788, 1791, 1794, 1836, 1861, 1872, 1889, 1899, 1918, 1919, 1922, 1924, 1927, 1929, 1934, 1937, 1940, 1947, 1954], "deprec": [18, 43, 51, 60, 61, 66, 70, 424, 529, 573, 619, 801, 802, 803, 809, 842, 923, 924, 958, 959, 1044, 1048, 1167, 1221, 1275, 1278, 1310, 1311, 1369, 1370, 1387, 1389, 1412, 1413, 1419, 1420, 1444, 1445, 1453, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1506, 1507, 1524, 1525, 1535, 1564, 1587, 1595, 1621, 1622, 1623, 1625, 1633, 1674, 1675, 1677, 1680, 1739, 1755, 1836, 1840, 1863, 1894, 1896, 1901, 1911, 1920, 1943, 1947, 1955, 1959, 1960], "finer": [18, 48], "wishlist": 18, "cc": [18, 33, 43, 1922], "skipfiles_inline_module_allowlist": 18, "breadcrumb": 18, "forgot": 18, "checkout": [19, 1937], "new_fn": 19, "input_tensor": [19, 43], "10000": [19, 37, 41, 710, 1721, 1768, 1926, 1930, 1953, 1958], "Its": [19, 43, 74, 986, 1009, 1221, 1268, 1286, 1287, 1312, 1453, 1680, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1703, 1706, 1707, 1708, 1709, 1710, 1883, 1899, 1923], "famou": 19, "suboptim": [19, 41], "crucial": [19, 20, 21, 22, 34, 1903], "bottleneck": [19, 41, 1894, 1930], "bandwidth": [19, 22, 41, 43, 59, 61, 1944, 1949], "crunch": 19, "elimin": [19, 28, 43, 74, 626, 1872, 1873, 1934], "trig": 19, "size_hint": 19, "16384": [19, 1922], "filenam": [19, 33, 40, 74, 1220, 1228, 1231, 1893, 1897, 1908, 1919, 1941, 1955, 1958], "__file__": [19, 1893, 1936, 1941], "fp32": [19, 66, 797, 810, 833, 1079, 1633, 1922, 1933, 1944, 1945, 1947], "i32": 19, "instance_descriptor": 19, "divisible_by_16": 19, "equal_to_1": 19, "in_ptr0": 19, "out_ptr0": 19, "xnumel": 19, "xblock": 19, "constexpr": 19, "xoffset": 19, "program_id": 19, "xindex": 19, "xmask": 19, "x0": [19, 49], "tmp0": 19, "tmp1": 19, "tmp2": 19, "tmp3": 19, "temporari": [19, 33, 74, 839, 842, 1634, 1919, 1926], "held": [19, 73, 995, 1019, 1047, 1331, 1918], "resnet50": [19, 1893, 1958], "hub": [19, 1894, 1908], "v0": 19, "resnet18": [19, 25, 69, 74, 1893, 1896, 1898, 1908, 1941], "opt_model": 19, "64": [19, 69, 70, 72, 968, 1155, 1156, 1160, 1358, 1359, 1360, 1362, 1363, 1364, 1370, 1481, 1602, 1776, 1877, 1914, 1936, 1937, 1944, 1948, 1953, 1956, 1958, 1959], "inspir": [19, 66, 1699, 1924], "frequent": [19, 21, 31, 45, 1361, 1894, 1932, 1933, 1935, 1953], "timm": [19, 21, 24], "download": [19, 1908, 1936, 1958], "huggingfac": [19, 21, 24], "berttoken": 19, "bertmodel": 19, "past": [19, 22, 24, 43, 74, 1006, 1053, 1057, 1071, 1072, 1633, 1926], "bert": [19, 1499], "uncas": 19, "token": [19, 60, 995, 1029, 1030, 1893, 1900], "from_pretrain": [19, 1396, 1397], "me": 19, "encoded_input": 19, "return_tensor": 19, "pt": [19, 31, 41, 66, 1226, 1228, 1231, 1238, 1292, 1771, 1896, 1930, 1935, 1941], "trigonometri": 19, "skim": 19, "create_model": 19, "resnext101_32x8d": 19, "7": [19, 24, 33, 40, 41, 43, 49, 74, 75, 80, 278, 331, 333, 335, 339, 419, 420, 488, 529, 576, 623, 633, 701, 713, 761, 762, 920, 922, 944, 947, 952, 958, 962, 966, 1077, 1089, 1091, 1092, 1095, 1110, 1133, 1134, 1137, 1140, 1144, 1174, 1184, 1198, 1242, 1246, 1256, 1261, 1263, 1264, 1267, 1268, 1272, 1273, 1277, 1284, 1351, 1352, 1353, 1359, 1360, 1363, 1364, 1366, 1377, 1396, 1441, 1449, 1450, 1474, 1475, 1476, 1477, 1478, 1501, 1504, 1519, 1590, 1658, 1663, 1673, 1680, 1699, 1746, 1750, 1756, 1766, 1767, 1768, 1775, 1788, 1791, 1793, 1804, 1805, 1813, 1820, 1822, 1823, 1828, 1840, 1842, 1843, 1850, 1855, 1856, 1859, 1861, 1870, 1883, 1887, 1896, 1900, 1906, 1913, 1914, 1920, 1922, 1924, 1933, 1935, 1937, 1939, 1944, 1953, 1956, 1957, 1958, 1959, 1960], "highest": [19, 100, 696, 1361, 1750, 1751, 1783, 1945, 1960], "aot_ts_nvfus": 19, "nvprims_nvfus": 19, "onnxrt": 19, "ipex": 19, "tvm": 19, "apach": 19, "symbolic_trac": [19, 74], "partial": [19, 23, 49, 51, 60, 66, 69, 74, 857, 1040, 1084, 1161, 1174, 1267, 1268, 1269, 1311, 1449, 1450, 1451, 1579, 1580, 1581, 1633, 1652, 1820, 1899, 1900, 1913, 1919, 1924, 1927, 1937, 1951, 1960], "smoother": [19, 1893, 1906], "transit": [19, 20, 1221, 1322, 1453, 1836, 1894, 1896], "ux": [20, 67, 72], "perspect": [20, 1923, 1933, 1950], "fn_foo": 20, "grab": 20, "dig": 20, "hole": 20, "perf": [20, 22, 33, 696, 1944], "neutral": 20, "referenc": [20, 74, 998, 1221, 1453, 1863, 1898, 1919, 1937, 1949], "previous": [20, 23, 60, 66, 67, 70, 71, 72, 74, 240, 714, 808, 809, 1162, 1228, 1834, 1835, 1881, 1882, 1886, 1896, 1920, 1922, 1930, 1941, 1942, 1948, 1949, 1954], "translat": [20, 43, 104, 105, 1174, 1919, 1951], "check_fn": 20, "thrown": [20, 43, 48, 73, 633, 894, 896, 1051, 1092, 1184, 1221, 1251, 1260, 1262, 1264, 1267, 1268, 1279, 1453, 1637, 1887, 1941], "_pyinterpreterstate_setevalframefunc": 20, "convert_fram": [20, 29], "convert_frame_assert": 20, "gloss": 20, "proxi": [20, 43, 45, 1944], "222": 20, "compiler_fn": 20, "one_graph": 20, "_convert_frame_assert": 20, "frametyp": 20, "cache_s": [20, 49], "f_code": 20, "unsupport": [20, 23, 71, 75, 77, 83, 97, 99, 102, 1896, 1900, 1913, 1938, 1949, 1953], "drop": [20, 40, 70, 72, 74, 1040, 1226, 1279, 1284, 1365, 1675, 1836, 1896, 1913, 1932], "needless": 20, "evict": 20, "alongsid": [20, 33, 1221, 1453, 1924], "transform_code_object": 20, "output_instruct": 20, "rememb": [20, 1926, 1932], "guardedcod": 20, "symbolic_loc": 20, "f_local": 20, "travers": [20, 66, 852, 1633, 1923, 1924, 1950, 1962, 1963], "ordereddict": [20, 1221, 1453, 1454, 1463, 1481, 1624, 1656, 1897, 1930, 1935, 1960], "k": [20, 22, 29, 40, 43, 45, 49, 61, 74, 304, 372, 522, 529, 531, 533, 606, 633, 776, 961, 1081, 1094, 1150, 1163, 1183, 1242, 1250, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1266, 1267, 1270, 1272, 1279, 1281, 1283, 1284, 1293, 1311, 1315, 1366, 1368, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1401, 1402, 1405, 1406, 1423, 1424, 1438, 1440, 1441, 1446, 1448, 1459, 1460, 1468, 1470, 1535, 1547, 1548, 1570, 1587, 1640, 1727, 1729, 1739, 1767, 1817, 1818, 1819, 1820, 1822, 1823, 1824, 1826, 1827, 1836, 1858, 1863, 1895, 1897, 1898, 1917, 1922, 1924, 1936, 1953, 1954, 1956], "variablebuild": 20, "localsourc": 20, "_wrap": 20, "construct": [20, 33, 34, 40, 43, 45, 47, 48, 49, 60, 66, 68, 70, 71, 74, 75, 80, 81, 169, 465, 808, 809, 840, 894, 895, 909, 923, 976, 1081, 1097, 1162, 1183, 1221, 1232, 1236, 1237, 1244, 1251, 1291, 1292, 1307, 1322, 1396, 1397, 1453, 1543, 1624, 1633, 1635, 1636, 1666, 1673, 1687, 1729, 1733, 1780, 1815, 1822, 1823, 1824, 1825, 1826, 1827, 1841, 1854, 1857, 1886, 1894, 1896, 1909, 1922, 1923, 1930, 1932, 1935, 1941, 1944, 1949, 1951, 1956, 1958, 1959, 1960], "variabletrack": 20, "make_guard": 20, "outputgraph": [20, 74], "mention": [20, 22, 29, 43, 1893, 1898, 1899, 1913, 1919, 1922, 1930, 1937, 1953, 1957], "recal": [20, 1370, 1924, 1958], "heart": [20, 40], "pump": 20, "cool": 20, "get_instruct": 20, "124": 20, "opnam": 20, "argval": 20, "starts_lin": 20, "is_jump_target": 20, "littl": [20, 43, 1924, 1951], "hasattr": [20, 74, 1876, 1897, 1924, 1944], "inst": 20, "unimpl": 20, "getattr": [20, 74, 1897, 1924, 1935], "inde": [20, 23, 50, 1896, 1906, 1941, 1951], "onto": [20, 28, 43, 66, 74, 75, 77, 1056, 1228, 1231, 1292, 1645, 1876, 1893, 1911, 1922, 1925, 1926, 1930, 1943], "dozen": 20, "symbolic_convert": [20, 29], "spoken": 20, "quiet": 20, "closer": [20, 22, 1174, 1502, 1740, 1924, 1930], "mind": [20, 21, 25, 1266, 1284, 1396, 1919, 1925, 1927], "replace_guard": 20, "add_guard": 20, "visit": [20, 22, 63, 1937], "act": [20, 45, 49, 51, 58, 71, 874, 1370, 1454, 1455, 1464, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1657, 1659, 1660, 1661, 1662, 1663, 1875, 1922, 1930, 1934, 1940], "behalf": 20, "python_typ": 20, "as_proxi": 20, "as_python_proxi": 20, "bookkeep": 20, "came": 20, "somewher": [20, 1913, 1929], "flesh": 20, "notimplementederror": [20, 49, 1941], "relianc": 20, "fulfil": [20, 1919, 1925, 1941], "build_tupl": 20, "gist": [20, 22, 70, 809, 1927], "notion": [20, 40, 924, 1371, 1372, 1373, 1416, 1417, 1418, 1492], "popn": 20, "tuplevari": 20, "pydoc": 20, "tensorvari": 20, "instructiontranslatorbas": 20, "pop": [20, 71, 1055, 1454, 1463, 1939, 1942, 1943], "dataclass": [20, 28, 45], "ctor": 20, "guardsourc": 20, "create_fn": 20, "kind": [20, 43, 54, 74, 696, 1240, 1634, 1691, 1738, 1803, 1893, 1903, 1924, 1932, 1937, 1941, 1944, 1954, 1956], "guard_sourc": 20, "elif": [20, 28, 74, 1227, 1419, 1687, 1898, 1899, 1928], "istyp": 20, "guardbuild": 20, "equals_match": 20, "rangevari": 20, "appar": 20, "checkfunctionmanag": 20, "compile_check_fn": 20, "cacheentri": 20, "create_cache_entri": 20, "pyobject": 20, "guarded_cod": 20, "malloc": 20, "sizeof": [20, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1955], "debug_null_check": 20, "pyobject_getattrstr": 20, "null_check": 20, "pycodeobject": 20, "compos": [20, 23, 49, 70, 74, 754, 755, 756, 757, 758, 759, 782, 783, 788, 789, 790, 798, 799, 959, 961, 1152, 1154, 1155, 1156, 1162, 1221, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1401, 1402, 1421, 1422, 1441, 1446, 1447, 1448, 1453, 1501, 1506, 1507, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1570, 1573, 1574, 1576, 1577, 1578, 1744, 1745, 1886, 1894, 1895, 1896, 1899, 1912, 1924, 1925, 1930, 1937, 1941, 1958], "sort_kei": 20, "guard_nn_modul": 20, "is_nn_modul": 20, "local_build": 20, "global_build": 20, "___guarded_cod": 20, "___check_type_id": 20, "94367738391392": 20, "___check_tensor": 20, "id": [20, 24, 29, 37, 40, 43, 47, 51, 59, 60, 61, 66, 74, 790, 840, 995, 1030, 1492, 1578, 1617, 1633, 1691, 1899, 1929, 1937, 1939, 1941, 1948, 1949, 1950, 1955], "deeper": [20, 26, 1894, 1930, 1941], "dive": [20, 22, 26, 1894, 1923, 1927, 1941], "_eval_fram": 20, "anew": 20, "massiv": 20, "role": [20, 45, 51, 52, 60, 61], "weak": 20, "moduleinvalid": 20, "2x": [21, 22, 1958], "compress": [21, 24, 41, 66, 227, 603, 604, 1116, 1117, 1126, 1127, 1633, 1822, 1823, 1824, 1826, 1827, 1860, 1894], "varieti": [21, 1922, 1950], "announc": [21, 60], "compiled_fn": 21, "set_float32_matmul_precis": [21, 1170], "list_opt": [21, 968], "list_mode_opt": [21, 968], "simpler": [21, 72, 1162, 1886, 1896, 1919, 1924, 1927, 1930], "bench_al": 21, "autotun": [21, 22, 968], "quirk": 21, "ask": [21, 43, 70, 71, 1893, 1894, 1925, 1927], "overview": [21, 34, 43, 57, 1633, 1894, 1906, 1911, 1919, 1927, 1930, 1942, 1944, 1949], "nnmodul": 21, "torchinductor_unique_kernel_nam": 22, "triton_": 22, "envvar": 22, "meaning": [22, 51, 53, 54, 1051, 1922], "triton_poi_fused_cat_155": 22, "categori": [22, 23, 49, 53, 99, 1343, 1899, 1901, 1937, 1940, 1943, 1945, 1956], "poi": 22, "torchinductor_benchmark_kernel": 22, "har": 22, "torchinductor_max_autotun": 22, "hope": [22, 1937], "breakdown": 22, "mixnet_l": 22, "timm_model": 22, "amp": [22, 24, 29, 1040, 1878, 1894, 1918], "dashboard": [22, 26, 1894], "torchinductor_shunt": 22, "qz": 22, "cqz7hvhood7y3psp7fy6msjxsxyli7qiwiybizdwtjw6ffyq5wwd": 22, "shunting314": 22, "c2a4d8a28b00fcb5586d0e9d9bf77f9f": 22, "48efc83b12ec3ead950052e4a0220b10": 22, "p": [22, 41, 45, 49, 66, 74, 173, 252, 304, 442, 443, 470, 507, 508, 624, 702, 705, 936, 938, 948, 956, 1088, 1241, 1252, 1258, 1259, 1267, 1268, 1310, 1312, 1315, 1325, 1346, 1365, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1419, 1421, 1422, 1458, 1462, 1464, 1501, 1502, 1518, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1573, 1574, 1584, 1588, 1591, 1592, 1618, 1637, 1643, 1645, 1651, 1660, 1680, 1709, 1760, 1817, 1895, 1897, 1898, 1918, 1919, 1922, 1926, 1927, 1932, 1943, 1953, 1954], "8243734a38b5733ea78479209c0ae893": 22, "chrome": [22, 25, 932, 1943], "compiled_module_profil": 22, "json": [22, 25, 53, 58, 62, 1929, 1943], "browser": [22, 25], "ui": [22, 24, 1927, 1958], "zoom": [22, 25], "percent": [22, 1053, 1072], "regard": [22, 43, 1384, 1385, 1386, 1396, 1397, 1543, 1544, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1896, 1951, 1953], "102": [22, 1361], "88": 22, "distort": [22, 25], "densenet121": 22, "69": 22, "58": [22, 43], "85": [22, 25, 74, 1456, 1721], "89": [22, 633, 1747], "cutlass": 22, "cudnn": [22, 38, 39, 776, 1230, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1405, 1423, 1468, 1469, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1783, 1894, 1897, 1922, 1933, 1934], "conv": [22, 23, 74, 718, 719, 720, 721, 722, 723, 724, 725, 726, 808, 809, 812, 830, 870, 876, 1221, 1230, 1236, 1237, 1381, 1382, 1383, 1384, 1385, 1386, 1453, 1454, 1460, 1907, 1917, 1922, 1933, 1937, 1944, 1945, 1946, 1947], "56": [22, 756, 1953], "57": 22, "gain": [22, 1710, 1917], "effort": [22, 43, 1949], "nice": [22, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1446, 1447, 1448, 1504, 1913, 1919, 1941], "triton_red_fused__native_batch_norm_legit_functional_16": 22, "19": [22, 701, 762, 961, 1450, 1896, 1937, 1953], "jk": [22, 1094], "cjk2vm3446xrk7rth7hr6pun7xxo3dnzubwcn6ydrpifal4eykrz": 22, "renam": [22, 809, 1876, 1878, 1897, 1912, 1913, 1939], "96a0afef9dce53d6357bf1633094f358": 22, "standalon": [22, 33, 59, 60, 61, 833, 1232, 1236, 1896], "constabl": 23, "edg": [23, 795, 801, 1174, 1182, 1183, 1563, 1621, 1904, 1925, 1950], "orchestr": 23, "_forward_pre_hook": 23, "forward_hook": [23, 1930], "_backward_pre_hook": 23, "_backward_hook": 23, "_state_dict_hook": 23, "load_": 23, "alter": [23, 1918, 1924], "backward_hook": [23, 1930], "avoiabl": 23, "fire": [23, 1221, 1453, 1923, 1929], "presenc": [23, 71, 74, 1230, 1348, 1932, 1941, 1953], "opaqu": [23, 43, 50, 995, 1029, 1030, 1145], "skip_nnmodule_hook_guard": 23, "react": [23, 51], "pre_backward": 23, "accordingli": [23, 49, 74, 1230, 1423, 1645, 1914, 1949], "warn_onc": 23, "bin": [24, 51, 58, 60, 318, 319, 835, 939, 1181, 1182, 1183, 1897, 1899, 1939, 1958], "hui": 24, "nightli": 24, "gcp": [24, 43], "a100": [24, 29], "night": 24, "40gb": [24, 29], "2ghz": 24, "xeon": [24, 1894, 1921], "suit": [24, 43, 1896, 1898, 1899, 1937, 1945, 1949], "torchbench": 24, "trend": 24, "droplist": 24, "geometr": [24, 304, 795, 801, 1552, 1563, 1621, 1880, 1894, 1939, 1961], "peak": [24, 45, 47, 66, 1043, 1045, 1051, 1058, 1059, 1060, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1715, 1721, 1942], "footprint": [24, 41, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1922, 1937, 1953], "ratio": [24, 49, 51, 633, 1401, 1402, 1547, 1548, 1897, 1953], "click": [24, 25, 1961], "with_cudagraph": 24, "dynamic_shap": [24, 1686], "kick": [24, 1923, 1949, 1950], "Be": [24, 1937], "wise": [24, 41, 43, 49, 703, 704, 714, 774, 786, 787, 796, 800, 900, 980, 1094, 1099, 1140, 1141, 1164, 1165, 1177, 1186, 1243, 1245, 1302, 1303, 1304, 1305, 1309, 1319, 1322, 1324, 1354, 1375, 1386, 1393, 1395, 1409, 1410, 1411, 1412, 1414, 1439, 1442, 1452, 1461, 1471, 1472, 1473, 1480, 1482, 1483, 1484, 1489, 1491, 1493, 1494, 1526, 1541, 1550, 1551, 1555, 1556, 1557, 1558, 1561, 1565, 1567, 1572, 1582, 1583, 1596, 1597, 1598, 1603, 1604, 1605, 1606, 1610, 1612, 1613, 1614, 1820, 1888, 1921, 1924, 1953, 1954, 1957], "granular": [25, 48, 66, 1234, 1918], "toosl": 25, "ncu": 25, "export_chrome_trac": [25, 1943], "artifact": [25, 29, 696, 1905, 1929, 1941], "torchvis": [25, 74, 1893, 1894, 1896, 1898, 1937, 1941, 1944, 1958, 1962], "224": [25, 74, 877, 878, 1896, 1898, 1937], "model_c": 25, "fwd_bwd": 25, "w": [25, 49, 72, 169, 776, 905, 907, 909, 915, 923, 937, 946, 986, 1152, 1163, 1178, 1179, 1218, 1260, 1359, 1360, 1367, 1368, 1370, 1372, 1373, 1377, 1382, 1383, 1389, 1393, 1394, 1396, 1397, 1398, 1405, 1417, 1418, 1425, 1436, 1437, 1447, 1448, 1458, 1459, 1460, 1465, 1466, 1487, 1503, 1504, 1506, 1507, 1517, 1525, 1543, 1544, 1552, 1587, 1593, 1594, 1641, 1674, 1677, 1897, 1912, 1913, 1917, 1919, 1924, 1927, 1940, 1941, 1958], "scroll": 25, "shortcut": 25, "compiledfunct": 25, "compiledfunctionbackward": 25, "draw": [25, 40, 173, 938, 1057, 1343, 1746, 1958], "connect": [25, 43, 51, 60, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434, 1481, 1911, 1949], "ac2g": 25, "dropdown": 25, "525": 25, "_util": [25, 40], "_init_for_cuda_graph": 25, "ed": [25, 49, 71, 1392, 1393, 1919, 1941, 1964], "1gb": [25, 1922], "roughli": [25, 28, 40, 1419, 1923], "graphic": [25, 74, 1910, 1936], "warmup_compil": 25, "fn_c": 25, "record_funct": 25, "trace_compil": 25, "interrupt": [25, 51, 1911], "synthet": 25, "modelwithbreak": 25, "create_sequenti": 25, "128": [25, 633, 736, 744, 745, 772, 780, 810, 835, 836, 1374, 1388, 1415, 1440, 1462, 1501, 1502, 1534, 1602, 1913, 1914, 1944, 1946, 1947, 1949, 1953, 1956, 1959], "mod1": 25, "mod2": 25, "mod3": 25, "mod4": 25, "trace_break": 25, "gap": [25, 66, 881, 1755, 1894, 1944], "pep": [26, 1896, 1898, 1937], "523": 26, "rewrit": [26, 45, 71, 75, 77, 82, 83, 97, 98, 1907, 1919, 1927, 1937], "customiz": [26, 1900, 1962], "usabl": [26, 29, 73, 1899, 1937], "openmp": [26, 1894, 1921, 1936], "video": [26, 1465, 1466, 1913, 1958], "topic": [26, 31, 1929, 1930], "vmap": [27, 67, 69, 70, 74, 917, 919, 923, 924, 925, 1152, 1155, 1156, 1158, 1160], "jacrev": [27, 68, 70, 71, 919, 1154, 1155, 1925], "100320": 27, "escap": [27, 75], "hatch": [27, 75], "introspect": [27, 74, 970], "jax": [27, 67, 70, 71, 72, 1919, 1925], "promis": 27, "pure": [27, 33, 34, 71, 1224, 1896, 1924], "relax": [27, 49, 1236, 1237, 1645, 1944], "pitfal": [27, 1894], "functional_cal": [27, 68, 70, 1160], "sit": 28, "replace_add_with_mul": 28, "insert": [28, 40, 43, 49, 66, 73, 74, 763, 808, 809, 877, 878, 1454, 1455, 1463, 1633, 1775, 1778, 1788, 1809, 1833, 1874, 1896, 1907, 1922, 1938, 1939, 1944], "insert_relu_after_add": 28, "inserting_aft": [28, 74], "new_relu_nod": 28, "replace_all_uses_with": [28, 74], "axi": [28, 529, 531, 533, 838, 841, 978, 1093, 1108, 1134, 1163, 1186, 1741, 1761, 1766, 1767, 1888, 1895, 1897, 1925, 1937, 1942, 1944], "eg": [28, 952, 1768, 1775], "dead": [28, 74], "frequenc": [28, 61, 939, 986, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1218, 1361, 1396, 1397, 1543, 1544, 1715, 1836], "replaceaddwithmul": 28, "transformed_graph_modul": 28, "graph_modul": [28, 875], "replaceaddwithmulsub": 28, "mul_r": 28, "sub": [28, 53, 66, 73, 75, 78, 82, 83, 578, 830, 877, 878, 1232, 1236, 1237, 1318, 1321, 1323, 1465, 1466, 1496, 1497, 1499, 1760, 1838, 1855, 1893, 1895, 1896, 1897, 1912, 1914, 1919, 1932, 1937, 1939, 1953, 1956], "removedetachpass": 28, "detach_copi": [28, 1897, 1939], "len": [28, 40, 43, 45, 74, 75, 80, 237, 561, 711, 712, 1113, 1117, 1120, 1124, 1127, 1131, 1161, 1225, 1287, 1308, 1320, 1348, 1351, 1390, 1590, 1651, 1653, 1669, 1714, 1721, 1825, 1828, 1834, 1835, 1839, 1880, 1881, 1882, 1896, 1897, 1899, 1924, 1939, 1953, 1958], "args_map": 28, "schema": [28, 37, 43, 45, 100, 1895, 1896, 1897, 1899, 1903, 1937], "enumer": [28, 40, 49, 74, 1221, 1453, 1455, 1464, 1714, 1897, 1898, 1918, 1922, 1936, 1958], "_schema": 28, "kwarg_onli": 28, "scalartotensorpass": 28, "breakpoint": [28, 74, 1899], "try_coerc": 28, "tensortyp": [28, 1899], "wildcard": [28, 1913, 1941], "subgraph_rewrit": [28, 74], "replace_pattern": 28, "replaced_pattern": 28, "replace_pattern_with_filt": 28, "traced_modul": [28, 74, 1935], "replacedpattern": 28, "nodes_map": [28, 74], "passmanag": 28, "blob": [28, 808, 1151, 1927, 1929, 1937, 1958], "infra": [28, 29, 53, 1938], "pass_manag": 28, "__": [28, 1900], "pm": 28, "replace_add_with_div": 28, "replace_div_with_mul": 28, "run_checks_after_each_pass": 28, "suppress_check_failur": 28, "graph_module_out": 28, "set_check": 28, "check_div_target": 28, "div": [28, 41, 254, 1090, 1139, 1142, 1361, 1465, 1466, 1759, 1868, 1895, 1897, 1903, 1912, 1939, 1953, 1956], "valueerror": [28, 73, 75, 99, 1219, 1645, 1646, 1666, 1669, 1924, 1942, 1960], "add_check": 28, "subgraphmatch": 28, "matcher_util": 28, "match_output": 28, "match_placehold": 28, "remove_overlapping_match": 28, "ignore_liter": 28, "liter": [28, 1689, 1897, 1900, 1913, 1941], "largemodel": 28, "_weight": [28, 761, 762, 1396, 1397, 1700], "_bia": 28, "large_model_graph": 28, "patternmodel": 28, "_weight_1": 28, "_bias_1": 28, "pattern_graph": 28, "subgraph_match": 28, "match_result": 28, "internalmatch": 28, "default_factori": 28, "placeholder_nod": 28, "returning_nod": 28, "largest": [28, 66, 606, 939, 1138, 1252, 1273, 1275, 1277, 1278, 1293, 1589, 1641, 1858, 1895, 1897, 1898, 1899, 1965], "capabilitybasedpartition": 28, "l34": 28, "operator_support": 28, "operatorsupportbas": 28, "allows_single_node_partit": 28, "non_compute_op": 28, "ex": [28, 52, 1633, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1909], "_oper": 28, "getitem": [28, 75, 83, 85], "allowed_single_node_partition_op": 28, "ll28c1": 28, "l28c1": 28, "is_node_support": 28, "chain": [28, 40, 41, 49, 73, 74, 169, 909, 958, 1276, 1397, 1481, 1711, 1724, 1899, 1919, 1922, 1924, 1927, 1930, 1940], "operatorsuppportbas": 28, "l150": 28, "any_chain": 28, "l164": 28, "addmuloperatorsupport": 28, "capability_partition": 28, "op_support": 28, "partition_list": 28, "propose_partit": 28, "call_modul": [28, 74], "fused_graph_modul": 28, "fuse_partit": 28, "lazo": 29, "meantim": [29, 1369, 1370, 1387, 1389, 1413, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1524, 1525, 1535, 1564, 1587, 1595], "_log": [29, 1894, 1899], "set_log": [29, 1894, 1905], "torchdynamo_verbos": 29, "smallest": [29, 53, 957, 1242, 1252, 1273, 1277, 1293, 1738, 1858, 1960, 1965], "suspect": [29, 37, 1710, 1922], "taken": [29, 43, 49, 73, 74, 75, 80, 881, 1115, 1117, 1140, 1141, 1376, 1389, 1397, 1460, 1536, 1544, 1788, 1820, 1917, 1919, 1921, 1922, 1924, 1926, 1929, 1935, 1937, 1941, 1943], "grain": [29, 43, 874, 877, 1602, 1894, 1919, 1937, 1953], "proce": [29, 1918, 1922, 1949], "sampl": [29, 40, 45, 49, 67, 72, 74, 107, 172, 173, 395, 471, 498, 624, 795, 938, 986, 1006, 1040, 1053, 1057, 1071, 1072, 1112, 1130, 1152, 1162, 1174, 1218, 1237, 1310, 1343, 1365, 1369, 1370, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1389, 1391, 1392, 1393, 1394, 1396, 1397, 1398, 1407, 1413, 1416, 1417, 1418, 1419, 1420, 1438, 1440, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1471, 1484, 1485, 1492, 1501, 1517, 1524, 1525, 1535, 1537, 1538, 1539, 1540, 1543, 1544, 1545, 1549, 1552, 1554, 1562, 1563, 1564, 1587, 1595, 1633, 1641, 1681, 1714, 1729, 1732, 1746, 1748, 1750, 1752, 1754, 1818, 1834, 1835, 1836, 1881, 1882, 1886, 1894, 1909, 1917, 1918, 1922, 1929, 1930, 1941, 1944, 1945, 1958], "test_assertion_error": 29, "compiled_test_assertion_error": 29, "mlazo": 29, "837": 29, "build_map": 29, "assertionerror": [29, 66, 74, 99, 750, 1691, 1960], "fortun": [29, 1926], "isol": [29, 74, 1624, 1911, 1942], "test_backend_error": 29, "_foobar": [29, 1939], "dummi": [29, 40, 47, 1688, 1919, 1924, 1937, 1964], "compiled_test_backend_error": 29, "246": [29, 633], "185": [29, 633], "decomp_fn": 29, "810": 29, "repro_aft": 29, "nearli": [29, 169, 909, 923, 1729, 1932, 1949], "minifier_launch": 29, "base_dir": 29, "successfulli": [29, 43, 51, 57, 87, 88, 89, 1227, 1784, 1911, 1930, 1935, 1949], "runnabl": [29, 74, 1918, 1937, 1958], "rand_strid": 29, "0a0": 29, "gitfddfc44": 29, "fddfc4488afb207971c54ad4bf58130fdc8a4dc5": 29, "nvcc": [29, 33, 1025], "2005": [29, 699, 1882], "2022": 29, "thu_feb_10_18": 29, "23": [29, 43, 529, 1293, 1799, 1896, 1953], "41_pst_2022": 29, "v11": 29, "112": [29, 633], "cuda_11": 29, "r11": 29, "30978841_0": 29, "sxm4": 29, "float32": [29, 40, 41, 66, 75, 80, 83, 285, 596, 633, 835, 836, 837, 838, 841, 842, 896, 976, 1108, 1109, 1146, 1168, 1170, 1203, 1357, 1370, 1496, 1505, 1506, 1507, 1519, 1696, 1697, 1733, 1738, 1746, 1750, 1765, 1780, 1781, 1783, 1825, 1884, 1914, 1918, 1922, 1933, 1937, 1946, 1953, 1954, 1955, 1956, 1959, 1960, 1965], "compile_fx": 29, "compile_fx_inn": 29, "walk": [29, 34, 74, 1903, 1924, 1941, 1950, 1951, 1957], "toi": [29, 57], "toy_compil": 29, "debug_util": 29, "run_fwd_maybe_bwd": 29, "opt_mod": 29, "sh": [29, 784, 785, 789, 790, 1520, 1521, 1528, 1529, 1531, 1532, 1577, 1578], "st": [29, 1521, 1529, 1532, 1578], "dt": [29, 1529, 1532, 1954], "requires_grad_": [29, 353, 465, 1221, 1376, 1453, 1536, 1817, 1854, 1897, 1912, 1919, 1959], "rg": 29, "autocast": [29, 1040, 1459, 1894, 1922, 1924], "test_model": 29, "layernorm": [29, 1408, 1416, 1417, 1418, 1496, 1498, 1500, 1566, 1914, 1946], "overridden": [29, 33, 74, 905, 906, 907, 1037, 1453, 1815, 1899, 1919, 1924, 1933, 1942, 1964], "debug_dir_root": 29, "torch_compile_debug_dir": 29, "timestamp": [29, 53, 54, 57, 61, 1909, 1943, 1958], "cd": [29, 1936, 1941, 1943], "l": [29, 49, 751, 776, 937, 946, 952, 959, 960, 1094, 1178, 1179, 1221, 1240, 1250, 1251, 1256, 1257, 1258, 1259, 1263, 1267, 1268, 1310, 1312, 1366, 1369, 1370, 1371, 1381, 1389, 1392, 1393, 1400, 1405, 1413, 1414, 1416, 1419, 1420, 1423, 1435, 1444, 1446, 1453, 1455, 1459, 1460, 1468, 1484, 1501, 1502, 1504, 1602, 1651, 1660, 1668, 1670, 1699, 1775, 1836, 1897, 1899, 1919, 1958], "run_2023_03_01_08_20_52_143510": 29, "pid_180167": 29, "subfold": [29, 33], "model__0_forward_1": 29, "aot_model___0_debug": 29, "fx_graph_read": 29, "fx_graph_runn": 29, "fx_graph_transform": 29, "ir_post_fus": 29, "txt": [29, 1228, 1231, 1941], "ir_pre_fus": 29, "fx_graph": 29, "buf1": 29, "schedulernod": 29, "computedbuff": 29, "memorydep": 29, "unmet_depend": 29, "buf0": 29, "c0": [29, 750, 778, 1423], "met_depend": 29, "primals_2": 29, "buf1_loop_bodi": 29, "var_rang": 29, "z0": 29, "index0": 29, "index1": 29, "bodi": [29, 74, 75, 83, 85, 1232, 1896, 1898, 1899, 1900], "get_index": 29, "get_index_1": 29, "load_1": 29, "get_index_2": 29, "compiled_fun": 29, "hinder": 29, "break_reason": 29, "explanation_verbos": 29, "sublist": [29, 1094], "succe": [29, 43, 48, 60, 71, 1922, 1924, 1936], "compiled_toi": 29, "outweigh": [29, 1710], "readm": [29, 55, 56, 808, 1914], "verify_instal": 29, "log_fil": 29, "bj": 31, "j": [31, 43, 49, 331, 333, 339, 529, 531, 533, 708, 911, 917, 919, 976, 1094, 1110, 1111, 1118, 1124, 1128, 1129, 1163, 1218, 1221, 1256, 1257, 1268, 1284, 1293, 1300, 1308, 1310, 1315, 1392, 1393, 1394, 1398, 1453, 1456, 1538, 1539, 1540, 1545, 1733, 1740, 1819, 1836, 1840, 1883, 1898, 1917, 1919, 1924, 1927, 1935, 1958], "imaginari": [31, 329, 924, 976, 982, 1115, 1117, 1125, 1126, 1127, 1191, 1211, 1213, 1214, 1217, 1836, 1884, 1885, 1900, 1919, 1927, 1960], "satisfi": [31, 38, 41, 49, 633, 710, 776, 810, 918, 924, 925, 952, 1110, 1111, 1113, 1115, 1117, 1125, 1126, 1127, 1142, 1234, 1260, 1286, 1287, 1361, 1376, 1400, 1405, 1423, 1468, 1656, 1673, 1759, 1775, 1815, 1836, 1899, 1919, 1922, 1927, 1940, 1942, 1953, 1956], "equat": [31, 961, 1094, 1166, 1178, 1264, 1265, 1266, 1267, 1268, 1270, 1281, 1283, 1369, 1801, 1863, 1897, 1919, 1927, 1940, 1954], "mathemat": [31, 48, 74, 917, 918, 919, 920, 921, 922, 1142, 1174, 1369, 1371, 1372, 1373, 1416, 1417, 1418, 1419, 1492, 1571, 1609, 1633, 1680, 1759, 1817, 1818, 1899, 1919, 1933, 1954, 1961], "tradition": 31, "torchaudio": [31, 1894], "mimick": 31, "assembli": 31, "lapack": [31, 960, 1166, 1251, 1262, 1263, 1264, 1266, 1269, 1282, 1739, 1840], "spectral": [31, 1240, 1256, 1284, 1641, 1664, 1674, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1933], "fft": [31, 1894, 1922], "4621": 31, "0303j": 31, "2438": [31, 1266, 1543], "5874j": 31, "7706": 31, "1421j": 31, "2110": 31, "1918j": 31, "complex128": [31, 194, 976, 1137, 1146, 1200, 1221, 1250, 1251, 1256, 1257, 1258, 1259, 1260, 1261, 1381, 1382, 1383, 1453, 1527, 1528, 1529, 1689, 1733, 1780, 1955, 1956, 1959, 1960], "complex64": [31, 197, 976, 1111, 1113, 1114, 1119, 1120, 1146, 1200, 1252, 1275, 1278, 1381, 1382, 1383, 1527, 1528, 1529, 1689, 1733, 1780, 1955, 1956, 1959, 1960], "apart": [31, 1899, 1919], "linspac": [31, 939, 963, 1115, 1125, 1322, 1897, 1901, 1939], "logspac": [31, 1897, 1901, 1939], "view_as_r": [31, 1836, 1897, 1939, 1957], "6125": 31, "1681": 31, "3773": 31, "3487": 31, "0861": 31, "7981": 31, "1681j": 31, "3487j": 31, "7981j": 31, "mul_": [31, 1897, 1912, 1914, 1953], "2250": [31, 1277, 1680], "7546": [31, 961], "1722": 31, "x1": [31, 956, 1268, 1388, 1445, 1501, 1502, 1534, 1591, 1897], "3j": [31, 43, 714, 979, 980, 1763, 1764, 1780], "4j": [31, 43, 1791], "0000": [31, 49, 529, 881, 917, 919, 939, 959, 963, 982, 1075, 1081, 1082, 1083, 1108, 1109, 1112, 1114, 1115, 1121, 1122, 1125, 1130, 1142, 1143, 1144, 1174, 1180, 1183, 1187, 1246, 1249, 1250, 1251, 1263, 1264, 1267, 1272, 1273, 1277, 1279, 1291, 1307, 1348, 1396, 1397, 1505, 1506, 1508, 1509, 1543, 1544, 1680, 1733, 1739, 1744, 1745, 1746, 1755, 1759, 1760, 1784, 1791, 1793, 1794, 1796, 1799, 1800, 1801, 1802, 1818, 1863, 1864, 1866, 1889, 1906, 1914, 1922, 1953, 1954, 1959], "6569": [31, 1187], "5708": [31, 1078], "7854": 31, "complex_tensor": 31, "conjug": [31, 348, 475, 708, 924, 961, 979, 980, 1201, 1250, 1251, 1257, 1260, 1263, 1270, 1284, 1289, 1293, 1640, 1727, 1763, 1836, 1840, 1883, 1927, 1940, 1959], "wirting": [31, 924, 1927], "deriv": [31, 43, 66, 169, 754, 755, 756, 757, 758, 759, 797, 816, 840, 909, 923, 924, 925, 1157, 1161, 1174, 1218, 1278, 1310, 1500, 1624, 1894, 1898, 1924, 1925, 1927, 1949, 1953, 1954], "steepest": [31, 1919], "descent": [31, 49, 1693, 1709, 1713, 1714, 1919, 1930], "quantiz": [31, 74, 238, 344, 356, 489, 490, 491, 492, 493, 495, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 880, 933, 1079, 1108, 1109, 1741, 1742, 1743, 1744, 1745, 1875, 1894, 1939, 1956, 1959, 1960, 1962, 1963], "parallel_info": [32, 1894, 1921], "cppextens": [33, 1894], "setuptool": 33, "bare": 33, "buildextens": [33, 1894], "ext_modul": 33, "extra_compile_arg": [33, 1936], "cmdclass": 33, "build_ext": 33, "cudaextens": [33, 1894], "cuda_extens": 33, "extension_kernel": 33, "cu": 33, "cxx": 33, "o2": 33, "arch": 33, "card": [33, 1936], "ptx": 33, "road": 33, "newest": [33, 70], "torch_cuda_arch_list": 33, "build_my_extens": 33, "older": [33, 1922, 1935, 1941], "modestli": [33, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710], "pars": [33, 43, 63, 931, 1899, 1941, 1949], "workaround": [33, 40, 74, 1225, 1893, 1934, 1937, 1944], "sigmoidalphablendforwardcuda": 33, "69460": 33, "facebookresearch": 33, "pytorch3d": 33, "cb170ac024a949f1f9614ffe6af1c38d972f7d48": 33, "relocat": 33, "link": [33, 34, 49, 74, 97, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1446, 1447, 1448, 1504, 1554, 1913, 1929, 1930, 1953], "rdc": 33, "dc": 33, "anymor": [33, 43, 66, 240], "dlto": 33, "dlink": 33, "protent": 33, "lib": [33, 1936], "nvshmem": 33, "ninja": [33, 1936], "dlink_librari": 33, "dlink_lib": 33, "std": [33, 51, 58, 107, 395, 471, 1108, 1109, 1140, 1141, 1142, 1681, 1733, 1759, 1798, 1803, 1835, 1873, 1895, 1897, 1912, 1917, 1922, 1929, 1936, 1939], "use_ninja": 33, "distutil": 33, "max_job": 33, "extra_cflag": 33, "extra_cuda_cflag": 33, "extra_ldflag": 33, "extra_include_path": 33, "build_directori": 33, "with_cuda": [33, 1936], "is_python_modul": 33, "is_standalon": 33, "keep_intermedi": 33, "torch_extens": 33, "torch_extensions_dir": 33, "o3": 33, "cuh": 33, "Such": [33, 40, 41, 73, 1880, 1953], "lib64": 33, "cudart": [33, 1936], "cuda_hom": 33, "safest": 33, "pybind11": [33, 34, 1898], "union": [33, 40, 45, 48, 51, 54, 58, 61, 66, 74, 1232, 1292, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1401, 1402, 1421, 1422, 1446, 1447, 1448, 1453, 1496, 1498, 1500, 1503, 1645, 1687, 1689, 1771, 1878, 1897, 1898, 1899, 1935, 1937, 1941, 1955, 1960, 1963], "linker": 33, "workspac": [33, 968], "header": [33, 58, 1936, 1960], "torch_lib_path": 33, "load_inlin": [33, 1894], "cpp_sourc": 33, "cuda_sourc": 33, "with_pytorch_error_handl": 33, "behav": [33, 34, 43, 73, 74, 331, 339, 509, 531, 533, 857, 1161, 1236, 1449, 1450, 1451, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1898, 1899, 1906, 1919, 1925, 1930, 1934, 1941, 1949, 1953], "concaten": [33, 40, 43, 48, 919, 955, 966, 1009, 1093, 1186, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1397, 1423, 1536, 1544, 1637, 1645, 1833, 1888, 1897, 1900, 1937, 1939, 1953], "furthermor": [33, 58, 70, 1256, 1257, 1284, 1310, 1391, 1912, 1913, 1919, 1934, 1947, 1949], "cuda_runtim": 33, "se": 33, "macro": [33, 1928], "pybind": 33, "_safe_foo": 33, "redirect": [33, 51, 58, 1961], "obscur": 33, "sin_add": 33, "inline_extens": 33, "include_path": [33, 1894], "get_compiler_abi_compatibility_and_vers": [33, 1894], "abi": [33, 34], "shell": 33, "torchvers": 33, "verify_ninja_avail": [33, 1894], "is_ninja_avail": [33, 1894], "embed": [34, 74, 751, 762, 911, 1085, 1361, 1387, 1397, 1413, 1425, 1459, 1502, 1544, 1602, 1710, 1778, 1897, 1921, 1939, 1944, 1946, 1949, 1953, 1958], "preprocess": [34, 512, 1221], "augment": [34, 1900, 1960], "interfac": [34, 41, 45, 50, 52, 57, 60, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 761, 762, 772, 777, 778, 779, 780, 781, 810, 1147, 1624, 1782, 1836, 1875, 1895, 1899, 1909, 1910, 1924, 1929, 1940, 1947, 1953, 1958], "opencv": [34, 1552, 1563], "struct": [34, 1161, 1162, 1886, 1907, 1929], "reshap": [34, 43, 49, 514, 515, 529, 560, 633, 708, 966, 1077, 1092, 1093, 1133, 1184, 1241, 1273, 1277, 1286, 1287, 1290, 1353, 1400, 1474, 1475, 1476, 1477, 1478, 1504, 1641, 1674, 1680, 1820, 1821, 1828, 1855, 1856, 1861, 1887, 1888, 1895, 1897, 1906, 1913, 1914, 1937, 1939, 1946, 1957, 1958], "classat_1_1_tensor": 34, "tensor_index": 34, "cpp_autograd": 34, "undesir": [34, 1376, 1381, 1382, 1383, 1384, 1385, 1386, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1602, 1924], "cpp_frontend": 34, "library_root": 34, "libtorch": 34, "linux": [34, 43, 1893], "gcc": 34, "cxx11": 34, "facilit": [35, 44, 49, 71, 987, 988, 989, 990, 991, 992, 993, 998, 1082, 1780, 1893, 1896, 1899, 1934], "prototyp": [37, 43, 64, 696, 917, 919, 923, 924, 925, 1230, 1500, 1894, 1905, 1906, 1909, 1913, 1914, 1930, 1935, 1947, 1949, 1953, 1956, 1962, 1963], "race": [37, 43, 1919], "enable_cuda_sanit": 37, "torch_cuda_sanit": 37, "concurr": [37, 43, 47, 1921, 1922, 1932, 1949, 1950], "uniniti": [37, 462, 515, 1095, 1096, 1624, 1635, 1636, 1673, 1914, 1939], "commandlin": 37, "example_error": 37, "csan": 37, "139719969079296": 37, "94646435460352": 37, "_sanit": 37, "364": 37, "_handle_kernel_launch": 37, "stack_trac": [37, 74], "stacksummari": 37, "420": 37, "_handle_memory_alloc": 37, "faulti": [37, 43], "current_stream": [37, 997, 1894, 1922], "wait_stream": [37, 43, 998, 1000, 1922], "default_stream": [37, 43, 1894], "float16": [38, 41, 45, 66, 315, 702, 705, 776, 839, 842, 850, 866, 867, 874, 936, 948, 1146, 1203, 1221, 1315, 1325, 1381, 1382, 1383, 1384, 1385, 1386, 1405, 1406, 1423, 1424, 1440, 1453, 1468, 1563, 1602, 1696, 1697, 1768, 1878, 1918, 1930, 1944, 1946, 1953, 1955, 1956, 1959, 1960, 1965], "v100": [38, 776, 1405, 1423, 1468, 1922], "packedsequ": [38, 776, 1405, 1423, 1468, 1667, 1668, 1669, 1671], "rnn": [39, 750, 776, 777, 778, 779, 781, 874, 1405, 1406, 1423, 1424, 1470, 1634, 1643, 1666, 1901, 1926, 1930, 1946, 1958], "enforc": [39, 41, 73, 811, 906, 1221, 1423, 1453, 1468, 1899, 1930, 1957], "cuda_launch_block": [39, 1423, 1468, 1922], "colon": [39, 1423, 1468, 1949], "cublas_workspace_config": [39, 1423, 1468, 1875, 1922, 1934], "4096": [39, 1423, 1468, 1875, 1922, 1937], "dataload": [40, 512, 1633, 1714, 1715, 1721, 1922, 1926, 1932, 1936, 1940, 1958], "batch_siz": [40, 49, 70, 72, 908, 1152, 1160, 1162, 1459, 1666, 1668, 1669, 1671, 1886, 1897, 1925, 1926, 1934, 1937, 1958], "shuffl": [40, 1894, 1958], "batch_sampl": 40, "num_work": [40, 51, 1934, 1936], "drop_last": 40, "timeout": [40, 43, 60, 1911, 1949], "worker_init_fn": [40, 1926, 1934], "prefetch_factor": 40, "persistent_work": 40, "__getitem__": [40, 1875], "__len__": [40, 74, 1897], "protocol": [40, 45, 50, 60, 62, 896, 1145, 1147, 1688, 1771, 1924, 1936, 1937, 1949, 1964], "idx": [40, 74, 914, 1221, 1361, 1396, 1453, 1641, 1897, 1913], "th": [40, 173, 331, 333, 339, 776, 917, 919, 938, 958, 1081, 1086, 1195, 1218, 1242, 1260, 1268, 1274, 1310, 1343, 1392, 1393, 1394, 1398, 1405, 1413, 1423, 1468, 1538, 1539, 1540, 1545, 1740, 1836, 1924, 1936, 1954, 1956], "iterabledataset": [40, 1929], "__iter__": [40, 1900], "improb": 40, "fetch": [40, 73, 74, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1689, 1949], "databas": 40, "remot": [40, 43, 47, 51, 1633, 1942, 1949, 1950], "replica": [40, 41, 43, 47, 58, 1390, 1633, 1923], "duplic": [40, 333, 337, 488, 560, 937, 946, 967, 1178, 1179, 1221, 1453, 1872, 1873, 1953], "yield": [40, 41, 66, 74, 1082, 1084, 1221, 1267, 1268, 1453, 1889, 1899, 1900, 1906, 1942, 1944, 1954], "stochast": [40, 49, 1401, 1402, 1547, 1548, 1693, 1695, 1696, 1698, 1709, 1713, 1714, 1930, 1940], "decent": 40, "randomli": [40, 761, 762, 772, 780, 925, 1365, 1391, 1392, 1393, 1394, 1398, 1471, 1537, 1538, 1539, 1540, 1545, 1653, 1914, 1929, 1930], "permut": [40, 75, 83, 1094, 1267, 1268, 1287, 1310, 1312, 1754, 1894, 1895, 1897, 1913, 1939, 1946, 1957, 1959], "mini": [40, 795, 801, 1371, 1372, 1373, 1396, 1397, 1408, 1413, 1416, 1417, 1418, 1425, 1445, 1456, 1458, 1492, 1501, 1543, 1544, 1563, 1621, 1942], "neither": [40, 43, 811, 912, 915, 1077, 1137, 1459, 1500, 1680, 1861, 1924, 1933, 1949], "collat": 40, "minibatch": [40, 784, 785, 788, 789, 790, 1310, 1361, 1369, 1370, 1387, 1389, 1413, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1505, 1519, 1520, 1521, 1524, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1535, 1564, 1576, 1577, 1578, 1587, 1595, 1942], "loader": [40, 1940], "dataset_it": 40, "cheaper": [40, 73], "arrai": [40, 51, 465, 776, 836, 837, 895, 896, 939, 957, 982, 986, 1094, 1138, 1146, 1147, 1155, 1156, 1292, 1322, 1400, 1405, 1406, 1423, 1424, 1546, 1761, 1768, 1788, 1822, 1823, 1824, 1826, 1827, 1854, 1861, 1869, 1880, 1896, 1900, 1922, 1930, 1953, 1955, 1959, 1960], "untouch": 40, "slightli": [40, 43, 49, 66, 1680, 1729, 1841, 1893, 1922, 1924, 1927, 1933, 1941], "default_col": 40, "channel": [40, 69, 489, 490, 491, 795, 801, 824, 838, 841, 849, 861, 869, 1108, 1371, 1372, 1373, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1391, 1392, 1393, 1394, 1398, 1400, 1408, 1416, 1417, 1418, 1425, 1429, 1430, 1431, 1432, 1433, 1434, 1441, 1461, 1487, 1492, 1504, 1505, 1506, 1507, 1522, 1538, 1539, 1540, 1545, 1562, 1563, 1570, 1596, 1621, 1651, 1652, 1653, 1660, 1661, 1677, 1741, 1913, 1915, 1917, 1919, 1944, 1945, 1947, 1958], "class_index": 40, "namedtupl": [40, 74, 912, 1073, 1074, 1166, 1221, 1232, 1242, 1262, 1312, 1318, 1321, 1323, 1326, 1349, 1361, 1453, 1729, 1739, 1813, 1840, 1858, 1863, 1896, 1898, 1899, 1944], "gil": [40, 43, 47, 1919, 1922, 1949], "descriptor": [40, 43, 1501, 1502, 1900, 1937], "parent": [40, 53, 58, 62, 66, 696, 804, 805, 833, 1453, 1911, 1936, 1941, 1951, 1958], "refcount": [40, 1911, 1932], "panda": 40, "pyarrow": 40, "13246": 40, "get_worker_info": [40, 1949], "seed": [40, 107, 1032, 1041, 1042, 1062, 1197, 1313, 1333, 1729, 1746, 1841, 1878, 1894, 1897, 1926, 1932, 1934, 1948], "shut": [40, 1949], "garbag": [40, 1951], "subtleti": [40, 75, 1390, 1924, 1926], "multiprocess": [40, 41, 43, 44, 46, 51, 53, 61, 62, 1390, 1633, 1894, 1913, 1923, 1950], "unix": [40, 58, 996, 1911], "fork": [40, 58, 1239, 1633, 1899, 1921, 1922, 1926, 1929, 1932, 1936, 1948, 1949, 1951], "child": [40, 51, 53, 66, 807, 1221, 1453, 1652, 1911, 1930, 1936, 1951], "maco": [40, 43, 1911, 1931], "spawn": [40, 41, 44, 51, 52, 58, 62, 1224, 1633, 1894, 1918, 1923, 1932, 1936, 1950], "__name__": [40, 41, 43, 52, 53, 61, 1923, 1924, 1932, 1936, 1941, 1950], "__main__": [40, 41, 43, 52, 53, 61, 1920, 1923, 1932, 1936, 1950], "base_se": 40, "worker_id": [40, 62, 1934], "therebi": [40, 49, 1940, 1944], "mandatorili": 40, "initial_se": [40, 107, 1894, 1934, 1948], "simplecustombatch": 40, "transposed_data": 40, "zip": [40, 45, 1893, 1897, 1898, 1908, 1922, 1929, 1953], "tgt": [40, 1496, 1497, 1498], "collate_wrapp": 40, "tensordataset": 40, "batch_ndx": 40, "is_pin": [40, 1666, 1897, 1912, 1939, 1955], "multiprocessing_context": 40, "pin_memory_devic": 40, "reshuffl": 40, "mutual": [40, 43, 51, 751, 1960], "subprocess": [40, 43, 58, 60, 62, 1926, 1932], "incomplet": [40, 917, 1901, 1954], "divis": [40, 599, 633, 703, 788, 789, 790, 962, 1089, 1139, 1142, 1231, 1264, 1381, 1382, 1383, 1384, 1385, 1386, 1388, 1408, 1420, 1444, 1462, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1588, 1759, 1828, 1855, 1899, 1918, 1922], "basecontext": 40, "randomsampl": 40, "prefetch": [40, 66], "unpickl": [40, 43, 1292, 1941], "proper": [40, 51, 73, 74, 1085, 1778, 1898, 1919, 1922, 1924, 1932, 1936], "guess": 40, "trust": [40, 43, 1292, 1893, 1941], "inaccur": [40, 41, 1563], "kwd": 40, "__getitems__": 40, "myiterabledataset": 40, "worker_info": 40, "iter_start": 40, "iter_end": 40, "per_work": 40, "ceil": [40, 196, 649, 650, 784, 785, 1366, 1367, 1368, 1421, 1422, 1446, 1447, 1448, 1519, 1520, 1521, 1576, 1577, 1578, 1744, 1745, 1768, 1895, 1897, 1912, 1922, 1939, 1953], "mult": 40, "overall_start": 40, "overall_end": 40, "stackdataset": 40, "assembl": 40, "imagedataset": 40, "textdataset": 40, "tuple_stack": 40, "dict_stack": 40, "concatdataset": 40, "chaindataset": 40, "fly": [40, 1037, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1919], "collate_fn_map": 40, "registri": [40, 1894, 1935, 1937, 1938], "default_collate_fn_map": 40, "collate_tensor_fn": 40, "custom_col": 40, "collate_map": 40, "outer": [40, 707, 917, 1094, 1152, 1156, 1161, 1167, 1897, 1899, 1939], "unchang": [40, 515, 529, 531, 751, 830, 1133, 1221, 1453, 1496, 1760, 1831, 1918, 1933, 1944], "byte": [40, 43, 49, 60, 260, 452, 574, 896, 1002, 1043, 1045, 1047, 1049, 1147, 1220, 1292, 1329, 1330, 1689, 1699, 1771, 1898, 1899, 1900, 1912, 1935, 1941, 1953, 1955], "v_i": [40, 1260], "v_1": 40, "v_2": 40, "v1_i": 40, "v2_i": 40, "v1_1": 40, "v1_2": 40, "v2_1": 40, "v2_2": 40, "elem": [40, 1897], "customtyp": 40, "collate_customtype_fn": 40, "custotyp": 40, "default_convert": 40, "np": [40, 956, 1089, 1094, 1134, 1135, 1136, 1592, 1733, 1925, 1934, 1937, 1958, 1959, 1960], "workerinfo": [40, 1949], "random_split": 40, "floor": [40, 75, 77, 83, 289, 663, 664, 784, 785, 1089, 1139, 1231, 1366, 1367, 1368, 1421, 1422, 1446, 1447, 1448, 1519, 1520, 1521, 1576, 1577, 1578, 1744, 1745, 1759, 1768, 1836, 1895, 1897, 1899, 1912, 1932, 1935, 1939, 1953], "frac": [40, 49, 297, 395, 665, 666, 703, 776, 788, 789, 790, 881, 937, 946, 982, 986, 1089, 1139, 1174, 1178, 1179, 1240, 1252, 1256, 1257, 1260, 1272, 1284, 1291, 1307, 1361, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1377, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1391, 1400, 1405, 1406, 1407, 1408, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1425, 1438, 1440, 1441, 1442, 1443, 1446, 1447, 1448, 1456, 1457, 1458, 1460, 1468, 1470, 1471, 1483, 1485, 1486, 1488, 1489, 1491, 1492, 1493, 1504, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1572, 1588, 1590, 1592, 1602, 1604, 1608, 1610, 1612, 1613, 1694, 1695, 1698, 1700, 1706, 1713, 1714, 1743, 1755, 1758, 1770, 1791, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1819, 1834, 1835, 1836, 1840, 1861, 1881, 1882, 1897, 1912, 1917, 1919, 1927, 1939, 1953, 1954], "robin": [40, 43], "generator1": 40, "manual_se": [40, 71, 107, 1894, 1897, 1912, 1930, 1932, 1934, 1937, 1939, 1948], "generator2": 40, "data_sourc": 40, "accedingsequencelengthsampl": 40, "argsort": [40, 1851, 1897, 1925, 1939], "tolist": [40, 370, 1899, 1939, 1955], "accedingsequencelengthbatchsampl": 40, "sequentialsampl": 40, "num_sampl": [40, 438, 1343, 1897], "drawn": [40, 192, 276, 304, 1343, 1681, 1746, 1750, 1751, 1917, 1960, 1961], "subsetrandomsampl": 40, "weightedrandomsampl": 40, "row": [40, 41, 48, 49, 227, 331, 333, 339, 601, 604, 709, 715, 893, 917, 919, 956, 982, 986, 1077, 1107, 1135, 1136, 1156, 1162, 1183, 1242, 1268, 1276, 1279, 1284, 1308, 1310, 1318, 1320, 1321, 1323, 1326, 1343, 1349, 1350, 1351, 1543, 1544, 1592, 1640, 1679, 1737, 1740, 1760, 1820, 1821, 1822, 1823, 1824, 1826, 1827, 1839, 1858, 1861, 1865, 1867, 1880, 1886, 1888, 1897, 1927, 1953, 1958], "05": [40, 47, 74, 132, 362, 710, 728, 729, 730, 731, 732, 733, 739, 740, 752, 753, 765, 767, 768, 769, 770, 924, 925, 960, 1108, 1210, 1236, 1237, 1307, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1496, 1498, 1500, 1522, 1553, 1562, 1566, 1633, 1712, 1718, 1719, 1725, 1797, 1798, 1803, 1896, 1897, 1940, 1950, 1960], "batchsampl": 40, "distributedsampl": [40, 1633], "num_replica": 40, "world_siz": [40, 41, 43, 44, 47, 51, 60, 61, 63, 66, 1633, 1923, 1942, 1949, 1950], "evenli": [40, 599, 600, 601, 711, 712, 1092, 1184, 1291, 1307, 1887], "set_epoch": 40, "is_distribut": [40, 1897, 1939], "start_epoch": 40, "n_epoch": 40, "vanilla": [41, 1906], "allreduc": [41, 43, 1633, 1922, 1923, 1939], "register_comm_hook": [41, 47, 66, 1633], "mainli": [41, 49, 843, 1376, 1536, 1962], "gradbucket": [41, 1633], "decompos": [41, 74, 1144, 1151, 1265, 1895, 1919, 1924, 1937], "get_per_parameter_tensor": 41, "_distributed_c10d": [41, 43], "1d": [41, 48, 49, 66, 718, 721, 754, 757, 788, 798, 967, 982, 986, 1077, 1091, 1182, 1183, 1198, 1218, 1276, 1277, 1322, 1350, 1358, 1362, 1366, 1376, 1381, 1384, 1389, 1392, 1393, 1397, 1421, 1445, 1446, 1458, 1460, 1505, 1511, 1514, 1517, 1519, 1527, 1530, 1538, 1544, 1573, 1576, 1740, 1741, 1744, 1836, 1861, 1883], "is_last": 41, "set_buff": 41, "stateless": [41, 71, 1915, 1930], "ddp_comm_hook": [41, 47], "default_hook": 41, "allreduce_hook": 41, "process_group": [41, 44, 45, 47, 66, 1492, 1633], "unaffect": [41, 515, 516, 1407], "ddp_model": [41, 43, 1633, 1923], "fp16_compress_hook": 41, "decompress": [41, 1893, 1908], "bf16_compress_hook": 41, "nccl": [41, 44, 45, 61, 66, 1633, 1928], "brain": [41, 1956, 1959], "fp16_compress_wrapp": 41, "powersgdst": 41, "matrix_approximation_rank": 41, "start_powersgd_it": 41, "powersgd_hook": 41, "bf16_compress_wrapp": 41, "wikipedia": [41, 1589, 1919, 1927, 1965], "wiki": [41, 1965], "bfloat16_float": 41, "point_format": 41, "vogel": 41, "et": [41, 49, 66, 1376, 1465, 1466, 1501, 1502, 1709, 1804, 1841, 1917], "al": [41, 49, 66, 1376, 1465, 1466, 1501, 1502, 1709, 1804, 1841, 1917], "neurip": [41, 49], "2019": [41, 49, 1051], "hyperparamet": [41, 66, 74, 1958], "1000": [41, 1109, 1114, 1140, 1141, 1361, 1396, 1502, 1741, 1768, 1788, 1854, 1919, 1935, 1937, 1958], "min_compression_r": 41, "use_error_feedback": 41, "warm_start": 41, "orthogonalization_epsilon": 41, "random_se": 41, "compression_stats_logging_frequ": 41, "batch_tensors_with_same_shap": 41, "stronger": [41, 75], "threshold": [41, 74, 1275, 1278, 1414, 1484, 1489, 1610, 1616, 1723, 1788, 1897, 1918, 1922, 1939, 1958], "exponenti": [41, 276, 1104, 1272, 1298, 1299, 1300, 1308, 1375, 1395, 1541, 1894, 1899, 1939, 1940, 1954, 1961], "grid": [41, 1114, 1322, 1517, 1552, 1895, 1897, 1922, 1958], "satisfactori": 41, "appendix": [41, 1894], "defer": [41, 66, 1922, 1942], "hybrid": [41, 66, 237, 559, 599, 600, 601, 603, 604, 1185], "scheme": [41, 60, 495, 818, 835, 836, 837, 838, 841, 843, 1930], "trajectori": 41, "irrecover": 41, "num_row": 41, "num_col": 41, "1e": [41, 74, 132, 362, 710, 728, 729, 730, 731, 732, 733, 739, 740, 752, 753, 765, 767, 768, 769, 770, 771, 924, 925, 959, 960, 1210, 1236, 1237, 1287, 1371, 1372, 1373, 1388, 1407, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1439, 1462, 1467, 1492, 1496, 1498, 1500, 1501, 1522, 1534, 1549, 1553, 1554, 1562, 1566, 1588, 1591, 1595, 1618, 1641, 1674, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1710, 1723, 1731, 1784, 1896, 1897, 1924, 1930, 1937, 1940, 1954, 1960], "orthogon": [41, 1257, 1260, 1279, 1284, 1293, 1727, 1739, 1917, 1919, 1930, 1953], "epsilon": [41, 74, 835, 836, 837, 838, 841, 881, 1275, 1278, 1371, 1372, 1373, 1388, 1408, 1416, 1417, 1418, 1425, 1462, 1492, 1534, 1588, 1641, 1674, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1743, 1897, 1954], "bucket_cap_mb": [41, 1633, 1923], "memor": 41, "compens": 41, "apex": 41, "uncompress": [41, 1953], "pq": 41, "mq": [41, 1944, 1963], "tp": [41, 48], "comm": [41, 43, 1923], "handler": [41, 43, 53, 54, 1652, 1909, 1929, 1941, 1964], "batched_powersgd_hook": 41, "destroi": [41, 60, 1390, 1919, 1949], "squar": [41, 49, 567, 755, 756, 757, 758, 795, 801, 810, 986, 1081, 1083, 1218, 1252, 1254, 1256, 1257, 1258, 1261, 1262, 1266, 1268, 1270, 1272, 1274, 1278, 1280, 1281, 1283, 1284, 1288, 1301, 1310, 1359, 1363, 1367, 1368, 1382, 1383, 1385, 1386, 1401, 1402, 1414, 1422, 1444, 1447, 1448, 1451, 1484, 1496, 1519, 1528, 1531, 1547, 1548, 1552, 1561, 1563, 1583, 1606, 1621, 1640, 1694, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1770, 1829, 1863, 1880, 1897, 1939, 1953], "truncat": [41, 1139, 1869, 1914, 1917, 1926, 1933], "debugging_hook": 41, "noop_hook": 41, "noop": [41, 1633], "headroom": 41, "desynchron": [41, 43], "trainer": [41, 51, 53, 58, 61, 62, 1633, 1949], "__setstate__": 41, "__getstate__": 41, "reload": [41, 47, 66, 1893], "sy": [41, 52, 61, 63, 1893, 1922, 1941], "tempfil": 41, "mp": [41, 43, 44, 62, 1633, 1894, 1923, 1924, 1932, 1944, 1950, 1955, 1956, 1963], "simplemodel": 41, "fc2": [41, 1624, 1942], "master_addr": [41, 43, 51, 61, 63, 1923, 1942, 1949, 1950], "localhost": [41, 43, 60, 61, 1923, 1942, 1949, 1950], "master_port": [41, 43, 51, 61, 63, 1923, 1942, 1949, 1950], "12355": 41, "init_process_group": [41, 43, 44, 47, 51, 61, 63, 1633, 1922, 1923, 1949], "cleanup": 41, "destroy_process_group": 41, "run_demo": 41, "demo_fn": 41, "nproc": [41, 43, 58, 59, 61, 1911, 1923, 1950], "demo_seri": 41, "gettempdir": 41, "device_id": [41, 43, 44, 47, 61, 66, 1292, 1390, 1492, 1617, 1633, 1923], "powersgd_st": 41, "lr": [41, 44, 47, 66, 1624, 1633, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1922, 1923, 1930, 1932, 1940, 1950, 1958], "001": [41, 924, 925, 1230, 1692, 1696, 1697, 1706, 1710, 1722, 1923, 1937], "comm_hook": 41, "comm_hook_st": 41, "barrier": [41, 51, 60, 1939], "map_loc": [41, 1225, 1228, 1292, 1633, 1893, 1908, 1941], "new_ddp_model": 41, "n_gpu": 41, "device_count": [41, 43, 1878, 1894], "got": [41, 43, 907, 1878, 1924, 1960], "thank": [41, 49, 1924, 1942], "thij": 41, "par": 41, "home": [42, 1922], "brief": [43, 1633, 1911, 1949], "introduct": [43, 49, 1029, 1633, 1894, 1896, 1900, 1912, 1920, 1930, 1937, 1949, 1953, 1958], "mpi": [43, 1633], "gloo": [43, 61, 1633, 1923, 1928, 1949], "recv": [43, 1633, 1939, 1950], "all_reduc": [43, 62, 1633], "all_gath": 43, "scatter": [43, 47, 66, 529, 531, 533, 1390, 1875, 1897, 1926, 1939, 1949], "reduce_scatt": [43, 1939], "all_to_al": 43, "v1": [43, 66, 1289, 1728, 1893, 1923, 1949], "init_method": [43, 1633, 1949], "adher": [43, 1899, 1953], "some_fil": 43, "machine_nam": 43, "share_folder_nam": 43, "tcpstore": [43, 60], "infiniband": [43, 1633, 1949], "interconnect": 43, "gpudirect": 43, "ethernet": 43, "ip": [43, 60], "ib": 43, "nccl_socket_ifnam": 43, "eth0": 43, "gloo_socket_ifnam": 43, "comma": [43, 1094, 1899, 1905], "eth1": 43, "eth2": 43, "eth3": 43, "imper": 43, "nccl_debug": 43, "nccl_debug_subsi": 43, "coll": 43, "hang": [43, 44, 47, 1633, 1923], "topologi": [43, 45, 48, 51], "socket": [43, 1911, 1949], "nccl_socket_nthread": 43, "nccl_nsocks_perthread": 43, "cloud": [43, 1953, 1958], "aw": [43, 52, 986], "primit": [43, 47, 60, 1292, 1895, 1896, 1898, 1900, 1921, 1931, 1937, 1949], "redund": [43, 66, 1110, 1111, 1113, 1115, 1129, 1131, 1836], "averag": [43, 47, 751, 782, 783, 784, 785, 837, 838, 933, 935, 986, 1057, 1071, 1221, 1358, 1359, 1360, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1387, 1389, 1397, 1407, 1413, 1419, 1420, 1421, 1422, 1426, 1427, 1428, 1444, 1445, 1453, 1456, 1457, 1458, 1459, 1460, 1467, 1484, 1485, 1492, 1501, 1511, 1512, 1513, 1519, 1520, 1521, 1524, 1525, 1535, 1549, 1564, 1573, 1574, 1587, 1595, 1633, 1693, 1694, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1861, 1894, 1923, 1943], "thrash": 43, "recurr": [43, 776, 777, 1236, 1376, 1390, 1405, 1406, 1423, 1468, 1643, 1669, 1707, 1894, 1922], "use_distribut": 43, "datetim": [43, 1909], "timedelta": [43, 60, 1909], "1800": 43, "group_nam": [43, 57], "pg_option": 43, "url": [43, 60, 932, 1893, 1908, 1949], "discov": [43, 1949], "encod": [43, 51, 57, 60, 74, 1268, 1292, 1334, 1335, 1369, 1370, 1496, 1497, 1498, 1499, 1500, 1633, 1822, 1823, 1824, 1826, 1827, 1896, 1899, 1900, 1924, 1935, 1941, 1950, 1953], "ucc": 43, "lowercas": 43, "deadlock": [43, 1633], "job": [43, 51, 53, 54, 56, 57, 59, 60, 61, 62, 1633, 1715, 1721, 1929, 1943, 1958], "exchang": [43, 60, 998, 1082, 1922, 1937], "nccl_blocking_wait": 43, "nccl_async_error_handl": [43, 1922], "abort": [43, 1922], "crash": [43, 53, 60, 1911, 1919, 1949, 1951, 1958], "caught": [43, 1633, 1911], "watch": 43, "dog": 43, "processgroupopt": 43, "processgroupnccl": [43, 1923], "is_high_priority_stream": 43, "backend_nam": [43, 1878], "custom_backend": 43, "is_initi": [43, 1894], "is_mpi_avail": 43, "is_nccl_avail": 43, "is_gloo_avail": 43, "is_torchelastic_launch": 43, "elast": [43, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 1894], "torchelast": [43, 46, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63], "torchelastic_run_id": [43, 61], "rendezv": [43, 46, 51, 57, 59, 63, 1923, 1949], "null": [43, 52, 54, 57, 75, 79], "discoveri": [43, 60, 1922, 1941], "reachabl": 43, "multicast": 43, "23456": 43, "clean": [43, 51, 74, 975, 1033, 1893, 1911, 1941], "fcntl": 43, "nf": 43, "brand": [43, 1924], "unsuccess": 43, "mnt": 43, "sharedfil": 43, "port": [43, 51, 59, 60, 61, 1928], "backend_str": 43, "uppercas": 43, "classmethod": [43, 60, 75, 77, 748, 754, 755, 756, 761, 762, 772, 780, 808, 809, 810, 831, 832, 833, 840, 870, 997, 1396, 1397, 1492, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1689, 1899, 1900, 1924, 1944, 1949, 1955, 1964], "extended_api": 43, "instanti": [43, 47, 59, 60, 61, 66, 74, 857, 1098, 1196, 1397, 1544, 1642, 1666, 1673, 1678, 1893, 1896, 1898, 1899, 1922, 1924, 1930, 1937, 1955], "3rd": [43, 49, 60, 633, 1723, 1920], "processgroup": [43, 45, 47, 66, 1633], "four": [43, 1266, 1382, 1924, 1927, 1949, 1951], "c10d": [43, 51, 59, 61, 63, 1633, 1923, 1939], "distributedbackendopt": 43, "get_backend": [43, 60], "get_rank": [43, 66, 1492], "get_world_s": 43, "filestor": [43, 60], "hashstor": 43, "host_nam": 43, "hostnam": [43, 51, 60, 1943], "listen": 43, "is_mast": 43, "300": [43, 51, 1298, 1370, 1670, 1672, 1940], "wait_for_work": 43, "multi_ten": 43, "tcpserver": 43, "master_listen_fd": 43, "server_stor": 43, "127": [43, 810, 1913, 1944, 1958], "1234": [43, 60, 1198], "client_stor": 43, "first_kei": 43, "first_valu": 43, "hashmap": 43, "file_nam": [43, 1893, 1908, 1941], "store1": 43, "store2": 43, "prefixstor": 43, "quantiti": [43, 67, 72, 1256, 1257, 1284, 1419, 1650, 1651, 1653, 1654, 1656, 1659, 1660, 1661, 1662, 1723, 1925, 1927], "compare_set": 43, "arg2": 43, "expected_valu": 43, "desired_valu": 43, "second_valu": 43, "overload": [43, 74, 633, 1898, 1899, 1903, 1938], "bad_kei": 43, "num_kei": 43, "destruct": [43, 1909, 1949, 1951], "delete_kei": 43, "set_timeout": 43, "plai": 43, "new_group": [43, 66, 1492], "use_local_synchron": 43, "enqueu": [43, 73, 998, 1000, 1001, 1922, 1950], "get_group_rank": 43, "global_rank": [43, 51], "get_global_rank": 43, "group_rank": [43, 51, 61], "get_process_group_rank": 43, "dst": [43, 1893, 1941], "destin": [43, 45, 54, 57, 66, 228, 433, 434, 619, 1009, 1010, 1163, 1221, 1327, 1328, 1453, 1687, 1688, 1897, 1949, 1950, 1955], "unspecifi": [43, 498, 836, 837, 838, 841, 924, 925, 1486, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1819, 1906, 1953, 1958], "sender": [43, 1951], "isend": 43, "irecv": 43, "is_complet": 43, "finish": [43, 45, 51, 57, 58, 60, 62, 73, 1151, 1922, 1923, 1936, 1943, 1949, 1951], "batch_isend_irecv": 43, "p2p_op_list": 43, "p2pop": 43, "op_list": 43, "send_tensor": 43, "recv_tensor": 43, "send_op": 43, "recv_op": 43, "req": 43, "pg": [43, 1633], "set_devic": [43, 45, 66, 1633, 1779, 1894, 1949, 1956], "p2p": [43, 60], "async_op": 43, "get_futur": [43, 1633], "add_": [43, 69, 71, 240, 1151, 1897, 1912, 1920, 1953], "101": [43, 1361], "overwrot": 43, "sent": [43, 45, 1033, 1899, 1911, 1932, 1949, 1950, 1951], "broadcast_object_list": 43, "object_list": 43, "picklabl": [43, 1221, 1453, 1941], "current_devic": [43, 45, 66, 1006, 1014, 1015, 1022, 1023, 1039, 1043, 1045, 1046, 1047, 1049, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1070, 1071, 1072, 1878, 1894, 1956], "insecur": [43, 1292], "malici": [43, 1292, 1941], "ineffici": [43, 66, 1922, 1944], "redoptyp": 43, "bitwis": [43, 940, 942, 943, 945, 1900, 1933, 1945, 1961], "reduceop": 43, "int64": [43, 99, 210, 227, 331, 339, 411, 881, 939, 952, 1095, 1108, 1109, 1146, 1535, 1666, 1750, 1754, 1755, 1775, 1822, 1823, 1824, 1826, 1827, 1922, 1953, 1955, 1956, 1959, 1965], "1j": [43, 714, 979, 980, 1217, 1763, 1764, 1883, 1919, 1927, 1935], "2j": [43, 714, 979, 980, 1763, 1764, 1791, 1883, 1919], "tensor_list": [43, 1914], "all_gather_into_tensor": 43, "output_tensor": 43, "accommod": [43, 1449, 1450, 1451], "ii": [43, 982, 1094, 1423, 1424], "tensor_in": 43, "tensor_out": 43, "tensor_out2": 43, "all_gather_object": 43, "obj": [43, 74, 896, 1018, 1207, 1208, 1227, 1232, 1771, 1879, 1897, 1935, 1936, 1941], "pickabl": 43, "responsibl": 43, "gather_object": 43, "gather_list": 43, "object_gather_list": 43, "scatter_list": 43, "tensor_s": 43, "t_one": 43, "t_five": 43, "scatter_object_list": 43, "scatter_object_output_list": 43, "scatter_object_input_list": 43, "output_list": 43, "input_list": 43, "reduce_scatter_tensor": 43, "all_to_all_singl": 43, "output_split_s": 43, "input_split_s": 43, "15": [43, 74, 633, 1092, 1164, 1174, 1184, 1243, 1257, 1377, 1450, 1451, 1670, 1672, 1731, 1804, 1813, 1859, 1887, 1896, 1897, 1900, 1937, 1953], "uneven": [43, 44, 47, 1633], "21": [43, 49, 701, 958, 1077, 1279, 1739, 1861, 1896, 1953], "31": [43, 944, 1368, 1448, 1624, 1799, 1937], "33": [43, 754, 755, 756, 757, 758, 759, 788, 1221, 1381, 1382, 1383, 1385, 1386, 1451, 1453, 1527, 1529, 1530, 1532, 1896, 1937], "35": [43, 1279, 1372, 1373, 1417, 1418, 1492, 1739], "input_split": 43, "output_split": 43, "5j": 43, "6j": 43, "7j": 43, "8j": 43, "9j": 43, "10j": 43, "11j": 43, "12j": 43, "13j": 43, "14j": 43, "15j": 43, "16j": 43, "output_tensor_list": 43, "input_tensor_list": 43, "monitored_barri": [43, 1939], "wait_all_rank": 43, "band": 43, "bor": 43, "bxor": 43, "premul_sum": 43, "_make_nccl_premul_sum": 43, "all_reduce_multigpu": 43, "__members__": 43, "reduce_op": 43, "revisit": 43, "broadcast_multigpu": 43, "reduce_multigpu": 43, "all_gather_multigpu": 43, "reduce_scatter_multigpu": 43, "distributed_test": 43, "dev_idx": 43, "src_tensor": 43, "resid": [43, 66, 73, 215, 307, 355, 1292, 1633, 1922, 1942, 1949], "dst_tensor": 43, "cpp_extens": [43, 1894, 1924], "cpp_c10d_extens": 43, "torchrun": [43, 46, 52, 59, 63], "benefici": [43, 1930], "nproc_per_nod": [43, 52], "num_gpus_you_hav": 43, "your_training_script": [43, 59, 61], "arg3": 43, "192": [43, 633, 1937], "168": 43, "nnode": [43, 59, 61], "local_process_rank": 43, "local_rank": [43, 51, 53, 58, 61, 63, 1492], "argpars": [43, 61, 1922], "parser": [43, 61, 1922], "argumentpars": [43, 61, 1922], "add_argu": [43, 61, 1922], "parse_arg": [43, 52, 61, 63, 1922, 1937], "output_devic": [43, 47, 61, 1390, 1492, 1617, 1633], "adjust": [43, 45, 47, 49, 66, 1894, 1921, 1945], "launcher": [43, 61], "filesystem": [43, 45, 996, 1893, 1941], "12042": 43, "imagenet": [43, 1917], "inconsist": [43, 66, 881, 1755, 1924], "group_gloo": 43, "29501": 43, "monitoredbarri": 43, "transport": [43, 1949], "598": 43, "2401": 43, "db00": 43, "eef0": 43, "1100": 43, "3560": 43, "1c05": 43, "25d": 43, "8594": 43, "torch_cpp_log_level": 43, "twolinlayernet": 43, "i0607": 43, "739390": 43, "515217": 43, "logger": [43, 1686, 1962, 1963], "173": 43, "broadcast_buff": [43, 1633], "bucket_cap_byt": 43, "26214400": 43, "find_unused_paramet": [43, 1633, 1923], "gradient_as_bucket_view": [43, 1633], "is_multi_device_modul": 43, "num_parameter_tensor": 43, "total_parameter_size_byt": 43, "440": 43, "bucket_s": 43, "cuda_visible_devic": [43, 1063, 1633, 1922], "module_nam": [43, 74, 833, 870, 1941], "nccl_ib_timeout": 43, "nccl_nthread": 43, "085681": 43, "544067": 43, "344": 43, "unused_parameter_s": 43, "40838608": 43, "5983335": 43, "4326421": 43, "comp": [43, 49], "4207652": 43, "085693": 43, "544066": 43, "42850427": 43, "3885553": 43, "2357981": 43, "2234674": 43, "unus": [43, 47, 74, 923, 1033, 1047, 1226, 1232, 1415, 1633, 1692, 1896, 1898, 1899, 1922, 1923, 1928, 1941], "wasn": [43, 1292, 1896], "va": 43, "lue": 43, "indirectli": 43, "outstand": [43, 1949], "stuck": [43, 51, 62], "uninform": 43, "reveal": [43, 1923], "default_pg": 43, "longtensor": [43, 153, 154, 155, 333, 335, 337, 469, 488, 529, 531, 533, 890, 891, 1163, 1195, 1242, 1343, 1396, 1397, 1456, 1543, 1544, 1589, 1679, 1775, 1813, 1825, 1850, 1858, 1889, 1956, 1959], "set_debug_level": 43, "set_debug_level_from_env": 43, "get_debug_level": 43, "torch_show_cpp_stacktrac": 43, "distbackenderror": 43, "joinabl": [44, 47, 1633, 1894], "joinhook": [44, 1894], "throw_on_early_termin": [44, 1633], "shadow": [44, 47, 1633, 1962, 1963], "notify_join_context": 44, "zeroredundancyoptim": [44, 47, 1633, 1894], "01": [44, 47, 62, 771, 796, 837, 838, 1095, 1137, 1439, 1567, 1568, 1624, 1691, 1693, 1695, 1697, 1707, 1708, 1715, 1721, 1741, 1795, 1797, 1798, 1803, 1804, 1895, 1897, 1917, 1929, 1937, 1940], "vacuou": 44, "inherit": [44, 1658, 1896, 1898, 1914, 1924, 1930, 1932], "join_hook": [44, 47, 1633], "join_devic": 44, "join_process_group": 44, "repeatedli": [44, 1922, 1953], "main_hook": 44, "post_hook": 44, "is_last_join": 44, "dcp": 45, "reshard": [45, 48, 66], "entrypoint": [45, 48, 51, 53, 58, 61, 1911], "storage_read": 45, "coordinator_rank": 45, "no_dist": 45, "planner": 45, "spmd": 45, "fullfil": 45, "shardedtensor": [45, 66], "po": [45, 1937], "storageread": [45, 1894], "rank0": [45, 66], "mymodul": [45, 66, 74, 1225, 1226, 1227, 1231, 1232, 1238, 1454, 1455, 1463, 1464, 1896, 1898, 1899, 1926, 1935, 1949], "adagrad": [45, 1396, 1906, 1940, 1949], "model_state_dict": [45, 1687, 1937], "fs_storage_read": 45, "filesystemread": [45, 1894], "save_state_dict": [45, 1894], "storage_writ": 45, "shardingstrategi": [45, 66, 1894], "hybrid_shard": [45, 66], "shard_group": 45, "storagewrit": [45, 1894], "fs_storage_writ": 45, "filesystemwrit": [45, 1894], "told": [45, 1898], "read_metadata": 45, "set_up_storage_read": 45, "prepare_local_plan": 45, "prepare_global_plan": 45, "read_data": 45, "central": [45, 75, 1174, 1927, 1929], "loadplan": [45, 1894], "storage_data": 45, "loadplann": [45, 1894], "load_byt": 45, "bytesio": [45, 1228, 1231, 1292, 1771, 1937, 1944], "resolve_tensor": 45, "storagelay": 45, "is_coordin": 45, "set_up_storage_writ": 45, "write_data": 45, "recover": 45, "writeresult": 45, "saveplan": [45, 1894], "saveplann": [45, 1894], "resolve_data": 45, "writeitem": [45, 1894], "tensor_data": 45, "set_up_plann": 45, "create_local_plan": 45, "create_global_plan": 45, "commit_tensor": 45, "defaultloadplann": [45, 1894], "requit": 45, "intrincaci": 45, "renameplann": 45, "original_state_dict": 45, "foo_": [45, 1151], "read_item": 45, "dest_index": 45, "fqn": [45, 48, 1963], "metamodelmateri": 45, "defaultsaveplann": [45, 1894], "empty_lik": [45, 1875, 1897, 1901, 1912, 1914, 1939, 1953], "global_plan": 45, "finish_plan": 45, "central_plan": 45, "readitem": [45, 1894], "planner_data": 45, "loaditemtyp": 45, "metadataindex": 45, "dest_offset": 45, "storage_index": 45, "storage_offset": [45, 157, 536, 633, 894, 1895, 1897, 1939], "tandem": 45, "fp16planner": 45, "write_item": 45, "writeitemtyp": 45, "byte_io": 45, "itertool": [45, 49, 954, 967], "islic": 45, "ddploadbalancingplann": 45, "all_plan": 45, "saveextradataplann": 45, "merged_data": 45, "new_plan": 45, "idempot": [45, 1949, 1951], "hi": [45, 1423, 1424, 1896, 1898, 1927], "late": [45, 60], "tensorwritedata": 45, "nonetyp": [45, 1897, 1899], "single_file_per_rank": 45, "sync_fil": 45, "thread_count": 45, "per_thread_copy_ahead": 45, "10000000": 45, "atom": [45, 60, 74, 1900], "distributedtensor": [45, 48], "flatten_state_dict": 45, "flatten_sharded_tensor": 45, "dedup_replicated_tensor": 45, "lookup_object": 45, "transform_object": 45, "lookup_tensor": 45, "transform_tensor": 45, "fault": [46, 51, 59, 60, 1147], "toler": [46, 51, 59, 60, 74, 710, 924, 925, 1210, 1236, 1237, 1275, 1278, 1293, 1692, 1699, 1896, 1960], "quickstart": 46, "agent": [46, 52, 53, 54, 57, 59, 61, 62, 1949], "expir": 46, "kubernet": 46, "distributedoptim": [47, 1633, 1894, 1949, 1950], "rref": [47, 1633, 1894, 1899, 1942, 1950], "optimizer_class": 47, "params_rref": 47, "get_gradi": [47, 1939, 1949, 1950], "multithread": [47, 1922], "dist_autograd": [47, 1633, 1949, 1950], "rpc": [47, 73, 1633, 1894, 1899, 1942, 1950, 1951], "context_id": [47, 1633, 1949, 1950], "rref1": [47, 1949, 1950], "worker1": [47, 73, 1633, 1949, 1950], "rref2": [47, 1949, 1950], "to_her": [47, 1633, 1939, 1949, 1950, 1951], "dist_optim": [47, 1633, 1950], "postlocalsgdoptim": [47, 1894], "afer": 47, "modelaverag": 47, "localsgd": 47, "model_averag": 47, "post_localsgd_hook": 47, "postlocalsgdst": 47, "subgroup": 47, "start_localsgd_it": 47, "warmup_step": 47, "local_optim": 47, "periodicmodelaverag": 47, "intra": [47, 66, 1921, 1923, 1942], "unnecessari": [47, 1673, 1899, 1919, 1922, 1924, 1935, 1941, 1957], "parameters_as_bucket_view": 47, "overlap_with_ddp": 47, "consumpt": [47, 70, 1678, 1953, 1958], "intact": [47, 1949], "ddp_zero_hook": 47, "disjointli": 47, "trail": [47, 1668, 1670, 1914, 1917, 1920, 1924], "wari": 47, "static_graph": [47, 1633, 1923], "third": [47, 49, 1093, 1094, 1310, 1361, 1368, 1383, 1386, 1448, 1721, 1894, 1896, 1922, 1925, 1930, 1941, 1943], "add_param_group": [47, 1645, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710], "param_group": [47, 66, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1706, 1707, 1708, 1709, 1710, 1717, 1720], "frozen": [47, 1225, 1230, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1900, 1936], "trainabl": [47, 1040, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1706, 1707, 1708, 1709, 1710, 1924], "consolidate_state_dict": 47, "consolid": [47, 66, 1942], "pertain": 47, "preced": [47, 51, 66, 696, 1628, 1721, 1860, 1900, 1921, 1940, 1944], "dtensor": [48, 66], "rowwis": 48, "colwis": 48, "pairwis": [48, 49, 1413, 1462, 1501], "parallelize_modul": [48, 1894], "device_mesh": 48, "parallelize_plan": 48, "tp_mesh_dim": 48, "sub_modul": 48, "parallelstyl": 48, "devicemesh": 48, "mesh": [48, 1958], "prepar": [48, 66, 74, 813, 855, 857, 873, 875, 877, 878, 879, 1160, 1230, 1900, 1937, 1962, 1963], "pairwiseparallel": [48, 1894], "rowwiseparallel": [48, 1894], "_prepare_input": 48, "make_input_shard_1d_last_dim": [48, 1894], "_prepare_output": 48, "make_output_tensor": [48, 1894], "colwiseparallel": [48, 1894], "make_input_replicate_1d": [48, 1894], "make_sharded_output_tensor": 48, "megatron": 48, "lm": 48, "arxiv": [48, 49, 1423, 1471, 1472, 1499, 1677, 1729, 1841, 1919], "1909": [48, 894], "08053": 48, "multihead": [48, 1459, 1498], "mlp": [48, 1624, 1944], "sequenceparallel": [48, 1894], "pdf": [48, 1376, 1471, 1804, 1919], "2205": 48, "05198": 48, "expectedli": 48, "make_input_reshard_repl": [48, 1894], "make_input_shard_1d": [48, 1894], "make_output_replicate_1d": [48, 1894], "make_output_reshard_tensor": [48, 1894], "make_output_shard_1d": [48, 1894], "multiheadattent": [48, 1496, 1498, 1500, 1944], "multihead_attent": 48, "swap": [48, 74, 633, 804, 805, 806, 809, 813, 880, 1310, 1501, 1502, 1618, 1619, 1860, 1897, 1900, 1922, 1944, 1953, 1955, 1962], "multihead_attention_tp": 48, "tensorparallelmultiheadattent": [48, 1894], "embed_dim": [48, 751, 1459], "num_head": [48, 751, 1459, 1897], "add_bias_kv": [48, 751, 1459], "add_zero_attn": [48, 751, 1459, 1897], "kdim": [48, 751, 1459], "vdim": [48, 751, 1459], "batch_first": [48, 750, 751, 776, 1405, 1423, 1459, 1468, 1469, 1496, 1498, 1500, 1667, 1669, 1670, 1672, 1897, 1926], "tp_size": 48, "self_attent": 48, "head": [48, 751, 1361, 1459, 1496, 1498, 1500], "fullyshardeddataparallel": [48, 1894], "enable_2d_with_fsdp": [48, 1894], "parameteriz": 49, "tensorflow": [49, 1707, 1919, 1958], "backpropag": [49, 925, 1708, 1739, 1926], "surrog": 49, "likelihood": [49, 1361, 1407, 1460, 1467, 1549, 1587, 1595], "reinforc": [49, 1482, 1605], "polici": [49, 51, 53, 66, 1715, 1721], "reparameter": [49, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663, 1664, 1665, 1677], "trick": [49, 920, 1370, 1554, 1919, 1927, 1929], "autoencod": 49, "whilst": [49, 1922], "densiti": [49, 319, 1182, 1183, 1804, 1897, 1954], "log_prob": [49, 1361, 1376, 1536, 1897], "theta": [49, 1517, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1897], "pi": [49, 192, 395, 714, 946, 1178, 1179, 1272, 1403, 1467, 1550, 1595, 1713, 1714, 1733, 1795, 1796, 1799, 1800, 1801, 1802, 1836, 1898, 1899, 1941, 1954], "reward": 49, "ascent": 49, "prob": [49, 1897], "policy_network": 49, "next_stat": 49, "rsampl": 49, "parameter": [49, 395, 471, 1227, 1915, 1953], "has_rsampl": 49, "batch_shap": 49, "event_shap": 49, "validate_arg": 49, "arg_constraint": 49, "cdf": 49, "cumul": [49, 1073, 1074, 1075, 1076, 1077, 1300, 1371, 1372, 1373, 1403, 1426, 1427, 1428, 1492, 1550], "mass": 49, "enumerate_support": 49, "discret": [49, 65, 498, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1123, 1124, 1129, 1131, 1554, 1804, 1958, 1961], "cardin": [49, 1322], "univari": 49, "singleton": [49, 272, 1425, 1874, 1920], "cartesian": [49, 954, 1322, 1733], "_instanc": 49, "icdf": 49, "perplex": 49, "sample_shap": 49, "sample_n": 49, "set_default_validate_arg": 49, "mimic": [49, 1721], "stddev": 49, "varianc": [49, 986, 1371, 1372, 1373, 1398, 1407, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1545, 1549, 1706, 1707, 1743, 1752, 1753, 1881, 1882, 1917, 1930], "exp_famili": 49, "famili": 49, "p_": [49, 958, 1312, 1709], "langl": 49, "rangl": 49, "denot": [49, 74, 986, 1241, 1260, 1266, 1279, 1289, 1381, 1382, 1419, 1642, 1645, 1709, 1822, 1823, 1824, 1826, 1827, 1883, 1927, 1947, 1950, 1953], "carrier": 49, "analyt": [49, 924, 925, 1543, 1953], "bregman": 49, "courtesi": 49, "frank": 49, "nielsen": 49, "richard": 49, "nock": 49, "logit": [49, 409, 1370, 1389, 1525, 1535, 1554, 1897, 1939, 1954], "70": [49, 1279, 1739, 1914], "odd": [49, 1115, 1116, 1117, 1125, 1126, 1127, 1527, 1528, 1529], "lower_bound": 49, "upper_bound": 49, "has_enumerate_support": 49, "param_shap": 49, "concentration1": 49, "concentration0": 49, "concentr": 49, "1046": 49, "1st": [49, 1920], "2nd": [49, 633, 1461, 1487, 1590, 1920], "greaterthan": 49, "total_count": 49, "71": 49, "trial": 49, "integergreaterthan": 49, "ldot": [49, 1252, 1260, 1291, 1307, 1322, 1425, 1446, 1447, 1448, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "unnorm": [49, 1389, 1525, 1535, 1554], "likewis": [49, 1860], "25": [49, 512, 602, 603, 604, 956, 1182, 1288, 1293, 1399, 1456, 1458, 1461, 1624, 1633, 1670, 1672, 1699, 1721, 1740, 1880, 1896, 1953, 1954], "independentconstraint": 49, "simplex": 49, "loc": [49, 1292], "lorentz": 49, "3214": 49, "width": [49, 795, 801, 874, 1181, 1182, 1183, 1367, 1368, 1382, 1383, 1385, 1386, 1422, 1447, 1448, 1460, 1487, 1505, 1563, 1621, 1913, 1953], "df": 49, "chi": 49, "continuous_bernoulli": 49, "lim": [49, 1218], "499": 49, "501": 49, "2538": [49, 1252], "pervas": 49, "loaiza": 49, "ganem": 49, "cunningham": 49, "jp": 49, "1907": 49, "06845": 49, "8954": 49, "greaterthaneq": 49, "df1": 49, "df2": 49, "fisher": 49, "snedecor": 49, "2453": 49, "degre": [49, 986, 1071, 1078, 1221, 1258, 1259, 1453, 1462, 1501, 1633, 1747, 1767, 1834, 1835, 1881, 1882, 1897, 1927, 1939, 1953], "freedom": [49, 986, 1834, 1835, 1881, 1882, 1927], "0124": 49, "half_cauchi": 49, "half_norm": 49, "base_distribut": 49, "reinterpreted_batch_ndim": 49, "diagon": [49, 71, 243, 278, 611, 612, 613, 614, 947, 982, 986, 1081, 1082, 1083, 1085, 1094, 1107, 1155, 1156, 1166, 1250, 1262, 1264, 1267, 1279, 1283, 1592, 1602, 1820, 1859, 1863, 1864, 1865, 1866, 1867, 1897, 1924, 1939, 1957], "multivari": [49, 1954], "multivariate_norm": 49, "mvn": 49, "scale_tril": 49, "diag": [49, 72, 1154, 1155, 1156, 1256, 1257, 1284, 1729, 1820, 1840, 1841, 1897, 1939], "diagn": 49, "1729": [49, 1930], "lkj_choleski": 49, "lkj": 49, "matric": [49, 278, 702, 705, 936, 948, 949, 958, 959, 960, 961, 1082, 1166, 1241, 1250, 1251, 1252, 1254, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1293, 1301, 1310, 1312, 1325, 1404, 1462, 1517, 1551, 1640, 1645, 1727, 1729, 1739, 1788, 1814, 1817, 1818, 1840, 1841, 1863, 1864, 1866, 1897, 1912, 1927, 1933, 1953, 1959], "eta": [49, 1693, 1695, 1708], "proport": [49, 1421, 1422, 1459, 1500], "det": [49, 1258, 1259, 1280, 1301, 1897, 1939], "lkjcorr": 49, "onion": 49, "3x3": [49, 1077, 1861], "3516": 49, "9361": 49, "1899": [49, 1323], "4748": 49, "8593": 49, "vine": 49, "2009": [49, 1729, 1841], "lewandowski": 49, "dorota": 49, "kurowicka": 49, "harri": [49, 1804], "joe": 49, "journal": [49, 1746], "1016": 49, "jmva": 49, "04": [49, 1137, 1298, 1797, 1804], "008": 49, "corrcholeski": 49, "log_norm": [49, 1939], "lowrank_multivariate_norm": 49, "cov_factor": 49, "cov_diag": 49, "covari": [49, 949, 982, 986, 1371, 1372, 1373, 1492, 1729], "covariance_matrix": 49, "2102": 49, "5429": [49, 1863], "woodburi": 49, "lemma": 49, "capacit": 49, "precision_matrix": 49, "mixture_same_famili": 49, "mixture_distribut": 49, "component_distribut": 49, "rightmost": [49, 949, 1182, 1183, 1899], "gaussian": [49, 1403, 1407, 1482, 1549, 1550, 1605, 1803, 1954], "gmm": 49, "bivari": 49, "innermost": [49, 74, 1174, 1183, 1775], "1338": 49, "mathbf": [49, 1241, 1641, 1674, 1677, 1708], "sigma": [49, 192, 395, 776, 1370, 1404, 1405, 1406, 1423, 1424, 1482, 1483, 1551, 1605, 1641, 1674, 1798, 1834, 1835, 1881, 1882, 1897], "triangular": [49, 959, 960, 961, 1250, 1251, 1257, 1259, 1267, 1268, 1275, 1278, 1279, 1281, 1283, 1592, 1715, 1739, 1863, 1864, 1865, 1866, 1867], "positivedefinit": 49, "lowercholeski": 49, "negative_binomi": 49, "halfopeninterv": 49, "mu": [49, 395, 1707, 1709], "one_hot_categor": 49, "onehot": 49, "5623": 49, "nonneg": [49, 1502, 1729, 1841, 1954], "pmf": 49, "mathrm": [49, 938, 1258, 1259, 1260, 1261, 1272, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1462, 1467, 1492, 1640, 1696, 1697, 1698, 1708, 1743, 1919, 1954], "relaxed_bernoulli": 49, "temperatur": [49, 1554, 1894], "parametr": [49, 1150, 1642, 1649, 1674, 1675, 1677, 1915, 1924], "reparametriz": 49, "99": [49, 1232, 1707, 1896], "2951": [49, 1320], "3442": 49, "8918": 49, "9021": 49, "maddison": 49, "2017": [49, 1496, 1498, 1500, 1821, 1936], "reparametr": [49, 1554, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1657, 1677], "jang": 49, "relaxed_categor": 49, "1294": [49, 959], "2324": [49, 1221, 1453], "3859": 49, "2523": 49, "student": 49, "transformed_distribut": 49, "composit": [49, 71, 1154, 1268, 1640, 1896, 1899, 1925, 1930, 1937], "basedistribut": 49, "dx": [49, 1077, 1369, 1861, 1897, 1924, 1925, 1954], "dy": 49, "logist": [49, 1482, 1485, 1605, 1954], "sigmoidtransform": 49, "affinetransform": 49, "invert": [49, 74, 961, 1212, 1252, 1261, 1262, 1268, 1274, 1281, 1283, 1286, 1287, 1301, 1449, 1450, 1451, 1863, 1897, 1933, 1949], "3418": 49, "upper": [49, 200, 201, 202, 610, 811, 947, 952, 959, 960, 961, 963, 1108, 1109, 1181, 1182, 1250, 1251, 1257, 1259, 1267, 1268, 1279, 1283, 1471, 1592, 1600, 1601, 1715, 1721, 1739, 1754, 1775, 1863, 1866, 1867, 1897, 1917, 1939, 1954, 1960], "von_mis": 49, "circular": [49, 1381, 1382, 1383, 1429, 1430, 1431, 1590], "von": 49, "mise": 49, "unconstrain": [49, 1645], "angl": [49, 771, 900, 1078, 1301, 1439, 1733, 1747, 1791, 1894, 1897, 1939, 1953], "9777": 49, "radian": [49, 714, 900, 1078, 1747, 1897, 1939], "nichola": 49, "1979": 49, "152": [49, 633], "157": 49, "4784": [49, 1325], "symmetr": [49, 818, 836, 937, 946, 959, 960, 961, 1115, 1116, 1117, 1122, 1124, 1128, 1129, 1131, 1178, 1179, 1240, 1250, 1251, 1256, 1257, 1259, 1263, 1264, 1265, 1272, 1275, 1278, 1284, 1293, 1640, 1645, 1721, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1944, 1947], "x_ij": 49, "wu": [49, 1293], "chu": 49, "2018": [49, 1293, 1737], "sawyer": 49, "2007": 49, "anderson": 49, "2003": 49, "odel": 49, "feiveson": 49, "1966": 49, "samplecovari": 49, "jasa": 49, "61": 49, "313": 49, "199": 49, "203": [49, 633], "ku": 49, "bloomfield": 49, "2010": [49, 1917], "ox": 49, "max_try_correct": 49, "bartlett": [49, 937], "singular": [49, 1252, 1266, 1267, 1273, 1275, 1277, 1278, 1284, 1285, 1293, 1301, 1310, 1641, 1645, 1729, 1840, 1841, 1933], "kl_diverg": 49, "kullback": [49, 1419, 1564], "leibler": [49, 1419, 1564], "register_kl": 49, "type_p": 49, "type_q": 49, "kl_normal_norm": 49, "ambigu": [49, 74, 1206, 1384, 1385, 1386, 1400, 1449, 1450, 1451, 1505, 1899], "runtimewarn": 49, "basep": 49, "derivedq": 49, "kl_version1": 49, "derivedp": 49, "baseq": 49, "kl_version2": 49, "tie": 49, "abstransform": 49, "event_dim": 49, "affin": [49, 66, 489, 490, 491, 492, 493, 765, 767, 768, 769, 818, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1517, 1922, 1930], "cattransform": 49, "tseq": 49, "functor": [49, 1037, 1038], "submatrix": 49, "t0": [49, 1174, 1693, 1898], "exptransform": 49, "identity_transform": 49, "composetransform": 49, "corrcholeskytransform": 49, "uncontrain": 49, "euclidean": [49, 956, 1588], "x_i": [49, 71, 963, 1073, 1074, 1075, 1076, 1289, 1296, 1443, 1462, 1486, 1488, 1501, 1572, 1608, 1736, 1819, 1834, 1835, 1861, 1881, 1882, 1883, 1954], "stickbreakingtransform": 49, "r_i": 49, "tanh": [49, 593, 776, 781, 811, 901, 1403, 1405, 1406, 1423, 1424, 1452, 1468, 1470, 1494, 1550, 1582, 1614, 1895, 1897, 1912, 1913, 1917, 1939, 1946, 1953], "unsign": [49, 1947, 1956, 1959, 1960], "z_i": 49, "s_i": 49, "y_i": [49, 963, 1073, 1074, 1075, 1076, 1289, 1296, 1501, 1861, 1883, 1927], "sqrt": [49, 74, 395, 565, 689, 690, 776, 982, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1187, 1240, 1322, 1371, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1403, 1405, 1406, 1408, 1416, 1417, 1418, 1421, 1422, 1423, 1424, 1425, 1438, 1440, 1468, 1470, 1492, 1550, 1602, 1645, 1694, 1695, 1696, 1697, 1700, 1706, 1707, 1743, 1770, 1803, 1834, 1835, 1895, 1897, 1912, 1917, 1918, 1919, 1939, 1953, 1954, 1960], "cumulativedistributiontransform": 49, "copula": 49, "base_dist": 49, "independenttransform": 49, "base_transform": 49, "log_abs_det_jacobian": 49, "lowercholeskytransform": 49, "positivedefinitetransform": 49, "powertransform": 49, "expon": [49, 286, 287, 298, 485, 486, 1137, 1144, 1244, 1274, 1361, 1441, 1588, 1736, 1746, 1895, 1897, 1956, 1959], "reshapetransform": 49, "in_shap": 49, "out_shap": 49, "softplustransform": 49, "tanhtransform": 49, "softmaxtransform": 49, "biject": 49, "hmc": 49, "stacktransform": 49, "stick": 49, "primarili": [49, 73, 831, 832, 833, 839, 1353, 1909, 1944], "_call": 49, "_invers": 49, "codomain": [49, 1919], "iff": [49, 1459], "weaker": [49, 1922], "pseudoinvers": [49, 1261, 1278, 1286], "monoton": [49, 1452, 1582, 1775], "forward_shap": 49, "inverse_shap": 49, "corr_choleski": 49, "greater_than": 49, "greater_than_eq": 49, "integer_interv": 49, "less_than": 49, "lower_choleski": 49, "lower_triangular": 49, "nonnegative_integ": 49, "one_hot": [49, 1897, 1939], "positive_integ": 49, "positive_semidefinit": 49, "positive_definit": 49, "real_vector": 49, "unit_interv": 49, "is_discret": 49, "constrain": [49, 1489, 1899, 1930], "_cat": 49, "dependent_properti": 49, "_dependentproperti": 49, "_greaterthan": 49, "_greaterthaneq": 49, "_independentconstraint": 49, "_integerinterv": 49, "_interv": 49, "half_open_interv": 49, "_halfopeninterv": 49, "_lessthan": 49, "_multinomi": 49, "_stack": [49, 1939], "constraintregistri": 49, "biject_to": 49, "transform_to": 49, "overparameter": 49, "rotat": [49, 1767, 1840], "hamiltonian": 49, "mont": 49, "carlo": 49, "potential_energi": 49, "cheap": [49, 1361], "svi": 49, "fewer": [49, 71, 709, 711, 712, 715, 962, 1241, 1242, 1308, 1318, 1320, 1321, 1323, 1326, 1348, 1351, 1407, 1534, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1737, 1821, 1834, 1835, 1839, 1857, 1881, 1882, 1905, 1920, 1935, 1960], "my_constraint": 49, "my_transform": 49, "myconstraintclass": 49, "my_factori": 49, "mytransform": 49, "param1": [49, 1930], "param2": [49, 1930], "constraint_registri": 49, "my_registri": 49, "construct_transform": 49, "myconstraint": 49, "from_dlpack": [50, 896, 1894], "ext_tensor": [50, 1145], "extern": [50, 998, 1145, 1236, 1878, 1909, 1921, 1922, 1933, 1937], "immut": [50, 1145, 1899], "__dlpack__": [50, 1145], "capsul": [50, 896, 1145], "ndarrai": [50, 475, 895, 1145, 1146, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1937, 1958, 1960], "pycapsul": [50, 1145], "to_dlpack": [50, 1145, 1894], "dltensor": [50, 1145], "t3": [50, 1145, 1950], "legaci": [50, 61, 1554, 1943, 1956], "idiomat": 50, "plane": [51, 60, 754, 755, 756, 757, 758, 759, 782, 783, 784, 785, 788, 789, 790, 798, 799, 1082, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1401, 1402, 1421, 1422, 1425, 1441, 1446, 1447, 1448, 1511, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1570, 1573, 1574, 1576, 1577, 1578, 1677, 1744, 1745, 1767], "monitor": [51, 61, 62, 101, 997, 1723, 1894, 1922, 1928], "unhealthi": 51, "tear": 51, "decentr": 51, "elasticag": 51, "quad": [51, 1369, 1370, 1389, 1420, 1444, 1460, 1502], "group_result": 51, "is_fail": [51, 52], "exit_cod": 51, "get_worker_group": 51, "workergroup": [51, 61], "mutabl": [51, 1236, 1896, 1941, 1958], "implementor": 51, "defens": 51, "retri": [51, 53, 62, 1051, 1949, 1951], "max_restart": [51, 52, 61], "runresult": 51, "workerspec": [51, 52, 61, 62], "local_world_s": [51, 52, 61], "rdzv_handler": [51, 52, 60], "monitor_interv": [51, 52], "local_addr": [51, 60], "tee": [51, 58], "blueprint": 51, "spec": [51, 52, 62, 75, 103, 809, 810, 835, 836, 837, 840, 841, 842, 1946], "homogen": [51, 61], "rendezvoushandl": [51, 52, 60, 61], "rdzv": [51, 59, 61], "consol": [51, 54, 57, 58, 61, 1958], "get_entrypoint_nam": 51, "__qualname__": 51, "workerst": 51, "unknown": [51, 1635, 1636, 1951], "unrecover": 51, "termin": [51, 60, 62, 74, 1699, 1911, 1949], "uncaught": [51, 53], "unhandl": 51, "recov": [51, 911, 1115, 1280, 1312, 1633, 1666, 1836, 1918, 1926, 1927, 1945], "is_run": 51, "role_rank": [51, 61], "role_world_s": [51, 61], "pid": [51, 53, 61, 62, 1492, 1926, 1943], "local_elastic_ag": 51, "localelasticag": [51, 52, 62], "start_method": [51, 52, 58, 62, 1911], "exit_barrier_timeout": 51, "log_dir": [51, 58, 1909, 1958], "inter": [51, 53, 66, 1171, 1786, 1921, 1923, 1942, 1949], "advis": [51, 560, 633, 881, 1932], "pipe": [51, 62, 1894, 1949], "torchelastic_enable_file_tim": 51, "torchelastic_timer_fil": 51, "shared_queu": 51, "get_context": [51, 62, 1932], "nproc_per_process": 51, "foobar": [51, 53, 57, 58], "other_param": [51, 62], "usr": [51, 58, 60, 1922], "simpleelasticag": 51, "scaffold": 51, "_assign_worker_rank": 51, "group_world_s": 51, "_exit_barri": 51, "_initialize_work": 51, "worker_group": 51, "fresh": [51, 1085, 1778, 1809, 1893], "start_work": 51, "_stop_work": 51, "optimist": 51, "deleg": 51, "_monitor_work": 51, "_rendezv": 51, "_restart_work": 51, "_shutdown": 51, "death_sig": 51, "sigterm": 51, "_start_work": 51, "gracefulli": [51, 61, 71, 1251, 1925], "meaningless": 51, "intention": [51, 1091, 1883, 1928, 1949], "ship": [52, 1151, 1921, 1949], "programmat": [52, 74, 1930], "my_launch": 52, "argv": [52, 63], "trainer_entrypoint_fn": 52, "fn_arg": 52, "run_result": 52, "myrendezvoushandl": 52, "elastic_ag": 52, "metrichandl": [52, 57], "mymetrichandl": 52, "metric_data": [52, 57], "metricdata": 52, "sink": [52, 57, 1909], "eventhandl": 52, "cloudwatch": 52, "nulleventhandl": 52, "myeventhandl": 52, "start_process": [53, 58, 1911], "torchelastic_error_fil": 53, "error_handl": 53, "sugar": [53, 1898], "get_error_handl": 53, "childfailederror": 53, "get_first_failur": 53, "dump_error_fil": 53, "error_fil": [53, 58], "exitcod": [53, 61], "nanni": 53, "diagnost": [53, 86, 91, 92, 93, 94, 95, 96, 97, 98, 101, 1687, 1690, 1894, 1896], "torchelastic_ag": 53, "trainer_0": 53, "trainer_1": 53, "trainer_n": 53, "errorhandl": 53, "record_except": 53, "processfailur": 53, "test_ev": 54, "eventsourc": 54, "get_logging_handl": 54, "millisecond": [54, 57, 997, 1909], "eventmetadatavalu": 54, "telemetri": 57, "timeseri": 57, "metric_group": 57, "metric_nam": 57, "sensibl": 57, "my_modul": [57, 66, 74, 1896, 1941], "nullmetricshandl": 57, "consolemetricshandl": 57, "my_method": 57, "put_metr": 57, "calculate_lat": 57, "succinctli": 57, "baz": [57, 74, 870, 1941, 1960], "leaf_modul": 57, "classnam": [57, 1899], "threw": 57, "my_app": 57, "consolemetrichandl": 57, "stdout": [57, 58, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1937], "stdoutmetrichandl": 57, "1574213883": 57, "4182858": 57, "my_metr": 57, "1574213940": 57, "5237644": 57, "nullmetrichandl": 57, "class_nam": [57, 74], "def_nam": 57, "metric_valu": 57, "metric_group_nam": 57, "popen": 58, "stderr": [58, 1893, 1908], "err": 58, "echo": 58, "hello": [58, 71, 1898, 1937, 1941], "pcontext": 58, "multiprocesscontext": 58, "subprocesscontext": 58, "keyset": 58, "bitmask": 58, "mask": [58, 417, 418, 419, 420, 421, 560, 751, 924, 925, 1314, 1365, 1376, 1398, 1459, 1496, 1497, 1498, 1499, 1500, 1545, 1602, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1710, 1894, 1897, 1912, 1913, 1953], "bar0": 58, "bar1": 58, "file1": 58, "file2": 58, "caution": 58, "short": [58, 74, 750, 779, 1094, 1218, 1376, 1423, 1424, 1536, 1689, 1788, 1836, 1898, 1912, 1919, 1920, 1930, 1949, 1955, 1956, 1959], "ing": 58, "cmd": [58, 61], "forkserv": [58, 1633, 1911, 1932], "tee_stdout": 58, "tee_stderr": 58, "processcontext": [58, 1911], "superset": [58, 61], "runprocsresult": 58, "num_nod": [59, 61], "trainers_per_nod": 59, "num_allowed_failur": 59, "job_id": [59, 60, 61], "endpoint": [59, 60, 61], "host_node_addr": [59, 61], "min_siz": [59, 61], "num_allowed_failures_or_membership_chang": 59, "node1": [59, 61], "29400": [59, 61], "sidecar": [59, 60], "agre": [60, 1279, 1951], "resum": [60, 1715, 1721, 1723, 1949, 1951, 1958], "retryabl": 60, "lose": [60, 63, 66, 210, 227, 1913], "train_loop": [60, 878], "arriv": [60, 61, 1949, 1951], "dynamicrendezvoushandl": 60, "rendezvousbackend": 60, "c10drendezvousbackend": 60, "etcdrendezvousbackend": 60, "supersed": 60, "etcdrendezvoushandl": 60, "my_run_id": 60, "from_backend": 60, "run_id": [60, 61], "min_nod": 60, "max_nod": 60, "rendezvousparamet": 60, "admit": [60, 61, 1922], "get_as_bool": 60, "get_as_int": 60, "rendezvoushandlerregistri": 60, "create_handl": 60, "creator": [60, 1919, 1949, 1951], "get_run_id": 60, "is_clos": 60, "set_clos": 60, "next_rendezv": 60, "rendezvousclosederror": 60, "rendezvousconnectionerror": 60, "rendezvousstateerror": 60, "rendezvoustimeouterror": 60, "num_nodes_wait": 60, "shutdown": [60, 1949, 1950], "rendezvouserror": 60, "dynamic_rendezv": 60, "join_timeout": 60, "600": 60, "last_call_timeout": 60, "close_timeout": 60, "rendezvoustimeout": 60, "get_stat": [60, 107], "fenc": 60, "set_stat": [60, 107], "condition": [60, 1785], "last_cal": 60, "heartbeat": 60, "keep_al": 60, "c10d_rendezvous_backend": 60, "create_backend": 60, "store_typ": 60, "tcp": [60, 61, 1949], "read_timeout": 60, "60": [60, 62, 1407, 1725, 1851, 1856, 1909, 1949], "is_host": 60, "cname": 60, "fqdn": [60, 61], "etcd_rendezvous_backend": 60, "ssl_cert": 60, "ssl": 60, "certif": 60, "ssl_cert_kei": 60, "ca_cert": 60, "rool": 60, "key_prefix": 60, "ttl": 60, "hour": 60, "etcd_rendezv": 60, "rdzv_impl": 60, "etcdrendezv": 60, "etcd_address": 60, "min_work": 60, "max_work": 60, "noqa": 60, "w605": 60, "2379": [60, 1318], "etcd_prefix": 60, "etcdstor": 60, "etcd_stor": 60, "etcd_client": 60, "etcd_store_prefix": 60, "piggyback": 60, "num": [60, 761, 762, 776, 1343, 1405, 1408, 1423, 1459, 1468, 1496, 1932], "lookuperror": 60, "override_timeout": 60, "etcdserv": 60, "cumbersom": [60, 1899], "etcd_serv": 60, "data_dir": 60, "v3": [60, 61], "substitut": [60, 74, 1233, 1919, 1956], "torchelastic_etcd_binary_path": 60, "get_client": 60, "etcd_binary_path": 60, "migrat": [61, 67, 1322, 1677, 1947], "train_script": 61, "aforment": 61, "suffic": [61, 74], "compliant": [61, 63], "num_train": 61, "wors": [61, 1875], "port_k": 61, "etcd": 61, "v2": [61, 1289, 1728, 1893], "revis": 61, "localworkergroup": 61, "rdzv_id": 61, "rdzv_backend": [61, 63], "rdzv_endpoint": [61, 63], "max_nnod": 61, "torchelastic_restart_count": 61, "torchelastic_max_restart": 61, "python_exec": 61, "gang": 61, "departur": 61, "surviv": 61, "kill": [61, 62, 1911, 1926], "load_checkpoint": [61, 63], "checkpoint_path": [61, 63], "dataset": [61, 63, 75, 814, 1361, 1370, 1419, 1894, 1926, 1929, 1932, 1936, 1940, 1944, 1945, 1958], "train_step": 61, "should_checkpoint": 61, "save_checkpoint": [61, 63], "acquir": [62, 74, 1930, 1951, 1953], "deadlin": 62, "message_queu": 62, "localtimerserv": 62, "max_interv": 62, "trainer_func": 62, "localtimercli": 62, "expiri": 62, "timer_cli": 62, "countdown": 62, "timefram": [62, 1949], "elig": [62, 1951], "reap": 62, "timerserv": 62, "mp_queue": 62, "daemon": [62, 1911], "filetimerserv": 62, "file_path": 62, "log_ev": [62, 1909], "filetimercli": 62, "fifo": 62, "watchdog": 62, "filetimerrequest": 62, "sigkil": 62, "named_pip": 62, "mkfifo": 62, "timercli": 62, "timerrequest": 62, "scope_id": 62, "expiration_tim": 62, "acquisit": 62, "request_queu": 62, "entiti": [62, 74], "clear_tim": 62, "get_expired_tim": 62, "register_tim": 62, "timer_request": 62, "use_env": 63, "expositori": 63, "worst": [63, 1924], "total_num_epoch": 63, "exportdb": [64, 1894], "sharding_strategi": 66, "cpu_offload": 66, "auto_wrap_polici": 66, "backward_prefetch": 66, "backwardprefetch": [66, 1894], "backward_pr": [66, 1221, 1453], "mixed_precis": [66, 1633], "ignored_modul": 66, "param_init_fn": 66, "sync_module_st": 66, "forward_prefetch": 66, "limit_all_gath": 66, "use_orig_param": 66, "ignored_st": 66, "deepspe": 66, "shorten": 66, "sharded_modul": 66, "0001": [66, 74, 1075, 1265, 1441, 1570, 1693, 1723, 1897, 1940], "stale": 66, "dev_id": 66, "no_sync": [66, 1633], "offload": 66, "ping": 66, "77724": 66, "summon_full_param": 66, "shard_grad_op": 66, "unshard": 66, "full_shard": 66, "with_grad": 66, "reacquir": 66, "cpuoffload": [66, 1894], "modulewrappolici": 66, "proceed": [66, 997, 1407, 1950, 1951], "nonwrapped_numel": 66, "subtre": 66, "size_based_auto_wrap_polici": 66, "exce": [66, 1298, 1922, 1932], "100m": 66, "numel": [66, 452, 461, 966, 986, 1125, 1206, 1897, 1912, 1919, 1939, 1953], "custom_auto_wrap_polici": 66, "min_num_param": 66, "1e8": 66, "my_auto_wrap_polici": 66, "functool": [66, 69, 75, 857, 1924, 1960], "1e5": 66, "mixedprecis": [66, 1894], "is_meta": [66, 1939], "reset_paramet": 66, "torchdistx": 66, "deferred_init": 66, "materialize_modul": 66, "my_init_fn": 66, "fsdp_model": 66, "fullstatedictconfig": [66, 1894], "named_paramet": [66, 68, 70, 1150, 1221, 1225, 1453, 1930, 1935], "flatparamet": 66, "unifi": [66, 1894, 1913], "norm_typ": [66, 761, 762, 1396, 1397, 1421, 1422, 1543, 1544, 1573, 1574, 1637, 1897], "infin": [66, 984, 1211, 1213, 1215, 1216, 1347, 1369, 1446, 1447, 1448, 1576, 1577, 1578, 1637, 1698, 1808, 1819, 1953, 1954], "no_shard": 66, "flatten_sharded_optim_state_dict": 66, "sharded_optim_state_dict": 66, "shard_full_optim_state_dict": 66, "unflatten": [66, 1897, 1912, 1913, 1939, 1957], "fsdp_modul": 66, "root_onli": 66, "full_optim_state_dict": 66, "optim_input": 66, "rank0_onli": 66, "convent": [66, 74, 353, 957, 1094, 1112, 1114, 1138, 1160, 1371, 1372, 1373, 1416, 1417, 1418, 1492, 1768, 1771, 1869, 1893, 1908, 1914, 1919, 1927, 1930, 1935], "get_state_dict_typ": 66, "state_dict_typ": 66, "statedictset": [66, 1894], "optim_state_dict": 66, "differen": 66, "named_buff": [66, 1221, 1453, 1930, 1935], "oom": [66, 1926], "unflattend": 66, "statedicttyp": 66, "fulloptimstatedictconfig": [66, 1894], "set_state_dict_typ": 66, "full_state_dict": 66, "save_a_checkpoint": 66, "load_a_checkpoint": 66, "optim_state_dict_to_load": 66, "is_named_optim": 66, "load_directli": 66, "original_osd": 66, "namedoptim": 66, "keyedoptim": 66, "torchrec": [66, 1894], "gossipgrad": [66, 1633], "latter": [66, 703, 807, 1221, 1423, 1453, 1460, 1925, 1930, 1932, 1934], "rekey_optim_state_dict": 66, "optim_state_key_typ": 66, "loadabl": [66, 1893], "wrapped_model": 66, "wrapped_optim": 66, "full_osd": 66, "nonwrapped_model": 66, "nonwrapped_optim": 66, "rekeyed_osd": 66, "optimstatekeytyp": 66, "param_id": 66, "osd": 66, "param_nam": 66, "sharded_osd": 66, "scatter_full_optim_state_dict": 66, "new_model": 66, "new_optim": 66, "remap": [66, 107, 1225, 1228, 1292, 1313, 1893, 1908, 1948], "state_dict_config": 66, "optim_state_dict_config": 66, "descend": [66, 74, 155, 558, 892, 1221, 1284, 1285, 1453, 1813, 1840, 1897], "transpar": [66, 1923, 1942, 1949, 1951], "sharded_state_dict": 66, "shardedstatedictconfig": [66, 1894], "offload_to_cpu": 66, "optimstatedictconfig": [66, 1894], "param_state_dict": 66, "statedictconfig": [66, 1894], "writeback": 66, "summon": 66, "discard": [66, 1218, 1278, 1643, 1893, 1898, 1909], "redundantli": [66, 1918], "materi": [66, 916, 979, 1635, 1636, 1710, 1763, 1764, 1924], "throughput": [66, 1896, 1921], "backward_post": 66, "altogeth": [66, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710], "contend": 66, "volum": [66, 1183], "_hybrid_shard_zero2": 66, "param_dtyp": 66, "reduce_dtyp": 66, "buffer_dtyp": 66, "keep_low_precision_grad": 66, "cast_forward_input": 66, "cast_root_forward_input": 66, "_module_classes_to_ignor": 66, "batchnorm": [66, 716, 717, 1159, 1221, 1230, 1453, 1492, 1633, 1907, 1919, 1930, 1940, 1942, 1944, 1946, 1947], "_batchnorm": 66, "kept": [66, 70, 74, 713, 795, 801, 1371, 1372, 1373, 1416, 1417, 1418, 1492, 1563, 1621, 1899, 1911, 1947, 1953], "permit": [66, 1953], "thereaft": 66, "local_state_dict": 66, "upcast": 66, "recast": 66, "offload_param": 66, "use_dtensor": 66, "cfg": 66, "finetun": [66, 1221, 1453], "model_fn": 66, "my_checkpoint": 66, "localstatedictconfig": [66, 1894], "shardedoptimstatedictconfig": [66, 1894], "localoptimstatedictconfig": [66, 1894], "love": 67, "hear": 67, "arbitrarili": [67, 72, 529, 1224, 1517, 1899, 1919, 1924, 1925], "stock": [67, 72], "ensembl": [67, 70, 72, 1160], "maml": [67, 72], "vjp": [67, 70, 71, 905, 906, 1156, 1162, 1886, 1924, 1925], "whirlwind": 67, "tour": 67, "running_mean": [69, 1159, 1221, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1492, 1522, 1562, 1895, 1897, 1930, 1935], "running_var": [69, 1159, 1221, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1492, 1522, 1562, 1895, 1897, 1935], "groupnorm": [69, 1553], "anywher": [69, 1918], "batchnorm2d": [69, 729, 732, 734, 739, 830, 1230, 1390, 1427, 1522, 1907, 1919, 1930, 1944, 1946], "track_running_stat": [69, 767, 768, 769, 1159, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1935], "resnet": [69, 1893, 1896, 1898, 1930, 1941, 1958, 1962], "regnet": 69, "norm_lay": 69, "num_group": [69, 765, 1408, 1553, 1897], "fragil": 69, "replace_all_batch_norm_modules_": 69, "upstream": [70, 1936], "jvp": [70, 71, 906, 910, 911, 912, 916, 1158, 1924], "jacfwd": [70, 71, 919, 1154, 1925], "make_functional_with_buff": 70, "hurri": 70, "emul": [70, 815, 1900, 1924], "fmodel": 70, "compute_loss": [70, 72, 1150, 1152], "predict": [70, 1361, 1370, 1407, 1535, 1940, 1958], "argnum": [70, 1152, 1153, 1154, 1155, 1156], "stack_module_st": 70, "num_model": [70, 1160], "in_featur": [70, 736, 744, 745, 748, 749, 772, 780, 1160, 1221, 1361, 1438, 1440, 1453, 1624, 1640, 1641, 1673, 1674, 1677, 1930], "out_featur": [70, 736, 744, 745, 748, 749, 772, 780, 1160, 1221, 1374, 1438, 1440, 1453, 1624, 1640, 1641, 1673, 1674, 1677, 1930], "base_model": 70, "deepcopi": [70, 1944, 1963], "clearer": [70, 1277, 1710, 1924, 1938], "call_single_model": 70, "stori": [70, 1927], "grad_x": [71, 1925], "has_aux": [71, 1152, 1153, 1155, 1156, 1157, 1161], "mental": [71, 1151], "absenc": 71, "unbind": [71, 1162, 1886, 1894, 1897, 1912, 1939, 1957], "lst": 71, "in_dim": [71, 72, 908, 1152, 1162, 1886, 1925], "batchedtensor": 71, "batched_tensor_input": 71, "new_": [71, 1922, 1959], "new_zero": [71, 1897, 1939], "new_empti": [71, 1897, 1939], "diag_emb": [71, 1084, 1256, 1257, 1284, 1840, 1897, 1939], "vec": [71, 126, 127, 441, 706, 1345, 1676, 1895, 1897, 1953], "copy_": [71, 240, 1151, 1505, 1896, 1897, 1912, 1922, 1955], "arithmet": [71, 941, 944, 958, 1276, 1765, 1900, 1909, 1912, 1913, 1933, 1944, 1956], "extra_arg": 71, "theoret": 71, "custom_dot": 71, "lax": 71, "cond": [71, 75, 78, 83, 1933], "while_loop": 71, "is_nonzero": [71, 1897, 1939, 1953], "rag": 71, "unclear": [71, 633], "add_nois": 71, "prng": 71, "cos_x": [72, 1152], "neg_sin_x": [72, 1152], "hide": [72, 1162, 1886, 1925], "feature_s": [72, 1152, 1162, 1886], "feature_vec": [72, 1152, 1162, 1886], "mseloss": [72, 1152, 1414, 1484, 1583, 1922, 1923], "grad_weight_per_exampl": [72, 1152], "cotang": [72, 1161], "vjp_fn": [72, 1161], "out_tang": 72, "hessian0": 72, "hessian1": 72, "hess": [72, 1154], "rpc_async": [73, 1899, 1939, 1949, 1951], "add_done_callback": 73, "fut": [73, 1224, 1633, 1921, 1949], "set_result": [73, 1633, 1949], "haven": [73, 1930], "set_except": 73, "baseexcept": 73, "slow_set_futur": 73, "sleep": 73, "cb1": 73, "cb2": 73, "dedic": [73, 1922], "didn": [73, 1924, 1936, 1940], "cb_fut": 73, "chain_cb_fut": 73, "cb": [73, 1949], "collect_al": [73, 1894], "fut0": 73, "fut1": [73, 1949], "fut_list": 73, "wait_al": [73, 1894], "toolkit": 74, "clamp": [74, 205, 206, 815, 818, 964, 1227, 1369, 1407, 1552, 1563, 1621, 1895, 1897, 1907, 1912, 1937, 1939, 1944, 1946, 1947, 1954, 1960], "num_us": 74, "get_attr": 74, "fake": [74, 99, 728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 809, 815, 816, 826, 828, 854, 877, 878, 1108, 1109, 1687, 1894, 1937, 1941, 1944, 1947], "theses": 74, "callsit": 74, "constitut": 74, "tracer_class": 74, "treatment": 74, "topk": [74, 1895, 1897, 1912, 1939], "linear_weight": 74, "add_1": [74, 75, 80, 1151], "linear_1": 74, "relu_1": 74, "topk_1": 74, "pose": [74, 1950], "explor": [74, 1893, 1919, 1930, 1941], "edit": [74, 1941, 1957], "lint": 74, "new_nod": 74, "tediou": 74, "unwieldi": 74, "machineri": [74, 1924], "imagin": [74, 1949], "requisit": 74, "relu_decomposit": 74, "decomposition_rul": 74, "constitu": [74, 1914], "new_graph": 74, "graphappendingtrac": 74, "proxy_arg": 74, "output_proxi": 74, "node_copi": 74, "ari": [74, 1937], "unari": [74, 1155, 1156, 1496, 1498, 1500, 1900, 1912], "organiz": 74, "shapeprop": 74, "named_modul": [74, 1221, 1453, 1930], "args_it": 74, "load_arg": 74, "map_arg": 74, "fetch_attr": 74, "target_atom": 74, "attr_itr": 74, "nonexist": [74, 1898, 1899], "self_obj": 74, "encompass": 74, "prove": [74, 1911], "disprov": 74, "led": 74, "auxiliari": [74, 1152, 1153, 1155, 1156, 1157, 1161, 1893, 1929], "unord": [74, 1454, 1463], "nondetermin": [74, 925, 1934], "dedupl": 74, "transformed_resnet18": 74, "input_imag": 74, "margin": [74, 1387, 1413, 1445, 1456, 1458, 1501, 1502, 1533, 1560, 1575, 1584, 1618, 1619, 1897, 1958], "commut": 74, "toolbox": 74, "tradit": [74, 1500], "luckili": 74, "my_pass": 74, "my_module_transform": 74, "input_valu": 74, "prompt": [74, 1893, 1936], "set_trac": [74, 1226, 1232, 1238, 1896], "examin": [74, 1930, 1937, 1943], "undergon": 74, "subclassm": 74, "untrac": 74, "pre_trac": 74, "post_trac": 74, "sake": 74, "tabular": [74, 696, 1905], "transform_graph": 74, "session": 74, "luck": 74, "input_nod": 74, "stepwis": 74, "onlin": [74, 1695], "realpython": 74, "pycharm": 74, "vscode": 74, "parlanc": 74, "func_to_trac": 74, "dyn": 74, "155": 74, "__bool__": [74, 1897, 1899], "to_bool": 74, "traceerror": [74, 1944], "hyper": [74, 1484, 1898, 1958], "do_activ": 74, "without_activ": 74, "with_activ": 74, "traced_without_activ": 74, "traced_with_activ": 74, "concrete_arg": 74, "truli": [74, 1937], "__torch_function__": [74, 1964], "161": 74, "len_1": 74, "sqrt_1": 74, "mycustomtrac": 74, "traced_graph": 74, "myspecialsubmodul": 74, "submod": 74, "neg_1": 74, "is_leaf_modul": [74, 1963], "sparse_coo_tensor": [74, 560, 597, 1821, 1897, 1901, 1939, 1953], "ones_lik": [74, 1155, 1156, 1161, 1897, 1914, 1922, 1925, 1930, 1939], "zeros_lik": [74, 914, 916, 1897, 1901, 1914, 1922, 1939, 1953], "viabl": [74, 1922], "torch_randn": 74, "gotcha": 74, "bake": [74, 75, 83, 1225, 1230, 1696, 1697, 1940], "dropoutrepro": 74, "assert_clos": [74, 1111, 1113, 1114, 1119, 1120, 1125, 1126, 1127, 1129, 1131, 1894, 1896, 1960], "greatest": [74, 1164, 1347, 1937, 1960], "6207983493804932": 74, "dropoutrepro2": 74, "pytre": [74, 75, 1925], "overspeci": [74, 968], "ph": 74, "shouldn": [74, 995, 1941, 1953, 1957], "fn_or_nam": 74, "callfunct": 74, "my_custom_funct": 74, "fn_to_be_trac": 74, "reassign": [74, 1922], "regener": 74, "unset": [74, 1933], "add_submodul": 74, "subpath": 74, "get_submodul": [74, 1221, 1453], "delete_all_unused_submodul": 74, "delete_submodul": 74, "print_read": 74, "print_output": 74, "date": [74, 1941], "pythoncod": 74, "fxmodul": 74, "pathlik": [74, 1292, 1771, 1941], "owning_modul": 74, "tracer_cl": 74, "tracer_extra": 74, "the_funct": 74, "type_expr": 74, "create_nod": 74, "method_nam": 74, "0th": [74, 1162, 1886], "inserting_befor": 74, "influenc": [74, 1686, 1937, 1953], "eliminate_dead_cod": 74, "topolog": [74, 1937], "attr_1": 74, "is_impur": 74, "erase_nod": 74, "to_eras": 74, "qualified_nam": 74, "graph_copi": 74, "val_map": 74, "return_output_nod": 74, "slice": [74, 75, 83, 84, 623, 711, 712, 1371, 1372, 1373, 1486, 1488, 1492, 1608, 1609, 1760, 1777, 1778, 1809, 1819, 1870, 1895, 1896, 1900, 1914, 1937, 1939, 1953, 1954, 1957, 1959], "memory_format": [74, 174, 189, 191, 194, 197, 198, 199, 208, 214, 225, 228, 258, 285, 315, 343, 349, 411, 515, 516, 541, 596, 965, 1095, 1096, 1149, 1221, 1453, 1633, 1685, 1749, 1751, 1753, 1892, 1894, 1895, 1897, 1960], "layout": [74, 75, 80, 83, 169, 210, 227, 360, 361, 452, 462, 463, 464, 465, 466, 475, 560, 597, 598, 599, 600, 601, 603, 604, 633, 705, 881, 909, 911, 937, 946, 1010, 1095, 1096, 1097, 1107, 1112, 1130, 1148, 1149, 1178, 1179, 1240, 1291, 1307, 1315, 1325, 1353, 1569, 1684, 1685, 1710, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1860, 1865, 1867, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1901, 1914, 1922, 1939, 1941, 1953, 1958, 1959, 1960], "opoverload": [74, 1903], "companion": 74, "__exit__": [74, 1899, 1900, 1941], "arg_transform": 74, "value_remap": 74, "_node_list": 74, "doubli": 74, "on_generate_cod": 74, "make_transform": 74, "transformcodefunc": 74, "insert_pdb": 74, "current_tran": 74, "default_valu": 74, "_not_": 74, "tabul": 74, "process_input": 74, "process_output": 74, "python_cod": 74, "root_modul": [74, 809, 1946], "set_codegen": 74, "return_typ": [74, 713, 1073, 1074, 1183, 1242, 1280, 1318, 1321, 1323, 1326, 1349, 1813, 1858, 1863], "all_input_nod": 74, "format_nod": 74, "placeholder_nam": 74, "maybe_return_typenam": 74, "autogener": [74, 1925], "impur": 74, "normalized_argu": 74, "arg_typ": 74, "kwarg_typ": 74, "normalize_to_only_use_kwarg": 74, "vararg": 74, "argskwargspair": 74, "bx": 74, "ax": [74, 1252, 1266, 1270, 1281, 1282, 1283, 1311, 1322, 1461, 1471, 1863, 1937], "prev": [74, 1708], "replace_with": 74, "delete_user_cb": 74, "propagate_meta": 74, "replace_input_with": 74, "old_input": 74, "new_input": 74, "create_proxi": 74, "record_stack_trac": 74, "update_arg": 74, "update_kwarg": 74, "autowrap_modul": 74, "autowrap_funct": 74, "create_arg": 74, "create_args_for_root": 74, "root_fn": 74, "is_modul": 74, "proxy_factory_fn": 74, "attr": [74, 75, 77, 169, 909, 1322, 1768], "attr_val": 74, "parameter_proxy_cach": 74, "module_qualified_nam": [74, 1963], "path_of_modul": 74, "some_hyperparamet": 74, "indexed_item": 74, "proxied_valu": 74, "garbage_collect_valu": 74, "run_nod": 74, "negsigmswapinterpret": 74, "call_self": 74, "args_tail": 74, "boxed_run": 74, "args_list": 74, "promptli": [74, 1293], "fetch_args_kwargs_from_env": 74, "map_nodes_to_valu": 74, "initial_env": 74, "enable_io_process": 74, "negsigmswapxform": 74, "w1": 74, "w2": 74, "m1": [74, 1884, 1885], "m2": [74, 1673, 1884, 1885, 1944], "despit": [74, 1236, 1237, 1927], "stack_1": 74, "stack_2": 74, "sum_2": 74, "max_1": 74, "max_2": 74, "add_2": [74, 75, 78, 80], "exhaust": [75, 1633], "wih": 75, "assumeconstantresult": [75, 84], "tracabl": [75, 84], "get_item": [75, 84], "exportedprogram": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "arg0_1": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "f32": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "arg1_1": [75, 77, 78, 80, 81, 82, 83, 84, 85], "i64": [75, 80, 81, 84], "slice_tensor": [75, 83, 84], "exportgraphsignatur": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "user_input": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "user_output": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "slice_1": [75, 84], "inputs_to_paramet": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "inputs_to_buff": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "buffers_to_mut": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "backward_signatur": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "assertion_dep_token": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "myautogradfunct": 75, "autogradfunct": 75, "clone_default": 75, "cl": [75, 77, 158, 1924, 1944, 1949, 1964], "arg2_1": [75, 78, 80, 81, 82, 83], "permute_default": [75, 83], "addmm_default": 75, "add_tensor": [75, 76, 77, 78, 79, 80, 81, 82, 83, 85], "add_tensor_1": [75, 78, 80, 82, 83], "mul_tensor": [75, 78, 81, 82], "add_tensor_2": [75, 78, 80], "mul_tensor_1": [75, 81], "l__self___linear": 75, "control_flow": [75, 78, 82, 83, 85], "mysubmodul": [75, 82, 83], "condbranchclassmethod": [75, 82, 83], "true_fn": [75, 78, 82, 83], "false_fn": [75, 78, 82, 83], "pred": [75, 78, 82, 83, 1419, 1633, 1895, 1931, 1940, 1949], "subm": [75, 82, 83], "submodule_0": [75, 78, 82, 83, 85], "submodule_1": [75, 78, 82, 83], "higher_ord": [75, 78, 82, 83], "cos_default": [75, 79, 80, 82, 83], "sin_default": [75, 79, 82, 83], "inner_true_fn": [75, 82, 83], "inner_false_fn": [75, 82, 83], "sub_tensor": [75, 78, 82, 83], "my_tensor_var": [75, 82, 83], "my_primitive_var": [75, 82, 83], "nonloc": [75, 78, 82, 83, 1900], "_tensor_constant0": [75, 82, 83], "lift_fresh_copy_default": [75, 82, 83], "lift_fresh_copi": [75, 82, 83, 1939], "sub_tensor_1": [75, 82, 83], "condclosedovervari": [75, 78, 82], "b8": [75, 78, 82], "_export": [75, 77, 82, 83, 1894], "dynamic_dim": [75, 77, 82, 83], "dynamic_constraint": [75, 77, 82, 83], "operand": [75, 82, 83, 944, 1094, 1899, 1900, 1924, 1953, 1956], "sym_siz": [75, 82, 83, 1895, 1939], "sym": [75, 82, 83, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804], "gt": [75, 82, 83, 314, 1175, 1895, 1897, 1912, 1927, 1939], "rangeconstraint": [75, 82, 83], "min_val": [75, 82, 83, 794, 1412, 1558, 1559, 1895, 1897], "max_val": [75, 82, 83, 794, 1412, 1558, 1559, 1895, 1897], "oo": [75, 82, 83], "predic": [75, 80, 82, 83], "test_decor": 75, "x2": [75, 81, 956, 1268, 1445, 1501, 1502, 1534, 1591, 1897], "full_default": [75, 80, 83], "dynamicshapeifguard": [75, 80, 83], "map_impl": [75, 83, 85], "slice_tensor_1": [75, 83], "9223372036854775807": [75, 83, 1219, 1666, 1909], "slice_2": [75, 83], "new_x_shap": [75, 83], "view_default": [75, 83], "pos0": [75, 81], "tuple0": [75, 81], "myarg": [75, 81], "mykw0": [75, 81], "mykwarg": [75, 81], "input0": [75, 81], "input1": [75, 81, 776, 1374, 1387, 1388, 1445, 1462, 1523, 1533, 1534, 1575, 1897, 1918, 1937], "arg3_1": [75, 81], "arg4_1": [75, 81], "arg5_1": [75, 81], "arg6_1": [75, 81], "arg7_1": [75, 81], "mul_tensor_2": [75, 81], "mul_tensor_3": [75, 81], "mul_tensor_4": [75, 81], "mul_tensor_5": [75, 81], "mul_tensor_6": [75, 81], "mul_6": [75, 81], "monkei": [75, 76, 81, 83, 1876], "cow": [75, 76, 81, 83], "pig": [75, 76, 81, 83], "contextlib": [75, 79], "nullcontext": [75, 79], "_pytre": 75, "tree_flatten": 75, "anim": 75, "moo": 75, "specializedattribut": 75, "staticforloop": [75, 80], "ret": [75, 80, 1924, 1949], "add_tensor_3": [75, 80], "add_tensor_4": [75, 80], "add_tensor_5": [75, 80], "add_tensor_6": [75, 80], "add_tensor_7": [75, 80], "add_tensor_8": [75, 80], "add_tensor_9": [75, 80], "add_3": [75, 80], "add_4": [75, 80], "add_5": [75, 80], "add_6": [75, 80], "add_7": [75, 80], "add_8": [75, 80], "add_9": [75, 80], "staticif": [75, 80], "setattr": [75, 77, 1899], "not_supported_yet": [75, 77, 83], "overli": [75, 77], "type_reflection_method_rewrit": [75, 77], "onnx": [97, 99, 100, 101, 104, 105, 106, 1667, 1668, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1894, 1913, 1944], "dynamo_export": [97, 1687, 1688, 1937], "disregard": [99, 100, 102], "indexerror": [99, 1651, 1653], "torchlib": 99, "typeerror": [99, 1656, 1924, 1942, 1960, 1964], "opschema": [99, 1938], "onnxfunct": [100, 102], "perfect": 100, "nearest": [100, 795, 801, 803, 1350, 1505, 1507, 1552, 1563, 1621, 1623, 1740, 1768, 1922], "stringent": 100, "op_level_debug": [100, 102, 1686], "elementwise_dtyp": 101, "_ref": 101, "_intern": [101, 1938, 1955], "type_promot": 101, "absent": [102, 1923], "signifi": 102, "opset_vers": [106, 1686, 1937, 1939], "g_cpu": 107, "g_cuda": 107, "bytetensor": [107, 1026, 1027, 1065, 1066, 1173, 1332, 1339, 1789, 1878, 1948, 1956, 1959], "2147483647": 107, "0x8000_0000_0000_0000": [107, 1313, 1948], "0xffff_ffff_ffff_ffff": [107, 1313, 1948], "random_devic": 107, "1516516984916": 107, "new_stat": [107, 1065, 1066, 1339, 1789, 1878, 1948], "void": [107, 996, 1038, 1922, 1929], "g_cpu_oth": 107, "abs_": [111, 1897, 1912, 1959], "acosh": [115, 141, 883, 1895, 1897, 1912, 1939], "batch1": [118, 119, 170, 171, 702, 936, 1897], "batch2": [118, 119, 170, 171, 188, 702, 936, 1897], "tensor1": [120, 121, 122, 123, 703, 704, 1315, 1765, 1897], "tensor2": [120, 121, 122, 123, 332, 422, 703, 704, 1315, 1765, 1897], "mat1": [124, 125, 570, 705, 1185, 1241, 1325, 1814, 1817, 1818, 1832, 1895, 1897], "mat2": [124, 125, 431, 570, 705, 948, 1185, 1241, 1325, 1814, 1817, 1818, 1832, 1895, 1897], "mat": [126, 127, 556, 706, 1345, 1746, 1811, 1814, 1832, 1897, 1958], "vec1": [128, 129, 707, 1897], "vec2": [128, 129, 306, 478, 707, 1167, 1728, 1897], "keepdim": [131, 133, 134, 135, 137, 153, 154, 372, 410, 425, 427, 428, 429, 432, 446, 447, 448, 449, 470, 487, 496, 571, 581, 631, 709, 711, 712, 713, 715, 890, 891, 1242, 1273, 1277, 1290, 1308, 1318, 1320, 1321, 1323, 1326, 1348, 1349, 1350, 1351, 1462, 1591, 1680, 1737, 1740, 1834, 1835, 1839, 1881, 1882, 1895, 1897, 1912, 1954], "rtol": [132, 362, 710, 924, 925, 1210, 1275, 1278, 1692, 1896, 1897, 1960], "atol": [132, 362, 710, 924, 925, 1210, 1275, 1278, 1287, 1692, 1896, 1897, 1924, 1960], "08": [132, 362, 710, 946, 1210, 1267, 1388, 1467, 1595, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1723, 1795, 1897], "equal_nan": [132, 362, 710, 1210, 1897, 1960], "arcco": [140, 1897, 1939, 1960], "acosh_": [142, 1897, 1912], "arccosh": [142, 1897, 1939], "arcsin": [144, 897, 1897, 1939, 1953], "arcsinh": [146, 1897, 1939], "atan2_": [149, 1897, 1912], "arctan2": [149, 1897, 1939], "arctan": [150, 1897, 1939], "arctanh": [152, 1897, 1939], "asinh": [162, 885, 1895, 1897, 1912, 1939, 1953], "atan": [166, 647, 648, 886, 1895, 1897, 1912, 1939, 1953], "atanh": [168, 888, 1895, 1897, 1912, 1939, 1953], "wrt": [169, 924, 925], "60521": [169, 909], "issuecom": [169, 909], "867061780": [169, 909], "texttt": [172, 173, 710, 1210, 1361, 1960], "bernoulli": [173, 776, 1365, 1391, 1392, 1393, 1394, 1398, 1405, 1423, 1537, 1538, 1539, 1540, 1545, 1894, 1897, 1912, 1939, 1961], "preserve_format": [174, 189, 191, 194, 197, 198, 199, 208, 225, 228, 258, 285, 315, 343, 411, 541, 596, 965, 1096, 1149, 1685, 1749, 1751, 1753, 1892, 1956], "minlength": [175, 939, 1897], "bitwise_and": [177, 1895, 1897, 1939], "bitwise_left_shift": [179, 1897, 1939], "bitwise_not": [181, 1895, 1897, 1912, 1939], "bitwise_or": [183, 1895, 1897, 1939], "bitwise_right_shift": [185, 1897, 1939], "bitwise_xor": [187, 1895, 1897, 1939], "uint8": [191, 260, 633, 709, 715, 1146, 1738, 1741, 1742, 1765, 1944, 1955, 1956, 1958, 1959, 1965], "cauchi": [192, 1894, 1919, 1927, 1939, 1961], "dfrac": [192, 395, 624, 1388, 1534, 1641, 1674, 1677], "complex32": [198, 1381, 1382, 1383, 1527, 1528, 1529, 1689, 1959, 1960], "int8": [199, 465, 745, 940, 941, 942, 943, 944, 945, 1146, 1302, 1303, 1304, 1305, 1944, 1947, 1953, 1955, 1956, 1959, 1965], "input2": [202, 476, 477, 533, 776, 961, 1374, 1387, 1388, 1445, 1462, 1523, 1533, 1534, 1575, 1897, 1918, 1937], "clamp_": [207, 1897, 1912], "uncoalesc": [209, 346, 1825], "coo": [209, 341, 346, 360, 630, 1185, 1814, 1817, 1822, 1823, 1824, 1825, 1826, 1827, 1894, 1906, 1956, 1960], "inttensor": [210, 227, 1195, 1310, 1311, 1396, 1956, 1959], "csr": [210, 227, 361, 599, 604, 1397, 1814, 1817, 1818, 1824, 1827, 1906, 1960], "sparse_csr": [210, 227, 599, 604, 1817, 1818, 1820, 1824, 1827, 1953], "nnz": [210, 560, 599, 600, 601, 603, 604, 924, 1353, 1815, 1817, 1818, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1953], "int32": [210, 227, 331, 339, 343, 464, 633, 952, 1096, 1108, 1109, 1144, 1146, 1147, 1251, 1262, 1263, 1264, 1282, 1310, 1376, 1738, 1775, 1944, 1953, 1955, 1956, 1959, 1965], "mkl": [210, 227, 1894, 1921, 1936, 1939, 1953], "routin": [210, 227, 892, 960, 1293, 1813, 1840, 1953], "downcast": [210, 227], "to_sparse_csr": [210, 227, 600, 601, 1817, 1818, 1897, 1939, 1953], "conj_phys": [213, 979, 1895, 1897, 1939, 1953], "contiguous_format": [214, 349, 515, 516, 1095, 1633, 1956], "non_block": [215, 228, 596, 619, 1221, 1453, 1666, 1895, 1897, 1922, 1955], "copysign": [217, 1897, 1939], "fweight": [224, 986, 1897], "aweight": [224, 986, 1897], "sparse_dim": [237, 561, 562, 1814, 1817, 1821, 1825, 1897, 1939, 1953], "resize_": [240, 516, 1151, 1242, 1875, 1896, 1897, 1898, 1912, 1946, 1955], "resize_as_": [240, 1897, 1912, 1953], "set_": [240, 515, 1897], "transpose_": [240, 1897, 1953], "zero_": [240, 1266, 1543, 1897, 1912, 1913, 1930, 1953], "dim1": [244, 246, 247, 585, 608, 609, 1082, 1084, 1085, 1255, 1843, 1860, 1897], "dim2": [244, 246, 247, 1082, 1084, 1085, 1255, 1897], "digamma": [250, 1895, 1897, 1912, 1939, 1954], "rounding_mod": [253, 254, 255, 256, 1089, 1090, 1139, 1142, 1759, 1868, 1897], "split_size_or_sect": [259, 320, 635, 1828], "eq": [262, 1895, 1897, 1912, 1939], "erf": [265, 655, 656, 1895, 1897, 1912, 1939, 1953, 1954], "erfc": [267, 657, 658, 1895, 1897, 1912, 1939, 1954], "front": [272, 968, 1293, 1456, 1913, 1925], "lambd": [276, 316, 1409, 1490, 1555, 1611, 1693, 1897], "fill_valu": [278, 463, 1148, 1149, 1376, 1895, 1897, 1922], "tall": [278, 1279, 1284, 1924], "start_dim": [281, 1133, 1399, 1897], "end_dim": [281, 1133, 1399, 1897], "float_pow": [287, 1897, 1939], "floor_divid": [291, 1089, 1897, 1939, 1953], "divisor": [294, 295, 505, 506, 784, 785, 1089, 1139, 1142, 1164, 1367, 1368, 1400, 1504, 1520, 1521, 1759, 1868], "fmod": [295, 1759, 1895, 1897, 1939], "mantissa": [298, 498, 1144, 1244, 1897, 1922, 1933], "gcd": [301, 1895, 1897, 1939], "ge": [303, 1176, 1314, 1410, 1411, 1556, 1557, 1895, 1897, 1912, 1939], "ordin": [307, 1822, 1823, 1824, 1826, 1827, 1956], "greater_equ": [312, 1897, 1939], "hypot": [322, 1895, 1897, 1939], "i0": [324, 1240, 1803, 1897, 1939, 1954], "igamma": [326, 1895, 1897, 1939], "igammac": [328, 1895, 1897, 1939], "3100": [329, 500, 1191, 1757], "3553j": [329, 500, 1191, 1757], "5445": [329, 500, 1191, 1757], "7896j": [329, 500, 1191, 1757], "6492": [329, 500, 1191, 1757], "0633j": [329, 500, 1191, 1757], "0638": [329, 500, 1191, 1757], "8119j": [329, 500, 1191, 1757], "3553": [329, 1191], "7896": [329, 1191], "0633": [329, 1191, 1267, 1914], "8119": [329, 1191], "index_add_": [330, 914, 1192, 1193, 1897, 1934], "index_copy_": [332, 1897], "index_fill_": [334, 1897, 1912], "index_put_": [336, 1897], "include_self": [339, 532, 533, 1194, 1774, 1895, 1897], "identit": 339, "amax": [339, 533, 712, 713, 1817, 1895, 1897, 1939], "amin": [339, 533, 711, 713, 1817, 1895, 1897, 1939], "fill_": [339, 1221, 1246, 1453, 1760, 1897, 1912, 1930, 1955], "72": [339, 633, 1174], "uint8_t": [344, 1689], "retain_grad": [353, 1897, 1919, 1939], "n_fft": [369, 572, 1218, 1836, 1897], "hop_length": [369, 572, 1218, 1836, 1897], "win_length": [369, 572, 1218, 1836, 1897], "center": [369, 572, 795, 801, 1114, 1218, 1517, 1552, 1563, 1621, 1707, 1729, 1797, 1836, 1897, 1919, 1939, 1958], "onesid": [369, 572, 1218, 1836, 1895, 1897], "return_complex": [369, 572, 1218, 1836, 1897], "element_s": [371, 452, 1897, 1912, 1939, 1955], "lcm": [374, 1897, 1939], "ldexp": [376, 1144, 1897, 1939], "le": [378, 1248, 1410, 1411, 1556, 1557, 1895, 1897, 1912, 1939, 1960], "lerp": [380, 1897, 1939], "less_equ": [384, 1897, 1939], "lgamma": [386, 667, 668, 1895, 1897, 1939], "ln": [395, 1249, 1954], "logical_and": [401, 1895, 1897, 1939], "logical_not": [403, 1602, 1895, 1897, 1912, 1914, 1939], "logical_or": [405, 1895, 1897, 1939], "logical_xor": [407, 1897, 1939], "pivot": [414, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1310, 1311, 1312, 1739, 1897], "get_info": [414, 1310], "lu_data": [415, 1311, 1312, 1897], "lu_pivot": [415, 1311, 1312, 1897], "masked_fill_": [417, 1602, 1897, 1912, 1913], "booltensor": [418, 420, 751, 1314, 1496, 1889, 1956, 1959], "masked_scatter_": [419, 1897], "mvlgamma": [443, 1897, 1939], "posinf": [444, 445, 1347, 1897], "neginf": [444, 445, 1347, 1897], "nan_to_num": [445, 1897, 1939], "interpol": [448, 496, 801, 802, 803, 835, 1246, 1350, 1505, 1506, 1507, 1517, 1552, 1621, 1622, 1623, 1740, 1875, 1897, 1946], "ne": [456, 1641, 1674, 1682, 1895, 1897, 1912, 1939], "8182e": 462, "5765e": 462, "41": [462, 1097, 1279, 1624, 1673, 1739], "0545e": 462, "0949e": 462, "4842e": [462, 1097], "0000e": [462, 1097, 1137, 1298, 1307, 1347, 1673, 1795, 1797, 1798, 1803, 1804], "00": [462, 1097, 1137, 1298, 1307, 1347, 1673, 1691, 1795, 1797, 1798, 1803, 1804, 1896, 1937], "141592": [463, 1148], "1416": [463, 1078, 1148, 1854], "from_numpi": [465, 895, 896, 1854], "array_lik": [465, 895, 1822, 1823, 1824, 1825, 1826, 1827, 1854, 1914], "nextaft": [468, 1895, 1897, 1939], "fro": [470, 1252, 1273, 1277, 1290, 1651, 1660, 1680, 1897], "not_equ": [473, 1897, 1939], "resolve_conj": [475, 979, 1897, 1939], "resolve_neg": [475, 1897, 1939], "shorthand": [475, 1240], "input3": [477, 1897], "transpos": [477, 609, 610, 633, 708, 757, 758, 759, 961, 1094, 1161, 1250, 1251, 1257, 1260, 1263, 1270, 1281, 1284, 1384, 1385, 1386, 1504, 1530, 1531, 1532, 1602, 1640, 1669, 1727, 1840, 1842, 1843, 1849, 1863, 1895, 1897, 1912, 1914, 1919, 1933, 1937, 1939, 1946, 1953, 1957, 1959], "polygamma": [483, 1897, 1939, 1954], "q_per_channel_axi": [490, 491, 1897, 1939], "zero_point": [491, 493, 754, 755, 756, 757, 758, 759, 760, 765, 766, 767, 768, 769, 770, 771, 772, 774, 775, 786, 788, 789, 790, 791, 793, 796, 797, 815, 818, 835, 836, 837, 838, 841, 868, 1108, 1109, 1741, 1742, 1743, 1744, 1745, 1897, 1944, 1945], "qtensor": [495, 1897], "uniform": [498, 624, 938, 1389, 1471, 1535, 1748, 1749, 1797, 1894, 1895, 1917, 1939, 1961], "queu": [503, 1001, 1922], "life": [503, 998], "cycl": [503, 909, 998, 1715, 1721, 1919, 1943], "unexpectedli": [503, 1959], "maxnorm": [507, 508, 1760, 1897], "repeat_interleav": [509, 1875, 1897, 1939, 1946], "output_s": [510, 757, 758, 759, 782, 783, 1358, 1359, 1360, 1362, 1363, 1364, 1385, 1400, 1401, 1402, 1449, 1450, 1451, 1504, 1511, 1512, 1513, 1514, 1515, 1516, 1546, 1547, 1548, 1579, 1580, 1581, 1761, 1895, 1897, 1914], "is_leaf": [511, 1897, 1912, 1914, 1939], "saved_weight": 512, "loaded_weight": 512, "5503": 512, "4926": [512, 1930], "1158": 512, "8303": 512, "1007": 512, "9853": 512, "2316": 512, "6606": 512, "resiz": [515, 516, 540, 561, 562, 1146, 1147, 1151, 1505, 1552, 1563, 1895, 1897, 1912, 1939, 1955], "shift": [521, 941, 944, 1114, 1121, 1365, 1371, 1372, 1373, 1398, 1492, 1545, 1766, 1897, 1900], "decim": [523, 524, 1768, 1897, 1933, 1965], "scatter_": [528, 531, 1772, 1897], "scatter_add_": [529, 530, 1773, 1875, 1897], "scatter_reduce_": [529, 532, 1774, 1897], "4600": 529, "2300": 529, "scatter_reduc": [533, 1875, 1895, 1897, 1939], "sgn": [538, 1143, 1793, 1897, 1912, 1914, 1939, 1953], "int16": [541, 1146, 1303, 1953, 1955, 1956, 1959, 1965], "dense_dim": [559, 561, 562, 599, 600, 601, 603, 604, 1825, 1897, 1939, 1953], "nse": [560, 1953], "randint": [560, 939, 986, 1137, 1326, 1376, 1502, 1535, 1536, 1821, 1897, 1901, 1913, 1939, 1958, 1961], "6550": 560, "2397": 560, "1611": 560, "0779": [560, 1257, 1736, 1889], "2326": 560, "0558": 560, "4711": 560, "9678": 560, "5138": 560, "0411": 560, "9417": 560, "5158": 560, "0793": 560, "0036": [560, 1318], "2569": 560, "1055": 560, "sparse_coo": [560, 599, 1353, 1817, 1820, 1821, 1825, 1953, 1956], "split_siz": [563, 1828, 1897], "squeez": [569, 709, 711, 712, 713, 715, 1242, 1308, 1318, 1320, 1321, 1323, 1326, 1348, 1351, 1534, 1737, 1821, 1834, 1835, 1839, 1881, 1882, 1895, 1897, 1912, 1937, 1939, 1946, 1957], "pad_mod": [572, 1836, 1897], "typedstorag": [573, 1894, 1935, 1955], "untypedstorag": [573, 629, 1894, 1935, 1955], "untyped_storag": 573, "compute_uv": [583, 1284, 1285, 1840, 1897], "axis0": [584, 1842, 1897], "axis1": [584, 1842, 1897], "dim0": [585, 608, 609, 1843, 1860, 1897], "indices_or_sect": [594, 1092, 1184, 1855, 1887], "rep": 595, "5044": 596, "0005": [596, 1719, 1725], "3310": 596, "0584": [596, 1840], "cuda0": [596, 1922, 1928, 1959], "masked_grad": [597, 1897], "sparse_mask": [597, 1897, 1939], "mkldnn": [598, 1230, 1894, 1939], "sparsedim": 599, "blocksiz": [599, 600, 601, 1822, 1823, 1824, 1897, 1953], "sparse_csc": [599, 603, 1820, 1824, 1826, 1953], "sparse_bsr": [599, 601, 1823, 1824, 1953], "sparse_bsc": [599, 600, 1822, 1824, 1953], "bsr": [599, 601, 1823, 1824, 1960], "bsc": [599, 600, 1822, 1824, 1960], "csc": [599, 603, 1824, 1826, 1960], "minu": [599, 600, 601, 603, 604, 1954], "crow_indic": [599, 601, 604, 1815, 1817, 1818, 1820, 1823, 1824, 1827, 1897, 1939, 1953, 1960], "col_indic": [599, 601, 604, 1817, 1818, 1820, 1823, 1824, 1827, 1897, 1939, 1953, 1960], "sparsecsr": [599, 1860, 1953], "row_indic": [600, 603, 1822, 1826, 1897, 1939, 1953, 1960], "ccol_indic": [600, 603, 1822, 1826, 1897, 1939, 1953, 1960], "_nnz": [602, 603, 604, 1939], "012766935862600803": 605, "5415473580360413": 605, "08909505605697632": 605, "7729271650314331": 605, "unitriangular": [610, 1283, 1863, 1897], "tril": [612, 1602, 1897, 1939], "triu": [614, 1645, 1863, 1897, 1937, 1939], "trunc": [618, 693, 694, 703, 1089, 1132, 1139, 1142, 1768, 1895, 1897, 1912, 1939, 1953], "sizedim": 623, "return_invers": [625, 626, 1872, 1873, 1897], "return_count": [625, 626, 1872, 1873, 1897], "unsqueez": [628, 1114, 1241, 1281, 1396, 1472, 1645, 1857, 1895, 1897, 1924, 1939, 1946, 1953, 1957, 1958], "subspac": [633, 1284, 1459, 1729, 1840, 1841], "span": [633, 1055, 1056, 1389, 1840, 1943, 1949], "foral": 633, "proportion": [633, 801, 1505, 1621], "met": [633, 1260, 1267, 1268, 1279, 1293, 1500], "9482": [633, 1198], "0310": 633, "4999": 633, "5316": 633, "1520": 633, "7472": 633, "5617": 633, "8649": 633, "4724": [633, 1930], "0334": 633, "2976": 633, "8499": 633, "2109": 633, "9913": 633, "9607": 633, "6123": 633, "1064483442": 633, "1124191867": 633, "1069546515": 633, "1089989247": 633, "1105482831": 633, "1061112040": 633, "1057999968": 633, "1084397505": 633, "1071760287": 633, "1123489973": 633, "1097310419": 633, "1084649136": 633, "1101533110": 633, "1073668768": 633, "1082790149": 633, "1088634448": 633, "1000000000": 633, "0047": 633, "0310j": 633, "5316j": 633, "7472j": 633, "8649j": 633, "0334j": 633, "8499j": 633, "9913j": 633, "6123j": 633, "202": 633, "154": [633, 1936], "59": [633, 1865, 1867], "182": 633, "243": [633, 1218, 1840], "253": 633, "188": 633, "252": [633, 1936], "191": 633, "63": [633, 1936, 1944], "240": 633, "227": 633, "165": 633, "190": 633, "146": 633, "106": 633, "205": 633, "206": 633, "189": 633, "95": [633, 1717, 1720, 1721], "147": 633, "43": 633, "87": 633, "235": 633, "226": 633, "254": [633, 1936], "111": [633, 1691, 1937], "117": 633, "177": 633, "xlogi": [638, 1897, 1939, 1954], "aot_graph": [696, 1905], "aot_joint_graph": [696, 1905], "ddp_graph": [696, 1905], "graph_cod": [696, 1905], "graph_siz": 696, "trace_sourc": 696, "trace_cal": 696, "perf_hint": [696, 968], "toggl": [696, 1922], "supress": 696, "silenc": 696, "lowest": [696, 958, 1347, 1650, 1651, 1659, 1660, 1750, 1751, 1924, 1960], "notset": 696, "joint": [696, 1905], "ddpoptim": [696, 1905], "unregist": [696, 1905, 1909, 1937], "3348": 699, "5889": 699, "1584": 699, "2294": [699, 1320], "2004": 699, "3690": 699, "7298": [699, 1758], "hyperbol": [700, 898, 901, 984, 1493, 1808, 1853], "uniform_": [700, 901, 938, 1894, 1897, 1912, 1917, 1924, 1954, 1961], "3192": 700, "9915": 700, "9674": 700, "7151": 700, "7791": 700, "3120": [700, 981], "2979": 700, "1341": 700, "_i": [701, 702, 703, 704, 705, 936, 938, 941, 944, 948, 963, 1089, 1139, 1244, 1246, 1342, 1501, 1732, 1736, 1755, 1791, 1837, 1889, 1954], "0202": 701, "0985": 701, "3506": [701, 1310], "6056": 701, "3944": 701, "9732": 701, "3497": 701, "6245": [701, 1252], "4022": [701, 1076, 1840], "3743": 701, "7724": 701, "5811": 701, "8017": 701, "7695": 701, "3930": 701, "3672": [701, 994, 1253], "1450": [701, 1821], "6971": 701, "0736": [701, 1930], "0994": 701, "3216": 701, "7845": 701, "1610": 701, "1868": 701, "4090": 701, "9902": [701, 994, 1253], "3667": [701, 981], "3925": 701, "6147": 701, "sum_": [702, 1218, 1272, 1289, 1366, 1367, 1368, 1381, 1382, 1383, 1389, 1421, 1422, 1441, 1456, 1460, 1462, 1834, 1835, 1836, 1856, 1861, 1881, 1882, 1883, 1954], "mathbin": [702, 705, 706, 936, 948, 1818], "doubletensor": [702, 703, 704, 705, 706, 936, 1781, 1956, 1959], "tensorfloat32": [702, 705, 936, 948, 1315, 1325, 1381, 1382, 1383, 1384, 1385, 1386, 1440, 1527, 1528, 1529, 1530, 1531, 1532, 1569, 1783, 1922, 1933], "rocm": [702, 705, 936, 948, 1315, 1325, 1381, 1382, 1383, 1384, 1385, 1386, 1406, 1424, 1440, 1894], "6311": 702, "0503": 702, "9768": [702, 1930], "0362": 702, "1653": 702, "8185": 702, "4255": [702, 1342], "6760": 702, "9453": 702, "5743": 702, "8202": 702, "3691": 702, "0943": 702, "1109": [702, 1407, 1804], "4730": [702, 1856], "histor": [703, 1051, 1393, 1921, 1930, 1935], "t1": [703, 704, 896, 1174, 1633, 1898, 1949, 1950], "2312": [703, 1821], "6496": 703, "1312": 703, "0428": 703, "4292": 703, "1030": 703, "5369": 703, "9829": 703, "0430": 703, "8635": 704, "6391": 704, "6174": 704, "7617": 704, "5879": 704, "7388": 704, "8353": 704, "6249": 704, "6511": 704, "8716": 705, "4671": 705, "3746": 705, "7573": 705, "9555": 705, "8681": 705, "3768": 706, "5565": 706, "otim": [707, 1241, 1404, 1551], "conj": [708, 980, 1110, 1111, 1113, 1115, 1122, 1124, 1128, 1129, 1131, 1250, 1251, 1257, 1259, 1278, 1763, 1764, 1895, 1897, 1924, 1927, 1939, 1959], "mh": [708, 959, 1257, 1840, 1897, 1939, 1957, 1959], "lvert": [710, 1210, 1501, 1588, 1960], "rvert": [710, 1210, 1960], "leq": [710, 937, 938, 981, 1112, 1114, 1210, 1241, 1245, 1260, 1266, 1376, 1395, 1456, 1458, 1460, 1536, 1587, 1590, 1794, 1836, 1917, 1954], "elementwis": [710, 981, 1010, 1037, 1038, 1137, 1139, 1357, 1416, 1417, 1418, 1490, 1611, 1880, 1899, 1914, 1927, 1954], "07": [710, 835, 836, 837, 838, 841, 959, 960, 1097, 1258, 1261, 1266, 1278, 1279, 1285, 1308, 1311, 1640, 1692, 1699, 1798, 1803, 1840, 1937], "09": [710, 1699, 1711, 1924, 1960], "8177": 711, "4878": 711, "2491": 711, "9130": 711, "7158": 711, "1775": 711, "0992": 711, "4817": 711, "0053": 711, "0164": 711, "3738": 711, "0507": [711, 1937], "9700": 711, "1106": 711, "0318": 711, "0816": [711, 1310], "6451": 712, "4866": 712, "2987": 712, "3312": 712, "5744": 712, "2980": [712, 1914], "8397": 712, "2713": 712, "9128": 712, "9214": 712, "7268": 712, "2995": 712, "9023": [712, 1251], "4853": 712, "9075": 712, "6165": 712, "180": [714, 1078, 1747], "14159": [714, 1854], "135": 714, "45": [714, 1372, 1373, 1417, 1418, 1492, 1673, 1937], "ao": [716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 1944, 1945, 1946], "batch_norm": [716, 717, 1230, 1897, 1939], "3d": [717, 720, 723, 751, 756, 759, 783, 785, 790, 795, 1322, 1360, 1364, 1368, 1371, 1373, 1383, 1386, 1393, 1394, 1400, 1402, 1416, 1418, 1448, 1459, 1505, 1513, 1516, 1517, 1521, 1529, 1532, 1540, 1546, 1548, 1563, 1578, 1590, 1621, 1914, 1933, 1944, 1953, 1958], "bn": [718, 719, 720, 721, 722, 723, 830, 876, 1094, 1230, 1935, 1940, 1944, 1945], "qat": [728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 746, 747, 748, 749, 808, 809, 862, 1944, 1945, 1946], "in_channel": [728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 1230, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434], "out_channel": [728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 1230, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434], "kernel_s": [728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 784, 785, 798, 799, 1221, 1230, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1401, 1402, 1421, 1422, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1504, 1519, 1520, 1521, 1530, 1531, 1532, 1546, 1547, 1548, 1573, 1574, 1576, 1577, 1578, 1579, 1580, 1581, 1620, 1744, 1745, 1895, 1897, 1958], "dilat": [728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 788, 789, 790, 798, 799, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1429, 1430, 1431, 1432, 1433, 1434, 1446, 1447, 1448, 1504, 1527, 1528, 1529, 1530, 1531, 1532, 1546, 1576, 1577, 1578, 1620, 1744, 1745, 1895, 1897, 1937], "padding_mod": [728, 729, 730, 731, 732, 733, 734, 735, 741, 742, 743, 746, 747, 754, 755, 756, 757, 758, 759, 788, 789, 790, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434, 1552, 1895, 1897], "ep": [728, 729, 730, 731, 732, 733, 739, 740, 752, 753, 765, 767, 768, 769, 770, 811, 835, 836, 837, 838, 841, 842, 924, 925, 1230, 1306, 1357, 1371, 1372, 1373, 1388, 1407, 1408, 1416, 1417, 1418, 1425, 1426, 1427, 1428, 1435, 1436, 1437, 1462, 1467, 1492, 1496, 1498, 1500, 1501, 1522, 1534, 1549, 1553, 1554, 1562, 1566, 1588, 1591, 1595, 1618, 1641, 1674, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1710, 1723, 1743, 1895, 1897, 1924, 1927, 1954, 1965], "momentum": [728, 729, 730, 731, 732, 733, 739, 740, 752, 753, 767, 768, 769, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1492, 1522, 1562, 1700, 1707, 1709, 1715, 1721, 1723, 1895, 1897, 1930, 1932, 1940], "freeze_bn": [728, 729, 730, 731, 732, 733], "qconfig": [728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 749, 804, 805, 807, 810, 811, 812, 813, 854, 855, 856, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 877, 878, 1963], "batchnorm1d": [728, 731, 1426, 1492, 1522, 1935, 1946], "fakequant": [728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 749, 818, 878], "weight_fake_qu": [728, 729, 730, 731, 732, 733, 734, 735, 746, 747], "quant": [728, 729, 730, 731, 732, 733, 734, 735, 736, 746, 747, 748, 806, 808, 809, 854, 877, 878, 1108, 1109, 1944, 1945], "batchnorm3d": [730, 733, 735, 740, 1428, 1492, 1522, 1946], "num_featur": [739, 740, 752, 753, 767, 768, 769, 1221, 1371, 1372, 1373, 1416, 1417, 1418, 1426, 1427, 1428, 1435, 1436, 1437, 1453, 1492, 1554, 1930], "qint8": [744, 745, 772, 777, 780, 781, 788, 789, 790, 797, 808, 810, 815, 836, 857, 874, 875, 877, 878, 1689, 1741, 1742, 1944, 1946, 1947, 1955, 1959, 1960], "highlight": [746, 747, 1899], "from_float": [748, 754, 755, 756, 761, 762, 772, 780, 813, 833, 839, 842, 854, 1944], "qparams_dict": [748, 754, 755, 756, 780], "hidden_s": [750, 776, 777, 781, 1405, 1406, 1423, 1424, 1468, 1469, 1470, 1897], "num_lay": [750, 776, 1405, 1423, 1468, 1469, 1497, 1499, 1897, 1930], "bidirect": [750, 776, 1405, 1423, 1468, 1469, 1897], "_lstmlayer": 750, "nnqa": 750, "h0": [750, 776, 778, 1405, 1423, 1468], "hn": [750, 776, 778, 1405, 1406, 1423, 1468], "cn": [750, 778, 1221, 1423], "weight_ih": [750, 1406, 1424, 1470], "weight_hh": [750, 1406, 1424, 1470], "dequant": [751, 804, 806, 808, 809, 815, 817, 877, 1897, 1939, 1945, 1947, 1960, 1962], "mha": [751, 1459], "conver": 751, "key_padding_mask": [751, 1459, 1897], "need_weight": [751, 1459, 1897], "attn_mask": [751, 1459, 1602, 1897], "average_attn_weight": [751, 1459, 1897], "is_caus": [751, 1459, 1499, 1500, 1602, 1897], "attn_output_weight": [751, 1459], "unmask": [751, 1496], "causal": [751, 1459, 1496, 1497, 1498, 1499, 1500, 1602], "attn_weight": [751, 1459, 1602], "attn_output": [751, 1459], "quint8": [754, 755, 756, 757, 758, 759, 761, 762, 772, 788, 789, 790, 797, 808, 810, 815, 835, 836, 837, 838, 841, 843, 875, 877, 1689, 1741, 1742, 1743, 1744, 1745, 1944, 1946, 1947, 1955, 1959, 1960], "learnabl": [754, 755, 756, 757, 758, 759, 761, 762, 772, 776, 780, 1371, 1372, 1373, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1396, 1397, 1405, 1406, 1408, 1416, 1417, 1418, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1461, 1468, 1470, 1492, 1544, 1596, 1930], "q_input": [754, 755, 756, 757, 758, 759, 788, 789, 790], "quantize_per_tensor": [754, 755, 756, 757, 758, 759, 772, 773, 774, 788, 789, 790, 1743, 1744, 1745, 1897, 1939, 1944], "unequ": [755, 756, 757, 758, 759, 1382, 1383, 1385, 1386], "50": [755, 757, 758, 759, 788, 840, 1276, 1326, 1367, 1368, 1376, 1381, 1382, 1383, 1385, 1386, 1401, 1402, 1421, 1422, 1446, 1447, 1448, 1503, 1529, 1530, 1532, 1536, 1547, 1548, 1708, 1851, 1914], "output_pad": [757, 758, 759, 1384, 1385, 1386, 1432, 1433, 1434, 1530, 1531, 1532, 1895, 1897], "qnnpack": [757, 758, 772, 780, 871, 872, 875, 877, 878, 1944, 1946], "convtranspose2d": [757, 1433, 1531, 1875, 1946], "nnq": [757, 758, 759, 804, 805, 806, 880, 1944], "downsampl": [757, 758, 759, 1385, 1505, 1517, 1552, 1563], "upsampl": [757, 758, 759, 795, 802, 803, 835, 1385, 1506, 1507, 1517, 1552, 1563, 1622, 1623], "cubic": [759, 1402, 1548, 1552], "num_embed": [761, 762, 1396, 1397, 1544], "embedding_dim": [761, 762, 1396, 1397, 1425, 1543, 1544], "padding_idx": [761, 1396, 1397, 1543, 1544, 1895, 1897], "scale_grad_by_freq": [761, 762, 1396, 1397, 1543, 1544, 1895, 1897], "_embed": [761, 762], "_dim": [761, 762, 1396], "include_last_offset": [762, 1397, 1544, 1897], "embedding_bag": [762, 1897, 1939], "floatfunct": [763, 1944], "activation_post_process": [763, 815, 1944], "add_relu": [763, 764, 773, 1907, 1939, 1962], "add_scalar": [763, 764, 773, 1939, 1958, 1962], "mul_scalar": [763, 764, 773, 1939, 1962], "collector": 764, "f_add": 764, "num_channel": [765, 1408, 1913], "normalized_shap": [770, 1425, 1566, 1895, 1897, 1914], "elementwise_affin": [770, 1425], "negative_slop": [771, 796, 1439, 1567, 1568, 1895, 1897, 1917], "slope": [771, 796, 1439, 1484, 1917], "bias_": [772, 780], "_featur": [772, 780, 797, 1361, 1374, 1438, 1440, 1523, 1569], "from_refer": [772, 780], "ref_qlinear": [772, 780], "output_scal": [772, 775, 1743, 1897], "output_zero_point": [772, 775, 1743, 1897], "q_add": 773, "qint32": [773, 774, 1689, 1741, 1742, 1944, 1947, 1955, 1959, 1960], "x_0": [774, 1861], "gate": [776, 777, 1404, 1405, 1406, 1423, 1482, 1551, 1605], "r_t": [776, 1405, 1706], "w_": [776, 1359, 1360, 1363, 1364, 1367, 1368, 1370, 1378, 1379, 1380, 1382, 1383, 1385, 1386, 1389, 1401, 1402, 1405, 1406, 1422, 1423, 1424, 1447, 1448, 1450, 1451, 1460, 1465, 1466, 1468, 1470, 1474, 1475, 1476, 1477, 1478, 1479, 1505, 1506, 1507, 1508, 1509, 1510, 1548, 1552], "x_t": [776, 910, 912, 1371, 1372, 1373, 1405, 1416, 1417, 1418, 1423, 1468, 1492, 1694], "b_": [776, 1405, 1406, 1423, 1424, 1441, 1468, 1470, 1856, 1953], "hr": [776, 1405, 1406, 1423, 1927], "h_": [776, 1359, 1360, 1363, 1364, 1367, 1368, 1374, 1379, 1380, 1382, 1383, 1385, 1386, 1401, 1402, 1405, 1406, 1422, 1423, 1440, 1447, 1448, 1449, 1450, 1451, 1465, 1466, 1468, 1470, 1475, 1476, 1478, 1479, 1505, 1506, 1507, 1509, 1510, 1523, 1548, 1552], "z_t": [776, 1405], "iz": [776, 1405, 1406], "hz": [776, 1006, 1405, 1406, 1958], "n_t": [776, 1405], "h_t": [776, 1405, 1423, 1468], "hadamard": [776, 1405, 1406, 1423, 1424], "multilay": [776, 1405, 1423], "_t": [776, 1405, 1423, 1707, 1709, 1924, 1940], "b_ih": [776, 1405, 1406, 1423, 1424, 1468, 1470, 1897], "b_hh": [776, 1405, 1406, 1423, 1424, 1468, 1470, 1897], "h_0": [776, 1405, 1423, 1424, 1468], "seq_len": [776, 1405, 1423, 1459, 1468], "pack_padded_sequ": [776, 1405, 1423, 1468, 1666, 1668, 1669, 1926], "num_direct": [776, 1405, 1423, 1468], "h_n": [776, 1405, 1423, 1468], "_size": [776, 1358, 1359, 1360, 1362, 1363, 1364, 1366, 1367, 1368, 1381, 1382, 1383, 1384, 1385, 1386, 1400, 1401, 1402, 1405, 1406, 1421, 1422, 1423, 1424, 1446, 1447, 1448, 1449, 1450, 1451, 1468, 1470, 1504, 1548], "_layer": [776, 1405, 1423, 1468], "_direct": 776, "output1": [776, 1361, 1918, 1937], "output2": [776, 1361], "weight_ih_l": [776, 1405, 1423, 1468], "w_ir": [776, 1405], "w_iz": [776, 1405], "w_in": [776, 1405], "weight_hh_l": [776, 1405, 1423, 1468], "w_hr": [776, 1405], "w_hz": [776, 1405], "w_hn": [776, 1405], "bias_ih_l": [776, 1405, 1423, 1468], "b_ir": [776, 1405], "b_iz": [776, 1405], "b_in": [776, 1405], "bias_hh_l": [776, 1405, 1423, 1468], "b_hr": [776, 1405], "b_hz": [776, 1405], "b_hn": [776, 1405], "mathcal": [776, 1374, 1381, 1382, 1383, 1384, 1385, 1386, 1396, 1397, 1405, 1406, 1423, 1424, 1438, 1440, 1468, 1470, 1471, 1492, 1752, 1917, 1927], "subtli": [776, 1405, 1709], "gru": [777, 1406, 1897, 1922, 1939, 1944, 1946], "cell": [777, 779, 781, 1405, 1406, 1423, 1424, 1468, 1470], "hx": [777, 779, 781, 1406, 1424, 1470, 1897], "cx": [779, 1424, 1897], "nonlinear": [781, 1369, 1387, 1413, 1468, 1470, 1480, 1894, 1917, 1953], "elman": [781, 1468, 1470], "adaptiveavgpool2d": [782, 1512, 1875, 1946], "adaptiveavgpool3d": [783, 1513, 1875, 1946], "ceil_mod": [784, 785, 798, 799, 1366, 1367, 1368, 1421, 1422, 1446, 1447, 1448, 1519, 1520, 1521, 1573, 1574, 1576, 1577, 1578, 1744, 1745, 1895, 1897], "count_include_pad": [784, 785, 1366, 1367, 1368, 1519, 1520, 1521, 1895, 1897], "divisor_overrid": [784, 785, 1367, 1368, 1520, 1521, 1895, 1897], "kh": [784, 785, 789, 790, 1367, 1368, 1401, 1402, 1447, 1448, 1520, 1521, 1528, 1529, 1531, 1532, 1547, 1548, 1577, 1578], "kw": [784, 785, 789, 790, 1367, 1368, 1401, 1402, 1447, 1448, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1547, 1548, 1576, 1577, 1578], "sw": [784, 785, 788, 789, 790, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1576, 1577, 1578], "avgpool2d": [784, 1520, 1946], "_channel": [784, 785, 788, 789, 790, 1381, 1382, 1383, 1384, 1385, 1386, 1408, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1576, 1577, 1578, 1949], "ih": [784, 785, 789, 790, 1468, 1470, 1520, 1521, 1528, 1529, 1531, 1532, 1577, 1578], "iw": [784, 785, 788, 789, 790, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1576, 1577, 1578], "padh": [784, 785, 789, 790, 1520, 1521, 1528, 1529, 1531, 1532], "padw": [784, 785, 788, 789, 790, 1519, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532], "kd": [785, 790, 1368, 1448], "sd": [785, 790], "padd": [785, 790], "formul": [786, 1375, 1395, 1409, 1443, 1489, 1490, 1571, 1588, 1602, 1927, 1953], "min_": [787, 1256, 1257, 1266, 1284, 1840], "max_": [787, 1446, 1447, 1448, 1641, 1674], "convolv": [788, 789, 790, 1381, 1382, 1383, 1384, 1385, 1386, 1429, 1430, 1431, 1432, 1433, 1434, 1527, 1528, 1529, 1530, 1531, 1532], "dw": [788, 789, 790, 1527, 1528, 1529, 1530, 1531, 1532], "qf": [788, 789, 790], "dtype_input": [788, 789, 790], "dtype_filt": [788, 789, 790], "q_filter": [788, 789, 790], "dh": [789, 790, 1528, 1529, 1531, 1532], "dd": 790, "scale_factor": [795, 801, 802, 803, 1505, 1506, 1507, 1563, 1602, 1621, 1622, 1623, 1895, 1897], "align_corn": [795, 801, 802, 1505, 1506, 1517, 1552, 1563, 1621, 1622, 1895, 1897], "height": [795, 801, 1367, 1368, 1382, 1383, 1385, 1386, 1422, 1447, 1448, 1460, 1487, 1505, 1563, 1621, 1913], "spatial": [795, 801, 802, 803, 956, 1114, 1372, 1400, 1425, 1465, 1466, 1487, 1504, 1505, 1506, 1507, 1517, 1552, 1563, 1592, 1593, 1594, 1621, 1622, 1623], "pixel": [795, 801, 803, 1382, 1389, 1392, 1393, 1394, 1398, 1460, 1465, 1466, 1505, 1517, 1552, 1563, 1621, 1623], "corner": [795, 801, 947, 1505, 1517, 1552, 1563, 1621], "leakyrelu": [796, 1454, 1567, 1930, 1946], "_slope": [796, 1439, 1567, 1917], "xa": [797, 1270, 1281, 1282, 1283, 1440, 1569], "return_indic": [798, 799, 1362, 1363, 1364, 1401, 1402, 1446, 1447, 1448, 1449, 1450, 1451, 1514, 1515, 1516, 1547, 1548, 1576, 1577, 1578, 1897], "maxpool1d": [798, 1449, 1576, 1579, 1946], "maxpool2d": [799, 1450, 1454, 1577, 1580, 1937, 1946], "linearli": [801, 1158, 1279, 1505, 1621, 1718, 1739, 1926, 1940, 1947], "neighbour": [803, 1441, 1563, 1623], "stub": [804, 805, 1941], "calibr": [804, 805, 813, 854, 855, 873, 875, 877, 1918, 1944, 1945, 1947, 1963], "quantstub": [806, 1944], "dequantstub": [806, 1944], "quantwrapp": 807, "backend_config": [808, 809, 810, 811, 812, 833, 834, 875, 876, 877, 878, 1963], "acycl": [808, 1919], "backendpatternconfig": [808, 877], "dtypeconfig": [808, 809, 811, 877], "observationtyp": [808, 809, 877, 1946], "weighted_int8_dtype_config": [808, 877], "input_dtyp": [808, 810, 877, 1946], "output_dtyp": [808, 810, 877, 1895, 1946], "weight_dtyp": [808, 810, 877, 1946], "bias_dtyp": [808, 810, 1946], "fuse_conv2d_relu": 808, "is_qat": [808, 809], "convrelu2d": [808, 1946], "linear_config": 808, "set_observation_typ": [808, 809, 877], "output_use_different_observer_as_input": [808, 809, 812, 877, 1946], "add_dtype_config": [808, 809, 877], "set_root_modul": [808, 809], "set_qat_modul": [808, 809], "set_reference_quantized_modul": [808, 809], "conv_relu_config": 808, "set_fused_modul": [808, 809], "set_fuser_method": [808, 809], "fused_conv_relu_config": 808, "set_backend_pattern_config": [808, 877], "from_dict": [808, 809, 810, 831, 832, 833, 870], "backend_config_dict": [808, 1944], "set_nam": 808, "to_dict": [808, 809, 810, 831, 832, 833, 870], "backendconfig": [809, 834, 875, 877, 1947], "dtype_config": [809, 1946], "backend_pattern_config_dict": 809, "observation_typ": [809, 1946], "qat_modul": [809, 1946], "reference_quantized_modul": 809, "fused_modul": [809, 1946], "fuser_method": [809, 830, 1946], "pattern_complex_format": 809, "set_dtype_config": 809, "fuser": [809, 1234, 1896], "fuse_linear_relu": 809, "linearrelu": [809, 1946], "8bea7180a8ba3c279f2c9b050f2a69a6": 809, "understood": [809, 955], "output_share_observer_with_input": [809, 812, 1946], "quantdequantstub": 809, "set_pattern": 809, "is_dynam": [810, 842, 1946], "quant1": 810, "dequant1": 810, "fp32_linear": 810, "quant2": 810, "dequant2": 810, "bracket": [810, 1950], "dtype_config1": 810, "dtype_config2": 810, "dtypewithconstraint": [810, 1946], "quant_min_lower_bound": [810, 811, 1946], "quant_max_upper_bound": [810, 811, 1946], "255": [810, 818, 1108, 1109, 1147, 1552, 1563, 1621, 1944, 1946, 1958], "input_dtype_with_constraint": 810, "scale_min_lower_bound": [810, 811, 1946], "scale_max_upper_bound": [810, 811, 1946], "dtype_config_dict": 810, "bias_typ": [810, 877], "scale_exact_match": [811, 1946], "zero_point_exact_match": [811, 1946], "quant_min": [811, 815, 818, 835, 836, 837, 838, 841, 842, 1108, 1109, 1897, 1944], "quant_max": [811, 815, 818, 835, 836, 837, 838, 841, 842, 1108, 1109, 1897, 1944], "fixedqparamsobserv": 811, "fixedqparamsfakequant": 811, "input_output_not_observ": [812, 1946], "maxpool": [812, 1401, 1402, 1547, 1548, 1937], "remove_qconfig": 813, "is_refer": 813, "convert_custom_config_dict": [813, 831, 1944], "from_observ": [813, 831, 1944], "observed_to_quantized_custom_module_class": [813, 831, 1944], "observedcustommodul": [813, 831, 833, 854, 1944], "quantizedcustommodul": [813, 831], "calib_data": 814, "fake_quant": [815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 878, 1108, 1109, 1963], "movingaverageminmaxobserv": [815, 818, 838], "observer_kwarg": [815, 818], "x_out": [815, 818], "fake_quant_en": 815, "observer_en": 815, "calculate_qparam": [816, 835, 836, 840], "qscheme": [818, 835, 836, 837, 838, 841, 842, 843, 1897, 1939, 1944, 1947, 1960], "fake_qu": [819, 823, 824, 825, 1944], "default_fake_qu": 820, "default_per_channel_weight_fake_qu": 821, "default_weight_fake_qu": 822, "histogram": [823, 835, 847, 1181, 1183, 1897, 1939, 1958], "memoryless": [824, 825], "averaging_const": [824, 825, 837, 838, 1897], "modules_to_fus": 830, "fuser_func": 830, "fuse_known_modul": 830, "fuse_custom_config_dict": [830, 832], "convmodul": 830, "bnmodul": 830, "convbnmodul": 830, "additional_fuser_method_map": 830, "fuse_conv_bn": [830, 1946], "conv1": [830, 1232, 1453, 1481, 1896, 1944, 1958], "bn1": 830, "relu1": [830, 1481, 1624], "fused_m": 830, "custom_config": [831, 832, 833, 834], "convert_fx": [831, 1944, 1963], "convert_custom_config": [831, 875, 1944], "set_observed_to_quantized_map": 831, "set_preserved_attribut": [831, 832, 833], "attr1": [831, 832, 833, 1937], "attr2": [831, 832, 833, 1937], "floatcustommodul": [831, 833], "weight_onli": [831, 875, 1944], "preserved_attribut": [831, 832, 833], "observed_class": [831, 833], "quantized_class": 831, "quant_typ": [831, 833], "quanttyp": [831, 833], "fuse_fx": [832, 1944], "fuse_custom_config": [832, 876], "convertcustomconfig": [832, 875], "prepare_fx": [833, 856, 875, 878, 1944, 1963], "prepare_qat_fx": [833, 875, 1944], "prepare_custom_config": [833, 834, 877, 878, 1944], "set_standalone_module_nam": 833, "module1": [833, 870, 1922], "qconfig_map": [833, 834, 870, 871, 872, 875, 877, 878, 1944], "child_prepare_custom_config": 833, "set_standalone_module_class": 833, "mystandalonemodul": 833, "set_float_to_observed_map": 833, "set_non_traceable_module_nam": 833, "module2": [833, 870, 1922], "module3": [833, 1922], "set_non_traceable_module_class": 833, "nontraceablemodule1": 833, "nontraceablemodule2": 833, "set_input_quantized_index": 833, "set_output_quantized_index": 833, "prepare_custom_config_dict": [833, 854, 856, 1944], "standalone_module_nam": 833, "standalone_module_class": 833, "module_class": 833, "float_to_observed_custom_module_class": [833, 854, 1944], "non_traceable_module_nam": 833, "non_traceable_module_class": 833, "input_quantized_idx": 833, "output_quantized_idx": 833, "float_class": 833, "qconfigmap": [834, 871, 872, 875, 877, 1944, 1947], "preparecustomconfig": [834, 877], "2048": [835, 1496, 1498, 1500, 1922], "upsample_r": 835, "per_tensor_affin": [835, 836, 837, 1742, 1743, 1744, 1745, 1944, 1947], "reduce_rang": [835, 836, 837, 838, 841, 843, 1897, 1944, 1945], "factory_kwarg": [835, 836, 841], "1920928955078125e": [835, 836, 837, 838, 841], "finfo": [835, 836, 837, 838, 841, 1275, 1278, 1357, 1894, 1960], "minmaxobserv": [835, 837, 841, 857, 877, 878, 1947], "x_": [836, 837, 986, 1104, 1294, 1295, 1297, 1300, 1308, 1370, 1389, 1443, 1460, 1486, 1488, 1608, 1817, 1819, 1861, 1919, 1947, 1954], "q_": [836, 1947], "x_orig": 836, "reset_min_max_v": [836, 841], "ch_axi": [838, 841, 1897], "per_channel_affin": [838, 841, 1741, 1944, 1947], "custom_op_nam": [839, 842], "with_arg": [840, 857, 877, 878], "_callable_arg": 840, "_with_arg": 840, "foo_build": 840, "foo_instance1": 840, "foo_instance2": 840, "with_callable_arg": 840, "_with_callable_arg": 840, "cur_tim": 840, "get_time_func": 840, "dan": 840, "creation_tim": 840, "compute_dtyp": 842, "ptq": [847, 1944, 1945, 1947], "obs_dict": 853, "get_observer_state_dict": 853, "allow_list": [854, 1962], "observer_non_leaf_module_list": 854, "preemptiv": [854, 855, 1633], "custommodul": [854, 1944], "propagate_qconfig_": 856, "qconfig_dict": [856, 870], "my_qconfig": 857, "default_observ": 857, "default_qat_config": 863, "set_glob": [870, 875, 877, 1944], "set_object_typ": [870, 875, 877], "set_module_name_regex": 870, "regex": 870, "set_module_nam": [870, 875, 877], "set_module_name_object_type_ord": 870, "global_qconfig": 870, "qconfig1": 870, "qconfig2": 870, "qconfig3": 870, "object_typ": 870, "module_name_regex": 870, "module_name_object_type_ord": 870, "conv0": 870, "x86": [871, 872, 1784, 1944, 1946], "run_arg": [873, 879], "qconfig_spec": 874, "quantize_fx": [875, 876, 877, 878, 1944, 1963], "_remove_qconfig": 875, "qconfig_from_prepar": 875, "prepared_model": [875, 877, 878], "xnnpack": [875, 1907, 1944], "get_default_backend_config": [875, 877, 878], "quantized_model": 875, "fusion_pattern": 876, "fusecustomconfig": 876, "_equalization_config": 877, "get_default_qconfig_map": [877, 1944], "float_model": [877, 878, 1962], "data_load": [877, 878, 1715, 1721, 1932], "get_default_qconfig": [877, 878, 1944], "linear_pattern_config": 877, "suer": 877, "sample_inference_data": 877, "get_default_qat_qconfig_map": [878, 1944], "load_weight": 878, "train_data": 878, "get_default_qat_qconfig": [878, 1944], "custom_module_class_map": 880, "lceil": [881, 957], "rceil": [881, 957], "adjac": [881, 947, 1392, 1393, 1394, 1398, 1755, 1953], "set_default_tensor_typ": [881, 937, 946, 1095, 1097, 1107, 1112, 1130, 1148, 1168, 1178, 1179, 1240, 1291, 1307, 1684, 1748, 1750, 1752, 1754, 1755, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1822, 1823, 1824, 1825, 1826, 1827, 1865, 1867, 1891], "get_default_dtyp": [881, 1291, 1307, 1689, 1755, 1955, 1956, 1965], "5000": [881, 896, 902, 903, 904, 939, 963, 1112, 1114, 1115, 1122, 1125, 1130, 1140, 1142, 1143, 1144, 1174, 1180, 1183, 1246, 1272, 1291, 1348, 1350, 1378, 1379, 1397, 1505, 1740, 1744, 1745, 1746, 1755, 1759, 1954, 1959], "3398": 890, "2663": [890, 1922], "2686": 890, "2450": 890, "7401": 890, "8805": 890, "3402": 890, "1936": 890, "4907": [890, 1308], "3948": [890, 981], "0691": 890, "3132": 890, "6092": 890, "5419": 890, "2993": [890, 1839], "3195": 890, "1139": 891, "2254": 891, "1381": [891, 1839], "3687": 891, "0100": [891, 1274, 1741], "1975": [891, 1914], "0102": 891, "4732": 891, "9240": 891, "1207": [891, 1342], "7506": 891, "0213": 891, "7809": 891, "2960": 891, "9384": 891, "1438": 891, "ascend": [892, 1114, 1257, 1259, 1288, 1341, 1775, 1813, 1872], "0785": 892, "5267": 892, "8521": 892, "4065": 892, "1598": 892, "0788": 892, "0745": 892, "2700": 892, "2208": 892, "0722": 892, "7064": 892, "2564": 892, "0669": 892, "2318": 892, "8229": 892, "9280": 892, "lexicograph": [893, 1679, 1899, 1953], "9039": 894, "6291": 894, "0795": [894, 1740, 1930], "1586": 894, "1939": 894, "4900": 894, "7503": 894, "9355": 894, "histori": [895, 896, 1160, 1699, 1854, 1906, 1914, 1924, 1926, 1950], "dlpack": [896, 1145, 1894], "frombuff": 896, "data_ptr": [896, 1912, 1955, 1957], "addbackward0": [896, 1930, 1935], "__array_interface__": 896, "5962": 897, "4985": 897, "4396": 897, "4525": [897, 1914], "6387": 897, "4552": 897, "sine": [898, 1796, 1806, 1808], "1606": 898, "4267": 898, "0899": 898, "0250": 898, "1599": 898, "1534": 898, "9435": 898, "8990": [898, 1089], "arctang": [899, 900], "2341": 899, "2539": 899, "6256": 899, "6448": 899, "2299": 899, "2487": 899, "5591": [899, 921], "5727": 899, "quadrant": 900, "9041": [900, 956], "0196": [900, 956], "3108": [900, 956], "4423": [900, 956], "9833": 900, "0811": 900, "9743": 900, "4151": 900, "tangent": [901, 911, 912, 1157, 1158, 1493, 1852, 1853], "9385": 901, "2968": 901, "8591": 901, "1871": 901, "7253": 901, "3060": 901, "2899": 901, "1893": 901, "needs_input_grad": [905, 1924], "setup_context": [906, 1925], "save_for_forward": [906, 1925], "grad_input": [907, 914, 916, 929, 1221, 1453, 1629, 1924, 1930], "underneath": 908, "generate_vmap_rul": [908, 1925], "out_dim": [908, 1162, 1886, 1897, 1913, 1925], "grad_tensor": [909, 923, 1897, 1922], "grad_vari": 909, "forward_ad": 910, "dual": [910, 911, 912, 1678, 1925], "make_du": [910, 912], "your_fn": 910, "unpack_du": [910, 911], "grad_aft": 910, "dual_level": [911, 912], "primal": [912, 1153, 1157, 1158, 1161], "x_npy": 913, "once_differenti": [913, 914, 915, 916, 1924], "g1": [914, 916, 1922, 1951], "g2": [914, 916, 1922, 1951], "oppos": [915, 1925], "weren": 915, "grad_out": [915, 1895, 1897, 1927], "gx": 915, "gy": 915, "gz": 915, "simplefunc": 916, "outer_jacobian_strategi": 917, "disconnect": [917, 918, 919, 920, 921, 922], "said": [917, 918, 919, 920, 921, 922, 1906, 1933], "cliff": [917, 919, 923], "_debug_only_display_vmap_fallback_warn": [917, 923], "pow_reduc": [917, 918, 921], "2265": 917, "8221": 917, "9456": [917, 938], "2550": 917, "viewbackward": [917, 919], "pow_adder_reduc": [917, 918, 921], "func_output": [918, 920, 921, 922], "1448": 918, "0239": 918, "6456": 918, "4988": 918, "4310": 918, "sumbackward0": [918, 921], "3030": 918, "vhp": 918, "batched_grad": 919, "exp_reduc": [919, 920, 922], "4917": 919, "4352": 919, "4369": 919, "3799": 919, "exp_add": 919, "8052": 919, "3963": 919, "3090": 920, "6742": 920, "9114": 920, "2106": 920, "sumbackward1": [920, 922], "squeezebackward1": 920, "adder": [920, 922], "2399": 920, "5005": 920, "0689": 921, "2431": 921, "0989": 921, "4456": 921, "8053": [921, 1770], "7817": 922, "2458": 922, "7830": 922, "7782": 922, "4458": 922, "3962": 922, "3042": [922, 1278], "6354": 922, "1288": [922, 1799], "0652": 922, "5483": 922, "5035": 922, "2046": [922, 981], "1292": 922, "1432": 922, "3059": 922, "3225": 922, "6652": 922, "7753": 922, "0152": 922, "4225": 922, "3340": 922, "only_input": 923, "allow_unus": [923, 1897], "is_grads_batch": 923, "materialize_grad": 923, "require_grad": [923, 1899, 1919], "06": [924, 925, 1261, 1266, 1267, 1278, 1279, 1284, 1407, 1462, 1501, 1504, 1549, 1618, 1694, 1708, 1840, 1897, 1960], "raise_except": [924, 925], "check_sparse_nnz": 924, "nondet_tol": [924, 925], "check_undefined_grad": [924, 925], "check_grad_dtyp": [924, 925], "check_batched_grad": [924, 925], "check_batched_forward_grad": 924, "check_forward_ad": 924, "check_backward_ad": 924, "fast_mod": [924, 925, 1927], "differenc": [924, 1924], "perturb": [924, 925, 1927], "sparsetensor": [924, 1825], "gradgradcheck": [924, 1924], "gen_non_contig_grad_output": 925, "check_fwd_over_rev": 925, "check_rev_over_rev": 925, "noncontigu": [925, 1037, 1960], "inaccuraci": 925, "clonebackward0": 927, "gi": [929, 930, 1930], "removablehandl": [929, 930, 1221, 1453, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710, 1941], "eventlist": [932, 933], "group_by_stack_n": [933, 1943], "roof": 933, "functioneventavg": [933, 935], "window_length": [937, 946, 1178, 1179, 1240, 1897], "2n": [937, 1794, 1953], "trim": [937, 946, 1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1178, 1179, 1218], "_length": [937, 946, 1178, 1179, 1218, 1376, 1836], "sim": [938, 1467, 1595, 1732, 1752], "pseudorandom": [938, 1343, 1681, 1729, 1732, 1748, 1750, 1752, 1754, 1841], "1737": 938, "0950": [938, 1818], "3609": 938, "7148": 938, "0289": [938, 1864], "2676": 938, "8937": 938, "7202": 938, "2500": [939, 1112, 1114, 1115, 1125, 1130, 1291, 1505, 1746], "7500": [939, 1115, 1125, 1144, 1174, 1276, 1291, 1505, 1746, 1802], "AND": [940, 1302, 1899, 1919], "OR": [943, 1304, 1899], "xor": [945, 1305, 1899], "blackman": [946, 1804], "arrang": 947, "broadcast_tensor": [949, 1897, 1939], "out_int32": [952, 1775, 1897], "formal": [952, 1775, 1906, 1913], "tensor_a": [954, 967], "tensor_b": 954, "6580": 955, "0969": 955, "4614": 955, "1034": [955, 1094], "5790": 955, "1497": 955, "compute_mod": 956, "use_mm_for_euclid_dist_if_necessari": 956, "distanc": [956, 1218, 1256, 1257, 1284, 1413, 1462, 1501, 1502, 1592, 1715, 1836, 1840, 1894], "infti": [956, 1218, 1272, 1369, 1421, 1422, 1484, 1592, 1706, 1954], "use_mm_for_euclid_dist": 956, "donot_use_mm_for_euclid_dist": 956, "minkowski": [956, 1592], "ham": [956, 1178, 1592, 1800], "closest": [956, 1592], "xn": [956, 1592], "4821": [956, 959], "059": 956, "0590": 956, "1763": [956, 1758], "4713": [956, 1758], "6986": [956, 1758], "3702": [956, 1758], "1193": [956, 1310], "0959": 956, "7138": 956, "8322": 956, "2830": [956, 1866], "3791": 956, "6341": 957, "4208": 957, "0900": 957, "5826": 957, "clr": [958, 1715], "3375": 958, "9790": 958, "1119": 958, "6577": 958, "5609": [958, 1543], "5095": 958, "2614": 958, "4038": 958, "3378": [958, 1866], "4982": 958, "2457": [958, 1323], "2561": 958, "4684": 958, "7163": 958, "9647": 958, "8917": [958, 1301], "3213": [958, 1297], "2284": [958, 1074], "8615": 958, "2816": 958, "tu": 959, "mt": [959, 960, 1250, 1257, 1259, 1263, 1264, 1265, 1270, 1279, 1739, 1840, 1897, 1906, 1939, 1957, 1959], "4112": 959, "7486": 959, "4551": 959, "3544": 959, "6724": 959, "5528": 959, "0592": [959, 1930], "9371": 959, "5487": 959, "7023": 959, "03": [959, 960, 1298, 1797, 1798, 1803], "3842e": [959, 1266], "dpotri": 960, "spotri": 960, "uu": 960, "9935": 960, "6353": 960, "5806": 960, "8769": 960, "7183": [960, 1272, 1930], "6618": 960, "9314": 960, "2251": [960, 994, 1253, 1295], "0889": 960, "4439": 960, "2122": 960, "1412": 960, "5894e": 960, "semidefinit": 961, "7747": 961, "9549": 961, "3086": 961, "4114": 961, "8733": 961, "6355": 961, "9891": 961, "1974": 961, "4706": 961, "4115": 961, "6225": 961, "1625": 961, "6097": 961, "8398": 961, "2387": [961, 982], "3771": [961, 1267], "4173": 961, "1626": [961, 994, 1253], "tensor_split": [962, 1092, 1184, 1887, 1897, 1939, 1957], "min_valu": [963, 1412], "max_valu": [963, 1412, 1897], "_valu": [963, 1361, 1638, 1825, 1924, 1939, 1953], "7120": 963, "1734": [963, 1195], "0478": [963, 1889], "0922": 963, "3333": [963, 1174, 1183, 1505, 1506, 1854], "hstack": [966, 1897, 1939, 1953], "with_replac": [967, 1897], "combinations_with_replac": 967, "realloc": [968, 1195], "notabl": [968, 1899], "epilogue_fus": 968, "templat": [968, 1037, 1038, 1940], "max_autotun": 968, "shape_pad": 968, "graph_diagram": 968, "pictur": 968, "_glibcxx_use_cxx11_abi": 969, "exclude_tag": 974, "flip": [979, 1135, 1136, 1288, 1895, 1897, 1939, 1940], "writeabl": [979, 980], "is_conj": [979, 1763, 1897, 1939], "geq": [981, 1165, 1252, 1260, 1389, 1439, 1460, 1461, 1471, 1535, 1587, 1640, 1917, 1954], "signbit": [981, 1895, 1897, 1939, 1953], "2557": 981, "0026": 981, "5387": 981, "4740": 981, "9244": 981, "7079": 981, "2778": 981, "0249": [981, 1296], "5719": 981, "0059": 981, "2600": 981, "4475": 981, "9567": [981, 1256, 1839], "5757": 981, "1751": 981, "0742": 981, "2998": 981, "1054": 981, "2373": 981, "3190": [981, 1922], "1128": [981, 1278, 1423], "pearson": 982, "coeffici": [982, 1178, 1694, 1696, 1697, 1698, 1700, 1706, 1710, 1799, 1800, 1801, 1863], "r_": [982, 1856], "ij": [982, 1094, 1300, 1308, 1322, 1456, 1817], "c_": [982, 1381, 1382, 1383, 1384, 1385, 1386, 1423, 1465, 1466], "jj": 982, "hermitian": [982, 1110, 1111, 1113, 1115, 1116, 1117, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1250, 1251, 1256, 1257, 1259, 1263, 1264, 1265, 1275, 1278, 1284, 1897], "cov": [982, 1897, 1939], "2678": [982, 1396], "0908": 982, "3766": 982, "2780": 982, "5812": 982, "1535": [982, 1396], "2350": 982, "3582": 982, "4309": 983, "2706": 983, "8562": 983, "9796": [983, 1266], "1395": 983, "2957": 983, "6553": 983, "5574": 983, "1632": 984, "1835": 984, "6979": 984, "7325": [984, 1084], "0133": 984, "7860": 984, "2536": 984, "2805": 984, "sleef": [984, 1808], "unbias": [986, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1492, 1834, 1835, 1881, 1882, 1895, 1897], "_w": 986, "y_": [986, 1104, 1294, 1295, 1297, 1370, 1389, 1419, 1817, 1861, 1919, 1954], "w_i": [986, 1260], "mu_x": 986, "mu_i": [986, 1700], "whichev": [986, 1162, 1552, 1740, 1886, 1922], "w_ix_": 986, "bessel": [986, 1240, 1803, 1834, 1835, 1881, 1882, 1954], "corrcoef": [986, 1897, 1939], "6667": [986, 1183, 1505, 1506, 1760, 1794, 1935], "fw": 986, "4282": 986, "0255": [986, 1081], "4144": [986, 1922], "4169": 986, "streamcontext": [992, 1069, 1894], "abstractcontextmanag": 992, "3956": [994, 1253], "1455": [994, 1253, 1936], "6895": [994, 1253], "5849": [994, 1253], "3599": [994, 1253], "7180": [994, 1253], "0521": [994, 1253], "1339": [994, 1253], "0225": [994, 1253, 1266], "0257": [994, 1253], "4725": [994, 1253], "1479": [994, 1253], "7005": [994, 1253], "9757": [994, 1253], "3904": [994, 1253], "3726": [994, 1253], "1836": [994, 1253], "9688": [994, 1253], "7153": [994, 1253, 1954], "2159": [994, 1253], "0844": [994, 1253], "5281": [994, 1253], "6120": [994, 1253], "4490": [994, 1253], "5687": [994, 1253], "9792": [994, 1075, 1253], "8304": [994, 1253], "3037": [994, 1253, 1930], "5650": [994, 1253], "2329": [994, 1253], "9883": [994, 1253], "0551": [994, 1253], "capture_begin": [995, 1922], "make_graphed_cal": [995, 1922], "graph_pool_handl": [995, 1029], "other_graph_inst": [995, 1029], "capture_end": [995, 1922], "debug_dump": 995, "debug_path": 995, "enable_debug_mod": 995, "path_to_so_fil": 996, "alloc_fn_nam": 996, "free_fn_nam": 996, "ctype": 996, "change_current_alloc": [996, 1922], "ssize_t": [996, 1922], "cudastream_t": [996, 998, 1922], "ptr": [996, 1922], "size_t": 996, "oss": 996, "enable_tim": [997, 1922], "interprocess": 997, "marker": 997, "elapsed_tim": [997, 1922], "end_ev": [997, 1922], "elaps": [997, 1909], "from_ipc_handl": 997, "reconstruct": [997, 1310, 1369, 1370, 1927, 1935, 1941], "ipc": [997, 1033], "ipc_handl": 997, "cudaeventsynchron": 997, "cudastreamwaitev": [997, 998, 1000], "stream_ptr": 998, "record_ev": [998, 1000], "cudastreamsynchron": [998, 1000], "wait_ev": [998, 1000], "interoper": 1002, "caching_allocator_delet": 1002, "mem_ptr": 1003, "caching_allocator_alloc": 1003, "peer_devic": 1004, "_cudaalloc": 1005, "clock": 1006, "sm": 1006, "hertz": 1006, "smi": [1006, 1019, 1047, 1053, 1057, 1071, 1072, 1922, 1926, 1928], "buffer_s": 1008, "10485760": 1008, "chunk_siz": [1011, 1156, 1162, 1886], "cublashandle_t": 1012, "unoccupi": [1019, 1331], "pytorch_cuda_alloc_conf": [1020, 1922], "cudamallocasync": [1020, 1051, 1922], "_cudadeviceproperti": 1024, "gencod": 1025, "cuda_graph": 1029, "ordinari": [1031, 1633, 1878, 1918], "code_str": [1037, 1038], "temp": 1037, "typenam": [1037, 1038], "my_kernel": [1037, 1038], "jitted_fn": [1037, 1038], "create_jit_fn": [1037, 1038], "util_fn": 1037, "gelu": [1037, 1482, 1496, 1498, 1500, 1605, 1895, 1897, 1914, 1939], "my_gelu": 1037, "my_lib": [1037, 1903, 1936], "impl": [1037, 1903], "num_output": 1038, "sample_arg": 1040, "num_warmup_it": 1040, "allow_unused_input": 1040, "datadistributedparallel": 1040, "manual_seed_al": [1041, 1878], "occupi": [1043, 1047, 1058, 1329, 1441, 1570, 1922, 1928, 1965], "reset_peak_memory_stat": [1043, 1045, 1058, 1059], "max_memory_reserv": [1044, 1922, 1928], "cudamemgetinfo": 1046, "memory_reserv": [1048, 1922, 1928], "snapshot": [1050, 1899, 1922, 1928], "large_pool": 1051, "small_pool": 1051, "allocated_byt": 1051, "cudamalloc": [1051, 1922], "reserved_byt": 1051, "active_byt": 1051, "inactive_split": 1051, "inactive_split_byt": 1051, "octob": 1051, "1mb": 1051, "num_alloc_retri": 1051, "num_oom": 1051, "assist": [1051, 1923], "max_split_s": 1051, "oversize_alloc": 1051, "oversize_seg": 1051, "requested_byt": 1051, "abbrevi": 1052, "msg": [1054, 1056, 1943, 1960], "instantan": [1054, 1943], "ascii": [1054, 1056, 1292, 1899, 1943], "sensor": [1057, 1071], "mw": 1057, "milliwatt": 1057, "fermi": 1057, "max_memory_alloc": [1058, 1922, 1928], "max_memory_cach": 1059, "memory_stat": [1060, 1922, 1928], "seed_al": 1061, "environment": 1063, "total_memori": [1064, 1338], "debug_mod": [1068, 1782], "centigrad": 1071, "x_1": [1073, 1074, 1075, 1076, 1288, 1374, 1387, 1388, 1523, 1534, 1861], "x_2": [1073, 1074, 1075, 1076, 1288, 1374, 1387, 1388, 1523, 1534], "x_3": [1073, 1074, 1075, 1076, 1288], "3449": 1073, "5447": 1073, "0685": 1073, "5104": [1073, 1922], "1706": 1073, "2259": 1073, "4696": 1073, "3284": 1073, "9946": 1073, "8209": [1073, 1076], "6628": 1074, "0975": 1074, "2680": [1074, 1921], "3298": [1074, 1081], "4220": 1074, "3885": 1074, "1762": 1074, "9165": 1074, "6684": [1074, 1198], "6001": 1075, "2069": 1075, "1919": 1075, "6727": [1075, 1088], "0062": 1075, "4126": 1075, "2129": 1075, "4206": 1075, "1968": [1075, 1954], "1241": 1075, "0238": 1075, "0233": [1075, 1747], "0157": 1075, "0158": [1075, 1840], "0065": 1075, "0014": [1075, 1954], "0006": 1075, "8286": 1076, "4890": 1076, "5155": 1076, "8443": 1076, "1865": 1076, "1752": [1076, 1084], "0595": 1076, "1850": 1076, "1571": [1076, 1930, 1935], "4243": 1076, "3175": 1076, "8020": [1076, 1737], "0423": 1076, "2289": 1076, "0537": 1076, "0058": 1076, "9780": 1076, "trapezoid": [1077, 1862, 1897, 1939], "360": 1078, "2832": 1078, "diagflat": [1081, 1897, 1939], "5950": 1081, "0872": 1081, "4264": 1081, "1064": [1081, 1930], "8795": 1081, "2429": 1081, "1374": 1081, "1029": 1081, "6482": 1081, "6300": 1081, "5410": 1082, "2934": 1082, "1788": [1082, 1954], "5684": 1082, "0845": [1082, 1808, 1930], "3986": 1082, "2956": [1083, 1253], "9068": 1083, "1695": 1083, "2094": [1083, 1922], "3018": 1083, "1516": 1083, "9342": 1083, "0854": 1084, "1431": 1084, "8536": 1084, "0905": 1084, "0360": [1084, 1342], "6927": 1084, "3735": 1084, "4945": 1084, "2631": [1084, 1341, 1922], "3755": 1084, "5977": 1084, "8172": 1084, "1065": [1084, 1930], "0401": 1084, "2235": [1084, 1839], "7938": 1084, "3081": 1084, "6166": 1084, "2335": 1084, "0500": 1084, "7336": 1084, "3836": 1084, "1015": 1084, "emb": [1085, 1778, 1809], "5393": 1088, "8675": 1088, "5916": 1088, "6321": 1088, "0967": 1088, "0511": 1088, "6295": 1088, "8360": 1088, "6973": 1088, "6537": 1088, "dividend": [1089, 1139, 1142, 1759, 1868], "true_divid": [1089, 1897, 1939], "3810": [1089, 1182], "2774": 1089, "2972": 1089, "3719": 1089, "4637": 1089, "7620": 1089, "5548": 1089, "5944": 1089, "7438": 1089, "9274": 1089, "3711": 1089, "9353": 1089, "4605": 1089, "2917": 1089, "1815": [1089, 1301], "0111": [1089, 1797], "9805": 1089, "5923": 1089, "1062": 1089, "4581": [1089, 1260], "7759": 1089, "2344": 1089, "1830": 1089, "0313": 1089, "1908": 1089, "4757": 1089, "8032": 1089, "2930": 1089, "8113": 1089, "2308": 1089, "4620": [1089, 1889], "6051": 1089, "5676": 1089, "2639": 1089, "2260": 1089, "4509": [1089, 1274], "2086": 1089, "1322": 1089, "9764": 1089, "9564": 1089, "3484": 1089, "2278": 1089, "1068": [1089, 1195], "4678": 1089, "3938": [1089, 1849], "depthwis": [1092, 1093, 1381, 1382, 1383], "atleast_3d": [1093, 1897, 1939], "notat": [1094, 1419, 1788, 1900, 1930, 1959], "einstein": 1094, "summat": [1094, 1218, 1300, 1308, 1953], "subscript": [1094, 1900, 1932], "ik": [1094, 1293, 1817], "za": 1094, "alphabet": [1094, 1536, 1949], "arrow": [1094, 1951], "ki": 1094, "ellipsi": [1094, 1899, 1900, 1913], "fourth": 1094, "whitespac": [1094, 1900], "opt_einsum": [1094, 1894], "_the_": 1094, "disclaim": 1094, "52": 1094, "op1": [1094, 1899], "sublist1": 1094, "op2": [1094, 1899], "sublist2": 1094, "subslist_out": 1094, "2104": 1094, "7952": 1094, "2433": 1094, "4545": 1094, "1156": 1094, "2897": [1094, 1930], "3918": 1094, "4963": 1094, "3744": 1094, "9381": 1094, "2685": 1094, "6070": 1094, "7208": 1094, "8058": 1094, "4419": 1094, "0936": 1094, "1713": 1094, "4291": 1094, "5802": 1094, "7350": [1094, 1954], "5704": 1094, "4290": 1094, "9323": 1094, "4480": 1094, "bij": 1094, "bjk": 1094, "bik": 1094, "0564": 1094, "5904": 1094, "2023": 1094, "1271": 1094, "6706": [1094, 1740], "8097": 1094, "8025": 1094, "1183": 1094, "2239": [1094, 1280], "3107": 1094, "5756": 1094, "2354": 1094, "4558": 1094, "3460": 1094, "5087": 1094, "8530": [1094, 1378, 1508], "8153": 1094, "8787": 1094, "3839": [1094, 1885], "2112": [1094, 1864], "3728": 1094, "1131": [1094, 1737], "0921": 1094, "8305": 1094, "ji": 1094, "anm": 1094, "bm": 1094, "ba": 1094, "3430": [1094, 1301], "2405": 1094, "4494": 1094, "3311": 1094, "5201": 1094, "0356": 1094, "4064e": 1095, "8000e": 1095, "3493e": 1095, "5751e": 1095, "1428e": 1095, "5955e": 1095, "9683e": 1097, "1239e": 1097, "0705e": 1097, "set_grad_en": [1098, 1897, 1939, 1961], "parenthesi": [1098, 1196, 1678], "doubler": [1098, 1678], "elsewher": [1099, 1107, 1165, 1177, 1211, 1213, 1214, 1217, 1245, 1309, 1354, 1818, 1893], "_max": [1108, 1109, 1944], "_min": [1108, 1109, 1944], "nearbi": [1108, 1109], "_int": [1108, 1109], "_point": [1108, 1109], "2525": 1108, "0466": 1108, "3491": [1108, 1274], "2168": [1108, 1856], "5906": [1108, 1954], "6258": 1108, "6444": 1108, "0542": 1108, "0475": [1108, 1954], "0486": 1108, "3405": 1108, "6134": [1108, 1323], "6323": 1108, "0552": 1109, "9730": 1109, "3973": 1109, "0780": 1109, "4000": [1109, 1112, 1121, 1130, 1505, 1743, 1794], "fourier": [1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1218, 1804, 1836, 1894], "rfft": [1110, 1115, 1125, 1129, 1130, 1131], "compact": [1110, 1111, 1113, 1263, 1265, 1268, 1924, 1937, 1944], "chalf": [1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1125, 1126, 1127, 1897, 1939, 1959], "sm53": [1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131], "ortho": [1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1293], "orthonorm": [1110, 1111, 1113, 1115, 1116, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1131, 1284, 1640, 1840], "ifft": [1110, 1114, 1115, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127], "fftn": [1111, 1114, 1120, 1123, 1131], "rfft2": [1111, 1126], "ifft2": [1111, 1123], "two_fft": [1111, 1113, 1123, 1129, 1131], "check_strid": [1111, 1113, 1114, 1119, 1120, 1125, 1126, 1127, 1129, 1131, 1960], "nyquist": [1112, 1114, 1122, 1124, 1128, 1129, 1130, 1131], "i_1": [1113, 1131, 1241], "i_n": [1113, 1131, 1162, 1241, 1856, 1886], "rfftn": [1113, 1117, 1123, 1127, 1129], "ifftn": [1113, 1119, 1124], "reorder": [1114, 1276], "rearrang": [1114, 1121, 1377, 1465, 1466, 1593, 1594, 1913], "fftfreq": [1114, 1121, 1130], "9000": [1114, 1854], "8000": [1114, 1348, 1505, 1740, 1794], "uncent": 1114, "ifftshift": 1114, "x_center": 1114, "x_uncent": 1114, "fft_uncent": 1114, "fft_center": 1114, "x_centered_2": 1114, "ihfft": [1115, 1123, 1124], "irfft": [1115, 1127, 1128], "symmetri": [1115, 1117, 1836], "opposit": [1115, 1117, 1840, 1860], "transformed_dim_s": [1115, 1125], "0000j": [1115, 1122, 1125, 1250, 1251, 1256, 1257, 1259, 1733, 1791], "1250": [1115, 1341], "1720j": 1115, "0406j": 1115, "2809": 1115, "6250": [1115, 1125, 1144, 1505], "9691": 1115, "hfftn": [1116, 1124], "last_dim_s": [1116, 1117, 1126, 1127, 1895], "ihfft2": 1116, "roundtrip": [1116, 1117, 1125, 1126, 1127], "ihfftn": [1117, 1123], "irfftn": [1117, 1126, 1131], "fft2": [1119, 1129], "two_ifft": [1119, 1120, 1124], "fftshift": 1121, "hfft": 1122, "6882j": 1122, "1625j": 1122, "hfft2": 1123, "8602j": 1125, "2031j": 1125, "1562": 1125, "3511": 1125, "7812": 1125, "2114": 1125, "irfft2": 1129, "wider": [1137, 1896, 1899, 1940, 1953], "49": [1137, 1276, 1921], "2500e": 1137, "1000e": 1137, "7656e": 1137, "lfloor": [1138, 1143, 1361, 1366, 1367, 1368, 1381, 1382, 1383, 1400, 1421, 1422, 1446, 1447, 1448, 1504, 1505, 1506, 1507, 1521, 1590, 1755, 1836], "rfloor": [1138, 1143, 1361, 1366, 1367, 1368, 1381, 1382, 1383, 1400, 1421, 1422, 1446, 1447, 1448, 1504, 1505, 1506, 1507, 1521, 1590, 1755, 1836], "8166": 1138, "5308": 1138, "2530": 1138, "2091": 1138, "7000": [1140, 1397, 1793], "3000": [1141, 1396, 1793, 1922], "entrywis": [1142, 1759], "modulu": [1142, 1280, 1759], "operatornam": [1143, 1256, 1257, 1258, 1259, 1276, 1284, 1369, 1370, 1376, 1413, 1414, 1420, 1444, 1484, 1502, 1793], "8750": [1144, 1505], "char": [1147, 1689, 1912, 1955], "parameter_and_buffer_dict": 1150, "tie_weight": [1150, 1675], "submodule_nam": [1150, 1675], "parameter_nam": [1150, 1675], "ty": [1150, 1675], "foo_ti": [1150, 1675], "new_a": [1150, 1675], "mutlipl": 1150, "grad_weight": [1150, 1924], "detached_param": 1150, "parameters_and_buffer_dict": 1150, "reparamater": [1150, 1675], "paramat": 1150, "intermediate_upd": 1151, "mutations_and_view": 1151, "intermeid": 1151, "inpt": 1151, "out1": [1151, 1897], "out2": [1151, 1897], "f_trace": 1151, "f_no_mutations_trac": 1151, "f_no_mutations_and_views_trac": 1151, "a_1": [1151, 1241], "view_1": 1151, "view_copi": [1151, 1897, 1939, 1961], "view_copy_1": 1151, "as_strid": [1151, 1895, 1897, 1939, 1957], "writ": 1151, "native_funct": [1151, 1895, 1924], "yaml": [1151, 1895, 1924], "aux": [1152, 1153, 1155, 1156, 1157, 1161], "my_loss_func": 1152, "y_pred": [1152, 1922], "loss_per_sampl": 1152, "y_true": 1152, "autodiff": [1155, 1156, 1157, 1279], "jacobian_f": [1155, 1156], "f_x": [1155, 1156], "jacboian": [1155, 1156], "expectedx": [1155, 1156], "expectedi": [1155, 1156], "_preallocate_and_copi": 1156, "stand": [1157, 1161, 1898, 1941, 1951], "jvp_out": 1157, "jvp_fn": 1158, "requr": 1158, "optimiz": [1160, 1896], "l1": [1160, 1413, 1414, 1484, 1561, 1606, 1650, 1659, 1930, 1935], "l2": [1160, 1414, 1444, 1484, 1693, 1694, 1695, 1696, 1698, 1700, 1706, 1707, 1709, 1918], "vjpfunc": 1161, "unsuccessfulli": [1162, 1886], "rummag": [1162, 1886], "batched_dot": [1162, 1886], "imposs": [1162, 1886, 1918], "jacobian_row": [1162, 1886], "get_vjp": [1162, 1886], "n1": [1162, 1761, 1886], "n0": [1162, 1886], "batched_pow": [1162, 1886], "autobatch": [1162, 1886], "sparse_grad": [1163, 1895, 1897], "tau": [1166, 1260, 1554, 1695, 1709, 1726, 1727, 1797, 1897], "elementari": [1166, 1919, 1927], "reflector": [1166, 1640, 1727], "household": [1166, 1260, 1640, 1727], "householder_product": [1166, 1640, 1726], "gel": [1166, 1266], "set_default_dtyp": 1168, "set_deterministic_debug_mod": [1169, 1875], "edge_ord": [1174, 1897], "mathbb": [1174, 1250, 1252, 1256, 1257, 1258, 1259, 1260, 1261, 1266, 1267, 1270, 1272, 1279, 1281, 1283, 1284, 1389, 1460, 1640], "rightarrow": 1174, "interior": 1174, "theorem": 1174, "h_l": 1174, "h_r": 1174, "neighbor": [1174, 1218, 1505, 1507, 1836], "xi_1": 1174, "xi_2": 1174, "approx": [1174, 1841, 1927], "outermost": 1174, "80": [1174, 1276, 1719, 1788, 1922, 1940], "halv": 1174, "coord": 1174, "54": [1178, 1415, 1800], "46": [1178, 1799], "hann_window": [1178, 1836, 1897, 1901, 1939], "hann": [1179, 1800], "hist": [1182, 1183, 1897], "bin_edg": [1182, 1183, 1897], "9524": 1182, "leftmost": [1183, 1914], "leg": 1187, "triangl": [1187, 1958], "hypotenus": 1187, "4031": 1187, "gammainc": [1189, 1954], "gammaincc": [1190, 1954], "index_reduce_": [1194, 1897], "1427": 1195, "0231": 1195, "5414": 1195, "0009": 1195, "4664": [1195, 1856], "2647": 1195, "1228": 1195, "6571": 1195, "7230": 1195, "6004": 1195, "inferencemod": [1196, 1919], "bump": 1196, "_version": [1196, 1939], "multidimension": [1198, 1290, 1416], "8173": 1198, "0874": 1198, "1784": 1198, "3279": 1198, "7894": 1198, "4682": 1198, "7159": 1198, "1506": 1198, "4034": 1198, "3657": 1198, "0387": 1198, "9892": 1198, "1774": 1198, "3261": 1198, "3917": 1198, "4537": [1198, 1624], "7493": 1198, "1724": 1198, "2291": 1198, "5749": 1198, "2267": 1198, "7920": 1198, "3607": 1198, "3701": 1198, "3666": 1198, "5850": [1198, 1251], "7242": 1198, "9837": 1198, "1560": 1198, "2907": 1198, "6785": 1198, "5671": [1198, 1252], "5452": 1198, "6912": 1198, "5509": 1198, "1782": 1198, "9843": 1198, "7366": 1198, "5672": [1198, 1681], "5115": 1198, "4864": 1198, "2476": 1198, "4337": 1198, "6347": 1198, "1748": 1198, "3567": [1198, 1251], "6558": 1198, "2469": [1198, 1930], "5787": [1198, 1301], "typecheck": [1208, 1939], "mypi": [1208, 1898, 1899], "warn_alwai": 1209, "set_warn_alwai": 1209, "nonfinit": 1210, "test_el": [1212, 1897], "assume_uniqu": [1212, 1897], "0j": [1217, 1883], "nola": 1218, "envelop": 1218, "hop": [1218, 1836], "shorter": [1218, 1937, 1949], "griffin": 1218, "ieee": [1218, 1407, 1804, 1933], "tran": 1218, "assp": 1218, "vol": [1218, 1407, 1804], "pp": [1218, 1407, 1804], "236": 1218, "apr": 1218, "1984": 1218, "slide": [1218, 1366, 1367, 1368, 1400, 1446, 1447, 1448, 1504, 1546, 1576, 1577, 1578, 1620, 1744, 1745, 1836], "fft_size": 1218, "scriptmodul": [1219, 1220, 1225, 1228, 1230, 1231, 1232, 1236, 1237, 1692, 1896, 1898, 1907, 1937], "implic": [1219, 1236, 1924, 1949, 1953], "attributemodul": 1219, "names_ag": 1219, "get_debug_st": 1220, "graphexecutorst": 1220, "_extra_fil": [1220, 1221, 1228, 1231, 1929], "save_to_buff": 1220, "add_modul": [1221, 1453], "init_weight": [1221, 1453, 1930], "buf": [1221, 1453], "20l": [1221, 1453], "1l": [1221, 1453], "5l": [1221, 1453], "code_with_const": 1221, "constmap": 1221, "extra_repr": [1221, 1453, 1924], "get_buff": [1221, 1453], "attributeerror": [1221, 1453, 1924, 1944], "get_extra_st": [1221, 1453], "set_extra_st": [1221, 1453], "get_paramet": [1221, 1453], "net_b": [1221, 1453], "net_c": [1221, 1453], "inlined_graph": 1221, "ipu": [1221, 1453, 1935], "missing_kei": [1221, 1453], "unexpected_kei": [1221, 1453], "remove_dupl": [1221, 1453], "named_children": [1221, 1453, 1930], "conv4": [1221, 1453], "conv5": [1221, 1453], "register_backward_hook": [1221, 1453, 1629], "register_full_backward_hook": [1221, 1453, 1930], "register_buff": [1221, 1453, 1626, 1896, 1898, 1924, 1930], "register_forward_hook": [1221, 1453, 1627, 1930], "with_kwarg": [1221, 1453], "always_cal": [1221, 1453, 1627], "register_module_forward_hook": [1221, 1453, 1930], "register_forward_pre_hook": [1221, 1390, 1453, 1628, 1930], "forward_pr": [1221, 1453], "register_module_forward_pre_hook": [1221, 1453, 1930], "register_module_full_backward_hook": [1221, 1453, 1625, 1919, 1930], "register_full_backward_pre_hook": [1221, 1453, 1930], "register_module_full_backward_pre_hook": [1221, 1453, 1930], "register_load_state_dict_post_hook": [1221, 1453], "incompatible_kei": [1221, 1453], "register_modul": [1221, 1453, 1631], "register_paramet": [1221, 1453, 1632, 1924, 1930], "register_state_dict_pre_hook": [1221, 1453], "keep_var": [1221, 1453], "gan": [1221, 1453, 1641, 1674], "share_memori": [1221, 1453, 1932], "share_memory_": [1221, 1453, 1911, 1955], "shallow": [1221, 1390, 1453, 1501, 1502], "channels_last": [1221, 1453, 1633, 1956], "4d": [1221, 1372, 1400, 1417, 1453, 1505, 1546, 1563, 1590, 1621, 1743], "1913": [1221, 1453], "3420": [1221, 1453], "5113": [1221, 1453, 1856], "2325": [1221, 1253, 1453], "gpu1": [1221, 1453], "1914": [1221, 1453], "5112": [1221, 1453, 1922], "3741": [1221, 1453], "2382": [1221, 1342, 1453], "5593": [1221, 1453], "4443": [1221, 1453], "6122": [1221, 1453], "1150": [1221, 1453], "to_empti": [1221, 1453], "dst_type": [1221, 1453], "set_to_non": [1221, 1453, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1705, 1706, 1707, 1708, 1709, 1710, 1922], "the_typ": 1222, "the_valu": 1222, "script_bar": 1224, "addmod": 1224, "preserved_attr": 1225, "optimize_numer": 1225, "run_frozen_optim": 1225, "scripted_modul": [1225, 1232, 1935], "frozen_modul": 1225, "modified_tensor": 1225, "mymodule2": 1225, "dump_alias_db": 1225, "pdb": [1226, 1232, 1238, 1896, 1898], "training_method": 1226, "target_typ": 1227, "refin": [1227, 1913], "testcod": [1227, 1898], "key1": 1227, "val1": 1227, "key2": 1227, "val2": 1227, "_restore_shap": 1228, "scriptfunct": [1228, 1232, 1233, 1236, 1937], "readlin": [1228, 1292, 1941], "seek": [1228, 1292, 1941, 1944], "retrac": 1228, "rb": [1228, 1292], "extra_fil": [1228, 1231], "other_method": 1230, "lesser": [1230, 1919, 1921], "extent": [1230, 1921, 1953], "frozen_mod": 1230, "offlin": 1231, "_frames_up": 1232, "_rcb": 1232, "scriptdict": 1232, "scriptlist": 1232, "test_sum": 1232, "scripted_fn": [1232, 1896], "conv2": [1232, 1453, 1481, 1896, 1944], "some_entry_point": 1232, "python_only_fn": 1232, "testnnmodul": 1232, "pdt_model": 1232, "scripted_model": [1232, 1941], "un": [1234, 1376, 1944], "unfus": 1234, "nb": 1234, "check_trac": [1236, 1237], "check_input": [1236, 1237, 1896], "check_toler": [1236, 1237], "_force_outplac": [1236, 1237], "_module_class": [1236, 1237], "_compilation_unit": [1236, 1237], "compilationunit": [1236, 1237], "example_kwarg_input": 1236, "_store_input": [1236, 1237], "trace_modul": [1236, 1896, 1899], "untrack": 1236, "checker": [1236, 1237, 1899, 1937], "diverg": [1236, 1237, 1419, 1564, 1894, 1899], "traced_foo": [1236, 1896], "example_weight": [1236, 1237], "example_forward_input": [1236, 1237], "example_inputs_is_kwarg": 1237, "method2": 1237, "example_method2_input": 1237, "weighted_kernel_sum": 1237, "use_memory_effici": 1238, "memory_effici": 1238, "scriptabl": 1238, "kaiser": [1240, 1496, 1498, 1500], "i_0": [1240, 1241, 1803, 1856, 1954], "zeroth": [1240, 1803, 1954], "out_i": 1240, "kroneck": 1241, "a_0": 1241, "a_n": 1241, "b_0": 1241, "b_1": 1241, "b_n": 1241, "k_0": [1241, 1856], "k_1": 1241, "k_n": 1241, "j_0": 1241, "j_1": 1241, "j_n": 1241, "k_t": 1241, "i_t": [1241, 1423, 1708], "b_t": 1241, "j_t": 1241, "bmatrix": 1241, "a_": [1241, 1312, 1441, 1856], "cdot": [1241, 1266, 1278, 1369, 1370, 1388, 1389, 1411, 1419, 1456, 1457, 1458, 1459, 1460, 1496, 1534, 1557, 1733, 1836, 1954, 1960], "vdot": [1241, 1288, 1289, 1897, 1939], "ddot": [1241, 1288], "kth": 1242, "full_lik": [1246, 1897, 1901, 1939], "logarithm": [1249, 1254, 1280, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1307, 1376, 1536, 1571, 1816, 1954], "gamma": [1249, 1371, 1372, 1373, 1408, 1416, 1417, 1418, 1425, 1492, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1709, 1711, 1715, 1716, 1719, 1724, 1725, 1743, 1894, 1897, 1937, 1939, 1940, 1954], "5724": [1249, 1954], "1208": [1249, 1954], "mathrlap": [1250, 1256, 1257, 1258, 1259, 1267, 1270, 1279, 1281, 1283, 1284, 1640], "qquad": [1250, 1252, 1256, 1257, 1258, 1259, 1260, 1267, 1270, 1279, 1281, 1283, 1284, 1640], "eigenvalu": [1250, 1256, 1257, 1258, 1259, 1272, 1275, 1278, 1283, 1284, 1293, 1729, 1897], "resp": [1250, 1257, 1259, 1283, 1284, 1301], "5266": 1250, "9586": 1250, "0626j": 1250, "4160": 1250, "5895": 1250, "2322": 1250, "2976j": 1250, "4928": [1250, 1856], "4692e": 1250, "8747e": 1250, "check_error": [1251, 1262, 1264, 1269, 1282, 1897], "performantli": 1251, "3792": 1251, "9831j": 1251, "8757": 1251, "5425": 1251, "6374j": 1251, "kappa": 1252, "_p": [1252, 1462], "frobeniu": [1252, 1266, 1273, 1277, 1680], "nuc": [1252, 1273, 1277, 1290, 1651, 1660, 1680], "nuclear": [1252, 1273, 1277, 1680], "sigma_1": [1252, 1266, 1275, 1278], "sigma_n": 1252, "kappa_2": 1252, "kappa_": 1252, "4142": [1252, 1277, 1680, 1733], "1623": [1252, 1273], "2426": [1252, 1277, 1680], "7071": [1252, 1796], "5917": 1252, "9941": 1253, "5132": 1253, "5681": 1253, "4653": 1253, "4507": 1253, "4119": 1253, "6163": 1253, "1073": 1253, "3957": 1253, "9666": [1253, 1543], "0840": 1253, "3357": 1253, "2139": 1253, "slogdet": [1254, 1301, 1897, 1939], "0934": 1254, "1990": [1254, 1301], "4099": [1254, 1301], "7386": [1254, 1301], "diagonaliz": [1256, 1258], "eigenvector": [1256, 1257, 1293, 1897], "neq": [1256, 1257, 1260, 1284, 1354, 1456, 1458, 1694, 1695, 1696, 1698, 1700, 1706, 1707, 1709, 1713, 1840], "phi": [1256, 1257, 1284, 1403, 1550, 1840], "shall": [1256, 1257, 1284, 1642, 1646], "lambda_i": [1256, 1257, 1272], "lambda_j": [1256, 1257], "eigval": [1256, 1897], "9828": [1256, 1864, 1930], "3889j": 1256, "4617": 1256, "3010j": 1256, "1662": 1256, "7435j": 1256, "6139": 1256, "0562j": 1256, "1226": [1256, 1258], "5738j": [1256, 1258], "7537": [1256, 1258], "1286j": [1256, 1258], "9218": 1256, "1882": 1256, "2220j": 1256, "0270": 1256, "3867j": 1256, "7119e": 1256, "2841e": 1256, "uplo": [1257, 1259, 1897], "unitari": [1257, 1260, 1279, 1284, 1640, 1727], "eigvalsh": [1257, 1275], "9228": [1257, 1259], "2029": [1257, 1259], "0862j": [1257, 1259], "3464": [1257, 1259], "3277": [1257, 1259], "9415": [1257, 1259], "0846": 1257, "9964": 1257, "9170": 1257, "3898j": 1257, "0331j": 1257, "1062e": 1257, "5423e": 1257, "polynomi": [1258, 1259, 1722], "_n": [1258, 1259, 1261, 1640, 1924], "4576e": [1258, 1285], "5797": 1259, "4629": 1259, "1605": 1259, "3780": 1259, "1113": [1259, 1930], "7381": 1259, "h_1h_2": 1260, "h_k": 1260, "h_i": [1260, 1487], "_m": [1260, 1640], "tau_i": 1260, "8034": 1260, "4184j": 1260, "2588": 1260, "0174j": 1260, "6853": 1260, "7953j": 1260, "0790": 1260, "5620j": 1260, "6989j": 1260, "5360": 1260, "1193j": 1260, "3877": 1260, "6691j": 1260, "3512": 1260, "3024j": 1260, "4766": 1260, "5783j": 1260, "0361": [1260, 1930], "6587j": 1260, "6396": [1260, 1930], "1612j": 1260, "3693": 1260, "4481j": 1260, "aa": 1261, "pinv": [1261, 1266, 1731], "moor": [1261, 1278], "penros": [1261, 1278], "ainv": [1261, 1262, 1282, 1286], "1921e": 1261, "9073e": [1261, 1504], "5107e": 1261, "ldl": [1263, 1265], "indefinit": 1263, "ld": [1263, 1264, 1265, 1897], "sytrf": [1263, 1264], "ldl_solv": 1263, "ldl_factor_ex": [1263, 1265], "2079": [1263, 1264, 1954], "2414": [1263, 1264], "9428": [1263, 1264], "4554": [1263, 1264], "3264": [1263, 1264], "3823": [1263, 1264], "5884": [1263, 1264], "9595": [1263, 1264, 1796], "2695": [1263, 1264], "8513": [1263, 1264], "1633": [1263, 1264], "ldl_factor": 1264, "rcond": [1266, 1278, 1731, 1897], "_f": 1266, "gelsi": 1266, "gelsd": 1266, "gelss": 1266, "tridiagon": 1266, "sigma_i": [1266, 1284, 1840], "residu": [1266, 1293, 1897, 1930], "singular_valu": [1266, 1897], "lh": 1266, "rh": [1266, 1311], "0838": [1266, 1930], "2275": [1266, 1341], "3844": 1266, "5499": 1266, "1175": 1266, "9102": 1266, "0870": 1266, "6772": 1266, "7758": 1266, "5109": 1266, "4382": 1266, "3769": 1266, "1818": 1266, "3450": 1266, "0806": [1266, 1930], "3967": 1266, "3994": 1266, "1521": 1266, "1473": 1266, "9194": 1266, "0458": 1266, "6705": [1266, 1325], "1802": 1266, "4086": 1266, "5152e": 1266, "5007": 1267, "9755": 1267, "0489": 1267, "9644": [1267, 1320], "9605e": 1267, "0376e": 1267, "lu_factor_ex": [1268, 1310], "lu_unpack": [1268, 1310, 1897, 1939], "b1": 1268, "b2": [1268, 1922, 1928], "a_factor": 1268, "getrf": [1269, 1282], "adjoint": [1270, 1897, 1939, 1957, 1959], "_exp": 1272, "3891": 1272, "8660": 1272, "ord": [1273, 1277, 1290, 1680, 1897, 1899, 1939], "la": [1273, 1277, 1290, 1930], "2829": 1273, "2627": 1273, "0756": 1274, "4980": 1274, "6617": 1274, "4994": 1274, "9980": 1274, "2731": 1274, "8001": 1274, "2640": 1274, "4571": 1274, "5511": 1274, "0163": [1274, 1320], "5292": 1274, "4899": 1274, "0822": 1274, "2773": [1274, 1914], "varepsilon": [1275, 1278, 1501], "tol": [1275, 1293, 1897], "fewest": 1276, "nd": [1276, 1933], "bc": [1276, 1940], "75000": 1276, "148": 1276, "vector_norm": [1277, 1680], "matrix_norm": [1277, 1290, 1641, 1680], "7460": [1277, 1680], "3485": 1277, "8570e": 1277, "8480": 1277, "2361": [1277, 1680, 1681], "7417": [1277, 1680], "computation": [1278, 1927], "5495": [1278, 1341], "0979": 1278, "4092": 1278, "4132": [1278, 1802], "1143": 1278, "3662": 1278, "6374": 1278, "9294": 1278, "3269": [1278, 1930], "5745": [1278, 1834, 1835, 1881, 1882], "0382": [1278, 1342], "5922": 1278, "6759": 1278, "0600": 1278, "1933": 1278, "2090": 1278, "0903": 1278, "0817": 1278, "4752": [1278, 1839], "7124": 1278, "1631": 1278, "2272": 1278, "1356": 1278, "3933": 1278, "5023": 1278, "0308": 1278, "1725": 1278, "5216": 1278, "apinv": 1278, "5633e": 1278, "0830e": 1278, "wide": [1279, 1284, 1640, 1798, 1921, 1924, 1930, 1940], "51": [1279, 1451, 1739], "167": [1279, 1739], "68": [1279, 1739, 1896, 1898], "8571": [1279, 1739], "3943": [1279, 1739], "3314": [1279, 1739], "4286": [1279, 1739], "9029": [1279, 1739], "0343": [1279, 1739], "2857": [1279, 1739], "1714": [1279, 1739, 1930], "9429": [1279, 1739], "175": [1279, 1739], "q2": 1279, "r2": [1279, 1492], "6099e": 1279, "2158e": 1279, "logabsdet": [1280, 1897], "0032": 1280, "1219": [1280, 1758], "6690": 1280, "1161": 1280, "4053": 1280, "6218": [1280, 1853], "9273": 1280, "0082": 1280, "7576": 1280, "logdet": [1280, 1897, 1939], "linalg_slogdet": [1280, 1897, 1939], "2776": 1280, "solve_triangular": [1281, 1863], "expand_a": [1281, 1897, 1924, 1939, 1957], "rectangular": [1283, 1284, 1312, 1917], "triu_": [1283, 1897], "tril_": [1283, 1897], "full_matric": [1284, 1285, 1645, 1840, 1895, 1897], "vh": [1284, 1645, 1840, 1895, 1897], "gesvdj": [1284, 1285, 1840], "jacobi": 1284, "gesvda": [1284, 1285], "gesvd": [1284, 1285, 1840], "u_k": 1284, "v_k": 1284, "sigma_j": [1284, 1840], "eigendecomposit": 1284, "0486e": 1284, "0957e": 1284, "5139": 1285, "1087": 1285, "1066": 1285, "ind": [1286, 1287, 1897, 1925], "tensorsolv": 1286, "atensorinv": 1286, "movedim": [1287, 1327, 1897, 1925, 1939, 1957], "tensorinv": 1287, "vandermond": [1288, 1880], "pmatrix": 1288, "x_n": [1288, 1369, 1370, 1413, 1414, 1420, 1444, 1484, 1861, 1919], "125": [1288, 1471, 1880, 1897], "overlin": [1289, 1883], "3223": 1289, "2815": 1289, "1944": [1289, 1930], "4345": 1290, "pickle_modul": [1292, 1771], "weights_onli": [1292, 1893, 1908], "mmap": [1292, 1911], "pickle_load_arg": 1292, "register_packag": [1292, 1935], "binaryio": [1292, 1771, 1941], "mmape": 1292, "untrust": [1292, 1893, 1908, 1941], "unsaf": [1292, 1642, 1645, 1897, 1922, 1941], "tamper": [1292, 1941], "ram": [1292, 1922], "surg": 1292, "decod": [1292, 1496, 1497, 1498, 1633, 1941], "utf": [1292, 1937, 1941], "unicodedecodeerror": 1292, "codec": 1292, "0x": 1292, "latin1": 1292, "byte_arrai": 1292, "niter": [1293, 1729, 1841], "ortho_iparam": 1293, "ortho_fparam": 1293, "ortho_bparam": 1293, "knyazev": 1293, "knyazev2001": 1293, "stathopoulosetal2002": 1293, "converg": [1293, 1484, 1640, 1696, 1697, 1721, 1918, 1930, 1933], "precondition": 1293, "eigenpair": 1293, "criterion": [1293, 1369, 1370, 1387, 1389, 1414, 1420, 1444, 1445, 1456, 1457, 1458, 1484, 1485, 1501, 1502, 1535, 1714, 1746, 1926], "fep": 1293, "eigenproblem": 1293, "iparam": 1293, "fparam": 1293, "bparam": 1293, "ivar": 1293, "fvar": 1293, "bvar": 1293, "tvar": 1293, "istep": 1293, "converged_count": 1293, "rerr": 1293, "force_stop": 1293, "2001": 1293, "precondit": 1293, "eigensolv": 1293, "siam": 1293, "sci": 1293, "517": 1293, "541": 1293, "epub": 1293, "doi": [1293, 1407, 1804], "1137": 1293, "s1064827500366124": 1293, "andrea": 1293, "stathopoulo": 1293, "kesheng": 1293, "2002": [1293, 1804], "2165": 1293, "2182": 1293, "s1064827500370883": 1293, "duerschetal2018": 1293, "jed": 1293, "duersch": 1293, "meiyu": 1293, "shao": 1293, "chao": 1293, "ming": 1293, "gu": 1293, "c655": 1293, "c676": 1293, "17m1129830": 1293, "log_": [1294, 1295, 1296, 1297, 1897, 1912], "7767": 1294, "3234": 1294, "2156": 1294, "2411": 1294, "5739": 1294, "5637": 1294, "4640": 1294, "1952": 1294, "4226": 1294, "5204": [1294, 1748], "5224": 1295, "9354": 1295, "7257": 1295, "1301": 1295, "2820": 1295, "0290": 1295, "1392": 1295, "8857": 1295, "6476": 1295, "0090": [1296, 1355, 1735, 1954], "9923": 1296, "5372": 1296, "2492": 1296, "8653": 1296, "7055": 1296, "7705": 1296, "2225": 1296, "8419": 1297, "8003": [1297, 1934], "9971": 1297, "5287": 1297, "0490": 1297, "2483": 1297, "0042": 1297, "9196": 1297, "3504": [1297, 1856], "logsumexp": [1298, 1897, 1912, 1939, 1954], "3069": 1298, "6867": 1298, "8731": 1298, "30000": 1298, "1269e": 1298, "log_2": 1299, "logaddexp": [1299, 1897, 1939], "limits_": 1300, "42296738": 1300, "04462666": 1300, "86278635": 1300, "94622083": 1300, "05277811": 1300, "39202815": 1300, "83525007": 1300, "84492621": 1300, "06084887": 1300, "06844475": 1300, "2611": [1301, 1853], "9254": 1301, "6213": [1301, 1930], "6843": 1301, "3242": 1301, "9665": 1301, "4539": 1301, "0887": [1301, 1954], "1336": 1301, "4025": 1301, "7089": [1301, 1396], "9032": 1301, "3031": 1301, "2589": 1307, "1135": 1307, "5481": [1307, 1320, 1930], "9566": 1307, "sum_j": [1308, 1443, 1486, 1488, 1608, 1819, 1954], "0593": [1308, 1930], "5696": 1308, "6859e": 1308, "compute_pivot": 1310, "transposit": [1310, 1860, 1953], "perm": 1310, "a_lu": 1310, "5558": 1310, "1684": 1310, "1551": 1310, "1940": 1310, "6189": 1310, "5497": 1310, "4526": 1310, "2526": 1310, "3285": 1310, "7988": 1310, "7175": 1310, "9701": 1310, "2634": 1310, "9255": 1310, "3459": 1310, "00000e": 1311, "8312": 1311, "unpack_data": [1312, 1897], "unpack_pivot": [1312, 1897], "l_": [1312, 1358, 1362, 1366, 1370, 1381, 1382, 1383, 1384, 1421, 1446], "u_": [1312, 1694, 1698], "3552": [1314, 1544], "3825": 1314, "8297": 1314, "3477": 1314, "2035": [1314, 1834, 1835, 1881, 1882], "2252": [1314, 1954], "5002": 1314, "6248": [1314, 1323], "1307": 1314, "0608": [1314, 1813], "1244": 1314, "0139": 1314, "6763": 1318, "7445": 1318, "2369": 1318, "argmax": [1318, 1361, 1446, 1576, 1577, 1578, 1851, 1895, 1897, 1939], "max_indic": 1318, "2360": 1318, "2942": 1318, "1222": [1318, 1930], "8475": 1318, "1949": 1318, "1127": 1318, "6702": 1318, "5717": 1318, "9207": 1318, "1297": 1318, "8768": 1318, "6172": 1318, "6060": 1318, "2432": 1318, "3288": 1320, "3367": 1320, "nanmean": [1320, 1897, 1939], "3841": 1320, "6320": 1320, "4254": 1320, "7384": 1320, "0131": 1320, "6549": [1320, 1796], "4279": 1320, "3350": 1320, "7694": 1320, "5600": [1320, 1505], "0842": 1320, "9580": 1320, "3623": 1320, "2343": [1320, 1914], "5085": 1320, "4599": 1320, "1807": 1320, "5219": 1321, "5212": 1321, "2202": 1321, "2505": 1321, "3982": 1321, "9948": 1321, "3518": 1321, "3131": 1321, "3180": [1321, 1953], "6993": 1321, "0436": 1321, "0438": 1321, "2270": 1321, "2751": 1321, "7303": 1321, "2192": 1321, "3321": 1321, "2488": 1321, "0778": 1321, "9510": 1321, "7048": 1321, "4742": [1321, 1869, 1954], "7125": [1321, 1821], "plot": [1322, 1921, 1943, 1958], "t_0": [1322, 1714], "s_0": 1322, "s_": [1322, 1359, 1360, 1399, 1503], "g_0": 1322, "g_": [1322, 1698, 1708, 1709], "g_i": 1322, "t_i": 1322, "0d": [1322, 1445], "xy": 1322, "50276": 1322, "cartesian_prod": [1322, 1897, 1939], "grid_x": 1322, "grid_i": 1322, "dstack": [1322, 1897, 1939, 1953], "matplotlib": [1322, 1958], "pyplot": [1322, 1958], "plt": 1322, "plot_surfac": 1322, "6750": 1323, "0857": [1323, 1866], "7197": [1323, 1889], "argmin": [1323, 1895, 1897, 1939], "min_indic": [1323, 1897], "1334": 1323, "2803": 1323, "4644": [1323, 1834, 1835, 1881, 1882], "2635": [1323, 1930], "3651": 1323, "0384": 1323, "0128": 1323, "7015": 1323, "1153": 1323, "9849": 1323, "1458": [1323, 1954], "5788": 1323, "deduc": [1325, 1953], "4851": 1325, "5037": 1325, "3633": 1325, "0760": 1325, "3362": [1327, 1328], "8437": [1327, 1328], "9627": [1327, 1328], "1727": [1327, 1328], "5173": [1327, 1328], "1398": [1327, 1328], "mpsalloc": [1329, 1330], "metal": [1330, 1338, 1907, 1910, 1931], "mpsgraph": 1330, "wait_until_complet": [1334, 1335], "signpost": [1334, 1335, 1336], "xcode": 1335, "recommendedmaxworkingsets": 1338, "unlimit": [1338, 1922], "1321": 1341, "4370": [1341, 1953], "1289": 1341, "0527": 1341, "3077": [1341, 1830], "0881": 1341, "1259": 1341, "0284": 1341, "2015": [1342, 1917, 1930], "6087": 1342, "1494": 1342, "5491": 1342, "260": 1342, "8663": 1342, "3137": 1342, "0700": 1342, "8378": 1342, "5146": 1342, "1216": 1342, "5244": 1342, "5767": 1342, "1363": 1342, "5877": 1342, "5083": 1342, "1614": 1342, "1645": 1342, "7021": 1342, "0085": 1342, "0367": 1342, "1567": 1342, "4312": 1342, "1019": 1342, "4394": 1342, "8753": 1342, "_sampl": 1343, "thtensorrandom": 1343, "320": [1343, 1479], "0404": 1345, "6361": 1345, "multigammaln": [1346, 1954], "4028e": 1347, "1400e": 1347, "isnan": [1348, 1895, 1897, 1939, 1953], "midpoint": [1350, 1740], "weakli": [1352, 1353, 1954], "to_spars": [1353, 1817, 1897, 1934, 1939, 1953], "2262": [1355, 1735], "0682": [1355, 1735], "2866": [1355, 1735], "3940": [1355, 1735], "5x7": [1359, 1363], "7x7": [1359, 1363], "10x7": [1359, 1363], "cube": [1360, 1364, 1746], "d_": [1360, 1364, 1368, 1380, 1383, 1386, 1448, 1451, 1476, 1479, 1505, 1510, 1552, 1864, 1865, 1866, 1867], "5x7x9": [1360, 1364], "7x7x7": [1360, 1364], "7x9x8": [1360, 1364], "n_class": 1361, "cutoff": [1361, 1917], "div_valu": 1361, "head_bia": 1361, "edouard": 1361, "grave": [1361, 1376], "armand": 1361, "joulin": 1361, "moustapha": 1361, "ciss\u00e9": 1361, "grangier": 1361, "herv\u00e9": 1361, "j\u00e9gou": 1361, "imbalanc": 1361, "zipf": 1361, "law": 1361, "1001": 1361, "1002": 1361, "_class": 1361, "maxunpool1d": [1362, 1446, 1579, 1875], "maxunpool2d": [1363, 1401, 1447, 1580, 1875], "maxunpool3d": [1364, 1402, 1448, 1581, 1875], "selu": [1365, 1398, 1545, 1897, 1917, 1937, 1939], "n_i": [1366, 1367, 1368, 1381, 1382, 1383, 1446, 1447, 1448, 1501, 1502], "c_j": [1366, 1367, 1368, 1446, 1447, 1448], "size_averag": [1369, 1370, 1387, 1389, 1413, 1419, 1420, 1444, 1445, 1456, 1457, 1458, 1460, 1467, 1484, 1485, 1501, 1524, 1525, 1533, 1535, 1560, 1564, 1565, 1575, 1583, 1584, 1585, 1586, 1587, 1595, 1606, 1607, 1618, 1897], "unreduc": [1369, 1370, 1389, 1414, 1420, 1444, 1460, 1484, 1502], "ell": [1369, 1370, 1389, 1413, 1414, 1420, 1444, 1460, 1484, 1502], "l_1": [1369, 1370, 1389, 1413, 1414, 1420, 1444, 1460, 1484, 1502], "l_n": [1369, 1370, 1389, 1413, 1414, 1420, 1444, 1460, 1484, 1502], "w_n": [1369, 1370, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804], "y_n": [1369, 1370, 1389, 1413, 1414, 1420, 1444, 1460, 1484, 1861, 1919], "lim_": [1369, 1919], "secondli": 1369, "straight": [1369, 1554], "rescal": [1369, 1370, 1389, 1457, 1458, 1460, 1486, 1488, 1524, 1525, 1535, 1587, 1645, 1674], "nbatch": [1369, 1370], "pos_weight": [1370, 1525, 1897], "classif": [1370, 1376, 1389, 1456, 1458, 1460, 1485, 1536, 1894, 1917, 1945], "ell_c": 1370, "l_c": 1370, "p_c": 1370, "pai": [1370, 1525, 1936, 1957], "spacial": [1370, 1525], "random_": [1370, 1389, 1460, 1525, 1897, 1912, 1961], "hat": [1371, 1372, 1373, 1416, 1417, 1418, 1492], "terminologi": [1371, 1372, 1373, 1492], "tempor": [1371, 1373, 1376, 1492, 1505, 1536, 1563, 1621], "5d": [1373, 1418, 1505, 1552, 1563, 1590, 1621], "volumetr": [1373, 1492, 1505, 1552, 1563, 1621, 1622, 1623], "spatio": [1373, 1492], "in1_featur": 1374, "in2_featur": 1374, "in1": [1374, 1523], "in2": [1374, 1523], "blank": [1376, 1536, 1897, 1900], "zero_infin": [1376, 1536, 1897], "connectionist": [1376, 1536], "unseg": 1376, "longest": [1376, 1667, 1669, 1670, 1926], "input_length": [1376, 1536, 1897, 1926], "target_length": [1376, 1536, 1897], "s_n": 1376, "target_n": 1376, "unbatch": [1376, 1389, 1400, 1405, 1416, 1423, 1459, 1468, 1496, 1546], "s_min": 1376, "toronto": 1376, "edu": [1376, 1746], "icml_2006": 1376, "256": [1376, 1736, 1922, 1937], "background": [1376, 1384, 1552, 1590, 1932, 1949], "channel_shuffl": [1377, 1897, 1939], "_left": [1378, 1379, 1380, 1474, 1475, 1476, 1477, 1478, 1479, 1508, 1509, 1510, 1590], "_right": [1378, 1379, 1380, 1474, 1475, 1476, 1477, 1478, 1479, 1508, 1509, 1510, 1590], "0491": [1378, 1508], "7152": [1378, 1508], "0749": [1378, 1508], "3287": [1378, 1508], "8966": [1378, 1508], "1466": [1378, 1508], "2771": [1378, 1508], "6616": [1378, 1508], "4523": [1378, 1508], "1255": [1378, 1508], "6372": [1378, 1508, 1840], "1182": [1378, 1508], "8652": [1378, 1508], "_top": [1379, 1380, 1475, 1476, 1478, 1479, 1509, 1510, 1590], "_bottom": [1379, 1380, 1475, 1476, 1478, 1479, 1509, 1510, 1590], "6585": 1379, "4320": [1379, 1849], "8701": 1379, "4649": 1379, "_front": [1380, 1476, 1479, 1510, 1590], "_back": [1380, 1476, 1479, 1510, 1590], "_j": [1381, 1382], "star": [1381, 1382, 1383, 1899], "\u00e0": [1381, 1382, 1383, 1384, 1385, 1386, 1400, 1504], "trou": [1381, 1382, 1383, 1384, 1385, 1386, 1400, 1504], "harder": [1381, 1382, 1383, 1384, 1385, 1386, 1400, 1447, 1448, 1504], "prod_": [1382, 1383, 1385, 1386, 1399, 1503, 1700], "out_j": 1383, "deconvolut": [1384, 1385, 1386, 1530, 1531, 1532], "_pad": [1384, 1385, 1386], "dissimilar": [1387, 1413], "semi": [1387, 1413, 1894, 1917], "supervis": [1387, 1413], "vert": [1388, 1462, 1534], "_2": [1388, 1534, 1641, 1674], "ast_1": [1388, 1404], "ast_2": [1388, 1404], "ignore_index": [1389, 1460, 1535, 1587, 1897], "label_smooth": [1389, 1535, 1897], "unbalanc": [1389, 1460], "d_1": [1389, 1460, 1535, 1587], "d_2": [1389, 1460, 1535, 1587], "d_k": [1389, 1460, 1535, 1587], "_index": [1389, 1460], "logsoftmax": [1389, 1460, 1486, 1571], "nllloss": [1389, 1486, 1587, 1608, 1875], "blend": 1389, "smooth": [1389, 1414, 1484, 1489, 1535, 1707], "w_c": 1389, "truth": [1389, 1535, 1906, 1958], "rethink": [1389, 1535], "incept": [1389, 1535], "spectral_norm": [1390, 1664], "neuron": 1391, "detector": 1391, "dropout1d": [1393, 1897], "_freez": 1396, "sparseadam": [1396, 1940], "0251": 1396, "6902": [1396, 1737], "7172": 1396, "6431": 1396, "0748": 1396, "6969": 1396, "4970": 1396, "3448": 1396, "9685": 1396, "3677": 1396, "7265": 1396, "1685": 1396, "4362": 1396, "4004": [1396, 1821], "9400": 1396, "9124": 1396, "3616": 1396, "1151": 1396, "0309": 1396, "9315": 1396, "1655": [1396, 1922], "9897": 1396, "0635": 1396, "7895": 1396, "0364": 1396, "6778": 1396, "5803": 1396, "bag": [1397, 1544], "per_sample_weight": [1397, 1544, 1897], "embedding_sum": 1397, "8861": 1397, "4350": 1397, "0523": 1397, "1306": 1397, "5798": 1397, "0044": 1397, "7082": [1397, 1544], "2145": [1397, 1544], "6251": [1397, 1544], "6500": 1397, "satur": [1398, 1545], "alphadropout": [1398, 1518], "160": [1399, 1940], "unfold": [1400, 1897, 1939, 1957], "prod_d": [1400, 1504], "neighborhood": [1400, 1504], "col2im": [1400, 1895, 1897, 1939], "fold_param": [1400, 1504], "input_on": [1400, 1504], "output_ratio": [1401, 1402, 1547, 1548, 1897], "_random_sampl": [1401, 1402, 1547, 1548, 1897], "ben": [1401, 1402, 1547, 1548], "graham": [1401, 1402, 1547, 1548], "oh": [1401, 1402, 1547, 1548], "ow": [1401, 1402, 1547, 1548], "_ratio": [1401, 1402, 1548], "13x12": [1401, 1547], "kt": [1402, 1521, 1529, 1532, 1548, 1578], "ot": [1402, 1548], "13x12x11": [1402, 1548], "044715": [1403, 1550], "pack_sequ": [1405, 1423, 1468, 1669, 1671], "bias_ih": [1406, 1424, 1470], "bias_hh": [1406, 1424, 1470], "const": [1407, 1929], "homoscedast": [1407, 1549], "heteroscedast": [1407, 1549], "nix": 1407, "weigend": 1407, "1994": 1407, "icnn": 1407, "94": 1407, "orlando": 1407, "fl": 1407, "usa": [1407, 1958], "374138": 1407, "instancenorm": [1408, 1946], "shrinkag": [1409, 1490, 1555, 1611], "mobilenetv3": [1411, 1557], "_val": 1412, "l1loss": [1414, 1484, 1565], "outlier": [1414, 1484, 1944, 1945], "huber": [1414, 1484], "smoothl1loss": [1414, 1606], "insensit": 1415, "unused_argument1": 1415, "unused_argument2": 1415, "ingredi": [1416, 1417, 1418], "styliz": [1416, 1417, 1418], "rgb": [1417, 1418, 1958], "log_target": [1419, 1564, 1897], "kl": [1419, 1564, 1894], "summaris": 1419, "loss_pointwis": 1419, "batchmean": [1419, 1564], "kl_loss": 1419, "mae": 1420, "f_t": [1423, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "hf": [1423, 1424], "g_t": [1423, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "ig": [1423, 1424], "hg": [1423, 1424], "o_t": 1423, "ho": [1423, 1424], "c_t": 1423, "odot": 1423, "forget": [1423, 1898, 1899], "proj_siz": [1423, 1469], "1402": 1423, "c_0": [1423, 1424], "proj": 1423, "c_n": 1423, "w_ii": 1423, "w_if": 1423, "w_ig": 1423, "w_io": 1423, "w_hi": 1423, "w_hf": 1423, "w_hg": 1423, "w_ho": 1423, "b_ii": 1423, "b_if": 1423, "b_ig": 1423, "b_io": 1423, "b_hi": 1423, "b_hf": 1423, "b_hg": 1423, "b_ho": 1423, "weight_hr_l": 1423, "_revers": 1423, "h_1": 1424, "c_1": 1424, "time_step": 1424, "_shape": 1425, "sentence_length": 1425, "lazymodulemixin": [1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438], "cls_to_becom": [1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1636], "convtranspose1d": [1432, 1530, 1875, 1946], "convtranspose3d": [1434, 1532, 1875, 1946], "instancenorm1d": [1435, 1562, 1946], "instancenorm2d": [1436, 1562, 1946], "instancenorm3d": [1437, 1562, 1946], "uninitializedparamet": [1438, 1624, 1894], "lrn": 1441, "signal_2d": 1441, "signal_4d": 1441, "output_2d": 1441, "output_4d": 1441, "x_j": [1443, 1486, 1488, 1608, 1819, 1927, 1954], "80827": [1449, 1450, 1451], "unpool": [1449, 1450, 1451], "maxpool3d": [1451, 1578, 1581, 1875, 1946], "unpooled_output": 1451, "t_destin": 1453, "lrelu": [1454, 1930], "hing": [1456, 1458], "sum_i": [1457, 1458, 1485], "nelement": [1457, 1485], "jointli": 1459, "concat": [1459, 1897, 1939], "head_1": 1459, "head_h": 1459, "head_i": 1459, "qw_i": 1459, "kw_i": 1459, "vw_i": 1459, "scaled_dot_product_attent": [1459, 1897, 1939], "inference_mod": [1459, 1500], "nestedtensor": [1459, 1500, 1914], "multihead_attn": 1459, "e_q": 1459, "e_k": 1459, "e_v": 1459, "_head": [1459, 1496], "merge_mask": 1459, "mask_typ": 1459, "merged_mask": 1459, "nll": 1460, "crossentropyloss": [1460, 1535], "num_paramet": 1461, "nchannel": 1461, "decai": [1461, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1709, 1712, 1716, 1718, 1719, 1722, 1723, 1725, 1797, 1940], "legitim": [1461, 1552, 1925], "vert_p": 1462, "fromkei": 1463, "popitem": [1463, 1939], "setdefault": [1463, 1939], "upscale_factor": [1465, 1593, 1897], "upscal": 1465, "shi": [1465, 1466], "2016": [1465, 1466, 1502], "_factor": [1465, 1466, 1505, 1506, 1507], "pixel_shuffl": [1465, 1897, 1939, 1946], "downscale_factor": [1466, 1594, 1897], "pixelshuffl": [1466, 1593, 1594, 1946], "downscal": 1466, "pixel_unshuffl": [1466, 1897, 1939, 1946], "log_input": [1467, 1595, 1897], "poisson": [1467, 1595, 1797, 1894, 1897, 1939], "stirl": [1467, 1595], "hh": [1468, 1470], "flatten_paramet": 1469, "3333333333333333": [1471, 1712, 1718, 1897], "leaki": [1471, 1600, 1917], "rectifi": [1471, 1472, 1597, 1917], "liner": 1471, "empir": 1471, "1505": 1471, "00853": 1471, "crelu": 1472, "1603": 1472, "05201": 1472, "480": 1479, "6732632423543772848170429916717": [1480, 1603], "0507009873554804934193349852946": [1480, 1603], "kaiming_norm": 1480, "kaiming_normal_": [1480, 1894, 1901, 1917], "initialis": 1480, "calculate_gain": [1480, 1894, 1901, 1917], "modulelist": [1481, 1930], "cascad": 1481, "relu2": [1481, 1624], "swish": [1482, 1605], "coin": [1482, 1605], "explod": 1484, "cnn": [1484, 1944], "ross": 1484, "girshick": 1484, "quadrat": [1484, 1926], "huberloss": [1484, 1561], "w_j": 1487, "soft": [1490, 1554, 1611], "softshrinkag": 1490, "convert_sync_batchnorm": 1492, "r1": 1492, "sync_bn_network": 1492, "ddp_sync_bn_network": 1492, "sync_bn_modul": 1492, "d_model": [1496, 1497, 1498, 1499, 1500], "nhead": [1496, 1497, 1498, 1499, 1500], "num_encoder_lay": 1496, "num_decoder_lay": 1496, "dim_feedforward": [1496, 1498, 1500], "custom_encod": 1496, "custom_decod": 1496, "layer_norm_ep": [1496, 1498, 1500], "norm_first": [1496, 1498, 1500], "ashish": [1496, 1498, 1500], "vaswani": [1496, 1498, 1500], "noam": [1496, 1498, 1500], "shazeer": [1496, 1498, 1500], "niki": [1496, 1498, 1500], "parmar": [1496, 1498, 1500], "jakob": [1496, 1498, 1500], "uszkoreit": [1496, 1498, 1500], "llion": [1496, 1498, 1500], "jone": [1496, 1498, 1500], "aidan": [1496, 1498, 1500], "gomez": [1496, 1498, 1500], "lukasz": [1496, 1498, 1500], "illia": [1496, 1498, 1500], "polosukhin": [1496, 1498, 1500], "6000": [1496, 1498, 1500, 1505, 1743, 1791, 1794], "6010": [1496, 1498, 1500], "feedforward": [1496, 1498, 1500, 1917], "transformer_model": 1496, "word_language_model": 1496, "src_mask": [1496, 1500], "tgt_mask": [1496, 1497, 1498], "memory_mask": [1496, 1497, 1498], "src_key_padding_mask": [1496, 1499, 1500], "tgt_key_padding_mask": [1496, 1497, 1498], "memory_key_padding_mask": [1496, 1497, 1498], "_mask": [1496, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663], "_key_padding_mask": 1496, "generate_square_subsequent_mask": 1496, "sz": 1496, "decoder_lay": [1497, 1498], "transformerdecoderlay": 1497, "transformer_decod": 1497, "tgt_is_caus": [1497, 1498], "memory_is_caus": [1497, 1498], "attn": [1498, 1500], "encoder_lay": [1499, 1500], "enable_nested_tensor": 1499, "mask_check": 1499, "1810": 1499, "04805": 1499, "transformerencoderlay": 1499, "transformer_encod": 1499, "flashattent": [1500, 1602], "triplet": [1501, 1502], "x3": 1501, "balnta": [1501, 1502], "riba": [1501, 1502], "a_i": [1501, 1502, 1799], "p_i": [1501, 1502], "rm": [1501, 1502], "bf": [1501, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "rvert_p": [1501, 1588], "tripletmarginwithdistanceloss": [1501, 1619], "triplet_loss": [1501, 1502], "distance_funct": [1502, 1619], "l_i": 1502, "tripletmarginloss": [1502, 1618], "l_p": [1502, 1588], "pairwisedist": [1502, 1591], "penal": [1502, 1930], "distant": 1502, "anchor_id": 1502, "positive_id": 1502, "negative_id": 1502, "l_infin": 1502, "bmva": 1502, "bmvc": 1502, "paper119": 1502, "unflattened_s": 1503, "namedtensor": 1503, "namedshap": 1503, "u_1": 1503, "u_n": 1503, "u_i": 1503, "im2col": [1504, 1897, 1939], "fold": [1504, 1841, 1897, 1907, 1937, 1947, 1953], "2x3": 1504, "3x4": 1504, "inp_unf": 1504, "out_unf": 1504, "recompute_scale_factor": [1505, 1563], "bicub": [1505, 1552, 1563, 1621, 1875], "trilinear": [1505, 1552, 1563, 1621, 1875], "input_3x3": 1505, "4375": 1505, "8125": 1505, "9375": 1505, "2400": [1505, 1856], "1200": [1505, 1768, 1922], "8800": 1505, "4400": [1505, 1856], "7200": 1505, "0400": 1505, "2800": [1505, 1791], "3600": 1505, "5200": 1505, "6400": 1505, "1678": 1509, "4418": 1509, "9466": [1509, 1954], "9604": 1509, "4219": 1509, "5241": 1509, "9162": 1509, "5436": [1509, 1856], "6446": 1509, "adaptiveavgpool1d": [1511, 1946], "tripl": [1513, 1516], "adaptivemaxpool1d": 1514, "adaptivemaxpool2d": [1515, 1875], "adaptivemaxpool3d": 1516, "ill": [1517, 1933], "avgpool1d": [1519, 1946], "avgpool3d": [1521, 1875, 1946], "iT": [1521, 1529, 1532], "padt": [1521, 1529, 1532], "score": [1525, 1602, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660, 1894], "out_padw": [1530, 1531, 1532], "out_padh": [1531, 1532], "out_padt": 1532, "cosineembeddingloss": 1533, "ctcloss": [1536, 1875], "charact": [1536, 1788, 1896, 1899, 1913, 1949], "elu": [1542, 1897, 1937, 1939, 1946], "embedding_matrix": [1543, 1544], "8490": 1543, "9625": 1543, "6753": 1543, "7761": 1543, "6108": 1543, "6246": 1543, "9751": 1543, "3618": 1543, "4161": [1543, 1953], "2419": 1543, "7383": 1543, "0237": 1543, "7794": 1543, "0528": 1543, "3385": 1543, "8612": 1543, "1867": 1543, "5384": 1543, "8720": 1543, "6262": 1543, "7471": 1543, "embeddingbag": [1544, 1875, 1944, 1946, 1959], "3397": 1544, "5545": 1544, "5893": 1544, "4386": 1544, "5882": 1544, "featurealphadropout": 1545, "gaussiannllloss": 1549, "border": 1552, "affine_grid": [1552, 1897], "extrema": 1552, "pil": [1552, 1563], "overshoot": [1552, 1563, 1621], "gumbel": [1554, 1894], "y_hard": 1554, "y_soft": 1554, "hardtanh": [1559, 1895, 1897, 1907, 1939, 1946], "hingeembeddingloss": 1560, "use_input_stat": [1562, 1897], "antialia": 1563, "anti": 1563, "pillow": [1563, 1958], "buggi": 1563, "inter_nearest": 1563, "104157": 1563, "kldivloss": 1564, "batchsiz": [1564, 1822, 1823, 1824, 1826, 1827, 1953], "leaky_relu": [1568, 1895, 1897, 1917, 1939, 1946], "localresponsenorm": 1570, "_stacklevel": [1571, 1608, 1609, 1897], "lppool1d": 1573, "lppool2d": 1574, "marginrankingloss": 1575, "max_unpool1d": [1576, 1897], "multimarginloss": 1584, "multilabelmarginloss": 1585, "multilabelsoftmarginloss": 1586, "n_0": 1588, "n_": 1588, "n_k": 1588, "everywher": [1589, 1836, 1940], "constantpad2d": 1590, "reflectionpad2d": [1590, 1875], "replicationpad2d": [1590, 1875], "t4d": 1590, "p1d": 1590, "p2d": 1590, "p3d": 1590, "pixelunshuffl": [1594, 1946], "poissonnllloss": 1595, "rrelu": [1601, 1897, 1939], "dropout_p": [1602, 1897], "attn_bia": 1602, "temp_mask": 1602, "ev": 1602, "legend": 1602, "softmarginloss": 1607, "module_kwarg": 1617, "upsample_trilinear": 1622, "fo": 1622, "spatia": 1623, "mixin": [1624, 1894], "dry": 1624, "lazymlp": 1624, "lazylinear": 1624, "lazy_mlp": 1624, "8832e": 1624, "5636e": 1624, "1598e": 1624, "5637e": 1624, "8788e": 1624, "0042e": 1624, "0019": 1624, "lazymodul": 1624, "full_mlp": 1624, "3837": [1624, 1737], "0907": 1624, "6708": 1624, "5223": 1624, "9028": 1624, "2851": 1624, "6813": 1624, "5766": 1624, "8678": 1624, "1320": 1624, "2938": 1624, "0679": [1624, 1866], "2793": [1624, 1681], "1088": 1624, "1795": 1624, "2301": 1624, "2807": 1624, "2479": 1624, "1091": 1624, "has_uninitialized_param": 1624, "initialize_paramet": 1624, "register_backward_pre_hook": 1630, "check_reduct": 1633, "delay_all_reduce_named_param": 1633, "param_to_hook_all_reduc": 1633, "optimizer_param": 1633, "loss_func": [1633, 1949], "consume_prefix_in_state_dict_if_pres": 1633, "nccl2": 1633, "dictat": [1633, 1899], "megabyt": 1633, "mb": [1633, 1922], "detach_": [1633, 1897, 1912, 1946, 1953], "ddp_logging_data": 1633, "can_set_static_graph": 1633, "model_ddp": 1633, "_get_ddp_logging_data": 1633, "divide_by_initial_world_s": 1633, "syncbatchnorm": 1633, "deplet": 1633, "pariti": 1633, "discrep": [1633, 1746, 1927], "another_input": 1633, "predivid": 1633, "encode_and_decod": 1633, "encoded_tensor": 1633, "decoded_tensor": 1633, "error_if_nonfinit": 1637, "foreach": [1637, 1638, 1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1940], "clip_valu": 1638, "orthogonal_map": 1640, "use_trivi": 1640, "qq": 1640, "matrix_exp": [1640, 1897, 1939], "caylei": 1640, "thin": [1640, 1739], "manifold": 1640, "register_parametr": [1640, 1641, 1642, 1643, 1674, 1915], "orth_linear": 1640, "parametrizedlinear": [1640, 1641], "moduledict": [1640, 1641, 1898, 1930], "parametrizationlist": [1640, 1641, 1645], "_orthogon": 1640, "9332e": 1640, "n_power_iter": [1641, 1674], "sn": [1641, 1674], "discrimin": [1641, 1674], "adversari": [1641, 1674], "lipschitz": 1641, "reimplement": [1641, 1674], "_spectralnorm": 1641, "convtranspos": [1641, 1674], "snm": 1641, "0081": 1641, "amaxbackward0": 1641, "original0": [1642, 1645, 1677], "original1": [1642, 1645, 1677], "tensor_nam": [1642, 1644, 1645, 1646], "right_invers": [1642, 1645], "out_rnn": 1643, "rnn_cell": 1643, "simplic": [1645, 1950], "inbuilt": 1645, "unparametr": 1645, "rankon": 1645, "surject": 1645, "s0_sqrt": 1645, "linear_rank_on": 1645, "matrix_rank": 1645, "leave_parametr": 1646, "unparametris": 1646, "prune": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1953], "skeleton": 1647, "compute_mask": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654], "importance_scor": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1656, 1659, 1660], "apply_mask": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654], "pruned_tensor": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654], "default_mask": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654], "_orig": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663], "undon": [1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1663], "unprun": [1650, 1651, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662], "basepruningmethod": [1652, 1658], "add_pruning_method": 1652, "pruning_typ": [1652, 1656], "unstructur": [1652, 1656], "ravel": [1652, 1897, 1939], "nonmask": 1652, "bias_mask": [1655, 1657], "pruning_method": 1656, "parameters_to_prun": 1656, "l1unstructur": 1656, "parameters_to_vector": 1656, "forward_pre_hook": [1658, 1930], "random_unstructur": [1658, 1663], "odict_kei": 1659, "weight_orig": 1659, "weight_mask": [1659, 1662], "columns_prun": 1661, "t_modul": [1664, 1665, 1674, 1677], "weight_norm": 1665, "sorted_indic": [1666, 1668, 1669, 1671], "unsorted_indic": [1666, 1668, 1669, 1671], "abc": [1666, 1899], "axbc": 1666, "throughout": [1666, 1927, 1930, 1944], "conform": [1666, 1930], "is_cuda": [1666, 1912, 1939, 1955], "enforce_sort": [1667, 1668, 1669], "unsort": [1667, 1668, 1775], "shortest": 1667, "uncondition": [1667, 1893, 1924, 1964], "pad_sequ": [1668, 1672, 1897, 1939], "padding_valu": [1669, 1670, 1897], "total_length": [1669, 1926], "seq_unpack": 1669, "lens_unpack": 1669, "packed_sequ": 1671, "unpacked_sequ": 1671, "padded_sequ": 1672, "unpad": 1672, "unstack": 1672, "as_tensor": [1672, 1854, 1897, 1914, 1924, 1939, 1958, 1959, 1960], "unpadded_sequ": 1672, "module_cl": [1673, 1949], "5846e": 1673, "29": [1673, 1804, 1937], "8307e": 1673, "5250e": 1673, "1210e": 1673, "4677e": 1673, "5915e": 1673, "4013e": 1673, "weight_u": 1674, "parameters_and_buff": 1675, "decoupl": [1677, 1697, 1700], "weight_g": [1677, 1897], "weight_v": 1677, "1602": 1677, "07868": 1677, "bother": 1677, "102999": 1677, "remove_parametr": 1677, "as_tupl": [1679, 1889], "complexfloat": [1680, 1689], "0425": 1681, "7969": 1681, "2925": 1681, "7229": 1681, "2134": 1681, "0505": 1681, "1408": 1681, "0563": 1681, "0566": 1681, "0732": [1681, 1856], "0687": 1681, "1177": 1681, "2303": 1681, "1552": 1681, "6148": 1681, "6535": 1681, "8318": 1681, "3987": 1681, "9544": [1681, 1747], "6048": 1681, "7909": 1681, "120": [1683, 1958], "fake_context": [1686, 1687, 1937], "model_proto": [1687, 1688], "input_adapt": 1687, "output_adapt": 1687, "diagnostic_context": [1687, 1690], "adapt_torch_inputs_to_onnx": 1687, "model_arg": [1687, 1937], "model_kwarg": [1687, 1937], "xdoctest": [1687, 1688, 1937], "torch_doctest_onnx": [1687, 1688, 1937], "func_with_nested_input_structur": 1687, "x_dict": 1687, "y_tupl": 1687, "y3": 1687, "export_output": [1687, 1688, 1937], "adapt_torch_outputs_to_onnx": 1687, "model_output": 1687, "func_returning_tupl": 1687, "pt_output": 1687, "diagnosticcontext": 1687, "onnxfakecontext": [1687, 1937], "modelproto": [1687, 1688], "bufferediobas": [1687, 1688], "_initi": 1687, "suffix": [1687, 1958, 1959], "model_initi": 1687, "enable_fake_mod": [1687, 1937], "exportoutputseri": 1687, "protobuf": [1687, 1688, 1937], "exportoutput": [1688, 1937], "mymodel": [1688, 1899, 1918, 1932, 1937], "protobufexportoutputseri": 1688, "serializetostr": 1688, "exported_model": 1688, "from_valu": 1689, "onnx_typ": 1689, "tensorprotodatatyp": 1689, "torch_c_value_with_type_float": 1689, "from_dtyp": 1689, "jit_type_bas": 1689, "safer": [1689, 1906], "onnxexportererror": [1689, 1937], "symbolicvalueerror": 1689, "onnx_compat": 1689, "scalar_nam": 1689, "complexhalf": 1689, "complexdoubl": 1689, "torch_nam": 1689, "int8_t": 1689, "int64_t": 1689, "int16_t": 1689, "enclos": [1690, 1899], "verif": [1691, 1692, 1937], "input_arg": [1691, 1937], "params_dict": 1691, "export_opt": [1691, 1937], "_excluded_node_kind": 1691, "frozenset": [1691, 1899], "scalarimplicit": [1691, 1939], "prim": [1691, 1896, 1937, 1939], "listconstruct": [1691, 1896], "all_mismatch_leaf_graph_info": 1691, "essential_node_count": 1691, "essential_node_kind": 1691, "export_repro": 1691, "repro_dir": 1691, "test_": 1691, "test_data_set_0": 1691, "input_0": [1691, 1937], "pb": [1691, 1937], "input_1": [1691, 1937], "output_0": 1691, "output_1": 1691, "find_mismatch": [1691, 1937], "verificationopt": [1691, 1937], "find_partit": 1691, "has_mismatch": 1691, "pretty_print_mismatch": 1691, "pretty_print_tre": 1691, "graph_info": [1691, 1937], "__2": [1691, 1937], "__1": [1691, 1937], "__3": [1691, 1937], "110": [1691, 1937], "verify_export": 1691, "onnx_graph": 1691, "onnx_out": 1691, "pt_out": 1691, "ignore_non": 1692, "check_shap": 1692, "check_dtyp": [1692, 1960], "onnxbackend": 1692, "onnx_runtime_cpu": 1692, "remained_onnx_input_idx": 1692, "acceptable_error_percentag": 1692, "percentag": [1692, 1721, 1797], "weight_decai": [1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1709, 1930], "1e6": 1693, "tensorlist": [1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "prohibit": [1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709, 1922, 1935], "impair": [1693, 1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "register_step_post_hook": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710], "register_step_pre_hook": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710], "new_arg": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710], "new_kwarg": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1706, 1707, 1708, 1709, 1710], "reevalu": [1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1704, 1706, 1707, 1708, 1709, 1710, 1940], "rho": 1694, "110mm": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "4pt": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "textbf": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "theta_0": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "v_0": [1694, 1696, 1697, 1700, 1706, 1707], "leftarrow": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "u_0": [1694, 1698], "hspace": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "5mm": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "nabla_": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "theta_": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "10mm": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "v_t": [1694, 1696, 1697, 1700, 1706, 1707], "v_": [1694, 1696, 1697, 1700, 1706, 1707, 1709], "2_t": [1694, 1695, 1696, 1697, 1700, 1706, 1707], "21mm": 1694, "u_t": [1694, 1698], "theta_t": [1694, 1695, 1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "lr_decai": 1695, "initial_accumulator_valu": 1695, "12mm": [1695, 1706], "_sum_0": 1695, "tild": [1695, 1707], "_sum_t": 1695, "_sum_": 1695, "subgradi": 1695, "999": [1696, 1697, 1698, 1700, 1706, 1710, 1935, 1940], "amsgrad": [1696, 1697], "beta_1": [1696, 1697, 1698, 1700, 1706], "beta_2": [1696, 1697, 1698, 1700, 1706], "13mm": [1696, 1697, 1698, 1700, 1706, 1707, 1708, 1709], "textit": [1696, 1697, 1700, 1709], "m_0": [1696, 1697, 1698, 1700, 1706], "widehat": [1696, 1697, 1700, 1706], "m_t": [1696, 1697, 1698, 1700, 1706], "m_": [1696, 1697, 1698, 1700, 1706, 1953], "ungraph": [1696, 1697], "002": [1698, 1700], "t_1": 1698, "2e": [1698, 1700], "max_it": 1699, "max_ev": 1699, "tolerance_grad": 1699, "tolerance_chang": 1699, "history_s": 1699, "line_search_fn": 1699, "bfg": 1699, "minfunc": 1699, "intens": [1699, 1933], "param_byt": 1699, "strong_wolf": 1699, "momentum_decai": 1700, "004": 1700, "decoupled_weight_decai": 1700, "gamma_t": 1700, "psi": [1700, 1954], "_decai": 1700, "mu_t": 1700, "96": 1700, "mu_": 1700, "11mm": 1700, "incorpor": [1700, 1944], "nesterov": [1700, 1709], "4e": 1700, "adamw": [1700, 1706, 1940], "nadamw": 1700, "weightdecai": 1706, "18mm": 1706, "rho_": 1706, "6mm": 1706, "rho_t": 1706, "t_2": 1706, "l_t": 1706, "_0": [1707, 1925, 1941], "av": 1707, "8mm": 1707, "3mm": 1707, "lectur": 1707, "hinton": 1707, "step_siz": [1708, 1725], "resili": [1708, 1933], "eta_": [1708, 1713, 1714], "etaplu": 1708, "etaminu": 1708, "gamma_": [1708, 1954], "0_": 1708, "eta_0": 1708, "i_": [1708, 1856], "15mm": [1708, 1709], "eta_t": [1708, 1713, 1714], "dampen": 1709, "sutskev": 1709, "veloc": 1709, "conflat": 1710, "is_spars": [1710, 1912, 1939, 1953, 1955], "maskedtensor": [1710, 1953], "rig": 1710, "insist": 1710, "lr_schedul": [1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1940], "chainabl": [1711, 1721], "081": 1711, "729": [1711, 1724], "6561": [1711, 1884], "59049": 1711, "scheduler1": [1711, 1724, 1940], "constantlr": [1711, 1724], "total_it": [1711, 1712, 1718, 1722, 1724], "scheduler2": [1711, 1724, 1940], "exponentiallr": [1711, 1724, 1940], "get_last_lr": [1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725], "print_lr": [1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725], "is_verbos": [1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725], "__dict__": [1711, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725], "last_epoch": [1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725], "mileston": [1712, 1718, 1719, 1724, 1940], "simultan": [1712, 1713, 1718, 1719, 1725, 1919, 1949], "025": [1712, 1718], "t_max": [1713, 1940], "eta_min": [1713, 1714], "anneal": [1713, 1714, 1721, 1940], "cur": [1713, 1714], "sgdr": [1713, 1714], "2k": 1713, "sole": 1713, "t_mult": 1714, "interleav": 1714, "base_lr": [1715, 1721], "max_lr": [1715, 1721], "step_size_up": 1715, "step_size_down": 1715, "scale_fn": 1715, "scale_mod": 1715, "cycle_momentum": [1715, 1721], "base_momentum": [1715, 1721], "max_momentum": [1715, 1721], "cyclic": 1715, "amplitud": [1715, 1721], "triangular2": 1715, "exp_rang": 1715, "bckenstler": 1715, "train_batch": [1715, 1721], "get_lr": 1715, "lr_lambda": [1717, 1720], "lambda1": 1717, "lambda2": 1717, "start_factor": 1718, "end_factor": 1718, "03125": 1718, "0375": 1718, "04375": 1718, "005": [1719, 1725], "lmbda": 1720, "total_step": 1721, "steps_per_epoch": 1721, "pct_start": 1721, "anneal_strategi": [1721, 1940], "div_factor": 1721, "final_div_factor": 1721, "three_phas": 1721, "1cycl": 1721, "fastai": 1721, "unpublish": 1721, "initial_lr": 1721, "min_lr": [1721, 1723], "1e4": 1721, "annihil": 1721, "00075": 1722, "00050": 1722, "00025": 1722, "patienc": 1723, "threshold_mod": 1723, "cooldown": 1723, "stagnat": 1723, "new_lr": 1723, "hasn": [1723, 1909, 1941], "optimum": 1723, "dynamic_threshold": 1723, "val_loss": 1723, "81": 1724, "mn": 1727, "pca": [1729, 1953], "overestim": [1729, 1841], "nathan": [1729, 1841], "halko": [1729, 1841], "gunnar": [1729, 1841], "martinsson": [1729, 1841], "tropp": [1729, 1841], "probabilist": [1729, 1841], "0909": [1729, 1841], "4061": [1729, 1841], "na": [1729, 1841], "cmath": [1733, 1897], "4142j": 1733, "4331": 1736, "2475": [1736, 1839], "6834": 1736, "2791": 1736, "1875": 1736, "5561": 1736, "4670": 1736, "5428": 1737, "5854": 1737, "5261": [1737, 1840], "1857": 1737, "2498": 1737, "1646": [1737, 1922], "0705": 1737, "0629": 1737, "2962": 1737, "0821": [1737, 1797], "1831": 1737, "type1": [1738, 1897], "type2": [1738, 1897], "2117": 1740, "9765": 1740, "1707": 1740, "4884": 1740, "5661": 1740, "5795": 1740, "5280": 1740, "9206": 1740, "quantization_schem": [1741, 1742, 1743, 1744, 1745], "int_repr": [1741, 1742, 1897, 1939], "nchw": [1743, 1958], "qx": [1743, 1744, 1745], "00001": 1743, "max_pool1d": [1744, 1897, 1939, 1946], "max_pool2d": [1745, 1897, 1939, 1946], "quasirandom": 1746, "scrambl": 1746, "sobol": 1746, "quasi": 1746, "21201": 1746, "web": 1746, "unsw": 1746, "au": [1746, 1941], "fkuo": 1746, "art": 1746, "owen": 1746, "niederreit": 1746, "xing": 1746, "466": 1746, "489": 1746, "decemb": 1746, "1998": 1746, "zh": 1746, "vychisl": 1746, "phy": 1746, "784": 1746, "802": 1746, "1967": 1746, "soboleng": 1746, "draw_base2": 1746, "base2": 1746, "fast_forward": 1746, "142": 1747, "283": 1747, "570": 1747, "359": 1747, "9894": 1747, "2503": 1748, "3525": 1748, "5673": 1748, "8237": 1748, "5781": 1748, "6879": 1748, "3816": 1748, "7249": 1748, "0998": 1748, "1436": 1752, "9966": 1752, "3426": 1752, "6366": 1752, "5954": 1752, "8929": 1752, "0923": 1752, "1719": 1752, "4709": 1752, "1996": 1752, "4595": 1758, "4314": 1758, "flat": [1761, 1804, 1897, 1914, 1937, 1953], "n2": 1761, "n3": 1761, "negat": [1764, 1848, 1899], "is_neg": [1764, 1897, 1939], "equidist": 1768, "inexact": 1768, "1234567": 1768, "1230": 1768, "vstack": [1769, 1897, 1939, 1953], "0370": 1770, "2970": 1770, "5420": 1770, "9105": 1770, "8351": 1770, "pickle_protocol": [1771, 1941], "default_protocol": 1771, "_use_new_zipfile_seri": 1771, "zipfil": [1771, 1941], "sorted_sequ": [1775, 1897], "sorter": [1775, 1897], "sorted_sequence_1d": 1775, "select_copi": [1777, 1897, 1939], "slight": [1779, 1953, 1956], "92701": [1779, 1956], "complaint": 1780, "bfloat16_3x": 1783, "denorm": [1784, 1933], "sse3": 1784, "323": 1784, "88131e": 1784, "324": 1784, "is_train": [1785, 1961], "interop": 1786, "intraop": 1787, "edgeitem": 1788, "linewidth": 1788, "sci_mod": 1788, "shamelessli": 1788, "repr": [1788, 1899], "sane": 1788, "_tensor_str": 1788, "_formatt": 1788, "12345": 1788, "1235": 1788, "excess": 1790, "24j": 1791, "8000j": 1791, "9600j": 1791, "4472": [1791, 1930], "8944j": 1791, "expit": [1792, 1954], "2222": [1794, 1854], "4444": 1794, "8889": 1794, "4901e": 1795, "4000e": 1795, "0077e": 1795, "4923e": 1795, "waveform": [1796, 1797, 1798], "1564": 1796, "4540": 1796, "8910": 1796, "9877": 1796, "1423": [1796, 1818], "4154": 1796, "8413": [1796, 1954], "0302": 1797, "2231": 1797, "6065": 1797, "5400e": 1797, "3546e": 1797, "4788e": 1797, "8316e": 1797, "02": [1797, 1798, 1803], "3534e": 1797, "0065e": [1798, 1803], "1875e": [1798, 1803], "3937e": [1798, 1803], "2465e": [1798, 1803], "8250e": [1798, 1803], "9858e": [1798, 1803], "1365e": [1798, 1803], "8659e": [1798, 1803], "4658e": [1798, 1803], "3941e": [1798, 1803], "5400": 1799, "3376": 1799, "4200": 1799, "9136": 1799, "wit": [1799, 1896], "0955": [1799, 1800, 1802], "3455": [1799, 1800, 1802], "6545": [1799, 1800, 1802], "9045": [1799, 1800, 1802], "0800": [1800, 1801], "1876": [1800, 1801], "4601": [1800, 1801], "7700": [1800, 1801], "9723": [1800, 1801], "1679": 1801, "3979": 1801, "6821": 1801, "9121": 1801, "1170": 1802, "9698": 1802, "36358": 1804, "z_n": [1804, 1919], "48917": 1804, "2z_n": 1804, "13659": 1804, "3z_n": 1804, "01064": 1804, "4z_n": 1804, "\u03c0": 1804, "sidelob": 1804, "transact": 1804, "acoust": 1804, "speech": 1804, "84": 1804, "91": 1804, "feb": 1804, "1981": 1804, "tassp": 1804, "1163506": 1804, "heinzel": 1804, "spectrum": [1804, 1933], "dft": 1804, "comprehens": [1804, 1899, 1900, 1913, 1922, 1928, 1944], "februari": 1804, "holomet": 1804, "fnal": 1804, "gov": 1804, "gh_fft": 1804, "nutal": 1804, "general_ham": 1804, "6280e": 1804, "2698e": 1804, "1052e": 1804, "9826e": 1804, "5461": [1806, 1930], "1347": 1806, "7266": 1806, "2746": 1806, "5194": 1806, "1343": 1806, "4032": 1806, "2711": 1806, "5380": 1808, "8632": 1808, "1265": 1808, "9399": 1808, "5644": 1808, "9744": 1808, "1268": 1808, "2162": 1813, "6719": 1813, "3332": 1813, "5793": [1813, 1930], "0061": 1813, "6058": 1813, "9497": 1813, "5071": 1813, "3343": 1813, "9553": 1813, "0960": 1813, "derivati": [1814, 1817], "sparsr": 1815, "run_my_model": 1815, "prev_checks_en": 1815, "check_invari": [1815, 1822, 1823, 1824, 1825, 1826, 1827, 1953], "sparse_csr_tensor": [1815, 1897, 1939, 1953], "z_": [1817, 1919, 1954], "bigoplus_": 1817, "kj": 1817, "bigoplu": 1817, "sparseaddmmbackward0": 1817, "sparsemmreduceimplbackward0": 1817, "sparsiti": [1818, 1894, 1906, 1917], "spy": 1818, "2847": 1818, "7805": 1818, "1900": [1818, 1934], "to_dens": [1818, 1820, 1897, 1939, 1953], "3903": 1818, "x_k": 1819, "6438": 1821, "6467": 1821, "3411": 1821, "0918": 1821, "5348": 1821, "0634": 1821, "0494": 1821, "0646": 1821, "1844": 1821, "1276": 1821, "1874": 1821, "6334": 1821, "9682": 1821, "5340": 1821, "7483": 1821, "4512": 1821, "4073": 1821, "8901": 1821, "3183": 1821, "7539": 1821, "6596": 1821, "ncolblock": [1822, 1953], "array_list": [1822, 1823, 1824, 1826, 1827], "nrow": [1822, 1823, 1824, 1826, 1827, 1953], "ncol": [1822, 1823, 1824, 1826, 1827, 1953], "denses": [1822, 1823, 1824, 1826, 1827, 1953], "check_sparse_tensor_invari": [1822, 1823, 1824, 1825, 1826, 1827, 1953], "nrowblock": [1823, 1953], "compressed_indic": [1824, 1897, 1953], "plain_indic": [1824, 1897, 1953], "compressed_dim_s": [1824, 1953], "rdinat": 1825, "_indic": [1825, 1939, 1953], "0755": [1829, 1830], "0226": [1829, 1830], "0831": [1829, 1830], "4806": [1829, 1830], "0112": 1829, "2883": 1829, "6933": 1829, "0457": 1830, "0069": 1830, "2310": 1830, "2959": [1834, 1835, 1881, 1882], "8101": [1834, 1835, 1881, 1882], "5027": [1834, 1835, 1881, 1882], "3270": [1834, 1835, 1881, 1882], "5905": [1834, 1835, 1881, 1882], "6538": [1834, 1835, 1881, 1882, 1930], "3330": [1834, 1835, 1881, 1882], "5596": [1834, 1835, 1881, 1882], "6548": [1834, 1835, 1881, 1882], "1264": [1834, 1835, 1881, 1882], "5080": [1834, 1835, 1840, 1881, 1882, 1930], "6420": [1834, 1835, 1881, 1882], "1992": [1834, 1835, 1881, 1882], "0311": [1834, 1954], "7477": 1834, "2204": 1834, "9087": 1834, "2620": 1835, "0028": [1835, 1860], "0957": 1835, "6038": 1835, "0645": [1835, 1882], "4485": [1835, 1882], "8707": [1835, 1882], "0665": [1835, 1882], "librosa": 1836, "omega": 1836, "win": [1836, 1919], "_fft": [1836, 1897], "dimnsion": 1836, "1133": 1839, "2958": 1839, "5475": 1839, "0569": 1839, "0737": 1839, "3429": 1839, "9138": 1839, "9337": 1839, "6864": [1839, 1864], "1132": 1839, "7892": 1839, "1003": 1839, "5688": 1839, "3637": 1839, "9906": 1839, "5197": 1839, "4598": 1839, "3708": 1839, "6217": 1839, "435": 1839, "1335": 1839, "3135": 1839, "gesdd": 1840, "conquer": 1840, "gesvdjbatch": 1840, "fortran": 1840, "\u00b9": 1840, "2364": 1840, "7752": 1840, "7201": 1840, "7394": 1840, "0504": 1840, "3371": 1840, "5296": 1840, "3550": 1840, "5569": 1840, "2445": 1840, "1414": 1840, "4027": 1840, "0287": 1840, "5434": 1840, "1946": 1840, "8833": 1840, "3679": 1840, "4296": 1840, "2890": 1840, "6604": 1840, "2717": 1840, "2618": 1840, "4234": 1840, "2481": 1840, "4733": 1840, "3289": [1840, 1935], "0315": 1840, "7806": 1840, "0199": 1840, "8766": 1840, "4809": 1840, "4054": 1840, "7600": 1840, "8611": 1840, "2594": 1840, "4373": 1840, "6531e": 1840, "a_big": 1840, "6503e": 1840, "swapax": [1843, 1897, 1939, 1957], "1995": 1849, "4608": 1849, "7702": 1849, "4875": 1849, "9158": 1849, "5872": 1849, "6929": 1849, "6932": 1849, "take_along_axi": [1851, 1925], "max_idx": 1851, "sorted_idx": 1851, "2027": 1852, "7687": 1852, "4412": 1852, "3856": 1852, "5930": 1852, "9859": 1852, "4722": 1852, "3366": 1852, "8986": 1853, "7279": 1853, "1745": 1853, "7156": 1853, "8257": 1853, "2553": 1853, "11111": 1854, "222222": 1854, "3333333": 1854, "1111": 1854, "array_split": 1855, "i_d": 1856, "k_": 1856, "4532": 1856, "4874": 1856, "5018": 1856, "4796": [1856, 1934], "5162": 1856, "5306": 1856, "2922": 1856, "7556": 1856, "2741": 1856, "3161": 1856, "0704": 1856, "0187": 1856, "4079": 1856, "3126": 1856, "8744": 1856, "8223": 1856, "9445": 1856, "4117": 1856, "7780": 1856, "7193": 1856, "4867": 1856, "3204": 1856, "5513": 1856, "4737": [1856, 1885], "2850": 1856, "2573": 1856, "5997": 1856, "sparsebsr": 1860, "sparsecsc": 1860, "sparsebsc": 1860, "9893": 1860, "5809": 1860, "1669": 1860, "7299": 1860, "4942": [1860, 1930], "y_0": 1861, "y_1": 1861, "x_diff": 1861, "y_diff": 1861, "riemann": [1861, 1919, 1927, 1954], "badli": 1863, "cloned_coeffici": 1863, "1527": 1863, "0753": 1863, "7986": 1863, "0210": 1863, "3513": 1863, "5492": 1863, "7403": 1863, "0243": 1863, "7841": 1863, "9046": 1863, "5405": 1863, "9320": 1863, "9270": 1863, "2826": 1863, "lbrace": [1864, 1865, 1866, 1867], "rbrace": [1864, 1865, 1866, 1867], "0813": 1864, "8619": 1864, "7105": 1864, "0935": 1864, "1380": 1864, "3409": [1864, 1934], "2219": 1864, "5653": 1864, "2521": 1864, "2345": 1864, "2544": 1864, "3461": 1864, "4785": 1864, "4477": 1864, "6049": 1864, "6368": 1864, "8775": 1864, "7145": 1864, "1502": 1864, "2716": 1864, "1243": 1864, "5413": 1864, "3615": 1864, "0614": 1864, "7344": 1864, "3164": 1864, "7648": 1864, "4024": 1864, "0978": 1864, "col": [1865, 1867, 1897], "2309": 1866, "5207": 1866, "0049": 1866, "2072": 1866, "0680": 1866, "6602": 1866, "3480": 1866, "5211": 1866, "4573": 1866, "5876": 1866, "0794": [1866, 1954], "8373": 1866, "6654": 1866, "2604": 1866, "5235": 1866, "2447": 1866, "9556": 1866, "2919": 1866, "1768": 1866, "4333": 1866, "3146": [1866, 1930], "6576": 1866, "0432": 1866, "9348": [1866, 1954], "4410": 1866, "9888": 1866, "3337": 1866, "6556": 1866, "4798": 1866, "5466": 1869, "8008": 1869, "9079": 1869, "unique_consecut": [1872, 1897, 1939], "inverse_indic": [1872, 1873], "warn_onli": 1875, "alon": [1875, 1898, 1941], "put_": [1875, 1897], "index_add": [1875, 1897, 1939], "index_select": [1875, 1895, 1897, 1939, 1953], "empty_permut": [1875, 1895, 1897, 1939], "fractionalmaxpool2d": 1875, "fractionalmaxpool3d": 1875, "reflectionpad1d": 1875, "reflectionpad3d": 1875, "replicationpad1d": 1875, "replicationpad3d": 1875, "histc": [1875, 1897, 1939], "bincount": [1875, 1897, 1939], "kthvalu": [1875, 1897, 1912, 1939], "cublasapi_reproduc": [1875, 1934], "avg_pool3d_backward_cuda": 1875, "for_tensor": 1876, "for_modul": 1876, "for_storag": 1876, "unsupported_dtyp": 1876, "privateuse1": [1876, 1878, 1948], "rename_privateuse1_backend": [1876, 1894], "is_foo": 1876, "register_privateuse1_backend": [1876, 1878], "generate_for_privateuse1_backend": 1876, "frames_to_skip": [1877, 1938], "maximum_number_of_fram": 1877, "_register_device_modul": 1878, "backendmodul": 1878, "get_amp_supported_dtyp": 1878, "is_autocast_en": [1878, 1897, 1939], "get_autocast_dtyp": 1878, "set_autocast_dtyp": 1878, "set_autocast_en": 1878, "_is_in_bad_fork": 1878, "bad_fork": 1878, "get_rng_stat": [1878, 1894, 1948], "set_rng_stat": [1878, 1894, 1948], "extend_dispatch": 1878, "pytorch_open_registration_exampl": 1878, "nicer": 1879, "alexandr": 1880, "theophil": 1880, "0631": 1881, "5590": 1881, "4893": 1881, "8258": 1881, "5926": 1882, "0056": 1882, "3646": 1882, "vecdot": 1883, "mi": [1884, 1885], "6116": 1884, "5772": [1884, 1954], "4606": 1884, "9120": 1884, "0786": 1884, "7497": 1884, "6623": 1884, "5772j": 1884, "9120j": 1884, "7497j": 1884, "6623j": 1884, "3839j": 1885, "2098": 1885, "6699j": 1885, "3470": 1885, "9451j": 1885, "5174": 1885, "3136j": 1885, "6699": 1885, "9451": 1885, "3136": 1885, "atleast_2d": [1888, 1897, 1939], "3139": 1889, "3898": 1889, "1657": 1889, "0383": 1889, "8785": 1889, "1089": 1889, "hubconf": 1893, "entrypoint_nam": 1893, "_resnet18": 1893, "underscor": [1893, 1913, 1949, 1959], "load_state_dict_from_url": [1893, 1908], "2gb": 1893, "relative_path_to_checkpoint": 1893, "pth": [1893, 1908, 1935], "dirnam": 1893, "5c106cde": [1893, 1908], "force_reload": 1893, "skip_valid": 1893, "trust_repo": 1893, "repo_own": 1893, "repo_nam": 1893, "torchhub": 1893, "owner": [1893, 1924, 1939, 1949, 1950], "github_token": 1893, "repo_or_dir": 1893, "mute": 1893, "resnet50_weight": 1893, "imagenet1k_v1": 1893, "download_url_to_fil": 1893, "hash_prefix": 1893, "temporary_fil": 1893, "sha256": [1893, 1908], "s3": [1893, 1908, 1936], "amazonaw": [1893, 1908, 1936], "model_dir": [1893, 1908], "check_hash": [1893, 1908], "hub_dir": [1893, 1908], "get_dir": [1893, 1908], "ext": [1893, 1908], "eight": [1893, 1908], "hash": [1893, 1897, 1899, 1908, 1939], "succinct": 1893, "set_dir": 1893, "path_to_hub_dir": 1893, "torch_hom": 1893, "xdg_cache_hom": [1893, 1922], "reiniti": 1893, "path_importer_cach": 1893, "subpackag": [1893, 1941], "classifi": [1894, 1899, 1937, 1940, 1944, 1958], "pypi": 1894, "conda": [1894, 1936], "hip": 1894, "javadoc": 1894, "uninitializedbuff": 1894, "anomali": 1894, "can_device_access_p": 1894, "current_blas_handl": 1894, "device_of": 1894, "get_arch_list": 1894, "get_device_cap": 1894, "get_device_nam": 1894, "get_device_properti": 1894, "get_gencode_flag": 1894, "get_sync_debug_mod": 1894, "ipc_collect": 1894, "memory_usag": 1894, "set_stream": 1894, "set_sync_debug_mod": 1894, "power_draw": 1894, "clock_rat": 1894, "outofmemoryerror": 1894, "jiter": 1894, "sanit": 1894, "empty_cach": [1894, 1922, 1928], "set_per_process_memory_fract": 1894, "current_allocated_memori": 1894, "driver_allocated_memori": 1894, "pathwis": 1894, "exponentialfamili": 1894, "binomi": [1894, 1897, 1939], "chi2": 1894, "continuousbernoulli": 1894, "dirichlet": 1894, "fishersnedecor": 1894, "halfcauchi": 1894, "halfnorm": 1894, "kumaraswami": 1894, "lkjcholeski": 1894, "laplac": 1894, "lognorm": 1894, "lowrankmultivariatenorm": 1894, "mixturesamefamili": 1894, "multinomi": [1894, 1897, 1939], "multivariatenorm": 1894, "negativebinomi": 1894, "onehotcategor": 1894, "relaxedbernoulli": 1894, "logitrelaxedbernoulli": 1894, "relaxedonehotcategor": 1894, "studentt": 1894, "transformeddistribut": 1894, "vonmis": 1894, "weibul": 1894, "wishart": 1894, "solver": [1894, 1933], "misc": 1894, "normal_": [1894, 1897, 1912, 1917, 1922, 1961], "constant_": [1894, 1917], "ones_": [1894, 1917], "zeros_": [1894, 1917], "eye_": [1894, 1901, 1917], "dirac_": [1894, 1901, 1917], "xavier_uniform_": [1894, 1917], "xavier_normal_": [1894, 1917, 1930], "kaiming_uniform_": [1894, 1917], "trunc_normal_": [1894, 1917], "orthogonal_": [1894, 1901, 1917, 1930], "sparse_": [1894, 1917], "alexnet": 1894, "preview": 1894, "swa": 1894, "ema": 1894, "powersgd": 1894, "remotemodul": 1894, "fork_rng": [1894, 1948], "doublestorag": [1894, 1955], "floatstorag": [1894, 1955], "halfstorag": [1894, 1955], "longstorag": [1894, 1955], "intstorag": [1894, 1955], "shortstorag": [1894, 1955], "charstorag": [1894, 1955], "bytestorag": [1894, 1955], "boolstorag": [1894, 1955], "bfloat16storag": [1894, 1955], "complexdoublestorag": [1894, 1955], "complexfloatstorag": [1894, 1955], "quint8storag": [1894, 1955], "qint8storag": [1894, 1955], "qint32storag": [1894, 1955], "quint4x2storag": [1894, 1955], "quint2x4storag": [1894, 1955], "make_tensor": [1894, 1960], "assert_allclos": [1894, 1960], "generate_methods_for_privateuse1_backend": 1894, "get_cpp_backtrac": 1894, "set_modul": 1894, "sampler": 1894, "mobile_optim": 1894, "optimize_for_mobil": [1894, 1907], "model_zoo": 1894, "load_url": [1894, 1908], "tensorboard": [1894, 1909, 1943], "summarywrit": [1894, 1909, 1958], "iinfo": 1894, "__config__": [1894, 1921], "torchdata": 1894, "torchserv": 1894, "torchtext": 1894, "_out": [1895, 1917, 1927], "_adaptive_avg_pool2d": [1895, 1939], "_adaptive_avg_pool2d_backward": 1895, "_log_softmax": [1895, 1939], "half_to_float": 1895, "_native_batch_norm_legit": [1895, 1939], "no_stat": 1895, "_softmax": [1895, 1939, 1954], "_to_copi": [1895, 1939], "scalartyp": 1895, "memoryformat": 1895, "start_step": 1895, "avg_pool2d": [1895, 1897, 1939, 1946], "avg_pool2d_backward": 1895, "constant_pad_nd": [1895, 1897, 1939], "convolution_backward": 1895, "bias_siz": 1895, "output_mask": 1895, "embedding_dense_backward": 1895, "num_weight": 1895, "interpolation_mod": [1895, 1897], "isinf": [1895, 1897, 1939, 1953], "max_pool2d_with_indic": [1895, 1897, 1939], "max_pool2d_with_indices_backward": 1895, "max_pool3d_with_indic": [1895, 1897, 1939], "native_batch_norm": [1895, 1897, 1939], "native_dropout": [1895, 1897, 1939], "native_group_norm": [1895, 1897, 1939], "hxw": [1895, 1897], "native_group_norm_backward": 1895, "rstd": 1895, "native_layer_norm": [1895, 1897, 1939], "native_layer_norm_backward": 1895, "tensor_scalar": 1895, "tensor_tensor": 1895, "scalar_tensor": [1895, 1897, 1939], "slice_scatt": [1895, 1897, 1939], "dim_intlist": 1895, "sym_numel": [1895, 1939], "sym_storage_offset": [1895, 1939], "sym_strid": [1895, 1939], "upsample_bilinear2d": [1895, 1897, 1939], "upsample_nearest2d": [1895, 1897, 1939], "convert_element_typ": [1895, 1939], "broadcast_in_dim": [1895, 1939], "bessel_i0": [1895, 1939], "bessel_i1": [1895, 1939], "bessel_j0": [1895, 1939, 1954], "bessel_j1": [1895, 1939, 1954], "cbrt": [1895, 1939], "erf_inv": [1895, 1939], "erfcx": [1895, 1939, 1954], "exp2": [1895, 1897, 1939, 1954, 1958], "isfinit": [1895, 1897, 1933, 1939], "ndtri": [1895, 1939, 1954], "spherical_bessel_j0": [1895, 1939, 1954], "fmax": [1895, 1897, 1939], "fmin": [1895, 1897, 1939], "shift_left": [1895, 1939], "shift_right_arithmet": [1895, 1939], "zeta": [1895, 1922, 1939, 1954], "broadcast_dimens": 1895, "collapse_view": [1895, 1939], "start_indic": 1895, "limit_indic": 1895, "slice_in_dim": [1895, 1939], "start_index": 1895, "limit_index": 1895, "split_dim": [1895, 1939], "outer_length": 1895, "view_of": [1895, 1939], "as_strided_scatt": [1895, 1897, 1939], "collaps": [1895, 1912, 1939], "rev": [1895, 1939], "device_put": [1895, 1939], "maximum_valu": [1895, 1939], "minimum_valu": [1895, 1939], "copy_strid": [1895, 1939], "copy_to": [1895, 1939], "xor_sum": [1895, 1939], "physical_layout": [1895, 1897], "iota": [1895, 1939], "fft_r2c": [1895, 1939], "fft_c2c": [1895, 1939], "fft_c2r": [1895, 1939], "disadvantag": 1896, "gentl": 1896, "beam": 1896, "traced_bar": 1896, "myscriptmodul": 1896, "103": [1896, 1898], "939": [1896, 1898], "116": [1896, 1898], "779": [1896, 1898], "123": [1896, 1898], "my_script_modul": [1896, 1898], "ins": 1896, "pytorch_jit": 1896, "traced_fn": 1896, "disable_jit_exampl": 1896, "printer": 1896, "rv": 1896, "rv0": 1896, "rv1": 1896, "ssa": 1896, "block0": 1896, "block1": 1896, "loop_in_traced_fn": 1896, "input_tupl": 1896, "fill_row_zero": 1896, "tracerwarn": 1896, "disjoint": 1896, "nr": 1896, "09115803241729736": 1896, "6782537698745728": 1896, "cpu_model": 1896, "gpu_model": 1896, "sample_input_cpu": 1896, "sample_input_gpu": 1896, "traced_cpu": 1896, "traced_gpu": 1896, "use_gpu": 1896, "__constants__": [1896, 1898], "my_module_inst": 1896, "redeclar": 1896, "nn_module_inst": 1896, "my_scripted_model": 1896, "526": [1896, 1898, 1937], "script_method": 1896, "implicitly_compiled_method": 1896, "another_forward": 1896, "unused_method": 1896, "some_fn": 1896, "ever": [1896, 1955], "some_fn2": 1896, "some_fn3": 1896, "some_fn4": 1896, "my_dict": [1896, 1898], "my_int": [1896, 1898], "my_const": 1896, "make_dict": 1896, "nnc": 1896, "__and__": 1897, "__iand__": 1897, "__ilshift__": 1897, "__ior__": 1897, "__irshift__": 1897, "__ixor__": 1897, "__lshift__": 1897, "__or__": 1897, "__rshift__": 1897, "__xor__": 1897, "absolute_": 1897, "acos_": [1897, 1912], "addbmm_": 1897, "addcdiv_": 1897, "addcmul_": 1897, "addmv_": [1897, 1912], "addr_": 1897, "align_a": [1897, 1912, 1913, 1939], "align_to": [1897, 1912, 1913, 1939], "ellipsis_idx": 1897, "aminmax": [1897, 1939], "arccos_": 1897, "arccosh_": 1897, "arcsin_": [1897, 1953], "arcsinh_": 1897, "arctan2_": 1897, "arctan_": 1897, "arctanh_": 1897, "argwher": [1897, 1939], "as_strided_": 1897, "asin_": [1897, 1912, 1953], "asinh_": [1897, 1912], "atan_": [1897, 1912], "atanh_": [1897, 1912], "baddbmm_": 1897, "bernoulli_": [1897, 1912, 1961], "bitwise_and_": 1897, "bitwise_left_shift_": 1897, "bitwise_not_": [1897, 1912], "bitwise_or_": 1897, "bitwise_right_shift_": 1897, "bitwise_xor_": 1897, "broadcast_to": [1897, 1939], "cauchy_": [1897, 1912, 1961], "ceil_": [1897, 1912], "clamp_max": [1897, 1939], "clamp_max_": 1897, "clamp_min": [1897, 1939], "clamp_min_": 1897, "clip_": 1897, "conj_physical_": 1897, "copysign_": 1897, "cos_": [1897, 1912, 1919], "cosh_": [1897, 1912], "count_nonzero": [1897, 1939], "cummax": [1897, 1939], "cummin": [1897, 1939], "cumprod_": 1897, "cumsum_": 1897, "deg2rad": [1897, 1912, 1939, 1953], "deg2rad_": [1897, 1912, 1953], "outdim": 1897, "diagonal_scatt": [1897, 1939], "digamma_": [1897, 1912], "div_": [1897, 1912, 1953], "divide_": 1897, "dsplit": [1897, 1939], "eq_": 1897, "erf_": [1897, 1912], "erfc_": [1897, 1912], "erfinv_": [1897, 1912], "exp2_": 1897, "exp_": [1897, 1912], "expm1_": [1897, 1912], "exponential_": [1897, 1912, 1961], "fill_diagonal_": 1897, "fix_": 1897, "fliplr": [1897, 1939], "flipud": [1897, 1939], "float_power_": 1897, "floor_": [1897, 1912], "floor_divide_": [1897, 1953], "fmod_": 1897, "frac_": [1897, 1912], "frexp": [1897, 1939], "gcd_": 1897, "ge_": 1897, "geometric_": [1897, 1961], "ger": [1897, 1939], "get_devic": [1897, 1912, 1939, 1953, 1955, 1956], "greater_": 1897, "greater_equal_": 1897, "gt_": 1897, "hardshrink": [1897, 1939], "heavisid": [1897, 1939], "heaviside_": 1897, "hsplit": [1897, 1939, 1957], "hypot_": 1897, "i0_": 1897, "igamma_": 1897, "igammac_": 1897, "index_fil": [1897, 1912, 1939], "index_reduc": [1897, 1939], "is_coalesc": [1897, 1939, 1953], "is_complex": [1897, 1939, 1953, 1956], "is_contigu": [1897, 1912, 1939, 1957], "is_floating_point": [1897, 1912, 1939, 1953, 1956], "is_infer": [1897, 1939], "is_same_s": [1897, 1939, 1953], "is_set_to": [1897, 1939], "is_sign": [1897, 1912, 1939, 1953], "isclos": [1897, 1939], "isneginf": [1897, 1939, 1953], "isposinf": [1897, 1939, 1953], "isreal": [1897, 1939], "istft": [1897, 1939], "kron": [1897, 1939], "lcm_": 1897, "ldexp_": 1897, "le_": 1897, "lerp_": 1897, "less_": 1897, "less_equal_": 1897, "lgamma_": 1897, "log10_": [1897, 1912], "log1p_": [1897, 1912, 1953], "log2_": [1897, 1912], "log_normal_": [1897, 1912, 1961], "logaddexp2": [1897, 1939], "logcumsumexp": [1897, 1939], "logical_and_": 1897, "logical_not_": [1897, 1912], "logical_or_": 1897, "logical_xor_": 1897, "logit_": 1897, "lt_": 1897, "masked_fil": [1897, 1912, 1914, 1939, 1953], "masked_scatt": [1897, 1939], "masked_select": [1897, 1912, 1939], "matrix_pow": [1897, 1939], "moveaxi": [1897, 1939], "msort": [1897, 1939], "multiply_": 1897, "mvlgamma_": 1897, "nan_to_num_": 1897, "nanmedian": [1897, 1912, 1939], "nansum": [1897, 1939], "narrow_copi": [1897, 1939, 1953], "ne_": 1897, "neg_": [1897, 1912, 1953], "negative_": [1897, 1953], "new_empty_strid": [1897, 1939], "new_ful": [1897, 1922, 1939], "new_on": [1897, 1939], "nextafter_": 1897, "nonzero_stat": [1897, 1939], "not_equal_": 1897, "output_nr": [1897, 1939], "polygamma_": 1897, "pow_": [1897, 1912], "q_per_channel_scal": [1897, 1939], "q_per_channel_zero_point": [1897, 1939], "q_scale": [1897, 1939], "q_zero_point": [1897, 1939], "rad2deg": [1897, 1912, 1939, 1953], "rad2deg_": [1897, 1912, 1953], "reciprocal_": [1897, 1912], "record_stream": [1897, 1922, 1939], "refine_nam": [1897, 1912, 1913, 1939], "relu_": [1897, 1946], "remainder_": 1897, "rename_": [1897, 1912, 1913], "renorm_": 1897, "reshape_a": [1897, 1914, 1939, 1957], "resize_a": [1897, 1939], "the_templ": 1897, "resize_as_sparse_": 1897, "retains_grad": [1897, 1939], "roll": [1897, 1939], "rot90": [1897, 1939], "round_": [1897, 1912], "rsqrt_": [1897, 1912], "select_scatt": [1897, 1939], "sgn_": [1897, 1912], "sigmoid_": [1897, 1912, 1946], "sign_": [1897, 1912], "sinc_": 1897, "sinh_": [1897, 1912], "smm": [1897, 1939, 1953], "sparse_resize_": 1897, "sparse_resize_and_clear_": 1897, "split_with_s": [1897, 1939, 1957], "sqrt_": [1897, 1912], "square_": 1897, "squeeze_": [1897, 1946], "sspaddmm": [1897, 1939, 1953], "sub_": [1897, 1912, 1953], "subtract_": 1897, "sum_to_s": [1897, 1939], "swapaxes_": 1897, "swapdim": [1897, 1939, 1957], "swapdims_": 1897, "take_along_dim": [1897, 1939], "tan_": [1897, 1912], "tanh_": [1897, 1912, 1946], "tensor_indices_or_sect": 1897, "to_mkldnn": [1897, 1939], "to_padded_tensor": [1897, 1914, 1939], "to_sparse_bsc": [1897, 1939], "to_sparse_bsr": [1897, 1939, 1953], "to_sparse_csc": [1897, 1939, 1953], "true_divide_": 1897, "trunc_": [1897, 1912], "type_a": [1897, 1912, 1939], "out0": [1897, 1935], "unsafe_chunk": [1897, 1939], "unsafe_split": [1897, 1939], "unsafe_split_with_s": [1897, 1939], "unsqueeze_": [1897, 1946], "view_a": [1897, 1939, 1957], "vsplit": [1897, 1939, 1957], "xlogy_": 1897, "adaptive_avg_pool2d": [1897, 1924, 1939, 1946], "adaptive_max_pool1d_with_indic": [1897, 1924], "adaptive_max_pool2d_with_indic": 1897, "adaptive_max_pool3d_with_indic": 1897, "alpha_dropout": [1897, 1939], "assert_int_or_pair": 1897, "arg_nam": 1897, "binary_cross_entropi": [1897, 1939], "binary_cross_entropy_with_logit": [1897, 1939], "celu": [1897, 1939], "dropout2d": 1897, "dropout3d": 1897, "feature_alpha_dropout": [1897, 1939], "fractional_max_pool2d_with_indic": 1897, "fractional_max_pool3d_with_indic": 1897, "gaussian_nll_loss": 1897, "glu": [1897, 1939], "gumbel_softmax": 1897, "hardsigmoid": [1897, 1939, 1946], "hardswish": [1897, 1939, 1946], "huber_loss": [1897, 1939], "instance_norm": [1897, 1939, 1946], "local_response_norm": 1897, "lp_pool1d": 1897, "lp_pool2d": 1897, "max_pool1d_with_indic": [1897, 1939], "mish": [1897, 1939], "multi_head_attention_forward": 1897, "embed_dim_to_check": 1897, "in_proj_weight": 1897, "in_proj_bia": 1897, "bias_k": 1897, "bias_v": 1897, "out_proj_weight": 1897, "out_proj_bia": 1897, "use_separate_proj_weight": 1897, "q_proj_weight": 1897, "k_proj_weight": 1897, "v_proj_weight": 1897, "static_k": 1897, "static_v": 1897, "multilabel_soft_margin_loss": 1897, "relu6": [1897, 1939, 1946], "silu": [1897, 1914, 1939], "softsign": 1897, "tanhshrink": 1897, "adaptive_avg_pool1d": [1897, 1924, 1939, 1946], "adaptive_max_pool1d": [1897, 1924, 1939], "affine_grid_gener": [1897, 1939], "alias_copi": [1897, 1939], "align_tensor": [1897, 1939], "alpha_dropout_": 1897, "as_strided_copi": [1897, 1939], "atleast_1d": [1897, 1939], "avg_pool1d": [1897, 1939, 1946], "bartlett_window": [1897, 1901, 1939], "cudnn_en": 1897, "batch_norm_backward_elemt": 1897, "invstd": 1897, "sum_di": 1897, "sum_dy_xmu": 1897, "batch_norm_backward_reduc": 1897, "input_g": 1897, "bias_g": 1897, "out3": 1897, "batch_norm_elemt": [1897, 1939], "batch_norm_gather_stat": [1897, 1939], "batch_norm_gather_stats_with_count": [1897, 1939], "batch_norm_stat": [1897, 1939], "batch_norm_update_stat": [1897, 1939], "blackman_window": [1897, 1901, 1939], "block_diag": [1897, 1939], "can_cast": [1897, 1939], "ccol_indices_copi": [1897, 1939], "celu_": 1897, "choose_qparams_optim": [1897, 1939], "n_bin": 1897, "bit_width": 1897, "col_indices_copi": [1897, 1939], "column_stack": [1897, 1939], "conv_tbc": [1897, 1939], "crow_indices_copi": [1897, 1939], "cudnn_affine_grid_gener": [1897, 1939], "cudnn_batch_norm": [1897, 1939], "exponential_average_factor": 1897, "cudnn_convolut": [1897, 1939], "cudnn_convolution_add_relu": [1897, 1939], "cudnn_convolution_relu": [1897, 1939], "cudnn_convolution_transpos": [1897, 1939], "cudnn_grid_sampl": [1897, 1939], "cudnn_is_accept": [1897, 1939], "cumulative_trapezoid": [1897, 1939], "diagonal_copi": [1897, 1939], "dropout_": [1897, 1907], "embedding_renorm_": 1897, "empty_quant": [1897, 1939], "anyenumtyp": 1897, "expand_copi": [1897, 1939], "fake_quantize_per_channel_affin": [1897, 1939], "fbgemm_linear_fp16_weight": [1897, 1939], "packed_weight": 1897, "fbgemm_linear_fp16_weight_fp32_activ": [1897, 1939], "fbgemm_linear_int8_weight": [1897, 1939], "col_offset": 1897, "weight_scal": 1897, "weight_zero_point": 1897, "fbgemm_linear_int8_weight_fp32_activ": [1897, 1939], "fbgemm_linear_quantize_weight": [1897, 1939], "fbgemm_pack_gemm_matrix_fp16": [1897, 1939], "fbgemm_pack_quantized_matrix": [1897, 1939], "feature_alpha_dropout_": 1897, "feature_dropout": [1897, 1939], "feature_dropout_": 1897, "frobenius_norm": [1897, 1939], "from_fil": [1897, 1939, 1955], "fused_moving_avg_obs_fake_qu": [1897, 1939], "observer_on": 1897, "fake_quant_on": 1897, "running_min": 1897, "running_max": 1897, "per_row_fake_qu": 1897, "symmetric_qu": 1897, "has_bias": 1897, "gru_cel": [1897, 1939], "w_ih": 1897, "w_hh": 1897, "hamming_window": [1897, 1901, 1939], "histogramdd": [1897, 1939], "hspmm": [1897, 1939, 1953], "indices_copi": [1897, 1939], "is_autocast_cpu_en": [1897, 1939], "is_grad_en": [1897, 1939], "is_vulkan_avail": [1897, 1939], "isin": [1897, 1939], "kaiser_window": [1897, 1939], "lstm_cell": [1897, 1939], "meshgrid": [1897, 1939], "miopen_batch_norm": [1897, 1939], "miopen_convolut": [1897, 1939], "miopen_convolution_add_relu": [1897, 1939], "miopen_convolution_relu": [1897, 1939], "miopen_convolution_transpos": [1897, 1939], "miopen_depthwise_convolut": [1897, 1939], "miopen_rnn": [1897, 1939], "weight_stride0": 1897, "dropout_st": 1897, "out4": 1897, "mkldnn_adaptive_avg_pool2d": [1897, 1939], "mkldnn_convolut": [1897, 1939], "mkldnn_linear_backward_weight": 1897, "bias_defin": 1897, "mkldnn_max_pool2d": [1897, 1939], "mkldnn_max_pool3d": [1897, 1939], "mkldnn_rnn_layer": [1897, 1939], "weight0": 1897, "weight1": 1897, "weight2": 1897, "weight3": 1897, "hx_": 1897, "cx_": 1897, "save_mean": 1897, "save_invstd": 1897, "native_channel_shuffl": [1897, 1939], "native_norm": [1897, 1939, 1953], "norm_except_dim": [1897, 1939], "nuclear_norm": [1897, 1939], "pairwise_dist": [1897, 1939], "permute_copi": [1897, 1939], "promote_typ": [1897, 1939, 1960], "quantize_per_channel": [1897, 1939, 1944], "quantize_per_tensor_dynam": [1897, 1939, 1944], "quantized_batch_norm": [1897, 1939], "quantized_gru_cel": [1897, 1939], "packed_ih": 1897, "packed_hh": 1897, "col_offsets_ih": 1897, "col_offsets_hh": 1897, "scale_ih": 1897, "scale_hh": 1897, "zero_point_ih": 1897, "zero_point_hh": 1897, "quantized_lstm_cel": [1897, 1939], "quantized_max_pool1d": [1897, 1939], "quantized_max_pool2d": [1897, 1939], "quantized_max_pool3d": [1897, 1939], "quantized_rnn_relu_cel": [1897, 1939], "quantized_rnn_tanh_cel": [1897, 1939], "randint_lik": [1897, 1901, 1939, 1961], "randn_lik": [1897, 1901, 1914, 1939, 1961], "randperm": [1897, 1901, 1939, 1961], "result_typ": [1897, 1939], "scalar1": 1897, "scalar2": 1897, "rnn_relu": [1897, 1939], "rnn_relu_cel": [1897, 1939], "rnn_tanh": [1897, 1939], "rnn_tanh_cel": [1897, 1939], "row_indices_copi": [1897, 1939], "row_stack": [1897, 1939], "rrelu_": 1897, "rsub": [1897, 1939], "searchsort": [1897, 1939], "segment_reduc": [1897, 1939], "selu_": 1897, "slice_copi": [1897, 1939], "sparse_bsc_tensor": [1897, 1939, 1953], "sparse_bsr_tensor": [1897, 1939, 1953], "sparse_compressed_tensor": [1897, 1939, 1953], "sparse_csc_tensor": [1897, 1939, 1953], "split_copi": [1897, 1939], "split_with_sizes_copi": [1897, 1939], "squeeze_copi": [1897, 1939], "std_mean": [1897, 1912, 1939], "sym_constrain_rang": [1897, 1939], "t_copi": [1897, 1939], "threshold_": 1897, "transpose_copi": [1897, 1939], "trapz": [1897, 1939], "tril_indic": [1897, 1901, 1939], "triu_indic": [1897, 1901, 1939], "unbind_copi": [1897, 1939], "unfold_copi": [1897, 1939], "unsqueeze_copi": [1897, 1939], "values_copi": [1897, 1939], "vander": [1897, 1901, 1939], "var_mean": [1897, 1912, 1939], "view_as_complex_copi": [1897, 1939], "view_as_real_copi": [1897, 1939], "_nn": 1897, "adaptive_max_pool2d": [1897, 1939], "conv_depthwise3d": [1897, 1939], "cross_entropy_loss": [1897, 1939], "input_scal": 1897, "elu_": 1897, "flatten_dense_tensor": [1897, 1939], "random_sampl": 1897, "gelu_": 1897, "hardsigmoid_": [1897, 1946], "hardswish_": 1897, "hardtanh_": [1897, 1946], "leaky_relu_": 1897, "log_sigmoid": [1897, 1939], "mish_": 1897, "mkldnn_linear": [1897, 1939], "mkldnn_reorder_conv2d_weight": [1897, 1939], "mkldnn_reorder_conv3d_weight": [1897, 1939], "nll_loss2d": [1897, 1939], "nll_loss_nd": [1897, 1939], "reflection_pad3d": [1897, 1939], "relu6_": 1897, "rrelu_with_nois": [1897, 1939], "rrelu_with_noise_": 1897, "silu_": 1897, "slow_conv3d": [1897, 1939], "slow_conv_dilated2d": [1897, 1939], "slow_conv_dilated3d": [1897, 1939], "slow_conv_transpose2d": [1897, 1939], "slow_conv_transpose3d": [1897, 1939], "softshrink": [1897, 1939], "thnn_conv2d": [1897, 1939], "unflatten_dense_tensor": [1897, 1939], "upsample_bicubic2d": [1897, 1939], "scales_h": 1897, "scales_w": 1897, "upsample_linear1d": [1897, 1939], "upsample_nearest1d": [1897, 1939], "upsample_nearest3d": [1897, 1939], "scales_d": 1897, "upsample_trilinear3d": [1897, 1939], "fft_fftfreq": [1897, 1939], "fft_fftshift": [1897, 1939], "fft_hfft2": [1897, 1939], "fft_hfftn": [1897, 1939], "fft_ifftshift": [1897, 1939], "fft_ihfft2": [1897, 1939], "fft_ihfftn": [1897, 1939], "fft_rfftfreq": [1897, 1939], "_linalg": 1897, "linalg_cross": [1897, 1939], "linalg_det": [1897, 1939], "linalg_diagon": [1897, 1939], "eigvec": 1897, "linalg_ldl_factor": [1897, 1939], "linalg_ldl_factor_ex": [1897, 1939], "linalg_ldl_solv": [1897, 1939], "linalg_lu": [1897, 1939], "linalg_lu_factor": [1897, 1939], "linalg_lu_factor_ex": [1897, 1939], "linalg_lu_solv": [1897, 1939], "linalg_matmul": [1897, 1939], "linalg_matrix_exp": [1897, 1939], "linalg_matrix_pow": [1897, 1939], "linalg_multi_dot": [1897, 1939], "linalg_norm": [1897, 1939], "linalg_pinv": [1897, 1939], "linalg_solve_ex": [1897, 1939], "linalg_solve_triangular": [1897, 1939], "linalg_vand": [1897, 1939], "linalg_vecdot": [1897, 1939], "linalg_vector_norm": [1897, 1939], "_nest": 1897, "nested_to_padded_tensor": [1897, 1939], "_spars": 1897, "sparse_sampled_addmm": [1897, 1939], "_special": 1897, "special_airy_ai": [1897, 1939], "special_bessel_j0": [1897, 1939], "special_bessel_j1": [1897, 1939], "special_bessel_y0": [1897, 1939], "special_bessel_y1": [1897, 1939], "special_chebyshev_polynomial_t": [1897, 1939], "special_chebyshev_polynomial_u": [1897, 1939], "special_chebyshev_polynomial_v": [1897, 1939], "special_chebyshev_polynomial_w": [1897, 1939], "special_digamma": [1897, 1939], "special_entr": [1897, 1939], "special_erf": [1897, 1939], "special_erfc": [1897, 1939], "special_erfcx": [1897, 1939], "special_erfinv": [1897, 1939], "special_exp2": [1897, 1939], "special_expit": [1897, 1939], "special_expm1": [1897, 1939], "special_gammainc": [1897, 1939], "special_gammaincc": [1897, 1939], "special_gammaln": [1897, 1939], "special_hermite_polynomial_h": [1897, 1939], "special_i0": [1897, 1939], "special_i1": [1897, 1939], "special_laguerre_polynomial_l": [1897, 1939], "special_legendre_polynomial_p": [1897, 1939], "special_log1p": [1897, 1939], "special_log_ndtr": [1897, 1939], "special_log_softmax": [1897, 1939], "special_logit": [1897, 1939], "special_logsumexp": [1897, 1939], "special_modified_bessel_i0": [1897, 1939], "special_modified_bessel_i1": [1897, 1939], "special_modified_bessel_k0": [1897, 1939], "special_modified_bessel_k1": [1897, 1939], "special_multigammaln": [1897, 1939], "special_ndtr": [1897, 1939], "special_ndtri": [1897, 1939], "special_polygamma": [1897, 1939], "special_psi": [1897, 1939], "special_round": [1897, 1939], "special_scaled_modified_bessel_k0": [1897, 1939], "special_scaled_modified_bessel_k1": [1897, 1939], "special_shifted_chebyshev_polynomial_t": [1897, 1939], "special_shifted_chebyshev_polynomial_u": [1897, 1939], "special_shifted_chebyshev_polynomial_v": [1897, 1939], "special_shifted_chebyshev_polynomial_w": [1897, 1939], "special_sinc": [1897, 1939], "special_softmax": [1897, 1939], "special_spherical_bessel_j0": [1897, 1939], "special_xlog1pi": [1897, 1939], "special_xlogi": [1897, 1939], "special_zeta": [1897, 1939], "tval": 1897, "is_accept": 1897, "rect": 1897, "__complex__": 1897, "__float__": 1897, "__int__": 1897, "hex": [1897, 1899, 1939], "__hex__": 1897, "oct": [1897, 1939], "__oct__": 1897, "divmod": [1897, 1899, 1939], "chr": [1897, 1899, 1939], "int_float": 1897, "float_int": 1897, "fab": [1897, 1939], "int_int": 1897, "float_float": 1897, "complex_complex": 1897, "int_complex": 1897, "complex_int": 1897, "float_complex": 1897, "complex_float": [1897, 1955], "scalar_scalar": 1897, "int_to_int": 1897, "modf": [1897, 1939], "mathremaind": [1897, 1939], "programm": [1898, 1899], "tn": 1898, "subtyp": 1898, "an_error": 1898, "noreturn": [1898, 1899], "classvar": [1898, 1899], "anystr": [1898, 1899], "nomin": 1898, "newtyp": [1898, 1899], "tup": [1898, 1899], "emptydatastructur": 1898, "my_list": 1898, "aug_add_x": 1898, "inc": [1898, 1899], "assign_x": [1898, 1899], "polymorph": 1898, "sum_pair": 1898, "red": [1898, 1899], "enum_fn": [1898, 1899], "my_variable_nam": 1898, "top_level_method": 1898, "other_help": 1898, "ten": [1898, 1958], "my_paramet": 1898, "my_submodul": 1898, "tuple_or_list": 1898, "a_tupl": 1898, "de": [1898, 1941, 1944], "is_script": [1898, 1899, 1939], "unsupported_linear_op": 1898, "is_trac": [1898, 1899], "univers": 1898, "typing_extens": 1898, "a_dict": 1898, "some_dict": 1898, "delimit": [1899, 1900], "tstype": 1899, "tsmoduletyp": 1899, "tsalltyp": 1899, "tsmetatyp": 1899, "tsprimitivetyp": 1899, "tsstructuraltyp": 1899, "tsnominaltyp": 1899, "myclass": [1899, 1941], "printabl": [1899, 1941], "sortabl": 1899, "nevertheless": [1899, 1951], "inc_first_el": 1899, "cpufloattyp": 1899, "tstupl": 1899, "tsnamedtupl": 1899, "tslist": 1899, "tsdict": 1899, "tsoption": 1899, "tsunion": 1899, "tsfutur": 1899, "tsrref": 1899, "tsawait": 1899, "await": [1899, 1900, 1949], "keytyp": 1899, "_await": 1899, "mytupl": 1899, "scripted_inc": 1899, "_annotatednamedtupl": 1899, "_namedtupleannot": 1899, "_unannotatednamedtupl": 1899, "nameerror": 1899, "remedi": 1899, "tsbuiltinclass": 1899, "tscustomclass": 1899, "tsenum": 1899, "tstensor": 1899, "subtensor": [1899, 1924, 1964], "subwithtorchfunct": 1899, "script_g": 1899, "tsclassdef": 1899, "methoddefinit": 1899, "__torch__": [1899, 1937], "class2": 1899, "tsenumdef": 1899, "tsenumtyp": 1899, "memberidentifi": 1899, "intenum": 1899, "intflag": 1899, "basecolor": 1899, "compli": [1899, 1941], "classbodydefinit": 1899, "moduleobj": 1899, "testmodul": 1899, "dosometh": 1899, "strateg": 1899, "congruent": 1899, "python3": 1899, "unannot": 1899, "python3annot": 1899, "paramannot": 1899, "returnannot": 1899, "funcormethodbodi": 1899, "mypyannot": 1899, "localvarannot": 1899, "setval": 1899, "moduletyp": [1899, 1941], "classidentifi": 1899, "instanceattridentifi": 1899, "offset_": 1899, "tsstructualtyp": 1899, "grammar": 1899, "chapter": [1899, 1927], "floattyp": 1899, "inttyp": 1899, "stringtyp": 1899, "devicetyp": 1899, "bullet": 1899, "tupletyp": 1899, "listtyp": 1899, "enclosur": 1899, "parenth_form": 1899, "list_displai": 1899, "dict_displai": 1899, "legal": 1899, "stringliter": 1899, "floatnumb": 1899, "expression_list": 1899, "list_comprehens": 1899, "comp_for": 1899, "target_list": 1899, "or_expr": 1899, "key_datum_list": 1899, "dict_comprehens": 1899, "key_datum": 1899, "ongo": [1899, 1937, 1947, 1949], "datum": [1899, 1963], "attributeref": 1899, "slice_list": 1899, "slice_item": 1899, "proper_slic": 1899, "argument_list": 1899, "u_expr": 1899, "tightli": [1899, 1930], "m_expr": 1899, "a_expr": 1899, "shift_expr": 1899, "and_expr": 1899, "xor_expr": 1899, "comp_oper": 1899, "__contains__": 1899, "or_test": 1899, "and_test": 1899, "not_test": 1899, "conditional_express": 1899, "starred_item": 1899, "expression_stmt": 1899, "starred_express": 1899, "assignment_express": 1899, "assignment_stmt": 1899, "augmented_assignment_stmt": 1899, "augtarget": 1899, "augop": 1899, "annotated_assignment_stmt": 1899, "raise_stmt": 1899, "assert_stmt": 1899, "return_stmt": 1899, "del_stmt": 1899, "pass_stmt": 1899, "print_stmt": 1899, "break_stmt": 1899, "continue_stmt": 1899, "if_stmt": 1899, "while_stmt": 1899, "for_stmt": 1899, "with_stmt": 1899, "with_item": 1899, "__enter__": 1899, "suppress": [1899, 1948], "tuple_stmt": 1899, "getattr_stmt": 1899, "hasattr_stmt": 1899, "zip_stmt": 1899, "iterable1": 1899, "iterable2": 1899, "enumerate_stmt": 1899, "add_stat_valu": 1899, "sugaredvalu": 1899, "unrecogn": 1899, "honor": 1899, "__abs__": 1899, "bytearrai": 1899, "delattr": 1899, "exec": 1899, "__index__": 1899, "isint": 1899, "issubclass": [1899, 1924], "ndigit": 1899, "__import__": [1899, 1941], "rpc_sync": [1899, 1939, 1949, 1950, 1951], "synonym": 1899, "_fork": [1899, 1921], "_wait": [1899, 1921], "lexic": 1900, "indent": 1900, "coroutin": 1900, "__del__": [1900, 1919], "__bytes__": 1900, "__slots__": 1900, "metaclass": 1900, "mro": 1900, "__r": 1900, "bytesliter": 1900, "imagnumb": 1900, "parenthes": 1900, "ifs": 1900, "compound": 1900, "exc_typ": 1900, "exc_valu": 1900, "adaptivelogsoftmaxwithloss": 1901, "enable_grad": [1901, 1961], "overload_nam": [1903, 1924], "handi": [1903, 1919, 1922], "spotti": 1903, "googl": 1903, "keynam": 1903, "alias_analysi": 1903, "op_nam": 1903, "div_cpu": 1903, "off_by_default": 1905, "_registr": 1905, "born": 1906, "citizen": 1906, "afterthought": 1906, "unlock": 1906, "intuit": 1906, "alik": 1906, "grai": 1906, "systemat": 1906, "onboard": 1906, "maskedarrai": 1906, "masked_tensor": 1906, "blocklist": [1907, 1941], "mobileoptimizertyp": 1907, "conv_bn_fus": 1907, "correspondingli": 1907, "prepack": [1907, 1939], "insert_fold_prepack_op": 1907, "arm": [1907, 1944], "remove_dropout": 1907, "hoist": 1907, "hoist_conv_packed_param": 1907, "fuse_add_relu": 1907, "vulkan": 1907, "vulkan_automatic_gpu_transf": 1907, "freeze_modul": 1907, "script_modul": 1907, "optimization_blocklist": 1907, "preserved_method": 1907, "_mobileoptimizertyp": 1907, "recursivescriptmodul": [1907, 1935], "infrequ": 1909, "window_s": 1909, "max_sampl": 1909, "cap": 1909, "_monitor": 1909, "data_value_t": 1909, "eventhandlerhandl": 1909, "register_event_handl": 1909, "unregister_event_handl": 1909, "tensorboardeventhandl": 1909, "writer": [1909, 1930, 1958], "shader": [1910, 1931], "processor": 1910, "metalperformanceshad": 1910, "shared_memori": 1911, "abruptli": 1911, "get_all_sharing_strategi": 1911, "get_sharing_strategi": 1911, "set_sharing_strategi": 1911, "new_strategi": 1911, "abnorm": [1911, 1932], "fatal": [1911, 1932], "forev": [1911, 1923], "asap": 1911, "queue_2": 1911, "x_clone": 1911, "shm_open": 1911, "destructor": [1911, 1951], "torch_shm_manag": 1911, "unnot": 1911, "spawncontext": 1911, "has_nam": 1912, "is_shar": [1912, 1955], "is_sparse_csr": [1912, 1939, 1955], "is_tensor": [1912, 1953], "items": [1912, 1939], "unifies_names_from_input_tensor": 1912, "nbyte": [1912, 1939, 1955], "ndimens": 1912, "position": [1912, 1913], "unnam": [1912, 1913], "misalign": 1912, "inher": 1912, "disappear": 1912, "img": [1913, 1958], "renamed_img": 1913, "coexist": 1913, "scale_channel": 1913, "more_img": 1913, "named_tensor": 1913, "named_img": 1913, "flat_img": 1913, "named_flat_img": 1913, "unflattened_img": 1913, "unflattened_named_img": 1913, "grad_loss": 1913, "8107": 1913, "6357": 1913, "0783": 1913, "untest": 1913, "rename_map": 1913, "greedili": 1913, "unment": 1913, "49152": 1913, "datastructur": 1914, "seamless": 1914, "nested_tensor": 1914, "nt": 1914, "vein": 1914, "as_nested_tensor": 1914, "irregular": 1914, "indistinguish": 1914, "2286": 1914, "4842": 1914, "7827": 1914, "6745": [1914, 1954], "0658": 1914, "1247": 1914, "4078": 1914, "8083": 1914, "2871": 1914, "5559": 1914, "9885": 1914, "4074": 1914, "4855": 1914, "0733": 1914, "8285": 1914, "6858": 1914, "7030": 1914, "3481": 1914, "0236": 1914, "fake_grad": 1914, "6862": 1914, "1282": 1914, "1031": 1914, "0464": 1914, "3276": 1914, "9967": 1914, "0054": 1914, "8972": 1914, "9174": 1914, "4995": 1914, "8546": 1914, "7194": 1914, "2918": 1914, "1846": 1914, "8793": 1914, "5183": 1914, "6447": 1914, "8009": 1914, "8468": 1914, "9832": 1914, "5272": 1914, "pt_infer": 1914, "pt_larg": 1914, "pt_small": 1914, "bitwidth": [1915, 1930, 1944, 1953], "asymmetr": [1915, 1944, 1947], "sacrific": [1917, 1922], "dirac": 1917, "glorot": 1917, "bengio": 1917, "fan": 1917, "_in": 1917, "fan_in": 1917, "delv": 1917, "surpass": 1917, "he": 1917, "_mode": 1917, "fan_out": 1917, "redrawn": 1917, "sax": 1917, "2013": 1917, "marten": 1917, "walkthrough": 1918, "clip_grad_value_": 1918, "optimizer2": 1918, "batch_per_it": 1918, "iters_to_accumul": 1918, "num_proc": 1918, "grad_param": 1918, "grad_norm": 1918, "scaled_grad_param": 1918, "inv_scal": 1918, "optimizer0": 1918, "optimizer1": 1918, "output0": 1918, "model0": 1918, "model1": 1918, "loss0": 1918, "loss1": 1918, "imped": 1918, "poor": [1918, 1919], "dp_model": 1918, "imported_funct": 1918, "mymm": 1918, "myfloat32func": 1918, "fwd_output": 1918, "cleaner": 1919, "mapsto": 1919, "educ": 1919, "_save": 1919, "_saved_self": 1919, "convex": 1919, "concav": 1919, "togglabl": 1919, "drawback": 1919, "0011": 1919, "dirti": 1919, "hogwild": 1919, "train_fn": 1919, "graphtask": 1919, "copyslic": 1919, "mutex": 1919, "gotten": 1919, "curiou": 1919, "\u2102": 1919, "yj": 1919, "holomorph": 1919, "theori": 1919, "homomorph": 1919, "mathematician": 1919, "im": 1919, "studi": [1919, 1943], "beauti": 1919, "somewhat": [1919, 1922, 1953], "counterintuit": 1919, "0906": 1919, "4835": 1919, "audio": [1919, 1958], "\u211d": 1919, "_output": 1919, "vj": 1919, "selfdeletingtempfil": 1919, "tmp_dir": 1919, "uuid": 1919, "uuid4": 1919, "temp_fil": 1919, "forbidden": 1919, "savedtensor": 1919, "_raw_saved_": 1919, "_raw_saved_self": 1919, "save_on_disk_threshold": 1919, "tensor_or_sctf": 1919, "_saved_oth": 1919, "4th": 1920, "backcompat": 1920, "broadcast_warn": 1920, "userwarn": 1920, "compute_z": 1921, "w_z": 1921, "w_y": 1921, "tbb": 1921, "aten_thread": 1921, "omp": 1921, "mkl_thread": 1921, "bla": 1921, "mkldnn_cpu_runtim": 1921, "use_mkldnn": 1921, "use_tbb": 1921, "use_openmp": 1921, "ON": [1921, 1928, 1929], "set_num_interop_thread": 1921, "get_num_interop_thread": 1921, "set_num_thread": [1921, 1932], "get_num_thread": 1921, "omp_num_thread": 1921, "mkl_num_thread": 1921, "1024": [1921, 1922], "e5": 1921, "oversubscript": 1921, "irrespect": 1922, "spread": 1922, "cuda2": [1922, 1928], "a_ful": 1922, "10240": 1922, "b_full": 1922, "ab_ful": 1922, "7277": 1922, "ab_tf32": 1922, "016": 1922, "ga100": 1922, "1747": 1922, "relative_error": 1922, "0022": 1922, "ab_fp32": 1922, "0031": 1922, "000039": 1922, "7x": 1922, "globalcontext": 1922, "setallowtf32cubla": 1922, "setallowtf32cudnn": 1922, "bench_gemm_transform": 1922, "allow_fp16_reduc": 1922, "4048": 1922, "1634": 1922, "1639": 1922, "4056": 1922, "1670": 1922, "1661": 1922, "4080": 1922, "1664": 1922, "1658": 1922, "1651": 1922, "4104": 1922, "1677": 1922, "1674": 1922, "4128": 1922, "1796": [1922, 1930], "2519": 1922, "5096": 1922, "2144": 1922, "2149": 1922, "2766": 1922, "5120": 1922, "2142": 1922, "9728": 1922, "3875": 1922, "5779": 1922, "6182": 1922, "9656": 1922, "setallowfp16reductioncubla": 1922, "instabl": 1922, "setallowbf16reductioncubla": 1922, "start_ev": 1922, "elapsed_time_m": 1922, "exploit": 1922, "paragraph": [1922, 1927], "initial_grad": 1922, "memory_alloc": [1922, 1928], "memory_snapshot": [1922, 1928], "memcheck": 1922, "pytorch_no_cuda_memory_cach": [1922, 1928], "option2": 1922, "value2": 1922, "max_split_size_mb": 1922, "borderlin": 1922, "memory_summari": 1922, "resort": [1922, 1927, 1941], "roundup_power2_divis": 1922, "cudacachingalloc": 1922, "1280": 1922, "1536": 1922, "1792": 1922, "256mb": 1922, "512mb": 1922, "roundup_bypass_threshold_mb": 1922, "garbage_collection_threshold": 1922, "release_cached_block": 1922, "unfavor": 1922, "cuda_runtime_api": 1922, "iostream": 1922, "fpic": 1922, "my_malloc": 1922, "cout": 1922, "endl": [1922, 1929], "my_fre": 1922, "cudafre": 1922, "cudapluggablealloc": 1922, "new_alloc": 1922, "_cuda_clearcublasworkspac": 1922, "kib": 1922, "lru": 1922, "geometri": 1922, "1023": 1922, "use_pytorch_kernel_cach": 1922, "pytorch_kernel_cache_path": 1922, "store_tru": 1922, "disable_cuda": 1922, "assess": 1922, "cudagetdevicecount": 1922, "cuinit": 1922, "pytorch_nvml_based_cuda_check": 1922, "nvml": 1922, "nvmldevicegetcount_v2": 1922, "poison": 1922, "aforement": [1922, 1932], "train_load": [1922, 1932], "x_cpu": 1922, "x_gpu": 1922, "x_cpu_long": 1922, "y_cpu": 1922, "y_gpu": 1922, "y_cpu_long": 1922, "new_tensor": 1922, "overus": 1922, "cudagraphlaunch": 1922, "elid": 1922, "versatil": 1922, "static_input": 1922, "static_output": 1922, "realist": 1922, "sophist": [1922, 1940], "violat": [1922, 1925], "virtual": 1922, "d_in": 1922, "d_out": 1922, "640": 1922, "static_target": 1922, "static_y_pr": 1922, "static_loss": 1922, "real_target": 1922, "refil": 1922, "dag": 1922, "rejoin": 1922, "cuda_work": 1922, "nsight": 1922, "reorgan": 1922, "graphabl": 1922, "econom": 1922, "static_out_1": 1922, "g1_workload": 1922, "static_in_1": 1922, "static_out_2": 1922, "g2_workload": 1922, "static_in_2": 1922, "real_data_1": 1922, "real_data_2": 1922, "29500": [1923, 1942, 1949, 1950], "prerequisit": 1923, "grad0": 1923, "grad1": 1923, "bucket1": 1923, "bucket0": 1923, "hurt": 1923, "earliest": 1923, "unreadi": 1923, "hpp": 1923, "processgroupgloo": 1923, "processgroupmpi": 1923, "_sync_param": 1923, "autograd_hook": 1923, "prepare_for_backward": 1923, "_after_": 1923, "optimize_ddp": 1923, "mark_dirti": 1924, "mark_non_differenti": [1924, 1925], "set_materialize_grad": 1924, "linearfunct": 1924, "grad_bia": 1924, "mulconst": 1924, "mycub": [1924, 1925], "grad_dx": [1924, 1925], "my_cub": [1924, 1925], "input_featur": 1924, "output_featur": 1924, "duck": [1924, 1941], "__array_function__": 1924, "nep": 1924, "0018": 1924, "scalartensor": 1924, "handled_funct": 1924, "mandat": 1924, "update_wrapp": 1924, "ensure_tensor": 1924, "metadatatensor": 1924, "__add__": 1924, "subtensor2": 1924, "othersubtensor": 1924, "loggingtensor": 1924, "permiss": 1924, "_metadata": 1924, "ndata": 1924, "ministri": 1924, "silli": 1924, "superclass": 1924, "troublesom": 1924, "_get_overridable_funct": 1924, "overriden": 1924, "get_overridable_funct": [1924, 1964], "func_dict": 1924, "nn_func": 1924, "labori": 1924, "_get_testing_overrid": 1924, "get_testing_overrid": [1924, 1964], "override_dict": 1924, "dummy_add": 1924, "get_ignored_funct": [1924, 1964], "2020": 1924, "outdat": 1924, "dispatchkei": 1924, "zerotensor": 1924, "compositeimplicitautograd": 1924, "func_nam": 1924, "exot": 1924, "zoo": 1924, "intro": 1924, "custom_vjp": 1925, "custom_jvp": 1925, "to_numpi": 1925, "numpysort": 1925, "ind_inv": 1925, "_1": [1925, 1941], "numpytak": 1925, "numpy_sort": 1925, "saniti": 1925, "ggx": 1925, "vmappabl": 1925, "x_bdim": 1925, "ind_bdim": 1925, "ind_inv_bdim": 1925, "expanded_x": 1925, "expanded_ind": 1925, "expanded_ind_inv": 1925, "new_dim": 1925, "logical_dim": 1925, "maybe_expand_bdim_at_front": 1925, "pseudocod": 1925, "rapidli": [1926, 1932], "abridg": 1926, "total_loss": 1926, "extrud": 1926, "phenomenon": 1926, "plenti": 1926, "bptt": 1926, "repackag": 1926, "nm": 1926, "blow": 1926, "elf": 1926, "run_model": 1926, "recoveri": 1926, "data_parallel": 1926, "pad_packed_sequ": 1926, "padded_input": 1926, "packed_input": 1926, "packed_output": 1926, "my_lstm": 1926, "dp_m": 1926, "padding_input": 1926, "ur": 1927, "rewritten": 1927, "j_f": 1927, "calculu": 1927, "cw": 1927, "bigger": 1927, "articl": 1927, "58eb23378f2a376565a66ac32c93a316c45b6131": 1927, "l99": 1927, "l105": 1927, "ds_dx": 1927, "compute_gradi": 1927, "ds_dy": 1927, "conj_w_d": 1927, "w_d": 1927, "d_idx": 1927, "albeit": 1927, "wonder": 1927, "amd": 1928, "dialect": 1928, "portabl": 1928, "rocmdoc": 1928, "programming_guid": 1928, "hip_api_guid": 1928, "cuda_vers": 1928, "cudaruntimegetvers": 1928, "cudadrivergetvers": 1928, "hip_vers": 1928, "hipruntimegetvers": 1928, "hipdrivergetvers": 1928, "11000": 1928, "use_rocm": 1928, "rocm_vers": 1928, "40300": 1928, "cmake": [1928, 1936], "drocm_force_enable_gpu_assert": 1928, "addglobalcallback": 1929, "recordfunct": 1929, "ivalu": 1929, "threadlocaldebuginfo": 1929, "debuginfoguard": 1929, "recordfunctioncallback": 1929, "onfunctionent": 1929, "onfunctionexit": 1929, "needsinput": 1929, "samplingprob": 1929, "enablerecordfunct": 1929, "cerr": 1929, "broader": [1929, 1961], "inject": 1929, "setapiusagehandl": 1929, "setapiusagelogg": 1929, "event_nam": 1929, "c10_log_api_usage_onc": 1929, "my_api": 1929, "_log_api_usage_onc": 1929, "archiv": 1929, "bundl": 1929, "akin": 1929, "jpeg": 1929, "camera": [1929, 1958], "setexportmoduleextrafileshook": 1929, "extrafilesmap": 1929, "producer_info": 1929, "getenv": 1929, "getsourc": 1929, "precompil": 1929, "pyc": 1929, "loos": 1929, "elabor": 1930, "tpu": 1930, "mylinear": 1930, "sample_input": 1930, "0413": 1930, "2057": 1930, "0597": 1930, "8247": 1930, "1045": 1930, "4299": 1930, "5457": 1930, "4793": 1930, "3634": 1930, "8525": 1930, "6749": 1930, "l0": [1930, 1935], "bignet": 1930, "big_net": 1930, "dynamicnet": 1930, "dynamic_net": 1930, "2051": 1930, "7601": 1930, "1963": 1930, "4354": 1930, "6598": 1930, "4446": 1930, "4628": 1930, "8774": 1930, "6848": 1930, "5458": 1930, "4647": 1930, "5310": 1930, "0609": 1930, "0940": 1930, "1266": 1930, "0623": 1930, "3508": 1930, "0550": 1930, "5317": 1930, "5562": 1930, "4028": 1930, "6942": 1930, "0140": 1930, "0329": 1930, "1160": 1930, "0434": 1930, "3889": 1930, "1613": 1930, "6340": 1930, "3887": 1930, "9979": 1930, "0767": 1930, "3526": 1930, "8756": 1930, "5847": 1930, "6016": 1930, "1608": 1930, "0829": 1930, "6338": 1930, "9239": 1930, "6943": 1930, "5034": 1930, "0268": 1930, "4489": 1930, "9403": 1930, "2509": 1930, "5052": 1930, "3088": 1930, "4951": 1930, "3381": 1930, "5166": 1930, "boilerpl": [1930, 1941], "beginn": 1930, "examples_nn": 1930, "polynomial_modul": 1930, "teach": 1930, "0013": [1930, 1954], "0030": 1930, "0008": 1930, "modalmodul": 1930, "6614": 1930, "2669": 1930, "0617": 1930, "4519": 1930, "two_layer_net_optim": 1930, "blitz": 1930, "neural_networks_tutori": 1930, "autograd_tutori": 1930, "new_net": 1930, "runningmean": 1930, "1041": 1930, "0647": 1930, "1515": 1930, "m_load": 1930, "unserialized_th": 1930, "statefulmodul": 1930, "param3": 1930, "param_list": 1930, "parameterlist": 1930, "param_dict": 1930, "parameterdict": 1930, "buffer1": 1930, "buffer2": 1930, "buffer3": 1930, "0322": 1930, "9066": 1930, "1409": 1930, "4852": 1930, "6949": 1930, "2911": 1930, "1044": 1930, "4202": 1930, "1953": 1930, "5299": 1930, "8747": 1930, "6289": 1930, "4898": 1930, "6434": 1930, "5187": 1930, "0346": 1930, "4077": 1930, "4324": 1930, "7022": 1930, "3915": 1930, "6176": 1930, "6062": 1930, "5992": 1930, "4452": 1930, "2843": 1930, "3710": 1930, "3947": 1930, "saving_loading_model": 1930, "what_is_state_dict": 1930, "skip_init": 1930, "skip_param_init": 1930, "new_grad_input": 1930, "5059": 1930, "8158": 1930, "2390": 1930, "0043": 1930, "addmmbackward": 1930, "forward_pre_hook_handl": 1930, "5752": 1930, "7421": 1930, "forward_hook_handl": 1930, "0980": 1930, "4666": 1930, "0256": 1930, "4497": 1930, "5046": 1930, "combat": 1930, "mps_devic": 1931, "yourfavoritenet": 1931, "a3c": 1932, "set_start_method": 1932, "simplequeu": 1932, "cope": 1932, "eleg": 1932, "num_process": 1932, "inappropri": 1932, "vcpu": 1932, "htop": 1932, "exceed": 1932, "competit": 1932, "oversubscrib": 1932, "mnist_hogwild": 1932, "dataloader_kwarg": 1932, "train_epoch": 1932, "30x": 1932, "754": 1933, "1e20": 1933, "4142e": 1933, "struggl": 1933, "benign": 1933, "v_dot2": 1933, "mfma": 1933, "fp64": 1933, "rocbla": 1933, "miopen": 1933, "rocblas_internal_fp16_alt_impl": 1933, "miopen_debug_convolution_attrib_fp16_alt_impl": 1933, "_convbackend": 1933, "slownd": 1933, "slownd_transpos": 1933, "slownd_dil": 1933, "slownd_dilated_transpos": 1933, "convbackend": 1933, "miopendepthwis": 1933, "miopentranspos": 1933, "svd_lowrank": [1934, 1953], "22modul": 1934, "20determin": 1934, "index_add_cuda_": 1934, "1509": 1934, "8027": 1934, "0333": 1934, "1444": 1934, "rese": 1934, "seed_work": 1934, "worker_se": 1934, "train_dataset": 1934, "tensor_dict": 1935, "loaded_numb": 1935, "loaded_even": 1935, "scene": [1935, 1958], "loaded_smal": 1935, "num_batches_track": 1935, "bn_state_dict": 1935, "new_bn": 1935, "out0_relu": 1935, "1400": 1935, "4563": 1935, "0271": 1935, "4406": 1935, "2827": 1935, "4588": 1935, "2031": 1935, "0300": 1935, "1316": 1935, "6533": 1935, "3413": 1935, "1112": 1935, "m_state_dict": 1935, "new_m": 1935, "original_nam": 1935, "controlflowmodul": 1935, "controlflowmodule_trac": 1935, "3793": 1935, "controlflowmodule_script": 1935, "tagger": 1935, "ipu_tag": 1935, "ipu_deseri": 1935, "startswith": [1935, 1939], "get_default_load_endian": 1935, "byteord": 1935, "loadendian": 1935, "default_load_endian": 1935, "set_default_load_endian": 1935, "endian": 1935, "rem": 1936, "7z": 1936, "curl": 1936, "ossci": 1936, "mkl_2020": 1936, "aoa": 1936, "omkl": 1936, "cuda_prefix": 1936, "cuda102": 1936, "magma_2": 1936, "4_": 1936, "omagma": 1936, "cmake_include_path": 1936, "magma_hom": 1936, "studio": 1936, "pip": [1936, 1937, 1958], "cmake_gener": 1936, "ffi": 1936, "create_extens": 1936, "_ext": 1936, "define_macro": 1936, "relative_to": 1936, "c99": 1936, "x86_x64": 1936, "packagesnotfounderror": 1936, "anaconda": 1936, "noarch": 1936, "continuum": 1936, "pkg": 1936, "pro": [1936, 1958], "msys2": 1936, "importerror": [1936, 1941], "dll": 1936, "vc2017": 1936, "redistribut": 1936, "vc": 1936, "vs2017_runtim": 1936, "mkl_fft": 1936, "intel_openmp": 1936, "vs2017": 1936, "openbla": 1936, "forg": 1936, "bootstrap": 1936, "forgotten": 1936, "idiom": 1936, "freeze_support": 1936, "forkingpickl": 1936, "brokenpipeerror": 1936, "errno": 1936, "couldn": [1936, 1937], "torch_14808_1591070686": 1936, "thalloc": 1936, "tdr": 1936, "thcudacheck": 1936, "storageshar": 1936, "dummy_input": 1937, "input_nam": 1937, "actual_input_1": 1937, "learned_": 1937, "output_nam": 1937, "learned_0": 1937, "learned_1": 1937, "learned_2": 1937, "learned_3": 1937, "learned_14": 1937, "learned_15": 1937, "kernel_shap": 1937, "9216": 1937, "transb": 1937, "check_model": 1937, "printable_graph": 1937, "onnxruntim": 1937, "ort": 1937, "ort_sess": 1937, "inferencesess": 1937, "astyp": 1937, "seq_length": 1937, "real_seq_length": 1937, "experienc": 1937, "new_data": 1937, "symbolic_opset": 1937, "symbolic_opset9": 1937, "_variablefunct": 1937, "pyi": 1937, "___torch_mangle_0": 1937, "alpha_f": 1937, "myrelu": 1937, "value_t": 1937, "pythonop": [1937, 1939], "mylogexp": 1937, "operator_export_typ": 1937, "onnx_fallthrough": 1937, "onnx_aten_fallback": 1937, "onnxscript": 1937, "onnx_opset": 1937, "opset15": 1937, "custom_opset": 1937, "67326": 1937, "alphax": 1937, "castlik": 1937, "gammax": 1937, "settyp": 1937, "custom_selu": 1937, "jit_util": 1937, "graphcontext": 1937, "onnxscript_op": 1937, "register_custom_op_symbol": 1937, "symbolic_nam": 1937, "symbolic_fn": 1937, "symbolic_help": 1937, "symbolic_foo_forward": 1937, "custom_domain": 1937, "attr1_f": 1937, "attr2_i": 1937, "foo_forward": 1937, "foomodel": 1937, "example_input1": 1937, "caffe2": [1937, 1958], "torch_script_graph": 1937, "unconvertible_op": 1937, "dynamic_ax": 1937, "export_param": 1937, "trainingmod": 1937, "operatorexporttyp": 1937, "do_constant_fold": 1937, "keep_initializers_as_input": 1937, "export_modules_as_funct": 1937, "autograd_inlin": 1937, "OF": 1937, "WITH": 1937, "input_i": 1937, "input_z": 1937, "fileno": 1937, "untrain": 1937, "doc_str": 1937, "onnx_aten": 1937, "build_caffe2": 1937, "summodul": 1937, "dim_valu": 1937, "my_custom_axis_nam": 1937, "dim_param": 1937, "sum_dynamic_axes_1": 1937, "predefin": 1937, "74765": 1937, "checkererror": 1937, "unsupportedoperatorerror": 1937, "export_to_pretty_str": 1937, "export_typ": 1937, "google_print": 1937, "add_node_nam": 1937, "nodeproto": 1937, "debugstr": 1937, "contrib": 1937, "test_aten_embedding_2": 1937, "test_oper": 1937, "unregister_custom_op_symbol": 1937, "select_model_mode_for_export": 1937, "is_in_onnx_export": 1937, "middl": 1937, "enable_log": 1937, "disable_log": 1937, "graphinfo": 1937, "incorrect_relu_symbolic_funct": 1937, "2328854203224182": 1937, "699536174352349": 1937, "rapid": 1937, "exportopt": 1937, "my_nn_modul": 1937, "my_nn_module_attribut": 1937, "l870": 1937, "my_model_without_initi": 1937, "my_model_with_initi": 1937, "underdevelop": 1938, "parsabl": 1938, "sarif": 1938, "diagsys0001": 1938, "fxe0001": 1938, "fxe0002": 1938, "fxe0003": 1938, "fxe0004": 1938, "fxe0005": 1938, "fxe0006": 1938, "atenlib": 1938, "fxe0007": 1938, "fxe0008": 1938, "fxe0009": 1938, "fxe0010": 1938, "fxe0011": 1938, "fxe0012": 1938, "fxe0013": 1938, "fxe0014": 1938, "fxe0015": 1938, "fxe0016": 1938, "poe0001": 1938, "poe0002": 1938, "poe0003": 1938, "poe0004": 1938, "exportdiagnost": 1938, "cpp_stack": 1938, "record_cpp_call_stack": 1938, "constantchunk": 1939, "__and_": 1939, "__contains_": 1939, "__derive_index": 1939, "__getitem_": 1939, "__interpol": 1939, "__is_": 1939, "__isnot_": 1939, "__lshift_": 1939, "__not_": 1939, "__or_": 1939, "__range_length": 1939, "__rshift_": 1939, "__xor_": 1939, "_cast_byt": 1939, "_cast_char": 1939, "_cast_doubl": 1939, "_cast_float": 1939, "_cast_half": 1939, "_cast_int": 1939, "_cast_long": 1939, "_cast_short": 1939, "_conj": 1939, "_convolution_mod": 1939, "_dim_arang": 1939, "_pack_padded_sequ": 1939, "_pad_packed_sequ": 1939, "_reshape_from_tensor": 1939, "_sample_dirichlet": 1939, "_set_item": 1939, "_shape_as_tensor": 1939, "_standard_gamma": 1939, "_uniqu": 1939, "_unique2": 1939, "_weight_norm": 1939, "conv1d_relu": 1939, "conv2d_relu": 1939, "conv3d_relu": 1939, "embedding_renorm": 1939, "floordiv": [1939, 1946], "nonzero_numpi": 1939, "numpy_t": 1939, "unchecked_cast": 1939, "unique_dim": 1939, "_quantiz": 1939, "conv2d_prepack": 1939, "conv3d_prepack": 1939, "conv_transpose1d_prepack": 1939, "conv_transpose2d_prepack": 1939, "conv_transpose3d_prepack": 1939, "linear_dynam": 1939, "linear_prepack": 1939, "linear_prepack_fp16": 1939, "linear_prepack_fp16_legaci": 1939, "linear_prepack_legaci": 1939, "_test": 1939, "get_first": 1939, "compleximplicit": 1939, "floatimplicit": 1939, "intimplicit": 1939, "__iand_": 1939, "__ilshift_": 1939, "__ior_": 1939, "__irshift_": 1939, "__ixor_": 1939, "__round_to_zero_floordiv": 1939, "__upsampl": 1939, "__upsample_bilinear": 1939, "__upsample_nearest": 1939, "_adaptive_avg_pool3d": 1939, "_add_batch_dim": 1939, "_add_relu": 1939, "_addmm_activ": 1939, "_aminmax": 1939, "_amp_foreach_non_finite_check_and_unscal": 1939, "_amp_update_scal": 1939, "_assert_async": 1939, "_assert_tensor_metadata": 1939, "_autocast_to_full_precis": 1939, "_autocast_to_reduced_precis": 1939, "_batch_norm_impl_index": 1939, "_cdist_forward": 1939, "_cholesky_solve_help": 1939, "_choose_qparams_per_tensor": 1939, "_coalesc": 1939, "_compute_linear_combin": 1939, "_conj_copi": 1939, "_conj_phys": 1939, "_conv_depthwise2d": 1939, "_convert_indices_from_coo_to_csr": 1939, "_convert_indices_from_csr_to_coo": 1939, "_copy_from": 1939, "_copy_from_and_res": 1939, "_ctc_loss": 1939, "_cudnn_ctc_loss": 1939, "_cudnn_init_dropout_st": 1939, "_cudnn_rnn": 1939, "_cudnn_rnn_flatten_weight": 1939, "_cufft_clear_plan_cach": 1939, "_cufft_get_plan_cache_max_s": 1939, "_cufft_get_plan_cache_s": 1939, "_cufft_set_plan_cache_max_s": 1939, "_cummax_help": 1939, "_cummin_help": 1939, "_debug_has_internal_overlap": 1939, "_dimi": 1939, "_dimv": 1939, "_dirichlet_grad": 1939, "_efficient_attention_forward": 1939, "_efficientzerotensor": 1939, "_embedding_bag": 1939, "_embedding_bag_forward_onli": 1939, "_empty_affine_quant": 1939, "_empty_per_channel_affine_quant": 1939, "_euclidean_dist": 1939, "_fake_quantize_learnable_per_channel_affin": 1939, "_fake_quantize_learnable_per_tensor_affin": 1939, "_fake_quantize_per_tensor_affine_cachemask_tensor_qparam": 1939, "_fft_c2c": 1939, "_fft_c2r": 1939, "_fft_r2c": 1939, "_fill_mem_eff_dropout_mask": 1939, "_flash_attention_forward": 1939, "_foreach_ab": 1939, "_foreach_aco": 1939, "_foreach_add": 1939, "_foreach_addcdiv": 1939, "_foreach_addcmul": 1939, "_foreach_asin": 1939, "_foreach_atan": 1939, "_foreach_ceil": 1939, "_foreach_clamp_max": 1939, "_foreach_clamp_min": 1939, "_foreach_co": 1939, "_foreach_cosh": 1939, "_foreach_div": 1939, "_foreach_erf": 1939, "_foreach_erfc": 1939, "_foreach_exp": 1939, "_foreach_expm1": 1939, "_foreach_floor": 1939, "_foreach_frac": 1939, "_foreach_lerp": 1939, "_foreach_lgamma": 1939, "_foreach_log": 1939, "_foreach_log10": 1939, "_foreach_log1p": 1939, "_foreach_log2": 1939, "_foreach_maximum": 1939, "_foreach_minimum": 1939, "_foreach_mul": 1939, "_foreach_neg": 1939, "_foreach_norm": 1939, "_foreach_pow": 1939, "_foreach_reciproc": 1939, "_foreach_round": 1939, "_foreach_sigmoid": 1939, "_foreach_sin": 1939, "_foreach_sinh": 1939, "_foreach_sqrt": 1939, "_foreach_sub": 1939, "_foreach_tan": 1939, "_foreach_tanh": 1939, "_foreach_trunc": 1939, "_foreach_zero": 1939, "_functional_assert_async": 1939, "_functional_sym_constrain_rang": 1939, "_fused_adam": 1939, "_fused_adamw": 1939, "_fused_dropout": 1939, "_fused_moving_avg_obs_fq_help": 1939, "_fused_moving_avg_obs_fq_helper_funct": 1939, "_fused_sdp_choic": 1939, "_fw_primal": 1939, "_fw_primal_copi": 1939, "_get_cpu_cap": 1939, "_get_tracing_st": 1939, "_grad_sum_to_s": 1939, "_has_compatible_shallow_copy_typ": 1939, "_has_same_storage_numel": 1939, "_histogramdd_bin_edg": 1939, "_histogramdd_from_bin_ct": 1939, "_histogramdd_from_bin_tensor": 1939, "_index_put_impl": 1939, "_indices_copi": 1939, "_infer_s": 1939, "_int_mm": 1939, "_is_all_tru": 1939, "_is_any_tru": 1939, "_is_zerotensor": 1939, "_linalg_check_error": 1939, "_linalg_det": 1939, "_linalg_eigh": 1939, "_linalg_slogdet": 1939, "_linalg_solve_ex": 1939, "_linalg_svd": 1939, "_list_to_tensor": 1939, "_local_scalar_dens": 1939, "_logcumsumexp": 1939, "_lstm_mp": 1939, "_make_dep_token": 1939, "_make_du": 1939, "_make_dual_copi": 1939, "_make_per_channel_quantized_tensor": 1939, "_make_per_tensor_quantized_tensor": 1939, "_masked_scal": 1939, "_masked_softmax": 1939, "_mkldnn_reshap": 1939, "_mkldnn_transpos": 1939, "_mps_convolut": 1939, "_mps_convolution_transpos": 1939, "_native_batch_norm_legit_funct": 1939, "_native_batch_norm_legit_no_train": 1939, "_native_multi_head_attent": 1939, "_ncf_unsqueez": 1939, "_ncf_view": 1939, "_neg_view": 1939, "_neg_view_copi": 1939, "_nested_from_pad": 1939, "_nested_from_padded_and_nested_exampl": 1939, "_nested_tensor_from_mask": 1939, "_nested_tensor_from_mask_left_align": 1939, "_nested_tensor_from_tensor_list": 1939, "_nested_tensor_s": 1939, "_nested_tensor_softmax_with_shap": 1939, "_nested_tensor_storage_offset": 1939, "_nested_tensor_strid": 1939, "_nested_view_from_buff": 1939, "_nested_view_from_buffer_copi": 1939, "_new_zeros_with_same_feature_meta": 1939, "_nnpack_avail": 1939, "_nnpack_spatial_convolut": 1939, "_no_grad_embedding_renorm": 1939, "_no_grad_fil": 1939, "_no_grad_norm": 1939, "_no_grad_uniform": 1939, "_no_grad_zero": 1939, "_pack_sequ": 1939, "_pad_circular": 1939, "_pad_enum": 1939, "_pdist_forward": 1939, "_pin_memori": 1939, "_prelu_kernel": 1939, "_propagate_xla_data": 1939, "_remove_batch_dim": 1939, "_reshape_alia": 1939, "_reshape_alias_copi": 1939, "_reshape_copi": 1939, "_resize_output": 1939, "_rowwise_prun": 1939, "_saturate_weight_to_fp16": 1939, "_scaled_dot_product_attention_math": 1939, "_scaled_dot_product_efficient_attent": 1939, "_scaled_dot_product_flash_attent": 1939, "_size_if_not_equ": 1939, "_slow_conv2d_forward": 1939, "_sobol_engine_draw": 1939, "_sobol_engine_ff": 1939, "_sobol_engine_initialize_st": 1939, "_sobol_engine_scrambl": 1939, "_sparse_addmm": 1939, "_sparse_broadcast_to": 1939, "_sparse_broadcast_to_copi": 1939, "_sparse_bsc_tensor_unsaf": 1939, "_sparse_bsr_tensor_unsaf": 1939, "_sparse_compressed_tensor_unsaf": 1939, "_sparse_coo_tensor_unsaf": 1939, "_sparse_coo_tensor_with_dim": 1939, "_sparse_coo_tensor_with_dims_and_tensor": 1939, "_sparse_csc_tensor_unsaf": 1939, "_sparse_csr_prod": 1939, "_sparse_csr_sum": 1939, "_sparse_csr_tensor_unsaf": 1939, "_sparse_log_softmax": 1939, "_sparse_mask_project": 1939, "_sparse_mm": 1939, "_sparse_mm_reduce_impl": 1939, "_sparse_semi_structured_linear": 1939, "_sparse_softmax": 1939, "_sparse_sparse_matmul": 1939, "_sparse_sum": 1939, "_spdiag": 1939, "_standard_gamma_grad": 1939, "_tensor_to_list": 1939, "_test_ambiguous_default": 1939, "_test_autograd_multiple_dispatch": 1939, "_test_autograd_multiple_dispatch_view": 1939, "_test_autograd_multiple_dispatch_view_copi": 1939, "_test_check_tensor": 1939, "_test_functorch_fallback": 1939, "_test_optional_filled_intlist": 1939, "_test_optional_floatlist": 1939, "_test_optional_intlist": 1939, "_test_serialization_subcmul": 1939, "_test_string_default": 1939, "_test_warn_in_autograd": 1939, "_thnn_fused_gru_cel": 1939, "_thnn_fused_lstm_cel": 1939, "_to_cpu": 1939, "_to_dens": 1939, "_to_spars": 1939, "_to_sparse_bsc": 1939, "_to_sparse_bsr": 1939, "_to_sparse_csc": 1939, "_to_sparse_csr": 1939, "_to_sparse_semi_structur": 1939, "_transform_bias_rescale_qkv": 1939, "_transformer_encoder_layer_fwd": 1939, "_trilinear": 1939, "_triton_multi_head_attent": 1939, "_triton_scaled_dot_attent": 1939, "_unpack_du": 1939, "_unsafe_index": 1939, "_unsafe_index_put": 1939, "_unsafe_view": 1939, "_unwrap_opt": 1939, "_upsample_bicubic2d_aa": 1939, "_upsample_bilinear2d_aa": 1939, "_upsample_nearest_exact1d": 1939, "_upsample_nearest_exact2d": 1939, "_upsample_nearest_exact3d": 1939, "_use_cudnn_ctc_loss": 1939, "_use_cudnn_rnn_flatten_weight": 1939, "_validate_compressed_sparse_indic": 1939, "_validate_sparse_bsc_tensor_arg": 1939, "_validate_sparse_bsr_tensor_arg": 1939, "_validate_sparse_compressed_tensor_arg": 1939, "_validate_sparse_coo_tensor_arg": 1939, "_validate_sparse_csc_tensor_arg": 1939, "_validate_sparse_csr_tensor_arg": 1939, "_values_copi": 1939, "_weight_norm_interfac": 1939, "capit": 1939, "confirmed_by_own": [1939, 1949], "convolution_overrid": 1939, "copy_sparse_to_spars": 1939, "endswith": 1939, "expandtab": 1939, "fake_quantize_per_channel_affine_cachemask": 1939, "fake_quantize_per_tensor_affine_cachemask": 1939, "fill_diagon": 1939, "glu_jvp": 1939, "has_torch_funct": [1939, 1964], "is_non_overlapping_and_dens": 1939, "is_own": 1939, "is_strides_like_format": 1939, "isalnum": 1939, "isalpha": 1939, "isdecim": 1939, "isdigit": 1939, "isidentifi": 1939, "islow": 1939, "isnumer": 1939, "isprint": 1939, "isspac": 1939, "istitl": 1939, "isupp": 1939, "lift_fresh": 1939, "ljust": 1939, "local_valu": [1939, 1942], "log_sigmoid_forward": 1939, "lstrip": 1939, "matrix_h": 1939, "nll_loss2d_forward": 1939, "nll_loss_forward": 1939, "normal_funct": 1939, "owner_nam": 1939, "percentformat": 1939, "quantized_gru": 1939, "quantized_lstm": 1939, "resize_as_spars": 1939, "rfind": 1939, "rindex": 1939, "rjust": 1939, "rpartit": 1939, "rsplit": 1939, "rstrip": 1939, "set_data": 1939, "slow_conv3d_forward": 1939, "sparse_res": 1939, "sparse_resize_and_clear": 1939, "splitlin": 1939, "swapcas": 1939, "unique_dim_consecut": 1939, "zfill": 1939, "_allgather_bas": 1939, "_reduce_scatter_bas": 1939, "allgath": 1939, "allgather_coalesc": 1939, "allgather_into_tensor_coalesc": 1939, "allreduce_coalesc": 1939, "alltoal": 1939, "alltoall_bas": 1939, "recv_any_sourc": 1939, "reduce_scatter_tensor_coalesc": 1939, "debugprim": 1939, "load_tensor": 1939, "_mm_plus_mm": 1939, "_mkl_linear": 1939, "_mkl_reorder_linear_weight": 1939, "_convolution_pointwis": 1939, "_convolution_transpose_pointwis": 1939, "_is_mkldnn_bf16_support": 1939, "_linear_pointwis": 1939, "_reorder_convolution_transpose_weight": 1939, "_reorder_convolution_weight": 1939, "_reorder_linear_weight": 1939, "mkldnn_prepack": 1939, "conv2d_run": 1939, "nvprim": 1939, "conv2d_clamp_prepack": 1939, "conv2d_clamp_run": 1939, "conv2d_transpose_clamp_prepack": 1939, "conv2d_transpose_clamp_run": 1939, "linear_clamp_prepack": 1939, "linear_clamp_run": 1939, "unpack_prepacked_sizes_conv2d": 1939, "unpack_prepacked_sizes_linear": 1939, "addstatvalu": 1939, "autogradadd": 1939, "autogradallnonzero": 1939, "autogradallzero": 1939, "autogradanynonzero": 1939, "autogradzero": 1939, "bailouttempl": 1939, "broadcastmkldnntensor": 1939, "broadcasts": 1939, "chunksiz": 1939, "constantmkldnntensor": 1939, "differentiablegraph": 1939, "enumnam": 1939, "enumvalu": 1939, "fallbackgraph": 1939, "fusedconcat": 1939, "fusiongroup": 1939, "ifthenels": 1939, "ignoredpythonop": 1939, "mkldnnclamp": 1939, "mkldnnhardsigmoid": 1939, "mkldnnhardswish": 1939, "mkldnnhardtanh": 1939, "mkldnnlayernorm": 1939, "mkldnnscalarmul": 1939, "mmbatchsid": 1939, "mmtreereduc": 1939, "modulecontainerindex": 1939, "numtotensor": 1939, "raiseexcept": 1939, "reductions": 1939, "requiresgradcheck": 1939, "staticruntimecopyout": 1939, "staticsubgraph": 1939, "stringindex": 1939, "tensorexprdynamicgroup": 1939, "tensorexprdynamicguard": 1939, "tensorexprgroup": 1939, "timepoint": 1939, "tupleindex": 1939, "tupleunpack": 1939, "varconcat": 1939, "varstack": 1939, "awaitable_nowait": 1939, "awaitable_wait": 1939, "is_cpu": 1939, "is_ipu": 1939, "is_mkldnn": 1939, "is_mp": 1939, "is_nest": 1939, "is_ort": 1939, "is_quant": 1939, "is_vulkan": 1939, "is_xla": 1939, "is_xpu": 1939, "onednnfusiongroup": 1939, "onednnfusionguard": 1939, "profile_ivalu": 1939, "rangelist": 1939, "rpc_remot": 1939, "unchecked_unwrap_opt": 1939, "_call_end_callbacks_on_jit_fut": 1939, "_record_function_ent": 1939, "_record_function_enter_new": 1939, "_record_function_exit": 1939, "_bfloat16quantizedtofloat": 1939, "_floattobfloat16quant": 1939, "add_out": 1939, "add_relu_out": 1939, "add_scalar_out": 1939, "add_scalar_relu": 1939, "add_scalar_relu_out": 1939, "batch_norm1d": 1939, "batch_norm1d_relu": 1939, "batch_norm2d": 1939, "batch_norm2d_relu": 1939, "batch_norm3d": 1939, "batch_norm3d_relu": 1939, "batch_norm_relu": 1939, "cat_out": 1939, "cat_relu": 1939, "cat_relu_out": 1939, "conv1d_dynam": 1939, "conv1d_prepack": 1939, "conv1d_unpack": 1939, "conv2d_add": 1939, "conv2d_add_relu": 1939, "conv2d_dil": 1939, "conv2d_dynam": 1939, "conv2d_group": 1939, "conv2d_output_pad": 1939, "conv2d_pad": 1939, "conv2d_strid": 1939, "conv2d_transpos": 1939, "conv2d_unpack": 1939, "conv2d_unpack_s": 1939, "conv3d_dil": 1939, "conv3d_dynam": 1939, "conv3d_group": 1939, "conv3d_output_pad": 1939, "conv3d_pad": 1939, "conv3d_strid": 1939, "conv3d_transpos": 1939, "conv3d_unpack": 1939, "conv_prepack": 1939, "conv_transpose1d_dynam": 1939, "conv_transpose1d_unpack": 1939, "conv_transpose2d_dil": 1939, "conv_transpose2d_dynam": 1939, "conv_transpose2d_group": 1939, "conv_transpose2d_output_pad": 1939, "conv_transpose2d_pad": 1939, "conv_transpose2d_strid": 1939, "conv_transpose2d_transpos": 1939, "conv_transpose2d_unpack": 1939, "conv_transpose3d_dil": 1939, "conv_transpose3d_dynam": 1939, "conv_transpose3d_group": 1939, "conv_transpose3d_output_pad": 1939, "conv_transpose3d_pad": 1939, "conv_transpose3d_strid": 1939, "conv_transpose3d_transpos": 1939, "conv_transpose3d_unpack": 1939, "conv_unpack": 1939, "embedding_4bit": 1939, "embedding_bag_2bit_prepack": 1939, "embedding_bag_2bit_rowwise_offset": 1939, "embedding_bag_2bit_unpack": 1939, "embedding_bag_4bit": 1939, "embedding_bag_4bit_prepack": 1939, "embedding_bag_4bit_rowwise_offset": 1939, "embedding_bag_4bit_unpack": 1939, "embedding_bag_byt": 1939, "embedding_bag_byte_prepack": 1939, "embedding_bag_byte_rowwise_offset": 1939, "embedding_bag_byte_unpack": 1939, "embedding_bag_prepack": 1939, "embedding_bag_unpack": 1939, "embedding_byt": 1939, "linear_dynamic_fp16": 1939, "linear_leaky_relu": 1939, "linear_relu": [1939, 1946], "linear_relu_dynam": 1939, "linear_relu_dynamic_fp16": 1939, "linear_tanh": 1939, "linear_unpack": 1939, "linear_unpack_fp16": 1939, "linear_with_input_q_dq_qweight_dq_output_fp32": 1939, "linear_with_input_q_dq_qweight_dq_relu_output_fp32": 1939, "make_quantized_cell_param": 1939, "make_quantized_cell_params_dynam": 1939, "make_quantized_cell_params_fp16": 1939, "mul_out": 1939, "mul_relu": 1939, "mul_relu_out": 1939, "mul_scalar_out": 1939, "mul_scalar_relu": 1939, "mul_scalar_relu_out": 1939, "quantized_gru_cell_dynam": 1939, "quantized_lstm_cell_dynam": 1939, "quantized_rnn_relu_cell_dynam": 1939, "quantized_rnn_tanh_cell_dynam": 1939, "rngprim": 1939, "philox_rand": 1939, "qlinear": 1939, "qlinear_dynam": 1939, "qlinear_prepack": 1939, "qlinear_relu": 1939, "qlinear_relu_dynam": 1939, "qlinear_unpack": 1939, "static_runtim": 1939, "vartupleunpack": 1939, "clamp_nan_to_num": 1939, "create_owned_ref": 1939, "dequantize_copi": 1939, "dict_unpack": 1939, "expand_dims_copi": 1939, "flatten_copi": 1939, "fused_equally_split": 1939, "reshape_copi": 1939, "select_tensor": 1939, "signed_log1p": 1939, "to_copi": 1939, "to_maybe_copy_out": 1939, "var1": 1940, "var2": 1940, "lbfg": 1940, "adadelta": 1940, "adamax": 1940, "asgd": 1940, "nadam": 1940, "radam": 1940, "rmsprop": 1940, "rprop": 1940, "reducelronplateau": 1940, "multisteplr": 1940, "upgrad": [1940, 1960], "swa_util": 1940, "averagedmodel": 1940, "swalr": 1940, "update_bn": 1940, "optima": 1940, "polyak": 1940, "averaged_model": 1940, "multi_avg_fn": 1940, "get_ema_multi_avg_fn": 1940, "textrm": 1940, "update_paramet": 1940, "avg_fn": 1940, "_foreach": 1940, "ema_model": 1940, "ema_avg": 1940, "averaged_model_paramet": 1940, "model_paramet": 1940, "num_averag": 1940, "swa_schedul": 1940, "anneal_epoch": 1940, "swa_lr": 1940, "swa_model": 1940, "cosineannealinglr": 1940, "swa_start": 1940, "test_input": 1940, "secur": 1941, "unpackag": 1941, "exercis": 1941, "unzip": 1941, "my_packag": 1941, "freeli": 1941, "94304870911616": 1941, "94304900784016": 1941, "extern_modul": 1941, "model_1": 1941, "pkl": 1941, "myzip": 1941, "file_byt": 1941, "writestr": 1941, "new_file_byt": 1941, "vim": 1941, "vimrc": 1941, "bufreadcmd": 1941, "brows": 1941, "amatch": 1941, "vi": 1941, "packageimport": 1941, "queryabl": 1941, "glob": 1941, "packageexport": 1941, "pe": 1941, "save_pickl": 1941, "has_fil": 1941, "importer_file_structur": 1941, "package_a": 1941, "get_rdep": 1941, "all_path": 1941, "dependency_graph_str": 1941, "save_text": 1941, "save_binari": 1941, "my_resourc": 1941, "config_stuff": 1941, "raw_data": 1941, "my_byt": 1941, "complementari": [1941, 1954], "load_pickl": 1941, "load_text": 1941, "load_binari": 1941, "my_tensor": 1941, "__reduce_package__": 1941, "my_str": 1941, "time_import": 1941, "time_export": 1941, "pickler": 1941, "persistent_id": 1941, "persistent_load": 1941, "generated_module_nam": 1941, "get_unique_id": 1941, "clock_gettim": 1941, "unpackage_foo": 1941, "depickl": 1941, "foo_1": 1941, "foo_2": 1941, "foo_packag": 1941, "foo_collect": 1941, "foo1": 1941, "foo2": 1941, "imported_foo": 1941, "9857706": 1941, "650140837": 1941, "652698385": 1941, "__torch_package__": 1941, "is_in_packag": 1941, "userexcept": 1941, "unpackageableexcept": 1941, "loaded_modul": 1941, "import_modul": 1941, "save_source_str": 1941, "save_modul": 1941, "textwrap": 1941, "dedent": 1941, "my_funct": 1941, "is_packag": 1941, "importlib": 1941, "my_pickl": 1941, "get_my_resourc": 1941, "read_text": 1941, "torch_package_import": 1941, "get_my_pickl": 1941, "is_from_packag": 1941, "stdlib": 1941, "my_test": 1941, "f2": [1941, 1942], "sys_import": 1941, "script_model": 1941, "mixed_model": 1941, "python_model_with_scripted_submodul": 1941, "loaded_script": 1941, "loaded_mix": 1941, "convention": 1941, "94286146172688": 1941, "94286146172784": 1941, "essai": 1941, "another_packag": 1941, "pickletool": 1941, "ast": 1941, "deni": 1941, "my_export": 1941, "my_interned_modul": 1941, "package_export": 1941, "my_externed_modul": 1941, "my_mocked_modul": 1941, "unwant": [1941, 1958], "hodg": 1941, "podg": 1941, "bazel": 1941, "buck": 1941, "my_class_inst": 1941, "imported_myclass": 1941, "okai": 1941, "torch_package_0": 1941, "handle_me_this_wai": 1941, "inadvert": 1941, "pun": 1941, "packagingerror": 1941, "dependency_graph": 1941, "emptymatcherror": 1941, "allow_empti": 1941, "_sysimport": 1941, "hermet": 1941, "scan": 1941, "orderedimport": 1941, "add_depend": 1941, "graphviz": 1941, "lang": 1941, "denied_modul": 1941, "my_subpackag": 1941, "digraph": 1941, "externed_modul": 1941, "interned_modul": 1941, "mocked_modul": 1941, "register_extern_hook": 1941, "register_intern_hook": 1941, "register_mock_hook": 1941, "myobject": 1941, "save_source_fil": 1941, "file_or_directori": 1941, "my_subsubpackag": 1941, "file_or_buff": 1941, "module_allow": 1941, "pytorchfileread": 1941, "python_vers": 1941, "is_dir": 1941, "gpipe": 1942, "suffer": 1942, "microbatch": 1942, "bubbl": 1942, "except_last": 1942, "deferred_batch_norm": 1942, "torchgpip": 1942, "withdevic": 1942, "micro": 1942, "fc": [1942, 1944], "init_rpc": [1942, 1949, 1950], "output_rref": 1942, "fed": [1942, 1958], "nochunk": 1942, "resnext": 1942, "till": 1942, "skippabl": 1942, "perfectli": 1942, "1to3": 1942, "layer1": 1942, "f1": 1942, "layer2": 1942, "layer3": 1942, "skip_1to3": 1942, "f3": 1942, "alic": 1942, "bob": 1942, "carol": 1942, "stashstashpop": 1942, "f_alic": 1942, "f_bob": 1942, "verify_skipp": 1942, "unmatch": [1942, 1963], "fairscal": 1942, "_kinetoprofil": 1943, "profileract": 1943, "add_metadata": 1943, "add_metadata_json": 1943, "unaggreg": 1943, "export_memory_timelin": 1943, "gzip": 1943, "export_stack": 1943, "self_cuda_time_tot": 1943, "flamegraph": 1943, "brendangregg": 1943, "pl": 1943, "countnam": 1943, "perf_viz": 1943, "svg": 1943, "on_trace_readi": 1943, "record_and_sav": 1943, "tensorboard_trace_handl": 1943, "dir_nam": 1943, "logdir": [1943, 1958], "code_to_profil": 1943, "row_limit": 1943, "trace_handl": 1943, "test_trace_": 1943, "step_num": 1943, "code_iteration_to_profil": 1943, "mtia": 1943, "skip_first": 1943, "worker_nam": [1943, 1949], "use_gzip": 1943, "range_push": 1943, "range_pop": 1943, "4x": 1944, "broadli": 1944, "domin": 1944, "previous_layer_fp32": 1944, "linear_fp32": 1944, "activation_fp32": 1944, "next_layer_fp32": 1944, "linear_weight_fp32": 1944, "linear_int8_w_fp32_inp": 1944, "linear_weight_int8": 1944, "ptdq": 1944, "model_fp32": 1944, "model_int8": 1944, "quantize_dynam": 1944, "input_fp32": 1944, "previous_layer_int8": 1944, "linear_with_activation_int8": 1944, "next_layer_int8": 1944, "ptsq": 1944, "minmax": 1944, "l2norm": 1944, "model_fp32_fus": 1944, "fuse_modul": [1944, 1945], "model_fp32_prepar": 1944, "fq": 1944, "prepare_qat": 1944, "training_loop": 1944, "requant": 1944, "linear1": 1944, "custom_qconfig": 1944, "fxptq": 1944, "model_fp": 1944, "usermodel": 1944, "model_to_quant": 1944, "default_dynamic_qconfig": 1944, "model_prepar": 1944, "model_quant": 1944, "model_fus": 1944, "per_tensor_symmetr": [1944, 1947], "per_channel_symmetr": [1944, 1947], "per_channel_scal": 1944, "per_channel_zero_point": 1944, "quantized_tensor": 1944, "qengin": 1944, "in4": 1944, "fx2trt": 1944, "float_modul": [1944, 1962], "staticquantcustommodul": 1944, "observed_modul": 1944, "default_qconfig": [1944, 1963], "vnni": 1944, "test_quantized_op": 1944, "testquantizedop": 1944, "test_custom_module_lstm": 1944, "test_quantize_fx": 1944, "testquantizefx": 1944, "test_static_lstm": 1944, "some_oper": 1944, "e2": 1944, "thnn_conv2d_forward": 1944, "quantizedcpu": 1944, "some_qconfig": 1944, "linearpackedparam": 1944, "_modul": 1944, "prepare_orig": 1944, "quantized_orig": 1944, "scripted_quant": 1944, "fp32_op": 1945, "int8_op": 1945, "cooperlak": 1945, "audit": 1945, "op_fp32": 1945, "op_int8": 1945, "_numeric_suit": 1945, "_numeric_suite_fx": 1945, "0x7fdea3b9bdc0": 1946, "0x7fde8f6be310": 1946, "0x7fde8f6be3a0": 1946, "num_tensor_args_to_observation_typ": 1946, "convbn1d": 1946, "0x7fde8ea58430": 1946, "reference_quantized_module_for_root": 1946, "fuse_convtranspose_bn": 1946, "0x7fde8ea585e0": 1946, "linearbn1d": 1946, "fuse_linear_bn": 1946, "0x7fde8ea58550": 1946, "convbn2d": 1946, "convbn3d": 1946, "bnrelu2d": 1946, "bnrelu3d": 1946, "input_type_to_index": 1946, "conv_fus": 1946, "convbnrelu1d": 1946, "convbnrelu2d": 1946, "convbnrelu3d": 1946, "convrelu1d": 1946, "convrelu3d": 1946, "0x7fde8f6be430": 1946, "0x7fde8f6bea60": 1946, "quint4x2": [1946, 1955, 1959, 1960], "embedding_op": 1946, "0x7fde8f6c2940": 1946, "00390625": 1946, "0x7fde8f6c2280": 1946, "0x7fde8f6c2430": 1946, "0x7fde8f6be940": 1946, "0x7fde8f6c2820": 1946, "0x7fde8f63e5e0": 1946, "0x7fde8f6c28b0": 1946, "0x7fde8f6bec10": 1946, "linear_fus": 1946, "_sequential_wrapper2": 1946, "0x7fdeaaced430": 1946, "0x7fde8f6be820": 1946, "0x7fde8cb349d0": 1946, "fuse_conv_bn_relu": 1946, "0x7fde8ea584c0": 1946, "0x7fde8cb34a60": 1946, "0x7fde8cb34af0": 1946, "0x7fde8cb34b80": 1946, "0x7fde8cb34c10": 1946, "0x7fde8cb34ca0": 1946, "0x7fde8cb34d30": 1946, "0x7fde8cb34dc0": 1946, "0x7fde8cb34e50": 1946, "0x7fde8cb34ee0": 1946, "0x7fde8cb34f70": 1946, "0x7fde8f6be9d0": 1946, "0078125": 1946, "customconfig": 1947, "custom_module_config": 1947, "_caller": 1948, "_devices_kw": 1948, "slowli": 1948, "unind": 1948, "deivce_typ": 1948, "shortcom": 1949, "stitch": 1949, "rpc_backend_opt": 1949, "trainer3": 1949, "parameterserver2": 1949, "dash": [1949, 1951], "backendtyp": 1949, "rpcbackendopt": 1949, "rpcagent": 1949, "transmit": 1949, "calle": [1949, 1951], "_set_rpc_timeout": 1949, "5678": 1949, "worker0": 1949, "my_script_add": 1949, "wire": 1949, "fut2": 1949, "meth": 1949, "grace": 1949, "userrref": [1949, 1951], "async_execut": 1949, "paus": 1949, "outmost": 1949, "async_add_chain": 1949, "worker2": 1949, "script_add": 1949, "async_add": 1949, "asyncexecutionclass": 1949, "static_async_add": 1949, "class_async_add": 1949, "ret_fut": 1949, "bound_async_add": 1949, "rpc_timeout": 1949, "incid": [1949, 1951], "nvlink": 1949, "multiplex": 1949, "tensorpiperpcbackendopt": 1949, "num_worker_thread": 1949, "device_map": 1949, "_transport": 1949, "tensorpipeag": 1949, "set_device_map": 1949, "intermitt": 1949, "remote_modul": 1949, "forward_async": 1949, "remote_devic": 1949, "workernam": 1949, "trainer0": 1949, "ps0": 1949, "remote_linear_modul": 1949, "get_module_rref": 1949, "remote_paramet": 1949, "my_add": [1950, 1964], "t4": 1950, "t5": 1950, "autograd_message_id": 1950, "autograd_context_id": 1950, "send1": 1950, "kickoff": 1950, "recv2": 1950, "heard": 1950, "send2": 1950, "recv1": 1950, "dist_autograd_simpl": 1950, "random_tensor": 1950, "_run_process": 1950, "dst_rank": 1950, "dst_name": 1950, "run_process": 1950, "rrefid": 1951, "ownerrref": 1951, "transient": 1951, "udf": 1951, "deliveri": 1951, "knowledg": 1951, "danger": 1951, "ancestor": 1951, "trickier": 1951, "forkid": 1951, "ack": 1951, "solid": 1951, "gc": 1951, "followup": 1951, "lil": 1953, "stark": 1953, "9093": 1953, "1411": 1953, "7568": 1953, "9589": 1953, "2794": 1953, "catastroph": 1953, "9900": 1953, "sturctur": 1953, "metadata_mask": 1953, "rce": 1953, "rc": 1953, "62": 1953, "to_sparse_semi_structur": 1953, "1x4": 1953, "16x16": 1953, "a_spars": 1953, "sparsesemistructuredtensor": 1953, "000": 1953, "400": 1953, "s2": 1953, "plain_dim_s": 1953, "lp64": 1953, "280": 1953, "310": 1953, "sp": 1953, "9078": 1953, "conception": 1953, "sparsesemistructur": 1953, "lobpcg": 1953, "geneig": 1953, "pca_lowrank": 1953, "kindli": 1953, "airy_ai": 1954, "airi": 1954, "onward": 1954, "9635": 1954, "entr": 1954, "3466": 1954, "int_": 1954, "8427": 1954, "0561": 1954, "4769": 1954, "9213": 1954, "8858": 1954, "7683": 1954, "7481": 1954, "2920": 1954, "int_0": 1954, "gammaln": 1954, "a1": 1954, "a2": 1954, "3528": 1954, "5665": 1954, "6472": 1954, "4335": 1954, "2650": 1954, "2661": 1954, "2796": 1954, "8808": 1954, "3019": 1954, "4658": 1954, "3085": 1954, "2430": 1954, "2070": 1954, "i1": 1954, "5652": 1954, "9534": 1954, "7595": 1954, "2153": 1954, "log_ndtr": 1954, "_ndtr": 1954, "6077": 1954, "7832": 1954, "841": 1954, "6931": 1954, "1728": 1954, "023": 1954, "9331": 1954, "6486": 1954, "1523": 1954, "6516": 1954, "6352": 1954, "6131": 1954, "7169": 1954, "6261": 1954, "displaystyl": 1954, "undefiend": 1954, "6835": 1954, "8474": 1954, "1929": 1954, "7162": 1954, "4180": 1954, "3928": 1954, "4007": 1954, "7586": 1954, "3901": 1954, "5049": 1954, "ndtr": 1954, "0228": 1954, "1587": 1954, "9772": 1954, "9987": 1954, "2p": 1954, "64493": 1954, "4041": 1954, "8288": 1954, "4939": 1954, "97": 1954, "4091": 1954, "8863": 1954, "771": 1954, "scaled_modified_bessel_k0": 1954, "scaled_modified_bessel_k1": 1954, "2948": 1954, "0267": 1954, "1566": 1954, "9186": 1954, "8631": 1954, "0259": 1954, "1300": 1954, "spheric": 1954, "xlog1pi": 1954, "3863": 1954, "1972": 1954, "6094": 1954, "2189": 1954, "8283": 1954, "7726": 1954, "0986": 1954, "1589": 1954, "hurwitz": 1954, "6449": 1954, "0823": 1954, "untyp": 1955, "wrap_storag": 1955, "complex_doubl": 1955, "from_buff": 1955, "is_hpu": 1955, "pickle_storage_typ": 1955, "byteswap": 1955, "quint2x4": [1955, 1960], "twelv": 1956, "halftensor": [1956, 1959], "bfloat16tensor": [1956, 1959], "chartensor": [1956, 1959], "shorttensor": [1956, 1959], "binary16": [1956, 1959], "significand": [1956, 1959], "float_tensor": 1956, "double_tensor": 1956, "complex_float_tensor": 1956, "complex_double_tensor": 1956, "int_tensor": 1956, "long_tensor": 1956, "uint_tensor": 1956, "bool_tensor": 1956, "long_zerodim": 1956, "int_zerodim": 1956, "set_default_devic": 1956, "cuda1": 1956, "nhwc": [1956, 1958], "channels_last_3d": 1956, "ndhwc": 1956, "blogpost": 1957, "totensor": 1958, "trainset": 1958, "mnist": 1958, "mnist_train": 1958, "trainload": 1958, "grayscal": 1958, "make_grid": 1958, "add_imag": 1958, "add_graph": 1958, "clutter": 1958, "n_iter": 1958, "purge_step": 1958, "max_queu": 1958, "flush_sec": 1958, "filename_suffix": 1958, "current_datetime_hostnam": 1958, "exp1": 1958, "global_step": 1958, "purg": 1958, "event_file_writ": 1958, "eventfilewrit": 1958, "may04_22": 1958, "54_": 1958, "macbook": 1958, "my_experi": 1958, "lr_0": 1958, "1_batch_16": 1958, "locallr_0": 1958, "scalar_valu": 1958, "walltim": 1958, "new_styl": 1958, "double_precis": 1958, "blobnam": 1958, "simple_valu": 1958, "main_tag": 1958, "tag_scalar_dict": 1958, "run_14h": 1958, "xsinx": 1958, "xcosx": 1958, "tanx": 1958, "add_histogram": 1958, "max_bin": 1958, "fd": 1958, "img_tensor": 1958, "dataformat": 1958, "chw": 1958, "hwc": 1958, "hw": 1958, "wh": 1958, "3xhxw": 1958, "img_hwc": 1958, "my_imag": 1958, "my_image_hwc": 1958, "img_batch": 1958, "my_image_batch": 1958, "add_figur": 1958, "add_video": 1958, "vid_tensor": 1958, "fp": 1958, "moviepi": 1958, "add_audio": 1958, "snd_tensor": 1958, "sample_r": 1958, "44100": 1958, "add_text": 1958, "text_str": 1958, "input_to_model": 1958, "use_strict_trac": 1958, "add_embed": 1958, "label_img": 1958, "metadata_head": 1958, "projector": 1958, "kwlist": 1958, "add_pr_curv": 1958, "num_threshold": 1958, "pr_curv": 1958, "add_custom_scalar": 1958, "chart": 1958, "categorynam": 1958, "chartnam": 1958, "listofproperti": 1958, "multilin": 1958, "taiwan": 1958, "twse": 1958, "0050": 1958, "2330": 1958, "dow": 1958, "aaa": 1958, "bbb": 1958, "ccc": 1958, "nasdaq": 1958, "add_mesh": 1958, "config_dict": 1958, "threej": 1958, "vertex": 1958, "number_of_vertic": 1958, "vertices_tensor": 1958, "colors_tensor": 1958, "faces_tensor": 1958, "my_mesh": 1958, "add_hparam": 1958, "hparam_dict": 1958, "metric_dict": 1958, "hparam_domain_discret": 1958, "run_nam": 1958, "hparam": 1958, "bsize": 1958, "_like": 1959, "allow_subclass": 1960, "check_devic": 1960, "check_layout": 1960, "6e": 1960, "3e": 1960, "assert_equ": 1960, "000000000000001e": 1960, "1e0": 1960, "argh": 1960, "nfooter": 1960, "66": 1960, "footer": 1960, "exclude_zero": 1960, "1205": 1960, "2282": 1960, "6380": 1960, "default_gener": 1961, "data_dependent_output": 1961, "dynamic_output_shap": 1961, "inplace_view": 1961, "nondeterministic_bitwis": 1961, "nondeterministic_seed": 1961, "compare_weight": 1962, "float_dict": 1962, "quantized_dict": 1962, "wt_compare_dict": 1962, "qmodel": 1962, "compute_error": 1962, "weight_dict": 1962, "get_logger_dict": 1962, "shadowlogg": 1962, "outputlogg": [1962, 1963], "target_dict": 1962, "q_modul": 1962, "logger_cl": [1962, 1963], "prepare_model_with_stub": 1962, "module_swap_list": 1962, "q_model": 1962, "ob_dict": 1962, "compare_model_stub": 1962, "quantizablebasicblock": 1962, "get_matching_activ": 1962, "act_dict": 1962, "prepare_model_output": 1962, "compare_model_output": 1962, "act_compare_dict": 1962, "weight_comparison": 1963, "extract_weight": 1963, "sqnr": 1963, "extend_logger_results_with_comparison": 1963, "compute_sqnr": 1963, "mp_n": 1963, "mq_n": 1963, "add_logg": 1963, "act_comparison": 1963, "extract_logger_info": 1963, "mp_shadows_mq": 1963, "add_shadow_logg": 1963, "shadow_act_comparison": 1963, "extract_shadow_logger_info": 1963, "ref_node_nam": 1963, "prev_node_nam": 1963, "model_nam": 1963, "ref_nam": 1963, "prev_node_target_typ": 1963, "ref_node_target_typ": 1963, "results_typ": 1963, "index_within_arg": 1963, "index_of_arg": 1963, "qconfig_str": 1963, "outputcomparisonlogg": 1963, "x_ref": 1963, "nstracer": 1963, "skipped_module_nam": 1963, "skipped_module_class": 1963, "model_name_a": 1963, "model_a": 1963, "model_name_b": 1963, "model_b": 1963, "base_name_to_sets_of_related_op": 1963, "unmatchable_types_map": 1963, "op_to_type_to_weight_extraction_fn": 1963, "nsresultstyp": 1963, "name_a": 1963, "name_b": 1963, "should_log_input": 1963, "model_a_with_logg": 1963, "model_b_with_logg": 1963, "model_name_to_use_for_layer_nam": 1963, "node_type_to_io_type_map": 1963, "model_a_shadows_b": 1963, "model_name_1": 1963, "model_name_2": 1963, "comparison_fn": 1963, "comparison_nam": 1963, "prepare_n_shadows_model": 1963, "qconfig_multi_map": 1963, "custom_prepare_fn": 1963, "custom_prepare_kwarg": 1963, "custom_trac": 1963, "args_kwargs_m": 1963, "op_m": 1963, "output_m": 1963, "op_m_n": 1963, "log_m_n": 1963, "log_m_0": 1963, "qconfig_n": 1963, "args_m": 1963, "op_m_prepared_with_qconfig_n": 1963, "out_m_n": 1963, "kwargs_m": 1963, "docblock": 1963, "loggers_set_en": 1963, "loggers_set_save_activ": 1963, "save_activ": 1963, "convert_n_shadows_model": 1963, "custom_convert_fn": 1963, "custom_convert_kwarg": 1963, "extract_results_n_shadows_model": 1963, "print_comparisons_n_shadows_model": 1963, "compute_normalized_l2_error": 1963, "compute_cosine_similar": 1963, "as_subclass": 1964, "resolve_nam": 1964, "handle_torch_funct": 1964, "public_api": 1964, "relevant_arg": 1964, "has_torch_function_unari": 1964, "is_tensor_lik": 1964, "notatensor": 1964, "tensorlik": 1964, "is_tensor_method_or_properti": 1964, "__get__": 1964, "__module__": 1964, "wrap_torch_funct": 1964, "smallest_norm": 1965, "subnorm": 1965, "denormal_numb": 1965}, "objects": {"": [[1961, 0, 0, "-", "torch"], [1896, 7, 1, "-", "PYTORCH_JIT"]], "torch": [[1955, 1, 1, "", "BFloat16Storage"], [1955, 1, 1, "", "BoolStorage"], [1955, 1, 1, "", "ByteStorage"], [1955, 1, 1, "", "CharStorage"], [1955, 1, 1, "", "ComplexDoubleStorage"], [1955, 1, 1, "", "ComplexFloatStorage"], [1955, 1, 1, "", "DoubleStorage"], [1955, 1, 1, "", "FloatStorage"], [107, 1, 1, "", "Generator"], [1955, 1, 1, "", "HalfStorage"], [1955, 1, 1, "", "IntStorage"], [1955, 1, 1, "", "LongStorage"], [1955, 1, 1, "", "QInt32Storage"], [1955, 1, 1, "", "QInt8Storage"], [1955, 1, 1, "", "QUInt2x4Storage"], [1955, 1, 1, "", "QUInt4x2Storage"], [1955, 1, 1, "", "QUInt8Storage"], [1955, 1, 1, "", "ShortStorage"], [1961, 1, 1, "", "SymBool"], [1961, 1, 1, "", "SymFloat"], [1961, 1, 1, "", "SymInt"], [1961, 1, 1, "", "Tag"], [1959, 1, 1, "", "Tensor"], [1955, 1, 1, "", "TypedStorage"], [1955, 1, 1, "", "UntypedStorage"], [32, 0, 0, "-", "__config__"], [640, 5, 1, "", "_assert"], [641, 5, 1, "", "_foreach_abs"], [642, 5, 1, "", "_foreach_abs_"], [643, 5, 1, "", "_foreach_acos"], [644, 5, 1, "", "_foreach_acos_"], [645, 5, 1, "", "_foreach_asin"], [646, 5, 1, "", "_foreach_asin_"], [647, 5, 1, "", "_foreach_atan"], [648, 5, 1, "", "_foreach_atan_"], [649, 5, 1, "", "_foreach_ceil"], [650, 5, 1, "", "_foreach_ceil_"], [651, 5, 1, "", "_foreach_cos"], [652, 5, 1, "", "_foreach_cos_"], [653, 5, 1, "", "_foreach_cosh"], [654, 5, 1, "", "_foreach_cosh_"], [655, 5, 1, "", "_foreach_erf"], [656, 5, 1, "", "_foreach_erf_"], [657, 5, 1, "", "_foreach_erfc"], [658, 5, 1, "", "_foreach_erfc_"], [659, 5, 1, "", "_foreach_exp"], [660, 5, 1, "", "_foreach_exp_"], [661, 5, 1, "", "_foreach_expm1"], [662, 5, 1, "", "_foreach_expm1_"], [663, 5, 1, "", "_foreach_floor"], [664, 5, 1, "", "_foreach_floor_"], [665, 5, 1, "", "_foreach_frac"], [666, 5, 1, "", "_foreach_frac_"], [667, 5, 1, "", "_foreach_lgamma"], [668, 5, 1, "", "_foreach_lgamma_"], [669, 5, 1, "", "_foreach_log"], [670, 5, 1, "", "_foreach_log10"], [671, 5, 1, "", "_foreach_log10_"], [672, 5, 1, "", "_foreach_log1p"], [673, 5, 1, "", "_foreach_log1p_"], [674, 5, 1, "", "_foreach_log2"], [675, 5, 1, "", "_foreach_log2_"], [676, 5, 1, "", "_foreach_log_"], [677, 5, 1, "", "_foreach_neg"], [678, 5, 1, "", "_foreach_neg_"], [679, 5, 1, "", "_foreach_reciprocal"], [680, 5, 1, "", "_foreach_reciprocal_"], [681, 5, 1, "", "_foreach_round"], [682, 5, 1, "", "_foreach_round_"], [683, 5, 1, "", "_foreach_sigmoid"], [684, 5, 1, "", "_foreach_sigmoid_"], [685, 5, 1, "", "_foreach_sin"], [686, 5, 1, "", "_foreach_sin_"], [687, 5, 1, "", "_foreach_sinh"], [688, 5, 1, "", "_foreach_sinh_"], [689, 5, 1, "", "_foreach_sqrt"], [690, 5, 1, "", "_foreach_sqrt_"], [691, 5, 1, "", "_foreach_tan"], [692, 5, 1, "", "_foreach_tan_"], [693, 5, 1, "", "_foreach_trunc"], [694, 5, 1, "", "_foreach_trunc_"], [695, 5, 1, "", "_foreach_zero_"], [1905, 0, 0, "-", "_logging"], [697, 5, 1, "", "abs"], [698, 5, 1, "", "absolute"], [699, 5, 1, "", "acos"], [700, 5, 1, "", "acosh"], [701, 5, 1, "", "add"], [702, 5, 1, "", "addbmm"], [703, 5, 1, "", "addcdiv"], [704, 5, 1, "", "addcmul"], [705, 5, 1, "", "addmm"], [706, 5, 1, "", "addmv"], [707, 5, 1, "", "addr"], [708, 5, 1, "", "adjoint"], [709, 5, 1, "", "all"], [710, 5, 1, "", "allclose"], [711, 5, 1, "", "amax"], [712, 5, 1, "", "amin"], [713, 5, 1, "", "aminmax"], [0, 0, 0, "-", "amp"], [714, 5, 1, "", "angle"], [715, 5, 1, "", "any"], [1944, 0, 0, "-", "ao"], [881, 5, 1, "", "arange"], [882, 5, 1, "", "arccos"], [883, 5, 1, "", "arccosh"], [884, 5, 1, "", "arcsin"], [885, 5, 1, "", "arcsinh"], [886, 5, 1, "", "arctan"], [887, 5, 1, "", "arctan2"], [888, 5, 1, "", "arctanh"], [889, 5, 1, "", "are_deterministic_algorithms_enabled"], [890, 5, 1, "", "argmax"], [891, 5, 1, "", "argmin"], [892, 5, 1, "", "argsort"], [893, 5, 1, "", "argwhere"], [894, 5, 1, "", "as_strided"], [895, 5, 1, "", "as_tensor"], [896, 5, 1, "", "asarray"], [897, 5, 1, "", "asin"], [898, 5, 1, "", "asinh"], [899, 5, 1, "", "atan"], [900, 5, 1, "", "atan2"], [901, 5, 1, "", "atanh"], [902, 5, 1, "", "atleast_1d"], [903, 5, 1, "", "atleast_2d"], [904, 5, 1, "", "atleast_3d"], [0, 1, 1, "", "autocast"], [1, 0, 0, "-", "autograd"], [2, 0, 0, "-", "backends"], [936, 5, 1, "", "baddbmm"], [937, 5, 1, "", "bartlett_window"], [938, 5, 1, "", "bernoulli"], [939, 5, 1, "", "bincount"], [940, 5, 1, "", "bitwise_and"], [941, 5, 1, "", "bitwise_left_shift"], [942, 5, 1, "", "bitwise_not"], [943, 5, 1, "", "bitwise_or"], [944, 5, 1, "", "bitwise_right_shift"], [945, 5, 1, "", "bitwise_xor"], [946, 5, 1, "", "blackman_window"], [947, 5, 1, "", "block_diag"], [948, 5, 1, "", "bmm"], [949, 5, 1, "", "broadcast_shapes"], [950, 5, 1, "", "broadcast_tensors"], [951, 5, 1, "", "broadcast_to"], [952, 5, 1, "", "bucketize"], [953, 5, 1, "", "can_cast"], [954, 5, 1, "", "cartesian_prod"], [955, 5, 1, "", "cat"], [956, 5, 1, "", "cdist"], [957, 5, 1, "", "ceil"], [958, 5, 1, "", "chain_matmul"], [959, 5, 1, "", "cholesky"], [960, 5, 1, "", "cholesky_inverse"], [961, 5, 1, "", "cholesky_solve"], [962, 5, 1, "", "chunk"], [963, 5, 1, "", "clamp"], [964, 5, 1, "", "clip"], [965, 5, 1, "", "clone"], [966, 5, 1, "", "column_stack"], [967, 5, 1, "", "combinations"], [968, 5, 1, "", "compile"], [969, 5, 1, "", "compiled_with_cxx11_abi"], [30, 0, 0, "-", "compiler"], [976, 5, 1, "", "complex"], [977, 5, 1, "", "concat"], [978, 5, 1, "", "concatenate"], [979, 5, 1, "", "conj"], [980, 5, 1, "", "conj_physical"], [1961, 0, 0, "-", "contrib"], [981, 5, 1, "", "copysign"], [982, 5, 1, "", "corrcoef"], [983, 5, 1, "", "cos"], [984, 5, 1, "", "cosh"], [985, 5, 1, "", "count_nonzero"], [986, 5, 1, "", "cov"], [35, 0, 0, "-", "cpu"], [994, 5, 1, "", "cross"], [36, 0, 0, "-", "cuda"], [1073, 5, 1, "", "cummax"], [1074, 5, 1, "", "cummin"], [1075, 5, 1, "", "cumprod"], [1076, 5, 1, "", "cumsum"], [1077, 5, 1, "", "cumulative_trapezoid"], [1078, 5, 1, "", "deg2rad"], [1079, 5, 1, "", "dequantize"], [1080, 5, 1, "", "det"], [1956, 1, 1, "", "device"], [1081, 5, 1, "", "diag"], [1082, 5, 1, "", "diag_embed"], [1083, 5, 1, "", "diagflat"], [1084, 5, 1, "", "diagonal"], [1085, 5, 1, "", "diagonal_scatter"], [1086, 5, 1, "", "diff"], [1087, 5, 1, "", "digamma"], [1088, 5, 1, "", "dist"], [43, 0, 0, "-", "distributed"], [49, 0, 0, "-", "distributions"], [1089, 5, 1, "", "div"], [1090, 5, 1, "", "divide"], [1091, 5, 1, "", "dot"], [1092, 5, 1, "", "dsplit"], [1093, 5, 1, "", "dstack"], [1956, 1, 1, "", "dtype"], [1094, 5, 1, "", "einsum"], [1095, 5, 1, "", "empty"], [1096, 5, 1, "", "empty_like"], [1097, 5, 1, "", "empty_strided"], [1098, 1, 1, "", "enable_grad"], [1099, 5, 1, "", "eq"], [1100, 5, 1, "", "equal"], [1101, 5, 1, "", "erf"], [1102, 5, 1, "", "erfc"], [1103, 5, 1, "", "erfinv"], [1104, 5, 1, "", "exp"], [1105, 5, 1, "", "exp2"], [1106, 5, 1, "", "expm1"], [1107, 5, 1, "", "eye"], [1108, 5, 1, "", "fake_quantize_per_channel_affine"], [1109, 5, 1, "", "fake_quantize_per_tensor_affine"], [65, 0, 0, "-", "fft"], [1132, 5, 1, "", "fix"], [1133, 5, 1, "", "flatten"], [1134, 5, 1, "", "flip"], [1135, 5, 1, "", "fliplr"], [1136, 5, 1, "", "flipud"], [1137, 5, 1, "", "float_power"], [1138, 5, 1, "", "floor"], [1139, 5, 1, "", "floor_divide"], [1140, 5, 1, "", "fmax"], [1141, 5, 1, "", "fmin"], [1142, 5, 1, "", "fmod"], [1143, 5, 1, "", "frac"], [1144, 5, 1, "", "frexp"], [1145, 5, 1, "", "from_dlpack"], [1146, 5, 1, "", "from_numpy"], [1147, 5, 1, "", "frombuffer"], [1148, 5, 1, "", "full"], [1149, 5, 1, "", "full_like"], [68, 0, 0, "-", "func"], [73, 0, 0, "-", "futures"], [74, 0, 0, "-", "fx"], [1163, 5, 1, "", "gather"], [1164, 5, 1, "", "gcd"], [1165, 5, 1, "", "ge"], [1166, 5, 1, "", "geqrf"], [1167, 5, 1, "", "ger"], [1168, 5, 1, "", "get_default_dtype"], [1169, 5, 1, "", "get_deterministic_debug_mode"], [1170, 5, 1, "", "get_float32_matmul_precision"], [1171, 5, 1, "", "get_num_interop_threads"], [1172, 5, 1, "", "get_num_threads"], [1173, 5, 1, "", "get_rng_state"], [1174, 5, 1, "", "gradient"], [1175, 5, 1, "", "greater"], [1176, 5, 1, "", "greater_equal"], [1177, 5, 1, "", "gt"], [1178, 5, 1, "", "hamming_window"], [1179, 5, 1, "", "hann_window"], [1180, 5, 1, "", "heaviside"], [1181, 5, 1, "", "histc"], [1182, 5, 1, "", "histogram"], [1183, 5, 1, "", "histogramdd"], [1184, 5, 1, "", "hsplit"], [1185, 5, 1, "", "hspmm"], [1186, 5, 1, "", "hstack"], [1893, 0, 0, "-", "hub"], [1187, 5, 1, "", "hypot"], [1188, 5, 1, "", "i0"], [1189, 5, 1, "", "igamma"], [1190, 5, 1, "", "igammac"], [1191, 5, 1, "", "imag"], [1192, 5, 1, "", "index_add"], [1193, 5, 1, "", "index_copy"], [1194, 5, 1, "", "index_reduce"], [1195, 5, 1, "", "index_select"], [1196, 1, 1, "", "inference_mode"], [1197, 5, 1, "", "initial_seed"], [1198, 5, 1, "", "inner"], [1199, 5, 1, "", "inverse"], [1200, 5, 1, "", "is_complex"], [1201, 5, 1, "", "is_conj"], [1202, 5, 1, "", "is_deterministic_algorithms_warn_only_enabled"], [1203, 5, 1, "", "is_floating_point"], [1204, 5, 1, "", "is_grad_enabled"], [1205, 5, 1, "", "is_inference_mode_enabled"], [1206, 5, 1, "", "is_nonzero"], [1207, 5, 1, "", "is_storage"], [1208, 5, 1, "", "is_tensor"], [1209, 5, 1, "", "is_warn_always_enabled"], [1210, 5, 1, "", "isclose"], [1211, 5, 1, "", "isfinite"], [1212, 5, 1, "", "isin"], [1213, 5, 1, "", "isinf"], [1214, 5, 1, "", "isnan"], [1215, 5, 1, "", "isneginf"], [1216, 5, 1, "", "isposinf"], [1217, 5, 1, "", "isreal"], [1218, 5, 1, "", "istft"], [1896, 0, 0, "-", "jit"], [1240, 5, 1, "", "kaiser_window"], [1241, 5, 1, "", "kron"], [1242, 5, 1, "", "kthvalue"], [1956, 1, 1, "", "layout"], [1243, 5, 1, "", "lcm"], [1244, 5, 1, "", "ldexp"], [1245, 5, 1, "", "le"], [1246, 5, 1, "", "lerp"], [1247, 5, 1, "", "less"], [1248, 5, 1, "", "less_equal"], [1249, 5, 1, "", "lgamma"], [1904, 0, 0, "-", "linalg"], [1291, 5, 1, "", "linspace"], [1292, 5, 1, "", "load"], [1293, 5, 1, "", "lobpcg"], [1294, 5, 1, "", "log"], [1295, 5, 1, "", "log10"], [1296, 5, 1, "", "log1p"], [1297, 5, 1, "", "log2"], [1298, 5, 1, "", "logaddexp"], [1299, 5, 1, "", "logaddexp2"], [1300, 5, 1, "", "logcumsumexp"], [1301, 5, 1, "", "logdet"], [1302, 5, 1, "", "logical_and"], [1303, 5, 1, "", "logical_not"], [1304, 5, 1, "", "logical_or"], [1305, 5, 1, "", "logical_xor"], [1306, 5, 1, "", "logit"], [1307, 5, 1, "", "logspace"], [1308, 5, 1, "", "logsumexp"], [1309, 5, 1, "", "lt"], [1310, 5, 1, "", "lu"], [1311, 5, 1, "", "lu_solve"], [1312, 5, 1, "", "lu_unpack"], [1313, 5, 1, "", "manual_seed"], [1906, 0, 0, "-", "masked"], [1314, 5, 1, "", "masked_select"], [1315, 5, 1, "", "matmul"], [1316, 5, 1, "", "matrix_exp"], [1317, 5, 1, "", "matrix_power"], [1318, 5, 1, "", "max"], [1319, 5, 1, "", "maximum"], [1320, 5, 1, "", "mean"], [1321, 5, 1, "", "median"], [1956, 1, 1, "", "memory_format"], [1322, 5, 1, "", "meshgrid"], [1323, 5, 1, "", "min"], [1324, 5, 1, "", "minimum"], [1325, 5, 1, "", "mm"], [1326, 5, 1, "", "mode"], [1909, 0, 0, "-", "monitor"], [1327, 5, 1, "", "moveaxis"], [1328, 5, 1, "", "movedim"], [1910, 0, 0, "-", "mps"], [1341, 5, 1, "", "msort"], [1342, 5, 1, "", "mul"], [1343, 5, 1, "", "multinomial"], [1344, 5, 1, "", "multiply"], [1911, 0, 0, "-", "multiprocessing"], [1345, 5, 1, "", "mv"], [1346, 5, 1, "", "mvlgamma"], [1347, 5, 1, "", "nan_to_num"], [1348, 5, 1, "", "nanmean"], [1349, 5, 1, "", "nanmedian"], [1350, 5, 1, "", "nanquantile"], [1351, 5, 1, "", "nansum"], [1352, 5, 1, "", "narrow"], [1353, 5, 1, "", "narrow_copy"], [1354, 5, 1, "", "ne"], [1355, 5, 1, "", "neg"], [1356, 5, 1, "", "negative"], [1914, 0, 0, "-", "nested"], [1357, 5, 1, "", "nextafter"], [1915, 0, 0, "-", "nn"], [1678, 1, 1, "", "no_grad"], [1679, 5, 1, "", "nonzero"], [1680, 5, 1, "", "norm"], [1681, 5, 1, "", "normal"], [1682, 5, 1, "", "not_equal"], [1683, 5, 1, "", "numel"], [1684, 5, 1, "", "ones"], [1685, 5, 1, "", "ones_like"], [1937, 0, 0, "-", "onnx"], [1940, 0, 0, "-", "optim"], [1726, 5, 1, "", "orgqr"], [1727, 5, 1, "", "ormqr"], [1728, 5, 1, "", "outer"], [1941, 0, 0, "-", "package"], [1729, 5, 1, "", "pca_lowrank"], [1730, 5, 1, "", "permute"], [1731, 5, 1, "", "pinverse"], [1732, 5, 1, "", "poisson"], [1733, 5, 1, "", "polar"], [1734, 5, 1, "", "polygamma"], [1735, 5, 1, "", "positive"], [1736, 5, 1, "", "pow"], [1737, 5, 1, "", "prod"], [1943, 0, 0, "-", "profiler"], [1738, 5, 1, "", "promote_types"], [1739, 5, 1, "", "qr"], [1740, 5, 1, "", "quantile"], [1947, 0, 0, "-", "quantization"], [1741, 5, 1, "", "quantize_per_channel"], [1742, 5, 1, "", "quantize_per_tensor"], [1743, 5, 1, "", "quantized_batch_norm"], [1744, 5, 1, "", "quantized_max_pool1d"], [1745, 5, 1, "", "quantized_max_pool2d"], [1747, 5, 1, "", "rad2deg"], [1748, 5, 1, "", "rand"], [1749, 5, 1, "", "rand_like"], [1750, 5, 1, "", "randint"], [1751, 5, 1, "", "randint_like"], [1752, 5, 1, "", "randn"], [1753, 5, 1, "", "randn_like"], [1948, 0, 0, "-", "random"], [1754, 5, 1, "", "randperm"], [1755, 5, 1, "", "range"], [1756, 5, 1, "", "ravel"], [1757, 5, 1, "", "real"], [1758, 5, 1, "", "reciprocal"], [1759, 5, 1, "", "remainder"], [1760, 5, 1, "", "renorm"], [1761, 5, 1, "", "repeat_interleave"], [1762, 5, 1, "", "reshape"], [1763, 5, 1, "", "resolve_conj"], [1764, 5, 1, "", "resolve_neg"], [1765, 5, 1, "", "result_type"], [1766, 5, 1, "", "roll"], [1767, 5, 1, "", "rot90"], [1768, 5, 1, "", "round"], [1769, 5, 1, "", "row_stack"], [1770, 5, 1, "", "rsqrt"], [1771, 5, 1, "", "save"], [1772, 5, 1, "", "scatter"], [1773, 5, 1, "", "scatter_add"], [1774, 5, 1, "", "scatter_reduce"], [1775, 5, 1, "", "searchsorted"], [1776, 5, 1, "", "seed"], [1777, 5, 1, "", "select"], [1778, 5, 1, "", "select_scatter"], [1779, 5, 1, "", "set_default_device"], [1780, 5, 1, "", "set_default_dtype"], [1781, 5, 1, "", "set_default_tensor_type"], [1782, 5, 1, "", "set_deterministic_debug_mode"], [1783, 5, 1, "", "set_float32_matmul_precision"], [1784, 5, 1, "", "set_flush_denormal"], [1785, 1, 1, "", "set_grad_enabled"], [1786, 5, 1, "", "set_num_interop_threads"], [1787, 5, 1, "", "set_num_threads"], [1788, 5, 1, "", "set_printoptions"], [1789, 5, 1, "", "set_rng_state"], [1790, 5, 1, "", "set_warn_always"], [1791, 5, 1, "", "sgn"], [1792, 5, 1, "", "sigmoid"], [1793, 5, 1, "", "sign"], [1952, 0, 0, "-", "signal"], [1805, 5, 1, "", "signbit"], [1806, 5, 1, "", "sin"], [1807, 5, 1, "", "sinc"], [1808, 5, 1, "", "sinh"], [1809, 5, 1, "", "slice_scatter"], [1810, 5, 1, "", "slogdet"], [1811, 5, 1, "", "smm"], [1812, 5, 1, "", "softmax"], [1813, 5, 1, "", "sort"], [1953, 0, 0, "-", "sparse"], [1822, 5, 1, "", "sparse_bsc_tensor"], [1823, 5, 1, "", "sparse_bsr_tensor"], [1824, 5, 1, "", "sparse_compressed_tensor"], [1825, 5, 1, "", "sparse_coo_tensor"], [1826, 5, 1, "", "sparse_csc_tensor"], [1827, 5, 1, "", "sparse_csr_tensor"], [1954, 0, 0, "-", "special"], [1828, 5, 1, "", "split"], [1829, 5, 1, "", "sqrt"], [1830, 5, 1, "", "square"], [1831, 5, 1, "", "squeeze"], [1832, 5, 1, "", "sspaddmm"], [1833, 5, 1, "", "stack"], [1834, 5, 1, "", "std"], [1835, 5, 1, "", "std_mean"], [1836, 5, 1, "", "stft"], [1837, 5, 1, "", "sub"], [1838, 5, 1, "", "subtract"], [1839, 5, 1, "", "sum"], [1840, 5, 1, "", "svd"], [1841, 5, 1, "", "svd_lowrank"], [1842, 5, 1, "", "swapaxes"], [1843, 5, 1, "", "swapdims"], [1844, 5, 1, "", "sym_float"], [1845, 5, 1, "", "sym_int"], [1846, 5, 1, "", "sym_max"], [1847, 5, 1, "", "sym_min"], [1848, 5, 1, "", "sym_not"], [1849, 5, 1, "", "t"], [1850, 5, 1, "", "take"], [1851, 5, 1, "", "take_along_dim"], [1852, 5, 1, "", "tan"], [1853, 5, 1, "", "tanh"], [1854, 5, 1, "", "tensor"], [1855, 5, 1, "", "tensor_split"], [1856, 5, 1, "", "tensordot"], [1960, 0, 0, "-", "testing"], [1857, 5, 1, "", "tile"], [1858, 5, 1, "", "topk"], [1859, 5, 1, "", "trace"], [1860, 5, 1, "", "transpose"], [1861, 5, 1, "", "trapezoid"], [1862, 5, 1, "", "trapz"], [1863, 5, 1, "", "triangular_solve"], [1864, 5, 1, "", "tril"], [1865, 5, 1, "", "tril_indices"], [1866, 5, 1, "", "triu"], [1867, 5, 1, "", "triu_indices"], [1868, 5, 1, "", "true_divide"], [1869, 5, 1, "", "trunc"], [1870, 5, 1, "", "unbind"], [1871, 5, 1, "", "unflatten"], [1872, 5, 1, "", "unique"], [1873, 5, 1, "", "unique_consecutive"], [1874, 5, 1, "", "unsqueeze"], [1875, 5, 1, "", "use_deterministic_algorithms"], [1966, 0, 0, "-", "utils"], [1880, 5, 1, "", "vander"], [1881, 5, 1, "", "var"], [1882, 5, 1, "", "var_mean"], [1883, 5, 1, "", "vdot"], [1884, 5, 1, "", "view_as_complex"], [1885, 5, 1, "", "view_as_real"], [1886, 5, 1, "", "vmap"], [1887, 5, 1, "", "vsplit"], [1888, 5, 1, "", "vstack"], [1889, 5, 1, "", "where"], [1890, 5, 1, "", "xlogy"], [1891, 5, 1, "", "zeros"], [1892, 5, 1, "", "zeros_like"]], "torch.BFloat16Storage": [[1955, 2, 1, "", "dtype"]], "torch.BoolStorage": [[1955, 2, 1, "", "dtype"]], "torch.ByteStorage": [[1955, 2, 1, "", "dtype"]], "torch.CharStorage": [[1955, 2, 1, "", "dtype"]], "torch.ComplexDoubleStorage": [[1955, 2, 1, "", "dtype"]], "torch.ComplexFloatStorage": [[1955, 2, 1, "", "dtype"]], "torch.DoubleStorage": [[1955, 2, 1, "", "dtype"]], "torch.FloatStorage": [[1955, 2, 1, "", "dtype"]], "torch.Generator": [[107, 2, 1, "", "device"], [107, 3, 1, "", "get_state"], [107, 3, 1, "", "initial_seed"], [107, 3, 1, "", "manual_seed"], [107, 3, 1, "", "seed"], [107, 3, 1, "", "set_state"]], "torch.HalfStorage": [[1955, 2, 1, "", "dtype"]], "torch.IntStorage": [[1955, 2, 1, "", "dtype"]], "torch.LongStorage": [[1955, 2, 1, "", "dtype"]], "torch.QInt32Storage": [[1955, 2, 1, "", "dtype"]], "torch.QInt8Storage": [[1955, 2, 1, "", "dtype"]], "torch.QUInt2x4Storage": [[1955, 2, 1, "", "dtype"]], "torch.QUInt4x2Storage": [[1955, 2, 1, "", "dtype"]], "torch.QUInt8Storage": [[1955, 2, 1, "", "dtype"]], "torch.ShortStorage": [[1955, 2, 1, "", "dtype"]], "torch.Tag": [[1961, 4, 1, "", "name"]], "torch.Tensor": [[1959, 2, 1, "", "H"], [1959, 2, 1, "", "T"], [108, 3, 1, "", "abs"], [109, 3, 1, "", "abs_"], [110, 3, 1, "", "absolute"], [111, 3, 1, "", "absolute_"], [112, 3, 1, "", "acos"], [113, 3, 1, "", "acos_"], [114, 3, 1, "", "acosh"], [115, 3, 1, "", "acosh_"], [116, 3, 1, "", "add"], [117, 3, 1, "", "add_"], [118, 3, 1, "", "addbmm"], [119, 3, 1, "", "addbmm_"], [120, 3, 1, "", "addcdiv"], [121, 3, 1, "", "addcdiv_"], [122, 3, 1, "", "addcmul"], [123, 3, 1, "", "addcmul_"], [124, 3, 1, "", "addmm"], [125, 3, 1, "", "addmm_"], [126, 3, 1, "", "addmv"], [127, 3, 1, "", "addmv_"], [128, 3, 1, "", "addr"], [129, 3, 1, "", "addr_"], [130, 3, 1, "", "adjoint"], [1913, 3, 1, "", "align_as"], [1913, 3, 1, "", "align_to"], [131, 3, 1, "", "all"], [132, 3, 1, "", "allclose"], [133, 3, 1, "", "amax"], [134, 3, 1, "", "amin"], [135, 3, 1, "", "aminmax"], [136, 3, 1, "", "angle"], [137, 3, 1, "", "any"], [138, 3, 1, "", "apply_"], [139, 3, 1, "", "arccos"], [140, 3, 1, "", "arccos_"], [141, 3, 1, "", "arccosh"], [142, 3, 1, "", "arccosh_"], [143, 3, 1, "", "arcsin"], [144, 3, 1, "", "arcsin_"], [145, 3, 1, "", "arcsinh"], [146, 3, 1, "", "arcsinh_"], [147, 3, 1, "", "arctan"], [148, 3, 1, "", "arctan2"], [149, 3, 1, "", "arctan2_"], [150, 3, 1, "", "arctan_"], [151, 3, 1, "", "arctanh"], [152, 3, 1, "", "arctanh_"], [153, 3, 1, "", "argmax"], [154, 3, 1, "", "argmin"], [155, 3, 1, "", "argsort"], [156, 3, 1, "", "argwhere"], [157, 3, 1, "", "as_strided"], [158, 3, 1, "", "as_subclass"], [159, 3, 1, "", "asin"], [160, 3, 1, "", "asin_"], [161, 3, 1, "", "asinh"], [162, 3, 1, "", "asinh_"], [163, 3, 1, "", "atan"], [164, 3, 1, "", "atan2"], [165, 3, 1, "", "atan2_"], [166, 3, 1, "", "atan_"], [167, 3, 1, "", "atanh"], [168, 3, 1, "", "atanh_"], [169, 3, 1, "", "backward"], [170, 3, 1, "", "baddbmm"], [171, 3, 1, "", "baddbmm_"], [172, 3, 1, "", "bernoulli"], [173, 3, 1, "", "bernoulli_"], [174, 3, 1, "", "bfloat16"], [175, 3, 1, "", "bincount"], [176, 3, 1, "", "bitwise_and"], [177, 3, 1, "", "bitwise_and_"], [178, 3, 1, "", "bitwise_left_shift"], [179, 3, 1, "", "bitwise_left_shift_"], [180, 3, 1, "", "bitwise_not"], [181, 3, 1, "", "bitwise_not_"], [182, 3, 1, "", "bitwise_or"], [183, 3, 1, "", "bitwise_or_"], [184, 3, 1, "", "bitwise_right_shift"], [185, 3, 1, "", "bitwise_right_shift_"], [186, 3, 1, "", "bitwise_xor"], [187, 3, 1, "", "bitwise_xor_"], [188, 3, 1, "", "bmm"], [189, 3, 1, "", "bool"], [190, 3, 1, "", "broadcast_to"], [191, 3, 1, "", "byte"], [192, 3, 1, "", "cauchy_"], [193, 3, 1, "", "ccol_indices"], [194, 3, 1, "", "cdouble"], [195, 3, 1, "", "ceil"], [196, 3, 1, "", "ceil_"], [197, 3, 1, "", "cfloat"], [198, 3, 1, "", "chalf"], [199, 3, 1, "", "char"], [200, 3, 1, "", "cholesky"], [201, 3, 1, "", "cholesky_inverse"], [202, 3, 1, "", "cholesky_solve"], [203, 3, 1, "", "chunk"], [204, 3, 1, "", "clamp"], [205, 3, 1, "", "clamp_"], [206, 3, 1, "", "clip"], [207, 3, 1, "", "clip_"], [208, 3, 1, "", "clone"], [209, 3, 1, "", "coalesce"], [210, 3, 1, "", "col_indices"], [211, 3, 1, "", "conj"], [212, 3, 1, "", "conj_physical"], [213, 3, 1, "", "conj_physical_"], [214, 3, 1, "", "contiguous"], [215, 3, 1, "", "copy_"], [216, 3, 1, "", "copysign"], [217, 3, 1, "", "copysign_"], [218, 3, 1, "", "corrcoef"], [219, 3, 1, "", "cos"], [220, 3, 1, "", "cos_"], [221, 3, 1, "", "cosh"], [222, 3, 1, "", "cosh_"], [223, 3, 1, "", "count_nonzero"], [224, 3, 1, "", "cov"], [225, 3, 1, "", "cpu"], [226, 3, 1, "", "cross"], [227, 3, 1, "", "crow_indices"], [228, 3, 1, "", "cuda"], [229, 3, 1, "", "cummax"], [230, 3, 1, "", "cummin"], [231, 3, 1, "", "cumprod"], [232, 3, 1, "", "cumprod_"], [233, 3, 1, "", "cumsum"], [234, 3, 1, "", "cumsum_"], [235, 3, 1, "", "data_ptr"], [236, 3, 1, "", "deg2rad"], [237, 3, 1, "", "dense_dim"], [238, 3, 1, "", "dequantize"], [239, 3, 1, "", "det"], [240, 3, 1, "", "detach"], [241, 3, 1, "", "detach_"], [242, 2, 1, "", "device"], [243, 3, 1, "", "diag"], [244, 3, 1, "", "diag_embed"], [245, 3, 1, "", "diagflat"], [246, 3, 1, "", "diagonal"], [247, 3, 1, "", "diagonal_scatter"], [248, 3, 1, "", "diff"], [249, 3, 1, "", "digamma"], [250, 3, 1, "", "digamma_"], [251, 3, 1, "", "dim"], [252, 3, 1, "", "dist"], [253, 3, 1, "", "div"], [254, 3, 1, "", "div_"], [255, 3, 1, "", "divide"], [256, 3, 1, "", "divide_"], [257, 3, 1, "", "dot"], [258, 3, 1, "", "double"], [259, 3, 1, "", "dsplit"], [260, 3, 1, "", "element_size"], [261, 3, 1, "", "eq"], [262, 3, 1, "", "eq_"], [263, 3, 1, "", "equal"], [264, 3, 1, "", "erf"], [265, 3, 1, "", "erf_"], [266, 3, 1, "", "erfc"], [267, 3, 1, "", "erfc_"], [268, 3, 1, "", "erfinv"], [269, 3, 1, "", "erfinv_"], [270, 3, 1, "", "exp"], [271, 3, 1, "", "exp_"], [272, 3, 1, "", "expand"], [273, 3, 1, "", "expand_as"], [274, 3, 1, "", "expm1"], [275, 3, 1, "", "expm1_"], [276, 3, 1, "", "exponential_"], [277, 3, 1, "", "fill_"], [278, 3, 1, "", "fill_diagonal_"], [279, 3, 1, "", "fix"], [280, 3, 1, "", "fix_"], [281, 3, 1, "", "flatten"], [282, 3, 1, "", "flip"], [283, 3, 1, "", "fliplr"], [284, 3, 1, "", "flipud"], [285, 3, 1, "", "float"], [286, 3, 1, "", "float_power"], [287, 3, 1, "", "float_power_"], [288, 3, 1, "", "floor"], [289, 3, 1, "", "floor_"], [290, 3, 1, "", "floor_divide"], [291, 3, 1, "", "floor_divide_"], [292, 3, 1, "", "fmax"], [293, 3, 1, "", "fmin"], [294, 3, 1, "", "fmod"], [295, 3, 1, "", "fmod_"], [296, 3, 1, "", "frac"], [297, 3, 1, "", "frac_"], [298, 3, 1, "", "frexp"], [299, 3, 1, "", "gather"], [300, 3, 1, "", "gcd"], [301, 3, 1, "", "gcd_"], [302, 3, 1, "", "ge"], [303, 3, 1, "", "ge_"], [304, 3, 1, "", "geometric_"], [305, 3, 1, "", "geqrf"], [306, 3, 1, "", "ger"], [307, 3, 1, "", "get_device"], [308, 2, 1, "", "grad"], [309, 3, 1, "", "greater"], [310, 3, 1, "", "greater_"], [311, 3, 1, "", "greater_equal"], [312, 3, 1, "", "greater_equal_"], [313, 3, 1, "", "gt"], [314, 3, 1, "", "gt_"], [315, 3, 1, "", "half"], [316, 3, 1, "", "hardshrink"], [317, 3, 1, "", "heaviside"], [318, 3, 1, "", "histc"], [319, 3, 1, "", "histogram"], [320, 3, 1, "", "hsplit"], [321, 3, 1, "", "hypot"], [322, 3, 1, "", "hypot_"], [323, 3, 1, "", "i0"], [324, 3, 1, "", "i0_"], [325, 3, 1, "", "igamma"], [326, 3, 1, "", "igamma_"], [327, 3, 1, "", "igammac"], [328, 3, 1, "", "igammac_"], [329, 2, 1, "", "imag"], [330, 3, 1, "", "index_add"], [331, 3, 1, "", "index_add_"], [332, 3, 1, "", "index_copy"], [333, 3, 1, "", "index_copy_"], [334, 3, 1, "", "index_fill"], [335, 3, 1, "", "index_fill_"], [336, 3, 1, "", "index_put"], [337, 3, 1, "", "index_put_"], [338, 3, 1, "", "index_reduce"], [339, 3, 1, "", "index_reduce_"], [340, 3, 1, "", "index_select"], [341, 3, 1, "", "indices"], [342, 3, 1, "", "inner"], [343, 3, 1, "", "int"], [344, 3, 1, "", "int_repr"], [345, 3, 1, "", "inverse"], [346, 3, 1, "", "is_coalesced"], [347, 3, 1, "", "is_complex"], [348, 3, 1, "", "is_conj"], [349, 3, 1, "", "is_contiguous"], [350, 2, 1, "", "is_cuda"], [351, 3, 1, "", "is_floating_point"], [352, 3, 1, "", "is_inference"], [353, 2, 1, "", "is_leaf"], [354, 2, 1, "", "is_meta"], [355, 3, 1, "", "is_pinned"], [356, 2, 1, "", "is_quantized"], [357, 3, 1, "", "is_set_to"], [358, 3, 1, "", "is_shared"], [359, 3, 1, "", "is_signed"], [360, 2, 1, "", "is_sparse"], [361, 2, 1, "", "is_sparse_csr"], [362, 3, 1, "", "isclose"], [363, 3, 1, "", "isfinite"], [364, 3, 1, "", "isinf"], [365, 3, 1, "", "isnan"], [366, 3, 1, "", "isneginf"], [367, 3, 1, "", "isposinf"], [368, 3, 1, "", "isreal"], [369, 3, 1, "", "istft"], [370, 3, 1, "", "item"], [371, 2, 1, "", "itemsize"], [372, 3, 1, "", "kthvalue"], [373, 3, 1, "", "lcm"], [374, 3, 1, "", "lcm_"], [375, 3, 1, "", "ldexp"], [376, 3, 1, "", "ldexp_"], [377, 3, 1, "", "le"], [378, 3, 1, "", "le_"], [379, 3, 1, "", "lerp"], [380, 3, 1, "", "lerp_"], [381, 3, 1, "", "less"], [382, 3, 1, "", "less_"], [383, 3, 1, "", "less_equal"], [384, 3, 1, "", "less_equal_"], [385, 3, 1, "", "lgamma"], [386, 3, 1, "", "lgamma_"], [387, 3, 1, "", "log"], [388, 3, 1, "", "log10"], [389, 3, 1, "", "log10_"], [390, 3, 1, "", "log1p"], [391, 3, 1, "", "log1p_"], [392, 3, 1, "", "log2"], [393, 3, 1, "", "log2_"], [394, 3, 1, "", "log_"], [395, 3, 1, "", "log_normal_"], [396, 3, 1, "", "logaddexp"], [397, 3, 1, "", "logaddexp2"], [398, 3, 1, "", "logcumsumexp"], [399, 3, 1, "", "logdet"], [400, 3, 1, "", "logical_and"], [401, 3, 1, "", "logical_and_"], [402, 3, 1, "", "logical_not"], [403, 3, 1, "", "logical_not_"], [404, 3, 1, "", "logical_or"], [405, 3, 1, "", "logical_or_"], [406, 3, 1, "", "logical_xor"], [407, 3, 1, "", "logical_xor_"], [408, 3, 1, "", "logit"], [409, 3, 1, "", "logit_"], [410, 3, 1, "", "logsumexp"], [411, 3, 1, "", "long"], [412, 3, 1, "", "lt"], [413, 3, 1, "", "lt_"], [414, 3, 1, "", "lu"], [415, 3, 1, "", "lu_solve"], [1959, 2, 1, "", "mH"], [1959, 2, 1, "", "mT"], [416, 3, 1, "", "map_"], [417, 3, 1, "", "masked_fill"], [418, 3, 1, "", "masked_fill_"], [419, 3, 1, "", "masked_scatter"], [420, 3, 1, "", "masked_scatter_"], [421, 3, 1, "", "masked_select"], [422, 3, 1, "", "matmul"], [423, 3, 1, "", "matrix_exp"], [424, 3, 1, "", "matrix_power"], [425, 3, 1, "", "max"], [426, 3, 1, "", "maximum"], [427, 3, 1, "", "mean"], [428, 3, 1, "", "median"], [429, 3, 1, "", "min"], [430, 3, 1, "", "minimum"], [431, 3, 1, "", "mm"], [432, 3, 1, "", "mode"], [433, 3, 1, "", "moveaxis"], [434, 3, 1, "", "movedim"], [435, 3, 1, "", "msort"], [436, 3, 1, "", "mul"], [437, 3, 1, "", "mul_"], [438, 3, 1, "", "multinomial"], [439, 3, 1, "", "multiply"], [440, 3, 1, "", "multiply_"], [441, 3, 1, "", "mv"], [442, 3, 1, "", "mvlgamma"], [443, 3, 1, "", "mvlgamma_"], [1913, 2, 1, "", "names"], [444, 3, 1, "", "nan_to_num"], [445, 3, 1, "", "nan_to_num_"], [446, 3, 1, "", "nanmean"], [447, 3, 1, "", "nanmedian"], [448, 3, 1, "", "nanquantile"], [449, 3, 1, "", "nansum"], [450, 3, 1, "", "narrow"], [451, 3, 1, "", "narrow_copy"], [452, 2, 1, "", "nbytes"], [453, 2, 1, "", "ndim"], [454, 3, 1, "", "ndimension"], [455, 3, 1, "", "ne"], [456, 3, 1, "", "ne_"], [457, 3, 1, "", "neg"], [458, 3, 1, "", "neg_"], [459, 3, 1, "", "negative"], [460, 3, 1, "", "negative_"], [461, 3, 1, "", "nelement"], [462, 3, 1, "", "new_empty"], [463, 3, 1, "", "new_full"], [464, 3, 1, "", "new_ones"], [465, 3, 1, "", "new_tensor"], [466, 3, 1, "", "new_zeros"], [467, 3, 1, "", "nextafter"], [468, 3, 1, "", "nextafter_"], [469, 3, 1, "", "nonzero"], [470, 3, 1, "", "norm"], [471, 3, 1, "", "normal_"], [472, 3, 1, "", "not_equal"], [473, 3, 1, "", "not_equal_"], [474, 3, 1, "", "numel"], [475, 3, 1, "", "numpy"], [476, 3, 1, "", "orgqr"], [477, 3, 1, "", "ormqr"], [478, 3, 1, "", "outer"], [479, 3, 1, "", "permute"], [480, 3, 1, "", "pin_memory"], [481, 3, 1, "", "pinverse"], [482, 3, 1, "", "polygamma"], [483, 3, 1, "", "polygamma_"], [484, 3, 1, "", "positive"], [485, 3, 1, "", "pow"], [486, 3, 1, "", "pow_"], [487, 3, 1, "", "prod"], [488, 3, 1, "", "put_"], [489, 3, 1, "", "q_per_channel_axis"], [490, 3, 1, "", "q_per_channel_scales"], [491, 3, 1, "", "q_per_channel_zero_points"], [492, 3, 1, "", "q_scale"], [493, 3, 1, "", "q_zero_point"], [494, 3, 1, "", "qr"], [495, 3, 1, "", "qscheme"], [496, 3, 1, "", "quantile"], [497, 3, 1, "", "rad2deg"], [498, 3, 1, "", "random_"], [499, 3, 1, "", "ravel"], [500, 2, 1, "", "real"], [501, 3, 1, "", "reciprocal"], [502, 3, 1, "", "reciprocal_"], [503, 3, 1, "", "record_stream"], [1913, 3, 1, "", "refine_names"], [504, 3, 1, "", "register_hook"], [505, 3, 1, "", "remainder"], [506, 3, 1, "", "remainder_"], [1913, 3, 1, "", "rename"], [1913, 3, 1, "", "rename_"], [507, 3, 1, "", "renorm"], [508, 3, 1, "", "renorm_"], [509, 3, 1, "", "repeat"], [510, 3, 1, "", "repeat_interleave"], [511, 2, 1, "", "requires_grad"], [512, 3, 1, "", "requires_grad_"], [513, 3, 1, "", "reshape"], [514, 3, 1, "", "reshape_as"], [515, 3, 1, "", "resize_"], [516, 3, 1, "", "resize_as_"], [517, 3, 1, "", "resolve_conj"], [518, 3, 1, "", "resolve_neg"], [519, 3, 1, "", "retain_grad"], [520, 2, 1, "", "retains_grad"], [521, 3, 1, "", "roll"], [522, 3, 1, "", "rot90"], [523, 3, 1, "", "round"], [524, 3, 1, "", "round_"], [525, 3, 1, "", "row_indices"], [526, 3, 1, "", "rsqrt"], [527, 3, 1, "", "rsqrt_"], [528, 3, 1, "", "scatter"], [529, 3, 1, "", "scatter_"], [530, 3, 1, "", "scatter_add"], [531, 3, 1, "", "scatter_add_"], [532, 3, 1, "", "scatter_reduce"], [533, 3, 1, "", "scatter_reduce_"], [534, 3, 1, "", "select"], [535, 3, 1, "", "select_scatter"], [536, 3, 1, "", "set_"], [537, 3, 1, "", "sgn"], [538, 3, 1, "", "sgn_"], [539, 2, 1, "", "shape"], [540, 3, 1, "", "share_memory_"], [541, 3, 1, "", "short"], [542, 3, 1, "", "sigmoid"], [543, 3, 1, "", "sigmoid_"], [544, 3, 1, "", "sign"], [545, 3, 1, "", "sign_"], [546, 3, 1, "", "signbit"], [547, 3, 1, "", "sin"], [548, 3, 1, "", "sin_"], [549, 3, 1, "", "sinc"], [550, 3, 1, "", "sinc_"], [551, 3, 1, "", "sinh"], [552, 3, 1, "", "sinh_"], [553, 3, 1, "", "size"], [554, 3, 1, "", "slice_scatter"], [555, 3, 1, "", "slogdet"], [556, 3, 1, "", "smm"], [557, 3, 1, "", "softmax"], [558, 3, 1, "", "sort"], [559, 3, 1, "", "sparse_dim"], [560, 3, 1, "", "sparse_mask"], [561, 3, 1, "", "sparse_resize_"], [562, 3, 1, "", "sparse_resize_and_clear_"], [563, 3, 1, "", "split"], [564, 3, 1, "", "sqrt"], [565, 3, 1, "", "sqrt_"], [566, 3, 1, "", "square"], [567, 3, 1, "", "square_"], [568, 3, 1, "", "squeeze"], [569, 3, 1, "", "squeeze_"], [570, 3, 1, "", "sspaddmm"], [571, 3, 1, "", "std"], [572, 3, 1, "", "stft"], [573, 3, 1, "", "storage"], [574, 3, 1, "", "storage_offset"], [575, 3, 1, "", "storage_type"], [576, 3, 1, "", "stride"], [577, 3, 1, "", "sub"], [578, 3, 1, "", "sub_"], [579, 3, 1, "", "subtract"], [580, 3, 1, "", "subtract_"], [581, 3, 1, "", "sum"], [582, 3, 1, "", "sum_to_size"], [583, 3, 1, "", "svd"], [584, 3, 1, "", "swapaxes"], [585, 3, 1, "", "swapdims"], [586, 3, 1, "", "t"], [587, 3, 1, "", "t_"], [588, 3, 1, "", "take"], [589, 3, 1, "", "take_along_dim"], [590, 3, 1, "", "tan"], [591, 3, 1, "", "tan_"], [592, 3, 1, "", "tanh"], [593, 3, 1, "", "tanh_"], [594, 3, 1, "", "tensor_split"], [595, 3, 1, "", "tile"], [596, 3, 1, "", "to"], [597, 3, 1, "", "to_dense"], [598, 3, 1, "", "to_mkldnn"], [599, 3, 1, "", "to_sparse"], [600, 3, 1, "", "to_sparse_bsc"], [601, 3, 1, "", "to_sparse_bsr"], [602, 3, 1, "", "to_sparse_coo"], [603, 3, 1, "", "to_sparse_csc"], [604, 3, 1, "", "to_sparse_csr"], [605, 3, 1, "", "tolist"], [606, 3, 1, "", "topk"], [607, 3, 1, "", "trace"], [608, 3, 1, "", "transpose"], [609, 3, 1, "", "transpose_"], [610, 3, 1, "", "triangular_solve"], [611, 3, 1, "", "tril"], [612, 3, 1, "", "tril_"], [613, 3, 1, "", "triu"], [614, 3, 1, "", "triu_"], [615, 3, 1, "", "true_divide"], [616, 3, 1, "", "true_divide_"], [617, 3, 1, "", "trunc"], [618, 3, 1, "", "trunc_"], [619, 3, 1, "", "type"], [620, 3, 1, "", "type_as"], [621, 3, 1, "", "unbind"], [622, 3, 1, "", "unflatten"], [623, 3, 1, "", "unfold"], [624, 3, 1, "", "uniform_"], [625, 3, 1, "", "unique"], [626, 3, 1, "", "unique_consecutive"], [627, 3, 1, "", "unsqueeze"], [628, 3, 1, "", "unsqueeze_"], [629, 3, 1, "", "untyped_storage"], [630, 3, 1, "", "values"], [631, 3, 1, "", "var"], [632, 3, 1, "", "vdot"], [633, 3, 1, "", "view"], [634, 3, 1, "", "view_as"], [635, 3, 1, "", "vsplit"], [636, 3, 1, "", "where"], [637, 3, 1, "", "xlogy"], [638, 3, 1, "", "xlogy_"], [639, 3, 1, "", "zero_"]], "torch.TypedStorage": [[1955, 3, 1, "", "bfloat16"], [1955, 3, 1, "", "bool"], [1955, 3, 1, "", "byte"], [1955, 3, 1, "", "char"], [1955, 3, 1, "", "clone"], [1955, 3, 1, "", "complex_double"], [1955, 3, 1, "", "complex_float"], [1955, 3, 1, "", "copy_"], [1955, 3, 1, "", "cpu"], [1955, 3, 1, "", "cuda"], [1955, 3, 1, "", "data_ptr"], [1955, 4, 1, "", "device"], [1955, 3, 1, "", "double"], [1955, 2, 1, "", "dtype"], [1955, 3, 1, "", "element_size"], [1955, 3, 1, "", "fill_"], [1955, 3, 1, "", "float"], [1955, 3, 1, "", "from_buffer"], [1955, 3, 1, "", "from_file"], [1955, 3, 1, "", "get_device"], [1955, 3, 1, "", "half"], [1955, 3, 1, "", "hpu"], [1955, 3, 1, "", "int"], [1955, 4, 1, "", "is_cuda"], [1955, 4, 1, "", "is_hpu"], [1955, 3, 1, "", "is_pinned"], [1955, 3, 1, "", "is_shared"], [1955, 2, 1, "", "is_sparse"], [1955, 3, 1, "", "long"], [1955, 3, 1, "", "nbytes"], [1955, 3, 1, "", "pickle_storage_type"], [1955, 3, 1, "", "pin_memory"], [1955, 3, 1, "", "resize_"], [1955, 3, 1, "", "share_memory_"], [1955, 3, 1, "", "short"], [1955, 3, 1, "", "size"], [1955, 3, 1, "", "tolist"], [1955, 3, 1, "", "type"], [1955, 3, 1, "", "untyped"]], "torch.UntypedStorage": [[1955, 3, 1, "", "bfloat16"], [1955, 3, 1, "", "bool"], [1955, 3, 1, "", "byte"], [1955, 3, 1, "", "byteswap"], [1955, 3, 1, "", "char"], [1955, 3, 1, "", "clone"], [1955, 3, 1, "", "complex_double"], [1955, 3, 1, "", "complex_float"], [1955, 3, 1, "", "copy_"], [1955, 3, 1, "", "cpu"], [1955, 3, 1, "", "cuda"], [1955, 3, 1, "", "data_ptr"], [1955, 2, 1, "", "device"], [1955, 3, 1, "", "double"], [1955, 3, 1, "", "element_size"], [1955, 3, 1, "", "fill_"], [1955, 3, 1, "", "float"], [1955, 3, 1, "", "from_buffer"], [1955, 3, 1, "", "from_file"], [1955, 3, 1, "", "get_device"], [1955, 3, 1, "", "half"], [1955, 3, 1, "", "hpu"], [1955, 3, 1, "", "int"], [1955, 4, 1, "", "is_cuda"], [1955, 4, 1, "", "is_hpu"], [1955, 3, 1, "", "is_pinned"], [1955, 3, 1, "", "is_shared"], [1955, 2, 1, "", "is_sparse"], [1955, 2, 1, "", "is_sparse_csr"], [1955, 3, 1, "", "long"], [1955, 3, 1, "", "mps"], [1955, 3, 1, "", "nbytes"], [1955, 3, 1, "", "new"], [1955, 3, 1, "", "pin_memory"], [1955, 3, 1, "", "resize_"], [1955, 3, 1, "", "share_memory_"], [1955, 3, 1, "", "short"], [1955, 3, 1, "", "size"], [1955, 3, 1, "", "tolist"], [1955, 3, 1, "", "type"], [1955, 3, 1, "", "untyped"]], "torch.__config__": [[32, 5, 1, "", "parallel_info"], [32, 5, 1, "", "show"]], "torch._logging": [[696, 5, 1, "", "set_logs"]], "torch.ao": [[1944, 0, 0, "-", "nn"], [1944, 0, 0, "-", "ns"], [1944, 0, 0, "-", "pruning"], [1944, 0, 0, "-", "quantization"]], "torch.ao.nn": [[1947, 0, 0, "-", "intrinsic"], [1947, 0, 0, "-", "qat"], [1944, 0, 0, "-", "quantizable"], [1944, 0, 0, "-", "quantized"], [1944, 0, 0, "-", "sparse"]], "torch.ao.nn.intrinsic": [[716, 1, 1, "", "BNReLU2d"], [717, 1, 1, "", "BNReLU3d"], [718, 1, 1, "", "ConvBn1d"], [719, 1, 1, "", "ConvBn2d"], [720, 1, 1, "", "ConvBn3d"], [721, 1, 1, "", "ConvBnReLU1d"], [722, 1, 1, "", "ConvBnReLU2d"], [723, 1, 1, "", "ConvBnReLU3d"], [724, 1, 1, "", "ConvReLU1d"], [725, 1, 1, "", "ConvReLU2d"], [726, 1, 1, "", "ConvReLU3d"], [727, 1, 1, "", "LinearReLU"], [1947, 0, 0, "-", "modules"], [1947, 0, 0, "-", "qat"], [1947, 0, 0, "-", "quantized"]], "torch.ao.nn.intrinsic.qat": [[728, 1, 1, "", "ConvBn1d"], [729, 1, 1, "", "ConvBn2d"], [730, 1, 1, "", "ConvBn3d"], [731, 1, 1, "", "ConvBnReLU1d"], [732, 1, 1, "", "ConvBnReLU2d"], [733, 1, 1, "", "ConvBnReLU3d"], [734, 1, 1, "", "ConvReLU2d"], [735, 1, 1, "", "ConvReLU3d"], [736, 1, 1, "", "LinearReLU"], [737, 1, 1, "", "freeze_bn_stats"], [1947, 0, 0, "-", "modules"], [738, 1, 1, "", "update_bn_stats"]], "torch.ao.nn.intrinsic.quantized": [[739, 1, 1, "", "BNReLU2d"], [740, 1, 1, "", "BNReLU3d"], [741, 1, 1, "", "ConvReLU1d"], [742, 1, 1, "", "ConvReLU2d"], [743, 1, 1, "", "ConvReLU3d"], [744, 1, 1, "", "LinearReLU"], [1947, 0, 0, "-", "dynamic"], [1947, 0, 0, "-", "modules"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[745, 1, 1, "", "LinearReLU"], [1947, 0, 0, "-", "modules"]], "torch.ao.nn.qat": [[746, 1, 1, "", "Conv2d"], [747, 1, 1, "", "Conv3d"], [748, 1, 1, "", "Linear"], [1947, 0, 0, "-", "dynamic"], [1947, 0, 0, "-", "modules"]], "torch.ao.nn.qat.Linear": [[748, 3, 1, "", "from_float"]], "torch.ao.nn.qat.dynamic": [[749, 1, 1, "", "Linear"], [1947, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable": [[750, 1, 1, "", "LSTM"], [751, 1, 1, "", "MultiheadAttention"], [1944, 0, 0, "-", "modules"]], "torch.ao.nn.quantizable.MultiheadAttention": [[751, 3, 1, "", "dequantize"], [751, 3, 1, "", "forward"]], "torch.ao.nn.quantized": [[752, 1, 1, "", "BatchNorm2d"], [753, 1, 1, "", "BatchNorm3d"], [754, 1, 1, "", "Conv1d"], [755, 1, 1, "", "Conv2d"], [756, 1, 1, "", "Conv3d"], [757, 1, 1, "", "ConvTranspose1d"], [758, 1, 1, "", "ConvTranspose2d"], [759, 1, 1, "", "ConvTranspose3d"], [760, 1, 1, "", "ELU"], [761, 1, 1, "", "Embedding"], [762, 1, 1, "", "EmbeddingBag"], [763, 1, 1, "", "FXFloatFunctional"], [764, 1, 1, "", "FloatFunctional"], [765, 1, 1, "", "GroupNorm"], [766, 1, 1, "", "Hardswish"], [767, 1, 1, "", "InstanceNorm1d"], [768, 1, 1, "", "InstanceNorm2d"], [769, 1, 1, "", "InstanceNorm3d"], [770, 1, 1, "", "LayerNorm"], [771, 1, 1, "", "LeakyReLU"], [772, 1, 1, "", "Linear"], [773, 1, 1, "", "QFunctional"], [774, 1, 1, "", "ReLU6"], [775, 1, 1, "", "Sigmoid"], [1947, 0, 0, "-", "dynamic"], [1947, 0, 0, "-", "functional"], [1947, 0, 0, "-", "modules"], [1944, 0, 0, "-", "reference"]], "torch.ao.nn.quantized.Conv1d": [[754, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv2d": [[755, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Conv3d": [[756, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Embedding": [[761, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.EmbeddingBag": [[762, 3, 1, "", "from_float"]], "torch.ao.nn.quantized.Linear": [[772, 3, 1, "", "from_float"], [772, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.dynamic": [[776, 1, 1, "", "GRU"], [777, 1, 1, "", "GRUCell"], [778, 1, 1, "", "LSTM"], [779, 1, 1, "", "LSTMCell"], [780, 1, 1, "", "Linear"], [781, 1, 1, "", "RNNCell"], [1947, 0, 0, "-", "modules"]], "torch.ao.nn.quantized.dynamic.Linear": [[780, 3, 1, "", "from_float"], [780, 3, 1, "", "from_reference"]], "torch.ao.nn.quantized.functional": [[782, 1, 1, "", "adaptive_avg_pool2d"], [783, 1, 1, "", "adaptive_avg_pool3d"], [784, 1, 1, "", "avg_pool2d"], [785, 1, 1, "", "avg_pool3d"], [786, 1, 1, "", "celu"], [787, 1, 1, "", "clamp"], [788, 1, 1, "", "conv1d"], [789, 1, 1, "", "conv2d"], [790, 1, 1, "", "conv3d"], [791, 1, 1, "", "elu"], [792, 1, 1, "", "hardsigmoid"], [793, 1, 1, "", "hardswish"], [794, 1, 1, "", "hardtanh"], [795, 1, 1, "", "interpolate"], [796, 1, 1, "", "leaky_relu"], [797, 1, 1, "", "linear"], [798, 1, 1, "", "max_pool1d"], [799, 1, 1, "", "max_pool2d"], [800, 1, 1, "", "threshold"], [801, 1, 1, "", "upsample"], [802, 1, 1, "", "upsample_bilinear"], [803, 1, 1, "", "upsample_nearest"]], "torch.ao.nn.quantized.reference": [[1944, 0, 0, "-", "modules"]], "torch.ao.nn.sparse": [[1944, 0, 0, "-", "quantized"]], "torch.ao.nn.sparse.quantized": [[1944, 0, 0, "-", "dynamic"]], "torch.ao.ns": [[1962, 0, 0, "-", "_numeric_suite"], [1963, 0, 0, "-", "_numeric_suite_fx"], [1944, 0, 0, "-", "fx"]], "torch.ao.ns._numeric_suite": [[1962, 1, 1, "", "Logger"], [1962, 1, 1, "", "OutputLogger"], [1962, 1, 1, "", "Shadow"], [1962, 1, 1, "", "ShadowLogger"], [1962, 5, 1, "", "compare_model_outputs"], [1962, 5, 1, "", "compare_model_stub"], [1962, 5, 1, "", "compare_weights"], [1962, 5, 1, "", "get_logger_dict"], [1962, 5, 1, "", "get_matching_activations"], [1962, 5, 1, "", "prepare_model_outputs"], [1962, 5, 1, "", "prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite.Logger": [[1962, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.OutputLogger": [[1962, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite.Shadow": [[1962, 3, 1, "", "add"], [1962, 3, 1, "", "add_relu"], [1962, 3, 1, "", "add_scalar"], [1962, 3, 1, "", "cat"], [1962, 3, 1, "", "forward"], [1962, 3, 1, "", "mul"], [1962, 3, 1, "", "mul_scalar"]], "torch.ao.ns._numeric_suite.ShadowLogger": [[1962, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx": [[1963, 1, 1, "", "NSTracer"], [1963, 1, 1, "", "OutputComparisonLogger"], [1963, 1, 1, "", "OutputLogger"], [1963, 5, 1, "", "add_loggers"], [1963, 5, 1, "", "add_shadow_loggers"], [1963, 5, 1, "", "convert_n_shadows_model"], [1963, 5, 1, "", "extend_logger_results_with_comparison"], [1963, 5, 1, "", "extract_logger_info"], [1963, 5, 1, "", "extract_results_n_shadows_model"], [1963, 5, 1, "", "extract_shadow_logger_info"], [1963, 5, 1, "", "extract_weights"], [1963, 5, 1, "", "loggers_set_enabled"], [1963, 5, 1, "", "loggers_set_save_activations"], [1963, 5, 1, "", "prepare_n_shadows_model"], [1963, 5, 1, "", "print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx.NSTracer": [[1963, 3, 1, "", "is_leaf_module"]], "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger": [[1963, 3, 1, "", "forward"]], "torch.ao.ns._numeric_suite_fx.OutputLogger": [[1963, 3, 1, "", "forward"]], "torch.ao.ns.fx.utils": [[1963, 5, 1, "", "compute_cosine_similarity"], [1963, 5, 1, "", "compute_normalized_l2_error"], [1963, 5, 1, "", "compute_sqnr"]], "torch.ao.pruning": [[1944, 0, 0, "-", "scheduler"], [1944, 0, 0, "-", "sparsifier"]], "torch.ao.quantization": [[804, 1, 1, "", "DeQuantStub"], [805, 1, 1, "", "QuantStub"], [806, 1, 1, "", "QuantWrapper"], [807, 1, 1, "", "add_quant_dequant"], [1944, 0, 0, "-", "backend_config"], [813, 1, 1, "", "convert"], [814, 1, 1, "", "default_eval_fn"], [830, 1, 1, "", "fuse_modules"], [1944, 0, 0, "-", "fx"], [854, 1, 1, "", "prepare"], [855, 1, 1, "", "prepare_qat"], [856, 1, 1, "", "propagate_qconfig_"], [1947, 0, 0, "-", "pt2e"], [873, 1, 1, "", "quantize"], [874, 1, 1, "", "quantize_dynamic"], [879, 1, 1, "", "quantize_qat"], [1947, 0, 0, "-", "quantizer"], [880, 1, 1, "", "swap_module"]], "torch.ao.quantization.backend_config": [[808, 1, 1, "", "BackendConfig"], [809, 1, 1, "", "BackendPatternConfig"], [810, 1, 1, "", "DTypeConfig"], [811, 1, 1, "", "DTypeWithConstraints"], [812, 1, 1, "", "ObservationType"]], "torch.ao.quantization.backend_config.BackendConfig": [[808, 4, 1, "", "configs"], [808, 3, 1, "", "from_dict"], [808, 3, 1, "", "set_backend_pattern_config"], [808, 3, 1, "", "set_backend_pattern_configs"], [808, 3, 1, "", "set_name"], [808, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.BackendPatternConfig": [[809, 3, 1, "", "add_dtype_config"], [809, 3, 1, "", "from_dict"], [809, 3, 1, "", "set_dtype_configs"], [809, 3, 1, "", "set_fused_module"], [809, 3, 1, "", "set_fuser_method"], [809, 3, 1, "", "set_observation_type"], [809, 3, 1, "", "set_pattern"], [809, 3, 1, "", "set_qat_module"], [809, 3, 1, "", "set_reference_quantized_module"], [809, 3, 1, "", "set_root_module"], [809, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.DTypeConfig": [[810, 3, 1, "", "from_dict"], [810, 3, 1, "", "to_dict"]], "torch.ao.quantization.backend_config.ObservationType": [[812, 2, 1, "", "INPUT_OUTPUT_NOT_OBSERVED"], [812, 2, 1, "", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], [812, 2, 1, "", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "torch.ao.quantization.fake_quantize": [[815, 1, 1, "", "FakeQuantize"], [816, 1, 1, "", "FakeQuantizeBase"], [817, 1, 1, "", "FixedQParamsFakeQuantize"], [818, 1, 1, "", "FusedMovingAvgObsFakeQuantize"], [819, 2, 1, "", "default_fake_quant"], [820, 2, 1, "", "default_fused_act_fake_quant"], [821, 2, 1, "", "default_fused_per_channel_wt_fake_quant"], [822, 2, 1, "", "default_fused_wt_fake_quant"], [823, 2, 1, "", "default_histogram_fake_quant"], [824, 2, 1, "", "default_per_channel_weight_fake_quant"], [825, 2, 1, "", "default_weight_fake_quant"], [826, 1, 1, "", "disable_fake_quant"], [827, 1, 1, "", "disable_observer"], [828, 1, 1, "", "enable_fake_quant"], [829, 1, 1, "", "enable_observer"]], "torch.ao.quantization.fx.custom_config": [[831, 1, 1, "", "ConvertCustomConfig"], [832, 1, 1, "", "FuseCustomConfig"], [833, 1, 1, "", "PrepareCustomConfig"], [834, 1, 1, "", "StandaloneModuleConfigEntry"]], "torch.ao.quantization.fx.custom_config.ConvertCustomConfig": [[831, 3, 1, "", "from_dict"], [831, 3, 1, "", "set_observed_to_quantized_mapping"], [831, 3, 1, "", "set_preserved_attributes"], [831, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.FuseCustomConfig": [[832, 3, 1, "", "from_dict"], [832, 3, 1, "", "set_preserved_attributes"], [832, 3, 1, "", "to_dict"]], "torch.ao.quantization.fx.custom_config.PrepareCustomConfig": [[833, 3, 1, "", "from_dict"], [833, 3, 1, "", "set_float_to_observed_mapping"], [833, 3, 1, "", "set_input_quantized_indexes"], [833, 3, 1, "", "set_non_traceable_module_classes"], [833, 3, 1, "", "set_non_traceable_module_names"], [833, 3, 1, "", "set_output_quantized_indexes"], [833, 3, 1, "", "set_preserved_attributes"], [833, 3, 1, "", "set_standalone_module_class"], [833, 3, 1, "", "set_standalone_module_name"], [833, 3, 1, "", "to_dict"]], "torch.ao.quantization.observer": [[835, 1, 1, "", "HistogramObserver"], [836, 1, 1, "", "MinMaxObserver"], [837, 1, 1, "", "MovingAverageMinMaxObserver"], [838, 1, 1, "", "MovingAveragePerChannelMinMaxObserver"], [839, 1, 1, "", "NoopObserver"], [840, 1, 1, "", "ObserverBase"], [841, 1, 1, "", "PerChannelMinMaxObserver"], [842, 1, 1, "", "PlaceholderObserver"], [843, 1, 1, "", "RecordingObserver"], [844, 2, 1, "", "default_debug_observer"], [845, 2, 1, "", "default_dynamic_quant_observer"], [846, 2, 1, "", "default_float_qparams_observer"], [847, 2, 1, "", "default_histogram_observer"], [848, 2, 1, "", "default_observer"], [849, 2, 1, "", "default_per_channel_weight_observer"], [850, 2, 1, "", "default_placeholder_observer"], [851, 2, 1, "", "default_weight_observer"], [852, 1, 1, "", "get_observer_state_dict"], [853, 1, 1, "", "load_observer_state_dict"]], "torch.ao.quantization.observer.MinMaxObserver": [[836, 3, 1, "", "calculate_qparams"], [836, 3, 1, "", "forward"], [836, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.observer.ObserverBase": [[840, 3, 1, "", "with_args"], [840, 3, 1, "", "with_callable_args"]], "torch.ao.quantization.observer.PerChannelMinMaxObserver": [[841, 3, 1, "", "reset_min_max_vals"]], "torch.ao.quantization.pt2e": [[1947, 0, 0, "-", "representation"]], "torch.ao.quantization.qconfig": [[857, 1, 1, "", "QConfig"], [858, 2, 1, "", "default_activation_only_qconfig"], [859, 2, 1, "", "default_debug_qconfig"], [860, 2, 1, "", "default_dynamic_qconfig"], [861, 2, 1, "", "default_per_channel_qconfig"], [862, 2, 1, "", "default_qat_qconfig"], [863, 2, 1, "", "default_qat_qconfig_v2"], [864, 2, 1, "", "default_qconfig"], [865, 2, 1, "", "default_weight_only_qconfig"], [866, 2, 1, "", "float16_dynamic_qconfig"], [867, 2, 1, "", "float16_static_qconfig"], [868, 2, 1, "", "float_qparams_weight_only_qconfig"], [869, 2, 1, "", "per_channel_dynamic_qconfig"]], "torch.ao.quantization.qconfig_mapping": [[870, 1, 1, "", "QConfigMapping"], [871, 1, 1, "", "get_default_qat_qconfig_mapping"], [872, 1, 1, "", "get_default_qconfig_mapping"]], "torch.ao.quantization.qconfig_mapping.QConfigMapping": [[870, 3, 1, "", "from_dict"], [870, 3, 1, "", "set_global"], [870, 3, 1, "", "set_module_name"], [870, 3, 1, "", "set_module_name_object_type_order"], [870, 3, 1, "", "set_module_name_regex"], [870, 3, 1, "", "set_object_type"], [870, 3, 1, "", "to_dict"]], "torch.ao.quantization.quantize_fx": [[875, 1, 1, "", "convert_fx"], [876, 1, 1, "", "fuse_fx"], [877, 1, 1, "", "prepare_fx"], [878, 1, 1, "", "prepare_qat_fx"]], "torch.autograd": [[1, 1, 1, "", "Function"], [909, 5, 1, "", "backward"], [1, 1, 1, "", "detect_anomaly"], [923, 5, 1, "", "grad"], [924, 5, 1, "", "gradcheck"], [925, 5, 1, "", "gradgradcheck"], [1, 1, 1, "", "set_detect_anomaly"]], "torch.autograd.Function": [[905, 3, 1, "", "backward"], [906, 3, 1, "", "forward"], [907, 3, 1, "", "jvp"], [908, 3, 1, "", "vmap"]], "torch.autograd.forward_ad": [[910, 1, 1, "", "dual_level"], [911, 5, 1, "", "make_dual"], [912, 5, 1, "", "unpack_dual"]], "torch.autograd.function.FunctionCtx": [[913, 3, 1, "", "mark_dirty"], [914, 3, 1, "", "mark_non_differentiable"], [915, 3, 1, "", "save_for_backward"], [916, 3, 1, "", "set_materialize_grads"]], "torch.autograd.functional": [[917, 5, 1, "", "hessian"], [918, 5, 1, "", "hvp"], [919, 5, 1, "", "jacobian"], [920, 5, 1, "", "jvp"], [921, 5, 1, "", "vhp"], [922, 5, 1, "", "vjp"]], "torch.autograd.graph.Node": [[926, 3, 1, "", "metadata"], [927, 3, 1, "", "name"], [928, 4, 1, "", "next_functions"], [929, 3, 1, "", "register_hook"], [930, 3, 1, "", "register_prehook"]], "torch.autograd.graph": [[1, 1, 1, "", "allow_mutation_on_saved_tensors"], [1, 1, 1, "", "disable_saved_tensors_hooks"], [1, 1, 1, "", "register_multi_grad_hook"], [1, 1, 1, "", "save_on_cpu"], [1, 1, 1, "", "saved_tensors_hooks"]], "torch.autograd.profiler": [[1, 1, 1, "", "emit_itt"], [1, 1, 1, "", "emit_nvtx"], [931, 5, 1, "", "load_nvprof"], [1, 1, 1, "", "profile"]], "torch.autograd.profiler.profile": [[932, 3, 1, "", "export_chrome_trace"], [933, 3, 1, "", "key_averages"], [934, 4, 1, "", "self_cpu_time_total"], [935, 3, 1, "", "total_average"]], "torch.backends": [[2, 0, 0, "-", "cpu"], [2, 0, 0, "-", "cuda"], [2, 0, 0, "-", "cudnn"], [2, 0, 0, "-", "mkl"], [2, 0, 0, "-", "mkldnn"], [2, 0, 0, "-", "mps"], [2, 0, 0, "-", "openmp"], [2, 0, 0, "-", "opt_einsum"], [2, 0, 0, "-", "quantized"], [2, 0, 0, "-", "xeon"], [2, 0, 0, "-", "xnnpack"]], "torch.backends.cpu": [[2, 5, 1, "", "get_cpu_capability"]], "torch.backends.cuda": [[2, 1, 1, "", "SDPBackend"], [2, 2, 1, "", "cufft_plan_cache"], [2, 5, 1, "", "enable_flash_sdp"], [2, 5, 1, "", "enable_math_sdp"], [2, 5, 1, "", "enable_mem_efficient_sdp"], [2, 5, 1, "", "flash_sdp_enabled"], [2, 5, 1, "", "is_built"], [2, 5, 1, "", "math_sdp_enabled"], [2, 5, 1, "", "mem_efficient_sdp_enabled"], [2, 5, 1, "", "preferred_linalg_library"], [2, 5, 1, "", "sdp_kernel"]], "torch.backends.cuda.cufft_plan_cache": [[2, 3, 1, "", "clear"], [2, 2, 1, "", "max_size"], [2, 2, 1, "", "size"]], "torch.backends.cuda.matmul": [[2, 2, 1, "", "allow_bf16_reduced_precision_reduction"], [2, 2, 1, "", "allow_fp16_reduced_precision_reduction"], [2, 2, 1, "", "allow_tf32"]], "torch.backends.cudnn": [[2, 2, 1, "", "allow_tf32"], [2, 2, 1, "", "benchmark"], [2, 2, 1, "", "benchmark_limit"], [2, 2, 1, "", "deterministic"], [2, 2, 1, "", "enabled"], [2, 5, 1, "", "is_available"], [2, 5, 1, "", "version"]], "torch.backends.mkl": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mkldnn": [[2, 5, 1, "", "is_available"], [2, 1, 1, "", "verbose"]], "torch.backends.mps": [[2, 5, 1, "", "is_available"], [2, 5, 1, "", "is_built"]], "torch.backends.openmp": [[2, 5, 1, "", "is_available"]], "torch.backends.opt_einsum": [[2, 2, 1, "", "enabled"], [2, 5, 1, "", "get_opt_einsum"], [2, 5, 1, "", "is_available"], [2, 2, 1, "", "strategy"]], "torch.compiler": [[970, 5, 1, "", "allow_in_graph"], [971, 5, 1, "", "assume_constant_result"], [972, 5, 1, "", "compile"], [973, 5, 1, "", "disable"], [974, 5, 1, "", "list_backends"], [975, 5, 1, "", "reset"]], "torch.cpu": [[987, 1, 1, "", "Stream"], [988, 1, 1, "", "StreamContext"], [0, 0, 0, "-", "amp"], [989, 5, 1, "", "current_stream"], [990, 5, 1, "", "device_count"], [991, 5, 1, "", "is_available"], [992, 5, 1, "", "stream"], [993, 5, 1, "", "synchronize"]], "torch.cpu.amp": [[0, 1, 1, "", "autocast"]], "torch.cuda": [[995, 1, 1, "", "CUDAGraph"], [996, 1, 1, "", "CUDAPluggableAllocator"], [997, 1, 1, "", "Event"], [998, 1, 1, "", "ExternalStream"], [999, 6, 1, "", "OutOfMemoryError"], [1000, 1, 1, "", "Stream"], [1001, 1, 1, "", "StreamContext"], [37, 0, 0, "-", "_sanitizer"], [0, 0, 0, "-", "amp"], [1002, 5, 1, "", "caching_allocator_alloc"], [1003, 5, 1, "", "caching_allocator_delete"], [1004, 5, 1, "", "can_device_access_peer"], [1005, 5, 1, "", "change_current_allocator"], [1006, 5, 1, "", "clock_rate"], [1012, 5, 1, "", "current_blas_handle"], [1013, 5, 1, "", "current_device"], [1014, 5, 1, "", "current_stream"], [1015, 5, 1, "", "default_stream"], [1016, 1, 1, "", "device"], [1017, 5, 1, "", "device_count"], [1018, 1, 1, "", "device_of"], [1019, 5, 1, "", "empty_cache"], [1020, 5, 1, "", "get_allocator_backend"], [1021, 5, 1, "", "get_arch_list"], [1022, 5, 1, "", "get_device_capability"], [1023, 5, 1, "", "get_device_name"], [1024, 5, 1, "", "get_device_properties"], [1025, 5, 1, "", "get_gencode_flags"], [1026, 5, 1, "", "get_rng_state"], [1027, 5, 1, "", "get_rng_state_all"], [1028, 5, 1, "", "get_sync_debug_mode"], [1029, 1, 1, "", "graph"], [1030, 5, 1, "", "graph_pool_handle"], [1031, 5, 1, "", "init"], [1032, 5, 1, "", "initial_seed"], [1033, 5, 1, "", "ipc_collect"], [1034, 5, 1, "", "is_available"], [1035, 5, 1, "", "is_current_stream_capturing"], [1036, 5, 1, "", "is_initialized"], [1039, 5, 1, "", "list_gpu_processes"], [1040, 5, 1, "", "make_graphed_callables"], [1041, 5, 1, "", "manual_seed"], [1042, 5, 1, "", "manual_seed_all"], [1043, 5, 1, "", "max_memory_allocated"], [1044, 5, 1, "", "max_memory_cached"], [1045, 5, 1, "", "max_memory_reserved"], [1046, 5, 1, "", "mem_get_info"], [1047, 5, 1, "", "memory_allocated"], [1048, 5, 1, "", "memory_cached"], [1049, 5, 1, "", "memory_reserved"], [1050, 5, 1, "", "memory_snapshot"], [1051, 5, 1, "", "memory_stats"], [1052, 5, 1, "", "memory_summary"], [1053, 5, 1, "", "memory_usage"], [1057, 5, 1, "", "power_draw"], [1058, 5, 1, "", "reset_max_memory_allocated"], [1059, 5, 1, "", "reset_max_memory_cached"], [1060, 5, 1, "", "reset_peak_memory_stats"], [1061, 5, 1, "", "seed"], [1062, 5, 1, "", "seed_all"], [1063, 5, 1, "", "set_device"], [1064, 5, 1, "", "set_per_process_memory_fraction"], [1065, 5, 1, "", "set_rng_state"], [1066, 5, 1, "", "set_rng_state_all"], [1067, 5, 1, "", "set_stream"], [1068, 5, 1, "", "set_sync_debug_mode"], [1069, 5, 1, "", "stream"], [1070, 5, 1, "", "synchronize"], [1071, 5, 1, "", "temperature"], [1072, 5, 1, "", "utilization"]], "torch.cuda.CUDAGraph": [[995, 3, 1, "", "capture_begin"], [995, 3, 1, "", "capture_end"], [995, 3, 1, "", "debug_dump"], [995, 3, 1, "", "enable_debug_mode"], [995, 3, 1, "", "pool"], [995, 3, 1, "", "replay"], [995, 3, 1, "", "reset"]], "torch.cuda.Event": [[997, 3, 1, "", "elapsed_time"], [997, 3, 1, "", "from_ipc_handle"], [997, 3, 1, "", "ipc_handle"], [997, 3, 1, "", "query"], [997, 3, 1, "", "record"], [997, 3, 1, "", "synchronize"], [997, 3, 1, "", "wait"]], "torch.cuda.ExternalStream": [[998, 3, 1, "", "query"], [998, 3, 1, "", "record_event"], [998, 3, 1, "", "synchronize"], [998, 3, 1, "", "wait_event"], [998, 3, 1, "", "wait_stream"]], "torch.cuda.Stream": [[1000, 3, 1, "", "query"], [1000, 3, 1, "", "record_event"], [1000, 3, 1, "", "synchronize"], [1000, 3, 1, "", "wait_event"], [1000, 3, 1, "", "wait_stream"]], "torch.cuda._sanitizer": [[37, 5, 1, "", "enable_cuda_sanitizer"]], "torch.cuda.amp": [[0, 1, 1, "", "GradScaler"], [0, 1, 1, "", "autocast"], [0, 5, 1, "", "custom_bwd"], [0, 5, 1, "", "custom_fwd"]], "torch.cuda.amp.GradScaler": [[0, 3, 1, "", "get_backoff_factor"], [0, 3, 1, "", "get_growth_factor"], [0, 3, 1, "", "get_growth_interval"], [0, 3, 1, "", "get_scale"], [0, 3, 1, "", "is_enabled"], [0, 3, 1, "", "load_state_dict"], [0, 3, 1, "", "scale"], [0, 3, 1, "", "set_backoff_factor"], [0, 3, 1, "", "set_growth_factor"], [0, 3, 1, "", "set_growth_interval"], [0, 3, 1, "", "state_dict"], [0, 3, 1, "", "step"], [0, 3, 1, "", "unscale_"], [0, 3, 1, "", "update"]], "torch.cuda.comm": [[1007, 5, 1, "", "broadcast"], [1008, 5, 1, "", "broadcast_coalesced"], [1009, 5, 1, "", "gather"], [1010, 5, 1, "", "reduce_add"], [1011, 5, 1, "", "scatter"]], "torch.cuda.jiterator": [[1037, 5, 1, "", "_create_jit_fn"], [1038, 5, 1, "", "_create_multi_output_jit_fn"]], "torch.cuda.nvtx": [[1054, 5, 1, "", "mark"], [1055, 5, 1, "", "range_pop"], [1056, 5, 1, "", "range_push"]], "torch.distributed": [[43, 1, 1, "", "Backend"], [43, 1, 1, "", "DistBackendError"], [43, 1, 1, "", "FileStore"], [41, 1, 1, "", "GradBucket"], [43, 1, 1, "", "HashStore"], [43, 1, 1, "", "P2POp"], [43, 1, 1, "", "PrefixStore"], [43, 1, 1, "", "ReduceOp"], [43, 1, 1, "", "Store"], [43, 1, 1, "", "TCPStore"], [43, 0, 0, "-", "algorithms"], [43, 5, 1, "", "all_gather"], [43, 5, 1, "", "all_gather_into_tensor"], [43, 5, 1, "", "all_gather_multigpu"], [43, 5, 1, "", "all_gather_object"], [43, 5, 1, "", "all_reduce"], [43, 5, 1, "", "all_reduce_multigpu"], [43, 5, 1, "", "all_to_all"], [43, 5, 1, "", "all_to_all_single"], [1949, 0, 0, "-", "autograd"], [43, 5, 1, "", "barrier"], [43, 5, 1, "", "batch_isend_irecv"], [43, 5, 1, "", "broadcast"], [43, 5, 1, "", "broadcast_multigpu"], [43, 5, 1, "", "broadcast_object_list"], [45, 0, 0, "-", "checkpoint"], [43, 0, 0, "-", "elastic"], [66, 0, 0, "-", "fsdp"], [43, 5, 1, "", "gather"], [43, 5, 1, "", "gather_object"], [43, 5, 1, "", "get_backend"], [43, 5, 1, "", "get_global_rank"], [43, 5, 1, "", "get_group_rank"], [43, 5, 1, "", "get_process_group_ranks"], [43, 5, 1, "", "get_rank"], [43, 5, 1, "", "get_world_size"], [43, 5, 1, "", "init_process_group"], [43, 5, 1, "", "irecv"], [43, 5, 1, "", "is_available"], [43, 5, 1, "", "is_gloo_available"], [43, 5, 1, "", "is_initialized"], [43, 5, 1, "", "is_mpi_available"], [43, 5, 1, "", "is_nccl_available"], [43, 5, 1, "", "is_torchelastic_launched"], [43, 5, 1, "", "isend"], [43, 0, 0, "-", "launch"], [43, 0, 0, "-", "launcher"], [43, 5, 1, "", "monitored_barrier"], [43, 5, 1, "", "new_group"], [43, 0, 0, "-", "nn"], [47, 0, 0, "-", "optim"], [43, 0, 0, "-", "pipeline"], [43, 5, 1, "", "recv"], [43, 5, 1, "", "reduce"], [43, 5, 1, "", "reduce_multigpu"], [43, 1, 1, "", "reduce_op"], [43, 5, 1, "", "reduce_scatter"], [43, 5, 1, "", "reduce_scatter_multigpu"], [43, 5, 1, "", "reduce_scatter_tensor"], [1949, 0, 0, "-", "rpc"], [61, 0, 0, "-", "run"], [43, 5, 1, "", "scatter"], [43, 5, 1, "", "scatter_object_list"], [43, 5, 1, "", "send"], [43, 0, 0, "-", "tensor"]], "torch.distributed.Backend": [[43, 3, 1, "", "register_backend"]], "torch.distributed.GradBucket": [[41, 5, 1, "", "buffer"], [41, 5, 1, "", "gradients"], [41, 5, 1, "", "index"], [41, 5, 1, "", "is_last"], [41, 5, 1, "", "parameters"], [41, 5, 1, "", "set_buffer"]], "torch.distributed.Store": [[43, 5, 1, "", "add"], [43, 5, 1, "", "compare_set"], [43, 5, 1, "", "delete_key"], [43, 5, 1, "", "get"], [43, 5, 1, "", "num_keys"], [43, 5, 1, "", "set"], [43, 5, 1, "", "set_timeout"], [43, 5, 1, "", "wait"]], "torch.distributed.algorithms": [[44, 1, 1, "", "Join"], [44, 1, 1, "", "JoinHook"], [44, 1, 1, "", "Joinable"], [43, 0, 0, "-", "ddp_comm_hooks"], [43, 0, 0, "-", "model_averaging"]], "torch.distributed.algorithms.Join": [[44, 3, 1, "", "notify_join_context"]], "torch.distributed.algorithms.JoinHook": [[44, 3, 1, "", "main_hook"], [44, 3, 1, "", "post_hook"]], "torch.distributed.algorithms.Joinable": [[44, 4, 1, "", "join_device"], [44, 3, 1, "", "join_hook"], [44, 4, 1, "", "join_process_group"]], "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks": [[41, 5, 1, "", "noop_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.default_hooks": [[41, 5, 1, "", "allreduce_hook"], [41, 5, 1, "", "bf16_compress_hook"], [41, 5, 1, "", "bf16_compress_wrapper"], [41, 5, 1, "", "fp16_compress_hook"], [41, 5, 1, "", "fp16_compress_wrapper"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook": [[41, 1, 1, "", "PowerSGDState"], [41, 5, 1, "", "batched_powerSGD_hook"], [41, 5, 1, "", "powerSGD_hook"]], "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": [[41, 3, 1, "", "__getstate__"], [41, 3, 1, "", "__setstate__"]], "torch.distributed.autograd": [[1949, 5, 1, "", "backward"], [1949, 1, 1, "", "context"], [1949, 5, 1, "", "get_gradients"]], "torch.distributed.checkpoint": [[45, 1, 1, "", "DefaultLoadPlanner"], [45, 1, 1, "", "DefaultSavePlanner"], [45, 1, 1, "", "FileSystemReader"], [45, 1, 1, "", "FileSystemWriter"], [45, 1, 1, "", "LoadPlan"], [45, 1, 1, "", "LoadPlanner"], [45, 1, 1, "", "ReadItem"], [45, 1, 1, "", "SavePlan"], [45, 1, 1, "", "SavePlanner"], [45, 1, 1, "", "StorageReader"], [45, 1, 1, "", "StorageWriter"], [45, 1, 1, "", "WriteItem"], [45, 5, 1, "", "load_state_dict"], [45, 5, 1, "", "save_state_dict"]], "torch.distributed.checkpoint.DefaultLoadPlanner": [[45, 3, 1, "", "lookup_tensor"], [45, 3, 1, "", "transform_tensor"]], "torch.distributed.checkpoint.DefaultSavePlanner": [[45, 3, 1, "", "lookup_object"], [45, 3, 1, "", "transform_object"]], "torch.distributed.checkpoint.LoadPlanner": [[45, 3, 1, "", "commit_tensor"], [45, 3, 1, "", "create_global_plan"], [45, 3, 1, "", "create_local_plan"], [45, 3, 1, "", "finish_plan"], [45, 3, 1, "", "load_bytes"], [45, 3, 1, "", "resolve_tensor"], [45, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.SavePlanner": [[45, 3, 1, "", "create_global_plan"], [45, 3, 1, "", "create_local_plan"], [45, 3, 1, "", "finish_plan"], [45, 3, 1, "", "resolve_data"], [45, 3, 1, "", "set_up_planner"]], "torch.distributed.checkpoint.StorageReader": [[45, 3, 1, "", "prepare_global_plan"], [45, 3, 1, "", "prepare_local_plan"], [45, 3, 1, "", "read_data"], [45, 3, 1, "", "read_metadata"], [45, 3, 1, "", "set_up_storage_reader"]], "torch.distributed.checkpoint.StorageWriter": [[45, 3, 1, "", "finish"], [45, 3, 1, "", "prepare_global_plan"], [45, 3, 1, "", "prepare_local_plan"], [45, 3, 1, "", "set_up_storage_writer"], [45, 3, 1, "", "write_data"]], "torch.distributed.elastic": [[51, 0, 0, "-", "agent"], [54, 0, 0, "-", "events"], [57, 0, 0, "-", "metrics"], [58, 0, 0, "-", "multiprocessing"], [60, 0, 0, "-", "rendezvous"], [62, 0, 0, "-", "timer"], [43, 0, 0, "-", "utils"]], "torch.distributed.elastic.agent": [[51, 0, 0, "-", "server"]], "torch.distributed.elastic.agent.server": [[51, 1, 1, "", "ElasticAgent"], [51, 1, 1, "", "SimpleElasticAgent"], [51, 1, 1, "", "Worker"], [51, 1, 1, "", "WorkerGroup"], [51, 1, 1, "", "WorkerSpec"], [51, 1, 1, "", "WorkerState"]], "torch.distributed.elastic.agent.server.ElasticAgent": [[51, 3, 1, "", "get_worker_group"], [51, 3, 1, "", "run"]], "torch.distributed.elastic.agent.server.SimpleElasticAgent": [[51, 3, 1, "", "_assign_worker_ranks"], [51, 3, 1, "", "_exit_barrier"], [51, 3, 1, "", "_initialize_workers"], [51, 3, 1, "", "_monitor_workers"], [51, 3, 1, "", "_rendezvous"], [51, 3, 1, "", "_restart_workers"], [51, 3, 1, "", "_shutdown"], [51, 3, 1, "", "_start_workers"], [51, 3, 1, "", "_stop_workers"]], "torch.distributed.elastic.agent.server.WorkerSpec": [[51, 3, 1, "", "get_entrypoint_name"]], "torch.distributed.elastic.agent.server.WorkerState": [[51, 3, 1, "", "is_running"]], "torch.distributed.elastic.agent.server.api": [[51, 1, 1, "", "RunResult"]], "torch.distributed.elastic.agent.server.local_elastic_agent": [[51, 1, 1, "", "LocalElasticAgent"]], "torch.distributed.elastic.events.api": [[54, 1, 1, "", "Event"], [54, 2, 1, "", "EventMetadataValue"], [54, 1, 1, "", "EventSource"]], "torch.distributed.elastic.events": [[54, 5, 1, "", "get_logging_handler"], [54, 5, 1, "", "record"]], "torch.distributed.elastic.metrics.api": [[57, 1, 1, "", "ConsoleMetricHandler"], [57, 1, 1, "", "MetricHandler"], [57, 1, 1, "", "NullMetricHandler"]], "torch.distributed.elastic.metrics": [[57, 5, 1, "", "configure"], [57, 5, 1, "", "prof"], [57, 5, 1, "", "put_metric"]], "torch.distributed.elastic.multiprocessing.api": [[58, 1, 1, "", "MultiprocessContext"], [58, 1, 1, "", "PContext"], [58, 1, 1, "", "RunProcsResult"], [58, 1, 1, "", "SubprocessContext"]], "torch.distributed.elastic.multiprocessing": [[53, 0, 0, "-", "errors"], [58, 5, 1, "", "start_processes"]], "torch.distributed.elastic.multiprocessing.errors": [[53, 1, 1, "", "ChildFailedError"], [53, 1, 1, "", "ErrorHandler"], [53, 1, 1, "", "ProcessFailure"], [53, 5, 1, "", "record"]], "torch.distributed.elastic.rendezvous": [[60, 1, 1, "", "RendezvousClosedError"], [60, 1, 1, "", "RendezvousConnectionError"], [60, 1, 1, "", "RendezvousError"], [60, 1, 1, "", "RendezvousHandler"], [60, 1, 1, "", "RendezvousHandlerRegistry"], [60, 1, 1, "", "RendezvousParameters"], [60, 1, 1, "", "RendezvousStateError"], [60, 1, 1, "", "RendezvousTimeoutError"], [60, 0, 0, "-", "registry"]], "torch.distributed.elastic.rendezvous.RendezvousHandler": [[60, 3, 1, "", "get_backend"], [60, 3, 1, "", "get_run_id"], [60, 3, 1, "", "is_closed"], [60, 3, 1, "", "next_rendezvous"], [60, 3, 1, "", "num_nodes_waiting"], [60, 3, 1, "", "set_closed"], [60, 3, 1, "", "shutdown"]], "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": [[60, 3, 1, "", "create_handler"], [60, 3, 1, "", "register"]], "torch.distributed.elastic.rendezvous.RendezvousParameters": [[60, 3, 1, "", "get"], [60, 3, 1, "", "get_as_bool"], [60, 3, 1, "", "get_as_int"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend": [[60, 1, 1, "", "C10dRendezvousBackend"], [60, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": [[60, 3, 1, "", "get_state"], [60, 4, 1, "", "name"], [60, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous": [[60, 1, 1, "", "DynamicRendezvousHandler"], [60, 1, 1, "", "RendezvousBackend"], [60, 1, 1, "", "RendezvousTimeout"], [60, 5, 1, "", "create_handler"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": [[60, 3, 1, "", "from_backend"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": [[60, 3, 1, "", "get_state"], [60, 4, 1, "", "name"], [60, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": [[60, 4, 1, "", "close"], [60, 4, 1, "", "heartbeat"], [60, 4, 1, "", "join"], [60, 4, 1, "", "last_call"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous": [[60, 1, 1, "", "EtcdRendezvousHandler"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend": [[60, 1, 1, "", "EtcdRendezvousBackend"], [60, 5, 1, "", "create_backend"]], "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": [[60, 3, 1, "", "get_state"], [60, 4, 1, "", "name"], [60, 3, 1, "", "set_state"]], "torch.distributed.elastic.rendezvous.etcd_server": [[60, 1, 1, "", "EtcdServer"]], "torch.distributed.elastic.rendezvous.etcd_store": [[60, 1, 1, "", "EtcdStore"]], "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": [[60, 3, 1, "", "add"], [60, 3, 1, "", "check"], [60, 3, 1, "", "get"], [60, 3, 1, "", "set"], [60, 3, 1, "", "wait"]], "torch.distributed.elastic.timer": [[62, 1, 1, "", "FileTimerClient"], [62, 1, 1, "", "FileTimerServer"], [62, 1, 1, "", "LocalTimerClient"], [62, 1, 1, "", "LocalTimerServer"], [62, 1, 1, "", "TimerClient"], [62, 1, 1, "", "TimerRequest"], [62, 1, 1, "", "TimerServer"], [62, 5, 1, "", "configure"], [62, 5, 1, "", "expires"]], "torch.distributed.elastic.timer.TimerClient": [[62, 3, 1, "", "acquire"], [62, 3, 1, "", "release"]], "torch.distributed.elastic.timer.TimerServer": [[62, 3, 1, "", "clear_timers"], [62, 3, 1, "", "get_expired_timers"], [62, 3, 1, "", "register_timers"]], "torch.distributed.elastic.utils": [[43, 0, 0, "-", "data"]], "torch.distributed.fsdp": [[66, 1, 1, "", "BackwardPrefetch"], [66, 1, 1, "", "CPUOffload"], [66, 1, 1, "", "FullyShardedDataParallel"], [66, 1, 1, "", "MixedPrecision"], [66, 1, 1, "", "ShardingStrategy"]], "torch.distributed.fsdp.FullyShardedDataParallel": [[66, 3, 1, "", "apply"], [66, 3, 1, "", "clip_grad_norm_"], [66, 3, 1, "", "flatten_sharded_optim_state_dict"], [66, 3, 1, "", "forward"], [66, 3, 1, "", "fsdp_modules"], [66, 3, 1, "", "full_optim_state_dict"], [66, 3, 1, "", "get_state_dict_type"], [66, 4, 1, "", "module"], [66, 3, 1, "", "named_buffers"], [66, 3, 1, "", "named_parameters"], [66, 3, 1, "", "no_sync"], [66, 3, 1, "", "optim_state_dict"], [66, 3, 1, "", "optim_state_dict_to_load"], [66, 3, 1, "", "register_comm_hook"], [66, 3, 1, "", "rekey_optim_state_dict"], [66, 3, 1, "", "scatter_full_optim_state_dict"], [66, 3, 1, "", "set_state_dict_type"], [66, 3, 1, "", "shard_full_optim_state_dict"], [66, 3, 1, "", "sharded_optim_state_dict"], [66, 3, 1, "", "state_dict_type"], [66, 3, 1, "", "summon_full_params"]], "torch.distributed.fsdp.api": [[66, 1, 1, "", "FullOptimStateDictConfig"], [66, 1, 1, "", "FullStateDictConfig"], [66, 1, 1, "", "LocalOptimStateDictConfig"], [66, 1, 1, "", "LocalStateDictConfig"], [66, 1, 1, "", "OptimStateDictConfig"], [66, 1, 1, "", "ShardedOptimStateDictConfig"], [66, 1, 1, "", "ShardedStateDictConfig"], [66, 1, 1, "", "StateDictConfig"], [66, 1, 1, "", "StateDictSettings"]], "torch.distributed.nn": [[43, 0, 0, "-", "api"], [43, 0, 0, "-", "jit"]], "torch.distributed.nn.api.remote_module": [[1949, 1, 1, "", "RemoteModule"]], "torch.distributed.nn.api.remote_module.RemoteModule": [[1949, 3, 1, "", "get_module_rref"], [1949, 3, 1, "", "remote_parameters"]], "torch.distributed.nn.jit": [[43, 0, 0, "-", "templates"]], "torch.distributed.optim": [[47, 1, 1, "", "DistributedOptimizer"], [47, 1, 1, "", "PostLocalSGDOptimizer"], [47, 1, 1, "", "ZeroRedundancyOptimizer"]], "torch.distributed.optim.DistributedOptimizer": [[47, 3, 1, "", "step"]], "torch.distributed.optim.PostLocalSGDOptimizer": [[47, 3, 1, "", "load_state_dict"], [47, 3, 1, "", "state_dict"], [47, 3, 1, "", "step"]], "torch.distributed.optim.ZeroRedundancyOptimizer": [[47, 3, 1, "", "add_param_group"], [47, 3, 1, "", "consolidate_state_dict"], [47, 3, 1, "", "join_hook"], [47, 3, 1, "", "load_state_dict"], [47, 3, 1, "", "state_dict"], [47, 3, 1, "", "step"]], "torch.distributed.pipeline": [[43, 0, 0, "-", "sync"]], "torch.distributed.pipeline.sync": [[1942, 1, 1, "", "Pipe"], [43, 0, 0, "-", "skip"]], "torch.distributed.pipeline.sync.Pipe": [[1942, 3, 1, "", "forward"]], "torch.distributed.pipeline.sync.skip.skippable": [[1942, 1, 1, "", "pop"], [1942, 5, 1, "", "skippable"], [1942, 1, 1, "", "stash"], [1942, 5, 1, "", "verify_skippables"]], "torch.distributed.rpc": [[1949, 1, 1, "", "BackendType"], [1949, 1, 1, "", "RRef"], [1949, 1, 1, "", "RpcBackendOptions"], [1949, 1, 1, "", "TensorPipeRpcBackendOptions"], [1949, 1, 1, "", "WorkerInfo"], [1949, 5, 1, "", "get_worker_info"], [1949, 5, 1, "", "init_rpc"], [1949, 5, 1, "", "remote"], [1949, 5, 1, "", "rpc_async"], [1949, 5, 1, "", "rpc_sync"], [1949, 5, 1, "", "shutdown"]], "torch.distributed.rpc.RpcBackendOptions": [[1949, 4, 1, "", "init_method"], [1949, 4, 1, "", "rpc_timeout"]], "torch.distributed.rpc.TensorPipeRpcBackendOptions": [[1949, 4, 1, "", "device_maps"], [1949, 4, 1, "", "devices"], [1949, 4, 1, "", "init_method"], [1949, 4, 1, "", "num_worker_threads"], [1949, 4, 1, "", "rpc_timeout"], [1949, 3, 1, "", "set_device_map"], [1949, 3, 1, "", "set_devices"]], "torch.distributed.rpc.WorkerInfo": [[1949, 4, 1, "", "id"], [1949, 4, 1, "", "name"]], "torch.distributed.rpc.functions": [[1949, 5, 1, "", "async_execution"]], "torch.distributed.tensor": [[48, 0, 0, "-", "parallel"]], "torch.distributed.tensor.parallel.fsdp": [[48, 5, 1, "", "enable_2d_with_fsdp"]], "torch.distributed.tensor.parallel.multihead_attention_tp": [[48, 1, 1, "", "TensorParallelMultiheadAttention"]], "torch.distributed.tensor.parallel": [[48, 5, 1, "", "parallelize_module"]], "torch.distributed.tensor.parallel.style": [[48, 1, 1, "", "ColwiseParallel"], [48, 1, 1, "", "PairwiseParallel"], [48, 1, 1, "", "RowwiseParallel"], [48, 1, 1, "", "SequenceParallel"], [48, 5, 1, "", "make_input_replicate_1d"], [48, 5, 1, "", "make_input_reshard_replicate"], [48, 5, 1, "", "make_input_shard_1d"], [48, 5, 1, "", "make_input_shard_1d_last_dim"], [48, 5, 1, "", "make_output_replicate_1d"], [48, 5, 1, "", "make_output_reshard_tensor"], [48, 5, 1, "", "make_output_shard_1d"], [48, 5, 1, "", "make_output_tensor"]], "torch.distributions.bernoulli": [[49, 1, 1, "", "Bernoulli"]], "torch.distributions.bernoulli.Bernoulli": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "enumerate_support"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_enumerate_support"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.beta": [[49, 1, 1, "", "Beta"]], "torch.distributions.beta.Beta": [[49, 2, 1, "", "arg_constraints"], [49, 4, 1, "", "concentration0"], [49, 4, 1, "", "concentration1"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.binomial": [[49, 1, 1, "", "Binomial"]], "torch.distributions.binomial.Binomial": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "enumerate_support"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_enumerate_support"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.categorical": [[49, 1, 1, "", "Categorical"]], "torch.distributions.categorical.Categorical": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "enumerate_support"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_enumerate_support"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.cauchy": [[49, 1, 1, "", "Cauchy"]], "torch.distributions.cauchy.Cauchy": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.chi2": [[49, 1, 1, "", "Chi2"]], "torch.distributions.chi2.Chi2": [[49, 2, 1, "", "arg_constraints"], [49, 4, 1, "", "df"], [49, 3, 1, "", "expand"]], "torch.distributions": [[49, 0, 0, "-", "constraint_registry"], [49, 0, 0, "-", "constraints"], [49, 0, 0, "-", "kl"], [49, 0, 0, "-", "transforms"]], "torch.distributions.constraint_registry": [[49, 1, 1, "", "ConstraintRegistry"]], "torch.distributions.constraint_registry.ConstraintRegistry": [[49, 3, 1, "", "register"]], "torch.distributions.constraints": [[49, 1, 1, "", "Constraint"], [49, 2, 1, "", "cat"], [49, 2, 1, "", "dependent_property"], [49, 2, 1, "", "greater_than"], [49, 2, 1, "", "greater_than_eq"], [49, 2, 1, "", "half_open_interval"], [49, 2, 1, "", "independent"], [49, 2, 1, "", "integer_interval"], [49, 2, 1, "", "interval"], [49, 2, 1, "", "less_than"], [49, 2, 1, "", "multinomial"], [49, 2, 1, "", "stack"]], "torch.distributions.constraints.Constraint": [[49, 3, 1, "", "check"]], "torch.distributions.continuous_bernoulli": [[49, 1, 1, "", "ContinuousBernoulli"]], "torch.distributions.continuous_bernoulli.ContinuousBernoulli": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "rsample"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "stddev"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.dirichlet": [[49, 1, 1, "", "Dirichlet"]], "torch.distributions.dirichlet.Dirichlet": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.distribution": [[49, 1, 1, "", "Distribution"]], "torch.distributions.distribution.Distribution": [[49, 4, 1, "", "arg_constraints"], [49, 4, 1, "", "batch_shape"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "enumerate_support"], [49, 4, 1, "", "event_shape"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "perplexity"], [49, 3, 1, "", "rsample"], [49, 3, 1, "", "sample"], [49, 3, 1, "", "sample_n"], [49, 3, 1, "", "set_default_validate_args"], [49, 4, 1, "", "stddev"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.exp_family": [[49, 1, 1, "", "ExponentialFamily"]], "torch.distributions.exp_family.ExponentialFamily": [[49, 3, 1, "", "entropy"]], "torch.distributions.exponential": [[49, 1, 1, "", "Exponential"]], "torch.distributions.exponential.Exponential": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 4, 1, "", "stddev"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.fishersnedecor": [[49, 1, 1, "", "FisherSnedecor"]], "torch.distributions.fishersnedecor.FisherSnedecor": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.gamma": [[49, 1, 1, "", "Gamma"]], "torch.distributions.gamma.Gamma": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.geometric": [[49, 1, 1, "", "Geometric"]], "torch.distributions.geometric.Geometric": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.gumbel": [[49, 1, 1, "", "Gumbel"]], "torch.distributions.gumbel.Gumbel": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "stddev"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.half_cauchy": [[49, 1, 1, "", "HalfCauchy"]], "torch.distributions.half_cauchy.HalfCauchy": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "scale"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.half_normal": [[49, 1, 1, "", "HalfNormal"]], "torch.distributions.half_normal.HalfNormal": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "scale"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.independent": [[49, 1, 1, "", "Independent"]], "torch.distributions.independent.Independent": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "enumerate_support"], [49, 3, 1, "", "expand"], [49, 4, 1, "", "has_enumerate_support"], [49, 4, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.kl": [[49, 5, 1, "", "kl_divergence"], [49, 5, 1, "", "register_kl"]], "torch.distributions.kumaraswamy": [[49, 1, 1, "", "Kumaraswamy"]], "torch.distributions.kumaraswamy.Kumaraswamy": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.laplace": [[49, 1, 1, "", "Laplace"]], "torch.distributions.laplace.Laplace": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 4, 1, "", "stddev"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.lkj_cholesky": [[49, 1, 1, "", "LKJCholesky"]], "torch.distributions.lkj_cholesky.LKJCholesky": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"]], "torch.distributions.log_normal": [[49, 1, 1, "", "LogNormal"]], "torch.distributions.log_normal.LogNormal": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 4, 1, "", "loc"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "scale"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.lowrank_multivariate_normal": [[49, 1, 1, "", "LowRankMultivariateNormal"]], "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": [[49, 2, 1, "", "arg_constraints"], [49, 4, 1, "", "covariance_matrix"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "precision_matrix"], [49, 3, 1, "", "rsample"], [49, 4, 1, "", "scale_tril"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.mixture_same_family": [[49, 1, 1, "", "MixtureSameFamily"]], "torch.distributions.mixture_same_family.MixtureSameFamily": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 4, 1, "", "component_distribution"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mixture_distribution"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.multinomial": [[49, 1, 1, "", "Multinomial"]], "torch.distributions.multinomial.Multinomial": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "support"], [49, 2, 1, "", "total_count"], [49, 4, 1, "", "variance"]], "torch.distributions.multivariate_normal": [[49, 1, 1, "", "MultivariateNormal"]], "torch.distributions.multivariate_normal.MultivariateNormal": [[49, 2, 1, "", "arg_constraints"], [49, 4, 1, "", "covariance_matrix"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "precision_matrix"], [49, 3, 1, "", "rsample"], [49, 4, 1, "", "scale_tril"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.negative_binomial": [[49, 1, 1, "", "NegativeBinomial"]], "torch.distributions.negative_binomial.NegativeBinomial": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.normal": [[49, 1, 1, "", "Normal"]], "torch.distributions.normal.Normal": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "stddev"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.one_hot_categorical": [[49, 1, 1, "", "OneHotCategorical"]], "torch.distributions.one_hot_categorical.OneHotCategorical": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "enumerate_support"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_enumerate_support"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.pareto": [[49, 1, 1, "", "Pareto"]], "torch.distributions.pareto.Pareto": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.poisson": [[49, 1, 1, "", "Poisson"]], "torch.distributions.poisson.Poisson": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.relaxed_bernoulli": [[49, 1, 1, "", "LogitRelaxedBernoulli"], [49, 1, 1, "", "RelaxedBernoulli"]], "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "param_shape"], [49, 4, 1, "", "probs"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"]], "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "probs"], [49, 2, 1, "", "support"], [49, 4, 1, "", "temperature"]], "torch.distributions.relaxed_categorical": [[49, 1, 1, "", "RelaxedOneHotCategorical"]], "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 4, 1, "", "logits"], [49, 4, 1, "", "probs"], [49, 2, 1, "", "support"], [49, 4, 1, "", "temperature"]], "torch.distributions.studentT": [[49, 1, 1, "", "StudentT"]], "torch.distributions.studentT.StudentT": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.transformed_distribution": [[49, 1, 1, "", "TransformedDistribution"]], "torch.distributions.transformed_distribution.TransformedDistribution": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "expand"], [49, 4, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 3, 1, "", "rsample"], [49, 3, 1, "", "sample"], [49, 4, 1, "", "support"]], "torch.distributions.transforms": [[49, 1, 1, "", "AbsTransform"], [49, 1, 1, "", "AffineTransform"], [49, 1, 1, "", "CatTransform"], [49, 1, 1, "", "ComposeTransform"], [49, 1, 1, "", "CorrCholeskyTransform"], [49, 1, 1, "", "CumulativeDistributionTransform"], [49, 1, 1, "", "ExpTransform"], [49, 1, 1, "", "IndependentTransform"], [49, 1, 1, "", "LowerCholeskyTransform"], [49, 1, 1, "", "PositiveDefiniteTransform"], [49, 1, 1, "", "PowerTransform"], [49, 1, 1, "", "ReshapeTransform"], [49, 1, 1, "", "SigmoidTransform"], [49, 1, 1, "", "SoftmaxTransform"], [49, 1, 1, "", "SoftplusTransform"], [49, 1, 1, "", "StackTransform"], [49, 1, 1, "", "StickBreakingTransform"], [49, 1, 1, "", "TanhTransform"], [49, 1, 1, "", "Transform"]], "torch.distributions.transforms.Transform": [[49, 3, 1, "", "forward_shape"], [49, 4, 1, "", "inv"], [49, 3, 1, "", "inverse_shape"], [49, 3, 1, "", "log_abs_det_jacobian"], [49, 4, 1, "", "sign"]], "torch.distributions.uniform": [[49, 1, 1, "", "Uniform"]], "torch.distributions.uniform.Uniform": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "cdf"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "icdf"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "rsample"], [49, 4, 1, "", "stddev"], [49, 4, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.von_mises": [[49, 1, 1, "", "VonMises"]], "torch.distributions.von_mises.VonMises": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 3, 1, "", "sample"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.weibull": [[49, 1, 1, "", "Weibull"]], "torch.distributions.weibull.Weibull": [[49, 2, 1, "", "arg_constraints"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.distributions.wishart": [[49, 1, 1, "", "Wishart"]], "torch.distributions.wishart.Wishart": [[49, 2, 1, "", "arg_constraints"], [49, 4, 1, "", "covariance_matrix"], [49, 3, 1, "", "entropy"], [49, 3, 1, "", "expand"], [49, 2, 1, "", "has_rsample"], [49, 3, 1, "", "log_prob"], [49, 4, 1, "", "mean"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "precision_matrix"], [49, 3, 1, "", "rsample"], [49, 4, 1, "", "scale_tril"], [49, 2, 1, "", "support"], [49, 4, 1, "", "variance"]], "torch.fft": [[1110, 5, 1, "", "fft"], [1111, 5, 1, "", "fft2"], [1112, 5, 1, "", "fftfreq"], [1113, 5, 1, "", "fftn"], [1114, 5, 1, "", "fftshift"], [1115, 5, 1, "", "hfft"], [1116, 5, 1, "", "hfft2"], [1117, 5, 1, "", "hfftn"], [1118, 5, 1, "", "ifft"], [1119, 5, 1, "", "ifft2"], [1120, 5, 1, "", "ifftn"], [1121, 5, 1, "", "ifftshift"], [1122, 5, 1, "", "ihfft"], [1123, 5, 1, "", "ihfft2"], [1124, 5, 1, "", "ihfftn"], [1125, 5, 1, "", "irfft"], [1126, 5, 1, "", "irfft2"], [1127, 5, 1, "", "irfftn"], [1128, 5, 1, "", "rfft"], [1129, 5, 1, "", "rfft2"], [1130, 5, 1, "", "rfftfreq"], [1131, 5, 1, "", "rfftn"]], "torch.func": [[1150, 5, 1, "", "functional_call"], [1151, 5, 1, "", "functionalize"], [1152, 5, 1, "", "grad"], [1153, 5, 1, "", "grad_and_value"], [1154, 5, 1, "", "hessian"], [1155, 5, 1, "", "jacfwd"], [1156, 5, 1, "", "jacrev"], [1157, 5, 1, "", "jvp"], [1158, 5, 1, "", "linearize"], [1159, 5, 1, "", "replace_all_batch_norm_modules_"], [1160, 5, 1, "", "stack_module_state"], [1161, 5, 1, "", "vjp"], [1162, 5, 1, "", "vmap"]], "torch.futures": [[73, 1, 1, "", "Future"], [73, 5, 1, "", "collect_all"], [73, 5, 1, "", "wait_all"]], "torch.futures.Future": [[73, 3, 1, "", "add_done_callback"], [73, 3, 1, "", "done"], [73, 3, 1, "", "set_exception"], [73, 3, 1, "", "set_result"], [73, 3, 1, "", "then"], [73, 3, 1, "", "value"], [73, 3, 1, "", "wait"]], "torch.fx": [[74, 1, 1, "", "Graph"], [74, 1, 1, "", "GraphModule"], [74, 1, 1, "", "Interpreter"], [74, 1, 1, "", "Node"], [74, 1, 1, "", "Proxy"], [74, 1, 1, "", "Tracer"], [74, 1, 1, "", "Transformer"], [74, 0, 0, "-", "experimental"], [74, 0, 0, "-", "passes"], [74, 5, 1, "", "replace_pattern"], [74, 5, 1, "", "symbolic_trace"], [74, 5, 1, "", "wrap"]], "torch.fx.Graph": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "call_function"], [74, 3, 1, "", "call_method"], [74, 3, 1, "", "call_module"], [74, 3, 1, "", "create_node"], [74, 3, 1, "", "eliminate_dead_code"], [74, 3, 1, "", "erase_node"], [74, 3, 1, "", "get_attr"], [74, 3, 1, "", "graph_copy"], [74, 3, 1, "", "inserting_after"], [74, 3, 1, "", "inserting_before"], [74, 3, 1, "", "lint"], [74, 3, 1, "", "node_copy"], [74, 4, 1, "", "nodes"], [74, 3, 1, "", "on_generate_code"], [74, 3, 1, "", "output"], [74, 3, 1, "", "placeholder"], [74, 3, 1, "", "print_tabular"], [74, 3, 1, "", "process_inputs"], [74, 3, 1, "", "process_outputs"], [74, 3, 1, "", "python_code"], [74, 3, 1, "", "set_codegen"]], "torch.fx.GraphModule": [[74, 3, 1, "", "__init__"], [74, 3, 1, "", "add_submodule"], [74, 4, 1, "", "code"], [74, 3, 1, "", "delete_all_unused_submodules"], [74, 3, 1, "", "delete_submodule"], [74, 4, 1, "", "graph"], [74, 3, 1, "", "print_readable"], [74, 3, 1, "", "recompile"], [74, 3, 1, "", "to_folder"]], "torch.fx.Interpreter": [[74, 3, 1, "", "boxed_run"], [74, 3, 1, "", "call_function"], [74, 3, 1, "", "call_method"], [74, 3, 1, "", "call_module"], [74, 3, 1, "", "fetch_args_kwargs_from_env"], [74, 3, 1, "", "fetch_attr"], [74, 3, 1, "", "get_attr"], [74, 3, 1, "", "map_nodes_to_values"], [74, 3, 1, "", "output"], [74, 3, 1, "", "placeholder"], [74, 3, 1, "", "run"], [74, 3, 1, "", "run_node"]], "torch.fx.Node": [[74, 4, 1, "", "all_input_nodes"], [74, 3, 1, "", "append"], [74, 4, 1, "", "args"], [74, 3, 1, "", "format_node"], [74, 3, 1, "", "is_impure"], [74, 4, 1, "", "kwargs"], [74, 4, 1, "", "next"], [74, 3, 1, "", "normalized_arguments"], [74, 3, 1, "", "prepend"], [74, 4, 1, "", "prev"], [74, 3, 1, "", "replace_all_uses_with"], [74, 3, 1, "", "replace_input_with"], [74, 4, 1, "", "stack_trace"], [74, 3, 1, "", "update_arg"], [74, 3, 1, "", "update_kwarg"]], "torch.fx.Tracer": [[74, 3, 1, "", "call_module"], [74, 3, 1, "", "create_arg"], [74, 3, 1, "", "create_args_for_root"], [74, 3, 1, "", "create_node"], [74, 3, 1, "", "create_proxy"], [74, 3, 1, "", "getattr"], [74, 3, 1, "", "is_leaf_module"], [74, 3, 1, "", "iter"], [74, 3, 1, "", "keys"], [74, 3, 1, "", "path_of_module"], [74, 3, 1, "", "proxy"], [74, 3, 1, "", "to_bool"], [74, 3, 1, "", "trace"]], "torch.fx.Transformer": [[74, 3, 1, "", "call_function"], [74, 3, 1, "", "call_module"], [74, 3, 1, "", "get_attr"], [74, 3, 1, "", "placeholder"], [74, 3, 1, "", "transform"]], "torch.fx.experimental": [[74, 0, 0, "-", "migrate_gradual_types"], [74, 0, 0, "-", "unification"]], "torch.fx.experimental.unification": [[74, 0, 0, "-", "multipledispatch"]], "torch.fx.passes": [[74, 0, 0, "-", "backends"], [74, 0, 0, "-", "dialect"], [74, 0, 0, "-", "infra"], [74, 0, 0, "-", "tests"], [74, 0, 0, "-", "utils"]], "torch.fx.passes.dialect": [[74, 0, 0, "-", "common"]], "torch.hub": [[1893, 5, 1, "", "download_url_to_file"], [1893, 5, 1, "", "get_dir"], [1893, 5, 1, "", "help"], [1893, 5, 1, "", "list"], [1893, 5, 1, "", "load"], [1893, 5, 1, "", "load_state_dict_from_url"], [1893, 5, 1, "", "set_dir"]], "torch.jit": [[1219, 1, 1, "", "Attribute"], [1220, 1, 1, "", "ScriptFunction"], [1221, 1, 1, "", "ScriptModule"], [1222, 5, 1, "", "annotate"], [1223, 5, 1, "", "enable_onednn_fusion"], [1896, 5, 1, "", "export"], [1224, 5, 1, "", "fork"], [1225, 5, 1, "", "freeze"], [1226, 5, 1, "", "ignore"], [1898, 5, 1, "", "is_scripting"], [1898, 5, 1, "", "is_tracing"], [1227, 5, 1, "", "isinstance"], [1228, 5, 1, "", "load"], [1896, 0, 0, "-", "mobile"], [1229, 5, 1, "", "onednn_fusion_enabled"], [1230, 5, 1, "", "optimize_for_inference"], [1231, 5, 1, "", "save"], [1232, 5, 1, "", "script"], [1233, 5, 1, "", "script_if_tracing"], [1234, 5, 1, "", "set_fusion_strategy"], [1235, 1, 1, "", "strict_fusion"], [1897, 0, 0, "-", "supported_ops"], [1236, 5, 1, "", "trace"], [1237, 5, 1, "", "trace_module"], [1901, 0, 0, "-", "unsupported_tensor_ops"], [1238, 5, 1, "", "unused"], [1239, 5, 1, "", "wait"]], "torch.jit.Attribute": [[1219, 3, 1, "", "count"], [1219, 3, 1, "", "index"], [1219, 2, 1, "", "type"], [1219, 2, 1, "", "value"]], "torch.jit.ScriptFunction": [[1220, 3, 1, "", "get_debug_state"], [1220, 3, 1, "", "save"], [1220, 3, 1, "", "save_to_buffer"]], "torch.jit.ScriptModule": [[1221, 3, 1, "", "add_module"], [1221, 3, 1, "", "apply"], [1221, 3, 1, "", "bfloat16"], [1221, 3, 1, "", "buffers"], [1221, 3, 1, "", "children"], [1221, 4, 1, "", "code"], [1221, 4, 1, "", "code_with_constants"], [1221, 3, 1, "", "compile"], [1221, 3, 1, "", "cpu"], [1221, 3, 1, "", "cuda"], [1221, 3, 1, "", "double"], [1221, 3, 1, "", "eval"], [1221, 3, 1, "", "extra_repr"], [1221, 3, 1, "", "float"], [1221, 3, 1, "", "get_buffer"], [1221, 3, 1, "", "get_extra_state"], [1221, 3, 1, "", "get_parameter"], [1221, 3, 1, "", "get_submodule"], [1221, 4, 1, "", "graph"], [1221, 3, 1, "", "half"], [1221, 4, 1, "", "inlined_graph"], [1221, 3, 1, "", "ipu"], [1221, 3, 1, "", "load_state_dict"], [1221, 3, 1, "", "modules"], [1221, 3, 1, "", "named_buffers"], [1221, 3, 1, "", "named_children"], [1221, 3, 1, "", "named_modules"], [1221, 3, 1, "", "named_parameters"], [1221, 3, 1, "", "parameters"], [1221, 3, 1, "", "register_backward_hook"], [1221, 3, 1, "", "register_buffer"], [1221, 3, 1, "", "register_forward_hook"], [1221, 3, 1, "", "register_forward_pre_hook"], [1221, 3, 1, "", "register_full_backward_hook"], [1221, 3, 1, "", "register_full_backward_pre_hook"], [1221, 3, 1, "", "register_load_state_dict_post_hook"], [1221, 3, 1, "", "register_module"], [1221, 3, 1, "", "register_parameter"], [1221, 3, 1, "", "register_state_dict_pre_hook"], [1221, 3, 1, "", "requires_grad_"], [1221, 3, 1, "", "save"], [1221, 3, 1, "", "set_extra_state"], [1221, 3, 1, "", "share_memory"], [1221, 3, 1, "", "state_dict"], [1221, 3, 1, "", "to"], [1221, 3, 1, "", "to_empty"], [1221, 3, 1, "", "train"], [1221, 3, 1, "", "type"], [1221, 3, 1, "", "xpu"], [1221, 3, 1, "", "zero_grad"]], "torch.library": [[1903, 1, 1, "", "Library"]], "torch.library.Library": [[1903, 3, 1, "", "define"], [1903, 3, 1, "", "impl"]], "torch.linalg": [[1250, 5, 1, "", "cholesky"], [1251, 5, 1, "", "cholesky_ex"], [1252, 5, 1, "", "cond"], [1253, 5, 1, "", "cross"], [1254, 5, 1, "", "det"], [1255, 5, 1, "", "diagonal"], [1256, 5, 1, "", "eig"], [1257, 5, 1, "", "eigh"], [1258, 5, 1, "", "eigvals"], [1259, 5, 1, "", "eigvalsh"], [1260, 5, 1, "", "householder_product"], [1261, 5, 1, "", "inv"], [1262, 5, 1, "", "inv_ex"], [1263, 5, 1, "", "ldl_factor"], [1264, 5, 1, "", "ldl_factor_ex"], [1265, 5, 1, "", "ldl_solve"], [1266, 5, 1, "", "lstsq"], [1267, 5, 1, "", "lu"], [1268, 5, 1, "", "lu_factor"], [1269, 5, 1, "", "lu_factor_ex"], [1270, 5, 1, "", "lu_solve"], [1271, 5, 1, "", "matmul"], [1272, 5, 1, "", "matrix_exp"], [1273, 5, 1, "", "matrix_norm"], [1274, 5, 1, "", "matrix_power"], [1275, 5, 1, "", "matrix_rank"], [1276, 5, 1, "", "multi_dot"], [1277, 5, 1, "", "norm"], [1278, 5, 1, "", "pinv"], [1279, 5, 1, "", "qr"], [1280, 5, 1, "", "slogdet"], [1281, 5, 1, "", "solve"], [1282, 5, 1, "", "solve_ex"], [1283, 5, 1, "", "solve_triangular"], [1284, 5, 1, "", "svd"], [1285, 5, 1, "", "svdvals"], [1286, 5, 1, "", "tensorinv"], [1287, 5, 1, "", "tensorsolve"], [1288, 5, 1, "", "vander"], [1289, 5, 1, "", "vecdot"], [1290, 5, 1, "", "vector_norm"]], "torch.masked": [[1906, 0, 0, "-", "maskedtensor"]], "torch.monitor": [[1909, 1, 1, "", "Aggregation"], [1909, 1, 1, "", "Event"], [1909, 1, 1, "", "EventHandlerHandle"], [1909, 1, 1, "", "Stat"], [1909, 1, 1, "", "TensorboardEventHandler"], [1909, 1, 1, "", "data_value_t"], [1909, 5, 1, "", "log_event"], [1909, 5, 1, "", "register_event_handler"], [1909, 5, 1, "", "unregister_event_handler"]], "torch.monitor.Aggregation": [[1909, 4, 1, "", "name"]], "torch.monitor.Event": [[1909, 3, 1, "", "__init__"], [1909, 4, 1, "", "data"], [1909, 4, 1, "", "name"], [1909, 4, 1, "", "timestamp"]], "torch.monitor.Stat": [[1909, 3, 1, "", "__init__"], [1909, 3, 1, "", "add"], [1909, 4, 1, "", "count"], [1909, 3, 1, "", "get"], [1909, 4, 1, "", "name"]], "torch.monitor.TensorboardEventHandler": [[1909, 3, 1, "", "__init__"]], "torch.mps": [[1329, 5, 1, "", "current_allocated_memory"], [1330, 5, 1, "", "driver_allocated_memory"], [1331, 5, 1, "", "empty_cache"], [1332, 5, 1, "", "get_rng_state"], [1333, 5, 1, "", "manual_seed"], [1337, 5, 1, "", "seed"], [1338, 5, 1, "", "set_per_process_memory_fraction"], [1339, 5, 1, "", "set_rng_state"], [1340, 5, 1, "", "synchronize"]], "torch.mps.profiler": [[1334, 5, 1, "", "profile"], [1335, 5, 1, "", "start"], [1336, 5, 1, "", "stop"]], "torch.multiprocessing": [[1911, 1, 1, "", "SpawnContext"], [1911, 5, 1, "", "get_all_sharing_strategies"], [1911, 5, 1, "", "get_sharing_strategy"], [1911, 5, 1, "", "set_sharing_strategy"], [1911, 5, 1, "", "spawn"]], "torch.multiprocessing.SpawnContext": [[1911, 3, 1, "", "join"]], "torch.nested": [[1914, 5, 1, "", "as_nested_tensor"], [1914, 5, 1, "", "nested_tensor"], [1914, 5, 1, "", "to_padded_tensor"]], "torch.nn": [[1358, 1, 1, "", "AdaptiveAvgPool1d"], [1359, 1, 1, "", "AdaptiveAvgPool2d"], [1360, 1, 1, "", "AdaptiveAvgPool3d"], [1361, 1, 1, "", "AdaptiveLogSoftmaxWithLoss"], [1362, 1, 1, "", "AdaptiveMaxPool1d"], [1363, 1, 1, "", "AdaptiveMaxPool2d"], [1364, 1, 1, "", "AdaptiveMaxPool3d"], [1365, 1, 1, "", "AlphaDropout"], [1366, 1, 1, "", "AvgPool1d"], [1367, 1, 1, "", "AvgPool2d"], [1368, 1, 1, "", "AvgPool3d"], [1369, 1, 1, "", "BCELoss"], [1370, 1, 1, "", "BCEWithLogitsLoss"], [1371, 1, 1, "", "BatchNorm1d"], [1372, 1, 1, "", "BatchNorm2d"], [1373, 1, 1, "", "BatchNorm3d"], [1374, 1, 1, "", "Bilinear"], [1375, 1, 1, "", "CELU"], [1376, 1, 1, "", "CTCLoss"], [1377, 1, 1, "", "ChannelShuffle"], [1378, 1, 1, "", "ConstantPad1d"], [1379, 1, 1, "", "ConstantPad2d"], [1380, 1, 1, "", "ConstantPad3d"], [1381, 1, 1, "", "Conv1d"], [1382, 1, 1, "", "Conv2d"], [1383, 1, 1, "", "Conv3d"], [1384, 1, 1, "", "ConvTranspose1d"], [1385, 1, 1, "", "ConvTranspose2d"], [1386, 1, 1, "", "ConvTranspose3d"], [1387, 1, 1, "", "CosineEmbeddingLoss"], [1388, 1, 1, "", "CosineSimilarity"], [1389, 1, 1, "", "CrossEntropyLoss"], [1390, 1, 1, "", "DataParallel"], [1391, 1, 1, "", "Dropout"], [1392, 1, 1, "", "Dropout1d"], [1393, 1, 1, "", "Dropout2d"], [1394, 1, 1, "", "Dropout3d"], [1395, 1, 1, "", "ELU"], [1396, 1, 1, "", "Embedding"], [1397, 1, 1, "", "EmbeddingBag"], [1398, 1, 1, "", "FeatureAlphaDropout"], [1399, 1, 1, "", "Flatten"], [1400, 1, 1, "", "Fold"], [1401, 1, 1, "", "FractionalMaxPool2d"], [1402, 1, 1, "", "FractionalMaxPool3d"], [1403, 1, 1, "", "GELU"], [1404, 1, 1, "", "GLU"], [1405, 1, 1, "", "GRU"], [1406, 1, 1, "", "GRUCell"], [1407, 1, 1, "", "GaussianNLLLoss"], [1408, 1, 1, "", "GroupNorm"], [1409, 1, 1, "", "Hardshrink"], [1410, 1, 1, "", "Hardsigmoid"], [1411, 1, 1, "", "Hardswish"], [1412, 1, 1, "", "Hardtanh"], [1413, 1, 1, "", "HingeEmbeddingLoss"], [1414, 1, 1, "", "HuberLoss"], [1415, 1, 1, "", "Identity"], [1416, 1, 1, "", "InstanceNorm1d"], [1417, 1, 1, "", "InstanceNorm2d"], [1418, 1, 1, "", "InstanceNorm3d"], [1419, 1, 1, "", "KLDivLoss"], [1420, 1, 1, "", "L1Loss"], [1421, 1, 1, "", "LPPool1d"], [1422, 1, 1, "", "LPPool2d"], [1423, 1, 1, "", "LSTM"], [1424, 1, 1, "", "LSTMCell"], [1425, 1, 1, "", "LayerNorm"], [1426, 1, 1, "", "LazyBatchNorm1d"], [1427, 1, 1, "", "LazyBatchNorm2d"], [1428, 1, 1, "", "LazyBatchNorm3d"], [1429, 1, 1, "", "LazyConv1d"], [1430, 1, 1, "", "LazyConv2d"], [1431, 1, 1, "", "LazyConv3d"], [1432, 1, 1, "", "LazyConvTranspose1d"], [1433, 1, 1, "", "LazyConvTranspose2d"], [1434, 1, 1, "", "LazyConvTranspose3d"], [1435, 1, 1, "", "LazyInstanceNorm1d"], [1436, 1, 1, "", "LazyInstanceNorm2d"], [1437, 1, 1, "", "LazyInstanceNorm3d"], [1438, 1, 1, "", "LazyLinear"], [1439, 1, 1, "", "LeakyReLU"], [1440, 1, 1, "", "Linear"], [1441, 1, 1, "", "LocalResponseNorm"], [1442, 1, 1, "", "LogSigmoid"], [1443, 1, 1, "", "LogSoftmax"], [1444, 1, 1, "", "MSELoss"], [1445, 1, 1, "", "MarginRankingLoss"], [1446, 1, 1, "", "MaxPool1d"], [1447, 1, 1, "", "MaxPool2d"], [1448, 1, 1, "", "MaxPool3d"], [1449, 1, 1, "", "MaxUnpool1d"], [1450, 1, 1, "", "MaxUnpool2d"], [1451, 1, 1, "", "MaxUnpool3d"], [1452, 1, 1, "", "Mish"], [1453, 1, 1, "", "Module"], [1454, 1, 1, "", "ModuleDict"], [1455, 1, 1, "", "ModuleList"], [1456, 1, 1, "", "MultiLabelMarginLoss"], [1457, 1, 1, "", "MultiLabelSoftMarginLoss"], [1458, 1, 1, "", "MultiMarginLoss"], [1459, 1, 1, "", "MultiheadAttention"], [1460, 1, 1, "", "NLLLoss"], [1461, 1, 1, "", "PReLU"], [1462, 1, 1, "", "PairwiseDistance"], [1463, 1, 1, "", "ParameterDict"], [1464, 1, 1, "", "ParameterList"], [1465, 1, 1, "", "PixelShuffle"], [1466, 1, 1, "", "PixelUnshuffle"], [1467, 1, 1, "", "PoissonNLLLoss"], [1468, 1, 1, "", "RNN"], [1469, 1, 1, "", "RNNBase"], [1470, 1, 1, "", "RNNCell"], [1471, 1, 1, "", "RReLU"], [1472, 1, 1, "", "ReLU"], [1473, 1, 1, "", "ReLU6"], [1474, 1, 1, "", "ReflectionPad1d"], [1475, 1, 1, "", "ReflectionPad2d"], [1476, 1, 1, "", "ReflectionPad3d"], [1477, 1, 1, "", "ReplicationPad1d"], [1478, 1, 1, "", "ReplicationPad2d"], [1479, 1, 1, "", "ReplicationPad3d"], [1480, 1, 1, "", "SELU"], [1481, 1, 1, "", "Sequential"], [1482, 1, 1, "", "SiLU"], [1483, 1, 1, "", "Sigmoid"], [1484, 1, 1, "", "SmoothL1Loss"], [1485, 1, 1, "", "SoftMarginLoss"], [1486, 1, 1, "", "Softmax"], [1487, 1, 1, "", "Softmax2d"], [1488, 1, 1, "", "Softmin"], [1489, 1, 1, "", "Softplus"], [1490, 1, 1, "", "Softshrink"], [1491, 1, 1, "", "Softsign"], [1492, 1, 1, "", "SyncBatchNorm"], [1493, 1, 1, "", "Tanh"], [1494, 1, 1, "", "Tanhshrink"], [1495, 1, 1, "", "Threshold"], [1496, 1, 1, "", "Transformer"], [1497, 1, 1, "", "TransformerDecoder"], [1498, 1, 1, "", "TransformerDecoderLayer"], [1499, 1, 1, "", "TransformerEncoder"], [1500, 1, 1, "", "TransformerEncoderLayer"], [1501, 1, 1, "", "TripletMarginLoss"], [1502, 1, 1, "", "TripletMarginWithDistanceLoss"], [1503, 1, 1, "", "Unflatten"], [1504, 1, 1, "", "Unfold"], [1505, 1, 1, "", "Upsample"], [1506, 1, 1, "", "UpsamplingBilinear2d"], [1507, 1, 1, "", "UpsamplingNearest2d"], [1508, 1, 1, "", "ZeroPad1d"], [1509, 1, 1, "", "ZeroPad2d"], [1510, 1, 1, "", "ZeroPad3d"], [1915, 0, 0, "-", "backends"], [1947, 0, 0, "-", "intrinsic"], [1915, 0, 0, "-", "modules"], [1915, 0, 0, "-", "parallel"], [1947, 0, 0, "-", "qat"], [1947, 0, 0, "-", "quantizable"], [1947, 0, 0, "-", "quantized"], [1915, 0, 0, "-", "utils"]], "torch.nn.AdaptiveLogSoftmaxWithLoss": [[1361, 3, 1, "", "log_prob"], [1361, 3, 1, "", "predict"]], "torch.nn.Embedding": [[1396, 3, 1, "", "from_pretrained"]], "torch.nn.EmbeddingBag": [[1397, 3, 1, "", "forward"], [1397, 3, 1, "", "from_pretrained"]], "torch.nn.LazyBatchNorm1d": [[1426, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm2d": [[1427, 2, 1, "", "cls_to_become"]], "torch.nn.LazyBatchNorm3d": [[1428, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv1d": [[1429, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv2d": [[1430, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConv3d": [[1431, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose1d": [[1432, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose2d": [[1433, 2, 1, "", "cls_to_become"]], "torch.nn.LazyConvTranspose3d": [[1434, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm1d": [[1435, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm2d": [[1436, 2, 1, "", "cls_to_become"]], "torch.nn.LazyInstanceNorm3d": [[1437, 2, 1, "", "cls_to_become"]], "torch.nn.LazyLinear": [[1438, 2, 1, "", "cls_to_become"]], "torch.nn.Module": [[1453, 3, 1, "", "add_module"], [1453, 3, 1, "", "apply"], [1453, 3, 1, "", "bfloat16"], [1453, 3, 1, "", "buffers"], [1453, 3, 1, "", "children"], [1453, 3, 1, "", "compile"], [1453, 3, 1, "", "cpu"], [1453, 3, 1, "", "cuda"], [1453, 3, 1, "", "double"], [1453, 3, 1, "", "eval"], [1453, 3, 1, "", "extra_repr"], [1453, 3, 1, "", "float"], [1453, 3, 1, "", "forward"], [1453, 3, 1, "", "get_buffer"], [1453, 3, 1, "", "get_extra_state"], [1453, 3, 1, "", "get_parameter"], [1453, 3, 1, "", "get_submodule"], [1453, 3, 1, "", "half"], [1453, 3, 1, "", "ipu"], [1453, 3, 1, "", "load_state_dict"], [1453, 3, 1, "", "modules"], [1453, 3, 1, "", "named_buffers"], [1453, 3, 1, "", "named_children"], [1453, 3, 1, "", "named_modules"], [1453, 3, 1, "", "named_parameters"], [1453, 3, 1, "", "parameters"], [1453, 3, 1, "", "register_backward_hook"], [1453, 3, 1, "", "register_buffer"], [1453, 3, 1, "", "register_forward_hook"], [1453, 3, 1, "", "register_forward_pre_hook"], [1453, 3, 1, "", "register_full_backward_hook"], [1453, 3, 1, "", "register_full_backward_pre_hook"], [1453, 3, 1, "", "register_load_state_dict_post_hook"], [1453, 3, 1, "", "register_module"], [1453, 3, 1, "", "register_parameter"], [1453, 3, 1, "", "register_state_dict_pre_hook"], [1453, 3, 1, "", "requires_grad_"], [1453, 3, 1, "", "set_extra_state"], [1453, 3, 1, "", "share_memory"], [1453, 3, 1, "", "state_dict"], [1453, 3, 1, "", "to"], [1453, 3, 1, "", "to_empty"], [1453, 3, 1, "", "train"], [1453, 3, 1, "", "type"], [1453, 3, 1, "", "xpu"], [1453, 3, 1, "", "zero_grad"]], "torch.nn.ModuleDict": [[1454, 3, 1, "", "clear"], [1454, 3, 1, "", "items"], [1454, 3, 1, "", "keys"], [1454, 3, 1, "", "pop"], [1454, 3, 1, "", "update"], [1454, 3, 1, "", "values"]], "torch.nn.ModuleList": [[1455, 3, 1, "", "append"], [1455, 3, 1, "", "extend"], [1455, 3, 1, "", "insert"]], "torch.nn.MultiheadAttention": [[1459, 3, 1, "", "forward"], [1459, 3, 1, "", "merge_masks"]], "torch.nn.ParameterDict": [[1463, 3, 1, "", "clear"], [1463, 3, 1, "", "copy"], [1463, 3, 1, "", "fromkeys"], [1463, 3, 1, "", "get"], [1463, 3, 1, "", "items"], [1463, 3, 1, "", "keys"], [1463, 3, 1, "", "pop"], [1463, 3, 1, "", "popitem"], [1463, 3, 1, "", "setdefault"], [1463, 3, 1, "", "update"], [1463, 3, 1, "", "values"]], "torch.nn.ParameterList": [[1464, 3, 1, "", "append"], [1464, 3, 1, "", "extend"]], "torch.nn.RNNBase": [[1469, 3, 1, "", "flatten_parameters"]], "torch.nn.Sequential": [[1481, 3, 1, "", "append"]], "torch.nn.SyncBatchNorm": [[1492, 3, 1, "", "convert_sync_batchnorm"]], "torch.nn.Transformer": [[1496, 3, 1, "", "forward"], [1496, 3, 1, "", "generate_square_subsequent_mask"]], "torch.nn.TransformerDecoder": [[1497, 3, 1, "", "forward"]], "torch.nn.TransformerDecoderLayer": [[1498, 3, 1, "", "forward"]], "torch.nn.TransformerEncoder": [[1499, 3, 1, "", "forward"]], "torch.nn.TransformerEncoderLayer": [[1500, 3, 1, "", "forward"]], "torch.nn.functional": [[1511, 5, 1, "", "adaptive_avg_pool1d"], [1512, 5, 1, "", "adaptive_avg_pool2d"], [1513, 5, 1, "", "adaptive_avg_pool3d"], [1514, 5, 1, "", "adaptive_max_pool1d"], [1515, 5, 1, "", "adaptive_max_pool2d"], [1516, 5, 1, "", "adaptive_max_pool3d"], [1517, 5, 1, "", "affine_grid"], [1518, 5, 1, "", "alpha_dropout"], [1519, 5, 1, "", "avg_pool1d"], [1520, 5, 1, "", "avg_pool2d"], [1521, 5, 1, "", "avg_pool3d"], [1522, 5, 1, "", "batch_norm"], [1523, 5, 1, "", "bilinear"], [1524, 5, 1, "", "binary_cross_entropy"], [1525, 5, 1, "", "binary_cross_entropy_with_logits"], [1526, 5, 1, "", "celu"], [1527, 5, 1, "", "conv1d"], [1528, 5, 1, "", "conv2d"], [1529, 5, 1, "", "conv3d"], [1530, 5, 1, "", "conv_transpose1d"], [1531, 5, 1, "", "conv_transpose2d"], [1532, 5, 1, "", "conv_transpose3d"], [1533, 5, 1, "", "cosine_embedding_loss"], [1534, 5, 1, "", "cosine_similarity"], [1535, 5, 1, "", "cross_entropy"], [1536, 5, 1, "", "ctc_loss"], [1537, 5, 1, "", "dropout"], [1538, 5, 1, "", "dropout1d"], [1539, 5, 1, "", "dropout2d"], [1540, 5, 1, "", "dropout3d"], [1541, 5, 1, "", "elu"], [1542, 5, 1, "", "elu_"], [1543, 5, 1, "", "embedding"], [1544, 5, 1, "", "embedding_bag"], [1545, 5, 1, "", "feature_alpha_dropout"], [1546, 5, 1, "", "fold"], [1547, 5, 1, "", "fractional_max_pool2d"], [1548, 5, 1, "", "fractional_max_pool3d"], [1549, 5, 1, "", "gaussian_nll_loss"], [1550, 5, 1, "", "gelu"], [1551, 5, 1, "", "glu"], [1552, 5, 1, "", "grid_sample"], [1553, 5, 1, "", "group_norm"], [1554, 5, 1, "", "gumbel_softmax"], [1555, 5, 1, "", "hardshrink"], [1556, 5, 1, "", "hardsigmoid"], [1557, 5, 1, "", "hardswish"], [1558, 5, 1, "", "hardtanh"], [1559, 5, 1, "", "hardtanh_"], [1560, 5, 1, "", "hinge_embedding_loss"], [1561, 5, 1, "", "huber_loss"], [1562, 5, 1, "", "instance_norm"], [1563, 5, 1, "", "interpolate"], [1564, 5, 1, "", "kl_div"], [1565, 5, 1, "", "l1_loss"], [1566, 5, 1, "", "layer_norm"], [1567, 5, 1, "", "leaky_relu"], [1568, 5, 1, "", "leaky_relu_"], [1569, 5, 1, "", "linear"], [1570, 5, 1, "", "local_response_norm"], [1571, 5, 1, "", "log_softmax"], [1572, 5, 1, "", "logsigmoid"], [1573, 5, 1, "", "lp_pool1d"], [1574, 5, 1, "", "lp_pool2d"], [1575, 5, 1, "", "margin_ranking_loss"], [1576, 5, 1, "", "max_pool1d"], [1577, 5, 1, "", "max_pool2d"], [1578, 5, 1, "", "max_pool3d"], [1579, 5, 1, "", "max_unpool1d"], [1580, 5, 1, "", "max_unpool2d"], [1581, 5, 1, "", "max_unpool3d"], [1582, 5, 1, "", "mish"], [1583, 5, 1, "", "mse_loss"], [1584, 5, 1, "", "multi_margin_loss"], [1585, 5, 1, "", "multilabel_margin_loss"], [1586, 5, 1, "", "multilabel_soft_margin_loss"], [1587, 5, 1, "", "nll_loss"], [1588, 5, 1, "", "normalize"], [1589, 5, 1, "", "one_hot"], [1590, 5, 1, "", "pad"], [1591, 5, 1, "", "pairwise_distance"], [1592, 5, 1, "", "pdist"], [1593, 5, 1, "", "pixel_shuffle"], [1594, 5, 1, "", "pixel_unshuffle"], [1595, 5, 1, "", "poisson_nll_loss"], [1596, 5, 1, "", "prelu"], [1597, 5, 1, "", "relu"], [1598, 5, 1, "", "relu6"], [1599, 5, 1, "", "relu_"], [1600, 5, 1, "", "rrelu"], [1601, 5, 1, "", "rrelu_"], [1602, 5, 1, "", "scaled_dot_product_attention"], [1603, 5, 1, "", "selu"], [1604, 5, 1, "", "sigmoid"], [1605, 5, 1, "", "silu"], [1606, 5, 1, "", "smooth_l1_loss"], [1607, 5, 1, "", "soft_margin_loss"], [1608, 5, 1, "", "softmax"], [1609, 5, 1, "", "softmin"], [1610, 5, 1, "", "softplus"], [1611, 5, 1, "", "softshrink"], [1612, 5, 1, "", "softsign"], [1613, 5, 1, "", "tanh"], [1614, 5, 1, "", "tanhshrink"], [1615, 5, 1, "", "threshold"], [1616, 5, 1, "", "threshold_"], [1618, 5, 1, "", "triplet_margin_loss"], [1619, 5, 1, "", "triplet_margin_with_distance_loss"], [1620, 5, 1, "", "unfold"], [1621, 5, 1, "", "upsample"], [1622, 5, 1, "", "upsample_bilinear"], [1623, 5, 1, "", "upsample_nearest"]], "torch.nn.init": [[1917, 5, 1, "", "calculate_gain"], [1917, 5, 1, "", "constant_"], [1917, 5, 1, "", "dirac_"], [1917, 5, 1, "", "eye_"], [1917, 5, 1, "", "kaiming_normal_"], [1917, 5, 1, "", "kaiming_uniform_"], [1917, 5, 1, "", "normal_"], [1917, 5, 1, "", "ones_"], [1917, 5, 1, "", "orthogonal_"], [1917, 5, 1, "", "sparse_"], [1917, 5, 1, "", "trunc_normal_"], [1917, 5, 1, "", "uniform_"], [1917, 5, 1, "", "xavier_normal_"], [1917, 5, 1, "", "xavier_uniform_"], [1917, 5, 1, "", "zeros_"]], "torch.nn.intrinsic": [[1947, 0, 0, "-", "modules"], [1947, 0, 0, "-", "qat"], [1947, 0, 0, "-", "quantized"]], "torch.nn.intrinsic.qat": [[1947, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized": [[1947, 0, 0, "-", "dynamic"], [1947, 0, 0, "-", "modules"]], "torch.nn.intrinsic.quantized.dynamic": [[1947, 0, 0, "-", "modules"]], "torch.nn.modules.lazy": [[1624, 1, 1, "", "LazyModuleMixin"]], "torch.nn.modules.lazy.LazyModuleMixin": [[1624, 3, 1, "", "has_uninitialized_params"], [1624, 3, 1, "", "initialize_parameters"]], "torch.nn.modules.module": [[1625, 5, 1, "", "register_module_backward_hook"], [1626, 5, 1, "", "register_module_buffer_registration_hook"], [1627, 5, 1, "", "register_module_forward_hook"], [1628, 5, 1, "", "register_module_forward_pre_hook"], [1629, 5, 1, "", "register_module_full_backward_hook"], [1630, 5, 1, "", "register_module_full_backward_pre_hook"], [1631, 5, 1, "", "register_module_module_registration_hook"], [1632, 5, 1, "", "register_module_parameter_registration_hook"]], "torch.nn.parallel": [[1633, 1, 1, "", "DistributedDataParallel"], [1617, 5, 1, "", "data_parallel"]], "torch.nn.parallel.DistributedDataParallel": [[1633, 3, 1, "", "join"], [1633, 3, 1, "", "join_hook"], [1633, 3, 1, "", "no_sync"], [1633, 3, 1, "", "register_comm_hook"]], "torch.nn.parameter": [[1634, 1, 1, "", "Parameter"], [1635, 1, 1, "", "UninitializedBuffer"], [1636, 1, 1, "", "UninitializedParameter"]], "torch.nn.parameter.UninitializedParameter": [[1636, 2, 1, "", "cls_to_become"]], "torch.nn.qat": [[1947, 0, 0, "-", "dynamic"], [1947, 0, 0, "-", "modules"]], "torch.nn.qat.dynamic": [[1947, 0, 0, "-", "modules"]], "torch.nn.quantizable": [[1947, 0, 0, "-", "modules"]], "torch.nn.quantized": [[1947, 0, 0, "-", "dynamic"], [1947, 0, 0, "-", "modules"]], "torch.nn.quantized.dynamic": [[1947, 0, 0, "-", "modules"]], "torch.nn.utils": [[1637, 5, 1, "", "clip_grad_norm_"], [1638, 5, 1, "", "clip_grad_value_"], [1639, 5, 1, "", "parameters_to_vector"], [1664, 5, 1, "", "remove_spectral_norm"], [1665, 5, 1, "", "remove_weight_norm"], [1673, 5, 1, "", "skip_init"], [1674, 5, 1, "", "spectral_norm"], [1915, 0, 0, "-", "stateless"], [1676, 5, 1, "", "vector_to_parameters"], [1677, 5, 1, "", "weight_norm"]], "torch.nn.utils.parametrizations": [[1640, 5, 1, "", "orthogonal"], [1641, 5, 1, "", "spectral_norm"]], "torch.nn.utils.parametrize": [[1642, 1, 1, "", "ParametrizationList"], [1643, 5, 1, "", "cached"], [1644, 5, 1, "", "is_parametrized"], [1645, 5, 1, "", "register_parametrization"], [1646, 5, 1, "", "remove_parametrizations"]], "torch.nn.utils.parametrize.ParametrizationList": [[1642, 3, 1, "", "right_inverse"]], "torch.nn.utils.prune": [[1647, 1, 1, "", "BasePruningMethod"], [1648, 1, 1, "", "CustomFromMask"], [1649, 1, 1, "", "Identity"], [1650, 1, 1, "", "L1Unstructured"], [1651, 1, 1, "", "LnStructured"], [1652, 1, 1, "", "PruningContainer"], [1653, 1, 1, "", "RandomStructured"], [1654, 1, 1, "", "RandomUnstructured"], [1655, 5, 1, "", "custom_from_mask"], [1656, 5, 1, "", "global_unstructured"], [1657, 5, 1, "", "identity"], [1658, 5, 1, "", "is_pruned"], [1659, 5, 1, "", "l1_unstructured"], [1660, 5, 1, "", "ln_structured"], [1661, 5, 1, "", "random_structured"], [1662, 5, 1, "", "random_unstructured"], [1663, 5, 1, "", "remove"]], "torch.nn.utils.prune.BasePruningMethod": [[1647, 3, 1, "", "apply"], [1647, 3, 1, "", "apply_mask"], [1647, 3, 1, "", "compute_mask"], [1647, 3, 1, "", "prune"], [1647, 3, 1, "", "remove"]], "torch.nn.utils.prune.CustomFromMask": [[1648, 3, 1, "", "apply"], [1648, 3, 1, "", "apply_mask"], [1648, 3, 1, "", "prune"], [1648, 3, 1, "", "remove"]], "torch.nn.utils.prune.Identity": [[1649, 3, 1, "", "apply"], [1649, 3, 1, "", "apply_mask"], [1649, 3, 1, "", "prune"], [1649, 3, 1, "", "remove"]], "torch.nn.utils.prune.L1Unstructured": [[1650, 3, 1, "", "apply"], [1650, 3, 1, "", "apply_mask"], [1650, 3, 1, "", "prune"], [1650, 3, 1, "", "remove"]], "torch.nn.utils.prune.LnStructured": [[1651, 3, 1, "", "apply"], [1651, 3, 1, "", "apply_mask"], [1651, 3, 1, "", "compute_mask"], [1651, 3, 1, "", "prune"], [1651, 3, 1, "", "remove"]], "torch.nn.utils.prune.PruningContainer": [[1652, 3, 1, "", "add_pruning_method"], [1652, 3, 1, "", "apply"], [1652, 3, 1, "", "apply_mask"], [1652, 3, 1, "", "compute_mask"], [1652, 3, 1, "", "prune"], [1652, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomStructured": [[1653, 3, 1, "", "apply"], [1653, 3, 1, "", "apply_mask"], [1653, 3, 1, "", "compute_mask"], [1653, 3, 1, "", "prune"], [1653, 3, 1, "", "remove"]], "torch.nn.utils.prune.RandomUnstructured": [[1654, 3, 1, "", "apply"], [1654, 3, 1, "", "apply_mask"], [1654, 3, 1, "", "prune"], [1654, 3, 1, "", "remove"]], "torch.nn.utils.rnn": [[1666, 1, 1, "", "PackedSequence"], [1667, 5, 1, "", "pack_padded_sequence"], [1668, 5, 1, "", "pack_sequence"], [1669, 5, 1, "", "pad_packed_sequence"], [1670, 5, 1, "", "pad_sequence"], [1671, 5, 1, "", "unpack_sequence"], [1672, 5, 1, "", "unpad_sequence"]], "torch.nn.utils.rnn.PackedSequence": [[1666, 2, 1, "", "batch_sizes"], [1666, 3, 1, "", "count"], [1666, 2, 1, "", "data"], [1666, 3, 1, "", "index"], [1666, 4, 1, "", "is_cuda"], [1666, 3, 1, "", "is_pinned"], [1666, 2, 1, "", "sorted_indices"], [1666, 3, 1, "", "to"], [1666, 2, 1, "", "unsorted_indices"]], "torch.nn.utils.stateless": [[1675, 5, 1, "", "functional_call"]], "torch.onnx": [[1686, 1, 1, "", "ExportOptions"], [1687, 1, 1, "", "ExportOutput"], [1688, 1, 1, "", "ExportOutputSerializer"], [1689, 1, 1, "", "JitScalarType"], [1690, 1, 1, "", "OnnxExporterError"], [1937, 5, 1, "", "disable_log"], [1937, 5, 1, "", "dynamo_export"], [1937, 5, 1, "", "enable_fake_mode"], [1937, 5, 1, "", "enable_log"], [1937, 5, 1, "", "export"], [1937, 5, 1, "", "export_to_pretty_string"], [1937, 5, 1, "", "is_in_onnx_export"], [1937, 5, 1, "", "register_custom_op_symbolic"], [1937, 5, 1, "", "select_model_mode_for_export"], [1937, 5, 1, "", "unregister_custom_op_symbolic"]], "torch.onnx.ExportOutput": [[1687, 3, 1, "", "adapt_torch_inputs_to_onnx"], [1687, 3, 1, "", "adapt_torch_outputs_to_onnx"], [1687, 4, 1, "", "diagnostic_context"], [1687, 4, 1, "", "fake_context"], [1687, 4, 1, "", "model_proto"], [1687, 3, 1, "", "save"]], "torch.onnx.ExportOutputSerializer": [[1688, 3, 1, "", "serialize"]], "torch.onnx.JitScalarType": [[1689, 3, 1, "", "dtype"], [1689, 3, 1, "", "from_dtype"], [1689, 3, 1, "", "from_value"], [1689, 3, 1, "", "onnx_compatible"], [1689, 3, 1, "", "onnx_type"], [1689, 3, 1, "", "scalar_name"], [1689, 3, 1, "", "torch_name"]], "torch.onnx._internal": [[1938, 0, 0, "-", "diagnostics"]], "torch.onnx._internal.diagnostics": [[1938, 1, 1, "", "ExportDiagnostic"]], "torch.onnx._internal.diagnostics.ExportDiagnostic": [[1938, 3, 1, "", "record_cpp_call_stack"]], "torch.onnx.verification": [[1691, 1, 1, "", "GraphInfo"], [1692, 1, 1, "", "VerificationOptions"], [1937, 5, 1, "", "find_mismatch"]], "torch.onnx.verification.GraphInfo": [[1691, 3, 1, "", "all_mismatch_leaf_graph_info"], [1691, 3, 1, "", "clear"], [1691, 3, 1, "", "essential_node_count"], [1691, 3, 1, "", "essential_node_kinds"], [1691, 3, 1, "", "export_repro"], [1691, 3, 1, "", "find_mismatch"], [1691, 3, 1, "", "find_partition"], [1691, 3, 1, "", "has_mismatch"], [1691, 3, 1, "", "pretty_print_mismatch"], [1691, 3, 1, "", "pretty_print_tree"], [1691, 3, 1, "", "verify_export"]], "torch.optim": [[1693, 1, 1, "", "ASGD"], [1694, 1, 1, "", "Adadelta"], [1695, 1, 1, "", "Adagrad"], [1696, 1, 1, "", "Adam"], [1697, 1, 1, "", "AdamW"], [1698, 1, 1, "", "Adamax"], [1699, 1, 1, "", "LBFGS"], [1700, 1, 1, "", "NAdam"], [1940, 1, 1, "", "Optimizer"], [1706, 1, 1, "", "RAdam"], [1707, 1, 1, "", "RMSprop"], [1708, 1, 1, "", "Rprop"], [1709, 1, 1, "", "SGD"], [1710, 1, 1, "", "SparseAdam"]], "torch.optim.ASGD": [[1693, 3, 1, "", "add_param_group"], [1693, 3, 1, "", "load_state_dict"], [1693, 3, 1, "", "register_step_post_hook"], [1693, 3, 1, "", "register_step_pre_hook"], [1693, 3, 1, "", "state_dict"], [1693, 3, 1, "", "step"], [1693, 3, 1, "", "zero_grad"]], "torch.optim.Adadelta": [[1694, 3, 1, "", "add_param_group"], [1694, 3, 1, "", "load_state_dict"], [1694, 3, 1, "", "register_step_post_hook"], [1694, 3, 1, "", "register_step_pre_hook"], [1694, 3, 1, "", "state_dict"], [1694, 3, 1, "", "step"], [1694, 3, 1, "", "zero_grad"]], "torch.optim.Adagrad": [[1695, 3, 1, "", "add_param_group"], [1695, 3, 1, "", "load_state_dict"], [1695, 3, 1, "", "register_step_post_hook"], [1695, 3, 1, "", "register_step_pre_hook"], [1695, 3, 1, "", "state_dict"], [1695, 3, 1, "", "step"], [1695, 3, 1, "", "zero_grad"]], "torch.optim.Adam": [[1696, 3, 1, "", "add_param_group"], [1696, 3, 1, "", "load_state_dict"], [1696, 3, 1, "", "register_step_post_hook"], [1696, 3, 1, "", "register_step_pre_hook"], [1696, 3, 1, "", "state_dict"], [1696, 3, 1, "", "step"], [1696, 3, 1, "", "zero_grad"]], "torch.optim.AdamW": [[1697, 3, 1, "", "add_param_group"], [1697, 3, 1, "", "load_state_dict"], [1697, 3, 1, "", "register_step_post_hook"], [1697, 3, 1, "", "register_step_pre_hook"], [1697, 3, 1, "", "state_dict"], [1697, 3, 1, "", "step"], [1697, 3, 1, "", "zero_grad"]], "torch.optim.Adamax": [[1698, 3, 1, "", "add_param_group"], [1698, 3, 1, "", "load_state_dict"], [1698, 3, 1, "", "register_step_post_hook"], [1698, 3, 1, "", "register_step_pre_hook"], [1698, 3, 1, "", "state_dict"], [1698, 3, 1, "", "step"], [1698, 3, 1, "", "zero_grad"]], "torch.optim.LBFGS": [[1699, 3, 1, "", "add_param_group"], [1699, 3, 1, "", "load_state_dict"], [1699, 3, 1, "", "register_step_post_hook"], [1699, 3, 1, "", "register_step_pre_hook"], [1699, 3, 1, "", "state_dict"], [1699, 3, 1, "", "step"], [1699, 3, 1, "", "zero_grad"]], "torch.optim.NAdam": [[1700, 3, 1, "", "add_param_group"], [1700, 3, 1, "", "load_state_dict"], [1700, 3, 1, "", "register_step_post_hook"], [1700, 3, 1, "", "register_step_pre_hook"], [1700, 3, 1, "", "state_dict"], [1700, 3, 1, "", "step"], [1700, 3, 1, "", "zero_grad"]], "torch.optim.Optimizer": [[1701, 3, 1, "", "add_param_group"], [1702, 3, 1, "", "load_state_dict"], [1703, 3, 1, "", "state_dict"], [1704, 3, 1, "", "step"], [1705, 3, 1, "", "zero_grad"]], "torch.optim.RAdam": [[1706, 3, 1, "", "add_param_group"], [1706, 3, 1, "", "load_state_dict"], [1706, 3, 1, "", "register_step_post_hook"], [1706, 3, 1, "", "register_step_pre_hook"], [1706, 3, 1, "", "state_dict"], [1706, 3, 1, "", "step"], [1706, 3, 1, "", "zero_grad"]], "torch.optim.RMSprop": [[1707, 3, 1, "", "add_param_group"], [1707, 3, 1, "", "load_state_dict"], [1707, 3, 1, "", "register_step_post_hook"], [1707, 3, 1, "", "register_step_pre_hook"], [1707, 3, 1, "", "state_dict"], [1707, 3, 1, "", "step"], [1707, 3, 1, "", "zero_grad"]], "torch.optim.Rprop": [[1708, 3, 1, "", "add_param_group"], [1708, 3, 1, "", "load_state_dict"], [1708, 3, 1, "", "register_step_post_hook"], [1708, 3, 1, "", "register_step_pre_hook"], [1708, 3, 1, "", "state_dict"], [1708, 3, 1, "", "step"], [1708, 3, 1, "", "zero_grad"]], "torch.optim.SGD": [[1709, 3, 1, "", "add_param_group"], [1709, 3, 1, "", "load_state_dict"], [1709, 3, 1, "", "register_step_post_hook"], [1709, 3, 1, "", "register_step_pre_hook"], [1709, 3, 1, "", "state_dict"], [1709, 3, 1, "", "step"], [1709, 3, 1, "", "zero_grad"]], "torch.optim.SparseAdam": [[1710, 3, 1, "", "add_param_group"], [1710, 3, 1, "", "load_state_dict"], [1710, 3, 1, "", "register_step_post_hook"], [1710, 3, 1, "", "register_step_pre_hook"], [1710, 3, 1, "", "state_dict"], [1710, 3, 1, "", "step"], [1710, 3, 1, "", "zero_grad"]], "torch.optim.lr_scheduler": [[1711, 1, 1, "", "ChainedScheduler"], [1712, 1, 1, "", "ConstantLR"], [1713, 1, 1, "", "CosineAnnealingLR"], [1714, 1, 1, "", "CosineAnnealingWarmRestarts"], [1715, 1, 1, "", "CyclicLR"], [1716, 1, 1, "", "ExponentialLR"], [1717, 1, 1, "", "LambdaLR"], [1718, 1, 1, "", "LinearLR"], [1719, 1, 1, "", "MultiStepLR"], [1720, 1, 1, "", "MultiplicativeLR"], [1721, 1, 1, "", "OneCycleLR"], [1722, 1, 1, "", "PolynomialLR"], [1723, 1, 1, "", "ReduceLROnPlateau"], [1724, 1, 1, "", "SequentialLR"], [1725, 1, 1, "", "StepLR"]], "torch.optim.lr_scheduler.ChainedScheduler": [[1711, 3, 1, "", "get_last_lr"], [1711, 3, 1, "", "load_state_dict"], [1711, 3, 1, "", "print_lr"], [1711, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.ConstantLR": [[1712, 3, 1, "", "get_last_lr"], [1712, 3, 1, "", "load_state_dict"], [1712, 3, 1, "", "print_lr"], [1712, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingLR": [[1713, 3, 1, "", "get_last_lr"], [1713, 3, 1, "", "load_state_dict"], [1713, 3, 1, "", "print_lr"], [1713, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": [[1714, 3, 1, "", "get_last_lr"], [1714, 3, 1, "", "load_state_dict"], [1714, 3, 1, "", "print_lr"], [1714, 3, 1, "", "state_dict"], [1714, 3, 1, "", "step"]], "torch.optim.lr_scheduler.CyclicLR": [[1715, 3, 1, "", "get_last_lr"], [1715, 3, 1, "", "get_lr"], [1715, 3, 1, "", "print_lr"]], "torch.optim.lr_scheduler.ExponentialLR": [[1716, 3, 1, "", "get_last_lr"], [1716, 3, 1, "", "load_state_dict"], [1716, 3, 1, "", "print_lr"], [1716, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LambdaLR": [[1717, 3, 1, "", "get_last_lr"], [1717, 3, 1, "", "load_state_dict"], [1717, 3, 1, "", "print_lr"], [1717, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.LinearLR": [[1718, 3, 1, "", "get_last_lr"], [1718, 3, 1, "", "load_state_dict"], [1718, 3, 1, "", "print_lr"], [1718, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiStepLR": [[1719, 3, 1, "", "get_last_lr"], [1719, 3, 1, "", "load_state_dict"], [1719, 3, 1, "", "print_lr"], [1719, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.MultiplicativeLR": [[1720, 3, 1, "", "get_last_lr"], [1720, 3, 1, "", "load_state_dict"], [1720, 3, 1, "", "print_lr"], [1720, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.OneCycleLR": [[1721, 3, 1, "", "get_last_lr"], [1721, 3, 1, "", "load_state_dict"], [1721, 3, 1, "", "print_lr"], [1721, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.PolynomialLR": [[1722, 3, 1, "", "get_last_lr"], [1722, 3, 1, "", "load_state_dict"], [1722, 3, 1, "", "print_lr"], [1722, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.SequentialLR": [[1724, 3, 1, "", "get_last_lr"], [1724, 3, 1, "", "load_state_dict"], [1724, 3, 1, "", "print_lr"], [1724, 3, 1, "", "state_dict"]], "torch.optim.lr_scheduler.StepLR": [[1725, 3, 1, "", "get_last_lr"], [1725, 3, 1, "", "load_state_dict"], [1725, 3, 1, "", "print_lr"], [1725, 3, 1, "", "state_dict"]], "torch.overrides": [[1964, 5, 1, "", "get_ignored_functions"], [1964, 5, 1, "", "get_overridable_functions"], [1964, 5, 1, "", "get_testing_overrides"], [1964, 5, 1, "", "handle_torch_function"], [1964, 5, 1, "", "has_torch_function"], [1964, 5, 1, "", "is_tensor_like"], [1964, 5, 1, "", "is_tensor_method_or_property"], [1964, 5, 1, "", "resolve_name"], [1964, 5, 1, "", "wrap_torch_function"]], "torch.package": [[1941, 1, 1, "", "Directory"], [1941, 1, 1, "", "EmptyMatchError"], [1941, 1, 1, "", "PackageExporter"], [1941, 1, 1, "", "PackageImporter"], [1941, 1, 1, "", "PackagingError"], [1941, 0, 0, "-", "analyze"]], "torch.package.Directory": [[1941, 3, 1, "", "has_file"]], "torch.package.PackageExporter": [[1941, 3, 1, "", "__init__"], [1941, 3, 1, "", "add_dependency"], [1941, 3, 1, "", "all_paths"], [1941, 3, 1, "", "close"], [1941, 3, 1, "", "denied_modules"], [1941, 3, 1, "", "deny"], [1941, 3, 1, "", "dependency_graph_string"], [1941, 3, 1, "", "extern"], [1941, 3, 1, "", "externed_modules"], [1941, 3, 1, "", "get_rdeps"], [1941, 3, 1, "", "get_unique_id"], [1941, 3, 1, "", "intern"], [1941, 3, 1, "", "interned_modules"], [1941, 3, 1, "", "mock"], [1941, 3, 1, "", "mocked_modules"], [1941, 3, 1, "", "register_extern_hook"], [1941, 3, 1, "", "register_intern_hook"], [1941, 3, 1, "", "register_mock_hook"], [1941, 3, 1, "", "save_binary"], [1941, 3, 1, "", "save_module"], [1941, 3, 1, "", "save_pickle"], [1941, 3, 1, "", "save_source_file"], [1941, 3, 1, "", "save_source_string"], [1941, 3, 1, "", "save_text"]], "torch.package.PackageImporter": [[1941, 3, 1, "", "__init__"], [1941, 3, 1, "", "file_structure"], [1941, 3, 1, "", "id"], [1941, 3, 1, "", "import_module"], [1941, 3, 1, "", "load_binary"], [1941, 3, 1, "", "load_pickle"], [1941, 3, 1, "", "load_text"], [1941, 3, 1, "", "python_version"]], "torch.profiler": [[1943, 1, 1, "", "ProfilerAction"], [1943, 1, 1, "", "ProfilerActivity"], [1943, 1, 1, "", "_KinetoProfile"], [1943, 1, 1, "", "profile"], [1943, 5, 1, "", "schedule"], [1943, 5, 1, "", "tensorboard_trace_handler"]], "torch.profiler.ProfilerActivity": [[1943, 4, 1, "", "name"]], "torch.profiler._KinetoProfile": [[1943, 3, 1, "", "add_metadata"], [1943, 3, 1, "", "add_metadata_json"], [1943, 3, 1, "", "events"], [1943, 3, 1, "", "export_chrome_trace"], [1943, 3, 1, "", "export_memory_timeline"], [1943, 3, 1, "", "export_stacks"], [1943, 3, 1, "", "key_averages"]], "torch.profiler.itt": [[1943, 5, 1, "", "is_available"], [1943, 5, 1, "", "mark"], [1943, 5, 1, "", "range_pop"], [1943, 5, 1, "", "range_push"]], "torch.profiler.profile": [[1943, 3, 1, "", "step"]], "torch.quantization": [[1947, 0, 0, "-", "fx"]], "torch.quasirandom": [[1746, 1, 1, "", "SobolEngine"]], "torch.quasirandom.SobolEngine": [[1746, 3, 1, "", "draw"], [1746, 3, 1, "", "draw_base2"], [1746, 3, 1, "", "fast_forward"], [1746, 3, 1, "", "reset"]], "torch.random": [[1948, 5, 1, "", "fork_rng"], [1948, 5, 1, "", "get_rng_state"], [1948, 5, 1, "", "initial_seed"], [1948, 5, 1, "", "manual_seed"], [1948, 5, 1, "", "seed"], [1948, 5, 1, "", "set_rng_state"]], "torch.serialization": [[1935, 5, 1, "", "get_default_load_endianness"], [1935, 5, 1, "", "register_package"], [1935, 5, 1, "", "set_default_load_endianness"]], "torch.signal": [[1952, 0, 0, "-", "windows"]], "torch.signal.windows": [[1794, 5, 1, "", "bartlett"], [1795, 5, 1, "", "blackman"], [1796, 5, 1, "", "cosine"], [1797, 5, 1, "", "exponential"], [1798, 5, 1, "", "gaussian"], [1799, 5, 1, "", "general_cosine"], [1800, 5, 1, "", "general_hamming"], [1801, 5, 1, "", "hamming"], [1802, 5, 1, "", "hann"], [1803, 5, 1, "", "kaiser"], [1804, 5, 1, "", "nuttall"]], "torch.sparse": [[1814, 5, 1, "", "addmm"], [1815, 1, 1, "", "check_sparse_tensor_invariants"], [1816, 5, 1, "", "log_softmax"], [1817, 5, 1, "", "mm"], [1818, 5, 1, "", "sampled_addmm"], [1819, 5, 1, "", "softmax"], [1820, 5, 1, "", "spdiags"], [1821, 5, 1, "", "sum"]], "torch.sparse.check_sparse_tensor_invariants": [[1815, 3, 1, "", "disable"], [1815, 3, 1, "", "enable"], [1815, 3, 1, "", "is_enabled"]], "torch.special": [[1954, 5, 1, "", "airy_ai"], [1954, 5, 1, "", "bessel_j0"], [1954, 5, 1, "", "bessel_j1"], [1954, 5, 1, "", "digamma"], [1954, 5, 1, "", "entr"], [1954, 5, 1, "", "erf"], [1954, 5, 1, "", "erfc"], [1954, 5, 1, "", "erfcx"], [1954, 5, 1, "", "erfinv"], [1954, 5, 1, "", "exp2"], [1954, 5, 1, "", "expit"], [1954, 5, 1, "", "expm1"], [1954, 5, 1, "", "gammainc"], [1954, 5, 1, "", "gammaincc"], [1954, 5, 1, "", "gammaln"], [1954, 5, 1, "", "i0"], [1954, 5, 1, "", "i0e"], [1954, 5, 1, "", "i1"], [1954, 5, 1, "", "i1e"], [1954, 5, 1, "", "log1p"], [1954, 5, 1, "", "log_ndtr"], [1954, 5, 1, "", "log_softmax"], [1954, 5, 1, "", "logit"], [1954, 5, 1, "", "logsumexp"], [1954, 5, 1, "", "multigammaln"], [1954, 5, 1, "", "ndtr"], [1954, 5, 1, "", "ndtri"], [1954, 5, 1, "", "polygamma"], [1954, 5, 1, "", "psi"], [1954, 5, 1, "", "round"], [1954, 5, 1, "", "scaled_modified_bessel_k0"], [1954, 5, 1, "", "scaled_modified_bessel_k1"], [1954, 5, 1, "", "sinc"], [1954, 5, 1, "", "softmax"], [1954, 5, 1, "", "spherical_bessel_j0"], [1954, 5, 1, "", "xlog1py"], [1954, 5, 1, "", "xlogy"], [1954, 5, 1, "", "zeta"]], "torch.testing": [[1960, 5, 1, "", "assert_allclose"], [1960, 5, 1, "", "assert_close"], [1960, 5, 1, "", "make_tensor"]], "torch.torch": [[1961, 2, 1, "", "default_generator"], [1965, 1, 1, "", "finfo"], [1965, 1, 1, "", "iinfo"]], "torch.utils": [[1961, 0, 0, "-", "backcompat"], [3, 0, 0, "-", "benchmark"], [4, 0, 0, "-", "bottleneck"], [40, 0, 0, "-", "data"], [1876, 5, 1, "", "generate_methods_for_privateuse1_backend"], [1877, 5, 1, "", "get_cpp_backtrace"], [1961, 0, 0, "-", "hipify"], [1902, 0, 0, "-", "jit"], [1961, 0, 0, "-", "model_dump"], [1908, 0, 0, "-", "model_zoo"], [1878, 5, 1, "", "rename_privateuse1_backend"], [1879, 5, 1, "", "set_module"], [1958, 0, 0, "-", "tensorboard"], [1961, 0, 0, "-", "viz"]], "torch.utils.benchmark": [[3, 1, 1, "", "CallgrindStats"], [3, 1, 1, "", "FunctionCounts"], [3, 1, 1, "", "Measurement"], [3, 1, 1, "", "Timer"], [3, 0, 0, "-", "examples"], [3, 0, 0, "-", "op_fuzzers"], [3, 0, 0, "-", "utils"]], "torch.utils.benchmark.CallgrindStats": [[3, 3, 1, "", "as_standardized"], [3, 3, 1, "", "counts"], [3, 3, 1, "", "delta"], [3, 3, 1, "", "stats"]], "torch.utils.benchmark.FunctionCounts": [[3, 3, 1, "", "denoise"], [3, 3, 1, "", "filter"], [3, 3, 1, "", "transform"]], "torch.utils.benchmark.Measurement": [[3, 3, 1, "", "merge"], [3, 4, 1, "", "significant_figures"]], "torch.utils.benchmark.Timer": [[3, 3, 1, "", "blocked_autorange"], [3, 3, 1, "", "collect_callgrind"], [3, 3, 1, "", "timeit"]], "torch.utils.benchmark.utils": [[3, 0, 0, "-", "valgrind_wrapper"]], "torch.utils.checkpoint": [[5, 5, 1, "", "checkpoint"], [5, 5, 1, "", "checkpoint_sequential"]], "torch.utils.cpp_extension": [[33, 5, 1, "", "BuildExtension"], [33, 5, 1, "", "CUDAExtension"], [33, 5, 1, "", "CppExtension"], [33, 5, 1, "", "get_compiler_abi_compatibility_and_version"], [33, 5, 1, "", "include_paths"], [33, 5, 1, "", "is_ninja_available"], [33, 5, 1, "", "load"], [33, 5, 1, "", "load_inline"], [33, 5, 1, "", "verify_ninja_availability"]], "torch.utils.data": [[40, 1, 1, "", "BatchSampler"], [40, 1, 1, "", "ChainDataset"], [40, 1, 1, "", "ConcatDataset"], [40, 1, 1, "", "DataLoader"], [40, 1, 1, "", "Dataset"], [40, 1, 1, "", "IterableDataset"], [40, 1, 1, "", "RandomSampler"], [40, 1, 1, "", "Sampler"], [40, 1, 1, "", "SequentialSampler"], [40, 1, 1, "", "StackDataset"], [40, 1, 1, "", "Subset"], [40, 1, 1, "", "SubsetRandomSampler"], [40, 1, 1, "", "TensorDataset"], [40, 1, 1, "", "WeightedRandomSampler"], [40, 0, 0, "-", "datapipes"], [40, 5, 1, "", "default_collate"], [40, 5, 1, "", "default_convert"], [40, 5, 1, "", "get_worker_info"], [40, 5, 1, "", "random_split"]], "torch.utils.data._utils.collate": [[40, 5, 1, "", "collate"]], "torch.utils.data.datapipes": [[40, 0, 0, "-", "dataframe"], [40, 0, 0, "-", "iter"], [40, 0, 0, "-", "map"], [40, 0, 0, "-", "utils"]], "torch.utils.data.distributed": [[40, 1, 1, "", "DistributedSampler"]], "torch.utils.dlpack": [[50, 5, 1, "", "from_dlpack"], [50, 5, 1, "", "to_dlpack"]], "torch.utils.mobile_optimizer": [[1907, 5, 1, "", "optimize_for_mobile"]], "torch.utils.model_zoo": [[1908, 5, 1, "", "load_url"]], "torch.utils.tensorboard.writer": [[1958, 1, 1, "", "SummaryWriter"]], "torch.utils.tensorboard.writer.SummaryWriter": [[1958, 3, 1, "", "__init__"], [1958, 3, 1, "", "add_audio"], [1958, 3, 1, "", "add_custom_scalars"], [1958, 3, 1, "", "add_embedding"], [1958, 3, 1, "", "add_figure"], [1958, 3, 1, "", "add_graph"], [1958, 3, 1, "", "add_histogram"], [1958, 3, 1, "", "add_hparams"], [1958, 3, 1, "", "add_image"], [1958, 3, 1, "", "add_images"], [1958, 3, 1, "", "add_mesh"], [1958, 3, 1, "", "add_pr_curve"], [1958, 3, 1, "", "add_scalar"], [1958, 3, 1, "", "add_scalars"], [1958, 3, 1, "", "add_text"], [1958, 3, 1, "", "add_video"], [1958, 3, 1, "", "close"], [1958, 3, 1, "", "flush"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function", "6": "py:exception", "7": "std:envvar"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"], "7": ["std", "envvar", "environment variable"]}, "titleterms": {"automat": [0, 1, 40, 1896, 1918, 1925], "mix": [0, 1896, 1918], "precis": [0, 1918, 1922, 1933], "packag": [0, 1, 34, 43, 1911, 1936, 1941], "torch": [0, 1, 2, 3, 4, 5, 10, 21, 25, 27, 30, 32, 33, 35, 36, 40, 42, 43, 45, 46, 48, 49, 50, 61, 64, 65, 67, 68, 70, 71, 72, 73, 74, 82, 83, 84, 85, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 989, 990, 991, 992, 993, 994, 999, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1701, 1702, 1703, 1704, 1705, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1922, 1924, 1925, 1928, 1933, 1935, 1937, 1938, 1940, 1941, 1943, 1947, 1948, 1952, 1953, 1954, 1955, 1956, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966], "amp": [0, 1922], "autocast": [0, 1918], "gradient": [0, 1, 72, 1174, 1918, 1919, 1925, 1961], "scale": [0, 1918, 1929], "op": [0, 99, 1901, 1918, 1937, 1961], "refer": [0, 30, 37, 68, 74, 1896, 1898, 1899, 1900, 1909, 1913, 1928, 1938, 1941, 1943, 1944, 1947, 1951, 1959], "elig": 0, "cuda": [0, 2, 10, 12, 25, 36, 37, 228, 999, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1017, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1911, 1918, 1922, 1926, 1928, 1932, 1934, 1936], "specif": [0, 40, 1953], "behavior": [0, 40, 1919, 1927], "can": [0, 24, 1919, 1926], "float16": 0, "float32": 0, "promot": [0, 7, 101], "widest": 0, "input": [0, 1912, 1918, 1927], "type": [0, 40, 101, 619, 1898, 1899, 1924, 1937, 1941, 1959, 1965], "prefer": 0, "binary_cross_entropy_with_logit": [0, 1525], "over": [0, 8, 1898], "binary_cross_entropi": [0, 1524], "cpu": [0, 2, 10, 11, 35, 225, 989, 990, 991, 992, 993, 1919, 1921, 1932, 1944], "bfloat16": [0, 174], "differenti": [1, 1919], "autograd": [1, 10, 31, 34, 71, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 1913, 1918, 1919, 1924, 1925, 1937, 1949, 1950], "forward": [1, 906, 1924, 1950], "mode": [1, 61, 69, 432, 1326, 1919, 1924, 1927, 1937, 1944, 1950], "function": [1, 27, 43, 49, 65, 67, 68, 70, 72, 74, 92, 97, 100, 104, 105, 905, 906, 907, 908, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 1151, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1912, 1914, 1915, 1916, 1918, 1919, 1925, 1927, 1935, 1937, 1947, 1953, 1954, 1964], "higher": 1, "level": [1, 10, 99, 1947], "api": [1, 10, 15, 16, 18, 30, 34, 37, 46, 54, 68, 71, 74, 1894, 1896, 1899, 1909, 1913, 1921, 1922, 1924, 1928, 1929, 1938, 1941, 1942, 1943, 1944, 1947], "local": [1, 24, 28, 1899, 1919, 1961], "disabl": [1, 40, 973, 1896, 1919, 1961], "comput": [1, 72, 1919, 1933, 1950, 1961], "default": [1, 40, 41, 1898, 1919, 1922, 1927, 1946], "layout": [1, 1956], "manual": 1, "In": [1, 8, 1919, 1920, 1961], "place": [1, 71, 1912, 1919, 1920, 1937, 1961], "oper": [1, 10, 16, 41, 43, 71, 102, 106, 1898, 1899, 1904, 1906, 1912, 1913, 1914, 1919, 1924, 1929, 1936, 1937, 1939, 1944, 1953, 1959, 1961], "tensor": [1, 16, 31, 34, 48, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 1854, 1897, 1901, 1904, 1911, 1912, 1913, 1914, 1919, 1924, 1935, 1937, 1944, 1947, 1953, 1956, 1957, 1959, 1961], "correct": [1, 74, 1919], "check": [1, 24, 74, 1896, 1919, 1928], "variabl": [1, 20, 43, 61, 1896, 1898, 1899, 1922], "deprec": 1, "context": [1, 44, 58, 79, 1950], "method": [1, 53, 54, 57, 62, 1897, 1898, 1901, 1937, 1947, 1953], "mixin": 1, "numer": [1, 1927, 1933, 1945], "profil": [1, 22, 25, 29, 43, 931, 932, 933, 934, 935, 1334, 1335, 1336, 1910, 1929, 1930, 1943], "anomali": 1, "detect": 1, "graph": [1, 12, 17, 25, 28, 29, 36, 74, 926, 927, 928, 929, 930, 1029, 1896, 1919, 1922, 1944], "backend": [2, 11, 13, 19, 29, 43, 60, 61, 1896, 1928, 1931, 1944, 1946, 1949], "cudnn": 2, "mp": [2, 10, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1910, 1931], "mkl": 2, "mkldnn": [2, 10], "openmp": 2, "opt_einsum": 2, "xeon": 2, "benchmark": [3, 1934], "util": [3, 4, 5, 10, 28, 33, 40, 43, 50, 68, 70, 1072, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1876, 1877, 1878, 1879, 1902, 1907, 1908, 1915, 1935, 1947, 1958, 1961, 1963, 1966], "bottleneck": 4, "checkpoint": [5, 41, 45], "pytorch": [6, 7, 8, 9, 10, 12, 19, 23, 24, 29, 34, 42, 43, 71, 1894, 1896, 1897, 1901, 1919, 1922, 1924, 1934, 1935, 1937, 1942, 1947], "govern": [6, 9, 10], "build": [6, 7, 10, 1921, 1929, 1930, 1936], "ci": [6, 10], "how": [6, 16, 17, 24, 41, 69, 1893, 1919, 1924, 1940, 1941], "add": [6, 9, 91, 116, 701], "new": [6, 7, 9], "maintain": [6, 9, 10], "contribut": [7, 1937], "guid": 7, "process": [7, 9, 40, 58, 1918], "get": [7, 17, 19, 46, 1937], "start": [7, 19, 46, 58, 1335], "propos": 7, "featur": [7, 1929, 1930], "report": [7, 1926], "issu": [7, 25, 29, 1896], "implement": [7, 16, 51, 60, 62, 1893, 1923, 1927, 1937, 1945, 1947, 1951], "fix": [7, 61, 69, 279, 1132], "bug": 7, "ad": [7, 1924, 1937], "tutori": [7, 10, 1941, 1942, 1949], "improv": [7, 1930], "document": [7, 46, 1894], "particip": 7, "onlin": 7, "discuss": 7, "submit": 7, "pull": 7, "request": 7, "open": 7, "review": 7, "code": [7, 17, 19, 74, 1896, 1922, 1941], "readabl": 7, "test": [7, 24, 1899, 1924, 1941, 1960], "case": [7, 1896], "make": [7, 9, 12, 20, 95], "codebas": 7, "more": [7, 21, 67, 1949], "robust": 7, "triag": 7, "about": [7, 16, 1919, 1949], "sourc": [7, 1934, 1936, 1941], "develop": [7, 1894, 1937], "common": [7, 43, 74, 1929, 1944], "mistak": 7, "To": 7, "avoid": [7, 1932, 1934, 1937, 1941], "frequent": [7, 17, 1896, 1926, 1937, 1944], "ask": [7, 17, 1896, 1926, 1937, 1944], "question": [7, 17, 1896, 1926, 1937, 1944], "On": [7, 41, 1898], "python": [7, 8, 20, 71, 76, 77, 78, 79, 80, 81, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1924, 1934, 1937], "doc": [7, 10, 1928], "c": [7, 10, 34, 1919, 1924, 1928, 1935, 1937], "overview": [7, 13, 20, 26, 37, 74, 1938, 1941, 1943, 1953], "design": [8, 1899, 1923, 1949, 1950, 1951], "philosophi": 8, "principl": [8, 9], "1": [8, 61, 69, 1896, 1925], "usabl": 8, "perform": [8, 10, 16, 24, 25, 29, 1930, 1935], "2": [8, 23, 24, 27, 29, 69, 1896, 1922, 1925, 1926, 1947], "simpl": [8, 1898, 1899, 1930, 1950], "easi": 8, "3": [8, 61, 69], "first": [8, 1941], "best": [8, 11, 1922, 1932, 1944], "class": [8, 53, 74, 1896, 1898, 1899, 1901, 1937, 1940, 1941, 1959], "languag": [8, 1894, 1896, 1898, 1899, 1900], "interoper": 8, "mechan": [9, 1916, 1919, 1927], "summari": [9, 20, 1944], "modul": [9, 10, 23, 68, 70, 74, 1453, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1896, 1897, 1898, 1899, 1901, 1915, 1919, 1924, 1930, 1935, 1941, 1944], "core": [9, 10, 1895], "lead": [9, 10], "bdfl": [9, 10], "nomin": [9, 1899], "confirm": 9, "remov": [9, 1663, 1912], "The": [9, 15, 74, 1899, 1919], "re": [9, 1941], "scope": 9, "project": 9, "decis": 9, "uncontroversi": 9, "chang": [9, 17, 61, 69], "controversi": 9, "gener": [9, 36, 44, 71, 74, 107, 1920, 1925, 1934, 1944, 1945, 1961], "polici": [9, 15], "faq": [9, 1936], "respons": 10, "nn": [10, 23, 68, 70, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1898, 1899, 1915, 1916, 1917, 1919, 1922, 1924, 1935, 1947, 1953], "optim": [10, 19, 21, 47, 1701, 1702, 1703, 1704, 1705, 1918, 1919, 1940, 1949, 1950, 1961], "compil": [10, 17, 21, 25, 27, 29, 30, 70, 968, 970, 971, 972, 973, 974, 975, 1894, 1922], "jit": [10, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1896, 1899, 1902], "torchscript": [10, 34, 1896, 1897, 1898, 1899, 1901, 1921, 1929, 1939, 1941], "fx": [10, 74, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 101, 1930, 1944, 1947, 1963], "torchdynamo": [10, 12, 14, 17, 18, 29, 1923, 1937], "distribut": [10, 17, 43, 45, 46, 47, 48, 49, 61, 1915, 1916, 1923, 1928, 1930, 1949, 1950], "rng": 10, "multiprocess": [10, 58, 1911, 1922, 1932, 1936], "dataload": [10, 1934], "linear": [10, 31, 748, 749, 772, 780, 797, 1158, 1440, 1569, 1915, 1916, 1933, 1953], "algebra": [10, 31, 1933, 1953], "linalg": [10, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1904, 1933], "spars": [10, 1814, 1816, 1817, 1818, 1819, 1820, 1821, 1915, 1916, 1953], "nestedtensor": 10, "nest": [10, 1914], "maskedtensor": [10, 1906], "mask": [10, 1906], "fast": [10, 65, 1927, 1950], "fourier": [10, 65], "transform": [10, 27, 28, 49, 65, 67, 68, 70, 72, 74, 1496, 1915, 1924, 1930], "fft": [10, 65, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131], "inductor": [10, 17], "gpu": [10, 22, 43, 1915, 1916, 1918, 1926, 1942], "triton": 10, "nvfuser": 10, "amd": [10, 1933], "rocm": [10, 1928], "hip": [10, 1928], "tool": [10, 36, 1945, 1953], "c10": 10, "dispatch": 10, "onnx": [10, 93, 94, 102, 103, 1937, 1938, 1939], "export": [10, 17, 64, 1937, 1941, 1947], "mobil": 10, "edg": [10, 1896, 1941], "model": [10, 15, 34, 1893, 1918, 1926, 1929, 1940, 1941, 1942, 1944, 1947], "compress": [10, 1953], "window": [10, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1936, 1952], "appl": 10, "m1": 10, "powerpc": 10, "librari": [10, 1894, 1903, 1934], "xla": 10, "torchserv": 10, "torchvis": [10, 69], "torchtext": 10, "torchaudio": 10, "torchrec": 10, "torchx": 10, "torchdata": 10, "torcharrow": 10, "practic": [11, 1922, 1932, 1944], "x86": 11, "cudagraph": [12, 995], "tree": 12, "background": [12, 1927, 1950, 1951], "integr": 12, "callabl": 12, "previou": 12, "limit": [12, 23, 71, 74, 1893, 1925, 1937], "comparison": [12, 1896, 1898, 1899, 1961], "custom": [13, 52, 62, 74, 104, 1899, 1918, 1922, 1924, 1925, 1930, 1937, 1940, 1941, 1944], "regist": [13, 1919], "after": 13, "aotautograd": [13, 89], "exampl": [13, 55, 74, 1918, 1923, 1924, 1925, 1937, 1950], "debug": [13, 29, 41, 43, 74, 99, 1896, 1944, 1945], "speedi": 13, "compos": [13, 67, 72], "deeper": 14, "dive": 14, "what": [14, 24, 25, 41, 67, 69, 72, 1906, 1919, 1941], "i": [14, 16, 17, 24, 72, 1906, 1919, 1941], "guard": [14, 15, 20], "dynamo": [14, 17, 95], "do": [14, 17, 19, 1941], "dynam": [15, 16, 60, 71, 74, 83, 1944, 1947], "shape": [15, 16, 71, 83, 103, 539, 1937], "motiv": [15, 16, 1906], "abridg": 15, "public": 15, "overal": [15, 16], "architectur": [15, 16], "intern": [15, 1923, 1937, 1941], "dimdynam": 15, "unback": 15, "symint": 15, "fake": 16, "relat": [16, 1947], "work": [16, 25, 27, 40, 68, 1918, 1926, 1953], "import": [16, 61, 1893, 1936, 1941], "bit": 16, "detail": 16, "subclass": [16, 1924], "each": [16, 1941], "individu": 16, "doe": [16, 41, 1919], "convert": [16, 90, 813], "characterist": 16, "interact": [16, 27], "other": [16, 43, 1915, 1934, 1941, 1953, 1961], "resourc": [16, 1941], "you": [17, 19], "support": [17, 23, 75, 106, 1897, 1899, 1906, 1912, 1913, 1914, 1925, 1937, 1939, 1944, 1953], "still": 17, "need": [17, 19, 1918], "whole": [17, 1922], "why": [17, 19, 67, 72, 1922, 1927, 1941, 1953], "my": [17, 24, 1893, 1919, 1926, 1941], "crash": 17, "error": [17, 29, 53, 1926, 1936, 1944, 1945], "torchinductor": [17, 22, 24, 29], "slow": 17, "excess": [17, 29], "recompil": [17, 29], "ar": [17, 67, 72, 1893, 1919, 1941], "product": [17, 72, 1904], "speed": [17, 1936], "up": [17, 61], "am": 17, "see": [17, 1941], "speedup": 17, "break": [17, 25, 29, 1898, 1899], "identifi": [17, 29, 1899], "caus": [17, 29], "didn": 17, "t": [17, 27, 586, 1849, 1899, 1926], "when": [17, 1899, 1919, 1924, 1937, 1944, 1953], "incorrect": 17, "result": 17, "oom": 17, "control": [18, 71, 74, 80, 1934], "fine": 18, "grain": 18, "trace": [18, 25, 74, 607, 1236, 1859, 1896, 1937, 1943, 1944], "exist": 19, "anoth": [19, 1925], "wai": 19, "cach": [20, 1643, 1893, 1922, 1928], "frame": 20, "evalu": [20, 1919, 1927], "pep": 20, "523": 20, "instructiontransl": 20, "troubleshoot": [21, 29], "learn": [21, 1940], "0": [23, 24, 27, 29, 1947], "nnmodul": 23, "hook": [23, 41, 1919, 1930], "__call__": 23, "usag": [23, 37, 46, 61, 1922, 1925, 1929, 1930, 1936], "state_dict": [23, 1703], "dashboard": 24, "read": [24, 67, 1937], "measur": 24, "pr": 24, "affect": 24, "": [24, 69, 1941], "befor": 24, "merg": 24, "run": [24, 1893], "ani": [24, 137, 715, 1899], "understand": 25, "us": [25, 27, 29, 41, 43, 74, 1898, 1919, 1922, 1924, 1927, 1937, 1940, 1941, 1942, 1944, 1953], "basic": [25, 43, 1899, 1913, 1925, 1949, 1959], "view": [25, 633, 1906, 1935, 1957], "around": 25, "time": [25, 1922], "find": [25, 100, 102, 1941], "launch": [25, 43, 61], "overhead": 25, "technic": 26, "func": [27, 67, 68, 70, 72, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1924, 1925], "appli": 27, "d": 27, "doesn": [27, 1926], "pt": 27, "call": [27, 97, 1898, 1899, 1925], "insid": [27, 1941], "ed": 27, "workaround": 27, "_dynamo": 27, "allow_in_graph": [27, 970], "write": [28, 62, 74, 1919, 1924, 1937], "aten": [28, 1895, 1937], "ir": [28, 91, 1895], "pass": [28, 90, 96, 1899, 1922, 1932, 1944, 1950], "One": [28, 1936], "x": 28, "none": 28, "inform": [28, 1927, 1949], "subgraph": [28, 74], "rewrit": [28, 74], "manag": [28, 36, 44, 79, 1911, 1922, 1928, 1941], "partition": 28, "matcher": 28, "capabl": 28, "base": [28, 1940], "titl": 29, "diagnos": 29, "runtim": [29, 1921, 1926], "minifi": 29, "access": [29, 31, 1898, 1941], "torch_compile_debug": 29, "accuraci": [29, 1933, 1944, 1945], "file": [29, 43, 1911, 1941], "an": [29, 1893, 1937, 1940, 1941], "complex": [31, 976, 1919, 1927], "number": [31, 36, 61, 1919, 1921, 1926, 1934, 1961], "creat": [31, 1896, 1913], "transit": [31, 61], "from": [31, 61, 70, 74, 1893, 1912, 1936, 1937, 1941], "old": 31, "represent": 31, "real": [31, 500, 1757, 1927], "imag": [31, 329, 1191], "angl": [31, 136, 714], "ab": [31, 108, 697], "serial": [31, 1935, 1961], "__config__": 32, "cpp_extens": 33, "extend": [34, 51, 1924, 1925], "extens": [34, 36, 1924, 1929, 1936], "author": [34, 74], "stream": [35, 36, 37, 987, 992, 1000, 1069, 1922], "event": [35, 36, 52, 54, 997], "random": [36, 40, 71, 1926, 1934, 1948, 1961], "commun": [36, 41, 43, 1894], "collect": [36, 43], "beta": [36, 49], "memori": [36, 40, 1922, 1926, 1928, 1930], "nvidia": [36, 1933], "nvtx": [36, 1054, 1055, 1056], "jiter": [36, 1037, 1038], "sanit": [36, 37], "prototyp": [36, 1944, 1945], "data": [40, 71, 81, 1899, 1923, 1926, 1937, 1945, 1959], "dataset": 40, "map": [40, 85, 1928], "style": 40, "iter": [40, 1898], "load": [40, 1228, 1292, 1893, 1935, 1941, 1944], "order": [40, 1919], "sampler": 40, "batch": [40, 69, 1933, 1940], "non": [40, 74, 1915, 1916, 1919, 1922, 1933, 1941, 1944], "collate_fn": 40, "singl": [40, 61, 1918], "multi": [40, 43, 61, 1915, 1916], "platform": 40, "pin": [40, 1922], "ddp": 41, "powersgd": 41, "state": [41, 1930, 1941], "acknowledg": [41, 1942], "deploi": 42, "ha": 42, "been": 42, "move": 42, "multipi": 42, "come": [43, 1919], "which": [43, 1919], "environ": [43, 61, 1922, 1929, 1941], "choos": 43, "network": [43, 1922, 1926, 1930], "interfac": [43, 1928], "nccl": [43, 1922], "initi": [43, 1915, 1930, 1959], "tcp": 43, "share": [43, 1911, 1922, 1941, 1951], "system": [43, 1899, 1911, 1925], "post": [43, 1944], "kei": [43, 1936], "valu": [43, 630, 1898, 1899, 1933, 1946, 1951], "store": [43, 60], "group": 43, "point": [43, 1929], "synchron": [43, 993, 1070, 1340], "asynchron": [43, 1899, 1922, 1932], "third": 43, "parti": 43, "spawn": [43, 1911], "applic": 43, "monitor": [43, 1909], "barrier": 43, "torch_distributed_debug": 43, "log": [43, 387, 1294, 1929], "join": [44, 1961], "elast": [46, 51, 61], "advanc": [46, 1930], "plugin": 46, "parallel": [48, 1617, 1922, 1923, 1926, 1942, 1961], "probabl": 49, "score": 49, "pathwis": 49, "deriv": [49, 1919], "exponentialfamili": 49, "bernoulli": [49, 172, 938], "binomi": 49, "categor": 49, "cauchi": 49, "chi2": 49, "continuousbernoulli": 49, "dirichlet": 49, "exponenti": [49, 1797], "fishersnedecor": 49, "gamma": 49, "geometr": 49, "gumbel": 49, "halfcauchi": 49, "halfnorm": 49, "independ": 49, "kumaraswami": 49, "lkjcholeski": 49, "laplac": 49, "lognorm": 49, "lowrankmultivariatenorm": 49, "mixturesamefamili": 49, "multinomi": [49, 438, 1343], "multivariatenorm": 49, "negativebinomi": 49, "normal": [49, 1588, 1681, 1915, 1940], "onehotcategor": 49, "pareto": 49, "poisson": [49, 1732], "relaxedbernoulli": 49, "logitrelaxedbernoulli": 49, "relaxedonehotcategor": 49, "studentt": 49, "transformeddistribut": 49, "uniform": 49, "vonmis": 49, "weibul": 49, "wishart": 49, "kl": 49, "diverg": [49, 1901], "constraint": [49, 1922], "registri": [49, 60, 102], "dlpack": 50, "agent": 51, "server": [51, 60, 62], "concept": 51, "watchdog": 51, "launcher": 52, "rendezv": [52, 60, 61], "handler": [52, 57, 60, 1926], "metric": [52, 57], "propag": [53, 1913], "object": [54, 1941], "torchelast": 56, "kubernet": 56, "multipl": [58, 1918, 1922, 1924, 1942], "worker": [58, 61, 1926], "quickstart": 59, "except": [60, 1926], "c10d": 60, "etcd": 60, "legaci": 60, "torchrun": 61, "node": [61, 91, 94, 98, 101, 103, 926, 927, 928, 929, 930, 1919], "stack": [61, 1833, 1944], "fault": 61, "toler": 61, "size": [61, 553, 1914], "failur": [61, 88], "min": [61, 429, 1323], "max": [61, 425, 1318], "4": [61, 69], "membership": [61, 1899], "note": [61, 1894, 1899, 1922, 1944, 1949], "definit": [61, 1899], "deploy": [61, 1929], "notic": [61, 1893], "expir": 62, "timer": 62, "client": 62, "train": [63, 1918, 1930, 1932, 1944], "script": [63, 1232, 1896, 1936, 1937], "_export": 64, "helper": 65, "fullyshardeddataparallel": 66, "patch": [69, 1941], "norm": [69, 470, 1277, 1680], "happen": 69, "option": [69, 1898, 1921, 1936, 1940], "batchnorm": 69, "paramet": [69, 1634, 1898, 1940], "functorch": [69, 70], "eval": [69, 1919], "migrat": [70, 1896], "make_funct": 70, "combine_state_for_ensembl": 70, "ux": 71, "vmap": [71, 72, 908, 1162, 1886, 1924, 1925], "mutat": [71, 1961], "arbitrari": [71, 1941], "structur": [71, 81, 1899, 1953], "out": [71, 1912, 1926], "depend": [71, 1941, 1950], "flow": [71, 74, 80, 1944], "item": [71, 370], "nonzero": [71, 469, 1679], "friend": 71, "whirlwind": 72, "tour": 72, "grad": [72, 308, 923, 1152, 1919, 1922], "auto": 72, "vector": 72, "vjp": [72, 922, 1161], "jacobian": [72, 919], "jvp": [72, 907, 920, 1157, 1925], "jacrev": [72, 1156], "jacfwd": [72, 1155], "hessian": [72, 917, 1154], "futur": 73, "A": [74, 1930], "quick": 74, "primer": 74, "manipul": [74, 1913], "direct": 74, "With": [74, 1901], "replace_pattern": 74, "proxi": 74, "retrac": 74, "interpret": [74, 1896], "pattern": [74, 1898, 1937, 1941], "introduct": [74, 1906, 1914, 1944], "pitfal": [74, 1937], "pdb": 74, "print": [74, 1898, 1899], "to_fold": 74, "graphmodul": 74, "avail": 74, "debugg": 74, "symbol": [74, 92, 97, 100, 104, 105, 1937, 1944, 1961], "static": [74, 1937, 1944], "tracer": [74, 87, 88, 1896], "leaf": 74, "miscellanea": 74, "exportdb": 75, "tag": [75, 1961], "assume_constant_result": [75, 84, 971], "autograd_funct": 75, "class_method": 75, "cond_branch_class_method": [75, 82, 83], "cond_branch_nested_funct": [75, 82, 83], "cond_branch_nonlocal_vari": [75, 82, 83], "cond_closed_over_vari": [75, 78, 82], "cond_operand": [75, 82, 83], "cond_pred": [75, 82, 83], "decor": 75, "dictionari": [75, 81, 1899], "dynamic_shape_assert": [75, 76], "dynamic_shape_constructor": [75, 83], "dynamic_shape_if_guard": [75, 80, 83], "dynamic_shape_map": [75, 83, 85], "dynamic_shape_sl": [75, 83], "dynamic_shape_view": [75, 83], "fn_with_kwarg": [75, 81], "list_contain": [75, 76, 81, 83], "list_unpack": [75, 80, 81], "nested_funct": [75, 78], "null_context_manag": [75, 79], "pytree_flatten": 75, "scalar_output": [75, 83], "specialized_attribut": 75, "static_for_loop": [75, 80], "static_if": [75, 80], "tensor_setattr": [75, 77], "Not": [75, 1901], "yet": 75, "dynamic_shape_round": [75, 77, 83], "type_reflection_method": [75, 77], "assert": [76, 1899, 1928], "builtin": [77, 1897], "closur": [78, 1940], "cond": [82, 1252], "escap": 84, "hatch": 84, "diagsys0001": 86, "arg": 86, "format": [86, 1941], "too": 86, "verbos": 86, "fxe0001": 87, "success": 87, "fxe0002": 88, "fxe0003": 89, "frontend": [89, 95], "fxe0004": 90, "neg": [90, 457, 459, 1355, 1356], "sigmoid": [90, 542, 775, 1483, 1604, 1792], "fxe0005": 91, "fxe0006": 92, "atenlib": [92, 93], "fxe0007": 93, "fxe0008": 94, "fxe0009": 95, "fxe0010": 96, "fxe0011": 97, "fxe0012": 98, "unsupport": [98, 1898, 1899, 1901, 1937, 1939], "analysi": 98, "fxe0013": 99, "fxe0014": 100, "opschema": 100, "match": [100, 1898, 1913], "fxe0015": 101, "insert": 101, "fxe0016": 102, "overload": 102, "poe0001": 103, "miss": [103, 104, 105], "infer": [103, 1913, 1919, 1921, 1935], "poe0002": 104, "poe0003": 105, "standard": 105, "poe0004": 106, "newer": 106, "opset": 106, "version": [106, 1935], "abs_": 109, "absolut": [110, 698], "absolute_": 111, "aco": [112, 699], "acos_": 113, "acosh": [114, 700], "acosh_": 115, "add_": 117, "addbmm": [118, 702], "addbmm_": 119, "addcdiv": [120, 703], "addcdiv_": 121, "addcmul": [122, 704], "addcmul_": 123, "addmm": [124, 705, 1814], "addmm_": 125, "addmv": [126, 706], "addmv_": 127, "addr": [128, 707], "addr_": 129, "adjoint": [130, 708], "all": [131, 709, 1924, 1937, 1940], "allclos": [132, 710], "amax": [133, 711], "amin": [134, 712], "aminmax": [135, 713], "apply_": 138, "arcco": [139, 882], "arccos_": 140, "arccosh": [141, 883], "arccosh_": 142, "arcsin": [143, 884], "arcsin_": 144, "arcsinh": [145, 885], "arcsinh_": 146, "arctan": [147, 886], "arctan2": [148, 887], "arctan2_": 149, "arctan_": 150, "arctanh": [151, 888], "arctanh_": 152, "argmax": [153, 890], "argmin": [154, 891], "argsort": [155, 892], "argwher": [156, 893], "as_strid": [157, 894], "as_subclass": 158, "asin": [159, 897], "asin_": 160, "asinh": [161, 898], "asinh_": 162, "atan": [163, 899], "atan2": [164, 900], "atan2_": 165, "atan_": 166, "atanh": [167, 901], "atanh_": 168, "backward": [169, 905, 909, 1919, 1920, 1922, 1927, 1950], "baddbmm": [170, 936], "baddbmm_": 171, "bernoulli_": 173, "bincount": [175, 939], "bitwise_and": [176, 940], "bitwise_and_": 177, "bitwise_left_shift": [178, 941], "bitwise_left_shift_": 179, "bitwise_not": [180, 942], "bitwise_not_": 181, "bitwise_or": [182, 943], "bitwise_or_": 183, "bitwise_right_shift": [184, 944], "bitwise_right_shift_": 185, "bitwise_xor": [186, 945], "bitwise_xor_": 187, "bmm": [188, 948], "bool": 189, "broadcast_to": [190, 951], "byte": 191, "cauchy_": 192, "ccol_indic": 193, "cdoubl": 194, "ceil": [195, 957], "ceil_": 196, "cfloat": 197, "chalf": 198, "char": 199, "choleski": [200, 959, 1250], "cholesky_invers": [201, 960], "cholesky_solv": [202, 961], "chunk": [203, 962], "clamp": [204, 787, 963], "clamp_": 205, "clip": [206, 964, 1918], "clip_": 207, "clone": [208, 965], "coalesc": 209, "col_indic": 210, "conj": [211, 979], "conj_phys": [212, 980], "conj_physical_": 213, "contigu": 214, "copy_": 215, "copysign": [216, 981], "copysign_": 217, "corrcoef": [218, 982], "co": [219, 983], "cos_": 220, "cosh": [221, 984], "cosh_": 222, "count_nonzero": [223, 985], "cov": [224, 986], "cross": [226, 994, 1253, 1919], "crow_indic": 227, "cummax": [229, 1073], "cummin": [230, 1074], "cumprod": [231, 1075], "cumprod_": 232, "cumsum": [233, 1076], "cumsum_": 234, "data_ptr": 235, "deg2rad": [236, 1078], "dense_dim": 237, "dequant": [238, 1079, 1944], "det": [239, 1080, 1254], "detach": 240, "detach_": 241, "devic": [242, 1016, 1922, 1933, 1956], "diag": [243, 1081], "diag_emb": [244, 1082], "diagflat": [245, 1083], "diagon": [246, 1084, 1255], "diagonal_scatt": [247, 1085], "diff": [248, 1086], "digamma": [249, 1087], "digamma_": 250, "dim": [251, 1912], "dist": [252, 1088], "div": [253, 1089, 1935], "div_": 254, "divid": [255, 1090], "divide_": 256, "dot": [257, 1091], "doubl": 258, "dsplit": [259, 1092], "element_s": 260, "eq": [261, 1099], "eq_": 262, "equal": [263, 1100], "erf": [264, 1101], "erf_": 265, "erfc": [266, 1102], "erfc_": 267, "erfinv": [268, 1103], "erfinv_": 269, "exp": [270, 1104], "exp_": 271, "expand": 272, "expand_a": 273, "expm1": [274, 1106], "expm1_": 275, "exponential_": 276, "fill_": 277, "fill_diagonal_": 278, "fix_": 280, "flatten": [281, 1133, 1399], "flip": [282, 1134], "fliplr": [283, 1135], "flipud": [284, 1136], "float": [285, 1935], "float_pow": [286, 1137], "float_power_": 287, "floor": [288, 1138], "floor_": 289, "floor_divid": [290, 1139], "floor_divide_": 291, "fmax": [292, 1140], "fmin": [293, 1141], "fmod": [294, 1142], "fmod_": 295, "frac": [296, 1143], "frac_": 297, "frexp": [298, 1144], "gather": [299, 1009, 1163], "gcd": [300, 1164], "gcd_": 301, "ge": [302, 1165], "ge_": 303, "geometric_": 304, "geqrf": [305, 1166], "ger": [306, 1167], "get_devic": 307, "greater": [309, 1175], "greater_": 310, "greater_equ": [311, 1176], "greater_equal_": 312, "gt": [313, 1177], "gt_": 314, "half": 315, "hardshrink": [316, 1409, 1555], "heavisid": [317, 1180], "histc": [318, 1181], "histogram": [319, 1182], "hsplit": [320, 1184], "hypot": [321, 1187], "hypot_": 322, "i0": [323, 1188], "i0_": 324, "igamma": [325, 1189], "igamma_": 326, "igammac": [327, 1190], "igammac_": 328, "index_add": [330, 1192], "index_add_": 331, "index_copi": [332, 1193], "index_copy_": 333, "index_fil": 334, "index_fill_": 335, "index_put": 336, "index_put_": 337, "index_reduc": [338, 1194], "index_reduce_": 339, "index_select": [340, 1195], "indic": [341, 1894], "inner": [342, 1198], "int": 343, "int_repr": 344, "invers": [345, 1199, 1904], "is_coalesc": 346, "is_complex": [347, 1200], "is_conj": [348, 1201], "is_contigu": 349, "is_cuda": 350, "is_floating_point": [351, 1203], "is_infer": 352, "is_leaf": 353, "is_meta": 354, "is_pin": 355, "is_quant": 356, "is_set_to": 357, "is_shar": 358, "is_sign": 359, "is_spars": 360, "is_sparse_csr": 361, "isclos": [362, 1210], "isfinit": [363, 1211], "isinf": [364, 1213], "isnan": [365, 1214], "isneginf": [366, 1215], "isposinf": [367, 1216], "isreal": [368, 1217], "istft": [369, 1218], "items": 371, "kthvalu": [372, 1242], "lcm": [373, 1243], "lcm_": 374, "ldexp": [375, 1244], "ldexp_": 376, "le": [377, 1245], "le_": 378, "lerp": [379, 1246], "lerp_": 380, "less": [381, 1247], "less_": 382, "less_equ": [383, 1248], "less_equal_": 384, "lgamma": [385, 1249], "lgamma_": 386, "log10": [388, 1295], "log10_": 389, "log1p": [390, 1296], "log1p_": 391, "log2": [392, 1297], "log2_": 393, "log_": 394, "log_normal_": 395, "logaddexp": [396, 1298], "logaddexp2": [397, 1299], "logcumsumexp": [398, 1300], "logdet": [399, 1301], "logical_and": [400, 1302], "logical_and_": 401, "logical_not": [402, 1303], "logical_not_": 403, "logical_or": [404, 1304], "logical_or_": 405, "logical_xor": [406, 1305], "logical_xor_": 407, "logit": [408, 1306], "logit_": 409, "logsumexp": [410, 1308], "long": 411, "lt": [412, 1309], "lt_": 413, "lu": [414, 1267, 1310], "lu_solv": [415, 1270, 1311], "map_": 416, "masked_fil": 417, "masked_fill_": 418, "masked_scatt": 419, "masked_scatter_": 420, "masked_select": [421, 1314], "matmul": [422, 1271, 1315], "matrix_exp": [423, 1272, 1316], "matrix_pow": [424, 1274, 1317], "maximum": [426, 1319], "mean": [427, 1320], "median": [428, 1321], "minimum": [430, 1324], "mm": [431, 1325, 1817], "moveaxi": [433, 1327], "movedim": [434, 1328], "msort": [435, 1341], "mul": [436, 1342], "mul_": 437, "multipli": [439, 1344], "multiply_": 440, "mv": [441, 1345], "mvlgamma": [442, 1346], "mvlgamma_": 443, "nan_to_num": [444, 1347], "nan_to_num_": 445, "nanmean": [446, 1348], "nanmedian": [447, 1349], "nanquantil": [448, 1350], "nansum": [449, 1351], "narrow": [450, 1352], "narrow_copi": [451, 1353], "nbyte": 452, "ndim": 453, "ndimens": 454, "ne": [455, 1354], "ne_": 456, "neg_": 458, "negative_": 460, "nelement": 461, "new_empti": 462, "new_ful": 463, "new_on": 464, "new_tensor": 465, "new_zero": 466, "nextaft": [467, 1357], "nextafter_": 468, "normal_": 471, "not_equ": [472, 1682], "not_equal_": 473, "numel": [474, 1683], "numpi": [475, 1937], "orgqr": [476, 1726], "ormqr": [477, 1727], "outer": [478, 1728], "permut": [479, 1730, 1912], "pin_memori": 480, "pinvers": [481, 1731], "polygamma": [482, 1734], "polygamma_": 483, "posit": [484, 1735], "pow": [485, 1736], "pow_": 486, "prod": [487, 1737], "put_": 488, "q_per_channel_axi": 489, "q_per_channel_scal": 490, "q_per_channel_zero_point": 491, "q_scale": 492, "q_zero_point": 493, "qr": [494, 1279, 1739], "qscheme": 495, "quantil": [496, 1740], "rad2deg": [497, 1747], "random_": 498, "ravel": [499, 1756], "reciproc": [501, 1758], "reciprocal_": 502, "record_stream": 503, "register_hook": [504, 929], "remaind": [505, 1759], "remainder_": 506, "renorm": [507, 1760], "renorm_": 508, "repeat": 509, "repeat_interleav": [510, 1761], "requires_grad": [511, 1919], "requires_grad_": 512, "reshap": [513, 1762], "reshape_a": 514, "resize_": 515, "resize_as_": 516, "resolve_conj": [517, 1763], "resolve_neg": [518, 1764], "retain_grad": 519, "retains_grad": 520, "roll": [521, 1766], "rot90": [522, 1767], "round": [523, 1768], "round_": 524, "row_indic": 525, "rsqrt": [526, 1770], "rsqrt_": 527, "scatter": [528, 1011, 1772], "scatter_": 529, "scatter_add": [530, 1773], "scatter_add_": 531, "scatter_reduc": [532, 1774], "scatter_reduce_": 533, "select": [534, 1777, 1906], "select_scatt": [535, 1778], "set_": 536, "sgn": [537, 1791], "sgn_": 538, "share_memory_": 540, "short": 541, "sigmoid_": 543, "sign": [544, 1793], "sign_": 545, "signbit": [546, 1805], "sin": [547, 1806], "sin_": 548, "sinc": [549, 1807], "sinc_": 550, "sinh": [551, 1808], "sinh_": 552, "slice_scatt": [554, 1809], "slogdet": [555, 1280, 1810], "smm": [556, 1811], "softmax": [557, 1486, 1608, 1812, 1819], "sort": [558, 1813], "sparse_dim": 559, "sparse_mask": 560, "sparse_resize_": 561, "sparse_resize_and_clear_": 562, "split": [563, 1828], "sqrt": [564, 1829], "sqrt_": 565, "squar": [566, 1830], "square_": 567, "squeez": [568, 1831], "squeeze_": 569, "sspaddmm": [570, 1832], "std": [571, 1834], "stft": [572, 1836], "storag": [573, 1955], "storage_offset": 574, "storage_typ": 575, "stride": 576, "sub": [577, 1837], "sub_": 578, "subtract": [579, 1838], "subtract_": 580, "sum": [581, 1821, 1839, 1915], "sum_to_s": 582, "svd": [583, 1284, 1840], "swapax": [584, 1842], "swapdim": [585, 1843], "t_": 587, "take": [588, 1850, 1940], "take_along_dim": [589, 1851], "tan": [590, 1852], "tan_": 591, "tanh": [592, 1493, 1613, 1853], "tanh_": 593, "tensor_split": [594, 1855], "tile": [595, 1857], "to_dens": 597, "to_mkldnn": 598, "to_spars": 599, "to_sparse_bsc": 600, "to_sparse_bsr": 601, "to_sparse_coo": 602, "to_sparse_csc": 603, "to_sparse_csr": 604, "tolist": 605, "topk": [606, 1858], "transpos": [608, 1860], "transpose_": 609, "triangular_solv": [610, 1863], "tril": [611, 1864], "tril_": 612, "triu": [613, 1866], "triu_": 614, "true_divid": [615, 1868], "true_divide_": 616, "trunc": [617, 1869], "trunc_": 618, "type_a": 620, "unbind": [621, 1870, 1914], "unflatten": [622, 1503, 1871], "unfold": [623, 1504, 1620], "uniform_": 624, "uniqu": [625, 1872], "unique_consecut": [626, 1873], "unsqueez": [627, 1874], "unsqueeze_": 628, "untyped_storag": 629, "var": [631, 1881], "vdot": [632, 1883], "view_a": 634, "vsplit": [635, 1887], "where": [636, 1889, 1893], "xlogi": [637, 1890], "xlogy_": 638, "zero_": 639, "_assert": 640, "_foreach_ab": 641, "_foreach_abs_": 642, "_foreach_aco": 643, "_foreach_acos_": 644, "_foreach_asin": 645, "_foreach_asin_": 646, "_foreach_atan": 647, "_foreach_atan_": 648, "_foreach_ceil": 649, "_foreach_ceil_": 650, "_foreach_co": 651, "_foreach_cos_": 652, "_foreach_cosh": 653, "_foreach_cosh_": 654, "_foreach_erf": 655, "_foreach_erf_": 656, "_foreach_erfc": 657, "_foreach_erfc_": 658, "_foreach_exp": 659, "_foreach_exp_": 660, "_foreach_expm1": 661, "_foreach_expm1_": 662, "_foreach_floor": 663, "_foreach_floor_": 664, "_foreach_frac": 665, "_foreach_frac_": 666, "_foreach_lgamma": 667, "_foreach_lgamma_": 668, "_foreach_log": 669, "_foreach_log10": 670, "_foreach_log10_": 671, "_foreach_log1p": 672, "_foreach_log1p_": 673, "_foreach_log2": 674, "_foreach_log2_": 675, "_foreach_log_": 676, "_foreach_neg": 677, "_foreach_neg_": 678, "_foreach_reciproc": 679, "_foreach_reciprocal_": 680, "_foreach_round": 681, "_foreach_round_": 682, "_foreach_sigmoid": 683, "_foreach_sigmoid_": 684, "_foreach_sin": 685, "_foreach_sin_": 686, "_foreach_sinh": 687, "_foreach_sinh_": 688, "_foreach_sqrt": 689, "_foreach_sqrt_": 690, "_foreach_tan": 691, "_foreach_tan_": 692, "_foreach_trunc": 693, "_foreach_trunc_": 694, "_foreach_zero_": 695, "_log": [696, 1905], "set_log": 696, "bnrelu2d": [716, 739], "bnrelu3d": [717, 740], "convbn1d": [718, 728], "convbn2d": [719, 729], "convbn3d": [720, 730], "convbnrelu1d": [721, 731], "convbnrelu2d": [722, 732], "convbnrelu3d": [723, 733], "convrelu1d": [724, 741], "convrelu2d": [725, 734, 742], "convrelu3d": [726, 735, 743], "linearrelu": [727, 736, 744, 745], "freeze_bn_stat": 737, "update_bn_stat": 738, "conv2d": [746, 755, 789, 1382, 1528], "conv3d": [747, 756, 790, 1383, 1529], "lstm": [750, 778, 1423, 1934], "multiheadattent": [751, 1459], "batchnorm2d": [752, 1372], "batchnorm3d": [753, 1373], "conv1d": [754, 788, 1381, 1527], "convtranspose1d": [757, 1384], "convtranspose2d": [758, 1385], "convtranspose3d": [759, 1386], "elu": [760, 791, 1395, 1541], "embed": [761, 1396, 1543], "embeddingbag": [762, 1397], "fxfloatfunct": 763, "floatfunct": 764, "groupnorm": [765, 1408], "hardswish": [766, 793, 1411, 1557], "instancenorm1d": [767, 1416], "instancenorm2d": [768, 1417], "instancenorm3d": [769, 1418], "layernorm": [770, 1425], "leakyrelu": [771, 1439], "qfunction": 773, "relu6": [774, 1473, 1598], "gru": [776, 1405], "grucel": [777, 1406], "lstmcell": [779, 1424], "rnncell": [781, 1470], "adaptive_avg_pool2d": [782, 1512], "adaptive_avg_pool3d": [783, 1513], "avg_pool2d": [784, 1520], "avg_pool3d": [785, 1521], "celu": [786, 1375, 1526], "hardsigmoid": [792, 1410, 1556], "hardtanh": [794, 1412, 1558], "interpol": [795, 1563], "leaky_relu": [796, 1567], "max_pool1d": [798, 1576], "max_pool2d": [799, 1577], "threshold": [800, 1495, 1615], "upsampl": [801, 1505, 1621], "upsample_bilinear": [802, 1622], "upsample_nearest": [803, 1623], "dequantstub": 804, "quantstub": 805, "quantwrapp": 806, "add_quant_dequ": 807, "backendconfig": 808, "backendpatternconfig": 809, "dtypeconfig": 810, "dtypewithconstraint": 811, "observationtyp": 812, "default_eval_fn": 814, "fakequant": [815, 1944], "fakequantizebas": 816, "fixedqparamsfakequant": 817, "fusedmovingavgobsfakequant": 818, "default_fake_qu": 819, "default_fused_act_fake_qu": 820, "default_fused_per_channel_wt_fake_qu": 821, "default_fused_wt_fake_qu": 822, "default_histogram_fake_qu": 823, "default_per_channel_weight_fake_qu": 824, "default_weight_fake_qu": 825, "disable_fake_qu": 826, "disable_observ": 827, "enable_fake_qu": 828, "enable_observ": 829, "fuse_modul": 830, "convertcustomconfig": 831, "fusecustomconfig": 832, "preparecustomconfig": 833, "standalonemoduleconfigentri": 834, "histogramobserv": 835, "minmaxobserv": 836, "movingaverageminmaxobserv": 837, "movingaverageperchannelminmaxobserv": 838, "noopobserv": 839, "observerbas": 840, "perchannelminmaxobserv": 841, "placeholderobserv": 842, "recordingobserv": 843, "default_debug_observ": 844, "default_dynamic_quant_observ": 845, "default_float_qparams_observ": 846, "default_histogram_observ": 847, "default_observ": 848, "default_per_channel_weight_observ": 849, "default_placeholder_observ": 850, "default_weight_observ": 851, "get_observer_state_dict": 852, "load_observer_state_dict": 853, "prepar": [854, 1944, 1947], "prepare_qat": 855, "propagate_qconfig": 856, "qconfig": [857, 1944, 1947], "default_activation_only_qconfig": 858, "default_debug_qconfig": 859, "default_dynamic_qconfig": 860, "default_per_channel_qconfig": 861, "default_qat_qconfig": 862, "default_qat_qconfig_v2": 863, "default_qconfig": 864, "default_weight_only_qconfig": 865, "float16_dynamic_qconfig": 866, "float16_static_qconfig": 867, "float_qparams_weight_only_qconfig": 868, "per_channel_dynamic_qconfig": 869, "qconfigmap": 870, "get_default_qat_qconfig_map": 871, "get_default_qconfig_map": 872, "quantiz": [873, 1915, 1930, 1937, 1944, 1945, 1946, 1947], "quantize_dynam": 874, "convert_fx": 875, "fuse_fx": 876, "prepare_fx": 877, "prepare_qat_fx": 878, "quantize_qat": 879, "swap_modul": 880, "arang": 881, "are_deterministic_algorithms_en": 889, "as_tensor": 895, "asarrai": 896, "atleast_1d": 902, "atleast_2d": 903, "atleast_3d": 904, "dual_level": 910, "forward_ad": [911, 912], "make_du": 911, "unpack_du": 912, "functionctx": [913, 914, 915, 916], "mark_dirti": 913, "mark_non_differenti": 914, "save_for_backward": 915, "set_materialize_grad": 916, "hvp": 918, "vhp": 921, "gradcheck": [924, 1927], "gradgradcheck": [925, 1927], "metadata": [926, 1929], "name": [927, 1898, 1912, 1913], "next_funct": 928, "register_prehook": 930, "load_nvprof": 931, "export_chrome_trac": 932, "key_averag": 933, "self_cpu_time_tot": 934, "total_averag": 935, "bartlett_window": 937, "blackman_window": 946, "block_diag": 947, "broadcast_shap": 949, "broadcast_tensor": 950, "bucket": 952, "can_cast": 953, "cartesian_prod": 954, "cat": 955, "cdist": 956, "chain_matmul": 958, "column_stack": 966, "combin": [967, 1924], "compiled_with_cxx11_abi": 969, "list_backend": 974, "reset": 975, "concat": 977, "concaten": 978, "streamcontext": [988, 1001], "current_stream": [989, 1014], "device_count": [990, 1017], "is_avail": [991, 1034], "cudapluggablealloc": 996, "externalstream": 998, "outofmemoryerror": 999, "caching_allocator_alloc": 1002, "caching_allocator_delet": 1003, "can_device_access_p": 1004, "change_current_alloc": 1005, "clock_rat": 1006, "comm": [1007, 1008, 1009, 1010, 1011], "broadcast": [1007, 1920], "broadcast_coalesc": 1008, "reduce_add": 1010, "current_blas_handl": 1012, "current_devic": 1013, "default_stream": 1015, "device_of": 1018, "empty_cach": [1019, 1331], "get_allocator_backend": 1020, "get_arch_list": 1021, "get_device_cap": 1022, "get_device_nam": 1023, "get_device_properti": 1024, "get_gencode_flag": 1025, "get_rng_stat": [1026, 1173, 1332], "get_rng_state_al": 1027, "get_sync_debug_mod": 1028, "graph_pool_handl": 1030, "init": [1031, 1917], "initial_se": [1032, 1197], "ipc_collect": 1033, "is_current_stream_captur": 1035, "is_initi": 1036, "_create_jit_fn": 1037, "_create_multi_output_jit_fn": 1038, "list_gpu_process": 1039, "make_graphed_cal": 1040, "manual_se": [1041, 1313, 1333], "manual_seed_al": 1042, "max_memory_alloc": 1043, "max_memory_cach": 1044, "max_memory_reserv": 1045, "mem_get_info": 1046, "memory_alloc": 1047, "memory_cach": 1048, "memory_reserv": 1049, "memory_snapshot": 1050, "memory_stat": 1051, "memory_summari": 1052, "memory_usag": 1053, "mark": 1054, "range_pop": 1055, "range_push": 1056, "power_draw": 1057, "reset_max_memory_alloc": 1058, "reset_max_memory_cach": 1059, "reset_peak_memory_stat": 1060, "seed": [1061, 1337, 1776], "seed_al": 1062, "set_devic": 1063, "set_per_process_memory_fract": [1064, 1338], "set_rng_stat": [1065, 1339, 1789], "set_rng_state_al": 1066, "set_stream": 1067, "set_sync_debug_mod": 1068, "temperatur": 1071, "cumulative_trapezoid": 1077, "dstack": 1093, "einsum": 1094, "empti": 1095, "empty_lik": 1096, "empty_strid": 1097, "enable_grad": 1098, "exp2": 1105, "ey": 1107, "fake_quantize_per_channel_affin": 1108, "fake_quantize_per_tensor_affin": 1109, "fft2": 1111, "fftfreq": 1112, "fftn": 1113, "fftshift": 1114, "hfft": 1115, "hfft2": 1116, "hfftn": 1117, "ifft": 1118, "ifft2": 1119, "ifftn": 1120, "ifftshift": 1121, "ihfft": 1122, "ihfft2": 1123, "ihfftn": 1124, "irfft": 1125, "irfft2": 1126, "irfftn": 1127, "rfft": 1128, "rfft2": 1129, "rfftfreq": 1130, "rfftn": 1131, "from_dlpack": 1145, "from_numpi": 1146, "frombuff": 1147, "full": [1148, 1935], "full_lik": 1149, "functional_cal": [1150, 1675], "grad_and_valu": 1153, "replace_all_batch_norm_modules_": 1159, "stack_module_st": 1160, "get_default_dtyp": 1168, "get_deterministic_debug_mod": 1169, "get_float32_matmul_precis": 1170, "get_num_interop_thread": 1171, "get_num_thread": 1172, "hamming_window": 1178, "hann_window": 1179, "histogramdd": 1183, "hspmm": 1185, "hstack": 1186, "inference_mod": 1196, "is_deterministic_algorithms_warn_only_en": 1202, "is_grad_en": 1204, "is_inference_mode_en": 1205, "is_nonzero": 1206, "is_storag": 1207, "is_tensor": 1208, "is_warn_always_en": 1209, "isin": 1212, "attribut": [1219, 1896, 1898, 1899, 1901, 1956], "scriptfunct": 1220, "scriptmodul": [1221, 1935], "annot": [1222, 1899], "enable_onednn_fus": 1223, "fork": 1224, "freez": 1225, "ignor": 1226, "isinst": 1227, "onednn_fusion_en": 1229, "optimize_for_infer": 1230, "save": [1231, 1771, 1893, 1919, 1929, 1935, 1944], "script_if_trac": 1233, "set_fusion_strategi": 1234, "strict_fus": 1235, "trace_modul": 1237, "unus": 1238, "wait": 1239, "kaiser_window": 1240, "kron": 1241, "cholesky_ex": 1251, "eig": 1256, "eigh": 1257, "eigval": 1258, "eigvalsh": 1259, "householder_product": 1260, "inv": 1261, "inv_ex": 1262, "ldl_factor": 1263, "ldl_factor_ex": 1264, "ldl_solv": 1265, "lstsq": 1266, "lu_factor": 1268, "lu_factor_ex": 1269, "matrix_norm": 1273, "matrix_rank": 1275, "multi_dot": 1276, "pinv": 1278, "solv": 1281, "solve_ex": 1282, "solve_triangular": 1283, "svdval": 1285, "tensorinv": 1286, "tensorsolv": 1287, "vander": [1288, 1880], "vecdot": 1289, "vector_norm": 1290, "linspac": 1291, "lobpcg": 1293, "logspac": 1307, "lu_unpack": 1312, "meshgrid": 1322, "current_allocated_memori": 1329, "driver_allocated_memori": 1330, "stop": 1336, "adaptiveavgpool1d": 1358, "adaptiveavgpool2d": 1359, "adaptiveavgpool3d": 1360, "adaptivelogsoftmaxwithloss": 1361, "adaptivemaxpool1d": 1362, "adaptivemaxpool2d": 1363, "adaptivemaxpool3d": 1364, "alphadropout": 1365, "avgpool1d": 1366, "avgpool2d": 1367, "avgpool3d": 1368, "bceloss": 1369, "bcewithlogitsloss": 1370, "batchnorm1d": 1371, "bilinear": [1374, 1523], "ctcloss": 1376, "channelshuffl": 1377, "constantpad1d": 1378, "constantpad2d": 1379, "constantpad3d": 1380, "cosineembeddingloss": 1387, "cosinesimilar": 1388, "crossentropyloss": 1389, "dataparallel": [1390, 1915, 1916, 1918, 1922], "dropout": [1391, 1537, 1915, 1916], "dropout1d": [1392, 1538], "dropout2d": [1393, 1539], "dropout3d": [1394, 1540], "featurealphadropout": 1398, "fold": [1400, 1546], "fractionalmaxpool2d": 1401, "fractionalmaxpool3d": 1402, "gelu": [1403, 1550], "glu": [1404, 1551], "gaussiannllloss": 1407, "hingeembeddingloss": 1413, "huberloss": 1414, "ident": [1415, 1649, 1657, 1899, 1926], "kldivloss": 1419, "l1loss": 1420, "lppool1d": 1421, "lppool2d": 1422, "lazybatchnorm1d": 1426, "lazybatchnorm2d": 1427, "lazybatchnorm3d": 1428, "lazyconv1d": 1429, "lazyconv2d": 1430, "lazyconv3d": 1431, "lazyconvtranspose1d": 1432, "lazyconvtranspose2d": 1433, "lazyconvtranspose3d": 1434, "lazyinstancenorm1d": 1435, "lazyinstancenorm2d": 1436, "lazyinstancenorm3d": 1437, "lazylinear": 1438, "localresponsenorm": 1441, "logsigmoid": [1442, 1572], "logsoftmax": 1443, "mseloss": 1444, "marginrankingloss": 1445, "maxpool1d": 1446, "maxpool2d": 1447, "maxpool3d": 1448, "maxunpool1d": 1449, "maxunpool2d": 1450, "maxunpool3d": 1451, "mish": [1452, 1582], "moduledict": [1454, 1899], "modulelist": [1455, 1898, 1899], "multilabelmarginloss": 1456, "multilabelsoftmarginloss": 1457, "multimarginloss": 1458, "nllloss": 1460, "prelu": [1461, 1596], "pairwisedist": 1462, "parameterdict": 1463, "parameterlist": 1464, "pixelshuffl": 1465, "pixelunshuffl": 1466, "poissonnllloss": 1467, "rnn": [1468, 1667, 1668, 1669, 1670, 1671, 1672, 1934], "rnnbase": 1469, "rrelu": [1471, 1600], "relu": [1472, 1597], "reflectionpad1d": 1474, "reflectionpad2d": 1475, "reflectionpad3d": 1476, "replicationpad1d": 1477, "replicationpad2d": 1478, "replicationpad3d": 1479, "selu": [1480, 1603], "sequenti": 1481, "silu": [1482, 1605], "smoothl1loss": 1484, "softmarginloss": 1485, "softmax2d": 1487, "softmin": [1488, 1609], "softplu": [1489, 1610], "softshrink": [1490, 1611], "softsign": [1491, 1612], "syncbatchnorm": 1492, "tanhshrink": [1494, 1614], "transformerdecod": 1497, "transformerdecoderlay": 1498, "transformerencod": 1499, "transformerencoderlay": 1500, "tripletmarginloss": 1501, "tripletmarginwithdistanceloss": 1502, "upsamplingbilinear2d": 1506, "upsamplingnearest2d": 1507, "zeropad1d": 1508, "zeropad2d": 1509, "zeropad3d": 1510, "adaptive_avg_pool1d": 1511, "adaptive_max_pool1d": 1514, "adaptive_max_pool2d": 1515, "adaptive_max_pool3d": 1516, "affine_grid": 1517, "alpha_dropout": 1518, "avg_pool1d": 1519, "batch_norm": 1522, "conv_transpose1d": 1530, "conv_transpose2d": 1531, "conv_transpose3d": 1532, "cosine_embedding_loss": 1533, "cosine_similar": 1534, "cross_entropi": 1535, "ctc_loss": 1536, "elu_": 1542, "embedding_bag": 1544, "feature_alpha_dropout": 1545, "fractional_max_pool2d": 1547, "fractional_max_pool3d": 1548, "gaussian_nll_loss": 1549, "grid_sampl": 1552, "group_norm": 1553, "gumbel_softmax": 1554, "hardtanh_": 1559, "hinge_embedding_loss": 1560, "huber_loss": 1561, "instance_norm": 1562, "kl_div": 1564, "l1_loss": 1565, "layer_norm": 1566, "leaky_relu_": 1568, "local_response_norm": 1570, "log_softmax": [1571, 1816], "lp_pool1d": 1573, "lp_pool2d": 1574, "margin_ranking_loss": 1575, "max_pool3d": 1578, "max_unpool1d": 1579, "max_unpool2d": 1580, "max_unpool3d": 1581, "mse_loss": 1583, "multi_margin_loss": 1584, "multilabel_margin_loss": 1585, "multilabel_soft_margin_loss": 1586, "nll_loss": 1587, "one_hot": 1589, "pad": [1590, 1915], "pairwise_dist": 1591, "pdist": 1592, "pixel_shuffl": 1593, "pixel_unshuffl": 1594, "poisson_nll_loss": 1595, "relu_": 1599, "rrelu_": 1601, "scaled_dot_product_attent": 1602, "smooth_l1_loss": 1606, "soft_margin_loss": 1607, "threshold_": 1616, "data_parallel": [1617, 1916], "triplet_margin_loss": 1618, "triplet_margin_with_distance_loss": 1619, "lazymodulemixin": 1624, "register_module_backward_hook": 1625, "register_module_buffer_registration_hook": 1626, "register_module_forward_hook": 1627, "register_module_forward_pre_hook": 1628, "register_module_full_backward_hook": 1629, "register_module_full_backward_pre_hook": 1630, "register_module_module_registration_hook": 1631, "register_module_parameter_registration_hook": 1632, "distributeddataparallel": [1633, 1918, 1922, 1923], "uninitializedbuff": 1635, "uninitializedparamet": 1636, "clip_grad_norm_": 1637, "clip_grad_value_": 1638, "parameters_to_vector": 1639, "parametr": [1640, 1641, 1643, 1644, 1645, 1646, 1930], "orthogon": 1640, "spectral_norm": [1641, 1674], "parametrizationlist": 1642, "is_parametr": 1644, "register_parametr": 1645, "remove_parametr": 1646, "basepruningmethod": 1647, "customfrommask": 1648, "l1unstructur": 1650, "lnstructur": 1651, "pruningcontain": 1652, "randomstructur": 1653, "randomunstructur": 1654, "prune": [1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1930], "custom_from_mask": 1655, "global_unstructur": 1656, "is_prun": 1658, "l1_unstructur": 1659, "ln_structur": 1660, "random_structur": 1661, "random_unstructur": 1662, "remove_spectral_norm": 1664, "remove_weight_norm": 1665, "packedsequ": 1666, "pack_padded_sequ": 1667, "pack_sequ": 1668, "pad_packed_sequ": 1669, "pad_sequ": 1670, "unpack_sequ": 1671, "unpad_sequ": 1672, "skip_init": 1673, "stateless": 1675, "vector_to_paramet": 1676, "weight_norm": 1677, "no_grad": 1678, "ones": 1684, "ones_lik": 1685, "exportopt": 1686, "exportoutput": 1687, "exportoutputseri": 1688, "jitscalartyp": 1689, "onnxexportererror": 1690, "graphinfo": 1691, "verificationopt": 1692, "asgd": 1693, "adadelta": 1694, "adagrad": 1695, "adam": 1696, "adamw": 1697, "adamax": 1698, "lbfg": 1699, "nadam": 1700, "add_param_group": 1701, "load_state_dict": 1702, "step": [1704, 1940], "zero_grad": 1705, "radam": 1706, "rmsprop": 1707, "rprop": 1708, "sgd": 1709, "sparseadam": 1710, "chainedschedul": 1711, "constantlr": 1712, "cosineannealinglr": 1713, "cosineannealingwarmrestart": 1714, "cycliclr": 1715, "exponentiallr": 1716, "lambdalr": 1717, "linearlr": 1718, "multisteplr": 1719, "multiplicativelr": 1720, "onecyclelr": 1721, "polynomiallr": 1722, "reducelronplateau": 1723, "sequentiallr": 1724, "steplr": 1725, "pca_lowrank": 1729, "polar": 1733, "promote_typ": 1738, "quantize_per_channel": 1741, "quantize_per_tensor": 1742, "quantized_batch_norm": 1743, "quantized_max_pool1d": 1744, "quantized_max_pool2d": 1745, "sobolengin": 1746, "rand": 1748, "rand_lik": 1749, "randint": 1750, "randint_lik": 1751, "randn": 1752, "randn_lik": 1753, "randperm": 1754, "rang": [1755, 1898], "result_typ": 1765, "row_stack": 1769, "searchsort": 1775, "set_default_devic": 1779, "set_default_dtyp": 1780, "set_default_tensor_typ": 1781, "set_deterministic_debug_mod": 1782, "set_float32_matmul_precis": 1783, "set_flush_denorm": 1784, "set_grad_en": 1785, "set_num_interop_thread": 1786, "set_num_thread": 1787, "set_printopt": 1788, "set_warn_alwai": 1790, "signal": [1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1952], "bartlett": 1794, "blackman": 1795, "cosin": 1796, "gaussian": 1798, "general_cosin": 1799, "general_ham": 1800, "ham": 1801, "hann": 1802, "kaiser": 1803, "nuttal": 1804, "check_sparse_tensor_invari": 1815, "sampled_addmm": 1818, "spdiag": 1820, "sparse_bsc_tensor": 1822, "sparse_bsr_tensor": 1823, "sparse_compressed_tensor": 1824, "sparse_coo_tensor": 1825, "sparse_csc_tensor": 1826, "sparse_csr_tensor": 1827, "std_mean": 1835, "svd_lowrank": 1841, "sym_float": 1844, "sym_int": 1845, "sym_max": 1846, "sym_min": 1847, "sym_not": 1848, "tensordot": 1856, "trapezoid": 1861, "trapz": 1862, "tril_indic": 1865, "triu_indic": 1867, "use_deterministic_algorithm": 1875, "generate_methods_for_privateuse1_backend": 1876, "get_cpp_backtrac": 1877, "rename_privateuse1_backend": 1878, "set_modul": 1879, "var_mean": 1882, "view_as_complex": 1884, "view_as_r": 1885, "vstack": 1888, "zero": 1891, "zeros_lik": 1892, "hub": 1893, "publish": 1893, "entrypoint": 1893, "download": 1893, "logic": [1893, 1898], "known": [1893, 1896], "bind": 1894, "tabl": [1894, 1935], "prim": 1895, "built": [1896, 1897, 1899, 1937], "inspect": 1896, "warn": 1896, "appendix": [1896, 1899], "recurs": 1896, "constant": [1896, 1898], "fusion": 1896, "math": [1897, 1961], "construct": [1898, 1899, 1901, 1914, 1940, 1953], "refin": [1898, 1899], "enum": [1898, 1899], "tupl": [1898, 1899], "express": [1898, 1899], "liter": [1898, 1899], "list": [1898, 1899, 1937], "dict": 1898, "arithmet": [1898, 1899], "subscript": [1898, 1899], "slice": [1898, 1899, 1933, 1961], "ternari": [1898, 1899], "cast": 1898, "statement": [1898, 1899], "assign": [1898, 1899], "If": 1898, "while": [1898, 1899], "loop": 1898, "For": 1898, "continu": [1898, 1899], "return": [1898, 1899, 1926, 1951], "resolut": [1898, 1899], "lookup": 1898, "defin": [1898, 1924, 1925], "terminologi": 1899, "meta": 1899, "primit": 1899, "special": [1899, 1919, 1954], "instanc": 1899, "signatur": 1899, "expr": 1899, "convers": [1899, 1914], "atom": 1899, "parenthes": 1899, "form": 1899, "displai": 1899, "primari": 1899, "power": 1899, "unari": [1899, 1906, 1953], "bitwis": 1899, "binari": [1899, 1906], "shift": 1899, "boolean": 1899, "condit": 1899, "augment": 1899, "rais": 1899, "del": 1899, "compound": 1899, "els": 1899, "getattr": 1899, "hasattr": 1899, "zip": [1899, 1941], "enumer": 1899, "rule": [1899, 1913, 1925, 1938], "remot": [1899, 1951], "procedur": 1899, "execut": [1899, 1919, 1922, 1941, 1942], "program": 1899, "coverag": [1900, 1912, 1924], "properti": [1901, 1904], "correctli": 1901, "bound": 1901, "schema": 1901, "between": [1901, 1941], "matrix": [1904, 1944], "decomposit": 1904, "solver": 1904, "misc": 1904, "experiment": 1904, "reduct": [1906, 1922, 1933, 1961], "mobile_optim": 1907, "model_zoo": 1908, "strategi": [1911, 1940], "descriptor": 1911, "file_descriptor": 1911, "file_system": 1911, "subprocess": 1911, "keep": [1912, 1941], "dimens": [1912, 1913], "unifi": 1912, "contract": 1912, "awai": 1912, "factori": 1912, "variant": 1912, "semant": [1913, 1920, 1922, 1928, 1935], "explicit": 1913, "align": 1913, "current": 1913, "subsystem": 1913, "constructor": 1914, "contain": 1915, "convolut": [1915, 1916, 1933, 1934], "layer": 1915, "pool": [1915, 1916], "activ": [1915, 1916], "weight": [1915, 1940], "nonlinear": 1915, "recurr": [1915, 1926], "distanc": [1915, 1916], "loss": [1915, 1916, 1918], "vision": [1915, 1916], "shuffl": 1915, "lazi": 1915, "attent": 1916, "typic": 1918, "unscal": 1918, "accumul": 1918, "penalti": 1918, "one": 1918, "per": [1918, 1940], "particular": [1918, 1919], "dtype": [1918, 1935, 1947, 1956], "encod": 1919, "histori": 1919, "set": [1919, 1937], "No": 1919, "multithread": 1919, "concurr": 1919, "determin": [1919, 1934], "retain": 1919, "thread": [1919, 1921], "safeti": 1919, "wirting": 1919, "calculu": 1919, "pictur": 1919, "conjug": 1919, "own": 1919, "formula": 1919, "domain": 1919, "whether": [1919, 1941], "fire": 1919, "differ": [1919, 1937], "modifi": 1919, "compat": 1920, "tune": 1921, "tensorfloat": [1922, 1928, 1933], "32": [1922, 1928, 1933, 1936], "tf32": [1922, 1928, 1933], "amper": [1922, 1933], "reduc": [1922, 1933], "fp16": [1922, 1933], "gemm": [1922, 1933], "bf16": [1922, 1933], "bc": 1922, "alloc": [1922, 1926], "cubla": 1922, "workspac": 1922, "cufft": 1922, "plan": [1922, 1928], "just": 1922, "agnost": 1922, "buffer": [1922, 1932], "instead": 1922, "captur": 1922, "partial": 1922, "9": 1922, "6": 1922, "across": [1922, 1935], "processgroup": 1923, "ddpoptim": 1923, "separ": 1924, "setup_context": 1924, "like": [1924, 1941], "wrapper": 1924, "__torch_function__": 1924, "overrid": [1924, 1964], "nativ": [1924, 1944, 1946], "specifi": 1925, "gotcha": 1925, "staticmethod": 1925, "isn": 1926, "freed": 1926, "properli": 1926, "loader": 1926, "notat": 1927, "analyt": 1927, "output": 1927, "u": 1927, "reus": [1928, 1932], "hipfft": 1928, "rocfft": 1928, "enabl": 1928, "kernel": [1928, 1944], "larg": 1929, "fleet": 1929, "wide": 1929, "attach": 1929, "consider": 1929, "block": 1930, "neural": 1930, "tip": [1932, 1945], "fight": 1932, "deadlock": 1932, "through": 1932, "queue": 1932, "e": 1932, "g": 1932, "hogwild": 1932, "oversubscript": 1932, "extrem": 1933, "finit": 1933, "instinct": 1933, "mi200": 1933, "reproduc": 1934, "nondeterminist": 1934, "algorithm": [1934, 1940, 1950], "content": [1935, 1941], "preserv": 1935, "them": [1935, 1941], "integ": 1935, "divis": 1935, "alwai": 1935, "includ": [1936, 1941], "compon": 1936, "instal": 1936, "cffi": 1936, "cpp": 1936, "found": 1936, "win": 1936, "channel": 1936, "without": 1936, "claus": 1936, "protect": 1936, "broken": 1936, "pipe": [1936, 1942], "driver": 1936, "shut": 1936, "down": 1936, "ipc": 1936, "alexnet": 1937, "v": 1937, "index": [1937, 1961], "inlin": 1937, "discov": 1937, "unconvert": 1937, "onc": 1937, "preview": 1937, "diagnost": 1938, "adjust": 1940, "rate": 1940, "averag": 1940, "swa": 1940, "ema": 1940, "schedul": 1940, "care": 1940, "put": 1940, "togeth": 1940, "your": 1941, "treat": 1941, "archiv": 1941, "file_structur": 1941, "given": 1941, "wa": 1941, "later": 1941, "distinguish": 1941, "explan": 1941, "framework": [1941, 1949], "user": [1941, 1951], "analyz": 1941, "extern": 1941, "mock": 1941, "refactor": 1941, "sharp": 1941, "global": 1941, "isol": 1941, "mangl": 1941, "pipelin": 1942, "skip": 1942, "connect": 1942, "intel": 1943, "instrument": 1943, "technologi": 1943, "eager": 1944, "awar": 1944, "engin": 1944, "observ": [1944, 1947], "hardwar": 1944, "configur": [1944, 1946], "insensit": 1945, "int8": 1945, "sensit": 1945, "ao": [1947, 1962, 1963], "top": 1947, "quantize_fx": 1947, "qconfig_map": 1947, "backend_config": 1947, "custom_config": 1947, "pt2e": 1947, "fake_quant": 1947, "intrins": 1947, "qat": 1947, "scheme": 1947, "rpc": 1949, "tensorpip": 1949, "rref": [1949, 1951], "remotemodul": 1949, "record": 1950, "dure": 1950, "smart": 1950, "end": 1950, "protocol": 1951, "assumpt": 1951, "lifetim": 1951, "reason": 1951, "scenario": 1951, "owner": 1951, "argument": 1951, "sparsiti": 1953, "semi": 1953, "acceler": 1953, "coo": 1953, "hybrid": 1953, "uncoalesc": 1953, "csr": 1953, "csc": 1953, "bsr": 1953, "bsc": 1953, "memory_format": 1956, "tensorboard": 1958, "creation": 1961, "sampl": 1961, "quasi": 1961, "pointwis": 1961, "spectral": 1961, "bla": 1961, "lapack": 1961, "foreach": 1961, "n": [1962, 1963], "_numeric_suit": 1962, "_numeric_suite_fx": 1963, "info": 1965, "finfo": 1965, "iinfo": 1965}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"torch.Tensor.dsplit": [[259, "torch-tensor-dsplit"]], "torch.Tensor.flatten": [[281, "torch-tensor-flatten"]], "torch.Tensor.flip": [[282, "torch-tensor-flip"]], "torch.Tensor.divide_": [[256, "torch-tensor-divide"]], "torch.Tensor.float_power_": [[287, "torch-tensor-float-power"]], "torch.Tensor.expm1_": [[275, "torch-tensor-expm1"]], "torch.Tensor.float_power": [[286, "torch-tensor-float-power"]], "torch.Tensor.expm1": [[274, "torch-tensor-expm1"]], "torch.Tensor.fmin": [[293, "torch-tensor-fmin"]], "torch.Tensor.floor": [[288, "torch-tensor-floor"]], "torch.Tensor.exponential_": [[276, "torch-tensor-exponential"]], "torch.Tensor.div": [[253, "torch-tensor-div"]], "torch.Tensor.float": [[285, "torch-tensor-float"]], "torch.Tensor.floor_": [[289, "torch-tensor-floor"]], "torch.Tensor.fmax": [[292, "torch-tensor-fmax"]], "torch.Tensor.floor_divide": [[290, "torch-tensor-floor-divide"]], "torch.Tensor.diagonal": [[246, "torch-tensor-diagonal"]], "torch.Tensor.diagflat": [[245, "torch-tensor-diagflat"]], "torch.Tensor.erfc_": [[267, "torch-tensor-erfc"]], "torch.Tensor.div_": [[254, "torch-tensor-div"]], "torch.Tensor.exp": [[270, "torch-tensor-exp"]], "torch.Tensor.fix_": [[280, "torch-tensor-fix"]], "torch.Tensor.element_size": [[260, "torch-tensor-element-size"]], "torch.Tensor.expand_as": [[273, "torch-tensor-expand-as"]], "torch.Tensor.fill_": [[277, "torch-tensor-fill"]], "torch.Tensor.diagonal_scatter": [[247, "torch-tensor-diagonal-scatter"]], "torch.Tensor.digamma": [[249, "torch-tensor-digamma"]], "torch.Tensor.dim": [[251, "torch-tensor-dim"]], "torch.Tensor.dot": [[257, "torch-tensor-dot"]], "torch.Tensor.fill_diagonal_": [[278, "torch-tensor-fill-diagonal"]], "torch.Tensor.erfinv_": [[269, "torch-tensor-erfinv"]], "torch.Tensor.flipud": [[284, "torch-tensor-flipud"]], "torch.Tensor.double": [[258, "torch-tensor-double"]], "torch.Tensor.erfc": [[266, "torch-tensor-erfc"]], "torch.Tensor.floor_divide_": [[291, "torch-tensor-floor-divide"]], "torch.Tensor.expand": [[272, "torch-tensor-expand"]], "torch.Tensor.fliplr": [[283, "torch-tensor-fliplr"]], "torch.Tensor.dist": [[252, "torch-tensor-dist"]], "torch.Tensor.exp_": [[271, "torch-tensor-exp"]], "torch.Tensor.erf_": [[265, "torch-tensor-erf"]], "torch.Tensor.eq_": [[262, "torch-tensor-eq"]], "torch.Tensor.erfinv": [[268, "torch-tensor-erfinv"]], "torch.Tensor.eq": [[261, "torch-tensor-eq"]], "torch.Tensor.divide": [[255, "torch-tensor-divide"]], "torch.Tensor.equal": [[263, "torch-tensor-equal"]], "torch.Tensor.erf": [[264, "torch-tensor-erf"]], "torch.Tensor.fix": [[279, "torch-tensor-fix"]], "torch.Tensor.digamma_": [[250, "torch-tensor-digamma"]], "torch.Tensor.diff": [[248, "torch-tensor-diff"]], "torch.Tensor.cholesky_solve": [[202, "torch-tensor-cholesky-solve"]], "torch.Tensor.chalf": [[198, "torch-tensor-chalf"]], "torch.Tensor.cumprod_": [[232, "torch-tensor-cumprod"]], "torch.Tensor.cummin": [[230, "torch-tensor-cummin"]], "torch.Tensor.clamp": [[204, "torch-tensor-clamp"]], "torch.Tensor.cos_": [[220, "torch-tensor-cos"]], "torch.Tensor.ceil_": [[196, "torch-tensor-ceil"]], "torch.Tensor.cosh": [[221, "torch-tensor-cosh"]], "torch.Tensor.crow_indices": [[227, "torch-tensor-crow-indices"]], "torch.Tensor.clone": [[208, "torch-tensor-clone"]], "torch.Tensor.copy_": [[215, "torch-tensor-copy"]], "torch.Tensor.cross": [[226, "torch-tensor-cross"]], "torch.Tensor.cumprod": [[231, "torch-tensor-cumprod"]], "torch.Tensor.conj_physical": [[212, "torch-tensor-conj-physical"]], "torch.Tensor.cos": [[219, "torch-tensor-cos"]], "torch.Tensor.data_ptr": [[235, "torch-tensor-data-ptr"]], "torch.Tensor.cfloat": [[197, "torch-tensor-cfloat"]], "torch.Tensor.cpu": [[225, "torch-tensor-cpu"]], "torch.Tensor.diag": [[243, "torch-tensor-diag"]], "torch.Tensor.col_indices": [[210, "torch-tensor-col-indices"]], "torch.Tensor.det": [[239, "torch-tensor-det"]], "torch.Tensor.clip_": [[207, "torch-tensor-clip"]], "torch.Tensor.detach_": [[241, "torch-tensor-detach"]], "torch.Tensor.device": [[242, "torch-tensor-device"]], "torch.Tensor.copysign_": [[217, "torch-tensor-copysign"]], "torch.Tensor.cholesky": [[200, "torch-tensor-cholesky"]], "torch.Tensor.char": [[199, "torch-tensor-char"]], "torch.Tensor.count_nonzero": [[223, "torch-tensor-count-nonzero"]], "torch.Tensor.contiguous": [[214, "torch-tensor-contiguous"]], "torch.Tensor.cosh_": [[222, "torch-tensor-cosh"]], "torch.Tensor.clamp_": [[205, "torch-tensor-clamp"]], "torch.Tensor.cholesky_inverse": [[201, "torch-tensor-cholesky-inverse"]], "torch.Tensor.deg2rad": [[236, "torch-tensor-deg2rad"]], "torch.Tensor.conj": [[211, "torch-tensor-conj"]], "torch.Tensor.cumsum_": [[234, "torch-tensor-cumsum"]], "torch.Tensor.cuda": [[228, "torch-tensor-cuda"]], "torch.Tensor.cov": [[224, "torch-tensor-cov"]], "torch.Tensor.cumsum": [[233, "torch-tensor-cumsum"]], "torch.Tensor.conj_physical_": [[213, "torch-tensor-conj-physical"]], "torch.Tensor.detach": [[240, "torch-tensor-detach"]], "torch.Tensor.dequantize": [[238, "torch-tensor-dequantize"]], "torch.Tensor.dense_dim": [[237, "torch-tensor-dense-dim"]], "torch.Tensor.clip": [[206, "torch-tensor-clip"]], "torch.Tensor.diag_embed": [[244, "torch-tensor-diag-embed"]], "torch.Tensor.chunk": [[203, "torch-tensor-chunk"]], "torch.Tensor.corrcoef": [[218, "torch-tensor-corrcoef"]], "torch.Tensor.cummax": [[229, "torch-tensor-cummax"]], "torch.Tensor.copysign": [[216, "torch-tensor-copysign"]], "torch.Tensor.coalesce": [[209, "torch-tensor-coalesce"]], "torch.Tensor.arcsinh_": [[146, "torch-tensor-arcsinh"]], "torch.Tensor.angle": [[136, "torch-tensor-angle"]], "torch.Tensor.arccos": [[139, "torch-tensor-arccos"]], "torch.Tensor.arcsinh": [[145, "torch-tensor-arcsinh"]], "torch.Tensor.acos_": [[113, "torch-tensor-acos"]], "torch.Tensor.addbmm": [[118, "torch-tensor-addbmm"]], "torch.Tensor.adjoint": [[130, "torch-tensor-adjoint"]], "torch.Tensor.acos": [[112, "torch-tensor-acos"]], "torch.Tensor.aminmax": [[135, "torch-tensor-aminmax"]], "torch.Tensor.arccosh": [[141, "torch-tensor-arccosh"]], "torch.Tensor.arcsin_": [[144, "torch-tensor-arcsin"]], "torch.Tensor.absolute": [[110, "torch-tensor-absolute"]], "torch.Tensor.arccos_": [[140, "torch-tensor-arccos"]], "Generator": [[107, "generator"]], "torch.Tensor.addcmul_": [[123, "torch-tensor-addcmul"]], "torch.Tensor.arccosh_": [[142, "torch-tensor-arccosh"]], "torch.Tensor.add": [[116, "torch-tensor-add"]], "FXE0014:find-opschema-matched-symbolic-function": [[100, "fxe0014-find-opschema-matched-symbolic-function"]], "torch.Tensor.abs_": [[109, "torch-tensor-abs"]], "torch.Tensor.addcmul": [[122, "torch-tensor-addcmul"]], "torch.Tensor.all": [[131, "torch-tensor-all"]], "torch.Tensor.addmv_": [[127, "torch-tensor-addmv"]], "FXE0012:unsupported-fx-node-analysis": [[98, "fxe0012-unsupported-fx-node-analysis"]], "torch.Tensor.amin": [[134, "torch-tensor-amin"]], "torch.Tensor.apply_": [[138, "torch-tensor-apply"]], "torch.Tensor.addcdiv_": [[121, "torch-tensor-addcdiv"]], "torch.Tensor.addcdiv": [[120, "torch-tensor-addcdiv"]], "FXE0013:op-level-debugging": [[99, "fxe0013-op-level-debugging"]], "torch.Tensor.acosh_": [[115, "torch-tensor-acosh"]], "FXE0016:find-operator-overloads-in-onnx-registry": [[102, "fxe0016-find-operator-overloads-in-onnx-registry"]], "torch.Tensor.addmv": [[126, "torch-tensor-addmv"]], "torch.Tensor.arcsin": [[143, "torch-tensor-arcsin"]], "torch.Tensor.acosh": [[114, "torch-tensor-acosh"]], "torch.Tensor.absolute_": [[111, "torch-tensor-absolute"]], "torch.Tensor.allclose": [[132, "torch-tensor-allclose"]], "POE0004:operator-supported-in-newer-opset-version": [[106, "poe0004-operator-supported-in-newer-opset-version"]], "POE0002:missing-custom-symbolic-function": [[104, "poe0002-missing-custom-symbolic-function"]], "torch.Tensor.addbmm_": [[119, "torch-tensor-addbmm"]], "torch.Tensor.addmm": [[124, "torch-tensor-addmm"]], "torch.Tensor.addr": [[128, "torch-tensor-addr"]], "torch.Tensor.addmm_": [[125, "torch-tensor-addmm"]], "torch.Tensor.amax": [[133, "torch-tensor-amax"]], "torch.Tensor.abs": [[108, "torch-tensor-abs"]], "POE0003:missing-standard-symbolic-function": [[105, "poe0003-missing-standard-symbolic-function"]], "torch.Tensor.add_": [[117, "torch-tensor-add"]], "POE0001:node-missing-onnx-shape-inference": [[103, "poe0001-node-missing-onnx-shape-inference"]], "FXE0015:fx-node-insert-type-promotion": [[101, "fxe0015-fx-node-insert-type-promotion"]], "torch.Tensor.addr_": [[129, "torch-tensor-addr"]], "torch.Tensor.any": [[137, "torch-tensor-any"]], "torch.Tensor.arctan_": [[150, "torch-tensor-arctan"]], "torch.Tensor.atan_": [[166, "torch-tensor-atan"]], "torch.Tensor.bitwise_xor_": [[187, "torch-tensor-bitwise-xor"]], "torch.Tensor.argsort": [[155, "torch-tensor-argsort"]], "torch.Tensor.baddbmm_": [[171, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_right_shift_": [[185, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.bool": [[189, "torch-tensor-bool"]], "torch.Tensor.bitwise_and_": [[177, "torch-tensor-bitwise-and"]], "torch.Tensor.atanh_": [[168, "torch-tensor-atanh"]], "torch.Tensor.arctanh_": [[152, "torch-tensor-arctanh"]], "torch.Tensor.arctan2": [[148, "torch-tensor-arctan2"]], "torch.Tensor.bitwise_xor": [[186, "torch-tensor-bitwise-xor"]], "torch.Tensor.ccol_indices": [[193, "torch-tensor-ccol-indices"]], "torch.Tensor.asin": [[159, "torch-tensor-asin"]], "torch.Tensor.bernoulli_": [[173, "torch-tensor-bernoulli"]], "torch.Tensor.bmm": [[188, "torch-tensor-bmm"]], "torch.Tensor.atanh": [[167, "torch-tensor-atanh"]], "torch.Tensor.argmax": [[153, "torch-tensor-argmax"]], "torch.Tensor.bfloat16": [[174, "torch-tensor-bfloat16"]], "torch.Tensor.bitwise_or_": [[183, "torch-tensor-bitwise-or"]], "torch.Tensor.atan2": [[164, "torch-tensor-atan2"]], "torch.Tensor.bincount": [[175, "torch-tensor-bincount"]], "torch.Tensor.bitwise_not": [[180, "torch-tensor-bitwise-not"]], "torch.Tensor.as_subclass": [[158, "torch-tensor-as-subclass"]], "torch.Tensor.backward": [[169, "torch-tensor-backward"]], "torch.Tensor.broadcast_to": [[190, "torch-tensor-broadcast-to"]], "torch.Tensor.bitwise_right_shift": [[184, "torch-tensor-bitwise-right-shift"]], "torch.Tensor.cdouble": [[194, "torch-tensor-cdouble"]], "torch.Tensor.asin_": [[160, "torch-tensor-asin"]], "torch.Tensor.bitwise_left_shift_": [[179, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bernoulli": [[172, "torch-tensor-bernoulli"]], "torch.Tensor.arctan": [[147, "torch-tensor-arctan"]], "torch.Tensor.cauchy_": [[192, "torch-tensor-cauchy"]], "torch.Tensor.atan2_": [[165, "torch-tensor-atan2"]], "torch.Tensor.argmin": [[154, "torch-tensor-argmin"]], "torch.Tensor.bitwise_left_shift": [[178, "torch-tensor-bitwise-left-shift"]], "torch.Tensor.bitwise_and": [[176, "torch-tensor-bitwise-and"]], "torch.Tensor.atan": [[163, "torch-tensor-atan"]], "torch.Tensor.asinh_": [[162, "torch-tensor-asinh"]], "torch.Tensor.argwhere": [[156, "torch-tensor-argwhere"]], "torch.Tensor.bitwise_not_": [[181, "torch-tensor-bitwise-not"]], "torch.Tensor.byte": [[191, "torch-tensor-byte"]], "torch.Tensor.arctan2_": [[149, "torch-tensor-arctan2"]], "torch.Tensor.baddbmm": [[170, "torch-tensor-baddbmm"]], "torch.Tensor.bitwise_or": [[182, "torch-tensor-bitwise-or"]], "torch.Tensor.ceil": [[195, "torch-tensor-ceil"]], "torch.Tensor.arctanh": [[151, "torch-tensor-arctanh"]], "torch.Tensor.as_strided": [[157, "torch-tensor-as-strided"]], "torch.Tensor.asinh": [[161, "torch-tensor-asinh"]], "torch.Tensor.index_add": [[330, "torch-tensor-index-add"]], "torch.Tensor.index_reduce_": [[339, "torch-tensor-index-reduce"]], "torch.Tensor.index_add_": [[331, "torch-tensor-index-add"]], "torch.Tensor.index_copy": [[332, "torch-tensor-index-copy"]], "torch.Tensor.frexp": [[298, "torch-tensor-frexp"]], "torch.Tensor.histc": [[318, "torch-tensor-histc"]], "torch.Tensor.i0_": [[324, "torch-tensor-i0"]], "torch.Tensor.gt_": [[314, "torch-tensor-gt"]], "torch.Tensor.index_put_": [[337, "torch-tensor-index-put"]], "torch.Tensor.igammac_": [[328, "torch-tensor-igammac"]], "torch.Tensor.hsplit": [[320, "torch-tensor-hsplit"]], "torch.Tensor.ge_": [[303, "torch-tensor-ge"]], "torch.Tensor.index_reduce": [[338, "torch-tensor-index-reduce"]], "torch.Tensor.index_put": [[336, "torch-tensor-index-put"]], "torch.Tensor.i0": [[323, "torch-tensor-i0"]], "torch.Tensor.imag": [[329, "torch-tensor-imag"]], "torch.Tensor.get_device": [[307, "torch-tensor-get-device"]], "torch.Tensor.ge": [[302, "torch-tensor-ge"]], "torch.Tensor.greater_equal": [[311, "torch-tensor-greater-equal"]], "torch.Tensor.ger": [[306, "torch-tensor-ger"]], "torch.Tensor.index_copy_": [[333, "torch-tensor-index-copy"]], "torch.Tensor.frac_": [[297, "torch-tensor-frac"]], "torch.Tensor.fmod": [[294, "torch-tensor-fmod"]], "torch.Tensor.gt": [[313, "torch-tensor-gt"]], "torch.Tensor.half": [[315, "torch-tensor-half"]], "torch.Tensor.gcd": [[300, "torch-tensor-gcd"]], "torch.Tensor.indices": [[341, "torch-tensor-indices"]], "torch.Tensor.grad": [[308, "torch-tensor-grad"]], "torch.Tensor.hypot_": [[322, "torch-tensor-hypot"]], "torch.Tensor.index_fill": [[334, "torch-tensor-index-fill"]], "torch.Tensor.index_fill_": [[335, "torch-tensor-index-fill"]], "torch.Tensor.gcd_": [[301, "torch-tensor-gcd"]], "torch.Tensor.greater_equal_": [[312, "torch-tensor-greater-equal"]], "torch.Tensor.heaviside": [[317, "torch-tensor-heaviside"]], "torch.Tensor.igamma": [[325, "torch-tensor-igamma"]], "torch.Tensor.igamma_": [[326, "torch-tensor-igamma"]], "torch.Tensor.hardshrink": [[316, "torch-tensor-hardshrink"]], "torch.Tensor.geometric_": [[304, "torch-tensor-geometric"]], "torch.Tensor.fmod_": [[295, "torch-tensor-fmod"]], "torch.Tensor.greater": [[309, "torch-tensor-greater"]], "torch.Tensor.histogram": [[319, "torch-tensor-histogram"]], "torch.Tensor.igammac": [[327, "torch-tensor-igammac"]], "torch.Tensor.inner": [[342, "torch-tensor-inner"]], "torch.Tensor.greater_": [[310, "torch-tensor-greater"]], "torch.Tensor.hypot": [[321, "torch-tensor-hypot"]], "torch.Tensor.index_select": [[340, "torch-tensor-index-select"]], "torch.Tensor.geqrf": [[305, "torch-tensor-geqrf"]], "torch.Tensor.frac": [[296, "torch-tensor-frac"]], "torch.Tensor.gather": [[299, "torch-tensor-gather"]], "torch.Tensor.isneginf": [[366, "torch-tensor-isneginf"]], "torch.Tensor.kthvalue": [[372, "torch-tensor-kthvalue"]], "torch.Tensor.isinf": [[364, "torch-tensor-isinf"]], "torch.Tensor.is_complex": [[347, "torch-tensor-is-complex"]], "torch.Tensor.is_conj": [[348, "torch-tensor-is-conj"]], "torch.Tensor.is_floating_point": [[351, "torch-tensor-is-floating-point"]], "torch.Tensor.is_inference": [[352, "torch-tensor-is-inference"]], "torch.Tensor.log": [[387, "torch-tensor-log"]], "torch.Tensor.int": [[343, "torch-tensor-int"]], "torch.Tensor.lerp_": [[380, "torch-tensor-lerp"]], "torch.Tensor.less_": [[382, "torch-tensor-less"]], "torch.Tensor.is_contiguous": [[349, "torch-tensor-is-contiguous"]], "torch.Tensor.inverse": [[345, "torch-tensor-inverse"]], "torch.Tensor.less_equal": [[383, "torch-tensor-less-equal"]], "torch.Tensor.log10_": [[389, "torch-tensor-log10"]], "torch.Tensor.le_": [[378, "torch-tensor-le"]], "torch.Tensor.le": [[377, "torch-tensor-le"]], "torch.Tensor.less_equal_": [[384, "torch-tensor-less-equal"]], "torch.Tensor.lgamma": [[385, "torch-tensor-lgamma"]], "torch.Tensor.is_pinned": [[355, "torch-tensor-is-pinned"]], "torch.Tensor.isnan": [[365, "torch-tensor-isnan"]], "torch.Tensor.isfinite": [[363, "torch-tensor-isfinite"]], "torch.Tensor.lgamma_": [[386, "torch-tensor-lgamma"]], "torch.Tensor.ldexp_": [[376, "torch-tensor-ldexp"]], "torch.Tensor.itemsize": [[371, "torch-tensor-itemsize"]], "torch.Tensor.is_cuda": [[350, "torch-tensor-is-cuda"]], "torch.Tensor.int_repr": [[344, "torch-tensor-int-repr"]], "torch.Tensor.lerp": [[379, "torch-tensor-lerp"]], "torch.Tensor.is_signed": [[359, "torch-tensor-is-signed"]], "torch.Tensor.is_coalesced": [[346, "torch-tensor-is-coalesced"]], "torch.Tensor.is_sparse_csr": [[361, "torch-tensor-is-sparse-csr"]], "torch.Tensor.is_shared": [[358, "torch-tensor-is-shared"]], "torch.Tensor.is_set_to": [[357, "torch-tensor-is-set-to"]], "torch.Tensor.is_quantized": [[356, "torch-tensor-is-quantized"]], "torch.Tensor.isreal": [[368, "torch-tensor-isreal"]], "torch.Tensor.lcm_": [[374, "torch-tensor-lcm"]], "torch.Tensor.isclose": [[362, "torch-tensor-isclose"]], "torch.Tensor.is_sparse": [[360, "torch-tensor-is-sparse"]], "torch.Tensor.is_leaf": [[353, "torch-tensor-is-leaf"]], "torch.Tensor.log10": [[388, "torch-tensor-log10"]], "torch.Tensor.istft": [[369, "torch-tensor-istft"]], "torch.Tensor.ldexp": [[375, "torch-tensor-ldexp"]], "torch.Tensor.log1p_": [[391, "torch-tensor-log1p"]], "torch.Tensor.lcm": [[373, "torch-tensor-lcm"]], "torch.Tensor.log1p": [[390, "torch-tensor-log1p"]], "torch.Tensor.item": [[370, "torch-tensor-item"]], "torch.Tensor.isposinf": [[367, "torch-tensor-isposinf"]], "torch.Tensor.less": [[381, "torch-tensor-less"]], "torch.Tensor.is_meta": [[354, "torch-tensor-is-meta"]], "torch.signal.windows.general_hamming": [[1800, "torch-signal-windows-general-hamming"]], "torch.set_flush_denormal": [[1784, "torch-set-flush-denormal"]], "torch.seed": [[1776, "torch-seed"]], "torch.set_default_dtype": [[1780, "torch-set-default-dtype"]], "torch.set_num_threads": [[1787, "torch-set-num-threads"]], "set_grad_enabled": [[1785, "set-grad-enabled"]], "torch.sgn": [[1791, "torch-sgn"]], "torch.sigmoid": [[1792, "torch-sigmoid"]], "torch.signal.windows.hamming": [[1801, "torch-signal-windows-hamming"]], "torch.rsqrt": [[1770, "torch-rsqrt"]], "torch.round": [[1768, "torch-round"]], "torch.signal.windows.nuttall": [[1804, "torch-signal-windows-nuttall"]], "torch.sign": [[1793, "torch-sign"]], "torch.signal.windows.general_cosine": [[1799, "torch-signal-windows-general-cosine"]], "torch.set_printoptions": [[1788, "torch-set-printoptions"]], "torch.slogdet": [[1810, "torch-slogdet"]], "torch.set_warn_always": [[1790, "torch-set-warn-always"]], "torch.save": [[1771, "torch-save"]], "torch.select": [[1777, "torch-select"]], "torch.row_stack": [[1769, "torch-row-stack"]], "torch.result_type": [[1765, "torch-result-type"]], "torch.set_num_interop_threads": [[1786, "torch-set-num-interop-threads"]], "torch.sin": [[1806, "torch-sin"]], "torch.signbit": [[1805, "torch-signbit"]], "torch.signal.windows.cosine": [[1796, "torch-signal-windows-cosine"]], "torch.softmax": [[1812, "torch-softmax"]], "torch.set_rng_state": [[1789, "torch-set-rng-state"]], "torch.signal.windows.exponential": [[1797, "torch-signal-windows-exponential"]], "torch.sinc": [[1807, "torch-sinc"]], "torch.roll": [[1766, "torch-roll"]], "torch.set_default_tensor_type": [[1781, "torch-set-default-tensor-type"]], "torch.signal.windows.blackman": [[1795, "torch-signal-windows-blackman"]], "torch.slice_scatter": [[1809, "torch-slice-scatter"]], "torch.signal.windows.kaiser": [[1803, "torch-signal-windows-kaiser"]], "torch.set_default_device": [[1779, "torch-set-default-device"]], "torch.signal.windows.hann": [[1802, "torch-signal-windows-hann"]], "torch.resolve_neg": [[1764, "torch-resolve-neg"]], "torch.scatter": [[1772, "torch-scatter"]], "torch.select_scatter": [[1778, "torch-select-scatter"]], "torch.signal.windows.bartlett": [[1794, "torch-signal-windows-bartlett"]], "torch.searchsorted": [[1775, "torch-searchsorted"]], "torch.scatter_add": [[1773, "torch-scatter-add"]], "torch.scatter_reduce": [[1774, "torch-scatter-reduce"]], "torch.rot90": [[1767, "torch-rot90"]], "torch.sinh": [[1808, "torch-sinh"]], "torch.signal.windows.gaussian": [[1798, "torch-signal-windows-gaussian"]], "torch.smm": [[1811, "torch-smm"]], "torch.set_deterministic_debug_mode": [[1782, "torch-set-deterministic-debug-mode"]], "torch.set_float32_matmul_precision": [[1783, "torch-set-float32-matmul-precision"]], "torch.transpose": [[1860, "torch-transpose"]], "torch.tanh": [[1853, "torch-tanh"]], "torch.sym_min": [[1847, "torch-sym-min"]], "torch.sym_int": [[1845, "torch-sym-int"]], "torch.take": [[1850, "torch-take"]], "torch.topk": [[1858, "torch-topk"]], "torch.sym_not": [[1848, "torch-sym-not"]], "torch.split": [[1828, "torch-split"]], "torch.sym_float": [[1844, "torch-sym-float"]], "check_sparse_tensor_invariants": [[1815, "check-sparse-tensor-invariants"]], "torch.tensordot": [[1856, "torch-tensordot"]], "torch.squeeze": [[1831, "torch-squeeze"]], "torch.sparse.sampled_addmm": [[1818, "torch-sparse-sampled-addmm"]], "torch.sparse_csr_tensor": [[1827, "torch-sparse-csr-tensor"]], "torch.sparse.sum": [[1821, "torch-sparse-sum"]], "torch.sspaddmm": [[1832, "torch-sspaddmm"]], "torch.sparse.spdiags": [[1820, "torch-sparse-spdiags"]], "torch.sparse.mm": [[1817, "torch-sparse-mm"]], "torch.sparse.softmax": [[1819, "torch-sparse-softmax"]], "torch.square": [[1830, "torch-square"]], "torch.sqrt": [[1829, "torch-sqrt"]], "torch.t": [[1849, "torch-t"]], "torch.sort": [[1813, "torch-sort"]], "torch.swapdims": [[1843, "torch-swapdims"]], "torch.sparse.log_softmax": [[1816, "torch-sparse-log-softmax"]], "torch.tensor": [[1854, "torch-tensor"]], "torch.stack": [[1833, "torch-stack"]], "torch.sparse_csc_tensor": [[1826, "torch-sparse-csc-tensor"]], "torch.svd": [[1840, "torch-svd"]], "torch.std_mean": [[1835, "torch-std-mean"]], "torch.trapezoid": [[1861, "torch-trapezoid"]], "torch.trace": [[1859, "torch-trace"]], "torch.sub": [[1837, "torch-sub"]], "torch.swapaxes": [[1842, "torch-swapaxes"]], "torch.tile": [[1857, "torch-tile"]], "torch.sparse_coo_tensor": [[1825, "torch-sparse-coo-tensor"]], "torch.std": [[1834, "torch-std"]], "torch.sparse_bsr_tensor": [[1823, "torch-sparse-bsr-tensor"]], "torch.sparse_compressed_tensor": [[1824, "torch-sparse-compressed-tensor"]], "torch.subtract": [[1838, "torch-subtract"]], "torch.sym_max": [[1846, "torch-sym-max"]], "torch.svd_lowrank": [[1841, "torch-svd-lowrank"]], "torch.sum": [[1839, "torch-sum"]], "torch.sparse_bsc_tensor": [[1822, "torch-sparse-bsc-tensor"]], "torch.tensor_split": [[1855, "torch-tensor-split"]], "torch.take_along_dim": [[1851, "torch-take-along-dim"]], "torch.sparse.addmm": [[1814, "torch-sparse-addmm"]], "torch.tan": [[1852, "torch-tan"]], "torch.stft": [[1836, "torch-stft"]], "torch.quantized_max_pool1d": [[1744, "torch-quantized-max-pool1d"]], "torch.repeat_interleave": [[1761, "torch-repeat-interleave"]], "torch.pow": [[1736, "torch-pow"]], "torch.polar": [[1733, "torch-polar"]], "torch.remainder": [[1759, "torch-remainder"]], "torch.rand_like": [[1749, "torch-rand-like"]], "torch.randint": [[1750, "torch-randint"]], "SequentialLR": [[1724, "sequentiallr"]], "torch.positive": [[1735, "torch-positive"]], "torch.ravel": [[1756, "torch-ravel"]], "LinearLR": [[1718, "linearlr"]], "MultiStepLR": [[1719, "multisteplr"]], "OneCycleLR": [[1721, "onecyclelr"]], "torch.range": [[1755, "torch-range"]], "torch.qr": [[1739, "torch-qr"]], "torch.randn": [[1752, "torch-randn"]], "torch.resolve_conj": [[1763, "torch-resolve-conj"]], "torch.randint_like": [[1751, "torch-randint-like"]], "torch.reciprocal": [[1758, "torch-reciprocal"]], "torch.randn_like": [[1753, "torch-randn-like"]], "torch.outer": [[1728, "torch-outer"]], "ExponentialLR": [[1716, "exponentiallr"]], "torch.rand": [[1748, "torch-rand"]], "torch.quantized_max_pool2d": [[1745, "torch-quantized-max-pool2d"]], "CyclicLR": [[1715, "cycliclr"]], "torch.ormqr": [[1727, "torch-ormqr"]], "torch.pca_lowrank": [[1729, "torch-pca-lowrank"]], "torch.polygamma": [[1734, "torch-polygamma"]], "torch.pinverse": [[1731, "torch-pinverse"]], "torch.prod": [[1737, "torch-prod"]], "torch.promote_types": [[1738, "torch-promote-types"]], "torch.quantile": [[1740, "torch-quantile"]], "torch.permute": [[1730, "torch-permute"]], "PolynomialLR": [[1722, "polynomiallr"]], "torch.quantized_batch_norm": [[1743, "torch-quantized-batch-norm"]], "SobolEngine": [[1746, "sobolengine"]], "torch.orgqr": [[1726, "torch-orgqr"]], "torch.rad2deg": [[1747, "torch-rad2deg"]], "torch.renorm": [[1760, "torch-renorm"]], "MultiplicativeLR": [[1720, "multiplicativelr"]], "ReduceLROnPlateau": [[1723, "reducelronplateau"]], "torch.quantize_per_tensor": [[1742, "torch-quantize-per-tensor"]], "torch.quantize_per_channel": [[1741, "torch-quantize-per-channel"]], "torch.real": [[1757, "torch-real"]], "torch.poisson": [[1732, "torch-poisson"]], "LambdaLR": [[1717, "lambdalr"]], "torch.reshape": [[1762, "torch-reshape"]], "torch.randperm": [[1754, "torch-randperm"]], "StepLR": [[1725, "steplr"]], "torch.nn.functional.softmax": [[1608, "torch-nn-functional-softmax"]], "torch.nn.functional.rrelu": [[1600, "torch-nn-functional-rrelu"]], "torch.nn.functional.linear": [[1569, "torch-nn-functional-linear"]], "torch.nn.functional.tanh": [[1613, "torch-nn-functional-tanh"]], "torch.nn.functional.max_unpool3d": [[1581, "torch-nn-functional-max-unpool3d"]], "torch.nn.functional.prelu": [[1596, "torch-nn-functional-prelu"]], "torch.nn.functional.softsign": [[1612, "torch-nn-functional-softsign"]], "torch.nn.functional.lp_pool1d": [[1573, "torch-nn-functional-lp-pool1d"]], "torch.nn.functional.max_pool2d": [[1577, "torch-nn-functional-max-pool2d"]], "torch.nn.functional.relu6": [[1598, "torch-nn-functional-relu6"]], "torch.nn.functional.leaky_relu_": [[1568, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.max_unpool1d": [[1579, "torch-nn-functional-max-unpool1d"]], "torch.nn.functional.selu": [[1603, "torch-nn-functional-selu"]], "torch.nn.functional.local_response_norm": [[1570, "torch-nn-functional-local-response-norm"]], "torch.nn.functional.normalize": [[1588, "torch-nn-functional-normalize"]], "torch.nn.functional.relu": [[1597, "torch-nn-functional-relu"]], "torch.nn.functional.multilabel_soft_margin_loss": [[1586, "torch-nn-functional-multilabel-soft-margin-loss"]], "torch.nn.functional.smooth_l1_loss": [[1606, "torch-nn-functional-smooth-l1-loss"]], "torch.nn.functional.softmin": [[1609, "torch-nn-functional-softmin"]], "torch.nn.functional.max_pool3d": [[1578, "torch-nn-functional-max-pool3d"]], "torch.nn.functional.pdist": [[1592, "torch-nn-functional-pdist"]], "torch.nn.functional.relu_": [[1599, "torch-nn-functional-relu"]], "torch.nn.functional.pixel_unshuffle": [[1594, "torch-nn-functional-pixel-unshuffle"]], "torch.nn.functional.mse_loss": [[1583, "torch-nn-functional-mse-loss"]], "torch.nn.functional.rrelu_": [[1601, "torch-nn-functional-rrelu"]], "torch.nn.functional.multi_margin_loss": [[1584, "torch-nn-functional-multi-margin-loss"]], "torch.nn.functional.scaled_dot_product_attention": [[1602, "torch-nn-functional-scaled-dot-product-attention"]], "torch.nn.functional.log_softmax": [[1571, "torch-nn-functional-log-softmax"]], "torch.nn.functional.tanhshrink": [[1614, "torch-nn-functional-tanhshrink"]], "torch.nn.functional.max_unpool2d": [[1580, "torch-nn-functional-max-unpool2d"]], "torch.nn.functional.poisson_nll_loss": [[1595, "torch-nn-functional-poisson-nll-loss"]], "torch.nn.functional.one_hot": [[1589, "torch-nn-functional-one-hot"]], "torch.nn.functional.mish": [[1582, "torch-nn-functional-mish"]], "torch.nn.functional.logsigmoid": [[1572, "torch-nn-functional-logsigmoid"]], "torch.nn.functional.softplus": [[1610, "torch-nn-functional-softplus"]], "torch.nn.functional.pixel_shuffle": [[1593, "torch-nn-functional-pixel-shuffle"]], "torch.nn.functional.multilabel_margin_loss": [[1585, "torch-nn-functional-multilabel-margin-loss"]], "torch.nn.functional.threshold": [[1615, "torch-nn-functional-threshold"]], "torch.nn.functional.max_pool1d": [[1576, "torch-nn-functional-max-pool1d"]], "torch.nn.functional.threshold_": [[1616, "torch-nn-functional-threshold"]], "torch.nn.functional.nll_loss": [[1587, "torch-nn-functional-nll-loss"]], "torch.nn.functional.sigmoid": [[1604, "torch-nn-functional-sigmoid"]], "torch.nn.functional.margin_ranking_loss": [[1575, "torch-nn-functional-margin-ranking-loss"]], "torch.nn.functional.softshrink": [[1611, "torch-nn-functional-softshrink"]], "torch.nn.functional.pad": [[1590, "torch-nn-functional-pad"]], "torch.nn.functional.pairwise_distance": [[1591, "torch-nn-functional-pairwise-distance"]], "torch.nn.functional.soft_margin_loss": [[1607, "torch-nn-functional-soft-margin-loss"]], "torch.nn.functional.silu": [[1605, "torch-nn-functional-silu"]], "torch.nn.functional.lp_pool2d": [[1574, "torch-nn-functional-lp-pool2d"]], "torch.nn.functional.unfold": [[1620, "torch-nn-functional-unfold"]], "torch.nn.utils.parametrize.remove_parametrizations": [[1646, "torch-nn-utils-parametrize-remove-parametrizations"]], "L1Unstructured": [[1650, "l1unstructured"]], "torch.nn.utils.prune.ln_structured": [[1660, "torch-nn-utils-prune-ln-structured"]], "torch.nn.utils.parametrize.cached": [[1643, "torch-nn-utils-parametrize-cached"]], "torch.nn.utils.parametrize.is_parametrized": [[1644, "torch-nn-utils-parametrize-is-parametrized"]], "torch.nn.utils.parametrizations.orthogonal": [[1640, "torch-nn-utils-parametrizations-orthogonal"]], "LnStructured": [[1651, "lnstructured"]], "BasePruningMethod": [[1647, "basepruningmethod"]], "torch.nn.utils.prune.remove": [[1663, "torch-nn-utils-prune-remove"]], "torch.nn.modules.module.register_module_full_backward_hook": [[1629, "torch-nn-modules-module-register-module-full-backward-hook"]], "torch.nn.modules.module.register_module_forward_hook": [[1627, "torch-nn-modules-module-register-module-forward-hook"]], "RandomStructured": [[1653, "randomstructured"]], "torch.nn.functional.triplet_margin_loss": [[1618, "torch-nn-functional-triplet-margin-loss"]], "Parameter": [[1634, "parameter"]], "torch.nn.functional.triplet_margin_with_distance_loss": [[1619, "torch-nn-functional-triplet-margin-with-distance-loss"]], "torch.nn.functional.upsample_bilinear": [[1622, "torch-nn-functional-upsample-bilinear"]], "PruningContainer": [[1652, "pruningcontainer"]], "torch.nn.utils.clip_grad_norm_": [[1637, "torch-nn-utils-clip-grad-norm"]], "RandomUnstructured": [[1654, "randomunstructured"]], "torch.nn.utils.remove_weight_norm": [[1665, "torch-nn-utils-remove-weight-norm"]], "torch.nn.functional.upsample_nearest": [[1623, "torch-nn-functional-upsample-nearest"]], "torch.nn.utils.parameters_to_vector": [[1639, "torch-nn-utils-parameters-to-vector"]], "torch.nn.modules.module.register_module_buffer_registration_hook": [[1626, "torch-nn-modules-module-register-module-buffer-registration-hook"]], "torch.nn.functional.torch.nn.parallel.data_parallel": [[1617, "torch-nn-functional-torch-nn-parallel-data-parallel"]], "torch.nn.modules.module.register_module_module_registration_hook": [[1631, "torch-nn-modules-module-register-module-module-registration-hook"]], "torch.nn.utils.prune.random_structured": [[1661, "torch-nn-utils-prune-random-structured"]], "torch.nn.utils.remove_spectral_norm": [[1664, "torch-nn-utils-remove-spectral-norm"]], "torch.nn.utils.parametrize.register_parametrization": [[1645, "torch-nn-utils-parametrize-register-parametrization"]], "Identity": [[1649, "identity"], [1415, "identity"]], "torch.nn.utils.prune.is_pruned": [[1658, "torch-nn-utils-prune-is-pruned"]], "LazyModuleMixin": [[1624, "lazymodulemixin"]], "torch.nn.utils.prune.l1_unstructured": [[1659, "torch-nn-utils-prune-l1-unstructured"]], "torch.nn.utils.prune.random_unstructured": [[1662, "torch-nn-utils-prune-random-unstructured"]], "torch.nn.utils.parametrizations.spectral_norm": [[1641, "torch-nn-utils-parametrizations-spectral-norm"]], "torch.nn.utils.prune.identity": [[1657, "torch-nn-utils-prune-identity"]], "DistributedDataParallel": [[1633, "distributeddataparallel"], [1923, "distributeddataparallel"]], "torch.nn.modules.module.register_module_forward_pre_hook": [[1628, "torch-nn-modules-module-register-module-forward-pre-hook"]], "torch.nn.modules.module.register_module_backward_hook": [[1625, "torch-nn-modules-module-register-module-backward-hook"]], "ParametrizationList": [[1642, "parametrizationlist"]], "torch.nn.utils.prune.global_unstructured": [[1656, "torch-nn-utils-prune-global-unstructured"]], "torch.nn.functional.upsample": [[1621, "torch-nn-functional-upsample"]], "torch.nn.utils.clip_grad_value_": [[1638, "torch-nn-utils-clip-grad-value"]], "torch.nn.utils.prune.custom_from_mask": [[1655, "torch-nn-utils-prune-custom-from-mask"]], "UninitializedBuffer": [[1635, "uninitializedbuffer"]], "torch.nn.modules.module.register_module_full_backward_pre_hook": [[1630, "torch-nn-modules-module-register-module-full-backward-pre-hook"]], "UninitializedParameter": [[1636, "uninitializedparameter"]], "torch.nn.modules.module.register_module_parameter_registration_hook": [[1632, "torch-nn-modules-module-register-module-parameter-registration-hook"]], "CustomFromMask": [[1648, "customfrommask"]], "torch.overrides": [[1964, "torch-overrides"]], "Functions": [[1964, "functions"], [1898, "functions"], [1896, "functions"], [1937, "functions"], [1954, "functions"]], "torch": [[1961, "module-torch"]], "Tensors": [[1961, "tensors"]], "Creation Ops": [[1961, "creation-ops"]], "Indexing, Slicing, Joining, Mutating Ops": [[1961, "indexing-slicing-joining-mutating-ops"]], "Generators": [[1961, "generators"]], "Random sampling": [[1961, "random-sampling"]], "In-place random sampling": [[1961, "in-place-random-sampling"]], "Quasi-random sampling": [[1961, "quasi-random-sampling"]], "Serialization": [[1961, "serialization"], [31, "serialization"]], "Parallelism": [[1961, "parallelism"]], "Locally disabling gradient computation": [[1961, "locally-disabling-gradient-computation"], [1, "locally-disabling-gradient-computation"], [1919, "locally-disabling-gradient-computation"]], "Math operations": [[1961, "math-operations"]], "Pointwise Ops": [[1961, "pointwise-ops"]], "Reduction Ops": [[1961, "reduction-ops"]], "Comparison Ops": [[1961, "comparison-ops"]], "Spectral Ops": [[1961, "spectral-ops"]], "Other Operations": [[1961, "other-operations"]], "BLAS and LAPACK Operations": [[1961, "blas-and-lapack-operations"]], "Foreach Operations": [[1961, "foreach-operations"]], "Utilities": [[1961, "utilities"], [1915, "module-torch.nn.utils"]], "Symbolic Numbers": [[1961, "symbolic-numbers"]], "Optimizations": [[1961, "optimizations"], [21, "optimizations"]], "Operator Tags": [[1961, "operator-tags"]], "torch.ao.ns._numeric_suite": [[1962, "torch-ao-ns-numeric-suite"]], "torch.testing": [[1960, "module-torch.testing"]], "Type Info": [[1965, "type-info"]], "torch.finfo": [[1965, "torch-finfo"]], "torch.iinfo": [[1965, "torch-iinfo"]], "torch.utils": [[1966, "module-torch.utils"]], "torch.ao.ns._numeric_suite_fx": [[1963, "torch-ao-ns-numeric-suite-fx"]], "torch.ao.ns.fx.utils": [[1963, "torch-ao-ns-fx-utils"]], "TorchScript Language Reference": [[1898, "torchscript-language-reference"], [1899, "torchscript-language-reference"]], "Types": [[1898, "supported-type"], [1937, "types"]], "Unsupported Typing Constructs": [[1898, "unsupported-typing-constructs"], [1899, "unsupported-typing-constructs"]], "Default Types": [[1898, "default-types"]], "Optional Type Refinement": [[1898, "optional-type-refinement"]], "TorchScript Classes": [[1898, "id2"], [1896, "torchscript-classes"]], "TorchScript Enums": [[1898, "id4"]], "Named Tuples": [[1898, "named-tuples"]], "Iterables": [[1898, "iterables"]], "Expressions": [[1898, "expressions"], [1899, "expressions"]], "Literals": [[1898, "literals"], [1899, "literals"]], "List Construction": [[1898, "list-construction"]], "Tuple Construction": [[1898, "tuple-construction"]], "Dict Construction": [[1898, "dict-construction"]], "Variables": [[1898, "variables"], [1896, "variables"], [20, "variables"]], "Arithmetic Operators": [[1898, "arithmetic-operators"]], "Comparison Operators": [[1898, "comparison-operators"]], "Logical Operators": [[1898, "logical-operators"]], "Subscripts and Slicing": [[1898, "subscripts-and-slicing"]], "Function Calls": [[1898, "function-calls"]], "Method Calls": [[1898, "method-calls"]], "Ternary Expressions": [[1898, "ternary-expressions"]], "Casts": [[1898, "casts"]], "Accessing Module Parameters": [[1898, "accessing-module-parameters"]], "Statements": [[1898, "statements"]], "Simple Assignments": [[1898, "simple-assignments"]], "Pattern Matching Assignments": [[1898, "pattern-matching-assignments"]], "Print Statements": [[1898, "print-statements"]], "If Statements": [[1898, "if-statements"]], "While Loops": [[1898, "while-loops"]], "For loops with range": [[1898, "for-loops-with-range"]], "For loops over tuples": [[1898, "for-loops-over-tuples"]], "For loops over constant nn.ModuleList": [[1898, "for-loops-over-constant-nn-modulelist"]], "Break and Continue": [[1898, "break-and-continue"]], "Return": [[1898, "return"]], "Variable Resolution": [[1898, "variable-resolution"]], "Use of Python Values": [[1898, "use-of-python-values"]], "Attribute Lookup On Python Modules": [[1898, "attribute-lookup-on-python-modules"]], "Python-defined Constants": [[1898, "python-defined-constants"]], "Module Attributes": [[1898, "module-attributes"]], "torch.tril_indices": [[1865, "torch-tril-indices"]], "torch.trunc": [[1869, "torch-trunc"]], "torch.tril": [[1864, "torch-tril"]], "torch.zeros": [[1891, "torch-zeros"]], "torch.hub": [[1893, "torch-hub"]], "Publishing models": [[1893, "publishing-models"]], "How to implement an entrypoint?": [[1893, "how-to-implement-an-entrypoint"]], "Important Notice": [[1893, "important-notice"]], "Loading models from Hub": [[1893, "loading-models-from-hub"]], "Running a loaded model:": [[1893, "running-a-loaded-model"]], "Where are my downloaded models saved?": [[1893, "where-are-my-downloaded-models-saved"]], "Caching logic": [[1893, "caching-logic"]], "Known limitations:": [[1893, "known-limitations"]], "PyTorch documentation": [[1894, "pytorch-documentation"]], "Community": [[1894, null]], "Developer Notes": [[1894, null]], "torch.compile": [[1894, null], [21, "torch-compile"], [968, "torch-compile"]], "Language Bindings": [[1894, null]], "Python API": [[1894, null]], "Libraries": [[1894, null]], "Indices and tables": [[1894, "indices-and-tables"]], "torch.vdot": [[1883, "torch-vdot"]], "torch.unique_consecutive": [[1873, "torch-unique-consecutive"]], "torch.utils.generate_methods_for_privateuse1_backend": [[1876, "torch-utils-generate-methods-for-privateuse1-backend"]], "torch.unflatten": [[1871, "torch-unflatten"]], "torch.zeros_like": [[1892, "torch-zeros-like"]], "Terminology": [[1899, "terminology"]], "Type System": [[1899, "id1"]], "TorchScript Types": [[1899, "torchscript-types"]], "Meta Types": [[1899, "meta-types"]], "Any Type": [[1899, "any-type"]], "Operators Supported for Any Type": [[1899, "operators-supported-for-any-type"]], "Design Notes": [[1899, "design-notes"], [1949, "design-notes"]], "Primitive Types": [[1899, "primitive-types"]], "Structural Types": [[1899, "structural-types"]], "Nominal Types": [[1899, "nominal-types"]], "Built-in Class": [[1899, "built-in-class"]], "Special Note on torch.nn.ModuleList and torch.nn.ModuleDict": [[1899, "special-note-on-torch-nn-modulelist-and-torch-nn-moduledict"]], "Custom Class": [[1899, "custom-class"]], "Enum Type": [[1899, "enum-type"]], "TorchScript Module Class": [[1899, "torchscript-module-class"]], "Module Instance Class": [[1899, "module-instance-class"]], "Type Annotation": [[1899, "type-annotation"]], "When to Annotate Types": [[1899, "when-to-annotate-types"]], "Annotate Function Signature": [[1899, "annotate-function-signature"]], "Annotate Variables and Data Attributes": [[1899, "annotate-variables-and-data-attributes"]], "Local Variables": [[1899, "local-variables"]], "Instance Data Attributes": [[1899, "instance-data-attributes"]], "Type Annotation APIs": [[1899, "type-annotation-apis"]], "torch.jit.annotate(T, expr)": [[1899, "torch-jit-annotate-t-expr"]], "Type Annotation Appendix": [[1899, "type-annotation-appendix"]], "TorchScript Type System Definition": [[1899, "torchscript-type-system-definition"]], "Arithmetic Conversions": [[1899, "arithmetic-conversions"]], "Atoms": [[1899, "atoms"]], "Identifiers": [[1899, "identifiers"]], "Parenthesized Forms": [[1899, "parenthesized-forms"]], "List and Dictionary Displays": [[1899, "list-and-dictionary-displays"]], "Primaries": [[1899, "primaries"]], "Attribute References": [[1899, "attribute-references"]], "Subscriptions": [[1899, "subscriptions"]], "Slicings": [[1899, "slicings"]], "Calls": [[1899, "calls"]], "Power Operator": [[1899, "power-operator"]], "Unary and Arithmetic Bitwise Operations": [[1899, "unary-and-arithmetic-bitwise-operations"]], "Binary Arithmetic Operations": [[1899, "binary-arithmetic-operations"]], "Shifting Operations": [[1899, "shifting-operations"]], "Binary Bitwise Operations": [[1899, "binary-bitwise-operations"]], "Comparisons": [[1899, "comparisons"], [12, "comparisons"]], "Value Comparisons": [[1899, "value-comparisons"]], "Membership Test Operations": [[1899, "membership-test-operations"]], "Identity Comparisons": [[1899, "identity-comparisons"]], "Boolean Operations": [[1899, "boolean-operations"]], "Conditional Expressions": [[1899, "conditional-expressions"]], "Expression Lists": [[1899, "expression-lists"]], "Simple Statements": [[1899, "simple-statements"]], "Expression Statements": [[1899, "expression-statements"]], "Assignment Statements": [[1899, "assignment-statements"]], "Augmented Assignment Statements": [[1899, "augmented-assignment-statements"]], "Annotated Assignment Statements": [[1899, "annotated-assignment-statements"]], "The raise Statement": [[1899, "the-raise-statement"]], "The assert Statement": [[1899, "the-assert-statement"]], "The return Statement": [[1899, "the-return-statement"]], "The del Statement": [[1899, "the-del-statement"]], "The pass Statement": [[1899, "the-pass-statement"]], "The print Statement": [[1899, "the-print-statement"]], "The break Statement": [[1899, "the-break-statement"]], "The continue Statement:": [[1899, "the-continue-statement"]], "Compound Statements": [[1899, "compound-statements"]], "The if Statement": [[1899, "the-if-statement"]], "Basic if/else Statement": [[1899, "basic-if-else-statement"]], "Ternary if/else Statement": [[1899, "ternary-if-else-statement"]], "The while Statement": [[1899, "the-while-statement"]], "The for-in Statement": [[1899, "the-for-in-statement"]], "The with Statement": [[1899, "the-with-statement"]], "The tuple Statement": [[1899, "the-tuple-statement"]], "The getattr Statement": [[1899, "the-getattr-statement"]], "The hasattr Statement": [[1899, "the-hasattr-statement"]], "The zip Statement": [[1899, "the-zip-statement"]], "The enumerate Statement": [[1899, "the-enumerate-statement"]], "Python Values": [[1899, "python-values"]], "Resolution Rules": [[1899, "resolution-rules"]], "Python Built-in Functions Support": [[1899, "python-built-in-functions-support"]], "TorchScript Support for Python Built-in Functions": [[1899, "id5"]], "Python Built-in Values Support": [[1899, "python-built-in-values-support"]], "TorchScript Support for Python Built-in Values": [[1899, "id6"]], "torch.* APIs": [[1899, "torch-apis"]], "Remote Procedure Calls": [[1899, "remote-procedure-calls"]], "Asynchronous Execution": [[1899, "asynchronous-execution"]], "Type Annotations": [[1899, "type-annotations"]], "Meta Programming": [[1899, "meta-programming"]], "Type Refinement": [[1899, "type-refinement"]], "torch.vmap": [[1886, "torch-vmap"]], "torch.triu": [[1866, "torch-triu"]], "IRs": [[1895, "irs"]], "Core Aten IR": [[1895, "core-aten-ir"]], "Prims IR": [[1895, "prims-ir"]], "torch.linalg": [[1904, "torch-linalg"]], "Matrix Properties": [[1904, "matrix-properties"]], "Decompositions": [[1904, "decompositions"]], "Solvers": [[1904, "solvers"]], "Inverses": [[1904, "inverses"]], "Matrix Functions": [[1904, "matrix-functions"]], "Matrix Products": [[1904, "matrix-products"]], "Tensor Operations": [[1904, "tensor-operations"]], "Misc": [[1904, "misc"]], "Experimental Functions": [[1904, "experimental-functions"]], "torch.view_as_real": [[1885, "torch-view-as-real"]], "TorchScript Builtins": [[1897, "torchscript-builtins"]], "Supported Tensor Methods": [[1897, "supported-tensor-methods"]], "Supported PyTorch Functions": [[1897, "supported-pytorch-functions"]], "TorchScript Builtin Functions": [[1897, "torchscript-builtin-functions"]], "Python Built-in Functions": [[1897, "python-built-in-functions"]], "math Module": [[1897, "math-module"]], "torch.xlogy": [[1890, "torch-xlogy"]], "torch.unsqueeze": [[1874, "torch-unsqueeze"]], "torch.utils.set_module": [[1879, "torch-utils-set-module"]], "torch.triu_indices": [[1867, "torch-triu-indices"]], "torch.true_divide": [[1868, "torch-true-divide"]], "torch.utils.get_cpp_backtrace": [[1877, "torch-utils-get-cpp-backtrace"]], "torch.vander": [[1880, "torch-vander"]], "torch.unbind": [[1870, "torch-unbind"]], "torch.library": [[1903, "torch-library"]], "TorchScript": [[1896, "torchscript"]], "Creating TorchScript Code": [[1896, "creating-torchscript-code"]], "Mixing Tracing and Scripting": [[1896, "mixing-tracing-and-scripting"]], "TorchScript Language": [[1896, "torchscript-language"]], "Built-in Functions and Modules": [[1896, "built-in-functions-and-modules"]], "PyTorch Functions and Modules": [[1896, "pytorch-functions-and-modules"]], "Python Functions and Modules": [[1896, "python-functions-and-modules"]], "Python Language Reference Comparison": [[1896, "python-language-reference-comparison"]], "Debugging": [[1896, "debugging"], [74, "debugging"]], "Disable JIT for Debugging": [[1896, "disable-jit-for-debugging"]], "Inspecting Code": [[1896, "inspecting-code"]], "Interpreting Graphs": [[1896, "interpreting-graphs"]], "Tracer": [[1896, "tracer"]], "Tracing Edge Cases": [[1896, "tracing-edge-cases"]], "Automatic Trace Checking": [[1896, "automatic-trace-checking"]], "Tracer Warnings": [[1896, "tracer-warnings"]], "Frequently Asked Questions": [[1896, "frequently-asked-questions"], [17, "frequently-asked-questions"], [7, "frequently-asked-questions"], [1937, "frequently-asked-questions"], [1944, "frequently-asked-questions"], [1926, "frequently-asked-questions"]], "Known Issues": [[1896, "known-issues"]], "Appendix": [[1896, "appendix"]], "Migrating to PyTorch 1.2 Recursive Scripting API": [[1896, "migrating-to-pytorch-1-2-recursive-scripting-api"]], "Modules": [[1896, "modules"], [1930, "modules"]], "Attributes": [[1896, "attributes"]], "Constants": [[1896, "constants"]], "Fusion Backends": [[1896, "fusion-backends"]], "References": [[1896, "references"]], "torch.trapz": [[1862, "torch-trapz"]], "torch.use_deterministic_algorithms": [[1875, "torch-use-deterministic-algorithms"]], "torch.where": [[1889, "torch-where"]], "TorchScript Unsupported PyTorch Constructs": [[1901, "torchscript-unsupported-pytorch-constructs"]], "Torch and Tensor Unsupported Attributes": [[1901, "torch-and-tensor-unsupported-attributes"]], "Unsupported Tensor Methods": [[1901, "unsupported-tensor-methods"]], "Unsupported Tensor Properties": [[1901, "unsupported-tensor-properties"]], "Functions Not Correctly Bound on Torch": [[1901, "functions-not-correctly-bound-on-torch"]], "Ops With Divergent Schemas Between Torch & Python": [[1901, "ops-with-divergent-schemas-between-torch-python"]], "PyTorch Unsupported Modules and Classes": [[1901, "pytorch-unsupported-modules-and-classes"]], "torch.vstack": [[1888, "torch-vstack"]], "torch.utils.mobile_optimizer": [[1907, "torch-utils-mobile-optimizer"]], "torch.monitor": [[1909, "torch-monitor"]], "API Reference": [[1909, "module-torch.monitor"], [37, "api-reference"], [74, "api-reference"], [1941, "api-reference"], [1938, "api-reference"], [1943, "api-reference"]], "torch.triangular_solve": [[1863, "torch-triangular-solve"]], "torch.var_mean": [[1882, "torch-var-mean"]], "torch.utils.model_zoo": [[1908, "torch-utils-model-zoo"]], "torch.utils.rename_privateuse1_backend": [[1878, "torch-utils-rename-privateuse1-backend"]], "JIT Utils - torch.utils.jit": [[1902, "module-torch.utils.jit"]], "torch.var": [[1881, "torch-var"]], "torch.unique": [[1872, "torch-unique"]], "Python Language Reference Coverage": [[1900, "python-language-reference-coverage"]], "torch._logging": [[1905, "torch-logging"]], "torch.view_as_complex": [[1884, "torch-view-as-complex"]], "torch.vsplit": [[1887, "torch-vsplit"]], "torch.masked": [[1906, "torch-masked"]], "Introduction": [[1906, "introduction"], [74, "introduction"], [1914, "introduction"]], "Motivation": [[1906, "motivation"], [16, "motivation"], [15, "motivation"]], "What is a MaskedTensor?": [[1906, "what-is-a-maskedtensor"]], "Supported Operators": [[1906, "supported-operators"]], "Unary Operators": [[1906, "unary-operators"]], "Binary Operators": [[1906, "binary-operators"]], "Reductions": [[1906, "reductions"]], "View and select functions": [[1906, "view-and-select-functions"]], "torch.mps": [[1910, "module-torch.mps"]], "MPS Profiler": [[1910, "mps-profiler"]], "torch.nn.utils.skip_init": [[1673, "torch-nn-utils-skip-init"]], "VerificationOptions": [[1692, "verificationoptions"]], "Adamax": [[1698, "adamax"]], "ChainedScheduler": [[1711, "chainedscheduler"]], "torch.nn.utils.rnn.unpad_sequence": [[1672, "torch-nn-utils-rnn-unpad-sequence"]], "ConstantLR": [[1712, "constantlr"]], "LBFGS": [[1699, "lbfgs"]], "torch.nn.utils.vector_to_parameters": [[1676, "torch-nn-utils-vector-to-parameters"]], "OnnxExporterError": [[1690, "onnxexportererror"]], "torch.nn.utils.rnn.pad_packed_sequence": [[1669, "torch-nn-utils-rnn-pad-packed-sequence"]], "SparseAdam": [[1710, "sparseadam"]], "torch.ones_like": [[1685, "torch-ones-like"]], "torch.nn.utils.spectral_norm": [[1674, "torch-nn-utils-spectral-norm"]], "torch.optim.Optimizer.add_param_group": [[1701, "torch-optim-optimizer-add-param-group"]], "torch.optim.Optimizer.step": [[1704, "torch-optim-optimizer-step"]], "torch.not_equal": [[1682, "torch-not-equal"]], "NAdam": [[1700, "nadam"]], "CosineAnnealingLR": [[1713, "cosineannealinglr"]], "ExportOptions": [[1686, "exportoptions"]], "Adadelta": [[1694, "adadelta"]], "CosineAnnealingWarmRestarts": [[1714, "cosineannealingwarmrestarts"]], "torch.nn.utils.rnn.pack_padded_sequence": [[1667, "torch-nn-utils-rnn-pack-padded-sequence"]], "torch.nn.utils.rnn.unpack_sequence": [[1671, "torch-nn-utils-rnn-unpack-sequence"]], "AdamW": [[1697, "adamw"]], "ExportOutput": [[1687, "exportoutput"]], "torch.nn.utils.rnn.pad_sequence": [[1670, "torch-nn-utils-rnn-pad-sequence"]], "torch.norm": [[1680, "torch-norm"]], "torch.nn.utils.rnn.pack_sequence": [[1668, "torch-nn-utils-rnn-pack-sequence"]], "Adam": [[1696, "adam"]], "GraphInfo": [[1691, "graphinfo"]], "torch.numel": [[1683, "torch-numel"]], "ExportOutputSerializer": [[1688, "exportoutputserializer"]], "torch.optim.Optimizer.load_state_dict": [[1702, "torch-optim-optimizer-load-state-dict"]], "torch.optim.Optimizer.state_dict": [[1703, "torch-optim-optimizer-state-dict"]], "ASGD": [[1693, "asgd"]], "torch.normal": [[1681, "torch-normal"]], "torch.nonzero": [[1679, "torch-nonzero"]], "SGD": [[1709, "sgd"]], "torch.optim.Optimizer.zero_grad": [[1705, "torch-optim-optimizer-zero-grad"]], "JitScalarType": [[1689, "jitscalartype"]], "torch.ones": [[1684, "torch-ones"]], "PackedSequence": [[1666, "packedsequence"]], "no_grad": [[1678, "no-grad"]], "RAdam": [[1706, "radam"]], "torch.nn.utils.stateless.functional_call": [[1675, "torch-nn-utils-stateless-functional-call"]], "Rprop": [[1708, "rprop"]], "RMSprop": [[1707, "rmsprop"]], "torch.nn.utils.weight_norm": [[1677, "torch-nn-utils-weight-norm"]], "Adagrad": [[1695, "adagrad"]], "torch.nn.functional.embedding": [[1543, "torch-nn-functional-embedding"]], "torch.nn.functional.dropout": [[1537, "torch-nn-functional-dropout"]], "torch.nn.functional.gelu": [[1550, "torch-nn-functional-gelu"]], "torch.nn.functional.l1_loss": [[1565, "torch-nn-functional-l1-loss"]], "torch.nn.functional.conv3d": [[1529, "torch-nn-functional-conv3d"]], "torch.nn.functional.dropout3d": [[1540, "torch-nn-functional-dropout3d"]], "torch.nn.functional.conv_transpose3d": [[1532, "torch-nn-functional-conv-transpose3d"]], "torch.nn.functional.dropout2d": [[1539, "torch-nn-functional-dropout2d"]], "torch.nn.functional.embedding_bag": [[1544, "torch-nn-functional-embedding-bag"]], "torch.nn.functional.hinge_embedding_loss": [[1560, "torch-nn-functional-hinge-embedding-loss"]], "torch.nn.functional.conv1d": [[1527, "torch-nn-functional-conv1d"]], "torch.nn.functional.ctc_loss": [[1536, "torch-nn-functional-ctc-loss"]], "torch.nn.functional.batch_norm": [[1522, "torch-nn-functional-batch-norm"]], "torch.nn.functional.cosine_similarity": [[1534, "torch-nn-functional-cosine-similarity"]], "torch.nn.functional.feature_alpha_dropout": [[1545, "torch-nn-functional-feature-alpha-dropout"]], "torch.nn.functional.conv_transpose2d": [[1531, "torch-nn-functional-conv-transpose2d"]], "torch.nn.functional.hardtanh": [[1558, "torch-nn-functional-hardtanh"]], "torch.nn.functional.gaussian_nll_loss": [[1549, "torch-nn-functional-gaussian-nll-loss"]], "torch.nn.functional.fold": [[1546, "torch-nn-functional-fold"]], "torch.nn.functional.conv_transpose1d": [[1530, "torch-nn-functional-conv-transpose1d"]], "torch.nn.functional.binary_cross_entropy": [[1524, "torch-nn-functional-binary-cross-entropy"]], "torch.nn.functional.group_norm": [[1553, "torch-nn-functional-group-norm"]], "torch.nn.functional.hardshrink": [[1555, "torch-nn-functional-hardshrink"]], "torch.nn.functional.instance_norm": [[1562, "torch-nn-functional-instance-norm"]], "torch.nn.functional.grid_sample": [[1552, "torch-nn-functional-grid-sample"]], "torch.nn.functional.conv2d": [[1528, "torch-nn-functional-conv2d"]], "torch.nn.functional.hardsigmoid": [[1556, "torch-nn-functional-hardsigmoid"]], "torch.nn.functional.elu_": [[1542, "torch-nn-functional-elu"]], "torch.nn.functional.bilinear": [[1523, "torch-nn-functional-bilinear"]], "torch.nn.functional.fractional_max_pool3d": [[1548, "torch-nn-functional-fractional-max-pool3d"]], "torch.nn.functional.avg_pool2d": [[1520, "torch-nn-functional-avg-pool2d"]], "torch.nn.functional.glu": [[1551, "torch-nn-functional-glu"]], "torch.nn.functional.leaky_relu": [[1567, "torch-nn-functional-leaky-relu"]], "torch.nn.functional.avg_pool1d": [[1519, "torch-nn-functional-avg-pool1d"]], "torch.nn.functional.cosine_embedding_loss": [[1533, "torch-nn-functional-cosine-embedding-loss"]], "torch.nn.functional.binary_cross_entropy_with_logits": [[1525, "torch-nn-functional-binary-cross-entropy-with-logits"]], "torch.nn.functional.hardtanh_": [[1559, "torch-nn-functional-hardtanh"]], "torch.nn.functional.kl_div": [[1564, "torch-nn-functional-kl-div"]], "torch.nn.functional.dropout1d": [[1538, "torch-nn-functional-dropout1d"]], "torch.nn.functional.fractional_max_pool2d": [[1547, "torch-nn-functional-fractional-max-pool2d"]], "torch.nn.functional.hardswish": [[1557, "torch-nn-functional-hardswish"]], "torch.nn.functional.elu": [[1541, "torch-nn-functional-elu"]], "torch.nn.functional.cross_entropy": [[1535, "torch-nn-functional-cross-entropy"]], "torch.nn.functional.gumbel_softmax": [[1554, "torch-nn-functional-gumbel-softmax"]], "torch.nn.functional.huber_loss": [[1561, "torch-nn-functional-huber-loss"]], "torch.nn.functional.interpolate": [[1563, "torch-nn-functional-interpolate"]], "torch.nn.functional.celu": [[1526, "torch-nn-functional-celu"]], "torch.nn.functional.layer_norm": [[1566, "torch-nn-functional-layer-norm"]], "torch.nn.functional.avg_pool3d": [[1521, "torch-nn-functional-avg-pool3d"]], "torch.ne": [[1354, "torch-ne"]], "torch.nanmedian": [[1349, "torch-nanmedian"]], "BCELoss": [[1369, "bceloss"]], "torch.minimum": [[1324, "torch-minimum"]], "torch.mv": [[1345, "torch-mv"]], "torch.mps.set_per_process_memory_fraction": [[1338, "torch-mps-set-per-process-memory-fraction"]], "torch.nanquantile": [[1350, "torch-nanquantile"]], "torch.nextafter": [[1357, "torch-nextafter"]], "AdaptiveAvgPool3d": [[1360, "adaptiveavgpool3d"]], "BCEWithLogitsLoss": [[1370, "bcewithlogitsloss"]], "torch.mps.profiler.start": [[1335, "torch-mps-profiler-start"]], "torch.nanmean": [[1348, "torch-nanmean"]], "torch.mps.set_rng_state": [[1339, "torch-mps-set-rng-state"]], "torch.neg": [[1355, "torch-neg"]], "torch.nan_to_num": [[1347, "torch-nan-to-num"]], "torch.min": [[1323, "torch-min"]], "torch.msort": [[1341, "torch-msort"]], "torch.narrow": [[1352, "torch-narrow"]], "torch.mm": [[1325, "torch-mm"]], "torch.nansum": [[1351, "torch-nansum"]], "torch.mps.manual_seed": [[1333, "torch-mps-manual-seed"]], "torch.narrow_copy": [[1353, "torch-narrow-copy"]], "AdaptiveMaxPool3d": [[1364, "adaptivemaxpool3d"]], "AdaptiveMaxPool1d": [[1362, "adaptivemaxpool1d"]], "AlphaDropout": [[1365, "alphadropout"]], "torch.mps.get_rng_state": [[1332, "torch-mps-get-rng-state"]], "torch.negative": [[1356, "torch-negative"]], "torch.mps.empty_cache": [[1331, "torch-mps-empty-cache"]], "BatchNorm1d": [[1371, "batchnorm1d"]], "torch.mps.profiler.stop": [[1336, "torch-mps-profiler-stop"]], "torch.mps.seed": [[1337, "torch-mps-seed"]], "torch.mps.profiler.profile": [[1334, "torch-mps-profiler-profile"]], "torch.movedim": [[1328, "torch-movedim"]], "torch.multiply": [[1344, "torch-multiply"]], "AdaptiveAvgPool1d": [[1358, "adaptiveavgpool1d"]], "torch.mps.current_allocated_memory": [[1329, "torch-mps-current-allocated-memory"]], "AdaptiveLogSoftmaxWithLoss": [[1361, "adaptivelogsoftmaxwithloss"]], "torch.mps.synchronize": [[1340, "torch-mps-synchronize"]], "torch.mode": [[1326, "torch-mode"]], "AdaptiveMaxPool2d": [[1363, "adaptivemaxpool2d"]], "AvgPool1d": [[1366, "avgpool1d"]], "torch.mps.driver_allocated_memory": [[1330, "torch-mps-driver-allocated-memory"]], "torch.mvlgamma": [[1346, "torch-mvlgamma"]], "torch.moveaxis": [[1327, "torch-moveaxis"]], "AvgPool3d": [[1368, "avgpool3d"]], "torch.mul": [[1342, "torch-mul"]], "torch.multinomial": [[1343, "torch-multinomial"]], "AvgPool2d": [[1367, "avgpool2d"]], "AdaptiveAvgPool2d": [[1359, "adaptiveavgpool2d"]], "Softmin": [[1488, "softmin"]], "Sequential": [[1481, "sequential"]], "UpsamplingNearest2d": [[1507, "upsamplingnearest2d"]], "UpsamplingBilinear2d": [[1506, "upsamplingbilinear2d"]], "Softsign": [[1491, "softsign"]], "torch.nn.functional.affine_grid": [[1517, "torch-nn-functional-affine-grid"]], "ReflectionPad1d": [[1474, "reflectionpad1d"]], "ReplicationPad2d": [[1478, "replicationpad2d"]], "ReplicationPad1d": [[1477, "replicationpad1d"]], "torch.nn.functional.alpha_dropout": [[1518, "torch-nn-functional-alpha-dropout"]], "Sigmoid": [[1483, "sigmoid"], [775, "sigmoid"]], "TransformerEncoderLayer": [[1500, "transformerencoderlayer"]], "Unflatten": [[1503, "unflatten"]], "ZeroPad2d": [[1509, "zeropad2d"]], "ZeroPad3d": [[1510, "zeropad3d"]], "Softmax": [[1486, "softmax"]], "SmoothL1Loss": [[1484, "smoothl1loss"]], "torch.nn.functional.adaptive_max_pool1d": [[1514, "torch-nn-functional-adaptive-max-pool1d"]], "TripletMarginWithDistanceLoss": [[1502, "tripletmarginwithdistanceloss"]], "Softplus": [[1489, "softplus"]], "TransformerDecoderLayer": [[1498, "transformerdecoderlayer"]], "Softmax2d": [[1487, "softmax2d"]], "Softshrink": [[1490, "softshrink"]], "TransformerEncoder": [[1499, "transformerencoder"]], "SoftMarginLoss": [[1485, "softmarginloss"]], "Unfold": [[1504, "unfold"]], "RNNCell": [[1470, "rnncell"], [781, "rnncell"]], "torch.nn.functional.adaptive_max_pool2d": [[1515, "torch-nn-functional-adaptive-max-pool2d"]], "ReflectionPad3d": [[1476, "reflectionpad3d"]], "SiLU": [[1482, "silu"]], "Tanh": [[1493, "tanh"]], "torch.nn.functional.adaptive_avg_pool3d": [[1513, "torch-nn-functional-adaptive-avg-pool3d"]], "ReflectionPad2d": [[1475, "reflectionpad2d"]], "torch.nn.functional.adaptive_max_pool3d": [[1516, "torch-nn-functional-adaptive-max-pool3d"]], "TripletMarginLoss": [[1501, "tripletmarginloss"]], "Tanhshrink": [[1494, "tanhshrink"]], "ReLU": [[1472, "relu"]], "ReplicationPad3d": [[1479, "replicationpad3d"]], "SELU": [[1480, "selu"]], "Threshold": [[1495, "threshold"]], "RReLU": [[1471, "rrelu"]], "Upsample": [[1505, "upsample"]], "ZeroPad1d": [[1508, "zeropad1d"]], "torch.nn.functional.adaptive_avg_pool2d": [[1512, "torch-nn-functional-adaptive-avg-pool2d"]], "TransformerDecoder": [[1497, "transformerdecoder"]], "torch.nn.functional.adaptive_avg_pool1d": [[1511, "torch-nn-functional-adaptive-avg-pool1d"]], "Transformer": [[1496, "transformer"], [28, "transformer"]], "ReLU6": [[1473, "relu6"], [774, "relu6"]], "SyncBatchNorm": [[1492, "syncbatchnorm"]], "PyTorch Governance | Maintainers": [[10, "pytorch-governance-maintainers"]], "Responsibilities": [[10, "responsibilities"]], "Lead Core Maintainer (BDFL)": [[10, "lead-core-maintainer-bdfl"], [9, "lead-core-maintainer-bdfl"]], "Core Maintainers": [[10, "core-maintainers"], [9, "core-maintainers"]], "Module-level maintainers": [[10, "module-level-maintainers"]], "NN APIs (torch.nn)": [[10, "nn-apis-torch-nn"]], "Optimizers (torch.optim)": [[10, "optimizers-torch-optim"]], "Autograd (torch.autograd)": [[10, "autograd-torch-autograd"]], "Compilers (JIT / TorchScript / FX / TorchDynamo)": [[10, "compilers-jit-torchscript-fx-torchdynamo"]], "Distributions & RNG": [[10, "distributions-rng"]], "Distributed": [[10, "distributed"]], "Multiprocessing and DataLoaders": [[10, "multiprocessing-and-dataloaders"]], "Linear Algebra (torch.linalg)": [[10, "linear-algebra-torch-linalg"]], "Sparse (torch.sparse)": [[10, "sparse-torch-sparse"]], "NestedTensor (torch.nested)": [[10, "nestedtensor-torch-nested"]], "MaskedTensor (torch.masked)": [[10, "maskedtensor-torch-masked"]], "Fast Fourier Transform (torch.fft)": [[10, "fast-fourier-transform-torch-fft"]], "CPU Performance (Torch Inductor / MKLDNN)": [[10, "cpu-performance-torch-inductor-mkldnn"]], "GPU Performance (Torch Inductor / Triton / CUDA)": [[10, "gpu-performance-torch-inductor-triton-cuda"]], "NVFuser": [[10, "nvfuser"]], "AMD/ROCm/HIP": [[10, "amd-rocm-hip"]], "Build + CI": [[10, "build-ci"]], "Performance Tools": [[10, "performance-tools"]], "C++ API": [[10, "c-api"]], "C10 utils and operator dispatch": [[10, "c10-utils-and-operator-dispatch"]], "ONNX exporter": [[10, "onnx-exporter"]], "Mobile / Edge": [[10, "mobile-edge"]], "Model Compression & Optimization": [[10, "model-compression-optimization"]], "Windows": [[10, "windows"]], "Apple M1/MPS": [[10, "apple-m1-mps"]], "PowerPC": [[10, "powerpc"]], "Docs / Tutorials": [[10, "docs-tutorials"]], "Library-level maintainers": [[10, "library-level-maintainers"]], "XLA": [[10, "xla"]], "TorchServe": [[10, "torchserve"]], "TorchVision": [[10, "torchvision"]], "TorchText": [[10, "torchtext"]], "TorchAudio": [[10, "torchaudio"]], "TorchRec": [[10, "torchrec"]], "TorchX": [[10, "torchx"]], "TorchData / TorchArrow": [[10, "torchdata-torcharrow"]], "PyTorch 2.0 NNModule Support": [[23, "pytorch-2-0-nnmodule-support"]], "NNModule Hooks Support": [[23, "nnmodule-hooks-support"]], "nn.Module.__call__ Hooks Usage and limitations": [[23, "nn-module-call-hooks-usage-and-limitations"]], "state_dict Hooks": [[23, "state-dict-hooks"]], "PyTorch Governance | Build + CI": [[6, "pytorch-governance-build-ci"]], "How to Add a New Maintainer": [[6, "how-to-add-a-new-maintainer"]], "torch.func interaction with torch.compile": [[27, "torch-func-interaction-with-torch-compile"]], "Applying a torch.func transform to a torch.compile\u2019d function": [[27, "applying-a-torch-func-transform-to-a-torch-compile-d-function"]], "Doesn\u2019t work (PT 2.0): calling a torch.func transform inside of a torch.compile\u2019ed function": [[27, "doesn-t-work-pt-2-0-calling-a-torch-func-transform-inside-of-a-torch-compile-ed-function"]], "Workaround: use torch._dynamo.allow_in_graph": [[27, "workaround-use-torch-dynamo-allow-in-graph"]], "TorchInductor GPU Profiling": [[22, "torchinductor-gpu-profiling"]], "Fake tensor": [[16, "fake-tensor"]], "Related work": [[16, "related-work"]], "Overall architecture": [[16, "overall-architecture"], [15, "overall-architecture"]], "API: the important bits": [[16, "api-the-important-bits"]], "Details": [[16, "details"]], "About the tensor subclass": [[16, "about-the-tensor-subclass"]], "How is each individual operator implemented?": [[16, "how-is-each-individual-operator-implemented"]], "How does the converter work?": [[16, "how-does-the-converter-work"]], "Performance characteristics": [[16, "performance-characteristics"]], "Fake tensor of fake tensor?": [[16, "fake-tensor-of-fake-tensor"]], "Interaction with dynamic shapes": [[16, "interaction-with-dynamic-shapes"]], "Other resources": [[16, "other-resources"]], "Writing Graph Transformations on ATen IR": [[28, "writing-graph-transformations-on-aten-ir"]], "Passes": [[28, "passes"]], "One-to-One Pass": [[28, "one-to-one-pass"]], "One-to-X Pass": [[28, "one-to-x-pass"]], "One-to-None Pass": [[28, "one-to-none-pass"]], "Utilizing Local Information": [[28, "utilizing-local-information"]], "Subgraph Rewriter": [[28, "subgraph-rewriter"]], "Pass Manager": [[28, "pass-manager"]], "Partitioner": [[28, "partitioner"]], "Subgraph Matcher": [[28, "subgraph-matcher"]], "Capability Based Partitioner": [[28, "capability-based-partitioner"]], "Technical Overview": [[26, "technical-overview"]], "TorchDynamo Deeper Dive": [[14, "torchdynamo-deeper-dive"]], "What is a guard?": [[14, "what-is-a-guard"]], "What is Dynamo doing?": [[14, "what-is-dynamo-doing"]], "PyTorch 2.0 Troubleshooting": [[29, "pytorch-2-0-troubleshooting"]], "Title": [[29, "id1"]], "Diagnosing Runtime Errors": [[29, "diagnosing-runtime-errors"]], "Torchdynamo Errors": [[29, "torchdynamo-errors"]], "TorchInductor Errors": [[29, "torchinductor-errors"], [17, "torchinductor-errors"]], "Minifying TorchInductor Errors": [[29, "minifying-torchinductor-errors"]], "Minifying Backend Compiler Errors": [[29, "minifying-backend-compiler-errors"]], "Performance Profiling": [[29, "performance-profiling"]], "Accessing TorchDynamo Profiler": [[29, "accessing-torchdynamo-profiler"]], "TorchInductor Debugging using TORCH_COMPILE_DEBUG": [[29, "torchinductor-debugging-using-torch-compile-debug"]], "Graph Breaks": [[29, "graph-breaks"], [17, "graph-breaks"]], "Identifying the Cause of a Graph Break": [[29, "identifying-the-cause-of-a-graph-break"]], "Excessive Recompilation": [[29, "excessive-recompilation"], [17, "excessive-recompilation"]], "Accuracy Debugging": [[29, "accuracy-debugging"]], "File an Issue": [[29, "file-an-issue"]], "torch.cpu": [[35, "module-torch.cpu"]], "Streams and events": [[35, "streams-and-events"], [36, "streams-and-events"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "CUDA Stream Sanitizer": [[37, "cuda-stream-sanitizer"]], "Overview": [[37, "module-torch.cuda._sanitizer"], [13, "overview"], [74, "module-torch.fx"], [1938, "overview"], [1943, "module-torch.profiler"]], "Usage": [[37, "usage"], [46, null], [61, "usage"]], "torch::deploy has been moved to pytorch/multipy": [[42, "torch-deploy-has-been-moved-to-pytorch-multipy"]], "Torch Distributed Elastic": [[46, "torch-distributed-elastic"]], "Get Started": [[46, "get-started"]], "Documentation": [[46, "documentation"]], "API": [[46, null]], "Advanced": [[46, null]], "Plugins": [[46, null]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "PyTorch 2.0 Performance Dashboard": [[24, "pytorch-2-0-performance-dashboard"]], "How to read the dashboard?": [[24, "how-to-read-the-dashboard"]], "What is measured on the dashboard?": [[24, "what-is-measured-on-the-dashboard"]], "Can I check if my PR affects TorchInductor\u2019s performance on the dashboard before merging?": [[24, "can-i-check-if-my-pr-affects-torchinductor-s-performance-on-the-dashboard-before-merging"]], "How can I run any performance test locally?": [[24, "how-can-i-run-any-performance-test-locally"]], "Best Practices for Backends": [[11, "best-practices-for-backends"]], "x86 CPU": [[11, "x86-cpu"]], "Automatic differentiation package - torch.autograd": [[1, "module-torch.autograd"]], "Forward-mode Automatic Differentiation": [[1, "forward-mode-automatic-differentiation"]], "Functional higher level API": [[1, "functional-higher-level-api"]], "Default gradient layouts": [[1, "default-gradient-layouts"]], "Manual gradient layouts": [[1, "manual-gradient-layouts"]], "In-place operations on Tensors": [[1, "in-place-operations-on-tensors"]], "In-place correctness checks": [[1, "in-place-correctness-checks"], [1919, "in-place-correctness-checks"]], "Variable (deprecated)": [[1, "variable-deprecated"]], "Tensor autograd functions": [[1, "tensor-autograd-functions"]], "Function": [[1, "function"]], "Context method mixins": [[1, "context-method-mixins"]], "Numerical gradient checking": [[1, "numerical-gradient-checking"]], "Profiler": [[1, "profiler"]], "Anomaly detection": [[1, "anomaly-detection"]], "Autograd graph": [[1, "autograd-graph"]], "torch.utils.cpp_extension": [[33, "torch-utils-cpp-extension"]], "torch.utils.data": [[40, "module-torch.utils.data"]], "Dataset Types": [[40, "dataset-types"]], "Map-style datasets": [[40, "map-style-datasets"]], "Iterable-style datasets": [[40, "iterable-style-datasets"]], "Data Loading Order and Sampler": [[40, "data-loading-order-and-sampler"]], "Loading Batched and Non-Batched Data": [[40, "loading-batched-and-non-batched-data"]], "Automatic batching (default)": [[40, "automatic-batching-default"]], "Disable automatic batching": [[40, "disable-automatic-batching"]], "Working with collate_fn": [[40, "working-with-collate-fn"]], "Single- and Multi-process Data Loading": [[40, "single-and-multi-process-data-loading"]], "Single-process data loading (default)": [[40, "single-process-data-loading-default"]], "Multi-process data loading": [[40, "multi-process-data-loading"]], "Platform-specific behaviors": [[40, "platform-specific-behaviors"]], "Randomness in multi-process data loading": [[40, "randomness-in-multi-process-data-loading"]], "Memory Pinning": [[40, "memory-pinning"]], "torch.cuda": [[36, "module-torch.cuda"]], "Random Number Generator": [[36, "random-number-generator"]], "Communication collectives": [[36, "communication-collectives"]], "Graphs (beta)": [[36, "graphs-beta"]], "Memory management": [[36, "memory-management"], [1922, "memory-management"], [1928, "memory-management"]], "NVIDIA Tools Extension (NVTX)": [[36, "nvidia-tools-extension-nvtx"]], "Jiterator (beta)": [[36, "jiterator-beta"]], "Stream Sanitizer (prototype)": [[36, "stream-sanitizer-prototype"]], "Troubleshooting": [[21, "troubleshooting"]], "Learn more": [[21, "learn-more"]], "Do you support Distributed code?": [[17, "do-you-support-distributed-code"]], "Do I still need to export whole graphs?": [[17, "do-i-still-need-to-export-whole-graphs"]], "Why is my code crashing?": [[17, "why-is-my-code-crashing"]], "TorchDynamo Errors": [[17, "torchdynamo-errors"]], "Why is compilation slow?": [[17, "why-is-compilation-slow"]], "Dynamo Compilation": [[17, "dynamo-compilation"]], "Inductor Compilation": [[17, "inductor-compilation"]], "Why are you recompiling in production?": [[17, "why-are-you-recompiling-in-production"]], "How are you speeding up my code?": [[17, "how-are-you-speeding-up-my-code"]], "Why am I not seeing speedups?": [[17, "why-am-i-not-seeing-speedups"]], "Identifying the cause of a graph break": [[17, "identifying-the-cause-of-a-graph-break"]], "Why didn\u2019t my code recompile when I changed it?": [[17, "why-didnt-my-code-recompile-when-i-changed-it"]], "Why am I getting incorrect results?": [[17, "why-am-i-getting-incorrect-results"]], "Why am I getting OOMs?": [[17, "why-am-i-getting-ooms"]], "Custom Backends": [[13, "custom-backends"]], "Registering Custom Backends": [[13, "registering-custom-backends"]], "Custom Backends after AOTAutograd": [[13, "custom-backends-after-aotautograd"]], "Examples": [[13, "examples"], [55, "examples"]], "Debugging Backend": [[13, "debugging-backend"]], "Speedy Backend": [[13, "speedy-backend"]], "Composable Backends": [[13, "composable-backends"]], "Distributed Checkpoint - torch.distributed.checkpoint": [[45, "distributed-checkpoint-torch-distributed-checkpoint"]], "Profiling to understand torch.compile performance": [[25, "profiling-to-understand-torch-compile-performance"]], "What to use torch.profiler for:": [[25, "what-to-use-torch-profiler-for"]], "Basics of using torch.profiler and viewing traces": [[25, "basics-of-using-torch-profiler-and-viewing-traces"]], "Working around CUDA Graph profiling issues": [[25, "working-around-cuda-graph-profiling-issues"]], "Understanding compilation time": [[25, "understanding-compilation-time"]], "Finding graph breaks": [[25, "finding-graph-breaks"]], "Launch overhead": [[25, "launch-overhead"]], "TorchDynamo APIs to control fine-grained tracing": [[18, "torchdynamo-apis-to-control-fine-grained-tracing"], [18, "id1"]], "Automatic Mixed Precision package - torch.amp": [[0, "automatic-mixed-precision-package-torch-amp"]], "Autocasting": [[0, "autocasting"]], "Gradient Scaling": [[0, "gradient-scaling"]], "Autocast Op Reference": [[0, "autocast-op-reference"]], "Op Eligibility": [[0, "op-eligibility"]], "CUDA Op-Specific Behavior": [[0, "cuda-op-specific-behavior"]], "CUDA Ops that can autocast to float16": [[0, "cuda-ops-that-can-autocast-to-float16"]], "CUDA Ops that can autocast to float32": [[0, "cuda-ops-that-can-autocast-to-float32"]], "CUDA Ops that promote to the widest input type": [[0, "cuda-ops-that-promote-to-the-widest-input-type"]], "Prefer binary_cross_entropy_with_logits over binary_cross_entropy": [[0, "prefer-binary-cross-entropy-with-logits-over-binary-cross-entropy"]], "CPU Op-Specific Behavior": [[0, "cpu-op-specific-behavior"]], "CPU Ops that can autocast to bfloat16": [[0, "cpu-ops-that-can-autocast-to-bfloat16"]], "CPU Ops that can autocast to float32": [[0, "cpu-ops-that-can-autocast-to-float32"]], "CPU Ops that promote to the widest input type": [[0, "cpu-ops-that-promote-to-the-widest-input-type"]], "Complex Numbers": [[31, "complex-numbers"]], "Creating Complex Tensors": [[31, "creating-complex-tensors"]], "Transition from the old representation": [[31, "transition-from-the-old-representation"]], "Accessing real and imag": [[31, "accessing-real-and-imag"]], "Angle and abs": [[31, "angle-and-abs"]], "Linear Algebra": [[31, "linear-algebra"]], "Autograd": [[31, "autograd"]], "Distributed communication package - torch.distributed": [[43, "distributed-communication-package-torch-distributed"]], "Backends": [[43, "backends"], [1949, "backends"]], "Backends that come with PyTorch": [[43, "backends-that-come-with-pytorch"]], "Which backend to use?": [[43, "which-backend-to-use"]], "Common environment variables": [[43, "common-environment-variables"]], "Choosing the network interface to use": [[43, "choosing-the-network-interface-to-use"]], "Other NCCL environment variables": [[43, "other-nccl-environment-variables"]], "Basics": [[43, "basics"], [1949, "basics"]], "Initialization": [[43, "initialization"]], "TCP initialization": [[43, "tcp-initialization"]], "Shared file-system initialization": [[43, "shared-file-system-initialization"]], "Environment variable initialization": [[43, "environment-variable-initialization"]], "Post-Initialization": [[43, "post-initialization"]], "Distributed Key-Value Store": [[43, "distributed-key-value-store"]], "Groups": [[43, "groups"]], "Point-to-point communication": [[43, "point-to-point-communication"]], "Synchronous and asynchronous collective operations": [[43, "synchronous-and-asynchronous-collective-operations"]], "Collective functions": [[43, "collective-functions"]], "Profiling Collective Communication": [[43, "profiling-collective-communication"]], "Multi-GPU collective functions": [[43, "multi-gpu-collective-functions"]], "Third-party backends": [[43, "third-party-backends"]], "Launch utility": [[43, "launch-utility"]], "Spawn utility": [[43, "spawn-utility"]], "Debugging torch.distributed applications": [[43, "debugging-torch-distributed-applications"]], "Monitored Barrier": [[43, "monitored-barrier"]], "TORCH_DISTRIBUTED_DEBUG": [[43, "torch-distributed-debug"]], "Logging": [[43, "logging"]], "C++": [[34, "c"]], "TorchScript C++ API": [[34, "torchscript-c-api"]], "Extending PyTorch and TorchScript with C++ Extensions": [[34, "extending-pytorch-and-torchscript-with-c-extensions"]], "Tensor and Autograd in C++": [[34, "tensor-and-autograd-in-c"]], "Authoring Models in C++": [[34, "authoring-models-in-c"]], "Packaging for C++": [[34, "packaging-for-c"]], "Generic Join Context Manager": [[44, "generic-join-context-manager"]], "PyTorch Governance | Mechanics": [[9, "pytorch-governance-mechanics"]], "Summary": [[9, "summary"], [20, "summary"]], "Module Maintainers": [[9, "module-maintainers"]], "Nominating, Confirming and Removing Maintainers": [[9, "nominating-confirming-and-removing-maintainers"]], "The Principles": [[9, "the-principles"]], "The Process for Nomination": [[9, "the-process-for-nomination"]], "The Process for Removal": [[9, "the-process-for-removal"]], "Nominating Core Maintainers": [[9, "nominating-core-maintainers"]], "Removing the Lead Core Maintainer and Nominating a New Lead Core Maintainer": [[9, "removing-the-lead-core-maintainer-and-nominating-a-new-lead-core-maintainer"]], "Add, Remove, and Re-Scope Modules and Projects": [[9, "add-remove-and-re-scope-modules-and-projects"]], "Decision Making": [[9, "decision-making"]], "Uncontroversial Changes": [[9, "uncontroversial-changes"]], "Controversial Decision Process": [[9, "controversial-decision-process"]], "General Project Policies": [[9, "general-project-policies"]], "FAQ": [[9, "faq"]], "DDP Communication Hooks": [[41, "ddp-communication-hooks"]], "How to Use a Communication Hook?": [[41, "how-to-use-a-communication-hook"]], "What Does a Communication Hook Operate On?": [[41, "what-does-a-communication-hook-operate-on"]], "Default Communication Hooks": [[41, "default-communication-hooks"]], "PowerSGD Communication Hook": [[41, "powersgd-communication-hook"]], "PowerSGD State": [[41, "powersgd-state"]], "PowerSGD Hooks": [[41, "powersgd-hooks"]], "Debugging Communication Hooks": [[41, "debugging-communication-hooks"]], "Checkpointing of Communication Hooks": [[41, "checkpointing-of-communication-hooks"]], "Acknowledgements": [[41, "acknowledgements"], [1942, "acknowledgements"]], "Guards Overview": [[20, "guards-overview"]], "Caching and Guards Overview": [[20, "caching-and-guards-overview"]], "Python Frame Evaluation and PEP 523": [[20, "python-frame-evaluation-and-pep-523"]], "InstructionTranslator": [[20, "instructiontranslator"]], "Making Guards": [[20, "making-guards"]], "Tensor Parallelism - torch.distributed.tensor.parallel": [[48, "tensor-parallelism-torch-distributed-tensor-parallel"]], "Dynamic shapes": [[15, "dynamic-shapes"]], "Abridged public API": [[15, "abridged-public-api"]], "The Guard Model": [[15, "the-guard-model"]], "Abridged internal API": [[15, "abridged-internal-api"]], "DimDynamic policy": [[15, "dimdynamic-policy"]], "Unbacked SymInts": [[15, "unbacked-symints"]], "torch.compiler": [[30, "module-torch.compiler"]], "torch.compiler API reference": [[30, "torch-compiler-api-reference"]], "PyTorch Design Philosophy": [[8, "pytorch-design-philosophy"]], "Design Principles": [[8, "design-principles"]], "Principle 1: Usability over Performance": [[8, "principle-1-usability-over-performance"]], "Principle 2: Simple Over Easy": [[8, "principle-2-simple-over-easy"]], "Principle 3: Python First with Best In Class Language Interoperability": [[8, "principle-3-python-first-with-best-in-class-language-interoperability"]], "Distributed Optimizers": [[47, "distributed-optimizers"]], "PyTorch Contribution Guide": [[7, "pytorch-contribution-guide"]], "Contribution Process": [[7, "contribution-process"]], "Getting Started": [[7, "getting-started"], [19, "getting-started"]], "Proposing New Features": [[7, "proposing-new-features"]], "Reporting Issues": [[7, "reporting-issues"]], "Implementing Features or Fixing Bugs": [[7, "implementing-features-or-fixing-bugs"]], "Adding Tutorials": [[7, "adding-tutorials"]], "Improving Documentation & Tutorials": [[7, "improving-documentation-tutorials"]], "Participating in Online Discussions": [[7, "participating-in-online-discussions"]], "Submitting Pull Requests to Fix Open Issues": [[7, "submitting-pull-requests-to-fix-open-issues"]], "Reviewing Open Pull Requests": [[7, "reviewing-open-pull-requests"]], "Improving Code Readability": [[7, "improving-code-readability"]], "Adding Test Cases to Make the Codebase More Robust": [[7, "adding-test-cases-to-make-the-codebase-more-robust"]], "Promoting PyTorch": [[7, "promoting-pytorch"]], "Triaging Issues": [[7, "triaging-issues"]], "About Open Source Development": [[7, "about-open-source-development"]], "Common Mistakes To Avoid": [[7, "common-mistakes-to-avoid"]], "On Documentation": [[7, "on-documentation"]], "Python Docs": [[7, "python-docs"]], "C++ Docs": [[7, "c-docs"]], "Tutorials": [[7, "tutorials"], [1949, "tutorials"], [1941, "tutorials"], [1942, "tutorials"]], "Tutorials Build Overview": [[7, "tutorials-build-overview"]], "Contributing a New Tutorial": [[7, "contributing-a-new-tutorial"]], "Existing Backends": [[19, "existing-backends"]], "Why do you need another way of optimizing PyTorch code?": [[19, "why-do-you-need-another-way-of-optimizing-pytorch-code"]], "torch.__config__": [[32, "module-torch.__config__"]], "torch.utils.checkpoint": [[5, "torch-utils-checkpoint"]], "CUDAGraph Trees": [[12, "cudagraph-trees"]], "CUDAGraph Background": [[12, "cudagraph-background"]], "PyTorch CUDAGraph Integration": [[12, "pytorch-cudagraph-integration"]], "Make Graphed Callables": [[12, "make-graphed-callables"]], "TorchDynamo Previous CUDA Graphs Integration": [[12, "torchdynamo-previous-cuda-graphs-integration"]], "CUDAGraph Trees Integration": [[12, "cudagraph-trees-integration"]], "Limitations": [[12, "limitations"], [1937, "limitations"]], "Benchmark Utils - torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "CELU": [[1375, "celu"]], "Dropout1d": [[1392, "dropout1d"]], "CTCLoss": [[1376, "ctcloss"]], "Dropout": [[1391, "dropout"]], "Conv1d": [[1381, "conv1d"], [754, "conv1d"]], "ConstantPad2d": [[1379, "constantpad2d"]], "ConvTranspose1d": [[1384, "convtranspose1d"], [757, "convtranspose1d"]], "Bilinear": [[1374, "bilinear"]], "Flatten": [[1399, "flatten"]], "GELU": [[1403, "gelu"]], "Hardsigmoid": [[1410, "hardsigmoid"]], "ChannelShuffle": [[1377, "channelshuffle"]], "GLU": [[1404, "glu"]], "Hardtanh": [[1412, "hardtanh"]], "HingeEmbeddingLoss": [[1413, "hingeembeddingloss"]], "ConstantPad3d": [[1380, "constantpad3d"]], "FractionalMaxPool3d": [[1402, "fractionalmaxpool3d"]], "GaussianNLLLoss": [[1407, "gaussiannllloss"]], "InstanceNorm2d": [[1417, "instancenorm2d"], [768, "instancenorm2d"]], "FeatureAlphaDropout": [[1398, "featurealphadropout"]], "GRUCell": [[1406, "grucell"], [777, "grucell"]], "Conv2d": [[1382, "conv2d"], [746, "conv2d"], [755, "conv2d"]], "BatchNorm2d": [[1372, "batchnorm2d"], [752, "batchnorm2d"]], "DataParallel": [[1390, "dataparallel"]], "ConvTranspose2d": [[1385, "convtranspose2d"], [758, "convtranspose2d"]], "CosineEmbeddingLoss": [[1387, "cosineembeddingloss"]], "Hardshrink": [[1409, "hardshrink"]], "ConvTranspose3d": [[1386, "convtranspose3d"], [759, "convtranspose3d"]], "ConstantPad1d": [[1378, "constantpad1d"]], "GroupNorm": [[1408, "groupnorm"], [765, "groupnorm"]], "InstanceNorm1d": [[1416, "instancenorm1d"], [767, "instancenorm1d"]], "Dropout2d": [[1393, "dropout2d"]], "InstanceNorm3d": [[1418, "instancenorm3d"], [769, "instancenorm3d"]], "EmbeddingBag": [[1397, "embeddingbag"], [762, "embeddingbag"]], "Embedding": [[1396, "embedding"], [761, "embedding"]], "L1Loss": [[1420, "l1loss"]], "GRU": [[1405, "gru"], [776, "gru"]], "Dropout3d": [[1394, "dropout3d"]], "CrossEntropyLoss": [[1389, "crossentropyloss"]], "BatchNorm3d": [[1373, "batchnorm3d"], [753, "batchnorm3d"]], "Hardswish": [[1411, "hardswish"], [766, "hardswish"]], "ELU": [[1395, "elu"], [760, "elu"]], "KLDivLoss": [[1419, "kldivloss"]], "CosineSimilarity": [[1388, "cosinesimilarity"]], "HuberLoss": [[1414, "huberloss"]], "Fold": [[1400, "fold"]], "Conv3d": [[1383, "conv3d"], [747, "conv3d"], [756, "conv3d"]], "FractionalMaxPool2d": [[1401, "fractionalmaxpool2d"]], "LPPool1d": [[1421, "lppool1d"]], "Mish": [[1452, "mish"]], "PoissonNLLLoss": [[1467, "poissonnllloss"]], "LayerNorm": [[1425, "layernorm"], [770, "layernorm"]], "LazyBatchNorm1d": [[1426, "lazybatchnorm1d"]], "LazyConv2d": [[1430, "lazyconv2d"]], "NLLLoss": [[1460, "nllloss"]], "LazyConvTranspose1d": [[1432, "lazyconvtranspose1d"]], "MaxUnpool3d": [[1451, "maxunpool3d"]], "LeakyReLU": [[1439, "leakyrelu"], [771, "leakyrelu"]], "Module": [[1453, "module"]], "Linear": [[1440, "linear"], [749, "linear"], [780, "linear"], [748, "linear"], [772, "linear"]], "LocalResponseNorm": [[1441, "localresponsenorm"]], "LazyBatchNorm3d": [[1428, "lazybatchnorm3d"]], "RNNBase": [[1469, "rnnbase"]], "MaxUnpool1d": [[1449, "maxunpool1d"]], "LazyLinear": [[1438, "lazylinear"]], "LazyInstanceNorm1d": [[1435, "lazyinstancenorm1d"]], "MaxUnpool2d": [[1450, "maxunpool2d"]], "LPPool2d": [[1422, "lppool2d"]], "MultiheadAttention": [[1459, "multiheadattention"], [751, "multiheadattention"]], "MarginRankingLoss": [[1445, "marginrankingloss"]], "PairwiseDistance": [[1462, "pairwisedistance"]], "ParameterList": [[1464, "parameterlist"]], "LazyConv3d": [[1431, "lazyconv3d"]], "MaxPool2d": [[1447, "maxpool2d"]], "ParameterDict": [[1463, "parameterdict"]], "LazyConvTranspose3d": [[1434, "lazyconvtranspose3d"]], "LSTMCell": [[1424, "lstmcell"], [779, "lstmcell"]], "LogSoftmax": [[1443, "logsoftmax"]], "MSELoss": [[1444, "mseloss"]], "ModuleList": [[1455, "modulelist"]], "PReLU": [[1461, "prelu"]], "LSTM": [[1423, "lstm"], [750, "lstm"], [778, "lstm"]], "PixelUnshuffle": [[1466, "pixelunshuffle"]], "LogSigmoid": [[1442, "logsigmoid"]], "RNN": [[1468, "rnn"]], "LazyBatchNorm2d": [[1427, "lazybatchnorm2d"]], "PixelShuffle": [[1465, "pixelshuffle"]], "MultiLabelMarginLoss": [[1456, "multilabelmarginloss"]], "MultiLabelSoftMarginLoss": [[1457, "multilabelsoftmarginloss"]], "MaxPool3d": [[1448, "maxpool3d"]], "ModuleDict": [[1454, "moduledict"]], "LazyConv1d": [[1429, "lazyconv1d"]], "LazyConvTranspose2d": [[1433, "lazyconvtranspose2d"]], "MultiMarginLoss": [[1458, "multimarginloss"]], "LazyInstanceNorm3d": [[1437, "lazyinstancenorm3d"]], "MaxPool1d": [[1446, "maxpool1d"]], "LazyInstanceNorm2d": [[1436, "lazyinstancenorm2d"]], "torch.linalg.tensorsolve": [[1287, "torch-linalg-tensorsolve"]], "torch.log": [[1294, "torch-log"]], "torch.logical_xor": [[1305, "torch-logical-xor"]], "torch.lobpcg": [[1293, "torch-lobpcg"]], "torch.maximum": [[1319, "torch-maximum"]], "torch.mean": [[1320, "torch-mean"]], "torch.linalg.svdvals": [[1285, "torch-linalg-svdvals"]], "torch.lt": [[1309, "torch-lt"]], "torch.logical_not": [[1303, "torch-logical-not"]], "torch.lu_unpack": [[1312, "torch-lu-unpack"]], "torch.median": [[1321, "torch-median"]], "torch.logaddexp": [[1298, "torch-logaddexp"]], "torch.masked_select": [[1314, "torch-masked-select"]], "torch.logit": [[1306, "torch-logit"]], "torch.linalg.multi_dot": [[1276, "torch-linalg-multi-dot"]], "torch.linalg.norm": [[1277, "torch-linalg-norm"]], "torch.linalg.solve": [[1281, "torch-linalg-solve"]], "torch.logcumsumexp": [[1300, "torch-logcumsumexp"]], "torch.lu": [[1310, "torch-lu"]], "torch.logical_or": [[1304, "torch-logical-or"]], "torch.linalg.slogdet": [[1280, "torch-linalg-slogdet"]], "torch.linalg.pinv": [[1278, "torch-linalg-pinv"]], "torch.logical_and": [[1302, "torch-logical-and"]], "torch.manual_seed": [[1313, "torch-manual-seed"]], "torch.matrix_exp": [[1316, "torch-matrix-exp"]], "torch.linalg.svd": [[1284, "torch-linalg-svd"]], "torch.linalg.qr": [[1279, "torch-linalg-qr"]], "torch.linspace": [[1291, "torch-linspace"]], "torch.linalg.vecdot": [[1289, "torch-linalg-vecdot"]], "torch.lu_solve": [[1311, "torch-lu-solve"]], "torch.matrix_power": [[1317, "torch-matrix-power"]], "torch.logdet": [[1301, "torch-logdet"]], "torch.log1p": [[1296, "torch-log1p"]], "torch.linalg.matrix_rank": [[1275, "torch-linalg-matrix-rank"]], "torch.log2": [[1297, "torch-log2"]], "torch.linalg.solve_triangular": [[1283, "torch-linalg-solve-triangular"]], "torch.logaddexp2": [[1299, "torch-logaddexp2"]], "torch.linalg.matrix_power": [[1274, "torch-linalg-matrix-power"]], "torch.linalg.solve_ex": [[1282, "torch-linalg-solve-ex"]], "torch.linalg.tensorinv": [[1286, "torch-linalg-tensorinv"]], "torch.load": [[1292, "torch-load"]], "torch.log10": [[1295, "torch-log10"]], "torch.matmul": [[1315, "torch-matmul"]], "torch.logspace": [[1307, "torch-logspace"]], "torch.linalg.vector_norm": [[1290, "torch-linalg-vector-norm"]], "torch.max": [[1318, "torch-max"]], "torch.meshgrid": [[1322, "torch-meshgrid"]], "torch.linalg.vander": [[1288, "torch-linalg-vander"]], "torch.logsumexp": [[1308, "torch-logsumexp"]], "FXE0010:fx-pass": [[96, "fxe0010-fx-pass"]], "ExportDB": [[75, "exportdb"]], "Tags": [[75, null]], "Supported": [[75, "supported"]], "assume_constant_result": [[75, "assume-constant-result"], [84, "assume-constant-result"]], "autograd_function": [[75, "autograd-function"]], "class_method": [[75, "class-method"]], "cond_branch_class_method": [[75, "cond-branch-class-method"], [83, "cond-branch-class-method"], [82, "cond-branch-class-method"]], "cond_branch_nested_function": [[75, "cond-branch-nested-function"], [83, "cond-branch-nested-function"], [82, "cond-branch-nested-function"]], "cond_branch_nonlocal_variables": [[75, "cond-branch-nonlocal-variables"], [83, "cond-branch-nonlocal-variables"], [82, "cond-branch-nonlocal-variables"]], "cond_closed_over_variable": [[75, "cond-closed-over-variable"], [78, "cond-closed-over-variable"], [82, "cond-closed-over-variable"]], "cond_operands": [[75, "cond-operands"], [83, "cond-operands"], [82, "cond-operands"]], "cond_predicate": [[75, "cond-predicate"], [83, "cond-predicate"], [82, "cond-predicate"]], "decorator": [[75, "decorator"]], "dictionary": [[75, "dictionary"], [81, "dictionary"]], "dynamic_shape_assert": [[75, "dynamic-shape-assert"], [76, "dynamic-shape-assert"]], "dynamic_shape_constructor": [[75, "dynamic-shape-constructor"], [83, "dynamic-shape-constructor"]], "dynamic_shape_if_guard": [[75, "dynamic-shape-if-guard"], [80, "dynamic-shape-if-guard"], [83, "dynamic-shape-if-guard"]], "dynamic_shape_map": [[75, "dynamic-shape-map"], [83, "dynamic-shape-map"], [85, "dynamic-shape-map"]], "dynamic_shape_slicing": [[75, "dynamic-shape-slicing"], [83, "dynamic-shape-slicing"]], "dynamic_shape_view": [[75, "dynamic-shape-view"], [83, "dynamic-shape-view"]], "fn_with_kwargs": [[75, "fn-with-kwargs"], [81, "fn-with-kwargs"]], "list_contains": [[75, "list-contains"], [83, "list-contains"], [76, "list-contains"], [81, "list-contains"]], "list_unpack": [[75, "list-unpack"], [80, "list-unpack"], [81, "list-unpack"]], "nested_function": [[75, "nested-function"], [78, "nested-function"]], "null_context_manager": [[75, "null-context-manager"], [79, "null-context-manager"]], "pytree_flatten": [[75, "pytree-flatten"]], "scalar_output": [[75, "scalar-output"], [83, "scalar-output"]], "specialized_attribute": [[75, "specialized-attribute"]], "static_for_loop": [[75, "static-for-loop"], [80, "static-for-loop"]], "static_if": [[75, "static-if"], [80, "static-if"]], "tensor_setattr": [[75, "tensor-setattr"], [77, "tensor-setattr"]], "Not Supported Yet": [[75, "not-supported-yet"]], "dynamic_shape_round": [[75, "dynamic-shape-round"], [83, "dynamic-shape-round"], [77, "dynamic-shape-round"]], "type_reflection_method": [[75, "type-reflection-method"], [77, "type-reflection-method"]], "torch._export.export": [[64, "torch-export-export"]], "Events": [[54, "module-torch.distributed.elastic.events"]], "API Methods": [[54, "api-methods"]], "Event Objects": [[54, "event-objects"]], "Elastic Agent": [[51, "module-torch.distributed.elastic.agent"]], "Server": [[51, "module-torch.distributed.elastic.agent.server"]], "Concepts": [[51, "concepts"]], "Implementations": [[51, "implementations"], [60, "implementations"]], "Extending the Agent": [[51, "extending-the-agent"]], "Watchdog in the Agent": [[51, "watchdog-in-the-agent"]], "Quickstart": [[59, "quickstart"]], "torch.utils.dlpack": [[50, "torch-utils-dlpack"]], "python.closure": [[78, "python-closure"]], "torch.escape-hatch": [[84, "torch-escape-hatch"]], "FXE0003:fx-frontend-aotautograd": [[89, "fxe0003-fx-frontend-aotautograd"]], "Expiration Timers": [[62, "module-torch.distributed.elastic.timer"]], "Client Methods": [[62, "client-methods"]], "Server/Client Implementations": [[62, "server-client-implementations"]], "Writing a custom timer server/client": [[62, "writing-a-custom-timer-server-client"]], "FullyShardedDataParallel": [[66, "module-torch.distributed.fsdp"]], "Train script": [[63, "train-script"]], "Migrating from functorch to torch.func": [[70, "migrating-from-functorch-to-torch-func"]], "function transforms": [[70, "function-transforms"]], "NN module utilities": [[70, "nn-module-utilities"]], "functorch.make_functional": [[70, "functorch-make-functional"]], "functorch.combine_state_for_ensemble": [[70, "functorch-combine-state-for-ensemble"]], "functorch.compile": [[70, "functorch-compile"]], "torch.func Whirlwind Tour": [[72, "torch-func-whirlwind-tour"]], "What is torch.func?": [[72, "what-is-torch-func"]], "Why composable function transforms?": [[72, "why-composable-function-transforms"], [67, "why-composable-function-transforms"]], "What are the transforms?": [[72, "what-are-the-transforms"]], "grad() (gradient computation)": [[72, "grad-gradient-computation"]], "vmap() (auto-vectorization)": [[72, "vmap-auto-vectorization"]], "vjp() (vector-Jacobian product)": [[72, "vjp-vector-jacobian-product"]], "jvp() (Jacobian-vector product)": [[72, "jvp-jacobian-vector-product"]], "jacrev(), jacfwd(), and hessian()": [[72, "jacrev-jacfwd-and-hessian"]], "python.control-flow": [[80, "python-control-flow"]], "DIAGSYS0001:arg-format-too-verbose": [[86, "diagsys0001-arg-format-too-verbose"]], "Probability distributions - torch.distributions": [[49, "module-torch.distributions"]], "Score function": [[49, "score-function"]], "Pathwise derivative": [[49, "pathwise-derivative"]], "Distribution": [[49, "distribution"]], "ExponentialFamily": [[49, "exponentialfamily"]], "Bernoulli": [[49, "bernoulli"]], "Beta": [[49, "beta"]], "Binomial": [[49, "binomial"]], "Categorical": [[49, "categorical"]], "Cauchy": [[49, "cauchy"]], "Chi2": [[49, "chi2"]], "ContinuousBernoulli": [[49, "continuousbernoulli"]], "Dirichlet": [[49, "dirichlet"]], "Exponential": [[49, "exponential"]], "FisherSnedecor": [[49, "fishersnedecor"]], "Gamma": [[49, "gamma"]], "Geometric": [[49, "geometric"]], "Gumbel": [[49, "gumbel"]], "HalfCauchy": [[49, "halfcauchy"]], "HalfNormal": [[49, "halfnormal"]], "Independent": [[49, "independent"]], "Kumaraswamy": [[49, "kumaraswamy"]], "LKJCholesky": [[49, "lkjcholesky"]], "Laplace": [[49, "laplace"]], "LogNormal": [[49, "lognormal"]], "LowRankMultivariateNormal": [[49, "lowrankmultivariatenormal"]], "MixtureSameFamily": [[49, "mixturesamefamily"]], "Multinomial": [[49, "multinomial"]], "MultivariateNormal": [[49, "multivariatenormal"]], "NegativeBinomial": [[49, "negativebinomial"]], "Normal": [[49, "normal"]], "OneHotCategorical": [[49, "onehotcategorical"]], "Pareto": [[49, "pareto"]], "Poisson": [[49, "poisson"]], "RelaxedBernoulli": [[49, "relaxedbernoulli"]], "LogitRelaxedBernoulli": [[49, "logitrelaxedbernoulli"]], "RelaxedOneHotCategorical": [[49, "relaxedonehotcategorical"]], "StudentT": [[49, "studentt"]], "TransformedDistribution": [[49, "transformeddistribution"]], "Uniform": [[49, "uniform"]], "VonMises": [[49, "vonmises"]], "Weibull": [[49, "weibull"]], "Wishart": [[49, "wishart"]], "KL Divergence": [[49, "module-torch.distributions.kl"]], "Transforms": [[49, "module-torch.distributions.transforms"]], "Constraints": [[49, "module-torch.distributions.constraints"], [1922, "constraints"]], "Constraint Registry": [[49, "module-torch.distributions.constraint_registry"]], "Customization": [[52, "customization"]], "Launcher": [[52, "launcher"]], "Rendezvous Handler": [[52, "rendezvous-handler"]], "Metric Handler": [[52, "metric-handler"]], "Events Handler": [[52, "events-handler"]], "torch.futures": [[73, "torch-futures"]], "TorchElastic Kubernetes": [[56, "torchelastic-kubernetes"]], "FXE0001:fx-tracer-success": [[87, "fxe0001-fx-tracer-success"]], "FXE0002:fx-tracer-failure": [[88, "fxe0002-fx-tracer-failure"]], "FXE0011:no-symbolic-function-for-call-function": [[97, "fxe0011-no-symbolic-function-for-call-function"]], "torch.dynamic-shape": [[83, "torch-dynamic-shape"]], "python.assert": [[76, "python-assert"]], "FXE0005:fx-ir-add-node": [[91, "fxe0005-fx-ir-add-node"]], "FXE0006:atenlib-symbolic-function": [[92, "fxe0006-atenlib-symbolic-function"]], "FXE0009:fx-frontend-dynamo-make-fx": [[95, "fxe0009-fx-frontend-dynamo-make-fx"]], "FXE0004:fx-pass-convert-neg-to-sigmoid": [[90, "fxe0004-fx-pass-convert-neg-to-sigmoid"]], "python.data-structure": [[81, "python-data-structure"]], "Patching Batch Norm": [[69, "patching-batch-norm"]], "What\u2019s happening?": [[69, "what-s-happening"]], "How to fix": [[69, "how-to-fix"]], "Option 1: Change the BatchNorm": [[69, "option-1-change-the-batchnorm"]], "Option 2: torchvision parameter": [[69, "option-2-torchvision-parameter"]], "Option 3: functorch\u2019s patching": [[69, "option-3-functorch-s-patching"]], "Option 4: eval mode": [[69, "option-4-eval-mode"]], "torch.func API Reference": [[68, "module-torch.func"]], "Function Transforms": [[68, "function-transforms"]], "Utilities for working with torch.nn.Modules": [[68, "utilities-for-working-with-torch-nn-modules"]], "Error Propagation": [[53, "module-torch.distributed.elastic.multiprocessing.errors"]], "Methods and Classes": [[53, "methods-and-classes"]], "python.context-manager": [[79, "python-context-manager"]], "Multiprocessing": [[58, "module-torch.distributed.elastic.multiprocessing"]], "Starting Multiple Workers": [[58, "starting-multiple-workers"]], "Process Context": [[58, "process-context"]], "torch.cond": [[82, "torch-cond"]], "torch.fft": [[65, "torch-fft"]], "Fast Fourier Transforms": [[65, "fast-fourier-transforms"]], "Helper Functions": [[65, "helper-functions"]], "UX Limitations": [[71, "ux-limitations"]], "General limitations": [[71, "general-limitations"]], "torch.autograd APIs": [[71, "torch-autograd-apis"]], "vmap limitations": [[71, "vmap-limitations"]], "Mutation: Arbitrary mutation of Python data structures": [[71, "mutation-arbitrary-mutation-of-python-data-structures"]], "Mutation: in-place PyTorch Operations": [[71, "mutation-in-place-pytorch-operations"]], "Mutation: out= PyTorch Operations": [[71, "mutation-out-pytorch-operations"]], "Data-dependent Python control flow": [[71, "data-dependent-python-control-flow"]], "Data-dependent operations (.item())": [[71, "data-dependent-operations-item"]], "Dynamic shape operations (nonzero and friends)": [[71, "dynamic-shape-operations-nonzero-and-friends"]], "Randomness": [[71, "randomness"]], "python.builtin": [[77, "python-builtin"]], "FXE0008:fx-node-to-onnx": [[94, "fxe0008-fx-node-to-onnx"]], "torch.func": [[67, "torch-func"]], "What are composable function transforms?": [[67, "what-are-composable-function-transforms"]], "Read More": [[67, "read-more"]], "torch.fx": [[74, "torch-fx"]], "Writing Transformations": [[74, "writing-transformations"]], "A Quick Primer on Graphs": [[74, "a-quick-primer-on-graphs"]], "Graph Manipulation": [[74, "graph-manipulation"]], "Direct Graph Manipulation": [[74, "direct-graph-manipulation"]], "Subgraph Rewriting With replace_pattern()": [[74, "subgraph-rewriting-with-replace-pattern"]], "Graph Manipulation Examples": [[74, "graph-manipulation-examples"]], "Proxy/Retracing": [[74, "proxy-retracing"]], "The Interpreter Pattern": [[74, "the-interpreter-pattern"]], "Examples of the Interpreter Pattern": [[74, "examples-of-the-interpreter-pattern"]], "Common Pitfalls in Transform Authoring": [[74, "common-pitfalls-in-transform-authoring"]], "Checking Correctness of Modules": [[74, "checking-correctness-of-modules"]], "Debugging the Generated Code": [[74, "debugging-the-generated-code"]], "Use pdb": [[74, "use-pdb"]], "Print the Generated Code": [[74, "print-the-generated-code"]], "Use the to_folder Function From GraphModule": [[74, "use-the-to-folder-function-from-graphmodule"]], "Debugging the Transformation": [[74, "debugging-the-transformation"]], "Available Debuggers": [[74, "available-debuggers"]], "Limitations of Symbolic Tracing": [[74, "limitations-of-symbolic-tracing"]], "Dynamic Control Flow": [[74, "dynamic-control-flow"]], "Static Control Flow": [[74, "static-control-flow"]], "Non-torch Functions": [[74, "non-torch-functions"]], "Customizing Tracing with the Tracer class": [[74, "customizing-tracing-with-the-tracer-class"]], "Leaf Modules": [[74, "leaf-modules"]], "Miscellanea": [[74, "miscellanea"]], "torch.map": [[85, "torch-map"]], "Rendezvous": [[60, "module-torch.distributed.elastic.rendezvous"]], "Registry": [[60, "registry"]], "Handler": [[60, "handler"]], "Exceptions": [[60, "exceptions"]], "Dynamic Rendezvous": [[60, "dynamic-rendezvous"]], "C10d Backend": [[60, "c10d-backend"]], "Etcd Backend": [[60, "etcd-backend"]], "Etcd Rendezvous (Legacy)": [[60, "etcd-rendezvous-legacy"]], "Etcd Store": [[60, "etcd-store"]], "Etcd Server": [[60, "etcd-server"]], "Metrics": [[57, "module-torch.distributed.elastic.metrics"]], "Metric Handlers": [[57, "metric-handlers"]], "Methods": [[57, "methods"]], "torchrun (Elastic Launch)": [[61, "module-torch.distributed.run"]], "Transitioning from torch.distributed.launch to torchrun": [[61, "transitioning-from-torch-distributed-launch-to-torchrun"]], "Single-node multi-worker": [[61, "single-node-multi-worker"]], "Stacked single-node multi-worker": [[61, "stacked-single-node-multi-worker"]], "Fault tolerant (fixed sized number of workers, no elasticity, tolerates 3 failures)": [[61, "fault-tolerant-fixed-sized-number-of-workers-no-elasticity-tolerates-3-failures"]], "Elastic (min=1, max=4, tolerates up to 3 membership changes or failures)": [[61, "elastic-min-1-max-4-tolerates-up-to-3-membership-changes-or-failures"]], "Note on rendezvous backend": [[61, "note-on-rendezvous-backend"]], "Definitions": [[61, "definitions"]], "Environment Variables": [[61, "environment-variables"]], "Deployment": [[61, "deployment"]], "Failure Modes": [[61, "failure-modes"]], "Membership Changes": [[61, "membership-changes"]], "Important Notices": [[61, "important-notices"]], "FXE0007:atenlib-fx-to-onnx": [[93, "fxe0007-atenlib-fx-to-onnx"]], "torch.linalg.lu": [[1267, "torch-linalg-lu"]], "torch.jit.onednn_fusion_enabled": [[1229, "torch-jit-onednn-fusion-enabled"]], "torch.jit.unused": [[1238, "torch-jit-unused"]], "torch.jit.save": [[1231, "torch-jit-save"]], "torch.linalg.lu_solve": [[1270, "torch-linalg-lu-solve"]], "torch.kaiser_window": [[1240, "torch-kaiser-window"]], "torch.linalg.cholesky": [[1250, "torch-linalg-cholesky"]], "torch.linalg.matrix_norm": [[1273, "torch-linalg-matrix-norm"]], "torch.less_equal": [[1248, "torch-less-equal"]], "torch.jit.ignore": [[1226, "torch-jit-ignore"]], "torch.linalg.cross": [[1253, "torch-linalg-cross"]], "torch.linalg.ldl_factor": [[1263, "torch-linalg-ldl-factor"]], "torch.lerp": [[1246, "torch-lerp"]], "torch.linalg.ldl_factor_ex": [[1264, "torch-linalg-ldl-factor-ex"]], "torch.jit.load": [[1228, "torch-jit-load"]], "torch.linalg.inv": [[1261, "torch-linalg-inv"]], "torch.jit.trace": [[1236, "torch-jit-trace"]], "torch.jit.script": [[1232, "torch-jit-script"]], "torch.linalg.cholesky_ex": [[1251, "torch-linalg-cholesky-ex"]], "torch.jit.trace_module": [[1237, "torch-jit-trace-module"]], "torch.kron": [[1241, "torch-kron"]], "torch.linalg.eigvals": [[1258, "torch-linalg-eigvals"]], "torch.jit.isinstance": [[1227, "torch-jit-isinstance"]], "torch.linalg.lstsq": [[1266, "torch-linalg-lstsq"]], "torch.less": [[1247, "torch-less"]], "torch.linalg.diagonal": [[1255, "torch-linalg-diagonal"]], "torch.jit.freeze": [[1225, "torch-jit-freeze"]], "torch.linalg.householder_product": [[1260, "torch-linalg-householder-product"]], "torch.lgamma": [[1249, "torch-lgamma"]], "torch.linalg.cond": [[1252, "torch-linalg-cond"]], "torch.linalg.matrix_exp": [[1272, "torch-linalg-matrix-exp"]], "torch.lcm": [[1243, "torch-lcm"]], "torch.jit.optimize_for_inference": [[1230, "torch-jit-optimize-for-inference"]], "torch.linalg.inv_ex": [[1262, "torch-linalg-inv-ex"]], "torch.linalg.lu_factor": [[1268, "torch-linalg-lu-factor"]], "torch.jit.set_fusion_strategy": [[1234, "torch-jit-set-fusion-strategy"]], "torch.linalg.eigh": [[1257, "torch-linalg-eigh"]], "torch.linalg.det": [[1254, "torch-linalg-det"]], "torch.jit.script_if_tracing": [[1233, "torch-jit-script-if-tracing"]], "torch.ldexp": [[1244, "torch-ldexp"]], "torch.le": [[1245, "torch-le"]], "torch.linalg.eig": [[1256, "torch-linalg-eig"]], "torch.linalg.lu_factor_ex": [[1269, "torch-linalg-lu-factor-ex"]], "torch.linalg.ldl_solve": [[1265, "torch-linalg-ldl-solve"]], "torch.linalg.matmul": [[1271, "torch-linalg-matmul"]], "torch.linalg.eigvalsh": [[1259, "torch-linalg-eigvalsh"]], "strict_fusion": [[1235, "strict-fusion"]], "torch.kthvalue": [[1242, "torch-kthvalue"]], "torch.jit.wait": [[1239, "torch-jit-wait"]], "torch.isin": [[1212, "torch-isin"]], "torch.histc": [[1181, "torch-histc"]], "torch.histogramdd": [[1183, "torch-histogramdd"]], "torch.isposinf": [[1216, "torch-isposinf"]], "torch.isreal": [[1217, "torch-isreal"]], "torch.is_inference_mode_enabled": [[1205, "torch-is-inference-mode-enabled"]], "torch.hypot": [[1187, "torch-hypot"]], "torch.igammac": [[1190, "torch-igammac"]], "torch.greater_equal": [[1176, "torch-greater-equal"]], "torch.hamming_window": [[1178, "torch-hamming-window"]], "torch.inverse": [[1199, "torch-inverse"]], "torch.is_floating_point": [[1203, "torch-is-floating-point"]], "inference_mode": [[1196, "inference-mode"]], "torch.hann_window": [[1179, "torch-hann-window"]], "torch.heaviside": [[1180, "torch-heaviside"]], "torch.isnan": [[1214, "torch-isnan"]], "torch.jit.enable_onednn_fusion": [[1223, "torch-jit-enable-onednn-fusion"]], "torch.is_grad_enabled": [[1204, "torch-is-grad-enabled"]], "torch.index_reduce": [[1194, "torch-index-reduce"]], "ScriptModule": [[1221, "scriptmodule"]], "torch.isfinite": [[1211, "torch-isfinite"]], "torch.jit.fork": [[1224, "torch-jit-fork"]], "torch.jit.annotate": [[1222, "torch-jit-annotate"]], "torch.isclose": [[1210, "torch-isclose"]], "torch.imag": [[1191, "torch-imag"]], "torch.hsplit": [[1184, "torch-hsplit"]], "torch.gt": [[1177, "torch-gt"]], "torch.initial_seed": [[1197, "torch-initial-seed"]], "torch.index_copy": [[1193, "torch-index-copy"]], "ScriptFunction": [[1220, "scriptfunction"]], "torch.hstack": [[1186, "torch-hstack"]], "torch.is_tensor": [[1208, "torch-is-tensor"]], "torch.is_deterministic_algorithms_warn_only_enabled": [[1202, "torch-is-deterministic-algorithms-warn-only-enabled"]], "torch.isinf": [[1213, "torch-isinf"]], "torch.igamma": [[1189, "torch-igamma"]], "torch.is_conj": [[1201, "torch-is-conj"]], "torch.istft": [[1218, "torch-istft"]], "torch.i0": [[1188, "torch-i0"]], "torch.histogram": [[1182, "torch-histogram"]], "torch.hspmm": [[1185, "torch-hspmm"]], "torch.is_warn_always_enabled": [[1209, "torch-is-warn-always-enabled"]], "Attribute": [[1219, "attribute"]], "torch.index_select": [[1195, "torch-index-select"]], "torch.isneginf": [[1215, "torch-isneginf"]], "torch.is_storage": [[1207, "torch-is-storage"]], "torch.is_nonzero": [[1206, "torch-is-nonzero"]], "torch.inner": [[1198, "torch-inner"]], "torch.is_complex": [[1200, "torch-is-complex"]], "torch.index_add": [[1192, "torch-index-add"]], "torch.floor_divide": [[1139, "torch-floor-divide"]], "torch.func.jacfwd": [[1155, "torch-func-jacfwd"]], "torch.float_power": [[1137, "torch-float-power"]], "torch.func.grad": [[1152, "torch-func-grad"]], "torch.func.stack_module_state": [[1160, "torch-func-stack-module-state"]], "torch.fft.rfft2": [[1129, "torch-fft-rfft2"]], "torch.ger": [[1167, "torch-ger"]], "torch.get_default_dtype": [[1168, "torch-get-default-dtype"]], "torch.func.jvp": [[1157, "torch-func-jvp"]], "torch.greater": [[1175, "torch-greater"]], "torch.gather": [[1163, "torch-gather"]], "torch.fmod": [[1142, "torch-fmod"]], "torch.full_like": [[1149, "torch-full-like"]], "torch.get_num_threads": [[1172, "torch-get-num-threads"]], "torch.func.vjp": [[1161, "torch-func-vjp"]], "torch.get_num_interop_threads": [[1171, "torch-get-num-interop-threads"]], "torch.frac": [[1143, "torch-frac"]], "torch.func.functionalize": [[1151, "torch-func-functionalize"]], "torch.get_float32_matmul_precision": [[1170, "torch-get-float32-matmul-precision"]], "torch.fmax": [[1140, "torch-fmax"]], "torch.func.replace_all_batch_norm_modules_": [[1159, "torch-func-replace-all-batch-norm-modules"]], "torch.fft.rfft": [[1128, "torch-fft-rfft"]], "torch.floor": [[1138, "torch-floor"]], "torch.fft.rfftn": [[1131, "torch-fft-rfftn"]], "torch.func.linearize": [[1158, "torch-func-linearize"]], "torch.fft.rfftfreq": [[1130, "torch-fft-rfftfreq"]], "torch.flip": [[1134, "torch-flip"]], "torch.func.hessian": [[1154, "torch-func-hessian"]], "torch.fft.irfftn": [[1127, "torch-fft-irfftn"]], "torch.fmin": [[1141, "torch-fmin"]], "torch.frombuffer": [[1147, "torch-frombuffer"]], "torch.ge": [[1165, "torch-ge"]], "torch.get_rng_state": [[1173, "torch-get-rng-state"]], "torch.func.jacrev": [[1156, "torch-func-jacrev"]], "torch.get_deterministic_debug_mode": [[1169, "torch-get-deterministic-debug-mode"]], "torch.from_dlpack": [[1145, "torch-from-dlpack"]], "torch.frexp": [[1144, "torch-frexp"]], "torch.fix": [[1132, "torch-fix"]], "torch.full": [[1148, "torch-full"]], "torch.func.grad_and_value": [[1153, "torch-func-grad-and-value"]], "torch.flipud": [[1136, "torch-flipud"]], "torch.gcd": [[1164, "torch-gcd"]], "torch.flatten": [[1133, "torch-flatten"]], "torch.fliplr": [[1135, "torch-fliplr"]], "torch.func.functional_call": [[1150, "torch-func-functional-call"]], "torch.gradient": [[1174, "torch-gradient"]], "torch.geqrf": [[1166, "torch-geqrf"]], "torch.func.vmap": [[1162, "torch-func-vmap"]], "torch.from_numpy": [[1146, "torch-from-numpy"]], "torch.fft.fft": [[1110, "torch-fft-fft"]], "torch.diagflat": [[1083, "torch-diagflat"]], "torch.empty_like": [[1096, "torch-empty-like"]], "torch.digamma": [[1087, "torch-digamma"]], "torch.dot": [[1091, "torch-dot"]], "torch.diag_embed": [[1082, "torch-diag-embed"]], "torch.dstack": [[1093, "torch-dstack"]], "torch.diagonal": [[1084, "torch-diagonal"]], "torch.fft.fftn": [[1113, "torch-fft-fftn"]], "torch.divide": [[1090, "torch-divide"]], "torch.dsplit": [[1092, "torch-dsplit"]], "torch.eye": [[1107, "torch-eye"]], "torch.fft.fftfreq": [[1112, "torch-fft-fftfreq"]], "torch.fft.ifftshift": [[1121, "torch-fft-ifftshift"]], "torch.div": [[1089, "torch-div"]], "torch.fft.irfft": [[1125, "torch-fft-irfft"]], "torch.diag": [[1081, "torch-diag"]], "torch.exp": [[1104, "torch-exp"]], "enable_grad": [[1098, "enable-grad"]], "torch.fft.hfft": [[1115, "torch-fft-hfft"]], "torch.fft.ihfftn": [[1124, "torch-fft-ihfftn"]], "torch.deg2rad": [[1078, "torch-deg2rad"]], "torch.fft.ihfft2": [[1123, "torch-fft-ihfft2"]], "torch.erfc": [[1102, "torch-erfc"]], "torch.fft.hfftn": [[1117, "torch-fft-hfftn"]], "torch.empty": [[1095, "torch-empty"]], "torch.fft.ifft2": [[1119, "torch-fft-ifft2"]], "torch.exp2": [[1105, "torch-exp2"]], "torch.fft.ihfft": [[1122, "torch-fft-ihfft"]], "torch.fft.fftshift": [[1114, "torch-fft-fftshift"]], "torch.empty_strided": [[1097, "torch-empty-strided"]], "torch.einsum": [[1094, "torch-einsum"]], "torch.expm1": [[1106, "torch-expm1"]], "torch.erf": [[1101, "torch-erf"]], "torch.diagonal_scatter": [[1085, "torch-diagonal-scatter"]], "torch.dequantize": [[1079, "torch-dequantize"]], "torch.fake_quantize_per_channel_affine": [[1108, "torch-fake-quantize-per-channel-affine"]], "torch.fft.hfft2": [[1116, "torch-fft-hfft2"]], "torch.det": [[1080, "torch-det"]], "torch.diff": [[1086, "torch-diff"]], "torch.fft.irfft2": [[1126, "torch-fft-irfft2"]], "torch.erfinv": [[1103, "torch-erfinv"]], "torch.fft.fft2": [[1111, "torch-fft-fft2"]], "torch.dist": [[1088, "torch-dist"]], "torch.fft.ifftn": [[1120, "torch-fft-ifftn"]], "torch.fft.ifft": [[1118, "torch-fft-ifft"]], "torch.eq": [[1099, "torch-eq"]], "torch.equal": [[1100, "torch-equal"]], "torch.fake_quantize_per_tensor_affine": [[1109, "torch-fake-quantize-per-tensor-affine"]], "torch.cuda.reset_max_memory_cached": [[1059, "torch-cuda-reset-max-memory-cached"]], "torch.cuda.is_current_stream_capturing": [[1035, "torch-cuda-is-current-stream-capturing"]], "torch.cuda.nvtx.range_pop": [[1055, "torch-cuda-nvtx-range-pop"]], "torch.cuda.max_memory_cached": [[1044, "torch-cuda-max-memory-cached"]], "torch.cummin": [[1074, "torch-cummin"]], "torch.cuda.list_gpu_processes": [[1039, "torch-cuda-list-gpu-processes"]], "torch.cuda.memory_reserved": [[1049, "torch-cuda-memory-reserved"]], "torch.cuda.nvtx.range_push": [[1056, "torch-cuda-nvtx-range-push"]], "torch.cuda.memory_allocated": [[1047, "torch-cuda-memory-allocated"]], "torch.cuda.make_graphed_callables": [[1040, "torch-cuda-make-graphed-callables"]], "graph": [[1029, "graph"]], "torch.cuda.max_memory_allocated": [[1043, "torch-cuda-max-memory-allocated"]], "torch.cuda.memory_stats": [[1051, "torch-cuda-memory-stats"]], "torch.cuda.is_available": [[1034, "torch-cuda-is-available"]], "torch.cuda.mem_get_info": [[1046, "torch-cuda-mem-get-info"]], "torch.cuda.is_initialized": [[1036, "torch-cuda-is-initialized"]], "torch.cuda.jiterator._create_multi_output_jit_fn": [[1038, "torch-cuda-jiterator-create-multi-output-jit-fn"]], "torch.cuda.memory_summary": [[1052, "torch-cuda-memory-summary"]], "torch.cuda.power_draw": [[1057, "torch-cuda-power-draw"]], "torch.cummax": [[1073, "torch-cummax"]], "torch.cuda.set_per_process_memory_fraction": [[1064, "torch-cuda-set-per-process-memory-fraction"]], "torch.cuda.set_rng_state": [[1065, "torch-cuda-set-rng-state"]], "torch.cuda.initial_seed": [[1032, "torch-cuda-initial-seed"]], "torch.cuda.temperature": [[1071, "torch-cuda-temperature"]], "torch.cuda.reset_peak_memory_stats": [[1060, "torch-cuda-reset-peak-memory-stats"]], "torch.cuda.memory_snapshot": [[1050, "torch-cuda-memory-snapshot"]], "torch.cuda.synchronize": [[1070, "torch-cuda-synchronize"]], "torch.cuda.set_sync_debug_mode": [[1068, "torch-cuda-set-sync-debug-mode"]], "torch.cuda.memory_cached": [[1048, "torch-cuda-memory-cached"]], "torch.cuda.set_device": [[1063, "torch-cuda-set-device"]], "torch.cuda.nvtx.mark": [[1054, "torch-cuda-nvtx-mark"]], "torch.cuda.utilization": [[1072, "torch-cuda-utilization"]], "torch.cuda.stream": [[1069, "torch-cuda-stream"]], "torch.cuda.manual_seed": [[1041, "torch-cuda-manual-seed"]], "torch.cumsum": [[1076, "torch-cumsum"]], "torch.cuda.manual_seed_all": [[1042, "torch-cuda-manual-seed-all"]], "torch.cuda.memory_usage": [[1053, "torch-cuda-memory-usage"]], "torch.cuda.ipc_collect": [[1033, "torch-cuda-ipc-collect"]], "torch.cuda.set_stream": [[1067, "torch-cuda-set-stream"]], "torch.cuda.init": [[1031, "torch-cuda-init"]], "torch.cuda.seed_all": [[1062, "torch-cuda-seed-all"]], "torch.cuda.seed": [[1061, "torch-cuda-seed"]], "torch.cuda.reset_max_memory_allocated": [[1058, "torch-cuda-reset-max-memory-allocated"]], "torch.cumprod": [[1075, "torch-cumprod"]], "torch.cuda.jiterator._create_jit_fn": [[1037, "torch-cuda-jiterator-create-jit-fn"]], "torch.cuda.graph_pool_handle": [[1030, "torch-cuda-graph-pool-handle"]], "torch.cuda.set_rng_state_all": [[1066, "torch-cuda-set-rng-state-all"]], "torch.cuda.max_memory_reserved": [[1045, "torch-cuda-max-memory-reserved"]], "torch.cumulative_trapezoid": [[1077, "torch-cumulative-trapezoid"]], "Stream": [[1000, "stream"], [987, "stream"]], "torch.cpu.device_count": [[990, "torch-cpu-device-count"]], "StreamContext": [[1001, "streamcontext"], [988, "streamcontext"]], "device_of": [[1018, "device-of"]], "torch.cuda.comm.broadcast": [[1007, "torch-cuda-comm-broadcast"]], "torch.cuda.change_current_allocator": [[1005, "torch-cuda-change-current-allocator"]], "torch.cuda.get_sync_debug_mode": [[1028, "torch-cuda-get-sync-debug-mode"]], "torch.cuda.device_count": [[1017, "torch-cuda-device-count"]], "torch.cpu.current_stream": [[989, "torch-cpu-current-stream"]], "CUDAPluggableAllocator": [[996, "cudapluggableallocator"]], "torch.cuda.get_arch_list": [[1021, "torch-cuda-get-arch-list"]], "torch.count_nonzero": [[985, "torch-count-nonzero"]], "torch.cuda.comm.reduce_add": [[1010, "torch-cuda-comm-reduce-add"]], "ExternalStream": [[998, "externalstream"]], "torch.copysign": [[981, "torch-copysign"]], "torch.cuda.OutOfMemoryError": [[999, "torch-cuda-outofmemoryerror"]], "torch.cuda.get_device_properties": [[1024, "torch-cuda-get-device-properties"]], "torch.cuda.empty_cache": [[1019, "torch-cuda-empty-cache"]], "torch.cuda.get_device_capability": [[1022, "torch-cuda-get-device-capability"]], "torch.cuda.get_allocator_backend": [[1020, "torch-cuda-get-allocator-backend"]], "torch.cuda.clock_rate": [[1006, "torch-cuda-clock-rate"]], "torch.cuda.comm.scatter": [[1011, "torch-cuda-comm-scatter"]], "torch.cosh": [[984, "torch-cosh"]], "torch.conj_physical": [[980, "torch-conj-physical"]], "torch.corrcoef": [[982, "torch-corrcoef"]], "device": [[1016, "device"]], "CUDAGraph": [[995, "cudagraph"]], "torch.cuda.get_device_name": [[1023, "torch-cuda-get-device-name"]], "torch.cuda.can_device_access_peer": [[1004, "torch-cuda-can-device-access-peer"]], "torch.cuda.current_stream": [[1014, "torch-cuda-current-stream"]], "torch.cuda.get_rng_state_all": [[1027, "torch-cuda-get-rng-state-all"]], "torch.cuda.caching_allocator_alloc": [[1002, "torch-cuda-caching-allocator-alloc"]], "torch.cos": [[983, "torch-cos"]], "torch.cpu.stream": [[992, "torch-cpu-stream"]], "torch.cuda.comm.broadcast_coalesced": [[1008, "torch-cuda-comm-broadcast-coalesced"]], "torch.cuda.current_blas_handle": [[1012, "torch-cuda-current-blas-handle"]], "torch.cuda.get_rng_state": [[1026, "torch-cuda-get-rng-state"]], "torch.cuda.get_gencode_flags": [[1025, "torch-cuda-get-gencode-flags"]], "torch.cuda.caching_allocator_delete": [[1003, "torch-cuda-caching-allocator-delete"]], "torch.cpu.synchronize": [[993, "torch-cpu-synchronize"]], "torch.cross": [[994, "torch-cross"]], "torch.cuda.current_device": [[1013, "torch-cuda-current-device"]], "torch.cov": [[986, "torch-cov"]], "torch.cpu.is_available": [[991, "torch-cpu-is-available"]], "Event": [[997, "event"]], "torch.cuda.comm.gather": [[1009, "torch-cuda-comm-gather"]], "torch.cuda.default_stream": [[1015, "torch-cuda-default-stream"]], "torch.clamp": [[963, "torch-clamp"]], "torch.autograd.profiler.profile.export_chrome_trace": [[932, "torch-autograd-profiler-profile-export-chrome-trace"]], "torch.clip": [[964, "torch-clip"]], "torch.column_stack": [[966, "torch-column-stack"]], "torch.ceil": [[957, "torch-ceil"]], "torch.chunk": [[962, "torch-chunk"]], "torch.bitwise_right_shift": [[944, "torch-bitwise-right-shift"]], "torch.compiler.compile": [[972, "torch-compiler-compile"]], "torch.bernoulli": [[938, "torch-bernoulli"]], "torch.cholesky_inverse": [[960, "torch-cholesky-inverse"]], "torch.compiler.assume_constant_result": [[971, "torch-compiler-assume-constant-result"]], "torch.bitwise_xor": [[945, "torch-bitwise-xor"]], "torch.baddbmm": [[936, "torch-baddbmm"]], "torch.autograd.profiler.profile.total_average": [[935, "torch-autograd-profiler-profile-total-average"]], "torch.chain_matmul": [[958, "torch-chain-matmul"]], "torch.bitwise_not": [[942, "torch-bitwise-not"]], "torch.compiler.disable": [[973, "torch-compiler-disable"]], "torch.concat": [[977, "torch-concat"]], "torch.bitwise_and": [[940, "torch-bitwise-and"]], "torch.compiler.reset": [[975, "torch-compiler-reset"]], "torch.block_diag": [[947, "torch-block-diag"]], "torch.complex": [[976, "torch-complex"]], "torch.compiled_with_cxx11_abi": [[969, "torch-compiled-with-cxx11-abi"]], "torch.compiler.allow_in_graph": [[970, "torch-compiler-allow-in-graph"]], "torch.autograd.profiler.load_nvprof": [[931, "torch-autograd-profiler-load-nvprof"]], "torch.blackman_window": [[946, "torch-blackman-window"]], "torch.bmm": [[948, "torch-bmm"]], "torch.autograd.profiler.profile.key_averages": [[933, "torch-autograd-profiler-profile-key-averages"]], "torch.can_cast": [[953, "torch-can-cast"]], "torch.cholesky": [[959, "torch-cholesky"]], "torch.concatenate": [[978, "torch-concatenate"]], "torch.autograd.profiler.profile.self_cpu_time_total": [[934, "torch-autograd-profiler-profile-self-cpu-time-total"]], "torch.broadcast_to": [[951, "torch-broadcast-to"]], "torch.broadcast_shapes": [[949, "torch-broadcast-shapes"]], "torch.bucketize": [[952, "torch-bucketize"]], "torch.combinations": [[967, "torch-combinations"]], "torch.cat": [[955, "torch-cat"]], "torch.cartesian_prod": [[954, "torch-cartesian-prod"]], "torch.cholesky_solve": [[961, "torch-cholesky-solve"]], "torch.bincount": [[939, "torch-bincount"]], "torch.broadcast_tensors": [[950, "torch-broadcast-tensors"]], "torch.bitwise_left_shift": [[941, "torch-bitwise-left-shift"]], "torch.compiler.list_backends": [[974, "torch-compiler-list-backends"]], "torch.clone": [[965, "torch-clone"]], "torch.conj": [[979, "torch-conj"]], "torch.bartlett_window": [[937, "torch-bartlett-window"]], "torch.cdist": [[956, "torch-cdist"]], "torch.bitwise_or": [[943, "torch-bitwise-or"]], "torch.arccos": [[882, "torch-arccos"]], "torch.atleast_3d": [[904, "torch-atleast-3d"]], "torch.autograd.function.FunctionCtx.mark_dirty": [[913, "torch-autograd-function-functionctx-mark-dirty"]], "torch.autograd.function.FunctionCtx.mark_non_differentiable": [[914, "torch-autograd-function-functionctx-mark-non-differentiable"]], "torch.argmax": [[890, "torch-argmax"]], "torch.autograd.graph.Node.metadata": [[926, "torch-autograd-graph-node-metadata"]], "torch.autograd.function.FunctionCtx.set_materialize_grads": [[916, "torch-autograd-function-functionctx-set-materialize-grads"]], "torch.autograd.graph.Node.next_functions": [[928, "torch-autograd-graph-node-next-functions"]], "torch.asinh": [[898, "torch-asinh"]], "torch.arcsin": [[884, "torch-arcsin"]], "torch.arctan": [[886, "torch-arctan"]], "torch.arctan2": [[887, "torch-arctan2"]], "torch.arcsinh": [[885, "torch-arcsinh"]], "torch.atanh": [[901, "torch-atanh"]], "torch.argmin": [[891, "torch-argmin"]], "torch.autograd.Function.vmap": [[908, "torch-autograd-function-vmap"]], "torch.autograd.Function.jvp": [[907, "torch-autograd-function-jvp"]], "torch.atan": [[899, "torch-atan"]], "torch.atleast_2d": [[903, "torch-atleast-2d"]], "torch.as_strided": [[894, "torch-as-strided"]], "torch.atleast_1d": [[902, "torch-atleast-1d"]], "torch.autograd.functional.hvp": [[918, "torch-autograd-functional-hvp"]], "torch.autograd.grad": [[923, "torch-autograd-grad"]], "torch.autograd.backward": [[909, "torch-autograd-backward"]], "torch.autograd.functional.vhp": [[921, "torch-autograd-functional-vhp"]], "torch.autograd.forward_ad.make_dual": [[911, "torch-autograd-forward-ad-make-dual"]], "torch.autograd.functional.vjp": [[922, "torch-autograd-functional-vjp"]], "dual_level": [[910, "dual-level"]], "torch.argsort": [[892, "torch-argsort"]], "torch.arccosh": [[883, "torch-arccosh"]], "torch.argwhere": [[893, "torch-argwhere"]], "torch.atan2": [[900, "torch-atan2"]], "torch.autograd.Function.backward": [[905, "torch-autograd-function-backward"]], "torch.asin": [[897, "torch-asin"]], "torch.autograd.functional.jacobian": [[919, "torch-autograd-functional-jacobian"]], "torch.autograd.graph.Node.register_prehook": [[930, "torch-autograd-graph-node-register-prehook"]], "torch.autograd.functional.hessian": [[917, "torch-autograd-functional-hessian"]], "torch.autograd.graph.Node.register_hook": [[929, "torch-autograd-graph-node-register-hook"]], "torch.autograd.functional.jvp": [[920, "torch-autograd-functional-jvp"]], "torch.autograd.graph.Node.name": [[927, "torch-autograd-graph-node-name"]], "torch.autograd.Function.forward": [[906, "torch-autograd-function-forward"]], "torch.autograd.forward_ad.unpack_dual": [[912, "torch-autograd-forward-ad-unpack-dual"]], "torch.autograd.gradgradcheck": [[925, "torch-autograd-gradgradcheck"]], "torch.autograd.function.FunctionCtx.save_for_backward": [[915, "torch-autograd-function-functionctx-save-for-backward"]], "torch.are_deterministic_algorithms_enabled": [[889, "torch-are-deterministic-algorithms-enabled"]], "torch.asarray": [[896, "torch-asarray"]], "torch.as_tensor": [[895, "torch-as-tensor"]], "torch.arctanh": [[888, "torch-arctanh"]], "torch.autograd.gradcheck": [[924, "torch-autograd-gradcheck"]], "default_debug_observer": [[844, "default-debug-observer"]], "float16_static_qconfig": [[867, "float16-static-qconfig"]], "default_per_channel_weight_observer": [[849, "default-per-channel-weight-observer"]], "fuse_fx": [[876, "fuse-fx"]], "default_dynamic_qconfig": [[860, "default-dynamic-qconfig"]], "StandaloneModuleConfigEntry": [[834, "standalonemoduleconfigentry"]], "PerChannelMinMaxObserver": [[841, "perchannelminmaxobserver"]], "default_weight_observer": [[851, "default-weight-observer"]], "default_float_qparams_observer": [[846, "default-float-qparams-observer"]], "swap_module": [[880, "swap-module"]], "default_placeholder_observer": [[850, "default-placeholder-observer"]], "MovingAverageMinMaxObserver": [[837, "movingaverageminmaxobserver"]], "get_default_qat_qconfig_mapping": [[871, "get-default-qat-qconfig-mapping"]], "prepare_fx": [[877, "prepare-fx"]], "default_qconfig": [[864, "default-qconfig"]], "load_observer_state_dict": [[853, "load-observer-state-dict"]], "default_qat_qconfig_v2": [[863, "default-qat-qconfig-v2"]], "QConfigMapping": [[870, "qconfigmapping"]], "HistogramObserver": [[835, "histogramobserver"]], "PrepareCustomConfig": [[833, "preparecustomconfig"]], "prepare_qat": [[855, "prepare-qat"]], "default_observer": [[848, "default-observer"]], "default_histogram_observer": [[847, "default-histogram-observer"]], "default_debug_qconfig": [[859, "default-debug-qconfig"]], "default_weight_only_qconfig": [[865, "default-weight-only-qconfig"]], "get_observer_state_dict": [[852, "get-observer-state-dict"]], "quantize_dynamic": [[874, "quantize-dynamic"]], "PlaceholderObserver": [[842, "placeholderobserver"]], "default_dynamic_quant_observer": [[845, "default-dynamic-quant-observer"]], "quantize_qat": [[879, "quantize-qat"]], "ObserverBase": [[840, "observerbase"]], "QConfig": [[857, "qconfig"], [1944, "qconfig"]], "NoopObserver": [[839, "noopobserver"]], "float16_dynamic_qconfig": [[866, "float16-dynamic-qconfig"]], "convert_fx": [[875, "convert-fx"]], "prepare_qat_fx": [[878, "prepare-qat-fx"]], "MovingAveragePerChannelMinMaxObserver": [[838, "movingaverageperchannelminmaxobserver"]], "default_activation_only_qconfig": [[858, "default-activation-only-qconfig"]], "torch.arange": [[881, "torch-arange"]], "RecordingObserver": [[843, "recordingobserver"]], "prepare": [[854, "prepare"]], "default_qat_qconfig": [[862, "default-qat-qconfig"]], "quantize": [[873, "quantize"]], "MinMaxObserver": [[836, "minmaxobserver"]], "per_channel_dynamic_qconfig": [[869, "per-channel-dynamic-qconfig"]], "propagate_qconfig": [[856, "propagate-qconfig"]], "float_qparams_weight_only_qconfig": [[868, "float-qparams-weight-only-qconfig"]], "get_default_qconfig_mapping": [[872, "get-default-qconfig-mapping"]], "default_per_channel_qconfig": [[861, "default-per-channel-qconfig"]], "Numerical accuracy": [[1933, "numerical-accuracy"]], "Batched computations or slice computations": [[1933, "batched-computations-or-slice-computations"]], "Extremal values": [[1933, "extremal-values"]], "Linear algebra (torch.linalg)": [[1933, "linear-algebra-torch-linalg"]], "Non-finite values": [[1933, "non-finite-values"]], "Extremal values in linalg": [[1933, "extremal-values-in-linalg"]], "TensorFloat-32(TF32) on Nvidia Ampere devices": [[1933, "tensorfloat-32-tf32-on-nvidia-ampere-devices"]], "Reduced Precision Reduction for FP16  and BF16 GEMMs": [[1933, "reduced-precision-reduction-for-fp16-and-bf16-gemms"]], "Reduced Precision FP16 and BF16 GEMMs and Convolutions on AMD Instinct MI200 devices": [[1933, "reduced-precision-fp16-and-bf16-gemms-and-convolutions-on-amd-instinct-mi200-devices"]], "Tensor Attributes": [[1956, "tensor-attributes"]], "torch.dtype": [[1956, "torch-dtype"]], "torch.device": [[1956, "torch-device"]], "torch.layout": [[1956, "torch-layout"]], "torch.memory_format": [[1956, "torch-memory-format"]], "torch.onnx": [[1937, "torch-onnx"]], "Example: AlexNet from PyTorch to ONNX": [[1937, "example-alexnet-from-pytorch-to-onnx"]], "Tracing vs Scripting": [[1937, "tracing-vs-scripting"]], "Avoiding Pitfalls": [[1937, "avoiding-pitfalls"]], "Avoid NumPy and built-in Python types": [[1937, "avoid-numpy-and-built-in-python-types"]], "Avoid Tensor.data": [[1937, "avoid-tensor-data"]], "Avoid in-place operations when using tensor.shape in tracing mode": [[1937, "avoid-in-place-operations-when-using-tensor-shape-in-tracing-mode"]], "Differences in Operator Implementations": [[1937, "differences-in-operator-implementations"]], "Unsupported Tensor Indexing Patterns": [[1937, "unsupported-tensor-indexing-patterns"]], "Reads / Gets": [[1937, "reads-gets"]], "Writes / Sets": [[1937, "writes-sets"]], "Adding support for operators": [[1937, "adding-support-for-operators"]], "ONNX exporter internals": [[1937, "onnx-exporter-internals"]], "ATen operators": [[1937, "aten-operators"]], "List of supported operators": [[1937, "list-of-supported-operators"]], "Adding support for an aten or quantized operator": [[1937, "adding-support-for-an-aten-or-quantized-operator"]], "torch.autograd.Functions": [[1937, "torch-autograd-functions"]], "Static Symbolic Method": [[1937, "static-symbolic-method"]], "Inline Autograd Function": [[1937, "inline-autograd-function"]], "Custom operators": [[1937, "custom-operators"]], "ONNX-script functions": [[1937, "onnx-script-functions"]], "C++ Operators": [[1937, "c-operators"]], "Discovering all unconvertible ATen ops at once": [[1937, "discovering-all-unconvertible-aten-ops-at-once"]], "Contributing / developing": [[1937, "contributing-developing"]], "Classes": [[1937, "classes"]], "Preview: torch.onnx TorchDynamo Exporter": [[1937, "preview-torch-onnx-torchdynamo-exporter"]], "torch.random": [[1948, "module-torch.random"]], "torch.nn": [[1915, "module-torch.nn"], [1915, "id1"]], "Containers": [[1915, "containers"]], "Convolution Layers": [[1915, "convolution-layers"]], "Pooling layers": [[1915, "pooling-layers"]], "Padding Layers": [[1915, "padding-layers"]], "Non-linear Activations (weighted sum, nonlinearity)": [[1915, "non-linear-activations-weighted-sum-nonlinearity"]], "Non-linear Activations (other)": [[1915, "non-linear-activations-other"]], "Normalization Layers": [[1915, "normalization-layers"]], "Recurrent Layers": [[1915, "recurrent-layers"]], "Transformer Layers": [[1915, "transformer-layers"]], "Linear Layers": [[1915, "linear-layers"]], "Dropout Layers": [[1915, "dropout-layers"]], "Sparse Layers": [[1915, "sparse-layers"]], "Distance Functions": [[1915, "distance-functions"]], "Loss Functions": [[1915, "loss-functions"]], "Vision Layers": [[1915, "vision-layers"]], "Shuffle Layers": [[1915, "shuffle-layers"]], "DataParallel Layers (multi-GPU, distributed)": [[1915, "module-torch.nn.parallel"]], "Quantized Functions": [[1915, "quantized-functions"]], "Lazy Modules Initialization": [[1915, "lazy-modules-initialization"]], "Quantization API Reference": [[1947, "quantization-api-reference"], [1944, "quantization-api-reference"]], "torch.ao.quantization": [[1947, "torch-ao-quantization"]], "Top level APIs": [[1947, "top-level-apis"]], "Preparing model for quantization": [[1947, "preparing-model-for-quantization"]], "Utility functions": [[1947, "utility-functions"], [1935, "utility-functions"]], "torch.ao.quantization.quantize_fx": [[1947, "torch-ao-quantization-quantize-fx"]], "torch.ao.quantization.qconfig_mapping": [[1947, "torch-ao-quantization-qconfig-mapping"]], "torch.ao.quantization.backend_config": [[1947, "torch-ao-quantization-backend-config"]], "torch.ao.quantization.fx.custom_config": [[1947, "torch-ao-quantization-fx-custom-config"]], "torch.ao.quantization.quantizer": [[1947, "module-torch.ao.quantization.quantizer"]], "torch.ao.quantization.pt2e (quantization in pytorch 2.0 export implementation)": [[1947, "module-torch.ao.quantization.pt2e"]], "torch (quantization related functions)": [[1947, "torch-quantization-related-functions"]], "torch.Tensor (quantization related methods)": [[1947, "torch-tensor-quantization-related-methods"]], "torch.ao.quantization.observer": [[1947, "torch-ao-quantization-observer"]], "torch.ao.quantization.fake_quantize": [[1947, "torch-ao-quantization-fake-quantize"]], "torch.ao.quantization.qconfig": [[1947, "torch-ao-quantization-qconfig"]], "torch.ao.nn.intrinsic": [[1947, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.qat": [[1947, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.quantized": [[1947, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1947, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.qat": [[1947, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1947, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.quantized": [[1947, "module-torch.ao.nn.quantized.modules"]], "torch.ao.nn.quantized.functional": [[1947, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantizable": [[1947, "torch-ao-nn-quantizable"]], "torch.ao.nn.quantized.dynamic": [[1947, "module-torch.ao.nn.quantized.dynamic"]], "Quantized dtypes and quantization schemes": [[1947, "quantized-dtypes-and-quantization-schemes"]], "CUDA Automatic Mixed Precision examples": [[1918, "cuda-automatic-mixed-precision-examples"]], "Typical Mixed Precision Training": [[1918, "typical-mixed-precision-training"]], "Working with Unscaled Gradients": [[1918, "working-with-unscaled-gradients"]], "Gradient clipping": [[1918, "gradient-clipping"]], "Working with Scaled Gradients": [[1918, "working-with-scaled-gradients"]], "Gradient accumulation": [[1918, "gradient-accumulation"]], "Gradient penalty": [[1918, "gradient-penalty"]], "Working with Multiple Models, Losses, and Optimizers": [[1918, "working-with-multiple-models-losses-and-optimizers"]], "Working with Multiple GPUs": [[1918, "working-with-multiple-gpus"]], "DataParallel in a single process": [[1918, "dataparallel-in-a-single-process"]], "DistributedDataParallel, one GPU per process": [[1918, "distributeddataparallel-one-gpu-per-process"]], "DistributedDataParallel, multiple GPUs per process": [[1918, "distributeddataparallel-multiple-gpus-per-process"]], "Autocast and Custom Autograd Functions": [[1918, "autocast-and-custom-autograd-functions"]], "Functions with multiple inputs or autocastable ops": [[1918, "functions-with-multiple-inputs-or-autocastable-ops"]], "Functions that need a particular dtype": [[1918, "functions-that-need-a-particular-dtype"]], "torch.optim": [[1940, "module-torch.optim"]], "How to use an optimizer": [[1940, "how-to-use-an-optimizer"]], "Constructing it": [[1940, "constructing-it"]], "Per-parameter options": [[1940, "per-parameter-options"]], "Taking an optimization step": [[1940, "taking-an-optimization-step"]], "optimizer.step()": [[1940, "optimizer-step"]], "optimizer.step(closure)": [[1940, "optimizer-step-closure"]], "Base class": [[1940, "base-class"]], "Algorithms": [[1940, "algorithms"]], "How to adjust learning rate": [[1940, "how-to-adjust-learning-rate"]], "Weight Averaging (SWA and EMA)": [[1940, "weight-averaging-swa-and-ema"]], "Constructing averaged models": [[1940, "constructing-averaged-models"]], "Custom averaging strategies": [[1940, "custom-averaging-strategies"]], "SWA learning rate schedules": [[1940, "swa-learning-rate-schedules"]], "Taking care of batch normalization": [[1940, "taking-care-of-batch-normalization"]], "Putting it all together: SWA": [[1940, "putting-it-all-together-swa"]], "Putting it all together: EMA": [[1940, "putting-it-all-together-ema"]], "Distributed RPC Framework": [[1949, "distributed-rpc-framework"]], "RPC": [[1949, "rpc"]], "TensorPipe Backend": [[1949, "tensorpipe-backend"]], "RRef": [[1949, "rref"]], "More Information about RRef": [[1949, null]], "RemoteModule": [[1949, "remotemodule"]], "Distributed Autograd Framework": [[1949, "distributed-autograd-framework"]], "More Information about RPC Autograd": [[1949, null]], "Distributed Optimizer": [[1949, "distributed-optimizer"], [1950, "distributed-optimizer"]], "torch.special": [[1954, "torch-special"]], "Broadcasting semantics": [[1920, "broadcasting-semantics"]], "General semantics": [[1920, "general-semantics"]], "In-place semantics": [[1920, "in-place-semantics"]], "Backwards compatibility": [[1920, "backwards-compatibility"]], "Extending PyTorch": [[1924, "extending-pytorch"]], "Extending torch.autograd": [[1924, "extending-torch-autograd"]], "When to use": [[1924, "when-to-use"]], "When not to use": [[1924, "when-not-to-use"]], "How to use": [[1924, "how-to-use"]], "Example": [[1924, "example"], [1923, "example"]], "Combined or separate forward() and setup_context()": [[1924, "combined-or-separate-forward-and-setup-context"]], "Forward mode AD": [[1924, "forward-mode-ad"]], "torch.func transforms and/or torch.vmap()": [[1924, "torch-func-transforms-and-or-torch-vmap"]], "Extending torch.nn": [[1924, "extending-torch-nn"]], "Adding a Module": [[1924, "adding-a-module"]], "Extending torch Python API": [[1924, "extending-torch-python-api"]], "Extending torch with a Tensor-like type": [[1924, "extending-torch-with-a-tensor-like-type"]], "Subclassing torch.Tensor": [[1924, "subclassing-torch-tensor"]], "Extending torch with a Tensor wrapper type": [[1924, "extending-torch-with-a-tensor-wrapper-type"]], "Operations on multiple types that define __torch_function__": [[1924, "operations-on-multiple-types-that-define-torch-function"]], "Testing Coverage of Overrides for the PyTorch API": [[1924, "testing-coverage-of-overrides-for-the-pytorch-api"]], "Extending torch native API": [[1924, "extending-torch-native-api"]], "Extending all torch API with Modes": [[1924, "extending-all-torch-api-with-modes"]], "Writing custom C++ extensions": [[1924, "writing-custom-c-extensions"]], "Tensor Views": [[1957, "tensor-views"]], "torch.Tensor": [[1959, "torch-tensor"]], "Data types": [[1959, "data-types"]], "Initializing and basic operations": [[1959, "initializing-and-basic-operations"]], "Tensor class reference": [[1959, "tensor-class-reference"]], "CUDA semantics": [[1922, "cuda-semantics"]], "TensorFloat-32(TF32) on Ampere devices": [[1922, "tensorfloat-32-tf32-on-ampere-devices"]], "Reduced Precision Reduction in FP16 GEMMs": [[1922, "reduced-precision-reduction-in-fp16-gemms"]], "Reduced Precision Reduction in BF16 GEMMs": [[1922, "reduced-precision-reduction-in-bf16-gemms"]], "Asynchronous execution": [[1922, "asynchronous-execution"]], "CUDA streams": [[1922, "cuda-streams"]], "Stream semantics of backward passes": [[1922, "stream-semantics-of-backward-passes"]], "BC note: Using grads on the default stream": [[1922, "bc-note-using-grads-on-the-default-stream"]], "Environment variables": [[1922, "environment-variables"]], "Using custom memory allocators for CUDA": [[1922, "using-custom-memory-allocators-for-cuda"]], "cuBLAS workspaces": [[1922, "cublas-workspaces"]], "cuFFT plan cache": [[1922, "cufft-plan-cache"]], "Just-in-Time Compilation": [[1922, "just-in-time-compilation"]], "Best practices": [[1922, "best-practices"]], "Device-agnostic code": [[1922, "device-agnostic-code"]], "Use pinned memory buffers": [[1922, "use-pinned-memory-buffers"]], "Use nn.parallel.DistributedDataParallel instead of multiprocessing or nn.DataParallel": [[1922, "use-nn-parallel-distributeddataparallel-instead-of-multiprocessing-or-nn-dataparallel"]], "CUDA Graphs": [[1922, "cuda-graphs"]], "Why CUDA Graphs?": [[1922, "why-cuda-graphs"]], "PyTorch API": [[1922, "pytorch-api"]], "Non-constraints": [[1922, "non-constraints"]], "Whole-network capture": [[1922, "whole-network-capture"]], "Partial-network capture": [[1922, "partial-network-capture"]], "Usage with torch.cuda.amp": [[1922, "usage-with-torch-cuda-amp"]], "Usage with multiple streams": [[1922, "usage-with-multiple-streams"]], "Usage with DistributedDataParallel": [[1922, "usage-with-distributeddataparallel"]], "NCCL < 2.9.6": [[1922, "nccl-2-9-6"]], "NCCL >= 2.9.6": [[1922, "id5"]], "Graph memory management": [[1922, "graph-memory-management"]], "Sharing memory across captures": [[1922, "sharing-memory-across-captures"]], "torch.signal": [[1952, "module-torch.signal"]], "torch.signal.windows": [[1952, "module-torch.signal.windows"]], "torch.nested": [[1914, "module-torch.nested"]], "Construction": [[1914, "construction"], [1953, "construction"]], "size": [[1914, "size"]], "unbind": [[1914, "unbind"]], "Nested tensor constructor and conversion functions": [[1914, "nested-tensor-constructor-and-conversion-functions"]], "Supported operations": [[1914, "supported-operations"], [1953, "supported-operations"]], "Named Tensors": [[1913, "named-tensors"]], "Creating named tensors": [[1913, "creating-named-tensors"]], "Named dimensions": [[1913, "named-dimensions"]], "Name propagation semantics": [[1913, "name-propagation-semantics"]], "match semantics": [[1913, "match-semantics"]], "Basic name inference rules": [[1913, "basic-name-inference-rules"]], "Explicit alignment by names": [[1913, "explicit-alignment-by-names"]], "Manipulating dimensions": [[1913, "manipulating-dimensions"]], "Autograd support": [[1913, "autograd-support"]], "Currently supported operations and subsystems": [[1913, "currently-supported-operations-and-subsystems"]], "Operators": [[1913, "operators"]], "Subsystems": [[1913, "subsystems"]], "Named tensor API reference": [[1913, "named-tensor-api-reference"]], "Distributed Data Parallel": [[1923, "distributed-data-parallel"]], "Internal Design": [[1923, "internal-design"]], "Implementation": [[1923, "implementation"], [1951, "implementation"]], "ProcessGroup": [[1923, "processgroup"]], "TorchDynamo DDPOptimizer": [[1923, "id1"]], "HIP (ROCm) semantics": [[1928, "hip-rocm-semantics"]], "HIP Interfaces Reuse the CUDA Interfaces": [[1928, "hip-interfaces-reuse-the-cuda-interfaces"]], "Checking for HIP": [[1928, "checking-for-hip"]], "TensorFloat-32(TF32) on ROCm": [[1928, "tensorfloat-32-tf32-on-rocm"]], "hipFFT/rocFFT plan cache": [[1928, "hipfft-rocfft-plan-cache"]], "torch.distributed backends": [[1928, "torch-distributed-backends"]], "CUDA API to HIP API mappings in C++": [[1928, "cuda-api-to-hip-api-mappings-in-c"]], "Refer to CUDA Semantics doc": [[1928, "refer-to-cuda-semantics-doc"]], "Enabling kernel asserts": [[1928, "enabling-kernel-asserts"]], "ONNX supported TorchScript operators": [[1939, "onnx-supported-torchscript-operators"]], "Supported operators": [[1939, "supported-operators"]], "ONNX support for TorchScript operators": [[1939, "id1"]], "Unsupported operators": [[1939, "unsupported-operators"], [1939, "id2"]], "torch.package": [[1941, "torch-package"]], "Packaging your first model": [[1941, "packaging-your-first-model"]], "How do I\u2026": [[1941, "how-do-i"]], "See what is inside a package?": [[1941, "see-what-is-inside-a-package"]], "Treat the package like a ZIP archive": [[1941, "treat-the-package-like-a-zip-archive"]], "Use the file_structure() API": [[1941, "use-the-file-structure-api"]], "See why a given module was included as a dependency?": [[1941, "see-why-a-given-module-was-included-as-a-dependency"]], "Include arbitrary resources with my package and access them later?": [[1941, "include-arbitrary-resources-with-my-package-and-access-them-later"]], "Customize how a class is packaged?": [[1941, "customize-how-a-class-is-packaged"]], "Test in my source code whether or not it is executing inside a package?": [[1941, "test-in-my-source-code-whether-or-not-it-is-executing-inside-a-package"]], "Patch code into a package?": [[1941, "patch-code-into-a-package"]], "Access package contents from packaged code?": [[1941, "access-package-contents-from-packaged-code"]], "Distinguish between packaged code and non-packaged code?": [[1941, "distinguish-between-packaged-code-and-non-packaged-code"]], "Re-export an imported object?": [[1941, "re-export-an-imported-object"]], "Package a TorchScript module?": [[1941, "package-a-torchscript-module"]], "Explanation": [[1941, "explanation"]], "torch.package Format Overview": [[1941, "torch-package-format-overview"]], "Framework files": [[1941, "framework-files"]], "User files": [[1941, "user-files"]], "How torch.package finds your code\u2019s dependencies": [[1941, "how-torch-package-finds-your-code-s-dependencies"]], "Analyzing an object\u2019s dependencies": [[1941, "analyzing-an-object-s-dependencies"]], "Analyzing a module\u2019s dependencies": [[1941, "analyzing-a-module-s-dependencies"]], "Dependency Management": [[1941, "dependency-management"]], "intern": [[1941, "intern"]], "extern": [[1941, "extern"]], "mock": [[1941, "mock"]], "Refactoring": [[1941, "refactoring"]], "Patterns": [[1941, "patterns"]], "torch.package sharp edges": [[1941, "torch-package-sharp-edges"]], "Avoid global state in your modules": [[1941, "avoid-global-state-in-your-modules"]], "Types are not shared between packages and the loading environment": [[1941, "types-are-not-shared-between-packages-and-the-loading-environment"]], "How torch.package keeps packages isolated from each other": [[1941, "how-torch-package-keeps-packages-isolated-from-each-other"]], "Mangling": [[1941, "mangling"]], "torch.nn.functional": [[1916, "torch-nn-functional"]], "Convolution functions": [[1916, "convolution-functions"]], "Pooling functions": [[1916, "pooling-functions"]], "Attention Mechanisms": [[1916, "attention-mechanisms"]], "Non-linear activation functions": [[1916, "non-linear-activation-functions"]], "Linear functions": [[1916, "linear-functions"]], "Dropout functions": [[1916, "dropout-functions"]], "Sparse functions": [[1916, "sparse-functions"]], "Distance functions": [[1916, "distance-functions"]], "Loss functions": [[1916, "loss-functions"]], "Vision functions": [[1916, "vision-functions"]], "DataParallel functions (multi-GPU, distributed)": [[1916, "dataparallel-functions-multi-gpu-distributed"]], "data_parallel": [[1916, "data-parallel"]], "Autograd mechanics": [[1919, "autograd-mechanics"]], "How autograd encodes the history": [[1919, "how-autograd-encodes-the-history"]], "Saved tensors": [[1919, "saved-tensors"]], "Gradients for non-differentiable functions": [[1919, "gradients-for-non-differentiable-functions"]], "Setting requires_grad": [[1919, "setting-requires-grad"]], "Grad Modes": [[1919, "grad-modes"]], "Default Mode (Grad Mode)": [[1919, "default-mode-grad-mode"]], "No-grad Mode": [[1919, "no-grad-mode"]], "Inference Mode": [[1919, "inference-mode"]], "Evaluation Mode (nn.Module.eval())": [[1919, "evaluation-mode-nn-module-eval"]], "In-place operations with autograd": [[1919, "in-place-operations-with-autograd"]], "Multithreaded Autograd": [[1919, "multithreaded-autograd"]], "Concurrency on CPU": [[1919, "concurrency-on-cpu"]], "Non-determinism": [[1919, "non-determinism"]], "Graph retaining": [[1919, "graph-retaining"]], "Thread Safety on Autograd Node": [[1919, "thread-safety-on-autograd-node"]], "No thread safety on C++ hooks": [[1919, "no-thread-safety-on-c-hooks"]], "Autograd for Complex Numbers": [[1919, "autograd-for-complex-numbers"]], "What are complex derivatives?": [[1919, "what-are-complex-derivatives"]], "Wirtinger Calculus comes into the picture \u2026": [[1919, "wirtinger-calculus-comes-into-the-picture"]], "How is Wirtinger Calculus useful in optimization?": [[1919, "how-is-wirtinger-calculus-useful-in-optimization"]], "How does PyTorch compute the conjugate Wirtinger derivative?": [[1919, "how-does-pytorch-compute-the-conjugate-wirtinger-derivative"]], "How can I write my own derivative formula for a complex function?": [[1919, "how-can-i-write-my-own-derivative-formula-for-a-complex-function"]], "What about cross-domain functions?": [[1919, "what-about-cross-domain-functions"]], "Hooks for saved tensors": [[1919, "hooks-for-saved-tensors"]], "Registering hooks for a saved tensor": [[1919, "registering-hooks-for-a-saved-tensor"]], "Registering default hooks for saved tensors": [[1919, "registering-default-hooks-for-saved-tensors"]], "Backward Hooks execution": [[1919, "backward-hooks-execution"]], "Whether a particular hook will be fired": [[1919, "whether-a-particular-hook-will-be-fired"]], "The order in which the different hooks are fired": [[1919, "the-order-in-which-the-different-hooks-are-fired"]], "Special hooks": [[1919, "special-hooks"]], "Behavior of Tensor hooks when Tensor is modified in-place": [[1919, "behavior-of-tensor-hooks-when-tensor-is-modified-in-place"]], "Windows FAQ": [[1936, "windows-faq"]], "Building from source": [[1936, "building-from-source"]], "Include optional components": [[1936, "include-optional-components"]], "Speeding CUDA build for Windows": [[1936, "speeding-cuda-build-for-windows"]], "One key install script": [[1936, "one-key-install-script"]], "Extension": [[1936, "extension"]], "CFFI Extension": [[1936, "cffi-extension"]], "Cpp Extension": [[1936, "cpp-extension"]], "Installation": [[1936, "installation"]], "Package not found in win-32 channel.": [[1936, "package-not-found-in-win-32-channel"]], "Import error": [[1936, "import-error"]], "Usage (multiprocessing)": [[1936, "usage-multiprocessing"]], "Multiprocessing error without if-clause protection": [[1936, "multiprocessing-error-without-if-clause-protection"]], "Multiprocessing error \u201cBroken pipe\u201d": [[1936, "multiprocessing-error-broken-pipe"]], "Multiprocessing error \u201cdriver shut down\u201d": [[1936, "multiprocessing-error-driver-shut-down"]], "CUDA IPC operations": [[1936, "cuda-ipc-operations"]], "torch.onnx diagnostics": [[1938, "torch-onnx-diagnostics"]], "Diagnostic Rules": [[1938, "diagnostic-rules"]], "Serialization semantics": [[1935, "serialization-semantics"]], "Table of Contents": [[1935, "table-of-contents"]], "Saving and loading tensors": [[1935, "saving-and-loading-tensors"]], "Saving and loading tensors preserves views": [[1935, "saving-and-loading-tensors-preserves-views"]], "Saving and loading torch.nn.Modules": [[1935, "saving-and-loading-torch-nn-modules"]], "Serializing torch.nn.Modules and loading them in C++": [[1935, "serializing-torch-nn-modules-and-loading-them-in-c"]], "Saving and loading ScriptModules across PyTorch versions": [[1935, "saving-and-loading-scriptmodules-across-pytorch-versions"]], "torch.div performing integer division": [[1935, "torch-div-performing-integer-division"]], "torch.full always inferring a float dtype": [[1935, "torch-full-always-inferring-a-float-dtype"]], "MPS backend": [[1931, "mps-backend"]], "Quantization": [[1944, "module-torch.ao.quantization"]], "Introduction to Quantization": [[1944, "introduction-to-quantization"]], "Quantization API Summary": [[1944, "quantization-api-summary"]], "Eager Mode Quantization": [[1944, "eager-mode-quantization"]], "Post Training Dynamic Quantization": [[1944, "post-training-dynamic-quantization"]], "Post Training Static Quantization": [[1944, "post-training-static-quantization"]], "Quantization Aware Training for Static Quantization": [[1944, "quantization-aware-training-for-static-quantization"]], "Model Preparation for Eager Mode Static Quantization": [[1944, "model-preparation-for-eager-mode-static-quantization"]], "(Prototype) FX Graph Mode Quantization": [[1944, "prototype-fx-graph-mode-quantization"]], "Quantization Stack": [[1944, "quantization-stack"]], "Quantized Model": [[1944, "quantized-model"]], "Quantized Tensor": [[1944, "quantized-tensor"]], "Quantize and Dequantize": [[1944, "quantize-and-dequantize"]], "Quantized Operators/Modules": [[1944, "quantized-operators-modules"]], "Quantized Engine": [[1944, "quantized-engine"]], "Quantization Flow": [[1944, "quantization-flow"]], "Observer and FakeQuantize": [[1944, "observer-and-fakequantize"]], "General Quantization Flow": [[1944, "general-quantization-flow"]], "Quantization Support Matrix": [[1944, "quantization-support-matrix"]], "Quantization Mode Support": [[1944, "quantization-mode-support"]], "Quantization Flow Support": [[1944, "quantization-flow-support"]], "Backend/Hardware Support": [[1944, "backend-hardware-support"]], "Note for native CPU backends": [[1944, "note-for-native-cpu-backends"]], "Operator Support": [[1944, "operator-support"]], "Quantization Backend Configuration": [[1944, "quantization-backend-configuration"], [1946, "quantization-backend-configuration"]], "Quantization Accuracy Debugging": [[1944, "quantization-accuracy-debugging"], [1945, "quantization-accuracy-debugging"]], "Quantization Customizations": [[1944, "quantization-customizations"]], "Quantization Custom Module API": [[1944, "quantization-custom-module-api"]], "Best Practices": [[1944, "best-practices"]], "Common Errors": [[1944, "common-errors"]], "Passing a non-quantized Tensor into a quantized kernel": [[1944, "passing-a-non-quantized-tensor-into-a-quantized-kernel"]], "Passing a quantized Tensor into a non-quantized kernel": [[1944, "passing-a-quantized-tensor-into-a-non-quantized-kernel"]], "Saving and Loading Quantized models": [[1944, "saving-and-loading-quantized-models"]], "Symbolic Trace Error when using FX Graph Mode Quantization": [[1944, "symbolic-trace-error-when-using-fx-graph-mode-quantization"]], "Multiprocessing package - torch.multiprocessing": [[1911, "module-torch.multiprocessing"]], "Strategy management": [[1911, "strategy-management"]], "Sharing CUDA tensors": [[1911, "sharing-cuda-tensors"]], "Sharing strategies": [[1911, "sharing-strategies"]], "File descriptor - file_descriptor": [[1911, "file-descriptor-file-descriptor"]], "File system - file_system": [[1911, "file-system-file-system"]], "Spawning subprocesses": [[1911, "spawning-subprocesses"]], "Reproducibility": [[1934, "reproducibility"]], "Controlling sources of randomness": [[1934, "controlling-sources-of-randomness"]], "PyTorch random number generator": [[1934, "pytorch-random-number-generator"]], "Python": [[1934, "python"]], "Random number generators in other libraries": [[1934, "random-number-generators-in-other-libraries"]], "CUDA convolution benchmarking": [[1934, "cuda-convolution-benchmarking"]], "Avoiding nondeterministic algorithms": [[1934, "avoiding-nondeterministic-algorithms"]], "CUDA convolution determinism": [[1934, "cuda-convolution-determinism"]], "CUDA RNN and LSTM": [[1934, "cuda-rnn-and-lstm"]], "DataLoader": [[1934, "dataloader"]], "Data insensitive error": [[1945, "data-insensitive-error"]], "General tips": [[1945, "general-tips"]], "Int8 quantization tips": [[1945, "int8-quantization-tips"]], "Data sensitive error": [[1945, "data-sensitive-error"]], "Implementation error": [[1945, "implementation-error"]], "Numerical Debugging Tooling (prototype)": [[1945, "numerical-debugging-tooling-prototype"]], "Pipeline Parallelism": [[1942, "pipeline-parallelism"]], "Model Parallelism using multiple GPUs": [[1942, "model-parallelism-using-multiple-gpus"]], "Pipelined Execution": [[1942, "pipelined-execution"]], "Pipe APIs in PyTorch": [[1942, "pipe-apis-in-pytorch"]], "Skip connections": [[1942, "skip-connections"]], "torch.profiler": [[1943, "torch-profiler"]], "Intel Instrumentation and Tracing Technology APIs": [[1943, "intel-instrumentation-and-tracing-technology-apis"]], "Remote Reference Protocol": [[1951, "remote-reference-protocol"]], "Background": [[1951, "background"], [1950, "background"]], "Assumptions": [[1951, "assumptions"]], "RRef Lifetime": [[1951, "rref-lifetime"]], "Design Reasoning": [[1951, "design-reasoning"]], "Protocol Scenarios": [[1951, "protocol-scenarios"]], "User Share RRef with Owner as Return Value": [[1951, "user-share-rref-with-owner-as-return-value"]], "User Share RRef with Owner as Argument": [[1951, "user-share-rref-with-owner-as-argument"]], "Owner Share RRef with User": [[1951, "owner-share-rref-with-user"]], "User Share RRef with User": [[1951, "user-share-rref-with-user"]], "Gradcheck mechanics": [[1927, "gradcheck-mechanics"]], "Notations and background information": [[1927, "notations-and-background-information"]], "Default backward mode gradcheck behavior": [[1927, "default-backward-mode-gradcheck-behavior"]], "Real-to-real functions": [[1927, "real-to-real-functions"]], "Default real input numerical evaluation": [[1927, "default-real-input-numerical-evaluation"]], "Default real input analytical evaluation": [[1927, "default-real-input-analytical-evaluation"]], "Complex-to-real functions": [[1927, "complex-to-real-functions"]], "Default complex input numerical evaluation": [[1927, "default-complex-input-numerical-evaluation"]], "Default complex input analytical evaluation": [[1927, "default-complex-input-analytical-evaluation"]], "Functions with complex outputs": [[1927, "functions-with-complex-outputs"]], "Fast backward mode gradcheck": [[1927, "fast-backward-mode-gradcheck"]], "Fast gradcheck for real-to-real functions": [[1927, "fast-gradcheck-for-real-to-real-functions"]], "Fast gradcheck for complex-to-real functions": [[1927, "fast-gradcheck-for-complex-to-real-functions"]], "Fast complex input numerical evaluation": [[1927, "fast-complex-input-numerical-evaluation"]], "Fast complex input analytical evaluation": [[1927, "fast-complex-input-analytical-evaluation"]], "Why not use a complex u": [[1927, "why-not-use-a-complex-u"]], "Fast gradcheck for functions with complex outputs": [[1927, "fast-gradcheck-for-functions-with-complex-outputs"]], "Gradgradcheck implementation": [[1927, "gradgradcheck-implementation"]], "CPU threading and TorchScript inference": [[1921, "cpu-threading-and-torchscript-inference"]], "Build options": [[1921, "build-options"]], "Runtime API": [[1921, "runtime-api"]], "Tuning the number of threads": [[1921, "tuning-the-number-of-threads"]], "torch.Storage": [[1955, "torch-storage"]], "A Simple Custom Module": [[1930, "a-simple-custom-module"]], "Modules as Building Blocks": [[1930, "modules-as-building-blocks"]], "Neural Network Training with Modules": [[1930, "neural-network-training-with-modules"]], "Module State": [[1930, "module-state"]], "Module Initialization": [[1930, "module-initialization"]], "Module Hooks": [[1930, "module-hooks"]], "Advanced Features": [[1930, "advanced-features"]], "Distributed Training": [[1930, "distributed-training"]], "Profiling Performance": [[1930, "profiling-performance"]], "Improving Performance with Quantization": [[1930, "improving-performance-with-quantization"]], "Improving Memory Usage with Pruning": [[1930, "improving-memory-usage-with-pruning"]], "Parametrizations": [[1930, "parametrizations"]], "Transforming Modules with FX": [[1930, "transforming-modules-with-fx"]], "Default values for native configurations": [[1946, "default-values-for-native-configurations"]], "torch.utils.tensorboard": [[1958, "module-torch.utils.tensorboard"]], "torch.sparse": [[1953, "torch-sparse"]], "Why and when to use sparsity": [[1953, "why-and-when-to-use-sparsity"]], "Functionality overview": [[1953, "functionality-overview"]], "Operator overview": [[1953, "operator-overview"]], "Sparse Semi-Structured Tensors": [[1953, "sparse-semi-structured-tensors"]], "Constructing Sparse Semi-Structured Tensors": [[1953, "constructing-sparse-semi-structured-tensors"]], "Sparse Semi-Structured Tensor Operations": [[1953, "sparse-semi-structured-tensor-operations"]], "Accelerating nn.Linear with semi-structured sparsity": [[1953, "accelerating-nn-linear-with-semi-structured-sparsity"]], "Sparse COO tensors": [[1953, "sparse-coo-tensors"]], "Sparse hybrid COO tensors": [[1953, "sparse-hybrid-coo-tensors"]], "Uncoalesced sparse COO tensors": [[1953, "uncoalesced-sparse-coo-tensors"]], "Working with sparse COO tensors": [[1953, "working-with-sparse-coo-tensors"]], "Sparse Compressed Tensors": [[1953, "sparse-compressed-tensors"]], "Sparse CSR Tensor": [[1953, "sparse-csr-tensor"]], "Construction of CSR tensors": [[1953, "construction-of-csr-tensors"]], "CSR Tensor Operations": [[1953, "csr-tensor-operations"]], "Sparse CSC Tensor": [[1953, "sparse-csc-tensor"]], "Construction of CSC tensors": [[1953, "construction-of-csc-tensors"]], "Sparse BSR Tensor": [[1953, "sparse-bsr-tensor"]], "Construction of BSR tensors": [[1953, "construction-of-bsr-tensors"]], "Sparse BSC Tensor": [[1953, "sparse-bsc-tensor"]], "Construction of BSC tensors": [[1953, "construction-of-bsc-tensors"]], "Tools for working with sparse compressed tensors": [[1953, "tools-for-working-with-sparse-compressed-tensors"]], "Construction of sparse compressed tensors": [[1953, "construction-of-sparse-compressed-tensors"]], "Linear Algebra operations": [[1953, "linear-algebra-operations"]], "Tensor methods and sparse": [[1953, "tensor-methods-and-sparse"]], "Torch functions specific to sparse Tensors": [[1953, "torch-functions-specific-to-sparse-tensors"]], "Other functions": [[1953, "other-functions"]], "Unary functions": [[1953, "unary-functions"]], "Features for large-scale deployments": [[1929, "features-for-large-scale-deployments"]], "Fleet-wide operator profiling": [[1929, "fleet-wide-operator-profiling"]], "API usage logging": [[1929, "api-usage-logging"]], "Attaching metadata to saved TorchScript models": [[1929, "attaching-metadata-to-saved-torchscript-models"]], "Build environment considerations": [[1929, "build-environment-considerations"]], "Common extension points": [[1929, "common-extension-points"]], "My model reports \u201ccuda runtime error(2): out of memory\u201d": [[1926, "my-model-reports-cuda-runtime-error-2-out-of-memory"]], "My GPU memory isn\u2019t freed properly": [[1926, "my-gpu-memory-isn-t-freed-properly"]], "My out of memory exception handler can\u2019t allocate memory": [[1926, "my-out-of-memory-exception-handler-can-t-allocate-memory"]], "My data loader workers return identical random numbers": [[1926, "my-data-loader-workers-return-identical-random-numbers"]], "My recurrent network doesn\u2019t work with data parallelism": [[1926, "my-recurrent-network-doesn-t-work-with-data-parallelism"]], "Distributed Autograd Design": [[1950, "distributed-autograd-design"]], "Autograd recording during the forward pass": [[1950, "autograd-recording-during-the-forward-pass"]], "Distributed Autograd Context": [[1950, "distributed-autograd-context"]], "Distributed Backward Pass": [[1950, "distributed-backward-pass"]], "Computing dependencies": [[1950, "computing-dependencies"]], "FAST mode algorithm": [[1950, "fast-mode-algorithm"]], "SMART mode algorithm": [[1950, "smart-mode-algorithm"]], "Simple end to end example": [[1950, "simple-end-to-end-example"]], "Named Tensors operator coverage": [[1912, "named-tensors-operator-coverage"]], "Supported Operations": [[1912, "id1"]], "Keeps input names": [[1912, "keeps-input-names"]], "Removes dimensions": [[1912, "removes-dimensions"]], "Unifies names from inputs": [[1912, "unifies-names-from-inputs"]], "Permutes dimensions": [[1912, "permutes-dimensions"]], "Contracts away dims": [[1912, "contracts-away-dims"]], "Factory functions": [[1912, "factory-functions"]], "out function and in-place variants": [[1912, "out-function-and-in-place-variants"]], "Extending torch.func with autograd.Function": [[1925, "extending-torch-func-with-autograd-function"]], "Basic Usage": [[1925, "basic-usage"]], "Example 1: autograd.Function calls into another system": [[1925, "example-1-autograd-function-calls-into-another-system"]], "Example 2: autograd.Function specifies custom gradient rules": [[1925, "example-2-autograd-function-specifies-custom-gradient-rules"]], "Limitations and gotchas": [[1925, "limitations-and-gotchas"]], "torch.vmap() Support": [[1925, "torch-vmap-support"]], "Automatically generate a vmap rule": [[1925, "automatically-generate-a-vmap-rule"]], "Defining the vmap staticmethod": [[1925, "defining-the-vmap-staticmethod"]], "torch.func.jvp() Support": [[1925, "torch-func-jvp-support"]], "torch.nn.init": [[1917, "torch-nn-init"]], "Multiprocessing best practices": [[1932, "multiprocessing-best-practices"]], "CUDA in multiprocessing": [[1932, "cuda-in-multiprocessing"]], "Best practices and tips": [[1932, "best-practices-and-tips"]], "Avoiding and fighting deadlocks": [[1932, "avoiding-and-fighting-deadlocks"]], "Reuse buffers passed through a Queue": [[1932, "reuse-buffers-passed-through-a-queue"]], "Asynchronous multiprocess training (e.g. Hogwild)": [[1932, "asynchronous-multiprocess-training-e-g-hogwild"]], "Hogwild": [[1932, "hogwild"]], "CPU in multiprocessing": [[1932, "cpu-in-multiprocessing"]], "CPU oversubscription": [[1932, "cpu-oversubscription"]], "Avoid CPU oversubscription": [[1932, "avoid-cpu-oversubscription"]], "QuantStub": [[805, "quantstub"]], "linear": [[797, "linear"]], "FuseCustomConfig": [[832, "fusecustomconfig"]], "avg_pool2d": [[784, "avg-pool2d"]], "disable_fake_quant": [[826, "disable-fake-quant"]], "DTypeConfig": [[810, "dtypeconfig"]], "convert": [[813, "convert"]], "enable_fake_quant": [[828, "enable-fake-quant"]], "upsample": [[801, "upsample"]], "conv1d": [[788, "conv1d"]], "FusedMovingAvgObsFakeQuantize": [[818, "fusedmovingavgobsfakequantize"]], "default_weight_fake_quant": [[825, "default-weight-fake-quant"]], "interpolate": [[795, "interpolate"]], "default_fused_act_fake_quant": [[820, "default-fused-act-fake-quant"]], "ConvertCustomConfig": [[831, "convertcustomconfig"]], "max_pool2d": [[799, "max-pool2d"]], "hardtanh": [[794, "hardtanh"]], "default_fake_quant": [[819, "default-fake-quant"]], "BackendPatternConfig": [[809, "backendpatternconfig"]], "default_histogram_fake_quant": [[823, "default-histogram-fake-quant"]], "disable_observer": [[827, "disable-observer"]], "conv3d": [[790, "conv3d"]], "clamp": [[787, "clamp"]], "ObservationType": [[812, "observationtype"]], "threshold": [[800, "threshold"]], "hardsigmoid": [[792, "hardsigmoid"]], "default_eval_fn": [[814, "default-eval-fn"]], "default_fused_wt_fake_quant": [[822, "default-fused-wt-fake-quant"]], "max_pool1d": [[798, "max-pool1d"]], "FakeQuantizeBase": [[816, "fakequantizebase"]], "DeQuantStub": [[804, "dequantstub"]], "FakeQuantize": [[815, "fakequantize"]], "default_fused_per_channel_wt_fake_quant": [[821, "default-fused-per-channel-wt-fake-quant"]], "celu": [[786, "celu"]], "QuantWrapper": [[806, "quantwrapper"]], "add_quant_dequant": [[807, "add-quant-dequant"]], "enable_observer": [[829, "enable-observer"]], "fuse_modules": [[830, "fuse-modules"]], "conv2d": [[789, "conv2d"]], "elu": [[791, "elu"]], "FixedQParamsFakeQuantize": [[817, "fixedqparamsfakequantize"]], "upsample_nearest": [[803, "upsample-nearest"]], "BackendConfig": [[808, "backendconfig"]], "avg_pool3d": [[785, "avg-pool3d"]], "upsample_bilinear": [[802, "upsample-bilinear"]], "hardswish": [[793, "hardswish"]], "DTypeWithConstraints": [[811, "dtypewithconstraints"]], "default_per_channel_weight_fake_quant": [[824, "default-per-channel-weight-fake-quant"]], "leaky_relu": [[796, "leaky-relu"]], "update_bn_stats": [[738, "update-bn-stats"]], "ConvReLU3d": [[743, "convrelu3d"], [735, "convrelu3d"], [726, "convrelu3d"]], "FXFloatFunctional": [[763, "fxfloatfunctional"]], "FloatFunctional": [[764, "floatfunctional"]], "adaptive_avg_pool3d": [[783, "adaptive-avg-pool3d"]], "BNReLU3d": [[740, "bnrelu3d"], [717, "bnrelu3d"]], "LinearReLU": [[745, "linearrelu"], [736, "linearrelu"], [744, "linearrelu"], [727, "linearrelu"]], "BNReLU2d": [[739, "bnrelu2d"], [716, "bnrelu2d"]], "ConvReLU2d": [[742, "convrelu2d"], [725, "convrelu2d"], [734, "convrelu2d"]], "ConvReLU1d": [[741, "convrelu1d"], [724, "convrelu1d"]], "QFunctional": [[773, "qfunctional"]], "freeze_bn_stats": [[737, "freeze-bn-stats"]], "adaptive_avg_pool2d": [[782, "adaptive-avg-pool2d"]], "torch.amin": [[712, "torch-amin"]], "torch.absolute": [[698, "torch-absolute"]], "ConvBn2d": [[729, "convbn2d"], [719, "convbn2d"]], "ConvBnReLU2d": [[722, "convbnrelu2d"], [732, "convbnrelu2d"]], "torch._foreach_tan_": [[692, "torch-foreach-tan"]], "torch.aminmax": [[713, "torch-aminmax"]], "ConvBn3d": [[730, "convbn3d"], [720, "convbn3d"]], "torch.abs": [[697, "torch-abs"]], "torch.addmv": [[706, "torch-addmv"]], "torch.addr": [[707, "torch-addr"]], "ConvBn1d": [[728, "convbn1d"], [718, "convbn1d"]], "torch._foreach_zero_": [[695, "torch-foreach-zero"]], "torch.all": [[709, "torch-all"]], "torch.acosh": [[700, "torch-acosh"]], "torch.addcmul": [[704, "torch-addcmul"]], "torch._foreach_sinh_": [[688, "torch-foreach-sinh"]], "torch._foreach_sqrt_": [[690, "torch-foreach-sqrt"]], "torch.angle": [[714, "torch-angle"]], "torch._foreach_trunc_": [[694, "torch-foreach-trunc"]], "torch.addmm": [[705, "torch-addmm"]], "torch._foreach_sinh": [[687, "torch-foreach-sinh"]], "ConvBnReLU3d": [[723, "convbnrelu3d"], [733, "convbnrelu3d"]], "torch.add": [[701, "torch-add"]], "torch.addbmm": [[702, "torch-addbmm"]], "ConvBnReLU1d": [[721, "convbnrelu1d"], [731, "convbnrelu1d"]], "torch.addcdiv": [[703, "torch-addcdiv"]], "torch._foreach_sqrt": [[689, "torch-foreach-sqrt"]], "torch._foreach_sin_": [[686, "torch-foreach-sin"]], "torch.acos": [[699, "torch-acos"]], "torch.adjoint": [[708, "torch-adjoint"]], "torch._logging.set_logs": [[696, "torch-logging-set-logs"]], "torch.allclose": [[710, "torch-allclose"]], "torch.amax": [[711, "torch-amax"]], "torch.any": [[715, "torch-any"]], "torch._foreach_trunc": [[693, "torch-foreach-trunc"]], "torch._foreach_tan": [[691, "torch-foreach-tan"]], "torch._foreach_frac": [[665, "torch-foreach-frac"]], "torch._foreach_acos_": [[644, "torch-foreach-acos"]], "torch._foreach_abs_": [[642, "torch-foreach-abs"]], "torch._foreach_erf": [[655, "torch-foreach-erf"]], "torch._assert": [[640, "torch-assert"]], "torch._foreach_cos": [[651, "torch-foreach-cos"]], "torch._foreach_lgamma": [[667, "torch-foreach-lgamma"]], "torch._foreach_reciprocal": [[679, "torch-foreach-reciprocal"]], "torch._foreach_log10_": [[671, "torch-foreach-log10"]], "torch._foreach_asin_": [[646, "torch-foreach-asin"]], "torch._foreach_erfc_": [[658, "torch-foreach-erfc"]], "torch._foreach_atan": [[647, "torch-foreach-atan"]], "torch._foreach_log2": [[674, "torch-foreach-log2"]], "torch._foreach_neg": [[677, "torch-foreach-neg"]], "torch._foreach_ceil": [[649, "torch-foreach-ceil"]], "torch._foreach_floor": [[663, "torch-foreach-floor"]], "torch._foreach_frac_": [[666, "torch-foreach-frac"]], "torch._foreach_cosh_": [[654, "torch-foreach-cosh"]], "torch._foreach_exp_": [[660, "torch-foreach-exp"]], "torch._foreach_round_": [[682, "torch-foreach-round"]], "torch._foreach_neg_": [[678, "torch-foreach-neg"]], "torch._foreach_cosh": [[653, "torch-foreach-cosh"]], "torch._foreach_asin": [[645, "torch-foreach-asin"]], "torch._foreach_abs": [[641, "torch-foreach-abs"]], "torch._foreach_expm1_": [[662, "torch-foreach-expm1"]], "torch._foreach_sin": [[685, "torch-foreach-sin"]], "torch.Tensor.xlogy_": [[638, "torch-tensor-xlogy"]], "torch._foreach_sigmoid": [[683, "torch-foreach-sigmoid"]], "torch._foreach_reciprocal_": [[680, "torch-foreach-reciprocal"]], "torch._foreach_cos_": [[652, "torch-foreach-cos"]], "torch._foreach_round": [[681, "torch-foreach-round"]], "torch._foreach_expm1": [[661, "torch-foreach-expm1"]], "torch._foreach_erfc": [[657, "torch-foreach-erfc"]], "torch._foreach_atan_": [[648, "torch-foreach-atan"]], "torch._foreach_log1p": [[672, "torch-foreach-log1p"]], "torch._foreach_log1p_": [[673, "torch-foreach-log1p"]], "torch._foreach_floor_": [[664, "torch-foreach-floor"]], "torch._foreach_log2_": [[675, "torch-foreach-log2"]], "torch._foreach_log": [[669, "torch-foreach-log"]], "torch.Tensor.xlogy": [[637, "torch-tensor-xlogy"]], "torch._foreach_exp": [[659, "torch-foreach-exp"]], "torch._foreach_log10": [[670, "torch-foreach-log10"]], "torch._foreach_log_": [[676, "torch-foreach-log"]], "torch._foreach_erf_": [[656, "torch-foreach-erf"]], "torch._foreach_acos": [[643, "torch-foreach-acos"]], "torch.Tensor.zero_": [[639, "torch-tensor-zero"]], "torch._foreach_ceil_": [[650, "torch-foreach-ceil"]], "torch._foreach_sigmoid_": [[684, "torch-foreach-sigmoid"]], "torch._foreach_lgamma_": [[668, "torch-foreach-lgamma"]], "torch.Tensor.type_as": [[620, "torch-tensor-type-as"]], "torch.Tensor.unfold": [[623, "torch-tensor-unfold"]], "torch.Tensor.to_sparse_bsc": [[600, "torch-tensor-to-sparse-bsc"]], "torch.Tensor.to_sparse": [[599, "torch-tensor-to-sparse"]], "torch.Tensor.unflatten": [[622, "torch-tensor-unflatten"]], "torch.Tensor.vdot": [[632, "torch-tensor-vdot"]], "torch.Tensor.triu": [[613, "torch-tensor-triu"]], "torch.Tensor.tanh_": [[593, "torch-tensor-tanh"]], "torch.Tensor.triangular_solve": [[610, "torch-tensor-triangular-solve"]], "torch.Tensor.unique": [[625, "torch-tensor-unique"]], "torch.Tensor.to_dense": [[597, "torch-tensor-to-dense"]], "torch.Tensor.to_sparse_bsr": [[601, "torch-tensor-to-sparse-bsr"]], "torch.Tensor.tan": [[590, "torch-tensor-tan"]], "torch.Tensor.tril": [[611, "torch-tensor-tril"]], "torch.Tensor.tolist": [[605, "torch-tensor-tolist"]], "torch.Tensor.vsplit": [[635, "torch-tensor-vsplit"]], "torch.Tensor.unsqueeze_": [[628, "torch-tensor-unsqueeze"]], "torch.Tensor.take": [[588, "torch-tensor-take"]], "torch.Tensor.tile": [[595, "torch-tensor-tile"]], "torch.Tensor.type": [[619, "torch-tensor-type"]], "torch.Tensor.tensor_split": [[594, "torch-tensor-tensor-split"]], "torch.Tensor.tril_": [[612, "torch-tensor-tril"]], "torch.Tensor.take_along_dim": [[589, "torch-tensor-take-along-dim"]], "torch.Tensor.to_sparse_csc": [[603, "torch-tensor-to-sparse-csc"]], "torch.Tensor.unbind": [[621, "torch-tensor-unbind"]], "torch.Tensor.var": [[631, "torch-tensor-var"]], "torch.Tensor.trunc_": [[618, "torch-tensor-trunc"]], "torch.Tensor.triu_": [[614, "torch-tensor-triu"]], "torch.Tensor.transpose_": [[609, "torch-tensor-transpose"]], "torch.Tensor.trace": [[607, "torch-tensor-trace"]], "torch.Tensor.to_sparse_csr": [[604, "torch-tensor-to-sparse-csr"]], "torch.Tensor.where": [[636, "torch-tensor-where"]], "torch.Tensor.tan_": [[591, "torch-tensor-tan"]], "torch.Tensor.to_mkldnn": [[598, "torch-tensor-to-mkldnn"]], "torch.Tensor.view": [[633, "torch-tensor-view"]], "torch.Tensor.to_sparse_coo": [[602, "torch-tensor-to-sparse-coo"]], "torch.Tensor.transpose": [[608, "torch-tensor-transpose"]], "torch.Tensor.true_divide": [[615, "torch-tensor-true-divide"]], "torch.Tensor.untyped_storage": [[629, "torch-tensor-untyped-storage"]], "torch.Tensor.unique_consecutive": [[626, "torch-tensor-unique-consecutive"]], "torch.Tensor.to": [[596, "torch-tensor-to"]], "torch.Tensor.tanh": [[592, "torch-tensor-tanh"]], "torch.Tensor.unsqueeze": [[627, "torch-tensor-unsqueeze"]], "torch.Tensor.trunc": [[617, "torch-tensor-trunc"]], "torch.Tensor.topk": [[606, "torch-tensor-topk"]], "torch.Tensor.uniform_": [[624, "torch-tensor-uniform"]], "torch.Tensor.values": [[630, "torch-tensor-values"]], "torch.Tensor.true_divide_": [[616, "torch-tensor-true-divide"]], "torch.Tensor.view_as": [[634, "torch-tensor-view-as"]], "torch.Tensor.slogdet": [[555, "torch-tensor-slogdet"]], "torch.Tensor.stride": [[576, "torch-tensor-stride"]], "torch.Tensor.smm": [[556, "torch-tensor-smm"]], "torch.Tensor.swapaxes": [[584, "torch-tensor-swapaxes"]], "torch.Tensor.sparse_resize_": [[561, "torch-tensor-sparse-resize"]], "torch.Tensor.softmax": [[557, "torch-tensor-softmax"]], "torch.Tensor.share_memory_": [[540, "torch-tensor-share-memory"]], "torch.Tensor.sin_": [[548, "torch-tensor-sin"]], "torch.Tensor.sigmoid_": [[543, "torch-tensor-sigmoid"]], "torch.Tensor.sigmoid": [[542, "torch-tensor-sigmoid"]], "torch.Tensor.square": [[566, "torch-tensor-square"]], "torch.Tensor.t_": [[587, "torch-tensor-t"]], "torch.Tensor.sum": [[581, "torch-tensor-sum"]], "torch.Tensor.size": [[553, "torch-tensor-size"]], "torch.Tensor.storage_type": [[575, "torch-tensor-storage-type"]], "torch.Tensor.sign": [[544, "torch-tensor-sign"]], "torch.Tensor.sparse_resize_and_clear_": [[562, "torch-tensor-sparse-resize-and-clear"]], "torch.Tensor.sign_": [[545, "torch-tensor-sign"]], "torch.Tensor.sinc": [[549, "torch-tensor-sinc"]], "torch.Tensor.sub_": [[578, "torch-tensor-sub"]], "torch.Tensor.sum_to_size": [[582, "torch-tensor-sum-to-size"]], "torch.Tensor.sinh_": [[552, "torch-tensor-sinh"]], "torch.Tensor.sqrt_": [[565, "torch-tensor-sqrt"]], "torch.Tensor.storage_offset": [[574, "torch-tensor-storage-offset"]], "torch.Tensor.sspaddmm": [[570, "torch-tensor-sspaddmm"]], "torch.Tensor.slice_scatter": [[554, "torch-tensor-slice-scatter"]], "torch.Tensor.sort": [[558, "torch-tensor-sort"]], "torch.Tensor.sparse_dim": [[559, "torch-tensor-sparse-dim"]], "torch.Tensor.squeeze_": [[569, "torch-tensor-squeeze"]], "torch.Tensor.std": [[571, "torch-tensor-std"]], "torch.Tensor.storage": [[573, "torch-tensor-storage"]], "torch.Tensor.short": [[541, "torch-tensor-short"]], "torch.Tensor.split": [[563, "torch-tensor-split"]], "torch.Tensor.signbit": [[546, "torch-tensor-signbit"]], "torch.Tensor.t": [[586, "torch-tensor-t"]], "torch.Tensor.sqrt": [[564, "torch-tensor-sqrt"]], "torch.Tensor.swapdims": [[585, "torch-tensor-swapdims"]], "torch.Tensor.square_": [[567, "torch-tensor-square"]], "torch.Tensor.sin": [[547, "torch-tensor-sin"]], "torch.Tensor.subtract": [[579, "torch-tensor-subtract"]], "torch.Tensor.shape": [[539, "torch-tensor-shape"]], "torch.Tensor.sinc_": [[550, "torch-tensor-sinc"]], "torch.Tensor.sinh": [[551, "torch-tensor-sinh"]], "torch.Tensor.sparse_mask": [[560, "torch-tensor-sparse-mask"]], "torch.Tensor.stft": [[572, "torch-tensor-stft"]], "torch.Tensor.sub": [[577, "torch-tensor-sub"]], "torch.Tensor.subtract_": [[580, "torch-tensor-subtract"]], "torch.Tensor.svd": [[583, "torch-tensor-svd"]], "torch.Tensor.squeeze": [[568, "torch-tensor-squeeze"]], "torch.Tensor.rad2deg": [[497, "torch-tensor-rad2deg"]], "torch.Tensor.round_": [[524, "torch-tensor-round"]], "torch.Tensor.sgn_": [[538, "torch-tensor-sgn"]], "torch.Tensor.renorm": [[507, "torch-tensor-renorm"]], "torch.Tensor.renorm_": [[508, "torch-tensor-renorm"]], "torch.Tensor.retain_grad": [[519, "torch-tensor-retain-grad"]], "torch.Tensor.rsqrt_": [[527, "torch-tensor-rsqrt"]], "torch.Tensor.resolve_conj": [[517, "torch-tensor-resolve-conj"]], "torch.Tensor.scatter_add": [[530, "torch-tensor-scatter-add"]], "torch.Tensor.resolve_neg": [[518, "torch-tensor-resolve-neg"]], "torch.Tensor.rsqrt": [[526, "torch-tensor-rsqrt"]], "torch.Tensor.select": [[534, "torch-tensor-select"]], "torch.Tensor.q_per_channel_zero_points": [[491, "torch-tensor-q-per-channel-zero-points"]], "torch.Tensor.q_per_channel_scales": [[490, "torch-tensor-q-per-channel-scales"]], "torch.Tensor.reciprocal": [[501, "torch-tensor-reciprocal"]], "torch.Tensor.reciprocal_": [[502, "torch-tensor-reciprocal"]], "torch.Tensor.qr": [[494, "torch-tensor-qr"]], "torch.Tensor.repeat": [[509, "torch-tensor-repeat"]], "torch.Tensor.round": [[523, "torch-tensor-round"]], "torch.Tensor.requires_grad_": [[512, "torch-tensor-requires-grad"]], "torch.Tensor.scatter_reduce": [[532, "torch-tensor-scatter-reduce"]], "torch.Tensor.quantile": [[496, "torch-tensor-quantile"]], "torch.Tensor.repeat_interleave": [[510, "torch-tensor-repeat-interleave"]], "torch.Tensor.select_scatter": [[535, "torch-tensor-select-scatter"]], "torch.Tensor.record_stream": [[503, "torch-tensor-record-stream"]], "torch.Tensor.scatter_add_": [[531, "torch-tensor-scatter-add"]], "torch.Tensor.remainder": [[505, "torch-tensor-remainder"]], "torch.Tensor.q_zero_point": [[493, "torch-tensor-q-zero-point"]], "torch.Tensor.remainder_": [[506, "torch-tensor-remainder"]], "torch.Tensor.random_": [[498, "torch-tensor-random"]], "torch.Tensor.reshape": [[513, "torch-tensor-reshape"]], "torch.Tensor.rot90": [[522, "torch-tensor-rot90"]], "torch.Tensor.retains_grad": [[520, "torch-tensor-retains-grad"]], "torch.Tensor.reshape_as": [[514, "torch-tensor-reshape-as"]], "torch.Tensor.scatter_": [[529, "torch-tensor-scatter"]], "torch.Tensor.set_": [[536, "torch-tensor-set"]], "torch.Tensor.real": [[500, "torch-tensor-real"]], "torch.Tensor.ravel": [[499, "torch-tensor-ravel"]], "torch.Tensor.scatter": [[528, "torch-tensor-scatter"]], "torch.Tensor.register_hook": [[504, "torch-tensor-register-hook"]], "torch.Tensor.qscheme": [[495, "torch-tensor-qscheme"]], "torch.Tensor.requires_grad": [[511, "torch-tensor-requires-grad"]], "torch.Tensor.roll": [[521, "torch-tensor-roll"]], "torch.Tensor.resize_as_": [[516, "torch-tensor-resize-as"]], "torch.Tensor.sgn": [[537, "torch-tensor-sgn"]], "torch.Tensor.scatter_reduce_": [[533, "torch-tensor-scatter-reduce"]], "torch.Tensor.resize_": [[515, "torch-tensor-resize"]], "torch.Tensor.row_indices": [[525, "torch-tensor-row-indices"]], "torch.Tensor.q_scale": [[492, "torch-tensor-q-scale"]], "torch.Tensor.orgqr": [[476, "torch-tensor-orgqr"]], "torch.Tensor.nonzero": [[469, "torch-tensor-nonzero"]], "torch.Tensor.ndim": [[453, "torch-tensor-ndim"]], "torch.Tensor.nanmean": [[446, "torch-tensor-nanmean"]], "torch.Tensor.norm": [[470, "torch-tensor-norm"]], "torch.Tensor.not_equal": [[472, "torch-tensor-not-equal"]], "torch.Tensor.ormqr": [[477, "torch-tensor-ormqr"]], "torch.Tensor.negative": [[459, "torch-tensor-negative"]], "torch.Tensor.ne_": [[456, "torch-tensor-ne"]], "torch.Tensor.nextafter": [[467, "torch-tensor-nextafter"]], "torch.Tensor.ne": [[455, "torch-tensor-ne"]], "torch.Tensor.nelement": [[461, "torch-tensor-nelement"]], "torch.Tensor.normal_": [[471, "torch-tensor-normal"]], "torch.Tensor.numel": [[474, "torch-tensor-numel"]], "torch.Tensor.permute": [[479, "torch-tensor-permute"]], "torch.Tensor.narrow": [[450, "torch-tensor-narrow"]], "torch.Tensor.mv": [[441, "torch-tensor-mv"]], "torch.Tensor.narrow_copy": [[451, "torch-tensor-narrow-copy"]], "torch.Tensor.nan_to_num_": [[445, "torch-tensor-nan-to-num"]], "torch.Tensor.outer": [[478, "torch-tensor-outer"]], "torch.Tensor.new_empty": [[462, "torch-tensor-new-empty"]], "torch.Tensor.mvlgamma_": [[443, "torch-tensor-mvlgamma"]], "torch.Tensor.positive": [[484, "torch-tensor-positive"]], "torch.Tensor.mvlgamma": [[442, "torch-tensor-mvlgamma"]], "torch.Tensor.nan_to_num": [[444, "torch-tensor-nan-to-num"]], "torch.Tensor.q_per_channel_axis": [[489, "torch-tensor-q-per-channel-axis"]], "torch.Tensor.new_ones": [[464, "torch-tensor-new-ones"]], "torch.Tensor.nextafter_": [[468, "torch-tensor-nextafter"]], "torch.Tensor.pin_memory": [[480, "torch-tensor-pin-memory"]], "torch.Tensor.polygamma_": [[483, "torch-tensor-polygamma"]], "torch.Tensor.pow_": [[486, "torch-tensor-pow"]], "torch.Tensor.new_zeros": [[466, "torch-tensor-new-zeros"]], "torch.Tensor.nanquantile": [[448, "torch-tensor-nanquantile"]], "torch.Tensor.polygamma": [[482, "torch-tensor-polygamma"]], "torch.Tensor.prod": [[487, "torch-tensor-prod"]], "torch.Tensor.nanmedian": [[447, "torch-tensor-nanmedian"]], "torch.Tensor.nbytes": [[452, "torch-tensor-nbytes"]], "torch.Tensor.pow": [[485, "torch-tensor-pow"]], "torch.Tensor.not_equal_": [[473, "torch-tensor-not-equal"]], "torch.Tensor.negative_": [[460, "torch-tensor-negative"]], "torch.Tensor.neg": [[457, "torch-tensor-neg"]], "torch.Tensor.nansum": [[449, "torch-tensor-nansum"]], "torch.Tensor.put_": [[488, "torch-tensor-put"]], "torch.Tensor.ndimension": [[454, "torch-tensor-ndimension"]], "torch.Tensor.new_tensor": [[465, "torch-tensor-new-tensor"]], "torch.Tensor.pinverse": [[481, "torch-tensor-pinverse"]], "torch.Tensor.neg_": [[458, "torch-tensor-neg"]], "torch.Tensor.new_full": [[463, "torch-tensor-new-full"]], "torch.Tensor.numpy": [[475, "torch-tensor-numpy"]], "torch.Tensor.masked_fill": [[417, "torch-tensor-masked-fill"]], "torch.Tensor.logaddexp": [[396, "torch-tensor-logaddexp"]], "torch.Tensor.moveaxis": [[433, "torch-tensor-moveaxis"]], "torch.Tensor.log2": [[392, "torch-tensor-log2"]], "torch.Tensor.logical_not_": [[403, "torch-tensor-logical-not"]], "torch.Tensor.mm": [[431, "torch-tensor-mm"]], "torch.Tensor.log2_": [[393, "torch-tensor-log2"]], "torch.Tensor.movedim": [[434, "torch-tensor-movedim"]], "torch.Tensor.multiply": [[439, "torch-tensor-multiply"]], "torch.Tensor.mul": [[436, "torch-tensor-mul"]], "torch.Tensor.masked_fill_": [[418, "torch-tensor-masked-fill"]], "torch.Tensor.matrix_power": [[424, "torch-tensor-matrix-power"]], "torch.Tensor.log_normal_": [[395, "torch-tensor-log-normal"]], "torch.Tensor.mean": [[427, "torch-tensor-mean"]], "torch.Tensor.logical_xor_": [[407, "torch-tensor-logical-xor"]], "torch.Tensor.multiply_": [[440, "torch-tensor-multiply"]], "torch.Tensor.min": [[429, "torch-tensor-min"]], "torch.Tensor.map_": [[416, "torch-tensor-map"]], "torch.Tensor.lu": [[414, "torch-tensor-lu"]], "torch.Tensor.maximum": [[426, "torch-tensor-maximum"]], "torch.Tensor.logical_and": [[400, "torch-tensor-logical-and"]], "torch.Tensor.masked_scatter": [[419, "torch-tensor-masked-scatter"]], "torch.Tensor.msort": [[435, "torch-tensor-msort"]], "torch.Tensor.matmul": [[422, "torch-tensor-matmul"]], "torch.Tensor.logical_xor": [[406, "torch-tensor-logical-xor"]], "torch.Tensor.lt_": [[413, "torch-tensor-lt"]], "torch.Tensor.lu_solve": [[415, "torch-tensor-lu-solve"]], "torch.Tensor.minimum": [[430, "torch-tensor-minimum"]], "torch.Tensor.mul_": [[437, "torch-tensor-mul"]], "torch.Tensor.logical_and_": [[401, "torch-tensor-logical-and"]], "torch.Tensor.logical_or": [[404, "torch-tensor-logical-or"]], "torch.Tensor.logaddexp2": [[397, "torch-tensor-logaddexp2"]], "torch.Tensor.multinomial": [[438, "torch-tensor-multinomial"]], "torch.Tensor.logdet": [[399, "torch-tensor-logdet"]], "torch.Tensor.logit_": [[409, "torch-tensor-logit"]], "torch.Tensor.logit": [[408, "torch-tensor-logit"]], "torch.Tensor.max": [[425, "torch-tensor-max"]], "torch.Tensor.masked_select": [[421, "torch-tensor-masked-select"]], "torch.Tensor.logical_not": [[402, "torch-tensor-logical-not"]], "torch.Tensor.lt": [[412, "torch-tensor-lt"]], "torch.Tensor.masked_scatter_": [[420, "torch-tensor-masked-scatter"]], "torch.Tensor.logsumexp": [[410, "torch-tensor-logsumexp"]], "torch.Tensor.median": [[428, "torch-tensor-median"]], "torch.Tensor.mode": [[432, "torch-tensor-mode"]], "torch.Tensor.long": [[411, "torch-tensor-long"]], "torch.Tensor.logcumsumexp": [[398, "torch-tensor-logcumsumexp"]], "torch.Tensor.logical_or_": [[405, "torch-tensor-logical-or"]], "torch.Tensor.matrix_exp": [[423, "torch-tensor-matrix-exp"]], "torch.Tensor.log_": [[394, "torch-tensor-log"]]}, "indexentries": {"gradscaler (class in torch.cuda.amp)": [[0, "torch.cuda.amp.GradScaler"]], "autocast (class in torch)": [[0, "torch.autocast"]], "autocast (class in torch.cpu.amp)": [[0, "torch.cpu.amp.autocast"]], "autocast (class in torch.cuda.amp)": [[0, "torch.cuda.amp.autocast"]], "custom_bwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_bwd"]], "custom_fwd() (in module torch.cuda.amp)": [[0, "torch.cuda.amp.custom_fwd"]], "get_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_backoff_factor"]], "get_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_factor"]], "get_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_growth_interval"]], "get_scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.get_scale"]], "is_enabled() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.is_enabled"]], "load_state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.load_state_dict"]], "module": [[0, "module-torch.amp"], [0, "module-torch.cpu.amp"], [0, "module-torch.cuda.amp"], [1, "module-torch.autograd"], [2, "module-torch.backends"], [2, "module-torch.backends.cpu"], [2, "module-torch.backends.cuda"], [2, "module-torch.backends.cudnn"], [2, "module-torch.backends.mkl"], [2, "module-torch.backends.mkldnn"], [2, "module-torch.backends.mps"], [2, "module-torch.backends.openmp"], [2, "module-torch.backends.opt_einsum"], [2, "module-torch.backends.quantized"], [2, "module-torch.backends.xeon"], [2, "module-torch.backends.xnnpack"], [3, "module-torch.utils.benchmark"], [3, "module-torch.utils.benchmark.examples"], [3, "module-torch.utils.benchmark.op_fuzzers"], [3, "module-torch.utils.benchmark.utils"], [3, "module-torch.utils.benchmark.utils.valgrind_wrapper"], [4, "module-torch.utils.bottleneck"], [30, "module-torch.compiler"], [32, "module-torch.__config__"], [35, "module-torch.cpu"], [36, "module-torch.cuda"], [37, "module-torch.cuda._sanitizer"], [40, "module-torch.utils.data"], [40, "module-torch.utils.data.datapipes"], [40, "module-torch.utils.data.datapipes.dataframe"], [40, "module-torch.utils.data.datapipes.iter"], [40, "module-torch.utils.data.datapipes.map"], [40, "module-torch.utils.data.datapipes.utils"], [43, "module-torch.distributed"], [43, "module-torch.distributed.algorithms"], [43, "module-torch.distributed.algorithms.ddp_comm_hooks"], [43, "module-torch.distributed.algorithms.model_averaging"], [43, "module-torch.distributed.elastic"], [43, "module-torch.distributed.elastic.utils"], [43, "module-torch.distributed.elastic.utils.data"], [43, "module-torch.distributed.launch"], [43, "module-torch.distributed.launcher"], [43, "module-torch.distributed.nn"], [43, "module-torch.distributed.nn.api"], [43, "module-torch.distributed.nn.jit"], [43, "module-torch.distributed.nn.jit.templates"], [43, "module-torch.distributed.pipeline"], [43, "module-torch.distributed.pipeline.sync"], [43, "module-torch.distributed.pipeline.sync.skip"], [43, "module-torch.distributed.tensor"], [45, "module-torch.distributed.checkpoint"], [47, "module-torch.distributed.optim"], [48, "module-torch.distributed.tensor.parallel"], [49, "module-torch.distributions"], [49, "module-torch.distributions.constraint_registry"], [49, "module-torch.distributions.constraints"], [49, "module-torch.distributions.kl"], [49, "module-torch.distributions.transforms"], [51, "module-torch.distributed.elastic.agent"], [51, "module-torch.distributed.elastic.agent.server"], [53, "module-torch.distributed.elastic.multiprocessing.errors"], [54, "module-torch.distributed.elastic.events"], [57, "module-torch.distributed.elastic.metrics"], [58, "module-torch.distributed.elastic.multiprocessing"], [60, "module-torch.distributed.elastic.rendezvous"], [60, "module-torch.distributed.elastic.rendezvous.registry"], [61, "module-torch.distributed.run"], [62, "module-torch.distributed.elastic.timer"], [65, "module-torch.fft"], [66, "module-torch.distributed.fsdp"], [68, "module-torch.func"], [73, "module-torch.futures"], [74, "module-torch.fx"], [74, "module-torch.fx.experimental"], [74, "module-torch.fx.experimental.migrate_gradual_types"], [74, "module-torch.fx.experimental.unification"], [74, "module-torch.fx.experimental.unification.multipledispatch"], [74, "module-torch.fx.passes"], [74, "module-torch.fx.passes.backends"], [74, "module-torch.fx.passes.dialect"], [74, "module-torch.fx.passes.dialect.common"], [74, "module-torch.fx.passes.infra"], [74, "module-torch.fx.passes.tests"], [74, "module-torch.fx.passes.utils"], [1893, "module-torch.hub"], [1896, "module-torch.jit"], [1896, "module-torch.jit.mobile"], [1897, "module-torch.jit.supported_ops"], [1901, "module-torch.jit.unsupported_tensor_ops"], [1902, "module-torch.utils.jit"], [1904, "module-torch.linalg"], [1905, "module-torch._logging"], [1906, "module-torch.masked"], [1906, "module-torch.masked.maskedtensor"], [1908, "module-torch.utils.model_zoo"], [1909, "module-torch.monitor"], [1910, "module-torch.mps"], [1911, "module-torch.multiprocessing"], [1914, "module-torch.nested"], [1915, "module-torch.nn"], [1915, "module-torch.nn.backends"], [1915, "module-torch.nn.modules"], [1915, "module-torch.nn.parallel"], [1915, "module-torch.nn.utils"], [1915, "module-torch.nn.utils.stateless"], [1937, "module-torch.onnx"], [1938, "module-torch.onnx._internal.diagnostics"], [1940, "module-torch.optim"], [1941, "module-torch.package"], [1941, "module-torch.package.analyze"], [1943, "module-torch.profiler"], [1944, "module-torch.ao"], [1944, "module-torch.ao.nn"], [1944, "module-torch.ao.nn.quantizable"], [1944, "module-torch.ao.nn.quantizable.modules"], [1944, "module-torch.ao.nn.quantized"], [1944, "module-torch.ao.nn.quantized.reference"], [1944, "module-torch.ao.nn.quantized.reference.modules"], [1944, "module-torch.ao.nn.sparse"], [1944, "module-torch.ao.nn.sparse.quantized"], [1944, "module-torch.ao.nn.sparse.quantized.dynamic"], [1944, "module-torch.ao.ns"], [1944, "module-torch.ao.ns.fx"], [1944, "module-torch.ao.pruning"], [1944, "module-torch.ao.pruning.scheduler"], [1944, "module-torch.ao.pruning.sparsifier"], [1944, "module-torch.ao.quantization"], [1944, "module-torch.ao.quantization.backend_config"], [1944, "module-torch.ao.quantization.fx"], [1947, "module-torch.ao.nn.intrinsic"], [1947, "module-torch.ao.nn.intrinsic.modules"], [1947, "module-torch.ao.nn.intrinsic.qat"], [1947, "module-torch.ao.nn.intrinsic.qat.modules"], [1947, "module-torch.ao.nn.intrinsic.quantized"], [1947, "module-torch.ao.nn.intrinsic.quantized.dynamic"], [1947, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"], [1947, "module-torch.ao.nn.intrinsic.quantized.modules"], [1947, "module-torch.ao.nn.qat"], [1947, "module-torch.ao.nn.qat.dynamic"], [1947, "module-torch.ao.nn.qat.dynamic.modules"], [1947, "module-torch.ao.nn.qat.modules"], [1947, "module-torch.ao.nn.quantized.dynamic"], [1947, "module-torch.ao.nn.quantized.dynamic.modules"], [1947, "module-torch.ao.nn.quantized.functional"], [1947, "module-torch.ao.nn.quantized.modules"], [1947, "module-torch.ao.quantization.pt2e"], [1947, "module-torch.ao.quantization.pt2e.representation"], [1947, "module-torch.ao.quantization.quantizer"], [1947, "module-torch.nn.intrinsic"], [1947, "module-torch.nn.intrinsic.modules"], [1947, "module-torch.nn.intrinsic.qat"], [1947, "module-torch.nn.intrinsic.qat.modules"], [1947, "module-torch.nn.intrinsic.quantized"], [1947, "module-torch.nn.intrinsic.quantized.dynamic"], [1947, "module-torch.nn.intrinsic.quantized.dynamic.modules"], [1947, "module-torch.nn.intrinsic.quantized.modules"], [1947, "module-torch.nn.qat"], [1947, "module-torch.nn.qat.dynamic"], [1947, "module-torch.nn.qat.dynamic.modules"], [1947, "module-torch.nn.qat.modules"], [1947, "module-torch.nn.quantizable"], [1947, "module-torch.nn.quantizable.modules"], [1947, "module-torch.nn.quantized"], [1947, "module-torch.nn.quantized.dynamic"], [1947, "module-torch.nn.quantized.dynamic.modules"], [1947, "module-torch.nn.quantized.modules"], [1947, "module-torch.quantization"], [1947, "module-torch.quantization.fx"], [1948, "module-torch.random"], [1949, "module-torch.distributed.autograd"], [1949, "module-torch.distributed.rpc"], [1952, "module-torch.signal"], [1952, "module-torch.signal.windows"], [1953, "module-torch.sparse"], [1954, "module-torch.special"], [1958, "module-torch.utils.tensorboard"], [1960, "module-torch.testing"], [1961, "module-torch"], [1961, "module-torch.contrib"], [1961, "module-torch.utils.backcompat"], [1961, "module-torch.utils.hipify"], [1961, "module-torch.utils.model_dump"], [1961, "module-torch.utils.viz"], [1962, "module-torch.ao.ns._numeric_suite"], [1963, "module-torch.ao.ns._numeric_suite_fx"], [1966, "module-torch.utils"]], "scale() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.scale"]], "set_backoff_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_backoff_factor"]], "set_growth_factor() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_factor"]], "set_growth_interval() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.set_growth_interval"]], "state_dict() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.state_dict"]], "step() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.step"]], "torch.amp": [[0, "module-torch.amp"]], "torch.cpu.amp": [[0, "module-torch.cpu.amp"]], "torch.cuda.amp": [[0, "module-torch.cuda.amp"]], "unscale_() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.unscale_"]], "update() (torch.cuda.amp.gradscaler method)": [[0, "torch.cuda.amp.GradScaler.update"]], "function (class in torch.autograd)": [[1, "torch.autograd.Function"]], "allow_mutation_on_saved_tensors (class in torch.autograd.graph)": [[1, "torch.autograd.graph.allow_mutation_on_saved_tensors"]], "detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.detect_anomaly"]], "disable_saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.disable_saved_tensors_hooks"]], "emit_itt (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_itt"]], "emit_nvtx (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.emit_nvtx"]], "profile (class in torch.autograd.profiler)": [[1, "torch.autograd.profiler.profile"]], "register_multi_grad_hook (class in torch.autograd.graph)": [[1, "torch.autograd.graph.register_multi_grad_hook"]], "save_on_cpu (class in torch.autograd.graph)": [[1, "torch.autograd.graph.save_on_cpu"]], "saved_tensors_hooks (class in torch.autograd.graph)": [[1, "torch.autograd.graph.saved_tensors_hooks"]], "set_detect_anomaly (class in torch.autograd)": [[1, "torch.autograd.set_detect_anomaly"]], "torch.autograd": [[1, "module-torch.autograd"]], "sdpbackend (class in torch.backends.cuda)": [[2, "torch.backends.cuda.SDPBackend"]], "allow_bf16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_bf16_reduced_precision_reduction"]], "allow_fp16_reduced_precision_reduction (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_fp16_reduced_precision_reduction"]], "allow_tf32 (in module torch.backends.cuda.matmul)": [[2, "torch.backends.cuda.matmul.allow_tf32"]], "allow_tf32 (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.allow_tf32"]], "benchmark (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark"]], "benchmark_limit (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.benchmark_limit"]], "clear() (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.clear"]], "cufft_plan_cache (in module torch.backends.cuda)": [[2, "torch.backends.cuda.cufft_plan_cache"]], "deterministic (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.deterministic"]], "enable_flash_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_flash_sdp"]], "enable_math_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_math_sdp"]], "enable_mem_efficient_sdp() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.enable_mem_efficient_sdp"]], "enabled (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.enabled"]], "enabled (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.enabled"]], "flash_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.flash_sdp_enabled"]], "get_cpu_capability() (in module torch.backends.cpu)": [[2, "torch.backends.cpu.get_cpu_capability"]], "get_opt_einsum() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.get_opt_einsum"]], "is_available() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.is_available"]], "is_available() (in module torch.backends.mkl)": [[2, "torch.backends.mkl.is_available"]], "is_available() (in module torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.is_available"]], "is_available() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_available"]], "is_available() (in module torch.backends.openmp)": [[2, "torch.backends.openmp.is_available"]], "is_available() (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.is_available"]], "is_built() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.is_built"]], "is_built() (in module torch.backends.mps)": [[2, "torch.backends.mps.is_built"]], "math_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.math_sdp_enabled"]], "max_size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.max_size"]], "mem_efficient_sdp_enabled() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.mem_efficient_sdp_enabled"]], "preferred_linalg_library() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.preferred_linalg_library"]], "sdp_kernel() (in module torch.backends.cuda)": [[2, "torch.backends.cuda.sdp_kernel"]], "size (in module torch.backends.cuda.cufft_plan_cache)": [[2, "torch.backends.cuda.cufft_plan_cache.size"]], "strategy (in module torch.backends.opt_einsum)": [[2, "torch.backends.opt_einsum.strategy"]], "torch.backends": [[2, "module-torch.backends"]], "torch.backends.cpu": [[2, "module-torch.backends.cpu"]], "torch.backends.cuda": [[2, "module-torch.backends.cuda"]], "torch.backends.cudnn": [[2, "module-torch.backends.cudnn"]], "torch.backends.mkl": [[2, "module-torch.backends.mkl"]], "torch.backends.mkldnn": [[2, "module-torch.backends.mkldnn"]], "torch.backends.mps": [[2, "module-torch.backends.mps"]], "torch.backends.openmp": [[2, "module-torch.backends.openmp"]], "torch.backends.opt_einsum": [[2, "module-torch.backends.opt_einsum"]], "torch.backends.quantized": [[2, "module-torch.backends.quantized"]], "torch.backends.xeon": [[2, "module-torch.backends.xeon"]], "torch.backends.xnnpack": [[2, "module-torch.backends.xnnpack"]], "verbose (class in torch.backends.mkl)": [[2, "torch.backends.mkl.verbose"]], "verbose (class in torch.backends.mkldnn)": [[2, "torch.backends.mkldnn.verbose"]], "version() (in module torch.backends.cudnn)": [[2, "torch.backends.cudnn.version"]], "callgrindstats (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.CallgrindStats"]], "functioncounts (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.FunctionCounts"]], "measurement (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Measurement"]], "timer (class in torch.utils.benchmark)": [[3, "torch.utils.benchmark.Timer"]], "as_standardized() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.as_standardized"]], "blocked_autorange() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.blocked_autorange"]], "collect_callgrind() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.collect_callgrind"]], "counts() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.counts"]], "delta() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.delta"]], "denoise() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.denoise"]], "filter() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.filter"]], "merge() (torch.utils.benchmark.measurement static method)": [[3, "torch.utils.benchmark.Measurement.merge"]], "significant_figures (torch.utils.benchmark.measurement property)": [[3, "torch.utils.benchmark.Measurement.significant_figures"]], "stats() (torch.utils.benchmark.callgrindstats method)": [[3, "torch.utils.benchmark.CallgrindStats.stats"]], "timeit() (torch.utils.benchmark.timer method)": [[3, "torch.utils.benchmark.Timer.timeit"]], "torch.utils.benchmark": [[3, "module-torch.utils.benchmark"]], "torch.utils.benchmark.examples": [[3, "module-torch.utils.benchmark.examples"]], "torch.utils.benchmark.op_fuzzers": [[3, "module-torch.utils.benchmark.op_fuzzers"]], "torch.utils.benchmark.utils": [[3, "module-torch.utils.benchmark.utils"]], "torch.utils.benchmark.utils.valgrind_wrapper": [[3, "module-torch.utils.benchmark.utils.valgrind_wrapper"]], "transform() (torch.utils.benchmark.functioncounts method)": [[3, "torch.utils.benchmark.FunctionCounts.transform"]], "torch.utils.bottleneck": [[4, "module-torch.utils.bottleneck"]], "checkpoint() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint"]], "checkpoint_sequential() (in module torch.utils.checkpoint)": [[5, "torch.utils.checkpoint.checkpoint_sequential"]], "torch.compiler": [[30, "module-torch.compiler"]], "parallel_info() (in module torch.__config__)": [[32, "torch.__config__.parallel_info"]], "show() (in module torch.__config__)": [[32, "torch.__config__.show"]], "torch.__config__": [[32, "module-torch.__config__"]], "buildextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.BuildExtension"]], "cudaextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.CUDAExtension"]], "cppextension() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.CppExtension"]], "get_compiler_abi_compatibility_and_version() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.get_compiler_abi_compatibility_and_version"]], "include_paths() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.include_paths"]], "is_ninja_available() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.is_ninja_available"]], "load() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.load"]], "load_inline() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.load_inline"]], "verify_ninja_availability() (in module torch.utils.cpp_extension)": [[33, "torch.utils.cpp_extension.verify_ninja_availability"]], "torch.cpu": [[35, "module-torch.cpu"]], "torch.cuda": [[36, "module-torch.cuda"]], "enable_cuda_sanitizer() (in module torch.cuda._sanitizer)": [[37, "torch.cuda._sanitizer.enable_cuda_sanitizer"]], "torch.cuda._sanitizer": [[37, "module-torch.cuda._sanitizer"]], "batchsampler (class in torch.utils.data)": [[40, "torch.utils.data.BatchSampler"]], "chaindataset (class in torch.utils.data)": [[40, "torch.utils.data.ChainDataset"]], "concatdataset (class in torch.utils.data)": [[40, "torch.utils.data.ConcatDataset"]], "dataloader (class in torch.utils.data)": [[40, "torch.utils.data.DataLoader"]], "dataset (class in torch.utils.data)": [[40, "torch.utils.data.Dataset"]], "distributedsampler (class in torch.utils.data.distributed)": [[40, "torch.utils.data.distributed.DistributedSampler"]], "iterabledataset (class in torch.utils.data)": [[40, "torch.utils.data.IterableDataset"]], "randomsampler (class in torch.utils.data)": [[40, "torch.utils.data.RandomSampler"]], "sampler (class in torch.utils.data)": [[40, "torch.utils.data.Sampler"]], "sequentialsampler (class in torch.utils.data)": [[40, "torch.utils.data.SequentialSampler"]], "stackdataset (class in torch.utils.data)": [[40, "torch.utils.data.StackDataset"]], "subset (class in torch.utils.data)": [[40, "torch.utils.data.Subset"]], "subsetrandomsampler (class in torch.utils.data)": [[40, "torch.utils.data.SubsetRandomSampler"]], "tensordataset (class in torch.utils.data)": [[40, "torch.utils.data.TensorDataset"]], "weightedrandomsampler (class in torch.utils.data)": [[40, "torch.utils.data.WeightedRandomSampler"]], "collate() (in module torch.utils.data._utils.collate)": [[40, "torch.utils.data._utils.collate.collate"]], "default_collate() (in module torch.utils.data)": [[40, "torch.utils.data.default_collate"]], "default_convert() (in module torch.utils.data)": [[40, "torch.utils.data.default_convert"]], "get_worker_info() (in module torch.utils.data)": [[40, "torch.utils.data.get_worker_info"]], "random_split() (in module torch.utils.data)": [[40, "torch.utils.data.random_split"]], "torch.utils.data": [[40, "module-torch.utils.data"]], "torch.utils.data.datapipes": [[40, "module-torch.utils.data.datapipes"]], "torch.utils.data.datapipes.dataframe": [[40, "module-torch.utils.data.datapipes.dataframe"]], "torch.utils.data.datapipes.iter": [[40, "module-torch.utils.data.datapipes.iter"]], "torch.utils.data.datapipes.map": [[40, "module-torch.utils.data.datapipes.map"]], "torch.utils.data.datapipes.utils": [[40, "module-torch.utils.data.datapipes.utils"]], "gradbucket (class in torch.distributed)": [[41, "torch.distributed.GradBucket"]], "powersgdstate (class in torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState"]], "__getstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__getstate__"]], "__setstate__() (torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook.powersgdstate method)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState.__setstate__"]], "allreduce_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.allreduce_hook"]], "batched_powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.batched_powerSGD_hook"]], "bf16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_hook"]], "bf16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.bf16_compress_wrapper"]], "buffer() (in module torch.distributed.gradbucket)": [[41, "torch.distributed.GradBucket.buffer"]], "fp16_compress_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_hook"]], "fp16_compress_wrapper() (in module torch.distributed.algorithms.ddp_comm_hooks.default_hooks)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.default_hooks.fp16_compress_wrapper"]], "gradients() (in module torch.distributed.gradbucket)": [[41, "torch.distributed.GradBucket.gradients"]], "index() (in module torch.distributed.gradbucket)": [[41, "torch.distributed.GradBucket.index"]], "is_last() (in module torch.distributed.gradbucket)": [[41, "torch.distributed.GradBucket.is_last"]], "noop_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.debugging_hooks.noop_hook"]], "parameters() (in module torch.distributed.gradbucket)": [[41, "torch.distributed.GradBucket.parameters"]], "powersgd_hook() (in module torch.distributed.algorithms.ddp_comm_hooks.powersgd_hook)": [[41, "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.powerSGD_hook"]], "set_buffer() (in module torch.distributed.gradbucket)": [[41, "torch.distributed.GradBucket.set_buffer"]], "backend (class in torch.distributed)": [[43, "torch.distributed.Backend"]], "distbackenderror (class in torch.distributed)": [[43, "torch.distributed.DistBackendError"]], "filestore (class in torch.distributed)": [[43, "torch.distributed.FileStore"]], "hashstore (class in torch.distributed)": [[43, "torch.distributed.HashStore"]], "p2pop (class in torch.distributed)": [[43, "torch.distributed.P2POp"]], "prefixstore (class in torch.distributed)": [[43, "torch.distributed.PrefixStore"]], "reduceop (class in torch.distributed)": [[43, "torch.distributed.ReduceOp"]], "store (class in torch.distributed)": [[43, "torch.distributed.Store"]], "tcpstore (class in torch.distributed)": [[43, "torch.distributed.TCPStore"]], "add() (in module torch.distributed.store)": [[43, "torch.distributed.Store.add"]], "all_gather() (in module torch.distributed)": [[43, "torch.distributed.all_gather"]], "all_gather_into_tensor() (in module torch.distributed)": [[43, "torch.distributed.all_gather_into_tensor"]], "all_gather_multigpu() (in module torch.distributed)": [[43, "torch.distributed.all_gather_multigpu"]], "all_gather_object() (in module torch.distributed)": [[43, "torch.distributed.all_gather_object"]], "all_reduce() (in module torch.distributed)": [[43, "torch.distributed.all_reduce"]], "all_reduce_multigpu() (in module torch.distributed)": [[43, "torch.distributed.all_reduce_multigpu"]], "all_to_all() (in module torch.distributed)": [[43, "torch.distributed.all_to_all"]], "all_to_all_single() (in module torch.distributed)": [[43, "torch.distributed.all_to_all_single"]], "barrier() (in module torch.distributed)": [[43, "torch.distributed.barrier"]], "batch_isend_irecv() (in module torch.distributed)": [[43, "torch.distributed.batch_isend_irecv"]], "broadcast() (in module torch.distributed)": [[43, "torch.distributed.broadcast"]], "broadcast_multigpu() (in module torch.distributed)": [[43, "torch.distributed.broadcast_multigpu"]], "broadcast_object_list() (in module torch.distributed)": [[43, "torch.distributed.broadcast_object_list"]], "compare_set() (in module torch.distributed.store)": [[43, "torch.distributed.Store.compare_set"]], "delete_key() (in module torch.distributed.store)": [[43, "torch.distributed.Store.delete_key"]], "gather() (in module torch.distributed)": [[43, "torch.distributed.gather"]], "gather_object() (in module torch.distributed)": [[43, "torch.distributed.gather_object"]], "get() (in module torch.distributed.store)": [[43, "torch.distributed.Store.get"]], "get_backend() (in module torch.distributed)": [[43, "torch.distributed.get_backend"]], "get_global_rank() (in module torch.distributed)": [[43, "torch.distributed.get_global_rank"]], "get_group_rank() (in module torch.distributed)": [[43, "torch.distributed.get_group_rank"]], "get_process_group_ranks() (in module torch.distributed)": [[43, "torch.distributed.get_process_group_ranks"]], "get_rank() (in module torch.distributed)": [[43, "torch.distributed.get_rank"]], "get_world_size() (in module torch.distributed)": [[43, "torch.distributed.get_world_size"]], "init_process_group() (in module torch.distributed)": [[43, "torch.distributed.init_process_group"]], "irecv() (in module torch.distributed)": [[43, "torch.distributed.irecv"]], "is_available() (in module torch.distributed)": [[43, "torch.distributed.is_available"]], "is_gloo_available() (in module torch.distributed)": [[43, "torch.distributed.is_gloo_available"]], "is_initialized() (in module torch.distributed)": [[43, "torch.distributed.is_initialized"]], "is_mpi_available() (in module torch.distributed)": [[43, "torch.distributed.is_mpi_available"]], "is_nccl_available() (in module torch.distributed)": [[43, "torch.distributed.is_nccl_available"]], "is_torchelastic_launched() (in module torch.distributed)": [[43, "torch.distributed.is_torchelastic_launched"]], "isend() (in module torch.distributed)": [[43, "torch.distributed.isend"]], "monitored_barrier() (in module torch.distributed)": [[43, "torch.distributed.monitored_barrier"]], "new_group() (in module torch.distributed)": [[43, "torch.distributed.new_group"]], "num_keys() (in module torch.distributed.store)": [[43, "torch.distributed.Store.num_keys"]], "recv() (in module torch.distributed)": [[43, "torch.distributed.recv"]], "reduce() (in module torch.distributed)": [[43, "torch.distributed.reduce"]], "reduce_multigpu() (in module torch.distributed)": [[43, "torch.distributed.reduce_multigpu"]], "reduce_op (class in torch.distributed)": [[43, "torch.distributed.reduce_op"]], "reduce_scatter() (in module torch.distributed)": [[43, "torch.distributed.reduce_scatter"]], "reduce_scatter_multigpu() (in module torch.distributed)": [[43, "torch.distributed.reduce_scatter_multigpu"]], "reduce_scatter_tensor() (in module torch.distributed)": [[43, "torch.distributed.reduce_scatter_tensor"]], "register_backend() (torch.distributed.backend class method)": [[43, "torch.distributed.Backend.register_backend"]], "scatter() (in module torch.distributed)": [[43, "torch.distributed.scatter"]], "scatter_object_list() (in module torch.distributed)": [[43, "torch.distributed.scatter_object_list"]], "send() (in module torch.distributed)": [[43, "torch.distributed.send"]], "set() (in module torch.distributed.store)": [[43, "torch.distributed.Store.set"]], "set_timeout() (in module torch.distributed.store)": [[43, "torch.distributed.Store.set_timeout"]], "torch.distributed": [[43, "module-torch.distributed"]], "torch.distributed.algorithms": [[43, "module-torch.distributed.algorithms"]], "torch.distributed.algorithms.ddp_comm_hooks": [[43, "module-torch.distributed.algorithms.ddp_comm_hooks"]], "torch.distributed.algorithms.model_averaging": [[43, "module-torch.distributed.algorithms.model_averaging"]], "torch.distributed.elastic": [[43, "module-torch.distributed.elastic"]], "torch.distributed.elastic.utils": [[43, "module-torch.distributed.elastic.utils"]], "torch.distributed.elastic.utils.data": [[43, "module-torch.distributed.elastic.utils.data"]], "torch.distributed.launch": [[43, "module-torch.distributed.launch"]], "torch.distributed.launcher": [[43, "module-torch.distributed.launcher"]], "torch.distributed.nn": [[43, "module-torch.distributed.nn"]], "torch.distributed.nn.api": [[43, "module-torch.distributed.nn.api"]], "torch.distributed.nn.jit": [[43, "module-torch.distributed.nn.jit"]], "torch.distributed.nn.jit.templates": [[43, "module-torch.distributed.nn.jit.templates"]], "torch.distributed.pipeline": [[43, "module-torch.distributed.pipeline"]], "torch.distributed.pipeline.sync": [[43, "module-torch.distributed.pipeline.sync"]], "torch.distributed.pipeline.sync.skip": [[43, "module-torch.distributed.pipeline.sync.skip"]], "torch.distributed.tensor": [[43, "module-torch.distributed.tensor"]], "wait() (in module torch.distributed.store)": [[43, "torch.distributed.Store.wait"]], "join (class in torch.distributed.algorithms)": [[44, "torch.distributed.algorithms.Join"]], "joinhook (class in torch.distributed.algorithms)": [[44, "torch.distributed.algorithms.JoinHook"]], "joinable (class in torch.distributed.algorithms)": [[44, "torch.distributed.algorithms.Joinable"]], "join_device (torch.distributed.algorithms.joinable property)": [[44, "torch.distributed.algorithms.Joinable.join_device"]], "join_hook() (torch.distributed.algorithms.joinable method)": [[44, "torch.distributed.algorithms.Joinable.join_hook"]], "join_process_group (torch.distributed.algorithms.joinable property)": [[44, "torch.distributed.algorithms.Joinable.join_process_group"]], "main_hook() (torch.distributed.algorithms.joinhook method)": [[44, "torch.distributed.algorithms.JoinHook.main_hook"]], "notify_join_context() (torch.distributed.algorithms.join static method)": [[44, "torch.distributed.algorithms.Join.notify_join_context"]], "post_hook() (torch.distributed.algorithms.joinhook method)": [[44, "torch.distributed.algorithms.JoinHook.post_hook"]], "defaultloadplanner (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.DefaultLoadPlanner"]], "defaultsaveplanner (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.DefaultSavePlanner"]], "filesystemreader (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.FileSystemReader"]], "filesystemwriter (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.FileSystemWriter"]], "loadplan (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.LoadPlan"]], "loadplanner (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.LoadPlanner"]], "readitem (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.ReadItem"]], "saveplan (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.SavePlan"]], "saveplanner (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.SavePlanner"]], "storagereader (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.StorageReader"]], "storagewriter (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.StorageWriter"]], "writeitem (class in torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.WriteItem"]], "commit_tensor() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.commit_tensor"]], "create_global_plan() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.create_global_plan"]], "create_global_plan() (torch.distributed.checkpoint.saveplanner method)": [[45, "torch.distributed.checkpoint.SavePlanner.create_global_plan"]], "create_local_plan() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.create_local_plan"]], "create_local_plan() (torch.distributed.checkpoint.saveplanner method)": [[45, "torch.distributed.checkpoint.SavePlanner.create_local_plan"]], "finish() (torch.distributed.checkpoint.storagewriter method)": [[45, "torch.distributed.checkpoint.StorageWriter.finish"]], "finish_plan() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.finish_plan"]], "finish_plan() (torch.distributed.checkpoint.saveplanner method)": [[45, "torch.distributed.checkpoint.SavePlanner.finish_plan"]], "load_bytes() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.load_bytes"]], "load_state_dict() (in module torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.load_state_dict"]], "lookup_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[45, "torch.distributed.checkpoint.DefaultSavePlanner.lookup_object"]], "lookup_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[45, "torch.distributed.checkpoint.DefaultLoadPlanner.lookup_tensor"]], "prepare_global_plan() (torch.distributed.checkpoint.storagereader method)": [[45, "torch.distributed.checkpoint.StorageReader.prepare_global_plan"]], "prepare_global_plan() (torch.distributed.checkpoint.storagewriter method)": [[45, "torch.distributed.checkpoint.StorageWriter.prepare_global_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagereader method)": [[45, "torch.distributed.checkpoint.StorageReader.prepare_local_plan"]], "prepare_local_plan() (torch.distributed.checkpoint.storagewriter method)": [[45, "torch.distributed.checkpoint.StorageWriter.prepare_local_plan"]], "read_data() (torch.distributed.checkpoint.storagereader method)": [[45, "torch.distributed.checkpoint.StorageReader.read_data"]], "read_metadata() (torch.distributed.checkpoint.storagereader method)": [[45, "torch.distributed.checkpoint.StorageReader.read_metadata"]], "resolve_data() (torch.distributed.checkpoint.saveplanner method)": [[45, "torch.distributed.checkpoint.SavePlanner.resolve_data"]], "resolve_tensor() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.resolve_tensor"]], "save_state_dict() (in module torch.distributed.checkpoint)": [[45, "torch.distributed.checkpoint.save_state_dict"]], "set_up_planner() (torch.distributed.checkpoint.loadplanner method)": [[45, "torch.distributed.checkpoint.LoadPlanner.set_up_planner"]], "set_up_planner() (torch.distributed.checkpoint.saveplanner method)": [[45, "torch.distributed.checkpoint.SavePlanner.set_up_planner"]], "set_up_storage_reader() (torch.distributed.checkpoint.storagereader method)": [[45, "torch.distributed.checkpoint.StorageReader.set_up_storage_reader"]], "set_up_storage_writer() (torch.distributed.checkpoint.storagewriter method)": [[45, "torch.distributed.checkpoint.StorageWriter.set_up_storage_writer"]], "torch.distributed.checkpoint": [[45, "module-torch.distributed.checkpoint"]], "transform_object() (torch.distributed.checkpoint.defaultsaveplanner method)": [[45, "torch.distributed.checkpoint.DefaultSavePlanner.transform_object"]], "transform_tensor() (torch.distributed.checkpoint.defaultloadplanner method)": [[45, "torch.distributed.checkpoint.DefaultLoadPlanner.transform_tensor"]], "write_data() (torch.distributed.checkpoint.storagewriter method)": [[45, "torch.distributed.checkpoint.StorageWriter.write_data"]], "distributedoptimizer (class in torch.distributed.optim)": [[47, "torch.distributed.optim.DistributedOptimizer"]], "postlocalsgdoptimizer (class in torch.distributed.optim)": [[47, "torch.distributed.optim.PostLocalSGDOptimizer"]], "zeroredundancyoptimizer (class in torch.distributed.optim)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer"]], "add_param_group() (torch.distributed.optim.zeroredundancyoptimizer method)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer.add_param_group"]], "consolidate_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer.consolidate_state_dict"]], "join_hook() (torch.distributed.optim.zeroredundancyoptimizer method)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer.join_hook"]], "load_state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[47, "torch.distributed.optim.PostLocalSGDOptimizer.load_state_dict"]], "load_state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer.load_state_dict"]], "state_dict() (torch.distributed.optim.postlocalsgdoptimizer method)": [[47, "torch.distributed.optim.PostLocalSGDOptimizer.state_dict"]], "state_dict() (torch.distributed.optim.zeroredundancyoptimizer method)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer.state_dict"]], "step() (torch.distributed.optim.distributedoptimizer method)": [[47, "torch.distributed.optim.DistributedOptimizer.step"]], "step() (torch.distributed.optim.postlocalsgdoptimizer method)": [[47, "torch.distributed.optim.PostLocalSGDOptimizer.step"]], "step() (torch.distributed.optim.zeroredundancyoptimizer method)": [[47, "torch.distributed.optim.ZeroRedundancyOptimizer.step"]], "torch.distributed.optim": [[47, "module-torch.distributed.optim"]], "colwiseparallel (class in torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.ColwiseParallel"]], "pairwiseparallel (class in torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.PairwiseParallel"]], "rowwiseparallel (class in torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.RowwiseParallel"]], "sequenceparallel (class in torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.SequenceParallel"]], "tensorparallelmultiheadattention (class in torch.distributed.tensor.parallel.multihead_attention_tp)": [[48, "torch.distributed.tensor.parallel.multihead_attention_tp.TensorParallelMultiheadAttention"]], "enable_2d_with_fsdp() (in module torch.distributed.tensor.parallel.fsdp)": [[48, "torch.distributed.tensor.parallel.fsdp.enable_2d_with_fsdp"]], "make_input_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_input_replicate_1d"]], "make_input_reshard_replicate() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_input_reshard_replicate"]], "make_input_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_input_shard_1d"]], "make_input_shard_1d_last_dim() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_input_shard_1d_last_dim"]], "make_output_replicate_1d() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_output_replicate_1d"]], "make_output_reshard_tensor() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_output_reshard_tensor"]], "make_output_shard_1d() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_output_shard_1d"]], "make_output_tensor() (in module torch.distributed.tensor.parallel.style)": [[48, "torch.distributed.tensor.parallel.style.make_output_tensor"]], "parallelize_module() (in module torch.distributed.tensor.parallel)": [[48, "torch.distributed.tensor.parallel.parallelize_module"]], "torch.distributed.tensor.parallel": [[48, "module-torch.distributed.tensor.parallel"]], "abstransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.AbsTransform"]], "affinetransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.AffineTransform"]], "bernoulli (class in torch.distributions.bernoulli)": [[49, "torch.distributions.bernoulli.Bernoulli"]], "beta (class in torch.distributions.beta)": [[49, "torch.distributions.beta.Beta"]], "binomial (class in torch.distributions.binomial)": [[49, "torch.distributions.binomial.Binomial"]], "cattransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.CatTransform"]], "categorical (class in torch.distributions.categorical)": [[49, "torch.distributions.categorical.Categorical"]], "cauchy (class in torch.distributions.cauchy)": [[49, "torch.distributions.cauchy.Cauchy"]], "chi2 (class in torch.distributions.chi2)": [[49, "torch.distributions.chi2.Chi2"]], "composetransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.ComposeTransform"]], "constraint (class in torch.distributions.constraints)": [[49, "torch.distributions.constraints.Constraint"]], "constraintregistry (class in torch.distributions.constraint_registry)": [[49, "torch.distributions.constraint_registry.ConstraintRegistry"]], "continuousbernoulli (class in torch.distributions.continuous_bernoulli)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli"]], "corrcholeskytransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.CorrCholeskyTransform"]], "cumulativedistributiontransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.CumulativeDistributionTransform"]], "dirichlet (class in torch.distributions.dirichlet)": [[49, "torch.distributions.dirichlet.Dirichlet"]], "distribution (class in torch.distributions.distribution)": [[49, "torch.distributions.distribution.Distribution"]], "exptransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.ExpTransform"]], "exponential (class in torch.distributions.exponential)": [[49, "torch.distributions.exponential.Exponential"]], "exponentialfamily (class in torch.distributions.exp_family)": [[49, "torch.distributions.exp_family.ExponentialFamily"]], "fishersnedecor (class in torch.distributions.fishersnedecor)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor"]], "gamma (class in torch.distributions.gamma)": [[49, "torch.distributions.gamma.Gamma"]], "geometric (class in torch.distributions.geometric)": [[49, "torch.distributions.geometric.Geometric"]], "gumbel (class in torch.distributions.gumbel)": [[49, "torch.distributions.gumbel.Gumbel"]], "halfcauchy (class in torch.distributions.half_cauchy)": [[49, "torch.distributions.half_cauchy.HalfCauchy"]], "halfnormal (class in torch.distributions.half_normal)": [[49, "torch.distributions.half_normal.HalfNormal"]], "independent (class in torch.distributions.independent)": [[49, "torch.distributions.independent.Independent"]], "independenttransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.IndependentTransform"]], "kumaraswamy (class in torch.distributions.kumaraswamy)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy"]], "lkjcholesky (class in torch.distributions.lkj_cholesky)": [[49, "torch.distributions.lkj_cholesky.LKJCholesky"]], "laplace (class in torch.distributions.laplace)": [[49, "torch.distributions.laplace.Laplace"]], "lognormal (class in torch.distributions.log_normal)": [[49, "torch.distributions.log_normal.LogNormal"]], "logitrelaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli"]], "lowrankmultivariatenormal (class in torch.distributions.lowrank_multivariate_normal)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal"]], "lowercholeskytransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.LowerCholeskyTransform"]], "mixturesamefamily (class in torch.distributions.mixture_same_family)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily"]], "multinomial (class in torch.distributions.multinomial)": [[49, "torch.distributions.multinomial.Multinomial"]], "multivariatenormal (class in torch.distributions.multivariate_normal)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal"]], "negativebinomial (class in torch.distributions.negative_binomial)": [[49, "torch.distributions.negative_binomial.NegativeBinomial"]], "normal (class in torch.distributions.normal)": [[49, "torch.distributions.normal.Normal"]], "onehotcategorical (class in torch.distributions.one_hot_categorical)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical"]], "pareto (class in torch.distributions.pareto)": [[49, "torch.distributions.pareto.Pareto"]], "poisson (class in torch.distributions.poisson)": [[49, "torch.distributions.poisson.Poisson"]], "positivedefinitetransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.PositiveDefiniteTransform"]], "powertransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.PowerTransform"]], "relaxedbernoulli (class in torch.distributions.relaxed_bernoulli)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"]], "relaxedonehotcategorical (class in torch.distributions.relaxed_categorical)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"]], "reshapetransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.ReshapeTransform"]], "sigmoidtransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.SigmoidTransform"]], "softmaxtransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.SoftmaxTransform"]], "softplustransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.SoftplusTransform"]], "stacktransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.StackTransform"]], "stickbreakingtransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.StickBreakingTransform"]], "studentt (class in torch.distributions.studentt)": [[49, "torch.distributions.studentT.StudentT"]], "tanhtransform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.TanhTransform"]], "transform (class in torch.distributions.transforms)": [[49, "torch.distributions.transforms.Transform"]], "transformeddistribution (class in torch.distributions.transformed_distribution)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution"]], "uniform (class in torch.distributions.uniform)": [[49, "torch.distributions.uniform.Uniform"]], "vonmises (class in torch.distributions.von_mises)": [[49, "torch.distributions.von_mises.VonMises"]], "weibull (class in torch.distributions.weibull)": [[49, "torch.distributions.weibull.Weibull"]], "wishart (class in torch.distributions.wishart)": [[49, "torch.distributions.wishart.Wishart"]], "arg_constraints (torch.distributions.bernoulli.bernoulli attribute)": [[49, "torch.distributions.bernoulli.Bernoulli.arg_constraints"]], "arg_constraints (torch.distributions.beta.beta attribute)": [[49, "torch.distributions.beta.Beta.arg_constraints"]], "arg_constraints (torch.distributions.binomial.binomial attribute)": [[49, "torch.distributions.binomial.Binomial.arg_constraints"]], "arg_constraints (torch.distributions.categorical.categorical attribute)": [[49, "torch.distributions.categorical.Categorical.arg_constraints"]], "arg_constraints (torch.distributions.cauchy.cauchy attribute)": [[49, "torch.distributions.cauchy.Cauchy.arg_constraints"]], "arg_constraints (torch.distributions.chi2.chi2 attribute)": [[49, "torch.distributions.chi2.Chi2.arg_constraints"]], "arg_constraints (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.dirichlet.dirichlet attribute)": [[49, "torch.distributions.dirichlet.Dirichlet.arg_constraints"]], "arg_constraints (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.arg_constraints"]], "arg_constraints (torch.distributions.exponential.exponential attribute)": [[49, "torch.distributions.exponential.Exponential.arg_constraints"]], "arg_constraints (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.arg_constraints"]], "arg_constraints (torch.distributions.gamma.gamma attribute)": [[49, "torch.distributions.gamma.Gamma.arg_constraints"]], "arg_constraints (torch.distributions.geometric.geometric attribute)": [[49, "torch.distributions.geometric.Geometric.arg_constraints"]], "arg_constraints (torch.distributions.gumbel.gumbel attribute)": [[49, "torch.distributions.gumbel.Gumbel.arg_constraints"]], "arg_constraints (torch.distributions.half_cauchy.halfcauchy attribute)": [[49, "torch.distributions.half_cauchy.HalfCauchy.arg_constraints"]], "arg_constraints (torch.distributions.half_normal.halfnormal attribute)": [[49, "torch.distributions.half_normal.HalfNormal.arg_constraints"]], "arg_constraints (torch.distributions.independent.independent attribute)": [[49, "torch.distributions.independent.Independent.arg_constraints"]], "arg_constraints (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.arg_constraints"]], "arg_constraints (torch.distributions.laplace.laplace attribute)": [[49, "torch.distributions.laplace.Laplace.arg_constraints"]], "arg_constraints (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[49, "torch.distributions.lkj_cholesky.LKJCholesky.arg_constraints"]], "arg_constraints (torch.distributions.log_normal.lognormal attribute)": [[49, "torch.distributions.log_normal.LogNormal.arg_constraints"]], "arg_constraints (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.arg_constraints"]], "arg_constraints (torch.distributions.multinomial.multinomial attribute)": [[49, "torch.distributions.multinomial.Multinomial.arg_constraints"]], "arg_constraints (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.arg_constraints"]], "arg_constraints (torch.distributions.negative_binomial.negativebinomial attribute)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.arg_constraints"]], "arg_constraints (torch.distributions.normal.normal attribute)": [[49, "torch.distributions.normal.Normal.arg_constraints"]], "arg_constraints (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.pareto.pareto attribute)": [[49, "torch.distributions.pareto.Pareto.arg_constraints"]], "arg_constraints (torch.distributions.poisson.poisson attribute)": [[49, "torch.distributions.poisson.Poisson.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.arg_constraints"]], "arg_constraints (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.arg_constraints"]], "arg_constraints (torch.distributions.studentt.studentt attribute)": [[49, "torch.distributions.studentT.StudentT.arg_constraints"]], "arg_constraints (torch.distributions.transformed_distribution.transformeddistribution attribute)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.arg_constraints"]], "arg_constraints (torch.distributions.uniform.uniform attribute)": [[49, "torch.distributions.uniform.Uniform.arg_constraints"]], "arg_constraints (torch.distributions.von_mises.vonmises attribute)": [[49, "torch.distributions.von_mises.VonMises.arg_constraints"]], "arg_constraints (torch.distributions.weibull.weibull attribute)": [[49, "torch.distributions.weibull.Weibull.arg_constraints"]], "arg_constraints (torch.distributions.wishart.wishart attribute)": [[49, "torch.distributions.wishart.Wishart.arg_constraints"]], "batch_shape (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.batch_shape"]], "cat (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.cat"]], "cdf() (torch.distributions.cauchy.cauchy method)": [[49, "torch.distributions.cauchy.Cauchy.cdf"]], "cdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.cdf"]], "cdf() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.cdf"]], "cdf() (torch.distributions.exponential.exponential method)": [[49, "torch.distributions.exponential.Exponential.cdf"]], "cdf() (torch.distributions.gamma.gamma method)": [[49, "torch.distributions.gamma.Gamma.cdf"]], "cdf() (torch.distributions.half_cauchy.halfcauchy method)": [[49, "torch.distributions.half_cauchy.HalfCauchy.cdf"]], "cdf() (torch.distributions.half_normal.halfnormal method)": [[49, "torch.distributions.half_normal.HalfNormal.cdf"]], "cdf() (torch.distributions.laplace.laplace method)": [[49, "torch.distributions.laplace.Laplace.cdf"]], "cdf() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.cdf"]], "cdf() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.cdf"]], "cdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.cdf"]], "cdf() (torch.distributions.uniform.uniform method)": [[49, "torch.distributions.uniform.Uniform.cdf"]], "check() (torch.distributions.constraints.constraint method)": [[49, "torch.distributions.constraints.Constraint.check"]], "component_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.component_distribution"]], "concentration0 (torch.distributions.beta.beta property)": [[49, "torch.distributions.beta.Beta.concentration0"]], "concentration1 (torch.distributions.beta.beta property)": [[49, "torch.distributions.beta.Beta.concentration1"]], "covariance_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix"]], "covariance_matrix (torch.distributions.wishart.wishart property)": [[49, "torch.distributions.wishart.Wishart.covariance_matrix"]], "dependent_property (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.dependent_property"]], "df (torch.distributions.chi2.chi2 property)": [[49, "torch.distributions.chi2.Chi2.df"]], "entropy() (torch.distributions.bernoulli.bernoulli method)": [[49, "torch.distributions.bernoulli.Bernoulli.entropy"]], "entropy() (torch.distributions.beta.beta method)": [[49, "torch.distributions.beta.Beta.entropy"]], "entropy() (torch.distributions.binomial.binomial method)": [[49, "torch.distributions.binomial.Binomial.entropy"]], "entropy() (torch.distributions.categorical.categorical method)": [[49, "torch.distributions.categorical.Categorical.entropy"]], "entropy() (torch.distributions.cauchy.cauchy method)": [[49, "torch.distributions.cauchy.Cauchy.entropy"]], "entropy() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.entropy"]], "entropy() (torch.distributions.dirichlet.dirichlet method)": [[49, "torch.distributions.dirichlet.Dirichlet.entropy"]], "entropy() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.entropy"]], "entropy() (torch.distributions.exp_family.exponentialfamily method)": [[49, "torch.distributions.exp_family.ExponentialFamily.entropy"]], "entropy() (torch.distributions.exponential.exponential method)": [[49, "torch.distributions.exponential.Exponential.entropy"]], "entropy() (torch.distributions.gamma.gamma method)": [[49, "torch.distributions.gamma.Gamma.entropy"]], "entropy() (torch.distributions.geometric.geometric method)": [[49, "torch.distributions.geometric.Geometric.entropy"]], "entropy() (torch.distributions.gumbel.gumbel method)": [[49, "torch.distributions.gumbel.Gumbel.entropy"]], "entropy() (torch.distributions.half_cauchy.halfcauchy method)": [[49, "torch.distributions.half_cauchy.HalfCauchy.entropy"]], "entropy() (torch.distributions.half_normal.halfnormal method)": [[49, "torch.distributions.half_normal.HalfNormal.entropy"]], "entropy() (torch.distributions.independent.independent method)": [[49, "torch.distributions.independent.Independent.entropy"]], "entropy() (torch.distributions.kumaraswamy.kumaraswamy method)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.entropy"]], "entropy() (torch.distributions.laplace.laplace method)": [[49, "torch.distributions.laplace.Laplace.entropy"]], "entropy() (torch.distributions.log_normal.lognormal method)": [[49, "torch.distributions.log_normal.LogNormal.entropy"]], "entropy() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy"]], "entropy() (torch.distributions.multinomial.multinomial method)": [[49, "torch.distributions.multinomial.Multinomial.entropy"]], "entropy() (torch.distributions.multivariate_normal.multivariatenormal method)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.entropy"]], "entropy() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.entropy"]], "entropy() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.entropy"]], "entropy() (torch.distributions.pareto.pareto method)": [[49, "torch.distributions.pareto.Pareto.entropy"]], "entropy() (torch.distributions.studentt.studentt method)": [[49, "torch.distributions.studentT.StudentT.entropy"]], "entropy() (torch.distributions.uniform.uniform method)": [[49, "torch.distributions.uniform.Uniform.entropy"]], "entropy() (torch.distributions.weibull.weibull method)": [[49, "torch.distributions.weibull.Weibull.entropy"]], "entropy() (torch.distributions.wishart.wishart method)": [[49, "torch.distributions.wishart.Wishart.entropy"]], "enumerate_support() (torch.distributions.bernoulli.bernoulli method)": [[49, "torch.distributions.bernoulli.Bernoulli.enumerate_support"]], "enumerate_support() (torch.distributions.binomial.binomial method)": [[49, "torch.distributions.binomial.Binomial.enumerate_support"]], "enumerate_support() (torch.distributions.categorical.categorical method)": [[49, "torch.distributions.categorical.Categorical.enumerate_support"]], "enumerate_support() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.enumerate_support"]], "enumerate_support() (torch.distributions.independent.independent method)": [[49, "torch.distributions.independent.Independent.enumerate_support"]], "enumerate_support() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support"]], "event_shape (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.event_shape"]], "expand() (torch.distributions.bernoulli.bernoulli method)": [[49, "torch.distributions.bernoulli.Bernoulli.expand"]], "expand() (torch.distributions.beta.beta method)": [[49, "torch.distributions.beta.Beta.expand"]], "expand() (torch.distributions.binomial.binomial method)": [[49, "torch.distributions.binomial.Binomial.expand"]], "expand() (torch.distributions.categorical.categorical method)": [[49, "torch.distributions.categorical.Categorical.expand"]], "expand() (torch.distributions.cauchy.cauchy method)": [[49, "torch.distributions.cauchy.Cauchy.expand"]], "expand() (torch.distributions.chi2.chi2 method)": [[49, "torch.distributions.chi2.Chi2.expand"]], "expand() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.expand"]], "expand() (torch.distributions.dirichlet.dirichlet method)": [[49, "torch.distributions.dirichlet.Dirichlet.expand"]], "expand() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.expand"]], "expand() (torch.distributions.exponential.exponential method)": [[49, "torch.distributions.exponential.Exponential.expand"]], "expand() (torch.distributions.fishersnedecor.fishersnedecor method)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.expand"]], "expand() (torch.distributions.gamma.gamma method)": [[49, "torch.distributions.gamma.Gamma.expand"]], "expand() (torch.distributions.geometric.geometric method)": [[49, "torch.distributions.geometric.Geometric.expand"]], "expand() (torch.distributions.gumbel.gumbel method)": [[49, "torch.distributions.gumbel.Gumbel.expand"]], "expand() (torch.distributions.half_cauchy.halfcauchy method)": [[49, "torch.distributions.half_cauchy.HalfCauchy.expand"]], "expand() (torch.distributions.half_normal.halfnormal method)": [[49, "torch.distributions.half_normal.HalfNormal.expand"]], "expand() (torch.distributions.independent.independent method)": [[49, "torch.distributions.independent.Independent.expand"]], "expand() (torch.distributions.kumaraswamy.kumaraswamy method)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.expand"]], "expand() (torch.distributions.laplace.laplace method)": [[49, "torch.distributions.laplace.Laplace.expand"]], "expand() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[49, "torch.distributions.lkj_cholesky.LKJCholesky.expand"]], "expand() (torch.distributions.log_normal.lognormal method)": [[49, "torch.distributions.log_normal.LogNormal.expand"]], "expand() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand"]], "expand() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.expand"]], "expand() (torch.distributions.multinomial.multinomial method)": [[49, "torch.distributions.multinomial.Multinomial.expand"]], "expand() (torch.distributions.multivariate_normal.multivariatenormal method)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.expand"]], "expand() (torch.distributions.negative_binomial.negativebinomial method)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.expand"]], "expand() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.expand"]], "expand() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.expand"]], "expand() (torch.distributions.pareto.pareto method)": [[49, "torch.distributions.pareto.Pareto.expand"]], "expand() (torch.distributions.poisson.poisson method)": [[49, "torch.distributions.poisson.Poisson.expand"]], "expand() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_bernoulli.relaxedbernoulli method)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand"]], "expand() (torch.distributions.relaxed_categorical.relaxedonehotcategorical method)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand"]], "expand() (torch.distributions.studentt.studentt method)": [[49, "torch.distributions.studentT.StudentT.expand"]], "expand() (torch.distributions.transformed_distribution.transformeddistribution method)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.expand"]], "expand() (torch.distributions.uniform.uniform method)": [[49, "torch.distributions.uniform.Uniform.expand"]], "expand() (torch.distributions.von_mises.vonmises method)": [[49, "torch.distributions.von_mises.VonMises.expand"]], "expand() (torch.distributions.weibull.weibull method)": [[49, "torch.distributions.weibull.Weibull.expand"]], "expand() (torch.distributions.wishart.wishart method)": [[49, "torch.distributions.wishart.Wishart.expand"]], "forward_shape() (torch.distributions.transforms.transform method)": [[49, "torch.distributions.transforms.Transform.forward_shape"]], "greater_than (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.greater_than"]], "greater_than_eq (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.greater_than_eq"]], "half_open_interval (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.half_open_interval"]], "has_enumerate_support (torch.distributions.bernoulli.bernoulli attribute)": [[49, "torch.distributions.bernoulli.Bernoulli.has_enumerate_support"]], "has_enumerate_support (torch.distributions.binomial.binomial attribute)": [[49, "torch.distributions.binomial.Binomial.has_enumerate_support"]], "has_enumerate_support (torch.distributions.categorical.categorical attribute)": [[49, "torch.distributions.categorical.Categorical.has_enumerate_support"]], "has_enumerate_support (torch.distributions.independent.independent property)": [[49, "torch.distributions.independent.Independent.has_enumerate_support"]], "has_enumerate_support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.has_enumerate_support"]], "has_rsample (torch.distributions.beta.beta attribute)": [[49, "torch.distributions.beta.Beta.has_rsample"]], "has_rsample (torch.distributions.cauchy.cauchy attribute)": [[49, "torch.distributions.cauchy.Cauchy.has_rsample"]], "has_rsample (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.has_rsample"]], "has_rsample (torch.distributions.dirichlet.dirichlet attribute)": [[49, "torch.distributions.dirichlet.Dirichlet.has_rsample"]], "has_rsample (torch.distributions.exponential.exponential attribute)": [[49, "torch.distributions.exponential.Exponential.has_rsample"]], "has_rsample (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.has_rsample"]], "has_rsample (torch.distributions.gamma.gamma attribute)": [[49, "torch.distributions.gamma.Gamma.has_rsample"]], "has_rsample (torch.distributions.half_cauchy.halfcauchy attribute)": [[49, "torch.distributions.half_cauchy.HalfCauchy.has_rsample"]], "has_rsample (torch.distributions.half_normal.halfnormal attribute)": [[49, "torch.distributions.half_normal.HalfNormal.has_rsample"]], "has_rsample (torch.distributions.independent.independent property)": [[49, "torch.distributions.independent.Independent.has_rsample"]], "has_rsample (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.has_rsample"]], "has_rsample (torch.distributions.laplace.laplace attribute)": [[49, "torch.distributions.laplace.Laplace.has_rsample"]], "has_rsample (torch.distributions.log_normal.lognormal attribute)": [[49, "torch.distributions.log_normal.LogNormal.has_rsample"]], "has_rsample (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.mixture_same_family.mixturesamefamily attribute)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.has_rsample"]], "has_rsample (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.has_rsample"]], "has_rsample (torch.distributions.normal.normal attribute)": [[49, "torch.distributions.normal.Normal.has_rsample"]], "has_rsample (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.has_rsample"]], "has_rsample (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.has_rsample"]], "has_rsample (torch.distributions.studentt.studentt attribute)": [[49, "torch.distributions.studentT.StudentT.has_rsample"]], "has_rsample (torch.distributions.transformed_distribution.transformeddistribution property)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample"]], "has_rsample (torch.distributions.uniform.uniform attribute)": [[49, "torch.distributions.uniform.Uniform.has_rsample"]], "has_rsample (torch.distributions.von_mises.vonmises attribute)": [[49, "torch.distributions.von_mises.VonMises.has_rsample"]], "has_rsample (torch.distributions.wishart.wishart attribute)": [[49, "torch.distributions.wishart.Wishart.has_rsample"]], "icdf() (torch.distributions.cauchy.cauchy method)": [[49, "torch.distributions.cauchy.Cauchy.icdf"]], "icdf() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.icdf"]], "icdf() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.icdf"]], "icdf() (torch.distributions.exponential.exponential method)": [[49, "torch.distributions.exponential.Exponential.icdf"]], "icdf() (torch.distributions.half_cauchy.halfcauchy method)": [[49, "torch.distributions.half_cauchy.HalfCauchy.icdf"]], "icdf() (torch.distributions.half_normal.halfnormal method)": [[49, "torch.distributions.half_normal.HalfNormal.icdf"]], "icdf() (torch.distributions.laplace.laplace method)": [[49, "torch.distributions.laplace.Laplace.icdf"]], "icdf() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.icdf"]], "icdf() (torch.distributions.transformed_distribution.transformeddistribution method)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.icdf"]], "icdf() (torch.distributions.uniform.uniform method)": [[49, "torch.distributions.uniform.Uniform.icdf"]], "independent (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.independent"]], "integer_interval (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.integer_interval"]], "interval (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.interval"]], "inv (torch.distributions.transforms.transform property)": [[49, "torch.distributions.transforms.Transform.inv"]], "inverse_shape() (torch.distributions.transforms.transform method)": [[49, "torch.distributions.transforms.Transform.inverse_shape"]], "kl_divergence() (in module torch.distributions.kl)": [[49, "torch.distributions.kl.kl_divergence"]], "less_than (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.less_than"]], "loc (torch.distributions.log_normal.lognormal property)": [[49, "torch.distributions.log_normal.LogNormal.loc"]], "log_abs_det_jacobian() (torch.distributions.transforms.transform method)": [[49, "torch.distributions.transforms.Transform.log_abs_det_jacobian"]], "log_prob() (torch.distributions.bernoulli.bernoulli method)": [[49, "torch.distributions.bernoulli.Bernoulli.log_prob"]], "log_prob() (torch.distributions.beta.beta method)": [[49, "torch.distributions.beta.Beta.log_prob"]], "log_prob() (torch.distributions.binomial.binomial method)": [[49, "torch.distributions.binomial.Binomial.log_prob"]], "log_prob() (torch.distributions.categorical.categorical method)": [[49, "torch.distributions.categorical.Categorical.log_prob"]], "log_prob() (torch.distributions.cauchy.cauchy method)": [[49, "torch.distributions.cauchy.Cauchy.log_prob"]], "log_prob() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.log_prob"]], "log_prob() (torch.distributions.dirichlet.dirichlet method)": [[49, "torch.distributions.dirichlet.Dirichlet.log_prob"]], "log_prob() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.log_prob"]], "log_prob() (torch.distributions.exponential.exponential method)": [[49, "torch.distributions.exponential.Exponential.log_prob"]], "log_prob() (torch.distributions.fishersnedecor.fishersnedecor method)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.log_prob"]], "log_prob() (torch.distributions.gamma.gamma method)": [[49, "torch.distributions.gamma.Gamma.log_prob"]], "log_prob() (torch.distributions.geometric.geometric method)": [[49, "torch.distributions.geometric.Geometric.log_prob"]], "log_prob() (torch.distributions.gumbel.gumbel method)": [[49, "torch.distributions.gumbel.Gumbel.log_prob"]], "log_prob() (torch.distributions.half_cauchy.halfcauchy method)": [[49, "torch.distributions.half_cauchy.HalfCauchy.log_prob"]], "log_prob() (torch.distributions.half_normal.halfnormal method)": [[49, "torch.distributions.half_normal.HalfNormal.log_prob"]], "log_prob() (torch.distributions.independent.independent method)": [[49, "torch.distributions.independent.Independent.log_prob"]], "log_prob() (torch.distributions.laplace.laplace method)": [[49, "torch.distributions.laplace.Laplace.log_prob"]], "log_prob() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[49, "torch.distributions.lkj_cholesky.LKJCholesky.log_prob"]], "log_prob() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob"]], "log_prob() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.log_prob"]], "log_prob() (torch.distributions.multinomial.multinomial method)": [[49, "torch.distributions.multinomial.Multinomial.log_prob"]], "log_prob() (torch.distributions.multivariate_normal.multivariatenormal method)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.log_prob"]], "log_prob() (torch.distributions.negative_binomial.negativebinomial method)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.log_prob"]], "log_prob() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.log_prob"]], "log_prob() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob"]], "log_prob() (torch.distributions.poisson.poisson method)": [[49, "torch.distributions.poisson.Poisson.log_prob"]], "log_prob() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob"]], "log_prob() (torch.distributions.studentt.studentt method)": [[49, "torch.distributions.studentT.StudentT.log_prob"]], "log_prob() (torch.distributions.transformed_distribution.transformeddistribution method)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.log_prob"]], "log_prob() (torch.distributions.uniform.uniform method)": [[49, "torch.distributions.uniform.Uniform.log_prob"]], "log_prob() (torch.distributions.von_mises.vonmises method)": [[49, "torch.distributions.von_mises.VonMises.log_prob"]], "log_prob() (torch.distributions.wishart.wishart method)": [[49, "torch.distributions.wishart.Wishart.log_prob"]], "logits (torch.distributions.bernoulli.bernoulli property)": [[49, "torch.distributions.bernoulli.Bernoulli.logits"]], "logits (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.logits"]], "logits (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.logits"]], "logits (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.logits"]], "logits (torch.distributions.geometric.geometric property)": [[49, "torch.distributions.geometric.Geometric.logits"]], "logits (torch.distributions.multinomial.multinomial property)": [[49, "torch.distributions.multinomial.Multinomial.logits"]], "logits (torch.distributions.negative_binomial.negativebinomial property)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.logits"]], "logits (torch.distributions.one_hot_categorical.onehotcategorical property)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.logits"]], "logits (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits"]], "logits (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits"]], "mean (torch.distributions.bernoulli.bernoulli property)": [[49, "torch.distributions.bernoulli.Bernoulli.mean"]], "mean (torch.distributions.beta.beta property)": [[49, "torch.distributions.beta.Beta.mean"]], "mean (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.mean"]], "mean (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.mean"]], "mean (torch.distributions.cauchy.cauchy property)": [[49, "torch.distributions.cauchy.Cauchy.mean"]], "mean (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.mean"]], "mean (torch.distributions.dirichlet.dirichlet property)": [[49, "torch.distributions.dirichlet.Dirichlet.mean"]], "mean (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.mean"]], "mean (torch.distributions.exponential.exponential property)": [[49, "torch.distributions.exponential.Exponential.mean"]], "mean (torch.distributions.fishersnedecor.fishersnedecor property)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.mean"]], "mean (torch.distributions.gamma.gamma property)": [[49, "torch.distributions.gamma.Gamma.mean"]], "mean (torch.distributions.geometric.geometric property)": [[49, "torch.distributions.geometric.Geometric.mean"]], "mean (torch.distributions.gumbel.gumbel property)": [[49, "torch.distributions.gumbel.Gumbel.mean"]], "mean (torch.distributions.half_cauchy.halfcauchy property)": [[49, "torch.distributions.half_cauchy.HalfCauchy.mean"]], "mean (torch.distributions.half_normal.halfnormal property)": [[49, "torch.distributions.half_normal.HalfNormal.mean"]], "mean (torch.distributions.independent.independent property)": [[49, "torch.distributions.independent.Independent.mean"]], "mean (torch.distributions.kumaraswamy.kumaraswamy property)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.mean"]], "mean (torch.distributions.laplace.laplace property)": [[49, "torch.distributions.laplace.Laplace.mean"]], "mean (torch.distributions.log_normal.lognormal property)": [[49, "torch.distributions.log_normal.LogNormal.mean"]], "mean (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean"]], "mean (torch.distributions.mixture_same_family.mixturesamefamily property)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.mean"]], "mean (torch.distributions.multinomial.multinomial property)": [[49, "torch.distributions.multinomial.Multinomial.mean"]], "mean (torch.distributions.multivariate_normal.multivariatenormal property)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.mean"]], "mean (torch.distributions.negative_binomial.negativebinomial property)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.mean"]], "mean (torch.distributions.normal.normal property)": [[49, "torch.distributions.normal.Normal.mean"]], "mean (torch.distributions.one_hot_categorical.onehotcategorical property)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.mean"]], "mean (torch.distributions.pareto.pareto property)": [[49, "torch.distributions.pareto.Pareto.mean"]], "mean (torch.distributions.poisson.poisson property)": [[49, "torch.distributions.poisson.Poisson.mean"]], "mean (torch.distributions.studentt.studentt property)": [[49, "torch.distributions.studentT.StudentT.mean"]], "mean (torch.distributions.uniform.uniform property)": [[49, "torch.distributions.uniform.Uniform.mean"]], "mean (torch.distributions.von_mises.vonmises property)": [[49, "torch.distributions.von_mises.VonMises.mean"]], "mean (torch.distributions.weibull.weibull property)": [[49, "torch.distributions.weibull.Weibull.mean"]], "mean (torch.distributions.wishart.wishart property)": [[49, "torch.distributions.wishart.Wishart.mean"]], "mixture_distribution (torch.distributions.mixture_same_family.mixturesamefamily property)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.mixture_distribution"]], "mode (torch.distributions.bernoulli.bernoulli property)": [[49, "torch.distributions.bernoulli.Bernoulli.mode"]], "mode (torch.distributions.beta.beta property)": [[49, "torch.distributions.beta.Beta.mode"]], "mode (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.mode"]], "mode (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.mode"]], "mode (torch.distributions.cauchy.cauchy property)": [[49, "torch.distributions.cauchy.Cauchy.mode"]], "mode (torch.distributions.dirichlet.dirichlet property)": [[49, "torch.distributions.dirichlet.Dirichlet.mode"]], "mode (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.mode"]], "mode (torch.distributions.exponential.exponential property)": [[49, "torch.distributions.exponential.Exponential.mode"]], "mode (torch.distributions.fishersnedecor.fishersnedecor property)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.mode"]], "mode (torch.distributions.gamma.gamma property)": [[49, "torch.distributions.gamma.Gamma.mode"]], "mode (torch.distributions.geometric.geometric property)": [[49, "torch.distributions.geometric.Geometric.mode"]], "mode (torch.distributions.gumbel.gumbel property)": [[49, "torch.distributions.gumbel.Gumbel.mode"]], "mode (torch.distributions.half_cauchy.halfcauchy property)": [[49, "torch.distributions.half_cauchy.HalfCauchy.mode"]], "mode (torch.distributions.half_normal.halfnormal property)": [[49, "torch.distributions.half_normal.HalfNormal.mode"]], "mode (torch.distributions.independent.independent property)": [[49, "torch.distributions.independent.Independent.mode"]], "mode (torch.distributions.kumaraswamy.kumaraswamy property)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.mode"]], "mode (torch.distributions.laplace.laplace property)": [[49, "torch.distributions.laplace.Laplace.mode"]], "mode (torch.distributions.log_normal.lognormal property)": [[49, "torch.distributions.log_normal.LogNormal.mode"]], "mode (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mode"]], "mode (torch.distributions.multivariate_normal.multivariatenormal property)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.mode"]], "mode (torch.distributions.negative_binomial.negativebinomial property)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.mode"]], "mode (torch.distributions.normal.normal property)": [[49, "torch.distributions.normal.Normal.mode"]], "mode (torch.distributions.one_hot_categorical.onehotcategorical property)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.mode"]], "mode (torch.distributions.pareto.pareto property)": [[49, "torch.distributions.pareto.Pareto.mode"]], "mode (torch.distributions.poisson.poisson property)": [[49, "torch.distributions.poisson.Poisson.mode"]], "mode (torch.distributions.studentt.studentt property)": [[49, "torch.distributions.studentT.StudentT.mode"]], "mode (torch.distributions.uniform.uniform property)": [[49, "torch.distributions.uniform.Uniform.mode"]], "mode (torch.distributions.von_mises.vonmises property)": [[49, "torch.distributions.von_mises.VonMises.mode"]], "mode (torch.distributions.weibull.weibull property)": [[49, "torch.distributions.weibull.Weibull.mode"]], "mode (torch.distributions.wishart.wishart property)": [[49, "torch.distributions.wishart.Wishart.mode"]], "multinomial (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.multinomial"]], "param_shape (torch.distributions.bernoulli.bernoulli property)": [[49, "torch.distributions.bernoulli.Bernoulli.param_shape"]], "param_shape (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.param_shape"]], "param_shape (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.param_shape"]], "param_shape (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.param_shape"]], "param_shape (torch.distributions.multinomial.multinomial property)": [[49, "torch.distributions.multinomial.Multinomial.param_shape"]], "param_shape (torch.distributions.negative_binomial.negativebinomial property)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.param_shape"]], "param_shape (torch.distributions.one_hot_categorical.onehotcategorical property)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape"]], "param_shape (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape"]], "perplexity() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.perplexity"]], "precision_matrix (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.multivariate_normal.multivariatenormal property)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix"]], "precision_matrix (torch.distributions.wishart.wishart property)": [[49, "torch.distributions.wishart.Wishart.precision_matrix"]], "probs (torch.distributions.bernoulli.bernoulli property)": [[49, "torch.distributions.bernoulli.Bernoulli.probs"]], "probs (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.probs"]], "probs (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.probs"]], "probs (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.probs"]], "probs (torch.distributions.geometric.geometric property)": [[49, "torch.distributions.geometric.Geometric.probs"]], "probs (torch.distributions.multinomial.multinomial property)": [[49, "torch.distributions.multinomial.Multinomial.probs"]], "probs (torch.distributions.negative_binomial.negativebinomial property)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.probs"]], "probs (torch.distributions.one_hot_categorical.onehotcategorical property)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.probs"]], "probs (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli property)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs"]], "probs (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs"]], "register() (torch.distributions.constraint_registry.constraintregistry method)": [[49, "torch.distributions.constraint_registry.ConstraintRegistry.register"]], "register_kl() (in module torch.distributions.kl)": [[49, "torch.distributions.kl.register_kl"]], "rsample() (torch.distributions.beta.beta method)": [[49, "torch.distributions.beta.Beta.rsample"]], "rsample() (torch.distributions.cauchy.cauchy method)": [[49, "torch.distributions.cauchy.Cauchy.rsample"]], "rsample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.rsample"]], "rsample() (torch.distributions.dirichlet.dirichlet method)": [[49, "torch.distributions.dirichlet.Dirichlet.rsample"]], "rsample() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.rsample"]], "rsample() (torch.distributions.exponential.exponential method)": [[49, "torch.distributions.exponential.Exponential.rsample"]], "rsample() (torch.distributions.fishersnedecor.fishersnedecor method)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.rsample"]], "rsample() (torch.distributions.gamma.gamma method)": [[49, "torch.distributions.gamma.Gamma.rsample"]], "rsample() (torch.distributions.independent.independent method)": [[49, "torch.distributions.independent.Independent.rsample"]], "rsample() (torch.distributions.laplace.laplace method)": [[49, "torch.distributions.laplace.Laplace.rsample"]], "rsample() (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal method)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample"]], "rsample() (torch.distributions.multivariate_normal.multivariatenormal method)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.rsample"]], "rsample() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.rsample"]], "rsample() (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli method)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample"]], "rsample() (torch.distributions.studentt.studentt method)": [[49, "torch.distributions.studentT.StudentT.rsample"]], "rsample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.rsample"]], "rsample() (torch.distributions.uniform.uniform method)": [[49, "torch.distributions.uniform.Uniform.rsample"]], "rsample() (torch.distributions.wishart.wishart method)": [[49, "torch.distributions.wishart.Wishart.rsample"]], "sample() (torch.distributions.bernoulli.bernoulli method)": [[49, "torch.distributions.bernoulli.Bernoulli.sample"]], "sample() (torch.distributions.binomial.binomial method)": [[49, "torch.distributions.binomial.Binomial.sample"]], "sample() (torch.distributions.categorical.categorical method)": [[49, "torch.distributions.categorical.Categorical.sample"]], "sample() (torch.distributions.continuous_bernoulli.continuousbernoulli method)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.sample"]], "sample() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.sample"]], "sample() (torch.distributions.geometric.geometric method)": [[49, "torch.distributions.geometric.Geometric.sample"]], "sample() (torch.distributions.independent.independent method)": [[49, "torch.distributions.independent.Independent.sample"]], "sample() (torch.distributions.lkj_cholesky.lkjcholesky method)": [[49, "torch.distributions.lkj_cholesky.LKJCholesky.sample"]], "sample() (torch.distributions.mixture_same_family.mixturesamefamily method)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.sample"]], "sample() (torch.distributions.multinomial.multinomial method)": [[49, "torch.distributions.multinomial.Multinomial.sample"]], "sample() (torch.distributions.negative_binomial.negativebinomial method)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.sample"]], "sample() (torch.distributions.normal.normal method)": [[49, "torch.distributions.normal.Normal.sample"]], "sample() (torch.distributions.one_hot_categorical.onehotcategorical method)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.sample"]], "sample() (torch.distributions.poisson.poisson method)": [[49, "torch.distributions.poisson.Poisson.sample"]], "sample() (torch.distributions.transformed_distribution.transformeddistribution method)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.sample"]], "sample() (torch.distributions.von_mises.vonmises method)": [[49, "torch.distributions.von_mises.VonMises.sample"]], "sample_n() (torch.distributions.distribution.distribution method)": [[49, "torch.distributions.distribution.Distribution.sample_n"]], "scale (torch.distributions.half_cauchy.halfcauchy property)": [[49, "torch.distributions.half_cauchy.HalfCauchy.scale"]], "scale (torch.distributions.half_normal.halfnormal property)": [[49, "torch.distributions.half_normal.HalfNormal.scale"]], "scale (torch.distributions.log_normal.lognormal property)": [[49, "torch.distributions.log_normal.LogNormal.scale"]], "scale_tril (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.multivariate_normal.multivariatenormal property)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril"]], "scale_tril (torch.distributions.wishart.wishart property)": [[49, "torch.distributions.wishart.Wishart.scale_tril"]], "set_default_validate_args() (torch.distributions.distribution.distribution static method)": [[49, "torch.distributions.distribution.Distribution.set_default_validate_args"]], "sign (torch.distributions.transforms.transform property)": [[49, "torch.distributions.transforms.Transform.sign"]], "stack (in module torch.distributions.constraints)": [[49, "torch.distributions.constraints.stack"]], "stddev (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.stddev"]], "stddev (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.stddev"]], "stddev (torch.distributions.exponential.exponential property)": [[49, "torch.distributions.exponential.Exponential.stddev"]], "stddev (torch.distributions.gumbel.gumbel property)": [[49, "torch.distributions.gumbel.Gumbel.stddev"]], "stddev (torch.distributions.laplace.laplace property)": [[49, "torch.distributions.laplace.Laplace.stddev"]], "stddev (torch.distributions.normal.normal property)": [[49, "torch.distributions.normal.Normal.stddev"]], "stddev (torch.distributions.uniform.uniform property)": [[49, "torch.distributions.uniform.Uniform.stddev"]], "support (torch.distributions.bernoulli.bernoulli attribute)": [[49, "torch.distributions.bernoulli.Bernoulli.support"]], "support (torch.distributions.beta.beta attribute)": [[49, "torch.distributions.beta.Beta.support"]], "support (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.support"]], "support (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.support"]], "support (torch.distributions.cauchy.cauchy attribute)": [[49, "torch.distributions.cauchy.Cauchy.support"]], "support (torch.distributions.continuous_bernoulli.continuousbernoulli attribute)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.support"]], "support (torch.distributions.dirichlet.dirichlet attribute)": [[49, "torch.distributions.dirichlet.Dirichlet.support"]], "support (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.support"]], "support (torch.distributions.exponential.exponential attribute)": [[49, "torch.distributions.exponential.Exponential.support"]], "support (torch.distributions.fishersnedecor.fishersnedecor attribute)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.support"]], "support (torch.distributions.gamma.gamma attribute)": [[49, "torch.distributions.gamma.Gamma.support"]], "support (torch.distributions.geometric.geometric attribute)": [[49, "torch.distributions.geometric.Geometric.support"]], "support (torch.distributions.gumbel.gumbel attribute)": [[49, "torch.distributions.gumbel.Gumbel.support"]], "support (torch.distributions.half_cauchy.halfcauchy attribute)": [[49, "torch.distributions.half_cauchy.HalfCauchy.support"]], "support (torch.distributions.half_normal.halfnormal attribute)": [[49, "torch.distributions.half_normal.HalfNormal.support"]], "support (torch.distributions.independent.independent property)": [[49, "torch.distributions.independent.Independent.support"]], "support (torch.distributions.kumaraswamy.kumaraswamy attribute)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.support"]], "support (torch.distributions.laplace.laplace attribute)": [[49, "torch.distributions.laplace.Laplace.support"]], "support (torch.distributions.lkj_cholesky.lkjcholesky attribute)": [[49, "torch.distributions.lkj_cholesky.LKJCholesky.support"]], "support (torch.distributions.log_normal.lognormal attribute)": [[49, "torch.distributions.log_normal.LogNormal.support"]], "support (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal attribute)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.support"]], "support (torch.distributions.mixture_same_family.mixturesamefamily property)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.support"]], "support (torch.distributions.multinomial.multinomial property)": [[49, "torch.distributions.multinomial.Multinomial.support"]], "support (torch.distributions.multivariate_normal.multivariatenormal attribute)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.support"]], "support (torch.distributions.negative_binomial.negativebinomial attribute)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.support"]], "support (torch.distributions.normal.normal attribute)": [[49, "torch.distributions.normal.Normal.support"]], "support (torch.distributions.one_hot_categorical.onehotcategorical attribute)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.support"]], "support (torch.distributions.pareto.pareto property)": [[49, "torch.distributions.pareto.Pareto.support"]], "support (torch.distributions.poisson.poisson attribute)": [[49, "torch.distributions.poisson.Poisson.support"]], "support (torch.distributions.relaxed_bernoulli.logitrelaxedbernoulli attribute)": [[49, "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.support"]], "support (torch.distributions.relaxed_bernoulli.relaxedbernoulli attribute)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.support"]], "support (torch.distributions.relaxed_categorical.relaxedonehotcategorical attribute)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.support"]], "support (torch.distributions.studentt.studentt attribute)": [[49, "torch.distributions.studentT.StudentT.support"]], "support (torch.distributions.transformed_distribution.transformeddistribution property)": [[49, "torch.distributions.transformed_distribution.TransformedDistribution.support"]], "support (torch.distributions.uniform.uniform property)": [[49, "torch.distributions.uniform.Uniform.support"]], "support (torch.distributions.von_mises.vonmises attribute)": [[49, "torch.distributions.von_mises.VonMises.support"]], "support (torch.distributions.weibull.weibull attribute)": [[49, "torch.distributions.weibull.Weibull.support"]], "support (torch.distributions.wishart.wishart attribute)": [[49, "torch.distributions.wishart.Wishart.support"]], "temperature (torch.distributions.relaxed_bernoulli.relaxedbernoulli property)": [[49, "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature"]], "temperature (torch.distributions.relaxed_categorical.relaxedonehotcategorical property)": [[49, "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature"]], "torch.distributions": [[49, "module-torch.distributions"]], "torch.distributions.constraint_registry": [[49, "module-torch.distributions.constraint_registry"]], "torch.distributions.constraints": [[49, "module-torch.distributions.constraints"]], "torch.distributions.kl": [[49, "module-torch.distributions.kl"]], "torch.distributions.transforms": [[49, "module-torch.distributions.transforms"]], "total_count (torch.distributions.multinomial.multinomial attribute)": [[49, "torch.distributions.multinomial.Multinomial.total_count"]], "variance (torch.distributions.bernoulli.bernoulli property)": [[49, "torch.distributions.bernoulli.Bernoulli.variance"]], "variance (torch.distributions.beta.beta property)": [[49, "torch.distributions.beta.Beta.variance"]], "variance (torch.distributions.binomial.binomial property)": [[49, "torch.distributions.binomial.Binomial.variance"]], "variance (torch.distributions.categorical.categorical property)": [[49, "torch.distributions.categorical.Categorical.variance"]], "variance (torch.distributions.cauchy.cauchy property)": [[49, "torch.distributions.cauchy.Cauchy.variance"]], "variance (torch.distributions.continuous_bernoulli.continuousbernoulli property)": [[49, "torch.distributions.continuous_bernoulli.ContinuousBernoulli.variance"]], "variance (torch.distributions.dirichlet.dirichlet property)": [[49, "torch.distributions.dirichlet.Dirichlet.variance"]], "variance (torch.distributions.distribution.distribution property)": [[49, "torch.distributions.distribution.Distribution.variance"]], "variance (torch.distributions.exponential.exponential property)": [[49, "torch.distributions.exponential.Exponential.variance"]], "variance (torch.distributions.fishersnedecor.fishersnedecor property)": [[49, "torch.distributions.fishersnedecor.FisherSnedecor.variance"]], "variance (torch.distributions.gamma.gamma property)": [[49, "torch.distributions.gamma.Gamma.variance"]], "variance (torch.distributions.geometric.geometric property)": [[49, "torch.distributions.geometric.Geometric.variance"]], "variance (torch.distributions.gumbel.gumbel property)": [[49, "torch.distributions.gumbel.Gumbel.variance"]], "variance (torch.distributions.half_cauchy.halfcauchy property)": [[49, "torch.distributions.half_cauchy.HalfCauchy.variance"]], "variance (torch.distributions.half_normal.halfnormal property)": [[49, "torch.distributions.half_normal.HalfNormal.variance"]], "variance (torch.distributions.independent.independent property)": [[49, "torch.distributions.independent.Independent.variance"]], "variance (torch.distributions.kumaraswamy.kumaraswamy property)": [[49, "torch.distributions.kumaraswamy.Kumaraswamy.variance"]], "variance (torch.distributions.laplace.laplace property)": [[49, "torch.distributions.laplace.Laplace.variance"]], "variance (torch.distributions.log_normal.lognormal property)": [[49, "torch.distributions.log_normal.LogNormal.variance"]], "variance (torch.distributions.lowrank_multivariate_normal.lowrankmultivariatenormal property)": [[49, "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance"]], "variance (torch.distributions.mixture_same_family.mixturesamefamily property)": [[49, "torch.distributions.mixture_same_family.MixtureSameFamily.variance"]], "variance (torch.distributions.multinomial.multinomial property)": [[49, "torch.distributions.multinomial.Multinomial.variance"]], "variance (torch.distributions.multivariate_normal.multivariatenormal property)": [[49, "torch.distributions.multivariate_normal.MultivariateNormal.variance"]], "variance (torch.distributions.negative_binomial.negativebinomial property)": [[49, "torch.distributions.negative_binomial.NegativeBinomial.variance"]], "variance (torch.distributions.normal.normal property)": [[49, "torch.distributions.normal.Normal.variance"]], "variance (torch.distributions.one_hot_categorical.onehotcategorical property)": [[49, "torch.distributions.one_hot_categorical.OneHotCategorical.variance"]], "variance (torch.distributions.pareto.pareto property)": [[49, "torch.distributions.pareto.Pareto.variance"]], "variance (torch.distributions.poisson.poisson property)": [[49, "torch.distributions.poisson.Poisson.variance"]], "variance (torch.distributions.studentt.studentt property)": [[49, "torch.distributions.studentT.StudentT.variance"]], "variance (torch.distributions.uniform.uniform property)": [[49, "torch.distributions.uniform.Uniform.variance"]], "variance (torch.distributions.von_mises.vonmises property)": [[49, "torch.distributions.von_mises.VonMises.variance"]], "variance (torch.distributions.weibull.weibull property)": [[49, "torch.distributions.weibull.Weibull.variance"]], "variance (torch.distributions.wishart.wishart property)": [[49, "torch.distributions.wishart.Wishart.variance"]], "from_dlpack() (in module torch.utils.dlpack)": [[50, "torch.utils.dlpack.from_dlpack"]], "to_dlpack() (in module torch.utils.dlpack)": [[50, "torch.utils.dlpack.to_dlpack"]], "elasticagent (class in torch.distributed.elastic.agent.server)": [[51, "torch.distributed.elastic.agent.server.ElasticAgent"]], "localelasticagent (class in torch.distributed.elastic.agent.server.local_elastic_agent)": [[51, "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent"]], "runresult (class in torch.distributed.elastic.agent.server.api)": [[51, "torch.distributed.elastic.agent.server.api.RunResult"]], "simpleelasticagent (class in torch.distributed.elastic.agent.server)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent"]], "worker (class in torch.distributed.elastic.agent.server)": [[51, "torch.distributed.elastic.agent.server.Worker"]], "workergroup (class in torch.distributed.elastic.agent.server)": [[51, "torch.distributed.elastic.agent.server.WorkerGroup"]], "workerspec (class in torch.distributed.elastic.agent.server)": [[51, "torch.distributed.elastic.agent.server.WorkerSpec"]], "workerstate (class in torch.distributed.elastic.agent.server)": [[51, "torch.distributed.elastic.agent.server.WorkerState"]], "_assign_worker_ranks() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._assign_worker_ranks"]], "_exit_barrier() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._exit_barrier"]], "_initialize_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._initialize_workers"]], "_monitor_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._monitor_workers"]], "_rendezvous() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._rendezvous"]], "_restart_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._restart_workers"]], "_shutdown() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._shutdown"]], "_start_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._start_workers"]], "_stop_workers() (torch.distributed.elastic.agent.server.simpleelasticagent method)": [[51, "torch.distributed.elastic.agent.server.SimpleElasticAgent._stop_workers"]], "get_entrypoint_name() (torch.distributed.elastic.agent.server.workerspec method)": [[51, "torch.distributed.elastic.agent.server.WorkerSpec.get_entrypoint_name"]], "get_worker_group() (torch.distributed.elastic.agent.server.elasticagent method)": [[51, "torch.distributed.elastic.agent.server.ElasticAgent.get_worker_group"]], "is_running() (torch.distributed.elastic.agent.server.workerstate static method)": [[51, "torch.distributed.elastic.agent.server.WorkerState.is_running"]], "run() (torch.distributed.elastic.agent.server.elasticagent method)": [[51, "torch.distributed.elastic.agent.server.ElasticAgent.run"]], "torch.distributed.elastic.agent": [[51, "module-torch.distributed.elastic.agent"]], "torch.distributed.elastic.agent.server": [[51, "module-torch.distributed.elastic.agent.server"]], "childfailederror (class in torch.distributed.elastic.multiprocessing.errors)": [[53, "torch.distributed.elastic.multiprocessing.errors.ChildFailedError"]], "errorhandler (class in torch.distributed.elastic.multiprocessing.errors)": [[53, "torch.distributed.elastic.multiprocessing.errors.ErrorHandler"]], "processfailure (class in torch.distributed.elastic.multiprocessing.errors)": [[53, "torch.distributed.elastic.multiprocessing.errors.ProcessFailure"]], "record() (in module torch.distributed.elastic.multiprocessing.errors)": [[53, "torch.distributed.elastic.multiprocessing.errors.record"]], "torch.distributed.elastic.multiprocessing.errors": [[53, "module-torch.distributed.elastic.multiprocessing.errors"]], "event (class in torch.distributed.elastic.events.api)": [[54, "torch.distributed.elastic.events.api.Event"]], "eventmetadatavalue (in module torch.distributed.elastic.events.api)": [[54, "torch.distributed.elastic.events.api.EventMetadataValue"]], "eventsource (class in torch.distributed.elastic.events.api)": [[54, "torch.distributed.elastic.events.api.EventSource"]], "get_logging_handler() (in module torch.distributed.elastic.events)": [[54, "torch.distributed.elastic.events.get_logging_handler"]], "record() (in module torch.distributed.elastic.events)": [[54, "torch.distributed.elastic.events.record"]], "torch.distributed.elastic.events": [[54, "module-torch.distributed.elastic.events"]], "consolemetrichandler (class in torch.distributed.elastic.metrics.api)": [[57, "torch.distributed.elastic.metrics.api.ConsoleMetricHandler"]], "metrichandler (class in torch.distributed.elastic.metrics.api)": [[57, "torch.distributed.elastic.metrics.api.MetricHandler"]], "nullmetrichandler (class in torch.distributed.elastic.metrics.api)": [[57, "torch.distributed.elastic.metrics.api.NullMetricHandler"]], "configure() (in module torch.distributed.elastic.metrics)": [[57, "torch.distributed.elastic.metrics.configure"]], "prof() (in module torch.distributed.elastic.metrics)": [[57, "torch.distributed.elastic.metrics.prof"]], "put_metric() (in module torch.distributed.elastic.metrics)": [[57, "torch.distributed.elastic.metrics.put_metric"]], "torch.distributed.elastic.metrics": [[57, "module-torch.distributed.elastic.metrics"]], "multiprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[58, "torch.distributed.elastic.multiprocessing.api.MultiprocessContext"]], "pcontext (class in torch.distributed.elastic.multiprocessing.api)": [[58, "torch.distributed.elastic.multiprocessing.api.PContext"]], "runprocsresult (class in torch.distributed.elastic.multiprocessing.api)": [[58, "torch.distributed.elastic.multiprocessing.api.RunProcsResult"]], "subprocesscontext (class in torch.distributed.elastic.multiprocessing.api)": [[58, "torch.distributed.elastic.multiprocessing.api.SubprocessContext"]], "start_processes() (in module torch.distributed.elastic.multiprocessing)": [[58, "torch.distributed.elastic.multiprocessing.start_processes"]], "torch.distributed.elastic.multiprocessing": [[58, "module-torch.distributed.elastic.multiprocessing"]], "c10drendezvousbackend (class in torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[60, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend"]], "dynamicrendezvoushandler (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler"]], "etcdrendezvousbackend (class in torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[60, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend"]], "etcdrendezvoushandler (class in torch.distributed.elastic.rendezvous.etcd_rendezvous)": [[60, "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler"]], "etcdserver (class in torch.distributed.elastic.rendezvous.etcd_server)": [[60, "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer"]], "etcdstore (class in torch.distributed.elastic.rendezvous.etcd_store)": [[60, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore"]], "rendezvousbackend (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend"]], "rendezvousclosederror (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousClosedError"]], "rendezvousconnectionerror (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousConnectionError"]], "rendezvouserror (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousError"]], "rendezvoushandler (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler"]], "rendezvoushandlerregistry (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry"]], "rendezvousparameters (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousParameters"]], "rendezvousstateerror (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousStateError"]], "rendezvoustimeout (class in torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout"]], "rendezvoustimeouterror (class in torch.distributed.elastic.rendezvous)": [[60, "torch.distributed.elastic.rendezvous.RendezvousTimeoutError"]], "add() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[60, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.add"]], "check() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[60, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.check"]], "close (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.close"]], "create_backend() (in module torch.distributed.elastic.rendezvous.c10d_rendezvous_backend)": [[60, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend"]], "create_backend() (in module torch.distributed.elastic.rendezvous.etcd_rendezvous_backend)": [[60, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend"]], "create_handler() (in module torch.distributed.elastic.rendezvous.dynamic_rendezvous)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler"]], "create_handler() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.create_handler"]], "from_backend() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.dynamicrendezvoushandler class method)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler.from_backend"]], "get() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousParameters.get"]], "get() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[60, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.get"]], "get_as_bool() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_bool"]], "get_as_int() (torch.distributed.elastic.rendezvous.rendezvousparameters method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousParameters.get_as_int"]], "get_backend() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_backend"]], "get_run_id() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.get_run_id"]], "get_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[60, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.get_state"]], "get_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[60, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.get_state"]], "heartbeat (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.heartbeat"]], "is_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.is_closed"]], "join (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.join"]], "last_call (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvoustimeout property)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout.last_call"]], "name (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend property)": [[60, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend property)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.name"]], "name (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend property)": [[60, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.name"]], "next_rendezvous() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.next_rendezvous"]], "num_nodes_waiting() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.num_nodes_waiting"]], "register() (torch.distributed.elastic.rendezvous.rendezvoushandlerregistry method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry.register"]], "set() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[60, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.set"]], "set_closed() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.set_closed"]], "set_state() (torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.c10drendezvousbackend method)": [[60, "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.dynamic_rendezvous.rendezvousbackend method)": [[60, "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend.set_state"]], "set_state() (torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.etcdrendezvousbackend method)": [[60, "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend.set_state"]], "shutdown() (torch.distributed.elastic.rendezvous.rendezvoushandler method)": [[60, "torch.distributed.elastic.rendezvous.RendezvousHandler.shutdown"]], "torch.distributed.elastic.rendezvous": [[60, "module-torch.distributed.elastic.rendezvous"]], "torch.distributed.elastic.rendezvous.registry": [[60, "module-torch.distributed.elastic.rendezvous.registry"]], "wait() (torch.distributed.elastic.rendezvous.etcd_store.etcdstore method)": [[60, "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore.wait"]], "torch.distributed.run": [[61, "module-torch.distributed.run"]], "filetimerclient (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.FileTimerClient"]], "filetimerserver (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.FileTimerServer"]], "localtimerclient (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.LocalTimerClient"]], "localtimerserver (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.LocalTimerServer"]], "timerclient (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.TimerClient"]], "timerrequest (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.TimerRequest"]], "timerserver (class in torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.TimerServer"]], "acquire() (torch.distributed.elastic.timer.timerclient method)": [[62, "torch.distributed.elastic.timer.TimerClient.acquire"]], "clear_timers() (torch.distributed.elastic.timer.timerserver method)": [[62, "torch.distributed.elastic.timer.TimerServer.clear_timers"]], "configure() (in module torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.configure"]], "expires() (in module torch.distributed.elastic.timer)": [[62, "torch.distributed.elastic.timer.expires"]], "get_expired_timers() (torch.distributed.elastic.timer.timerserver method)": [[62, "torch.distributed.elastic.timer.TimerServer.get_expired_timers"]], "register_timers() (torch.distributed.elastic.timer.timerserver method)": [[62, "torch.distributed.elastic.timer.TimerServer.register_timers"]], "release() (torch.distributed.elastic.timer.timerclient method)": [[62, "torch.distributed.elastic.timer.TimerClient.release"]], "torch.distributed.elastic.timer": [[62, "module-torch.distributed.elastic.timer"]], "torch.fft": [[65, "module-torch.fft"]], "backwardprefetch (class in torch.distributed.fsdp)": [[66, "torch.distributed.fsdp.BackwardPrefetch"]], "cpuoffload (class in torch.distributed.fsdp)": [[66, "torch.distributed.fsdp.CPUOffload"]], "fulloptimstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.FullOptimStateDictConfig"]], "fullstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.FullStateDictConfig"]], "fullyshardeddataparallel (class in torch.distributed.fsdp)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel"]], "localoptimstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.LocalOptimStateDictConfig"]], "localstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.LocalStateDictConfig"]], "mixedprecision (class in torch.distributed.fsdp)": [[66, "torch.distributed.fsdp.MixedPrecision"]], "optimstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.OptimStateDictConfig"]], "shardedoptimstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.ShardedOptimStateDictConfig"]], "shardedstatedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.ShardedStateDictConfig"]], "shardingstrategy (class in torch.distributed.fsdp)": [[66, "torch.distributed.fsdp.ShardingStrategy"]], "statedictconfig (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.StateDictConfig"]], "statedictsettings (class in torch.distributed.fsdp.api)": [[66, "torch.distributed.fsdp.api.StateDictSettings"]], "apply() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.apply"]], "clip_grad_norm_() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.clip_grad_norm_"]], "flatten_sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.flatten_sharded_optim_state_dict"]], "forward() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.forward"]], "fsdp_modules() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.fsdp_modules"]], "full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.full_optim_state_dict"]], "get_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.get_state_dict_type"]], "module (torch.distributed.fsdp.fullyshardeddataparallel property)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.module"]], "named_buffers() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.named_buffers"]], "named_parameters() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.named_parameters"]], "no_sync() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.no_sync"]], "optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict"]], "optim_state_dict_to_load() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.optim_state_dict_to_load"]], "register_comm_hook() (torch.distributed.fsdp.fullyshardeddataparallel method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.register_comm_hook"]], "rekey_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.rekey_optim_state_dict"]], "scatter_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.scatter_full_optim_state_dict"]], "set_state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.set_state_dict_type"]], "shard_full_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.shard_full_optim_state_dict"]], "sharded_optim_state_dict() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.sharded_optim_state_dict"]], "state_dict_type() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.state_dict_type"]], "summon_full_params() (torch.distributed.fsdp.fullyshardeddataparallel static method)": [[66, "torch.distributed.fsdp.FullyShardedDataParallel.summon_full_params"]], "torch.distributed.fsdp": [[66, "module-torch.distributed.fsdp"]], "torch.func": [[68, "module-torch.func"]], "future (class in torch.futures)": [[73, "torch.futures.Future"]], "add_done_callback() (torch.futures.future method)": [[73, "torch.futures.Future.add_done_callback"]], "collect_all() (in module torch.futures)": [[73, "torch.futures.collect_all"]], "done() (torch.futures.future method)": [[73, "torch.futures.Future.done"]], "set_exception() (torch.futures.future method)": [[73, "torch.futures.Future.set_exception"]], "set_result() (torch.futures.future method)": [[73, "torch.futures.Future.set_result"]], "then() (torch.futures.future method)": [[73, "torch.futures.Future.then"]], "torch.futures": [[73, "module-torch.futures"]], "value() (torch.futures.future method)": [[73, "torch.futures.Future.value"]], "wait() (torch.futures.future method)": [[73, "torch.futures.Future.wait"]], "wait_all() (in module torch.futures)": [[73, "torch.futures.wait_all"]], "graph (class in torch.fx)": [[74, "torch.fx.Graph"]], "graphmodule (class in torch.fx)": [[74, "torch.fx.GraphModule"]], "interpreter (class in torch.fx)": [[74, "torch.fx.Interpreter"]], "node (class in torch.fx)": [[74, "torch.fx.Node"]], "proxy (class in torch.fx)": [[74, "torch.fx.Proxy"]], "tracer (class in torch.fx)": [[74, "torch.fx.Tracer"]], "transformer (class in torch.fx)": [[74, "torch.fx.Transformer"]], "__init__() (torch.fx.graph method)": [[74, "torch.fx.Graph.__init__"]], "__init__() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.__init__"]], "add_submodule() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.add_submodule"]], "all_input_nodes (torch.fx.node property)": [[74, "torch.fx.Node.all_input_nodes"]], "append() (torch.fx.node method)": [[74, "torch.fx.Node.append"]], "args (torch.fx.node property)": [[74, "torch.fx.Node.args"]], "boxed_run() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.boxed_run"]], "call_function() (torch.fx.graph method)": [[74, "torch.fx.Graph.call_function"]], "call_function() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.call_function"]], "call_function() (torch.fx.transformer method)": [[74, "torch.fx.Transformer.call_function"]], "call_method() (torch.fx.graph method)": [[74, "torch.fx.Graph.call_method"]], "call_method() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.call_method"]], "call_module() (torch.fx.graph method)": [[74, "torch.fx.Graph.call_module"]], "call_module() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.call_module"]], "call_module() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.call_module"]], "call_module() (torch.fx.transformer method)": [[74, "torch.fx.Transformer.call_module"]], "code (torch.fx.graphmodule property)": [[74, "torch.fx.GraphModule.code"]], "create_arg() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.create_arg"]], "create_args_for_root() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.create_args_for_root"]], "create_node() (torch.fx.graph method)": [[74, "torch.fx.Graph.create_node"]], "create_node() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.create_node"]], "create_proxy() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.create_proxy"]], "delete_all_unused_submodules() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.delete_all_unused_submodules"]], "delete_submodule() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.delete_submodule"]], "eliminate_dead_code() (torch.fx.graph method)": [[74, "torch.fx.Graph.eliminate_dead_code"]], "erase_node() (torch.fx.graph method)": [[74, "torch.fx.Graph.erase_node"]], "fetch_args_kwargs_from_env() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.fetch_args_kwargs_from_env"]], "fetch_attr() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.fetch_attr"]], "format_node() (torch.fx.node method)": [[74, "torch.fx.Node.format_node"]], "get_attr() (torch.fx.graph method)": [[74, "torch.fx.Graph.get_attr"]], "get_attr() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.get_attr"]], "get_attr() (torch.fx.transformer method)": [[74, "torch.fx.Transformer.get_attr"]], "getattr() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.getattr"]], "graph (torch.fx.graphmodule property)": [[74, "torch.fx.GraphModule.graph"]], "graph_copy() (torch.fx.graph method)": [[74, "torch.fx.Graph.graph_copy"]], "inserting_after() (torch.fx.graph method)": [[74, "torch.fx.Graph.inserting_after"]], "inserting_before() (torch.fx.graph method)": [[74, "torch.fx.Graph.inserting_before"]], "is_impure() (torch.fx.node method)": [[74, "torch.fx.Node.is_impure"]], "is_leaf_module() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.is_leaf_module"]], "iter() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.iter"]], "keys() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.keys"]], "kwargs (torch.fx.node property)": [[74, "torch.fx.Node.kwargs"]], "lint() (torch.fx.graph method)": [[74, "torch.fx.Graph.lint"]], "map_nodes_to_values() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.map_nodes_to_values"]], "next (torch.fx.node property)": [[74, "torch.fx.Node.next"]], "node_copy() (torch.fx.graph method)": [[74, "torch.fx.Graph.node_copy"]], "nodes (torch.fx.graph property)": [[74, "torch.fx.Graph.nodes"]], "normalized_arguments() (torch.fx.node method)": [[74, "torch.fx.Node.normalized_arguments"]], "on_generate_code() (torch.fx.graph method)": [[74, "torch.fx.Graph.on_generate_code"]], "output() (torch.fx.graph method)": [[74, "torch.fx.Graph.output"]], "output() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.output"]], "path_of_module() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.path_of_module"]], "placeholder() (torch.fx.graph method)": [[74, "torch.fx.Graph.placeholder"]], "placeholder() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.placeholder"]], "placeholder() (torch.fx.transformer method)": [[74, "torch.fx.Transformer.placeholder"]], "prepend() (torch.fx.node method)": [[74, "torch.fx.Node.prepend"]], "prev (torch.fx.node property)": [[74, "torch.fx.Node.prev"]], "print_readable() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.print_readable"]], "print_tabular() (torch.fx.graph method)": [[74, "torch.fx.Graph.print_tabular"]], "process_inputs() (torch.fx.graph method)": [[74, "torch.fx.Graph.process_inputs"]], "process_outputs() (torch.fx.graph method)": [[74, "torch.fx.Graph.process_outputs"]], "proxy() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.proxy"]], "python_code() (torch.fx.graph method)": [[74, "torch.fx.Graph.python_code"]], "recompile() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.recompile"]], "replace_all_uses_with() (torch.fx.node method)": [[74, "torch.fx.Node.replace_all_uses_with"]], "replace_input_with() (torch.fx.node method)": [[74, "torch.fx.Node.replace_input_with"]], "replace_pattern() (in module torch.fx)": [[74, "torch.fx.replace_pattern"]], "run() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.run"]], "run_node() (torch.fx.interpreter method)": [[74, "torch.fx.Interpreter.run_node"]], "set_codegen() (torch.fx.graph method)": [[74, "torch.fx.Graph.set_codegen"]], "stack_trace (torch.fx.node property)": [[74, "torch.fx.Node.stack_trace"]], "symbolic_trace() (in module torch.fx)": [[74, "torch.fx.symbolic_trace"]], "to_bool() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.to_bool"]], "to_folder() (torch.fx.graphmodule method)": [[74, "torch.fx.GraphModule.to_folder"]], "torch.fx": [[74, "module-torch.fx"]], "torch.fx.experimental": [[74, "module-torch.fx.experimental"]], "torch.fx.experimental.migrate_gradual_types": [[74, "module-torch.fx.experimental.migrate_gradual_types"]], "torch.fx.experimental.unification": [[74, "module-torch.fx.experimental.unification"]], "torch.fx.experimental.unification.multipledispatch": [[74, "module-torch.fx.experimental.unification.multipledispatch"]], "torch.fx.passes": [[74, "module-torch.fx.passes"]], "torch.fx.passes.backends": [[74, "module-torch.fx.passes.backends"]], "torch.fx.passes.dialect": [[74, "module-torch.fx.passes.dialect"]], "torch.fx.passes.dialect.common": [[74, "module-torch.fx.passes.dialect.common"]], "torch.fx.passes.infra": [[74, "module-torch.fx.passes.infra"]], "torch.fx.passes.tests": [[74, "module-torch.fx.passes.tests"]], "torch.fx.passes.utils": [[74, "module-torch.fx.passes.utils"]], "trace() (torch.fx.tracer method)": [[74, "torch.fx.Tracer.trace"]], "transform() (torch.fx.transformer method)": [[74, "torch.fx.Transformer.transform"]], "update_arg() (torch.fx.node method)": [[74, "torch.fx.Node.update_arg"]], "update_kwarg() (torch.fx.node method)": [[74, "torch.fx.Node.update_kwarg"]], "wrap() (in module torch.fx)": [[74, "torch.fx.wrap"]], "generator (class in torch)": [[107, "torch.Generator"]], "device (torch.generator attribute)": [[107, "torch.Generator.device"]], "get_state() (torch.generator method)": [[107, "torch.Generator.get_state"]], "initial_seed() (torch.generator method)": [[107, "torch.Generator.initial_seed"]], "manual_seed() (torch.generator method)": [[107, "torch.Generator.manual_seed"]], "seed() (torch.generator method)": [[107, "torch.Generator.seed"]], "set_state() (torch.generator method)": [[107, "torch.Generator.set_state"]], "abs() (torch.tensor method)": [[108, "torch.Tensor.abs"]], "abs_() (torch.tensor method)": [[109, "torch.Tensor.abs_"]], "absolute() (torch.tensor method)": [[110, "torch.Tensor.absolute"]], "absolute_() (torch.tensor method)": [[111, "torch.Tensor.absolute_"]], "acos() (torch.tensor method)": [[112, "torch.Tensor.acos"]], "acos_() (torch.tensor method)": [[113, "torch.Tensor.acos_"]], "acosh() (torch.tensor method)": [[114, "torch.Tensor.acosh"]], "acosh_() (torch.tensor method)": [[115, "torch.Tensor.acosh_"]], "add() (torch.tensor method)": [[116, "torch.Tensor.add"]], "add_() (torch.tensor method)": [[117, "torch.Tensor.add_"]], "addbmm() (torch.tensor method)": [[118, "torch.Tensor.addbmm"]], "addbmm_() (torch.tensor method)": [[119, "torch.Tensor.addbmm_"]], "addcdiv() (torch.tensor method)": [[120, "torch.Tensor.addcdiv"]], "addcdiv_() (torch.tensor method)": [[121, "torch.Tensor.addcdiv_"]], "addcmul() (torch.tensor method)": [[122, "torch.Tensor.addcmul"]], "addcmul_() (torch.tensor method)": [[123, "torch.Tensor.addcmul_"]], "addmm() (torch.tensor method)": [[124, "torch.Tensor.addmm"]], "addmm_() (torch.tensor method)": [[125, "torch.Tensor.addmm_"]], "addmv() (torch.tensor method)": [[126, "torch.Tensor.addmv"]], "addmv_() (torch.tensor method)": [[127, "torch.Tensor.addmv_"]], "addr() (torch.tensor method)": [[128, "torch.Tensor.addr"]], "addr_() (torch.tensor method)": [[129, "torch.Tensor.addr_"]], "adjoint() (torch.tensor method)": [[130, "torch.Tensor.adjoint"]], "all() (torch.tensor method)": [[131, "torch.Tensor.all"]], "allclose() (torch.tensor method)": [[132, "torch.Tensor.allclose"]], "amax() (torch.tensor method)": [[133, "torch.Tensor.amax"]], "amin() (torch.tensor method)": [[134, "torch.Tensor.amin"]], "aminmax() (torch.tensor method)": [[135, "torch.Tensor.aminmax"]], "angle() (torch.tensor method)": [[136, "torch.Tensor.angle"]], "any() (torch.tensor method)": [[137, "torch.Tensor.any"]], "apply_() (torch.tensor method)": [[138, "torch.Tensor.apply_"]], "arccos() (torch.tensor method)": [[139, "torch.Tensor.arccos"]], "arccos_() (torch.tensor method)": [[140, "torch.Tensor.arccos_"]], "arccosh() (torch.tensor method)": [[141, "torch.Tensor.arccosh"]], "arccosh_() (torch.tensor method)": [[142, "torch.Tensor.arccosh_"]], "arcsin() (torch.tensor method)": [[143, "torch.Tensor.arcsin"]], "arcsin_() (torch.tensor method)": [[144, "torch.Tensor.arcsin_"]], "arcsinh() (torch.tensor method)": [[145, "torch.Tensor.arcsinh"]], "arcsinh_() (torch.tensor method)": [[146, "torch.Tensor.arcsinh_"]], "arctan() (torch.tensor method)": [[147, "torch.Tensor.arctan"]], "arctan2() (torch.tensor method)": [[148, "torch.Tensor.arctan2"]], "arctan2_() (torch.tensor method)": [[149, "torch.Tensor.arctan2_"]], "arctan_() (torch.tensor method)": [[150, "torch.Tensor.arctan_"]], "arctanh() (torch.tensor method)": [[151, "torch.Tensor.arctanh"]], "arctanh_() (torch.tensor method)": [[152, "torch.Tensor.arctanh_"]], "argmax() (torch.tensor method)": [[153, "torch.Tensor.argmax"]], "argmin() (torch.tensor method)": [[154, "torch.Tensor.argmin"]], "argsort() (torch.tensor method)": [[155, "torch.Tensor.argsort"]], "argwhere() (torch.tensor method)": [[156, "torch.Tensor.argwhere"]], "as_strided() (torch.tensor method)": [[157, "torch.Tensor.as_strided"]], "as_subclass() (torch.tensor method)": [[158, "torch.Tensor.as_subclass"]], "asin() (torch.tensor method)": [[159, "torch.Tensor.asin"]], "asin_() (torch.tensor method)": [[160, "torch.Tensor.asin_"]], "asinh() (torch.tensor method)": [[161, "torch.Tensor.asinh"]], "asinh_() (torch.tensor method)": [[162, "torch.Tensor.asinh_"]], "atan() (torch.tensor method)": [[163, "torch.Tensor.atan"]], "atan2() (torch.tensor method)": [[164, "torch.Tensor.atan2"]], "atan2_() (torch.tensor method)": [[165, "torch.Tensor.atan2_"]], "atan_() (torch.tensor method)": [[166, "torch.Tensor.atan_"]], "atanh() (torch.tensor method)": [[167, "torch.Tensor.atanh"]], "atanh_() (torch.tensor method)": [[168, "torch.Tensor.atanh_"]], "backward() (torch.tensor method)": [[169, "torch.Tensor.backward"]], "baddbmm() (torch.tensor method)": [[170, "torch.Tensor.baddbmm"]], "baddbmm_() (torch.tensor method)": [[171, "torch.Tensor.baddbmm_"]], "bernoulli() (torch.tensor method)": [[172, "torch.Tensor.bernoulli"]], "bernoulli_() (torch.tensor method)": [[173, "torch.Tensor.bernoulli_"]], "bfloat16() (torch.tensor method)": [[174, "torch.Tensor.bfloat16"]], "bincount() (torch.tensor method)": [[175, "torch.Tensor.bincount"]], "bitwise_and() (torch.tensor method)": [[176, "torch.Tensor.bitwise_and"]], "bitwise_and_() (torch.tensor method)": [[177, "torch.Tensor.bitwise_and_"]], "bitwise_left_shift() (torch.tensor method)": [[178, "torch.Tensor.bitwise_left_shift"]], "bitwise_left_shift_() (torch.tensor method)": [[179, "torch.Tensor.bitwise_left_shift_"]], "bitwise_not() (torch.tensor method)": [[180, "torch.Tensor.bitwise_not"]], "bitwise_not_() (torch.tensor method)": [[181, "torch.Tensor.bitwise_not_"]], "bitwise_or() (torch.tensor method)": [[182, "torch.Tensor.bitwise_or"]], "bitwise_or_() (torch.tensor method)": [[183, "torch.Tensor.bitwise_or_"]], "bitwise_right_shift() (torch.tensor method)": [[184, "torch.Tensor.bitwise_right_shift"]], "bitwise_right_shift_() (torch.tensor method)": [[185, "torch.Tensor.bitwise_right_shift_"]], "bitwise_xor() (torch.tensor method)": [[186, "torch.Tensor.bitwise_xor"]], "bitwise_xor_() (torch.tensor method)": [[187, "torch.Tensor.bitwise_xor_"]], "bmm() (torch.tensor method)": [[188, "torch.Tensor.bmm"]], "bool() (torch.tensor method)": [[189, "torch.Tensor.bool"]], "broadcast_to() (torch.tensor method)": [[190, "torch.Tensor.broadcast_to"]], "byte() (torch.tensor method)": [[191, "torch.Tensor.byte"]], "cauchy_() (torch.tensor method)": [[192, "torch.Tensor.cauchy_"]], "ccol_indices() (torch.tensor method)": [[193, "torch.Tensor.ccol_indices"]], "cdouble() (torch.tensor method)": [[194, "torch.Tensor.cdouble"]], "ceil() (torch.tensor method)": [[195, "torch.Tensor.ceil"]], "ceil_() (torch.tensor method)": [[196, "torch.Tensor.ceil_"]], "cfloat() (torch.tensor method)": [[197, "torch.Tensor.cfloat"]], "chalf() (torch.tensor method)": [[198, "torch.Tensor.chalf"]], "char() (torch.tensor method)": [[199, "torch.Tensor.char"]], "cholesky() (torch.tensor method)": [[200, "torch.Tensor.cholesky"]], "cholesky_inverse() (torch.tensor method)": [[201, "torch.Tensor.cholesky_inverse"]], "cholesky_solve() (torch.tensor method)": [[202, "torch.Tensor.cholesky_solve"]], "chunk() (torch.tensor method)": [[203, "torch.Tensor.chunk"]], "clamp() (torch.tensor method)": [[204, "torch.Tensor.clamp"]], "clamp_() (torch.tensor method)": [[205, "torch.Tensor.clamp_"]], "clip() (torch.tensor method)": [[206, "torch.Tensor.clip"]], "clip_() (torch.tensor method)": [[207, "torch.Tensor.clip_"]], "clone() (torch.tensor method)": [[208, "torch.Tensor.clone"]], "coalesce() (torch.tensor method)": [[209, "torch.Tensor.coalesce"]], "col_indices() (torch.tensor method)": [[210, "torch.Tensor.col_indices"]], "conj() (torch.tensor method)": [[211, "torch.Tensor.conj"]], "conj_physical() (torch.tensor method)": [[212, "torch.Tensor.conj_physical"]], "conj_physical_() (torch.tensor method)": [[213, "torch.Tensor.conj_physical_"]], "contiguous() (torch.tensor method)": [[214, "torch.Tensor.contiguous"]], "copy_() (torch.tensor method)": [[215, "torch.Tensor.copy_"]], "copysign() (torch.tensor method)": [[216, "torch.Tensor.copysign"]], "copysign_() (torch.tensor method)": [[217, "torch.Tensor.copysign_"]], "corrcoef() (torch.tensor method)": [[218, "torch.Tensor.corrcoef"]], "cos() (torch.tensor method)": [[219, "torch.Tensor.cos"]], "cos_() (torch.tensor method)": [[220, "torch.Tensor.cos_"]], "cosh() (torch.tensor method)": [[221, "torch.Tensor.cosh"]], "cosh_() (torch.tensor method)": [[222, "torch.Tensor.cosh_"]], "count_nonzero() (torch.tensor method)": [[223, "torch.Tensor.count_nonzero"]], "cov() (torch.tensor method)": [[224, "torch.Tensor.cov"]], "cpu() (torch.tensor method)": [[225, "torch.Tensor.cpu"]], "cross() (torch.tensor method)": [[226, "torch.Tensor.cross"]], "crow_indices() (torch.tensor method)": [[227, "torch.Tensor.crow_indices"]], "cuda() (torch.tensor method)": [[228, "torch.Tensor.cuda"]], "cummax() (torch.tensor method)": [[229, "torch.Tensor.cummax"]], "cummin() (torch.tensor method)": [[230, "torch.Tensor.cummin"]], "cumprod() (torch.tensor method)": [[231, "torch.Tensor.cumprod"]], "cumprod_() (torch.tensor method)": [[232, "torch.Tensor.cumprod_"]], "cumsum() (torch.tensor method)": [[233, "torch.Tensor.cumsum"]], "cumsum_() (torch.tensor method)": [[234, "torch.Tensor.cumsum_"]], "data_ptr() (torch.tensor method)": [[235, "torch.Tensor.data_ptr"]], "deg2rad() (torch.tensor method)": [[236, "torch.Tensor.deg2rad"]], "dense_dim() (torch.tensor method)": [[237, "torch.Tensor.dense_dim"]], "dequantize() (torch.tensor method)": [[238, "torch.Tensor.dequantize"]], "det() (torch.tensor method)": [[239, "torch.Tensor.det"]], "detach() (torch.tensor method)": [[240, "torch.Tensor.detach"]], "detach_() (torch.tensor method)": [[241, "torch.Tensor.detach_"]], "device (torch.tensor attribute)": [[242, "torch.Tensor.device"]], "diag() (torch.tensor method)": [[243, "torch.Tensor.diag"]], "diag_embed() (torch.tensor method)": [[244, "torch.Tensor.diag_embed"]], "diagflat() (torch.tensor method)": [[245, "torch.Tensor.diagflat"]], "diagonal() (torch.tensor method)": [[246, "torch.Tensor.diagonal"]], "diagonal_scatter() (torch.tensor method)": [[247, "torch.Tensor.diagonal_scatter"]], "diff() (torch.tensor method)": [[248, "torch.Tensor.diff"]], "digamma() (torch.tensor method)": [[249, "torch.Tensor.digamma"]], "digamma_() (torch.tensor method)": [[250, "torch.Tensor.digamma_"]], "dim() (torch.tensor method)": [[251, "torch.Tensor.dim"]], "dist() (torch.tensor method)": [[252, "torch.Tensor.dist"]], "div() (torch.tensor method)": [[253, "torch.Tensor.div"]], "div_() (torch.tensor method)": [[254, "torch.Tensor.div_"]], "divide() (torch.tensor method)": [[255, "torch.Tensor.divide"]], "divide_() (torch.tensor method)": [[256, "torch.Tensor.divide_"]], "dot() (torch.tensor method)": [[257, "torch.Tensor.dot"]], "double() (torch.tensor method)": [[258, "torch.Tensor.double"]], "dsplit() (torch.tensor method)": [[259, "torch.Tensor.dsplit"]], "element_size() (torch.tensor method)": [[260, "torch.Tensor.element_size"]], "eq() (torch.tensor method)": [[261, "torch.Tensor.eq"]], "eq_() (torch.tensor method)": [[262, "torch.Tensor.eq_"]], "equal() (torch.tensor method)": [[263, "torch.Tensor.equal"]], "erf() (torch.tensor method)": [[264, "torch.Tensor.erf"]], "erf_() (torch.tensor method)": [[265, "torch.Tensor.erf_"]], "erfc() (torch.tensor method)": [[266, "torch.Tensor.erfc"]], "erfc_() (torch.tensor method)": [[267, "torch.Tensor.erfc_"]], "erfinv() (torch.tensor method)": [[268, "torch.Tensor.erfinv"]], "erfinv_() (torch.tensor method)": [[269, "torch.Tensor.erfinv_"]], "exp() (torch.tensor method)": [[270, "torch.Tensor.exp"]], "exp_() (torch.tensor method)": [[271, "torch.Tensor.exp_"]], "expand() (torch.tensor method)": [[272, "torch.Tensor.expand"]], "expand_as() (torch.tensor method)": [[273, "torch.Tensor.expand_as"]], "expm1() (torch.tensor method)": [[274, "torch.Tensor.expm1"]], "expm1_() (torch.tensor method)": [[275, "torch.Tensor.expm1_"]], "exponential_() (torch.tensor method)": [[276, "torch.Tensor.exponential_"]], "fill_() (torch.tensor method)": [[277, "torch.Tensor.fill_"]], "fill_diagonal_() (torch.tensor method)": [[278, "torch.Tensor.fill_diagonal_"]], "fix() (torch.tensor method)": [[279, "torch.Tensor.fix"]], "fix_() (torch.tensor method)": [[280, "torch.Tensor.fix_"]], "flatten() (torch.tensor method)": [[281, "torch.Tensor.flatten"]], "flip() (torch.tensor method)": [[282, "torch.Tensor.flip"]], "fliplr() (torch.tensor method)": [[283, "torch.Tensor.fliplr"]], "flipud() (torch.tensor method)": [[284, "torch.Tensor.flipud"]], "float() (torch.tensor method)": [[285, "torch.Tensor.float"]], "float_power() (torch.tensor method)": [[286, "torch.Tensor.float_power"]], "float_power_() (torch.tensor method)": [[287, "torch.Tensor.float_power_"]], "floor() (torch.tensor method)": [[288, "torch.Tensor.floor"]], "floor_() (torch.tensor method)": [[289, "torch.Tensor.floor_"]], "floor_divide() (torch.tensor method)": [[290, "torch.Tensor.floor_divide"]], "floor_divide_() (torch.tensor method)": [[291, "torch.Tensor.floor_divide_"]], "fmax() (torch.tensor method)": [[292, "torch.Tensor.fmax"]], "fmin() (torch.tensor method)": [[293, "torch.Tensor.fmin"]], "fmod() (torch.tensor method)": [[294, "torch.Tensor.fmod"]], "fmod_() (torch.tensor method)": [[295, "torch.Tensor.fmod_"]], "frac() (torch.tensor method)": [[296, "torch.Tensor.frac"]], "frac_() (torch.tensor method)": [[297, "torch.Tensor.frac_"]], "frexp() (torch.tensor method)": [[298, "torch.Tensor.frexp"]], "gather() (torch.tensor method)": [[299, "torch.Tensor.gather"]], "gcd() (torch.tensor method)": [[300, "torch.Tensor.gcd"]], "gcd_() (torch.tensor method)": [[301, "torch.Tensor.gcd_"]], "ge() (torch.tensor method)": [[302, "torch.Tensor.ge"]], "ge_() (torch.tensor method)": [[303, "torch.Tensor.ge_"]], "geometric_() (torch.tensor method)": [[304, "torch.Tensor.geometric_"]], "geqrf() (torch.tensor method)": [[305, "torch.Tensor.geqrf"]], "ger() (torch.tensor method)": [[306, "torch.Tensor.ger"]], "get_device() (torch.tensor method)": [[307, "torch.Tensor.get_device"]], "grad (torch.tensor attribute)": [[308, "torch.Tensor.grad"]], "greater() (torch.tensor method)": [[309, "torch.Tensor.greater"]], "greater_() (torch.tensor method)": [[310, "torch.Tensor.greater_"]], "greater_equal() (torch.tensor method)": [[311, "torch.Tensor.greater_equal"]], "greater_equal_() (torch.tensor method)": [[312, "torch.Tensor.greater_equal_"]], "gt() (torch.tensor method)": [[313, "torch.Tensor.gt"]], "gt_() (torch.tensor method)": [[314, "torch.Tensor.gt_"]], "half() (torch.tensor method)": [[315, "torch.Tensor.half"]], "hardshrink() (torch.tensor method)": [[316, "torch.Tensor.hardshrink"]], "heaviside() (torch.tensor method)": [[317, "torch.Tensor.heaviside"]], "histc() (torch.tensor method)": [[318, "torch.Tensor.histc"]], "histogram() (torch.tensor method)": [[319, "torch.Tensor.histogram"]], "hsplit() (torch.tensor method)": [[320, "torch.Tensor.hsplit"]], "hypot() (torch.tensor method)": [[321, "torch.Tensor.hypot"]], "hypot_() (torch.tensor method)": [[322, "torch.Tensor.hypot_"]], "i0() (torch.tensor method)": [[323, "torch.Tensor.i0"]], "i0_() (torch.tensor method)": [[324, "torch.Tensor.i0_"]], "igamma() (torch.tensor method)": [[325, "torch.Tensor.igamma"]], "igamma_() (torch.tensor method)": [[326, "torch.Tensor.igamma_"]], "igammac() (torch.tensor method)": [[327, "torch.Tensor.igammac"]], "igammac_() (torch.tensor method)": [[328, "torch.Tensor.igammac_"]], "imag (torch.tensor attribute)": [[329, "torch.Tensor.imag"]], "index_add() (torch.tensor method)": [[330, "torch.Tensor.index_add"]], "index_add_() (torch.tensor method)": [[331, "torch.Tensor.index_add_"]], "index_copy() (torch.tensor method)": [[332, "torch.Tensor.index_copy"]], "index_copy_() (torch.tensor method)": [[333, "torch.Tensor.index_copy_"]], "index_fill() (torch.tensor method)": [[334, "torch.Tensor.index_fill"]], "index_fill_() (torch.tensor method)": [[335, "torch.Tensor.index_fill_"]], "index_put() (torch.tensor method)": [[336, "torch.Tensor.index_put"]], "index_put_() (torch.tensor method)": [[337, "torch.Tensor.index_put_"]], "index_reduce() (torch.tensor method)": [[338, "torch.Tensor.index_reduce"]], "index_reduce_() (torch.tensor method)": [[339, "torch.Tensor.index_reduce_"]], "index_select() (torch.tensor method)": [[340, "torch.Tensor.index_select"]], "indices() (torch.tensor method)": [[341, "torch.Tensor.indices"]], "inner() (torch.tensor method)": [[342, "torch.Tensor.inner"]], "int() (torch.tensor method)": [[343, "torch.Tensor.int"]], "int_repr() (torch.tensor method)": [[344, "torch.Tensor.int_repr"]], "inverse() (torch.tensor method)": [[345, "torch.Tensor.inverse"]], "is_coalesced() (torch.tensor method)": [[346, "torch.Tensor.is_coalesced"]], "is_complex() (torch.tensor method)": [[347, "torch.Tensor.is_complex"]], "is_conj() (torch.tensor method)": [[348, "torch.Tensor.is_conj"]], "is_contiguous() (torch.tensor method)": [[349, "torch.Tensor.is_contiguous"]], "is_cuda (torch.tensor attribute)": [[350, "torch.Tensor.is_cuda"]], "is_floating_point() (torch.tensor method)": [[351, "torch.Tensor.is_floating_point"]], "is_inference() (torch.tensor method)": [[352, "torch.Tensor.is_inference"]], "is_leaf (torch.tensor attribute)": [[353, "torch.Tensor.is_leaf"]], "is_meta (torch.tensor attribute)": [[354, "torch.Tensor.is_meta"]], "is_pinned() (torch.tensor method)": [[355, "torch.Tensor.is_pinned"]], "is_quantized (torch.tensor attribute)": [[356, "torch.Tensor.is_quantized"]], "is_set_to() (torch.tensor method)": [[357, "torch.Tensor.is_set_to"]], "is_shared() (torch.tensor method)": [[358, "torch.Tensor.is_shared"]], "is_signed() (torch.tensor method)": [[359, "torch.Tensor.is_signed"]], "is_sparse (torch.tensor attribute)": [[360, "torch.Tensor.is_sparse"]], "is_sparse_csr (torch.tensor attribute)": [[361, "torch.Tensor.is_sparse_csr"]], "isclose() (torch.tensor method)": [[362, "torch.Tensor.isclose"]], "isfinite() (torch.tensor method)": [[363, "torch.Tensor.isfinite"]], "isinf() (torch.tensor method)": [[364, "torch.Tensor.isinf"]], "isnan() (torch.tensor method)": [[365, "torch.Tensor.isnan"]], "isneginf() (torch.tensor method)": [[366, "torch.Tensor.isneginf"]], "isposinf() (torch.tensor method)": [[367, "torch.Tensor.isposinf"]], "isreal() (torch.tensor method)": [[368, "torch.Tensor.isreal"]], "istft() (torch.tensor method)": [[369, "torch.Tensor.istft"]], "item() (torch.tensor method)": [[370, "torch.Tensor.item"]], "itemsize (torch.tensor attribute)": [[371, "torch.Tensor.itemsize"]], "kthvalue() (torch.tensor method)": [[372, "torch.Tensor.kthvalue"]], "lcm() (torch.tensor method)": [[373, "torch.Tensor.lcm"]], "lcm_() (torch.tensor method)": [[374, "torch.Tensor.lcm_"]], "ldexp() (torch.tensor method)": [[375, "torch.Tensor.ldexp"]], "ldexp_() (torch.tensor method)": [[376, "torch.Tensor.ldexp_"]], "le() (torch.tensor method)": [[377, "torch.Tensor.le"]], "le_() (torch.tensor method)": [[378, "torch.Tensor.le_"]], "lerp() (torch.tensor method)": [[379, "torch.Tensor.lerp"]], "lerp_() (torch.tensor method)": [[380, "torch.Tensor.lerp_"]], "less() (torch.tensor method)": [[381, "torch.Tensor.less"]], "less_() (torch.tensor method)": [[382, "torch.Tensor.less_"]], "less_equal() (torch.tensor method)": [[383, "torch.Tensor.less_equal"]], "less_equal_() (torch.tensor method)": [[384, "torch.Tensor.less_equal_"]], "lgamma() (torch.tensor method)": [[385, "torch.Tensor.lgamma"]], "lgamma_() (torch.tensor method)": [[386, "torch.Tensor.lgamma_"]], "log() (torch.tensor method)": [[387, "torch.Tensor.log"]], "log10() (torch.tensor method)": [[388, "torch.Tensor.log10"]], "log10_() (torch.tensor method)": [[389, "torch.Tensor.log10_"]], "log1p() (torch.tensor method)": [[390, "torch.Tensor.log1p"]], "log1p_() (torch.tensor method)": [[391, "torch.Tensor.log1p_"]], "log2() (torch.tensor method)": [[392, "torch.Tensor.log2"]], "log2_() (torch.tensor method)": [[393, "torch.Tensor.log2_"]], "log_() (torch.tensor method)": [[394, "torch.Tensor.log_"]], "log_normal_() (torch.tensor method)": [[395, "torch.Tensor.log_normal_"]], "logaddexp() (torch.tensor method)": [[396, "torch.Tensor.logaddexp"]], "logaddexp2() (torch.tensor method)": [[397, "torch.Tensor.logaddexp2"]], "logcumsumexp() (torch.tensor method)": [[398, "torch.Tensor.logcumsumexp"]], "logdet() (torch.tensor method)": [[399, "torch.Tensor.logdet"]], "logical_and() (torch.tensor method)": [[400, "torch.Tensor.logical_and"]], "logical_and_() (torch.tensor method)": [[401, "torch.Tensor.logical_and_"]], "logical_not() (torch.tensor method)": [[402, "torch.Tensor.logical_not"]], "logical_not_() (torch.tensor method)": [[403, "torch.Tensor.logical_not_"]], "logical_or() (torch.tensor method)": [[404, "torch.Tensor.logical_or"]], "logical_or_() (torch.tensor method)": [[405, "torch.Tensor.logical_or_"]], "logical_xor() (torch.tensor method)": [[406, "torch.Tensor.logical_xor"]], "logical_xor_() (torch.tensor method)": [[407, "torch.Tensor.logical_xor_"]], "logit() (torch.tensor method)": [[408, "torch.Tensor.logit"]], "logit_() (torch.tensor method)": [[409, "torch.Tensor.logit_"]], "logsumexp() (torch.tensor method)": [[410, "torch.Tensor.logsumexp"]], "long() (torch.tensor method)": [[411, "torch.Tensor.long"]], "lt() (torch.tensor method)": [[412, "torch.Tensor.lt"]], "lt_() (torch.tensor method)": [[413, "torch.Tensor.lt_"]], "lu() (torch.tensor method)": [[414, "torch.Tensor.lu"]], "lu_solve() (torch.tensor method)": [[415, "torch.Tensor.lu_solve"]], "map_() (torch.tensor method)": [[416, "torch.Tensor.map_"]], "masked_fill() (torch.tensor method)": [[417, "torch.Tensor.masked_fill"]], "masked_fill_() (torch.tensor method)": [[418, "torch.Tensor.masked_fill_"]], "masked_scatter() (torch.tensor method)": [[419, "torch.Tensor.masked_scatter"]], "masked_scatter_() (torch.tensor method)": [[420, "torch.Tensor.masked_scatter_"]], "masked_select() (torch.tensor method)": [[421, "torch.Tensor.masked_select"]], "matmul() (torch.tensor method)": [[422, "torch.Tensor.matmul"]], "matrix_exp() (torch.tensor method)": [[423, "torch.Tensor.matrix_exp"]], "matrix_power() (torch.tensor method)": [[424, "torch.Tensor.matrix_power"]], "max() (torch.tensor method)": [[425, "torch.Tensor.max"]], "maximum() (torch.tensor method)": [[426, "torch.Tensor.maximum"]], "mean() (torch.tensor method)": [[427, "torch.Tensor.mean"]], "median() (torch.tensor method)": [[428, "torch.Tensor.median"]], "min() (torch.tensor method)": [[429, "torch.Tensor.min"]], "minimum() (torch.tensor method)": [[430, "torch.Tensor.minimum"]], "mm() (torch.tensor method)": [[431, "torch.Tensor.mm"]], "mode() (torch.tensor method)": [[432, "torch.Tensor.mode"]], "moveaxis() (torch.tensor method)": [[433, "torch.Tensor.moveaxis"]], "movedim() (torch.tensor method)": [[434, "torch.Tensor.movedim"]], "msort() (torch.tensor method)": [[435, "torch.Tensor.msort"]], "mul() (torch.tensor method)": [[436, "torch.Tensor.mul"]], "mul_() (torch.tensor method)": [[437, "torch.Tensor.mul_"]], "multinomial() (torch.tensor method)": [[438, "torch.Tensor.multinomial"]], "multiply() (torch.tensor method)": [[439, "torch.Tensor.multiply"]], "multiply_() (torch.tensor method)": [[440, "torch.Tensor.multiply_"]], "mv() (torch.tensor method)": [[441, "torch.Tensor.mv"]], "mvlgamma() (torch.tensor method)": [[442, "torch.Tensor.mvlgamma"]], "mvlgamma_() (torch.tensor method)": [[443, "torch.Tensor.mvlgamma_"]], "nan_to_num() (torch.tensor method)": [[444, "torch.Tensor.nan_to_num"]], "nan_to_num_() (torch.tensor method)": [[445, "torch.Tensor.nan_to_num_"]], "nanmean() (torch.tensor method)": [[446, "torch.Tensor.nanmean"]], "nanmedian() (torch.tensor method)": [[447, "torch.Tensor.nanmedian"]], "nanquantile() (torch.tensor method)": [[448, "torch.Tensor.nanquantile"]], "nansum() (torch.tensor method)": [[449, "torch.Tensor.nansum"]], "narrow() (torch.tensor method)": [[450, "torch.Tensor.narrow"]], "narrow_copy() (torch.tensor method)": [[451, "torch.Tensor.narrow_copy"]], "nbytes (torch.tensor attribute)": [[452, "torch.Tensor.nbytes"]], "ndim (torch.tensor attribute)": [[453, "torch.Tensor.ndim"]], "ndimension() (torch.tensor method)": [[454, "torch.Tensor.ndimension"]], "ne() (torch.tensor method)": [[455, "torch.Tensor.ne"]], "ne_() (torch.tensor method)": [[456, "torch.Tensor.ne_"]], "neg() (torch.tensor method)": [[457, "torch.Tensor.neg"]], "neg_() (torch.tensor method)": [[458, "torch.Tensor.neg_"]], "negative() (torch.tensor method)": [[459, "torch.Tensor.negative"]], "negative_() (torch.tensor method)": [[460, "torch.Tensor.negative_"]], "nelement() (torch.tensor method)": [[461, "torch.Tensor.nelement"]], "new_empty() (torch.tensor method)": [[462, "torch.Tensor.new_empty"]], "new_full() (torch.tensor method)": [[463, "torch.Tensor.new_full"]], "new_ones() (torch.tensor method)": [[464, "torch.Tensor.new_ones"]], "new_tensor() (torch.tensor method)": [[465, "torch.Tensor.new_tensor"]], "new_zeros() (torch.tensor method)": [[466, "torch.Tensor.new_zeros"]], "nextafter() (torch.tensor method)": [[467, "torch.Tensor.nextafter"]], "nextafter_() (torch.tensor method)": [[468, "torch.Tensor.nextafter_"]], "nonzero() (torch.tensor method)": [[469, "torch.Tensor.nonzero"]], "norm() (torch.tensor method)": [[470, "torch.Tensor.norm"]], "normal_() (torch.tensor method)": [[471, "torch.Tensor.normal_"]], "not_equal() (torch.tensor method)": [[472, "torch.Tensor.not_equal"]], "not_equal_() (torch.tensor method)": [[473, "torch.Tensor.not_equal_"]], "numel() (torch.tensor method)": [[474, "torch.Tensor.numel"]], "numpy() (torch.tensor method)": [[475, "torch.Tensor.numpy"]], "orgqr() (torch.tensor method)": [[476, "torch.Tensor.orgqr"]], "ormqr() (torch.tensor method)": [[477, "torch.Tensor.ormqr"]], "outer() (torch.tensor method)": [[478, "torch.Tensor.outer"]], "permute() (torch.tensor method)": [[479, "torch.Tensor.permute"]], "pin_memory() (torch.tensor method)": [[480, "torch.Tensor.pin_memory"]], "pinverse() (torch.tensor method)": [[481, "torch.Tensor.pinverse"]], "polygamma() (torch.tensor method)": [[482, "torch.Tensor.polygamma"]], "polygamma_() (torch.tensor method)": [[483, "torch.Tensor.polygamma_"]], "positive() (torch.tensor method)": [[484, "torch.Tensor.positive"]], "pow() (torch.tensor method)": [[485, "torch.Tensor.pow"]], "pow_() (torch.tensor method)": [[486, "torch.Tensor.pow_"]], "prod() (torch.tensor method)": [[487, "torch.Tensor.prod"]], "put_() (torch.tensor method)": [[488, "torch.Tensor.put_"]], "q_per_channel_axis() (torch.tensor method)": [[489, "torch.Tensor.q_per_channel_axis"]], "q_per_channel_scales() (torch.tensor method)": [[490, "torch.Tensor.q_per_channel_scales"]], "q_per_channel_zero_points() (torch.tensor method)": [[491, "torch.Tensor.q_per_channel_zero_points"]], "q_scale() (torch.tensor method)": [[492, "torch.Tensor.q_scale"]], "q_zero_point() (torch.tensor method)": [[493, "torch.Tensor.q_zero_point"]], "qr() (torch.tensor method)": [[494, "torch.Tensor.qr"]], "qscheme() (torch.tensor method)": [[495, "torch.Tensor.qscheme"]], "quantile() (torch.tensor method)": [[496, "torch.Tensor.quantile"]], "rad2deg() (torch.tensor method)": [[497, "torch.Tensor.rad2deg"]], "random_() (torch.tensor method)": [[498, "torch.Tensor.random_"]], "ravel() (torch.tensor method)": [[499, "torch.Tensor.ravel"]], "real (torch.tensor attribute)": [[500, "torch.Tensor.real"]], "reciprocal() (torch.tensor method)": [[501, "torch.Tensor.reciprocal"]], "reciprocal_() (torch.tensor method)": [[502, "torch.Tensor.reciprocal_"]], "record_stream() (torch.tensor method)": [[503, "torch.Tensor.record_stream"]], "register_hook() (torch.tensor method)": [[504, "torch.Tensor.register_hook"]], "remainder() (torch.tensor method)": [[505, "torch.Tensor.remainder"]], "remainder_() (torch.tensor method)": [[506, "torch.Tensor.remainder_"]], "renorm() (torch.tensor method)": [[507, "torch.Tensor.renorm"]], "renorm_() (torch.tensor method)": [[508, "torch.Tensor.renorm_"]], "repeat() (torch.tensor method)": [[509, "torch.Tensor.repeat"]], "repeat_interleave() (torch.tensor method)": [[510, "torch.Tensor.repeat_interleave"]], "requires_grad (torch.tensor attribute)": [[511, "torch.Tensor.requires_grad"]], "requires_grad_() (torch.tensor method)": [[512, "torch.Tensor.requires_grad_"]], "reshape() (torch.tensor method)": [[513, "torch.Tensor.reshape"]], "reshape_as() (torch.tensor method)": [[514, "torch.Tensor.reshape_as"]], "resize_() (torch.tensor method)": [[515, "torch.Tensor.resize_"]], "resize_as_() (torch.tensor method)": [[516, "torch.Tensor.resize_as_"]], "resolve_conj() (torch.tensor method)": [[517, "torch.Tensor.resolve_conj"]], "resolve_neg() (torch.tensor method)": [[518, "torch.Tensor.resolve_neg"]], "retain_grad() (torch.tensor method)": [[519, "torch.Tensor.retain_grad"]], "retains_grad (torch.tensor attribute)": [[520, "torch.Tensor.retains_grad"]], "roll() (torch.tensor method)": [[521, "torch.Tensor.roll"]], "rot90() (torch.tensor method)": [[522, "torch.Tensor.rot90"]], "round() (torch.tensor method)": [[523, "torch.Tensor.round"]], "round_() (torch.tensor method)": [[524, "torch.Tensor.round_"]], "row_indices() (torch.tensor method)": [[525, "torch.Tensor.row_indices"]], "rsqrt() (torch.tensor method)": [[526, "torch.Tensor.rsqrt"]], "rsqrt_() (torch.tensor method)": [[527, "torch.Tensor.rsqrt_"]], "scatter() (torch.tensor method)": [[528, "torch.Tensor.scatter"]], "scatter_() (torch.tensor method)": [[529, "torch.Tensor.scatter_"]], "scatter_add() (torch.tensor method)": [[530, "torch.Tensor.scatter_add"]], "scatter_add_() (torch.tensor method)": [[531, "torch.Tensor.scatter_add_"]], "scatter_reduce() (torch.tensor method)": [[532, "torch.Tensor.scatter_reduce"]], "scatter_reduce_() (torch.tensor method)": [[533, "torch.Tensor.scatter_reduce_"]], "select() (torch.tensor method)": [[534, "torch.Tensor.select"]], "select_scatter() (torch.tensor method)": [[535, "torch.Tensor.select_scatter"]], "set_() (torch.tensor method)": [[536, "torch.Tensor.set_"]], "sgn() (torch.tensor method)": [[537, "torch.Tensor.sgn"]], "sgn_() (torch.tensor method)": [[538, "torch.Tensor.sgn_"]], "shape (torch.tensor attribute)": [[539, "torch.Tensor.shape"]], "share_memory_() (torch.tensor method)": [[540, "torch.Tensor.share_memory_"]], "short() (torch.tensor method)": [[541, "torch.Tensor.short"]], "sigmoid() (torch.tensor method)": [[542, "torch.Tensor.sigmoid"]], "sigmoid_() (torch.tensor method)": [[543, "torch.Tensor.sigmoid_"]], "sign() (torch.tensor method)": [[544, "torch.Tensor.sign"]], "sign_() (torch.tensor method)": [[545, "torch.Tensor.sign_"]], "signbit() (torch.tensor method)": [[546, "torch.Tensor.signbit"]], "sin() (torch.tensor method)": [[547, "torch.Tensor.sin"]], "sin_() (torch.tensor method)": [[548, "torch.Tensor.sin_"]], "sinc() (torch.tensor method)": [[549, "torch.Tensor.sinc"]], "sinc_() (torch.tensor method)": [[550, "torch.Tensor.sinc_"]], "sinh() (torch.tensor method)": [[551, "torch.Tensor.sinh"]], "sinh_() (torch.tensor method)": [[552, "torch.Tensor.sinh_"]], "size() (torch.tensor method)": [[553, "torch.Tensor.size"]], "slice_scatter() (torch.tensor method)": [[554, "torch.Tensor.slice_scatter"]], "slogdet() (torch.tensor method)": [[555, "torch.Tensor.slogdet"]], "smm() (torch.tensor method)": [[556, "torch.Tensor.smm"]], "softmax() (torch.tensor method)": [[557, "torch.Tensor.softmax"]], "sort() (torch.tensor method)": [[558, "torch.Tensor.sort"]], "sparse_dim() (torch.tensor method)": [[559, "torch.Tensor.sparse_dim"]], "sparse_mask() (torch.tensor method)": [[560, "torch.Tensor.sparse_mask"]], "sparse_resize_() (torch.tensor method)": [[561, "torch.Tensor.sparse_resize_"]], "sparse_resize_and_clear_() (torch.tensor method)": [[562, "torch.Tensor.sparse_resize_and_clear_"]], "split() (torch.tensor method)": [[563, "torch.Tensor.split"]], "sqrt() (torch.tensor method)": [[564, "torch.Tensor.sqrt"]], "sqrt_() (torch.tensor method)": [[565, "torch.Tensor.sqrt_"]], "square() (torch.tensor method)": [[566, "torch.Tensor.square"]], "square_() (torch.tensor method)": [[567, "torch.Tensor.square_"]], "squeeze() (torch.tensor method)": [[568, "torch.Tensor.squeeze"]], "squeeze_() (torch.tensor method)": [[569, "torch.Tensor.squeeze_"]], "sspaddmm() (torch.tensor method)": [[570, "torch.Tensor.sspaddmm"]], "std() (torch.tensor method)": [[571, "torch.Tensor.std"]], "stft() (torch.tensor method)": [[572, "torch.Tensor.stft"]], "storage() (torch.tensor method)": [[573, "torch.Tensor.storage"]], "storage_offset() (torch.tensor method)": [[574, "torch.Tensor.storage_offset"]], "storage_type() (torch.tensor method)": [[575, "torch.Tensor.storage_type"]], "stride() (torch.tensor method)": [[576, "torch.Tensor.stride"]], "sub() (torch.tensor method)": [[577, "torch.Tensor.sub"]], "sub_() (torch.tensor method)": [[578, "torch.Tensor.sub_"]], "subtract() (torch.tensor method)": [[579, "torch.Tensor.subtract"]], "subtract_() (torch.tensor method)": [[580, "torch.Tensor.subtract_"]], "sum() (torch.tensor method)": [[581, "torch.Tensor.sum"]], "sum_to_size() (torch.tensor method)": [[582, "torch.Tensor.sum_to_size"]], "svd() (torch.tensor method)": [[583, "torch.Tensor.svd"]], "swapaxes() (torch.tensor method)": [[584, "torch.Tensor.swapaxes"]], "swapdims() (torch.tensor method)": [[585, "torch.Tensor.swapdims"]], "t() (torch.tensor method)": [[586, "torch.Tensor.t"]], "t_() (torch.tensor method)": [[587, "torch.Tensor.t_"]], "take() (torch.tensor method)": [[588, "torch.Tensor.take"]], "take_along_dim() (torch.tensor method)": [[589, "torch.Tensor.take_along_dim"]], "tan() (torch.tensor method)": [[590, "torch.Tensor.tan"]], "tan_() (torch.tensor method)": [[591, "torch.Tensor.tan_"]], "tanh() (torch.tensor method)": [[592, "torch.Tensor.tanh"]], "tanh_() (torch.tensor method)": [[593, "torch.Tensor.tanh_"]], "tensor_split() (torch.tensor method)": [[594, "torch.Tensor.tensor_split"]], "tile() (torch.tensor method)": [[595, "torch.Tensor.tile"]], "to() (torch.tensor method)": [[596, "torch.Tensor.to"]], "to_dense() (torch.tensor method)": [[597, "torch.Tensor.to_dense"]], "to_mkldnn() (torch.tensor method)": [[598, "torch.Tensor.to_mkldnn"]], "to_sparse() (torch.tensor method)": [[599, "torch.Tensor.to_sparse"]], "to_sparse_bsc() (torch.tensor method)": [[600, "torch.Tensor.to_sparse_bsc"]], "to_sparse_bsr() (torch.tensor method)": [[601, "torch.Tensor.to_sparse_bsr"]], "to_sparse_coo() (torch.tensor method)": [[602, "torch.Tensor.to_sparse_coo"]], "to_sparse_csc() (torch.tensor method)": [[603, "torch.Tensor.to_sparse_csc"]], "to_sparse_csr() (torch.tensor method)": [[604, "torch.Tensor.to_sparse_csr"]], "tolist() (torch.tensor method)": [[605, "torch.Tensor.tolist"]], "topk() (torch.tensor method)": [[606, "torch.Tensor.topk"]], "trace() (torch.tensor method)": [[607, "torch.Tensor.trace"]], "transpose() (torch.tensor method)": [[608, "torch.Tensor.transpose"]], "transpose_() (torch.tensor method)": [[609, "torch.Tensor.transpose_"]], "triangular_solve() (torch.tensor method)": [[610, "torch.Tensor.triangular_solve"]], "tril() (torch.tensor method)": [[611, "torch.Tensor.tril"]], "tril_() (torch.tensor method)": [[612, "torch.Tensor.tril_"]], "triu() (torch.tensor method)": [[613, "torch.Tensor.triu"]], "triu_() (torch.tensor method)": [[614, "torch.Tensor.triu_"]], "true_divide() (torch.tensor method)": [[615, "torch.Tensor.true_divide"]], "true_divide_() (torch.tensor method)": [[616, "torch.Tensor.true_divide_"]], "trunc() (torch.tensor method)": [[617, "torch.Tensor.trunc"]], "trunc_() (torch.tensor method)": [[618, "torch.Tensor.trunc_"]], "type() (torch.tensor method)": [[619, "torch.Tensor.type"]], "type_as() (torch.tensor method)": [[620, "torch.Tensor.type_as"]], "unbind() (torch.tensor method)": [[621, "torch.Tensor.unbind"]], "unflatten() (torch.tensor method)": [[622, "torch.Tensor.unflatten"]], "unfold() (torch.tensor method)": [[623, "torch.Tensor.unfold"]], "uniform_() (torch.tensor method)": [[624, "torch.Tensor.uniform_"]], "unique() (torch.tensor method)": [[625, "torch.Tensor.unique"]], "unique_consecutive() (torch.tensor method)": [[626, "torch.Tensor.unique_consecutive"]], "unsqueeze() (torch.tensor method)": [[627, "torch.Tensor.unsqueeze"]], "unsqueeze_() (torch.tensor method)": [[628, "torch.Tensor.unsqueeze_"]], "untyped_storage() (torch.tensor method)": [[629, "torch.Tensor.untyped_storage"]], "values() (torch.tensor method)": [[630, "torch.Tensor.values"]], "var() (torch.tensor method)": [[631, "torch.Tensor.var"]], "vdot() (torch.tensor method)": [[632, "torch.Tensor.vdot"]], "view() (torch.tensor method)": [[633, "torch.Tensor.view"]], "view_as() (torch.tensor method)": [[634, "torch.Tensor.view_as"]], "vsplit() (torch.tensor method)": [[635, "torch.Tensor.vsplit"]], "where() (torch.tensor method)": [[636, "torch.Tensor.where"]], "xlogy() (torch.tensor method)": [[637, "torch.Tensor.xlogy"]], "xlogy_() (torch.tensor method)": [[638, "torch.Tensor.xlogy_"]], "zero_() (torch.tensor method)": [[639, "torch.Tensor.zero_"]], "_assert() (in module torch)": [[640, "torch._assert"]], "_foreach_abs() (in module torch)": [[641, "torch._foreach_abs"]], "_foreach_abs_() (in module torch)": [[642, "torch._foreach_abs_"]], "_foreach_acos() (in module torch)": [[643, "torch._foreach_acos"]], "_foreach_acos_() (in module torch)": [[644, "torch._foreach_acos_"]], "_foreach_asin() (in module torch)": [[645, "torch._foreach_asin"]], "_foreach_asin_() (in module torch)": [[646, "torch._foreach_asin_"]], "_foreach_atan() (in module torch)": [[647, "torch._foreach_atan"]], "_foreach_atan_() (in module torch)": [[648, "torch._foreach_atan_"]], "_foreach_ceil() (in module torch)": [[649, "torch._foreach_ceil"]], "_foreach_ceil_() (in module torch)": [[650, "torch._foreach_ceil_"]], "_foreach_cos() (in module torch)": [[651, "torch._foreach_cos"]], "_foreach_cos_() (in module torch)": [[652, "torch._foreach_cos_"]], "_foreach_cosh() (in module torch)": [[653, "torch._foreach_cosh"]], "_foreach_cosh_() (in module torch)": [[654, "torch._foreach_cosh_"]], "_foreach_erf() (in module torch)": [[655, "torch._foreach_erf"]], "_foreach_erf_() (in module torch)": [[656, "torch._foreach_erf_"]], "_foreach_erfc() (in module torch)": [[657, "torch._foreach_erfc"]], "_foreach_erfc_() (in module torch)": [[658, "torch._foreach_erfc_"]], "_foreach_exp() (in module torch)": [[659, "torch._foreach_exp"]], "_foreach_exp_() (in module torch)": [[660, "torch._foreach_exp_"]], "_foreach_expm1() (in module torch)": [[661, "torch._foreach_expm1"]], "_foreach_expm1_() (in module torch)": [[662, "torch._foreach_expm1_"]], "_foreach_floor() (in module torch)": [[663, "torch._foreach_floor"]], "_foreach_floor_() (in module torch)": [[664, "torch._foreach_floor_"]], "_foreach_frac() (in module torch)": [[665, "torch._foreach_frac"]], "_foreach_frac_() (in module torch)": [[666, "torch._foreach_frac_"]], "_foreach_lgamma() (in module torch)": [[667, "torch._foreach_lgamma"]], "_foreach_lgamma_() (in module torch)": [[668, "torch._foreach_lgamma_"]], "_foreach_log() (in module torch)": [[669, "torch._foreach_log"]], "_foreach_log10() (in module torch)": [[670, "torch._foreach_log10"]], "_foreach_log10_() (in module torch)": [[671, "torch._foreach_log10_"]], "_foreach_log1p() (in module torch)": [[672, "torch._foreach_log1p"]], "_foreach_log1p_() (in module torch)": [[673, "torch._foreach_log1p_"]], "_foreach_log2() (in module torch)": [[674, "torch._foreach_log2"]], "_foreach_log2_() (in module torch)": [[675, "torch._foreach_log2_"]], "_foreach_log_() (in module torch)": [[676, "torch._foreach_log_"]], "_foreach_neg() (in module torch)": [[677, "torch._foreach_neg"]], "_foreach_neg_() (in module torch)": [[678, "torch._foreach_neg_"]], "_foreach_reciprocal() (in module torch)": [[679, "torch._foreach_reciprocal"]], "_foreach_reciprocal_() (in module torch)": [[680, "torch._foreach_reciprocal_"]], "_foreach_round() (in module torch)": [[681, "torch._foreach_round"]], "_foreach_round_() (in module torch)": [[682, "torch._foreach_round_"]], "_foreach_sigmoid() (in module torch)": [[683, "torch._foreach_sigmoid"]], "_foreach_sigmoid_() (in module torch)": [[684, "torch._foreach_sigmoid_"]], "_foreach_sin() (in module torch)": [[685, "torch._foreach_sin"]], "_foreach_sin_() (in module torch)": [[686, "torch._foreach_sin_"]], "_foreach_sinh() (in module torch)": [[687, "torch._foreach_sinh"]], "_foreach_sinh_() (in module torch)": [[688, "torch._foreach_sinh_"]], "_foreach_sqrt() (in module torch)": [[689, "torch._foreach_sqrt"]], "_foreach_sqrt_() (in module torch)": [[690, "torch._foreach_sqrt_"]], "_foreach_tan() (in module torch)": [[691, "torch._foreach_tan"]], "_foreach_tan_() (in module torch)": [[692, "torch._foreach_tan_"]], "_foreach_trunc() (in module torch)": [[693, "torch._foreach_trunc"]], "_foreach_trunc_() (in module torch)": [[694, "torch._foreach_trunc_"]], "_foreach_zero_() (in module torch)": [[695, "torch._foreach_zero_"]], "set_logs() (in module torch._logging)": [[696, "torch._logging.set_logs"]], "abs() (in module torch)": [[697, "torch.abs"]], "absolute() (in module torch)": [[698, "torch.absolute"]], "acos() (in module torch)": [[699, "torch.acos"]], "acosh() (in module torch)": [[700, "torch.acosh"]], "add() (in module torch)": [[701, "torch.add"]], "addbmm() (in module torch)": [[702, "torch.addbmm"]], "addcdiv() (in module torch)": [[703, "torch.addcdiv"]], "addcmul() (in module torch)": [[704, "torch.addcmul"]], "addmm() (in module torch)": [[705, "torch.addmm"]], "addmv() (in module torch)": [[706, "torch.addmv"]], "addr() (in module torch)": [[707, "torch.addr"]], "adjoint() (in module torch)": [[708, "torch.adjoint"]], "all() (in module torch)": [[709, "torch.all"]], "allclose() (in module torch)": [[710, "torch.allclose"]], "amax() (in module torch)": [[711, "torch.amax"]], "amin() (in module torch)": [[712, "torch.amin"]], "aminmax() (in module torch)": [[713, "torch.aminmax"]], "angle() (in module torch)": [[714, "torch.angle"]], "any() (in module torch)": [[715, "torch.any"]], "bnrelu2d (class in torch.ao.nn.intrinsic)": [[716, "torch.ao.nn.intrinsic.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic)": [[717, "torch.ao.nn.intrinsic.BNReLU3d"]], "convbn1d (class in torch.ao.nn.intrinsic)": [[718, "torch.ao.nn.intrinsic.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic)": [[719, "torch.ao.nn.intrinsic.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic)": [[720, "torch.ao.nn.intrinsic.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic)": [[721, "torch.ao.nn.intrinsic.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic)": [[722, "torch.ao.nn.intrinsic.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic)": [[723, "torch.ao.nn.intrinsic.ConvBnReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic)": [[724, "torch.ao.nn.intrinsic.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic)": [[725, "torch.ao.nn.intrinsic.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic)": [[726, "torch.ao.nn.intrinsic.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic)": [[727, "torch.ao.nn.intrinsic.LinearReLU"]], "convbn1d (class in torch.ao.nn.intrinsic.qat)": [[728, "torch.ao.nn.intrinsic.qat.ConvBn1d"]], "convbn2d (class in torch.ao.nn.intrinsic.qat)": [[729, "torch.ao.nn.intrinsic.qat.ConvBn2d"]], "convbn3d (class in torch.ao.nn.intrinsic.qat)": [[730, "torch.ao.nn.intrinsic.qat.ConvBn3d"]], "convbnrelu1d (class in torch.ao.nn.intrinsic.qat)": [[731, "torch.ao.nn.intrinsic.qat.ConvBnReLU1d"]], "convbnrelu2d (class in torch.ao.nn.intrinsic.qat)": [[732, "torch.ao.nn.intrinsic.qat.ConvBnReLU2d"]], "convbnrelu3d (class in torch.ao.nn.intrinsic.qat)": [[733, "torch.ao.nn.intrinsic.qat.ConvBnReLU3d"]], "convrelu2d (class in torch.ao.nn.intrinsic.qat)": [[734, "torch.ao.nn.intrinsic.qat.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.qat)": [[735, "torch.ao.nn.intrinsic.qat.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.qat)": [[736, "torch.ao.nn.intrinsic.qat.LinearReLU"]], "freeze_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[737, "torch.ao.nn.intrinsic.qat.freeze_bn_stats"]], "update_bn_stats (class in torch.ao.nn.intrinsic.qat)": [[738, "torch.ao.nn.intrinsic.qat.update_bn_stats"]], "bnrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[739, "torch.ao.nn.intrinsic.quantized.BNReLU2d"]], "bnrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[740, "torch.ao.nn.intrinsic.quantized.BNReLU3d"]], "convrelu1d (class in torch.ao.nn.intrinsic.quantized)": [[741, "torch.ao.nn.intrinsic.quantized.ConvReLU1d"]], "convrelu2d (class in torch.ao.nn.intrinsic.quantized)": [[742, "torch.ao.nn.intrinsic.quantized.ConvReLU2d"]], "convrelu3d (class in torch.ao.nn.intrinsic.quantized)": [[743, "torch.ao.nn.intrinsic.quantized.ConvReLU3d"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized)": [[744, "torch.ao.nn.intrinsic.quantized.LinearReLU"]], "linearrelu (class in torch.ao.nn.intrinsic.quantized.dynamic)": [[745, "torch.ao.nn.intrinsic.quantized.dynamic.LinearReLU"]], "conv2d (class in torch.ao.nn.qat)": [[746, "torch.ao.nn.qat.Conv2d"]], "conv3d (class in torch.ao.nn.qat)": [[747, "torch.ao.nn.qat.Conv3d"]], "linear (class in torch.ao.nn.qat)": [[748, "torch.ao.nn.qat.Linear"]], "from_float() (torch.ao.nn.qat.linear class method)": [[748, "torch.ao.nn.qat.Linear.from_float"]], "linear (class in torch.ao.nn.qat.dynamic)": [[749, "torch.ao.nn.qat.dynamic.Linear"]], "lstm (class in torch.ao.nn.quantizable)": [[750, "torch.ao.nn.quantizable.LSTM"]], "multiheadattention (class in torch.ao.nn.quantizable)": [[751, "torch.ao.nn.quantizable.MultiheadAttention"]], "dequantize() (torch.ao.nn.quantizable.multiheadattention method)": [[751, "torch.ao.nn.quantizable.MultiheadAttention.dequantize"]], "forward() (torch.ao.nn.quantizable.multiheadattention method)": [[751, "torch.ao.nn.quantizable.MultiheadAttention.forward"]], "batchnorm2d (class in torch.ao.nn.quantized)": [[752, "torch.ao.nn.quantized.BatchNorm2d"]], "batchnorm3d (class in torch.ao.nn.quantized)": [[753, "torch.ao.nn.quantized.BatchNorm3d"]], "conv1d (class in torch.ao.nn.quantized)": [[754, "torch.ao.nn.quantized.Conv1d"]], "from_float() (torch.ao.nn.quantized.conv1d class method)": [[754, "torch.ao.nn.quantized.Conv1d.from_float"]], "conv2d (class in torch.ao.nn.quantized)": [[755, "torch.ao.nn.quantized.Conv2d"]], "from_float() (torch.ao.nn.quantized.conv2d class method)": [[755, "torch.ao.nn.quantized.Conv2d.from_float"]], "conv3d (class in torch.ao.nn.quantized)": [[756, "torch.ao.nn.quantized.Conv3d"]], "from_float() (torch.ao.nn.quantized.conv3d class method)": [[756, "torch.ao.nn.quantized.Conv3d.from_float"]], "convtranspose1d (class in torch.ao.nn.quantized)": [[757, "torch.ao.nn.quantized.ConvTranspose1d"]], "convtranspose2d (class in torch.ao.nn.quantized)": [[758, "torch.ao.nn.quantized.ConvTranspose2d"]], "convtranspose3d (class in torch.ao.nn.quantized)": [[759, "torch.ao.nn.quantized.ConvTranspose3d"]], "elu (class in torch.ao.nn.quantized)": [[760, "torch.ao.nn.quantized.ELU"]], "embedding (class in torch.ao.nn.quantized)": [[761, "torch.ao.nn.quantized.Embedding"]], "from_float() (torch.ao.nn.quantized.embedding class method)": [[761, "torch.ao.nn.quantized.Embedding.from_float"]], "embeddingbag (class in torch.ao.nn.quantized)": [[762, "torch.ao.nn.quantized.EmbeddingBag"]], "from_float() (torch.ao.nn.quantized.embeddingbag class method)": [[762, "torch.ao.nn.quantized.EmbeddingBag.from_float"]], "fxfloatfunctional (class in torch.ao.nn.quantized)": [[763, "torch.ao.nn.quantized.FXFloatFunctional"]], "floatfunctional (class in torch.ao.nn.quantized)": [[764, "torch.ao.nn.quantized.FloatFunctional"]], "groupnorm (class in torch.ao.nn.quantized)": [[765, "torch.ao.nn.quantized.GroupNorm"]], "hardswish (class in torch.ao.nn.quantized)": [[766, "torch.ao.nn.quantized.Hardswish"]], "instancenorm1d (class in torch.ao.nn.quantized)": [[767, "torch.ao.nn.quantized.InstanceNorm1d"]], "instancenorm2d (class in torch.ao.nn.quantized)": [[768, "torch.ao.nn.quantized.InstanceNorm2d"]], "instancenorm3d (class in torch.ao.nn.quantized)": [[769, "torch.ao.nn.quantized.InstanceNorm3d"]], "layernorm (class in torch.ao.nn.quantized)": [[770, "torch.ao.nn.quantized.LayerNorm"]], "leakyrelu (class in torch.ao.nn.quantized)": [[771, "torch.ao.nn.quantized.LeakyReLU"]], "linear (class in torch.ao.nn.quantized)": [[772, "torch.ao.nn.quantized.Linear"]], "from_float() (torch.ao.nn.quantized.linear class method)": [[772, "torch.ao.nn.quantized.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.linear class method)": [[772, "torch.ao.nn.quantized.Linear.from_reference"]], "qfunctional (class in torch.ao.nn.quantized)": [[773, "torch.ao.nn.quantized.QFunctional"]], "relu6 (class in torch.ao.nn.quantized)": [[774, "torch.ao.nn.quantized.ReLU6"]], "sigmoid (class in torch.ao.nn.quantized)": [[775, "torch.ao.nn.quantized.Sigmoid"]], "gru (class in torch.ao.nn.quantized.dynamic)": [[776, "torch.ao.nn.quantized.dynamic.GRU"]], "grucell (class in torch.ao.nn.quantized.dynamic)": [[777, "torch.ao.nn.quantized.dynamic.GRUCell"]], "lstm (class in torch.ao.nn.quantized.dynamic)": [[778, "torch.ao.nn.quantized.dynamic.LSTM"]], "lstmcell (class in torch.ao.nn.quantized.dynamic)": [[779, "torch.ao.nn.quantized.dynamic.LSTMCell"]], "linear (class in torch.ao.nn.quantized.dynamic)": [[780, "torch.ao.nn.quantized.dynamic.Linear"]], "from_float() (torch.ao.nn.quantized.dynamic.linear class method)": [[780, "torch.ao.nn.quantized.dynamic.Linear.from_float"]], "from_reference() (torch.ao.nn.quantized.dynamic.linear class method)": [[780, "torch.ao.nn.quantized.dynamic.Linear.from_reference"]], "rnncell (class in torch.ao.nn.quantized.dynamic)": [[781, "torch.ao.nn.quantized.dynamic.RNNCell"]], "adaptive_avg_pool2d (class in torch.ao.nn.quantized.functional)": [[782, "torch.ao.nn.quantized.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d (class in torch.ao.nn.quantized.functional)": [[783, "torch.ao.nn.quantized.functional.adaptive_avg_pool3d"]], "avg_pool2d (class in torch.ao.nn.quantized.functional)": [[784, "torch.ao.nn.quantized.functional.avg_pool2d"]], "avg_pool3d (class in torch.ao.nn.quantized.functional)": [[785, "torch.ao.nn.quantized.functional.avg_pool3d"]], "celu (class in torch.ao.nn.quantized.functional)": [[786, "torch.ao.nn.quantized.functional.celu"]], "clamp (class in torch.ao.nn.quantized.functional)": [[787, "torch.ao.nn.quantized.functional.clamp"]], "conv1d (class in torch.ao.nn.quantized.functional)": [[788, "torch.ao.nn.quantized.functional.conv1d"]], "conv2d (class in torch.ao.nn.quantized.functional)": [[789, "torch.ao.nn.quantized.functional.conv2d"]], "conv3d (class in torch.ao.nn.quantized.functional)": [[790, "torch.ao.nn.quantized.functional.conv3d"]], "elu (class in torch.ao.nn.quantized.functional)": [[791, "torch.ao.nn.quantized.functional.elu"]], "hardsigmoid (class in torch.ao.nn.quantized.functional)": [[792, "torch.ao.nn.quantized.functional.hardsigmoid"]], "hardswish (class in torch.ao.nn.quantized.functional)": [[793, "torch.ao.nn.quantized.functional.hardswish"]], "hardtanh (class in torch.ao.nn.quantized.functional)": [[794, "torch.ao.nn.quantized.functional.hardtanh"]], "interpolate (class in torch.ao.nn.quantized.functional)": [[795, "torch.ao.nn.quantized.functional.interpolate"]], "leaky_relu (class in torch.ao.nn.quantized.functional)": [[796, "torch.ao.nn.quantized.functional.leaky_relu"]], "linear (class in torch.ao.nn.quantized.functional)": [[797, "torch.ao.nn.quantized.functional.linear"]], "max_pool1d (class in torch.ao.nn.quantized.functional)": [[798, "torch.ao.nn.quantized.functional.max_pool1d"]], "max_pool2d (class in torch.ao.nn.quantized.functional)": [[799, "torch.ao.nn.quantized.functional.max_pool2d"]], "threshold (class in torch.ao.nn.quantized.functional)": [[800, "torch.ao.nn.quantized.functional.threshold"]], "upsample (class in torch.ao.nn.quantized.functional)": [[801, "torch.ao.nn.quantized.functional.upsample"]], "upsample_bilinear (class in torch.ao.nn.quantized.functional)": [[802, "torch.ao.nn.quantized.functional.upsample_bilinear"]], "upsample_nearest (class in torch.ao.nn.quantized.functional)": [[803, "torch.ao.nn.quantized.functional.upsample_nearest"]], "dequantstub (class in torch.ao.quantization)": [[804, "torch.ao.quantization.DeQuantStub"]], "quantstub (class in torch.ao.quantization)": [[805, "torch.ao.quantization.QuantStub"]], "quantwrapper (class in torch.ao.quantization)": [[806, "torch.ao.quantization.QuantWrapper"]], "add_quant_dequant (class in torch.ao.quantization)": [[807, "torch.ao.quantization.add_quant_dequant"]], "backendconfig (class in torch.ao.quantization.backend_config)": [[808, "torch.ao.quantization.backend_config.BackendConfig"]], "configs (torch.ao.quantization.backend_config.backendconfig property)": [[808, "torch.ao.quantization.backend_config.BackendConfig.configs"]], "from_dict() (torch.ao.quantization.backend_config.backendconfig class method)": [[808, "torch.ao.quantization.backend_config.BackendConfig.from_dict"]], "set_backend_pattern_config() (torch.ao.quantization.backend_config.backendconfig method)": [[808, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_config"]], "set_backend_pattern_configs() (torch.ao.quantization.backend_config.backendconfig method)": [[808, "torch.ao.quantization.backend_config.BackendConfig.set_backend_pattern_configs"]], "set_name() (torch.ao.quantization.backend_config.backendconfig method)": [[808, "torch.ao.quantization.backend_config.BackendConfig.set_name"]], "to_dict() (torch.ao.quantization.backend_config.backendconfig method)": [[808, "torch.ao.quantization.backend_config.BackendConfig.to_dict"]], "backendpatternconfig (class in torch.ao.quantization.backend_config)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig"]], "add_dtype_config() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.add_dtype_config"]], "from_dict() (torch.ao.quantization.backend_config.backendpatternconfig class method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.from_dict"]], "set_dtype_configs() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_dtype_configs"]], "set_fused_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fused_module"]], "set_fuser_method() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_fuser_method"]], "set_observation_type() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_observation_type"]], "set_pattern() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_pattern"]], "set_qat_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_qat_module"]], "set_reference_quantized_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_reference_quantized_module"]], "set_root_module() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.set_root_module"]], "to_dict() (torch.ao.quantization.backend_config.backendpatternconfig method)": [[809, "torch.ao.quantization.backend_config.BackendPatternConfig.to_dict"]], "dtypeconfig (class in torch.ao.quantization.backend_config)": [[810, "torch.ao.quantization.backend_config.DTypeConfig"]], "from_dict() (torch.ao.quantization.backend_config.dtypeconfig class method)": [[810, "torch.ao.quantization.backend_config.DTypeConfig.from_dict"]], "to_dict() (torch.ao.quantization.backend_config.dtypeconfig method)": [[810, "torch.ao.quantization.backend_config.DTypeConfig.to_dict"]], "dtypewithconstraints (class in torch.ao.quantization.backend_config)": [[811, "torch.ao.quantization.backend_config.DTypeWithConstraints"]], "input_output_not_observed (torch.ao.quantization.backend_config.observationtype attribute)": [[812, "torch.ao.quantization.backend_config.ObservationType.INPUT_OUTPUT_NOT_OBSERVED"]], "output_share_observer_with_input (torch.ao.quantization.backend_config.observationtype attribute)": [[812, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_SHARE_OBSERVER_WITH_INPUT"]], "output_use_different_observer_as_input (torch.ao.quantization.backend_config.observationtype attribute)": [[812, "torch.ao.quantization.backend_config.ObservationType.OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT"]], "observationtype (class in torch.ao.quantization.backend_config)": [[812, "torch.ao.quantization.backend_config.ObservationType"]], "convert (class in torch.ao.quantization)": [[813, "torch.ao.quantization.convert"]], "default_eval_fn (class in torch.ao.quantization)": [[814, "torch.ao.quantization.default_eval_fn"]], "fakequantize (class in torch.ao.quantization.fake_quantize)": [[815, "torch.ao.quantization.fake_quantize.FakeQuantize"]], "fakequantizebase (class in torch.ao.quantization.fake_quantize)": [[816, "torch.ao.quantization.fake_quantize.FakeQuantizeBase"]], "fixedqparamsfakequantize (class in torch.ao.quantization.fake_quantize)": [[817, "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize"]], "fusedmovingavgobsfakequantize (class in torch.ao.quantization.fake_quantize)": [[818, "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize"]], "default_fake_quant (in module torch.ao.quantization.fake_quantize)": [[819, "torch.ao.quantization.fake_quantize.default_fake_quant"]], "default_fused_act_fake_quant (in module torch.ao.quantization.fake_quantize)": [[820, "torch.ao.quantization.fake_quantize.default_fused_act_fake_quant"]], "default_fused_per_channel_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[821, "torch.ao.quantization.fake_quantize.default_fused_per_channel_wt_fake_quant"]], "default_fused_wt_fake_quant (in module torch.ao.quantization.fake_quantize)": [[822, "torch.ao.quantization.fake_quantize.default_fused_wt_fake_quant"]], "default_histogram_fake_quant (in module torch.ao.quantization.fake_quantize)": [[823, "torch.ao.quantization.fake_quantize.default_histogram_fake_quant"]], "default_per_channel_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[824, "torch.ao.quantization.fake_quantize.default_per_channel_weight_fake_quant"]], "default_weight_fake_quant (in module torch.ao.quantization.fake_quantize)": [[825, "torch.ao.quantization.fake_quantize.default_weight_fake_quant"]], "disable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[826, "torch.ao.quantization.fake_quantize.disable_fake_quant"]], "disable_observer (class in torch.ao.quantization.fake_quantize)": [[827, "torch.ao.quantization.fake_quantize.disable_observer"]], "enable_fake_quant (class in torch.ao.quantization.fake_quantize)": [[828, "torch.ao.quantization.fake_quantize.enable_fake_quant"]], "enable_observer (class in torch.ao.quantization.fake_quantize)": [[829, "torch.ao.quantization.fake_quantize.enable_observer"]], "fuse_modules (class in torch.ao.quantization)": [[830, "torch.ao.quantization.fuse_modules"]], "convertcustomconfig (class in torch.ao.quantization.fx.custom_config)": [[831, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig class method)": [[831, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.from_dict"]], "set_observed_to_quantized_mapping() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[831, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_observed_to_quantized_mapping"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[831, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.convertcustomconfig method)": [[831, "torch.ao.quantization.fx.custom_config.ConvertCustomConfig.to_dict"]], "fusecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[832, "torch.ao.quantization.fx.custom_config.FuseCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig class method)": [[832, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.from_dict"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[832, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.set_preserved_attributes"]], "to_dict() (torch.ao.quantization.fx.custom_config.fusecustomconfig method)": [[832, "torch.ao.quantization.fx.custom_config.FuseCustomConfig.to_dict"]], "preparecustomconfig (class in torch.ao.quantization.fx.custom_config)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig"]], "from_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig class method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.from_dict"]], "set_float_to_observed_mapping() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_float_to_observed_mapping"]], "set_input_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_input_quantized_indexes"]], "set_non_traceable_module_classes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_classes"]], "set_non_traceable_module_names() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_non_traceable_module_names"]], "set_output_quantized_indexes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_output_quantized_indexes"]], "set_preserved_attributes() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_preserved_attributes"]], "set_standalone_module_class() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_class"]], "set_standalone_module_name() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.set_standalone_module_name"]], "to_dict() (torch.ao.quantization.fx.custom_config.preparecustomconfig method)": [[833, "torch.ao.quantization.fx.custom_config.PrepareCustomConfig.to_dict"]], "standalonemoduleconfigentry (class in torch.ao.quantization.fx.custom_config)": [[834, "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry"]], "histogramobserver (class in torch.ao.quantization.observer)": [[835, "torch.ao.quantization.observer.HistogramObserver"]], "minmaxobserver (class in torch.ao.quantization.observer)": [[836, "torch.ao.quantization.observer.MinMaxObserver"]], "calculate_qparams() (torch.ao.quantization.observer.minmaxobserver method)": [[836, "torch.ao.quantization.observer.MinMaxObserver.calculate_qparams"]], "forward() (torch.ao.quantization.observer.minmaxobserver method)": [[836, "torch.ao.quantization.observer.MinMaxObserver.forward"]], "reset_min_max_vals() (torch.ao.quantization.observer.minmaxobserver method)": [[836, "torch.ao.quantization.observer.MinMaxObserver.reset_min_max_vals"]], "movingaverageminmaxobserver (class in torch.ao.quantization.observer)": [[837, "torch.ao.quantization.observer.MovingAverageMinMaxObserver"]], "movingaverageperchannelminmaxobserver (class in torch.ao.quantization.observer)": [[838, "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver"]], "noopobserver (class in torch.ao.quantization.observer)": [[839, "torch.ao.quantization.observer.NoopObserver"]], "observerbase (class in torch.ao.quantization.observer)": [[840, "torch.ao.quantization.observer.ObserverBase"]], "with_args() (torch.ao.quantization.observer.observerbase class method)": [[840, "torch.ao.quantization.observer.ObserverBase.with_args"]], "with_callable_args() (torch.ao.quantization.observer.observerbase class method)": [[840, "torch.ao.quantization.observer.ObserverBase.with_callable_args"]], "perchannelminmaxobserver (class in torch.ao.quantization.observer)": [[841, "torch.ao.quantization.observer.PerChannelMinMaxObserver"]], "reset_min_max_vals() (torch.ao.quantization.observer.perchannelminmaxobserver method)": [[841, "torch.ao.quantization.observer.PerChannelMinMaxObserver.reset_min_max_vals"]], "placeholderobserver (class in torch.ao.quantization.observer)": [[842, "torch.ao.quantization.observer.PlaceholderObserver"]], "recordingobserver (class in torch.ao.quantization.observer)": [[843, "torch.ao.quantization.observer.RecordingObserver"]], "default_debug_observer (in module torch.ao.quantization.observer)": [[844, "torch.ao.quantization.observer.default_debug_observer"]], "default_dynamic_quant_observer (in module torch.ao.quantization.observer)": [[845, "torch.ao.quantization.observer.default_dynamic_quant_observer"]], "default_float_qparams_observer (in module torch.ao.quantization.observer)": [[846, "torch.ao.quantization.observer.default_float_qparams_observer"]], "default_histogram_observer (in module torch.ao.quantization.observer)": [[847, "torch.ao.quantization.observer.default_histogram_observer"]], "default_observer (in module torch.ao.quantization.observer)": [[848, "torch.ao.quantization.observer.default_observer"]], "default_per_channel_weight_observer (in module torch.ao.quantization.observer)": [[849, "torch.ao.quantization.observer.default_per_channel_weight_observer"]], "default_placeholder_observer (in module torch.ao.quantization.observer)": [[850, "torch.ao.quantization.observer.default_placeholder_observer"]], "default_weight_observer (in module torch.ao.quantization.observer)": [[851, "torch.ao.quantization.observer.default_weight_observer"]], "get_observer_state_dict (class in torch.ao.quantization.observer)": [[852, "torch.ao.quantization.observer.get_observer_state_dict"]], "load_observer_state_dict (class in torch.ao.quantization.observer)": [[853, "torch.ao.quantization.observer.load_observer_state_dict"]], "prepare (class in torch.ao.quantization)": [[854, "torch.ao.quantization.prepare"]], "prepare_qat (class in torch.ao.quantization)": [[855, "torch.ao.quantization.prepare_qat"]], "propagate_qconfig_ (class in torch.ao.quantization)": [[856, "torch.ao.quantization.propagate_qconfig_"]], "qconfig (class in torch.ao.quantization.qconfig)": [[857, "torch.ao.quantization.qconfig.QConfig"]], "default_activation_only_qconfig (in module torch.ao.quantization.qconfig)": [[858, "torch.ao.quantization.qconfig.default_activation_only_qconfig"]], "default_debug_qconfig (in module torch.ao.quantization.qconfig)": [[859, "torch.ao.quantization.qconfig.default_debug_qconfig"]], "default_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[860, "torch.ao.quantization.qconfig.default_dynamic_qconfig"]], "default_per_channel_qconfig (in module torch.ao.quantization.qconfig)": [[861, "torch.ao.quantization.qconfig.default_per_channel_qconfig"]], "default_qat_qconfig (in module torch.ao.quantization.qconfig)": [[862, "torch.ao.quantization.qconfig.default_qat_qconfig"]], "default_qat_qconfig_v2 (in module torch.ao.quantization.qconfig)": [[863, "torch.ao.quantization.qconfig.default_qat_qconfig_v2"]], "default_qconfig (in module torch.ao.quantization.qconfig)": [[864, "torch.ao.quantization.qconfig.default_qconfig"]], "default_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[865, "torch.ao.quantization.qconfig.default_weight_only_qconfig"]], "float16_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[866, "torch.ao.quantization.qconfig.float16_dynamic_qconfig"]], "float16_static_qconfig (in module torch.ao.quantization.qconfig)": [[867, "torch.ao.quantization.qconfig.float16_static_qconfig"]], "float_qparams_weight_only_qconfig (in module torch.ao.quantization.qconfig)": [[868, "torch.ao.quantization.qconfig.float_qparams_weight_only_qconfig"]], "per_channel_dynamic_qconfig (in module torch.ao.quantization.qconfig)": [[869, "torch.ao.quantization.qconfig.per_channel_dynamic_qconfig"]], "qconfigmapping (class in torch.ao.quantization.qconfig_mapping)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping"]], "from_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping class method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.from_dict"]], "set_global() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_global"]], "set_module_name() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name"]], "set_module_name_object_type_order() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_object_type_order"]], "set_module_name_regex() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_module_name_regex"]], "set_object_type() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.set_object_type"]], "to_dict() (torch.ao.quantization.qconfig_mapping.qconfigmapping method)": [[870, "torch.ao.quantization.qconfig_mapping.QConfigMapping.to_dict"]], "get_default_qat_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[871, "torch.ao.quantization.qconfig_mapping.get_default_qat_qconfig_mapping"]], "get_default_qconfig_mapping (class in torch.ao.quantization.qconfig_mapping)": [[872, "torch.ao.quantization.qconfig_mapping.get_default_qconfig_mapping"]], "quantize (class in torch.ao.quantization)": [[873, "torch.ao.quantization.quantize"]], "quantize_dynamic (class in torch.ao.quantization)": [[874, "torch.ao.quantization.quantize_dynamic"]], "convert_fx (class in torch.ao.quantization.quantize_fx)": [[875, "torch.ao.quantization.quantize_fx.convert_fx"]], "fuse_fx (class in torch.ao.quantization.quantize_fx)": [[876, "torch.ao.quantization.quantize_fx.fuse_fx"]], "prepare_fx (class in torch.ao.quantization.quantize_fx)": [[877, "torch.ao.quantization.quantize_fx.prepare_fx"]], "prepare_qat_fx (class in torch.ao.quantization.quantize_fx)": [[878, "torch.ao.quantization.quantize_fx.prepare_qat_fx"]], "quantize_qat (class in torch.ao.quantization)": [[879, "torch.ao.quantization.quantize_qat"]], "swap_module (class in torch.ao.quantization)": [[880, "torch.ao.quantization.swap_module"]], "arange() (in module torch)": [[881, "torch.arange"]], "arccos() (in module torch)": [[882, "torch.arccos"]], "arccosh() (in module torch)": [[883, "torch.arccosh"]], "arcsin() (in module torch)": [[884, "torch.arcsin"]], "arcsinh() (in module torch)": [[885, "torch.arcsinh"]], "arctan() (in module torch)": [[886, "torch.arctan"]], "arctan2() (in module torch)": [[887, "torch.arctan2"]], "arctanh() (in module torch)": [[888, "torch.arctanh"]], "are_deterministic_algorithms_enabled() (in module torch)": [[889, "torch.are_deterministic_algorithms_enabled"]], "argmax() (in module torch)": [[890, "torch.argmax"]], "argmin() (in module torch)": [[891, "torch.argmin"]], "argsort() (in module torch)": [[892, "torch.argsort"]], "argwhere() (in module torch)": [[893, "torch.argwhere"]], "as_strided() (in module torch)": [[894, "torch.as_strided"]], "as_tensor() (in module torch)": [[895, "torch.as_tensor"]], "asarray() (in module torch)": [[896, "torch.asarray"]], "asin() (in module torch)": [[897, "torch.asin"]], "asinh() (in module torch)": [[898, "torch.asinh"]], "atan() (in module torch)": [[899, "torch.atan"]], "atan2() (in module torch)": [[900, "torch.atan2"]], "atanh() (in module torch)": [[901, "torch.atanh"]], "atleast_1d() (in module torch)": [[902, "torch.atleast_1d"]], "atleast_2d() (in module torch)": [[903, "torch.atleast_2d"]], "atleast_3d() (in module torch)": [[904, "torch.atleast_3d"]], "backward() (torch.autograd.function static method)": [[905, "torch.autograd.Function.backward"]], "forward() (torch.autograd.function static method)": [[906, "torch.autograd.Function.forward"]], "jvp() (torch.autograd.function static method)": [[907, "torch.autograd.Function.jvp"]], "vmap() (torch.autograd.function static method)": [[908, "torch.autograd.Function.vmap"]], "backward() (in module torch.autograd)": [[909, "torch.autograd.backward"]], "dual_level (class in torch.autograd.forward_ad)": [[910, "torch.autograd.forward_ad.dual_level"]], "make_dual() (in module torch.autograd.forward_ad)": [[911, "torch.autograd.forward_ad.make_dual"]], "unpack_dual() (in module torch.autograd.forward_ad)": [[912, "torch.autograd.forward_ad.unpack_dual"]], "mark_dirty() (torch.autograd.function.functionctx method)": [[913, "torch.autograd.function.FunctionCtx.mark_dirty"]], "mark_non_differentiable() (torch.autograd.function.functionctx method)": [[914, "torch.autograd.function.FunctionCtx.mark_non_differentiable"]], "save_for_backward() (torch.autograd.function.functionctx method)": [[915, "torch.autograd.function.FunctionCtx.save_for_backward"]], "set_materialize_grads() (torch.autograd.function.functionctx method)": [[916, "torch.autograd.function.FunctionCtx.set_materialize_grads"]], "hessian() (in module torch.autograd.functional)": [[917, "torch.autograd.functional.hessian"]], "hvp() (in module torch.autograd.functional)": [[918, "torch.autograd.functional.hvp"]], "jacobian() (in module torch.autograd.functional)": [[919, "torch.autograd.functional.jacobian"]], "jvp() (in module torch.autograd.functional)": [[920, "torch.autograd.functional.jvp"]], "vhp() (in module torch.autograd.functional)": [[921, "torch.autograd.functional.vhp"]], "vjp() (in module torch.autograd.functional)": [[922, "torch.autograd.functional.vjp"]], "grad() (in module torch.autograd)": [[923, "torch.autograd.grad"]], "gradcheck() (in module torch.autograd)": [[924, "torch.autograd.gradcheck"]], "gradgradcheck() (in module torch.autograd)": [[925, "torch.autograd.gradgradcheck"]], "metadata() (torch.autograd.graph.node method)": [[926, "torch.autograd.graph.Node.metadata"]], "name() (torch.autograd.graph.node method)": [[927, "torch.autograd.graph.Node.name"]], "next_functions (torch.autograd.graph.node property)": [[928, "torch.autograd.graph.Node.next_functions"]], "register_hook() (torch.autograd.graph.node method)": [[929, "torch.autograd.graph.Node.register_hook"]], "register_prehook() (torch.autograd.graph.node method)": [[930, "torch.autograd.graph.Node.register_prehook"]], "load_nvprof() (in module torch.autograd.profiler)": [[931, "torch.autograd.profiler.load_nvprof"]], "export_chrome_trace() (torch.autograd.profiler.profile method)": [[932, "torch.autograd.profiler.profile.export_chrome_trace"]], "key_averages() (torch.autograd.profiler.profile method)": [[933, "torch.autograd.profiler.profile.key_averages"]], "self_cpu_time_total (torch.autograd.profiler.profile property)": [[934, "torch.autograd.profiler.profile.self_cpu_time_total"]], "total_average() (torch.autograd.profiler.profile method)": [[935, "torch.autograd.profiler.profile.total_average"]], "baddbmm() (in module torch)": [[936, "torch.baddbmm"]], "bartlett_window() (in module torch)": [[937, "torch.bartlett_window"]], "bernoulli() (in module torch)": [[938, "torch.bernoulli"]], "bincount() (in module torch)": [[939, "torch.bincount"]], "bitwise_and() (in module torch)": [[940, "torch.bitwise_and"]], "bitwise_left_shift() (in module torch)": [[941, "torch.bitwise_left_shift"]], "bitwise_not() (in module torch)": [[942, "torch.bitwise_not"]], "bitwise_or() (in module torch)": [[943, "torch.bitwise_or"]], "bitwise_right_shift() (in module torch)": [[944, "torch.bitwise_right_shift"]], "bitwise_xor() (in module torch)": [[945, "torch.bitwise_xor"]], "blackman_window() (in module torch)": [[946, "torch.blackman_window"]], "block_diag() (in module torch)": [[947, "torch.block_diag"]], "bmm() (in module torch)": [[948, "torch.bmm"]], "broadcast_shapes() (in module torch)": [[949, "torch.broadcast_shapes"]], "broadcast_tensors() (in module torch)": [[950, "torch.broadcast_tensors"]], "broadcast_to() (in module torch)": [[951, "torch.broadcast_to"]], "bucketize() (in module torch)": [[952, "torch.bucketize"]], "can_cast() (in module torch)": [[953, "torch.can_cast"]], "cartesian_prod() (in module torch)": [[954, "torch.cartesian_prod"]], "cat() (in module torch)": [[955, "torch.cat"]], "cdist() (in module torch)": [[956, "torch.cdist"]], "ceil() (in module torch)": [[957, "torch.ceil"]], "chain_matmul() (in module torch)": [[958, "torch.chain_matmul"]], "cholesky() (in module torch)": [[959, "torch.cholesky"]], "cholesky_inverse() (in module torch)": [[960, "torch.cholesky_inverse"]], "cholesky_solve() (in module torch)": [[961, "torch.cholesky_solve"]], "chunk() (in module torch)": [[962, "torch.chunk"]], "clamp() (in module torch)": [[963, "torch.clamp"]], "clip() (in module torch)": [[964, "torch.clip"]], "clone() (in module torch)": [[965, "torch.clone"]], "column_stack() (in module torch)": [[966, "torch.column_stack"]], "combinations() (in module torch)": [[967, "torch.combinations"]], "compile() (in module torch)": [[968, "torch.compile"]], "compiled_with_cxx11_abi() (in module torch)": [[969, "torch.compiled_with_cxx11_abi"]], "allow_in_graph() (in module torch.compiler)": [[970, "torch.compiler.allow_in_graph"]], "assume_constant_result() (in module torch.compiler)": [[971, "torch.compiler.assume_constant_result"]], "compile() (in module torch.compiler)": [[972, "torch.compiler.compile"]], "disable() (in module torch.compiler)": [[973, "torch.compiler.disable"]], "list_backends() (in module torch.compiler)": [[974, "torch.compiler.list_backends"]], "reset() (in module torch.compiler)": [[975, "torch.compiler.reset"]], "complex() (in module torch)": [[976, "torch.complex"]], "concat() (in module torch)": [[977, "torch.concat"]], "concatenate() (in module torch)": [[978, "torch.concatenate"]], "conj() (in module torch)": [[979, "torch.conj"]], "conj_physical() (in module torch)": [[980, "torch.conj_physical"]], "copysign() (in module torch)": [[981, "torch.copysign"]], "corrcoef() (in module torch)": [[982, "torch.corrcoef"]], "cos() (in module torch)": [[983, "torch.cos"]], "cosh() (in module torch)": [[984, "torch.cosh"]], "count_nonzero() (in module torch)": [[985, "torch.count_nonzero"]], "cov() (in module torch)": [[986, "torch.cov"]], "stream (class in torch.cpu)": [[987, "torch.cpu.Stream"]], "streamcontext (class in torch.cpu)": [[988, "torch.cpu.StreamContext"]], "current_stream() (in module torch.cpu)": [[989, "torch.cpu.current_stream"]], "device_count() (in module torch.cpu)": [[990, "torch.cpu.device_count"]], "is_available() (in module torch.cpu)": [[991, "torch.cpu.is_available"]], "stream() (in module torch.cpu)": [[992, "torch.cpu.stream"]], "synchronize() (in module torch.cpu)": [[993, "torch.cpu.synchronize"]], "cross() (in module torch)": [[994, "torch.cross"]], "cudagraph (class in torch.cuda)": [[995, "torch.cuda.CUDAGraph"]], "capture_begin() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.capture_begin"]], "capture_end() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.capture_end"]], "debug_dump() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.debug_dump"]], "enable_debug_mode() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.enable_debug_mode"]], "pool() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.pool"]], "replay() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.replay"]], "reset() (torch.cuda.cudagraph method)": [[995, "torch.cuda.CUDAGraph.reset"]], "cudapluggableallocator (class in torch.cuda)": [[996, "torch.cuda.CUDAPluggableAllocator"]], "event (class in torch.cuda)": [[997, "torch.cuda.Event"]], "elapsed_time() (torch.cuda.event method)": [[997, "torch.cuda.Event.elapsed_time"]], "from_ipc_handle() (torch.cuda.event class method)": [[997, "torch.cuda.Event.from_ipc_handle"]], "ipc_handle() (torch.cuda.event method)": [[997, "torch.cuda.Event.ipc_handle"]], "query() (torch.cuda.event method)": [[997, "torch.cuda.Event.query"]], "record() (torch.cuda.event method)": [[997, "torch.cuda.Event.record"]], "synchronize() (torch.cuda.event method)": [[997, "torch.cuda.Event.synchronize"]], "wait() (torch.cuda.event method)": [[997, "torch.cuda.Event.wait"]], "externalstream (class in torch.cuda)": [[998, "torch.cuda.ExternalStream"]], "query() (torch.cuda.externalstream method)": [[998, "torch.cuda.ExternalStream.query"]], "record_event() (torch.cuda.externalstream method)": [[998, "torch.cuda.ExternalStream.record_event"]], "synchronize() (torch.cuda.externalstream method)": [[998, "torch.cuda.ExternalStream.synchronize"]], "wait_event() (torch.cuda.externalstream method)": [[998, "torch.cuda.ExternalStream.wait_event"]], "wait_stream() (torch.cuda.externalstream method)": [[998, "torch.cuda.ExternalStream.wait_stream"]], "outofmemoryerror": [[999, "torch.cuda.OutOfMemoryError"]], "stream (class in torch.cuda)": [[1000, "torch.cuda.Stream"]], "query() (torch.cuda.stream method)": [[1000, "torch.cuda.Stream.query"]], "record_event() (torch.cuda.stream method)": [[1000, "torch.cuda.Stream.record_event"]], "synchronize() (torch.cuda.stream method)": [[1000, "torch.cuda.Stream.synchronize"]], "wait_event() (torch.cuda.stream method)": [[1000, "torch.cuda.Stream.wait_event"]], "wait_stream() (torch.cuda.stream method)": [[1000, "torch.cuda.Stream.wait_stream"]], "streamcontext (class in torch.cuda)": [[1001, "torch.cuda.StreamContext"]], "caching_allocator_alloc() (in module torch.cuda)": [[1002, "torch.cuda.caching_allocator_alloc"]], "caching_allocator_delete() (in module torch.cuda)": [[1003, "torch.cuda.caching_allocator_delete"]], "can_device_access_peer() (in module torch.cuda)": [[1004, "torch.cuda.can_device_access_peer"]], "change_current_allocator() (in module torch.cuda)": [[1005, "torch.cuda.change_current_allocator"]], "clock_rate() (in module torch.cuda)": [[1006, "torch.cuda.clock_rate"]], "broadcast() (in module torch.cuda.comm)": [[1007, "torch.cuda.comm.broadcast"]], "broadcast_coalesced() (in module torch.cuda.comm)": [[1008, "torch.cuda.comm.broadcast_coalesced"]], "gather() (in module torch.cuda.comm)": [[1009, "torch.cuda.comm.gather"]], "reduce_add() (in module torch.cuda.comm)": [[1010, "torch.cuda.comm.reduce_add"]], "scatter() (in module torch.cuda.comm)": [[1011, "torch.cuda.comm.scatter"]], "current_blas_handle() (in module torch.cuda)": [[1012, "torch.cuda.current_blas_handle"]], "current_device() (in module torch.cuda)": [[1013, "torch.cuda.current_device"]], "current_stream() (in module torch.cuda)": [[1014, "torch.cuda.current_stream"]], "default_stream() (in module torch.cuda)": [[1015, "torch.cuda.default_stream"]], "device (class in torch.cuda)": [[1016, "torch.cuda.device"]], "device_count() (in module torch.cuda)": [[1017, "torch.cuda.device_count"]], "device_of (class in torch.cuda)": [[1018, "torch.cuda.device_of"]], "empty_cache() (in module torch.cuda)": [[1019, "torch.cuda.empty_cache"]], "get_allocator_backend() (in module torch.cuda)": [[1020, "torch.cuda.get_allocator_backend"]], "get_arch_list() (in module torch.cuda)": [[1021, "torch.cuda.get_arch_list"]], "get_device_capability() (in module torch.cuda)": [[1022, "torch.cuda.get_device_capability"]], "get_device_name() (in module torch.cuda)": [[1023, "torch.cuda.get_device_name"]], "get_device_properties() (in module torch.cuda)": [[1024, "torch.cuda.get_device_properties"]], "get_gencode_flags() (in module torch.cuda)": [[1025, "torch.cuda.get_gencode_flags"]], "get_rng_state() (in module torch.cuda)": [[1026, "torch.cuda.get_rng_state"]], "get_rng_state_all() (in module torch.cuda)": [[1027, "torch.cuda.get_rng_state_all"]], "get_sync_debug_mode() (in module torch.cuda)": [[1028, "torch.cuda.get_sync_debug_mode"]], "graph (class in torch.cuda)": [[1029, "torch.cuda.graph"]], "graph_pool_handle() (in module torch.cuda)": [[1030, "torch.cuda.graph_pool_handle"]], "init() (in module torch.cuda)": [[1031, "torch.cuda.init"]], "initial_seed() (in module torch.cuda)": [[1032, "torch.cuda.initial_seed"]], "ipc_collect() (in module torch.cuda)": [[1033, "torch.cuda.ipc_collect"]], "is_available() (in module torch.cuda)": [[1034, "torch.cuda.is_available"]], "is_current_stream_capturing() (in module torch.cuda)": [[1035, "torch.cuda.is_current_stream_capturing"]], "is_initialized() (in module torch.cuda)": [[1036, "torch.cuda.is_initialized"]], "_create_jit_fn() (in module torch.cuda.jiterator)": [[1037, "torch.cuda.jiterator._create_jit_fn"]], "_create_multi_output_jit_fn() (in module torch.cuda.jiterator)": [[1038, "torch.cuda.jiterator._create_multi_output_jit_fn"]], "list_gpu_processes() (in module torch.cuda)": [[1039, "torch.cuda.list_gpu_processes"]], "make_graphed_callables() (in module torch.cuda)": [[1040, "torch.cuda.make_graphed_callables"]], "manual_seed() (in module torch.cuda)": [[1041, "torch.cuda.manual_seed"]], "manual_seed_all() (in module torch.cuda)": [[1042, "torch.cuda.manual_seed_all"]], "max_memory_allocated() (in module torch.cuda)": [[1043, "torch.cuda.max_memory_allocated"]], "max_memory_cached() (in module torch.cuda)": [[1044, "torch.cuda.max_memory_cached"]], "max_memory_reserved() (in module torch.cuda)": [[1045, "torch.cuda.max_memory_reserved"]], "mem_get_info() (in module torch.cuda)": [[1046, "torch.cuda.mem_get_info"]], "memory_allocated() (in module torch.cuda)": [[1047, "torch.cuda.memory_allocated"]], "memory_cached() (in module torch.cuda)": [[1048, "torch.cuda.memory_cached"]], "memory_reserved() (in module torch.cuda)": [[1049, "torch.cuda.memory_reserved"]], "memory_snapshot() (in module torch.cuda)": [[1050, "torch.cuda.memory_snapshot"]], "memory_stats() (in module torch.cuda)": [[1051, "torch.cuda.memory_stats"]], "memory_summary() (in module torch.cuda)": [[1052, "torch.cuda.memory_summary"]], "memory_usage() (in module torch.cuda)": [[1053, "torch.cuda.memory_usage"]], "mark() (in module torch.cuda.nvtx)": [[1054, "torch.cuda.nvtx.mark"]], "range_pop() (in module torch.cuda.nvtx)": [[1055, "torch.cuda.nvtx.range_pop"]], "range_push() (in module torch.cuda.nvtx)": [[1056, "torch.cuda.nvtx.range_push"]], "power_draw() (in module torch.cuda)": [[1057, "torch.cuda.power_draw"]], "reset_max_memory_allocated() (in module torch.cuda)": [[1058, "torch.cuda.reset_max_memory_allocated"]], "reset_max_memory_cached() (in module torch.cuda)": [[1059, "torch.cuda.reset_max_memory_cached"]], "reset_peak_memory_stats() (in module torch.cuda)": [[1060, "torch.cuda.reset_peak_memory_stats"]], "seed() (in module torch.cuda)": [[1061, "torch.cuda.seed"]], "seed_all() (in module torch.cuda)": [[1062, "torch.cuda.seed_all"]], "set_device() (in module torch.cuda)": [[1063, "torch.cuda.set_device"]], "set_per_process_memory_fraction() (in module torch.cuda)": [[1064, "torch.cuda.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.cuda)": [[1065, "torch.cuda.set_rng_state"]], "set_rng_state_all() (in module torch.cuda)": [[1066, "torch.cuda.set_rng_state_all"]], "set_stream() (in module torch.cuda)": [[1067, "torch.cuda.set_stream"]], "set_sync_debug_mode() (in module torch.cuda)": [[1068, "torch.cuda.set_sync_debug_mode"]], "stream() (in module torch.cuda)": [[1069, "torch.cuda.stream"]], "synchronize() (in module torch.cuda)": [[1070, "torch.cuda.synchronize"]], "temperature() (in module torch.cuda)": [[1071, "torch.cuda.temperature"]], "utilization() (in module torch.cuda)": [[1072, "torch.cuda.utilization"]], "cummax() (in module torch)": [[1073, "torch.cummax"]], "cummin() (in module torch)": [[1074, "torch.cummin"]], "cumprod() (in module torch)": [[1075, "torch.cumprod"]], "cumsum() (in module torch)": [[1076, "torch.cumsum"]], "cumulative_trapezoid() (in module torch)": [[1077, "torch.cumulative_trapezoid"]], "deg2rad() (in module torch)": [[1078, "torch.deg2rad"]], "dequantize() (in module torch)": [[1079, "torch.dequantize"]], "det() (in module torch)": [[1080, "torch.det"]], "diag() (in module torch)": [[1081, "torch.diag"]], "diag_embed() (in module torch)": [[1082, "torch.diag_embed"]], "diagflat() (in module torch)": [[1083, "torch.diagflat"]], "diagonal() (in module torch)": [[1084, "torch.diagonal"]], "diagonal_scatter() (in module torch)": [[1085, "torch.diagonal_scatter"]], "diff() (in module torch)": [[1086, "torch.diff"]], "digamma() (in module torch)": [[1087, "torch.digamma"]], "dist() (in module torch)": [[1088, "torch.dist"]], "div() (in module torch)": [[1089, "torch.div"]], "divide() (in module torch)": [[1090, "torch.divide"]], "dot() (in module torch)": [[1091, "torch.dot"]], "dsplit() (in module torch)": [[1092, "torch.dsplit"]], "dstack() (in module torch)": [[1093, "torch.dstack"]], "einsum() (in module torch)": [[1094, "torch.einsum"]], "empty() (in module torch)": [[1095, "torch.empty"]], "empty_like() (in module torch)": [[1096, "torch.empty_like"]], "empty_strided() (in module torch)": [[1097, "torch.empty_strided"]], "enable_grad (class in torch)": [[1098, "torch.enable_grad"]], "eq() (in module torch)": [[1099, "torch.eq"]], "equal() (in module torch)": [[1100, "torch.equal"]], "erf() (in module torch)": [[1101, "torch.erf"]], "erfc() (in module torch)": [[1102, "torch.erfc"]], "erfinv() (in module torch)": [[1103, "torch.erfinv"]], "exp() (in module torch)": [[1104, "torch.exp"]], "exp2() (in module torch)": [[1105, "torch.exp2"]], "expm1() (in module torch)": [[1106, "torch.expm1"]], "eye() (in module torch)": [[1107, "torch.eye"]], "fake_quantize_per_channel_affine() (in module torch)": [[1108, "torch.fake_quantize_per_channel_affine"]], "fake_quantize_per_tensor_affine() (in module torch)": [[1109, "torch.fake_quantize_per_tensor_affine"]], "fft() (in module torch.fft)": [[1110, "torch.fft.fft"]], "fft2() (in module torch.fft)": [[1111, "torch.fft.fft2"]], "fftfreq() (in module torch.fft)": [[1112, "torch.fft.fftfreq"]], "fftn() (in module torch.fft)": [[1113, "torch.fft.fftn"]], "fftshift() (in module torch.fft)": [[1114, "torch.fft.fftshift"]], "hfft() (in module torch.fft)": [[1115, "torch.fft.hfft"]], "hfft2() (in module torch.fft)": [[1116, "torch.fft.hfft2"]], "hfftn() (in module torch.fft)": [[1117, "torch.fft.hfftn"]], "ifft() (in module torch.fft)": [[1118, "torch.fft.ifft"]], "ifft2() (in module torch.fft)": [[1119, "torch.fft.ifft2"]], "ifftn() (in module torch.fft)": [[1120, "torch.fft.ifftn"]], "ifftshift() (in module torch.fft)": [[1121, "torch.fft.ifftshift"]], "ihfft() (in module torch.fft)": [[1122, "torch.fft.ihfft"]], "ihfft2() (in module torch.fft)": [[1123, "torch.fft.ihfft2"]], "ihfftn() (in module torch.fft)": [[1124, "torch.fft.ihfftn"]], "irfft() (in module torch.fft)": [[1125, "torch.fft.irfft"]], "irfft2() (in module torch.fft)": [[1126, "torch.fft.irfft2"]], "irfftn() (in module torch.fft)": [[1127, "torch.fft.irfftn"]], "rfft() (in module torch.fft)": [[1128, "torch.fft.rfft"]], "rfft2() (in module torch.fft)": [[1129, "torch.fft.rfft2"]], "rfftfreq() (in module torch.fft)": [[1130, "torch.fft.rfftfreq"]], "rfftn() (in module torch.fft)": [[1131, "torch.fft.rfftn"]], "fix() (in module torch)": [[1132, "torch.fix"]], "flatten() (in module torch)": [[1133, "torch.flatten"]], "flip() (in module torch)": [[1134, "torch.flip"]], "fliplr() (in module torch)": [[1135, "torch.fliplr"]], "flipud() (in module torch)": [[1136, "torch.flipud"]], "float_power() (in module torch)": [[1137, "torch.float_power"]], "floor() (in module torch)": [[1138, "torch.floor"]], "floor_divide() (in module torch)": [[1139, "torch.floor_divide"]], "fmax() (in module torch)": [[1140, "torch.fmax"]], "fmin() (in module torch)": [[1141, "torch.fmin"]], "fmod() (in module torch)": [[1142, "torch.fmod"]], "frac() (in module torch)": [[1143, "torch.frac"]], "frexp() (in module torch)": [[1144, "torch.frexp"]], "from_dlpack() (in module torch)": [[1145, "torch.from_dlpack"]], "from_numpy() (in module torch)": [[1146, "torch.from_numpy"]], "frombuffer() (in module torch)": [[1147, "torch.frombuffer"]], "full() (in module torch)": [[1148, "torch.full"]], "full_like() (in module torch)": [[1149, "torch.full_like"]], "functional_call() (in module torch.func)": [[1150, "torch.func.functional_call"]], "functionalize() (in module torch.func)": [[1151, "torch.func.functionalize"]], "grad() (in module torch.func)": [[1152, "torch.func.grad"]], "grad_and_value() (in module torch.func)": [[1153, "torch.func.grad_and_value"]], "hessian() (in module torch.func)": [[1154, "torch.func.hessian"]], "jacfwd() (in module torch.func)": [[1155, "torch.func.jacfwd"]], "jacrev() (in module torch.func)": [[1156, "torch.func.jacrev"]], "jvp() (in module torch.func)": [[1157, "torch.func.jvp"]], "linearize() (in module torch.func)": [[1158, "torch.func.linearize"]], "replace_all_batch_norm_modules_() (in module torch.func)": [[1159, "torch.func.replace_all_batch_norm_modules_"]], "stack_module_state() (in module torch.func)": [[1160, "torch.func.stack_module_state"]], "vjp() (in module torch.func)": [[1161, "torch.func.vjp"]], "vmap() (in module torch.func)": [[1162, "torch.func.vmap"]], "gather() (in module torch)": [[1163, "torch.gather"]], "gcd() (in module torch)": [[1164, "torch.gcd"]], "ge() (in module torch)": [[1165, "torch.ge"]], "geqrf() (in module torch)": [[1166, "torch.geqrf"]], "ger() (in module torch)": [[1167, "torch.ger"]], "get_default_dtype() (in module torch)": [[1168, "torch.get_default_dtype"]], "get_deterministic_debug_mode() (in module torch)": [[1169, "torch.get_deterministic_debug_mode"]], "get_float32_matmul_precision() (in module torch)": [[1170, "torch.get_float32_matmul_precision"]], "get_num_interop_threads() (in module torch)": [[1171, "torch.get_num_interop_threads"]], "get_num_threads() (in module torch)": [[1172, "torch.get_num_threads"]], "get_rng_state() (in module torch)": [[1173, "torch.get_rng_state"]], "gradient() (in module torch)": [[1174, "torch.gradient"]], "greater() (in module torch)": [[1175, "torch.greater"]], "greater_equal() (in module torch)": [[1176, "torch.greater_equal"]], "gt() (in module torch)": [[1177, "torch.gt"]], "hamming_window() (in module torch)": [[1178, "torch.hamming_window"]], "hann_window() (in module torch)": [[1179, "torch.hann_window"]], "heaviside() (in module torch)": [[1180, "torch.heaviside"]], "histc() (in module torch)": [[1181, "torch.histc"]], "histogram() (in module torch)": [[1182, "torch.histogram"]], "histogramdd() (in module torch)": [[1183, "torch.histogramdd"]], "hsplit() (in module torch)": [[1184, "torch.hsplit"]], "hspmm() (in module torch)": [[1185, "torch.hspmm"]], "hstack() (in module torch)": [[1186, "torch.hstack"]], "hypot() (in module torch)": [[1187, "torch.hypot"]], "i0() (in module torch)": [[1188, "torch.i0"]], "igamma() (in module torch)": [[1189, "torch.igamma"]], "igammac() (in module torch)": [[1190, "torch.igammac"]], "imag() (in module torch)": [[1191, "torch.imag"]], "index_add() (in module torch)": [[1192, "torch.index_add"]], "index_copy() (in module torch)": [[1193, "torch.index_copy"]], "index_reduce() (in module torch)": [[1194, "torch.index_reduce"]], "index_select() (in module torch)": [[1195, "torch.index_select"]], "inference_mode (class in torch)": [[1196, "torch.inference_mode"]], "initial_seed() (in module torch)": [[1197, "torch.initial_seed"]], "inner() (in module torch)": [[1198, "torch.inner"]], "inverse() (in module torch)": [[1199, "torch.inverse"]], "is_complex() (in module torch)": [[1200, "torch.is_complex"]], "is_conj() (in module torch)": [[1201, "torch.is_conj"]], "is_deterministic_algorithms_warn_only_enabled() (in module torch)": [[1202, "torch.is_deterministic_algorithms_warn_only_enabled"]], "is_floating_point() (in module torch)": [[1203, "torch.is_floating_point"]], "is_grad_enabled() (in module torch)": [[1204, "torch.is_grad_enabled"]], "is_inference_mode_enabled() (in module torch)": [[1205, "torch.is_inference_mode_enabled"]], "is_nonzero() (in module torch)": [[1206, "torch.is_nonzero"]], "is_storage() (in module torch)": [[1207, "torch.is_storage"]], "is_tensor() (in module torch)": [[1208, "torch.is_tensor"]], "is_warn_always_enabled() (in module torch)": [[1209, "torch.is_warn_always_enabled"]], "isclose() (in module torch)": [[1210, "torch.isclose"]], "isfinite() (in module torch)": [[1211, "torch.isfinite"]], "isin() (in module torch)": [[1212, "torch.isin"]], "isinf() (in module torch)": [[1213, "torch.isinf"]], "isnan() (in module torch)": [[1214, "torch.isnan"]], "isneginf() (in module torch)": [[1215, "torch.isneginf"]], "isposinf() (in module torch)": [[1216, "torch.isposinf"]], "isreal() (in module torch)": [[1217, "torch.isreal"]], "istft() (in module torch)": [[1218, "torch.istft"]], "attribute (class in torch.jit)": [[1219, "torch.jit.Attribute"]], "count() (torch.jit.attribute method)": [[1219, "torch.jit.Attribute.count"]], "index() (torch.jit.attribute method)": [[1219, "torch.jit.Attribute.index"]], "type (torch.jit.attribute attribute)": [[1219, "torch.jit.Attribute.type"]], "value (torch.jit.attribute attribute)": [[1219, "torch.jit.Attribute.value"]], "scriptfunction (class in torch.jit)": [[1220, "torch.jit.ScriptFunction"]], "get_debug_state() (torch.jit.scriptfunction method)": [[1220, "torch.jit.ScriptFunction.get_debug_state"]], "save() (torch.jit.scriptfunction method)": [[1220, "torch.jit.ScriptFunction.save"]], "save_to_buffer() (torch.jit.scriptfunction method)": [[1220, "torch.jit.ScriptFunction.save_to_buffer"]], "scriptmodule (class in torch.jit)": [[1221, "torch.jit.ScriptModule"]], "add_module() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.add_module"]], "apply() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.apply"]], "bfloat16() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.bfloat16"]], "buffers() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.buffers"]], "children() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.children"]], "code (torch.jit.scriptmodule property)": [[1221, "torch.jit.ScriptModule.code"]], "code_with_constants (torch.jit.scriptmodule property)": [[1221, "torch.jit.ScriptModule.code_with_constants"]], "compile() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.compile"]], "cpu() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.cpu"]], "cuda() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.cuda"]], "double() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.double"]], "eval() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.eval"]], "extra_repr() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.extra_repr"]], "float() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.float"]], "get_buffer() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.get_buffer"]], "get_extra_state() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.get_extra_state"]], "get_parameter() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.get_parameter"]], "get_submodule() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.get_submodule"]], "graph (torch.jit.scriptmodule property)": [[1221, "torch.jit.ScriptModule.graph"]], "half() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.half"]], "inlined_graph (torch.jit.scriptmodule property)": [[1221, "torch.jit.ScriptModule.inlined_graph"]], "ipu() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.ipu"]], "load_state_dict() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.load_state_dict"]], "modules() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.modules"]], "named_buffers() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.named_buffers"]], "named_children() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.named_children"]], "named_modules() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.named_modules"]], "named_parameters() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.named_parameters"]], "parameters() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.parameters"]], "register_backward_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_backward_hook"]], "register_buffer() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_buffer"]], "register_forward_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_forward_hook"]], "register_forward_pre_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_forward_pre_hook"]], "register_full_backward_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_load_state_dict_post_hook"]], "register_module() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_module"]], "register_parameter() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_parameter"]], "register_state_dict_pre_hook() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.register_state_dict_pre_hook"]], "requires_grad_() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.requires_grad_"]], "save() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.save"]], "set_extra_state() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.set_extra_state"]], "share_memory() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.share_memory"]], "state_dict() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.state_dict"]], "to() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.to"]], "to_empty() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.to_empty"]], "train() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.train"]], "type() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.type"]], "xpu() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.xpu"]], "zero_grad() (torch.jit.scriptmodule method)": [[1221, "torch.jit.ScriptModule.zero_grad"]], "annotate() (in module torch.jit)": [[1222, "torch.jit.annotate"]], "enable_onednn_fusion() (in module torch.jit)": [[1223, "torch.jit.enable_onednn_fusion"]], "fork() (in module torch.jit)": [[1224, "torch.jit.fork"]], "freeze() (in module torch.jit)": [[1225, "torch.jit.freeze"]], "ignore() (in module torch.jit)": [[1226, "torch.jit.ignore"]], "isinstance() (in module torch.jit)": [[1227, "torch.jit.isinstance"]], "load() (in module torch.jit)": [[1228, "torch.jit.load"]], "onednn_fusion_enabled() (in module torch.jit)": [[1229, "torch.jit.onednn_fusion_enabled"]], "optimize_for_inference() (in module torch.jit)": [[1230, "torch.jit.optimize_for_inference"]], "save() (in module torch.jit)": [[1231, "torch.jit.save"]], "script() (in module torch.jit)": [[1232, "torch.jit.script"]], "script_if_tracing() (in module torch.jit)": [[1233, "torch.jit.script_if_tracing"]], "set_fusion_strategy() (in module torch.jit)": [[1234, "torch.jit.set_fusion_strategy"]], "strict_fusion (class in torch.jit)": [[1235, "torch.jit.strict_fusion"]], "trace() (in module torch.jit)": [[1236, "torch.jit.trace"]], "trace_module() (in module torch.jit)": [[1237, "torch.jit.trace_module"]], "unused() (in module torch.jit)": [[1238, "torch.jit.unused"]], "wait() (in module torch.jit)": [[1239, "torch.jit.wait"]], "kaiser_window() (in module torch)": [[1240, "torch.kaiser_window"]], "kron() (in module torch)": [[1241, "torch.kron"]], "kthvalue() (in module torch)": [[1242, "torch.kthvalue"]], "lcm() (in module torch)": [[1243, "torch.lcm"]], "ldexp() (in module torch)": [[1244, "torch.ldexp"]], "le() (in module torch)": [[1245, "torch.le"]], "lerp() (in module torch)": [[1246, "torch.lerp"]], "less() (in module torch)": [[1247, "torch.less"]], "less_equal() (in module torch)": [[1248, "torch.less_equal"]], "lgamma() (in module torch)": [[1249, "torch.lgamma"]], "cholesky() (in module torch.linalg)": [[1250, "torch.linalg.cholesky"]], "cholesky_ex() (in module torch.linalg)": [[1251, "torch.linalg.cholesky_ex"]], "cond() (in module torch.linalg)": [[1252, "torch.linalg.cond"]], "cross() (in module torch.linalg)": [[1253, "torch.linalg.cross"]], "det() (in module torch.linalg)": [[1254, "torch.linalg.det"]], "diagonal() (in module torch.linalg)": [[1255, "torch.linalg.diagonal"]], "eig() (in module torch.linalg)": [[1256, "torch.linalg.eig"]], "eigh() (in module torch.linalg)": [[1257, "torch.linalg.eigh"]], "eigvals() (in module torch.linalg)": [[1258, "torch.linalg.eigvals"]], "eigvalsh() (in module torch.linalg)": [[1259, "torch.linalg.eigvalsh"]], "householder_product() (in module torch.linalg)": [[1260, "torch.linalg.householder_product"]], "inv() (in module torch.linalg)": [[1261, "torch.linalg.inv"]], "inv_ex() (in module torch.linalg)": [[1262, "torch.linalg.inv_ex"]], "ldl_factor() (in module torch.linalg)": [[1263, "torch.linalg.ldl_factor"]], "ldl_factor_ex() (in module torch.linalg)": [[1264, "torch.linalg.ldl_factor_ex"]], "ldl_solve() (in module torch.linalg)": [[1265, "torch.linalg.ldl_solve"]], "lstsq() (in module torch.linalg)": [[1266, "torch.linalg.lstsq"]], "lu() (in module torch.linalg)": [[1267, "torch.linalg.lu"]], "lu_factor() (in module torch.linalg)": [[1268, "torch.linalg.lu_factor"]], "lu_factor_ex() (in module torch.linalg)": [[1269, "torch.linalg.lu_factor_ex"]], "lu_solve() (in module torch.linalg)": [[1270, "torch.linalg.lu_solve"]], "matmul() (in module torch.linalg)": [[1271, "torch.linalg.matmul"]], "matrix_exp() (in module torch.linalg)": [[1272, "torch.linalg.matrix_exp"]], "matrix_norm() (in module torch.linalg)": [[1273, "torch.linalg.matrix_norm"]], "matrix_power() (in module torch.linalg)": [[1274, "torch.linalg.matrix_power"]], "matrix_rank() (in module torch.linalg)": [[1275, "torch.linalg.matrix_rank"]], "multi_dot() (in module torch.linalg)": [[1276, "torch.linalg.multi_dot"]], "norm() (in module torch.linalg)": [[1277, "torch.linalg.norm"]], "pinv() (in module torch.linalg)": [[1278, "torch.linalg.pinv"]], "qr() (in module torch.linalg)": [[1279, "torch.linalg.qr"]], "slogdet() (in module torch.linalg)": [[1280, "torch.linalg.slogdet"]], "solve() (in module torch.linalg)": [[1281, "torch.linalg.solve"]], "solve_ex() (in module torch.linalg)": [[1282, "torch.linalg.solve_ex"]], "solve_triangular() (in module torch.linalg)": [[1283, "torch.linalg.solve_triangular"]], "svd() (in module torch.linalg)": [[1284, "torch.linalg.svd"]], "svdvals() (in module torch.linalg)": [[1285, "torch.linalg.svdvals"]], "tensorinv() (in module torch.linalg)": [[1286, "torch.linalg.tensorinv"]], "tensorsolve() (in module torch.linalg)": [[1287, "torch.linalg.tensorsolve"]], "vander() (in module torch.linalg)": [[1288, "torch.linalg.vander"]], "vecdot() (in module torch.linalg)": [[1289, "torch.linalg.vecdot"]], "vector_norm() (in module torch.linalg)": [[1290, "torch.linalg.vector_norm"]], "linspace() (in module torch)": [[1291, "torch.linspace"]], "load() (in module torch)": [[1292, "torch.load"]], "lobpcg() (in module torch)": [[1293, "torch.lobpcg"]], "log() (in module torch)": [[1294, "torch.log"]], "log10() (in module torch)": [[1295, "torch.log10"]], "log1p() (in module torch)": [[1296, "torch.log1p"]], "log2() (in module torch)": [[1297, "torch.log2"]], "logaddexp() (in module torch)": [[1298, "torch.logaddexp"]], "logaddexp2() (in module torch)": [[1299, "torch.logaddexp2"]], "logcumsumexp() (in module torch)": [[1300, "torch.logcumsumexp"]], "logdet() (in module torch)": [[1301, "torch.logdet"]], "logical_and() (in module torch)": [[1302, "torch.logical_and"]], "logical_not() (in module torch)": [[1303, "torch.logical_not"]], "logical_or() (in module torch)": [[1304, "torch.logical_or"]], "logical_xor() (in module torch)": [[1305, "torch.logical_xor"]], "logit() (in module torch)": [[1306, "torch.logit"]], "logspace() (in module torch)": [[1307, "torch.logspace"]], "logsumexp() (in module torch)": [[1308, "torch.logsumexp"]], "lt() (in module torch)": [[1309, "torch.lt"]], "lu() (in module torch)": [[1310, "torch.lu"]], "lu_solve() (in module torch)": [[1311, "torch.lu_solve"]], "lu_unpack() (in module torch)": [[1312, "torch.lu_unpack"]], "manual_seed() (in module torch)": [[1313, "torch.manual_seed"]], "masked_select() (in module torch)": [[1314, "torch.masked_select"]], "matmul() (in module torch)": [[1315, "torch.matmul"]], "matrix_exp() (in module torch)": [[1316, "torch.matrix_exp"]], "matrix_power() (in module torch)": [[1317, "torch.matrix_power"]], "max() (in module torch)": [[1318, "torch.max"]], "maximum() (in module torch)": [[1319, "torch.maximum"]], "mean() (in module torch)": [[1320, "torch.mean"]], "median() (in module torch)": [[1321, "torch.median"]], "meshgrid() (in module torch)": [[1322, "torch.meshgrid"]], "min() (in module torch)": [[1323, "torch.min"]], "minimum() (in module torch)": [[1324, "torch.minimum"]], "mm() (in module torch)": [[1325, "torch.mm"]], "mode() (in module torch)": [[1326, "torch.mode"]], "moveaxis() (in module torch)": [[1327, "torch.moveaxis"]], "movedim() (in module torch)": [[1328, "torch.movedim"]], "current_allocated_memory() (in module torch.mps)": [[1329, "torch.mps.current_allocated_memory"]], "driver_allocated_memory() (in module torch.mps)": [[1330, "torch.mps.driver_allocated_memory"]], "empty_cache() (in module torch.mps)": [[1331, "torch.mps.empty_cache"]], "get_rng_state() (in module torch.mps)": [[1332, "torch.mps.get_rng_state"]], "manual_seed() (in module torch.mps)": [[1333, "torch.mps.manual_seed"]], "profile() (in module torch.mps.profiler)": [[1334, "torch.mps.profiler.profile"]], "start() (in module torch.mps.profiler)": [[1335, "torch.mps.profiler.start"]], "stop() (in module torch.mps.profiler)": [[1336, "torch.mps.profiler.stop"]], "seed() (in module torch.mps)": [[1337, "torch.mps.seed"]], "set_per_process_memory_fraction() (in module torch.mps)": [[1338, "torch.mps.set_per_process_memory_fraction"]], "set_rng_state() (in module torch.mps)": [[1339, "torch.mps.set_rng_state"]], "synchronize() (in module torch.mps)": [[1340, "torch.mps.synchronize"]], "msort() (in module torch)": [[1341, "torch.msort"]], "mul() (in module torch)": [[1342, "torch.mul"]], "multinomial() (in module torch)": [[1343, "torch.multinomial"]], "multiply() (in module torch)": [[1344, "torch.multiply"]], "mv() (in module torch)": [[1345, "torch.mv"]], "mvlgamma() (in module torch)": [[1346, "torch.mvlgamma"]], "nan_to_num() (in module torch)": [[1347, "torch.nan_to_num"]], "nanmean() (in module torch)": [[1348, "torch.nanmean"]], "nanmedian() (in module torch)": [[1349, "torch.nanmedian"]], "nanquantile() (in module torch)": [[1350, "torch.nanquantile"]], "nansum() (in module torch)": [[1351, "torch.nansum"]], "narrow() (in module torch)": [[1352, "torch.narrow"]], "narrow_copy() (in module torch)": [[1353, "torch.narrow_copy"]], "ne() (in module torch)": [[1354, "torch.ne"]], "neg() (in module torch)": [[1355, "torch.neg"]], "negative() (in module torch)": [[1356, "torch.negative"]], "nextafter() (in module torch)": [[1357, "torch.nextafter"]], "adaptiveavgpool1d (class in torch.nn)": [[1358, "torch.nn.AdaptiveAvgPool1d"]], "adaptiveavgpool2d (class in torch.nn)": [[1359, "torch.nn.AdaptiveAvgPool2d"]], "adaptiveavgpool3d (class in torch.nn)": [[1360, "torch.nn.AdaptiveAvgPool3d"]], "adaptivelogsoftmaxwithloss (class in torch.nn)": [[1361, "torch.nn.AdaptiveLogSoftmaxWithLoss"]], "log_prob() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1361, "torch.nn.AdaptiveLogSoftmaxWithLoss.log_prob"]], "predict() (torch.nn.adaptivelogsoftmaxwithloss method)": [[1361, "torch.nn.AdaptiveLogSoftmaxWithLoss.predict"]], "adaptivemaxpool1d (class in torch.nn)": [[1362, "torch.nn.AdaptiveMaxPool1d"]], "adaptivemaxpool2d (class in torch.nn)": [[1363, "torch.nn.AdaptiveMaxPool2d"]], "adaptivemaxpool3d (class in torch.nn)": [[1364, "torch.nn.AdaptiveMaxPool3d"]], "alphadropout (class in torch.nn)": [[1365, "torch.nn.AlphaDropout"]], "avgpool1d (class in torch.nn)": [[1366, "torch.nn.AvgPool1d"]], "avgpool2d (class in torch.nn)": [[1367, "torch.nn.AvgPool2d"]], "avgpool3d (class in torch.nn)": [[1368, "torch.nn.AvgPool3d"]], "bceloss (class in torch.nn)": [[1369, "torch.nn.BCELoss"]], "bcewithlogitsloss (class in torch.nn)": [[1370, "torch.nn.BCEWithLogitsLoss"]], "batchnorm1d (class in torch.nn)": [[1371, "torch.nn.BatchNorm1d"]], "batchnorm2d (class in torch.nn)": [[1372, "torch.nn.BatchNorm2d"]], "batchnorm3d (class in torch.nn)": [[1373, "torch.nn.BatchNorm3d"]], "bilinear (class in torch.nn)": [[1374, "torch.nn.Bilinear"]], "celu (class in torch.nn)": [[1375, "torch.nn.CELU"]], "ctcloss (class in torch.nn)": [[1376, "torch.nn.CTCLoss"]], "channelshuffle (class in torch.nn)": [[1377, "torch.nn.ChannelShuffle"]], "constantpad1d (class in torch.nn)": [[1378, "torch.nn.ConstantPad1d"]], "constantpad2d (class in torch.nn)": [[1379, "torch.nn.ConstantPad2d"]], "constantpad3d (class in torch.nn)": [[1380, "torch.nn.ConstantPad3d"]], "conv1d (class in torch.nn)": [[1381, "torch.nn.Conv1d"]], "conv2d (class in torch.nn)": [[1382, "torch.nn.Conv2d"]], "conv3d (class in torch.nn)": [[1383, "torch.nn.Conv3d"]], "convtranspose1d (class in torch.nn)": [[1384, "torch.nn.ConvTranspose1d"]], "convtranspose2d (class in torch.nn)": [[1385, "torch.nn.ConvTranspose2d"]], "convtranspose3d (class in torch.nn)": [[1386, "torch.nn.ConvTranspose3d"]], "cosineembeddingloss (class in torch.nn)": [[1387, "torch.nn.CosineEmbeddingLoss"]], "cosinesimilarity (class in torch.nn)": [[1388, "torch.nn.CosineSimilarity"]], "crossentropyloss (class in torch.nn)": [[1389, "torch.nn.CrossEntropyLoss"]], "dataparallel (class in torch.nn)": [[1390, "torch.nn.DataParallel"]], "dropout (class in torch.nn)": [[1391, "torch.nn.Dropout"]], "dropout1d (class in torch.nn)": [[1392, "torch.nn.Dropout1d"]], "dropout2d (class in torch.nn)": [[1393, "torch.nn.Dropout2d"]], "dropout3d (class in torch.nn)": [[1394, "torch.nn.Dropout3d"]], "elu (class in torch.nn)": [[1395, "torch.nn.ELU"]], "embedding (class in torch.nn)": [[1396, "torch.nn.Embedding"]], "from_pretrained() (torch.nn.embedding class method)": [[1396, "torch.nn.Embedding.from_pretrained"]], "embeddingbag (class in torch.nn)": [[1397, "torch.nn.EmbeddingBag"]], "forward() (torch.nn.embeddingbag method)": [[1397, "torch.nn.EmbeddingBag.forward"]], "from_pretrained() (torch.nn.embeddingbag class method)": [[1397, "torch.nn.EmbeddingBag.from_pretrained"]], "featurealphadropout (class in torch.nn)": [[1398, "torch.nn.FeatureAlphaDropout"]], "flatten (class in torch.nn)": [[1399, "torch.nn.Flatten"]], "fold (class in torch.nn)": [[1400, "torch.nn.Fold"]], "fractionalmaxpool2d (class in torch.nn)": [[1401, "torch.nn.FractionalMaxPool2d"]], "fractionalmaxpool3d (class in torch.nn)": [[1402, "torch.nn.FractionalMaxPool3d"]], "gelu (class in torch.nn)": [[1403, "torch.nn.GELU"]], "glu (class in torch.nn)": [[1404, "torch.nn.GLU"]], "gru (class in torch.nn)": [[1405, "torch.nn.GRU"]], "grucell (class in torch.nn)": [[1406, "torch.nn.GRUCell"]], "gaussiannllloss (class in torch.nn)": [[1407, "torch.nn.GaussianNLLLoss"]], "groupnorm (class in torch.nn)": [[1408, "torch.nn.GroupNorm"]], "hardshrink (class in torch.nn)": [[1409, "torch.nn.Hardshrink"]], "hardsigmoid (class in torch.nn)": [[1410, "torch.nn.Hardsigmoid"]], "hardswish (class in torch.nn)": [[1411, "torch.nn.Hardswish"]], "hardtanh (class in torch.nn)": [[1412, "torch.nn.Hardtanh"]], "hingeembeddingloss (class in torch.nn)": [[1413, "torch.nn.HingeEmbeddingLoss"]], "huberloss (class in torch.nn)": [[1414, "torch.nn.HuberLoss"]], "identity (class in torch.nn)": [[1415, "torch.nn.Identity"]], "instancenorm1d (class in torch.nn)": [[1416, "torch.nn.InstanceNorm1d"]], "instancenorm2d (class in torch.nn)": [[1417, "torch.nn.InstanceNorm2d"]], "instancenorm3d (class in torch.nn)": [[1418, "torch.nn.InstanceNorm3d"]], "kldivloss (class in torch.nn)": [[1419, "torch.nn.KLDivLoss"]], "l1loss (class in torch.nn)": [[1420, "torch.nn.L1Loss"]], "lppool1d (class in torch.nn)": [[1421, "torch.nn.LPPool1d"]], "lppool2d (class in torch.nn)": [[1422, "torch.nn.LPPool2d"]], "lstm (class in torch.nn)": [[1423, "torch.nn.LSTM"]], "lstmcell (class in torch.nn)": [[1424, "torch.nn.LSTMCell"]], "layernorm (class in torch.nn)": [[1425, "torch.nn.LayerNorm"]], "lazybatchnorm1d (class in torch.nn)": [[1426, "torch.nn.LazyBatchNorm1d"]], "cls_to_become (torch.nn.lazybatchnorm1d attribute)": [[1426, "torch.nn.LazyBatchNorm1d.cls_to_become"]], "lazybatchnorm2d (class in torch.nn)": [[1427, "torch.nn.LazyBatchNorm2d"]], "cls_to_become (torch.nn.lazybatchnorm2d attribute)": [[1427, "torch.nn.LazyBatchNorm2d.cls_to_become"]], "lazybatchnorm3d (class in torch.nn)": [[1428, "torch.nn.LazyBatchNorm3d"]], "cls_to_become (torch.nn.lazybatchnorm3d attribute)": [[1428, "torch.nn.LazyBatchNorm3d.cls_to_become"]], "lazyconv1d (class in torch.nn)": [[1429, "torch.nn.LazyConv1d"]], "cls_to_become (torch.nn.lazyconv1d attribute)": [[1429, "torch.nn.LazyConv1d.cls_to_become"]], "lazyconv2d (class in torch.nn)": [[1430, "torch.nn.LazyConv2d"]], "cls_to_become (torch.nn.lazyconv2d attribute)": [[1430, "torch.nn.LazyConv2d.cls_to_become"]], "lazyconv3d (class in torch.nn)": [[1431, "torch.nn.LazyConv3d"]], "cls_to_become (torch.nn.lazyconv3d attribute)": [[1431, "torch.nn.LazyConv3d.cls_to_become"]], "lazyconvtranspose1d (class in torch.nn)": [[1432, "torch.nn.LazyConvTranspose1d"]], "cls_to_become (torch.nn.lazyconvtranspose1d attribute)": [[1432, "torch.nn.LazyConvTranspose1d.cls_to_become"]], "lazyconvtranspose2d (class in torch.nn)": [[1433, "torch.nn.LazyConvTranspose2d"]], "cls_to_become (torch.nn.lazyconvtranspose2d attribute)": [[1433, "torch.nn.LazyConvTranspose2d.cls_to_become"]], "lazyconvtranspose3d (class in torch.nn)": [[1434, "torch.nn.LazyConvTranspose3d"]], "cls_to_become (torch.nn.lazyconvtranspose3d attribute)": [[1434, "torch.nn.LazyConvTranspose3d.cls_to_become"]], "lazyinstancenorm1d (class in torch.nn)": [[1435, "torch.nn.LazyInstanceNorm1d"]], "cls_to_become (torch.nn.lazyinstancenorm1d attribute)": [[1435, "torch.nn.LazyInstanceNorm1d.cls_to_become"]], "lazyinstancenorm2d (class in torch.nn)": [[1436, "torch.nn.LazyInstanceNorm2d"]], "cls_to_become (torch.nn.lazyinstancenorm2d attribute)": [[1436, "torch.nn.LazyInstanceNorm2d.cls_to_become"]], "lazyinstancenorm3d (class in torch.nn)": [[1437, "torch.nn.LazyInstanceNorm3d"]], "cls_to_become (torch.nn.lazyinstancenorm3d attribute)": [[1437, "torch.nn.LazyInstanceNorm3d.cls_to_become"]], "lazylinear (class in torch.nn)": [[1438, "torch.nn.LazyLinear"]], "cls_to_become (torch.nn.lazylinear attribute)": [[1438, "torch.nn.LazyLinear.cls_to_become"]], "leakyrelu (class in torch.nn)": [[1439, "torch.nn.LeakyReLU"]], "linear (class in torch.nn)": [[1440, "torch.nn.Linear"]], "localresponsenorm (class in torch.nn)": [[1441, "torch.nn.LocalResponseNorm"]], "logsigmoid (class in torch.nn)": [[1442, "torch.nn.LogSigmoid"]], "logsoftmax (class in torch.nn)": [[1443, "torch.nn.LogSoftmax"]], "mseloss (class in torch.nn)": [[1444, "torch.nn.MSELoss"]], "marginrankingloss (class in torch.nn)": [[1445, "torch.nn.MarginRankingLoss"]], "maxpool1d (class in torch.nn)": [[1446, "torch.nn.MaxPool1d"]], "maxpool2d (class in torch.nn)": [[1447, "torch.nn.MaxPool2d"]], "maxpool3d (class in torch.nn)": [[1448, "torch.nn.MaxPool3d"]], "maxunpool1d (class in torch.nn)": [[1449, "torch.nn.MaxUnpool1d"]], "maxunpool2d (class in torch.nn)": [[1450, "torch.nn.MaxUnpool2d"]], "maxunpool3d (class in torch.nn)": [[1451, "torch.nn.MaxUnpool3d"]], "mish (class in torch.nn)": [[1452, "torch.nn.Mish"]], "module (class in torch.nn)": [[1453, "torch.nn.Module"]], "add_module() (torch.nn.module method)": [[1453, "torch.nn.Module.add_module"]], "apply() (torch.nn.module method)": [[1453, "torch.nn.Module.apply"]], "bfloat16() (torch.nn.module method)": [[1453, "torch.nn.Module.bfloat16"]], "buffers() (torch.nn.module method)": [[1453, "torch.nn.Module.buffers"]], "children() (torch.nn.module method)": [[1453, "torch.nn.Module.children"]], "compile() (torch.nn.module method)": [[1453, "torch.nn.Module.compile"]], "cpu() (torch.nn.module method)": [[1453, "torch.nn.Module.cpu"]], "cuda() (torch.nn.module method)": [[1453, "torch.nn.Module.cuda"]], "double() (torch.nn.module method)": [[1453, "torch.nn.Module.double"]], "eval() (torch.nn.module method)": [[1453, "torch.nn.Module.eval"]], "extra_repr() (torch.nn.module method)": [[1453, "torch.nn.Module.extra_repr"]], "float() (torch.nn.module method)": [[1453, "torch.nn.Module.float"]], "forward() (torch.nn.module method)": [[1453, "torch.nn.Module.forward"]], "get_buffer() (torch.nn.module method)": [[1453, "torch.nn.Module.get_buffer"]], "get_extra_state() (torch.nn.module method)": [[1453, "torch.nn.Module.get_extra_state"]], "get_parameter() (torch.nn.module method)": [[1453, "torch.nn.Module.get_parameter"]], "get_submodule() (torch.nn.module method)": [[1453, "torch.nn.Module.get_submodule"]], "half() (torch.nn.module method)": [[1453, "torch.nn.Module.half"]], "ipu() (torch.nn.module method)": [[1453, "torch.nn.Module.ipu"]], "load_state_dict() (torch.nn.module method)": [[1453, "torch.nn.Module.load_state_dict"]], "modules() (torch.nn.module method)": [[1453, "torch.nn.Module.modules"]], "named_buffers() (torch.nn.module method)": [[1453, "torch.nn.Module.named_buffers"]], "named_children() (torch.nn.module method)": [[1453, "torch.nn.Module.named_children"]], "named_modules() (torch.nn.module method)": [[1453, "torch.nn.Module.named_modules"]], "named_parameters() (torch.nn.module method)": [[1453, "torch.nn.Module.named_parameters"]], "parameters() (torch.nn.module method)": [[1453, "torch.nn.Module.parameters"]], "register_backward_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_backward_hook"]], "register_buffer() (torch.nn.module method)": [[1453, "torch.nn.Module.register_buffer"]], "register_forward_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_forward_hook"]], "register_forward_pre_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_forward_pre_hook"]], "register_full_backward_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_full_backward_hook"]], "register_full_backward_pre_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_full_backward_pre_hook"]], "register_load_state_dict_post_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_load_state_dict_post_hook"]], "register_module() (torch.nn.module method)": [[1453, "torch.nn.Module.register_module"]], "register_parameter() (torch.nn.module method)": [[1453, "torch.nn.Module.register_parameter"]], "register_state_dict_pre_hook() (torch.nn.module method)": [[1453, "torch.nn.Module.register_state_dict_pre_hook"]], "requires_grad_() (torch.nn.module method)": [[1453, "torch.nn.Module.requires_grad_"]], "set_extra_state() (torch.nn.module method)": [[1453, "torch.nn.Module.set_extra_state"]], "share_memory() (torch.nn.module method)": [[1453, "torch.nn.Module.share_memory"]], "state_dict() (torch.nn.module method)": [[1453, "torch.nn.Module.state_dict"]], "to() (torch.nn.module method)": [[1453, "torch.nn.Module.to"]], "to_empty() (torch.nn.module method)": [[1453, "torch.nn.Module.to_empty"]], "train() (torch.nn.module method)": [[1453, "torch.nn.Module.train"]], "type() (torch.nn.module method)": [[1453, "torch.nn.Module.type"]], "xpu() (torch.nn.module method)": [[1453, "torch.nn.Module.xpu"]], "zero_grad() (torch.nn.module method)": [[1453, "torch.nn.Module.zero_grad"]], "moduledict (class in torch.nn)": [[1454, "torch.nn.ModuleDict"]], "clear() (torch.nn.moduledict method)": [[1454, "torch.nn.ModuleDict.clear"]], "items() (torch.nn.moduledict method)": [[1454, "torch.nn.ModuleDict.items"]], "keys() (torch.nn.moduledict method)": [[1454, "torch.nn.ModuleDict.keys"]], "pop() (torch.nn.moduledict method)": [[1454, "torch.nn.ModuleDict.pop"]], "update() (torch.nn.moduledict method)": [[1454, "torch.nn.ModuleDict.update"]], "values() (torch.nn.moduledict method)": [[1454, "torch.nn.ModuleDict.values"]], "modulelist (class in torch.nn)": [[1455, "torch.nn.ModuleList"]], "append() (torch.nn.modulelist method)": [[1455, "torch.nn.ModuleList.append"]], "extend() (torch.nn.modulelist method)": [[1455, "torch.nn.ModuleList.extend"]], "insert() (torch.nn.modulelist method)": [[1455, "torch.nn.ModuleList.insert"]], "multilabelmarginloss (class in torch.nn)": [[1456, "torch.nn.MultiLabelMarginLoss"]], "multilabelsoftmarginloss (class in torch.nn)": [[1457, "torch.nn.MultiLabelSoftMarginLoss"]], "multimarginloss (class in torch.nn)": [[1458, "torch.nn.MultiMarginLoss"]], "multiheadattention (class in torch.nn)": [[1459, "torch.nn.MultiheadAttention"]], "forward() (torch.nn.multiheadattention method)": [[1459, "torch.nn.MultiheadAttention.forward"]], "merge_masks() (torch.nn.multiheadattention method)": [[1459, "torch.nn.MultiheadAttention.merge_masks"]], "nllloss (class in torch.nn)": [[1460, "torch.nn.NLLLoss"]], "prelu (class in torch.nn)": [[1461, "torch.nn.PReLU"]], "pairwisedistance (class in torch.nn)": [[1462, "torch.nn.PairwiseDistance"]], "parameterdict (class in torch.nn)": [[1463, "torch.nn.ParameterDict"]], "clear() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.clear"]], "copy() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.copy"]], "fromkeys() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.fromkeys"]], "get() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.get"]], "items() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.items"]], "keys() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.keys"]], "pop() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.pop"]], "popitem() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.popitem"]], "setdefault() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.setdefault"]], "update() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.update"]], "values() (torch.nn.parameterdict method)": [[1463, "torch.nn.ParameterDict.values"]], "parameterlist (class in torch.nn)": [[1464, "torch.nn.ParameterList"]], "append() (torch.nn.parameterlist method)": [[1464, "torch.nn.ParameterList.append"]], "extend() (torch.nn.parameterlist method)": [[1464, "torch.nn.ParameterList.extend"]], "pixelshuffle (class in torch.nn)": [[1465, "torch.nn.PixelShuffle"]], "pixelunshuffle (class in torch.nn)": [[1466, "torch.nn.PixelUnshuffle"]], "poissonnllloss (class in torch.nn)": [[1467, "torch.nn.PoissonNLLLoss"]], "rnn (class in torch.nn)": [[1468, "torch.nn.RNN"]], "rnnbase (class in torch.nn)": [[1469, "torch.nn.RNNBase"]], "flatten_parameters() (torch.nn.rnnbase method)": [[1469, "torch.nn.RNNBase.flatten_parameters"]], "rnncell (class in torch.nn)": [[1470, "torch.nn.RNNCell"]], "rrelu (class in torch.nn)": [[1471, "torch.nn.RReLU"]], "relu (class in torch.nn)": [[1472, "torch.nn.ReLU"]], "relu6 (class in torch.nn)": [[1473, "torch.nn.ReLU6"]], "reflectionpad1d (class in torch.nn)": [[1474, "torch.nn.ReflectionPad1d"]], "reflectionpad2d (class in torch.nn)": [[1475, "torch.nn.ReflectionPad2d"]], "reflectionpad3d (class in torch.nn)": [[1476, "torch.nn.ReflectionPad3d"]], "replicationpad1d (class in torch.nn)": [[1477, "torch.nn.ReplicationPad1d"]], "replicationpad2d (class in torch.nn)": [[1478, "torch.nn.ReplicationPad2d"]], "replicationpad3d (class in torch.nn)": [[1479, "torch.nn.ReplicationPad3d"]], "selu (class in torch.nn)": [[1480, "torch.nn.SELU"]], "sequential (class in torch.nn)": [[1481, "torch.nn.Sequential"]], "append() (torch.nn.sequential method)": [[1481, "torch.nn.Sequential.append"]], "silu (class in torch.nn)": [[1482, "torch.nn.SiLU"]], "sigmoid (class in torch.nn)": [[1483, "torch.nn.Sigmoid"]], "smoothl1loss (class in torch.nn)": [[1484, "torch.nn.SmoothL1Loss"]], "softmarginloss (class in torch.nn)": [[1485, "torch.nn.SoftMarginLoss"]], "softmax (class in torch.nn)": [[1486, "torch.nn.Softmax"]], "softmax2d (class in torch.nn)": [[1487, "torch.nn.Softmax2d"]], "softmin (class in torch.nn)": [[1488, "torch.nn.Softmin"]], "softplus (class in torch.nn)": [[1489, "torch.nn.Softplus"]], "softshrink (class in torch.nn)": [[1490, "torch.nn.Softshrink"]], "softsign (class in torch.nn)": [[1491, "torch.nn.Softsign"]], "syncbatchnorm (class in torch.nn)": [[1492, "torch.nn.SyncBatchNorm"]], "convert_sync_batchnorm() (torch.nn.syncbatchnorm class method)": [[1492, "torch.nn.SyncBatchNorm.convert_sync_batchnorm"]], "tanh (class in torch.nn)": [[1493, "torch.nn.Tanh"]], "tanhshrink (class in torch.nn)": [[1494, "torch.nn.Tanhshrink"]], "threshold (class in torch.nn)": [[1495, "torch.nn.Threshold"]], "transformer (class in torch.nn)": [[1496, "torch.nn.Transformer"]], "forward() (torch.nn.transformer method)": [[1496, "torch.nn.Transformer.forward"]], "generate_square_subsequent_mask() (torch.nn.transformer static method)": [[1496, "torch.nn.Transformer.generate_square_subsequent_mask"]], "transformerdecoder (class in torch.nn)": [[1497, "torch.nn.TransformerDecoder"]], "forward() (torch.nn.transformerdecoder method)": [[1497, "torch.nn.TransformerDecoder.forward"]], "transformerdecoderlayer (class in torch.nn)": [[1498, "torch.nn.TransformerDecoderLayer"]], "forward() (torch.nn.transformerdecoderlayer method)": [[1498, "torch.nn.TransformerDecoderLayer.forward"]], "transformerencoder (class in torch.nn)": [[1499, "torch.nn.TransformerEncoder"]], "forward() (torch.nn.transformerencoder method)": [[1499, "torch.nn.TransformerEncoder.forward"]], "transformerencoderlayer (class in torch.nn)": [[1500, "torch.nn.TransformerEncoderLayer"]], "forward() (torch.nn.transformerencoderlayer method)": [[1500, "torch.nn.TransformerEncoderLayer.forward"]], "tripletmarginloss (class in torch.nn)": [[1501, "torch.nn.TripletMarginLoss"]], "tripletmarginwithdistanceloss (class in torch.nn)": [[1502, "torch.nn.TripletMarginWithDistanceLoss"]], "unflatten (class in torch.nn)": [[1503, "torch.nn.Unflatten"]], "unfold (class in torch.nn)": [[1504, "torch.nn.Unfold"]], "upsample (class in torch.nn)": [[1505, "torch.nn.Upsample"]], "upsamplingbilinear2d (class in torch.nn)": [[1506, "torch.nn.UpsamplingBilinear2d"]], "upsamplingnearest2d (class in torch.nn)": [[1507, "torch.nn.UpsamplingNearest2d"]], "zeropad1d (class in torch.nn)": [[1508, "torch.nn.ZeroPad1d"]], "zeropad2d (class in torch.nn)": [[1509, "torch.nn.ZeroPad2d"]], "zeropad3d (class in torch.nn)": [[1510, "torch.nn.ZeroPad3d"]], "adaptive_avg_pool1d() (in module torch.nn.functional)": [[1511, "torch.nn.functional.adaptive_avg_pool1d"]], "adaptive_avg_pool2d() (in module torch.nn.functional)": [[1512, "torch.nn.functional.adaptive_avg_pool2d"]], "adaptive_avg_pool3d() (in module torch.nn.functional)": [[1513, "torch.nn.functional.adaptive_avg_pool3d"]], "adaptive_max_pool1d() (in module torch.nn.functional)": [[1514, "torch.nn.functional.adaptive_max_pool1d"]], "adaptive_max_pool2d() (in module torch.nn.functional)": [[1515, "torch.nn.functional.adaptive_max_pool2d"]], "adaptive_max_pool3d() (in module torch.nn.functional)": [[1516, "torch.nn.functional.adaptive_max_pool3d"]], "affine_grid() (in module torch.nn.functional)": [[1517, "torch.nn.functional.affine_grid"]], "alpha_dropout() (in module torch.nn.functional)": [[1518, "torch.nn.functional.alpha_dropout"]], "avg_pool1d() (in module torch.nn.functional)": [[1519, "torch.nn.functional.avg_pool1d"]], "avg_pool2d() (in module torch.nn.functional)": [[1520, "torch.nn.functional.avg_pool2d"]], "avg_pool3d() (in module torch.nn.functional)": [[1521, "torch.nn.functional.avg_pool3d"]], "batch_norm() (in module torch.nn.functional)": [[1522, "torch.nn.functional.batch_norm"]], "bilinear() (in module torch.nn.functional)": [[1523, "torch.nn.functional.bilinear"]], "binary_cross_entropy() (in module torch.nn.functional)": [[1524, "torch.nn.functional.binary_cross_entropy"]], "binary_cross_entropy_with_logits() (in module torch.nn.functional)": [[1525, "torch.nn.functional.binary_cross_entropy_with_logits"]], "celu() (in module torch.nn.functional)": [[1526, "torch.nn.functional.celu"]], "conv1d() (in module torch.nn.functional)": [[1527, "torch.nn.functional.conv1d"]], "conv2d() (in module torch.nn.functional)": [[1528, "torch.nn.functional.conv2d"]], "conv3d() (in module torch.nn.functional)": [[1529, "torch.nn.functional.conv3d"]], "conv_transpose1d() (in module torch.nn.functional)": [[1530, "torch.nn.functional.conv_transpose1d"]], "conv_transpose2d() (in module torch.nn.functional)": [[1531, "torch.nn.functional.conv_transpose2d"]], "conv_transpose3d() (in module torch.nn.functional)": [[1532, "torch.nn.functional.conv_transpose3d"]], "cosine_embedding_loss() (in module torch.nn.functional)": [[1533, "torch.nn.functional.cosine_embedding_loss"]], "cosine_similarity() (in module torch.nn.functional)": [[1534, "torch.nn.functional.cosine_similarity"]], "cross_entropy() (in module torch.nn.functional)": [[1535, "torch.nn.functional.cross_entropy"]], "ctc_loss() (in module torch.nn.functional)": [[1536, "torch.nn.functional.ctc_loss"]], "dropout() (in module torch.nn.functional)": [[1537, "torch.nn.functional.dropout"]], "dropout1d() (in module torch.nn.functional)": [[1538, "torch.nn.functional.dropout1d"]], "dropout2d() (in module torch.nn.functional)": [[1539, "torch.nn.functional.dropout2d"]], "dropout3d() (in module torch.nn.functional)": [[1540, "torch.nn.functional.dropout3d"]], "elu() (in module torch.nn.functional)": [[1541, "torch.nn.functional.elu"]], "elu_() (in module torch.nn.functional)": [[1542, "torch.nn.functional.elu_"]], "embedding() (in module torch.nn.functional)": [[1543, "torch.nn.functional.embedding"]], "embedding_bag() (in module torch.nn.functional)": [[1544, "torch.nn.functional.embedding_bag"]], "feature_alpha_dropout() (in module torch.nn.functional)": [[1545, "torch.nn.functional.feature_alpha_dropout"]], "fold() (in module torch.nn.functional)": [[1546, "torch.nn.functional.fold"]], "fractional_max_pool2d() (in module torch.nn.functional)": [[1547, "torch.nn.functional.fractional_max_pool2d"]], "fractional_max_pool3d() (in module torch.nn.functional)": [[1548, "torch.nn.functional.fractional_max_pool3d"]], "gaussian_nll_loss() (in module torch.nn.functional)": [[1549, "torch.nn.functional.gaussian_nll_loss"]], "gelu() (in module torch.nn.functional)": [[1550, "torch.nn.functional.gelu"]], "glu() (in module torch.nn.functional)": [[1551, "torch.nn.functional.glu"]], "grid_sample() (in module torch.nn.functional)": [[1552, "torch.nn.functional.grid_sample"]], "group_norm() (in module torch.nn.functional)": [[1553, "torch.nn.functional.group_norm"]], "gumbel_softmax() (in module torch.nn.functional)": [[1554, "torch.nn.functional.gumbel_softmax"]], "hardshrink() (in module torch.nn.functional)": [[1555, "torch.nn.functional.hardshrink"]], "hardsigmoid() (in module torch.nn.functional)": [[1556, "torch.nn.functional.hardsigmoid"]], "hardswish() (in module torch.nn.functional)": [[1557, "torch.nn.functional.hardswish"]], "hardtanh() (in module torch.nn.functional)": [[1558, "torch.nn.functional.hardtanh"]], "hardtanh_() (in module torch.nn.functional)": [[1559, "torch.nn.functional.hardtanh_"]], "hinge_embedding_loss() (in module torch.nn.functional)": [[1560, "torch.nn.functional.hinge_embedding_loss"]], "huber_loss() (in module torch.nn.functional)": [[1561, "torch.nn.functional.huber_loss"]], "instance_norm() (in module torch.nn.functional)": [[1562, "torch.nn.functional.instance_norm"]], "interpolate() (in module torch.nn.functional)": [[1563, "torch.nn.functional.interpolate"]], "kl_div() (in module torch.nn.functional)": [[1564, "torch.nn.functional.kl_div"]], "l1_loss() (in module torch.nn.functional)": [[1565, "torch.nn.functional.l1_loss"]], "layer_norm() (in module torch.nn.functional)": [[1566, "torch.nn.functional.layer_norm"]], "leaky_relu() (in module torch.nn.functional)": [[1567, "torch.nn.functional.leaky_relu"]], "leaky_relu_() (in module torch.nn.functional)": [[1568, "torch.nn.functional.leaky_relu_"]], "linear() (in module torch.nn.functional)": [[1569, "torch.nn.functional.linear"]], "local_response_norm() (in module torch.nn.functional)": [[1570, "torch.nn.functional.local_response_norm"]], "log_softmax() (in module torch.nn.functional)": [[1571, "torch.nn.functional.log_softmax"]], "logsigmoid() (in module torch.nn.functional)": [[1572, "torch.nn.functional.logsigmoid"]], "lp_pool1d() (in module torch.nn.functional)": [[1573, "torch.nn.functional.lp_pool1d"]], "lp_pool2d() (in module torch.nn.functional)": [[1574, "torch.nn.functional.lp_pool2d"]], "margin_ranking_loss() (in module torch.nn.functional)": [[1575, "torch.nn.functional.margin_ranking_loss"]], "max_pool1d() (in module torch.nn.functional)": [[1576, "torch.nn.functional.max_pool1d"]], "max_pool2d() (in module torch.nn.functional)": [[1577, "torch.nn.functional.max_pool2d"]], "max_pool3d() (in module torch.nn.functional)": [[1578, "torch.nn.functional.max_pool3d"]], "max_unpool1d() (in module torch.nn.functional)": [[1579, "torch.nn.functional.max_unpool1d"]], "max_unpool2d() (in module torch.nn.functional)": [[1580, "torch.nn.functional.max_unpool2d"]], "max_unpool3d() (in module torch.nn.functional)": [[1581, "torch.nn.functional.max_unpool3d"]], "mish() (in module torch.nn.functional)": [[1582, "torch.nn.functional.mish"]], "mse_loss() (in module torch.nn.functional)": [[1583, "torch.nn.functional.mse_loss"]], "multi_margin_loss() (in module torch.nn.functional)": [[1584, "torch.nn.functional.multi_margin_loss"]], "multilabel_margin_loss() (in module torch.nn.functional)": [[1585, "torch.nn.functional.multilabel_margin_loss"]], "multilabel_soft_margin_loss() (in module torch.nn.functional)": [[1586, "torch.nn.functional.multilabel_soft_margin_loss"]], "nll_loss() (in module torch.nn.functional)": [[1587, "torch.nn.functional.nll_loss"]], "normalize() (in module torch.nn.functional)": [[1588, "torch.nn.functional.normalize"]], "one_hot() (in module torch.nn.functional)": [[1589, "torch.nn.functional.one_hot"]], "pad() (in module torch.nn.functional)": [[1590, "torch.nn.functional.pad"]], "pairwise_distance() (in module torch.nn.functional)": [[1591, "torch.nn.functional.pairwise_distance"]], "pdist() (in module torch.nn.functional)": [[1592, "torch.nn.functional.pdist"]], "pixel_shuffle() (in module torch.nn.functional)": [[1593, "torch.nn.functional.pixel_shuffle"]], "pixel_unshuffle() (in module torch.nn.functional)": [[1594, "torch.nn.functional.pixel_unshuffle"]], "poisson_nll_loss() (in module torch.nn.functional)": [[1595, "torch.nn.functional.poisson_nll_loss"]], "prelu() (in module torch.nn.functional)": [[1596, "torch.nn.functional.prelu"]], "relu() (in module torch.nn.functional)": [[1597, "torch.nn.functional.relu"]], "relu6() (in module torch.nn.functional)": [[1598, "torch.nn.functional.relu6"]], "relu_() (in module torch.nn.functional)": [[1599, "torch.nn.functional.relu_"]], "rrelu() (in module torch.nn.functional)": [[1600, "torch.nn.functional.rrelu"]], "rrelu_() (in module torch.nn.functional)": [[1601, "torch.nn.functional.rrelu_"]], "scaled_dot_product_attention() (in module torch.nn.functional)": [[1602, "torch.nn.functional.scaled_dot_product_attention"]], "selu() (in module torch.nn.functional)": [[1603, "torch.nn.functional.selu"]], "sigmoid() (in module torch.nn.functional)": [[1604, "torch.nn.functional.sigmoid"]], "silu() (in module torch.nn.functional)": [[1605, "torch.nn.functional.silu"]], "smooth_l1_loss() (in module torch.nn.functional)": [[1606, "torch.nn.functional.smooth_l1_loss"]], "soft_margin_loss() (in module torch.nn.functional)": [[1607, "torch.nn.functional.soft_margin_loss"]], "softmax() (in module torch.nn.functional)": [[1608, "torch.nn.functional.softmax"]], "softmin() (in module torch.nn.functional)": [[1609, "torch.nn.functional.softmin"]], "softplus() (in module torch.nn.functional)": [[1610, "torch.nn.functional.softplus"]], "softshrink() (in module torch.nn.functional)": [[1611, "torch.nn.functional.softshrink"]], "softsign() (in module torch.nn.functional)": [[1612, "torch.nn.functional.softsign"]], "tanh() (in module torch.nn.functional)": [[1613, "torch.nn.functional.tanh"]], "tanhshrink() (in module torch.nn.functional)": [[1614, "torch.nn.functional.tanhshrink"]], "threshold() (in module torch.nn.functional)": [[1615, "torch.nn.functional.threshold"]], "threshold_() (in module torch.nn.functional)": [[1616, "torch.nn.functional.threshold_"]], "data_parallel() (in module torch.nn.parallel)": [[1617, "torch.nn.parallel.data_parallel"]], "triplet_margin_loss() (in module torch.nn.functional)": [[1618, "torch.nn.functional.triplet_margin_loss"]], "triplet_margin_with_distance_loss() (in module torch.nn.functional)": [[1619, "torch.nn.functional.triplet_margin_with_distance_loss"]], "unfold() (in module torch.nn.functional)": [[1620, "torch.nn.functional.unfold"]], "upsample() (in module torch.nn.functional)": [[1621, "torch.nn.functional.upsample"]], "upsample_bilinear() (in module torch.nn.functional)": [[1622, "torch.nn.functional.upsample_bilinear"]], "upsample_nearest() (in module torch.nn.functional)": [[1623, "torch.nn.functional.upsample_nearest"]], "lazymodulemixin (class in torch.nn.modules.lazy)": [[1624, "torch.nn.modules.lazy.LazyModuleMixin"]], "has_uninitialized_params() (torch.nn.modules.lazy.lazymodulemixin method)": [[1624, "torch.nn.modules.lazy.LazyModuleMixin.has_uninitialized_params"]], "initialize_parameters() (torch.nn.modules.lazy.lazymodulemixin method)": [[1624, "torch.nn.modules.lazy.LazyModuleMixin.initialize_parameters"]], "register_module_backward_hook() (in module torch.nn.modules.module)": [[1625, "torch.nn.modules.module.register_module_backward_hook"]], "register_module_buffer_registration_hook() (in module torch.nn.modules.module)": [[1626, "torch.nn.modules.module.register_module_buffer_registration_hook"]], "register_module_forward_hook() (in module torch.nn.modules.module)": [[1627, "torch.nn.modules.module.register_module_forward_hook"]], "register_module_forward_pre_hook() (in module torch.nn.modules.module)": [[1628, "torch.nn.modules.module.register_module_forward_pre_hook"]], "register_module_full_backward_hook() (in module torch.nn.modules.module)": [[1629, "torch.nn.modules.module.register_module_full_backward_hook"]], "register_module_full_backward_pre_hook() (in module torch.nn.modules.module)": [[1630, "torch.nn.modules.module.register_module_full_backward_pre_hook"]], "register_module_module_registration_hook() (in module torch.nn.modules.module)": [[1631, "torch.nn.modules.module.register_module_module_registration_hook"]], "register_module_parameter_registration_hook() (in module torch.nn.modules.module)": [[1632, "torch.nn.modules.module.register_module_parameter_registration_hook"]], "distributeddataparallel (class in torch.nn.parallel)": [[1633, "torch.nn.parallel.DistributedDataParallel"]], "join() (torch.nn.parallel.distributeddataparallel method)": [[1633, "torch.nn.parallel.DistributedDataParallel.join"]], "join_hook() (torch.nn.parallel.distributeddataparallel method)": [[1633, "torch.nn.parallel.DistributedDataParallel.join_hook"]], "no_sync() (torch.nn.parallel.distributeddataparallel method)": [[1633, "torch.nn.parallel.DistributedDataParallel.no_sync"]], "register_comm_hook() (torch.nn.parallel.distributeddataparallel method)": [[1633, "torch.nn.parallel.DistributedDataParallel.register_comm_hook"]], "parameter (class in torch.nn.parameter)": [[1634, "torch.nn.parameter.Parameter"]], "uninitializedbuffer (class in torch.nn.parameter)": [[1635, "torch.nn.parameter.UninitializedBuffer"]], "uninitializedparameter (class in torch.nn.parameter)": [[1636, "torch.nn.parameter.UninitializedParameter"]], "cls_to_become (torch.nn.parameter.uninitializedparameter attribute)": [[1636, "torch.nn.parameter.UninitializedParameter.cls_to_become"]], "clip_grad_norm_() (in module torch.nn.utils)": [[1637, "torch.nn.utils.clip_grad_norm_"]], "clip_grad_value_() (in module torch.nn.utils)": [[1638, "torch.nn.utils.clip_grad_value_"]], "parameters_to_vector() (in module torch.nn.utils)": [[1639, "torch.nn.utils.parameters_to_vector"]], "orthogonal() (in module torch.nn.utils.parametrizations)": [[1640, "torch.nn.utils.parametrizations.orthogonal"]], "spectral_norm() (in module torch.nn.utils.parametrizations)": [[1641, "torch.nn.utils.parametrizations.spectral_norm"]], "parametrizationlist (class in torch.nn.utils.parametrize)": [[1642, "torch.nn.utils.parametrize.ParametrizationList"]], "right_inverse() (torch.nn.utils.parametrize.parametrizationlist method)": [[1642, "torch.nn.utils.parametrize.ParametrizationList.right_inverse"]], "cached() (in module torch.nn.utils.parametrize)": [[1643, "torch.nn.utils.parametrize.cached"]], "is_parametrized() (in module torch.nn.utils.parametrize)": [[1644, "torch.nn.utils.parametrize.is_parametrized"]], "register_parametrization() (in module torch.nn.utils.parametrize)": [[1645, "torch.nn.utils.parametrize.register_parametrization"]], "remove_parametrizations() (in module torch.nn.utils.parametrize)": [[1646, "torch.nn.utils.parametrize.remove_parametrizations"]], "basepruningmethod (class in torch.nn.utils.prune)": [[1647, "torch.nn.utils.prune.BasePruningMethod"]], "apply() (torch.nn.utils.prune.basepruningmethod class method)": [[1647, "torch.nn.utils.prune.BasePruningMethod.apply"]], "apply_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1647, "torch.nn.utils.prune.BasePruningMethod.apply_mask"]], "compute_mask() (torch.nn.utils.prune.basepruningmethod method)": [[1647, "torch.nn.utils.prune.BasePruningMethod.compute_mask"]], "prune() (torch.nn.utils.prune.basepruningmethod method)": [[1647, "torch.nn.utils.prune.BasePruningMethod.prune"]], "remove() (torch.nn.utils.prune.basepruningmethod method)": [[1647, "torch.nn.utils.prune.BasePruningMethod.remove"]], "customfrommask (class in torch.nn.utils.prune)": [[1648, "torch.nn.utils.prune.CustomFromMask"]], "apply() (torch.nn.utils.prune.customfrommask class method)": [[1648, "torch.nn.utils.prune.CustomFromMask.apply"]], "apply_mask() (torch.nn.utils.prune.customfrommask method)": [[1648, "torch.nn.utils.prune.CustomFromMask.apply_mask"]], "prune() (torch.nn.utils.prune.customfrommask method)": [[1648, "torch.nn.utils.prune.CustomFromMask.prune"]], "remove() (torch.nn.utils.prune.customfrommask method)": [[1648, "torch.nn.utils.prune.CustomFromMask.remove"]], "identity (class in torch.nn.utils.prune)": [[1649, "torch.nn.utils.prune.Identity"]], "apply() (torch.nn.utils.prune.identity class method)": [[1649, "torch.nn.utils.prune.Identity.apply"]], "apply_mask() (torch.nn.utils.prune.identity method)": [[1649, "torch.nn.utils.prune.Identity.apply_mask"]], "prune() (torch.nn.utils.prune.identity method)": [[1649, "torch.nn.utils.prune.Identity.prune"]], "remove() (torch.nn.utils.prune.identity method)": [[1649, "torch.nn.utils.prune.Identity.remove"]], "l1unstructured (class in torch.nn.utils.prune)": [[1650, "torch.nn.utils.prune.L1Unstructured"]], "apply() (torch.nn.utils.prune.l1unstructured class method)": [[1650, "torch.nn.utils.prune.L1Unstructured.apply"]], "apply_mask() (torch.nn.utils.prune.l1unstructured method)": [[1650, "torch.nn.utils.prune.L1Unstructured.apply_mask"]], "prune() (torch.nn.utils.prune.l1unstructured method)": [[1650, "torch.nn.utils.prune.L1Unstructured.prune"]], "remove() (torch.nn.utils.prune.l1unstructured method)": [[1650, "torch.nn.utils.prune.L1Unstructured.remove"]], "lnstructured (class in torch.nn.utils.prune)": [[1651, "torch.nn.utils.prune.LnStructured"]], "apply() (torch.nn.utils.prune.lnstructured class method)": [[1651, "torch.nn.utils.prune.LnStructured.apply"]], "apply_mask() (torch.nn.utils.prune.lnstructured method)": [[1651, "torch.nn.utils.prune.LnStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.lnstructured method)": [[1651, "torch.nn.utils.prune.LnStructured.compute_mask"]], "prune() (torch.nn.utils.prune.lnstructured method)": [[1651, "torch.nn.utils.prune.LnStructured.prune"]], "remove() (torch.nn.utils.prune.lnstructured method)": [[1651, "torch.nn.utils.prune.LnStructured.remove"]], "pruningcontainer (class in torch.nn.utils.prune)": [[1652, "torch.nn.utils.prune.PruningContainer"]], "add_pruning_method() (torch.nn.utils.prune.pruningcontainer method)": [[1652, "torch.nn.utils.prune.PruningContainer.add_pruning_method"]], "apply() (torch.nn.utils.prune.pruningcontainer class method)": [[1652, "torch.nn.utils.prune.PruningContainer.apply"]], "apply_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1652, "torch.nn.utils.prune.PruningContainer.apply_mask"]], "compute_mask() (torch.nn.utils.prune.pruningcontainer method)": [[1652, "torch.nn.utils.prune.PruningContainer.compute_mask"]], "prune() (torch.nn.utils.prune.pruningcontainer method)": [[1652, "torch.nn.utils.prune.PruningContainer.prune"]], "remove() (torch.nn.utils.prune.pruningcontainer method)": [[1652, "torch.nn.utils.prune.PruningContainer.remove"]], "randomstructured (class in torch.nn.utils.prune)": [[1653, "torch.nn.utils.prune.RandomStructured"]], "apply() (torch.nn.utils.prune.randomstructured class method)": [[1653, "torch.nn.utils.prune.RandomStructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomstructured method)": [[1653, "torch.nn.utils.prune.RandomStructured.apply_mask"]], "compute_mask() (torch.nn.utils.prune.randomstructured method)": [[1653, "torch.nn.utils.prune.RandomStructured.compute_mask"]], "prune() (torch.nn.utils.prune.randomstructured method)": [[1653, "torch.nn.utils.prune.RandomStructured.prune"]], "remove() (torch.nn.utils.prune.randomstructured method)": [[1653, "torch.nn.utils.prune.RandomStructured.remove"]], "randomunstructured (class in torch.nn.utils.prune)": [[1654, "torch.nn.utils.prune.RandomUnstructured"]], "apply() (torch.nn.utils.prune.randomunstructured class method)": [[1654, "torch.nn.utils.prune.RandomUnstructured.apply"]], "apply_mask() (torch.nn.utils.prune.randomunstructured method)": [[1654, "torch.nn.utils.prune.RandomUnstructured.apply_mask"]], "prune() (torch.nn.utils.prune.randomunstructured method)": [[1654, "torch.nn.utils.prune.RandomUnstructured.prune"]], "remove() (torch.nn.utils.prune.randomunstructured method)": [[1654, "torch.nn.utils.prune.RandomUnstructured.remove"]], "custom_from_mask() (in module torch.nn.utils.prune)": [[1655, "torch.nn.utils.prune.custom_from_mask"]], "global_unstructured() (in module torch.nn.utils.prune)": [[1656, "torch.nn.utils.prune.global_unstructured"]], "identity() (in module torch.nn.utils.prune)": [[1657, "torch.nn.utils.prune.identity"]], "is_pruned() (in module torch.nn.utils.prune)": [[1658, "torch.nn.utils.prune.is_pruned"]], "l1_unstructured() (in module torch.nn.utils.prune)": [[1659, "torch.nn.utils.prune.l1_unstructured"]], "ln_structured() (in module torch.nn.utils.prune)": [[1660, "torch.nn.utils.prune.ln_structured"]], "random_structured() (in module torch.nn.utils.prune)": [[1661, "torch.nn.utils.prune.random_structured"]], "random_unstructured() (in module torch.nn.utils.prune)": [[1662, "torch.nn.utils.prune.random_unstructured"]], "remove() (in module torch.nn.utils.prune)": [[1663, "torch.nn.utils.prune.remove"]], "remove_spectral_norm() (in module torch.nn.utils)": [[1664, "torch.nn.utils.remove_spectral_norm"]], "remove_weight_norm() (in module torch.nn.utils)": [[1665, "torch.nn.utils.remove_weight_norm"]], "packedsequence (class in torch.nn.utils.rnn)": [[1666, "torch.nn.utils.rnn.PackedSequence"]], "batch_sizes (torch.nn.utils.rnn.packedsequence attribute)": [[1666, "torch.nn.utils.rnn.PackedSequence.batch_sizes"]], "count() (torch.nn.utils.rnn.packedsequence method)": [[1666, "torch.nn.utils.rnn.PackedSequence.count"]], "data (torch.nn.utils.rnn.packedsequence attribute)": [[1666, "torch.nn.utils.rnn.PackedSequence.data"]], "index() (torch.nn.utils.rnn.packedsequence method)": [[1666, "torch.nn.utils.rnn.PackedSequence.index"]], "is_cuda (torch.nn.utils.rnn.packedsequence property)": [[1666, "torch.nn.utils.rnn.PackedSequence.is_cuda"]], "is_pinned() (torch.nn.utils.rnn.packedsequence method)": [[1666, "torch.nn.utils.rnn.PackedSequence.is_pinned"]], "sorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1666, "torch.nn.utils.rnn.PackedSequence.sorted_indices"]], "to() (torch.nn.utils.rnn.packedsequence method)": [[1666, "torch.nn.utils.rnn.PackedSequence.to"]], "unsorted_indices (torch.nn.utils.rnn.packedsequence attribute)": [[1666, "torch.nn.utils.rnn.PackedSequence.unsorted_indices"]], "pack_padded_sequence() (in module torch.nn.utils.rnn)": [[1667, "torch.nn.utils.rnn.pack_padded_sequence"]], "pack_sequence() (in module torch.nn.utils.rnn)": [[1668, "torch.nn.utils.rnn.pack_sequence"]], "pad_packed_sequence() (in module torch.nn.utils.rnn)": [[1669, "torch.nn.utils.rnn.pad_packed_sequence"]], "pad_sequence() (in module torch.nn.utils.rnn)": [[1670, "torch.nn.utils.rnn.pad_sequence"]], "unpack_sequence() (in module torch.nn.utils.rnn)": [[1671, "torch.nn.utils.rnn.unpack_sequence"]], "unpad_sequence() (in module torch.nn.utils.rnn)": [[1672, "torch.nn.utils.rnn.unpad_sequence"]], "skip_init() (in module torch.nn.utils)": [[1673, "torch.nn.utils.skip_init"]], "spectral_norm() (in module torch.nn.utils)": [[1674, "torch.nn.utils.spectral_norm"]], "functional_call() (in module torch.nn.utils.stateless)": [[1675, "torch.nn.utils.stateless.functional_call"]], "vector_to_parameters() (in module torch.nn.utils)": [[1676, "torch.nn.utils.vector_to_parameters"]], "weight_norm() (in module torch.nn.utils)": [[1677, "torch.nn.utils.weight_norm"]], "no_grad (class in torch)": [[1678, "torch.no_grad"]], "nonzero() (in module torch)": [[1679, "torch.nonzero"]], "norm() (in module torch)": [[1680, "torch.norm"]], "normal() (in module torch)": [[1681, "torch.normal"]], "not_equal() (in module torch)": [[1682, "torch.not_equal"]], "numel() (in module torch)": [[1683, "torch.numel"]], "ones() (in module torch)": [[1684, "torch.ones"]], "ones_like() (in module torch)": [[1685, "torch.ones_like"]], "exportoptions (class in torch.onnx)": [[1686, "torch.onnx.ExportOptions"]], "exportoutput (class in torch.onnx)": [[1687, "torch.onnx.ExportOutput"]], "adapt_torch_inputs_to_onnx() (torch.onnx.exportoutput method)": [[1687, "torch.onnx.ExportOutput.adapt_torch_inputs_to_onnx"]], "adapt_torch_outputs_to_onnx() (torch.onnx.exportoutput method)": [[1687, "torch.onnx.ExportOutput.adapt_torch_outputs_to_onnx"]], "diagnostic_context (torch.onnx.exportoutput property)": [[1687, "torch.onnx.ExportOutput.diagnostic_context"]], "fake_context (torch.onnx.exportoutput property)": [[1687, "torch.onnx.ExportOutput.fake_context"]], "model_proto (torch.onnx.exportoutput property)": [[1687, "torch.onnx.ExportOutput.model_proto"]], "save() (torch.onnx.exportoutput method)": [[1687, "torch.onnx.ExportOutput.save"]], "exportoutputserializer (class in torch.onnx)": [[1688, "torch.onnx.ExportOutputSerializer"]], "serialize() (torch.onnx.exportoutputserializer method)": [[1688, "torch.onnx.ExportOutputSerializer.serialize"]], "jitscalartype (class in torch.onnx)": [[1689, "torch.onnx.JitScalarType"]], "dtype() (torch.onnx.jitscalartype method)": [[1689, "torch.onnx.JitScalarType.dtype"]], "from_dtype() (torch.onnx.jitscalartype class method)": [[1689, "torch.onnx.JitScalarType.from_dtype"]], "from_value() (torch.onnx.jitscalartype class method)": [[1689, "torch.onnx.JitScalarType.from_value"]], "onnx_compatible() (torch.onnx.jitscalartype method)": [[1689, "torch.onnx.JitScalarType.onnx_compatible"]], "onnx_type() (torch.onnx.jitscalartype method)": [[1689, "torch.onnx.JitScalarType.onnx_type"]], "scalar_name() (torch.onnx.jitscalartype method)": [[1689, "torch.onnx.JitScalarType.scalar_name"]], "torch_name() (torch.onnx.jitscalartype method)": [[1689, "torch.onnx.JitScalarType.torch_name"]], "onnxexportererror (class in torch.onnx)": [[1690, "torch.onnx.OnnxExporterError"]], "graphinfo (class in torch.onnx.verification)": [[1691, "torch.onnx.verification.GraphInfo"]], "all_mismatch_leaf_graph_info() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.all_mismatch_leaf_graph_info"]], "clear() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.clear"]], "essential_node_count() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.essential_node_count"]], "essential_node_kinds() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.essential_node_kinds"]], "export_repro() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.export_repro"]], "find_mismatch() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.find_mismatch"]], "find_partition() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.find_partition"]], "has_mismatch() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.has_mismatch"]], "pretty_print_mismatch() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.pretty_print_mismatch"]], "pretty_print_tree() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.pretty_print_tree"]], "verify_export() (torch.onnx.verification.graphinfo method)": [[1691, "torch.onnx.verification.GraphInfo.verify_export"]], "verificationoptions (class in torch.onnx.verification)": [[1692, "torch.onnx.verification.VerificationOptions"]], "asgd (class in torch.optim)": [[1693, "torch.optim.ASGD"]], "add_param_group() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.add_param_group"]], "load_state_dict() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.load_state_dict"]], "register_step_post_hook() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.register_step_pre_hook"]], "state_dict() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.state_dict"]], "step() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.step"]], "zero_grad() (torch.optim.asgd method)": [[1693, "torch.optim.ASGD.zero_grad"]], "adadelta (class in torch.optim)": [[1694, "torch.optim.Adadelta"]], "add_param_group() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.add_param_group"]], "load_state_dict() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.load_state_dict"]], "register_step_post_hook() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.register_step_pre_hook"]], "state_dict() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.state_dict"]], "step() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.step"]], "zero_grad() (torch.optim.adadelta method)": [[1694, "torch.optim.Adadelta.zero_grad"]], "adagrad (class in torch.optim)": [[1695, "torch.optim.Adagrad"]], "add_param_group() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.add_param_group"]], "load_state_dict() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.load_state_dict"]], "register_step_post_hook() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.register_step_pre_hook"]], "state_dict() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.state_dict"]], "step() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.step"]], "zero_grad() (torch.optim.adagrad method)": [[1695, "torch.optim.Adagrad.zero_grad"]], "adam (class in torch.optim)": [[1696, "torch.optim.Adam"]], "add_param_group() (torch.optim.adam method)": [[1696, "torch.optim.Adam.add_param_group"]], "load_state_dict() (torch.optim.adam method)": [[1696, "torch.optim.Adam.load_state_dict"]], "register_step_post_hook() (torch.optim.adam method)": [[1696, "torch.optim.Adam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adam method)": [[1696, "torch.optim.Adam.register_step_pre_hook"]], "state_dict() (torch.optim.adam method)": [[1696, "torch.optim.Adam.state_dict"]], "step() (torch.optim.adam method)": [[1696, "torch.optim.Adam.step"]], "zero_grad() (torch.optim.adam method)": [[1696, "torch.optim.Adam.zero_grad"]], "adamw (class in torch.optim)": [[1697, "torch.optim.AdamW"]], "add_param_group() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.add_param_group"]], "load_state_dict() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.load_state_dict"]], "register_step_post_hook() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.register_step_pre_hook"]], "state_dict() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.state_dict"]], "step() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.step"]], "zero_grad() (torch.optim.adamw method)": [[1697, "torch.optim.AdamW.zero_grad"]], "adamax (class in torch.optim)": [[1698, "torch.optim.Adamax"]], "add_param_group() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.add_param_group"]], "load_state_dict() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.load_state_dict"]], "register_step_post_hook() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.register_step_pre_hook"]], "state_dict() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.state_dict"]], "step() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.step"]], "zero_grad() (torch.optim.adamax method)": [[1698, "torch.optim.Adamax.zero_grad"]], "lbfgs (class in torch.optim)": [[1699, "torch.optim.LBFGS"]], "add_param_group() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.add_param_group"]], "load_state_dict() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.load_state_dict"]], "register_step_post_hook() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.register_step_pre_hook"]], "state_dict() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.state_dict"]], "step() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.step"]], "zero_grad() (torch.optim.lbfgs method)": [[1699, "torch.optim.LBFGS.zero_grad"]], "nadam (class in torch.optim)": [[1700, "torch.optim.NAdam"]], "add_param_group() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.add_param_group"]], "load_state_dict() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.register_step_pre_hook"]], "state_dict() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.state_dict"]], "step() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.step"]], "zero_grad() (torch.optim.nadam method)": [[1700, "torch.optim.NAdam.zero_grad"]], "add_param_group() (torch.optim.optimizer method)": [[1701, "torch.optim.Optimizer.add_param_group"]], "load_state_dict() (torch.optim.optimizer method)": [[1702, "torch.optim.Optimizer.load_state_dict"]], "state_dict() (torch.optim.optimizer method)": [[1703, "torch.optim.Optimizer.state_dict"]], "step() (torch.optim.optimizer method)": [[1704, "torch.optim.Optimizer.step"]], "zero_grad() (torch.optim.optimizer method)": [[1705, "torch.optim.Optimizer.zero_grad"]], "radam (class in torch.optim)": [[1706, "torch.optim.RAdam"]], "add_param_group() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.add_param_group"]], "load_state_dict() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.register_step_pre_hook"]], "state_dict() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.state_dict"]], "step() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.step"]], "zero_grad() (torch.optim.radam method)": [[1706, "torch.optim.RAdam.zero_grad"]], "rmsprop (class in torch.optim)": [[1707, "torch.optim.RMSprop"]], "add_param_group() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.add_param_group"]], "load_state_dict() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.register_step_pre_hook"]], "state_dict() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.state_dict"]], "step() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.step"]], "zero_grad() (torch.optim.rmsprop method)": [[1707, "torch.optim.RMSprop.zero_grad"]], "rprop (class in torch.optim)": [[1708, "torch.optim.Rprop"]], "add_param_group() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.add_param_group"]], "load_state_dict() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.load_state_dict"]], "register_step_post_hook() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.register_step_pre_hook"]], "state_dict() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.state_dict"]], "step() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.step"]], "zero_grad() (torch.optim.rprop method)": [[1708, "torch.optim.Rprop.zero_grad"]], "sgd (class in torch.optim)": [[1709, "torch.optim.SGD"]], "add_param_group() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.add_param_group"]], "load_state_dict() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.load_state_dict"]], "register_step_post_hook() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.register_step_pre_hook"]], "state_dict() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.state_dict"]], "step() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.step"]], "zero_grad() (torch.optim.sgd method)": [[1709, "torch.optim.SGD.zero_grad"]], "sparseadam (class in torch.optim)": [[1710, "torch.optim.SparseAdam"]], "add_param_group() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.add_param_group"]], "load_state_dict() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.load_state_dict"]], "register_step_post_hook() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.register_step_post_hook"]], "register_step_pre_hook() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.register_step_pre_hook"]], "state_dict() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.state_dict"]], "step() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.step"]], "zero_grad() (torch.optim.sparseadam method)": [[1710, "torch.optim.SparseAdam.zero_grad"]], "chainedscheduler (class in torch.optim.lr_scheduler)": [[1711, "torch.optim.lr_scheduler.ChainedScheduler"]], "get_last_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1711, "torch.optim.lr_scheduler.ChainedScheduler.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1711, "torch.optim.lr_scheduler.ChainedScheduler.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.chainedscheduler method)": [[1711, "torch.optim.lr_scheduler.ChainedScheduler.print_lr"]], "state_dict() (torch.optim.lr_scheduler.chainedscheduler method)": [[1711, "torch.optim.lr_scheduler.ChainedScheduler.state_dict"]], "constantlr (class in torch.optim.lr_scheduler)": [[1712, "torch.optim.lr_scheduler.ConstantLR"]], "get_last_lr() (torch.optim.lr_scheduler.constantlr method)": [[1712, "torch.optim.lr_scheduler.ConstantLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1712, "torch.optim.lr_scheduler.ConstantLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.constantlr method)": [[1712, "torch.optim.lr_scheduler.ConstantLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.constantlr method)": [[1712, "torch.optim.lr_scheduler.ConstantLR.state_dict"]], "cosineannealinglr (class in torch.optim.lr_scheduler)": [[1713, "torch.optim.lr_scheduler.CosineAnnealingLR"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1713, "torch.optim.lr_scheduler.CosineAnnealingLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1713, "torch.optim.lr_scheduler.CosineAnnealingLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1713, "torch.optim.lr_scheduler.CosineAnnealingLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealinglr method)": [[1713, "torch.optim.lr_scheduler.CosineAnnealingLR.state_dict"]], "cosineannealingwarmrestarts (class in torch.optim.lr_scheduler)": [[1714, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts"]], "get_last_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1714, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1714, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1714, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.print_lr"]], "state_dict() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1714, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.state_dict"]], "step() (torch.optim.lr_scheduler.cosineannealingwarmrestarts method)": [[1714, "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts.step"]], "cycliclr (class in torch.optim.lr_scheduler)": [[1715, "torch.optim.lr_scheduler.CyclicLR"]], "get_last_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1715, "torch.optim.lr_scheduler.CyclicLR.get_last_lr"]], "get_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1715, "torch.optim.lr_scheduler.CyclicLR.get_lr"]], "print_lr() (torch.optim.lr_scheduler.cycliclr method)": [[1715, "torch.optim.lr_scheduler.CyclicLR.print_lr"]], "exponentiallr (class in torch.optim.lr_scheduler)": [[1716, "torch.optim.lr_scheduler.ExponentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1716, "torch.optim.lr_scheduler.ExponentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1716, "torch.optim.lr_scheduler.ExponentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.exponentiallr method)": [[1716, "torch.optim.lr_scheduler.ExponentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.exponentiallr method)": [[1716, "torch.optim.lr_scheduler.ExponentialLR.state_dict"]], "lambdalr (class in torch.optim.lr_scheduler)": [[1717, "torch.optim.lr_scheduler.LambdaLR"]], "get_last_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1717, "torch.optim.lr_scheduler.LambdaLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1717, "torch.optim.lr_scheduler.LambdaLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.lambdalr method)": [[1717, "torch.optim.lr_scheduler.LambdaLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.lambdalr method)": [[1717, "torch.optim.lr_scheduler.LambdaLR.state_dict"]], "linearlr (class in torch.optim.lr_scheduler)": [[1718, "torch.optim.lr_scheduler.LinearLR"]], "get_last_lr() (torch.optim.lr_scheduler.linearlr method)": [[1718, "torch.optim.lr_scheduler.LinearLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1718, "torch.optim.lr_scheduler.LinearLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.linearlr method)": [[1718, "torch.optim.lr_scheduler.LinearLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.linearlr method)": [[1718, "torch.optim.lr_scheduler.LinearLR.state_dict"]], "multisteplr (class in torch.optim.lr_scheduler)": [[1719, "torch.optim.lr_scheduler.MultiStepLR"]], "get_last_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1719, "torch.optim.lr_scheduler.MultiStepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1719, "torch.optim.lr_scheduler.MultiStepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multisteplr method)": [[1719, "torch.optim.lr_scheduler.MultiStepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multisteplr method)": [[1719, "torch.optim.lr_scheduler.MultiStepLR.state_dict"]], "multiplicativelr (class in torch.optim.lr_scheduler)": [[1720, "torch.optim.lr_scheduler.MultiplicativeLR"]], "get_last_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1720, "torch.optim.lr_scheduler.MultiplicativeLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1720, "torch.optim.lr_scheduler.MultiplicativeLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.multiplicativelr method)": [[1720, "torch.optim.lr_scheduler.MultiplicativeLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.multiplicativelr method)": [[1720, "torch.optim.lr_scheduler.MultiplicativeLR.state_dict"]], "onecyclelr (class in torch.optim.lr_scheduler)": [[1721, "torch.optim.lr_scheduler.OneCycleLR"]], "get_last_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1721, "torch.optim.lr_scheduler.OneCycleLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1721, "torch.optim.lr_scheduler.OneCycleLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.onecyclelr method)": [[1721, "torch.optim.lr_scheduler.OneCycleLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.onecyclelr method)": [[1721, "torch.optim.lr_scheduler.OneCycleLR.state_dict"]], "polynomiallr (class in torch.optim.lr_scheduler)": [[1722, "torch.optim.lr_scheduler.PolynomialLR"]], "get_last_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1722, "torch.optim.lr_scheduler.PolynomialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1722, "torch.optim.lr_scheduler.PolynomialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.polynomiallr method)": [[1722, "torch.optim.lr_scheduler.PolynomialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.polynomiallr method)": [[1722, "torch.optim.lr_scheduler.PolynomialLR.state_dict"]], "reducelronplateau (class in torch.optim.lr_scheduler)": [[1723, "torch.optim.lr_scheduler.ReduceLROnPlateau"]], "sequentiallr (class in torch.optim.lr_scheduler)": [[1724, "torch.optim.lr_scheduler.SequentialLR"]], "get_last_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1724, "torch.optim.lr_scheduler.SequentialLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1724, "torch.optim.lr_scheduler.SequentialLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.sequentiallr method)": [[1724, "torch.optim.lr_scheduler.SequentialLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.sequentiallr method)": [[1724, "torch.optim.lr_scheduler.SequentialLR.state_dict"]], "steplr (class in torch.optim.lr_scheduler)": [[1725, "torch.optim.lr_scheduler.StepLR"]], "get_last_lr() (torch.optim.lr_scheduler.steplr method)": [[1725, "torch.optim.lr_scheduler.StepLR.get_last_lr"]], "load_state_dict() (torch.optim.lr_scheduler.steplr method)": [[1725, "torch.optim.lr_scheduler.StepLR.load_state_dict"]], "print_lr() (torch.optim.lr_scheduler.steplr method)": [[1725, "torch.optim.lr_scheduler.StepLR.print_lr"]], "state_dict() (torch.optim.lr_scheduler.steplr method)": [[1725, "torch.optim.lr_scheduler.StepLR.state_dict"]], "orgqr() (in module torch)": [[1726, "torch.orgqr"]], "ormqr() (in module torch)": [[1727, "torch.ormqr"]], "outer() (in module torch)": [[1728, "torch.outer"]], "pca_lowrank() (in module torch)": [[1729, "torch.pca_lowrank"]], "permute() (in module torch)": [[1730, "torch.permute"]], "pinverse() (in module torch)": [[1731, "torch.pinverse"]], "poisson() (in module torch)": [[1732, "torch.poisson"]], "polar() (in module torch)": [[1733, "torch.polar"]], "polygamma() (in module torch)": [[1734, "torch.polygamma"]], "positive() (in module torch)": [[1735, "torch.positive"]], "pow() (in module torch)": [[1736, "torch.pow"]], "prod() (in module torch)": [[1737, "torch.prod"]], "promote_types() (in module torch)": [[1738, "torch.promote_types"]], "qr() (in module torch)": [[1739, "torch.qr"]], "quantile() (in module torch)": [[1740, "torch.quantile"]], "quantize_per_channel() (in module torch)": [[1741, "torch.quantize_per_channel"]], "quantize_per_tensor() (in module torch)": [[1742, "torch.quantize_per_tensor"]], "quantized_batch_norm() (in module torch)": [[1743, "torch.quantized_batch_norm"]], "quantized_max_pool1d() (in module torch)": [[1744, "torch.quantized_max_pool1d"]], "quantized_max_pool2d() (in module torch)": [[1745, "torch.quantized_max_pool2d"]], "sobolengine (class in torch.quasirandom)": [[1746, "torch.quasirandom.SobolEngine"]], "draw() (torch.quasirandom.sobolengine method)": [[1746, "torch.quasirandom.SobolEngine.draw"]], "draw_base2() (torch.quasirandom.sobolengine method)": [[1746, "torch.quasirandom.SobolEngine.draw_base2"]], "fast_forward() (torch.quasirandom.sobolengine method)": [[1746, "torch.quasirandom.SobolEngine.fast_forward"]], "reset() (torch.quasirandom.sobolengine method)": [[1746, "torch.quasirandom.SobolEngine.reset"]], "rad2deg() (in module torch)": [[1747, "torch.rad2deg"]], "rand() (in module torch)": [[1748, "torch.rand"]], "rand_like() (in module torch)": [[1749, "torch.rand_like"]], "randint() (in module torch)": [[1750, "torch.randint"]], "randint_like() (in module torch)": [[1751, "torch.randint_like"]], "randn() (in module torch)": [[1752, "torch.randn"]], "randn_like() (in module torch)": [[1753, "torch.randn_like"]], "randperm() (in module torch)": [[1754, "torch.randperm"]], "range() (in module torch)": [[1755, "torch.range"]], "ravel() (in module torch)": [[1756, "torch.ravel"]], "real() (in module torch)": [[1757, "torch.real"]], "reciprocal() (in module torch)": [[1758, "torch.reciprocal"]], "remainder() (in module torch)": [[1759, "torch.remainder"]], "renorm() (in module torch)": [[1760, "torch.renorm"]], "repeat_interleave() (in module torch)": [[1761, "torch.repeat_interleave"]], "reshape() (in module torch)": [[1762, "torch.reshape"]], "resolve_conj() (in module torch)": [[1763, "torch.resolve_conj"]], "resolve_neg() (in module torch)": [[1764, "torch.resolve_neg"]], "result_type() (in module torch)": [[1765, "torch.result_type"]], "roll() (in module torch)": [[1766, "torch.roll"]], "rot90() (in module torch)": [[1767, "torch.rot90"]], "round() (in module torch)": [[1768, "torch.round"]], "row_stack() (in module torch)": [[1769, "torch.row_stack"]], "rsqrt() (in module torch)": [[1770, "torch.rsqrt"]], "save() (in module torch)": [[1771, "torch.save"]], "scatter() (in module torch)": [[1772, "torch.scatter"]], "scatter_add() (in module torch)": [[1773, "torch.scatter_add"]], "scatter_reduce() (in module torch)": [[1774, "torch.scatter_reduce"]], "searchsorted() (in module torch)": [[1775, "torch.searchsorted"]], "seed() (in module torch)": [[1776, "torch.seed"]], "select() (in module torch)": [[1777, "torch.select"]], "select_scatter() (in module torch)": [[1778, "torch.select_scatter"]], "set_default_device() (in module torch)": [[1779, "torch.set_default_device"]], "set_default_dtype() (in module torch)": [[1780, "torch.set_default_dtype"]], "set_default_tensor_type() (in module torch)": [[1781, "torch.set_default_tensor_type"]], "set_deterministic_debug_mode() (in module torch)": [[1782, "torch.set_deterministic_debug_mode"]], "set_float32_matmul_precision() (in module torch)": [[1783, "torch.set_float32_matmul_precision"]], "set_flush_denormal() (in module torch)": [[1784, "torch.set_flush_denormal"]], "set_grad_enabled (class in torch)": [[1785, "torch.set_grad_enabled"]], "set_num_interop_threads() (in module torch)": [[1786, "torch.set_num_interop_threads"]], "set_num_threads() (in module torch)": [[1787, "torch.set_num_threads"]], "set_printoptions() (in module torch)": [[1788, "torch.set_printoptions"]], "set_rng_state() (in module torch)": [[1789, "torch.set_rng_state"]], "set_warn_always() (in module torch)": [[1790, "torch.set_warn_always"]], "sgn() (in module torch)": [[1791, "torch.sgn"]], "sigmoid() (in module torch)": [[1792, "torch.sigmoid"]], "sign() (in module torch)": [[1793, "torch.sign"]], "bartlett() (in module torch.signal.windows)": [[1794, "torch.signal.windows.bartlett"]], "blackman() (in module torch.signal.windows)": [[1795, "torch.signal.windows.blackman"]], "cosine() (in module torch.signal.windows)": [[1796, "torch.signal.windows.cosine"]], "exponential() (in module torch.signal.windows)": [[1797, "torch.signal.windows.exponential"]], "gaussian() (in module torch.signal.windows)": [[1798, "torch.signal.windows.gaussian"]], "general_cosine() (in module torch.signal.windows)": [[1799, "torch.signal.windows.general_cosine"]], "general_hamming() (in module torch.signal.windows)": [[1800, "torch.signal.windows.general_hamming"]], "hamming() (in module torch.signal.windows)": [[1801, "torch.signal.windows.hamming"]], "hann() (in module torch.signal.windows)": [[1802, "torch.signal.windows.hann"]], "kaiser() (in module torch.signal.windows)": [[1803, "torch.signal.windows.kaiser"]], "nuttall() (in module torch.signal.windows)": [[1804, "torch.signal.windows.nuttall"]], "signbit() (in module torch)": [[1805, "torch.signbit"]], "sin() (in module torch)": [[1806, "torch.sin"]], "sinc() (in module torch)": [[1807, "torch.sinc"]], "sinh() (in module torch)": [[1808, "torch.sinh"]], "slice_scatter() (in module torch)": [[1809, "torch.slice_scatter"]], "slogdet() (in module torch)": [[1810, "torch.slogdet"]], "smm() (in module torch)": [[1811, "torch.smm"]], "softmax() (in module torch)": [[1812, "torch.softmax"]], "sort() (in module torch)": [[1813, "torch.sort"]], "addmm() (in module torch.sparse)": [[1814, "torch.sparse.addmm"]], "check_sparse_tensor_invariants (class in torch.sparse)": [[1815, "torch.sparse.check_sparse_tensor_invariants"]], "disable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1815, "torch.sparse.check_sparse_tensor_invariants.disable"]], "enable() (torch.sparse.check_sparse_tensor_invariants static method)": [[1815, "torch.sparse.check_sparse_tensor_invariants.enable"]], "is_enabled() (torch.sparse.check_sparse_tensor_invariants static method)": [[1815, "torch.sparse.check_sparse_tensor_invariants.is_enabled"]], "log_softmax() (in module torch.sparse)": [[1816, "torch.sparse.log_softmax"]], "mm() (in module torch.sparse)": [[1817, "torch.sparse.mm"]], "sampled_addmm() (in module torch.sparse)": [[1818, "torch.sparse.sampled_addmm"]], "softmax() (in module torch.sparse)": [[1819, "torch.sparse.softmax"]], "spdiags() (in module torch.sparse)": [[1820, "torch.sparse.spdiags"]], "sum() (in module torch.sparse)": [[1821, "torch.sparse.sum"]], "sparse_bsc_tensor() (in module torch)": [[1822, "torch.sparse_bsc_tensor"]], "sparse_bsr_tensor() (in module torch)": [[1823, "torch.sparse_bsr_tensor"]], "sparse_compressed_tensor() (in module torch)": [[1824, "torch.sparse_compressed_tensor"]], "sparse_coo_tensor() (in module torch)": [[1825, "torch.sparse_coo_tensor"]], "sparse_csc_tensor() (in module torch)": [[1826, "torch.sparse_csc_tensor"]], "sparse_csr_tensor() (in module torch)": [[1827, "torch.sparse_csr_tensor"]], "split() (in module torch)": [[1828, "torch.split"]], "sqrt() (in module torch)": [[1829, "torch.sqrt"]], "square() (in module torch)": [[1830, "torch.square"]], "squeeze() (in module torch)": [[1831, "torch.squeeze"]], "sspaddmm() (in module torch)": [[1832, "torch.sspaddmm"]], "stack() (in module torch)": [[1833, "torch.stack"]], "std() (in module torch)": [[1834, "torch.std"]], "std_mean() (in module torch)": [[1835, "torch.std_mean"]], "stft() (in module torch)": [[1836, "torch.stft"]], "sub() (in module torch)": [[1837, "torch.sub"]], "subtract() (in module torch)": [[1838, "torch.subtract"]], "sum() (in module torch)": [[1839, "torch.sum"]], "svd() (in module torch)": [[1840, "torch.svd"]], "svd_lowrank() (in module torch)": [[1841, "torch.svd_lowrank"]], "swapaxes() (in module torch)": [[1842, "torch.swapaxes"]], "swapdims() (in module torch)": [[1843, "torch.swapdims"]], "sym_float() (in module torch)": [[1844, "torch.sym_float"]], "sym_int() (in module torch)": [[1845, "torch.sym_int"]], "sym_max() (in module torch)": [[1846, "torch.sym_max"]], "sym_min() (in module torch)": [[1847, "torch.sym_min"]], "sym_not() (in module torch)": [[1848, "torch.sym_not"]], "t() (in module torch)": [[1849, "torch.t"]], "take() (in module torch)": [[1850, "torch.take"]], "take_along_dim() (in module torch)": [[1851, "torch.take_along_dim"]], "tan() (in module torch)": [[1852, "torch.tan"]], "tanh() (in module torch)": [[1853, "torch.tanh"]], "tensor() (in module torch)": [[1854, "torch.tensor"]], "tensor_split() (in module torch)": [[1855, "torch.tensor_split"]], "tensordot() (in module torch)": [[1856, "torch.tensordot"]], "tile() (in module torch)": [[1857, "torch.tile"]], "topk() (in module torch)": [[1858, "torch.topk"]], "trace() (in module torch)": [[1859, "torch.trace"]], "transpose() (in module torch)": [[1860, "torch.transpose"]], "trapezoid() (in module torch)": [[1861, "torch.trapezoid"]], "trapz() (in module torch)": [[1862, "torch.trapz"]], "triangular_solve() (in module torch)": [[1863, "torch.triangular_solve"]], "tril() (in module torch)": [[1864, "torch.tril"]], "tril_indices() (in module torch)": [[1865, "torch.tril_indices"]], "triu() (in module torch)": [[1866, "torch.triu"]], "triu_indices() (in module torch)": [[1867, "torch.triu_indices"]], "true_divide() (in module torch)": [[1868, "torch.true_divide"]], "trunc() (in module torch)": [[1869, "torch.trunc"]], "unbind() (in module torch)": [[1870, "torch.unbind"]], "unflatten() (in module torch)": [[1871, "torch.unflatten"]], "unique() (in module torch)": [[1872, "torch.unique"]], "unique_consecutive() (in module torch)": [[1873, "torch.unique_consecutive"]], "unsqueeze() (in module torch)": [[1874, "torch.unsqueeze"]], "use_deterministic_algorithms() (in module torch)": [[1875, "torch.use_deterministic_algorithms"]], "generate_methods_for_privateuse1_backend() (in module torch.utils)": [[1876, "torch.utils.generate_methods_for_privateuse1_backend"]], "get_cpp_backtrace() (in module torch.utils)": [[1877, "torch.utils.get_cpp_backtrace"]], "rename_privateuse1_backend() (in module torch.utils)": [[1878, "torch.utils.rename_privateuse1_backend"]], "set_module() (in module torch.utils)": [[1879, "torch.utils.set_module"]], "vander() (in module torch)": [[1880, "torch.vander"]], "var() (in module torch)": [[1881, "torch.var"]], "var_mean() (in module torch)": [[1882, "torch.var_mean"]], "vdot() (in module torch)": [[1883, "torch.vdot"]], "view_as_complex() (in module torch)": [[1884, "torch.view_as_complex"]], "view_as_real() (in module torch)": [[1885, "torch.view_as_real"]], "vmap() (in module torch)": [[1886, "torch.vmap"]], "vsplit() (in module torch)": [[1887, "torch.vsplit"]], "vstack() (in module torch)": [[1888, "torch.vstack"]], "where() (in module torch)": [[1889, "torch.where"]], "xlogy() (in module torch)": [[1890, "torch.xlogy"]], "zeros() (in module torch)": [[1891, "torch.zeros"]], "zeros_like() (in module torch)": [[1892, "torch.zeros_like"]], "download_url_to_file() (in module torch.hub)": [[1893, "torch.hub.download_url_to_file"]], "get_dir() (in module torch.hub)": [[1893, "torch.hub.get_dir"]], "help() (in module torch.hub)": [[1893, "torch.hub.help"]], "list() (in module torch.hub)": [[1893, "torch.hub.list"]], "load() (in module torch.hub)": [[1893, "torch.hub.load"]], "load_state_dict_from_url() (in module torch.hub)": [[1893, "torch.hub.load_state_dict_from_url"]], "set_dir() (in module torch.hub)": [[1893, "torch.hub.set_dir"]], "torch.hub": [[1893, "module-torch.hub"]], "pytorch_jit": [[1896, "envvar-PYTORCH_JIT"]], "environment variable": [[1896, "envvar-PYTORCH_JIT"]], "export() (in module torch.jit)": [[1896, "torch.jit.export"]], "torch.jit": [[1896, "module-torch.jit"]], "torch.jit.mobile": [[1896, "module-torch.jit.mobile"]], "torch.jit.supported_ops": [[1897, "module-torch.jit.supported_ops"]], "is_scripting() (in module torch.jit)": [[1898, "torch.jit.is_scripting"]], "is_tracing() (in module torch.jit)": [[1898, "torch.jit.is_tracing"]], "torch.jit.unsupported_tensor_ops": [[1901, "module-torch.jit.unsupported_tensor_ops"]], "torch.utils.jit": [[1902, "module-torch.utils.jit"]], "library (class in torch.library)": [[1903, "torch.library.Library"]], "define() (torch.library.library method)": [[1903, "torch.library.Library.define"]], "impl() (torch.library.library method)": [[1903, "torch.library.Library.impl"]], "torch.linalg": [[1904, "module-torch.linalg"]], "torch._logging": [[1905, "module-torch._logging"]], "torch.masked": [[1906, "module-torch.masked"]], "torch.masked.maskedtensor": [[1906, "module-torch.masked.maskedtensor"]], "optimize_for_mobile() (in module torch.utils.mobile_optimizer)": [[1907, "torch.utils.mobile_optimizer.optimize_for_mobile"]], "load_url() (in module torch.utils.model_zoo)": [[1908, "torch.utils.model_zoo.load_url"]], "torch.utils.model_zoo": [[1908, "module-torch.utils.model_zoo"]], "aggregation (class in torch.monitor)": [[1909, "torch.monitor.Aggregation"]], "event (class in torch.monitor)": [[1909, "torch.monitor.Event"]], "eventhandlerhandle (class in torch.monitor)": [[1909, "torch.monitor.EventHandlerHandle"]], "stat (class in torch.monitor)": [[1909, "torch.monitor.Stat"]], "tensorboardeventhandler (class in torch.monitor)": [[1909, "torch.monitor.TensorboardEventHandler"]], "__init__() (torch.monitor.event method)": [[1909, "torch.monitor.Event.__init__"]], "__init__() (torch.monitor.stat method)": [[1909, "torch.monitor.Stat.__init__"]], "__init__() (torch.monitor.tensorboardeventhandler method)": [[1909, "torch.monitor.TensorboardEventHandler.__init__"]], "add() (torch.monitor.stat method)": [[1909, "torch.monitor.Stat.add"]], "count (torch.monitor.stat property)": [[1909, "torch.monitor.Stat.count"]], "data (torch.monitor.event property)": [[1909, "torch.monitor.Event.data"]], "data_value_t (class in torch.monitor)": [[1909, "torch.monitor.data_value_t"]], "get() (torch.monitor.stat method)": [[1909, "torch.monitor.Stat.get"]], "log_event() (in module torch.monitor)": [[1909, "torch.monitor.log_event"]], "name (torch.monitor.aggregation property)": [[1909, "torch.monitor.Aggregation.name"]], "name (torch.monitor.event property)": [[1909, "torch.monitor.Event.name"]], "name (torch.monitor.stat property)": [[1909, "torch.monitor.Stat.name"]], "register_event_handler() (in module torch.monitor)": [[1909, "torch.monitor.register_event_handler"]], "timestamp (torch.monitor.event property)": [[1909, "torch.monitor.Event.timestamp"]], "torch.monitor": [[1909, "module-torch.monitor"]], "unregister_event_handler() (in module torch.monitor)": [[1909, "torch.monitor.unregister_event_handler"]], "torch.mps": [[1910, "module-torch.mps"]], "spawncontext (class in torch.multiprocessing)": [[1911, "torch.multiprocessing.SpawnContext"]], "get_all_sharing_strategies() (in module torch.multiprocessing)": [[1911, "torch.multiprocessing.get_all_sharing_strategies"]], "get_sharing_strategy() (in module torch.multiprocessing)": [[1911, "torch.multiprocessing.get_sharing_strategy"]], "join() (torch.multiprocessing.spawncontext method)": [[1911, "torch.multiprocessing.SpawnContext.join"]], "set_sharing_strategy() (in module torch.multiprocessing)": [[1911, "torch.multiprocessing.set_sharing_strategy"]], "spawn() (in module torch.multiprocessing)": [[1911, "torch.multiprocessing.spawn"]], "torch.multiprocessing": [[1911, "module-torch.multiprocessing"]], "align_as() (torch.tensor method)": [[1913, "torch.Tensor.align_as"]], "align_to() (torch.tensor method)": [[1913, "torch.Tensor.align_to"]], "names (torch.tensor attribute)": [[1913, "torch.Tensor.names"]], "refine_names() (torch.tensor method)": [[1913, "torch.Tensor.refine_names"]], "rename() (torch.tensor method)": [[1913, "torch.Tensor.rename"]], "rename_() (torch.tensor method)": [[1913, "torch.Tensor.rename_"]], "as_nested_tensor() (in module torch.nested)": [[1914, "torch.nested.as_nested_tensor"]], "nested_tensor() (in module torch.nested)": [[1914, "torch.nested.nested_tensor"]], "to_padded_tensor() (in module torch.nested)": [[1914, "torch.nested.to_padded_tensor"]], "torch.nested": [[1914, "module-torch.nested"]], "torch.nn": [[1915, "module-torch.nn"]], "torch.nn.backends": [[1915, "module-torch.nn.backends"]], "torch.nn.modules": [[1915, "module-torch.nn.modules"]], "torch.nn.parallel": [[1915, "module-torch.nn.parallel"]], "torch.nn.utils": [[1915, "module-torch.nn.utils"]], "torch.nn.utils.stateless": [[1915, "module-torch.nn.utils.stateless"]], "calculate_gain() (in module torch.nn.init)": [[1917, "torch.nn.init.calculate_gain"]], "constant_() (in module torch.nn.init)": [[1917, "torch.nn.init.constant_"]], "dirac_() (in module torch.nn.init)": [[1917, "torch.nn.init.dirac_"]], "eye_() (in module torch.nn.init)": [[1917, "torch.nn.init.eye_"]], "kaiming_normal_() (in module torch.nn.init)": [[1917, "torch.nn.init.kaiming_normal_"]], "kaiming_uniform_() (in module torch.nn.init)": [[1917, "torch.nn.init.kaiming_uniform_"]], "normal_() (in module torch.nn.init)": [[1917, "torch.nn.init.normal_"]], "ones_() (in module torch.nn.init)": [[1917, "torch.nn.init.ones_"]], "orthogonal_() (in module torch.nn.init)": [[1917, "torch.nn.init.orthogonal_"]], "sparse_() (in module torch.nn.init)": [[1917, "torch.nn.init.sparse_"]], "trunc_normal_() (in module torch.nn.init)": [[1917, "torch.nn.init.trunc_normal_"]], "uniform_() (in module torch.nn.init)": [[1917, "torch.nn.init.uniform_"]], "xavier_normal_() (in module torch.nn.init)": [[1917, "torch.nn.init.xavier_normal_"]], "xavier_uniform_() (in module torch.nn.init)": [[1917, "torch.nn.init.xavier_uniform_"]], "zeros_() (in module torch.nn.init)": [[1917, "torch.nn.init.zeros_"]], "get_default_load_endianness() (in module torch.serialization)": [[1935, "torch.serialization.get_default_load_endianness"]], "register_package() (in module torch.serialization)": [[1935, "torch.serialization.register_package"]], "set_default_load_endianness() (in module torch.serialization)": [[1935, "torch.serialization.set_default_load_endianness"]], "disable_log() (in module torch.onnx)": [[1937, "torch.onnx.disable_log"]], "dynamo_export() (in module torch.onnx)": [[1937, "torch.onnx.dynamo_export"]], "enable_fake_mode() (in module torch.onnx)": [[1937, "torch.onnx.enable_fake_mode"]], "enable_log() (in module torch.onnx)": [[1937, "torch.onnx.enable_log"]], "export() (in module torch.onnx)": [[1937, "torch.onnx.export"]], "export_to_pretty_string() (in module torch.onnx)": [[1937, "torch.onnx.export_to_pretty_string"]], "find_mismatch() (in module torch.onnx.verification)": [[1937, "torch.onnx.verification.find_mismatch"]], "is_in_onnx_export() (in module torch.onnx)": [[1937, "torch.onnx.is_in_onnx_export"]], "register_custom_op_symbolic() (in module torch.onnx)": [[1937, "torch.onnx.register_custom_op_symbolic"]], "select_model_mode_for_export() (in module torch.onnx)": [[1937, "torch.onnx.select_model_mode_for_export"]], "torch.onnx": [[1937, "module-torch.onnx"]], "unregister_custom_op_symbolic() (in module torch.onnx)": [[1937, "torch.onnx.unregister_custom_op_symbolic"]], "exportdiagnostic (class in torch.onnx._internal.diagnostics)": [[1938, "torch.onnx._internal.diagnostics.ExportDiagnostic"]], "record_cpp_call_stack() (torch.onnx._internal.diagnostics.exportdiagnostic method)": [[1938, "torch.onnx._internal.diagnostics.ExportDiagnostic.record_cpp_call_stack"]], "torch.onnx._internal.diagnostics": [[1938, "module-torch.onnx._internal.diagnostics"]], "optimizer (class in torch.optim)": [[1940, "torch.optim.Optimizer"]], "torch.optim": [[1940, "module-torch.optim"]], "directory (class in torch.package)": [[1941, "torch.package.Directory"]], "emptymatcherror (class in torch.package)": [[1941, "torch.package.EmptyMatchError"]], "packageexporter (class in torch.package)": [[1941, "torch.package.PackageExporter"]], "packageimporter (class in torch.package)": [[1941, "torch.package.PackageImporter"]], "packagingerror (class in torch.package)": [[1941, "torch.package.PackagingError"]], "__init__() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.__init__"]], "__init__() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.__init__"]], "add_dependency() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.add_dependency"]], "all_paths() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.all_paths"]], "close() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.close"]], "denied_modules() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.denied_modules"]], "deny() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.deny"]], "dependency_graph_string() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.dependency_graph_string"]], "extern() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.extern"]], "externed_modules() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.externed_modules"]], "file_structure() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.file_structure"]], "get_rdeps() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.get_rdeps"]], "get_unique_id() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.get_unique_id"]], "has_file() (torch.package.directory method)": [[1941, "torch.package.Directory.has_file"]], "id() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.id"]], "import_module() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.import_module"]], "intern() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.intern"]], "interned_modules() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.interned_modules"]], "load_binary() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.load_binary"]], "load_pickle() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.load_pickle"]], "load_text() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.load_text"]], "mock() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.mock"]], "mocked_modules() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.mocked_modules"]], "python_version() (torch.package.packageimporter method)": [[1941, "torch.package.PackageImporter.python_version"]], "register_extern_hook() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.register_extern_hook"]], "register_intern_hook() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.register_intern_hook"]], "register_mock_hook() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.register_mock_hook"]], "save_binary() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.save_binary"]], "save_module() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.save_module"]], "save_pickle() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.save_pickle"]], "save_source_file() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.save_source_file"]], "save_source_string() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.save_source_string"]], "save_text() (torch.package.packageexporter method)": [[1941, "torch.package.PackageExporter.save_text"]], "torch.package": [[1941, "module-torch.package"]], "torch.package.analyze": [[1941, "module-torch.package.analyze"]], "pipe (class in torch.distributed.pipeline.sync)": [[1942, "torch.distributed.pipeline.sync.Pipe"]], "forward() (torch.distributed.pipeline.sync.pipe method)": [[1942, "torch.distributed.pipeline.sync.Pipe.forward"]], "pop (class in torch.distributed.pipeline.sync.skip.skippable)": [[1942, "torch.distributed.pipeline.sync.skip.skippable.pop"]], "skippable() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1942, "torch.distributed.pipeline.sync.skip.skippable.skippable"]], "stash (class in torch.distributed.pipeline.sync.skip.skippable)": [[1942, "torch.distributed.pipeline.sync.skip.skippable.stash"]], "verify_skippables() (in module torch.distributed.pipeline.sync.skip.skippable)": [[1942, "torch.distributed.pipeline.sync.skip.skippable.verify_skippables"]], "profileraction (class in torch.profiler)": [[1943, "torch.profiler.ProfilerAction"]], "profileractivity (class in torch.profiler)": [[1943, "torch.profiler.ProfilerActivity"]], "_kinetoprofile (class in torch.profiler)": [[1943, "torch.profiler._KinetoProfile"]], "add_metadata() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.add_metadata"]], "add_metadata_json() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.add_metadata_json"]], "events() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.events"]], "export_chrome_trace() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.export_chrome_trace"]], "export_memory_timeline() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.export_memory_timeline"]], "export_stacks() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.export_stacks"]], "is_available() (in module torch.profiler.itt)": [[1943, "torch.profiler.itt.is_available"]], "key_averages() (torch.profiler._kinetoprofile method)": [[1943, "torch.profiler._KinetoProfile.key_averages"]], "mark() (in module torch.profiler.itt)": [[1943, "torch.profiler.itt.mark"]], "name (torch.profiler.profileractivity property)": [[1943, "torch.profiler.ProfilerActivity.name"]], "profile (class in torch.profiler)": [[1943, "torch.profiler.profile"]], "range_pop() (in module torch.profiler.itt)": [[1943, "torch.profiler.itt.range_pop"]], "range_push() (in module torch.profiler.itt)": [[1943, "torch.profiler.itt.range_push"]], "schedule() (in module torch.profiler)": [[1943, "torch.profiler.schedule"]], "step() (torch.profiler.profile method)": [[1943, "torch.profiler.profile.step"]], "tensorboard_trace_handler() (in module torch.profiler)": [[1943, "torch.profiler.tensorboard_trace_handler"]], "torch.profiler": [[1943, "module-torch.profiler"]], "torch.ao": [[1944, "module-torch.ao"]], "torch.ao.nn": [[1944, "module-torch.ao.nn"]], "torch.ao.nn.quantizable": [[1944, "module-torch.ao.nn.quantizable"]], "torch.ao.nn.quantizable.modules": [[1944, "module-torch.ao.nn.quantizable.modules"]], "torch.ao.nn.quantized": [[1944, "module-torch.ao.nn.quantized"]], "torch.ao.nn.quantized.reference": [[1944, "module-torch.ao.nn.quantized.reference"]], "torch.ao.nn.quantized.reference.modules": [[1944, "module-torch.ao.nn.quantized.reference.modules"]], "torch.ao.nn.sparse": [[1944, "module-torch.ao.nn.sparse"]], "torch.ao.nn.sparse.quantized": [[1944, "module-torch.ao.nn.sparse.quantized"]], "torch.ao.nn.sparse.quantized.dynamic": [[1944, "module-torch.ao.nn.sparse.quantized.dynamic"]], "torch.ao.ns": [[1944, "module-torch.ao.ns"]], "torch.ao.ns.fx": [[1944, "module-torch.ao.ns.fx"]], "torch.ao.pruning": [[1944, "module-torch.ao.pruning"]], "torch.ao.pruning.scheduler": [[1944, "module-torch.ao.pruning.scheduler"]], "torch.ao.pruning.sparsifier": [[1944, "module-torch.ao.pruning.sparsifier"]], "torch.ao.quantization": [[1944, "module-torch.ao.quantization"]], "torch.ao.quantization.backend_config": [[1944, "module-torch.ao.quantization.backend_config"]], "torch.ao.quantization.fx": [[1944, "module-torch.ao.quantization.fx"]], "torch.ao.nn.intrinsic": [[1947, "module-torch.ao.nn.intrinsic"]], "torch.ao.nn.intrinsic.modules": [[1947, "module-torch.ao.nn.intrinsic.modules"]], "torch.ao.nn.intrinsic.qat": [[1947, "module-torch.ao.nn.intrinsic.qat"]], "torch.ao.nn.intrinsic.qat.modules": [[1947, "module-torch.ao.nn.intrinsic.qat.modules"]], "torch.ao.nn.intrinsic.quantized": [[1947, "module-torch.ao.nn.intrinsic.quantized"]], "torch.ao.nn.intrinsic.quantized.dynamic": [[1947, "module-torch.ao.nn.intrinsic.quantized.dynamic"]], "torch.ao.nn.intrinsic.quantized.dynamic.modules": [[1947, "module-torch.ao.nn.intrinsic.quantized.dynamic.modules"]], "torch.ao.nn.intrinsic.quantized.modules": [[1947, "module-torch.ao.nn.intrinsic.quantized.modules"]], "torch.ao.nn.qat": [[1947, "module-torch.ao.nn.qat"]], "torch.ao.nn.qat.dynamic": [[1947, "module-torch.ao.nn.qat.dynamic"]], "torch.ao.nn.qat.dynamic.modules": [[1947, "module-torch.ao.nn.qat.dynamic.modules"]], "torch.ao.nn.qat.modules": [[1947, "module-torch.ao.nn.qat.modules"]], "torch.ao.nn.quantized.dynamic": [[1947, "module-torch.ao.nn.quantized.dynamic"]], "torch.ao.nn.quantized.dynamic.modules": [[1947, "module-torch.ao.nn.quantized.dynamic.modules"]], "torch.ao.nn.quantized.functional": [[1947, "module-torch.ao.nn.quantized.functional"]], "torch.ao.nn.quantized.modules": [[1947, "module-torch.ao.nn.quantized.modules"]], "torch.ao.quantization.pt2e": [[1947, "module-torch.ao.quantization.pt2e"]], "torch.ao.quantization.pt2e.representation": [[1947, "module-torch.ao.quantization.pt2e.representation"]], "torch.ao.quantization.quantizer": [[1947, "module-torch.ao.quantization.quantizer"]], "torch.nn.intrinsic": [[1947, "module-torch.nn.intrinsic"]], "torch.nn.intrinsic.modules": [[1947, "module-torch.nn.intrinsic.modules"]], "torch.nn.intrinsic.qat": [[1947, "module-torch.nn.intrinsic.qat"]], "torch.nn.intrinsic.qat.modules": [[1947, "module-torch.nn.intrinsic.qat.modules"]], "torch.nn.intrinsic.quantized": [[1947, "module-torch.nn.intrinsic.quantized"]], "torch.nn.intrinsic.quantized.dynamic": [[1947, "module-torch.nn.intrinsic.quantized.dynamic"]], "torch.nn.intrinsic.quantized.dynamic.modules": [[1947, "module-torch.nn.intrinsic.quantized.dynamic.modules"]], "torch.nn.intrinsic.quantized.modules": [[1947, "module-torch.nn.intrinsic.quantized.modules"]], "torch.nn.qat": [[1947, "module-torch.nn.qat"]], "torch.nn.qat.dynamic": [[1947, "module-torch.nn.qat.dynamic"]], "torch.nn.qat.dynamic.modules": [[1947, "module-torch.nn.qat.dynamic.modules"]], "torch.nn.qat.modules": [[1947, "module-torch.nn.qat.modules"]], "torch.nn.quantizable": [[1947, "module-torch.nn.quantizable"]], "torch.nn.quantizable.modules": [[1947, "module-torch.nn.quantizable.modules"]], "torch.nn.quantized": [[1947, "module-torch.nn.quantized"]], "torch.nn.quantized.dynamic": [[1947, "module-torch.nn.quantized.dynamic"]], "torch.nn.quantized.dynamic.modules": [[1947, "module-torch.nn.quantized.dynamic.modules"]], "torch.nn.quantized.modules": [[1947, "module-torch.nn.quantized.modules"]], "torch.quantization": [[1947, "module-torch.quantization"]], "torch.quantization.fx": [[1947, "module-torch.quantization.fx"]], "fork_rng() (in module torch.random)": [[1948, "torch.random.fork_rng"]], "get_rng_state() (in module torch.random)": [[1948, "torch.random.get_rng_state"]], "initial_seed() (in module torch.random)": [[1948, "torch.random.initial_seed"]], "manual_seed() (in module torch.random)": [[1948, "torch.random.manual_seed"]], "seed() (in module torch.random)": [[1948, "torch.random.seed"]], "set_rng_state() (in module torch.random)": [[1948, "torch.random.set_rng_state"]], "torch.random": [[1948, "module-torch.random"]], "backendtype (class in torch.distributed.rpc)": [[1949, "torch.distributed.rpc.BackendType"]], "rref (class in torch.distributed.rpc)": [[1949, "torch.distributed.rpc.RRef"]], "remotemodule (class in torch.distributed.nn.api.remote_module)": [[1949, "torch.distributed.nn.api.remote_module.RemoteModule"]], "rpcbackendoptions (class in torch.distributed.rpc)": [[1949, "torch.distributed.rpc.RpcBackendOptions"]], "tensorpiperpcbackendoptions (class in torch.distributed.rpc)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions"]], "workerinfo (class in torch.distributed.rpc)": [[1949, "torch.distributed.rpc.WorkerInfo"]], "async_execution() (in module torch.distributed.rpc.functions)": [[1949, "torch.distributed.rpc.functions.async_execution"]], "backward() (in module torch.distributed.autograd)": [[1949, "torch.distributed.autograd.backward"]], "context (class in torch.distributed.autograd)": [[1949, "torch.distributed.autograd.context"]], "device_maps (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.device_maps"]], "devices (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.devices"]], "get_gradients() (in module torch.distributed.autograd)": [[1949, "torch.distributed.autograd.get_gradients"]], "get_module_rref() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1949, "torch.distributed.nn.api.remote_module.RemoteModule.get_module_rref"]], "get_worker_info() (in module torch.distributed.rpc)": [[1949, "torch.distributed.rpc.get_worker_info"]], "id (torch.distributed.rpc.workerinfo property)": [[1949, "torch.distributed.rpc.WorkerInfo.id"]], "init_method (torch.distributed.rpc.rpcbackendoptions property)": [[1949, "torch.distributed.rpc.RpcBackendOptions.init_method"]], "init_method (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.init_method"]], "init_rpc() (in module torch.distributed.rpc)": [[1949, "torch.distributed.rpc.init_rpc"]], "name (torch.distributed.rpc.workerinfo property)": [[1949, "torch.distributed.rpc.WorkerInfo.name"]], "num_worker_threads (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.num_worker_threads"]], "remote() (in module torch.distributed.rpc)": [[1949, "torch.distributed.rpc.remote"]], "remote_parameters() (torch.distributed.nn.api.remote_module.remotemodule method)": [[1949, "torch.distributed.nn.api.remote_module.RemoteModule.remote_parameters"]], "rpc_async() (in module torch.distributed.rpc)": [[1949, "torch.distributed.rpc.rpc_async"]], "rpc_sync() (in module torch.distributed.rpc)": [[1949, "torch.distributed.rpc.rpc_sync"]], "rpc_timeout (torch.distributed.rpc.rpcbackendoptions property)": [[1949, "torch.distributed.rpc.RpcBackendOptions.rpc_timeout"]], "rpc_timeout (torch.distributed.rpc.tensorpiperpcbackendoptions property)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.rpc_timeout"]], "set_device_map() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_device_map"]], "set_devices() (torch.distributed.rpc.tensorpiperpcbackendoptions method)": [[1949, "torch.distributed.rpc.TensorPipeRpcBackendOptions.set_devices"]], "shutdown() (in module torch.distributed.rpc)": [[1949, "torch.distributed.rpc.shutdown"]], "torch.distributed.autograd": [[1949, "module-torch.distributed.autograd"]], "torch.distributed.rpc": [[1949, "module-torch.distributed.rpc"]], "torch.signal": [[1952, "module-torch.signal"]], "torch.signal.windows": [[1952, "module-torch.signal.windows"]], "torch.sparse": [[1953, "module-torch.sparse"]], "airy_ai() (in module torch.special)": [[1954, "torch.special.airy_ai"]], "bessel_j0() (in module torch.special)": [[1954, "torch.special.bessel_j0"]], "bessel_j1() (in module torch.special)": [[1954, "torch.special.bessel_j1"]], "digamma() (in module torch.special)": [[1954, "torch.special.digamma"]], "entr() (in module torch.special)": [[1954, "torch.special.entr"]], "erf() (in module torch.special)": [[1954, "torch.special.erf"]], "erfc() (in module torch.special)": [[1954, "torch.special.erfc"]], "erfcx() (in module torch.special)": [[1954, "torch.special.erfcx"]], "erfinv() (in module torch.special)": [[1954, "torch.special.erfinv"]], "exp2() (in module torch.special)": [[1954, "torch.special.exp2"]], "expit() (in module torch.special)": [[1954, "torch.special.expit"]], "expm1() (in module torch.special)": [[1954, "torch.special.expm1"]], "gammainc() (in module torch.special)": [[1954, "torch.special.gammainc"]], "gammaincc() (in module torch.special)": [[1954, "torch.special.gammaincc"]], "gammaln() (in module torch.special)": [[1954, "torch.special.gammaln"]], "i0() (in module torch.special)": [[1954, "torch.special.i0"]], "i0e() (in module torch.special)": [[1954, "torch.special.i0e"]], "i1() (in module torch.special)": [[1954, "torch.special.i1"]], "i1e() (in module torch.special)": [[1954, "torch.special.i1e"]], "log1p() (in module torch.special)": [[1954, "torch.special.log1p"]], "log_ndtr() (in module torch.special)": [[1954, "torch.special.log_ndtr"]], "log_softmax() (in module torch.special)": [[1954, "torch.special.log_softmax"]], "logit() (in module torch.special)": [[1954, "torch.special.logit"]], "logsumexp() (in module torch.special)": [[1954, "torch.special.logsumexp"]], "multigammaln() (in module torch.special)": [[1954, "torch.special.multigammaln"]], "ndtr() (in module torch.special)": [[1954, "torch.special.ndtr"]], "ndtri() (in module torch.special)": [[1954, "torch.special.ndtri"]], "polygamma() (in module torch.special)": [[1954, "torch.special.polygamma"]], "psi() (in module torch.special)": [[1954, "torch.special.psi"]], "round() (in module torch.special)": [[1954, "torch.special.round"]], "scaled_modified_bessel_k0() (in module torch.special)": [[1954, "torch.special.scaled_modified_bessel_k0"]], "scaled_modified_bessel_k1() (in module torch.special)": [[1954, "torch.special.scaled_modified_bessel_k1"]], "sinc() (in module torch.special)": [[1954, "torch.special.sinc"]], "softmax() (in module torch.special)": [[1954, "torch.special.softmax"]], "spherical_bessel_j0() (in module torch.special)": [[1954, "torch.special.spherical_bessel_j0"]], "torch.special": [[1954, "module-torch.special"]], "xlog1py() (in module torch.special)": [[1954, "torch.special.xlog1py"]], "xlogy() (in module torch.special)": [[1954, "torch.special.xlogy"]], "zeta() (in module torch.special)": [[1954, "torch.special.zeta"]], "bfloat16storage (class in torch)": [[1955, "torch.BFloat16Storage"]], "boolstorage (class in torch)": [[1955, "torch.BoolStorage"]], "bytestorage (class in torch)": [[1955, "torch.ByteStorage"]], "charstorage (class in torch)": [[1955, "torch.CharStorage"]], "complexdoublestorage (class in torch)": [[1955, "torch.ComplexDoubleStorage"]], "complexfloatstorage (class in torch)": [[1955, "torch.ComplexFloatStorage"]], "doublestorage (class in torch)": [[1955, "torch.DoubleStorage"]], "floatstorage (class in torch)": [[1955, "torch.FloatStorage"]], "halfstorage (class in torch)": [[1955, "torch.HalfStorage"]], "intstorage (class in torch)": [[1955, "torch.IntStorage"]], "longstorage (class in torch)": [[1955, "torch.LongStorage"]], "qint32storage (class in torch)": [[1955, "torch.QInt32Storage"]], "qint8storage (class in torch)": [[1955, "torch.QInt8Storage"]], "quint2x4storage (class in torch)": [[1955, "torch.QUInt2x4Storage"]], "quint4x2storage (class in torch)": [[1955, "torch.QUInt4x2Storage"]], "quint8storage (class in torch)": [[1955, "torch.QUInt8Storage"]], "shortstorage (class in torch)": [[1955, "torch.ShortStorage"]], "typedstorage (class in torch)": [[1955, "torch.TypedStorage"]], "untypedstorage (class in torch)": [[1955, "torch.UntypedStorage"]], "bfloat16() (torch.typedstorage method)": [[1955, "torch.TypedStorage.bfloat16"]], "bfloat16() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.bfloat16"]], "bool() (torch.typedstorage method)": [[1955, "torch.TypedStorage.bool"]], "bool() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.bool"]], "byte() (torch.typedstorage method)": [[1955, "torch.TypedStorage.byte"]], "byte() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.byte"]], "byteswap() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.byteswap"]], "char() (torch.typedstorage method)": [[1955, "torch.TypedStorage.char"]], "char() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.char"]], "clone() (torch.typedstorage method)": [[1955, "torch.TypedStorage.clone"]], "clone() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.clone"]], "complex_double() (torch.typedstorage method)": [[1955, "torch.TypedStorage.complex_double"]], "complex_double() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.complex_double"]], "complex_float() (torch.typedstorage method)": [[1955, "torch.TypedStorage.complex_float"]], "complex_float() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.complex_float"]], "copy_() (torch.typedstorage method)": [[1955, "torch.TypedStorage.copy_"]], "copy_() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.copy_"]], "cpu() (torch.typedstorage method)": [[1955, "torch.TypedStorage.cpu"]], "cpu() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.cpu"]], "cuda() (torch.typedstorage method)": [[1955, "torch.TypedStorage.cuda"]], "cuda() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.cuda"]], "data_ptr() (torch.typedstorage method)": [[1955, "torch.TypedStorage.data_ptr"]], "data_ptr() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.data_ptr"]], "device (torch.typedstorage property)": [[1955, "torch.TypedStorage.device"]], "device (torch.untypedstorage attribute)": [[1955, "torch.UntypedStorage.device"]], "double() (torch.typedstorage method)": [[1955, "torch.TypedStorage.double"]], "double() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.double"]], "dtype (torch.bfloat16storage attribute)": [[1955, "torch.BFloat16Storage.dtype"]], "dtype (torch.boolstorage attribute)": [[1955, "torch.BoolStorage.dtype"]], "dtype (torch.bytestorage attribute)": [[1955, "torch.ByteStorage.dtype"]], "dtype (torch.charstorage attribute)": [[1955, "torch.CharStorage.dtype"]], "dtype (torch.complexdoublestorage attribute)": [[1955, "torch.ComplexDoubleStorage.dtype"]], "dtype (torch.complexfloatstorage attribute)": [[1955, "torch.ComplexFloatStorage.dtype"]], "dtype (torch.doublestorage attribute)": [[1955, "torch.DoubleStorage.dtype"]], "dtype (torch.floatstorage attribute)": [[1955, "torch.FloatStorage.dtype"]], "dtype (torch.halfstorage attribute)": [[1955, "torch.HalfStorage.dtype"]], "dtype (torch.intstorage attribute)": [[1955, "torch.IntStorage.dtype"]], "dtype (torch.longstorage attribute)": [[1955, "torch.LongStorage.dtype"]], "dtype (torch.qint32storage attribute)": [[1955, "torch.QInt32Storage.dtype"]], "dtype (torch.qint8storage attribute)": [[1955, "torch.QInt8Storage.dtype"]], "dtype (torch.quint2x4storage attribute)": [[1955, "torch.QUInt2x4Storage.dtype"]], "dtype (torch.quint4x2storage attribute)": [[1955, "torch.QUInt4x2Storage.dtype"]], "dtype (torch.quint8storage attribute)": [[1955, "torch.QUInt8Storage.dtype"]], "dtype (torch.shortstorage attribute)": [[1955, "torch.ShortStorage.dtype"]], "dtype (torch.typedstorage attribute)": [[1955, "torch.TypedStorage.dtype"]], "element_size() (torch.typedstorage method)": [[1955, "torch.TypedStorage.element_size"]], "element_size() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.element_size"]], "fill_() (torch.typedstorage method)": [[1955, "torch.TypedStorage.fill_"]], "fill_() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.fill_"]], "float() (torch.typedstorage method)": [[1955, "torch.TypedStorage.float"]], "float() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.float"]], "from_buffer() (torch.typedstorage class method)": [[1955, "torch.TypedStorage.from_buffer"]], "from_buffer() (torch.untypedstorage static method)": [[1955, "torch.UntypedStorage.from_buffer"]], "from_file() (torch.typedstorage class method)": [[1955, "torch.TypedStorage.from_file"]], "from_file() (torch.untypedstorage static method)": [[1955, "torch.UntypedStorage.from_file"]], "get_device() (torch.typedstorage method)": [[1955, "torch.TypedStorage.get_device"]], "get_device() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.get_device"]], "half() (torch.typedstorage method)": [[1955, "torch.TypedStorage.half"]], "half() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.half"]], "hpu() (torch.typedstorage method)": [[1955, "torch.TypedStorage.hpu"]], "hpu() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.hpu"]], "int() (torch.typedstorage method)": [[1955, "torch.TypedStorage.int"]], "int() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.int"]], "is_cuda (torch.typedstorage property)": [[1955, "torch.TypedStorage.is_cuda"]], "is_cuda (torch.untypedstorage property)": [[1955, "torch.UntypedStorage.is_cuda"]], "is_hpu (torch.typedstorage property)": [[1955, "torch.TypedStorage.is_hpu"]], "is_hpu (torch.untypedstorage property)": [[1955, "torch.UntypedStorage.is_hpu"]], "is_pinned() (torch.typedstorage method)": [[1955, "torch.TypedStorage.is_pinned"]], "is_pinned() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.is_pinned"]], "is_shared() (torch.typedstorage method)": [[1955, "torch.TypedStorage.is_shared"]], "is_shared() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.is_shared"]], "is_sparse (torch.typedstorage attribute)": [[1955, "torch.TypedStorage.is_sparse"]], "is_sparse (torch.untypedstorage attribute)": [[1955, "torch.UntypedStorage.is_sparse"]], "is_sparse_csr (torch.untypedstorage attribute)": [[1955, "torch.UntypedStorage.is_sparse_csr"]], "long() (torch.typedstorage method)": [[1955, "torch.TypedStorage.long"]], "long() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.long"]], "mps() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.mps"]], "nbytes() (torch.typedstorage method)": [[1955, "torch.TypedStorage.nbytes"]], "nbytes() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.nbytes"]], "new() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.new"]], "pickle_storage_type() (torch.typedstorage method)": [[1955, "torch.TypedStorage.pickle_storage_type"]], "pin_memory() (torch.typedstorage method)": [[1955, "torch.TypedStorage.pin_memory"]], "pin_memory() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.pin_memory"]], "resize_() (torch.typedstorage method)": [[1955, "torch.TypedStorage.resize_"]], "resize_() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.resize_"]], "share_memory_() (torch.typedstorage method)": [[1955, "torch.TypedStorage.share_memory_"]], "share_memory_() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.share_memory_"]], "short() (torch.typedstorage method)": [[1955, "torch.TypedStorage.short"]], "short() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.short"]], "size() (torch.typedstorage method)": [[1955, "torch.TypedStorage.size"]], "size() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.size"]], "tolist() (torch.typedstorage method)": [[1955, "torch.TypedStorage.tolist"]], "tolist() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.tolist"]], "type() (torch.typedstorage method)": [[1955, "torch.TypedStorage.type"]], "type() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.type"]], "untyped() (torch.typedstorage method)": [[1955, "torch.TypedStorage.untyped"]], "untyped() (torch.untypedstorage method)": [[1955, "torch.UntypedStorage.untyped"]], "device (class in torch)": [[1956, "torch.device"]], "dtype (class in torch)": [[1956, "torch.dtype"]], "layout (class in torch)": [[1956, "torch.layout"]], "memory_format (class in torch)": [[1956, "torch.memory_format"]], "summarywriter (class in torch.utils.tensorboard.writer)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter"]], "__init__() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.__init__"]], "add_audio() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_audio"]], "add_custom_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_custom_scalars"]], "add_embedding() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_embedding"]], "add_figure() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_figure"]], "add_graph() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_graph"]], "add_histogram() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_histogram"]], "add_hparams() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_hparams"]], "add_image() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_image"]], "add_images() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_images"]], "add_mesh() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_mesh"]], "add_pr_curve() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_pr_curve"]], "add_scalar() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_scalar"]], "add_scalars() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_scalars"]], "add_text() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_text"]], "add_video() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.add_video"]], "close() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.close"]], "flush() (torch.utils.tensorboard.writer.summarywriter method)": [[1958, "torch.utils.tensorboard.writer.SummaryWriter.flush"]], "torch.utils.tensorboard": [[1958, "module-torch.utils.tensorboard"]], "h (torch.tensor attribute)": [[1959, "torch.Tensor.H"]], "t (torch.tensor attribute)": [[1959, "torch.Tensor.T"]], "tensor (class in torch)": [[1959, "torch.Tensor"]], "mh (torch.tensor attribute)": [[1959, "torch.Tensor.mH"]], "mt (torch.tensor attribute)": [[1959, "torch.Tensor.mT"]], "assert_allclose() (in module torch.testing)": [[1960, "torch.testing.assert_allclose"]], "assert_close() (in module torch.testing)": [[1960, "torch.testing.assert_close"]], "make_tensor() (in module torch.testing)": [[1960, "torch.testing.make_tensor"]], "torch.testing": [[1960, "module-torch.testing"]], "symbool (class in torch)": [[1961, "torch.SymBool"]], "symfloat (class in torch)": [[1961, "torch.SymFloat"]], "symint (class in torch)": [[1961, "torch.SymInt"]], "tag (class in torch)": [[1961, "torch.Tag"]], "default_generator (torch.torch attribute)": [[1961, "torch.torch.default_generator"]], "name (torch.tag property)": [[1961, "torch.Tag.name"]], "torch": [[1961, "module-torch"]], "torch.contrib": [[1961, "module-torch.contrib"]], "torch.utils.backcompat": [[1961, "module-torch.utils.backcompat"]], "torch.utils.hipify": [[1961, "module-torch.utils.hipify"]], "torch.utils.model_dump": [[1961, "module-torch.utils.model_dump"]], "torch.utils.viz": [[1961, "module-torch.utils.viz"]], "logger (class in torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.Logger"]], "outputlogger (class in torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.OutputLogger"]], "shadow (class in torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.Shadow"]], "shadowlogger (class in torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.ShadowLogger"]], "add() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.add"]], "add_relu() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.add_relu"]], "add_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.add_scalar"]], "cat() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.cat"]], "compare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.compare_model_outputs"]], "compare_model_stub() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.compare_model_stub"]], "compare_weights() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.compare_weights"]], "forward() (torch.ao.ns._numeric_suite.logger method)": [[1962, "torch.ao.ns._numeric_suite.Logger.forward"]], "forward() (torch.ao.ns._numeric_suite.outputlogger method)": [[1962, "torch.ao.ns._numeric_suite.OutputLogger.forward"]], "forward() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.forward"]], "forward() (torch.ao.ns._numeric_suite.shadowlogger method)": [[1962, "torch.ao.ns._numeric_suite.ShadowLogger.forward"]], "get_logger_dict() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.get_logger_dict"]], "get_matching_activations() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.get_matching_activations"]], "mul() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.mul"]], "mul_scalar() (torch.ao.ns._numeric_suite.shadow method)": [[1962, "torch.ao.ns._numeric_suite.Shadow.mul_scalar"]], "prepare_model_outputs() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.prepare_model_outputs"]], "prepare_model_with_stubs() (in module torch.ao.ns._numeric_suite)": [[1962, "torch.ao.ns._numeric_suite.prepare_model_with_stubs"]], "torch.ao.ns._numeric_suite": [[1962, "module-torch.ao.ns._numeric_suite"]], "nstracer (class in torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.NSTracer"]], "outputcomparisonlogger (class in torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger"]], "outputlogger (class in torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.OutputLogger"]], "add_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.add_loggers"]], "add_shadow_loggers() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.add_shadow_loggers"]], "compute_cosine_similarity() (in module torch.ao.ns.fx.utils)": [[1963, "torch.ao.ns.fx.utils.compute_cosine_similarity"]], "compute_normalized_l2_error() (in module torch.ao.ns.fx.utils)": [[1963, "torch.ao.ns.fx.utils.compute_normalized_l2_error"]], "compute_sqnr() (in module torch.ao.ns.fx.utils)": [[1963, "torch.ao.ns.fx.utils.compute_sqnr"]], "convert_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.convert_n_shadows_model"]], "extend_logger_results_with_comparison() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.extend_logger_results_with_comparison"]], "extract_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.extract_logger_info"]], "extract_results_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.extract_results_n_shadows_model"]], "extract_shadow_logger_info() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.extract_shadow_logger_info"]], "extract_weights() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.extract_weights"]], "forward() (torch.ao.ns._numeric_suite_fx.outputcomparisonlogger method)": [[1963, "torch.ao.ns._numeric_suite_fx.OutputComparisonLogger.forward"]], "forward() (torch.ao.ns._numeric_suite_fx.outputlogger method)": [[1963, "torch.ao.ns._numeric_suite_fx.OutputLogger.forward"]], "is_leaf_module() (torch.ao.ns._numeric_suite_fx.nstracer method)": [[1963, "torch.ao.ns._numeric_suite_fx.NSTracer.is_leaf_module"]], "loggers_set_enabled() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.loggers_set_enabled"]], "loggers_set_save_activations() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.loggers_set_save_activations"]], "prepare_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.prepare_n_shadows_model"]], "print_comparisons_n_shadows_model() (in module torch.ao.ns._numeric_suite_fx)": [[1963, "torch.ao.ns._numeric_suite_fx.print_comparisons_n_shadows_model"]], "torch.ao.ns._numeric_suite_fx": [[1963, "module-torch.ao.ns._numeric_suite_fx"]], "get_ignored_functions() (in module torch.overrides)": [[1964, "torch.overrides.get_ignored_functions"]], "get_overridable_functions() (in module torch.overrides)": [[1964, "torch.overrides.get_overridable_functions"]], "get_testing_overrides() (in module torch.overrides)": [[1964, "torch.overrides.get_testing_overrides"]], "handle_torch_function() (in module torch.overrides)": [[1964, "torch.overrides.handle_torch_function"]], "has_torch_function() (in module torch.overrides)": [[1964, "torch.overrides.has_torch_function"]], "is_tensor_like() (in module torch.overrides)": [[1964, "torch.overrides.is_tensor_like"]], "is_tensor_method_or_property() (in module torch.overrides)": [[1964, "torch.overrides.is_tensor_method_or_property"]], "resolve_name() (in module torch.overrides)": [[1964, "torch.overrides.resolve_name"]], "wrap_torch_function() (in module torch.overrides)": [[1964, "torch.overrides.wrap_torch_function"]], "torch.finfo (class in torch)": [[1965, "torch.torch.finfo"]], "torch.iinfo (class in torch)": [[1965, "torch.torch.iinfo"]], "torch.utils": [[1966, "module-torch.utils"]]}})